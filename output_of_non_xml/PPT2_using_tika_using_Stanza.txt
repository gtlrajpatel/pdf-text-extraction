

========================== Sentence 1 ===========================

 Power 

Tokens are: 
>> ['Power'] 

 UPOS tags are: 
>> [('Power', 'NOUN')] 

 XPOS tags are: 
>> [('Power', 'NN')] 

 Lemmas are: 
>> [('Power', 'power')] 

 Dependency tags are: 
>> [(('Power', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 Point Presentation  Unit-5  Deadlock firoz.sherasiya@darshan.ac.in 9879879861 Computer Engineering Department Prof. Firoz A Sherasiya Operating System (OS) GTU # 3140702   Darshan Institute of Engineering & Technology, Rajkot     Looping Outline Basic concepts of Deadlock Deadlock characteristics Deadlock ignorance Ostrich algorithm Deadlock detection and recovery Deadlock avoidance Banker’s algorithm Deadlock prevention     Basic concepts of Deadlock Section - 1      What is Deadlock? 

Tokens are: 
>> ['Point', 'Presentation', 'Unit-5', 'Deadlock', 'firoz.sherasiya@darshan.ac.in', '9879879861', 'Computer', 'Engineering', 'Department', 'Prof.', 'Firoz', 'A', 'Sherasiya', 'Operating', 'System', '(', 'OS', ')', 'GTU', '#', '3140702', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', ',', 'Rajkot', '\uf050', 'Looping', 'Outline', 'Basic', 'concepts', 'of', 'Deadlock', 'Deadlock', 'characteristics', 'Deadlock', 'ignorance', 'Ostrich', 'algorithm', 'Deadlock', 'detection', 'and', 'recovery', 'Deadlock', 'avoidance', 'Banker', '’s', 'algorithm', 'Deadlock', 'prevention', 'Basic', 'concepts', 'of', 'Deadlock', 'Section', '-', '1', 'What', 'is', 'Deadlock', '?'] 

 UPOS tags are: 
>> [('Point', 'NOUN'), ('Presentation', 'NOUN'), ('Unit-5', 'PROPN'), ('Deadlock', 'PROPN'), ('firoz.sherasiya@darshan.ac.in', 'PROPN'), ('9879879861', 'NUM'), ('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'DET'), ('Sherasiya', 'PROPN'), ('Operating', 'PROPN'), ('System', 'PROPN'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('GTU', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('\uf050', 'PROPN'), ('Looping', 'PROPN'), ('Outline', 'PROPN'), ('Basic', 'ADJ'), ('concepts', 'NOUN'), ('of', 'ADP'), ('Deadlock', 'PROPN'), ('Deadlock', 'PROPN'), ('characteristics', 'NOUN'), ('Deadlock', 'PROPN'), ('ignorance', 'NOUN'), ('Ostrich', 'PROPN'), ('algorithm', 'NOUN'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('and', 'CCONJ'), ('recovery', 'NOUN'), ('Deadlock', 'PROPN'), ('avoidance', 'NOUN'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('Deadlock', 'PROPN'), ('prevention', 'NOUN'), ('Basic', 'ADJ'), ('concepts', 'NOUN'), ('of', 'ADP'), ('Deadlock', 'PROPN'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), ('What', 'PRON'), ('is', 'AUX'), ('Deadlock', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Point', 'NN'), ('Presentation', 'NN'), ('Unit-5', 'NNP'), ('Deadlock', 'NNP'), ('firoz.sherasiya@darshan.ac.in', 'NNP'), ('9879879861', 'CD'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'DT'), ('Sherasiya', 'NNP'), ('Operating', 'NNP'), ('System', 'NNP'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('GTU', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('\uf050', 'NNP'), ('Looping', 'NNP'), ('Outline', 'NNP'), ('Basic', 'JJ'), ('concepts', 'NNS'), ('of', 'IN'), ('Deadlock', 'NNP'), ('Deadlock', 'NNP'), ('characteristics', 'NNS'), ('Deadlock', 'NNP'), ('ignorance', 'NN'), ('Ostrich', 'NNP'), ('algorithm', 'NN'), ('Deadlock', 'NNP'), ('detection', 'NN'), ('and', 'CC'), ('recovery', 'NN'), ('Deadlock', 'NNP'), ('avoidance', 'NN'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('Deadlock', 'NNP'), ('prevention', 'NN'), ('Basic', 'JJ'), ('concepts', 'NNS'), ('of', 'IN'), ('Deadlock', 'NNP'), ('Section', 'NN'), ('-', ','), ('1', 'CD'), ('What', 'WP'), ('is', 'VBZ'), ('Deadlock', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Point', 'point'), ('Presentation', 'presentation'), ('Unit-5', 'Unit-5'), ('Deadlock', 'Deadlock'), ('firoz.sherasiya@darshan.ac.in', 'firoz.sherasiya@darshan.ac.in'), ('9879879861', '9879879861'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'a'), ('Sherasiya', 'Sherasiya'), ('Operating', 'operate'), ('System', 'System'), ('(', '('), ('OS', 'os'), (')', ')'), ('GTU', 'GTU'), ('#', '#'), ('3140702', '3140702'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('\uf050', '\uf050'), ('Looping', 'Looping'), ('Outline', 'Outline'), ('Basic', 'basic'), ('concepts', 'concept'), ('of', 'of'), ('Deadlock', 'Deadlock'), ('Deadlock', 'Deadlock'), ('characteristics', 'characteristic'), ('Deadlock', 'Deadlock'), ('ignorance', 'ignorance'), ('Ostrich', 'Ostrich'), ('algorithm', 'algorithm'), ('Deadlock', 'Deadlock'), ('detection', 'detection'), ('and', 'and'), ('recovery', 'recovery'), ('Deadlock', 'Deadlock'), ('avoidance', 'avoidance'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('Deadlock', 'Deadlock'), ('prevention', 'prevention'), ('Basic', 'basic'), ('concepts', 'concept'), ('of', 'of'), ('Deadlock', 'Deadlock'), ('Section', 'section'), ('-', '-'), ('1', '1'), ('What', 'what'), ('is', 'be'), ('Deadlock', 'Deadlock'), ('?', '?')] 

 Dependency tags are: 
>> [(('Point', 'Presentation'), 'compound'), (('Presentation', 'root'), 'root'), (('Unit-5', 'Deadlock'), 'compound'), (('Deadlock', 'Presentation'), 'appos'), (('firoz.sherasiya@darshan.ac.in', 'Presentation'), 'list'), (('9879879861', 'Department'), 'nummod'), (('Computer', 'Department'), 'compound'), (('Engineering', 'Department'), 'compound'), (('Department', 'Presentation'), 'list'), (('Prof.', 'Presentation'), 'appos'), (('Firoz', 'Prof.'), 'flat'), (('A', 'System'), 'det'), (('Sherasiya', 'System'), 'compound'), (('Operating', 'System'), 'compound'), (('System', 'Prof.'), 'appos'), (('(', 'OS'), 'punct'), (('OS', 'System'), 'appos'), ((')', 'OS'), 'punct'), (('GTU', 'Institute'), 'compound'), (('#', 'Institute'), 'compound'), (('3140702', '#'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Presentation'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), ((',', 'Outline'), 'punct'), (('Rajkot', 'Outline'), 'compound'), (('\uf050', 'Outline'), 'compound'), (('Looping', 'Outline'), 'compound'), (('Outline', 'Institute'), 'appos'), (('Basic', 'concepts'), 'amod'), (('concepts', 'Outline'), 'appos'), (('of', 'characteristics'), 'case'), (('Deadlock', 'Deadlock'), 'compound'), (('Deadlock', 'characteristics'), 'compound'), (('characteristics', 'concepts'), 'nmod'), (('Deadlock', 'algorithm'), 'compound'), (('ignorance', 'algorithm'), 'compound'), (('Ostrich', 'algorithm'), 'compound'), (('algorithm', 'characteristics'), 'conj'), (('Deadlock', 'detection'), 'compound'), (('detection', 'algorithm'), 'compound'), (('and', 'avoidance'), 'cc'), (('recovery', 'Deadlock'), 'compound'), (('Deadlock', 'avoidance'), 'compound'), (('avoidance', 'detection'), 'conj'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'avoidance'), 'compound'), (('Deadlock', 'prevention'), 'compound'), (('prevention', 'concepts'), 'compound'), (('Basic', 'concepts'), 'amod'), (('concepts', 'algorithm'), 'appos'), (('of', 'Section'), 'case'), (('Deadlock', 'Section'), 'compound'), (('Section', 'concepts'), 'nmod'), (('-', 'concepts'), 'punct'), (('1', 'What'), 'nsubj'), (('What', 'concepts'), 'conj'), (('is', 'Deadlock'), 'cop'), (('Deadlock', 'What'), 'nsubj'), (('?', 'Presentation'), 'punct')]

 Named Entities are: 
>> [('9879879861 Computer Engineering Department', 'ORG'), ('Firoz A Sherasiya Operating System', 'ORG'), ('3140702', 'CARDINAL'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('Rajkot', 'GPE'), ('Deadlock Section - 1', 'LAW')]

========================== Sentence 3 ===========================

 A set of processes is deadlocked if each process in the set is waiting for an event that only another process in the set can cause. 

Tokens are: 
>> ['A', 'set', 'of', 'processes', 'is', 'deadlocked', 'if', 'each', 'process', 'in', 'the', 'set', 'is', 'waiting', 'for', 'an', 'event', 'that', 'only', 'another', 'process', 'in', 'the', 'set', 'can', 'cause', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('processes', 'NOUN'), ('is', 'AUX'), ('deadlocked', 'VERB'), ('if', 'SCONJ'), ('each', 'DET'), ('process', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('set', 'NOUN'), ('is', 'AUX'), ('waiting', 'VERB'), ('for', 'ADP'), ('an', 'DET'), ('event', 'NOUN'), ('that', 'PRON'), ('only', 'ADV'), ('another', 'DET'), ('process', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('set', 'NOUN'), ('can', 'AUX'), ('cause', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('set', 'NN'), ('of', 'IN'), ('processes', 'NNS'), ('is', 'VBZ'), ('deadlocked', 'VBN'), ('if', 'IN'), ('each', 'DT'), ('process', 'NN'), ('in', 'IN'), ('the', 'DT'), ('set', 'NN'), ('is', 'VBZ'), ('waiting', 'VBG'), ('for', 'IN'), ('an', 'DT'), ('event', 'NN'), ('that', 'WDT'), ('only', 'RB'), ('another', 'DT'), ('process', 'NN'), ('in', 'IN'), ('the', 'DT'), ('set', 'NN'), ('can', 'MD'), ('cause', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('set', 'set'), ('of', 'of'), ('processes', 'process'), ('is', 'be'), ('deadlocked', 'deadlock'), ('if', 'if'), ('each', 'each'), ('process', 'process'), ('in', 'in'), ('the', 'the'), ('set', 'set'), ('is', 'be'), ('waiting', 'wait'), ('for', 'for'), ('an', 'a'), ('event', 'event'), ('that', 'that'), ('only', 'only'), ('another', 'another'), ('process', 'process'), ('in', 'in'), ('the', 'the'), ('set', 'set'), ('can', 'can'), ('cause', 'cause'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'set'), 'det'), (('set', 'deadlocked'), 'nsubj:pass'), (('of', 'processes'), 'case'), (('processes', 'set'), 'nmod'), (('is', 'deadlocked'), 'aux:pass'), (('deadlocked', 'root'), 'root'), (('if', 'waiting'), 'mark'), (('each', 'process'), 'det'), (('process', 'waiting'), 'nsubj'), (('in', 'set'), 'case'), (('the', 'set'), 'det'), (('set', 'process'), 'nmod'), (('is', 'waiting'), 'aux'), (('waiting', 'deadlocked'), 'advcl'), (('for', 'event'), 'case'), (('an', 'event'), 'det'), (('event', 'waiting'), 'obl'), (('that', 'cause'), 'obj'), (('only', 'process'), 'advmod'), (('another', 'process'), 'det'), (('process', 'cause'), 'nsubj'), (('in', 'set'), 'case'), (('the', 'set'), 'det'), (('set', 'process'), 'nmod'), (('can', 'cause'), 'aux'), (('cause', 'event'), 'acl:relcl'), (('.', 'deadlocked'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 4 ===========================

 Deadlocks are a set of blocked processes each holding a resource and waiting to acquire a resource held by another process. 

Tokens are: 
>> ['Deadlocks', 'are', 'a', 'set', 'of', 'blocked', 'processes', 'each', 'holding', 'a', 'resource', 'and', 'waiting', 'to', 'acquire', 'a', 'resource', 'held', 'by', 'another', 'process', '.'] 

 UPOS tags are: 
>> [('Deadlocks', 'NOUN'), ('are', 'AUX'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('blocked', 'VERB'), ('processes', 'NOUN'), ('each', 'DET'), ('holding', 'VERB'), ('a', 'DET'), ('resource', 'NOUN'), ('and', 'CCONJ'), ('waiting', 'VERB'), ('to', 'PART'), ('acquire', 'VERB'), ('a', 'DET'), ('resource', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('another', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Deadlocks', 'NNS'), ('are', 'VBP'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('blocked', 'VBN'), ('processes', 'NNS'), ('each', 'DT'), ('holding', 'VBG'), ('a', 'DT'), ('resource', 'NN'), ('and', 'CC'), ('waiting', 'VBG'), ('to', 'TO'), ('acquire', 'VB'), ('a', 'DT'), ('resource', 'NN'), ('held', 'VBN'), ('by', 'IN'), ('another', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Deadlocks', 'deadlock'), ('are', 'be'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('blocked', 'block'), ('processes', 'process'), ('each', 'each'), ('holding', 'hold'), ('a', 'a'), ('resource', 'resource'), ('and', 'and'), ('waiting', 'wait'), ('to', 'to'), ('acquire', 'acquire'), ('a', 'a'), ('resource', 'resource'), ('held', 'hold'), ('by', 'by'), ('another', 'another'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Deadlocks', 'set'), 'nsubj'), (('are', 'set'), 'cop'), (('a', 'set'), 'det'), (('set', 'root'), 'root'), (('of', 'processes'), 'case'), (('blocked', 'processes'), 'amod'), (('processes', 'set'), 'nmod'), (('each', 'holding'), 'nsubj'), (('holding', 'processes'), 'acl'), (('a', 'resource'), 'det'), (('resource', 'holding'), 'obj'), (('and', 'waiting'), 'cc'), (('waiting', 'holding'), 'conj'), (('to', 'acquire'), 'mark'), (('acquire', 'waiting'), 'xcomp'), (('a', 'resource'), 'det'), (('resource', 'acquire'), 'obj'), (('held', 'resource'), 'acl'), (('by', 'process'), 'case'), (('another', 'process'), 'det'), (('process', 'held'), 'obl'), (('.', 'set'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 Exercise  	Give an real life example of deadlock? 

Tokens are: 
>> ['Exercise', 'Give', 'an', 'real', 'life', 'example', 'of', 'deadlock', '?'] 

 UPOS tags are: 
>> [('Exercise', 'VERB'), ('Give', 'VERB'), ('an', 'DET'), ('real', 'ADJ'), ('life', 'NOUN'), ('example', 'NOUN'), ('of', 'ADP'), ('deadlock', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Exercise', 'VB'), ('Give', 'VB'), ('an', 'DT'), ('real', 'JJ'), ('life', 'NN'), ('example', 'NN'), ('of', 'IN'), ('deadlock', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Exercise', 'Exercise'), ('Give', 'give'), ('an', 'a'), ('real', 'real'), ('life', 'life'), ('example', 'example'), ('of', 'of'), ('deadlock', 'deadlock'), ('?', '?')] 

 Dependency tags are: 
>> [(('Exercise', 'root'), 'root'), (('Give', 'Exercise'), 'xcomp'), (('an', 'example'), 'det'), (('real', 'example'), 'amod'), (('life', 'example'), 'compound'), (('example', 'Give'), 'obj'), (('of', 'deadlock'), 'case'), (('deadlock', 'example'), 'nmod'), (('?', 'Exercise'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 Resource Process Hold Resource Process Request P1 P2 R1 R2 Hold Hold Request Request DEADLOCK     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Preemptable and non-preemptable resource Preemptable:- 

Tokens are: 
>> ['Resource', 'Process', 'Hold', 'Resource', 'Process', 'Request', 'P1', 'P2', 'R1', 'R2', 'Hold', 'Hold', 'Request', 'Request', 'DEADLOCK', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Preemptable', 'and', 'non-preemptable', 'resource', 'Preemptable', ':', '-'] 

 UPOS tags are: 
>> [('Resource', 'NOUN'), ('Process', 'NOUN'), ('Hold', 'NOUN'), ('Resource', 'NOUN'), ('Process', 'NOUN'), ('Request', 'NOUN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('R1', 'NOUN'), ('R2', 'NOUN'), ('Hold', 'NOUN'), ('Hold', 'NOUN'), ('Request', 'NOUN'), ('Request', 'NOUN'), ('DEADLOCK', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Preemptable', 'PROPN'), ('and', 'CCONJ'), ('non-preemptable', 'ADJ'), ('resource', 'NOUN'), ('Preemptable', 'PROPN'), (':', 'PUNCT'), ('-', 'PUNCT')] 

 XPOS tags are: 
>> [('Resource', 'NN'), ('Process', 'NN'), ('Hold', 'NN'), ('Resource', 'NN'), ('Process', 'NN'), ('Request', 'NN'), ('P1', 'NNP'), ('P2', 'NNP'), ('R1', 'NN'), ('R2', 'NN'), ('Hold', 'NN'), ('Hold', 'NN'), ('Request', 'NN'), ('Request', 'NN'), ('DEADLOCK', 'NN'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Preemptable', 'NNP'), ('and', 'CC'), ('non-preemptable', 'JJ'), ('resource', 'NN'), ('Preemptable', 'NNP'), (':', ':'), ('-', ',')] 

 Lemmas are: 
>> [('Resource', 'resource'), ('Process', 'process'), ('Hold', 'hold'), ('Resource', 'resource'), ('Process', 'process'), ('Request', 'request'), ('P1', 'P1'), ('P2', 'P2'), ('R1', 'r1'), ('R2', 'R2'), ('Hold', 'hold'), ('Hold', 'hold'), ('Request', 'request'), ('Request', 'request'), ('DEADLOCK', 'deadlock'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Preemptable', 'Preemptable'), ('and', 'and'), ('non-preemptable', 'non-preemptable'), ('resource', 'resource'), ('Preemptable', 'Preemptable'), (':', ':'), ('-', '-')] 

 Dependency tags are: 
>> [(('Resource', 'Process'), 'compound'), (('Process', 'root'), 'root'), (('Hold', 'Request'), 'compound'), (('Resource', 'Request'), 'compound'), (('Process', 'Request'), 'compound'), (('Request', 'Process'), 'list'), (('P1', 'R1'), 'compound'), (('P2', 'R1'), 'compound'), (('R1', 'Request'), 'list'), (('R2', 'R1'), 'compound'), (('Hold', 'Request'), 'compound'), (('Hold', 'Request'), 'compound'), (('Request', 'Request'), 'compound'), (('Request', 'Process'), 'list'), (('DEADLOCK', 'Request'), 'appos'), (('Prof.', 'DEADLOCK'), 'appos'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Request'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'punct'), (('Deadlock', 'Request'), 'list'), (('‹#›', 'Deadlock'), 'appos'), (('Preemptable', 'Deadlock'), 'appos'), (('and', 'resource'), 'cc'), (('non-preemptable', 'resource'), 'amod'), (('resource', 'Deadlock'), 'appos'), (('Preemptable', 'resource'), 'appos'), ((':', 'resource'), 'punct'), (('-', 'Request'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 7 ===========================

 Preemptive resources are those which can be taken away from a process without causing any ill effects to the process. 

Tokens are: 
>> ['Preemptive', 'resources', 'are', 'those', 'which', 'can', 'be', 'taken', 'away', 'from', 'a', 'process', 'without', 'causing', 'any', 'ill', 'effects', 'to', 'the', 'process', '.'] 

 UPOS tags are: 
>> [('Preemptive', 'ADJ'), ('resources', 'NOUN'), ('are', 'AUX'), ('those', 'PRON'), ('which', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('taken', 'VERB'), ('away', 'ADV'), ('from', 'ADP'), ('a', 'DET'), ('process', 'NOUN'), ('without', 'SCONJ'), ('causing', 'VERB'), ('any', 'DET'), ('ill', 'ADJ'), ('effects', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Preemptive', 'JJ'), ('resources', 'NNS'), ('are', 'VBP'), ('those', 'DT'), ('which', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('taken', 'VBN'), ('away', 'RB'), ('from', 'IN'), ('a', 'DT'), ('process', 'NN'), ('without', 'IN'), ('causing', 'VBG'), ('any', 'DT'), ('ill', 'JJ'), ('effects', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Preemptive', 'preemptive'), ('resources', 'resource'), ('are', 'be'), ('those', 'that'), ('which', 'which'), ('can', 'can'), ('be', 'be'), ('taken', 'take'), ('away', 'away'), ('from', 'from'), ('a', 'a'), ('process', 'process'), ('without', 'without'), ('causing', 'cause'), ('any', 'any'), ('ill', 'ill'), ('effects', 'effect'), ('to', 'to'), ('the', 'the'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Preemptive', 'resources'), 'amod'), (('resources', 'those'), 'nsubj'), (('are', 'those'), 'cop'), (('those', 'root'), 'root'), (('which', 'taken'), 'nsubj:pass'), (('can', 'taken'), 'aux'), (('be', 'taken'), 'aux:pass'), (('taken', 'those'), 'acl:relcl'), (('away', 'taken'), 'advmod'), (('from', 'process'), 'case'), (('a', 'process'), 'det'), (('process', 'taken'), 'obl'), (('without', 'causing'), 'mark'), (('causing', 'taken'), 'advcl'), (('any', 'effects'), 'det'), (('ill', 'effects'), 'amod'), (('effects', 'causing'), 'obj'), (('to', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'causing'), 'obl'), (('.', 'those'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 Example:- Memory. 

Tokens are: 
>> ['Example', ':-', 'Memory', '.'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':-', 'PUNCT'), ('Memory', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':-', ':'), ('Memory', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Example', 'example'), (':-', ':-'), ('Memory', 'memory'), ('.', '.')] 

 Dependency tags are: 
>> [(('Example', 'root'), 'root'), ((':-', 'Memory'), 'punct'), (('Memory', 'Example'), 'parataxis'), (('.', 'Example'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 Non-preemptable:- Non-pre-emptive resources are those which cannot be taken away from the process without causing any ill effects to the process. 

Tokens are: 
>> ['Non-preemptable', ':-', 'Non-pre-emptive', 'resources', 'are', 'those', 'which', 'cannot', 'be', 'taken', 'away', 'from', 'the', 'process', 'without', 'causing', 'any', 'ill', 'effects', 'to', 'the', 'process', '.'] 

 UPOS tags are: 
>> [('Non-preemptable', 'ADJ'), (':-', 'PUNCT'), ('Non-pre-emptive', 'ADJ'), ('resources', 'NOUN'), ('are', 'AUX'), ('those', 'PRON'), ('which', 'PRON'), ('cannot', 'AUX'), ('be', 'AUX'), ('taken', 'VERB'), ('away', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('without', 'SCONJ'), ('causing', 'VERB'), ('any', 'DET'), ('ill', 'ADJ'), ('effects', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Non-preemptable', 'JJ'), (':-', ','), ('Non-pre-emptive', 'JJ'), ('resources', 'NNS'), ('are', 'VBP'), ('those', 'DT'), ('which', 'WDT'), ('cannot', 'MD'), ('be', 'VB'), ('taken', 'VBN'), ('away', 'RB'), ('from', 'IN'), ('the', 'DT'), ('process', 'NN'), ('without', 'IN'), ('causing', 'VBG'), ('any', 'DT'), ('ill', 'JJ'), ('effects', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Non-preemptable', 'non-preemptable'), (':-', ':-'), ('Non-pre-emptive', 'non-pre-emptive'), ('resources', 'resource'), ('are', 'be'), ('those', 'that'), ('which', 'which'), ('cannot', 'cannot'), ('be', 'be'), ('taken', 'take'), ('away', 'away'), ('from', 'from'), ('the', 'the'), ('process', 'process'), ('without', 'without'), ('causing', 'cause'), ('any', 'any'), ('ill', 'ill'), ('effects', 'effect'), ('to', 'to'), ('the', 'the'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Non-preemptable', 'those'), 'advmod'), ((':-', 'Non-preemptable'), 'punct'), (('Non-pre-emptive', 'resources'), 'amod'), (('resources', 'those'), 'nsubj'), (('are', 'those'), 'cop'), (('those', 'root'), 'root'), (('which', 'taken'), 'nsubj:pass'), (('cannot', 'taken'), 'aux'), (('be', 'taken'), 'aux:pass'), (('taken', 'those'), 'acl:relcl'), (('away', 'taken'), 'advmod'), (('from', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'taken'), 'obl'), (('without', 'causing'), 'mark'), (('causing', 'taken'), 'advcl'), (('any', 'effects'), 'det'), (('ill', 'effects'), 'amod'), (('effects', 'causing'), 'obj'), (('to', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'causing'), 'obl'), (('.', 'those'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 Example:- CD-ROM (CD recorder), Printer. 

Tokens are: 
>> ['Example', ':-', 'CD-ROM', '(', 'CD', 'recorder', ')', ',', 'Printer', '.'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':-', 'PUNCT'), ('CD-ROM', 'PROPN'), ('(', 'PUNCT'), ('CD', 'NOUN'), ('recorder', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Printer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':-', ':'), ('CD-ROM', 'NNP'), ('(', '-LRB-'), ('CD', 'NN'), ('recorder', 'NN'), (')', '-RRB-'), (',', ','), ('Printer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Example', 'example'), (':-', ':-'), ('CD-ROM', 'CD-ROM'), ('(', '('), ('CD', 'cd'), ('recorder', 'recorder'), (')', ')'), (',', ','), ('Printer', 'printer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Example', 'root'), 'root'), ((':-', 'Example'), 'punct'), (('CD-ROM', 'Example'), 'dep'), (('(', 'recorder'), 'punct'), (('CD', 'recorder'), 'compound'), (('recorder', 'CD-ROM'), 'appos'), ((')', 'recorder'), 'punct'), ((',', 'Printer'), 'punct'), (('Printer', 'CD-ROM'), 'conj'), (('.', 'Example'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock v/s Starvation 	Deadlock	Starvation  		               Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock v/s Starvation 	Deadlock	Starvation 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'v/s', 'Starvation', 'Deadlock', 'Starvation', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'v/s', 'Starvation', 'Deadlock', 'Starvation'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Deadlock', 'PROPN'), ('v/s', 'PROPN'), ('Starvation', 'PROPN'), ('Deadlock', 'PROPN'), ('Starvation', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('v/s', 'NOUN'), ('Starvation', 'NOUN'), ('Deadlock', 'NOUN'), ('Starvation', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Deadlock', 'NNP'), ('v/s', 'NNP'), ('Starvation', 'NNP'), ('Deadlock', 'NNP'), ('Starvation', 'NNP'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('v/s', 'NN'), ('Starvation', 'NN'), ('Deadlock', 'NN'), ('Starvation', 'NN')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'Deadlock'), ('v/s', 'v/s'), ('Starvation', 'Starvation'), ('Deadlock', 'Deadlock'), ('Starvation', 'Starvation'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('v/s', 'v/s'), ('Starvation', 'starvation'), ('Deadlock', 'deadlock'), ('Starvation', 'starvation')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Prof.'), 'list'), (('‹#›', 'Deadlock'), 'compound'), (('Deadlock', 'Deadlock'), 'appos'), (('v/s', 'Deadlock'), 'compound'), (('Starvation', 'Deadlock'), 'compound'), (('Deadlock', 'Prof.'), 'compound'), (('Starvation', 'Prof.'), 'compound'), (('Prof.', 'Prof.'), 'appos'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Prof.'), 'list'), (('‹#›', 'Deadlock'), 'compound'), (('Deadlock', 'Prof.'), 'list'), (('v/s', 'Starvation'), 'compound'), (('Starvation', 'Starvation'), 'compound'), (('Deadlock', 'Starvation'), 'compound'), (('Starvation', 'Deadlock'), 'appos')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 12 ===========================

 All processes keep waiting for each other to complete and none get executed. 

Tokens are: 
>> ['All', 'processes', 'keep', 'waiting', 'for', 'each', 'other', 'to', 'complete', 'and', 'none', 'get', 'executed', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('processes', 'NOUN'), ('keep', 'VERB'), ('waiting', 'VERB'), ('for', 'ADP'), ('each', 'DET'), ('other', 'ADJ'), ('to', 'ADP'), ('complete', 'VERB'), ('and', 'CCONJ'), ('none', 'NOUN'), ('get', 'AUX'), ('executed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('processes', 'NNS'), ('keep', 'VBP'), ('waiting', 'VBG'), ('for', 'IN'), ('each', 'DT'), ('other', 'JJ'), ('to', 'IN'), ('complete', 'VB'), ('and', 'CC'), ('none', 'NN'), ('get', 'VB'), ('executed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('processes', 'process'), ('keep', 'keep'), ('waiting', 'wait'), ('for', 'for'), ('each', 'each'), ('other', 'other'), ('to', 'to'), ('complete', 'complete'), ('and', 'and'), ('none', 'none'), ('get', 'get'), ('executed', 'execute'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'processes'), 'det'), (('processes', 'keep'), 'nsubj'), (('keep', 'root'), 'root'), (('waiting', 'keep'), 'xcomp'), (('for', 'other'), 'case'), (('each', 'other'), 'det'), (('other', 'waiting'), 'obl'), (('to', 'complete'), 'case'), (('complete', 'waiting'), 'obl'), (('and', 'executed'), 'cc'), (('none', 'executed'), 'nsubj:pass'), (('get', 'executed'), 'aux:pass'), (('executed', 'keep'), 'conj'), (('.', 'keep'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 High priority process keep executing and low priority process are blocked. 

Tokens are: 
>> ['High', 'priority', 'process', 'keep', 'executing', 'and', 'low', 'priority', 'process', 'are', 'blocked', '.'] 

 UPOS tags are: 
>> [('High', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('keep', 'VERB'), ('executing', 'VERB'), ('and', 'CCONJ'), ('low', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('are', 'AUX'), ('blocked', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('High', 'JJ'), ('priority', 'NN'), ('process', 'NN'), ('keep', 'VB'), ('executing', 'VBG'), ('and', 'CC'), ('low', 'JJ'), ('priority', 'NN'), ('process', 'NN'), ('are', 'VBP'), ('blocked', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('High', 'high'), ('priority', 'priority'), ('process', 'process'), ('keep', 'keep'), ('executing', 'execute'), ('and', 'and'), ('low', 'low'), ('priority', 'priority'), ('process', 'process'), ('are', 'be'), ('blocked', 'block'), ('.', '.')] 

 Dependency tags are: 
>> [(('High', 'process'), 'amod'), (('priority', 'process'), 'compound'), (('process', 'keep'), 'nsubj'), (('keep', 'root'), 'root'), (('executing', 'keep'), 'xcomp'), (('and', 'blocked'), 'cc'), (('low', 'process'), 'amod'), (('priority', 'process'), 'compound'), (('process', 'blocked'), 'nsubj:pass'), (('are', 'blocked'), 'aux:pass'), (('blocked', 'keep'), 'conj'), (('.', 'keep'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 Resources are blocked by the process. 

Tokens are: 
>> ['Resources', 'are', 'blocked', 'by', 'the', 'process', '.'] 

 UPOS tags are: 
>> [('Resources', 'NOUN'), ('are', 'AUX'), ('blocked', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Resources', 'NNS'), ('are', 'VBP'), ('blocked', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Resources', 'resource'), ('are', 'be'), ('blocked', 'block'), ('by', 'by'), ('the', 'the'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Resources', 'blocked'), 'nsubj:pass'), (('are', 'blocked'), 'aux:pass'), (('blocked', 'root'), 'root'), (('by', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'blocked'), 'obl'), (('.', 'blocked'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 15 ===========================

 Resources are continuously utilized by the higher priority process. 

Tokens are: 
>> ['Resources', 'are', 'continuously', 'utilized', 'by', 'the', 'higher', 'priority', 'process', '.'] 

 UPOS tags are: 
>> [('Resources', 'NOUN'), ('are', 'AUX'), ('continuously', 'ADV'), ('utilized', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('higher', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Resources', 'NNS'), ('are', 'VBP'), ('continuously', 'RB'), ('utilized', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('higher', 'JJR'), ('priority', 'NN'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Resources', 'resource'), ('are', 'be'), ('continuously', 'continuously'), ('utilized', 'utilize'), ('by', 'by'), ('the', 'the'), ('higher', 'high'), ('priority', 'priority'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Resources', 'utilized'), 'nsubj:pass'), (('are', 'utilized'), 'aux:pass'), (('continuously', 'utilized'), 'advmod'), (('utilized', 'root'), 'root'), (('by', 'process'), 'case'), (('the', 'process'), 'det'), (('higher', 'process'), 'amod'), (('priority', 'process'), 'compound'), (('process', 'utilized'), 'obl'), (('.', 'utilized'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 Necessary conditions are mutual exclusion, hold and wait, no preemption, circular wait. 

Tokens are: 
>> ['Necessary', 'conditions', 'are', 'mutual', 'exclusion', ',', 'hold', 'and', 'wait', ',', 'no', 'preemption', ',', 'circular', 'wait', '.'] 

 UPOS tags are: 
>> [('Necessary', 'ADJ'), ('conditions', 'NOUN'), ('are', 'AUX'), ('mutual', 'ADJ'), ('exclusion', 'NOUN'), (',', 'PUNCT'), ('hold', 'VERB'), ('and', 'CCONJ'), ('wait', 'NOUN'), (',', 'PUNCT'), ('no', 'DET'), ('preemption', 'NOUN'), (',', 'PUNCT'), ('circular', 'ADJ'), ('wait', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Necessary', 'JJ'), ('conditions', 'NNS'), ('are', 'VBP'), ('mutual', 'JJ'), ('exclusion', 'NN'), (',', ','), ('hold', 'VB'), ('and', 'CC'), ('wait', 'NN'), (',', ','), ('no', 'DT'), ('preemption', 'NN'), (',', ','), ('circular', 'JJ'), ('wait', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Necessary', 'necessary'), ('conditions', 'condition'), ('are', 'be'), ('mutual', 'mutual'), ('exclusion', 'exclusion'), (',', ','), ('hold', 'hold'), ('and', 'and'), ('wait', 'wait'), (',', ','), ('no', 'no'), ('preemption', 'preemption'), (',', ','), ('circular', 'circular'), ('wait', 'wait'), ('.', '.')] 

 Dependency tags are: 
>> [(('Necessary', 'conditions'), 'amod'), (('conditions', 'exclusion'), 'nsubj'), (('are', 'exclusion'), 'cop'), (('mutual', 'exclusion'), 'amod'), (('exclusion', 'root'), 'root'), ((',', 'hold'), 'punct'), (('hold', 'exclusion'), 'conj'), (('and', 'wait'), 'cc'), (('wait', 'hold'), 'conj'), ((',', 'preemption'), 'punct'), (('no', 'preemption'), 'det'), (('preemption', 'exclusion'), 'conj'), ((',', 'wait'), 'punct'), (('circular', 'wait'), 'amod'), (('wait', 'exclusion'), 'conj'), (('.', 'exclusion'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 Priorities are assigned to the process. 

Tokens are: 
>> ['Priorities', 'are', 'assigned', 'to', 'the', 'process', '.'] 

 UPOS tags are: 
>> [('Priorities', 'NOUN'), ('are', 'AUX'), ('assigned', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Priorities', 'NNS'), ('are', 'VBP'), ('assigned', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Priorities', 'priority'), ('are', 'be'), ('assigned', 'assign'), ('to', 'to'), ('the', 'the'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('Priorities', 'assigned'), 'nsubj:pass'), (('are', 'assigned'), 'aux:pass'), (('assigned', 'root'), 'root'), (('to', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'assigned'), 'obl'), (('.', 'assigned'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 Also known as circular wait. 

Tokens are: 
>> ['Also', 'known', 'as', 'circular', 'wait', '.'] 

 UPOS tags are: 
>> [('Also', 'ADV'), ('known', 'VERB'), ('as', 'ADP'), ('circular', 'ADJ'), ('wait', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Also', 'RB'), ('known', 'VBN'), ('as', 'IN'), ('circular', 'JJ'), ('wait', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Also', 'also'), ('known', 'know'), ('as', 'as'), ('circular', 'circular'), ('wait', 'wait'), ('.', '.')] 

 Dependency tags are: 
>> [(('Also', 'known'), 'advmod'), (('known', 'root'), 'root'), (('as', 'wait'), 'case'), (('circular', 'wait'), 'amod'), (('wait', 'known'), 'obl'), (('.', 'known'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 Also known as lived lock. 

Tokens are: 
>> ['Also', 'known', 'as', 'lived', 'lock', '.'] 

 UPOS tags are: 
>> [('Also', 'ADV'), ('known', 'VERB'), ('as', 'ADP'), ('lived', 'VERB'), ('lock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Also', 'RB'), ('known', 'VBN'), ('as', 'IN'), ('lived', 'VBN'), ('lock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Also', 'also'), ('known', 'know'), ('as', 'as'), ('lived', 'live'), ('lock', 'lock'), ('.', '.')] 

 Dependency tags are: 
>> [(('Also', 'known'), 'advmod'), (('known', 'root'), 'root'), (('as', 'lock'), 'case'), (('lived', 'lock'), 'amod'), (('lock', 'known'), 'obl'), (('.', 'known'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 It can be prevented by avoiding the necessary conditions for deadlock. 

Tokens are: 
>> ['It', 'can', 'be', 'prevented', 'by', 'avoiding', 'the', 'necessary', 'conditions', 'for', 'deadlock', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('prevented', 'VERB'), ('by', 'SCONJ'), ('avoiding', 'VERB'), ('the', 'DET'), ('necessary', 'ADJ'), ('conditions', 'NOUN'), ('for', 'ADP'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('prevented', 'VBN'), ('by', 'IN'), ('avoiding', 'VBG'), ('the', 'DT'), ('necessary', 'JJ'), ('conditions', 'NNS'), ('for', 'IN'), ('deadlock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('can', 'can'), ('be', 'be'), ('prevented', 'prevent'), ('by', 'by'), ('avoiding', 'avoid'), ('the', 'the'), ('necessary', 'necessary'), ('conditions', 'condition'), ('for', 'for'), ('deadlock', 'deadlock'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'prevented'), 'nsubj:pass'), (('can', 'prevented'), 'aux'), (('be', 'prevented'), 'aux:pass'), (('prevented', 'root'), 'root'), (('by', 'avoiding'), 'mark'), (('avoiding', 'prevented'), 'advcl'), (('the', 'conditions'), 'det'), (('necessary', 'conditions'), 'amod'), (('conditions', 'avoiding'), 'obj'), (('for', 'deadlock'), 'case'), (('deadlock', 'conditions'), 'nmod'), (('.', 'prevented'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 It can be prevented by Aging. 

Tokens are: 
>> ['It', 'can', 'be', 'prevented', 'by', 'Aging', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('prevented', 'VERB'), ('by', 'ADP'), ('Aging', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('prevented', 'VBN'), ('by', 'IN'), ('Aging', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('can', 'can'), ('be', 'be'), ('prevented', 'prevent'), ('by', 'by'), ('Aging', 'aging'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'prevented'), 'nsubj:pass'), (('can', 'prevented'), 'aux'), (('be', 'prevented'), 'aux:pass'), (('prevented', 'root'), 'root'), (('by', 'Aging'), 'case'), (('Aging', 'prevented'), 'obl'), (('.', 'prevented'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock characteristics Section - 2      Conditions that lead to deadlock (Deadlock characteristics) 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'characteristics', 'Section', '-', '2', 'Conditions', 'that', 'lead', 'to', 'deadlock', '(', 'Deadlock', 'characteristics', ')'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('characteristics', 'NOUN'), ('Section', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), ('Conditions', 'NOUN'), ('that', 'PRON'), ('lead', 'VERB'), ('to', 'ADP'), ('deadlock', 'NOUN'), ('(', 'PUNCT'), ('Deadlock', 'NOUN'), ('characteristics', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('characteristics', 'NNS'), ('Section', 'NN'), ('-', 'SYM'), ('2', 'CD'), ('Conditions', 'NNS'), ('that', 'WDT'), ('lead', 'VBP'), ('to', 'IN'), ('deadlock', 'NN'), ('(', '-LRB-'), ('Deadlock', 'NN'), ('characteristics', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('characteristics', 'characteristic'), ('Section', 'section'), ('-', '-'), ('2', '2'), ('Conditions', 'condition'), ('that', 'that'), ('lead', 'lead'), ('to', 'to'), ('deadlock', 'deadlock'), ('(', '('), ('Deadlock', 'deadlock'), ('characteristics', 'characteristic'), (')', ')')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Deadlock', 'characteristics'), 'compound'), (('‹#›', 'characteristics'), 'compound'), (('Deadlock', 'characteristics'), 'compound'), (('characteristics', 'Prof.'), 'list'), (('Section', 'Conditions'), 'compound'), (('-', '2'), 'case'), (('2', 'Section'), 'nmod'), (('Conditions', 'characteristics'), 'appos'), (('that', 'lead'), 'nsubj'), (('lead', 'Conditions'), 'acl:relcl'), (('to', 'deadlock'), 'case'), (('deadlock', 'lead'), 'obl'), (('(', 'characteristics'), 'punct'), (('Deadlock', 'characteristics'), 'compound'), (('characteristics', 'deadlock'), 'appos'), ((')', 'characteristics'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 23 ===========================

 Mutual exclusion Each resource is either currently assigned to exactly one process or is available. 

Tokens are: 
>> ['Mutual', 'exclusion', 'Each', 'resource', 'is', 'either', 'currently', 'assigned', 'to', 'exactly', 'one', 'process', 'or', 'is', 'available', '.'] 

 UPOS tags are: 
>> [('Mutual', 'ADJ'), ('exclusion', 'NOUN'), ('Each', 'DET'), ('resource', 'NOUN'), ('is', 'AUX'), ('either', 'ADV'), ('currently', 'ADV'), ('assigned', 'VERB'), ('to', 'ADP'), ('exactly', 'ADV'), ('one', 'NUM'), ('process', 'NOUN'), ('or', 'CCONJ'), ('is', 'AUX'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Mutual', 'JJ'), ('exclusion', 'NN'), ('Each', 'DT'), ('resource', 'NN'), ('is', 'VBZ'), ('either', 'RB'), ('currently', 'RB'), ('assigned', 'VBN'), ('to', 'IN'), ('exactly', 'RB'), ('one', 'CD'), ('process', 'NN'), ('or', 'CC'), ('is', 'VBZ'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Mutual', 'mutual'), ('exclusion', 'exclusion'), ('Each', 'each'), ('resource', 'resource'), ('is', 'be'), ('either', 'either'), ('currently', 'currently'), ('assigned', 'assign'), ('to', 'to'), ('exactly', 'exactly'), ('one', 'one'), ('process', 'process'), ('or', 'or'), ('is', 'be'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('Mutual', 'exclusion'), 'amod'), (('exclusion', 'assigned'), 'nsubj:pass'), (('Each', 'resource'), 'det'), (('resource', 'assigned'), 'nsubj:pass'), (('is', 'assigned'), 'aux:pass'), (('either', 'assigned'), 'advmod'), (('currently', 'assigned'), 'advmod'), (('assigned', 'root'), 'root'), (('to', 'process'), 'case'), (('exactly', 'one'), 'advmod'), (('one', 'process'), 'nummod'), (('process', 'assigned'), 'obl'), (('or', 'available'), 'cc'), (('is', 'available'), 'cop'), (('available', 'assigned'), 'conj'), (('.', 'assigned'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 24 ===========================

 Only one process at a time can use a resource. 

Tokens are: 
>> ['Only', 'one', 'process', 'at', 'a', 'time', 'can', 'use', 'a', 'resource', '.'] 

 UPOS tags are: 
>> [('Only', 'ADV'), ('one', 'NUM'), ('process', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('can', 'AUX'), ('use', 'VERB'), ('a', 'DET'), ('resource', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Only', 'RB'), ('one', 'CD'), ('process', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), ('can', 'MD'), ('use', 'VB'), ('a', 'DT'), ('resource', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Only', 'only'), ('one', 'one'), ('process', 'process'), ('at', 'at'), ('a', 'a'), ('time', 'time'), ('can', 'can'), ('use', 'use'), ('a', 'a'), ('resource', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('Only', 'process'), 'advmod'), (('one', 'process'), 'nummod'), (('process', 'use'), 'nsubj'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'process'), 'nmod'), (('can', 'use'), 'aux'), (('use', 'root'), 'root'), (('a', 'resource'), 'det'), (('resource', 'use'), 'obj'), (('.', 'use'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 25 ===========================

 Hold and wait Process currently holding resources granted earlier can request more resources. 

Tokens are: 
>> ['Hold', 'and', 'wait', 'Process', 'currently', 'holding', 'resources', 'granted', 'earlier', 'can', 'request', 'more', 'resources', '.'] 

 UPOS tags are: 
>> [('Hold', 'VERB'), ('and', 'CCONJ'), ('wait', 'VERB'), ('Process', 'NOUN'), ('currently', 'ADV'), ('holding', 'VERB'), ('resources', 'NOUN'), ('granted', 'VERB'), ('earlier', 'ADV'), ('can', 'AUX'), ('request', 'VERB'), ('more', 'ADJ'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Hold', 'VB'), ('and', 'CC'), ('wait', 'VB'), ('Process', 'NN'), ('currently', 'RB'), ('holding', 'VBG'), ('resources', 'NNS'), ('granted', 'VBN'), ('earlier', 'RBR'), ('can', 'MD'), ('request', 'VB'), ('more', 'JJR'), ('resources', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Hold', 'hold'), ('and', 'and'), ('wait', 'wait'), ('Process', 'process'), ('currently', 'currently'), ('holding', 'hold'), ('resources', 'resource'), ('granted', 'grant'), ('earlier', 'early'), ('can', 'can'), ('request', 'request'), ('more', 'more'), ('resources', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('Hold', 'root'), 'root'), (('and', 'wait'), 'cc'), (('wait', 'Hold'), 'conj'), (('Process', 'Hold'), 'obj'), (('currently', 'holding'), 'advmod'), (('holding', 'Process'), 'acl'), (('resources', 'holding'), 'obj'), (('granted', 'resources'), 'acl'), (('earlier', 'granted'), 'advmod'), (('can', 'request'), 'aux'), (('request', 'Hold'), 'conj'), (('more', 'resources'), 'amod'), (('resources', 'request'), 'obj'), (('.', 'Hold'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 No preemption Previously granted resources cannot be forcibly taken away from process. 

Tokens are: 
>> ['No', 'preemption', 'Previously', 'granted', 'resources', 'cannot', 'be', 'forcibly', 'taken', 'away', 'from', 'process', '.'] 

 UPOS tags are: 
>> [('No', 'DET'), ('preemption', 'NOUN'), ('Previously', 'ADV'), ('granted', 'VERB'), ('resources', 'NOUN'), ('cannot', 'AUX'), ('be', 'AUX'), ('forcibly', 'ADV'), ('taken', 'VERB'), ('away', 'ADV'), ('from', 'ADP'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('No', 'DT'), ('preemption', 'NN'), ('Previously', 'RB'), ('granted', 'VBN'), ('resources', 'NNS'), ('cannot', 'MD'), ('be', 'VB'), ('forcibly', 'RB'), ('taken', 'VBN'), ('away', 'RB'), ('from', 'IN'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('No', 'no'), ('preemption', 'preemption'), ('Previously', 'previously'), ('granted', 'grant'), ('resources', 'resource'), ('cannot', 'cannot'), ('be', 'be'), ('forcibly', 'forcibly'), ('taken', 'take'), ('away', 'away'), ('from', 'from'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('No', 'preemption'), 'det'), (('preemption', 'taken'), 'nsubj:pass'), (('Previously', 'granted'), 'advmod'), (('granted', 'resources'), 'amod'), (('resources', 'preemption'), 'nmod'), (('cannot', 'taken'), 'aux'), (('be', 'taken'), 'aux:pass'), (('forcibly', 'taken'), 'advmod'), (('taken', 'root'), 'root'), (('away', 'taken'), 'advmod'), (('from', 'process'), 'case'), (('process', 'taken'), 'obl'), (('.', 'taken'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 27 ===========================

 Circular wait 

Tokens are: 
>> ['Circular', 'wait'] 

 UPOS tags are: 
>> [('Circular', 'ADJ'), ('wait', 'NOUN')] 

 XPOS tags are: 
>> [('Circular', 'JJ'), ('wait', 'NN')] 

 Lemmas are: 
>> [('Circular', 'circular'), ('wait', 'wait')] 

 Dependency tags are: 
>> [(('Circular', 'wait'), 'amod'), (('wait', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 There must be a circular chain of 2 or more processes. 

Tokens are: 
>> ['There', 'must', 'be', 'a', 'circular', 'chain', 'of', '2', 'or', 'more', 'processes', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('must', 'AUX'), ('be', 'VERB'), ('a', 'DET'), ('circular', 'ADJ'), ('chain', 'NOUN'), ('of', 'ADP'), ('2', 'NUM'), ('or', 'CCONJ'), ('more', 'ADJ'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('must', 'MD'), ('be', 'VB'), ('a', 'DT'), ('circular', 'JJ'), ('chain', 'NN'), ('of', 'IN'), ('2', 'CD'), ('or', 'CC'), ('more', 'JJR'), ('processes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('must', 'must'), ('be', 'be'), ('a', 'a'), ('circular', 'circular'), ('chain', 'chain'), ('of', 'of'), ('2', '2'), ('or', 'or'), ('more', 'more'), ('processes', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'be'), 'expl'), (('must', 'be'), 'aux'), (('be', 'root'), 'root'), (('a', 'chain'), 'det'), (('circular', 'chain'), 'amod'), (('chain', 'be'), 'nsubj'), (('of', 'processes'), 'case'), (('2', 'processes'), 'nummod'), (('or', 'more'), 'cc'), (('more', '2'), 'conj'), (('processes', 'chain'), 'nmod'), (('.', 'be'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 29 ===========================

 Each process is waiting for resource that is held by next member of the chain. 

Tokens are: 
>> ['Each', 'process', 'is', 'waiting', 'for', 'resource', 'that', 'is', 'held', 'by', 'next', 'member', 'of', 'the', 'chain', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('process', 'NOUN'), ('is', 'AUX'), ('waiting', 'VERB'), ('for', 'ADP'), ('resource', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('held', 'VERB'), ('by', 'ADP'), ('next', 'ADJ'), ('member', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('chain', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('process', 'NN'), ('is', 'VBZ'), ('waiting', 'VBG'), ('for', 'IN'), ('resource', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('held', 'VBN'), ('by', 'IN'), ('next', 'JJ'), ('member', 'NN'), ('of', 'IN'), ('the', 'DT'), ('chain', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('process', 'process'), ('is', 'be'), ('waiting', 'wait'), ('for', 'for'), ('resource', 'resource'), ('that', 'that'), ('is', 'be'), ('held', 'hold'), ('by', 'by'), ('next', 'next'), ('member', 'member'), ('of', 'of'), ('the', 'the'), ('chain', 'chain'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'process'), 'det'), (('process', 'waiting'), 'nsubj'), (('is', 'waiting'), 'aux'), (('waiting', 'root'), 'root'), (('for', 'resource'), 'case'), (('resource', 'waiting'), 'obl'), (('that', 'held'), 'nsubj:pass'), (('is', 'held'), 'aux:pass'), (('held', 'resource'), 'acl:relcl'), (('by', 'member'), 'case'), (('next', 'member'), 'amod'), (('member', 'held'), 'obl'), (('of', 'chain'), 'case'), (('the', 'chain'), 'det'), (('chain', 'member'), 'nmod'), (('.', 'waiting'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 All four of these conditions must be present for a deadlock to occur. 

Tokens are: 
>> ['All', 'four', 'of', 'these', 'conditions', 'must', 'be', 'present', 'for', 'a', 'deadlock', 'to', 'occur', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('four', 'NUM'), ('of', 'ADP'), ('these', 'DET'), ('conditions', 'NOUN'), ('must', 'AUX'), ('be', 'AUX'), ('present', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('deadlock', 'NOUN'), ('to', 'PART'), ('occur', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('four', 'CD'), ('of', 'IN'), ('these', 'DT'), ('conditions', 'NNS'), ('must', 'MD'), ('be', 'VB'), ('present', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('deadlock', 'NN'), ('to', 'TO'), ('occur', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('four', 'four'), ('of', 'of'), ('these', 'this'), ('conditions', 'condition'), ('must', 'must'), ('be', 'be'), ('present', 'present'), ('for', 'for'), ('a', 'a'), ('deadlock', 'deadlock'), ('to', 'to'), ('occur', 'occur'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'four'), 'det'), (('four', 'present'), 'nsubj'), (('of', 'conditions'), 'case'), (('these', 'conditions'), 'det'), (('conditions', 'four'), 'nmod'), (('must', 'present'), 'aux'), (('be', 'present'), 'cop'), (('present', 'root'), 'root'), (('for', 'deadlock'), 'case'), (('a', 'deadlock'), 'det'), (('deadlock', 'present'), 'obl'), (('to', 'occur'), 'mark'), (('occur', 'deadlock'), 'acl'), (('.', 'present'), 'punct')]

 Named Entities are: 
>> [('four', 'CARDINAL')]

========================== Sentence 31 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Strategies for dealing with deadlock Just ignore the problem Detection and recovery. 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Strategies', 'for', 'dealing', 'with', 'deadlock', 'Just', 'ignore', 'the', 'problem', 'Detection', 'and', 'recovery', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Strategies', 'NOUN'), ('for', 'SCONJ'), ('dealing', 'VERB'), ('with', 'ADP'), ('deadlock', 'NOUN'), ('Just', 'ADV'), ('ignore', 'VERB'), ('the', 'DET'), ('problem', 'NOUN'), ('Detection', 'NOUN'), ('and', 'CCONJ'), ('recovery', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Strategies', 'NNS'), ('for', 'IN'), ('dealing', 'VBG'), ('with', 'IN'), ('deadlock', 'NN'), ('Just', 'RB'), ('ignore', 'VB'), ('the', 'DT'), ('problem', 'NN'), ('Detection', 'NN'), ('and', 'CC'), ('recovery', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Strategies', 'strategy'), ('for', 'for'), ('dealing', 'deal'), ('with', 'with'), ('deadlock', 'deadlock'), ('Just', 'just'), ('ignore', 'ignore'), ('the', 'the'), ('problem', 'problem'), ('Detection', 'detection'), ('and', 'and'), ('recovery', 'recovery'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'ignore'), 'nsubj'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Deadlock', 'Strategies'), 'compound'), (('‹#›', 'Strategies'), 'compound'), (('Strategies', 'ignore'), 'nsubj'), (('for', 'dealing'), 'mark'), (('dealing', 'Strategies'), 'acl'), (('with', 'deadlock'), 'case'), (('deadlock', 'dealing'), 'obl'), (('Just', 'ignore'), 'advmod'), (('ignore', 'root'), 'root'), (('the', 'Detection'), 'det'), (('problem', 'Detection'), 'compound'), (('Detection', 'ignore'), 'obj'), (('and', 'recovery'), 'cc'), (('recovery', 'Detection'), 'conj'), (('.', 'ignore'), 'punct')]

 Named Entities are: 
>> [('Firoz', 'PERSON'), ('#3140702', 'CARDINAL'), ('5', 'CARDINAL')]

========================== Sentence 32 ===========================

 Let deadlocks occur, detect them and take action. 

Tokens are: 
>> ['Let', 'deadlocks', 'occur', ',', 'detect', 'them', 'and', 'take', 'action', '.'] 

 UPOS tags are: 
>> [('Let', 'VERB'), ('deadlocks', 'NOUN'), ('occur', 'VERB'), (',', 'PUNCT'), ('detect', 'VERB'), ('them', 'PRON'), ('and', 'CCONJ'), ('take', 'VERB'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Let', 'VB'), ('deadlocks', 'NNS'), ('occur', 'VB'), (',', ','), ('detect', 'VB'), ('them', 'PRP'), ('and', 'CC'), ('take', 'VB'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Let', 'let'), ('deadlocks', 'deadlock'), ('occur', 'occur'), (',', ','), ('detect', 'detect'), ('them', 'they'), ('and', 'and'), ('take', 'take'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('Let', 'root'), 'root'), (('deadlocks', 'Let'), 'obj'), (('occur', 'Let'), 'xcomp'), ((',', 'detect'), 'punct'), (('detect', 'Let'), 'conj'), (('them', 'detect'), 'obj'), (('and', 'take'), 'cc'), (('take', 'Let'), 'conj'), (('action', 'take'), 'obj'), (('.', 'Let'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 Dynamic avoidance by careful resource allocation. 

Tokens are: 
>> ['Dynamic', 'avoidance', 'by', 'careful', 'resource', 'allocation', '.'] 

 UPOS tags are: 
>> [('Dynamic', 'ADJ'), ('avoidance', 'NOUN'), ('by', 'ADP'), ('careful', 'ADJ'), ('resource', 'NOUN'), ('allocation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Dynamic', 'JJ'), ('avoidance', 'NN'), ('by', 'IN'), ('careful', 'JJ'), ('resource', 'NN'), ('allocation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Dynamic', 'Dynamic'), ('avoidance', 'avoidance'), ('by', 'by'), ('careful', 'careful'), ('resource', 'resource'), ('allocation', 'allocation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Dynamic', 'avoidance'), 'amod'), (('avoidance', 'root'), 'root'), (('by', 'allocation'), 'case'), (('careful', 'allocation'), 'amod'), (('resource', 'allocation'), 'compound'), (('allocation', 'avoidance'), 'nmod'), (('.', 'avoidance'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 34 ===========================

 Prevention, by structurally negating (killing) one of the four required conditions. 

Tokens are: 
>> ['Prevention', ',', 'by', 'structurally', 'negating', '(', 'killing', ')', 'one', 'of', 'the', 'four', 'required', 'conditions', '.'] 

 UPOS tags are: 
>> [('Prevention', 'NOUN'), (',', 'PUNCT'), ('by', 'SCONJ'), ('structurally', 'ADV'), ('negating', 'VERB'), ('(', 'PUNCT'), ('killing', 'VERB'), (')', 'PUNCT'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('four', 'NUM'), ('required', 'VERB'), ('conditions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prevention', 'NN'), (',', ','), ('by', 'IN'), ('structurally', 'RB'), ('negating', 'VBG'), ('(', '-LRB-'), ('killing', 'VBG'), (')', '-RRB-'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('four', 'CD'), ('required', 'VBN'), ('conditions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Prevention', 'prevention'), (',', ','), ('by', 'by'), ('structurally', 'structurally'), ('negating', 'negate'), ('(', '('), ('killing', 'kill'), (')', ')'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('four', 'four'), ('required', 'require'), ('conditions', 'condition'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prevention', 'root'), 'root'), ((',', 'Prevention'), 'punct'), (('by', 'negating'), 'mark'), (('structurally', 'negating'), 'advmod'), (('negating', 'Prevention'), 'acl'), (('(', 'killing'), 'punct'), (('killing', 'negating'), 'parataxis'), ((')', 'killing'), 'punct'), (('one', 'negating'), 'obj'), (('of', 'conditions'), 'case'), (('the', 'conditions'), 'det'), (('four', 'conditions'), 'nummod'), (('required', 'conditions'), 'amod'), (('conditions', 'one'), 'nmod'), (('.', 'Prevention'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL'), ('four', 'CARDINAL')]

========================== Sentence 35 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock ignorance (Ostrich Algorithm) Section - 3      Deadlock ignorance (Ostrich Algorithm) 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'ignorance', '(', 'Ostrich', 'Algorithm', ')', 'Section', '-', '3', 'Deadlock', 'ignorance', '(', 'Ostrich', 'Algorithm', ')'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('ignorance', 'NOUN'), ('(', 'PUNCT'), ('Ostrich', 'NOUN'), ('Algorithm', 'NOUN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), ('Deadlock', 'NOUN'), ('ignorance', 'NOUN'), ('(', 'PUNCT'), ('Ostrich', 'NOUN'), ('Algorithm', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('ignorance', 'NN'), ('(', '-LRB-'), ('Ostrich', 'NN'), ('Algorithm', 'NN'), (')', '-RRB-'), ('Section', 'NN'), ('-', ','), ('3', 'CD'), ('Deadlock', 'NN'), ('ignorance', 'NN'), ('(', '-LRB-'), ('Ostrich', 'NN'), ('Algorithm', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('ignorance', 'ignorance'), ('(', '('), ('Ostrich', 'ostrich'), ('Algorithm', 'algorithm'), (')', ')'), ('Section', 'section'), ('-', '-'), ('3', '3'), ('Deadlock', 'deadlock'), ('ignorance', 'ignorance'), ('(', '('), ('Ostrich', 'ostrich'), ('Algorithm', 'algorithm'), (')', ')')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'appos'), (('‹#›', 'ignorance'), 'compound'), (('Deadlock', 'ignorance'), 'compound'), (('ignorance', 'Prof.'), 'list'), (('(', 'Algorithm'), 'punct'), (('Ostrich', 'Algorithm'), 'compound'), (('Algorithm', 'ignorance'), 'appos'), ((')', 'Algorithm'), 'punct'), (('Section', 'Prof.'), 'list'), (('-', 'Section'), 'punct'), (('3', 'ignorance'), 'nummod'), (('Deadlock', 'ignorance'), 'compound'), (('ignorance', 'Prof.'), 'list'), (('(', 'Algorithm'), 'punct'), (('Ostrich', 'Algorithm'), 'compound'), (('Algorithm', 'ignorance'), 'appos'), ((')', 'Algorithm'), 'punct')]

 Named Entities are: 
>> [('Firoz', 'PERSON'), ('5', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 36 ===========================

 When storm approaches, an ostrich puts his head in the sand (ground) and pretend (imagine) that there is no problem at all. 

Tokens are: 
>> ['When', 'storm', 'approaches', ',', 'an', 'ostrich', 'puts', 'his', 'head', 'in', 'the', 'sand', '(', 'ground', ')', 'and', 'pretend', '(', 'imagine', ')', 'that', 'there', 'is', 'no', 'problem', 'at', 'all', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('storm', 'NOUN'), ('approaches', 'VERB'), (',', 'PUNCT'), ('an', 'DET'), ('ostrich', 'NOUN'), ('puts', 'VERB'), ('his', 'PRON'), ('head', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('sand', 'NOUN'), ('(', 'PUNCT'), ('ground', 'NOUN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('pretend', 'VERB'), ('(', 'PUNCT'), ('imagine', 'VERB'), (')', 'PUNCT'), ('that', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('problem', 'NOUN'), ('at', 'ADP'), ('all', 'DET'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('storm', 'NN'), ('approaches', 'VBZ'), (',', ','), ('an', 'DT'), ('ostrich', 'NN'), ('puts', 'VBZ'), ('his', 'PRP$'), ('head', 'NN'), ('in', 'IN'), ('the', 'DT'), ('sand', 'NN'), ('(', '-LRB-'), ('ground', 'NN'), (')', '-RRB-'), ('and', 'CC'), ('pretend', 'VB'), ('(', '-LRB-'), ('imagine', 'VB'), (')', '-RRB-'), ('that', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('problem', 'NN'), ('at', 'IN'), ('all', 'DT'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('storm', 'storm'), ('approaches', 'approach'), (',', ','), ('an', 'a'), ('ostrich', 'ostrich'), ('puts', 'put'), ('his', 'he'), ('head', 'head'), ('in', 'in'), ('the', 'the'), ('sand', 'sand'), ('(', '('), ('ground', 'ground'), (')', ')'), ('and', 'and'), ('pretend', 'pretend'), ('(', '('), ('imagine', 'imagine'), (')', ')'), ('that', 'that'), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('problem', 'problem'), ('at', 'at'), ('all', 'all'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'approaches'), 'mark'), (('storm', 'approaches'), 'nsubj'), (('approaches', 'puts'), 'advcl'), ((',', 'puts'), 'punct'), (('an', 'ostrich'), 'det'), (('ostrich', 'puts'), 'nsubj'), (('puts', 'root'), 'root'), (('his', 'head'), 'nmod:poss'), (('head', 'puts'), 'obj'), (('in', 'sand'), 'case'), (('the', 'sand'), 'det'), (('sand', 'puts'), 'obl'), (('(', 'ground'), 'punct'), (('ground', 'sand'), 'appos'), ((')', 'ground'), 'punct'), (('and', 'pretend'), 'cc'), (('pretend', 'puts'), 'conj'), (('(', 'imagine'), 'punct'), (('imagine', 'pretend'), 'parataxis'), ((')', 'imagine'), 'punct'), (('that', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'pretend'), 'ccomp'), (('no', 'problem'), 'det'), (('problem', 'is'), 'nsubj'), (('at', 'all'), 'case'), (('all', 'problem'), 'nmod'), (('.', 'puts'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 37 ===========================

 Ignore the deadlock and pretend that deadlock never occur. 

Tokens are: 
>> ['Ignore', 'the', 'deadlock', 'and', 'pretend', 'that', 'deadlock', 'never', 'occur', '.'] 

 UPOS tags are: 
>> [('Ignore', 'VERB'), ('the', 'DET'), ('deadlock', 'NOUN'), ('and', 'CCONJ'), ('pretend', 'VERB'), ('that', 'SCONJ'), ('deadlock', 'NOUN'), ('never', 'ADV'), ('occur', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Ignore', 'VB'), ('the', 'DT'), ('deadlock', 'NN'), ('and', 'CC'), ('pretend', 'VB'), ('that', 'IN'), ('deadlock', 'NN'), ('never', 'RB'), ('occur', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Ignore', 'ignore'), ('the', 'the'), ('deadlock', 'deadlock'), ('and', 'and'), ('pretend', 'pretend'), ('that', 'that'), ('deadlock', 'deadlock'), ('never', 'never'), ('occur', 'occur'), ('.', '.')] 

 Dependency tags are: 
>> [(('Ignore', 'root'), 'root'), (('the', 'deadlock'), 'det'), (('deadlock', 'Ignore'), 'obj'), (('and', 'pretend'), 'cc'), (('pretend', 'Ignore'), 'conj'), (('that', 'occur'), 'mark'), (('deadlock', 'occur'), 'nsubj'), (('never', 'occur'), 'advmod'), (('occur', 'pretend'), 'ccomp'), (('.', 'Ignore'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 38 ===========================

 Reasonable if  deadlocks occur very rarely  difficult to detect cost of prevention is high UNIX and Windows takes this approach      Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection and recovery Section - 4      Deadlock detection for single resource (RAG - Resource Allocation Graph) 

Tokens are: 
>> ['Reasonable', 'if', 'deadlocks', 'occur', 'very', 'rarely', 'difficult', 'to', 'detect', 'cost', 'of', 'prevention', 'is', 'high', 'UNIX', 'and', 'Windows', 'takes', 'this', 'approach', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'detection', 'and', 'recovery', 'Section', '-', '4', 'Deadlock', 'detection', 'for', 'single', 'resource', '(', 'RAG', '-', 'Resource', 'Allocation', 'Graph', ')'] 

 UPOS tags are: 
>> [('Reasonable', 'ADJ'), ('if', 'SCONJ'), ('deadlocks', 'NOUN'), ('occur', 'VERB'), ('very', 'ADV'), ('rarely', 'ADV'), ('difficult', 'ADJ'), ('to', 'PART'), ('detect', 'VERB'), ('cost', 'NOUN'), ('of', 'ADP'), ('prevention', 'NOUN'), ('is', 'AUX'), ('high', 'ADJ'), ('UNIX', 'PROPN'), ('and', 'CCONJ'), ('Windows', 'NOUN'), ('takes', 'VERB'), ('this', 'DET'), ('approach', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('and', 'CCONJ'), ('recovery', 'NOUN'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('4', 'NUM'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('RAG', 'NOUN'), ('-', 'PUNCT'), ('Resource', 'NOUN'), ('Allocation', 'NOUN'), ('Graph', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Reasonable', 'JJ'), ('if', 'IN'), ('deadlocks', 'NNS'), ('occur', 'VBP'), ('very', 'RB'), ('rarely', 'RB'), ('difficult', 'JJ'), ('to', 'TO'), ('detect', 'VB'), ('cost', 'NN'), ('of', 'IN'), ('prevention', 'NN'), ('is', 'VBZ'), ('high', 'JJ'), ('UNIX', 'NNP'), ('and', 'CC'), ('Windows', 'NNS'), ('takes', 'VBZ'), ('this', 'DT'), ('approach', 'NN'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('detection', 'NN'), ('and', 'CC'), ('recovery', 'NN'), ('Section', 'NN'), ('-', ','), ('4', 'CD'), ('Deadlock', 'NN'), ('detection', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN'), ('(', '-LRB-'), ('RAG', 'NN'), ('-', 'HYPH'), ('Resource', 'NN'), ('Allocation', 'NN'), ('Graph', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Reasonable', 'reasonable'), ('if', 'if'), ('deadlocks', 'deadlock'), ('occur', 'occur'), ('very', 'very'), ('rarely', 'rarely'), ('difficult', 'difficult'), ('to', 'to'), ('detect', 'detect'), ('cost', 'cost'), ('of', 'of'), ('prevention', 'prevention'), ('is', 'be'), ('high', 'high'), ('UNIX', 'UNIX'), ('and', 'and'), ('Windows', 'window'), ('takes', 'take'), ('this', 'this'), ('approach', 'approach'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('detection', 'detection'), ('and', 'and'), ('recovery', 'recovery'), ('Section', 'section'), ('-', '-'), ('4', '4'), ('Deadlock', 'deadlock'), ('detection', 'detection'), ('for', 'for'), ('single', 'single'), ('resource', 'resource'), ('(', '('), ('RAG', 'RAG'), ('-', '-'), ('Resource', 'resource'), ('Allocation', 'allocation'), ('Graph', 'graph'), (')', ')')] 

 Dependency tags are: 
>> [(('Reasonable', 'root'), 'root'), (('if', 'occur'), 'mark'), (('deadlocks', 'occur'), 'nsubj'), (('occur', 'Reasonable'), 'advcl'), (('very', 'rarely'), 'advmod'), (('rarely', 'difficult'), 'advmod'), (('difficult', 'occur'), 'xcomp'), (('to', 'detect'), 'mark'), (('detect', 'difficult'), 'xcomp'), (('cost', 'detect'), 'obj'), (('of', 'prevention'), 'case'), (('prevention', 'cost'), 'nmod'), (('is', 'UNIX'), 'cop'), (('high', 'UNIX'), 'amod'), (('UNIX', 'takes'), 'nsubj'), (('and', 'Windows'), 'cc'), (('Windows', 'UNIX'), 'conj'), (('takes', 'Reasonable'), 'parataxis'), (('this', 'approach'), 'det'), (('approach', 'takes'), 'obj'), (('Prof.', 'approach'), 'appos'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'takes'), 'obj'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'appos'), (('‹#›', 'detection'), 'compound'), (('Deadlock', 'detection'), 'compound'), (('detection', 'Unit'), 'appos'), (('and', 'Section'), 'cc'), (('recovery', 'Section'), 'compound'), (('Section', 'detection'), 'conj'), (('-', 'detection'), 'punct'), (('4', 'detection'), 'nummod'), (('Deadlock', 'detection'), 'compound'), (('detection', 'Prof.'), 'appos'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'detection'), 'nmod'), (('(', 'Graph'), 'punct'), (('RAG', 'Resource'), 'compound'), (('-', 'Resource'), 'punct'), (('Resource', 'Graph'), 'compound'), (('Allocation', 'Graph'), 'compound'), (('Graph', 'resource'), 'appos'), ((')', 'Graph'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 39 ===========================

 We are starting from node D. Empty list L = () 

Tokens are: 
>> ['We', 'are', 'starting', 'from', 'node', 'D.', 'Empty', 'list', 'L', '=', '(', ')'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('are', 'AUX'), ('starting', 'VERB'), ('from', 'ADP'), ('node', 'NOUN'), ('D.', 'PROPN'), ('Empty', 'ADJ'), ('list', 'NOUN'), ('L', 'PROPN'), ('=', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('are', 'VBP'), ('starting', 'VBG'), ('from', 'IN'), ('node', 'NN'), ('D.', 'NNP'), ('Empty', 'NNP'), ('list', 'NN'), ('L', 'NNP'), ('=', ','), ('(', '-LRB-'), (')', '-RRB-')] 

 Lemmas are: 
>> [('We', 'we'), ('are', 'be'), ('starting', 'start'), ('from', 'from'), ('node', 'node'), ('D.', 'D.'), ('Empty', 'empty'), ('list', 'list'), ('L', 'L'), ('=', '='), ('(', '('), (')', ')')] 

 Dependency tags are: 
>> [(('We', 'starting'), 'nsubj'), (('are', 'starting'), 'aux'), (('starting', 'root'), 'root'), (('from', 'list'), 'case'), (('node', 'list'), 'compound'), (('D.', 'list'), 'compound'), (('Empty', 'list'), 'amod'), (('list', 'starting'), 'obl'), (('L', 'list'), 'appos'), (('=', 'starting'), 'punct'), (('(', 'starting'), 'punct'), ((')', 'starting'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 Add current node so Empty list = (D). 

Tokens are: 
>> ['Add', 'current', 'node', 'so', 'Empty', 'list', '=', '(', 'D', ')', '.'] 

 UPOS tags are: 
>> [('Add', 'VERB'), ('current', 'ADJ'), ('node', 'NOUN'), ('so', 'ADV'), ('Empty', 'ADJ'), ('list', 'NOUN'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('D', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Add', 'VB'), ('current', 'JJ'), ('node', 'NN'), ('so', 'RB'), ('Empty', 'JJ'), ('list', 'NN'), ('=', ','), ('(', '-LRB-'), ('D', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Add', 'add'), ('current', 'current'), ('node', 'node'), ('so', 'so'), ('Empty', 'empty'), ('list', 'list'), ('=', '='), ('(', '('), ('D', 'D'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Add', 'root'), 'root'), (('current', 'node'), 'amod'), (('node', 'Add'), 'obj'), (('so', 'Empty'), 'advmod'), (('Empty', 'list'), 'amod'), (('list', 'Add'), 'obj'), (('=', 'Add'), 'punct'), (('(', 'D'), 'punct'), (('D', 'list'), 'appos'), ((')', 'D'), 'punct'), (('.', 'Add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 41 ===========================

 From this node there is one outgoing arc to T so add T to list. 

Tokens are: 
>> ['From', 'this', 'node', 'there', 'is', 'one', 'outgoing', 'arc', 'to', 'T', 'so', 'add', 'T', 'to', 'list', '.'] 

 UPOS tags are: 
>> [('From', 'ADP'), ('this', 'DET'), ('node', 'NOUN'), ('there', 'PRON'), ('is', 'VERB'), ('one', 'NUM'), ('outgoing', 'ADJ'), ('arc', 'NOUN'), ('to', 'ADP'), ('T', 'PROPN'), ('so', 'ADV'), ('add', 'VERB'), ('T', 'NOUN'), ('to', 'ADP'), ('list', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('From', 'IN'), ('this', 'DT'), ('node', 'NN'), ('there', 'EX'), ('is', 'VBZ'), ('one', 'CD'), ('outgoing', 'JJ'), ('arc', 'NN'), ('to', 'IN'), ('T', 'NNP'), ('so', 'RB'), ('add', 'VB'), ('T', 'NN'), ('to', 'IN'), ('list', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('From', 'from'), ('this', 'this'), ('node', 'node'), ('there', 'there'), ('is', 'be'), ('one', 'one'), ('outgoing', 'outgoing'), ('arc', 'arc'), ('to', 'to'), ('T', 'T'), ('so', 'so'), ('add', 'add'), ('T', 'T'), ('to', 'to'), ('list', 'list'), ('.', '.')] 

 Dependency tags are: 
>> [(('From', 'node'), 'case'), (('this', 'node'), 'det'), (('node', 'is'), 'obl'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('one', 'arc'), 'nummod'), (('outgoing', 'arc'), 'amod'), (('arc', 'is'), 'nsubj'), (('to', 'T'), 'case'), (('T', 'arc'), 'nmod'), (('so', 'add'), 'advmod'), (('add', 'is'), 'parataxis'), (('T', 'add'), 'obj'), (('to', 'list'), 'case'), (('list', 'add'), 'obl'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 42 ===========================

 So list become L = (D, T). 

Tokens are: 
>> ['So', 'list', 'become', 'L', '=', '(', 'D', ',', 'T', ')', '.'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('list', 'VERB'), ('become', 'VERB'), ('L', 'PROPN'), ('=', 'SYM'), ('(', 'PUNCT'), ('D', 'PROPN'), (',', 'PUNCT'), ('T', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('list', 'VB'), ('become', 'VB'), ('L', 'NNP'), ('=', 'SYM'), ('(', '-LRB-'), ('D', 'NNP'), (',', ','), ('T', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('list', 'list'), ('become', 'become'), ('L', 'L'), ('=', '='), ('(', '('), ('D', 'D'), (',', ','), ('T', 'T'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('So', 'list'), 'advmod'), (('list', 'root'), 'root'), (('become', 'list'), 'xcomp'), (('L', 'become'), 'xcomp'), (('=', 'become'), 'xcomp'), (('(', 'D'), 'punct'), (('D', '='), 'appos'), ((',', 'T'), 'punct'), (('T', 'D'), 'dep'), ((')', 'D'), 'punct'), (('.', 'list'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 43 ===========================

 Continue this step…. 

Tokens are: 
>> ['Continue', 'this', 'step', '….'] 

 UPOS tags are: 
>> [('Continue', 'VERB'), ('this', 'DET'), ('step', 'NOUN'), ('….', 'PUNCT')] 

 XPOS tags are: 
>> [('Continue', 'VB'), ('this', 'DT'), ('step', 'NN'), ('….', '.')] 

 Lemmas are: 
>> [('Continue', 'continue'), ('this', 'this'), ('step', 'step'), ('….', '..')] 

 Dependency tags are: 
>> [(('Continue', 'root'), 'root'), (('this', 'step'), 'det'), (('step', 'Continue'), 'obj'), (('….', 'Continue'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 44 ===========================

 so we get list as below 	L = (D, T, E)………… 

Tokens are: 
>> ['so', 'we', 'get', 'list', 'as', 'below', 'L', '=', '(', 'D', ',', 'T', ',', 'E', ')', '…', '……', '…'] 

 UPOS tags are: 
>> [('so', 'ADV'), ('we', 'PRON'), ('get', 'VERB'), ('list', 'NOUN'), ('as', 'ADP'), ('below', 'ADP'), ('L', 'PROPN'), ('=', 'SYM'), ('(', 'PUNCT'), ('D', 'PROPN'), (',', 'PUNCT'), ('T', 'PROPN'), (',', 'PUNCT'), ('E', 'PROPN'), (')', 'PUNCT'), ('…', 'PUNCT'), ('……', 'PUNCT'), ('…', 'PUNCT')] 

 XPOS tags are: 
>> [('so', 'RB'), ('we', 'PRP'), ('get', 'VBP'), ('list', 'NN'), ('as', 'IN'), ('below', 'IN'), ('L', 'NNP'), ('=', 'SYM'), ('(', '-LRB-'), ('D', 'NNP'), (',', ','), ('T', 'NNP'), (',', ','), ('E', 'NNP'), (')', '-RRB-'), ('…', ','), ('……', '.'), ('…', '.')] 

 Lemmas are: 
>> [('so', 'so'), ('we', 'we'), ('get', 'get'), ('list', 'list'), ('as', 'as'), ('below', 'below'), ('L', 'L'), ('=', '='), ('(', '('), ('D', 'D'), (',', ','), ('T', 'T'), (',', ','), ('E', 'E'), (')', ')'), ('…', '…'), ('……', '……'), ('…', '…')] 

 Dependency tags are: 
>> [(('so', 'get'), 'advmod'), (('we', 'get'), 'nsubj'), (('get', 'root'), 'root'), (('list', 'get'), 'obj'), (('as', '='), 'mark'), (('below', 'as'), 'fixed'), (('L', '='), 'compound'), (('=', 'get'), 'advcl'), (('(', 'D'), 'punct'), (('D', '='), 'appos'), ((',', 'T'), 'punct'), (('T', 'D'), 'conj'), ((',', 'E'), 'punct'), (('E', 'D'), 'conj'), ((')', 'D'), 'punct'), (('…', 'get'), 'punct'), (('……', 'get'), 'punct'), (('…', 'get'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 L = (D, T, E, V, G, U, D) 

Tokens are: 
>> ['L', '=', '(', 'D', ',', 'T', ',', 'E', ',', 'V', ',', 'G', ',', 'U', ',', 'D', ')'] 

 UPOS tags are: 
>> [('L', 'PROPN'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('D', 'PROPN'), (',', 'PUNCT'), ('T', 'PROPN'), (',', 'PUNCT'), ('E', 'PROPN'), (',', 'PUNCT'), ('V', 'PROPN'), (',', 'PUNCT'), ('G', 'PROPN'), (',', 'PUNCT'), ('U', 'PROPN'), (',', 'PUNCT'), ('D', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('L', 'NNP'), ('=', 'NFP'), ('(', '-LRB-'), ('D', 'NNP'), (',', ','), ('T', 'NNP'), (',', ','), ('E', 'NNP'), (',', ','), ('V', 'NNP'), (',', ','), ('G', 'NNP'), (',', ','), ('U', 'NNP'), (',', ','), ('D', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('L', 'L'), ('=', '='), ('(', '('), ('D', 'D'), (',', ','), ('T', 'T'), (',', ','), ('E', 'E'), (',', ','), ('V', 'V'), (',', ','), ('G', 'G'), (',', ','), ('U', 'U'), (',', ','), ('D', 'D'), (')', ')')] 

 Dependency tags are: 
>> [(('L', 'root'), 'root'), (('=', 'L'), 'punct'), (('(', 'D'), 'punct'), (('D', 'L'), 'appos'), ((',', 'T'), 'punct'), (('T', 'D'), 'conj'), ((',', 'E'), 'punct'), (('E', 'D'), 'conj'), ((',', 'V'), 'punct'), (('V', 'D'), 'conj'), ((',', 'G'), 'punct'), (('G', 'D'), 'conj'), ((',', 'U'), 'punct'), (('U', 'D'), 'conj'), ((',', 'D'), 'punct'), (('D', 'D'), 'conj'), ((')', 'D'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 46 ===========================

 In the above step in list the node D appears twice, so deadlock. 

Tokens are: 
>> ['In', 'the', 'above', 'step', 'in', 'list', 'the', 'node', 'D', 'appears', 'twice', ',', 'so', 'deadlock', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('above', 'ADJ'), ('step', 'NOUN'), ('in', 'ADP'), ('list', 'NOUN'), ('the', 'DET'), ('node', 'NOUN'), ('D', 'PROPN'), ('appears', 'VERB'), ('twice', 'ADV'), (',', 'PUNCT'), ('so', 'ADV'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('above', 'JJ'), ('step', 'NN'), ('in', 'IN'), ('list', 'NN'), ('the', 'DT'), ('node', 'NN'), ('D', 'NNP'), ('appears', 'VBZ'), ('twice', 'RB'), (',', ','), ('so', 'RB'), ('deadlock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('above', 'above'), ('step', 'step'), ('in', 'in'), ('list', 'list'), ('the', 'the'), ('node', 'node'), ('D', 'D'), ('appears', 'appear'), ('twice', 'twice'), (',', ','), ('so', 'so'), ('deadlock', 'deadlock'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'step'), 'case'), (('the', 'step'), 'det'), (('above', 'step'), 'amod'), (('step', 'appears'), 'obl'), (('in', 'list'), 'case'), (('list', 'step'), 'nmod'), (('the', 'node'), 'det'), (('node', 'appears'), 'nsubj'), (('D', 'node'), 'appos'), (('appears', 'root'), 'root'), (('twice', 'appears'), 'advmod'), ((',', 'deadlock'), 'punct'), (('so', 'deadlock'), 'advmod'), (('deadlock', 'appears'), 'parataxis'), (('.', 'appears'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 R A S C D T E B V U F G W  DEADLOCK    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for single resource (RAG - Resource Allocation Graph) 

Tokens are: 
>> ['R', 'A', 'S', 'C', 'D', 'T', 'E', 'B', 'V', 'U', 'F', 'G', 'W', 'DEADLOCK', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'detection', 'for', 'single', 'resource', '(', 'RAG', '-', 'Resource', 'Allocation', 'Graph', ')'] 

 UPOS tags are: 
>> [('R', 'PROPN'), ('A', 'PROPN'), ('S', 'PROPN'), ('C', 'PROPN'), ('D', 'PROPN'), ('T', 'PROPN'), ('E', 'PROPN'), ('B', 'PROPN'), ('V', 'PROPN'), ('U', 'PROPN'), ('F', 'PROPN'), ('G', 'PROPN'), ('W', 'PROPN'), ('DEADLOCK', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('RAG', 'NOUN'), ('-', 'PUNCT'), ('Resource', 'NOUN'), ('Allocation', 'NOUN'), ('Graph', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('R', 'NNP'), ('A', 'NNP'), ('S', 'NNP'), ('C', 'NNP'), ('D', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('B', 'NNP'), ('V', 'NNP'), ('U', 'NNP'), ('F', 'NNP'), ('G', 'NNP'), ('W', 'NNP'), ('DEADLOCK', 'NNP'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('detection', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN'), ('(', '-LRB-'), ('RAG', 'NN'), ('-', ':'), ('Resource', 'NN'), ('Allocation', 'NN'), ('Graph', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('R', 'R'), ('A', 'A'), ('S', 'S'), ('C', 'C'), ('D', 'D'), ('T', 'T'), ('E', 'E'), ('B', 'B'), ('V', 'V'), ('U', 'U'), ('F', 'F'), ('G', 'G'), ('W', 'W'), ('DEADLOCK', 'DEADLOCK'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('detection', 'detection'), ('for', 'for'), ('single', 'single'), ('resource', 'resource'), ('(', '('), ('RAG', 'RAG'), ('-', '-'), ('Resource', 'resource'), ('Allocation', 'allocation'), ('Graph', 'graph'), (')', ')')] 

 Dependency tags are: 
>> [(('R', 'root'), 'root'), (('A', 'R'), 'flat'), (('S', 'R'), 'flat'), (('C', 'D'), 'compound'), (('D', 'R'), 'flat'), (('T', 'R'), 'flat'), (('E', 'R'), 'flat'), (('B', 'U'), 'compound'), (('V', 'U'), 'compound'), (('U', 'R'), 'list'), (('F', 'U'), 'compound'), (('G', 'U'), 'compound'), (('W', 'Prof.'), 'compound'), (('DEADLOCK', 'Prof.'), 'compound'), (('Prof.', 'R'), 'list'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', '#'), 'compound'), (('#', 'R'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'R'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'R'), 'punct'), (('Deadlock', 'R'), 'list'), (('‹#›', 'detection'), 'compound'), (('Deadlock', 'detection'), 'compound'), (('detection', 'R'), 'list'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'detection'), 'nmod'), (('(', 'Graph'), 'punct'), (('RAG', 'Graph'), 'compound'), (('-', 'Graph'), 'punct'), (('Resource', 'Graph'), 'compound'), (('Allocation', 'Graph'), 'compound'), (('Graph', 'detection'), 'appos'), ((')', 'Graph'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 48 ===========================

 Algorithm for detecting deadlock for single resource 

Tokens are: 
>> ['Algorithm', 'for', 'detecting', 'deadlock', 'for', 'single', 'resource'] 

 UPOS tags are: 
>> [('Algorithm', 'NOUN'), ('for', 'SCONJ'), ('detecting', 'VERB'), ('deadlock', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN')] 

 XPOS tags are: 
>> [('Algorithm', 'NN'), ('for', 'IN'), ('detecting', 'VBG'), ('deadlock', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN')] 

 Lemmas are: 
>> [('Algorithm', 'algorithm'), ('for', 'for'), ('detecting', 'detect'), ('deadlock', 'deadlock'), ('for', 'for'), ('single', 'single'), ('resource', 'resource')] 

 Dependency tags are: 
>> [(('Algorithm', 'root'), 'root'), (('for', 'detecting'), 'mark'), (('detecting', 'Algorithm'), 'acl'), (('deadlock', 'detecting'), 'obj'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'detecting'), 'obl')]

 Named Entities are: 
>> []

========================== Sentence 49 ===========================

 For each node, N in the graph, perform the following five steps with N as the starting node. 

Tokens are: 
>> ['For', 'each', 'node', ',', 'N', 'in', 'the', 'graph', ',', 'perform', 'the', 'following', 'five', 'steps', 'with', 'N', 'as', 'the', 'starting', 'node', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('node', 'NOUN'), (',', 'PUNCT'), ('N', 'PROPN'), ('in', 'ADP'), ('the', 'DET'), ('graph', 'NOUN'), (',', 'PUNCT'), ('perform', 'VERB'), ('the', 'DET'), ('following', 'VERB'), ('five', 'NUM'), ('steps', 'NOUN'), ('with', 'ADP'), ('N', 'PROPN'), ('as', 'ADP'), ('the', 'DET'), ('starting', 'NOUN'), ('node', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('node', 'NN'), (',', ','), ('N', 'NNP'), ('in', 'IN'), ('the', 'DT'), ('graph', 'NN'), (',', ','), ('perform', 'VB'), ('the', 'DT'), ('following', 'VBG'), ('five', 'CD'), ('steps', 'NNS'), ('with', 'IN'), ('N', 'NNP'), ('as', 'IN'), ('the', 'DT'), ('starting', 'NN'), ('node', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('node', 'node'), (',', ','), ('N', 'N'), ('in', 'in'), ('the', 'the'), ('graph', 'graph'), (',', ','), ('perform', 'perform'), ('the', 'the'), ('following', 'follow'), ('five', 'five'), ('steps', 'step'), ('with', 'with'), ('N', 'N'), ('as', 'as'), ('the', 'the'), ('starting', 'starting'), ('node', 'node'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'node'), 'case'), (('each', 'node'), 'det'), (('node', 'perform'), 'obl'), ((',', 'perform'), 'punct'), (('N', 'perform'), 'nsubj'), (('in', 'graph'), 'case'), (('the', 'graph'), 'det'), (('graph', 'N'), 'nmod'), ((',', 'perform'), 'punct'), (('perform', 'root'), 'root'), (('the', 'steps'), 'det'), (('following', 'steps'), 'amod'), (('five', 'steps'), 'nummod'), (('steps', 'perform'), 'obj'), (('with', 'N'), 'case'), (('N', 'steps'), 'nmod'), (('as', 'node'), 'case'), (('the', 'node'), 'det'), (('starting', 'node'), 'compound'), (('node', 'perform'), 'obl'), (('.', 'perform'), 'punct')]

 Named Entities are: 
>> [('five', 'CARDINAL')]

========================== Sentence 50 ===========================

 Initialize L to the empty list, designate all arcs as unmarked. 

Tokens are: 
>> ['Initialize', 'L', 'to', 'the', 'empty', 'list', ',', 'designate', 'all', 'arcs', 'as', 'unmarked', '.'] 

 UPOS tags are: 
>> [('Initialize', 'VERB'), ('L', 'PROPN'), ('to', 'ADP'), ('the', 'DET'), ('empty', 'ADJ'), ('list', 'NOUN'), (',', 'PUNCT'), ('designate', 'VERB'), ('all', 'DET'), ('arcs', 'NOUN'), ('as', 'ADP'), ('unmarked', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Initialize', 'VB'), ('L', 'NNP'), ('to', 'IN'), ('the', 'DT'), ('empty', 'JJ'), ('list', 'NN'), (',', ','), ('designate', 'VB'), ('all', 'DT'), ('arcs', 'NNS'), ('as', 'IN'), ('unmarked', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Initialize', 'initialize'), ('L', 'L'), ('to', 'to'), ('the', 'the'), ('empty', 'empty'), ('list', 'list'), (',', ','), ('designate', 'designate'), ('all', 'all'), ('arcs', 'arc'), ('as', 'as'), ('unmarked', 'unmarked'), ('.', '.')] 

 Dependency tags are: 
>> [(('Initialize', 'root'), 'root'), (('L', 'Initialize'), 'obj'), (('to', 'list'), 'case'), (('the', 'list'), 'det'), (('empty', 'list'), 'amod'), (('list', 'Initialize'), 'obl'), ((',', 'designate'), 'punct'), (('designate', 'Initialize'), 'conj'), (('all', 'arcs'), 'det'), (('arcs', 'designate'), 'obj'), (('as', 'unmarked'), 'case'), (('unmarked', 'designate'), 'obl'), (('.', 'Initialize'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 51 ===========================

 Add current node to end of L, check to see if node now appears in L two times. 

Tokens are: 
>> ['Add', 'current', 'node', 'to', 'end', 'of', 'L', ',', 'check', 'to', 'see', 'if', 'node', 'now', 'appears', 'in', 'L', 'two', 'times', '.'] 

 UPOS tags are: 
>> [('Add', 'VERB'), ('current', 'ADJ'), ('node', 'NOUN'), ('to', 'ADP'), ('end', 'NOUN'), ('of', 'ADP'), ('L', 'PROPN'), (',', 'PUNCT'), ('check', 'VERB'), ('to', 'PART'), ('see', 'VERB'), ('if', 'SCONJ'), ('node', 'NOUN'), ('now', 'ADV'), ('appears', 'VERB'), ('in', 'ADP'), ('L', 'NOUN'), ('two', 'NUM'), ('times', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Add', 'VB'), ('current', 'JJ'), ('node', 'NN'), ('to', 'IN'), ('end', 'NN'), ('of', 'IN'), ('L', 'NNP'), (',', ','), ('check', 'VB'), ('to', 'TO'), ('see', 'VB'), ('if', 'IN'), ('node', 'NN'), ('now', 'RB'), ('appears', 'VBZ'), ('in', 'IN'), ('L', 'NN'), ('two', 'CD'), ('times', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Add', 'add'), ('current', 'current'), ('node', 'node'), ('to', 'to'), ('end', 'end'), ('of', 'of'), ('L', 'L'), (',', ','), ('check', 'check'), ('to', 'to'), ('see', 'see'), ('if', 'if'), ('node', 'node'), ('now', 'now'), ('appears', 'appear'), ('in', 'in'), ('L', 'L'), ('two', 'two'), ('times', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('Add', 'root'), 'root'), (('current', 'node'), 'amod'), (('node', 'Add'), 'obj'), (('to', 'end'), 'case'), (('end', 'Add'), 'obl'), (('of', 'L'), 'case'), (('L', 'end'), 'nmod'), ((',', 'check'), 'punct'), (('check', 'Add'), 'conj'), (('to', 'see'), 'mark'), (('see', 'check'), 'xcomp'), (('if', 'appears'), 'mark'), (('node', 'appears'), 'nsubj'), (('now', 'appears'), 'advmod'), (('appears', 'see'), 'advcl'), (('in', 'times'), 'case'), (('L', 'times'), 'compound'), (('two', 'times'), 'nummod'), (('times', 'appears'), 'obl'), (('.', 'Add'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 52 ===========================

 If it does, graph contains a cycle (listed in L), algorithm terminates. 

Tokens are: 
>> ['If', 'it', 'does', ',', 'graph', 'contains', 'a', 'cycle', '(', 'listed', 'in', 'L', ')', ',', 'algorithm', 'terminates', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('it', 'PRON'), ('does', 'VERB'), (',', 'PUNCT'), ('graph', 'NOUN'), ('contains', 'VERB'), ('a', 'DET'), ('cycle', 'NOUN'), ('(', 'PUNCT'), ('listed', 'VERB'), ('in', 'ADP'), ('L', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('algorithm', 'NOUN'), ('terminates', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('it', 'PRP'), ('does', 'VBZ'), (',', ','), ('graph', 'NN'), ('contains', 'VBZ'), ('a', 'DT'), ('cycle', 'NN'), ('(', '-LRB-'), ('listed', 'VBN'), ('in', 'IN'), ('L', 'NNP'), (')', '-RRB-'), (',', ','), ('algorithm', 'NN'), ('terminates', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('it', 'it'), ('does', 'do'), (',', ','), ('graph', 'graph'), ('contains', 'contain'), ('a', 'a'), ('cycle', 'cycle'), ('(', '('), ('listed', 'list'), ('in', 'in'), ('L', 'L'), (')', ')'), (',', ','), ('algorithm', 'algorithm'), ('terminates', 'terminate'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'does'), 'mark'), (('it', 'does'), 'nsubj'), (('does', 'contains'), 'advcl'), ((',', 'contains'), 'punct'), (('graph', 'contains'), 'nsubj'), (('contains', 'root'), 'root'), (('a', 'cycle'), 'det'), (('cycle', 'contains'), 'obj'), (('(', 'listed'), 'punct'), (('listed', 'cycle'), 'acl'), (('in', 'L'), 'case'), (('L', 'listed'), 'obl'), ((')', 'listed'), 'punct'), ((',', 'terminates'), 'punct'), (('algorithm', 'terminates'), 'nsubj'), (('terminates', 'contains'), 'parataxis'), (('.', 'contains'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 From given node, see if any unmarked outgoing arcs. 

Tokens are: 
>> ['From', 'given', 'node', ',', 'see', 'if', 'any', 'unmarked', 'outgoing', 'arcs', '.'] 

 UPOS tags are: 
>> [('From', 'ADP'), ('given', 'VERB'), ('node', 'NOUN'), (',', 'PUNCT'), ('see', 'VERB'), ('if', 'SCONJ'), ('any', 'DET'), ('unmarked', 'ADJ'), ('outgoing', 'ADJ'), ('arcs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('From', 'IN'), ('given', 'VBN'), ('node', 'NN'), (',', ','), ('see', 'VB'), ('if', 'IN'), ('any', 'DT'), ('unmarked', 'JJ'), ('outgoing', 'JJ'), ('arcs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('From', 'from'), ('given', 'give'), ('node', 'node'), (',', ','), ('see', 'see'), ('if', 'if'), ('any', 'any'), ('unmarked', 'unmarked'), ('outgoing', 'outgoing'), ('arcs', 'arc'), ('.', '.')] 

 Dependency tags are: 
>> [(('From', 'node'), 'case'), (('given', 'node'), 'amod'), (('node', 'see'), 'obl'), ((',', 'see'), 'punct'), (('see', 'root'), 'root'), (('if', 'arcs'), 'mark'), (('any', 'arcs'), 'det'), (('unmarked', 'arcs'), 'amod'), (('outgoing', 'arcs'), 'amod'), (('arcs', 'see'), 'advcl'), (('.', 'see'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 If so, go to step 4; if not, go to step 5. 

Tokens are: 
>> ['If', 'so', ',', 'go', 'to', 'step', '4', ';', 'if', 'not', ',', 'go', 'to', 'step', '5', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('so', 'ADV'), (',', 'PUNCT'), ('go', 'VERB'), ('to', 'ADP'), ('step', 'NOUN'), ('4', 'NUM'), (';', 'PUNCT'), ('if', 'SCONJ'), ('not', 'PART'), (',', 'PUNCT'), ('go', 'VERB'), ('to', 'ADP'), ('step', 'NOUN'), ('5', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('so', 'RB'), (',', ','), ('go', 'VB'), ('to', 'IN'), ('step', 'NN'), ('4', 'CD'), (';', ','), ('if', 'IN'), ('not', 'RB'), (',', ','), ('go', 'VB'), ('to', 'IN'), ('step', 'NN'), ('5', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('so', 'so'), (',', ','), ('go', 'go'), ('to', 'to'), ('step', 'step'), ('4', '4'), (';', ';'), ('if', 'if'), ('not', 'not'), (',', ','), ('go', 'go'), ('to', 'to'), ('step', 'step'), ('5', '5'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'so'), 'mark'), (('so', 'go'), 'advcl'), ((',', 'go'), 'punct'), (('go', 'root'), 'root'), (('to', 'step'), 'case'), (('step', 'go'), 'obl'), (('4', 'step'), 'nummod'), ((';', 'go'), 'punct'), (('if', 'not'), 'mark'), (('not', 'go'), 'advcl'), ((',', 'go'), 'punct'), (('go', 'go'), 'parataxis'), (('to', 'step'), 'case'), (('step', 'go'), 'obl'), (('5', 'step'), 'nummod'), (('.', 'go'), 'punct')]

 Named Entities are: 
>> [('4', 'CARDINAL'), ('5', 'CARDINAL')]

========================== Sentence 55 ===========================

 Pick an unmarked outgoing arc at random and mark it. 

Tokens are: 
>> ['Pick', 'an', 'unmarked', 'outgoing', 'arc', 'at', 'random', 'and', 'mark', 'it', '.'] 

 UPOS tags are: 
>> [('Pick', 'VERB'), ('an', 'DET'), ('unmarked', 'ADJ'), ('outgoing', 'ADJ'), ('arc', 'NOUN'), ('at', 'ADP'), ('random', 'ADJ'), ('and', 'CCONJ'), ('mark', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Pick', 'VB'), ('an', 'DT'), ('unmarked', 'JJ'), ('outgoing', 'JJ'), ('arc', 'NN'), ('at', 'IN'), ('random', 'JJ'), ('and', 'CC'), ('mark', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Pick', 'pick'), ('an', 'a'), ('unmarked', 'unmarked'), ('outgoing', 'outgoing'), ('arc', 'arc'), ('at', 'at'), ('random', 'random'), ('and', 'and'), ('mark', 'mark'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('Pick', 'root'), 'root'), (('an', 'arc'), 'det'), (('unmarked', 'arc'), 'amod'), (('outgoing', 'arc'), 'amod'), (('arc', 'Pick'), 'obj'), (('at', 'random'), 'case'), (('random', 'Pick'), 'obl'), (('and', 'mark'), 'cc'), (('mark', 'Pick'), 'conj'), (('it', 'mark'), 'obj'), (('.', 'Pick'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 56 ===========================

 Then follow it to the new current node and go to step 2. 

Tokens are: 
>> ['Then', 'follow', 'it', 'to', 'the', 'new', 'current', 'node', 'and', 'go', 'to', 'step', '2', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('follow', 'VERB'), ('it', 'PRON'), ('to', 'ADP'), ('the', 'DET'), ('new', 'ADJ'), ('current', 'ADJ'), ('node', 'NOUN'), ('and', 'CCONJ'), ('go', 'VERB'), ('to', 'ADP'), ('step', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('follow', 'VB'), ('it', 'PRP'), ('to', 'IN'), ('the', 'DT'), ('new', 'JJ'), ('current', 'JJ'), ('node', 'NN'), ('and', 'CC'), ('go', 'VB'), ('to', 'IN'), ('step', 'NN'), ('2', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('follow', 'follow'), ('it', 'it'), ('to', 'to'), ('the', 'the'), ('new', 'new'), ('current', 'current'), ('node', 'node'), ('and', 'and'), ('go', 'go'), ('to', 'to'), ('step', 'step'), ('2', '2'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'follow'), 'advmod'), (('follow', 'root'), 'root'), (('it', 'follow'), 'obj'), (('to', 'node'), 'case'), (('the', 'node'), 'det'), (('new', 'node'), 'amod'), (('current', 'node'), 'amod'), (('node', 'follow'), 'obl'), (('and', 'go'), 'cc'), (('go', 'follow'), 'conj'), (('to', 'step'), 'case'), (('step', 'go'), 'obl'), (('2', 'step'), 'nummod'), (('.', 'follow'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 57 ===========================

 If this is initial node, graph does not contain any cycles, algorithm terminates. 

Tokens are: 
>> ['If', 'this', 'is', 'initial', 'node', ',', 'graph', 'does', 'not', 'contain', 'any', 'cycles', ',', 'algorithm', 'terminates', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('this', 'PRON'), ('is', 'AUX'), ('initial', 'ADJ'), ('node', 'NOUN'), (',', 'PUNCT'), ('graph', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('contain', 'VERB'), ('any', 'DET'), ('cycles', 'NOUN'), (',', 'PUNCT'), ('algorithm', 'NOUN'), ('terminates', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('this', 'DT'), ('is', 'VBZ'), ('initial', 'JJ'), ('node', 'NN'), (',', ','), ('graph', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('contain', 'VB'), ('any', 'DT'), ('cycles', 'NNS'), (',', ','), ('algorithm', 'NN'), ('terminates', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('this', 'this'), ('is', 'be'), ('initial', 'initial'), ('node', 'node'), (',', ','), ('graph', 'graph'), ('does', 'do'), ('not', 'not'), ('contain', 'contain'), ('any', 'any'), ('cycles', 'cycle'), (',', ','), ('algorithm', 'algorithm'), ('terminates', 'terminate'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'node'), 'mark'), (('this', 'node'), 'nsubj'), (('is', 'node'), 'cop'), (('initial', 'node'), 'amod'), (('node', 'contain'), 'advcl'), ((',', 'contain'), 'punct'), (('graph', 'contain'), 'nsubj'), (('does', 'contain'), 'aux'), (('not', 'contain'), 'advmod'), (('contain', 'root'), 'root'), (('any', 'cycles'), 'det'), (('cycles', 'contain'), 'obj'), ((',', 'terminates'), 'punct'), (('algorithm', 'terminates'), 'nsubj'), (('terminates', 'contain'), 'parataxis'), (('.', 'contain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 Otherwise, dead end. 

Tokens are: 
>> ['Otherwise', ',', 'dead', 'end', '.'] 

 UPOS tags are: 
>> [('Otherwise', 'ADV'), (',', 'PUNCT'), ('dead', 'ADJ'), ('end', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Otherwise', 'RB'), (',', ','), ('dead', 'JJ'), ('end', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Otherwise', 'otherwise'), (',', ','), ('dead', 'dead'), ('end', 'end'), ('.', '.')] 

 Dependency tags are: 
>> [(('Otherwise', 'end'), 'advmod'), ((',', 'end'), 'punct'), (('dead', 'end'), 'amod'), (('end', 'root'), 'root'), (('.', 'end'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 Remove it, go back to previous node, make that one current node, go to step 2. 

Tokens are: 
>> ['Remove', 'it', ',', 'go', 'back', 'to', 'previous', 'node', ',', 'make', 'that', 'one', 'current', 'node', ',', 'go', 'to', 'step', '2', '.'] 

 UPOS tags are: 
>> [('Remove', 'VERB'), ('it', 'PRON'), (',', 'PUNCT'), ('go', 'VERB'), ('back', 'ADV'), ('to', 'ADP'), ('previous', 'ADJ'), ('node', 'NOUN'), (',', 'PUNCT'), ('make', 'VERB'), ('that', 'DET'), ('one', 'NUM'), ('current', 'ADJ'), ('node', 'NOUN'), (',', 'PUNCT'), ('go', 'VERB'), ('to', 'ADP'), ('step', 'NOUN'), ('2', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Remove', 'VB'), ('it', 'PRP'), (',', ','), ('go', 'VB'), ('back', 'RB'), ('to', 'IN'), ('previous', 'JJ'), ('node', 'NN'), (',', ','), ('make', 'VB'), ('that', 'DT'), ('one', 'CD'), ('current', 'JJ'), ('node', 'NN'), (',', ','), ('go', 'VB'), ('to', 'IN'), ('step', 'NN'), ('2', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Remove', 'remove'), ('it', 'it'), (',', ','), ('go', 'go'), ('back', 'back'), ('to', 'to'), ('previous', 'previous'), ('node', 'node'), (',', ','), ('make', 'make'), ('that', 'that'), ('one', 'one'), ('current', 'current'), ('node', 'node'), (',', ','), ('go', 'go'), ('to', 'to'), ('step', 'step'), ('2', '2'), ('.', '.')] 

 Dependency tags are: 
>> [(('Remove', 'root'), 'root'), (('it', 'Remove'), 'obj'), ((',', 'go'), 'punct'), (('go', 'Remove'), 'conj'), (('back', 'go'), 'advmod'), (('to', 'node'), 'case'), (('previous', 'node'), 'amod'), (('node', 'go'), 'obl'), ((',', 'make'), 'punct'), (('make', 'Remove'), 'conj'), (('that', 'node'), 'det'), (('one', 'node'), 'nummod'), (('current', 'node'), 'amod'), (('node', 'make'), 'obj'), ((',', 'go'), 'punct'), (('go', 'Remove'), 'conj'), (('to', 'step'), 'case'), (('step', 'go'), 'obl'), (('2', 'step'), 'nummod'), (('.', 'Remove'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL'), ('2', 'CARDINAL')]

========================== Sentence 60 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for multiple resources 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	1  	Tape Drives	Plotters	Scanners	CD Roms 	2	1	0	0  A = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	1	0 	P2	2	0	0	1 	P3	0	1	2	0  C = R = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	2	0	0	1 	P2	1	0	1	1 	P3	2	1	0	0  total no of each resource no of resources that are available (free) no of resources held by each process no of resources still needed by each process to proceed       T =    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for multiple resources 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	1  	Tape Drives	Plotters	Scanners	CD Roms 	0	0	0	0  A = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	1	0 	P2	2	0	0	1 	P3	2	2	2	0  C = R = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	2	0	0	1 	P2	1	0	1	1 	P3	2	1	0	0  total no of each resource no of resources that are available (free) no of resources held by each process no of resources still needed by each process to proceed       T =      Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for multiple resources 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	1  	Tape Drives	Plotters	Scanners	CD Roms 	2	2	2	0  A = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	1	0 	P2	2	0	0	1 	P3	0	0	0	0  C = R = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	2	0	0	1 	P2	1	0	1	1 	P3	2	1	0	0  total no of each resource no of resources that are available (free) no of resources held by each process no of resources still needed by each process to proceed      T =  DEADLOCK     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock recovery Recovery through pre-emption 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'detection', 'for', 'multiple', 'resources', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '4', '2', '3', '1', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '2', '1', '0', '0', 'A', '=', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '1', '0', 'P2', '2', '0', '0', '1', 'P3', '0', '1', '2', '0', 'C', '=', 'R', '=', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '2', '0', '0', '1', 'P2', '1', '0', '1', '1', 'P3', '2', '1', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'no', 'of', 'resources', 'that', 'are', 'available', '(', 'free', ')', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'T', '=', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'detection', 'for', 'multiple', 'resources', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '4', '2', '3', '1', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '0', '0', '0', '0', 'A', '=', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '1', '0', 'P2', '2', '0', '0', '1', 'P3', '2', '2', '2', '0', 'C', '=', 'R', '=', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '2', '0', '0', '1', 'P2', '1', '0', '1', '1', 'P3', '2', '1', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'no', 'of', 'resources', 'that', 'are', 'available', '(', 'free', ')', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'T', '=', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'detection', 'for', 'multiple', 'resources', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '4', '2', '3', '1', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '2', '2', '2', '0', 'A', '=', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '1', '0', 'P2', '2', '0', '0', '1', 'P3', '0', '0', '0', '0', 'C', '=', 'R', '=', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '2', '0', '0', '1', 'P2', '1', '0', '1', '1', 'P3', '2', '1', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'no', 'of', 'resources', 'that', 'are', 'available', '(', 'free', ')', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'T', '=', 'DEADLOCK', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'recovery', 'Recovery', 'through', 'pre-emption'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resources', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('4', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('1', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('2', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('A', 'PROPN'), ('=', 'SYM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P2', 'PROPN'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P3', 'PROPN'), ('0', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('C', 'PROPN'), ('=', 'SYM'), ('R', 'NUM'), ('=', 'SYM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P2', 'PROPN'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P3', 'PROPN'), ('2', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'ADV'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('T', 'PROPN'), ('=', 'SYM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resources', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('4', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('1', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('A', 'PROPN'), ('=', 'SYM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P3', 'NOUN'), ('2', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('R', 'NUM'), ('=', 'SYM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P2', 'NOUN'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P3', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('T', 'PROPN'), ('=', 'SYM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resources', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('4', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('1', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('2', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('A', 'SYM'), ('=', 'SYM'), ('Process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P3', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('R', 'NUM'), ('=', 'SYM'), ('Process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P2', 'NOUN'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P3', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('T', 'NOUN'), ('=', 'SYM'), ('DEADLOCK', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('recovery', 'NOUN'), ('Recovery', 'NOUN'), ('through', 'ADP'), ('pre-emption', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('detection', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resources', 'NNS'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('4', 'CD'), ('2', 'CD'), ('3', 'CD'), ('1', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('2', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('A', 'NNP'), ('=', 'SYM'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P2', 'NNP'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P3', 'NNP'), ('0', 'CD'), ('1', 'CD'), ('2', 'CD'), ('0', 'CD'), ('C', 'NNP'), ('=', 'SYM'), ('R', 'CD'), ('=', 'SYM'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P2', 'NNP'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P3', 'NNP'), ('2', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'RB'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('T', 'NNP'), ('=', 'SYM'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('detection', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resources', 'NNS'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('4', 'CD'), ('2', 'CD'), ('3', 'CD'), ('1', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('A', 'NNP'), ('=', 'SYM'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P2', 'NNS'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P3', 'NN'), ('2', 'CD'), ('2', 'CD'), ('2', 'CD'), ('0', 'CD'), ('C', 'NNS'), ('=', 'SYM'), ('R', 'CD'), ('=', 'SYM'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P2', 'NNS'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P3', 'NN'), ('2', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('T', 'NNP'), ('=', 'SYM'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('detection', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resources', 'NNS'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('4', 'CD'), ('2', 'CD'), ('3', 'CD'), ('1', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('2', 'CD'), ('2', 'CD'), ('2', 'CD'), ('0', 'CD'), ('A', 'SYM'), ('=', 'SYM'), ('Process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P3', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('C', 'NNS'), ('=', 'SYM'), ('R', 'CD'), ('=', 'SYM'), ('Process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P2', 'NN'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P3', 'NN'), ('2', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('T', 'NN'), ('=', 'SYM'), ('DEADLOCK', 'NN'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('recovery', 'NN'), ('Recovery', 'NN'), ('through', 'IN'), ('pre-emption', 'NN')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('detection', 'detection'), ('for', 'for'), ('multiple', 'multiple'), ('resources', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('4', '4'), ('2', '2'), ('3', '3'), ('1', '1'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('2', '2'), ('1', '1'), ('0', '0'), ('0', '0'), ('A', 'A'), ('=', '='), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('1', '1'), ('0', '0'), ('P2', 'P2'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('P3', 'P3'), ('0', '0'), ('1', '1'), ('2', '2'), ('0', '0'), ('C', 'C'), ('=', '='), ('R', 'R'), ('=', '='), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('P2', 'P2'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('P3', 'P3'), ('2', '2'), ('1', '1'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('that', 'that'), ('are', 'be'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('T', 'T'), ('=', '='), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('detection', 'detection'), ('for', 'for'), ('multiple', 'multiple'), ('resources', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('4', '4'), ('2', '2'), ('3', '3'), ('1', '1'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('A', 'A'), ('=', '='), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('1', '1'), ('0', '0'), ('P2', 'p2'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('P3', 'p3'), ('2', '2'), ('2', '2'), ('2', '2'), ('0', '0'), ('C', 'c'), ('=', '='), ('R', 'R'), ('=', '='), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('P2', 'p2'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('P3', 'p3'), ('2', '2'), ('1', '1'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('that', 'that'), ('are', 'be'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('T', 'T'), ('=', '='), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('detection', 'detection'), ('for', 'for'), ('multiple', 'multiple'), ('resources', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('4', '4'), ('2', '2'), ('3', '3'), ('1', '1'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('2', '2'), ('2', '2'), ('2', '2'), ('0', '0'), ('A', 'a'), ('=', '='), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('1', '1'), ('0', '0'), ('P2', 'p2'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('P3', 'p3'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('C', 'c'), ('=', '='), ('R', 'R'), ('=', '='), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('P2', 'p2'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('P3', 'p3'), ('2', '2'), ('1', '1'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('that', 'that'), ('are', 'be'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('T', 'T'), ('=', '='), ('DEADLOCK', 'deadlock'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('recovery', 'recovery'), ('Recovery', 'recovery'), ('through', 'through'), ('pre-emption', 'pre-emption')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', '#'), 'flat'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'conj'), (('5', 'Unit'), 'dep'), (('–', 'Deadlock'), 'case'), (('Deadlock', '5'), 'nmod'), (('‹#›', 'Deadlock'), 'compound'), (('Deadlock', 'detection'), 'compound'), (('detection', 'Prof.'), 'appos'), (('for', 'resources'), 'case'), (('multiple', 'resources'), 'amod'), (('resources', 'detection'), 'nmod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'resources'), 'conj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Prof.'), 'conj'), (('4', 'Roms'), 'dep'), (('2', 'Roms'), 'dep'), (('3', 'Roms'), 'dep'), (('1', 'Drives'), 'dep'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Prof.'), 'conj'), (('2', '1'), 'flat'), (('1', 'Roms'), 'dep'), (('0', '0'), 'compound'), (('0', '1'), 'flat'), (('A', '='), 'nsubj'), (('=', 'Prof.'), 'conj'), (('Process', '='), 'obj'), (('Tape', 'Drives'), 'compound'), (('Drives', '='), 'obj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'conj'), (('P1', 'Roms'), 'dep'), (('0', 'P1'), 'dep'), (('0', 'P1'), 'dep'), (('1', 'P2'), 'dep'), (('0', 'P2'), 'dep'), (('P2', 'Prof.'), 'conj'), (('2', 'P2'), 'dep'), (('0', 'P2'), 'dep'), (('0', 'P3'), 'dep'), (('1', 'P3'), 'dep'), (('P3', 'Prof.'), 'conj'), (('0', '1'), 'flat'), (('1', 'P3'), 'dep'), (('2', '1'), 'flat'), (('0', '1'), 'flat'), (('C', '='), 'nsubj'), (('=', 'Prof.'), 'conj'), (('R', '='), 'obj'), (('=', '='), 'ccomp'), (('Process', '='), 'obj'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Process'), 'conj'), (('P1', 'Roms'), 'compound'), (('2', 'P1'), 'dep'), (('0', '0'), 'compound'), (('0', 'P2'), 'dep'), (('1', '1'), 'flat'), (('P2', 'Prof.'), 'conj'), (('1', 'P2'), 'dep'), (('0', '1'), 'flat'), (('1', '1'), 'flat'), (('1', 'P3'), 'dep'), (('P3', 'Prof.'), 'conj'), (('2', '1'), 'compound'), (('1', 'Prof.'), 'dep'), (('0', 'Prof.'), 'dep'), (('0', 'Prof.'), 'dep'), (('total', 'no'), 'advmod'), (('no', 'resource'), 'advmod'), (('of', 'resource'), 'case'), (('each', 'resource'), 'det'), (('resource', 'Prof.'), 'conj'), (('no', 'resources'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'resource'), 'nmod'), (('that', 'available'), 'nsubj'), (('are', 'available'), 'cop'), (('available', 'resources'), 'acl:relcl'), (('(', 'free'), 'punct'), (('free', 'available'), 'appos'), ((')', 'free'), 'punct'), (('no', 'resources'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'available'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('no', 'needed'), 'nsubj'), (('of', 'resources'), 'case'), (('resources', 'process'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('T', 'proceed'), 'obj'), (('=', 'proceed'), 'dep'), (('Prof.', '='), 'obj'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', 'Prof.'), 'nmod:tmod'), (('(', 'OS'), 'punct'), (('OS', 'detection'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'conj'), (('5', 'detection'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'detection'), 'nmod'), (('‹#›', 'Deadlock'), 'compound'), (('Deadlock', 'detection'), 'compound'), (('detection', 'Unit'), 'conj'), (('for', 'resources'), 'case'), (('multiple', 'resources'), 'amod'), (('resources', 'detection'), 'nmod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'detection'), 'dep'), (('4', 'Roms'), 'dep'), (('2', '3'), 'compound'), (('3', 'Drives'), 'nummod'), (('1', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', '='), 'dep'), (('A', '='), 'nsubj'), (('=', 'Roms'), 'parataxis'), (('Process', '='), 'obj'), (('Tape', 'Drives'), 'compound'), (('Drives', '='), 'obj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', '='), 'dep'), (('P1', '='), 'dep'), (('0', '1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P1'), 'compound'), (('2', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P3'), 'nummod'), (('1', 'P3'), 'nummod'), (('P3', 'P2'), 'compound'), (('2', '2'), 'compound'), (('2', '2'), 'compound'), (('2', 'C'), 'nummod'), (('0', 'C'), 'nummod'), (('C', '='), 'nsubj'), (('=', 'P3'), 'parataxis'), (('R', '='), 'obj'), (('=', '='), 'parataxis'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', '='), 'obj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', '='), 'obj'), (('P1', '2'), 'compound'), (('2', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('1', 'P2'), 'nummod'), (('P2', 'Roms'), 'compound'), (('1', 'P2'), 'nummod'), (('0', '1'), 'compound'), (('1', '1'), 'nmod'), (('1', 'P3'), 'compound'), (('P3', '1'), 'compound'), (('2', '1'), 'compound'), (('1', 'P3'), 'nummod'), (('0', '1'), 'compound'), (('0', '1'), 'compound'), (('total', 'no'), 'amod'), (('no', '0'), 'det'), (('of', 'resource'), 'case'), (('each', 'resource'), 'det'), (('resource', 'no'), 'nmod'), (('no', 'resources'), 'det'), (('of', 'resources'), 'case'), (('resources', 'resource'), 'nmod'), (('that', 'available'), 'nsubj'), (('are', 'available'), 'cop'), (('available', 'resources'), 'acl:relcl'), (('(', 'free'), 'punct'), (('free', 'available'), 'appos'), ((')', 'free'), 'punct'), (('no', 'resources'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'available'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('no', 'needed'), 'nsubj'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'process'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('T', 'proceed'), 'obj'), (('=', 'proceed'), 'dep'), (('Prof.', '='), 'obj'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Prof.'), 'parataxis'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'conj'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'detection'), 'nmod'), (('‹#›', 'detection'), 'compound'), (('Deadlock', 'detection'), 'compound'), (('detection', 'Unit'), 'nmod'), (('for', 'resources'), 'case'), (('multiple', 'resources'), 'amod'), (('resources', 'detection'), 'nmod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'detection'), 'compound'), (('4', 'Roms'), 'nummod'), (('2', 'Roms'), 'nummod'), (('3', 'Roms'), 'nummod'), (('1', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'conj'), (('2', 'Roms'), 'nummod'), (('2', 'Roms'), 'nummod'), (('2', '2'), 'compound'), (('0', '2'), 'compound'), (('A', '='), 'nsubj'), (('=', 'Roms'), 'parataxis'), (('Process', '='), 'obj'), (('Tape', 'Drives'), 'compound'), (('Drives', '='), 'obj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', '='), 'obj'), (('P1', '='), 'dep'), (('0', 'P1'), 'nummod'), (('0', 'P1'), 'dep'), (('1', 'P1'), 'dep'), (('0', '1'), 'compound'), (('P2', 'P1'), 'compound'), (('2', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('1', 'P2'), 'nummod'), (('P3', 'P2'), 'compound'), (('0', '0'), 'compound'), (('0', 'C'), 'nummod'), (('0', 'C'), 'nummod'), (('0', 'C'), 'nummod'), (('C', 'P3'), 'compound'), (('=', 'C'), 'parataxis'), (('R', '='), 'obj'), (('=', '='), 'parataxis'), (('Process', '='), 'obj'), (('Tape', 'Drives'), 'compound'), (('Drives', '='), 'obj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', '='), 'obj'), (('P1', 'Roms'), 'compound'), (('2', 'P1'), 'nummod'), (('0', 'P1'), 'nummod'), (('0', 'P1'), 'nummod'), (('1', '0'), 'compound'), (('P2', '0'), 'compound'), (('1', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('1', 'P2'), 'nummod'), (('1', '1'), 'compound'), (('P3', '1'), 'compound'), (('2', '1'), 'compound'), (('1', 'P3'), 'nummod'), (('0', '1'), 'compound'), (('0', '1'), 'conj'), (('total', 'no'), 'amod'), (('no', 'P3'), 'det'), (('of', 'resource'), 'case'), (('each', 'resource'), 'det'), (('resource', 'no'), 'nmod'), (('no', 'resource'), 'det'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('that', 'available'), 'nsubj'), (('are', 'available'), 'cop'), (('available', 'resources'), 'acl:relcl'), (('(', 'free'), 'punct'), (('free', 'available'), 'appos'), ((')', 'free'), 'punct'), (('no', 'resources'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'available'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('no', 'needed'), 'nsubj'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'process'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('T', '='), 'obj'), (('=', 'proceed'), 'ccomp'), (('DEADLOCK', '='), 'obj'), (('Prof.', 'DEADLOCK'), 'flat'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Prof.'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'appos'), (('‹#›', 'Recovery'), 'compound'), (('Deadlock', 'Recovery'), 'compound'), (('recovery', 'Recovery'), 'compound'), (('Recovery', '='), 'obj'), (('through', 'pre-emption'), 'case'), (('pre-emption', 'Recovery'), 'nmod')]

 Named Entities are: 


========================== Sentence 61 ===========================

 In this method resources are temporarily taken away from its current owner and give it to another process. 

Tokens are: 
>> ['In', 'this', 'method', 'resources', 'are', 'temporarily', 'taken', 'away', 'from', 'its', 'current', 'owner', 'and', 'give', 'it', 'to', 'another', 'process', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('method', 'NOUN'), ('resources', 'NOUN'), ('are', 'AUX'), ('temporarily', 'ADV'), ('taken', 'VERB'), ('away', 'ADV'), ('from', 'ADP'), ('its', 'PRON'), ('current', 'ADJ'), ('owner', 'NOUN'), ('and', 'CCONJ'), ('give', 'VERB'), ('it', 'PRON'), ('to', 'ADP'), ('another', 'DET'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('method', 'NN'), ('resources', 'NNS'), ('are', 'VBP'), ('temporarily', 'RB'), ('taken', 'VBN'), ('away', 'RB'), ('from', 'IN'), ('its', 'PRP$'), ('current', 'JJ'), ('owner', 'NN'), ('and', 'CC'), ('give', 'VB'), ('it', 'PRP'), ('to', 'IN'), ('another', 'DT'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('method', 'method'), ('resources', 'resource'), ('are', 'be'), ('temporarily', 'temporarily'), ('taken', 'take'), ('away', 'away'), ('from', 'from'), ('its', 'its'), ('current', 'current'), ('owner', 'owner'), ('and', 'and'), ('give', 'give'), ('it', 'it'), ('to', 'to'), ('another', 'another'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'method'), 'case'), (('this', 'method'), 'det'), (('method', 'taken'), 'obl'), (('resources', 'taken'), 'nsubj:pass'), (('are', 'taken'), 'aux:pass'), (('temporarily', 'taken'), 'advmod'), (('taken', 'root'), 'root'), (('away', 'taken'), 'advmod'), (('from', 'owner'), 'case'), (('its', 'owner'), 'nmod:poss'), (('current', 'owner'), 'amod'), (('owner', 'taken'), 'obl'), (('and', 'give'), 'cc'), (('give', 'taken'), 'conj'), (('it', 'give'), 'obj'), (('to', 'process'), 'case'), (('another', 'process'), 'det'), (('process', 'give'), 'obl'), (('.', 'taken'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 62 ===========================

 The ability to take a resource away from a process, have another process use it, and then give it back without the process noticing it is highly dependent on the nature of the resource. 

Tokens are: 
>> ['The', 'ability', 'to', 'take', 'a', 'resource', 'away', 'from', 'a', 'process', ',', 'have', 'another', 'process', 'use', 'it', ',', 'and', 'then', 'give', 'it', 'back', 'without', 'the', 'process', 'noticing', 'it', 'is', 'highly', 'dependent', 'on', 'the', 'nature', 'of', 'the', 'resource', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ability', 'NOUN'), ('to', 'PART'), ('take', 'VERB'), ('a', 'DET'), ('resource', 'NOUN'), ('away', 'ADV'), ('from', 'ADP'), ('a', 'DET'), ('process', 'NOUN'), (',', 'PUNCT'), ('have', 'VERB'), ('another', 'DET'), ('process', 'NOUN'), ('use', 'VERB'), ('it', 'PRON'), (',', 'PUNCT'), ('and', 'CCONJ'), ('then', 'ADV'), ('give', 'VERB'), ('it', 'PRON'), ('back', 'ADV'), ('without', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('noticing', 'VERB'), ('it', 'PRON'), ('is', 'AUX'), ('highly', 'ADV'), ('dependent', 'ADJ'), ('on', 'ADP'), ('the', 'DET'), ('nature', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('resource', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ability', 'NN'), ('to', 'TO'), ('take', 'VB'), ('a', 'DT'), ('resource', 'NN'), ('away', 'RB'), ('from', 'IN'), ('a', 'DT'), ('process', 'NN'), (',', ','), ('have', 'VB'), ('another', 'DT'), ('process', 'NN'), ('use', 'VB'), ('it', 'PRP'), (',', ','), ('and', 'CC'), ('then', 'RB'), ('give', 'VB'), ('it', 'PRP'), ('back', 'RB'), ('without', 'IN'), ('the', 'DT'), ('process', 'NN'), ('noticing', 'VBG'), ('it', 'PRP'), ('is', 'VBZ'), ('highly', 'RB'), ('dependent', 'JJ'), ('on', 'IN'), ('the', 'DT'), ('nature', 'NN'), ('of', 'IN'), ('the', 'DT'), ('resource', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ability', 'ability'), ('to', 'to'), ('take', 'take'), ('a', 'a'), ('resource', 'resource'), ('away', 'away'), ('from', 'from'), ('a', 'a'), ('process', 'process'), (',', ','), ('have', 'have'), ('another', 'another'), ('process', 'process'), ('use', 'use'), ('it', 'it'), (',', ','), ('and', 'and'), ('then', 'then'), ('give', 'give'), ('it', 'it'), ('back', 'back'), ('without', 'without'), ('the', 'the'), ('process', 'process'), ('noticing', 'notice'), ('it', 'it'), ('is', 'be'), ('highly', 'highly'), ('dependent', 'dependent'), ('on', 'on'), ('the', 'the'), ('nature', 'nature'), ('of', 'of'), ('the', 'the'), ('resource', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'ability'), 'det'), (('ability', 'have'), 'nsubj'), (('to', 'take'), 'mark'), (('take', 'ability'), 'acl'), (('a', 'resource'), 'det'), (('resource', 'take'), 'obj'), (('away', 'take'), 'advmod'), (('from', 'process'), 'case'), (('a', 'process'), 'det'), (('process', 'away'), 'obl'), ((',', 'ability'), 'punct'), (('have', 'root'), 'root'), (('another', 'process'), 'det'), (('process', 'have'), 'obj'), (('use', 'have'), 'xcomp'), (('it', 'use'), 'obj'), ((',', 'give'), 'punct'), (('and', 'give'), 'cc'), (('then', 'give'), 'advmod'), (('give', 'have'), 'conj'), (('it', 'give'), 'obj'), (('back', 'give'), 'advmod'), (('without', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'give'), 'obl'), (('noticing', 'process'), 'acl'), (('it', 'dependent'), 'nsubj'), (('is', 'dependent'), 'cop'), (('highly', 'dependent'), 'advmod'), (('dependent', 'noticing'), 'ccomp'), (('on', 'nature'), 'case'), (('the', 'nature'), 'det'), (('nature', 'dependent'), 'obl'), (('of', 'resource'), 'case'), (('the', 'resource'), 'det'), (('resource', 'nature'), 'nmod'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 Recovering this way is frequently difficult or impossible. 

Tokens are: 
>> ['Recovering', 'this', 'way', 'is', 'frequently', 'difficult', 'or', 'impossible', '.'] 

 UPOS tags are: 
>> [('Recovering', 'VERB'), ('this', 'DET'), ('way', 'NOUN'), ('is', 'AUX'), ('frequently', 'ADV'), ('difficult', 'ADJ'), ('or', 'CCONJ'), ('impossible', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recovering', 'VBG'), ('this', 'DT'), ('way', 'NN'), ('is', 'VBZ'), ('frequently', 'RB'), ('difficult', 'JJ'), ('or', 'CC'), ('impossible', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Recovering', 'recover'), ('this', 'this'), ('way', 'way'), ('is', 'be'), ('frequently', 'frequently'), ('difficult', 'difficult'), ('or', 'or'), ('impossible', 'impossible'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recovering', 'difficult'), 'csubj'), (('this', 'way'), 'det'), (('way', 'Recovering'), 'obj'), (('is', 'difficult'), 'cop'), (('frequently', 'difficult'), 'advmod'), (('difficult', 'root'), 'root'), (('or', 'impossible'), 'cc'), (('impossible', 'difficult'), 'conj'), (('.', 'difficult'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 64 ===========================

 P1 P2 R1 R2 Hold Hold Request A First Checkpoints Second Checkpoints A A F1 F2 R B R  A Recovery through rollback PCB (Process Control Block) and resource state are periodically saved at “checkpoint”. 

Tokens are: 
>> ['P1', 'P2', 'R1', 'R2', 'Hold', 'Hold', 'Request', 'A', 'First', 'Checkpoints', 'Second', 'Checkpoints', 'A', 'A', 'F1', 'F2', 'R', 'B', 'R', 'A', 'Recovery', 'through', 'rollback', 'PCB', '(', 'Process', 'Control', 'Block', ')', 'and', 'resource', 'state', 'are', 'periodically', 'saved', 'at', '“', 'checkpoint', '”', '.'] 

 UPOS tags are: 
>> [('P1', 'PROPN'), ('P2', 'PROPN'), ('R1', 'PROPN'), ('R2', 'PROPN'), ('Hold', 'NOUN'), ('Hold', 'NOUN'), ('Request', 'NOUN'), ('A', 'DET'), ('First', 'ADJ'), ('Checkpoints', 'PROPN'), ('Second', 'ADJ'), ('Checkpoints', 'PROPN'), ('A', 'DET'), ('A', 'DET'), ('F1', 'PROPN'), ('F2', 'PROPN'), ('R', 'PROPN'), ('B', 'NOUN'), ('R', 'PROPN'), ('A', 'DET'), ('Recovery', 'NOUN'), ('through', 'ADP'), ('rollback', 'NOUN'), ('PCB', 'PROPN'), ('(', 'PUNCT'), ('Process', 'PROPN'), ('Control', 'PROPN'), ('Block', 'PROPN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('resource', 'NOUN'), ('state', 'NOUN'), ('are', 'AUX'), ('periodically', 'ADV'), ('saved', 'VERB'), ('at', 'ADP'), ('“', 'PUNCT'), ('checkpoint', 'NOUN'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('P1', 'NNP'), ('P2', 'NNP'), ('R1', 'NNP'), ('R2', 'NNP'), ('Hold', 'NN'), ('Hold', 'NN'), ('Request', 'NN'), ('A', 'DT'), ('First', 'JJ'), ('Checkpoints', 'NNPS'), ('Second', 'JJ'), ('Checkpoints', 'NNPS'), ('A', 'DT'), ('A', 'DT'), ('F1', 'NNP'), ('F2', 'NNP'), ('R', 'NNP'), ('B', 'NN'), ('R', 'NNP'), ('A', 'DT'), ('Recovery', 'NN'), ('through', 'IN'), ('rollback', 'NN'), ('PCB', 'NNP'), ('(', '-LRB-'), ('Process', 'NNP'), ('Control', 'NNP'), ('Block', 'NNP'), (')', '-RRB-'), ('and', 'CC'), ('resource', 'NN'), ('state', 'NN'), ('are', 'VBP'), ('periodically', 'RB'), ('saved', 'VBN'), ('at', 'IN'), ('“', '``'), ('checkpoint', 'NN'), ('”', "''"), ('.', '.')] 

 Lemmas are: 
>> [('P1', 'P1'), ('P2', 'P2'), ('R1', 'R1'), ('R2', 'R2'), ('Hold', 'hold'), ('Hold', 'hold'), ('Request', 'request'), ('A', 'a'), ('First', 'first'), ('Checkpoints', 'Checkpoints'), ('Second', 'second'), ('Checkpoints', 'Checkpoints'), ('A', 'a'), ('A', 'a'), ('F1', 'F1'), ('F2', 'F2'), ('R', 'R'), ('B', 'b'), ('R', 'R'), ('A', 'a'), ('Recovery', 'recovery'), ('through', 'through'), ('rollback', 'rollback'), ('PCB', 'PCB'), ('(', '('), ('Process', 'process'), ('Control', 'Control'), ('Block', 'Block'), (')', ')'), ('and', 'and'), ('resource', 'resource'), ('state', 'state'), ('are', 'be'), ('periodically', 'periodically'), ('saved', 'save'), ('at', 'at'), ('“', "''"), ('checkpoint', 'checkpoint'), ('”', "''"), ('.', '.')] 

 Dependency tags are: 
>> [(('P1', 'R1'), 'compound'), (('P2', 'R1'), 'compound'), (('R1', 'R2'), 'compound'), (('R2', 'Request'), 'compound'), (('Hold', 'Request'), 'compound'), (('Hold', 'Request'), 'compound'), (('Request', 'saved'), 'nsubj:pass'), (('A', 'Checkpoints'), 'det'), (('First', 'Checkpoints'), 'amod'), (('Checkpoints', 'Checkpoints'), 'compound'), (('Second', 'Checkpoints'), 'amod'), (('Checkpoints', 'Request'), 'appos'), (('A', 'R'), 'det'), (('A', 'R'), 'det'), (('F1', 'R'), 'compound'), (('F2', 'R'), 'compound'), (('R', 'R'), 'compound'), (('B', 'R'), 'compound'), (('R', 'Checkpoints'), 'appos'), (('A', 'Recovery'), 'det'), (('Recovery', 'Checkpoints'), 'appos'), (('through', 'PCB'), 'case'), (('rollback', 'PCB'), 'compound'), (('PCB', 'Recovery'), 'nmod'), (('(', 'Block'), 'punct'), (('Process', 'Block'), 'compound'), (('Control', 'Block'), 'compound'), (('Block', 'PCB'), 'appos'), ((')', 'Block'), 'punct'), (('and', 'state'), 'cc'), (('resource', 'state'), 'compound'), (('state', 'PCB'), 'conj'), (('are', 'saved'), 'aux:pass'), (('periodically', 'saved'), 'advmod'), (('saved', 'root'), 'root'), (('at', 'checkpoint'), 'case'), (('“', 'checkpoint'), 'punct'), (('checkpoint', 'saved'), 'obl'), (('”', 'checkpoint'), 'punct'), (('.', 'saved'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 65 ===========================

 When deadlock is detected, rollback the preempted process up to the previous safe state before it acquired that resource. 

Tokens are: 
>> ['When', 'deadlock', 'is', 'detected', ',', 'rollback', 'the', 'preempted', 'process', 'up', 'to', 'the', 'previous', 'safe', 'state', 'before', 'it', 'acquired', 'that', 'resource', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('deadlock', 'NOUN'), ('is', 'AUX'), ('detected', 'VERB'), (',', 'PUNCT'), ('rollback', 'VERB'), ('the', 'DET'), ('preempted', 'VERB'), ('process', 'NOUN'), ('up', 'ADP'), ('to', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('safe', 'ADJ'), ('state', 'NOUN'), ('before', 'SCONJ'), ('it', 'PRON'), ('acquired', 'VERB'), ('that', 'DET'), ('resource', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('deadlock', 'NN'), ('is', 'VBZ'), ('detected', 'VBN'), (',', ','), ('rollback', 'VB'), ('the', 'DT'), ('preempted', 'VBN'), ('process', 'NN'), ('up', 'IN'), ('to', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('safe', 'JJ'), ('state', 'NN'), ('before', 'IN'), ('it', 'PRP'), ('acquired', 'VBD'), ('that', 'DT'), ('resource', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('deadlock', 'deadlock'), ('is', 'be'), ('detected', 'detect'), (',', ','), ('rollback', 'rollback'), ('the', 'the'), ('preempted', 'preempt'), ('process', 'process'), ('up', 'up'), ('to', 'to'), ('the', 'the'), ('previous', 'previous'), ('safe', 'safe'), ('state', 'state'), ('before', 'before'), ('it', 'it'), ('acquired', 'acquire'), ('that', 'that'), ('resource', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'detected'), 'mark'), (('deadlock', 'detected'), 'nsubj:pass'), (('is', 'detected'), 'aux:pass'), (('detected', 'rollback'), 'advcl'), ((',', 'detected'), 'punct'), (('rollback', 'root'), 'root'), (('the', 'process'), 'det'), (('preempted', 'process'), 'amod'), (('process', 'rollback'), 'obj'), (('up', 'state'), 'case'), (('to', 'state'), 'case'), (('the', 'state'), 'det'), (('previous', 'state'), 'amod'), (('safe', 'state'), 'amod'), (('state', 'rollback'), 'obl'), (('before', 'acquired'), 'mark'), (('it', 'acquired'), 'nsubj'), (('acquired', 'rollback'), 'advcl'), (('that', 'resource'), 'det'), (('resource', 'acquired'), 'obj'), (('.', 'rollback'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 66 ===========================

 Discard the resource manipulation that occurred after that checkpoint. 

Tokens are: 
>> ['Discard', 'the', 'resource', 'manipulation', 'that', 'occurred', 'after', 'that', 'checkpoint', '.'] 

 UPOS tags are: 
>> [('Discard', 'VERB'), ('the', 'DET'), ('resource', 'NOUN'), ('manipulation', 'NOUN'), ('that', 'PRON'), ('occurred', 'VERB'), ('after', 'ADP'), ('that', 'DET'), ('checkpoint', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Discard', 'VB'), ('the', 'DT'), ('resource', 'NN'), ('manipulation', 'NN'), ('that', 'WDT'), ('occurred', 'VBD'), ('after', 'IN'), ('that', 'DT'), ('checkpoint', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Discard', 'discard'), ('the', 'the'), ('resource', 'resource'), ('manipulation', 'manipulation'), ('that', 'that'), ('occurred', 'occur'), ('after', 'after'), ('that', 'that'), ('checkpoint', 'checkpoint'), ('.', '.')] 

 Dependency tags are: 
>> [(('Discard', 'root'), 'root'), (('the', 'manipulation'), 'det'), (('resource', 'manipulation'), 'compound'), (('manipulation', 'Discard'), 'obj'), (('that', 'occurred'), 'nsubj'), (('occurred', 'manipulation'), 'acl:relcl'), (('after', 'checkpoint'), 'case'), (('that', 'checkpoint'), 'det'), (('checkpoint', 'occurred'), 'obl'), (('.', 'Discard'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 67 ===========================

 Start the process after it is determined it can run again. 

Tokens are: 
>> ['Start', 'the', 'process', 'after', 'it', 'is', 'determined', 'it', 'can', 'run', 'again', '.'] 

 UPOS tags are: 
>> [('Start', 'VERB'), ('the', 'DET'), ('process', 'NOUN'), ('after', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('determined', 'VERB'), ('it', 'PRON'), ('can', 'AUX'), ('run', 'VERB'), ('again', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Start', 'VB'), ('the', 'DT'), ('process', 'NN'), ('after', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('determined', 'VBN'), ('it', 'PRP'), ('can', 'MD'), ('run', 'VB'), ('again', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Start', 'start'), ('the', 'the'), ('process', 'process'), ('after', 'after'), ('it', 'it'), ('is', 'be'), ('determined', 'determine'), ('it', 'it'), ('can', 'can'), ('run', 'run'), ('again', 'again'), ('.', '.')] 

 Dependency tags are: 
>> [(('Start', 'root'), 'root'), (('the', 'process'), 'det'), (('process', 'Start'), 'obj'), (('after', 'determined'), 'mark'), (('it', 'determined'), 'nsubj:pass'), (('is', 'determined'), 'aux:pass'), (('determined', 'Start'), 'advcl'), (('it', 'run'), 'nsubj'), (('can', 'run'), 'aux'), (('run', 'determined'), 'ccomp'), (('again', 'run'), 'advmod'), (('.', 'Start'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 68 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock recovery Recovery through killing processes 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'recovery', 'Recovery', 'through', 'killing', 'processes'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('recovery', 'NOUN'), ('Recovery', 'NOUN'), ('through', 'ADP'), ('killing', 'VERB'), ('processes', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('recovery', 'NN'), ('Recovery', 'NN'), ('through', 'IN'), ('killing', 'VBG'), ('processes', 'NNS')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('recovery', 'recovery'), ('Recovery', 'recovery'), ('through', 'through'), ('killing', 'kill'), ('processes', 'process')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Prof.'), 'list'), (('‹#›', 'Recovery'), 'compound'), (('Deadlock', 'Recovery'), 'compound'), (('recovery', 'Recovery'), 'compound'), (('Recovery', 'Prof.'), 'list'), (('through', 'processes'), 'case'), (('killing', 'processes'), 'amod'), (('processes', 'Recovery'), 'nmod')]

 Named Entities are: 
>> [('Firoz', 'PERSON'), ('5', 'CARDINAL')]

========================== Sentence 69 ===========================

 The simplest way to break a deadlock is to kill one or more processes. 

Tokens are: 
>> ['The', 'simplest', 'way', 'to', 'break', 'a', 'deadlock', 'is', 'to', 'kill', 'one', 'or', 'more', 'processes', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('simplest', 'ADJ'), ('way', 'NOUN'), ('to', 'PART'), ('break', 'VERB'), ('a', 'DET'), ('deadlock', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('kill', 'VERB'), ('one', 'NUM'), ('or', 'CCONJ'), ('more', 'ADJ'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('simplest', 'JJS'), ('way', 'NN'), ('to', 'TO'), ('break', 'VB'), ('a', 'DT'), ('deadlock', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('kill', 'VB'), ('one', 'CD'), ('or', 'CC'), ('more', 'JJR'), ('processes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('simplest', 'simple'), ('way', 'way'), ('to', 'to'), ('break', 'break'), ('a', 'a'), ('deadlock', 'deadlock'), ('is', 'be'), ('to', 'to'), ('kill', 'kill'), ('one', 'one'), ('or', 'or'), ('more', 'more'), ('processes', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'way'), 'det'), (('simplest', 'way'), 'amod'), (('way', 'kill'), 'nsubj'), (('to', 'break'), 'mark'), (('break', 'way'), 'acl'), (('a', 'deadlock'), 'det'), (('deadlock', 'break'), 'obj'), (('is', 'kill'), 'cop'), (('to', 'kill'), 'mark'), (('kill', 'root'), 'root'), (('one', 'processes'), 'nummod'), (('or', 'more'), 'cc'), (('more', 'one'), 'conj'), (('processes', 'kill'), 'obj'), (('.', 'kill'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 70 ===========================

 Kill all the process involved in deadlock Kill process one by one. 

Tokens are: 
>> ['Kill', 'all', 'the', 'process', 'involved', 'in', 'deadlock', 'Kill', 'process', 'one', 'by', 'one', '.'] 

 UPOS tags are: 
>> [('Kill', 'VERB'), ('all', 'DET'), ('the', 'DET'), ('process', 'NOUN'), ('involved', 'VERB'), ('in', 'ADP'), ('deadlock', 'NOUN'), ('Kill', 'NOUN'), ('process', 'NOUN'), ('one', 'NUM'), ('by', 'ADP'), ('one', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Kill', 'VB'), ('all', 'PDT'), ('the', 'DT'), ('process', 'NN'), ('involved', 'VBN'), ('in', 'IN'), ('deadlock', 'NN'), ('Kill', 'NN'), ('process', 'NN'), ('one', 'CD'), ('by', 'IN'), ('one', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Kill', 'kill'), ('all', 'all'), ('the', 'the'), ('process', 'process'), ('involved', 'involve'), ('in', 'in'), ('deadlock', 'deadlock'), ('Kill', 'kill'), ('process', 'process'), ('one', 'one'), ('by', 'by'), ('one', 'one'), ('.', '.')] 

 Dependency tags are: 
>> [(('Kill', 'root'), 'root'), (('all', 'process'), 'det:predet'), (('the', 'process'), 'det'), (('process', 'Kill'), 'obj'), (('involved', 'process'), 'acl'), (('in', 'process'), 'case'), (('deadlock', 'process'), 'compound'), (('Kill', 'process'), 'compound'), (('process', 'involved'), 'obl'), (('one', 'involved'), 'obl:tmod'), (('by', 'one'), 'case'), (('one', 'involved'), 'obl'), (('.', 'Kill'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 71 ===========================

 After killing each process check for deadlock 

Tokens are: 
>> ['After', 'killing', 'each', 'process', 'check', 'for', 'deadlock'] 

 UPOS tags are: 
>> [('After', 'SCONJ'), ('killing', 'VERB'), ('each', 'DET'), ('process', 'NOUN'), ('check', 'NOUN'), ('for', 'ADP'), ('deadlock', 'NOUN')] 

 XPOS tags are: 
>> [('After', 'IN'), ('killing', 'VBG'), ('each', 'DT'), ('process', 'NN'), ('check', 'NN'), ('for', 'IN'), ('deadlock', 'NN')] 

 Lemmas are: 
>> [('After', 'after'), ('killing', 'kill'), ('each', 'each'), ('process', 'process'), ('check', 'check'), ('for', 'for'), ('deadlock', 'deadlock')] 

 Dependency tags are: 
>> [(('After', 'killing'), 'mark'), (('killing', 'root'), 'root'), (('each', 'process'), 'det'), (('process', 'killing'), 'obj'), (('check', 'killing'), 'obj'), (('for', 'deadlock'), 'case'), (('deadlock', 'check'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 72 ===========================

 If deadlock recovered then stop killing more process Otherwise kill another process  P1 P2 R1 R2 Hold Hold Request P3 R3 Hold Request Request Hold Hold    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock avoidance  (Banker’s algorithm) Section - 5      Safe and unsafe states A state is said to be safe if it is not deadlocked and there is some scheduling order in which every process can run to completion even if all of them suddenly request their maximum number of resources immediately. 

Tokens are: 
>> ['If', 'deadlock', 'recovered', 'then', 'stop', 'killing', 'more', 'process', 'Otherwise', 'kill', 'another', 'process', 'P1', 'P2', 'R1', 'R2', 'Hold', 'Hold', 'Request', 'P3', 'R3', 'Hold', 'Request', 'Request', 'Hold', 'Hold', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'avoidance', '(', 'Banker', '’s', 'algorithm', ')', 'Section', '-', '5', 'Safe', 'and', 'unsafe', 'states', 'A', 'state', 'is', 'said', 'to', 'be', 'safe', 'if', 'it', 'is', 'not', 'deadlocked', 'and', 'there', 'is', 'some', 'scheduling', 'order', 'in', 'which', 'every', 'process', 'can', 'run', 'to', 'completion', 'even', 'if', 'all', 'of', 'them', 'suddenly', 'request', 'their', 'maximum', 'number', 'of', 'resources', 'immediately', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('deadlock', 'NOUN'), ('recovered', 'VERB'), ('then', 'ADV'), ('stop', 'VERB'), ('killing', 'VERB'), ('more', 'ADJ'), ('process', 'NOUN'), ('Otherwise', 'ADV'), ('kill', 'VERB'), ('another', 'DET'), ('process', 'NOUN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('R1', 'NOUN'), ('R2', 'PROPN'), ('Hold', 'NOUN'), ('Hold', 'NOUN'), ('Request', 'NOUN'), ('P3', 'PROPN'), ('R3', 'PROPN'), ('Hold', 'NOUN'), ('Request', 'NOUN'), ('Request', 'NOUN'), ('Hold', 'NOUN'), ('Hold', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'DET'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('avoidance', 'NOUN'), ('(', 'PUNCT'), ('Banker', 'NOUN'), ('’s', 'PART'), ('algorithm', 'NOUN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('5', 'NUM'), ('Safe', 'ADJ'), ('and', 'CCONJ'), ('unsafe', 'ADJ'), ('states', 'NOUN'), ('A', 'DET'), ('state', 'NOUN'), ('is', 'AUX'), ('said', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('safe', 'ADJ'), ('if', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('deadlocked', 'VERB'), ('and', 'CCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('some', 'DET'), ('scheduling', 'NOUN'), ('order', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('every', 'DET'), ('process', 'NOUN'), ('can', 'AUX'), ('run', 'VERB'), ('to', 'ADP'), ('completion', 'NOUN'), ('even', 'ADV'), ('if', 'SCONJ'), ('all', 'DET'), ('of', 'ADP'), ('them', 'PRON'), ('suddenly', 'ADV'), ('request', 'VERB'), ('their', 'PRON'), ('maximum', 'ADJ'), ('number', 'NOUN'), ('of', 'ADP'), ('resources', 'NOUN'), ('immediately', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('deadlock', 'NN'), ('recovered', 'VBD'), ('then', 'RB'), ('stop', 'VB'), ('killing', 'VBG'), ('more', 'JJR'), ('process', 'NN'), ('Otherwise', 'RB'), ('kill', 'VB'), ('another', 'DT'), ('process', 'NN'), ('P1', 'NNP'), ('P2', 'NNP'), ('R1', 'NN'), ('R2', 'NNP'), ('Hold', 'NN'), ('Hold', 'NN'), ('Request', 'NN'), ('P3', 'NNP'), ('R3', 'NNP'), ('Hold', 'NN'), ('Request', 'NN'), ('Request', 'NN'), ('Hold', 'NN'), ('Hold', 'NN'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'DT'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('avoidance', 'NN'), ('(', '-LRB-'), ('Banker', 'NN'), ('’s', 'POS'), ('algorithm', 'NN'), (')', '-RRB-'), ('Section', 'NN'), ('-', 'HYPH'), ('5', 'CD'), ('Safe', 'JJ'), ('and', 'CC'), ('unsafe', 'JJ'), ('states', 'NNS'), ('A', 'DT'), ('state', 'NN'), ('is', 'VBZ'), ('said', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('safe', 'JJ'), ('if', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('deadlocked', 'VBN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('some', 'DT'), ('scheduling', 'NN'), ('order', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('every', 'DT'), ('process', 'NN'), ('can', 'MD'), ('run', 'VB'), ('to', 'IN'), ('completion', 'NN'), ('even', 'RB'), ('if', 'IN'), ('all', 'DT'), ('of', 'IN'), ('them', 'PRP'), ('suddenly', 'RB'), ('request', 'VBP'), ('their', 'PRP$'), ('maximum', 'JJ'), ('number', 'NN'), ('of', 'IN'), ('resources', 'NNS'), ('immediately', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('deadlock', 'deadlock'), ('recovered', 'recover'), ('then', 'then'), ('stop', 'stop'), ('killing', 'kill'), ('more', 'more'), ('process', 'process'), ('Otherwise', 'otherwise'), ('kill', 'kill'), ('another', 'another'), ('process', 'process'), ('P1', 'P1'), ('P2', 'P2'), ('R1', 'r1'), ('R2', 'R2'), ('Hold', 'hold'), ('Hold', 'hold'), ('Request', 'request'), ('P3', 'P3'), ('R3', 'R3'), ('Hold', 'hold'), ('Request', 'request'), ('Request', 'request'), ('Hold', 'hold'), ('Hold', 'hold'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'a'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('avoidance', 'avoidance'), ('(', '('), ('Banker', 'banker'), ('’s', "'s"), ('algorithm', 'algorithm'), (')', ')'), ('Section', 'section'), ('-', '-'), ('5', '5'), ('Safe', 'safe'), ('and', 'and'), ('unsafe', 'unsafe'), ('states', 'state'), ('A', 'a'), ('state', 'state'), ('is', 'be'), ('said', 'say'), ('to', 'to'), ('be', 'be'), ('safe', 'safe'), ('if', 'if'), ('it', 'it'), ('is', 'be'), ('not', 'not'), ('deadlocked', 'deadlock'), ('and', 'and'), ('there', 'there'), ('is', 'be'), ('some', 'some'), ('scheduling', 'scheduling'), ('order', 'order'), ('in', 'in'), ('which', 'which'), ('every', 'every'), ('process', 'process'), ('can', 'can'), ('run', 'run'), ('to', 'to'), ('completion', 'completion'), ('even', 'even'), ('if', 'if'), ('all', 'all'), ('of', 'of'), ('them', 'they'), ('suddenly', 'suddenly'), ('request', 'request'), ('their', 'they'), ('maximum', 'maximum'), ('number', 'number'), ('of', 'of'), ('resources', 'resource'), ('immediately', 'immediately'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'recovered'), 'mark'), (('deadlock', 'recovered'), 'nsubj'), (('recovered', 'stop'), 'advcl'), (('then', 'stop'), 'advmod'), (('stop', 'root'), 'root'), (('killing', 'stop'), 'xcomp'), (('more', 'process'), 'amod'), (('process', 'killing'), 'obj'), (('Otherwise', 'kill'), 'advmod'), (('kill', 'stop'), 'xcomp'), (('another', 'process'), 'det'), (('process', 'kill'), 'obj'), (('P1', 'R1'), 'compound'), (('P2', 'R1'), 'compound'), (('R1', 'Request'), 'compound'), (('R2', 'Request'), 'compound'), (('Hold', 'Request'), 'compound'), (('Hold', 'Request'), 'compound'), (('Request', 'process'), 'conj'), (('P3', 'Request'), 'compound'), (('R3', 'Request'), 'compound'), (('Hold', 'Request'), 'compound'), (('Request', 'Request'), 'compound'), (('Request', 'Request'), 'appos'), (('Hold', 'Request'), 'compound'), (('Hold', 'Prof.'), 'compound'), (('Prof.', 'Request'), 'appos'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Unit'), 'det'), (('Sherasiya', '#'), 'compound'), (('#', 'Unit'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'stop'), 'punct'), (('Deadlock', 'avoidance'), 'compound'), (('‹#›', 'avoidance'), 'compound'), (('Deadlock', 'avoidance'), 'compound'), (('avoidance', 'Unit'), 'appos'), (('(', 'algorithm'), 'punct'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'avoidance'), 'appos'), ((')', 'algorithm'), 'punct'), (('Section', 'states'), 'compound'), (('-', 'Safe'), 'punct'), (('5', 'states'), 'nummod'), (('Safe', 'states'), 'amod'), (('and', 'unsafe'), 'cc'), (('unsafe', 'Safe'), 'conj'), (('states', 'kill'), 'conj'), (('A', 'state'), 'det'), (('state', 'said'), 'nsubj:pass'), (('is', 'said'), 'aux:pass'), (('said', 'stop'), 'parataxis'), (('to', 'safe'), 'mark'), (('be', 'safe'), 'cop'), (('safe', 'said'), 'xcomp'), (('if', 'deadlocked'), 'mark'), (('it', 'deadlocked'), 'nsubj:pass'), (('is', 'deadlocked'), 'aux:pass'), (('not', 'deadlocked'), 'advmod'), (('deadlocked', 'safe'), 'advcl'), (('and', 'is'), 'cc'), (('there', 'is'), 'expl'), (('is', 'stop'), 'conj'), (('some', 'order'), 'det'), (('scheduling', 'order'), 'compound'), (('order', 'is'), 'nsubj'), (('in', 'which'), 'case'), (('which', 'run'), 'obl'), (('every', 'process'), 'det'), (('process', 'run'), 'nsubj'), (('can', 'run'), 'aux'), (('run', 'order'), 'acl:relcl'), (('to', 'completion'), 'case'), (('completion', 'run'), 'obl'), (('even', 'request'), 'advmod'), (('if', 'request'), 'mark'), (('all', 'request'), 'nsubj'), (('of', 'them'), 'case'), (('them', 'all'), 'nmod'), (('suddenly', 'request'), 'advmod'), (('request', 'run'), 'advcl'), (('their', 'number'), 'nmod:poss'), (('maximum', 'number'), 'amod'), (('number', 'request'), 'obj'), (('of', 'resources'), 'case'), (('resources', 'number'), 'nmod'), (('immediately', 'request'), 'advmod'), (('.', 'stop'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL'), ('Banker’s algorithm) Section - 5      Safe', 'LAW')]

========================== Sentence 73 ===========================

 Total resources are 10  7 resources already allocated 

Tokens are: 
>> ['Total', 'resources', 'are', '10', '7', 'resources', 'already', 'allocated'] 

 UPOS tags are: 
>> [('Total', 'ADJ'), ('resources', 'NOUN'), ('are', 'AUX'), ('10', 'NUM'), ('7', 'NUM'), ('resources', 'NOUN'), ('already', 'ADV'), ('allocated', 'VERB')] 

 XPOS tags are: 
>> [('Total', 'JJ'), ('resources', 'NNS'), ('are', 'VBP'), ('10', 'CD'), ('7', 'CD'), ('resources', 'NNS'), ('already', 'RB'), ('allocated', 'VBN')] 

 Lemmas are: 
>> [('Total', 'total'), ('resources', 'resource'), ('are', 'be'), ('10', '10'), ('7', '7'), ('resources', 'resource'), ('already', 'already'), ('allocated', 'allocate')] 

 Dependency tags are: 
>> [(('Total', 'resources'), 'amod'), (('resources', 'resources'), 'nsubj'), (('are', 'resources'), 'cop'), (('10', 'resources'), 'nummod'), (('7', 'resources'), 'nummod'), (('resources', 'root'), 'root'), (('already', 'allocated'), 'advmod'), (('allocated', 'resources'), 'acl')]

 Named Entities are: 
>> [('10', 'CARDINAL'), ('7', 'CARDINAL')]

========================== Sentence 74 ===========================

 So there are 3 still free A need 6 resources more to complete it. 

Tokens are: 
>> ['So', 'there', 'are', '3', 'still', 'free', 'A', 'need', '6', 'resources', 'more', 'to', 'complete', 'it', '.'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('there', 'PRON'), ('are', 'VERB'), ('3', 'NUM'), ('still', 'ADV'), ('free', 'ADJ'), ('A', 'DET'), ('need', 'NOUN'), ('6', 'NUM'), ('resources', 'NOUN'), ('more', 'ADJ'), ('to', 'PART'), ('complete', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('there', 'EX'), ('are', 'VBP'), ('3', 'CD'), ('still', 'RB'), ('free', 'JJ'), ('A', 'DT'), ('need', 'NN'), ('6', 'CD'), ('resources', 'NNS'), ('more', 'JJR'), ('to', 'TO'), ('complete', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('there', 'there'), ('are', 'be'), ('3', '3'), ('still', 'still'), ('free', 'free'), ('A', 'a'), ('need', 'need'), ('6', '6'), ('resources', 'resource'), ('more', 'more'), ('to', 'to'), ('complete', 'complete'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('So', 'are'), 'advmod'), (('there', 'are'), 'expl'), (('are', 'root'), 'root'), (('3', 'free'), 'nsubj'), (('still', 'free'), 'advmod'), (('free', 'are'), 'nsubj'), (('A', 'need'), 'det'), (('need', 'free'), 'obl:npmod'), (('6', 'resources'), 'nummod'), (('resources', 'need'), 'nmod:npmod'), (('more', 'are'), 'nsubj'), (('to', 'complete'), 'mark'), (('complete', 'more'), 'advcl'), (('it', 'complete'), 'obj'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('6', 'CARDINAL')]

========================== Sentence 75 ===========================

 B need 2 resources more to complete it. 

Tokens are: 
>> ['B', 'need', '2', 'resources', 'more', 'to', 'complete', 'it', '.'] 

 UPOS tags are: 
>> [('B', 'INTJ'), ('need', 'VERB'), ('2', 'NUM'), ('resources', 'NOUN'), ('more', 'ADJ'), ('to', 'PART'), ('complete', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('B', 'UH'), ('need', 'VBP'), ('2', 'CD'), ('resources', 'NNS'), ('more', 'JJR'), ('to', 'TO'), ('complete', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('B', 'B'), ('need', 'need'), ('2', '2'), ('resources', 'resource'), ('more', 'more'), ('to', 'to'), ('complete', 'complete'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('B', 'need'), 'discourse'), (('need', 'root'), 'root'), (('2', 'resources'), 'nummod'), (('resources', 'need'), 'obj'), (('more', 'need'), 'obj'), (('to', 'complete'), 'mark'), (('complete', 'more'), 'acl'), (('it', 'complete'), 'obj'), (('.', 'need'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 76 ===========================

 C need 5 resources more to complete it. 

Tokens are: 
>> ['C', 'need', '5', 'resources', 'more', 'to', 'complete', 'it', '.'] 

 UPOS tags are: 
>> [('C', 'PROPN'), ('need', 'VERB'), ('5', 'NUM'), ('resources', 'NOUN'), ('more', 'ADJ'), ('to', 'PART'), ('complete', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('C', 'NNP'), ('need', 'VBP'), ('5', 'CD'), ('resources', 'NNS'), ('more', 'JJR'), ('to', 'TO'), ('complete', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('C', 'C'), ('need', 'need'), ('5', '5'), ('resources', 'resource'), ('more', 'more'), ('to', 'to'), ('complete', 'complete'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('C', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('5', 'resources'), 'nummod'), (('resources', 'need'), 'obj'), (('more', 'need'), 'obj'), (('to', 'complete'), 'mark'), (('complete', 'more'), 'acl'), (('it', 'complete'), 'obj'), (('.', 'need'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 77 ===========================

 Process	Has / Hold	Max required 	A	3	9 	B	2	4 	C	2	7 	Free : 3		     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Safe state  	Process	Has / Hold	Max required 	A	3	9 	B	0	- 	C	2	7 	Free : 5		  	Process	Has / Hold	Max required 	A	3	9 	B	2	4 	C	2	7 	Free : 3		  	Process	Has / Hold	Max required 	A	3	9 	B	4	4 	C	2	7 	Free : 1		  	Process	Has / Hold	Max required 	A	9	9 	B	0	- 	C	0	- 	Free : 1		  	Process	Has / Hold	Max required 	A	3	9 	B	0	- 	C	7	7 	Free : 0		  	Process	Has / Hold	Max required 	A	3	9 	B	0	- 	C	0	- 	Free : 7		  2 4 5 7 6    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›   Unsafe state 	Process	Has / Hold	Max required 	A	4	9 	B	4	4 	C	2	7 	Free : 0		  	Process	Has / Hold	Max required 	A	3	9 	B	2	4 	C	2	7 	Free : 3		  	Process	Has / Hold	Max required 	A	4	9 	B	2	4 	C	2	7 	Free : 2		  	Process	Has / Hold	Max required 	A	4	9 	B	0	- 	C	2	7 	Free : 4		  1 2 4    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock avoidance Deadlock can be avoided by allocating resources carefully. 

Tokens are: 
>> ['Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '2', '4', 'C', '2', '7', 'Free', ':', '3', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Safe', 'state', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '0', '-', 'C', '2', '7', 'Free', ':', '5', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '2', '4', 'C', '2', '7', 'Free', ':', '3', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '4', '4', 'C', '2', '7', 'Free', ':', '1', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '9', '9', 'B', '0', '-', 'C', '0', '-', 'Free', ':', '1', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '0', '-', 'C', '7', '7', 'Free', ':', '0', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '0', '-', 'C', '0', '-', 'Free', ':', '7', '2', '4', '5', '7', '6', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Unsafe', 'state', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '4', '9', 'B', '4', '4', 'C', '2', '7', 'Free', ':', '0', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '3', '9', 'B', '2', '4', 'C', '2', '7', 'Free', ':', '3', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '4', '9', 'B', '2', '4', 'C', '2', '7', 'Free', ':', '2', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '4', '9', 'B', '0', '-', 'C', '2', '7', 'Free', ':', '4', '1', '2', '4', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'avoidance', 'Deadlock', 'can', 'be', 'avoided', 'by', 'allocating', 'resources', 'carefully', '.'] 

 UPOS tags are: 
>> [('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('3', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Safe', 'ADJ'), ('state', 'NOUN'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('5', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('3', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('4', 'NUM'), ('4', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('1', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('9', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('1', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('7', 'NUM'), ('7', 'NUM'), ('Free', 'NOUN'), (':', 'PUNCT'), ('0', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('7', 'NUM'), ('2', 'NUM'), ('4', 'NUM'), ('5', 'NUM'), ('7', 'NUM'), ('6', 'NUM'), ('Prof.', 'NOUN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Unsafe', 'ADJ'), ('state', 'NOUN'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('4', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('4', 'NUM'), ('4', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('0', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('3', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('3', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('4', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('2', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('4', 'NUM'), ('9', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('4', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('4', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('avoidance', 'NOUN'), ('Deadlock', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('avoided', 'VERB'), ('by', 'SCONJ'), ('allocating', 'VERB'), ('resources', 'NOUN'), ('carefully', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('2', 'CD'), ('4', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('3', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Safe', 'JJ'), ('state', 'NN'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('5', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('2', 'CD'), ('4', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('3', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('4', 'CD'), ('4', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('1', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('9', 'CD'), ('9', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('1', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('7', 'CD'), ('7', 'CD'), ('Free', 'NN'), (':', ':'), ('0', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBD'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('7', 'CD'), ('2', 'CD'), ('4', 'CD'), ('5', 'CD'), ('7', 'CD'), ('6', 'CD'), ('Prof.', 'NN'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NN'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Unsafe', 'JJ'), ('state', 'NN'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('4', 'CD'), ('9', 'CD'), ('B', 'NN'), ('4', 'CD'), ('4', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('0', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('3', 'CD'), ('9', 'CD'), ('B', 'NN'), ('2', 'CD'), ('4', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('3', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('4', 'CD'), ('9', 'CD'), ('B', 'NN'), ('2', 'CD'), ('4', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('2', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBD'), ('A', 'DT'), ('4', 'CD'), ('9', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('4', 'CD'), ('1', 'CD'), ('2', 'CD'), ('4', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('avoidance', 'NN'), ('Deadlock', 'NN'), ('can', 'MD'), ('be', 'VB'), ('avoided', 'VBN'), ('by', 'IN'), ('allocating', 'VBG'), ('resources', 'NNS'), ('carefully', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('2', '2'), ('4', '4'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('3', '3'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Safe', 'safe'), ('state', 'state'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('5', '5'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('2', '2'), ('4', '4'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('3', '3'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('4', '4'), ('4', '4'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('1', '1'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('9', '9'), ('9', '9'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('1', '1'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('7', '7'), ('7', '7'), ('Free', 'free'), (':', ':'), ('0', '0'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('7', '7'), ('2', '2'), ('4', '4'), ('5', '5'), ('7', '7'), ('6', '6'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Unsafe', 'Unsafe'), ('state', 'state'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('4', '4'), ('9', '9'), ('B', 'b'), ('4', '4'), ('4', '4'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('0', '0'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('3', '3'), ('9', '9'), ('B', 'b'), ('2', '2'), ('4', '4'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('3', '3'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('4', '4'), ('9', '9'), ('B', 'b'), ('2', '2'), ('4', '4'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('2', '2'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('4', '4'), ('9', '9'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('4', '4'), ('1', '1'), ('2', '2'), ('4', '4'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('avoidance', 'avoidance'), ('Deadlock', 'deadlock'), ('can', 'can'), ('be', 'be'), ('avoided', 'avoid'), ('by', 'by'), ('allocating', 'allocate'), ('resources', 'resource'), ('carefully', 'carefully'), ('.', '.')] 

 Dependency tags are: 
>> [(('Process', 'Has'), 'nsubj'), (('Has', 'root'), 'root'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('2', 'B'), 'nummod'), (('4', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('2', 'C'), 'nummod'), (('7', 'C'), 'nummod'), (('Free', 'C'), 'conj'), ((':', 'required'), 'punct'), (('3', 'Prof.'), 'nummod'), (('Prof.', 'Firoz'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'B'), 'conj'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'punct'), (('Unit', 'B'), 'conj'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Safe', 'Process'), 'amod'), (('state', 'Process'), 'compound'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'B'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'B'), 'compound'), (('2', '7'), 'compound'), (('7', 'C'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'required'), 'punct'), (('5', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('2', 'B'), 'nummod'), (('4', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('2', '7'), 'compound'), (('7', 'C'), 'nummod'), (('Free', 'B'), 'conj'), ((':', 'required'), 'punct'), (('3', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('4', 'B'), 'nummod'), (('4', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('2', '7'), 'compound'), (('7', 'C'), 'nummod'), (('Free', 'B'), 'conj'), ((':', 'required'), 'punct'), (('1', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('9', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'Free'), 'compound'), (('0', 'Free'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'required'), 'obj'), ((':', 'Free'), 'punct'), (('1', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'B'), 'compound'), (('7', '7'), 'compound'), (('7', 'C'), 'nummod'), (('Free', 'B'), 'conj'), ((':', 'Free'), 'punct'), (('0', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'Free'), 'compound'), (('0', 'Free'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'required'), 'obj'), ((':', 'Free'), 'punct'), (('7', '2'), 'compound'), (('2', '5'), 'compound'), (('4', '5'), 'compound'), (('5', 'Prof.'), 'nummod'), (('7', 'Firoz'), 'nummod'), (('6', 'Firoz'), 'nummod'), (('Prof.', 'Free'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Unsafe', 'Process'), 'amod'), (('state', 'Process'), 'compound'), (('Process', 'Has'), 'nsubj'), (('Has', 'Deadlock'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('4', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('4', 'B'), 'nummod'), (('4', 'C'), 'nummod'), (('C', 'B'), 'compound'), (('2', 'C'), 'nummod'), (('7', 'C'), 'nummod'), (('Free', 'B'), 'amod'), ((':', 'Has'), 'punct'), (('0', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'B'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('3', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('2', 'C'), 'nummod'), (('4', 'C'), 'nummod'), (('C', 'B'), 'appos'), (('2', '7'), 'compound'), (('7', 'Free'), 'compound'), (('Free', 'B'), 'amod'), ((':', 'Has'), 'punct'), (('3', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'B'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('4', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('2', 'C'), 'nummod'), (('4', 'C'), 'nummod'), (('C', 'B'), 'appos'), (('2', '7'), 'compound'), (('7', 'Free'), 'nummod'), (('Free', 'B'), 'amod'), ((':', 'Has'), 'punct'), (('2', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'B'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('4', 'B'), 'nummod'), (('9', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'B'), 'compound'), (('2', 'C'), 'nummod'), (('7', 'C'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'C'), 'punct'), (('4', 'Prof.'), 'nummod'), (('1', 'Prof.'), 'nummod'), (('2', 'Firoz'), 'nummod'), (('4', 'Firoz'), 'nummod'), (('Prof.', 'Free'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', 'Prof.'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Deadlock'), 'compound'), (('‹#›', 'Deadlock'), 'compound'), (('Deadlock', 'Deadlock'), 'compound'), (('avoidance', 'Deadlock'), 'compound'), (('Deadlock', 'avoided'), 'nsubj:pass'), (('can', 'avoided'), 'aux'), (('be', 'avoided'), 'aux:pass'), (('avoided', 'Unit'), 'acl:relcl'), (('by', 'allocating'), 'mark'), (('allocating', 'avoided'), 'advcl'), (('resources', 'allocating'), 'obj'), (('carefully', 'allocating'), 'advmod'), (('.', 'Deadlock'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('7', 'CARDINAL'), ('7', 'CARDINAL'), ('3', 'CARDINAL'), ('7', 'CARDINAL'), ('5', 'CARDINAL'), ('7', 'CARDINAL'), ('7', 'CARDINAL'), ('3', 'CARDINAL'), ('7', 'CARDINAL'), ('1', 'CARDINAL'), ('4', 'CARDINAL'), ('5', 'CARDINAL')]

========================== Sentence 78 ===========================

 Carefully analyze each resource request to see if it can be safely granted. 

Tokens are: 
>> ['Carefully', 'analyze', 'each', 'resource', 'request', 'to', 'see', 'if', 'it', 'can', 'be', 'safely', 'granted', '.'] 

 UPOS tags are: 
>> [('Carefully', 'ADV'), ('analyze', 'VERB'), ('each', 'DET'), ('resource', 'NOUN'), ('request', 'NOUN'), ('to', 'PART'), ('see', 'VERB'), ('if', 'SCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('safely', 'ADV'), ('granted', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Carefully', 'RB'), ('analyze', 'VB'), ('each', 'DT'), ('resource', 'NN'), ('request', 'NN'), ('to', 'TO'), ('see', 'VB'), ('if', 'IN'), ('it', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('safely', 'RB'), ('granted', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Carefully', 'carefully'), ('analyze', 'analyze'), ('each', 'each'), ('resource', 'resource'), ('request', 'request'), ('to', 'to'), ('see', 'see'), ('if', 'if'), ('it', 'it'), ('can', 'can'), ('be', 'be'), ('safely', 'safely'), ('granted', 'grant'), ('.', '.')] 

 Dependency tags are: 
>> [(('Carefully', 'analyze'), 'advmod'), (('analyze', 'root'), 'root'), (('each', 'request'), 'det'), (('resource', 'request'), 'compound'), (('request', 'analyze'), 'obj'), (('to', 'see'), 'mark'), (('see', 'analyze'), 'advcl'), (('if', 'granted'), 'mark'), (('it', 'granted'), 'nsubj:pass'), (('can', 'granted'), 'aux'), (('be', 'granted'), 'aux:pass'), (('safely', 'granted'), 'advmod'), (('granted', 'see'), 'advcl'), (('.', 'analyze'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 79 ===========================

 Need an algorithm that can always avoid deadlock by making right choice all the time (Banker’s algorithm). 

Tokens are: 
>> ['Need', 'an', 'algorithm', 'that', 'can', 'always', 'avoid', 'deadlock', 'by', 'making', 'right', 'choice', 'all', 'the', 'time', '(', 'Banker', '’s', 'algorithm', ')', '.'] 

 UPOS tags are: 
>> [('Need', 'VERB'), ('an', 'DET'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('always', 'ADV'), ('avoid', 'VERB'), ('deadlock', 'NOUN'), ('by', 'SCONJ'), ('making', 'VERB'), ('right', 'ADJ'), ('choice', 'NOUN'), ('all', 'DET'), ('the', 'DET'), ('time', 'NOUN'), ('(', 'PUNCT'), ('Banker', 'NOUN'), ('’s', 'PART'), ('algorithm', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Need', 'VBP'), ('an', 'DT'), ('algorithm', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('always', 'RB'), ('avoid', 'VB'), ('deadlock', 'NN'), ('by', 'IN'), ('making', 'VBG'), ('right', 'JJ'), ('choice', 'NN'), ('all', 'PDT'), ('the', 'DT'), ('time', 'NN'), ('(', '-LRB-'), ('Banker', 'NN'), ('’s', 'POS'), ('algorithm', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Need', 'need'), ('an', 'a'), ('algorithm', 'algorithm'), ('that', 'that'), ('can', 'can'), ('always', 'always'), ('avoid', 'avoid'), ('deadlock', 'deadlock'), ('by', 'by'), ('making', 'make'), ('right', 'right'), ('choice', 'choice'), ('all', 'all'), ('the', 'the'), ('time', 'time'), ('(', '('), ('Banker', 'banker'), ('’s', "'s"), ('algorithm', 'algorithm'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Need', 'root'), 'root'), (('an', 'algorithm'), 'det'), (('algorithm', 'Need'), 'obj'), (('that', 'avoid'), 'nsubj'), (('can', 'avoid'), 'aux'), (('always', 'avoid'), 'advmod'), (('avoid', 'algorithm'), 'acl:relcl'), (('deadlock', 'avoid'), 'obj'), (('by', 'making'), 'mark'), (('making', 'avoid'), 'advcl'), (('right', 'choice'), 'amod'), (('choice', 'making'), 'obj'), (('all', 'time'), 'det:predet'), (('the', 'time'), 'det'), (('time', 'making'), 'obl:tmod'), (('(', 'algorithm'), 'punct'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'time'), 'appos'), ((')', 'algorithm'), 'punct'), (('.', 'Need'), 'punct')]

 Named Entities are: 
>> [('Banker', 'ORG')]

========================== Sentence 80 ===========================

 Banker’s algorithm for single resource Banker’s algorithm for multiple resource    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Banker’s algorithm for single resource 

Tokens are: 
>> ['Banker', '’s', 'algorithm', 'for', 'single', 'resource', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Banker', '’s', 'algorithm', 'for', 'single', 'resource'] 

 UPOS tags are: 
>> [('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Banker', 'NOUN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN')] 

 XPOS tags are: 
>> [('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Banker', 'NN'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN')] 

 Lemmas are: 
>> [('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('single', 'single'), ('resource', 'resource'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Banker', 'banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('single', 'single'), ('resource', 'resource')] 

 Dependency tags are: 
>> [(('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'algorithm'), 'nsubj'), (('for', 'algorithm'), 'case'), (('single', 'Banker'), 'amod'), (('resource', 'Banker'), 'compound'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'algorithm'), 'nmod'), (('for', 'resource'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'algorithm'), 'nmod'), (('Prof.', 'resource'), 'appos'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'algorithm'), 'compound'), (('‹#›', 'Banker'), 'compound'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'root'), 'root'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'algorithm'), 'nmod')]

 Named Entities are: 
>> [('3140702', 'MONEY'), ('5', 'CARDINAL')]

========================== Sentence 81 ===========================

 What the algorithm does is check to see if granting the request leads to an unsafe state. 

Tokens are: 
>> ['What', 'the', 'algorithm', 'does', 'is', 'check', 'to', 'see', 'if', 'granting', 'the', 'request', 'leads', 'to', 'an', 'unsafe', 'state', '.'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('the', 'DET'), ('algorithm', 'NOUN'), ('does', 'AUX'), ('is', 'AUX'), ('check', 'VERB'), ('to', 'PART'), ('see', 'VERB'), ('if', 'SCONJ'), ('granting', 'VERB'), ('the', 'DET'), ('request', 'NOUN'), ('leads', 'VERB'), ('to', 'ADP'), ('an', 'DET'), ('unsafe', 'ADJ'), ('state', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('the', 'DT'), ('algorithm', 'NN'), ('does', 'VBZ'), ('is', 'VBZ'), ('check', 'VB'), ('to', 'TO'), ('see', 'VB'), ('if', 'IN'), ('granting', 'VBG'), ('the', 'DT'), ('request', 'NN'), ('leads', 'VBZ'), ('to', 'IN'), ('an', 'DT'), ('unsafe', 'JJ'), ('state', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('the', 'the'), ('algorithm', 'algorithm'), ('does', 'do'), ('is', 'be'), ('check', 'check'), ('to', 'to'), ('see', 'see'), ('if', 'if'), ('granting', 'grant'), ('the', 'the'), ('request', 'request'), ('leads', 'lead'), ('to', 'to'), ('an', 'a'), ('unsafe', 'unsafe'), ('state', 'state'), ('.', '.')] 

 Dependency tags are: 
>> [(('What', 'leads'), 'obj'), (('the', 'algorithm'), 'det'), (('algorithm', 'check'), 'nsubj'), (('does', 'check'), 'aux'), (('is', 'check'), 'aux'), (('check', 'root'), 'root'), (('to', 'see'), 'mark'), (('see', 'check'), 'xcomp'), (('if', 'granting'), 'mark'), (('granting', 'leads'), 'advcl'), (('the', 'request'), 'det'), (('request', 'granting'), 'obj'), (('leads', 'see'), 'advcl'), (('to', 'state'), 'case'), (('an', 'state'), 'det'), (('unsafe', 'state'), 'amod'), (('state', 'leads'), 'obl'), (('.', 'check'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 If it does, the request is denied. 

Tokens are: 
>> ['If', 'it', 'does', ',', 'the', 'request', 'is', 'denied', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('it', 'PRON'), ('does', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('request', 'NOUN'), ('is', 'AUX'), ('denied', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('it', 'PRP'), ('does', 'VBZ'), (',', ','), ('the', 'DT'), ('request', 'NN'), ('is', 'VBZ'), ('denied', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('it', 'it'), ('does', 'do'), (',', ','), ('the', 'the'), ('request', 'request'), ('is', 'be'), ('denied', 'deny'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'does'), 'mark'), (('it', 'does'), 'nsubj'), (('does', 'denied'), 'advcl'), ((',', 'denied'), 'punct'), (('the', 'request'), 'det'), (('request', 'denied'), 'nsubj:pass'), (('is', 'denied'), 'aux:pass'), (('denied', 'root'), 'root'), (('.', 'denied'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 83 ===========================

 If granting the request leads to a safe state, it is carried out. 

Tokens are: 
>> ['If', 'granting', 'the', 'request', 'leads', 'to', 'a', 'safe', 'state', ',', 'it', 'is', 'carried', 'out', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('granting', 'VERB'), ('the', 'DET'), ('request', 'NOUN'), ('leads', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('safe', 'ADJ'), ('state', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('carried', 'VERB'), ('out', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('granting', 'VBG'), ('the', 'DT'), ('request', 'NN'), ('leads', 'VBZ'), ('to', 'IN'), ('a', 'DT'), ('safe', 'JJ'), ('state', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('carried', 'VBN'), ('out', 'RP'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('granting', 'grant'), ('the', 'the'), ('request', 'request'), ('leads', 'lead'), ('to', 'to'), ('a', 'a'), ('safe', 'safe'), ('state', 'state'), (',', ','), ('it', 'it'), ('is', 'be'), ('carried', 'carry'), ('out', 'out'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'granting'), 'mark'), (('granting', 'carried'), 'advcl'), (('the', 'request'), 'det'), (('request', 'granting'), 'obj'), (('leads', 'carried'), 'advcl'), (('to', 'state'), 'case'), (('a', 'state'), 'det'), (('safe', 'state'), 'amod'), (('state', 'leads'), 'obl'), ((',', 'carried'), 'punct'), (('it', 'carried'), 'nsubj:pass'), (('is', 'carried'), 'aux:pass'), (('carried', 'root'), 'root'), (('out', 'carried'), 'compound:prt'), (('.', 'carried'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 84 ===========================

 If we have situation as per figure  then it is safe state  because with 10 free units  one by one all customers can be served. 

Tokens are: 
>> ['If', 'we', 'have', 'situation', 'as', 'per', 'figure', 'then', 'it', 'is', 'safe', 'state', 'because', 'with', '10', 'free', 'units', 'one', 'by', 'one', 'all', 'customers', 'can', 'be', 'served', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('we', 'PRON'), ('have', 'VERB'), ('situation', 'NOUN'), ('as', 'ADP'), ('per', 'ADP'), ('figure', 'NOUN'), ('then', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('safe', 'ADJ'), ('state', 'NOUN'), ('because', 'ADP'), ('with', 'ADP'), ('10', 'NUM'), ('free', 'ADJ'), ('units', 'NOUN'), ('one', 'NUM'), ('by', 'ADP'), ('one', 'NUM'), ('all', 'DET'), ('customers', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('served', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('we', 'PRP'), ('have', 'VBP'), ('situation', 'NN'), ('as', 'IN'), ('per', 'IN'), ('figure', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('safe', 'JJ'), ('state', 'NN'), ('because', 'IN'), ('with', 'IN'), ('10', 'CD'), ('free', 'JJ'), ('units', 'NNS'), ('one', 'CD'), ('by', 'IN'), ('one', 'CD'), ('all', 'DT'), ('customers', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('served', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('we', 'we'), ('have', 'have'), ('situation', 'situation'), ('as', 'as'), ('per', 'per'), ('figure', 'figure'), ('then', 'then'), ('it', 'it'), ('is', 'be'), ('safe', 'safe'), ('state', 'state'), ('because', 'because'), ('with', 'with'), ('10', '10'), ('free', 'free'), ('units', 'unit'), ('one', 'one'), ('by', 'by'), ('one', 'one'), ('all', 'all'), ('customers', 'customer'), ('can', 'can'), ('be', 'be'), ('served', 'serve'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'have'), 'mark'), (('we', 'have'), 'nsubj'), (('have', 'state'), 'advcl'), (('situation', 'have'), 'obj'), (('as', 'figure'), 'case'), (('per', 'figure'), 'case'), (('figure', 'have'), 'obl'), (('then', 'state'), 'advmod'), (('it', 'state'), 'nsubj'), (('is', 'state'), 'cop'), (('safe', 'state'), 'amod'), (('state', 'root'), 'root'), (('because', 'units'), 'case'), (('with', 'because'), 'fixed'), (('10', 'units'), 'nummod'), (('free', 'units'), 'amod'), (('units', 'served'), 'obl'), (('one', 'units'), 'nummod'), (('by', 'one'), 'case'), (('one', 'units'), 'nmod'), (('all', 'customers'), 'det'), (('customers', 'served'), 'nsubj:pass'), (('can', 'served'), 'aux'), (('be', 'served'), 'aux:pass'), (('served', 'state'), 'advcl'), (('.', 'state'), 'punct')]

 Named Entities are: 
>> [('10', 'CARDINAL'), ('one', 'CARDINAL'), ('one', 'CARDINAL')]

========================== Sentence 85 ===========================

 Process	Has / Hold	Max required 	A	0	6 	B	0	5 	C	0	4 	D	0	7 	Free : 10		     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Banker’s algorithm for single resource (safe state)  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	0	- 	D	4	7 	Free : 4		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	2	4 	D	4	7 	Free : 2		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	4	4 	D	4	7 	Free : 0		  	Process	Has / Hold	Max required 	A	1	6 	B	5	5 	C	0	- 	D	0	- 	Free : 4		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	0	- 	D	7	7 	Free : 1		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	0	- 	D	0	- 	Free : 8		   2  3  4    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Banker’s algorithm for single resource (safe state)  	Process	Has / Hold	Max required 	A	0	- 	B	0	- 	C	0	- 	D	0	- 	Free : 10		  	Process	Has / Hold	Max required 	A	1	6 	B	0	- 	C	0	- 	D	0	- 	Free : 9		  	Process	Has / Hold	Max required 	A	6	6 	B	0	- 	C	0	- 	D	0	- 	Free : 4		   5 

Tokens are: 
>> ['Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '0', '6', 'B', '0', '5', 'C', '0', '4', 'D', '0', '7', 'Free', ':', '10', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Banker', '’s', 'algorithm', 'for', 'single', 'resource', '(', 'safe', 'state', ')', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '1', '5', 'C', '0', '-', 'D', '4', '7', 'Free', ':', '4', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '1', '5', 'C', '2', '4', 'D', '4', '7', 'Free', ':', '2', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '1', '5', 'C', '4', '4', 'D', '4', '7', 'Free', ':', '0', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '5', '5', 'C', '0', '-', 'D', '0', '-', 'Free', ':', '4', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '1', '5', 'C', '0', '-', 'D', '7', '7', 'Free', ':', '1', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '1', '5', 'C', '0', '-', 'D', '0', '-', 'Free', ':', '8', '2', '3', '4', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Banker', '’s', 'algorithm', 'for', 'single', 'resource', '(', 'safe', 'state', ')', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '0', '-', 'B', '0', '-', 'C', '0', '-', 'D', '0', '-', 'Free', ':', '10', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '0', '-', 'C', '0', '-', 'D', '0', '-', 'Free', ':', '9', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '6', '6', 'B', '0', '-', 'C', '0', '-', 'D', '0', '-', 'Free', ':', '4', '5'] 

 UPOS tags are: 
>> [('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('0', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('0', 'NUM'), ('4', 'NUM'), ('D', 'NOUN'), ('0', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('10', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Banker', 'NOUN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('safe', 'ADJ'), ('state', 'NOUN'), (')', 'PUNCT'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('4', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('4', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('D', 'NOUN'), ('4', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('2', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('4', 'NUM'), ('4', 'NUM'), ('D', 'NOUN'), ('4', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('0', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('5', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('4', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('7', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('1', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('5', 'NUM'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('8', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Banker', 'NOUN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('safe', 'ADJ'), ('state', 'NOUN'), (')', 'PUNCT'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('0', 'NUM'), ('-', 'PUNCT'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('10', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('9', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('6', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('D', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('Free', 'NOUN'), (':', 'PUNCT'), ('4', 'NUM'), ('5', 'NUM')] 

 XPOS tags are: 
>> [('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('0', 'CD'), ('6', 'CD'), ('B', 'NN'), ('0', 'CD'), ('5', 'CD'), ('C', 'NN'), ('0', 'CD'), ('4', 'CD'), ('D', 'NN'), ('0', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('10', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Banker', 'NN'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN'), ('(', '-LRB-'), ('safe', 'JJ'), ('state', 'NN'), (')', '-RRB-'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBD'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('1', 'CD'), ('5', 'CD'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('4', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('4', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBD'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('1', 'CD'), ('5', 'CD'), ('C', 'NN'), ('2', 'CD'), ('4', 'CD'), ('D', 'NN'), ('4', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('2', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('1', 'CD'), ('5', 'CD'), ('C', 'NN'), ('4', 'CD'), ('4', 'CD'), ('D', 'NN'), ('4', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('0', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('5', 'CD'), ('5', 'CD'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('4', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('1', 'CD'), ('5', 'CD'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('7', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('1', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBD'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('1', 'CD'), ('5', 'CD'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('8', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Banker', 'NN'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN'), ('(', '-LRB-'), ('safe', 'JJ'), ('state', 'NN'), (')', '-RRB-'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('0', 'CD'), ('-', 'HYPH'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('10', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('9', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('6', 'CD'), ('6', 'CD'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('D', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('Free', 'NN'), (':', ':'), ('4', 'CD'), ('5', 'CD')] 

 Lemmas are: 
>> [('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('0', '0'), ('6', '6'), ('B', 'b'), ('0', '0'), ('5', '5'), ('C', 'c'), ('0', '0'), ('4', '4'), ('D', 'd'), ('0', '0'), ('7', '7'), ('Free', 'free'), (':', ':'), ('10', '10'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Banker', 'banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('single', 'single'), ('resource', 'resource'), ('(', '('), ('safe', 'safe'), ('state', 'state'), (')', ')'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('1', '1'), ('5', '5'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('4', '4'), ('7', '7'), ('Free', 'free'), (':', ':'), ('4', '4'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('1', '1'), ('5', '5'), ('C', 'c'), ('2', '2'), ('4', '4'), ('D', 'd'), ('4', '4'), ('7', '7'), ('Free', 'free'), (':', ':'), ('2', '2'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('1', '1'), ('5', '5'), ('C', 'c'), ('4', '4'), ('4', '4'), ('D', 'd'), ('4', '4'), ('7', '7'), ('Free', 'free'), (':', ':'), ('0', '0'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('5', '5'), ('5', '5'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('4', '4'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('1', '1'), ('5', '5'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('7', '7'), ('7', '7'), ('Free', 'free'), (':', ':'), ('1', '1'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('1', '1'), ('5', '5'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('8', '8'), ('2', '2'), ('3', '3'), ('4', '4'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Banker', 'banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('single', 'single'), ('resource', 'resource'), ('(', '('), ('safe', 'safe'), ('state', 'state'), (')', ')'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('0', '0'), ('-', '-'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('10', '10'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('9', '9'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('6', '6'), ('6', '6'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('0', '0'), ('-', '-'), ('D', 'd'), ('0', '0'), ('-', '-'), ('Free', 'free'), (':', ':'), ('4', '4'), ('5', '5')] 

 Dependency tags are: 
>> [(('Process', 'Has'), 'nsubj'), (('Has', 'root'), 'root'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('0', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'B'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('0', 'C'), 'nummod'), (('4', 'D'), 'nummod'), (('D', 'C'), 'conj'), (('0', 'D'), 'nummod'), (('7', 'D'), 'nummod'), (('Free', 'D'), 'conj'), ((':', 'required'), 'punct'), (('10', 'Prof.'), 'nummod'), (('Prof.', 'Firoz'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Has'), 'conj'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'B'), 'conj'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'compound'), (('‹#›', 'Banker'), 'compound'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'Deadlock'), 'conj'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'algorithm'), 'nmod'), (('(', 'state'), 'punct'), (('safe', 'state'), 'amod'), (('state', 'resource'), 'appos'), ((')', 'state'), 'punct'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'advcl'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'required'), 'nsubj'), (('required', 'required'), 'conj'), (('A', 'B'), 'det'), (('1', '6'), 'compound'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'B'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('0', 'C'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'B'), 'conj'), (('4', 'Free'), 'nummod'), (('7', 'Free'), 'nummod'), (('Free', 'B'), 'conj'), ((':', 'required'), 'punct'), (('4', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'required'), 'parataxis'), (('required', 'required'), 'parataxis'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'B'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('2', 'D'), 'nummod'), (('4', 'D'), 'nummod'), (('D', 'B'), 'conj'), (('4', '7'), 'compound'), (('7', 'Free'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'required'), 'punct'), (('2', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'B'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'conj'), (('4', 'D'), 'nummod'), (('4', 'D'), 'nummod'), (('D', 'B'), 'conj'), (('4', '7'), 'compound'), (('7', 'Free'), 'compound'), (('Free', 'D'), 'amod'), ((':', 'Has'), 'punct'), (('0', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('5', 'C'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'compound'), (('0', 'D'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'B'), 'conj'), (('0', 'Free'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'D'), 'compound'), ((':', 'Free'), 'punct'), (('4', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'C'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'compound'), (('0', 'D'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'B'), 'conj'), (('7', '7'), 'compound'), (('7', 'D'), 'nummod'), (('Free', 'D'), 'amod'), ((':', 'Free'), 'punct'), (('1', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'required'), 'nsubj'), (('required', 'Has'), 'conj'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'C'), 'nummod'), (('5', 'C'), 'nummod'), (('C', 'B'), 'compound'), (('0', 'D'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'Free'), 'compound'), (('0', 'Free'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'B'), 'conj'), ((':', 'Free'), 'punct'), (('8', 'Prof.'), 'nummod'), (('2', 'Prof.'), 'nummod'), (('3', 'Firoz'), 'nummod'), (('4', 'Firoz'), 'nummod'), (('Prof.', 'Free'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'algorithm'), 'compound'), (('‹#›', 'Banker'), 'compound'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'Unit'), 'nsubj'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'algorithm'), 'nmod'), (('(', 'state'), 'punct'), (('safe', 'state'), 'amod'), (('state', 'resource'), 'appos'), ((')', 'state'), 'punct'), (('Process', 'Has'), 'nsubj'), (('Has', 'algorithm'), 'acl:relcl'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'C'), 'det'), (('0', 'B'), 'nummod'), (('-', 'B'), 'punct'), (('B', 'C'), 'compound'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'required'), 'obj'), (('0', 'D'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'C'), 'compound'), (('0', 'Free'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'D'), 'compound'), ((':', 'Free'), 'punct'), (('10', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'B'), 'compound'), (('0', 'D'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'Free'), 'compound'), (('0', 'Free'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'C'), 'appos'), ((':', 'Free'), 'punct'), (('9', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'punct'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('6', 'B'), 'nummod'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'B'), 'appos'), (('0', 'D'), 'nummod'), (('-', 'D'), 'punct'), (('D', 'Free'), 'compound'), (('0', 'D'), 'nummod'), (('-', 'Free'), 'punct'), (('Free', 'C'), 'appos'), ((':', 'Free'), 'punct'), (('4', '5'), 'nummod'), (('5', 'Free'), 'appos')]

 Named Entities are: 
>> [('7', 'CARDINAL'), ('10', 'CARDINAL'), ('5', 'CARDINAL'), ('7', 'CARDINAL'), ('7', 'CARDINAL'), ('2', 'CARDINAL'), ('7', 'CARDINAL'), ('7', 'CARDINAL'), ('8', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('#3140702', 'CARDINAL'), ('5', 'CARDINAL'), ('9', 'CARDINAL'), ('4', 'CARDINAL'), ('5', 'CARDINAL')]

========================== Sentence 86 ===========================

 The order of execution is C, D, B, A. 

Tokens are: 
>> ['The', 'order', 'of', 'execution', 'is', 'C', ',', 'D', ',', 'B', ',', 'A', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('order', 'NOUN'), ('of', 'ADP'), ('execution', 'NOUN'), ('is', 'AUX'), ('C', 'PROPN'), (',', 'PUNCT'), ('D', 'PROPN'), (',', 'PUNCT'), ('B', 'PROPN'), (',', 'PUNCT'), ('A', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('order', 'NN'), ('of', 'IN'), ('execution', 'NN'), ('is', 'VBZ'), ('C', 'NNP'), (',', ','), ('D', 'NNP'), (',', ','), ('B', 'NNP'), (',', ','), ('A', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('order', 'order'), ('of', 'of'), ('execution', 'execution'), ('is', 'be'), ('C', 'C'), (',', ','), ('D', 'D'), (',', ','), ('B', 'B'), (',', ','), ('A', 'A'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'order'), 'det'), (('order', 'C'), 'nsubj'), (('of', 'execution'), 'case'), (('execution', 'order'), 'nmod'), (('is', 'C'), 'cop'), (('C', 'root'), 'root'), ((',', 'C'), 'punct'), (('D', 'C'), 'conj'), ((',', 'B'), 'punct'), (('B', 'C'), 'appos'), ((',', 'C'), 'punct'), (('A', 'C'), 'appos'), (('.', 'C'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 87 ===========================

 So if we can find proper order of execution then there is no deadlock. 

Tokens are: 
>> ['So', 'if', 'we', 'can', 'find', 'proper', 'order', 'of', 'execution', 'then', 'there', 'is', 'no', 'deadlock', '.'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('if', 'SCONJ'), ('we', 'PRON'), ('can', 'AUX'), ('find', 'VERB'), ('proper', 'ADJ'), ('order', 'NOUN'), ('of', 'ADP'), ('execution', 'NOUN'), ('then', 'ADV'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('if', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('find', 'VB'), ('proper', 'JJ'), ('order', 'NN'), ('of', 'IN'), ('execution', 'NN'), ('then', 'RB'), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('deadlock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('if', 'if'), ('we', 'we'), ('can', 'can'), ('find', 'find'), ('proper', 'proper'), ('order', 'order'), ('of', 'of'), ('execution', 'execution'), ('then', 'then'), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('deadlock', 'deadlock'), ('.', '.')] 

 Dependency tags are: 
>> [(('So', 'is'), 'advmod'), (('if', 'find'), 'mark'), (('we', 'find'), 'nsubj'), (('can', 'find'), 'aux'), (('find', 'is'), 'advcl'), (('proper', 'order'), 'amod'), (('order', 'find'), 'obj'), (('of', 'execution'), 'case'), (('execution', 'order'), 'nmod'), (('then', 'is'), 'advmod'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('no', 'deadlock'), 'det'), (('deadlock', 'is'), 'nsubj'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 88 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Banker’s algorithm for single resource (unsafe state)  	Process	Has / Hold	Max required 	A	1	6 	B	2	5 	C	2	4 	D	4	7 	Free : 1		      Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 	P2	0	1	1	2 	P3	3	1	0	0 	P4	0	0	1	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0	1	0	0 	P3	1	1	1	0 	P4	1	1	0	1 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process   	Tape Drives	Plotters	Scanners	CD Roms 	1	0	2	0  available (free) resources     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 	P2	0	1	1	2 	P3	3	1	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0	1	0	0 	P3	1	1	1	0 	P4	1	1	1	1 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	1	0	1	0  available (free) resources    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 	P2	0	1	1	2 	P3	3	1	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0	1	0	0 	P3	1	1	1	0 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	2	1	2	1  available (free) resources         Prof. 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Banker', '’s', 'algorithm', 'for', 'single', 'resource', '(', 'unsafe', 'state', ')', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '6', 'B', '2', '5', 'C', '2', '4', 'D', '4', '7', 'Free', ':', '1', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '1', '1', '0', '0', 'P2', '0', '1', '1', '2', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '1', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '3', '0', '1', '1', 'P2', '0', '1', '0', '0', 'P3', '1', '1', '1', '0', 'P4', '1', '1', '0', '1', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '1', '0', '2', '0', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '1', '1', '0', '0', 'P2', '0', '1', '1', '2', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '3', '0', '1', '1', 'P2', '0', '1', '0', '0', 'P3', '1', '1', '1', '0', 'P4', '1', '1', '1', '1', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '1', '0', '1', '0', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '1', '1', '0', '0', 'P2', '0', '1', '1', '2', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '3', '0', '1', '1', 'P2', '0', '1', '0', '0', 'P3', '1', '1', '1', '0', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '2', '1', '2', '1', 'available', '(', 'free', ')', 'resources', 'Prof', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('unsafe', 'ADJ'), ('state', 'NOUN'), (')', 'PUNCT'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'PROPN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('6', 'NUM'), ('B', 'NOUN'), ('2', 'NUM'), ('5', 'NUM'), ('C', 'PROPN'), ('2', 'NUM'), ('4', 'NUM'), ('D', 'NOUN'), ('4', 'NUM'), ('7', 'NUM'), ('Free', 'PROPN'), (':', 'PUNCT'), ('1', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P5', 'PROPN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('3', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P2', 'PROPN'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'PROPN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'PROPN'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P5', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('1', 'NUM'), ('0', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'PROPN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('3', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P5', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Process', 'NOUN'), ('Tape', 'NOUN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('3', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'NOUN'), ('Drives', 'NOUN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('2', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('single', 'JJ'), ('resource', 'NN'), ('(', '-LRB-'), ('unsafe', 'JJ'), ('state', 'NN'), (')', '-RRB-'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NNP'), ('Max', 'NNP'), ('required', 'VBD'), ('A', 'DT'), ('1', 'CD'), ('6', 'CD'), ('B', 'NN'), ('2', 'CD'), ('5', 'CD'), ('C', 'NNP'), ('2', 'CD'), ('4', 'CD'), ('D', 'NN'), ('4', 'CD'), ('7', 'CD'), ('Free', 'NNP'), (':', ':'), ('1', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NNP'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P5', 'NNP'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('3', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P2', 'NNP'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NNP'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NNP'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P5', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('1', 'CD'), ('0', 'CD'), ('2', 'CD'), ('0', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NNP'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('3', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P5', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Process', 'NN'), ('Tape', 'NN'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('3', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NN'), ('Drives', 'NNS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NN'), ('Roms', 'NNPS'), ('2', 'CD'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('single', 'single'), ('resource', 'resource'), ('(', '('), ('unsafe', 'unsafe'), ('state', 'state'), (')', ')'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('6', '6'), ('B', 'b'), ('2', '2'), ('5', '5'), ('C', 'C'), ('2', '2'), ('4', '4'), ('D', 'd'), ('4', '4'), ('7', '7'), ('Free', 'free'), (':', ':'), ('1', '1'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'Deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('1', '1'), ('0', '0'), ('P5', 'P5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('3', '3'), ('0', '0'), ('1', '1'), ('1', '1'), ('P2', 'P2'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('P3', 'P3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'P4'), ('1', '1'), ('1', '1'), ('0', '0'), ('1', '1'), ('P5', 'P5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('1', '1'), ('0', '0'), ('2', '2'), ('0', '0'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'Deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('3', '3'), ('0', '0'), ('1', '1'), ('1', '1'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('1', '1'), ('1', '1'), ('1', '1'), ('1', '1'), ('P5', 'P5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('1', '1'), ('0', '0'), ('1', '1'), ('0', '0'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('3', '3'), ('0', '0'), ('1', '1'), ('1', '1'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'drive'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'cd'), ('Roms', 'Rom'), ('2', '2'), ('1', '1'), ('2', '2'), ('1', '1'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof', 'Prof'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'flat'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('5', 'Unit'), 'dep'), (('–', 'Deadlock'), 'punct'), (('Deadlock', 'Unit'), 'conj'), (('‹#›', 'Banker'), 'compound'), (('Banker', 'Deadlock'), 'flat'), (('’s', 'Banker'), 'case'), (('algorithm', 'Deadlock'), 'conj'), (('for', 'resource'), 'case'), (('single', 'resource'), 'amod'), (('resource', 'algorithm'), 'nmod'), (('(', 'state'), 'punct'), (('unsafe', 'state'), 'amod'), (('state', 'resource'), 'appos'), ((')', 'state'), 'punct'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'required'), 'nsubj'), (('required', 'Prof.'), 'conj'), (('A', 'B'), 'det'), (('1', '6'), 'compound'), (('6', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('2', 'B'), 'dep'), (('5', 'C'), 'nummod'), (('C', 'B'), 'dep'), (('2', 'D'), 'nummod'), (('4', 'D'), 'nummod'), (('D', 'C'), 'conj'), (('4', 'Free'), 'compound'), (('7', 'Free'), 'compound'), (('Free', 'D'), 'conj'), ((':', 'Prof.'), 'punct'), (('1', 'Prof.'), 'compound'), (('Prof.', 'Firoz'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'conj'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'B'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'required'), 'dep'), (('5', 'Unit'), 'dep'), (('–', 'Deadlock'), 'punct'), (('Deadlock', 'required'), 'dep'), (('‹#›', 'Process'), 'compound'), (('Process', 'Deadlock'), 'conj'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Prof.'), 'conj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Prof.'), 'conj'), (('P1', 'required'), 'dep'), (('1', 'P1'), 'dep'), (('1', '1'), 'flat'), (('0', 'P2'), 'dep'), (('0', 'P2'), 'dep'), (('P2', 'Prof.'), 'conj'), (('0', '1'), 'flat'), (('1', 'Prof.'), 'dep'), (('1', 'Prof.'), 'dep'), (('2', 'P3'), 'dep'), (('P3', '1'), 'compound'), (('3', '1'), 'compound'), (('1', 'Prof.'), 'dep'), (('0', 'P4'), 'dep'), (('0', 'P4'), 'dep'), (('P4', 'Prof.'), 'conj'), (('0', '1'), 'flat'), (('0', '1'), 'compound'), (('1', 'P5'), 'dep'), (('0', 'P5'), 'compound'), (('P5', 'Prof.'), 'conj'), (('2', 'Prof.'), 'dep'), (('1', 'Prof.'), 'dep'), (('1', 'Prof.'), 'dep'), (('0', '1'), 'flat'), (('no', 'resources'), 'dep'), (('of', 'resources'), 'case'), (('resources', 'Prof.'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'resource'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'dep'), (('6', 'Roms'), 'dep'), (('3', '4'), 'compound'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Scanners'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '3'), 'compound'), (('3', 'Roms'), 'dep'), (('2', '3'), 'compound'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Roms'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'algorithm'), 'conj'), (('P1', '3'), 'compound'), (('3', '1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P2'), 'compound'), (('1', 'P2'), 'compound'), (('P2', '1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P3'), 'dep'), (('0', 'P3'), 'compound'), (('0', 'P3'), 'compound'), (('P3', '1'), 'compound'), (('1', '1'), 'nmod'), (('1', 'required'), 'dep'), (('1', 'P4'), 'compound'), (('0', 'P4'), 'compound'), (('P4', '1'), 'compound'), (('1', 'required'), 'dep'), (('1', '1'), 'nmod'), (('0', 'P5'), 'nummod'), (('1', 'P5'), 'nummod'), (('P5', 'P4'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', '0'), 'compound'), (('total', 'no'), 'amod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'no'), 'nmod'), (('hold', 'Prof.'), 'conj'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'process'), 'appos'), (('Drives', 'process'), 'conj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('1', 'Roms'), 'dep'), (('0', '2'), 'compound'), (('2', 'Roms'), 'dep'), (('0', 'free'), 'dep'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'Drives'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', 'resources'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('3140702', 'OS'), 'dep'), (('(', 'OS'), 'punct'), (('OS', '#'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'punct'), (('Unit', 'Prof.'), 'compound'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Unit'), 'compound'), (('P1', 'Roms'), 'compound'), (('1', 'P1'), 'nummod'), (('1', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P2'), 'nummod'), (('1', '1'), 'compound'), (('2', '1'), 'compound'), (('P3', 'P2'), 'compound'), (('3', '1'), 'compound'), (('1', 'P4'), 'nummod'), (('0', '1'), 'compound'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('0', 'P4'), 'nummod'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', 'P4'), 'compound'), (('2', 'P5'), 'nummod'), (('1', 'P5'), 'nummod'), (('1', '1'), 'compound'), (('0', '1'), 'compound'), (('no', 'resources'), 'det'), (('of', 'resources'), 'case'), (('resources', 'P5'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', 'Roms'), 'nummod'), (('3', 'Drives'), 'nummod'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'conj'), (('5', 'Roms'), 'nummod'), (('3', '2'), 'compound'), (('2', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'compound'), (('P1', 'Roms'), 'compound'), (('3', '1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P2'), 'nummod'), (('1', '1'), 'compound'), (('P2', 'P1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P2'), 'nummod'), (('0', '1'), 'compound'), (('0', 'P3'), 'nummod'), (('P3', '1'), 'compound'), (('1', 'P3'), 'nummod'), (('1', 'P3'), 'nummod'), (('1', '1'), 'nmod'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('1', 'P4'), 'nummod'), (('1', '1'), 'nmod'), (('1', '1'), 'nmod'), (('1', 'P5'), 'nummod'), (('P5', 'P4'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', '0'), 'compound'), (('total', 'hold'), 'nsubj'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'Prof.'), 'conj'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'hold'), 'nsubj'), (('1', 'Roms'), 'nummod'), (('0', 'available'), 'compound'), (('1', 'available'), 'compound'), (('0', 'free'), 'nummod'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'resources'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', 'resources'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Unit'), 'compound'), (('Drives', 'Tape'), 'compound'), (('Plotters', 'Drives'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'compound'), (('P1', 'Roms'), 'compound'), (('1', 'P1'), 'nummod'), (('1', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'Roms'), 'compound'), (('0', 'P2'), 'nummod'), (('1', 'P2'), 'nummod'), (('1', '2'), 'compound'), (('2', 'P3'), 'nummod'), (('P3', 'P2'), 'appos'), (('3', 'P3'), 'nummod'), (('1', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'appos'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', 'P4'), 'appos'), (('2', 'P5'), 'nummod'), (('1', '0'), 'compound'), (('1', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('no', 'P5'), 'det'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'P5'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'Drives'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'algorithm'), 'nmod'), (('6', 'Plotters'), 'nummod'), (('3', 'Drives'), 'nummod'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', 'Process'), 'nummod'), (('3', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Process', 'Roms'), 'compound'), (('Tape', 'Plotters'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Process'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Plotters'), 'compound'), (('P1', 'Roms'), 'appos'), (('3', 'P1'), 'nummod'), (('0', 'Roms'), 'nummod'), (('1', 'P2'), 'nummod'), (('1', 'P2'), 'nummod'), (('P2', 'Roms'), 'appos'), (('0', 'P2'), 'nummod'), (('1', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P3'), 'nummod'), (('P3', 'P2'), 'appos'), (('1', 'P3'), 'nummod'), (('1', 'P4'), 'nummod'), (('1', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'appos'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', 'P4'), 'nmod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('total', 'hold'), 'nsubj'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'no'), 'nmod'), (('hold', '0'), 'acl:relcl'), (('no', 'hold'), 'obj'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('held', 'resources'), 'acl'), (('by', 'Drives'), 'case'), (('each', 'Drives'), 'det'), (('process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'held'), 'obl'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'appos'), (('2', '2'), 'compound'), (('1', 'available'), 'nummod'), (('2', 'available'), 'nummod'), (('1', '2'), 'compound'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'resources'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'appos'), (('Prof', 'resources'), 'appos'), (('.', 'Prof.'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL'), ('7', 'CARDINAL'), ('1', 'CARDINAL'), ('5', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('P5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 89 ===========================

 Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	1	1	2 	P3	3	1	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	4	1	1	1 	P2	0	1	0	0 	P3	1	1	1	0 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	1	0	2	1  available (free) resources    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	1	1	2 	P3	3	1	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	0	1	0	0 	P3	1	1	1	0 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	5	1	3	2  available (free) resources           Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	0	0	0 	P3	3	1	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	0	2	1	2 	P3	1	1	1	0 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	5	0	2	0  available (free) resources    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	0	0	0 	P3	3	1	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	1	1	1	0 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	5	2	3	2  available (free) resources         Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	0	0	0 	P3	0	0	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	4	2	1	0 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	2	1	3	2  available (free) resources    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	0	0	0 	P3	0	0	0	0 	P4	0	0	0	0 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	-	-	-	- 	P4	-	-	-	- 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  available (free) resources           Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	0	0	0 	P3	0	0	0	0 	P4	0	0	0	0 	P5	0	0	0	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	-	-	-	- 	P4	-	-	-	- 	P5	2	1	1	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	2  available (free) resources    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0	0	0	0 	P2	0	0	0	0 	P3	0	0	0	0 	P4	0	0	0	0 	P5	0	0	0	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	-	-	-	- 	P4	-	-	-	- 	P5	-	-	-	-  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  available (free) resources     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 	P2	0	1	1	2 	P3	3	1	0	0 	P4	0	0	1	1 	P5	2	1	1	0  no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0	1	0	0 	P3	1	1	1	0 	P4	1	1	0	1 	P5	0	0	0	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	1	0	2	0  available (free) resources      Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock prevention Section - 6      Deadlock prevention Deadlock can be prevented by attacking the one of the four conditions that leads to deadlock. 

Tokens are: 
>> ['Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '1', '1', '2', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '4', '1', '1', '1', 'P2', '0', '1', '0', '0', 'P3', '1', '1', '1', '0', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '1', '0', '2', '1', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '1', '1', '2', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '0', '1', '0', '0', 'P3', '1', '1', '1', '0', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '1', '3', '2', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '0', '0', '0', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '0', '2', '1', '2', 'P3', '1', '1', '1', '0', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '0', '2', '0', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '0', '0', '0', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '-', '-', '-', '-', 'P3', '1', '1', '1', '0', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '2', '3', '2', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '0', '0', '0', 'P3', '0', '0', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '-', '-', '-', '-', 'P3', '4', '2', '1', '0', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '2', '1', '3', '2', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '0', '0', '0', 'P3', '0', '0', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '-', '-', '-', '-', 'P3', '-', '-', '-', '-', 'P4', '-', '-', '-', '-', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '0', '0', '0', 'P3', '0', '0', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '0', '0', '0', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '-', '-', '-', '-', 'P3', '-', '-', '-', '-', 'P4', '-', '-', '-', '-', 'P5', '2', '1', '1', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '4', '2', '3', '2', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '0', '0', '0', '0', 'P2', '0', '0', '0', '0', 'P3', '0', '0', '0', '0', 'P4', '0', '0', '0', '0', 'P5', '0', '0', '0', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '-', '-', '-', '-', 'P2', '-', '-', '-', '-', 'P3', '-', '-', '-', '-', 'P4', '-', '-', '-', '-', 'P5', '-', '-', '-', '-', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '1', '1', '0', '0', 'P2', '0', '1', '1', '2', 'P3', '3', '1', '0', '0', 'P4', '0', '0', '1', '1', 'P5', '2', '1', '1', '0', 'no', 'of', 'resources', 'still', 'needed', 'by', 'each', 'process', 'to', 'proceed', 'Banker', '’s', 'algorithm', 'for', 'multiple', 'resource', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '6', '3', '4', '2', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '5', '3', '2', '2', 'Process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', 'P1', '3', '0', '1', '1', 'P2', '0', '1', '0', '0', 'P3', '1', '1', '1', '0', 'P4', '1', '1', '0', '1', 'P5', '0', '0', '0', '0', 'total', 'no', 'of', 'each', 'resource', 'resources', 'hold', 'no', 'of', 'resources', 'held', 'by', 'each', 'process', 'Tape', 'Drives', 'Plotters', 'Scanners', 'CD', 'Roms', '1', '0', '2', '0', 'available', '(', 'free', ')', 'resources', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'prevention', 'Section', '-', '6', 'Deadlock', 'prevention', 'Deadlock', 'can', 'be', 'prevented', 'by', 'attacking', 'the', 'one', 'of', 'the', 'four', 'conditions', 'that', 'leads', 'to', 'deadlock', '.'] 

 UPOS tags are: 
>> [('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('4', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('1', 'NUM'), ('0', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'PROPN'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('1', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'PROPN'), ('0', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('0', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P3', 'NOUN'), ('4', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('2', 'NUM'), ('1', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P2', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P3', 'NOUN'), ('-', 'PUNCT'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'PUNCT'), ('P4', 'NOUN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P2', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P3', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P4', 'NOUN'), ('-', 'PUNCT'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'PUNCT'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('4', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P5', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P2', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P3', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P4', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('P5', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'ADV'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'SYM'), ('Deadlock', 'PROPN'), ('‹#›', 'PROPN'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P3', 'NOUN'), ('3', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P5', 'NOUN'), ('2', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('still', 'ADV'), ('needed', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('to', 'PART'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('’s', 'PART'), ('algorithm', 'NOUN'), ('for', 'ADP'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('6', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('2', 'NUM'), ('Process', 'PROPN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('P1', 'PROPN'), ('3', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('P2', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('P3', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('P4', 'NOUN'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('P5', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('total', 'ADJ'), ('no', 'DET'), ('of', 'ADP'), ('each', 'DET'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('no', 'DET'), ('of', 'ADP'), ('resources', 'NOUN'), ('held', 'VERB'), ('by', 'ADP'), ('each', 'DET'), ('process', 'NOUN'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('Plotters', 'PROPN'), ('Scanners', 'PROPN'), ('CD', 'PROPN'), ('Roms', 'PROPN'), ('1', 'NUM'), ('0', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Deadlock', 'NOUN'), ('prevention', 'NOUN'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('6', 'NUM'), ('Deadlock', 'NOUN'), ('prevention', 'NOUN'), ('Deadlock', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('prevented', 'VERB'), ('by', 'SCONJ'), ('attacking', 'VERB'), ('the', 'DET'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('four', 'NUM'), ('conditions', 'NOUN'), ('that', 'PRON'), ('leads', 'VERB'), ('to', 'ADP'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('4', 'CD'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('1', 'CD'), ('0', 'CD'), ('2', 'CD'), ('1', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'NNP'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('1', 'CD'), ('3', 'CD'), ('2', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'NNP'), ('0', 'CD'), ('2', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('0', 'CD'), ('2', 'CD'), ('0', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('2', 'CD'), ('3', 'CD'), ('2', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P2', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P3', 'NN'), ('4', 'CD'), ('2', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('2', 'CD'), ('1', 'CD'), ('3', 'CD'), ('2', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P2', 'NN'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P3', 'NN'), ('-', 'HYPH'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'HYPH'), ('P4', 'NN'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'SYM'), ('P5', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P2', 'NNP'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P3', 'NN'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P4', 'NN'), ('-', 'HYPH'), ('-', 'SYM'), ('-', 'SYM'), ('-', 'HYPH'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('4', 'CD'), ('2', 'CD'), ('3', 'CD'), ('2', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P5', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P2', 'NNP'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P3', 'NNP'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P4', 'NN'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('P5', 'NN'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('-', 'HYPH'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'RB'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', 'SYM'), ('Deadlock', 'NNP'), ('‹#›', 'NNP'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P3', 'NN'), ('3', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P5', 'NN'), ('2', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('still', 'RB'), ('needed', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('to', 'TO'), ('proceed', 'VB'), ('Banker', 'NNP'), ('’s', 'POS'), ('algorithm', 'NN'), ('for', 'IN'), ('multiple', 'JJ'), ('resource', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('6', 'CD'), ('3', 'CD'), ('4', 'CD'), ('2', 'CD'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('5', 'CD'), ('3', 'CD'), ('2', 'CD'), ('2', 'CD'), ('Process', 'NNP'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNP'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('P1', 'NNP'), ('3', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('P2', 'NN'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('P3', 'NN'), ('1', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('P4', 'NN'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('P5', 'NN'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('total', 'JJ'), ('no', 'DT'), ('of', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('resources', 'NNS'), ('hold', 'VBP'), ('no', 'DT'), ('of', 'IN'), ('resources', 'NNS'), ('held', 'VBN'), ('by', 'IN'), ('each', 'DT'), ('process', 'NN'), ('Tape', 'NNP'), ('Drives', 'NNPS'), ('Plotters', 'NNPS'), ('Scanners', 'NNPS'), ('CD', 'NNP'), ('Roms', 'NNPS'), ('1', 'CD'), ('0', 'CD'), ('2', 'CD'), ('0', 'CD'), ('available', 'JJ'), ('(', '-LRB-'), ('free', 'JJ'), (')', '-RRB-'), ('resources', 'NNS'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Deadlock', 'NN'), ('prevention', 'NN'), ('Section', 'NN'), ('-', 'HYPH'), ('6', 'CD'), ('Deadlock', 'NN'), ('prevention', 'NN'), ('Deadlock', 'NN'), ('can', 'MD'), ('be', 'VB'), ('prevented', 'VBN'), ('by', 'IN'), ('attacking', 'VBG'), ('the', 'DT'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('four', 'CD'), ('conditions', 'NNS'), ('that', 'WDT'), ('leads', 'VBZ'), ('to', 'IN'), ('deadlock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('4', '4'), ('1', '1'), ('1', '1'), ('1', '1'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'P5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('1', '1'), ('0', '0'), ('2', '2'), ('1', '1'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'P2'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'P5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('1', '1'), ('3', '3'), ('2', '2'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'P2'), ('0', '0'), ('2', '2'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'P5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('0', '0'), ('2', '2'), ('0', '0'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'p2'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('2', '2'), ('3', '3'), ('2', '2'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'p2'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P3', 'p3'), ('4', '4'), ('2', '2'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('2', '2'), ('1', '1'), ('3', '3'), ('2', '2'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'p2'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P3', 'p3'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'P2'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P3', 'p3'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('4', '4'), ('2', '2'), ('3', '3'), ('2', '2'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P2', 'P2'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P3', 'P3'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P4', 'p4'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('P5', 'p5'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'Deadlock'), ('‹#›', '‹#›'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('1', '1'), ('2', '2'), ('P3', 'p3'), ('3', '3'), ('1', '1'), ('0', '0'), ('0', '0'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('1', '1'), ('1', '1'), ('P5', 'p5'), ('2', '2'), ('1', '1'), ('1', '1'), ('0', '0'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('still', 'still'), ('needed', 'need'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('to', 'to'), ('proceed', 'proceed'), ('Banker', 'Banker'), ('’s', "'s"), ('algorithm', 'algorithm'), ('for', 'for'), ('multiple', 'multiple'), ('resource', 'resource'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('6', '6'), ('3', '3'), ('4', '4'), ('2', '2'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('5', '5'), ('3', '3'), ('2', '2'), ('2', '2'), ('Process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('P1', 'P1'), ('3', '3'), ('0', '0'), ('1', '1'), ('1', '1'), ('P2', 'p2'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('P3', 'p3'), ('1', '1'), ('1', '1'), ('1', '1'), ('0', '0'), ('P4', 'p4'), ('1', '1'), ('1', '1'), ('0', '0'), ('1', '1'), ('P5', 'p5'), ('0', '0'), ('0', '0'), ('0', '0'), ('0', '0'), ('total', 'total'), ('no', 'no'), ('of', 'of'), ('each', 'each'), ('resource', 'resource'), ('resources', 'resource'), ('hold', 'hold'), ('no', 'no'), ('of', 'of'), ('resources', 'resource'), ('held', 'hold'), ('by', 'by'), ('each', 'each'), ('process', 'process'), ('Tape', 'tape'), ('Drives', 'Drives'), ('Plotters', 'Plotter'), ('Scanners', 'Scanners'), ('CD', 'CD'), ('Roms', 'Rom'), ('1', '1'), ('0', '0'), ('2', '2'), ('0', '0'), ('available', 'available'), ('(', '('), ('free', 'free'), (')', ')'), ('resources', 'resource'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('prevention', 'prevention'), ('Section', 'section'), ('-', '-'), ('6', '6'), ('Deadlock', 'deadlock'), ('prevention', 'prevention'), ('Deadlock', 'deadlock'), ('can', 'can'), ('be', 'be'), ('prevented', 'prevent'), ('by', 'by'), ('attacking', 'attack'), ('the', 'the'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('four', 'four'), ('conditions', 'condition'), ('that', 'that'), ('leads', 'lead'), ('to', 'to'), ('deadlock', 'deadlock'), ('.', '.')] 

 Dependency tags are: 
>> [(('Firoz', 'root'), 'root'), (('A', 'Firoz'), 'flat'), (('Sherasiya', '#'), 'flat'), (('#', 'Firoz'), 'flat'), (('3140702', 'OS'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'nummod'), (('Unit', 'Firoz'), 'conj'), (('5', 'OS'), 'dep'), (('–', 'Deadlock'), 'punct'), (('Deadlock', 'Unit'), 'conj'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Unit'), 'conj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Drives'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'conj'), (('P1', 'Drives'), 'dep'), (('0', 'Drives'), 'dep'), (('0', 'Drives'), 'dep'), (('0', 'P2'), 'dep'), (('0', 'P2'), 'dep'), (('P2', 'Firoz'), 'conj'), (('0', '1'), 'dep'), (('1', '1'), 'dep'), (('1', 'P3'), 'dep'), (('2', 'P3'), 'dep'), (('P3', '3'), 'dep'), (('3', '1'), 'dep'), (('1', 'P4'), 'dep'), (('0', 'P4'), 'dep'), (('0', 'P4'), 'dep'), (('P4', 'Firoz'), 'conj'), (('0', '0'), 'dep'), (('0', '0'), 'dep'), (('0', 'P5'), 'dep'), (('0', 'P5'), 'dep'), (('P5', 'Firoz'), 'conj'), (('2', '1'), 'dep'), (('1', '1'), 'dep'), (('1', 'P5'), 'dep'), (('0', '1'), 'flat'), (('no', 'Deadlock'), 'conj'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'proceed'), 'obj'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'resource'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'algorithm'), 'nmod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'resource'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'conj'), (('6', '3'), 'compound'), (('3', 'Roms'), 'dep'), (('4', 'Roms'), 'dep'), (('2', 'Drives'), 'dep'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'conj'), (('Plotters', 'Roms'), 'conj'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Deadlock'), 'conj'), (('5', '3'), 'compound'), (('3', 'Roms'), 'dep'), (('2', 'Process'), 'dep'), (('2', 'Process'), 'dep'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'conj'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', '4'), 'compound'), (('4', '1'), 'flat'), (('1', '1'), 'compound'), (('1', 'P2'), 'dep'), (('1', 'P2'), 'compound'), (('P2', 'Roms'), 'conj'), (('0', '1'), 'compound'), (('1', 'P3'), 'dep'), (('0', 'P3'), 'dep'), (('0', 'P3'), 'dep'), (('P3', '1'), 'dep'), (('1', '1'), 'compound'), (('1', 'Firoz'), 'dep'), (('1', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'dep'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', 'Roms'), 'nmod'), (('0', '0'), 'compound'), (('0', '0'), 'dep'), (('0', 'P5'), 'dep'), (('0', 'P5'), 'dep'), (('total', 'hold'), 'advmod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'no'), 'nmod'), (('hold', 'Firoz'), 'conj'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('1', '2'), 'compound'), (('0', '2'), 'compound'), (('2', 'free'), 'dep'), (('1', 'free'), 'dep'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'Unit'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', 'Unit'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', 'OS'), 'dep'), (('(', 'OS'), 'punct'), (('OS', '#'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', '5'), 'dep'), (('5', 'Process'), 'dep'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'P1'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'P2'), 'compound'), (('0', 'P2'), 'dep'), (('0', 'P2'), 'dep'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P3'), 'compound'), (('0', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'P3'), 'dep'), (('2', 'P3'), 'compound'), (('P3', 'P4'), 'compound'), (('3', '1'), 'compound'), (('1', 'P4'), 'dep'), (('0', 'P4'), 'dep'), (('0', 'P4'), 'nummod'), (('P4', 'P5'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', 'needed'), 'dep'), (('2', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'needed'), 'dep'), (('0', '1'), 'compound'), (('no', 'resources'), 'conj'), (('of', 'resources'), 'case'), (('resources', 'P4'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'Firoz'), 'conj'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'resource'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', '3'), 'compound'), (('3', '4'), 'compound'), (('4', 'Drives'), 'compound'), (('2', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '3'), 'compound'), (('3', '2'), 'compound'), (('2', 'Process'), 'compound'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'held'), 'obl'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('P2', '1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P3'), 'dep'), (('0', 'P3'), 'dep'), (('0', 'P3'), 'nummod'), (('P3', '1'), 'compound'), (('1', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'P5'), 'dep'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', '0'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'Roms'), 'dep'), (('0', '0'), 'compound'), (('total', 'hold'), 'advmod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'Firoz'), 'conj'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('5', '1'), 'compound'), (('1', '3'), 'compound'), (('3', 'free'), 'dep'), (('2', 'free'), 'dep'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'process'), 'conj'), ((')', 'free'), 'punct'), (('resources', 'Drives'), 'conj'), (('Prof.', '#'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'OS'), 'compound'), (('3140702', 'OS'), 'dep'), (('(', 'OS'), 'punct'), (('OS', 'Roms'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', '5'), 'dep'), (('5', 'Process'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'P2'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P3'), 'compound'), (('0', 'P3'), 'compound'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('P3', 'P4'), 'compound'), (('3', '1'), 'compound'), (('1', 'P4'), 'dep'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P5'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', '1'), 'compound'), (('2', '1'), 'compound'), (('1', 'P2'), 'compound'), (('1', '1'), 'compound'), (('0', '1'), 'compound'), (('no', 'resources'), 'conj'), (('of', 'resources'), 'case'), (('resources', 'P4'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'P5'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'resource'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', '3'), 'compound'), (('3', '4'), 'compound'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '3'), 'compound'), (('3', '2'), 'compound'), (('2', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'held'), 'nsubj'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('P2', '2'), 'compound'), (('0', '2'), 'compound'), (('2', '1'), 'compound'), (('1', 'P3'), 'compound'), (('2', 'P3'), 'compound'), (('P3', '1'), 'compound'), (('1', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'P5'), 'compound'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', 'hold'), 'dep'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'dep'), (('0', '0'), 'compound'), (('total', 'no'), 'amod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'Firoz'), 'conj'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('5', '0'), 'compound'), (('0', '2'), 'compound'), (('2', 'free'), 'dep'), (('0', 'free'), 'dep'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'process'), 'parataxis'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', '#'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'OS'), 'compound'), (('3140702', 'OS'), 'dep'), (('(', 'OS'), 'punct'), (('OS', 'resources'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'compound'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'P2'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P3'), 'compound'), (('0', 'P3'), 'compound'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('P3', 'P4'), 'compound'), (('3', '1'), 'compound'), (('1', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P5'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', '1'), 'compound'), (('2', '1'), 'compound'), (('1', 'P3'), 'compound'), (('1', '1'), 'compound'), (('0', '1'), 'compound'), (('no', 'resources'), 'det'), (('of', 'resources'), 'case'), (('resources', 'P4'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'P5'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'resource'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', '3'), 'compound'), (('3', '4'), 'compound'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '3'), 'compound'), (('3', 'Roms'), 'nummod'), (('2', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('P1', 'Roms'), 'compound'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('P2', 'P1'), 'nmod'), (('-', 'P3'), 'case'), (('-', 'P3'), 'case'), (('-', 'P3'), 'case'), (('-', 'P3'), 'case'), (('P3', '1'), 'compound'), (('1', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'hold'), 'dep'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', '0'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'hold'), 'dep'), (('0', '0'), 'compound'), (('total', 'no'), 'amod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'Firoz'), 'conj'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('5', '3'), 'compound'), (('2', '3'), 'compound'), (('3', 'free'), 'dep'), (('2', 'free'), 'dep'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'available'), 'conj'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', '#'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'OS'), 'compound'), (('3140702', 'OS'), 'dep'), (('(', 'OS'), 'punct'), (('OS', 'resources'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'compound'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'P2'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P3'), 'compound'), (('0', '0'), 'compound'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('P3', 'P4'), 'compound'), (('0', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P5'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', 'needed'), 'dep'), (('2', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'P5'), 'nummod'), (('0', '1'), 'compound'), (('no', 'resources'), 'det'), (('of', 'resources'), 'case'), (('resources', 'P4'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'hold'), 'advcl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'resource'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', '3'), 'compound'), (('3', '4'), 'compound'), (('4', 'Tape'), 'compound'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '3'), 'compound'), (('3', 'Roms'), 'nummod'), (('2', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('P1', 'Roms'), 'compound'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('-', 'P2'), 'case'), (('P2', 'P1'), 'nmod'), (('-', 'P3'), 'case'), (('-', 'P3'), 'case'), (('-', 'P3'), 'case'), (('-', 'P3'), 'case'), (('P3', '4'), 'compound'), (('4', '2'), 'compound'), (('2', 'P5'), 'compound'), (('1', '2'), 'compound'), (('0', '2'), 'compound'), (('P4', '2'), 'compound'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', '0'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'hold'), 'dep'), (('0', '0'), 'compound'), (('total', 'no'), 'amod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'Roms'), 'acl:relcl'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('2', '1'), 'compound'), (('1', '3'), 'compound'), (('3', 'free'), 'dep'), (('2', 'free'), 'dep'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'available'), 'conj'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', 'resources'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'OS'), 'compound'), (('3140702', 'OS'), 'dep'), (('(', 'OS'), 'punct'), (('OS', 'Prof.'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'compound'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'P2'), 'compound'), (('0', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'Unit'), 'dep'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('P3', 'P2'), 'compound'), (('0', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('P5', 'P4'), 'compound'), (('2', '1'), 'compound'), (('1', '1'), 'compound'), (('1', 'P5'), 'nummod'), (('0', '1'), 'compound'), (('no', 'resources'), 'det'), (('of', 'resources'), 'case'), (('resources', 'P4'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'P5'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'Drives'), 'amod'), (('resource', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', '3'), 'compound'), (('3', '4'), 'compound'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '3'), 'compound'), (('3', 'Roms'), 'nummod'), (('2', 'Roms'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'compound'), (('P1', 'Roms'), 'compound'), (('-', 'P2'), 'punct'), (('-', 'P2'), 'punct'), (('-', 'P2'), 'punct'), (('-', 'P2'), 'punct'), (('P2', 'P1'), 'compound'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('P3', 'P2'), 'compound'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'case'), (('-', 'P4'), 'case'), (('-', 'P4'), 'punct'), (('P4', 'P3'), 'nmod'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('P5', '0'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'hold'), 'dep'), (('0', 'P5'), 'nummod'), (('total', 'no'), 'amod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'P3'), 'acl:relcl'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('6', '3'), 'compound'), (('3', '4'), 'compound'), (('4', 'Roms'), 'dep'), (('2', 'free'), 'nummod'), (('available', 'free'), 'amod'), (('(', 'free'), 'punct'), (('free', 'resources'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', '#'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'held'), 'obl'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'compound'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'P2'), 'compound'), (('0', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'Unit'), 'dep'), (('0', '0'), 'compound'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('P3', 'P2'), 'compound'), (('0', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'compound'), (('0', 'P5'), 'compound'), (('P5', 'P3'), 'dep'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P5'), 'compound'), (('0', '0'), 'compound'), (('no', 'resources'), 'det'), (('of', 'resources'), 'case'), (('resources', '0'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'Drives'), 'amod'), (('resource', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', 'Roms'), 'nummod'), (('3', 'Drives'), 'nummod'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', '2'), 'compound'), (('3', '2'), 'compound'), (('2', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'CD'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'compound'), (('P1', 'Roms'), 'compound'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('-', 'P2'), 'punct'), (('P2', 'P1'), 'compound'), (('-', 'P3'), 'punct'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('-', 'P2'), 'punct'), (('P3', 'P2'), 'compound'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('P4', 'P3'), 'compound'), (('-', 'P5'), 'punct'), (('-', 'P5'), 'case'), (('-', 'P5'), 'case'), (('-', 'P5'), 'punct'), (('P5', 'P4'), 'compound'), (('2', 'P4'), 'nummod'), (('1', '0'), 'compound'), (('1', '0'), 'compound'), (('0', 'hold'), 'dep'), (('total', 'hold'), 'nsubj'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', '2'), 'dep'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'hold'), 'nsubj'), (('4', 'Roms'), 'compound'), (('2', 'available'), 'compound'), (('3', 'available'), 'compound'), (('2', 'available'), 'compound'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'resources'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', 'resources'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', 'OS'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'dep'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'held'), 'obl'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'CD'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Unit'), 'compound'), (('P1', 'Roms'), 'compound'), (('0', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P1'), 'compound'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('P3', 'P2'), 'compound'), (('0', 'P3'), 'nummod'), (('0', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('0', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('P5', 'P4'), 'nummod'), (('0', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P4'), 'nummod'), (('0', '0'), 'compound'), (('no', '0'), 'det'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'no'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'Drives'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'proceed'), 'obj'), (('6', 'Drives'), 'nummod'), (('3', 'Drives'), 'nummod'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Scanners'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', 'Drives'), 'nummod'), (('3', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'compound'), (('P1', 'Roms'), 'compound'), (('-', 'Roms'), 'punct'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('-', 'P3'), 'punct'), (('P2', 'P1'), 'compound'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('-', 'P4'), 'punct'), (('P3', 'P2'), 'compound'), (('-', 'P2'), 'punct'), (('-', 'P2'), 'punct'), (('-', 'P2'), 'punct'), (('-', 'P3'), 'punct'), (('P4', 'P3'), 'compound'), (('-', 'P5'), 'punct'), (('-', 'P5'), 'punct'), (('-', 'P5'), 'punct'), (('-', 'P5'), 'punct'), (('P5', 'P4'), 'compound'), (('-', 'total'), 'punct'), (('-', 'total'), 'punct'), (('-', 'total'), 'punct'), (('-', 'total'), 'punct'), (('total', 'no'), 'amod'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'hold'), 'nsubj'), (('hold', 'P5'), 'parataxis'), (('no', 'hold'), 'advmod'), (('of', 'resources'), 'case'), (('resources', 'hold'), 'obl'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'process'), 'appos'), (('Drives', 'process'), 'conj'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('6', 'Roms'), 'nummod'), (('3', '4'), 'compound'), (('4', 'available'), 'nummod'), (('2', 'available'), 'nummod'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'Roms'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'conj'), (('Prof.', 'resources'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Prof.'), 'parataxis'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'punct'), (('Unit', 'Prof.'), 'compound'), (('5', 'Unit'), 'nummod'), (('–', 'Deadlock'), 'case'), (('Deadlock', 'Process'), 'compound'), (('‹#›', 'Process'), 'compound'), (('Process', 'Tape'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Plotters'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'P1'), 'compound'), (('P1', 'Unit'), 'compound'), (('1', 'P1'), 'nummod'), (('1', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('0', 'P2'), 'nummod'), (('P2', 'P1'), 'compound'), (('0', 'P2'), 'nummod'), (('1', '1'), 'compound'), (('1', 'P2'), 'nummod'), (('2', '1'), 'compound'), (('P3', 'P2'), 'compound'), (('3', '1'), 'compound'), (('1', 'P3'), 'nummod'), (('0', '1'), 'compound'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('0', 'P4'), 'nummod'), (('0', 'P4'), 'nummod'), (('1', 'P4'), 'nummod'), (('1', '1'), 'compound'), (('P5', 'P4'), 'compound'), (('2', 'P5'), 'nummod'), (('1', 'P5'), 'nummod'), (('1', '1'), 'compound'), (('0', '1'), 'compound'), (('no', 'needed'), 'obl:npmod'), (('of', 'resources'), 'case'), (('resources', 'P5'), 'nmod'), (('still', 'needed'), 'advmod'), (('needed', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'needed'), 'obl'), (('to', 'proceed'), 'mark'), (('proceed', 'needed'), 'advcl'), (('Banker', 'algorithm'), 'nmod:poss'), (('’s', 'Banker'), 'case'), (('algorithm', 'proceed'), 'obj'), (('for', 'Roms'), 'case'), (('multiple', 'Drives'), 'amod'), (('resource', 'Drives'), 'compound'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'CD'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'algorithm'), 'nmod'), (('6', 'Drives'), 'nummod'), (('3', 'Drives'), 'nummod'), (('4', 'Drives'), 'nummod'), (('2', 'Drives'), 'nummod'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Roms'), 'conj'), (('5', 'Process'), 'nummod'), (('3', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('2', 'Process'), 'nummod'), (('Process', 'Drives'), 'compound'), (('Tape', 'Roms'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'Drives'), 'compound'), (('P1', 'Roms'), 'compound'), (('3', '1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P1'), 'nummod'), (('1', '1'), 'compound'), (('P2', 'P1'), 'compound'), (('0', '1'), 'compound'), (('1', 'P2'), 'nummod'), (('0', '1'), 'compound'), (('0', '1'), 'compound'), (('P3', 'P2'), 'compound'), (('1', 'P3'), 'nummod'), (('1', 'P3'), 'nummod'), (('1', '1'), 'compound'), (('0', 'P4'), 'nummod'), (('P4', 'P3'), 'compound'), (('1', 'P4'), 'nummod'), (('1', 'P4'), 'nummod'), (('0', '1'), 'compound'), (('1', 'P5'), 'nummod'), (('P5', 'P4'), 'appos'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('0', 'P5'), 'nummod'), (('total', 'hold'), 'nsubj'), (('no', 'hold'), 'nsubj'), (('of', 'resources'), 'case'), (('each', 'resources'), 'det'), (('resource', 'resources'), 'compound'), (('resources', 'no'), 'nmod'), (('hold', 'P5'), 'parataxis'), (('no', 'hold'), 'obj'), (('of', 'resources'), 'case'), (('resources', 'no'), 'nmod'), (('held', 'resources'), 'acl'), (('by', 'process'), 'case'), (('each', 'process'), 'det'), (('process', 'held'), 'obl'), (('Tape', 'Drives'), 'compound'), (('Drives', 'Roms'), 'compound'), (('Plotters', 'Roms'), 'compound'), (('Scanners', 'Roms'), 'compound'), (('CD', 'Roms'), 'compound'), (('Roms', 'process'), 'conj'), (('1', 'available'), 'compound'), (('0', 'available'), 'nummod'), (('2', 'resources'), 'nummod'), (('0', 'Roms'), 'nummod'), (('available', 'resources'), 'amod'), (('(', 'free'), 'punct'), (('free', 'resources'), 'amod'), ((')', 'free'), 'punct'), (('resources', 'Roms'), 'appos'), (('Prof.', 'resources'), 'compound'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', 'Prof.'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Section'), 'compound'), (('‹#›', 'Section'), 'compound'), (('Deadlock', 'Section'), 'compound'), (('prevention', 'Deadlock'), 'compound'), (('Section', 'Deadlock'), 'compound'), (('-', 'Section'), 'punct'), (('6', 'Section'), 'nummod'), (('Deadlock', 'Deadlock'), 'compound'), (('prevention', 'Deadlock'), 'compound'), (('Deadlock', 'prevented'), 'nsubj:pass'), (('can', 'prevented'), 'aux'), (('be', 'prevented'), 'aux:pass'), (('prevented', 'Unit'), 'acl:relcl'), (('by', 'attacking'), 'mark'), (('attacking', 'prevented'), 'advcl'), (('the', 'one'), 'det'), (('one', 'attacking'), 'obj'), (('of', 'conditions'), 'case'), (('the', 'conditions'), 'det'), (('four', 'conditions'), 'nummod'), (('conditions', 'one'), 'nmod'), (('that', 'leads'), 'nsubj'), (('leads', 'conditions'), 'acl:relcl'), (('to', 'deadlock'), 'case'), (('deadlock', 'leads'), 'obl'), (('.', 'Deadlock'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('5', 'CARDINAL'), ('P5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('0', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('2', 'CARDINAL'), ('5', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('5', 'CARDINAL'), ('Deadlock prevention Section - 6      Deadlock prevention Deadlock', 'LAW'), ('one', 'CARDINAL'), ('four', 'CARDINAL')]

========================== Sentence 90 ===========================

 Attacking the Mutual Exclusion Condition 

Tokens are: 
>> ['Attacking', 'the', 'Mutual', 'Exclusion', 'Condition'] 

 UPOS tags are: 
>> [('Attacking', 'VERB'), ('the', 'DET'), ('Mutual', 'ADJ'), ('Exclusion', 'NOUN'), ('Condition', 'NOUN')] 

 XPOS tags are: 
>> [('Attacking', 'VBG'), ('the', 'DT'), ('Mutual', 'JJ'), ('Exclusion', 'NN'), ('Condition', 'NN')] 

 Lemmas are: 
>> [('Attacking', 'attack'), ('the', 'the'), ('Mutual', 'mutual'), ('Exclusion', 'exclusion'), ('Condition', 'condition')] 

 Dependency tags are: 
>> [(('Attacking', 'root'), 'root'), (('the', 'Condition'), 'det'), (('Mutual', 'Condition'), 'amod'), (('Exclusion', 'Condition'), 'compound'), (('Condition', 'Attacking'), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 91 ===========================

 No deadlock if each resource can be assigned to more than one process. 

Tokens are: 
>> ['No', 'deadlock', 'if', 'each', 'resource', 'can', 'be', 'assigned', 'to', 'more', 'than', 'one', 'process', '.'] 

 UPOS tags are: 
>> [('No', 'DET'), ('deadlock', 'NOUN'), ('if', 'SCONJ'), ('each', 'DET'), ('resource', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('assigned', 'VERB'), ('to', 'ADP'), ('more', 'ADJ'), ('than', 'ADP'), ('one', 'NUM'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('No', 'DT'), ('deadlock', 'NN'), ('if', 'IN'), ('each', 'DT'), ('resource', 'NN'), ('can', 'MD'), ('be', 'VB'), ('assigned', 'VBN'), ('to', 'IN'), ('more', 'JJR'), ('than', 'IN'), ('one', 'CD'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('No', 'no'), ('deadlock', 'deadlock'), ('if', 'if'), ('each', 'each'), ('resource', 'resource'), ('can', 'can'), ('be', 'be'), ('assigned', 'assign'), ('to', 'to'), ('more', 'more'), ('than', 'than'), ('one', 'one'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('No', 'deadlock'), 'det'), (('deadlock', 'root'), 'root'), (('if', 'assigned'), 'mark'), (('each', 'resource'), 'det'), (('resource', 'assigned'), 'nsubj:pass'), (('can', 'assigned'), 'aux'), (('be', 'assigned'), 'aux:pass'), (('assigned', 'deadlock'), 'advcl'), (('to', 'process'), 'case'), (('more', 'one'), 'advmod'), (('than', 'more'), 'fixed'), (('one', 'process'), 'nummod'), (('process', 'assigned'), 'obl'), (('.', 'deadlock'), 'punct')]

 Named Entities are: 
>> [('more than one', 'CARDINAL')]

========================== Sentence 92 ===========================

 We can not assign some resources to more than one process at a time such as CD-Recorder, Printer etc… 

Tokens are: 
>> ['We', 'can', 'not', 'assign', 'some', 'resources', 'to', 'more', 'than', 'one', 'process', 'at', 'a', 'time', 'such', 'as', 'CD-', 'Recorder', ',', 'Printer', 'etc', '…'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('can', 'AUX'), ('not', 'PART'), ('assign', 'VERB'), ('some', 'DET'), ('resources', 'NOUN'), ('to', 'ADP'), ('more', 'ADJ'), ('than', 'ADP'), ('one', 'NUM'), ('process', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('CD-', 'NOUN'), ('Recorder', 'NOUN'), (',', 'PUNCT'), ('Printer', 'NOUN'), ('etc', 'X'), ('…', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('can', 'MD'), ('not', 'RB'), ('assign', 'VB'), ('some', 'DT'), ('resources', 'NNS'), ('to', 'IN'), ('more', 'JJR'), ('than', 'IN'), ('one', 'CD'), ('process', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('CD-', 'NN'), ('Recorder', 'NN'), (',', ','), ('Printer', 'NN'), ('etc', 'FW'), ('…', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('can', 'can'), ('not', 'not'), ('assign', 'assign'), ('some', 'some'), ('resources', 'resource'), ('to', 'to'), ('more', 'more'), ('than', 'than'), ('one', 'one'), ('process', 'process'), ('at', 'at'), ('a', 'a'), ('time', 'time'), ('such', 'such'), ('as', 'as'), ('CD-', 'cd-'), ('Recorder', 'recorder'), (',', ','), ('Printer', 'printer'), ('etc', 'etc'), ('…', '…')] 

 Dependency tags are: 
>> [(('We', 'assign'), 'nsubj'), (('can', 'assign'), 'aux'), (('not', 'assign'), 'advmod'), (('assign', 'root'), 'root'), (('some', 'resources'), 'det'), (('resources', 'assign'), 'obj'), (('to', 'process'), 'case'), (('more', 'one'), 'advmod'), (('than', 'more'), 'fixed'), (('one', 'process'), 'nummod'), (('process', 'assign'), 'obl'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'assign'), 'obl'), (('such', 'Recorder'), 'case'), (('as', 'such'), 'fixed'), (('CD-', 'Recorder'), 'compound'), (('Recorder', 'process'), 'nmod'), ((',', 'Printer'), 'punct'), (('Printer', 'Recorder'), 'conj'), (('etc', 'Recorder'), 'conj'), (('…', 'assign'), 'punct')]

 Named Entities are: 
>> [('more than one', 'CARDINAL')]

========================== Sentence 93 ===========================

 So this solution is not feasible. 

Tokens are: 
>> ['So', 'this', 'solution', 'is', 'not', 'feasible', '.'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('this', 'DET'), ('solution', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('feasible', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('this', 'DT'), ('solution', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('feasible', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('this', 'this'), ('solution', 'solution'), ('is', 'be'), ('not', 'not'), ('feasible', 'feasible'), ('.', '.')] 

 Dependency tags are: 
>> [(('So', 'feasible'), 'advmod'), (('this', 'solution'), 'det'), (('solution', 'feasible'), 'nsubj'), (('is', 'feasible'), 'cop'), (('not', 'feasible'), 'advmod'), (('feasible', 'root'), 'root'), (('.', 'feasible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 94 ===========================

 Attacking the Hold and Wait Condition Require processes to request all their resources before starting execution. 

Tokens are: 
>> ['Attacking', 'the', 'Hold', 'and', 'Wait', 'Condition', 'Require', 'processes', 'to', 'request', 'all', 'their', 'resources', 'before', 'starting', 'execution', '.'] 

 UPOS tags are: 
>> [('Attacking', 'VERB'), ('the', 'DET'), ('Hold', 'NOUN'), ('and', 'CCONJ'), ('Wait', 'VERB'), ('Condition', 'NOUN'), ('Require', 'VERB'), ('processes', 'NOUN'), ('to', 'PART'), ('request', 'VERB'), ('all', 'DET'), ('their', 'PRON'), ('resources', 'NOUN'), ('before', 'SCONJ'), ('starting', 'VERB'), ('execution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Attacking', 'VBG'), ('the', 'DT'), ('Hold', 'NN'), ('and', 'CC'), ('Wait', 'VB'), ('Condition', 'NN'), ('Require', 'VBP'), ('processes', 'NNS'), ('to', 'TO'), ('request', 'VB'), ('all', 'PDT'), ('their', 'PRP$'), ('resources', 'NNS'), ('before', 'IN'), ('starting', 'VBG'), ('execution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Attacking', 'attack'), ('the', 'the'), ('Hold', 'hold'), ('and', 'and'), ('Wait', 'wait'), ('Condition', 'condition'), ('Require', 'require'), ('processes', 'process'), ('to', 'to'), ('request', 'request'), ('all', 'all'), ('their', 'they'), ('resources', 'resource'), ('before', 'before'), ('starting', 'start'), ('execution', 'execution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Attacking', 'Require'), 'csubj'), (('the', 'Condition'), 'det'), (('Hold', 'Condition'), 'compound'), (('and', 'Wait'), 'cc'), (('Wait', 'Hold'), 'conj'), (('Condition', 'Attacking'), 'obj'), (('Require', 'root'), 'root'), (('processes', 'Require'), 'obj'), (('to', 'request'), 'mark'), (('request', 'processes'), 'acl'), (('all', 'resources'), 'det:predet'), (('their', 'resources'), 'nmod:poss'), (('resources', 'request'), 'obj'), (('before', 'starting'), 'mark'), (('starting', 'request'), 'advcl'), (('execution', 'starting'), 'obj'), (('.', 'Require'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 95 ===========================

 A process is allowed to run if all resources it needed is available. 

Tokens are: 
>> ['A', 'process', 'is', 'allowed', 'to', 'run', 'if', 'all', 'resources', 'it', 'needed', 'is', 'available', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('process', 'NOUN'), ('is', 'AUX'), ('allowed', 'VERB'), ('to', 'PART'), ('run', 'VERB'), ('if', 'SCONJ'), ('all', 'DET'), ('resources', 'NOUN'), ('it', 'PRON'), ('needed', 'VERB'), ('is', 'AUX'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('process', 'NN'), ('is', 'VBZ'), ('allowed', 'VBN'), ('to', 'TO'), ('run', 'VB'), ('if', 'IN'), ('all', 'DT'), ('resources', 'NNS'), ('it', 'PRP'), ('needed', 'VBD'), ('is', 'VBZ'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('process', 'process'), ('is', 'be'), ('allowed', 'allow'), ('to', 'to'), ('run', 'run'), ('if', 'if'), ('all', 'all'), ('resources', 'resource'), ('it', 'it'), ('needed', 'need'), ('is', 'be'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'process'), 'det'), (('process', 'allowed'), 'nsubj:pass'), (('is', 'allowed'), 'aux:pass'), (('allowed', 'root'), 'root'), (('to', 'run'), 'mark'), (('run', 'allowed'), 'xcomp'), (('if', 'available'), 'mark'), (('all', 'resources'), 'det'), (('resources', 'available'), 'nsubj'), (('it', 'needed'), 'nsubj'), (('needed', 'resources'), 'acl:relcl'), (('is', 'available'), 'cop'), (('available', 'run'), 'advcl'), (('.', 'allowed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 96 ===========================

 Otherwise nothing will be allocated and it will just wait. 

Tokens are: 
>> ['Otherwise', 'nothing', 'will', 'be', 'allocated', 'and', 'it', 'will', 'just', 'wait', '.'] 

 UPOS tags are: 
>> [('Otherwise', 'ADV'), ('nothing', 'PRON'), ('will', 'AUX'), ('be', 'AUX'), ('allocated', 'VERB'), ('and', 'CCONJ'), ('it', 'PRON'), ('will', 'AUX'), ('just', 'ADV'), ('wait', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Otherwise', 'RB'), ('nothing', 'NN'), ('will', 'MD'), ('be', 'VB'), ('allocated', 'VBN'), ('and', 'CC'), ('it', 'PRP'), ('will', 'MD'), ('just', 'RB'), ('wait', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Otherwise', 'otherwise'), ('nothing', 'nothing'), ('will', 'will'), ('be', 'be'), ('allocated', 'allocate'), ('and', 'and'), ('it', 'it'), ('will', 'will'), ('just', 'just'), ('wait', 'wait'), ('.', '.')] 

 Dependency tags are: 
>> [(('Otherwise', 'allocated'), 'advmod'), (('nothing', 'allocated'), 'nsubj:pass'), (('will', 'allocated'), 'aux'), (('be', 'allocated'), 'aux:pass'), (('allocated', 'root'), 'root'), (('and', 'wait'), 'cc'), (('it', 'wait'), 'nsubj'), (('will', 'wait'), 'aux'), (('just', 'wait'), 'advmod'), (('wait', 'allocated'), 'conj'), (('.', 'allocated'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 97 ===========================

 Problem with this strategy is that a process may not know required resources at start of run. 

Tokens are: 
>> ['Problem', 'with', 'this', 'strategy', 'is', 'that', 'a', 'process', 'may', 'not', 'know', 'required', 'resources', 'at', 'start', 'of', 'run', '.'] 

 UPOS tags are: 
>> [('Problem', 'NOUN'), ('with', 'ADP'), ('this', 'DET'), ('strategy', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('a', 'DET'), ('process', 'NOUN'), ('may', 'AUX'), ('not', 'PART'), ('know', 'VERB'), ('required', 'VERB'), ('resources', 'NOUN'), ('at', 'ADP'), ('start', 'NOUN'), ('of', 'ADP'), ('run', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Problem', 'NN'), ('with', 'IN'), ('this', 'DT'), ('strategy', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('a', 'DT'), ('process', 'NN'), ('may', 'MD'), ('not', 'RB'), ('know', 'VB'), ('required', 'VBN'), ('resources', 'NNS'), ('at', 'IN'), ('start', 'NN'), ('of', 'IN'), ('run', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Problem', 'problem'), ('with', 'with'), ('this', 'this'), ('strategy', 'strategy'), ('is', 'be'), ('that', 'that'), ('a', 'a'), ('process', 'process'), ('may', 'may'), ('not', 'not'), ('know', 'know'), ('required', 'require'), ('resources', 'resource'), ('at', 'at'), ('start', 'start'), ('of', 'of'), ('run', 'run'), ('.', '.')] 

 Dependency tags are: 
>> [(('Problem', 'is'), 'nsubj'), (('with', 'strategy'), 'case'), (('this', 'strategy'), 'det'), (('strategy', 'Problem'), 'nmod'), (('is', 'root'), 'root'), (('that', 'know'), 'mark'), (('a', 'process'), 'det'), (('process', 'know'), 'nsubj'), (('may', 'know'), 'aux'), (('not', 'know'), 'advmod'), (('know', 'is'), 'ccomp'), (('required', 'resources'), 'amod'), (('resources', 'know'), 'obj'), (('at', 'start'), 'case'), (('start', 'know'), 'obl'), (('of', 'run'), 'case'), (('run', 'start'), 'nmod'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 98 ===========================

 Resource will not be used optimally. 

Tokens are: 
>> ['Resource', 'will', 'not', 'be', 'used', 'optimally', '.'] 

 UPOS tags are: 
>> [('Resource', 'NOUN'), ('will', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('used', 'VERB'), ('optimally', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Resource', 'NN'), ('will', 'MD'), ('not', 'RB'), ('be', 'VB'), ('used', 'VBN'), ('optimally', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Resource', 'resource'), ('will', 'will'), ('not', 'not'), ('be', 'be'), ('used', 'use'), ('optimally', 'optimally'), ('.', '.')] 

 Dependency tags are: 
>> [(('Resource', 'used'), 'nsubj:pass'), (('will', 'used'), 'aux'), (('not', 'used'), 'advmod'), (('be', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('optimally', 'used'), 'advmod'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 99 ===========================

 Attacking the No Preemption Condition 

Tokens are: 
>> ['Attacking', 'the', 'No', 'Preemption', 'Condition'] 

 UPOS tags are: 
>> [('Attacking', 'VERB'), ('the', 'DET'), ('No', 'DET'), ('Preemption', 'NOUN'), ('Condition', 'NOUN')] 

 XPOS tags are: 
>> [('Attacking', 'VBG'), ('the', 'DT'), ('No', 'DT'), ('Preemption', 'NN'), ('Condition', 'NN')] 

 Lemmas are: 
>> [('Attacking', 'attack'), ('the', 'the'), ('No', 'no'), ('Preemption', 'preemption'), ('Condition', 'condition')] 

 Dependency tags are: 
>> [(('Attacking', 'root'), 'root'), (('the', 'Condition'), 'det'), (('No', 'Condition'), 'det'), (('Preemption', 'Condition'), 'compound'), (('Condition', 'Attacking'), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 100 ===========================

 When a process P0 request some resource R which is held by another process P1 then resource R is forcibly taken away from the process P1 and allocated to P0. 

Tokens are: 
>> ['When', 'a', 'process', 'P0', 'request', 'some', 'resource', 'R', 'which', 'is', 'held', 'by', 'another', 'process', 'P1', 'then', 'resource', 'R', 'is', 'forcibly', 'taken', 'away', 'from', 'the', 'process', 'P1', 'and', 'allocated', 'to', 'P0', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('a', 'DET'), ('process', 'NOUN'), ('P0', 'PROPN'), ('request', 'VERB'), ('some', 'DET'), ('resource', 'NOUN'), ('R', 'NOUN'), ('which', 'PRON'), ('is', 'AUX'), ('held', 'VERB'), ('by', 'ADP'), ('another', 'DET'), ('process', 'NOUN'), ('P1', 'PROPN'), ('then', 'ADV'), ('resource', 'NOUN'), ('R', 'PROPN'), ('is', 'AUX'), ('forcibly', 'ADV'), ('taken', 'VERB'), ('away', 'ADV'), ('from', 'ADP'), ('the', 'DET'), ('process', 'NOUN'), ('P1', 'PROPN'), ('and', 'CCONJ'), ('allocated', 'VERB'), ('to', 'ADP'), ('P0', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('a', 'DT'), ('process', 'NN'), ('P0', 'NNP'), ('request', 'VBP'), ('some', 'DT'), ('resource', 'NN'), ('R', 'NN'), ('which', 'WDT'), ('is', 'VBZ'), ('held', 'VBN'), ('by', 'IN'), ('another', 'DT'), ('process', 'NN'), ('P1', 'NNP'), ('then', 'RB'), ('resource', 'NN'), ('R', 'NNP'), ('is', 'VBZ'), ('forcibly', 'RB'), ('taken', 'VBN'), ('away', 'RB'), ('from', 'IN'), ('the', 'DT'), ('process', 'NN'), ('P1', 'NNP'), ('and', 'CC'), ('allocated', 'VBN'), ('to', 'IN'), ('P0', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('a', 'a'), ('process', 'process'), ('P0', 'P0'), ('request', 'request'), ('some', 'some'), ('resource', 'resource'), ('R', 'R'), ('which', 'which'), ('is', 'be'), ('held', 'hold'), ('by', 'by'), ('another', 'another'), ('process', 'process'), ('P1', 'P1'), ('then', 'then'), ('resource', 'resource'), ('R', 'R'), ('is', 'be'), ('forcibly', 'forcibly'), ('taken', 'take'), ('away', 'away'), ('from', 'from'), ('the', 'the'), ('process', 'process'), ('P1', 'P1'), ('and', 'and'), ('allocated', 'allocate'), ('to', 'to'), ('P0', 'P0'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'request'), 'mark'), (('a', 'process'), 'det'), (('process', 'request'), 'nsubj'), (('P0', 'request'), 'nsubj'), (('request', 'taken'), 'advcl'), (('some', 'R'), 'det'), (('resource', 'R'), 'compound'), (('R', 'request'), 'obj'), (('which', 'held'), 'nsubj:pass'), (('is', 'held'), 'aux:pass'), (('held', 'R'), 'acl:relcl'), (('by', 'process'), 'case'), (('another', 'process'), 'det'), (('process', 'held'), 'obl'), (('P1', 'process'), 'appos'), (('then', 'taken'), 'advmod'), (('resource', 'R'), 'compound'), (('R', 'taken'), 'nsubj:pass'), (('is', 'taken'), 'aux:pass'), (('forcibly', 'taken'), 'advmod'), (('taken', 'root'), 'root'), (('away', 'taken'), 'advmod'), (('from', 'process'), 'case'), (('the', 'process'), 'det'), (('process', 'taken'), 'obl'), (('P1', 'process'), 'appos'), (('and', 'allocated'), 'cc'), (('allocated', 'taken'), 'conj'), (('to', 'P0'), 'case'), (('P0', 'allocated'), 'obl'), (('.', 'taken'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 101 ===========================

 Consider a process holds the printer, halfway through its job; taking the printer away from this process without having any ill effect is not possible. 

Tokens are: 
>> ['Consider', 'a', 'process', 'holds', 'the', 'printer', ',', 'halfway', 'through', 'its', 'job', ';', 'taking', 'the', 'printer', 'away', 'from', 'this', 'process', 'without', 'having', 'any', 'ill', 'effect', 'is', 'not', 'possible', '.'] 

 UPOS tags are: 
>> [('Consider', 'VERB'), ('a', 'DET'), ('process', 'NOUN'), ('holds', 'VERB'), ('the', 'DET'), ('printer', 'NOUN'), (',', 'PUNCT'), ('halfway', 'ADV'), ('through', 'ADP'), ('its', 'PRON'), ('job', 'NOUN'), (';', 'PUNCT'), ('taking', 'VERB'), ('the', 'DET'), ('printer', 'NOUN'), ('away', 'ADV'), ('from', 'ADP'), ('this', 'DET'), ('process', 'NOUN'), ('without', 'SCONJ'), ('having', 'VERB'), ('any', 'DET'), ('ill', 'ADJ'), ('effect', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('possible', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Consider', 'VB'), ('a', 'DT'), ('process', 'NN'), ('holds', 'VBZ'), ('the', 'DT'), ('printer', 'NN'), (',', ','), ('halfway', 'RB'), ('through', 'IN'), ('its', 'PRP$'), ('job', 'NN'), (';', ','), ('taking', 'VBG'), ('the', 'DT'), ('printer', 'NN'), ('away', 'RB'), ('from', 'IN'), ('this', 'DT'), ('process', 'NN'), ('without', 'IN'), ('having', 'VBG'), ('any', 'DT'), ('ill', 'JJ'), ('effect', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('possible', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Consider', 'consider'), ('a', 'a'), ('process', 'process'), ('holds', 'hold'), ('the', 'the'), ('printer', 'printer'), (',', ','), ('halfway', 'halfway'), ('through', 'through'), ('its', 'its'), ('job', 'job'), (';', ';'), ('taking', 'take'), ('the', 'the'), ('printer', 'printer'), ('away', 'away'), ('from', 'from'), ('this', 'this'), ('process', 'process'), ('without', 'without'), ('having', 'have'), ('any', 'any'), ('ill', 'ill'), ('effect', 'effect'), ('is', 'be'), ('not', 'not'), ('possible', 'possible'), ('.', '.')] 

 Dependency tags are: 
>> [(('Consider', 'root'), 'root'), (('a', 'process'), 'det'), (('process', 'holds'), 'nsubj'), (('holds', 'Consider'), 'ccomp'), (('the', 'printer'), 'det'), (('printer', 'holds'), 'obj'), ((',', 'halfway'), 'punct'), (('halfway', 'holds'), 'advmod'), (('through', 'job'), 'case'), (('its', 'job'), 'nmod:poss'), (('job', 'holds'), 'obl'), ((';', 'Consider'), 'punct'), (('taking', 'holds'), 'advcl'), (('the', 'printer'), 'det'), (('printer', 'taking'), 'obj'), (('away', 'taking'), 'advmod'), (('from', 'process'), 'case'), (('this', 'process'), 'det'), (('process', 'away'), 'obl'), (('without', 'having'), 'mark'), (('having', 'taking'), 'advcl'), (('any', 'effect'), 'det'), (('ill', 'effect'), 'amod'), (('effect', 'having'), 'obj'), (('is', 'possible'), 'cop'), (('not', 'possible'), 'advmod'), (('possible', 'having'), 'ccomp'), (('.', 'Consider'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 102 ===========================

 This is not a possible option. 

Tokens are: 
>> ['This', 'is', 'not', 'a', 'possible', 'option', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('a', 'DET'), ('possible', 'ADJ'), ('option', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('possible', 'JJ'), ('option', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('not', 'not'), ('a', 'a'), ('possible', 'possible'), ('option', 'option'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'option'), 'nsubj'), (('is', 'option'), 'cop'), (('not', 'option'), 'advmod'), (('a', 'option'), 'det'), (('possible', 'option'), 'amod'), (('option', 'root'), 'root'), (('.', 'option'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 103 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock prevention Deadlock can be prevented by attacking the one of the four conditions that leads to deadlock. 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Deadlock', 'prevention', 'Deadlock', 'can', 'be', 'prevented', 'by', 'attacking', 'the', 'one', 'of', 'the', 'four', 'conditions', 'that', 'leads', 'to', 'deadlock', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PROPN'), ('Deadlock', 'NOUN'), ('prevention', 'NOUN'), ('Deadlock', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('prevented', 'VERB'), ('by', 'SCONJ'), ('attacking', 'VERB'), ('the', 'DET'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('four', 'NUM'), ('conditions', 'NOUN'), ('that', 'PRON'), ('leads', 'VERB'), ('to', 'ADP'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NNP'), ('Deadlock', 'NN'), ('prevention', 'NN'), ('Deadlock', 'NN'), ('can', 'MD'), ('be', 'VB'), ('prevented', 'VBN'), ('by', 'IN'), ('attacking', 'VBG'), ('the', 'DT'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('four', 'CD'), ('conditions', 'NNS'), ('that', 'WDT'), ('leads', 'VBZ'), ('to', 'IN'), ('deadlock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Deadlock', 'deadlock'), ('prevention', 'prevention'), ('Deadlock', 'deadlock'), ('can', 'can'), ('be', 'be'), ('prevented', 'prevent'), ('by', 'by'), ('attacking', 'attack'), ('the', 'the'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('four', 'four'), ('conditions', 'condition'), ('that', 'that'), ('leads', 'lead'), ('to', 'to'), ('deadlock', 'deadlock'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'prevented'), 'nsubj:pass'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Deadlock'), 'compound'), (('‹#›', 'Deadlock'), 'compound'), (('Deadlock', 'Deadlock'), 'compound'), (('prevention', 'Deadlock'), 'compound'), (('Deadlock', 'prevented'), 'nsubj:pass'), (('can', 'prevented'), 'aux'), (('be', 'prevented'), 'aux:pass'), (('prevented', 'root'), 'root'), (('by', 'attacking'), 'mark'), (('attacking', 'prevented'), 'advcl'), (('the', 'one'), 'det'), (('one', 'attacking'), 'obj'), (('of', 'conditions'), 'case'), (('the', 'conditions'), 'det'), (('four', 'conditions'), 'nummod'), (('conditions', 'one'), 'nmod'), (('that', 'leads'), 'nsubj'), (('leads', 'conditions'), 'acl:relcl'), (('to', 'deadlock'), 'case'), (('deadlock', 'leads'), 'obl'), (('.', 'prevented'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL'), ('one', 'CARDINAL'), ('four', 'CARDINAL')]

========================== Sentence 104 ===========================

 Attacking the Circular Wait Condition Provide a global numbering of all the resources. 

Tokens are: 
>> ['Attacking', 'the', 'Circular', 'Wait', 'Condition', 'Provide', 'a', 'global', 'numbering', 'of', 'all', 'the', 'resources', '.'] 

 UPOS tags are: 
>> [('Attacking', 'VERB'), ('the', 'DET'), ('Circular', 'ADJ'), ('Wait', 'NOUN'), ('Condition', 'NOUN'), ('Provide', 'VERB'), ('a', 'DET'), ('global', 'ADJ'), ('numbering', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Attacking', 'VBG'), ('the', 'DT'), ('Circular', 'JJ'), ('Wait', 'NN'), ('Condition', 'NN'), ('Provide', 'VB'), ('a', 'DT'), ('global', 'JJ'), ('numbering', 'NN'), ('of', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('resources', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Attacking', 'attack'), ('the', 'the'), ('Circular', 'circular'), ('Wait', 'wait'), ('Condition', 'condition'), ('Provide', 'provide'), ('a', 'a'), ('global', 'global'), ('numbering', 'numbering'), ('of', 'of'), ('all', 'all'), ('the', 'the'), ('resources', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('Attacking', 'Provide'), 'csubj'), (('the', 'Condition'), 'det'), (('Circular', 'Condition'), 'amod'), (('Wait', 'Condition'), 'compound'), (('Condition', 'Attacking'), 'obj'), (('Provide', 'root'), 'root'), (('a', 'numbering'), 'det'), (('global', 'numbering'), 'amod'), (('numbering', 'Provide'), 'obj'), (('of', 'resources'), 'case'), (('all', 'resources'), 'det:predet'), (('the', 'resources'), 'det'), (('resources', 'numbering'), 'nmod'), (('.', 'Provide'), 'punct')]

 Named Entities are: 
>> [('the Circular Wait Condition', 'LAW')]

========================== Sentence 105 ===========================

 Printer Scanner Plotter Tape Drive CD Rom 

Tokens are: 
>> ['Printer', 'Scanner', 'Plotter', 'Tape', 'Drive', 'CD', 'Rom'] 

 UPOS tags are: 
>> [('Printer', 'NOUN'), ('Scanner', 'NOUN'), ('Plotter', 'NOUN'), ('Tape', 'NOUN'), ('Drive', 'NOUN'), ('CD', 'PROPN'), ('Rom', 'NOUN')] 

 XPOS tags are: 
>> [('Printer', 'NN'), ('Scanner', 'NN'), ('Plotter', 'NN'), ('Tape', 'NN'), ('Drive', 'NN'), ('CD', 'NNP'), ('Rom', 'NN')] 

 Lemmas are: 
>> [('Printer', 'printer'), ('Scanner', 'scanner'), ('Plotter', 'plotter'), ('Tape', 'tape'), ('Drive', 'drive'), ('CD', 'CD'), ('Rom', 'rom')] 

 Dependency tags are: 
>> [(('Printer', 'Scanner'), 'compound'), (('Scanner', 'Plotter'), 'compound'), (('Plotter', 'root'), 'root'), (('Tape', 'Plotter'), 'compound'), (('Drive', 'Rom'), 'compound'), (('CD', 'Rom'), 'compound'), (('Rom', 'Plotter'), 'conj')]

 Named Entities are: 
>> []

========================== Sentence 106 ===========================

 Now the rule is that: processes can request resources whenever they want to, but all requests must be made in numerical order. 

Tokens are: 
>> ['Now', 'the', 'rule', 'is', 'that', ':', 'processes', 'can', 'request', 'resources', 'whenever', 'they', 'want', 'to', ',', 'but', 'all', 'requests', 'must', 'be', 'made', 'in', 'numerical', 'order', '.'] 

 UPOS tags are: 
>> [('Now', 'ADV'), ('the', 'DET'), ('rule', 'NOUN'), ('is', 'AUX'), ('that', 'SCONJ'), (':', 'PUNCT'), ('processes', 'NOUN'), ('can', 'AUX'), ('request', 'VERB'), ('resources', 'NOUN'), ('whenever', 'SCONJ'), ('they', 'PRON'), ('want', 'VERB'), ('to', 'PART'), (',', 'PUNCT'), ('but', 'CCONJ'), ('all', 'DET'), ('requests', 'NOUN'), ('must', 'AUX'), ('be', 'AUX'), ('made', 'VERB'), ('in', 'ADP'), ('numerical', 'ADJ'), ('order', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Now', 'RB'), ('the', 'DT'), ('rule', 'NN'), ('is', 'VBZ'), ('that', 'IN'), (':', ':'), ('processes', 'NNS'), ('can', 'MD'), ('request', 'VB'), ('resources', 'NNS'), ('whenever', 'WRB'), ('they', 'PRP'), ('want', 'VBP'), ('to', 'TO'), (',', ','), ('but', 'CC'), ('all', 'DT'), ('requests', 'NNS'), ('must', 'MD'), ('be', 'VB'), ('made', 'VBN'), ('in', 'IN'), ('numerical', 'JJ'), ('order', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Now', 'now'), ('the', 'the'), ('rule', 'rule'), ('is', 'be'), ('that', 'that'), (':', ':'), ('processes', 'process'), ('can', 'can'), ('request', 'request'), ('resources', 'resource'), ('whenever', 'whenever'), ('they', 'they'), ('want', 'want'), ('to', 'to'), (',', ','), ('but', 'but'), ('all', 'all'), ('requests', 'request'), ('must', 'must'), ('be', 'be'), ('made', 'make'), ('in', 'in'), ('numerical', 'numerical'), ('order', 'order'), ('.', '.')] 

 Dependency tags are: 
>> [(('Now', 'is'), 'advmod'), (('the', 'rule'), 'det'), (('rule', 'is'), 'nsubj'), (('is', 'root'), 'root'), (('that', 'request'), 'mark'), ((':', 'request'), 'punct'), (('processes', 'request'), 'nsubj'), (('can', 'request'), 'aux'), (('request', 'is'), 'ccomp'), (('resources', 'request'), 'obj'), (('whenever', 'want'), 'mark'), (('they', 'want'), 'nsubj'), (('want', 'request'), 'advcl'), (('to', 'want'), 'xcomp'), ((',', 'made'), 'punct'), (('but', 'made'), 'cc'), (('all', 'requests'), 'det'), (('requests', 'made'), 'nsubj:pass'), (('must', 'made'), 'aux'), (('be', 'made'), 'aux:pass'), (('made', 'request'), 'conj'), (('in', 'order'), 'case'), (('numerical', 'order'), 'amod'), (('order', 'made'), 'obl'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 107 ===========================

 A process need not acquire them all at once. 

Tokens are: 
>> ['A', 'process', 'need', 'not', 'acquire', 'them', 'all', 'at', 'once', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('process', 'NOUN'), ('need', 'AUX'), ('not', 'PART'), ('acquire', 'VERB'), ('them', 'PRON'), ('all', 'DET'), ('at', 'ADP'), ('once', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('process', 'NN'), ('need', 'VBP'), ('not', 'RB'), ('acquire', 'VB'), ('them', 'PRP'), ('all', 'DT'), ('at', 'IN'), ('once', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('process', 'process'), ('need', 'need'), ('not', 'not'), ('acquire', 'acquire'), ('them', 'they'), ('all', 'all'), ('at', 'at'), ('once', 'once'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'process'), 'det'), (('process', 'acquire'), 'nsubj'), (('need', 'acquire'), 'aux'), (('not', 'acquire'), 'advmod'), (('acquire', 'root'), 'root'), (('them', 'acquire'), 'obj'), (('all', 'them'), 'det'), (('at', 'once'), 'case'), (('once', 'acquire'), 'obl'), (('.', 'acquire'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 108 ===========================

 Circular wait is prevented if a process holding resource n cannot wait for resource m, if m > n. A process may request 1st a CD ROM, then tape drive. 

Tokens are: 
>> ['Circular', 'wait', 'is', 'prevented', 'if', 'a', 'process', 'holding', 'resource', 'n', 'cannot', 'wait', 'for', 'resource', 'm', ',', 'if', 'm', '>', 'n.', 'A', 'process', 'may', 'request', '1st', 'a', 'CD', 'ROM', ',', 'then', 'tape', 'drive', '.'] 

 UPOS tags are: 
>> [('Circular', 'ADJ'), ('wait', 'NOUN'), ('is', 'AUX'), ('prevented', 'VERB'), ('if', 'SCONJ'), ('a', 'DET'), ('process', 'NOUN'), ('holding', 'VERB'), ('resource', 'NOUN'), ('n', 'NOUN'), ('cannot', 'AUX'), ('wait', 'VERB'), ('for', 'ADP'), ('resource', 'NOUN'), ('m', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('m', 'NUM'), ('>', 'PUNCT'), ('n.', 'NOUN'), ('A', 'DET'), ('process', 'NOUN'), ('may', 'AUX'), ('request', 'VERB'), ('1st', 'ADJ'), ('a', 'DET'), ('CD', 'NOUN'), ('ROM', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('tape', 'NOUN'), ('drive', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Circular', 'JJ'), ('wait', 'NN'), ('is', 'VBZ'), ('prevented', 'VBN'), ('if', 'IN'), ('a', 'DT'), ('process', 'NN'), ('holding', 'VBG'), ('resource', 'NN'), ('n', 'NN'), ('cannot', 'MD'), ('wait', 'VB'), ('for', 'IN'), ('resource', 'NN'), ('m', 'NN'), (',', ','), ('if', 'IN'), ('m', 'LS'), ('>', '-RRB-'), ('n.', 'NN'), ('A', 'DT'), ('process', 'NN'), ('may', 'MD'), ('request', 'VB'), ('1st', 'JJ'), ('a', 'DT'), ('CD', 'NN'), ('ROM', 'NN'), (',', ','), ('then', 'RB'), ('tape', 'NN'), ('drive', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Circular', 'circular'), ('wait', 'wait'), ('is', 'be'), ('prevented', 'prevent'), ('if', 'if'), ('a', 'a'), ('process', 'process'), ('holding', 'hold'), ('resource', 'resource'), ('n', 'n'), ('cannot', 'cannot'), ('wait', 'wait'), ('for', 'for'), ('resource', 'resource'), ('m', 'm'), (',', ','), ('if', 'if'), ('m', 'm'), ('>', '>'), ('n.', 'n.'), ('A', 'a'), ('process', 'process'), ('may', 'may'), ('request', 'request'), ('1st', '1st'), ('a', 'a'), ('CD', 'cd'), ('ROM', 'rom'), (',', ','), ('then', 'then'), ('tape', 'tape'), ('drive', 'drive'), ('.', '.')] 

 Dependency tags are: 
>> [(('Circular', 'wait'), 'amod'), (('wait', 'prevented'), 'nsubj:pass'), (('is', 'prevented'), 'aux:pass'), (('prevented', 'root'), 'root'), (('if', 'wait'), 'mark'), (('a', 'process'), 'det'), (('process', 'wait'), 'nsubj'), (('holding', 'process'), 'acl'), (('resource', 'n'), 'compound'), (('n', 'holding'), 'obj'), (('cannot', 'wait'), 'aux'), (('wait', 'prevented'), 'advcl'), (('for', 'm'), 'case'), (('resource', 'm'), 'compound'), (('m', 'wait'), 'obl'), ((',', 'request'), 'punct'), (('if', 'request'), 'mark'), (('m', 'request'), 'nummod'), (('>', 'm'), 'punct'), (('n.', 'request'), 'nsubj'), (('A', 'process'), 'det'), (('process', 'request'), 'nsubj'), (('may', 'request'), 'aux'), (('request', 'prevented'), 'advcl'), (('1st', 'ROM'), 'amod'), (('a', 'ROM'), 'det'), (('CD', 'ROM'), 'compound'), (('ROM', 'request'), 'obj'), ((',', 'drive'), 'punct'), (('then', 'drive'), 'advmod'), (('tape', 'drive'), 'compound'), (('drive', 'request'), 'obj'), (('.', 'prevented'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 109 ===========================

 But it may not request 1st a tape drive, then CD ROM. 

Tokens are: 
>> ['But', 'it', 'may', 'not', 'request', '1st', 'a', 'tape', 'drive', ',', 'then', 'CD', 'ROM', '.'] 

 UPOS tags are: 
>> [('But', 'CCONJ'), ('it', 'PRON'), ('may', 'AUX'), ('not', 'PART'), ('request', 'VERB'), ('1st', 'ADJ'), ('a', 'DET'), ('tape', 'NOUN'), ('drive', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('CD', 'PROPN'), ('ROM', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('But', 'CC'), ('it', 'PRP'), ('may', 'MD'), ('not', 'RB'), ('request', 'VB'), ('1st', 'JJ'), ('a', 'DT'), ('tape', 'NN'), ('drive', 'NN'), (',', ','), ('then', 'RB'), ('CD', 'NNP'), ('ROM', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('But', 'but'), ('it', 'it'), ('may', 'may'), ('not', 'not'), ('request', 'request'), ('1st', '1st'), ('a', 'a'), ('tape', 'tape'), ('drive', 'drive'), (',', ','), ('then', 'then'), ('CD', 'CD'), ('ROM', 'rom'), ('.', '.')] 

 Dependency tags are: 
>> [(('But', 'request'), 'cc'), (('it', 'request'), 'nsubj'), (('may', 'request'), 'aux'), (('not', 'request'), 'advmod'), (('request', 'root'), 'root'), (('1st', 'drive'), 'amod'), (('a', 'drive'), 'det'), (('tape', 'drive'), 'compound'), (('drive', 'request'), 'obj'), ((',', 'ROM'), 'punct'), (('then', 'ROM'), 'advmod'), (('CD', 'ROM'), 'compound'), (('ROM', 'request'), 'parataxis'), (('.', 'request'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 110 ===========================

 Resource graph can never have cycle. 

Tokens are: 
>> ['Resource', 'graph', 'can', 'never', 'have', 'cycle', '.'] 

 UPOS tags are: 
>> [('Resource', 'NOUN'), ('graph', 'NOUN'), ('can', 'AUX'), ('never', 'ADV'), ('have', 'VERB'), ('cycle', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Resource', 'NN'), ('graph', 'NN'), ('can', 'MD'), ('never', 'RB'), ('have', 'VB'), ('cycle', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Resource', 'resource'), ('graph', 'graph'), ('can', 'can'), ('never', 'never'), ('have', 'have'), ('cycle', 'cycle'), ('.', '.')] 

 Dependency tags are: 
>> [(('Resource', 'graph'), 'compound'), (('graph', 'have'), 'nsubj'), (('can', 'have'), 'aux'), (('never', 'have'), 'advmod'), (('have', 'root'), 'root'), (('cycle', 'have'), 'obj'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 111 ===========================

 Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Example Consider a system consisting of four resources of same type that are shared by three processes, each of which needs at most two resources. 

Tokens are: 
>> ['Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Example', 'Consider', 'a', 'system', 'consisting', 'of', 'four', 'resources', 'of', 'same', 'type', 'that', 'are', 'shared', 'by', 'three', 'processes', ',', 'each', 'of', 'which', 'needs', 'at', 'most', 'two', 'resources', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('Consider', 'VERB'), ('a', 'DET'), ('system', 'NOUN'), ('consisting', 'VERB'), ('of', 'ADP'), ('four', 'NUM'), ('resources', 'NOUN'), ('of', 'ADP'), ('same', 'ADJ'), ('type', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('shared', 'VERB'), ('by', 'ADP'), ('three', 'NUM'), ('processes', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('of', 'ADP'), ('which', 'PRON'), ('needs', 'VERB'), ('at', 'ADP'), ('most', 'ADJ'), ('two', 'NUM'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Example', 'NN'), ('Consider', 'VB'), ('a', 'DT'), ('system', 'NN'), ('consisting', 'VBG'), ('of', 'IN'), ('four', 'CD'), ('resources', 'NNS'), ('of', 'IN'), ('same', 'JJ'), ('type', 'NN'), ('that', 'WDT'), ('are', 'VBP'), ('shared', 'VBN'), ('by', 'IN'), ('three', 'CD'), ('processes', 'NNS'), (',', ','), ('each', 'DT'), ('of', 'IN'), ('which', 'WDT'), ('needs', 'VBZ'), ('at', 'IN'), ('most', 'JJS'), ('two', 'CD'), ('resources', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Example', 'example'), ('Consider', 'consider'), ('a', 'a'), ('system', 'system'), ('consisting', 'consist'), ('of', 'of'), ('four', 'four'), ('resources', 'resource'), ('of', 'of'), ('same', 'same'), ('type', 'type'), ('that', 'that'), ('are', 'be'), ('shared', 'share'), ('by', 'by'), ('three', 'three'), ('processes', 'process'), (',', ','), ('each', 'each'), ('of', 'of'), ('which', 'which'), ('needs', 'need'), ('at', 'at'), ('most', 'most'), ('two', 'two'), ('resources', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Firoz', 'Prof.'), 'flat'), (('A', 'Prof.'), 'flat'), (('Sherasiya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', 'Unit'), 'compound'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('5', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Deadlock', 'Prof.'), 'list'), (('‹#›', 'Example'), 'compound'), (('Example', 'Consider'), 'nsubj'), (('Consider', 'Prof.'), 'parataxis'), (('a', 'system'), 'det'), (('system', 'Consider'), 'obj'), (('consisting', 'system'), 'acl'), (('of', 'resources'), 'case'), (('four', 'resources'), 'nummod'), (('resources', 'consisting'), 'obl'), (('of', 'type'), 'case'), (('same', 'type'), 'amod'), (('type', 'resources'), 'nmod'), (('that', 'shared'), 'nsubj:pass'), (('are', 'shared'), 'aux:pass'), (('shared', 'type'), 'acl:relcl'), (('by', 'processes'), 'case'), (('three', 'processes'), 'nummod'), (('processes', 'shared'), 'obl'), ((',', 'needs'), 'punct'), (('each', 'needs'), 'nsubj'), (('of', 'which'), 'case'), (('which', 'each'), 'nmod'), (('needs', 'processes'), 'acl:relcl'), (('at', 'resources'), 'case'), (('most', 'resources'), 'amod'), (('two', 'resources'), 'nummod'), (('resources', 'needs'), 'obl'), (('.', 'Consider'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL'), ('four', 'CARDINAL'), ('three', 'CARDINAL'), ('two', 'CARDINAL')]

========================== Sentence 112 ===========================

 Show the system is deadlock free. 

Tokens are: 
>> ['Show', 'the', 'system', 'is', 'deadlock', 'free', '.'] 

 UPOS tags are: 
>> [('Show', 'VERB'), ('the', 'DET'), ('system', 'NOUN'), ('is', 'AUX'), ('deadlock', 'NOUN'), ('free', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Show', 'VB'), ('the', 'DT'), ('system', 'NN'), ('is', 'VBZ'), ('deadlock', 'NN'), ('free', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Show', 'show'), ('the', 'the'), ('system', 'system'), ('is', 'be'), ('deadlock', 'deadlock'), ('free', 'free'), ('.', '.')] 

 Dependency tags are: 
>> [(('Show', 'root'), 'root'), (('the', 'system'), 'det'), (('system', 'free'), 'nsubj'), (('is', 'free'), 'cop'), (('deadlock', 'free'), 'obl:npmod'), (('free', 'Show'), 'ccomp'), (('.', 'Show'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 113 ===========================

 Process	Has / Hold	Max required 	A	0	- 	B	1	2 	C	2	7 	Free : 2		  	Process	Has / Hold	Max required 	A	1	2 	B	1	2 	C	1	2 	Total : 4  &  Free : 1		  	Process	Has / Hold	Max required 	A	2	2 	B	1	2 	C	1	2 	Free : 0		  	Process	Has / Hold	Max required 	A	0	- 	B	0	- 	C	2	2 	Free : 2		  	Process	Has / Hold	Max required 	A	0	- 	B	2	2 	C	7	7 	Free : 1		  	Process	Has / Hold	Max required 	A	0	- 	B	0	- 	C	1	2 	Free : 3		     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Questions asked in GTU What is RAG? 

Tokens are: 
>> ['Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '0', '-', 'B', '1', '2', 'C', '2', '7', 'Free', ':', '2', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '1', '2', 'B', '1', '2', 'C', '1', '2', 'Total', ':', '4', '&', 'Free', ':', '1', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '2', '2', 'B', '1', '2', 'C', '1', '2', 'Free', ':', '0', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '0', '-', 'B', '0', '-', 'C', '2', '2', 'Free', ':', '2', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '0', '-', 'B', '2', '2', 'C', '7', '7', 'Free', ':', '1', 'Process', 'Has', '/', 'Hold', 'Max', 'required', 'A', '0', '-', 'B', '0', '-', 'C', '1', '2', 'Free', ':', '3', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Questions', 'asked', 'in', 'GTU', 'What', 'is', 'RAG', '?'] 

 UPOS tags are: 
>> [('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('0', 'NUM'), ('-', 'PUNCT'), ('B', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('C', 'NOUN'), ('2', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('2', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('1', 'NUM'), ('2', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('C', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('Total', 'NOUN'), (':', 'PUNCT'), ('4', 'NUM'), ('&', 'CCONJ'), ('Free', 'NOUN'), (':', 'PUNCT'), ('1', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('2', 'NUM'), ('2', 'NUM'), ('B', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('C', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('0', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('0', 'NUM'), ('-', 'PUNCT'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('2', 'NUM'), ('2', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('2', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'SYM'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('0', 'NUM'), ('-', 'PUNCT'), ('B', 'NOUN'), ('2', 'NUM'), ('2', 'NUM'), ('C', 'NOUN'), ('7', 'NUM'), ('7', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('1', 'NUM'), ('Process', 'NOUN'), ('Has', 'VERB'), ('/', 'PUNCT'), ('Hold', 'NOUN'), ('Max', 'PROPN'), ('required', 'VERB'), ('A', 'DET'), ('0', 'NUM'), ('-', 'PUNCT'), ('B', 'NOUN'), ('0', 'NUM'), ('-', 'PUNCT'), ('C', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('Free', 'ADJ'), (':', 'PUNCT'), ('3', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Questions', 'NOUN'), ('asked', 'VERB'), ('in', 'ADP'), ('GTU', 'PROPN'), ('What', 'PRON'), ('is', 'AUX'), ('RAG', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('0', 'CD'), ('-', 'HYPH'), ('B', 'NN'), ('1', 'CD'), ('2', 'CD'), ('C', 'NN'), ('2', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('2', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('1', 'CD'), ('2', 'CD'), ('B', 'NN'), ('1', 'CD'), ('2', 'CD'), ('C', 'NN'), ('1', 'CD'), ('2', 'CD'), ('Total', 'NN'), (':', ':'), ('4', 'CD'), ('&', 'CC'), ('Free', 'NN'), (':', ':'), ('1', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('2', 'CD'), ('2', 'CD'), ('B', 'NN'), ('1', 'CD'), ('2', 'CD'), ('C', 'NN'), ('1', 'CD'), ('2', 'CD'), ('Free', 'JJ'), (':', ':'), ('0', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('0', 'CD'), ('-', 'HYPH'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('2', 'CD'), ('2', 'CD'), ('Free', 'JJ'), (':', ':'), ('2', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('0', 'CD'), ('-', 'HYPH'), ('B', 'NN'), ('2', 'CD'), ('2', 'CD'), ('C', 'NN'), ('7', 'CD'), ('7', 'CD'), ('Free', 'JJ'), (':', ':'), ('1', 'CD'), ('Process', 'NN'), ('Has', 'VBZ'), ('/', ','), ('Hold', 'NN'), ('Max', 'NNP'), ('required', 'VBN'), ('A', 'DT'), ('0', 'CD'), ('-', 'HYPH'), ('B', 'NN'), ('0', 'CD'), ('-', 'HYPH'), ('C', 'NN'), ('1', 'CD'), ('2', 'CD'), ('Free', 'JJ'), (':', ':'), ('3', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('5', 'CD'), ('–', ','), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Questions', 'NNS'), ('asked', 'VBN'), ('in', 'IN'), ('GTU', 'NNP'), ('What', 'WP'), ('is', 'VBZ'), ('RAG', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('0', '0'), ('-', '-'), ('B', 'b'), ('1', '1'), ('2', '2'), ('C', 'c'), ('2', '2'), ('7', '7'), ('Free', 'free'), (':', ':'), ('2', '2'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('1', '1'), ('2', '2'), ('B', 'b'), ('1', '1'), ('2', '2'), ('C', 'c'), ('1', '1'), ('2', '2'), ('Total', 'total'), (':', ':'), ('4', '4'), ('&', '&'), ('Free', 'free'), (':', ':'), ('1', '1'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('2', '2'), ('2', '2'), ('B', 'b'), ('1', '1'), ('2', '2'), ('C', 'c'), ('1', '1'), ('2', '2'), ('Free', 'free'), (':', ':'), ('0', '0'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('0', '0'), ('-', '-'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('2', '2'), ('2', '2'), ('Free', 'free'), (':', ':'), ('2', '2'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('0', '0'), ('-', '-'), ('B', 'b'), ('2', '2'), ('2', '2'), ('C', 'c'), ('7', '7'), ('7', '7'), ('Free', 'free'), (':', ':'), ('1', '1'), ('Process', 'process'), ('Has', 'have'), ('/', '/'), ('Hold', 'hold'), ('Max', 'Max'), ('required', 'require'), ('A', 'a'), ('0', '0'), ('-', '-'), ('B', 'b'), ('0', '0'), ('-', '-'), ('C', 'c'), ('1', '1'), ('2', '2'), ('Free', 'free'), (':', ':'), ('3', '3'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Questions', 'question'), ('asked', 'ask'), ('in', 'in'), ('GTU', 'GTU'), ('What', 'what'), ('is', 'be'), ('RAG', 'RAG'), ('?', '?')] 

 Dependency tags are: 
>> [(('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'aux'), (('/', 'Hold'), 'punct'), (('Hold', 'Max'), 'compound'), (('Max', 'required'), 'nsubj'), (('required', 'root'), 'root'), (('A', 'B'), 'det'), (('0', 'B'), 'nummod'), (('-', 'B'), 'punct'), (('B', 'required'), 'obj'), (('1', 'B'), 'nummod'), (('2', 'C'), 'nummod'), (('C', 'required'), 'obj'), (('2', 'C'), 'nummod'), (('7', 'C'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'Has'), 'punct'), (('2', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Has'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('1', 'B'), 'nummod'), (('2', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'B'), 'nummod'), (('2', 'C'), 'nummod'), (('C', 'B'), 'appos'), (('1', 'C'), 'nummod'), (('2', 'Total'), 'nummod'), (('Total', 'B'), 'conj'), ((':', 'Total'), 'punct'), (('4', 'Total'), 'nummod'), (('&', 'Free'), 'cc'), (('Free', '4'), 'conj'), ((':', 'Has'), 'punct'), (('1', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('2', 'B'), 'nummod'), (('2', 'B'), 'nummod'), (('B', 'required'), 'obj'), (('1', 'B'), 'nummod'), (('2', 'C'), 'nummod'), (('C', 'B'), 'appos'), (('1', 'C'), 'nummod'), (('2', 'Free'), 'compound'), (('Free', 'B'), 'amod'), ((':', 'Has'), 'punct'), (('0', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'required'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'C'), 'det'), (('0', 'B'), 'nummod'), (('-', 'B'), 'punct'), (('B', 'C'), 'compound'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'required'), 'obj'), (('2', 'C'), 'nummod'), (('2', 'C'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'Has'), 'punct'), (('2', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'B'), 'det'), (('0', 'B'), 'nummod'), (('-', 'B'), 'punct'), (('B', 'required'), 'obj'), (('2', 'C'), 'nummod'), (('2', 'C'), 'nummod'), (('C', 'B'), 'compound'), (('7', 'C'), 'nummod'), (('7', 'C'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'Has'), 'punct'), (('1', 'Process'), 'nummod'), (('Process', 'Has'), 'nsubj'), (('Has', 'Free'), 'parataxis'), (('/', 'Hold'), 'cc'), (('Hold', 'Max'), 'compound'), (('Max', 'Has'), 'obj'), (('required', 'Max'), 'acl'), (('A', 'C'), 'det'), (('0', 'B'), 'nummod'), (('-', 'B'), 'punct'), (('B', 'C'), 'compound'), (('0', 'C'), 'nummod'), (('-', 'C'), 'punct'), (('C', 'required'), 'obj'), (('1', 'C'), 'nummod'), (('2', 'C'), 'nummod'), (('Free', 'C'), 'amod'), ((':', 'C'), 'punct'), (('3', 'Firoz'), 'nummod'), (('Prof.', 'Firoz'), 'compound'), (('Firoz', '#'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Free'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Questions'), 'compound'), (('‹#›', 'Questions'), 'compound'), (('Questions', 'Unit'), 'appos'), (('asked', 'Questions'), 'acl'), (('in', 'GTU'), 'case'), (('GTU', 'asked'), 'obl'), (('What', 'RAG'), 'nsubj'), (('is', 'RAG'), 'cop'), (('RAG', 'Questions'), 'acl:relcl'), (('?', 'Questions'), 'punct')]

 Named Entities are: 
>> [('7', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('4', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('5', 'CARDINAL')]

========================== Sentence 114 ===========================

 Explain briefly. 

Tokens are: 
>> ['Explain', 'briefly', '.'] 

 UPOS tags are: 
>> [('Explain', 'VERB'), ('briefly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Explain', 'VB'), ('briefly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Explain', 'explain'), ('briefly', 'briefly'), ('.', '.')] 

 Dependency tags are: 
>> [(('Explain', 'root'), 'root'), (('briefly', 'Explain'), 'advmod'), (('.', 'Explain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 115 ===========================

 What is Deadlock? 

Tokens are: 
>> ['What', 'is', 'Deadlock', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('Deadlock', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('Deadlock', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('Deadlock', 'Deadlock'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('Deadlock', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entities are: 
>> [('Deadlock', 'GPE')]

========================== Sentence 116 ===========================

 List the conditions that lead to deadlock. 

Tokens are: 
>> ['List', 'the', 'conditions', 'that', 'lead', 'to', 'deadlock', '.'] 

 UPOS tags are: 
>> [('List', 'VERB'), ('the', 'DET'), ('conditions', 'NOUN'), ('that', 'PRON'), ('lead', 'VERB'), ('to', 'ADP'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('List', 'VB'), ('the', 'DT'), ('conditions', 'NNS'), ('that', 'WDT'), ('lead', 'VBP'), ('to', 'IN'), ('deadlock', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('List', 'list'), ('the', 'the'), ('conditions', 'condition'), ('that', 'that'), ('lead', 'lead'), ('to', 'to'), ('deadlock', 'deadlock'), ('.', '.')] 

 Dependency tags are: 
>> [(('List', 'root'), 'root'), (('the', 'conditions'), 'det'), (('conditions', 'List'), 'obj'), (('that', 'lead'), 'nsubj'), (('lead', 'conditions'), 'acl:relcl'), (('to', 'deadlock'), 'case'), (('deadlock', 'lead'), 'obl'), (('.', 'List'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 117 ===========================

 How Deadlock can be prevented? 

Tokens are: 
>> ['How', 'Deadlock', 'can', 'be', 'prevented', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('Deadlock', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('prevented', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('Deadlock', 'NN'), ('can', 'MD'), ('be', 'VB'), ('prevented', 'VBN'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('Deadlock', 'deadlock'), ('can', 'can'), ('be', 'be'), ('prevented', 'prevent'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'Deadlock'), 'amod'), (('Deadlock', 'prevented'), 'nsubj:pass'), (('can', 'prevented'), 'aux'), (('be', 'prevented'), 'aux:pass'), (('prevented', 'root'), 'root'), (('?', 'prevented'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 118 ===========================

 Which are the necessary conditions for Deadlock? 

Tokens are: 
>> ['Which', 'are', 'the', 'necessary', 'conditions', 'for', 'Deadlock', '?'] 

 UPOS tags are: 
>> [('Which', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('necessary', 'ADJ'), ('conditions', 'NOUN'), ('for', 'ADP'), ('Deadlock', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Which', 'WDT'), ('are', 'VBP'), ('the', 'DT'), ('necessary', 'JJ'), ('conditions', 'NNS'), ('for', 'IN'), ('Deadlock', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Which', 'which'), ('are', 'be'), ('the', 'the'), ('necessary', 'necessary'), ('conditions', 'condition'), ('for', 'for'), ('Deadlock', 'Deadlock'), ('?', '?')] 

 Dependency tags are: 
>> [(('Which', 'root'), 'root'), (('are', 'Which'), 'cop'), (('the', 'conditions'), 'det'), (('necessary', 'conditions'), 'amod'), (('conditions', 'Which'), 'nsubj'), (('for', 'Deadlock'), 'case'), (('Deadlock', 'conditions'), 'nmod'), (('?', 'Which'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 119 ===========================

 Explain Deadlock recovery in brief. 

Tokens are: 
>> ['Explain', 'Deadlock', 'recovery', 'in', 'brief', '.'] 

 UPOS tags are: 
>> [('Explain', 'VERB'), ('Deadlock', 'NOUN'), ('recovery', 'NOUN'), ('in', 'ADP'), ('brief', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Explain', 'VB'), ('Deadlock', 'NN'), ('recovery', 'NN'), ('in', 'IN'), ('brief', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Explain', 'explain'), ('Deadlock', 'deadlock'), ('recovery', 'recovery'), ('in', 'in'), ('brief', 'brief'), ('.', '.')] 

 Dependency tags are: 
>> [(('Explain', 'root'), 'root'), (('Deadlock', 'recovery'), 'compound'), (('recovery', 'Explain'), 'obj'), (('in', 'brief'), 'case'), (('brief', 'Explain'), 'obl'), (('.', 'Explain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 120 ===========================

 Consider the snapshot of the system with Five Processes and Four types of resources A,B,C,D. 

Tokens are: 
>> ['Consider', 'the', 'snapshot', 'of', 'the', 'system', 'with', 'Five', 'Processes', 'and', 'Four', 'types', 'of', 'resources', 'A', ',', 'B,', 'C,', 'D.'] 

 UPOS tags are: 
>> [('Consider', 'VERB'), ('the', 'DET'), ('snapshot', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('with', 'ADP'), ('Five', 'NUM'), ('Processes', 'NOUN'), ('and', 'CCONJ'), ('Four', 'NUM'), ('types', 'NOUN'), ('of', 'ADP'), ('resources', 'NOUN'), ('A', 'PROPN'), (',', 'PUNCT'), ('B,', 'PROPN'), ('C,', 'PROPN'), ('D.', 'PROPN')] 

 XPOS tags are: 
>> [('Consider', 'VB'), ('the', 'DT'), ('snapshot', 'NN'), ('of', 'IN'), ('the', 'DT'), ('system', 'NN'), ('with', 'IN'), ('Five', 'CD'), ('Processes', 'NNS'), ('and', 'CC'), ('Four', 'CD'), ('types', 'NNS'), ('of', 'IN'), ('resources', 'NNS'), ('A', 'NNP'), (',', ','), ('B,', 'NNP'), ('C,', 'NNP'), ('D.', 'NNP')] 

 Lemmas are: 
>> [('Consider', 'consider'), ('the', 'the'), ('snapshot', 'snapshot'), ('of', 'of'), ('the', 'the'), ('system', 'system'), ('with', 'with'), ('Five', 'five'), ('Processes', 'process'), ('and', 'and'), ('Four', 'four'), ('types', 'type'), ('of', 'of'), ('resources', 'resource'), ('A', 'A'), (',', ','), ('B,', 'B,'), ('C,', 'C,'), ('D.', 'D.')] 

 Dependency tags are: 
>> [(('Consider', 'root'), 'root'), (('the', 'snapshot'), 'det'), (('snapshot', 'Consider'), 'obj'), (('of', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'snapshot'), 'nmod'), (('with', 'Processes'), 'case'), (('Five', 'Processes'), 'nummod'), (('Processes', 'system'), 'nmod'), (('and', 'types'), 'cc'), (('Four', 'types'), 'nummod'), (('types', 'Processes'), 'conj'), (('of', 'resources'), 'case'), (('resources', 'types'), 'nmod'), (('A', 'resources'), 'flat'), ((',', 'B,'), 'punct'), (('B,', 'resources'), 'appos'), (('C,', 'B,'), 'flat'), (('D.', 'B,'), 'flat')]

 Named Entities are: 
>> [('Five', 'CARDINAL'), ('Four', 'CARDINAL')]

========================== Sentence 121 ===========================

 Currently available set of resources is  (1,5,2,0). 

Tokens are: 
>> ['Currently', 'available', 'set', 'of', 'resources', 'is', '(', '1,5,2,0', ')', '.'] 

 UPOS tags are: 
>> [('Currently', 'ADV'), ('available', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('resources', 'NOUN'), ('is', 'AUX'), ('(', 'PUNCT'), ('1,5,2,0', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Currently', 'RB'), ('available', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('resources', 'NNS'), ('is', 'VBZ'), ('(', '-LRB-'), ('1,5,2,0', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Currently', 'currently'), ('available', 'available'), ('set', 'set'), ('of', 'of'), ('resources', 'resource'), ('is', 'be'), ('(', '('), ('1,5,2,0', '15220'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Currently', 'set'), 'advmod'), (('available', 'set'), 'amod'), (('set', '1,5,2,0'), 'nsubj'), (('of', 'resources'), 'case'), (('resources', 'set'), 'nmod'), (('is', '1,5,2,0'), 'cop'), (('(', '1,5,2,0'), 'punct'), (('1,5,2,0', 'root'), 'root'), ((')', '1,5,2,0'), 'punct'), (('.', '1,5,2,0'), 'punct')]

 Named Entities are: 
>> [('1,5,2,0', 'CARDINAL')]

========================== Sentence 122 ===========================

 Answer the following Questions using  bankers algorithm. 

Tokens are: 
>> ['Answer', 'the', 'following', 'Questions', 'using', 'bankers', 'algorithm', '.'] 

 UPOS tags are: 
>> [('Answer', 'VERB'), ('the', 'DET'), ('following', 'VERB'), ('Questions', 'NOUN'), ('using', 'VERB'), ('bankers', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Answer', 'VB'), ('the', 'DT'), ('following', 'VBG'), ('Questions', 'NNS'), ('using', 'VBG'), ('bankers', 'NNS'), ('algorithm', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Answer', 'answer'), ('the', 'the'), ('following', 'follow'), ('Questions', 'question'), ('using', 'use'), ('bankers', 'banker'), ('algorithm', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('Answer', 'root'), 'root'), (('the', 'Questions'), 'det'), (('following', 'Questions'), 'amod'), (('Questions', 'Answer'), 'obj'), (('using', 'Questions'), 'acl'), (('bankers', 'algorithm'), 'compound'), (('algorithm', 'using'), 'obj'), (('.', 'Answer'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 123 ===========================

 Find the content of Need Matrix. 

Tokens are: 
>> ['Find', 'the', 'content', 'of', 'Need', 'Matrix', '.'] 

 UPOS tags are: 
>> [('Find', 'VERB'), ('the', 'DET'), ('content', 'NOUN'), ('of', 'ADP'), ('Need', 'NOUN'), ('Matrix', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Find', 'VB'), ('the', 'DT'), ('content', 'NN'), ('of', 'IN'), ('Need', 'NN'), ('Matrix', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Find', 'find'), ('the', 'the'), ('content', 'content'), ('of', 'of'), ('Need', 'need'), ('Matrix', 'Matrix'), ('.', '.')] 

 Dependency tags are: 
>> [(('Find', 'root'), 'root'), (('the', 'content'), 'det'), (('content', 'Find'), 'obj'), (('of', 'Matrix'), 'case'), (('Need', 'Matrix'), 'compound'), (('Matrix', 'content'), 'nmod'), (('.', 'Find'), 'punct')]

 Named Entities are: 
>> [('Need Matrix', 'ORG')]

========================== Sentence 124 ===========================

 Is the System in Safe State? 

Tokens are: 
>> ['Is', 'the', 'System', 'in', 'Safe', 'State', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('the', 'DET'), ('System', 'NOUN'), ('in', 'ADP'), ('Safe', 'ADJ'), ('State', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('the', 'DT'), ('System', 'NN'), ('in', 'IN'), ('Safe', 'NNP'), ('State', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('the', 'the'), ('System', 'system'), ('in', 'in'), ('Safe', 'safe'), ('State', 'State'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'System'), 'cop'), (('the', 'System'), 'det'), (('System', 'root'), 'root'), (('in', 'State'), 'case'), (('Safe', 'State'), 'amod'), (('State', 'System'), 'nmod'), (('?', 'System'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 125 ===========================

 If request from Process P1 arrives  for (0,4,2,0) can the request  be granted immediately 	Allocation						Max			 	Process	A	B	C	D		A	B	C	D 	P0	0	0	1	2		0	0	1	2 	P1	1	0	0	0		1	7	5	0 	P2	1	3	5	4		2	3	5	6 	P3	0	6	3	2		0	6	5	2 	P4	0	0	1	4		0	6	5	6     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Database Management Systems (DBMS) GTU # 3130703 firoz.sherasiya@darshan.ac.in 9879879861 Computer Engineering Department Prof. Firoz A Sherasiya   Darshan Institute of Engineering & Technology, Rajkot    Thank You                                  /docProps/thumbnail.jpeg 

Tokens are: 
>> ['If', 'request', 'from', 'Process', 'P1', 'arrives', 'for', '(', '0,4,2,0', ')', 'can', 'the', 'request', 'be', 'granted', 'immediately', 'Allocation', 'Max', 'Process', 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'P0', '0', '0', '1', '2', '0', '0', '1', '2', 'P1', '1', '0', '0', '0', '1', '7', '5', '0', 'P2', '1', '3', '5', '4', '2', '3', '5', '6', 'P3', '0', '6', '3', '2', '0', '6', '5', '2', 'P4', '0', '0', '1', '4', '0', '6', '5', '6', 'Prof.', 'Firoz', 'A', 'Sherasiya', '#', '3140702', '(', 'OS', ')', '\uf077', 'Unit', '5', '–', 'Deadlock', '‹#›', 'Database', 'Management', 'Systems', '(', 'DBMS', ')', 'GTU', '#', '3130703', 'firoz.sherasiya@darshan.ac.in', '9879879861', 'Computer', 'Engineering', 'Department', 'Prof.', 'Firoz', 'A', 'Sherasiya', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', ',', 'Rajkot', 'Thank', 'You', '/docProps/thumbnail.jpeg'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('request', 'NOUN'), ('from', 'ADP'), ('Process', 'PROPN'), ('P1', 'PROPN'), ('arrives', 'VERB'), ('for', 'ADP'), ('(', 'PUNCT'), ('0,4,2,0', 'NUM'), (')', 'PUNCT'), ('can', 'AUX'), ('the', 'DET'), ('request', 'NOUN'), ('be', 'AUX'), ('granted', 'VERB'), ('immediately', 'ADV'), ('Allocation', 'PROPN'), ('Max', 'PROPN'), ('Process', 'PROPN'), ('A', 'PROPN'), ('B', 'NOUN'), ('C', 'PROPN'), ('D', 'PROPN'), ('A', 'NOUN'), ('B', 'NOUN'), ('C', 'PROPN'), ('D', 'NOUN'), ('P0', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('2', 'NUM'), ('P1', 'NOUN'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('7', 'NUM'), ('5', 'NUM'), ('0', 'NUM'), ('P2', 'NOUN'), ('1', 'NUM'), ('3', 'NUM'), ('5', 'NUM'), ('4', 'NUM'), ('2', 'NUM'), ('3', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('P3', 'NOUN'), ('0', 'NUM'), ('6', 'NUM'), ('3', 'NUM'), ('2', 'NUM'), ('0', 'NUM'), ('6', 'NUM'), ('5', 'NUM'), ('2', 'NUM'), ('P4', 'NOUN'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('4', 'NUM'), ('0', 'NUM'), ('6', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'SYM'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'NOUN'), ('Database', 'NOUN'), ('Management', 'NOUN'), ('Systems', 'PROPN'), ('(', 'PUNCT'), ('DBMS', 'PROPN'), (')', 'PUNCT'), ('GTU', 'NOUN'), ('#', 'SYM'), ('3130703', 'NUM'), ('firoz.sherasiya@darshan.ac.in', 'PROPN'), ('9879879861', 'NUM'), ('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('A', 'DET'), ('Sherasiya', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('Thank', 'VERB'), ('You', 'PRON'), ('/docProps/thumbnail.jpeg', 'X')] 

 XPOS tags are: 
>> [('If', 'IN'), ('request', 'NN'), ('from', 'IN'), ('Process', 'NNP'), ('P1', 'NNP'), ('arrives', 'VBZ'), ('for', 'IN'), ('(', '-LRB-'), ('0,4,2,0', 'CD'), (')', '-RRB-'), ('can', 'MD'), ('the', 'DT'), ('request', 'NN'), ('be', 'VB'), ('granted', 'VBN'), ('immediately', 'RB'), ('Allocation', 'NNP'), ('Max', 'NNP'), ('Process', 'NNP'), ('A', 'NNP'), ('B', 'NN'), ('C', 'NNP'), ('D', 'NNP'), ('A', 'NN'), ('B', 'NN'), ('C', 'NNP'), ('D', 'NN'), ('P0', 'NN'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('2', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('2', 'CD'), ('P1', 'NN'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('7', 'CD'), ('5', 'CD'), ('0', 'CD'), ('P2', 'NN'), ('1', 'CD'), ('3', 'CD'), ('5', 'CD'), ('4', 'CD'), ('2', 'CD'), ('3', 'CD'), ('5', 'CD'), ('6', 'CD'), ('P3', 'NN'), ('0', 'CD'), ('6', 'CD'), ('3', 'CD'), ('2', 'CD'), ('0', 'CD'), ('6', 'CD'), ('5', 'CD'), ('2', 'CD'), ('P4', 'NN'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('4', 'CD'), ('0', 'CD'), ('6', 'CD'), ('5', 'CD'), ('6', 'CD'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'NNP'), ('Sherasiya', 'NNP'), ('#', 'NN'), ('3140702', 'CD'), ('(', '-LRB-'), ('OS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('5', 'CD'), ('–', ':'), ('Deadlock', 'NN'), ('‹#›', 'NN'), ('Database', 'NN'), ('Management', 'NN'), ('Systems', 'NNP'), ('(', '-LRB-'), ('DBMS', 'NNP'), (')', '-RRB-'), ('GTU', 'NN'), ('#', 'NN'), ('3130703', 'CD'), ('firoz.sherasiya@darshan.ac.in', 'NNP'), ('9879879861', 'CD'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Firoz', 'NNP'), ('A', 'DT'), ('Sherasiya', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('Thank', 'VBP'), ('You', 'PRP'), ('/docProps/thumbnail.jpeg', 'ADD')] 

 Lemmas are: 
>> [('If', 'if'), ('request', 'request'), ('from', 'from'), ('Process', 'process'), ('P1', 'P1'), ('arrives', 'arrive'), ('for', 'for'), ('(', '('), ('0,4,2,0', '04220'), (')', ')'), ('can', 'can'), ('the', 'the'), ('request', 'request'), ('be', 'be'), ('granted', 'grant'), ('immediately', 'immediately'), ('Allocation', 'Allocation'), ('Max', 'Max'), ('Process', 'process'), ('A', 'A'), ('B', 'b'), ('C', 'C'), ('D', 'D'), ('A', 'a'), ('B', 'b'), ('C', 'C'), ('D', 'd'), ('P0', 'p0'), ('0', '0'), ('0', '0'), ('1', '1'), ('2', '2'), ('0', '0'), ('0', '0'), ('1', '1'), ('2', '2'), ('P1', 'p1'), ('1', '1'), ('0', '0'), ('0', '0'), ('0', '0'), ('1', '1'), ('7', '7'), ('5', '5'), ('0', '0'), ('P2', 'p2'), ('1', '1'), ('3', '3'), ('5', '5'), ('4', '4'), ('2', '2'), ('3', '3'), ('5', '5'), ('6', '6'), ('P3', 'p3'), ('0', '0'), ('6', '6'), ('3', '3'), ('2', '2'), ('0', '0'), ('6', '6'), ('5', '5'), ('2', '2'), ('P4', 'p4'), ('0', '0'), ('0', '0'), ('1', '1'), ('4', '4'), ('0', '0'), ('6', '6'), ('5', '5'), ('6', '6'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'A'), ('Sherasiya', 'Sherasiya'), ('#', '#'), ('3140702', '3140702'), ('(', '('), ('OS', 'os'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('5', '5'), ('–', '-'), ('Deadlock', 'deadlock'), ('‹#›', '‹#›'), ('Database', 'database'), ('Management', 'management'), ('Systems', 'System'), ('(', '('), ('DBMS', 'DBMS'), (')', ')'), ('GTU', 'gtu'), ('#', '#'), ('3130703', '3130703'), ('firoz.sherasiya@darshan.ac.in', 'firoz.sherasiya@darshan.ac.in'), ('9879879861', '9879879861'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Firoz', 'Firoz'), ('A', 'a'), ('Sherasiya', 'Sherasiya'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('Thank', 'thank'), ('You', 'you'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')] 

 Dependency tags are: 
>> [(('If', 'arrives'), 'mark'), (('request', 'arrives'), 'nsubj'), (('from', 'P1'), 'case'), (('Process', 'P1'), 'compound'), (('P1', 'arrives'), 'nsubj'), (('arrives', 'granted'), 'advcl'), (('for', 'arrives'), 'obl'), (('(', '0,4,2,0'), 'punct'), (('0,4,2,0', 'arrives'), 'dep'), ((')', '0,4,2,0'), 'punct'), (('can', 'granted'), 'aux'), (('the', 'request'), 'det'), (('request', 'granted'), 'nsubj:pass'), (('be', 'granted'), 'aux:pass'), (('granted', 'root'), 'root'), (('immediately', 'granted'), 'advmod'), (('Allocation', 'Process'), 'compound'), (('Max', 'Process'), 'compound'), (('Process', 'granted'), 'obj'), (('A', 'B'), 'compound'), (('B', 'Process'), 'appos'), (('C', 'B'), 'compound'), (('D', 'B'), 'appos'), (('A', 'B'), 'compound'), (('B', 'B'), 'appos'), (('C', 'B'), 'compound'), (('D', 'B'), 'compound'), (('P0', 'B'), 'appos'), (('0', 'P0'), 'nummod'), (('0', 'P0'), 'nummod'), (('1', '0'), 'compound'), (('2', '0'), 'compound'), (('0', '0'), 'compound'), (('0', 'P1'), 'nummod'), (('1', 'P1'), 'nummod'), (('2', 'P1'), 'nummod'), (('P1', 'Process'), 'appos'), (('1', 'P1'), 'nummod'), (('0', 'P1'), 'nummod'), (('0', 'P1'), 'nummod'), (('0', 'P1'), 'nummod'), (('1', '5'), 'compound'), (('7', '0'), 'compound'), (('5', '0'), 'compound'), (('0', 'P2'), 'nummod'), (('P2', 'Process'), 'conj'), (('1', 'P2'), 'nummod'), (('3', 'P2'), 'nummod'), (('5', 'P2'), 'nummod'), (('4', 'P2'), 'nummod'), (('2', '5'), 'compound'), (('3', '6'), 'compound'), (('5', '6'), 'compound'), (('6', 'P3'), 'nummod'), (('P3', 'Process'), 'conj'), (('0', 'P3'), 'nummod'), (('6', '2'), 'compound'), (('3', '2'), 'compound'), (('2', 'P3'), 'nummod'), (('0', 'P3'), 'nummod'), (('6', 'P4'), 'nummod'), (('5', '2'), 'compound'), (('2', 'P4'), 'nummod'), (('P4', 'granted'), 'parataxis'), (('0', 'P4'), 'nummod'), (('0', '1'), 'compound'), (('1', 'P4'), 'nummod'), (('4', '6'), 'compound'), (('0', '6'), 'compound'), (('6', '1'), 'compound'), (('5', '1'), 'compound'), (('6', '6'), 'compound'), (('Prof.', 'Firoz'), 'compound'), (('Firoz', '6'), 'compound'), (('A', '#'), 'compound'), (('Sherasiya', '#'), 'compound'), (('#', 'Firoz'), 'appos'), (('3140702', '#'), 'nummod'), (('(', 'OS'), 'punct'), (('OS', '#'), 'appos'), ((')', 'OS'), 'punct'), (('\uf077', 'OS'), 'punct'), (('Unit', '#'), 'appos'), (('5', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Deadlock', 'Unit'), 'compound'), (('‹#›', 'Database'), 'compound'), (('Database', 'Systems'), 'compound'), (('Management', 'Systems'), 'compound'), (('Systems', 'Deadlock'), 'appos'), (('(', 'DBMS'), 'punct'), (('DBMS', 'Systems'), 'appos'), ((')', 'DBMS'), 'punct'), (('GTU', '#'), 'compound'), (('#', 'Systems'), 'appos'), (('3130703', '#'), 'nummod'), (('firoz.sherasiya@darshan.ac.in', '#'), 'appos'), (('9879879861', '#'), 'nummod'), (('Computer', 'Department'), 'compound'), (('Engineering', 'Department'), 'compound'), (('Department', 'firoz.sherasiya@darshan.ac.in'), 'appos'), (('Prof.', 'Department'), 'compound'), (('Firoz', 'Department'), 'flat'), (('A', 'Institute'), 'det'), (('Sherasiya', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Department'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), ((',', 'Thank'), 'punct'), (('Rajkot', 'Thank'), 'nsubj'), (('Thank', 'Institute'), 'parataxis'), (('You', 'Thank'), 'obj'), (('/docProps/thumbnail.jpeg', 'Thank'), 'obj')]

 Named Entities are: 
>> [('Process P1', 'PRODUCT'), ('5', 'CARDINAL'), ('Firoz A Sherasiya   Darshan Institute of Engineering & Technology', 'ORG'), ('Rajkot', 'GPE')]