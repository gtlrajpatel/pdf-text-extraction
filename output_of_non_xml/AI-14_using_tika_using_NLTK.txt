				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

AI-14  Knowledge Base It contains domain-specific and high-quality knowledge. 


>> Tokens are: 
 ['AI-14', 'Knowledge', 'Base', 'It', 'contains', 'domain-specific', 'high-quality', 'knowledge', '.']

>> Bigrams are: 
 [('AI-14', 'Knowledge'), ('Knowledge', 'Base'), ('Base', 'It'), ('It', 'contains'), ('contains', 'domain-specific'), ('domain-specific', 'high-quality'), ('high-quality', 'knowledge'), ('knowledge', '.')]

>> Trigrams are: 
 [('AI-14', 'Knowledge', 'Base'), ('Knowledge', 'Base', 'It'), ('Base', 'It', 'contains'), ('It', 'contains', 'domain-specific'), ('contains', 'domain-specific', 'high-quality'), ('domain-specific', 'high-quality', 'knowledge'), ('high-quality', 'knowledge', '.')]

>> POS Tags are: 
 [('AI-14', 'NNP'), ('Knowledge', 'NNP'), ('Base', 'NNP'), ('It', 'PRP'), ('contains', 'VBZ'), ('domain-specific', 'JJ'), ('high-quality', 'NN'), ('knowledge', 'NN'), ('.', '.')]

 (S
  (NP AI-14/NNP Knowledge/NNP Base/NNP)
  It/PRP
  contains/VBZ
  (NP domain-specific/JJ high-quality/NN knowledge/NN)
  ./.) 


>> Noun Phrases are: 
 ['AI-14 Knowledge Base', 'domain-specific high-quality knowledge']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('AI-14', 'ai-14'), ('Knowledge', 'knowledg'), ('Base', 'base'), ('It', 'it'), ('contains', 'contain'), ('domain-specific', 'domain-specif'), ('high-quality', 'high-qual'), ('knowledge', 'knowledg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AI-14', 'ai-14'), ('Knowledge', 'knowledg'), ('Base', 'base'), ('It', 'it'), ('contains', 'contain'), ('domain-specific', 'domain-specif'), ('high-quality', 'high-qual'), ('knowledge', 'knowledg'), ('.', '.')]

>> Lemmatization: 
 [('AI-14', 'AI-14'), ('Knowledge', 'Knowledge'), ('Base', 'Base'), ('It', 'It'), ('contains', 'contains'), ('domain-specific', 'domain-specific'), ('high-quality', 'high-quality'), ('knowledge', 'knowledge'), ('.', '.')]



============================ Sentence 2 =============================

Knowledge is required to exhibit intelligence. 


>> Tokens are: 
 ['Knowledge', 'required', 'exhibit', 'intelligence', '.']

>> Bigrams are: 
 [('Knowledge', 'required'), ('required', 'exhibit'), ('exhibit', 'intelligence'), ('intelligence', '.')]

>> Trigrams are: 
 [('Knowledge', 'required', 'exhibit'), ('required', 'exhibit', 'intelligence'), ('exhibit', 'intelligence', '.')]

>> POS Tags are: 
 [('Knowledge', 'NNP'), ('required', 'VBD'), ('exhibit', 'NN'), ('intelligence', 'NN'), ('.', '.')]

 (S
  (NP Knowledge/NNP)
  required/VBD
  (NP exhibit/NN intelligence/NN)
  ./.) 


>> Noun Phrases are: 
 ['Knowledge', 'exhibit intelligence']

>> Named Entities are: 
 [('PERSON', 'Knowledge')] 

>> Stemming using Porter Stemmer: 
 [('Knowledge', 'knowledg'), ('required', 'requir'), ('exhibit', 'exhibit'), ('intelligence', 'intellig'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Knowledge', 'knowledg'), ('required', 'requir'), ('exhibit', 'exhibit'), ('intelligence', 'intellig'), ('.', '.')]

>> Lemmatization: 
 [('Knowledge', 'Knowledge'), ('required', 'required'), ('exhibit', 'exhibit'), ('intelligence', 'intelligence'), ('.', '.')]



============================ Sentence 3 =============================

The success of any ES majorly depends upon the collection of highly accurate and precise knowledge. 


>> Tokens are: 
 ['The', 'success', 'ES', 'majorly', 'depends', 'upon', 'collection', 'highly', 'accurate', 'precise', 'knowledge', '.']

>> Bigrams are: 
 [('The', 'success'), ('success', 'ES'), ('ES', 'majorly'), ('majorly', 'depends'), ('depends', 'upon'), ('upon', 'collection'), ('collection', 'highly'), ('highly', 'accurate'), ('accurate', 'precise'), ('precise', 'knowledge'), ('knowledge', '.')]

>> Trigrams are: 
 [('The', 'success', 'ES'), ('success', 'ES', 'majorly'), ('ES', 'majorly', 'depends'), ('majorly', 'depends', 'upon'), ('depends', 'upon', 'collection'), ('upon', 'collection', 'highly'), ('collection', 'highly', 'accurate'), ('highly', 'accurate', 'precise'), ('accurate', 'precise', 'knowledge'), ('precise', 'knowledge', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('success', 'NN'), ('ES', 'NNP'), ('majorly', 'RB'), ('depends', 'VBZ'), ('upon', 'JJ'), ('collection', 'NN'), ('highly', 'RB'), ('accurate', 'JJ'), ('precise', 'NN'), ('knowledge', 'NN'), ('.', '.')]

 (S
  (NP The/DT success/NN ES/NNP)
  majorly/RB
  depends/VBZ
  (NP upon/JJ collection/NN)
  highly/RB
  (NP accurate/JJ precise/NN knowledge/NN)
  ./.) 


>> Noun Phrases are: 
 ['The success ES', 'upon collection', 'accurate precise knowledge']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('success', 'success'), ('ES', 'es'), ('majorly', 'majorli'), ('depends', 'depend'), ('upon', 'upon'), ('collection', 'collect'), ('highly', 'highli'), ('accurate', 'accur'), ('precise', 'precis'), ('knowledge', 'knowledg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('success', 'success'), ('ES', 'es'), ('majorly', 'major'), ('depends', 'depend'), ('upon', 'upon'), ('collection', 'collect'), ('highly', 'high'), ('accurate', 'accur'), ('precise', 'precis'), ('knowledge', 'knowledg'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('success', 'success'), ('ES', 'ES'), ('majorly', 'majorly'), ('depends', 'depends'), ('upon', 'upon'), ('collection', 'collection'), ('highly', 'highly'), ('accurate', 'accurate'), ('precise', 'precise'), ('knowledge', 'knowledge'), ('.', '.')]



============================ Sentence 4 =============================

What is Knowledge? 


>> Tokens are: 
 ['What', 'Knowledge', '?']

>> Bigrams are: 
 [('What', 'Knowledge'), ('Knowledge', '?')]

>> Trigrams are: 
 [('What', 'Knowledge', '?')]

>> POS Tags are: 
 [('What', 'WP'), ('Knowledge', 'NNP'), ('?', '.')]

 (S What/WP (NP Knowledge/NNP) ?/.) 


>> Noun Phrases are: 
 ['Knowledge']

>> Named Entities are: 
 [('PERSON', 'Knowledge')] 

>> Stemming using Porter Stemmer: 
 [('What', 'what'), ('Knowledge', 'knowledg'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('What', 'what'), ('Knowledge', 'knowledg'), ('?', '?')]

>> Lemmatization: 
 [('What', 'What'), ('Knowledge', 'Knowledge'), ('?', '?')]



============================ Sentence 5 =============================

The data is collection of facts. 


>> Tokens are: 
 ['The', 'data', 'collection', 'facts', '.']

>> Bigrams are: 
 [('The', 'data'), ('data', 'collection'), ('collection', 'facts'), ('facts', '.')]

>> Trigrams are: 
 [('The', 'data', 'collection'), ('data', 'collection', 'facts'), ('collection', 'facts', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('data', 'NNS'), ('collection', 'NN'), ('facts', 'NNS'), ('.', '.')]

 (S (NP The/DT data/NNS collection/NN facts/NNS) ./.) 


>> Noun Phrases are: 
 ['The data collection facts']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('data', 'data'), ('collection', 'collect'), ('facts', 'fact'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('data', 'data'), ('collection', 'collect'), ('facts', 'fact'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('data', 'data'), ('collection', 'collection'), ('facts', 'fact'), ('.', '.')]



============================ Sentence 6 =============================

The information is organized as data and facts about the task domain. 


>> Tokens are: 
 ['The', 'information', 'organized', 'data', 'facts', 'task', 'domain', '.']

>> Bigrams are: 
 [('The', 'information'), ('information', 'organized'), ('organized', 'data'), ('data', 'facts'), ('facts', 'task'), ('task', 'domain'), ('domain', '.')]

>> Trigrams are: 
 [('The', 'information', 'organized'), ('information', 'organized', 'data'), ('organized', 'data', 'facts'), ('data', 'facts', 'task'), ('facts', 'task', 'domain'), ('task', 'domain', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('information', 'NN'), ('organized', 'VBN'), ('data', 'NN'), ('facts', 'NNS'), ('task', 'NN'), ('domain', 'NN'), ('.', '.')]

 (S
  (NP The/DT information/NN)
  organized/VBN
  (NP data/NN facts/NNS task/NN domain/NN)
  ./.) 


>> Noun Phrases are: 
 ['The information', 'data facts task domain']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('information', 'inform'), ('organized', 'organ'), ('data', 'data'), ('facts', 'fact'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('information', 'inform'), ('organized', 'organ'), ('data', 'data'), ('facts', 'fact'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('information', 'information'), ('organized', 'organized'), ('data', 'data'), ('facts', 'fact'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]



============================ Sentence 7 =============================

Data, information, and past experience combined together are termed as knowledge. 


>> Tokens are: 
 ['Data', ',', 'information', ',', 'past', 'experience', 'combined', 'together', 'termed', 'knowledge', '.']

>> Bigrams are: 
 [('Data', ','), (',', 'information'), ('information', ','), (',', 'past'), ('past', 'experience'), ('experience', 'combined'), ('combined', 'together'), ('together', 'termed'), ('termed', 'knowledge'), ('knowledge', '.')]

>> Trigrams are: 
 [('Data', ',', 'information'), (',', 'information', ','), ('information', ',', 'past'), (',', 'past', 'experience'), ('past', 'experience', 'combined'), ('experience', 'combined', 'together'), ('combined', 'together', 'termed'), ('together', 'termed', 'knowledge'), ('termed', 'knowledge', '.')]

>> POS Tags are: 
 [('Data', 'NNP'), (',', ','), ('information', 'NN'), (',', ','), ('past', 'JJ'), ('experience', 'NN'), ('combined', 'VBN'), ('together', 'RB'), ('termed', 'VBN'), ('knowledge', 'NN'), ('.', '.')]

 (S
  (NP Data/NNP)
  ,/,
  (NP information/NN)
  ,/,
  (NP past/JJ experience/NN)
  combined/VBN
  together/RB
  termed/VBN
  (NP knowledge/NN)
  ./.) 


>> Noun Phrases are: 
 ['Data', 'information', 'past experience', 'knowledge']

>> Named Entities are: 
 [('GPE', 'Data')] 

>> Stemming using Porter Stemmer: 
 [('Data', 'data'), (',', ','), ('information', 'inform'), (',', ','), ('past', 'past'), ('experience', 'experi'), ('combined', 'combin'), ('together', 'togeth'), ('termed', 'term'), ('knowledge', 'knowledg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Data', 'data'), (',', ','), ('information', 'inform'), (',', ','), ('past', 'past'), ('experience', 'experi'), ('combined', 'combin'), ('together', 'togeth'), ('termed', 'term'), ('knowledge', 'knowledg'), ('.', '.')]

>> Lemmatization: 
 [('Data', 'Data'), (',', ','), ('information', 'information'), (',', ','), ('past', 'past'), ('experience', 'experience'), ('combined', 'combined'), ('together', 'together'), ('termed', 'termed'), ('knowledge', 'knowledge'), ('.', '.')]



============================ Sentence 8 =============================

Components of Knowledge Base The knowledge base of an ES is a store of both, factual and heuristic knowledge. 


>> Tokens are: 
 ['Components', 'Knowledge', 'Base', 'The', 'knowledge', 'base', 'ES', 'store', ',', 'factual', 'heuristic', 'knowledge', '.']

>> Bigrams are: 
 [('Components', 'Knowledge'), ('Knowledge', 'Base'), ('Base', 'The'), ('The', 'knowledge'), ('knowledge', 'base'), ('base', 'ES'), ('ES', 'store'), ('store', ','), (',', 'factual'), ('factual', 'heuristic'), ('heuristic', 'knowledge'), ('knowledge', '.')]

>> Trigrams are: 
 [('Components', 'Knowledge', 'Base'), ('Knowledge', 'Base', 'The'), ('Base', 'The', 'knowledge'), ('The', 'knowledge', 'base'), ('knowledge', 'base', 'ES'), ('base', 'ES', 'store'), ('ES', 'store', ','), ('store', ',', 'factual'), (',', 'factual', 'heuristic'), ('factual', 'heuristic', 'knowledge'), ('heuristic', 'knowledge', '.')]

>> POS Tags are: 
 [('Components', 'NNS'), ('Knowledge', 'NNP'), ('Base', 'NNP'), ('The', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('ES', 'NNP'), ('store', 'NN'), (',', ','), ('factual', 'JJ'), ('heuristic', 'JJ'), ('knowledge', 'NN'), ('.', '.')]

 (S
  (NP Components/NNS Knowledge/NNP Base/NNP)
  (NP The/DT knowledge/NN base/NN ES/NNP store/NN)
  ,/,
  (NP factual/JJ heuristic/JJ knowledge/NN)
  ./.) 


>> Noun Phrases are: 
 ['Components Knowledge Base', 'The knowledge base ES store', 'factual heuristic knowledge']

>> Named Entities are: 
 [('PERSON', 'Knowledge Base')] 

>> Stemming using Porter Stemmer: 
 [('Components', 'compon'), ('Knowledge', 'knowledg'), ('Base', 'base'), ('The', 'the'), ('knowledge', 'knowledg'), ('base', 'base'), ('ES', 'es'), ('store', 'store'), (',', ','), ('factual', 'factual'), ('heuristic', 'heurist'), ('knowledge', 'knowledg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Components', 'compon'), ('Knowledge', 'knowledg'), ('Base', 'base'), ('The', 'the'), ('knowledge', 'knowledg'), ('base', 'base'), ('ES', 'es'), ('store', 'store'), (',', ','), ('factual', 'factual'), ('heuristic', 'heurist'), ('knowledge', 'knowledg'), ('.', '.')]

>> Lemmatization: 
 [('Components', 'Components'), ('Knowledge', 'Knowledge'), ('Base', 'Base'), ('The', 'The'), ('knowledge', 'knowledge'), ('base', 'base'), ('ES', 'ES'), ('store', 'store'), (',', ','), ('factual', 'factual'), ('heuristic', 'heuristic'), ('knowledge', 'knowledge'), ('.', '.')]



============================ Sentence 9 =============================

· Factual Knowledge − It is the information widely accepted by the Knowledge Engineers and scholars in the task domain. 


>> Tokens are: 
 ['·', 'Factual', 'Knowledge', '−', 'It', 'information', 'widely', 'accepted', 'Knowledge', 'Engineers', 'scholars', 'task', 'domain', '.']

>> Bigrams are: 
 [('·', 'Factual'), ('Factual', 'Knowledge'), ('Knowledge', '−'), ('−', 'It'), ('It', 'information'), ('information', 'widely'), ('widely', 'accepted'), ('accepted', 'Knowledge'), ('Knowledge', 'Engineers'), ('Engineers', 'scholars'), ('scholars', 'task'), ('task', 'domain'), ('domain', '.')]

>> Trigrams are: 
 [('·', 'Factual', 'Knowledge'), ('Factual', 'Knowledge', '−'), ('Knowledge', '−', 'It'), ('−', 'It', 'information'), ('It', 'information', 'widely'), ('information', 'widely', 'accepted'), ('widely', 'accepted', 'Knowledge'), ('accepted', 'Knowledge', 'Engineers'), ('Knowledge', 'Engineers', 'scholars'), ('Engineers', 'scholars', 'task'), ('scholars', 'task', 'domain'), ('task', 'domain', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Factual', 'NNP'), ('Knowledge', 'NNP'), ('−', 'VBD'), ('It', 'PRP'), ('information', 'NN'), ('widely', 'RB'), ('accepted', 'VBD'), ('Knowledge', 'NNP'), ('Engineers', 'NNP'), ('scholars', 'VBZ'), ('task', 'NN'), ('domain', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Factual/NNP Knowledge/NNP)
  −/VBD
  It/PRP
  (NP information/NN)
  widely/RB
  accepted/VBD
  (NP Knowledge/NNP Engineers/NNP)
  scholars/VBZ
  (NP task/NN domain/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Factual Knowledge', 'information', 'Knowledge Engineers', 'task domain']

>> Named Entities are: 
 [('PERSON', 'Factual Knowledge'), ('PERSON', 'Knowledge Engineers')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Factual', 'factual'), ('Knowledge', 'knowledg'), ('−', '−'), ('It', 'it'), ('information', 'inform'), ('widely', 'wide'), ('accepted', 'accept'), ('Knowledge', 'knowledg'), ('Engineers', 'engin'), ('scholars', 'scholar'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Factual', 'factual'), ('Knowledge', 'knowledg'), ('−', '−'), ('It', 'it'), ('information', 'inform'), ('widely', 'wide'), ('accepted', 'accept'), ('Knowledge', 'knowledg'), ('Engineers', 'engin'), ('scholars', 'scholar'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Factual', 'Factual'), ('Knowledge', 'Knowledge'), ('−', '−'), ('It', 'It'), ('information', 'information'), ('widely', 'widely'), ('accepted', 'accepted'), ('Knowledge', 'Knowledge'), ('Engineers', 'Engineers'), ('scholars', 'scholar'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]



============================ Sentence 10 =============================

· Heuristic Knowledge − It is about practice, accurate judgement, one’s ability of evaluation, and guessing. 


>> Tokens are: 
 ['·', 'Heuristic', 'Knowledge', '−', 'It', 'practice', ',', 'accurate', 'judgement', ',', 'one', '’', 'ability', 'evaluation', ',', 'guessing', '.']

>> Bigrams are: 
 [('·', 'Heuristic'), ('Heuristic', 'Knowledge'), ('Knowledge', '−'), ('−', 'It'), ('It', 'practice'), ('practice', ','), (',', 'accurate'), ('accurate', 'judgement'), ('judgement', ','), (',', 'one'), ('one', '’'), ('’', 'ability'), ('ability', 'evaluation'), ('evaluation', ','), (',', 'guessing'), ('guessing', '.')]

>> Trigrams are: 
 [('·', 'Heuristic', 'Knowledge'), ('Heuristic', 'Knowledge', '−'), ('Knowledge', '−', 'It'), ('−', 'It', 'practice'), ('It', 'practice', ','), ('practice', ',', 'accurate'), (',', 'accurate', 'judgement'), ('accurate', 'judgement', ','), ('judgement', ',', 'one'), (',', 'one', '’'), ('one', '’', 'ability'), ('’', 'ability', 'evaluation'), ('ability', 'evaluation', ','), ('evaluation', ',', 'guessing'), (',', 'guessing', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Heuristic', 'NNP'), ('Knowledge', 'NNP'), ('−', 'VBD'), ('It', 'PRP'), ('practice', 'NN'), (',', ','), ('accurate', 'JJ'), ('judgement', 'NN'), (',', ','), ('one', 'CD'), ('’', 'NN'), ('ability', 'NN'), ('evaluation', 'NN'), (',', ','), ('guessing', 'VBG'), ('.', '.')]

 (S
  (NP ·/JJ Heuristic/NNP Knowledge/NNP)
  −/VBD
  It/PRP
  (NP practice/NN)
  ,/,
  (NP accurate/JJ judgement/NN)
  ,/,
  one/CD
  (NP ’/NN ability/NN evaluation/NN)
  ,/,
  guessing/VBG
  ./.) 


>> Noun Phrases are: 
 ['· Heuristic Knowledge', 'practice', 'accurate judgement', '’ ability evaluation']

>> Named Entities are: 
 [('ORGANIZATION', 'Heuristic')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Heuristic', 'heurist'), ('Knowledge', 'knowledg'), ('−', '−'), ('It', 'it'), ('practice', 'practic'), (',', ','), ('accurate', 'accur'), ('judgement', 'judgement'), (',', ','), ('one', 'one'), ('’', '’'), ('ability', 'abil'), ('evaluation', 'evalu'), (',', ','), ('guessing', 'guess'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Heuristic', 'heurist'), ('Knowledge', 'knowledg'), ('−', '−'), ('It', 'it'), ('practice', 'practic'), (',', ','), ('accurate', 'accur'), ('judgement', 'judgement'), (',', ','), ('one', 'one'), ('’', '’'), ('ability', 'abil'), ('evaluation', 'evalu'), (',', ','), ('guessing', 'guess'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Heuristic', 'Heuristic'), ('Knowledge', 'Knowledge'), ('−', '−'), ('It', 'It'), ('practice', 'practice'), (',', ','), ('accurate', 'accurate'), ('judgement', 'judgement'), (',', ','), ('one', 'one'), ('’', '’'), ('ability', 'ability'), ('evaluation', 'evaluation'), (',', ','), ('guessing', 'guessing'), ('.', '.')]



============================ Sentence 11 =============================

Knowledge representation It is the method used to organize and formalize the knowledge in the knowledge base. 


>> Tokens are: 
 ['Knowledge', 'representation', 'It', 'method', 'used', 'organize', 'formalize', 'knowledge', 'knowledge', 'base', '.']

>> Bigrams are: 
 [('Knowledge', 'representation'), ('representation', 'It'), ('It', 'method'), ('method', 'used'), ('used', 'organize'), ('organize', 'formalize'), ('formalize', 'knowledge'), ('knowledge', 'knowledge'), ('knowledge', 'base'), ('base', '.')]

>> Trigrams are: 
 [('Knowledge', 'representation', 'It'), ('representation', 'It', 'method'), ('It', 'method', 'used'), ('method', 'used', 'organize'), ('used', 'organize', 'formalize'), ('organize', 'formalize', 'knowledge'), ('formalize', 'knowledge', 'knowledge'), ('knowledge', 'knowledge', 'base'), ('knowledge', 'base', '.')]

>> POS Tags are: 
 [('Knowledge', 'NNP'), ('representation', 'NN'), ('It', 'PRP'), ('method', 'VBZ'), ('used', 'VBN'), ('organize', 'JJ'), ('formalize', 'JJ'), ('knowledge', 'NN'), ('knowledge', 'NN'), ('base', 'NN'), ('.', '.')]

 (S
  (NP Knowledge/NNP representation/NN)
  It/PRP
  method/VBZ
  used/VBN
  (NP organize/JJ formalize/JJ knowledge/NN knowledge/NN base/NN)
  ./.) 


>> Noun Phrases are: 
 ['Knowledge representation', 'organize formalize knowledge knowledge base']

>> Named Entities are: 
 [('GPE', 'Knowledge')] 

>> Stemming using Porter Stemmer: 
 [('Knowledge', 'knowledg'), ('representation', 'represent'), ('It', 'it'), ('method', 'method'), ('used', 'use'), ('organize', 'organ'), ('formalize', 'formal'), ('knowledge', 'knowledg'), ('knowledge', 'knowledg'), ('base', 'base'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Knowledge', 'knowledg'), ('representation', 'represent'), ('It', 'it'), ('method', 'method'), ('used', 'use'), ('organize', 'organ'), ('formalize', 'formal'), ('knowledge', 'knowledg'), ('knowledge', 'knowledg'), ('base', 'base'), ('.', '.')]

>> Lemmatization: 
 [('Knowledge', 'Knowledge'), ('representation', 'representation'), ('It', 'It'), ('method', 'method'), ('used', 'used'), ('organize', 'organize'), ('formalize', 'formalize'), ('knowledge', 'knowledge'), ('knowledge', 'knowledge'), ('base', 'base'), ('.', '.')]



============================ Sentence 12 =============================

It is in the form of IF-THEN-ELSE rules. 


>> Tokens are: 
 ['It', 'form', 'IF-THEN-ELSE', 'rules', '.']

>> Bigrams are: 
 [('It', 'form'), ('form', 'IF-THEN-ELSE'), ('IF-THEN-ELSE', 'rules'), ('rules', '.')]

>> Trigrams are: 
 [('It', 'form', 'IF-THEN-ELSE'), ('form', 'IF-THEN-ELSE', 'rules'), ('IF-THEN-ELSE', 'rules', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('form', 'VBZ'), ('IF-THEN-ELSE', 'JJ'), ('rules', 'NNS'), ('.', '.')]

 (S It/PRP form/VBZ (NP IF-THEN-ELSE/JJ rules/NNS) ./.) 


>> Noun Phrases are: 
 ['IF-THEN-ELSE rules']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('form', 'form'), ('IF-THEN-ELSE', 'if-then-els'), ('rules', 'rule'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('form', 'form'), ('IF-THEN-ELSE', 'if-then-els'), ('rules', 'rule'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('form', 'form'), ('IF-THEN-ELSE', 'IF-THEN-ELSE'), ('rules', 'rule'), ('.', '.')]



============================ Sentence 13 =============================

Knowledge Acquisition The success of any expert system majorly depends on the quality, completeness, and accuracy of the information stored in the knowledge base. 


>> Tokens are: 
 ['Knowledge', 'Acquisition', 'The', 'success', 'expert', 'system', 'majorly', 'depends', 'quality', ',', 'completeness', ',', 'accuracy', 'information', 'stored', 'knowledge', 'base', '.']

>> Bigrams are: 
 [('Knowledge', 'Acquisition'), ('Acquisition', 'The'), ('The', 'success'), ('success', 'expert'), ('expert', 'system'), ('system', 'majorly'), ('majorly', 'depends'), ('depends', 'quality'), ('quality', ','), (',', 'completeness'), ('completeness', ','), (',', 'accuracy'), ('accuracy', 'information'), ('information', 'stored'), ('stored', 'knowledge'), ('knowledge', 'base'), ('base', '.')]

>> Trigrams are: 
 [('Knowledge', 'Acquisition', 'The'), ('Acquisition', 'The', 'success'), ('The', 'success', 'expert'), ('success', 'expert', 'system'), ('expert', 'system', 'majorly'), ('system', 'majorly', 'depends'), ('majorly', 'depends', 'quality'), ('depends', 'quality', ','), ('quality', ',', 'completeness'), (',', 'completeness', ','), ('completeness', ',', 'accuracy'), (',', 'accuracy', 'information'), ('accuracy', 'information', 'stored'), ('information', 'stored', 'knowledge'), ('stored', 'knowledge', 'base'), ('knowledge', 'base', '.')]

>> POS Tags are: 
 [('Knowledge', 'NNP'), ('Acquisition', 'NNP'), ('The', 'DT'), ('success', 'NN'), ('expert', 'NN'), ('system', 'NN'), ('majorly', 'JJ'), ('depends', 'VBZ'), ('quality', 'NN'), (',', ','), ('completeness', 'NN'), (',', ','), ('accuracy', 'NN'), ('information', 'NN'), ('stored', 'VBN'), ('knowledge', 'NN'), ('base', 'NN'), ('.', '.')]

 (S
  (NP Knowledge/NNP Acquisition/NNP)
  (NP The/DT success/NN expert/NN system/NN)
  majorly/JJ
  depends/VBZ
  (NP quality/NN)
  ,/,
  (NP completeness/NN)
  ,/,
  (NP accuracy/NN information/NN)
  stored/VBN
  (NP knowledge/NN base/NN)
  ./.) 


>> Noun Phrases are: 
 ['Knowledge Acquisition', 'The success expert system', 'quality', 'completeness', 'accuracy information', 'knowledge base']

>> Named Entities are: 
 [('PERSON', 'Knowledge')] 

>> Stemming using Porter Stemmer: 
 [('Knowledge', 'knowledg'), ('Acquisition', 'acquisit'), ('The', 'the'), ('success', 'success'), ('expert', 'expert'), ('system', 'system'), ('majorly', 'majorli'), ('depends', 'depend'), ('quality', 'qualiti'), (',', ','), ('completeness', 'complet'), (',', ','), ('accuracy', 'accuraci'), ('information', 'inform'), ('stored', 'store'), ('knowledge', 'knowledg'), ('base', 'base'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Knowledge', 'knowledg'), ('Acquisition', 'acquisit'), ('The', 'the'), ('success', 'success'), ('expert', 'expert'), ('system', 'system'), ('majorly', 'major'), ('depends', 'depend'), ('quality', 'qualiti'), (',', ','), ('completeness', 'complet'), (',', ','), ('accuracy', 'accuraci'), ('information', 'inform'), ('stored', 'store'), ('knowledge', 'knowledg'), ('base', 'base'), ('.', '.')]

>> Lemmatization: 
 [('Knowledge', 'Knowledge'), ('Acquisition', 'Acquisition'), ('The', 'The'), ('success', 'success'), ('expert', 'expert'), ('system', 'system'), ('majorly', 'majorly'), ('depends', 'depends'), ('quality', 'quality'), (',', ','), ('completeness', 'completeness'), (',', ','), ('accuracy', 'accuracy'), ('information', 'information'), ('stored', 'stored'), ('knowledge', 'knowledge'), ('base', 'base'), ('.', '.')]



============================ Sentence 14 =============================

The knowledge base is formed by readings from various experts, scholars, and the Knowledge Engineers. 


>> Tokens are: 
 ['The', 'knowledge', 'base', 'formed', 'readings', 'various', 'experts', ',', 'scholars', ',', 'Knowledge', 'Engineers', '.']

>> Bigrams are: 
 [('The', 'knowledge'), ('knowledge', 'base'), ('base', 'formed'), ('formed', 'readings'), ('readings', 'various'), ('various', 'experts'), ('experts', ','), (',', 'scholars'), ('scholars', ','), (',', 'Knowledge'), ('Knowledge', 'Engineers'), ('Engineers', '.')]

>> Trigrams are: 
 [('The', 'knowledge', 'base'), ('knowledge', 'base', 'formed'), ('base', 'formed', 'readings'), ('formed', 'readings', 'various'), ('readings', 'various', 'experts'), ('various', 'experts', ','), ('experts', ',', 'scholars'), (',', 'scholars', ','), ('scholars', ',', 'Knowledge'), (',', 'Knowledge', 'Engineers'), ('Knowledge', 'Engineers', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('formed', 'VBN'), ('readings', 'NNS'), ('various', 'JJ'), ('experts', 'NNS'), (',', ','), ('scholars', 'NNS'), (',', ','), ('Knowledge', 'NNP'), ('Engineers', 'NNP'), ('.', '.')]

 (S
  (NP The/DT knowledge/NN base/NN)
  formed/VBN
  (NP readings/NNS)
  (NP various/JJ experts/NNS)
  ,/,
  (NP scholars/NNS)
  ,/,
  (NP Knowledge/NNP Engineers/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The knowledge base', 'readings', 'various experts', 'scholars', 'Knowledge Engineers']

>> Named Entities are: 
 [('PERSON', 'Knowledge Engineers')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('knowledge', 'knowledg'), ('base', 'base'), ('formed', 'form'), ('readings', 'read'), ('various', 'variou'), ('experts', 'expert'), (',', ','), ('scholars', 'scholar'), (',', ','), ('Knowledge', 'knowledg'), ('Engineers', 'engin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('knowledge', 'knowledg'), ('base', 'base'), ('formed', 'form'), ('readings', 'read'), ('various', 'various'), ('experts', 'expert'), (',', ','), ('scholars', 'scholar'), (',', ','), ('Knowledge', 'knowledg'), ('Engineers', 'engin'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('knowledge', 'knowledge'), ('base', 'base'), ('formed', 'formed'), ('readings', 'reading'), ('various', 'various'), ('experts', 'expert'), (',', ','), ('scholars', 'scholar'), (',', ','), ('Knowledge', 'Knowledge'), ('Engineers', 'Engineers'), ('.', '.')]



============================ Sentence 15 =============================

The knowledge engineer is a person with the qualities of empathy, quick learning, and case analyzing skills. 


>> Tokens are: 
 ['The', 'knowledge', 'engineer', 'person', 'qualities', 'empathy', ',', 'quick', 'learning', ',', 'case', 'analyzing', 'skills', '.']

>> Bigrams are: 
 [('The', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'person'), ('person', 'qualities'), ('qualities', 'empathy'), ('empathy', ','), (',', 'quick'), ('quick', 'learning'), ('learning', ','), (',', 'case'), ('case', 'analyzing'), ('analyzing', 'skills'), ('skills', '.')]

>> Trigrams are: 
 [('The', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'person'), ('engineer', 'person', 'qualities'), ('person', 'qualities', 'empathy'), ('qualities', 'empathy', ','), ('empathy', ',', 'quick'), (',', 'quick', 'learning'), ('quick', 'learning', ','), ('learning', ',', 'case'), (',', 'case', 'analyzing'), ('case', 'analyzing', 'skills'), ('analyzing', 'skills', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('person', 'NN'), ('qualities', 'NNS'), ('empathy', 'VBP'), (',', ','), ('quick', 'JJ'), ('learning', 'NN'), (',', ','), ('case', 'NN'), ('analyzing', 'VBG'), ('skills', 'NNS'), ('.', '.')]

 (S
  (NP The/DT knowledge/NN engineer/NN person/NN qualities/NNS)
  empathy/VBP
  ,/,
  (NP quick/JJ learning/NN)
  ,/,
  (NP case/NN)
  analyzing/VBG
  (NP skills/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The knowledge engineer person qualities', 'quick learning', 'case', 'skills']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('person', 'person'), ('qualities', 'qualiti'), ('empathy', 'empathi'), (',', ','), ('quick', 'quick'), ('learning', 'learn'), (',', ','), ('case', 'case'), ('analyzing', 'analyz'), ('skills', 'skill'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('person', 'person'), ('qualities', 'qualiti'), ('empathy', 'empathi'), (',', ','), ('quick', 'quick'), ('learning', 'learn'), (',', ','), ('case', 'case'), ('analyzing', 'analyz'), ('skills', 'skill'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('person', 'person'), ('qualities', 'quality'), ('empathy', 'empathy'), (',', ','), ('quick', 'quick'), ('learning', 'learning'), (',', ','), ('case', 'case'), ('analyzing', 'analyzing'), ('skills', 'skill'), ('.', '.')]



============================ Sentence 16 =============================

He acquires information from subject expert by recording, interviewing, and observing him at work, etc. 


>> Tokens are: 
 ['He', 'acquires', 'information', 'subject', 'expert', 'recording', ',', 'interviewing', ',', 'observing', 'work', ',', 'etc', '.']

>> Bigrams are: 
 [('He', 'acquires'), ('acquires', 'information'), ('information', 'subject'), ('subject', 'expert'), ('expert', 'recording'), ('recording', ','), (',', 'interviewing'), ('interviewing', ','), (',', 'observing'), ('observing', 'work'), ('work', ','), (',', 'etc'), ('etc', '.')]

>> Trigrams are: 
 [('He', 'acquires', 'information'), ('acquires', 'information', 'subject'), ('information', 'subject', 'expert'), ('subject', 'expert', 'recording'), ('expert', 'recording', ','), ('recording', ',', 'interviewing'), (',', 'interviewing', ','), ('interviewing', ',', 'observing'), (',', 'observing', 'work'), ('observing', 'work', ','), ('work', ',', 'etc'), (',', 'etc', '.')]

>> POS Tags are: 
 [('He', 'PRP'), ('acquires', 'VBZ'), ('information', 'NN'), ('subject', 'NN'), ('expert', 'NN'), ('recording', 'NN'), (',', ','), ('interviewing', 'NN'), (',', ','), ('observing', 'VBG'), ('work', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')]

 (S
  He/PRP
  acquires/VBZ
  (NP information/NN subject/NN expert/NN recording/NN)
  ,/,
  (NP interviewing/NN)
  ,/,
  observing/VBG
  (NP work/NN)
  ,/,
  etc/FW
  ./.) 


>> Noun Phrases are: 
 ['information subject expert recording', 'interviewing', 'work']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('He', 'he'), ('acquires', 'acquir'), ('information', 'inform'), ('subject', 'subject'), ('expert', 'expert'), ('recording', 'record'), (',', ','), ('interviewing', 'interview'), (',', ','), ('observing', 'observ'), ('work', 'work'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('He', 'he'), ('acquires', 'acquir'), ('information', 'inform'), ('subject', 'subject'), ('expert', 'expert'), ('recording', 'record'), (',', ','), ('interviewing', 'interview'), (',', ','), ('observing', 'observ'), ('work', 'work'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Lemmatization: 
 [('He', 'He'), ('acquires', 'acquires'), ('information', 'information'), ('subject', 'subject'), ('expert', 'expert'), ('recording', 'recording'), (',', ','), ('interviewing', 'interviewing'), (',', ','), ('observing', 'observing'), ('work', 'work'), (',', ','), ('etc', 'etc'), ('.', '.')]



============================ Sentence 17 =============================

He then categorizes and organizes the information in a meaningful way, in the form of IF-THEN-ELSE rules, to be used by interference machine. 


>> Tokens are: 
 ['He', 'categorizes', 'organizes', 'information', 'meaningful', 'way', ',', 'form', 'IF-THEN-ELSE', 'rules', ',', 'used', 'interference', 'machine', '.']

>> Bigrams are: 
 [('He', 'categorizes'), ('categorizes', 'organizes'), ('organizes', 'information'), ('information', 'meaningful'), ('meaningful', 'way'), ('way', ','), (',', 'form'), ('form', 'IF-THEN-ELSE'), ('IF-THEN-ELSE', 'rules'), ('rules', ','), (',', 'used'), ('used', 'interference'), ('interference', 'machine'), ('machine', '.')]

>> Trigrams are: 
 [('He', 'categorizes', 'organizes'), ('categorizes', 'organizes', 'information'), ('organizes', 'information', 'meaningful'), ('information', 'meaningful', 'way'), ('meaningful', 'way', ','), ('way', ',', 'form'), (',', 'form', 'IF-THEN-ELSE'), ('form', 'IF-THEN-ELSE', 'rules'), ('IF-THEN-ELSE', 'rules', ','), ('rules', ',', 'used'), (',', 'used', 'interference'), ('used', 'interference', 'machine'), ('interference', 'machine', '.')]

>> POS Tags are: 
 [('He', 'PRP'), ('categorizes', 'VBZ'), ('organizes', 'JJ'), ('information', 'NN'), ('meaningful', 'JJ'), ('way', 'NN'), (',', ','), ('form', 'VB'), ('IF-THEN-ELSE', 'NNP'), ('rules', 'NNS'), (',', ','), ('used', 'VBD'), ('interference', 'NN'), ('machine', 'NN'), ('.', '.')]

 (S
  He/PRP
  categorizes/VBZ
  (NP organizes/JJ information/NN)
  (NP meaningful/JJ way/NN)
  ,/,
  form/VB
  (NP IF-THEN-ELSE/NNP rules/NNS)
  ,/,
  used/VBD
  (NP interference/NN machine/NN)
  ./.) 


>> Noun Phrases are: 
 ['organizes information', 'meaningful way', 'IF-THEN-ELSE rules', 'interference machine']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('He', 'he'), ('categorizes', 'categor'), ('organizes', 'organ'), ('information', 'inform'), ('meaningful', 'meaning'), ('way', 'way'), (',', ','), ('form', 'form'), ('IF-THEN-ELSE', 'if-then-els'), ('rules', 'rule'), (',', ','), ('used', 'use'), ('interference', 'interfer'), ('machine', 'machin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('He', 'he'), ('categorizes', 'categor'), ('organizes', 'organ'), ('information', 'inform'), ('meaningful', 'meaning'), ('way', 'way'), (',', ','), ('form', 'form'), ('IF-THEN-ELSE', 'if-then-els'), ('rules', 'rule'), (',', ','), ('used', 'use'), ('interference', 'interfer'), ('machine', 'machin'), ('.', '.')]

>> Lemmatization: 
 [('He', 'He'), ('categorizes', 'categorizes'), ('organizes', 'organizes'), ('information', 'information'), ('meaningful', 'meaningful'), ('way', 'way'), (',', ','), ('form', 'form'), ('IF-THEN-ELSE', 'IF-THEN-ELSE'), ('rules', 'rule'), (',', ','), ('used', 'used'), ('interference', 'interference'), ('machine', 'machine'), ('.', '.')]



============================ Sentence 18 =============================

The knowledge engineer also monitors the development of the ES. 


>> Tokens are: 
 ['The', 'knowledge', 'engineer', 'also', 'monitors', 'development', 'ES', '.']

>> Bigrams are: 
 [('The', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'also'), ('also', 'monitors'), ('monitors', 'development'), ('development', 'ES'), ('ES', '.')]

>> Trigrams are: 
 [('The', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'also'), ('engineer', 'also', 'monitors'), ('also', 'monitors', 'development'), ('monitors', 'development', 'ES'), ('development', 'ES', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('also', 'RB'), ('monitors', 'NNS'), ('development', 'NN'), ('ES', 'NNP'), ('.', '.')]

 (S
  (NP The/DT knowledge/NN engineer/NN)
  also/RB
  (NP monitors/NNS development/NN ES/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The knowledge engineer', 'monitors development ES']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('also', 'also'), ('monitors', 'monitor'), ('development', 'develop'), ('ES', 'es'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('also', 'also'), ('monitors', 'monitor'), ('development', 'develop'), ('ES', 'es'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('also', 'also'), ('monitors', 'monitor'), ('development', 'development'), ('ES', 'ES'), ('.', '.')]



============================ Sentence 19 =============================

Inference Engine Use of efficient procedures and rules by the Inference Engine is essential in deducting a correct, flawless solution. 


>> Tokens are: 
 ['Inference', 'Engine', 'Use', 'efficient', 'procedures', 'rules', 'Inference', 'Engine', 'essential', 'deducting', 'correct', ',', 'flawless', 'solution', '.']

>> Bigrams are: 
 [('Inference', 'Engine'), ('Engine', 'Use'), ('Use', 'efficient'), ('efficient', 'procedures'), ('procedures', 'rules'), ('rules', 'Inference'), ('Inference', 'Engine'), ('Engine', 'essential'), ('essential', 'deducting'), ('deducting', 'correct'), ('correct', ','), (',', 'flawless'), ('flawless', 'solution'), ('solution', '.')]

>> Trigrams are: 
 [('Inference', 'Engine', 'Use'), ('Engine', 'Use', 'efficient'), ('Use', 'efficient', 'procedures'), ('efficient', 'procedures', 'rules'), ('procedures', 'rules', 'Inference'), ('rules', 'Inference', 'Engine'), ('Inference', 'Engine', 'essential'), ('Engine', 'essential', 'deducting'), ('essential', 'deducting', 'correct'), ('deducting', 'correct', ','), ('correct', ',', 'flawless'), (',', 'flawless', 'solution'), ('flawless', 'solution', '.')]

>> POS Tags are: 
 [('Inference', 'NNP'), ('Engine', 'NNP'), ('Use', 'NNP'), ('efficient', 'JJ'), ('procedures', 'NNS'), ('rules', 'NNS'), ('Inference', 'NNP'), ('Engine', 'NNP'), ('essential', 'JJ'), ('deducting', 'NN'), ('correct', 'NN'), (',', ','), ('flawless', 'JJ'), ('solution', 'NN'), ('.', '.')]

 (S
  (NP Inference/NNP Engine/NNP Use/NNP)
  (NP efficient/JJ procedures/NNS rules/NNS Inference/NNP Engine/NNP)
  (NP essential/JJ deducting/NN correct/NN)
  ,/,
  (NP flawless/JJ solution/NN)
  ./.) 


>> Noun Phrases are: 
 ['Inference Engine Use', 'efficient procedures rules Inference Engine', 'essential deducting correct', 'flawless solution']

>> Named Entities are: 
 [('GPE', 'Inference'), ('PERSON', 'Engine Use'), ('PERSON', 'Inference Engine')] 

>> Stemming using Porter Stemmer: 
 [('Inference', 'infer'), ('Engine', 'engin'), ('Use', 'use'), ('efficient', 'effici'), ('procedures', 'procedur'), ('rules', 'rule'), ('Inference', 'infer'), ('Engine', 'engin'), ('essential', 'essenti'), ('deducting', 'deduct'), ('correct', 'correct'), (',', ','), ('flawless', 'flawless'), ('solution', 'solut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Inference', 'infer'), ('Engine', 'engin'), ('Use', 'use'), ('efficient', 'effici'), ('procedures', 'procedur'), ('rules', 'rule'), ('Inference', 'infer'), ('Engine', 'engin'), ('essential', 'essenti'), ('deducting', 'deduct'), ('correct', 'correct'), (',', ','), ('flawless', 'flawless'), ('solution', 'solut'), ('.', '.')]

>> Lemmatization: 
 [('Inference', 'Inference'), ('Engine', 'Engine'), ('Use', 'Use'), ('efficient', 'efficient'), ('procedures', 'procedure'), ('rules', 'rule'), ('Inference', 'Inference'), ('Engine', 'Engine'), ('essential', 'essential'), ('deducting', 'deducting'), ('correct', 'correct'), (',', ','), ('flawless', 'flawless'), ('solution', 'solution'), ('.', '.')]



============================ Sentence 20 =============================

In case of knowledge-based ES, the Inference Engine acquires and manipulates the knowledge from the knowledge base to arrive at a particular solution. 


>> Tokens are: 
 ['In', 'case', 'knowledge-based', 'ES', ',', 'Inference', 'Engine', 'acquires', 'manipulates', 'knowledge', 'knowledge', 'base', 'arrive', 'particular', 'solution', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', 'knowledge-based'), ('knowledge-based', 'ES'), ('ES', ','), (',', 'Inference'), ('Inference', 'Engine'), ('Engine', 'acquires'), ('acquires', 'manipulates'), ('manipulates', 'knowledge'), ('knowledge', 'knowledge'), ('knowledge', 'base'), ('base', 'arrive'), ('arrive', 'particular'), ('particular', 'solution'), ('solution', '.')]

>> Trigrams are: 
 [('In', 'case', 'knowledge-based'), ('case', 'knowledge-based', 'ES'), ('knowledge-based', 'ES', ','), ('ES', ',', 'Inference'), (',', 'Inference', 'Engine'), ('Inference', 'Engine', 'acquires'), ('Engine', 'acquires', 'manipulates'), ('acquires', 'manipulates', 'knowledge'), ('manipulates', 'knowledge', 'knowledge'), ('knowledge', 'knowledge', 'base'), ('knowledge', 'base', 'arrive'), ('base', 'arrive', 'particular'), ('arrive', 'particular', 'solution'), ('particular', 'solution', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), ('knowledge-based', 'JJ'), ('ES', 'NNP'), (',', ','), ('Inference', 'NNP'), ('Engine', 'NNP'), ('acquires', 'VBZ'), ('manipulates', 'NNS'), ('knowledge', 'VBP'), ('knowledge', 'NN'), ('base', 'NN'), ('arrive', 'JJ'), ('particular', 'JJ'), ('solution', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP case/NN)
  (NP knowledge-based/JJ ES/NNP)
  ,/,
  (NP Inference/NNP Engine/NNP)
  acquires/VBZ
  (NP manipulates/NNS)
  knowledge/VBP
  (NP knowledge/NN base/NN)
  (NP arrive/JJ particular/JJ solution/NN)
  ./.) 


>> Noun Phrases are: 
 ['case', 'knowledge-based ES', 'Inference Engine', 'manipulates', 'knowledge base', 'arrive particular solution']

>> Named Entities are: 
 [('PERSON', 'Inference Engine')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), ('knowledge-based', 'knowledge-bas'), ('ES', 'es'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('acquires', 'acquir'), ('manipulates', 'manipul'), ('knowledge', 'knowledg'), ('knowledge', 'knowledg'), ('base', 'base'), ('arrive', 'arriv'), ('particular', 'particular'), ('solution', 'solut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), ('knowledge-based', 'knowledge-bas'), ('ES', 'es'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('acquires', 'acquir'), ('manipulates', 'manipul'), ('knowledge', 'knowledg'), ('knowledge', 'knowledg'), ('base', 'base'), ('arrive', 'arriv'), ('particular', 'particular'), ('solution', 'solut'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), ('knowledge-based', 'knowledge-based'), ('ES', 'ES'), (',', ','), ('Inference', 'Inference'), ('Engine', 'Engine'), ('acquires', 'acquires'), ('manipulates', 'manipulates'), ('knowledge', 'knowledge'), ('knowledge', 'knowledge'), ('base', 'base'), ('arrive', 'arrive'), ('particular', 'particular'), ('solution', 'solution'), ('.', '.')]



============================ Sentence 21 =============================

In case of rule based ES, it − · Applies rules repeatedly to the facts, which are obtained from earlier rule application. 


>> Tokens are: 
 ['In', 'case', 'rule', 'based', 'ES', ',', '−', '·', 'Applies', 'rules', 'repeatedly', 'facts', ',', 'obtained', 'earlier', 'rule', 'application', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', 'rule'), ('rule', 'based'), ('based', 'ES'), ('ES', ','), (',', '−'), ('−', '·'), ('·', 'Applies'), ('Applies', 'rules'), ('rules', 'repeatedly'), ('repeatedly', 'facts'), ('facts', ','), (',', 'obtained'), ('obtained', 'earlier'), ('earlier', 'rule'), ('rule', 'application'), ('application', '.')]

>> Trigrams are: 
 [('In', 'case', 'rule'), ('case', 'rule', 'based'), ('rule', 'based', 'ES'), ('based', 'ES', ','), ('ES', ',', '−'), (',', '−', '·'), ('−', '·', 'Applies'), ('·', 'Applies', 'rules'), ('Applies', 'rules', 'repeatedly'), ('rules', 'repeatedly', 'facts'), ('repeatedly', 'facts', ','), ('facts', ',', 'obtained'), (',', 'obtained', 'earlier'), ('obtained', 'earlier', 'rule'), ('earlier', 'rule', 'application'), ('rule', 'application', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), ('rule', 'NN'), ('based', 'VBN'), ('ES', 'NNP'), (',', ','), ('−', 'NNP'), ('·', 'NNP'), ('Applies', 'NNP'), ('rules', 'NNS'), ('repeatedly', 'RB'), ('facts', 'NNS'), (',', ','), ('obtained', 'VBN'), ('earlier', 'RBR'), ('rule', 'JJ'), ('application', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP case/NN rule/NN)
  based/VBN
  (NP ES/NNP)
  ,/,
  (NP −/NNP ·/NNP Applies/NNP rules/NNS)
  repeatedly/RB
  (NP facts/NNS)
  ,/,
  obtained/VBN
  earlier/RBR
  (NP rule/JJ application/NN)
  ./.) 


>> Noun Phrases are: 
 ['case rule', 'ES', '− · Applies rules', 'facts', 'rule application']

>> Named Entities are: 
 [('ORGANIZATION', 'ES')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), ('rule', 'rule'), ('based', 'base'), ('ES', 'es'), (',', ','), ('−', '−'), ('·', '·'), ('Applies', 'appli'), ('rules', 'rule'), ('repeatedly', 'repeatedli'), ('facts', 'fact'), (',', ','), ('obtained', 'obtain'), ('earlier', 'earlier'), ('rule', 'rule'), ('application', 'applic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), ('rule', 'rule'), ('based', 'base'), ('ES', 'es'), (',', ','), ('−', '−'), ('·', '·'), ('Applies', 'appli'), ('rules', 'rule'), ('repeatedly', 'repeat'), ('facts', 'fact'), (',', ','), ('obtained', 'obtain'), ('earlier', 'earlier'), ('rule', 'rule'), ('application', 'applic'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), ('rule', 'rule'), ('based', 'based'), ('ES', 'ES'), (',', ','), ('−', '−'), ('·', '·'), ('Applies', 'Applies'), ('rules', 'rule'), ('repeatedly', 'repeatedly'), ('facts', 'fact'), (',', ','), ('obtained', 'obtained'), ('earlier', 'earlier'), ('rule', 'rule'), ('application', 'application'), ('.', '.')]



============================ Sentence 22 =============================

· Adds new knowledge into the knowledge base if required. 


>> Tokens are: 
 ['·', 'Adds', 'new', 'knowledge', 'knowledge', 'base', 'required', '.']

>> Bigrams are: 
 [('·', 'Adds'), ('Adds', 'new'), ('new', 'knowledge'), ('knowledge', 'knowledge'), ('knowledge', 'base'), ('base', 'required'), ('required', '.')]

>> Trigrams are: 
 [('·', 'Adds', 'new'), ('Adds', 'new', 'knowledge'), ('new', 'knowledge', 'knowledge'), ('knowledge', 'knowledge', 'base'), ('knowledge', 'base', 'required'), ('base', 'required', '.')]

>> POS Tags are: 
 [('·', 'NNS'), ('Adds', 'NNP'), ('new', 'JJ'), ('knowledge', 'NN'), ('knowledge', 'NN'), ('base', 'NN'), ('required', 'VBN'), ('.', '.')]

 (S
  (NP ·/NNS Adds/NNP)
  (NP new/JJ knowledge/NN knowledge/NN base/NN)
  required/VBN
  ./.) 


>> Noun Phrases are: 
 ['· Adds', 'new knowledge knowledge base']

>> Named Entities are: 
 [('PERSON', 'Adds')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Adds', 'add'), ('new', 'new'), ('knowledge', 'knowledg'), ('knowledge', 'knowledg'), ('base', 'base'), ('required', 'requir'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Adds', 'add'), ('new', 'new'), ('knowledge', 'knowledg'), ('knowledge', 'knowledg'), ('base', 'base'), ('required', 'requir'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Adds', 'Adds'), ('new', 'new'), ('knowledge', 'knowledge'), ('knowledge', 'knowledge'), ('base', 'base'), ('required', 'required'), ('.', '.')]



============================ Sentence 23 =============================

· Resolves rules conflict when multiple rules are applicable to a particular case. 


>> Tokens are: 
 ['·', 'Resolves', 'rules', 'conflict', 'multiple', 'rules', 'applicable', 'particular', 'case', '.']

>> Bigrams are: 
 [('·', 'Resolves'), ('Resolves', 'rules'), ('rules', 'conflict'), ('conflict', 'multiple'), ('multiple', 'rules'), ('rules', 'applicable'), ('applicable', 'particular'), ('particular', 'case'), ('case', '.')]

>> Trigrams are: 
 [('·', 'Resolves', 'rules'), ('Resolves', 'rules', 'conflict'), ('rules', 'conflict', 'multiple'), ('conflict', 'multiple', 'rules'), ('multiple', 'rules', 'applicable'), ('rules', 'applicable', 'particular'), ('applicable', 'particular', 'case'), ('particular', 'case', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Resolves', 'NNP'), ('rules', 'NNS'), ('conflict', 'VBP'), ('multiple', 'JJ'), ('rules', 'NNS'), ('applicable', 'JJ'), ('particular', 'JJ'), ('case', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Resolves/NNP rules/NNS)
  conflict/VBP
  (NP multiple/JJ rules/NNS)
  (NP applicable/JJ particular/JJ case/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Resolves rules', 'multiple rules', 'applicable particular case']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Resolves', 'resolv'), ('rules', 'rule'), ('conflict', 'conflict'), ('multiple', 'multipl'), ('rules', 'rule'), ('applicable', 'applic'), ('particular', 'particular'), ('case', 'case'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Resolves', 'resolv'), ('rules', 'rule'), ('conflict', 'conflict'), ('multiple', 'multipl'), ('rules', 'rule'), ('applicable', 'applic'), ('particular', 'particular'), ('case', 'case'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Resolves', 'Resolves'), ('rules', 'rule'), ('conflict', 'conflict'), ('multiple', 'multiple'), ('rules', 'rule'), ('applicable', 'applicable'), ('particular', 'particular'), ('case', 'case'), ('.', '.')]



============================ Sentence 24 =============================

To recommend a solution, the Inference Engine uses the following strategies − · Forward Chaining · Backward Chaining Forward Chaining It is a strategy of an expert system to answer the question, “What can happen next?” Here, the Inference Engine follows the chain of conditions and derivations and finally deduces the outcome. 


>> Tokens are: 
 ['To', 'recommend', 'solution', ',', 'Inference', 'Engine', 'uses', 'following', 'strategies', '−', '·', 'Forward', 'Chaining', '·', 'Backward', 'Chaining', 'Forward', 'Chaining', 'It', 'strategy', 'expert', 'system', 'answer', 'question', ',', '“', 'What', 'happen', 'next', '?', '”', 'Here', ',', 'Inference', 'Engine', 'follows', 'chain', 'conditions', 'derivations', 'finally', 'deduces', 'outcome', '.']

>> Bigrams are: 
 [('To', 'recommend'), ('recommend', 'solution'), ('solution', ','), (',', 'Inference'), ('Inference', 'Engine'), ('Engine', 'uses'), ('uses', 'following'), ('following', 'strategies'), ('strategies', '−'), ('−', '·'), ('·', 'Forward'), ('Forward', 'Chaining'), ('Chaining', '·'), ('·', 'Backward'), ('Backward', 'Chaining'), ('Chaining', 'Forward'), ('Forward', 'Chaining'), ('Chaining', 'It'), ('It', 'strategy'), ('strategy', 'expert'), ('expert', 'system'), ('system', 'answer'), ('answer', 'question'), ('question', ','), (',', '“'), ('“', 'What'), ('What', 'happen'), ('happen', 'next'), ('next', '?'), ('?', '”'), ('”', 'Here'), ('Here', ','), (',', 'Inference'), ('Inference', 'Engine'), ('Engine', 'follows'), ('follows', 'chain'), ('chain', 'conditions'), ('conditions', 'derivations'), ('derivations', 'finally'), ('finally', 'deduces'), ('deduces', 'outcome'), ('outcome', '.')]

>> Trigrams are: 
 [('To', 'recommend', 'solution'), ('recommend', 'solution', ','), ('solution', ',', 'Inference'), (',', 'Inference', 'Engine'), ('Inference', 'Engine', 'uses'), ('Engine', 'uses', 'following'), ('uses', 'following', 'strategies'), ('following', 'strategies', '−'), ('strategies', '−', '·'), ('−', '·', 'Forward'), ('·', 'Forward', 'Chaining'), ('Forward', 'Chaining', '·'), ('Chaining', '·', 'Backward'), ('·', 'Backward', 'Chaining'), ('Backward', 'Chaining', 'Forward'), ('Chaining', 'Forward', 'Chaining'), ('Forward', 'Chaining', 'It'), ('Chaining', 'It', 'strategy'), ('It', 'strategy', 'expert'), ('strategy', 'expert', 'system'), ('expert', 'system', 'answer'), ('system', 'answer', 'question'), ('answer', 'question', ','), ('question', ',', '“'), (',', '“', 'What'), ('“', 'What', 'happen'), ('What', 'happen', 'next'), ('happen', 'next', '?'), ('next', '?', '”'), ('?', '”', 'Here'), ('”', 'Here', ','), ('Here', ',', 'Inference'), (',', 'Inference', 'Engine'), ('Inference', 'Engine', 'follows'), ('Engine', 'follows', 'chain'), ('follows', 'chain', 'conditions'), ('chain', 'conditions', 'derivations'), ('conditions', 'derivations', 'finally'), ('derivations', 'finally', 'deduces'), ('finally', 'deduces', 'outcome'), ('deduces', 'outcome', '.')]

>> POS Tags are: 
 [('To', 'TO'), ('recommend', 'VB'), ('solution', 'NN'), (',', ','), ('Inference', 'NNP'), ('Engine', 'NNP'), ('uses', 'VBZ'), ('following', 'VBG'), ('strategies', 'NNS'), ('−', 'NNP'), ('·', 'NNP'), ('Forward', 'NNP'), ('Chaining', 'NNP'), ('·', 'NNP'), ('Backward', 'NNP'), ('Chaining', 'NNP'), ('Forward', 'NNP'), ('Chaining', 'VBG'), ('It', 'PRP'), ('strategy', 'NN'), ('expert', 'JJ'), ('system', 'NN'), ('answer', 'JJR'), ('question', 'NN'), (',', ','), ('“', 'VB'), ('What', 'WP'), ('happen', 'VB'), ('next', 'RB'), ('?', '.'), ('”', 'NN'), ('Here', 'RB'), (',', ','), ('Inference', 'NNP'), ('Engine', 'NNP'), ('follows', 'VBZ'), ('chain', 'NN'), ('conditions', 'NNS'), ('derivations', 'NNS'), ('finally', 'RB'), ('deduces', 'VBZ'), ('outcome', 'NN'), ('.', '.')]

 (S
  To/TO
  recommend/VB
  (NP solution/NN)
  ,/,
  (NP Inference/NNP Engine/NNP)
  uses/VBZ
  following/VBG
  (NP
    strategies/NNS
    −/NNP
    ·/NNP
    Forward/NNP
    Chaining/NNP
    ·/NNP
    Backward/NNP
    Chaining/NNP
    Forward/NNP)
  Chaining/VBG
  It/PRP
  (NP strategy/NN)
  (NP expert/JJ system/NN)
  answer/JJR
  (NP question/NN)
  ,/,
  “/VB
  What/WP
  happen/VB
  next/RB
  ?/.
  (NP ”/NN)
  Here/RB
  ,/,
  (NP Inference/NNP Engine/NNP)
  follows/VBZ
  (NP chain/NN conditions/NNS derivations/NNS)
  finally/RB
  deduces/VBZ
  (NP outcome/NN)
  ./.) 


>> Noun Phrases are: 
 ['solution', 'Inference Engine', 'strategies − · Forward Chaining · Backward Chaining Forward', 'strategy', 'expert system', 'question', '”', 'Inference Engine', 'chain conditions derivations', 'outcome']

>> Named Entities are: 
 [('PERSON', 'Inference Engine'), ('PERSON', 'Backward Chaining Forward'), ('PERSON', 'Inference Engine')] 

>> Stemming using Porter Stemmer: 
 [('To', 'to'), ('recommend', 'recommend'), ('solution', 'solut'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('uses', 'use'), ('following', 'follow'), ('strategies', 'strategi'), ('−', '−'), ('·', '·'), ('Forward', 'forward'), ('Chaining', 'chain'), ('·', '·'), ('Backward', 'backward'), ('Chaining', 'chain'), ('Forward', 'forward'), ('Chaining', 'chain'), ('It', 'it'), ('strategy', 'strategi'), ('expert', 'expert'), ('system', 'system'), ('answer', 'answer'), ('question', 'question'), (',', ','), ('“', '“'), ('What', 'what'), ('happen', 'happen'), ('next', 'next'), ('?', '?'), ('”', '”'), ('Here', 'here'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('follows', 'follow'), ('chain', 'chain'), ('conditions', 'condit'), ('derivations', 'deriv'), ('finally', 'final'), ('deduces', 'deduc'), ('outcome', 'outcom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('To', 'to'), ('recommend', 'recommend'), ('solution', 'solut'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('uses', 'use'), ('following', 'follow'), ('strategies', 'strategi'), ('−', '−'), ('·', '·'), ('Forward', 'forward'), ('Chaining', 'chain'), ('·', '·'), ('Backward', 'backward'), ('Chaining', 'chain'), ('Forward', 'forward'), ('Chaining', 'chain'), ('It', 'it'), ('strategy', 'strategi'), ('expert', 'expert'), ('system', 'system'), ('answer', 'answer'), ('question', 'question'), (',', ','), ('“', '“'), ('What', 'what'), ('happen', 'happen'), ('next', 'next'), ('?', '?'), ('”', '”'), ('Here', 'here'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('follows', 'follow'), ('chain', 'chain'), ('conditions', 'condit'), ('derivations', 'deriv'), ('finally', 'final'), ('deduces', 'deduc'), ('outcome', 'outcom'), ('.', '.')]

>> Lemmatization: 
 [('To', 'To'), ('recommend', 'recommend'), ('solution', 'solution'), (',', ','), ('Inference', 'Inference'), ('Engine', 'Engine'), ('uses', 'us'), ('following', 'following'), ('strategies', 'strategy'), ('−', '−'), ('·', '·'), ('Forward', 'Forward'), ('Chaining', 'Chaining'), ('·', '·'), ('Backward', 'Backward'), ('Chaining', 'Chaining'), ('Forward', 'Forward'), ('Chaining', 'Chaining'), ('It', 'It'), ('strategy', 'strategy'), ('expert', 'expert'), ('system', 'system'), ('answer', 'answer'), ('question', 'question'), (',', ','), ('“', '“'), ('What', 'What'), ('happen', 'happen'), ('next', 'next'), ('?', '?'), ('”', '”'), ('Here', 'Here'), (',', ','), ('Inference', 'Inference'), ('Engine', 'Engine'), ('follows', 'follows'), ('chain', 'chain'), ('conditions', 'condition'), ('derivations', 'derivation'), ('finally', 'finally'), ('deduces', 'deduces'), ('outcome', 'outcome'), ('.', '.')]



============================ Sentence 25 =============================

It considers all the facts and rules, and sorts them before concluding to a solution. 


>> Tokens are: 
 ['It', 'considers', 'facts', 'rules', ',', 'sorts', 'concluding', 'solution', '.']

>> Bigrams are: 
 [('It', 'considers'), ('considers', 'facts'), ('facts', 'rules'), ('rules', ','), (',', 'sorts'), ('sorts', 'concluding'), ('concluding', 'solution'), ('solution', '.')]

>> Trigrams are: 
 [('It', 'considers', 'facts'), ('considers', 'facts', 'rules'), ('facts', 'rules', ','), ('rules', ',', 'sorts'), (',', 'sorts', 'concluding'), ('sorts', 'concluding', 'solution'), ('concluding', 'solution', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('considers', 'VBZ'), ('facts', 'NNS'), ('rules', 'NNS'), (',', ','), ('sorts', 'NNS'), ('concluding', 'VBG'), ('solution', 'NN'), ('.', '.')]

 (S
  It/PRP
  considers/VBZ
  (NP facts/NNS rules/NNS)
  ,/,
  (NP sorts/NNS)
  concluding/VBG
  (NP solution/NN)
  ./.) 


>> Noun Phrases are: 
 ['facts rules', 'sorts', 'solution']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('considers', 'consid'), ('facts', 'fact'), ('rules', 'rule'), (',', ','), ('sorts', 'sort'), ('concluding', 'conclud'), ('solution', 'solut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('considers', 'consid'), ('facts', 'fact'), ('rules', 'rule'), (',', ','), ('sorts', 'sort'), ('concluding', 'conclud'), ('solution', 'solut'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('considers', 'considers'), ('facts', 'fact'), ('rules', 'rule'), (',', ','), ('sorts', 'sort'), ('concluding', 'concluding'), ('solution', 'solution'), ('.', '.')]



============================ Sentence 26 =============================

This strategy is followed for working on conclusion, result, or effect. 


>> Tokens are: 
 ['This', 'strategy', 'followed', 'working', 'conclusion', ',', 'result', ',', 'effect', '.']

>> Bigrams are: 
 [('This', 'strategy'), ('strategy', 'followed'), ('followed', 'working'), ('working', 'conclusion'), ('conclusion', ','), (',', 'result'), ('result', ','), (',', 'effect'), ('effect', '.')]

>> Trigrams are: 
 [('This', 'strategy', 'followed'), ('strategy', 'followed', 'working'), ('followed', 'working', 'conclusion'), ('working', 'conclusion', ','), ('conclusion', ',', 'result'), (',', 'result', ','), ('result', ',', 'effect'), (',', 'effect', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('strategy', 'NN'), ('followed', 'VBD'), ('working', 'VBG'), ('conclusion', 'NN'), (',', ','), ('result', 'NN'), (',', ','), ('effect', 'NN'), ('.', '.')]

 (S
  (NP This/DT strategy/NN)
  followed/VBD
  working/VBG
  (NP conclusion/NN)
  ,/,
  (NP result/NN)
  ,/,
  (NP effect/NN)
  ./.) 


>> Noun Phrases are: 
 ['This strategy', 'conclusion', 'result', 'effect']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('strategy', 'strategi'), ('followed', 'follow'), ('working', 'work'), ('conclusion', 'conclus'), (',', ','), ('result', 'result'), (',', ','), ('effect', 'effect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('strategy', 'strategi'), ('followed', 'follow'), ('working', 'work'), ('conclusion', 'conclus'), (',', ','), ('result', 'result'), (',', ','), ('effect', 'effect'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('strategy', 'strategy'), ('followed', 'followed'), ('working', 'working'), ('conclusion', 'conclusion'), (',', ','), ('result', 'result'), (',', ','), ('effect', 'effect'), ('.', '.')]



============================ Sentence 27 =============================

For example, prediction of share market status as an effect of changes in interest rates. 


>> Tokens are: 
 ['For', 'example', ',', 'prediction', 'share', 'market', 'status', 'effect', 'changes', 'interest', 'rates', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'prediction'), ('prediction', 'share'), ('share', 'market'), ('market', 'status'), ('status', 'effect'), ('effect', 'changes'), ('changes', 'interest'), ('interest', 'rates'), ('rates', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'prediction'), (',', 'prediction', 'share'), ('prediction', 'share', 'market'), ('share', 'market', 'status'), ('market', 'status', 'effect'), ('status', 'effect', 'changes'), ('effect', 'changes', 'interest'), ('changes', 'interest', 'rates'), ('interest', 'rates', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('prediction', 'NN'), ('share', 'NN'), ('market', 'NN'), ('status', 'NN'), ('effect', 'NN'), ('changes', 'VBZ'), ('interest', 'NN'), ('rates', 'NNS'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP prediction/NN share/NN market/NN status/NN effect/NN)
  changes/VBZ
  (NP interest/NN rates/NNS)
  ./.) 


>> Noun Phrases are: 
 ['example', 'prediction share market status effect', 'interest rates']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('prediction', 'predict'), ('share', 'share'), ('market', 'market'), ('status', 'statu'), ('effect', 'effect'), ('changes', 'chang'), ('interest', 'interest'), ('rates', 'rate'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('prediction', 'predict'), ('share', 'share'), ('market', 'market'), ('status', 'status'), ('effect', 'effect'), ('changes', 'chang'), ('interest', 'interest'), ('rates', 'rate'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('prediction', 'prediction'), ('share', 'share'), ('market', 'market'), ('status', 'status'), ('effect', 'effect'), ('changes', 'change'), ('interest', 'interest'), ('rates', 'rate'), ('.', '.')]



============================ Sentence 28 =============================

Backward Chaining With this strategy, an expert system finds out the answer to the question, “Why this happened?” On the basis of what has already happened, the Inference Engine tries to find out which conditions could have happened in the past for this result. 


>> Tokens are: 
 ['Backward', 'Chaining', 'With', 'strategy', ',', 'expert', 'system', 'finds', 'answer', 'question', ',', '“', 'Why', 'happened', '?', '”', 'On', 'basis', 'already', 'happened', ',', 'Inference', 'Engine', 'tries', 'find', 'conditions', 'could', 'happened', 'past', 'result', '.']

>> Bigrams are: 
 [('Backward', 'Chaining'), ('Chaining', 'With'), ('With', 'strategy'), ('strategy', ','), (',', 'expert'), ('expert', 'system'), ('system', 'finds'), ('finds', 'answer'), ('answer', 'question'), ('question', ','), (',', '“'), ('“', 'Why'), ('Why', 'happened'), ('happened', '?'), ('?', '”'), ('”', 'On'), ('On', 'basis'), ('basis', 'already'), ('already', 'happened'), ('happened', ','), (',', 'Inference'), ('Inference', 'Engine'), ('Engine', 'tries'), ('tries', 'find'), ('find', 'conditions'), ('conditions', 'could'), ('could', 'happened'), ('happened', 'past'), ('past', 'result'), ('result', '.')]

>> Trigrams are: 
 [('Backward', 'Chaining', 'With'), ('Chaining', 'With', 'strategy'), ('With', 'strategy', ','), ('strategy', ',', 'expert'), (',', 'expert', 'system'), ('expert', 'system', 'finds'), ('system', 'finds', 'answer'), ('finds', 'answer', 'question'), ('answer', 'question', ','), ('question', ',', '“'), (',', '“', 'Why'), ('“', 'Why', 'happened'), ('Why', 'happened', '?'), ('happened', '?', '”'), ('?', '”', 'On'), ('”', 'On', 'basis'), ('On', 'basis', 'already'), ('basis', 'already', 'happened'), ('already', 'happened', ','), ('happened', ',', 'Inference'), (',', 'Inference', 'Engine'), ('Inference', 'Engine', 'tries'), ('Engine', 'tries', 'find'), ('tries', 'find', 'conditions'), ('find', 'conditions', 'could'), ('conditions', 'could', 'happened'), ('could', 'happened', 'past'), ('happened', 'past', 'result'), ('past', 'result', '.')]

>> POS Tags are: 
 [('Backward', 'NNP'), ('Chaining', 'NNP'), ('With', 'IN'), ('strategy', 'NN'), (',', ','), ('expert', 'NN'), ('system', 'NN'), ('finds', 'VBZ'), ('answer', 'JJR'), ('question', 'NN'), (',', ','), ('“', 'VB'), ('Why', 'WRB'), ('happened', 'VBN'), ('?', '.'), ('”', 'NN'), ('On', 'IN'), ('basis', 'NN'), ('already', 'RB'), ('happened', 'VBD'), (',', ','), ('Inference', 'NNP'), ('Engine', 'NNP'), ('tries', 'VBZ'), ('find', 'VBP'), ('conditions', 'NNS'), ('could', 'MD'), ('happened', 'VB'), ('past', 'JJ'), ('result', 'NN'), ('.', '.')]

 (S
  (NP Backward/NNP Chaining/NNP)
  With/IN
  (NP strategy/NN)
  ,/,
  (NP expert/NN system/NN)
  finds/VBZ
  answer/JJR
  (NP question/NN)
  ,/,
  “/VB
  Why/WRB
  happened/VBN
  ?/.
  (NP ”/NN)
  On/IN
  (NP basis/NN)
  already/RB
  happened/VBD
  ,/,
  (NP Inference/NNP Engine/NNP)
  tries/VBZ
  find/VBP
  (NP conditions/NNS)
  could/MD
  happened/VB
  (NP past/JJ result/NN)
  ./.) 


>> Noun Phrases are: 
 ['Backward Chaining', 'strategy', 'expert system', 'question', '”', 'basis', 'Inference Engine', 'conditions', 'past result']

>> Named Entities are: 
 [('PERSON', 'Backward'), ('PERSON', 'Inference Engine')] 

>> Stemming using Porter Stemmer: 
 [('Backward', 'backward'), ('Chaining', 'chain'), ('With', 'with'), ('strategy', 'strategi'), (',', ','), ('expert', 'expert'), ('system', 'system'), ('finds', 'find'), ('answer', 'answer'), ('question', 'question'), (',', ','), ('“', '“'), ('Why', 'whi'), ('happened', 'happen'), ('?', '?'), ('”', '”'), ('On', 'on'), ('basis', 'basi'), ('already', 'alreadi'), ('happened', 'happen'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('tries', 'tri'), ('find', 'find'), ('conditions', 'condit'), ('could', 'could'), ('happened', 'happen'), ('past', 'past'), ('result', 'result'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Backward', 'backward'), ('Chaining', 'chain'), ('With', 'with'), ('strategy', 'strategi'), (',', ','), ('expert', 'expert'), ('system', 'system'), ('finds', 'find'), ('answer', 'answer'), ('question', 'question'), (',', ','), ('“', '“'), ('Why', 'whi'), ('happened', 'happen'), ('?', '?'), ('”', '”'), ('On', 'on'), ('basis', 'basi'), ('already', 'alreadi'), ('happened', 'happen'), (',', ','), ('Inference', 'infer'), ('Engine', 'engin'), ('tries', 'tri'), ('find', 'find'), ('conditions', 'condit'), ('could', 'could'), ('happened', 'happen'), ('past', 'past'), ('result', 'result'), ('.', '.')]

>> Lemmatization: 
 [('Backward', 'Backward'), ('Chaining', 'Chaining'), ('With', 'With'), ('strategy', 'strategy'), (',', ','), ('expert', 'expert'), ('system', 'system'), ('finds', 'find'), ('answer', 'answer'), ('question', 'question'), (',', ','), ('“', '“'), ('Why', 'Why'), ('happened', 'happened'), ('?', '?'), ('”', '”'), ('On', 'On'), ('basis', 'basis'), ('already', 'already'), ('happened', 'happened'), (',', ','), ('Inference', 'Inference'), ('Engine', 'Engine'), ('tries', 'try'), ('find', 'find'), ('conditions', 'condition'), ('could', 'could'), ('happened', 'happened'), ('past', 'past'), ('result', 'result'), ('.', '.')]



============================ Sentence 29 =============================

This strategy is followed for finding out cause or reason. 


>> Tokens are: 
 ['This', 'strategy', 'followed', 'finding', 'cause', 'reason', '.']

>> Bigrams are: 
 [('This', 'strategy'), ('strategy', 'followed'), ('followed', 'finding'), ('finding', 'cause'), ('cause', 'reason'), ('reason', '.')]

>> Trigrams are: 
 [('This', 'strategy', 'followed'), ('strategy', 'followed', 'finding'), ('followed', 'finding', 'cause'), ('finding', 'cause', 'reason'), ('cause', 'reason', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('strategy', 'NN'), ('followed', 'VBD'), ('finding', 'VBG'), ('cause', 'NN'), ('reason', 'NN'), ('.', '.')]

 (S
  (NP This/DT strategy/NN)
  followed/VBD
  finding/VBG
  (NP cause/NN reason/NN)
  ./.) 


>> Noun Phrases are: 
 ['This strategy', 'cause reason']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('strategy', 'strategi'), ('followed', 'follow'), ('finding', 'find'), ('cause', 'caus'), ('reason', 'reason'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('strategy', 'strategi'), ('followed', 'follow'), ('finding', 'find'), ('cause', 'caus'), ('reason', 'reason'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('strategy', 'strategy'), ('followed', 'followed'), ('finding', 'finding'), ('cause', 'cause'), ('reason', 'reason'), ('.', '.')]



============================ Sentence 30 =============================

For example, diagnosis of blood cancer in humans. 


>> Tokens are: 
 ['For', 'example', ',', 'diagnosis', 'blood', 'cancer', 'humans', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'diagnosis'), ('diagnosis', 'blood'), ('blood', 'cancer'), ('cancer', 'humans'), ('humans', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'diagnosis'), (',', 'diagnosis', 'blood'), ('diagnosis', 'blood', 'cancer'), ('blood', 'cancer', 'humans'), ('cancer', 'humans', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('diagnosis', 'NN'), ('blood', 'NN'), ('cancer', 'NN'), ('humans', 'NNS'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP diagnosis/NN blood/NN cancer/NN humans/NNS)
  ./.) 


>> Noun Phrases are: 
 ['example', 'diagnosis blood cancer humans']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('diagnosis', 'diagnosi'), ('blood', 'blood'), ('cancer', 'cancer'), ('humans', 'human'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('diagnosis', 'diagnosi'), ('blood', 'blood'), ('cancer', 'cancer'), ('humans', 'human'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('diagnosis', 'diagnosis'), ('blood', 'blood'), ('cancer', 'cancer'), ('humans', 'human'), ('.', '.')]



============================ Sentence 31 =============================

User Interface User interface provides interaction between user of the ES and the ES itself. 


>> Tokens are: 
 ['User', 'Interface', 'User', 'interface', 'provides', 'interaction', 'user', 'ES', 'ES', '.']

>> Bigrams are: 
 [('User', 'Interface'), ('Interface', 'User'), ('User', 'interface'), ('interface', 'provides'), ('provides', 'interaction'), ('interaction', 'user'), ('user', 'ES'), ('ES', 'ES'), ('ES', '.')]

>> Trigrams are: 
 [('User', 'Interface', 'User'), ('Interface', 'User', 'interface'), ('User', 'interface', 'provides'), ('interface', 'provides', 'interaction'), ('provides', 'interaction', 'user'), ('interaction', 'user', 'ES'), ('user', 'ES', 'ES'), ('ES', 'ES', '.')]

>> POS Tags are: 
 [('User', 'NNP'), ('Interface', 'NNP'), ('User', 'NNP'), ('interface', 'NN'), ('provides', 'VBZ'), ('interaction', 'NN'), ('user', 'NN'), ('ES', 'NNP'), ('ES', 'NNP'), ('.', '.')]

 (S
  (NP User/NNP Interface/NNP User/NNP interface/NN)
  provides/VBZ
  (NP interaction/NN user/NN ES/NNP ES/NNP)
  ./.) 


>> Noun Phrases are: 
 ['User Interface User interface', 'interaction user ES ES']

>> Named Entities are: 
 [('PERSON', 'User'), ('ORGANIZATION', 'Interface User')] 

>> Stemming using Porter Stemmer: 
 [('User', 'user'), ('Interface', 'interfac'), ('User', 'user'), ('interface', 'interfac'), ('provides', 'provid'), ('interaction', 'interact'), ('user', 'user'), ('ES', 'es'), ('ES', 'es'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('User', 'user'), ('Interface', 'interfac'), ('User', 'user'), ('interface', 'interfac'), ('provides', 'provid'), ('interaction', 'interact'), ('user', 'user'), ('ES', 'es'), ('ES', 'es'), ('.', '.')]

>> Lemmatization: 
 [('User', 'User'), ('Interface', 'Interface'), ('User', 'User'), ('interface', 'interface'), ('provides', 'provides'), ('interaction', 'interaction'), ('user', 'user'), ('ES', 'ES'), ('ES', 'ES'), ('.', '.')]



============================ Sentence 32 =============================

It is generally Natural Language Processing so as to be used by the user who is well-versed in the task domain. 


>> Tokens are: 
 ['It', 'generally', 'Natural', 'Language', 'Processing', 'used', 'user', 'well-versed', 'task', 'domain', '.']

>> Bigrams are: 
 [('It', 'generally'), ('generally', 'Natural'), ('Natural', 'Language'), ('Language', 'Processing'), ('Processing', 'used'), ('used', 'user'), ('user', 'well-versed'), ('well-versed', 'task'), ('task', 'domain'), ('domain', '.')]

>> Trigrams are: 
 [('It', 'generally', 'Natural'), ('generally', 'Natural', 'Language'), ('Natural', 'Language', 'Processing'), ('Language', 'Processing', 'used'), ('Processing', 'used', 'user'), ('used', 'user', 'well-versed'), ('user', 'well-versed', 'task'), ('well-versed', 'task', 'domain'), ('task', 'domain', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('generally', 'RB'), ('Natural', 'NNP'), ('Language', 'NNP'), ('Processing', 'NNP'), ('used', 'VBD'), ('user', 'JJ'), ('well-versed', 'JJ'), ('task', 'NN'), ('domain', 'NN'), ('.', '.')]

 (S
  It/PRP
  generally/RB
  (NP Natural/NNP Language/NNP Processing/NNP)
  used/VBD
  (NP user/JJ well-versed/JJ task/NN domain/NN)
  ./.) 


>> Noun Phrases are: 
 ['Natural Language Processing', 'user well-versed task domain']

>> Named Entities are: 
 [('ORGANIZATION', 'Natural Language')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('generally', 'gener'), ('Natural', 'natur'), ('Language', 'languag'), ('Processing', 'process'), ('used', 'use'), ('user', 'user'), ('well-versed', 'well-vers'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('generally', 'general'), ('Natural', 'natur'), ('Language', 'languag'), ('Processing', 'process'), ('used', 'use'), ('user', 'user'), ('well-versed', 'well-vers'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('generally', 'generally'), ('Natural', 'Natural'), ('Language', 'Language'), ('Processing', 'Processing'), ('used', 'used'), ('user', 'user'), ('well-versed', 'well-versed'), ('task', 'task'), ('domain', 'domain'), ('.', '.')]



============================ Sentence 33 =============================

The user of the ES need not be necessarily an expert in Artificial Intelligence. 


>> Tokens are: 
 ['The', 'user', 'ES', 'need', 'necessarily', 'expert', 'Artificial', 'Intelligence', '.']

>> Bigrams are: 
 [('The', 'user'), ('user', 'ES'), ('ES', 'need'), ('need', 'necessarily'), ('necessarily', 'expert'), ('expert', 'Artificial'), ('Artificial', 'Intelligence'), ('Intelligence', '.')]

>> Trigrams are: 
 [('The', 'user', 'ES'), ('user', 'ES', 'need'), ('ES', 'need', 'necessarily'), ('need', 'necessarily', 'expert'), ('necessarily', 'expert', 'Artificial'), ('expert', 'Artificial', 'Intelligence'), ('Artificial', 'Intelligence', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('user', 'NN'), ('ES', 'NNP'), ('need', 'VBP'), ('necessarily', 'RB'), ('expert', 'VB'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('.', '.')]

 (S
  (NP The/DT user/NN ES/NNP)
  need/VBP
  necessarily/RB
  expert/VB
  (NP Artificial/NNP Intelligence/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The user ES', 'Artificial Intelligence']

>> Named Entities are: 
 [('ORGANIZATION', 'Artificial Intelligence')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('user', 'user'), ('ES', 'es'), ('need', 'need'), ('necessarily', 'necessarili'), ('expert', 'expert'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('user', 'user'), ('ES', 'es'), ('need', 'need'), ('necessarily', 'necessarili'), ('expert', 'expert'), ('Artificial', 'artifici'), ('Intelligence', 'intellig'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('user', 'user'), ('ES', 'ES'), ('need', 'need'), ('necessarily', 'necessarily'), ('expert', 'expert'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('.', '.')]



============================ Sentence 34 =============================

It explains how the ES has arrived at a particular recommendation. 


>> Tokens are: 
 ['It', 'explains', 'ES', 'arrived', 'particular', 'recommendation', '.']

>> Bigrams are: 
 [('It', 'explains'), ('explains', 'ES'), ('ES', 'arrived'), ('arrived', 'particular'), ('particular', 'recommendation'), ('recommendation', '.')]

>> Trigrams are: 
 [('It', 'explains', 'ES'), ('explains', 'ES', 'arrived'), ('ES', 'arrived', 'particular'), ('arrived', 'particular', 'recommendation'), ('particular', 'recommendation', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('explains', 'VBZ'), ('ES', 'NNP'), ('arrived', 'VBD'), ('particular', 'JJ'), ('recommendation', 'NN'), ('.', '.')]

 (S
  It/PRP
  explains/VBZ
  (NP ES/NNP)
  arrived/VBD
  (NP particular/JJ recommendation/NN)
  ./.) 


>> Noun Phrases are: 
 ['ES', 'particular recommendation']

>> Named Entities are: 
 [('ORGANIZATION', 'ES')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('explains', 'explain'), ('ES', 'es'), ('arrived', 'arriv'), ('particular', 'particular'), ('recommendation', 'recommend'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('explains', 'explain'), ('ES', 'es'), ('arrived', 'arriv'), ('particular', 'particular'), ('recommendation', 'recommend'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('explains', 'explains'), ('ES', 'ES'), ('arrived', 'arrived'), ('particular', 'particular'), ('recommendation', 'recommendation'), ('.', '.')]



============================ Sentence 35 =============================

The explanation may appear in the following forms − · Natural language displayed on screen. 


>> Tokens are: 
 ['The', 'explanation', 'may', 'appear', 'following', 'forms', '−', '·', 'Natural', 'language', 'displayed', 'screen', '.']

>> Bigrams are: 
 [('The', 'explanation'), ('explanation', 'may'), ('may', 'appear'), ('appear', 'following'), ('following', 'forms'), ('forms', '−'), ('−', '·'), ('·', 'Natural'), ('Natural', 'language'), ('language', 'displayed'), ('displayed', 'screen'), ('screen', '.')]

>> Trigrams are: 
 [('The', 'explanation', 'may'), ('explanation', 'may', 'appear'), ('may', 'appear', 'following'), ('appear', 'following', 'forms'), ('following', 'forms', '−'), ('forms', '−', '·'), ('−', '·', 'Natural'), ('·', 'Natural', 'language'), ('Natural', 'language', 'displayed'), ('language', 'displayed', 'screen'), ('displayed', 'screen', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('explanation', 'NN'), ('may', 'MD'), ('appear', 'VB'), ('following', 'VBG'), ('forms', 'NNS'), ('−', 'VBP'), ('·', 'JJ'), ('Natural', 'NNP'), ('language', 'NN'), ('displayed', 'VBD'), ('screen', 'NN'), ('.', '.')]

 (S
  (NP The/DT explanation/NN)
  may/MD
  appear/VB
  following/VBG
  (NP forms/NNS)
  −/VBP
  (NP ·/JJ Natural/NNP language/NN)
  displayed/VBD
  (NP screen/NN)
  ./.) 


>> Noun Phrases are: 
 ['The explanation', 'forms', '· Natural language', 'screen']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('explanation', 'explan'), ('may', 'may'), ('appear', 'appear'), ('following', 'follow'), ('forms', 'form'), ('−', '−'), ('·', '·'), ('Natural', 'natur'), ('language', 'languag'), ('displayed', 'display'), ('screen', 'screen'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('explanation', 'explan'), ('may', 'may'), ('appear', 'appear'), ('following', 'follow'), ('forms', 'form'), ('−', '−'), ('·', '·'), ('Natural', 'natur'), ('language', 'languag'), ('displayed', 'display'), ('screen', 'screen'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('explanation', 'explanation'), ('may', 'may'), ('appear', 'appear'), ('following', 'following'), ('forms', 'form'), ('−', '−'), ('·', '·'), ('Natural', 'Natural'), ('language', 'language'), ('displayed', 'displayed'), ('screen', 'screen'), ('.', '.')]



============================ Sentence 36 =============================

· Verbal narrations in natural language. 


>> Tokens are: 
 ['·', 'Verbal', 'narrations', 'natural', 'language', '.']

>> Bigrams are: 
 [('·', 'Verbal'), ('Verbal', 'narrations'), ('narrations', 'natural'), ('natural', 'language'), ('language', '.')]

>> Trigrams are: 
 [('·', 'Verbal', 'narrations'), ('Verbal', 'narrations', 'natural'), ('narrations', 'natural', 'language'), ('natural', 'language', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Verbal', 'NNP'), ('narrations', 'NNS'), ('natural', 'JJ'), ('language', 'NN'), ('.', '.')]

 (S
  (NP ·/NN Verbal/NNP narrations/NNS)
  (NP natural/JJ language/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Verbal narrations', 'natural language']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Verbal', 'verbal'), ('narrations', 'narrat'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Verbal', 'verbal'), ('narrations', 'narrat'), ('natural', 'natur'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Verbal', 'Verbal'), ('narrations', 'narration'), ('natural', 'natural'), ('language', 'language'), ('.', '.')]



============================ Sentence 37 =============================

· Listing of rule numbers displayed on the screen. 


>> Tokens are: 
 ['·', 'Listing', 'rule', 'numbers', 'displayed', 'screen', '.']

>> Bigrams are: 
 [('·', 'Listing'), ('Listing', 'rule'), ('rule', 'numbers'), ('numbers', 'displayed'), ('displayed', 'screen'), ('screen', '.')]

>> Trigrams are: 
 [('·', 'Listing', 'rule'), ('Listing', 'rule', 'numbers'), ('rule', 'numbers', 'displayed'), ('numbers', 'displayed', 'screen'), ('displayed', 'screen', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Listing', 'NNP'), ('rule', 'NN'), ('numbers', 'NNS'), ('displayed', 'VBD'), ('screen', 'NN'), ('.', '.')]

 (S
  (NP ·/NN Listing/NNP rule/NN numbers/NNS)
  displayed/VBD
  (NP screen/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Listing rule numbers', 'screen']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Listing', 'list'), ('rule', 'rule'), ('numbers', 'number'), ('displayed', 'display'), ('screen', 'screen'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Listing', 'list'), ('rule', 'rule'), ('numbers', 'number'), ('displayed', 'display'), ('screen', 'screen'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Listing', 'Listing'), ('rule', 'rule'), ('numbers', 'number'), ('displayed', 'displayed'), ('screen', 'screen'), ('.', '.')]



============================ Sentence 38 =============================

The user interface makes it easy to trace the credibility of the deductions. 


>> Tokens are: 
 ['The', 'user', 'interface', 'makes', 'easy', 'trace', 'credibility', 'deductions', '.']

>> Bigrams are: 
 [('The', 'user'), ('user', 'interface'), ('interface', 'makes'), ('makes', 'easy'), ('easy', 'trace'), ('trace', 'credibility'), ('credibility', 'deductions'), ('deductions', '.')]

>> Trigrams are: 
 [('The', 'user', 'interface'), ('user', 'interface', 'makes'), ('interface', 'makes', 'easy'), ('makes', 'easy', 'trace'), ('easy', 'trace', 'credibility'), ('trace', 'credibility', 'deductions'), ('credibility', 'deductions', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('user', 'JJ'), ('interface', 'NN'), ('makes', 'VBZ'), ('easy', 'JJ'), ('trace', 'JJ'), ('credibility', 'NN'), ('deductions', 'NNS'), ('.', '.')]

 (S
  (NP The/DT user/JJ interface/NN)
  makes/VBZ
  (NP easy/JJ trace/JJ credibility/NN deductions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The user interface', 'easy trace credibility deductions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('user', 'user'), ('interface', 'interfac'), ('makes', 'make'), ('easy', 'easi'), ('trace', 'trace'), ('credibility', 'credibl'), ('deductions', 'deduct'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('user', 'user'), ('interface', 'interfac'), ('makes', 'make'), ('easy', 'easi'), ('trace', 'trace'), ('credibility', 'credibl'), ('deductions', 'deduct'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('user', 'user'), ('interface', 'interface'), ('makes', 'make'), ('easy', 'easy'), ('trace', 'trace'), ('credibility', 'credibility'), ('deductions', 'deduction'), ('.', '.')]



============================ Sentence 39 =============================

Requirements of Efficient ES User Interface · It should help users to accomplish their goals in shortest possible way. 


>> Tokens are: 
 ['Requirements', 'Efficient', 'ES', 'User', 'Interface', '·', 'It', 'help', 'users', 'accomplish', 'goals', 'shortest', 'possible', 'way', '.']

>> Bigrams are: 
 [('Requirements', 'Efficient'), ('Efficient', 'ES'), ('ES', 'User'), ('User', 'Interface'), ('Interface', '·'), ('·', 'It'), ('It', 'help'), ('help', 'users'), ('users', 'accomplish'), ('accomplish', 'goals'), ('goals', 'shortest'), ('shortest', 'possible'), ('possible', 'way'), ('way', '.')]

>> Trigrams are: 
 [('Requirements', 'Efficient', 'ES'), ('Efficient', 'ES', 'User'), ('ES', 'User', 'Interface'), ('User', 'Interface', '·'), ('Interface', '·', 'It'), ('·', 'It', 'help'), ('It', 'help', 'users'), ('help', 'users', 'accomplish'), ('users', 'accomplish', 'goals'), ('accomplish', 'goals', 'shortest'), ('goals', 'shortest', 'possible'), ('shortest', 'possible', 'way'), ('possible', 'way', '.')]

>> POS Tags are: 
 [('Requirements', 'NNS'), ('Efficient', 'NNP'), ('ES', 'NNP'), ('User', 'NNP'), ('Interface', 'NNP'), ('·', 'NNP'), ('It', 'PRP'), ('help', 'VBZ'), ('users', 'NNS'), ('accomplish', 'JJ'), ('goals', 'NNS'), ('shortest', 'JJS'), ('possible', 'JJ'), ('way', 'NN'), ('.', '.')]

 (S
  (NP
    Requirements/NNS
    Efficient/NNP
    ES/NNP
    User/NNP
    Interface/NNP
    ·/NNP)
  It/PRP
  help/VBZ
  (NP users/NNS)
  (NP accomplish/JJ goals/NNS)
  shortest/JJS
  (NP possible/JJ way/NN)
  ./.) 


>> Noun Phrases are: 
 ['Requirements Efficient ES User Interface ·', 'users', 'accomplish goals', 'possible way']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Requirements', 'requir'), ('Efficient', 'effici'), ('ES', 'es'), ('User', 'user'), ('Interface', 'interfac'), ('·', '·'), ('It', 'it'), ('help', 'help'), ('users', 'user'), ('accomplish', 'accomplish'), ('goals', 'goal'), ('shortest', 'shortest'), ('possible', 'possibl'), ('way', 'way'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Requirements', 'requir'), ('Efficient', 'effici'), ('ES', 'es'), ('User', 'user'), ('Interface', 'interfac'), ('·', '·'), ('It', 'it'), ('help', 'help'), ('users', 'user'), ('accomplish', 'accomplish'), ('goals', 'goal'), ('shortest', 'shortest'), ('possible', 'possibl'), ('way', 'way'), ('.', '.')]

>> Lemmatization: 
 [('Requirements', 'Requirements'), ('Efficient', 'Efficient'), ('ES', 'ES'), ('User', 'User'), ('Interface', 'Interface'), ('·', '·'), ('It', 'It'), ('help', 'help'), ('users', 'user'), ('accomplish', 'accomplish'), ('goals', 'goal'), ('shortest', 'shortest'), ('possible', 'possible'), ('way', 'way'), ('.', '.')]



============================ Sentence 40 =============================

· It should be designed to work for user’s existing or desired work practices. 


>> Tokens are: 
 ['·', 'It', 'designed', 'work', 'user', '’', 'existing', 'desired', 'work', 'practices', '.']

>> Bigrams are: 
 [('·', 'It'), ('It', 'designed'), ('designed', 'work'), ('work', 'user'), ('user', '’'), ('’', 'existing'), ('existing', 'desired'), ('desired', 'work'), ('work', 'practices'), ('practices', '.')]

>> Trigrams are: 
 [('·', 'It', 'designed'), ('It', 'designed', 'work'), ('designed', 'work', 'user'), ('work', 'user', '’'), ('user', '’', 'existing'), ('’', 'existing', 'desired'), ('existing', 'desired', 'work'), ('desired', 'work', 'practices'), ('work', 'practices', '.')]

>> POS Tags are: 
 [('·', 'VB'), ('It', 'PRP'), ('designed', 'JJ'), ('work', 'NN'), ('user', 'NN'), ('’', 'NNP'), ('existing', 'VBG'), ('desired', 'JJ'), ('work', 'NN'), ('practices', 'NNS'), ('.', '.')]

 (S
  ·/VB
  It/PRP
  (NP designed/JJ work/NN user/NN ’/NNP)
  existing/VBG
  (NP desired/JJ work/NN practices/NNS)
  ./.) 


>> Noun Phrases are: 
 ['designed work user ’', 'desired work practices']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('It', 'it'), ('designed', 'design'), ('work', 'work'), ('user', 'user'), ('’', '’'), ('existing', 'exist'), ('desired', 'desir'), ('work', 'work'), ('practices', 'practic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('It', 'it'), ('designed', 'design'), ('work', 'work'), ('user', 'user'), ('’', '’'), ('existing', 'exist'), ('desired', 'desir'), ('work', 'work'), ('practices', 'practic'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('It', 'It'), ('designed', 'designed'), ('work', 'work'), ('user', 'user'), ('’', '’'), ('existing', 'existing'), ('desired', 'desired'), ('work', 'work'), ('practices', 'practice'), ('.', '.')]



============================ Sentence 41 =============================

· Its technology should be adaptable to user’s requirements; not the other way round. 


>> Tokens are: 
 ['·', 'Its', 'technology', 'adaptable', 'user', '’', 'requirements', ';', 'way', 'round', '.']

>> Bigrams are: 
 [('·', 'Its'), ('Its', 'technology'), ('technology', 'adaptable'), ('adaptable', 'user'), ('user', '’'), ('’', 'requirements'), ('requirements', ';'), (';', 'way'), ('way', 'round'), ('round', '.')]

>> Trigrams are: 
 [('·', 'Its', 'technology'), ('Its', 'technology', 'adaptable'), ('technology', 'adaptable', 'user'), ('adaptable', 'user', '’'), ('user', '’', 'requirements'), ('’', 'requirements', ';'), ('requirements', ';', 'way'), (';', 'way', 'round'), ('way', 'round', '.')]

>> POS Tags are: 
 [('·', 'VB'), ('Its', 'PRP$'), ('technology', 'NN'), ('adaptable', 'JJ'), ('user', 'NN'), ('’', 'NN'), ('requirements', 'NNS'), (';', ':'), ('way', 'NN'), ('round', 'NN'), ('.', '.')]

 (S
  ·/VB
  Its/PRP$
  (NP technology/NN)
  (NP adaptable/JJ user/NN ’/NN requirements/NNS)
  ;/:
  (NP way/NN round/NN)
  ./.) 


>> Noun Phrases are: 
 ['technology', 'adaptable user ’ requirements', 'way round']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Its', 'it'), ('technology', 'technolog'), ('adaptable', 'adapt'), ('user', 'user'), ('’', '’'), ('requirements', 'requir'), (';', ';'), ('way', 'way'), ('round', 'round'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Its', 'it'), ('technology', 'technolog'), ('adaptable', 'adapt'), ('user', 'user'), ('’', '’'), ('requirements', 'requir'), (';', ';'), ('way', 'way'), ('round', 'round'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Its', 'Its'), ('technology', 'technology'), ('adaptable', 'adaptable'), ('user', 'user'), ('’', '’'), ('requirements', 'requirement'), (';', ';'), ('way', 'way'), ('round', 'round'), ('.', '.')]



============================ Sentence 42 =============================

· It should make efficient use of user input. 


>> Tokens are: 
 ['·', 'It', 'make', 'efficient', 'use', 'user', 'input', '.']

>> Bigrams are: 
 [('·', 'It'), ('It', 'make'), ('make', 'efficient'), ('efficient', 'use'), ('use', 'user'), ('user', 'input'), ('input', '.')]

>> Trigrams are: 
 [('·', 'It', 'make'), ('It', 'make', 'efficient'), ('make', 'efficient', 'use'), ('efficient', 'use', 'user'), ('use', 'user', 'input'), ('user', 'input', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('It', 'PRP'), ('make', 'VBP'), ('efficient', 'JJ'), ('use', 'NN'), ('user', 'NN'), ('input', 'NN'), ('.', '.')]

 (S
  (NP ·/NN)
  It/PRP
  make/VBP
  (NP efficient/JJ use/NN user/NN input/NN)
  ./.) 


>> Noun Phrases are: 
 ['·', 'efficient use user input']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('It', 'it'), ('make', 'make'), ('efficient', 'effici'), ('use', 'use'), ('user', 'user'), ('input', 'input'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('It', 'it'), ('make', 'make'), ('efficient', 'effici'), ('use', 'use'), ('user', 'user'), ('input', 'input'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('It', 'It'), ('make', 'make'), ('efficient', 'efficient'), ('use', 'use'), ('user', 'user'), ('input', 'input'), ('.', '.')]



============================ Sentence 43 =============================

Expert Systems Limitations No technology can offer easy and complete solution. 


>> Tokens are: 
 ['Expert', 'Systems', 'Limitations', 'No', 'technology', 'offer', 'easy', 'complete', 'solution', '.']

>> Bigrams are: 
 [('Expert', 'Systems'), ('Systems', 'Limitations'), ('Limitations', 'No'), ('No', 'technology'), ('technology', 'offer'), ('offer', 'easy'), ('easy', 'complete'), ('complete', 'solution'), ('solution', '.')]

>> Trigrams are: 
 [('Expert', 'Systems', 'Limitations'), ('Systems', 'Limitations', 'No'), ('Limitations', 'No', 'technology'), ('No', 'technology', 'offer'), ('technology', 'offer', 'easy'), ('offer', 'easy', 'complete'), ('easy', 'complete', 'solution'), ('complete', 'solution', '.')]

>> POS Tags are: 
 [('Expert', 'JJ'), ('Systems', 'NNP'), ('Limitations', 'NNP'), ('No', 'NNP'), ('technology', 'NN'), ('offer', 'NN'), ('easy', 'JJ'), ('complete', 'JJ'), ('solution', 'NN'), ('.', '.')]

 (S
  (NP
    Expert/JJ
    Systems/NNP
    Limitations/NNP
    No/NNP
    technology/NN
    offer/NN)
  (NP easy/JJ complete/JJ solution/NN)
  ./.) 


>> Noun Phrases are: 
 ['Expert Systems Limitations No technology offer', 'easy complete solution']

>> Named Entities are: 
 [('PERSON', 'Expert'), ('ORGANIZATION', 'Systems Limitations No')] 

>> Stemming using Porter Stemmer: 
 [('Expert', 'expert'), ('Systems', 'system'), ('Limitations', 'limit'), ('No', 'no'), ('technology', 'technolog'), ('offer', 'offer'), ('easy', 'easi'), ('complete', 'complet'), ('solution', 'solut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Expert', 'expert'), ('Systems', 'system'), ('Limitations', 'limit'), ('No', 'no'), ('technology', 'technolog'), ('offer', 'offer'), ('easy', 'easi'), ('complete', 'complet'), ('solution', 'solut'), ('.', '.')]

>> Lemmatization: 
 [('Expert', 'Expert'), ('Systems', 'Systems'), ('Limitations', 'Limitations'), ('No', 'No'), ('technology', 'technology'), ('offer', 'offer'), ('easy', 'easy'), ('complete', 'complete'), ('solution', 'solution'), ('.', '.')]



============================ Sentence 44 =============================

Large systems are costly, require significant development time, and computer resources. 


>> Tokens are: 
 ['Large', 'systems', 'costly', ',', 'require', 'significant', 'development', 'time', ',', 'computer', 'resources', '.']

>> Bigrams are: 
 [('Large', 'systems'), ('systems', 'costly'), ('costly', ','), (',', 'require'), ('require', 'significant'), ('significant', 'development'), ('development', 'time'), ('time', ','), (',', 'computer'), ('computer', 'resources'), ('resources', '.')]

>> Trigrams are: 
 [('Large', 'systems', 'costly'), ('systems', 'costly', ','), ('costly', ',', 'require'), (',', 'require', 'significant'), ('require', 'significant', 'development'), ('significant', 'development', 'time'), ('development', 'time', ','), ('time', ',', 'computer'), (',', 'computer', 'resources'), ('computer', 'resources', '.')]

>> POS Tags are: 
 [('Large', 'JJ'), ('systems', 'NNS'), ('costly', 'JJ'), (',', ','), ('require', 'JJ'), ('significant', 'JJ'), ('development', 'NN'), ('time', 'NN'), (',', ','), ('computer', 'NN'), ('resources', 'NNS'), ('.', '.')]

 (S
  (NP Large/JJ systems/NNS)
  costly/JJ
  ,/,
  (NP require/JJ significant/JJ development/NN time/NN)
  ,/,
  (NP computer/NN resources/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Large systems', 'require significant development time', 'computer resources']

>> Named Entities are: 
 [('GPE', 'Large')] 

>> Stemming using Porter Stemmer: 
 [('Large', 'larg'), ('systems', 'system'), ('costly', 'costli'), (',', ','), ('require', 'requir'), ('significant', 'signific'), ('development', 'develop'), ('time', 'time'), (',', ','), ('computer', 'comput'), ('resources', 'resourc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Large', 'larg'), ('systems', 'system'), ('costly', 'cost'), (',', ','), ('require', 'requir'), ('significant', 'signific'), ('development', 'develop'), ('time', 'time'), (',', ','), ('computer', 'comput'), ('resources', 'resourc'), ('.', '.')]

>> Lemmatization: 
 [('Large', 'Large'), ('systems', 'system'), ('costly', 'costly'), (',', ','), ('require', 'require'), ('significant', 'significant'), ('development', 'development'), ('time', 'time'), (',', ','), ('computer', 'computer'), ('resources', 'resource'), ('.', '.')]



============================ Sentence 45 =============================

ESs have their limitations which include − · Limitations of the technology · Difficult knowledge acquisition · ES are difficult to maintain · High development costs Applications of Expert System The following table shows where ES can be applied. 


>> Tokens are: 
 ['ESs', 'limitations', 'include', '−', '·', 'Limitations', 'technology', '·', 'Difficult', 'knowledge', 'acquisition', '·', 'ES', 'difficult', 'maintain', '·', 'High', 'development', 'costs', 'Applications', 'Expert', 'System', 'The', 'following', 'table', 'shows', 'ES', 'applied', '.']

>> Bigrams are: 
 [('ESs', 'limitations'), ('limitations', 'include'), ('include', '−'), ('−', '·'), ('·', 'Limitations'), ('Limitations', 'technology'), ('technology', '·'), ('·', 'Difficult'), ('Difficult', 'knowledge'), ('knowledge', 'acquisition'), ('acquisition', '·'), ('·', 'ES'), ('ES', 'difficult'), ('difficult', 'maintain'), ('maintain', '·'), ('·', 'High'), ('High', 'development'), ('development', 'costs'), ('costs', 'Applications'), ('Applications', 'Expert'), ('Expert', 'System'), ('System', 'The'), ('The', 'following'), ('following', 'table'), ('table', 'shows'), ('shows', 'ES'), ('ES', 'applied'), ('applied', '.')]

>> Trigrams are: 
 [('ESs', 'limitations', 'include'), ('limitations', 'include', '−'), ('include', '−', '·'), ('−', '·', 'Limitations'), ('·', 'Limitations', 'technology'), ('Limitations', 'technology', '·'), ('technology', '·', 'Difficult'), ('·', 'Difficult', 'knowledge'), ('Difficult', 'knowledge', 'acquisition'), ('knowledge', 'acquisition', '·'), ('acquisition', '·', 'ES'), ('·', 'ES', 'difficult'), ('ES', 'difficult', 'maintain'), ('difficult', 'maintain', '·'), ('maintain', '·', 'High'), ('·', 'High', 'development'), ('High', 'development', 'costs'), ('development', 'costs', 'Applications'), ('costs', 'Applications', 'Expert'), ('Applications', 'Expert', 'System'), ('Expert', 'System', 'The'), ('System', 'The', 'following'), ('The', 'following', 'table'), ('following', 'table', 'shows'), ('table', 'shows', 'ES'), ('shows', 'ES', 'applied'), ('ES', 'applied', '.')]

>> POS Tags are: 
 [('ESs', 'JJ'), ('limitations', 'NNS'), ('include', 'VBP'), ('−', 'JJ'), ('·', 'JJ'), ('Limitations', 'NNP'), ('technology', 'NN'), ('·', 'NNP'), ('Difficult', 'NNP'), ('knowledge', 'NNP'), ('acquisition', 'NN'), ('·', 'NNP'), ('ES', 'NNP'), ('difficult', 'JJ'), ('maintain', 'NN'), ('·', 'JJ'), ('High', 'NNP'), ('development', 'NN'), ('costs', 'NNS'), ('Applications', 'NNP'), ('Expert', 'NNP'), ('System', 'NNP'), ('The', 'DT'), ('following', 'VBG'), ('table', 'NN'), ('shows', 'NNS'), ('ES', 'NNP'), ('applied', 'VBD'), ('.', '.')]

 (S
  (NP ESs/JJ limitations/NNS)
  include/VBP
  (NP
    −/JJ
    ·/JJ
    Limitations/NNP
    technology/NN
    ·/NNP
    Difficult/NNP
    knowledge/NNP
    acquisition/NN
    ·/NNP
    ES/NNP)
  (NP difficult/JJ maintain/NN)
  (NP
    ·/JJ
    High/NNP
    development/NN
    costs/NNS
    Applications/NNP
    Expert/NNP
    System/NNP)
  The/DT
  following/VBG
  (NP table/NN shows/NNS ES/NNP)
  applied/VBD
  ./.) 


>> Noun Phrases are: 
 ['ESs limitations', '− · Limitations technology · Difficult knowledge acquisition · ES', 'difficult maintain', '· High development costs Applications Expert System', 'table shows ES']

>> Named Entities are: 
 [('ORGANIZATION', 'ESs'), ('PERSON', 'Applications Expert')] 

>> Stemming using Porter Stemmer: 
 [('ESs', 'ess'), ('limitations', 'limit'), ('include', 'includ'), ('−', '−'), ('·', '·'), ('Limitations', 'limit'), ('technology', 'technolog'), ('·', '·'), ('Difficult', 'difficult'), ('knowledge', 'knowledg'), ('acquisition', 'acquisit'), ('·', '·'), ('ES', 'es'), ('difficult', 'difficult'), ('maintain', 'maintain'), ('·', '·'), ('High', 'high'), ('development', 'develop'), ('costs', 'cost'), ('Applications', 'applic'), ('Expert', 'expert'), ('System', 'system'), ('The', 'the'), ('following', 'follow'), ('table', 'tabl'), ('shows', 'show'), ('ES', 'es'), ('applied', 'appli'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('ESs', 'ess'), ('limitations', 'limit'), ('include', 'includ'), ('−', '−'), ('·', '·'), ('Limitations', 'limit'), ('technology', 'technolog'), ('·', '·'), ('Difficult', 'difficult'), ('knowledge', 'knowledg'), ('acquisition', 'acquisit'), ('·', '·'), ('ES', 'es'), ('difficult', 'difficult'), ('maintain', 'maintain'), ('·', '·'), ('High', 'high'), ('development', 'develop'), ('costs', 'cost'), ('Applications', 'applic'), ('Expert', 'expert'), ('System', 'system'), ('The', 'the'), ('following', 'follow'), ('table', 'tabl'), ('shows', 'show'), ('ES', 'es'), ('applied', 'appli'), ('.', '.')]

>> Lemmatization: 
 [('ESs', 'ESs'), ('limitations', 'limitation'), ('include', 'include'), ('−', '−'), ('·', '·'), ('Limitations', 'Limitations'), ('technology', 'technology'), ('·', '·'), ('Difficult', 'Difficult'), ('knowledge', 'knowledge'), ('acquisition', 'acquisition'), ('·', '·'), ('ES', 'ES'), ('difficult', 'difficult'), ('maintain', 'maintain'), ('·', '·'), ('High', 'High'), ('development', 'development'), ('costs', 'cost'), ('Applications', 'Applications'), ('Expert', 'Expert'), ('System', 'System'), ('The', 'The'), ('following', 'following'), ('table', 'table'), ('shows', 'show'), ('ES', 'ES'), ('applied', 'applied'), ('.', '.')]



============================ Sentence 46 =============================

Application 	Description  	Design Domain 	Camera lens design, automobile design. 


>> Tokens are: 
 ['Application', 'Description', 'Design', 'Domain', 'Camera', 'lens', 'design', ',', 'automobile', 'design', '.']

>> Bigrams are: 
 [('Application', 'Description'), ('Description', 'Design'), ('Design', 'Domain'), ('Domain', 'Camera'), ('Camera', 'lens'), ('lens', 'design'), ('design', ','), (',', 'automobile'), ('automobile', 'design'), ('design', '.')]

>> Trigrams are: 
 [('Application', 'Description', 'Design'), ('Description', 'Design', 'Domain'), ('Design', 'Domain', 'Camera'), ('Domain', 'Camera', 'lens'), ('Camera', 'lens', 'design'), ('lens', 'design', ','), ('design', ',', 'automobile'), (',', 'automobile', 'design'), ('automobile', 'design', '.')]

>> POS Tags are: 
 [('Application', 'NNP'), ('Description', 'NNP'), ('Design', 'NNP'), ('Domain', 'NNP'), ('Camera', 'NNP'), ('lens', 'VBZ'), ('design', 'NN'), (',', ','), ('automobile', 'NN'), ('design', 'NN'), ('.', '.')]

 (S
  (NP
    Application/NNP
    Description/NNP
    Design/NNP
    Domain/NNP
    Camera/NNP)
  lens/VBZ
  (NP design/NN)
  ,/,
  (NP automobile/NN design/NN)
  ./.) 


>> Noun Phrases are: 
 ['Application Description Design Domain Camera', 'design', 'automobile design']

>> Named Entities are: 
 [('PERSON', 'Domain Camera')] 

>> Stemming using Porter Stemmer: 
 [('Application', 'applic'), ('Description', 'descript'), ('Design', 'design'), ('Domain', 'domain'), ('Camera', 'camera'), ('lens', 'len'), ('design', 'design'), (',', ','), ('automobile', 'automobil'), ('design', 'design'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Application', 'applic'), ('Description', 'descript'), ('Design', 'design'), ('Domain', 'domain'), ('Camera', 'camera'), ('lens', 'len'), ('design', 'design'), (',', ','), ('automobile', 'automobil'), ('design', 'design'), ('.', '.')]

>> Lemmatization: 
 [('Application', 'Application'), ('Description', 'Description'), ('Design', 'Design'), ('Domain', 'Domain'), ('Camera', 'Camera'), ('lens', 'lens'), ('design', 'design'), (',', ','), ('automobile', 'automobile'), ('design', 'design'), ('.', '.')]



============================ Sentence 47 =============================

Medical Domain 	Diagnosis Systems to deduce cause of disease from observed data, conduction medical operations on humans. 


>> Tokens are: 
 ['Medical', 'Domain', 'Diagnosis', 'Systems', 'deduce', 'cause', 'disease', 'observed', 'data', ',', 'conduction', 'medical', 'operations', 'humans', '.']

>> Bigrams are: 
 [('Medical', 'Domain'), ('Domain', 'Diagnosis'), ('Diagnosis', 'Systems'), ('Systems', 'deduce'), ('deduce', 'cause'), ('cause', 'disease'), ('disease', 'observed'), ('observed', 'data'), ('data', ','), (',', 'conduction'), ('conduction', 'medical'), ('medical', 'operations'), ('operations', 'humans'), ('humans', '.')]

>> Trigrams are: 
 [('Medical', 'Domain', 'Diagnosis'), ('Domain', 'Diagnosis', 'Systems'), ('Diagnosis', 'Systems', 'deduce'), ('Systems', 'deduce', 'cause'), ('deduce', 'cause', 'disease'), ('cause', 'disease', 'observed'), ('disease', 'observed', 'data'), ('observed', 'data', ','), ('data', ',', 'conduction'), (',', 'conduction', 'medical'), ('conduction', 'medical', 'operations'), ('medical', 'operations', 'humans'), ('operations', 'humans', '.')]

>> POS Tags are: 
 [('Medical', 'JJ'), ('Domain', 'NNP'), ('Diagnosis', 'NNP'), ('Systems', 'NNPS'), ('deduce', 'NN'), ('cause', 'NN'), ('disease', 'NN'), ('observed', 'VBD'), ('data', 'NNS'), (',', ','), ('conduction', 'NN'), ('medical', 'JJ'), ('operations', 'NNS'), ('humans', 'NNS'), ('.', '.')]

 (S
  (NP Medical/JJ Domain/NNP Diagnosis/NNP)
  Systems/NNPS
  (NP deduce/NN cause/NN disease/NN)
  observed/VBD
  (NP data/NNS)
  ,/,
  (NP conduction/NN)
  (NP medical/JJ operations/NNS humans/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Medical Domain Diagnosis', 'deduce cause disease', 'data', 'conduction', 'medical operations humans']

>> Named Entities are: 
 [('PERSON', 'Medical'), ('PERSON', 'Domain Diagnosis Systems')] 

>> Stemming using Porter Stemmer: 
 [('Medical', 'medic'), ('Domain', 'domain'), ('Diagnosis', 'diagnosi'), ('Systems', 'system'), ('deduce', 'deduc'), ('cause', 'caus'), ('disease', 'diseas'), ('observed', 'observ'), ('data', 'data'), (',', ','), ('conduction', 'conduct'), ('medical', 'medic'), ('operations', 'oper'), ('humans', 'human'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Medical', 'medic'), ('Domain', 'domain'), ('Diagnosis', 'diagnosi'), ('Systems', 'system'), ('deduce', 'deduc'), ('cause', 'caus'), ('disease', 'diseas'), ('observed', 'observ'), ('data', 'data'), (',', ','), ('conduction', 'conduct'), ('medical', 'medic'), ('operations', 'oper'), ('humans', 'human'), ('.', '.')]

>> Lemmatization: 
 [('Medical', 'Medical'), ('Domain', 'Domain'), ('Diagnosis', 'Diagnosis'), ('Systems', 'Systems'), ('deduce', 'deduce'), ('cause', 'cause'), ('disease', 'disease'), ('observed', 'observed'), ('data', 'data'), (',', ','), ('conduction', 'conduction'), ('medical', 'medical'), ('operations', 'operation'), ('humans', 'human'), ('.', '.')]



============================ Sentence 48 =============================

Monitoring Systems 	Comparing data continuously with observed system or with prescribed behavior such as leakage monitoring in long petroleum pipeline. 


>> Tokens are: 
 ['Monitoring', 'Systems', 'Comparing', 'data', 'continuously', 'observed', 'system', 'prescribed', 'behavior', 'leakage', 'monitoring', 'long', 'petroleum', 'pipeline', '.']

>> Bigrams are: 
 [('Monitoring', 'Systems'), ('Systems', 'Comparing'), ('Comparing', 'data'), ('data', 'continuously'), ('continuously', 'observed'), ('observed', 'system'), ('system', 'prescribed'), ('prescribed', 'behavior'), ('behavior', 'leakage'), ('leakage', 'monitoring'), ('monitoring', 'long'), ('long', 'petroleum'), ('petroleum', 'pipeline'), ('pipeline', '.')]

>> Trigrams are: 
 [('Monitoring', 'Systems', 'Comparing'), ('Systems', 'Comparing', 'data'), ('Comparing', 'data', 'continuously'), ('data', 'continuously', 'observed'), ('continuously', 'observed', 'system'), ('observed', 'system', 'prescribed'), ('system', 'prescribed', 'behavior'), ('prescribed', 'behavior', 'leakage'), ('behavior', 'leakage', 'monitoring'), ('leakage', 'monitoring', 'long'), ('monitoring', 'long', 'petroleum'), ('long', 'petroleum', 'pipeline'), ('petroleum', 'pipeline', '.')]

>> POS Tags are: 
 [('Monitoring', 'VBG'), ('Systems', 'NNPS'), ('Comparing', 'NNP'), ('data', 'NNS'), ('continuously', 'RB'), ('observed', 'VBD'), ('system', 'NN'), ('prescribed', 'JJ'), ('behavior', 'JJ'), ('leakage', 'NN'), ('monitoring', 'NN'), ('long', 'RB'), ('petroleum', 'JJ'), ('pipeline', 'NN'), ('.', '.')]

 (S
  Monitoring/VBG
  Systems/NNPS
  (NP Comparing/NNP data/NNS)
  continuously/RB
  observed/VBD
  (NP system/NN)
  (NP prescribed/JJ behavior/JJ leakage/NN monitoring/NN)
  long/RB
  (NP petroleum/JJ pipeline/NN)
  ./.) 


>> Noun Phrases are: 
 ['Comparing data', 'system', 'prescribed behavior leakage monitoring', 'petroleum pipeline']

>> Named Entities are: 
 [('PERSON', 'Systems Comparing')] 

>> Stemming using Porter Stemmer: 
 [('Monitoring', 'monitor'), ('Systems', 'system'), ('Comparing', 'compar'), ('data', 'data'), ('continuously', 'continu'), ('observed', 'observ'), ('system', 'system'), ('prescribed', 'prescrib'), ('behavior', 'behavior'), ('leakage', 'leakag'), ('monitoring', 'monitor'), ('long', 'long'), ('petroleum', 'petroleum'), ('pipeline', 'pipelin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Monitoring', 'monitor'), ('Systems', 'system'), ('Comparing', 'compar'), ('data', 'data'), ('continuously', 'continu'), ('observed', 'observ'), ('system', 'system'), ('prescribed', 'prescrib'), ('behavior', 'behavior'), ('leakage', 'leakag'), ('monitoring', 'monitor'), ('long', 'long'), ('petroleum', 'petroleum'), ('pipeline', 'pipelin'), ('.', '.')]

>> Lemmatization: 
 [('Monitoring', 'Monitoring'), ('Systems', 'Systems'), ('Comparing', 'Comparing'), ('data', 'data'), ('continuously', 'continuously'), ('observed', 'observed'), ('system', 'system'), ('prescribed', 'prescribed'), ('behavior', 'behavior'), ('leakage', 'leakage'), ('monitoring', 'monitoring'), ('long', 'long'), ('petroleum', 'petroleum'), ('pipeline', 'pipeline'), ('.', '.')]



============================ Sentence 49 =============================

Process Control Systems 	Controlling a physical process based on monitoring. 


>> Tokens are: 
 ['Process', 'Control', 'Systems', 'Controlling', 'physical', 'process', 'based', 'monitoring', '.']

>> Bigrams are: 
 [('Process', 'Control'), ('Control', 'Systems'), ('Systems', 'Controlling'), ('Controlling', 'physical'), ('physical', 'process'), ('process', 'based'), ('based', 'monitoring'), ('monitoring', '.')]

>> Trigrams are: 
 [('Process', 'Control', 'Systems'), ('Control', 'Systems', 'Controlling'), ('Systems', 'Controlling', 'physical'), ('Controlling', 'physical', 'process'), ('physical', 'process', 'based'), ('process', 'based', 'monitoring'), ('based', 'monitoring', '.')]

>> POS Tags are: 
 [('Process', 'NNP'), ('Control', 'NNP'), ('Systems', 'NNP'), ('Controlling', 'NNP'), ('physical', 'JJ'), ('process', 'NN'), ('based', 'VBN'), ('monitoring', 'NN'), ('.', '.')]

 (S
  (NP Process/NNP Control/NNP Systems/NNP Controlling/NNP)
  (NP physical/JJ process/NN)
  based/VBN
  (NP monitoring/NN)
  ./.) 


>> Noun Phrases are: 
 ['Process Control Systems Controlling', 'physical process', 'monitoring']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Process', 'process'), ('Control', 'control'), ('Systems', 'system'), ('Controlling', 'control'), ('physical', 'physic'), ('process', 'process'), ('based', 'base'), ('monitoring', 'monitor'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Process', 'process'), ('Control', 'control'), ('Systems', 'system'), ('Controlling', 'control'), ('physical', 'physic'), ('process', 'process'), ('based', 'base'), ('monitoring', 'monitor'), ('.', '.')]

>> Lemmatization: 
 [('Process', 'Process'), ('Control', 'Control'), ('Systems', 'Systems'), ('Controlling', 'Controlling'), ('physical', 'physical'), ('process', 'process'), ('based', 'based'), ('monitoring', 'monitoring'), ('.', '.')]



============================ Sentence 50 =============================

Knowledge Domain 	Finding out faults in vehicles, computers. 


>> Tokens are: 
 ['Knowledge', 'Domain', 'Finding', 'faults', 'vehicles', ',', 'computers', '.']

>> Bigrams are: 
 [('Knowledge', 'Domain'), ('Domain', 'Finding'), ('Finding', 'faults'), ('faults', 'vehicles'), ('vehicles', ','), (',', 'computers'), ('computers', '.')]

>> Trigrams are: 
 [('Knowledge', 'Domain', 'Finding'), ('Domain', 'Finding', 'faults'), ('Finding', 'faults', 'vehicles'), ('faults', 'vehicles', ','), ('vehicles', ',', 'computers'), (',', 'computers', '.')]

>> POS Tags are: 
 [('Knowledge', 'NNP'), ('Domain', 'NNP'), ('Finding', 'NNP'), ('faults', 'NNS'), ('vehicles', 'NNS'), (',', ','), ('computers', 'NNS'), ('.', '.')]

 (S
  (NP Knowledge/NNP Domain/NNP Finding/NNP faults/NNS vehicles/NNS)
  ,/,
  (NP computers/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Knowledge Domain Finding faults vehicles', 'computers']

>> Named Entities are: 
 [('PERSON', 'Knowledge'), ('PERSON', 'Domain Finding')] 

>> Stemming using Porter Stemmer: 
 [('Knowledge', 'knowledg'), ('Domain', 'domain'), ('Finding', 'find'), ('faults', 'fault'), ('vehicles', 'vehicl'), (',', ','), ('computers', 'comput'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Knowledge', 'knowledg'), ('Domain', 'domain'), ('Finding', 'find'), ('faults', 'fault'), ('vehicles', 'vehicl'), (',', ','), ('computers', 'comput'), ('.', '.')]

>> Lemmatization: 
 [('Knowledge', 'Knowledge'), ('Domain', 'Domain'), ('Finding', 'Finding'), ('faults', 'fault'), ('vehicles', 'vehicle'), (',', ','), ('computers', 'computer'), ('.', '.')]



============================ Sentence 51 =============================

Finance/Commerce 	Detection of possible fraud, suspicious transactions, stock market trading, Airline scheduling, cargo scheduling. 


>> Tokens are: 
 ['Finance/Commerce', 'Detection', 'possible', 'fraud', ',', 'suspicious', 'transactions', ',', 'stock', 'market', 'trading', ',', 'Airline', 'scheduling', ',', 'cargo', 'scheduling', '.']

>> Bigrams are: 
 [('Finance/Commerce', 'Detection'), ('Detection', 'possible'), ('possible', 'fraud'), ('fraud', ','), (',', 'suspicious'), ('suspicious', 'transactions'), ('transactions', ','), (',', 'stock'), ('stock', 'market'), ('market', 'trading'), ('trading', ','), (',', 'Airline'), ('Airline', 'scheduling'), ('scheduling', ','), (',', 'cargo'), ('cargo', 'scheduling'), ('scheduling', '.')]

>> Trigrams are: 
 [('Finance/Commerce', 'Detection', 'possible'), ('Detection', 'possible', 'fraud'), ('possible', 'fraud', ','), ('fraud', ',', 'suspicious'), (',', 'suspicious', 'transactions'), ('suspicious', 'transactions', ','), ('transactions', ',', 'stock'), (',', 'stock', 'market'), ('stock', 'market', 'trading'), ('market', 'trading', ','), ('trading', ',', 'Airline'), (',', 'Airline', 'scheduling'), ('Airline', 'scheduling', ','), ('scheduling', ',', 'cargo'), (',', 'cargo', 'scheduling'), ('cargo', 'scheduling', '.')]

>> POS Tags are: 
 [('Finance/Commerce', 'NNP'), ('Detection', 'NNP'), ('possible', 'JJ'), ('fraud', 'NN'), (',', ','), ('suspicious', 'JJ'), ('transactions', 'NNS'), (',', ','), ('stock', 'NN'), ('market', 'NN'), ('trading', 'NN'), (',', ','), ('Airline', 'NNP'), ('scheduling', 'NN'), (',', ','), ('cargo', 'NN'), ('scheduling', 'NN'), ('.', '.')]

 (S
  (NP Finance/Commerce/NNP Detection/NNP)
  (NP possible/JJ fraud/NN)
  ,/,
  (NP suspicious/JJ transactions/NNS)
  ,/,
  (NP stock/NN market/NN trading/NN)
  ,/,
  (NP Airline/NNP scheduling/NN)
  ,/,
  (NP cargo/NN scheduling/NN)
  ./.) 


>> Noun Phrases are: 
 ['Finance/Commerce Detection', 'possible fraud', 'suspicious transactions', 'stock market trading', 'Airline scheduling', 'cargo scheduling']

>> Named Entities are: 
 [('GPE', 'Airline')] 

>> Stemming using Porter Stemmer: 
 [('Finance/Commerce', 'finance/commerc'), ('Detection', 'detect'), ('possible', 'possibl'), ('fraud', 'fraud'), (',', ','), ('suspicious', 'suspici'), ('transactions', 'transact'), (',', ','), ('stock', 'stock'), ('market', 'market'), ('trading', 'trade'), (',', ','), ('Airline', 'airlin'), ('scheduling', 'schedul'), (',', ','), ('cargo', 'cargo'), ('scheduling', 'schedul'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Finance/Commerce', 'finance/commerc'), ('Detection', 'detect'), ('possible', 'possibl'), ('fraud', 'fraud'), (',', ','), ('suspicious', 'suspici'), ('transactions', 'transact'), (',', ','), ('stock', 'stock'), ('market', 'market'), ('trading', 'trade'), (',', ','), ('Airline', 'airlin'), ('scheduling', 'schedul'), (',', ','), ('cargo', 'cargo'), ('scheduling', 'schedul'), ('.', '.')]

>> Lemmatization: 
 [('Finance/Commerce', 'Finance/Commerce'), ('Detection', 'Detection'), ('possible', 'possible'), ('fraud', 'fraud'), (',', ','), ('suspicious', 'suspicious'), ('transactions', 'transaction'), (',', ','), ('stock', 'stock'), ('market', 'market'), ('trading', 'trading'), (',', ','), ('Airline', 'Airline'), ('scheduling', 'scheduling'), (',', ','), ('cargo', 'cargo'), ('scheduling', 'scheduling'), ('.', '.')]



============================ Sentence 52 =============================

Expert System Technology There are several levels of ES technologies available. 


>> Tokens are: 
 ['Expert', 'System', 'Technology', 'There', 'several', 'levels', 'ES', 'technologies', 'available', '.']

>> Bigrams are: 
 [('Expert', 'System'), ('System', 'Technology'), ('Technology', 'There'), ('There', 'several'), ('several', 'levels'), ('levels', 'ES'), ('ES', 'technologies'), ('technologies', 'available'), ('available', '.')]

>> Trigrams are: 
 [('Expert', 'System', 'Technology'), ('System', 'Technology', 'There'), ('Technology', 'There', 'several'), ('There', 'several', 'levels'), ('several', 'levels', 'ES'), ('levels', 'ES', 'technologies'), ('ES', 'technologies', 'available'), ('technologies', 'available', '.')]

>> POS Tags are: 
 [('Expert', 'NNP'), ('System', 'NNP'), ('Technology', 'NNP'), ('There', 'EX'), ('several', 'JJ'), ('levels', 'NNS'), ('ES', 'NNP'), ('technologies', 'NNS'), ('available', 'JJ'), ('.', '.')]

 (S
  (NP Expert/NNP System/NNP Technology/NNP)
  There/EX
  (NP several/JJ levels/NNS ES/NNP technologies/NNS)
  available/JJ
  ./.) 


>> Noun Phrases are: 
 ['Expert System Technology', 'several levels ES technologies']

>> Named Entities are: 
 [('PERSON', 'Expert'), ('PERSON', 'System Technology')] 

>> Stemming using Porter Stemmer: 
 [('Expert', 'expert'), ('System', 'system'), ('Technology', 'technolog'), ('There', 'there'), ('several', 'sever'), ('levels', 'level'), ('ES', 'es'), ('technologies', 'technolog'), ('available', 'avail'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Expert', 'expert'), ('System', 'system'), ('Technology', 'technolog'), ('There', 'there'), ('several', 'sever'), ('levels', 'level'), ('ES', 'es'), ('technologies', 'technolog'), ('available', 'avail'), ('.', '.')]

>> Lemmatization: 
 [('Expert', 'Expert'), ('System', 'System'), ('Technology', 'Technology'), ('There', 'There'), ('several', 'several'), ('levels', 'level'), ('ES', 'ES'), ('technologies', 'technology'), ('available', 'available'), ('.', '.')]



============================ Sentence 53 =============================

Expert systems technologies include − · Expert System Development Environment − The ES development environment includes hardware and tools. 


>> Tokens are: 
 ['Expert', 'systems', 'technologies', 'include', '−', '·', 'Expert', 'System', 'Development', 'Environment', '−', 'The', 'ES', 'development', 'environment', 'includes', 'hardware', 'tools', '.']

>> Bigrams are: 
 [('Expert', 'systems'), ('systems', 'technologies'), ('technologies', 'include'), ('include', '−'), ('−', '·'), ('·', 'Expert'), ('Expert', 'System'), ('System', 'Development'), ('Development', 'Environment'), ('Environment', '−'), ('−', 'The'), ('The', 'ES'), ('ES', 'development'), ('development', 'environment'), ('environment', 'includes'), ('includes', 'hardware'), ('hardware', 'tools'), ('tools', '.')]

>> Trigrams are: 
 [('Expert', 'systems', 'technologies'), ('systems', 'technologies', 'include'), ('technologies', 'include', '−'), ('include', '−', '·'), ('−', '·', 'Expert'), ('·', 'Expert', 'System'), ('Expert', 'System', 'Development'), ('System', 'Development', 'Environment'), ('Development', 'Environment', '−'), ('Environment', '−', 'The'), ('−', 'The', 'ES'), ('The', 'ES', 'development'), ('ES', 'development', 'environment'), ('development', 'environment', 'includes'), ('environment', 'includes', 'hardware'), ('includes', 'hardware', 'tools'), ('hardware', 'tools', '.')]

>> POS Tags are: 
 [('Expert', 'JJ'), ('systems', 'NNS'), ('technologies', 'NNS'), ('include', 'VBP'), ('−', 'NNP'), ('·', 'NNP'), ('Expert', 'NNP'), ('System', 'NNP'), ('Development', 'NNP'), ('Environment', 'NNP'), ('−', 'VBD'), ('The', 'DT'), ('ES', 'NNP'), ('development', 'NN'), ('environment', 'NN'), ('includes', 'VBZ'), ('hardware', 'NN'), ('tools', 'NNS'), ('.', '.')]

 (S
  (NP Expert/JJ systems/NNS technologies/NNS)
  include/VBP
  (NP
    −/NNP
    ·/NNP
    Expert/NNP
    System/NNP
    Development/NNP
    Environment/NNP)
  −/VBD
  (NP The/DT ES/NNP development/NN environment/NN)
  includes/VBZ
  (NP hardware/NN tools/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Expert systems technologies', '− · Expert System Development Environment', 'The ES development environment', 'hardware tools']

>> Named Entities are: 
 [('GPE', 'Expert'), ('PERSON', 'Expert System Development Environment'), ('ORGANIZATION', 'ES')] 

>> Stemming using Porter Stemmer: 
 [('Expert', 'expert'), ('systems', 'system'), ('technologies', 'technolog'), ('include', 'includ'), ('−', '−'), ('·', '·'), ('Expert', 'expert'), ('System', 'system'), ('Development', 'develop'), ('Environment', 'environ'), ('−', '−'), ('The', 'the'), ('ES', 'es'), ('development', 'develop'), ('environment', 'environ'), ('includes', 'includ'), ('hardware', 'hardwar'), ('tools', 'tool'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Expert', 'expert'), ('systems', 'system'), ('technologies', 'technolog'), ('include', 'includ'), ('−', '−'), ('·', '·'), ('Expert', 'expert'), ('System', 'system'), ('Development', 'develop'), ('Environment', 'environ'), ('−', '−'), ('The', 'the'), ('ES', 'es'), ('development', 'develop'), ('environment', 'environ'), ('includes', 'includ'), ('hardware', 'hardwar'), ('tools', 'tool'), ('.', '.')]

>> Lemmatization: 
 [('Expert', 'Expert'), ('systems', 'system'), ('technologies', 'technology'), ('include', 'include'), ('−', '−'), ('·', '·'), ('Expert', 'Expert'), ('System', 'System'), ('Development', 'Development'), ('Environment', 'Environment'), ('−', '−'), ('The', 'The'), ('ES', 'ES'), ('development', 'development'), ('environment', 'environment'), ('includes', 'includes'), ('hardware', 'hardware'), ('tools', 'tool'), ('.', '.')]



============================ Sentence 54 =============================

They are − · Workstations, minicomputers, mainframes. 


>> Tokens are: 
 ['They', '−', '·', 'Workstations', ',', 'minicomputers', ',', 'mainframes', '.']

>> Bigrams are: 
 [('They', '−'), ('−', '·'), ('·', 'Workstations'), ('Workstations', ','), (',', 'minicomputers'), ('minicomputers', ','), (',', 'mainframes'), ('mainframes', '.')]

>> Trigrams are: 
 [('They', '−', '·'), ('−', '·', 'Workstations'), ('·', 'Workstations', ','), ('Workstations', ',', 'minicomputers'), (',', 'minicomputers', ','), ('minicomputers', ',', 'mainframes'), (',', 'mainframes', '.')]

>> POS Tags are: 
 [('They', 'PRP'), ('−', 'VBP'), ('·', 'JJ'), ('Workstations', 'NNP'), (',', ','), ('minicomputers', 'NNS'), (',', ','), ('mainframes', 'NNS'), ('.', '.')]

 (S
  They/PRP
  −/VBP
  (NP ·/JJ Workstations/NNP)
  ,/,
  (NP minicomputers/NNS)
  ,/,
  (NP mainframes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Workstations', 'minicomputers', 'mainframes']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('They', 'they'), ('−', '−'), ('·', '·'), ('Workstations', 'workstat'), (',', ','), ('minicomputers', 'minicomput'), (',', ','), ('mainframes', 'mainfram'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('They', 'they'), ('−', '−'), ('·', '·'), ('Workstations', 'workstat'), (',', ','), ('minicomputers', 'minicomput'), (',', ','), ('mainframes', 'mainfram'), ('.', '.')]

>> Lemmatization: 
 [('They', 'They'), ('−', '−'), ('·', '·'), ('Workstations', 'Workstations'), (',', ','), ('minicomputers', 'minicomputer'), (',', ','), ('mainframes', 'mainframe'), ('.', '.')]



============================ Sentence 55 =============================

· High level Symbolic Programming Languages such as LISt Programming (LISP) and PROgrammation en LOGique (PROLOG). 


>> Tokens are: 
 ['·', 'High', 'level', 'Symbolic', 'Programming', 'Languages', 'LISt', 'Programming', '(', 'LISP', ')', 'PROgrammation', 'en', 'LOGique', '(', 'PROLOG', ')', '.']

>> Bigrams are: 
 [('·', 'High'), ('High', 'level'), ('level', 'Symbolic'), ('Symbolic', 'Programming'), ('Programming', 'Languages'), ('Languages', 'LISt'), ('LISt', 'Programming'), ('Programming', '('), ('(', 'LISP'), ('LISP', ')'), (')', 'PROgrammation'), ('PROgrammation', 'en'), ('en', 'LOGique'), ('LOGique', '('), ('(', 'PROLOG'), ('PROLOG', ')'), (')', '.')]

>> Trigrams are: 
 [('·', 'High', 'level'), ('High', 'level', 'Symbolic'), ('level', 'Symbolic', 'Programming'), ('Symbolic', 'Programming', 'Languages'), ('Programming', 'Languages', 'LISt'), ('Languages', 'LISt', 'Programming'), ('LISt', 'Programming', '('), ('Programming', '(', 'LISP'), ('(', 'LISP', ')'), ('LISP', ')', 'PROgrammation'), (')', 'PROgrammation', 'en'), ('PROgrammation', 'en', 'LOGique'), ('en', 'LOGique', '('), ('LOGique', '(', 'PROLOG'), ('(', 'PROLOG', ')'), ('PROLOG', ')', '.')]

>> POS Tags are: 
 [('·', 'RB'), ('High', 'NNP'), ('level', 'NN'), ('Symbolic', 'NNP'), ('Programming', 'NNP'), ('Languages', 'NNP'), ('LISt', 'NNP'), ('Programming', 'NNP'), ('(', '('), ('LISP', 'NNP'), (')', ')'), ('PROgrammation', 'NNP'), ('en', 'FW'), ('LOGique', 'NNP'), ('(', '('), ('PROLOG', 'NNP'), (')', ')'), ('.', '.')]

 (S
  ·/RB
  (NP
    High/NNP
    level/NN
    Symbolic/NNP
    Programming/NNP
    Languages/NNP
    LISt/NNP
    Programming/NNP)
  (/(
  (NP LISP/NNP)
  )/)
  (NP PROgrammation/NNP)
  en/FW
  (NP LOGique/NNP)
  (/(
  (NP PROLOG/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['High level Symbolic Programming Languages LISt Programming', 'LISP', 'PROgrammation', 'LOGique', 'PROLOG']

>> Named Entities are: 
 [('PERSON', 'Symbolic Programming Languages'), ('ORGANIZATION', 'LISt'), ('ORGANIZATION', 'LISP'), ('ORGANIZATION', 'LOGique'), ('ORGANIZATION', 'PROLOG')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('High', 'high'), ('level', 'level'), ('Symbolic', 'symbol'), ('Programming', 'program'), ('Languages', 'languag'), ('LISt', 'list'), ('Programming', 'program'), ('(', '('), ('LISP', 'lisp'), (')', ')'), ('PROgrammation', 'programm'), ('en', 'en'), ('LOGique', 'logiqu'), ('(', '('), ('PROLOG', 'prolog'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('High', 'high'), ('level', 'level'), ('Symbolic', 'symbol'), ('Programming', 'program'), ('Languages', 'languag'), ('LISt', 'list'), ('Programming', 'program'), ('(', '('), ('LISP', 'lisp'), (')', ')'), ('PROgrammation', 'programm'), ('en', 'en'), ('LOGique', 'logiqu'), ('(', '('), ('PROLOG', 'prolog'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('High', 'High'), ('level', 'level'), ('Symbolic', 'Symbolic'), ('Programming', 'Programming'), ('Languages', 'Languages'), ('LISt', 'LISt'), ('Programming', 'Programming'), ('(', '('), ('LISP', 'LISP'), (')', ')'), ('PROgrammation', 'PROgrammation'), ('en', 'en'), ('LOGique', 'LOGique'), ('(', '('), ('PROLOG', 'PROLOG'), (')', ')'), ('.', '.')]



============================ Sentence 56 =============================

· Large databases. 


>> Tokens are: 
 ['·', 'Large', 'databases', '.']

>> Bigrams are: 
 [('·', 'Large'), ('Large', 'databases'), ('databases', '.')]

>> Trigrams are: 
 [('·', 'Large', 'databases'), ('Large', 'databases', '.')]

>> POS Tags are: 
 [('·', 'RB'), ('Large', 'JJ'), ('databases', 'NNS'), ('.', '.')]

 (S ·/RB (NP Large/JJ databases/NNS) ./.) 


>> Noun Phrases are: 
 ['Large databases']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Large', 'larg'), ('databases', 'databas'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Large', 'larg'), ('databases', 'databas'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Large', 'Large'), ('databases', 'database'), ('.', '.')]



============================ Sentence 57 =============================

· Tools − They reduce the effort and cost involved in developing an expert system to large extent. 


>> Tokens are: 
 ['·', 'Tools', '−', 'They', 'reduce', 'effort', 'cost', 'involved', 'developing', 'expert', 'system', 'large', 'extent', '.']

>> Bigrams are: 
 [('·', 'Tools'), ('Tools', '−'), ('−', 'They'), ('They', 'reduce'), ('reduce', 'effort'), ('effort', 'cost'), ('cost', 'involved'), ('involved', 'developing'), ('developing', 'expert'), ('expert', 'system'), ('system', 'large'), ('large', 'extent'), ('extent', '.')]

>> Trigrams are: 
 [('·', 'Tools', '−'), ('Tools', '−', 'They'), ('−', 'They', 'reduce'), ('They', 'reduce', 'effort'), ('reduce', 'effort', 'cost'), ('effort', 'cost', 'involved'), ('cost', 'involved', 'developing'), ('involved', 'developing', 'expert'), ('developing', 'expert', 'system'), ('expert', 'system', 'large'), ('system', 'large', 'extent'), ('large', 'extent', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Tools', 'NNP'), ('−', 'NNP'), ('They', 'PRP'), ('reduce', 'VB'), ('effort', 'NN'), ('cost', 'NN'), ('involved', 'VBN'), ('developing', 'VBG'), ('expert', 'NN'), ('system', 'NN'), ('large', 'JJ'), ('extent', 'NN'), ('.', '.')]

 (S
  (NP ·/NN Tools/NNP −/NNP)
  They/PRP
  reduce/VB
  (NP effort/NN cost/NN)
  involved/VBN
  developing/VBG
  (NP expert/NN system/NN)
  (NP large/JJ extent/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Tools −', 'effort cost', 'expert system', 'large extent']

>> Named Entities are: 
 [('PERSON', 'Tools')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Tools', 'tool'), ('−', '−'), ('They', 'they'), ('reduce', 'reduc'), ('effort', 'effort'), ('cost', 'cost'), ('involved', 'involv'), ('developing', 'develop'), ('expert', 'expert'), ('system', 'system'), ('large', 'larg'), ('extent', 'extent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Tools', 'tool'), ('−', '−'), ('They', 'they'), ('reduce', 'reduc'), ('effort', 'effort'), ('cost', 'cost'), ('involved', 'involv'), ('developing', 'develop'), ('expert', 'expert'), ('system', 'system'), ('large', 'larg'), ('extent', 'extent'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Tools', 'Tools'), ('−', '−'), ('They', 'They'), ('reduce', 'reduce'), ('effort', 'effort'), ('cost', 'cost'), ('involved', 'involved'), ('developing', 'developing'), ('expert', 'expert'), ('system', 'system'), ('large', 'large'), ('extent', 'extent'), ('.', '.')]



============================ Sentence 58 =============================

· Powerful editors and debugging tools with multi-windows. 


>> Tokens are: 
 ['·', 'Powerful', 'editors', 'debugging', 'tools', 'multi-windows', '.']

>> Bigrams are: 
 [('·', 'Powerful'), ('Powerful', 'editors'), ('editors', 'debugging'), ('debugging', 'tools'), ('tools', 'multi-windows'), ('multi-windows', '.')]

>> Trigrams are: 
 [('·', 'Powerful', 'editors'), ('Powerful', 'editors', 'debugging'), ('editors', 'debugging', 'tools'), ('debugging', 'tools', 'multi-windows'), ('tools', 'multi-windows', '.')]

>> POS Tags are: 
 [('·', 'RB'), ('Powerful', 'JJ'), ('editors', 'NNS'), ('debugging', 'VBG'), ('tools', 'JJ'), ('multi-windows', 'NNS'), ('.', '.')]

 (S
  ·/RB
  (NP Powerful/JJ editors/NNS)
  debugging/VBG
  (NP tools/JJ multi-windows/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Powerful editors', 'tools multi-windows']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Powerful', 'power'), ('editors', 'editor'), ('debugging', 'debug'), ('tools', 'tool'), ('multi-windows', 'multi-window'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Powerful', 'power'), ('editors', 'editor'), ('debugging', 'debug'), ('tools', 'tool'), ('multi-windows', 'multi-window'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Powerful', 'Powerful'), ('editors', 'editor'), ('debugging', 'debugging'), ('tools', 'tool'), ('multi-windows', 'multi-windows'), ('.', '.')]



============================ Sentence 59 =============================

· They provide rapid prototyping · Have Inbuilt definitions of model, knowledge representation, and inference design. 


>> Tokens are: 
 ['·', 'They', 'provide', 'rapid', 'prototyping', '·', 'Have', 'Inbuilt', 'definitions', 'model', ',', 'knowledge', 'representation', ',', 'inference', 'design', '.']

>> Bigrams are: 
 [('·', 'They'), ('They', 'provide'), ('provide', 'rapid'), ('rapid', 'prototyping'), ('prototyping', '·'), ('·', 'Have'), ('Have', 'Inbuilt'), ('Inbuilt', 'definitions'), ('definitions', 'model'), ('model', ','), (',', 'knowledge'), ('knowledge', 'representation'), ('representation', ','), (',', 'inference'), ('inference', 'design'), ('design', '.')]

>> Trigrams are: 
 [('·', 'They', 'provide'), ('They', 'provide', 'rapid'), ('provide', 'rapid', 'prototyping'), ('rapid', 'prototyping', '·'), ('prototyping', '·', 'Have'), ('·', 'Have', 'Inbuilt'), ('Have', 'Inbuilt', 'definitions'), ('Inbuilt', 'definitions', 'model'), ('definitions', 'model', ','), ('model', ',', 'knowledge'), (',', 'knowledge', 'representation'), ('knowledge', 'representation', ','), ('representation', ',', 'inference'), (',', 'inference', 'design'), ('inference', 'design', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('They', 'PRP'), ('provide', 'VBP'), ('rapid', 'JJ'), ('prototyping', 'VBG'), ('·', 'NN'), ('Have', 'VBP'), ('Inbuilt', 'VBN'), ('definitions', 'NNS'), ('model', 'NN'), (',', ','), ('knowledge', 'NN'), ('representation', 'NN'), (',', ','), ('inference', 'NN'), ('design', 'NN'), ('.', '.')]

 (S
  (NP ·/NN)
  They/PRP
  provide/VBP
  rapid/JJ
  prototyping/VBG
  (NP ·/NN)
  Have/VBP
  Inbuilt/VBN
  (NP definitions/NNS model/NN)
  ,/,
  (NP knowledge/NN representation/NN)
  ,/,
  (NP inference/NN design/NN)
  ./.) 


>> Noun Phrases are: 
 ['·', '·', 'definitions model', 'knowledge representation', 'inference design']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('They', 'they'), ('provide', 'provid'), ('rapid', 'rapid'), ('prototyping', 'prototyp'), ('·', '·'), ('Have', 'have'), ('Inbuilt', 'inbuilt'), ('definitions', 'definit'), ('model', 'model'), (',', ','), ('knowledge', 'knowledg'), ('representation', 'represent'), (',', ','), ('inference', 'infer'), ('design', 'design'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('They', 'they'), ('provide', 'provid'), ('rapid', 'rapid'), ('prototyping', 'prototyp'), ('·', '·'), ('Have', 'have'), ('Inbuilt', 'inbuilt'), ('definitions', 'definit'), ('model', 'model'), (',', ','), ('knowledge', 'knowledg'), ('representation', 'represent'), (',', ','), ('inference', 'infer'), ('design', 'design'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('They', 'They'), ('provide', 'provide'), ('rapid', 'rapid'), ('prototyping', 'prototyping'), ('·', '·'), ('Have', 'Have'), ('Inbuilt', 'Inbuilt'), ('definitions', 'definition'), ('model', 'model'), (',', ','), ('knowledge', 'knowledge'), ('representation', 'representation'), (',', ','), ('inference', 'inference'), ('design', 'design'), ('.', '.')]



============================ Sentence 60 =============================

· Shells − A shell is nothing but an expert system without knowledge base. 


>> Tokens are: 
 ['·', 'Shells', '−', 'A', 'shell', 'nothing', 'expert', 'system', 'without', 'knowledge', 'base', '.']

>> Bigrams are: 
 [('·', 'Shells'), ('Shells', '−'), ('−', 'A'), ('A', 'shell'), ('shell', 'nothing'), ('nothing', 'expert'), ('expert', 'system'), ('system', 'without'), ('without', 'knowledge'), ('knowledge', 'base'), ('base', '.')]

>> Trigrams are: 
 [('·', 'Shells', '−'), ('Shells', '−', 'A'), ('−', 'A', 'shell'), ('A', 'shell', 'nothing'), ('shell', 'nothing', 'expert'), ('nothing', 'expert', 'system'), ('expert', 'system', 'without'), ('system', 'without', 'knowledge'), ('without', 'knowledge', 'base'), ('knowledge', 'base', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Shells', 'NNP'), ('−', 'VBZ'), ('A', 'NNP'), ('shell', 'NN'), ('nothing', 'NN'), ('expert', 'NN'), ('system', 'NN'), ('without', 'IN'), ('knowledge', 'NN'), ('base', 'NN'), ('.', '.')]

 (S
  (NP ·/NN Shells/NNP)
  −/VBZ
  (NP A/NNP shell/NN nothing/NN expert/NN system/NN)
  without/IN
  (NP knowledge/NN base/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Shells', 'A shell nothing expert system', 'knowledge base']

>> Named Entities are: 
 [('PERSON', 'Shells')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Shells', 'shell'), ('−', '−'), ('A', 'a'), ('shell', 'shell'), ('nothing', 'noth'), ('expert', 'expert'), ('system', 'system'), ('without', 'without'), ('knowledge', 'knowledg'), ('base', 'base'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Shells', 'shell'), ('−', '−'), ('A', 'a'), ('shell', 'shell'), ('nothing', 'noth'), ('expert', 'expert'), ('system', 'system'), ('without', 'without'), ('knowledge', 'knowledg'), ('base', 'base'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Shells', 'Shells'), ('−', '−'), ('A', 'A'), ('shell', 'shell'), ('nothing', 'nothing'), ('expert', 'expert'), ('system', 'system'), ('without', 'without'), ('knowledge', 'knowledge'), ('base', 'base'), ('.', '.')]



============================ Sentence 61 =============================

A shell provides the developers with knowledge acquisition, inference engine, user interface, and explanation facility. 


>> Tokens are: 
 ['A', 'shell', 'provides', 'developers', 'knowledge', 'acquisition', ',', 'inference', 'engine', ',', 'user', 'interface', ',', 'explanation', 'facility', '.']

>> Bigrams are: 
 [('A', 'shell'), ('shell', 'provides'), ('provides', 'developers'), ('developers', 'knowledge'), ('knowledge', 'acquisition'), ('acquisition', ','), (',', 'inference'), ('inference', 'engine'), ('engine', ','), (',', 'user'), ('user', 'interface'), ('interface', ','), (',', 'explanation'), ('explanation', 'facility'), ('facility', '.')]

>> Trigrams are: 
 [('A', 'shell', 'provides'), ('shell', 'provides', 'developers'), ('provides', 'developers', 'knowledge'), ('developers', 'knowledge', 'acquisition'), ('knowledge', 'acquisition', ','), ('acquisition', ',', 'inference'), (',', 'inference', 'engine'), ('inference', 'engine', ','), ('engine', ',', 'user'), (',', 'user', 'interface'), ('user', 'interface', ','), ('interface', ',', 'explanation'), (',', 'explanation', 'facility'), ('explanation', 'facility', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('shell', 'NN'), ('provides', 'VBZ'), ('developers', 'NNS'), ('knowledge', 'VBP'), ('acquisition', 'NN'), (',', ','), ('inference', 'NN'), ('engine', 'NN'), (',', ','), ('user', 'JJ'), ('interface', 'NN'), (',', ','), ('explanation', 'NN'), ('facility', 'NN'), ('.', '.')]

 (S
  (NP A/DT shell/NN)
  provides/VBZ
  (NP developers/NNS)
  knowledge/VBP
  (NP acquisition/NN)
  ,/,
  (NP inference/NN engine/NN)
  ,/,
  (NP user/JJ interface/NN)
  ,/,
  (NP explanation/NN facility/NN)
  ./.) 


>> Noun Phrases are: 
 ['A shell', 'developers', 'acquisition', 'inference engine', 'user interface', 'explanation facility']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('shell', 'shell'), ('provides', 'provid'), ('developers', 'develop'), ('knowledge', 'knowledg'), ('acquisition', 'acquisit'), (',', ','), ('inference', 'infer'), ('engine', 'engin'), (',', ','), ('user', 'user'), ('interface', 'interfac'), (',', ','), ('explanation', 'explan'), ('facility', 'facil'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('shell', 'shell'), ('provides', 'provid'), ('developers', 'develop'), ('knowledge', 'knowledg'), ('acquisition', 'acquisit'), (',', ','), ('inference', 'infer'), ('engine', 'engin'), (',', ','), ('user', 'user'), ('interface', 'interfac'), (',', ','), ('explanation', 'explan'), ('facility', 'facil'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('shell', 'shell'), ('provides', 'provides'), ('developers', 'developer'), ('knowledge', 'knowledge'), ('acquisition', 'acquisition'), (',', ','), ('inference', 'inference'), ('engine', 'engine'), (',', ','), ('user', 'user'), ('interface', 'interface'), (',', ','), ('explanation', 'explanation'), ('facility', 'facility'), ('.', '.')]



============================ Sentence 62 =============================

For example, few shells are given below − · Java Expert System Shell (JESS) that provides fully developed Java API for creating an expert system. 


>> Tokens are: 
 ['For', 'example', ',', 'shells', 'given', '−', '·', 'Java', 'Expert', 'System', 'Shell', '(', 'JESS', ')', 'provides', 'fully', 'developed', 'Java', 'API', 'creating', 'expert', 'system', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'shells'), ('shells', 'given'), ('given', '−'), ('−', '·'), ('·', 'Java'), ('Java', 'Expert'), ('Expert', 'System'), ('System', 'Shell'), ('Shell', '('), ('(', 'JESS'), ('JESS', ')'), (')', 'provides'), ('provides', 'fully'), ('fully', 'developed'), ('developed', 'Java'), ('Java', 'API'), ('API', 'creating'), ('creating', 'expert'), ('expert', 'system'), ('system', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'shells'), (',', 'shells', 'given'), ('shells', 'given', '−'), ('given', '−', '·'), ('−', '·', 'Java'), ('·', 'Java', 'Expert'), ('Java', 'Expert', 'System'), ('Expert', 'System', 'Shell'), ('System', 'Shell', '('), ('Shell', '(', 'JESS'), ('(', 'JESS', ')'), ('JESS', ')', 'provides'), (')', 'provides', 'fully'), ('provides', 'fully', 'developed'), ('fully', 'developed', 'Java'), ('developed', 'Java', 'API'), ('Java', 'API', 'creating'), ('API', 'creating', 'expert'), ('creating', 'expert', 'system'), ('expert', 'system', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('shells', 'NNS'), ('given', 'VBN'), ('−', 'NNP'), ('·', 'NNP'), ('Java', 'NNP'), ('Expert', 'NNP'), ('System', 'NNP'), ('Shell', 'NNP'), ('(', '('), ('JESS', 'NNP'), (')', ')'), ('provides', 'VBZ'), ('fully', 'RB'), ('developed', 'VBN'), ('Java', 'NNP'), ('API', 'NNP'), ('creating', 'VBG'), ('expert', 'JJ'), ('system', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  (NP shells/NNS)
  given/VBN
  (NP −/NNP ·/NNP Java/NNP Expert/NNP System/NNP Shell/NNP)
  (/(
  (NP JESS/NNP)
  )/)
  provides/VBZ
  fully/RB
  developed/VBN
  (NP Java/NNP API/NNP)
  creating/VBG
  (NP expert/JJ system/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'shells', '− · Java Expert System Shell', 'JESS', 'Java API', 'expert system']

>> Named Entities are: 
 [('PERSON', 'Expert System Shell'), ('ORGANIZATION', 'JESS'), ('PERSON', 'Java API')] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('shells', 'shell'), ('given', 'given'), ('−', '−'), ('·', '·'), ('Java', 'java'), ('Expert', 'expert'), ('System', 'system'), ('Shell', 'shell'), ('(', '('), ('JESS', 'jess'), (')', ')'), ('provides', 'provid'), ('fully', 'fulli'), ('developed', 'develop'), ('Java', 'java'), ('API', 'api'), ('creating', 'creat'), ('expert', 'expert'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('shells', 'shell'), ('given', 'given'), ('−', '−'), ('·', '·'), ('Java', 'java'), ('Expert', 'expert'), ('System', 'system'), ('Shell', 'shell'), ('(', '('), ('JESS', 'jess'), (')', ')'), ('provides', 'provid'), ('fully', 'fulli'), ('developed', 'develop'), ('Java', 'java'), ('API', 'api'), ('creating', 'creat'), ('expert', 'expert'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('shells', 'shell'), ('given', 'given'), ('−', '−'), ('·', '·'), ('Java', 'Java'), ('Expert', 'Expert'), ('System', 'System'), ('Shell', 'Shell'), ('(', '('), ('JESS', 'JESS'), (')', ')'), ('provides', 'provides'), ('fully', 'fully'), ('developed', 'developed'), ('Java', 'Java'), ('API', 'API'), ('creating', 'creating'), ('expert', 'expert'), ('system', 'system'), ('.', '.')]



============================ Sentence 63 =============================

· Vidwan, a shell developed at the National Centre for Software Technology, Mumbai in 1993. 


>> Tokens are: 
 ['·', 'Vidwan', ',', 'shell', 'developed', 'National', 'Centre', 'Software', 'Technology', ',', 'Mumbai', '1993', '.']

>> Bigrams are: 
 [('·', 'Vidwan'), ('Vidwan', ','), (',', 'shell'), ('shell', 'developed'), ('developed', 'National'), ('National', 'Centre'), ('Centre', 'Software'), ('Software', 'Technology'), ('Technology', ','), (',', 'Mumbai'), ('Mumbai', '1993'), ('1993', '.')]

>> Trigrams are: 
 [('·', 'Vidwan', ','), ('Vidwan', ',', 'shell'), (',', 'shell', 'developed'), ('shell', 'developed', 'National'), ('developed', 'National', 'Centre'), ('National', 'Centre', 'Software'), ('Centre', 'Software', 'Technology'), ('Software', 'Technology', ','), ('Technology', ',', 'Mumbai'), (',', 'Mumbai', '1993'), ('Mumbai', '1993', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Vidwan', 'NNP'), (',', ','), ('shell', 'NN'), ('developed', 'VBD'), ('National', 'NNP'), ('Centre', 'NNP'), ('Software', 'NNP'), ('Technology', 'NNP'), (',', ','), ('Mumbai', 'NNP'), ('1993', 'CD'), ('.', '.')]

 (S
  (NP ·/NN Vidwan/NNP)
  ,/,
  (NP shell/NN)
  developed/VBD
  (NP National/NNP Centre/NNP Software/NNP Technology/NNP)
  ,/,
  (NP Mumbai/NNP)
  1993/CD
  ./.) 


>> Noun Phrases are: 
 ['· Vidwan', 'shell', 'National Centre Software Technology', 'Mumbai']

>> Named Entities are: 
 [('GPE', 'Vidwan'), ('ORGANIZATION', 'National Centre Software Technology'), ('ORGANIZATION', 'Mumbai')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Vidwan', 'vidwan'), (',', ','), ('shell', 'shell'), ('developed', 'develop'), ('National', 'nation'), ('Centre', 'centr'), ('Software', 'softwar'), ('Technology', 'technolog'), (',', ','), ('Mumbai', 'mumbai'), ('1993', '1993'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Vidwan', 'vidwan'), (',', ','), ('shell', 'shell'), ('developed', 'develop'), ('National', 'nation'), ('Centre', 'centr'), ('Software', 'softwar'), ('Technology', 'technolog'), (',', ','), ('Mumbai', 'mumbai'), ('1993', '1993'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Vidwan', 'Vidwan'), (',', ','), ('shell', 'shell'), ('developed', 'developed'), ('National', 'National'), ('Centre', 'Centre'), ('Software', 'Software'), ('Technology', 'Technology'), (',', ','), ('Mumbai', 'Mumbai'), ('1993', '1993'), ('.', '.')]



============================ Sentence 64 =============================

It enables knowledge encoding in the form of IF-THEN rules. 


>> Tokens are: 
 ['It', 'enables', 'knowledge', 'encoding', 'form', 'IF-THEN', 'rules', '.']

>> Bigrams are: 
 [('It', 'enables'), ('enables', 'knowledge'), ('knowledge', 'encoding'), ('encoding', 'form'), ('form', 'IF-THEN'), ('IF-THEN', 'rules'), ('rules', '.')]

>> Trigrams are: 
 [('It', 'enables', 'knowledge'), ('enables', 'knowledge', 'encoding'), ('knowledge', 'encoding', 'form'), ('encoding', 'form', 'IF-THEN'), ('form', 'IF-THEN', 'rules'), ('IF-THEN', 'rules', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('enables', 'VBZ'), ('knowledge', 'NN'), ('encoding', 'VBG'), ('form', 'JJ'), ('IF-THEN', 'JJ'), ('rules', 'NNS'), ('.', '.')]

 (S
  It/PRP
  enables/VBZ
  (NP knowledge/NN)
  encoding/VBG
  (NP form/JJ IF-THEN/JJ rules/NNS)
  ./.) 


>> Noun Phrases are: 
 ['knowledge', 'form IF-THEN rules']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('enables', 'enabl'), ('knowledge', 'knowledg'), ('encoding', 'encod'), ('form', 'form'), ('IF-THEN', 'if-then'), ('rules', 'rule'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('enables', 'enabl'), ('knowledge', 'knowledg'), ('encoding', 'encod'), ('form', 'form'), ('IF-THEN', 'if-then'), ('rules', 'rule'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('enables', 'enables'), ('knowledge', 'knowledge'), ('encoding', 'encoding'), ('form', 'form'), ('IF-THEN', 'IF-THEN'), ('rules', 'rule'), ('.', '.')]



============================ Sentence 65 =============================

Development of Expert Systems: General Steps The process of ES development is iterative. 


>> Tokens are: 
 ['Development', 'Expert', 'Systems', ':', 'General', 'Steps', 'The', 'process', 'ES', 'development', 'iterative', '.']

>> Bigrams are: 
 [('Development', 'Expert'), ('Expert', 'Systems'), ('Systems', ':'), (':', 'General'), ('General', 'Steps'), ('Steps', 'The'), ('The', 'process'), ('process', 'ES'), ('ES', 'development'), ('development', 'iterative'), ('iterative', '.')]

>> Trigrams are: 
 [('Development', 'Expert', 'Systems'), ('Expert', 'Systems', ':'), ('Systems', ':', 'General'), (':', 'General', 'Steps'), ('General', 'Steps', 'The'), ('Steps', 'The', 'process'), ('The', 'process', 'ES'), ('process', 'ES', 'development'), ('ES', 'development', 'iterative'), ('development', 'iterative', '.')]

>> POS Tags are: 
 [('Development', 'NNP'), ('Expert', 'NNP'), ('Systems', 'NNPS'), (':', ':'), ('General', 'JJ'), ('Steps', 'NNP'), ('The', 'DT'), ('process', 'NN'), ('ES', 'NNP'), ('development', 'NN'), ('iterative', 'NN'), ('.', '.')]

 (S
  (NP Development/NNP Expert/NNP)
  Systems/NNPS
  :/:
  (NP General/JJ Steps/NNP)
  (NP The/DT process/NN ES/NNP development/NN iterative/NN)
  ./.) 


>> Noun Phrases are: 
 ['Development Expert', 'General Steps', 'The process ES development iterative']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Development', 'develop'), ('Expert', 'expert'), ('Systems', 'system'), (':', ':'), ('General', 'gener'), ('Steps', 'step'), ('The', 'the'), ('process', 'process'), ('ES', 'es'), ('development', 'develop'), ('iterative', 'iter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Development', 'develop'), ('Expert', 'expert'), ('Systems', 'system'), (':', ':'), ('General', 'general'), ('Steps', 'step'), ('The', 'the'), ('process', 'process'), ('ES', 'es'), ('development', 'develop'), ('iterative', 'iter'), ('.', '.')]

>> Lemmatization: 
 [('Development', 'Development'), ('Expert', 'Expert'), ('Systems', 'Systems'), (':', ':'), ('General', 'General'), ('Steps', 'Steps'), ('The', 'The'), ('process', 'process'), ('ES', 'ES'), ('development', 'development'), ('iterative', 'iterative'), ('.', '.')]



============================ Sentence 66 =============================

Steps in developing the ES include − Identify Problem Domain · The problem must be suitable for an expert system to solve it. 


>> Tokens are: 
 ['Steps', 'developing', 'ES', 'include', '−', 'Identify', 'Problem', 'Domain', '·', 'The', 'problem', 'must', 'suitable', 'expert', 'system', 'solve', '.']

>> Bigrams are: 
 [('Steps', 'developing'), ('developing', 'ES'), ('ES', 'include'), ('include', '−'), ('−', 'Identify'), ('Identify', 'Problem'), ('Problem', 'Domain'), ('Domain', '·'), ('·', 'The'), ('The', 'problem'), ('problem', 'must'), ('must', 'suitable'), ('suitable', 'expert'), ('expert', 'system'), ('system', 'solve'), ('solve', '.')]

>> Trigrams are: 
 [('Steps', 'developing', 'ES'), ('developing', 'ES', 'include'), ('ES', 'include', '−'), ('include', '−', 'Identify'), ('−', 'Identify', 'Problem'), ('Identify', 'Problem', 'Domain'), ('Problem', 'Domain', '·'), ('Domain', '·', 'The'), ('·', 'The', 'problem'), ('The', 'problem', 'must'), ('problem', 'must', 'suitable'), ('must', 'suitable', 'expert'), ('suitable', 'expert', 'system'), ('expert', 'system', 'solve'), ('system', 'solve', '.')]

>> POS Tags are: 
 [('Steps', 'NNS'), ('developing', 'VBG'), ('ES', 'NNP'), ('include', 'VBP'), ('−', 'NNP'), ('Identify', 'NNP'), ('Problem', 'NNP'), ('Domain', 'NNP'), ('·', 'VBD'), ('The', 'DT'), ('problem', 'NN'), ('must', 'MD'), ('suitable', 'VB'), ('expert', 'JJ'), ('system', 'NN'), ('solve', 'NN'), ('.', '.')]

 (S
  (NP Steps/NNS)
  developing/VBG
  (NP ES/NNP)
  include/VBP
  (NP −/NNP Identify/NNP Problem/NNP Domain/NNP)
  ·/VBD
  (NP The/DT problem/NN)
  must/MD
  suitable/VB
  (NP expert/JJ system/NN solve/NN)
  ./.) 


>> Noun Phrases are: 
 ['Steps', 'ES', '− Identify Problem Domain', 'The problem', 'expert system solve']

>> Named Entities are: 
 [('PERSON', 'Domain')] 

>> Stemming using Porter Stemmer: 
 [('Steps', 'step'), ('developing', 'develop'), ('ES', 'es'), ('include', 'includ'), ('−', '−'), ('Identify', 'identifi'), ('Problem', 'problem'), ('Domain', 'domain'), ('·', '·'), ('The', 'the'), ('problem', 'problem'), ('must', 'must'), ('suitable', 'suitabl'), ('expert', 'expert'), ('system', 'system'), ('solve', 'solv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Steps', 'step'), ('developing', 'develop'), ('ES', 'es'), ('include', 'includ'), ('−', '−'), ('Identify', 'identifi'), ('Problem', 'problem'), ('Domain', 'domain'), ('·', '·'), ('The', 'the'), ('problem', 'problem'), ('must', 'must'), ('suitable', 'suitabl'), ('expert', 'expert'), ('system', 'system'), ('solve', 'solv'), ('.', '.')]

>> Lemmatization: 
 [('Steps', 'Steps'), ('developing', 'developing'), ('ES', 'ES'), ('include', 'include'), ('−', '−'), ('Identify', 'Identify'), ('Problem', 'Problem'), ('Domain', 'Domain'), ('·', '·'), ('The', 'The'), ('problem', 'problem'), ('must', 'must'), ('suitable', 'suitable'), ('expert', 'expert'), ('system', 'system'), ('solve', 'solve'), ('.', '.')]



============================ Sentence 67 =============================

· Find the experts in task domain for the ES project. 


>> Tokens are: 
 ['·', 'Find', 'experts', 'task', 'domain', 'ES', 'project', '.']

>> Bigrams are: 
 [('·', 'Find'), ('Find', 'experts'), ('experts', 'task'), ('task', 'domain'), ('domain', 'ES'), ('ES', 'project'), ('project', '.')]

>> Trigrams are: 
 [('·', 'Find', 'experts'), ('Find', 'experts', 'task'), ('experts', 'task', 'domain'), ('task', 'domain', 'ES'), ('domain', 'ES', 'project'), ('ES', 'project', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Find', 'NNP'), ('experts', 'NNS'), ('task', 'NN'), ('domain', 'NN'), ('ES', 'NNP'), ('project', 'NN'), ('.', '.')]

 (S
  (NP ·/JJ Find/NNP experts/NNS task/NN domain/NN ES/NNP project/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Find experts task domain ES project']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Find', 'find'), ('experts', 'expert'), ('task', 'task'), ('domain', 'domain'), ('ES', 'es'), ('project', 'project'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Find', 'find'), ('experts', 'expert'), ('task', 'task'), ('domain', 'domain'), ('ES', 'es'), ('project', 'project'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Find', 'Find'), ('experts', 'expert'), ('task', 'task'), ('domain', 'domain'), ('ES', 'ES'), ('project', 'project'), ('.', '.')]



============================ Sentence 68 =============================

· Establish cost-effectiveness of the system. 


>> Tokens are: 
 ['·', 'Establish', 'cost-effectiveness', 'system', '.']

>> Bigrams are: 
 [('·', 'Establish'), ('Establish', 'cost-effectiveness'), ('cost-effectiveness', 'system'), ('system', '.')]

>> Trigrams are: 
 [('·', 'Establish', 'cost-effectiveness'), ('Establish', 'cost-effectiveness', 'system'), ('cost-effectiveness', 'system', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Establish', 'NNP'), ('cost-effectiveness', 'NN'), ('system', 'NN'), ('.', '.')]

 (S (NP ·/JJ Establish/NNP cost-effectiveness/NN system/NN) ./.) 


>> Noun Phrases are: 
 ['· Establish cost-effectiveness system']

>> Named Entities are: 
 [('GPE', 'Establish')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Establish', 'establish'), ('cost-effectiveness', 'cost-effect'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Establish', 'establish'), ('cost-effectiveness', 'cost-effect'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Establish', 'Establish'), ('cost-effectiveness', 'cost-effectiveness'), ('system', 'system'), ('.', '.')]



============================ Sentence 69 =============================

Design the System · Identify the ES Technology · Know and establish the degree of integration with the other systems and databases. 


>> Tokens are: 
 ['Design', 'System', '·', 'Identify', 'ES', 'Technology', '·', 'Know', 'establish', 'degree', 'integration', 'systems', 'databases', '.']

>> Bigrams are: 
 [('Design', 'System'), ('System', '·'), ('·', 'Identify'), ('Identify', 'ES'), ('ES', 'Technology'), ('Technology', '·'), ('·', 'Know'), ('Know', 'establish'), ('establish', 'degree'), ('degree', 'integration'), ('integration', 'systems'), ('systems', 'databases'), ('databases', '.')]

>> Trigrams are: 
 [('Design', 'System', '·'), ('System', '·', 'Identify'), ('·', 'Identify', 'ES'), ('Identify', 'ES', 'Technology'), ('ES', 'Technology', '·'), ('Technology', '·', 'Know'), ('·', 'Know', 'establish'), ('Know', 'establish', 'degree'), ('establish', 'degree', 'integration'), ('degree', 'integration', 'systems'), ('integration', 'systems', 'databases'), ('systems', 'databases', '.')]

>> POS Tags are: 
 [('Design', 'NNP'), ('System', 'NNP'), ('·', 'NNP'), ('Identify', 'NNP'), ('ES', 'NNP'), ('Technology', 'NNP'), ('·', 'NNP'), ('Know', 'NNP'), ('establish', 'VB'), ('degree', 'JJ'), ('integration', 'NN'), ('systems', 'NNS'), ('databases', 'VBZ'), ('.', '.')]

 (S
  (NP
    Design/NNP
    System/NNP
    ·/NNP
    Identify/NNP
    ES/NNP
    Technology/NNP
    ·/NNP
    Know/NNP)
  establish/VB
  (NP degree/JJ integration/NN systems/NNS)
  databases/VBZ
  ./.) 


>> Noun Phrases are: 
 ['Design System · Identify ES Technology · Know', 'degree integration systems']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Design', 'design'), ('System', 'system'), ('·', '·'), ('Identify', 'identifi'), ('ES', 'es'), ('Technology', 'technolog'), ('·', '·'), ('Know', 'know'), ('establish', 'establish'), ('degree', 'degre'), ('integration', 'integr'), ('systems', 'system'), ('databases', 'databas'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Design', 'design'), ('System', 'system'), ('·', '·'), ('Identify', 'identifi'), ('ES', 'es'), ('Technology', 'technolog'), ('·', '·'), ('Know', 'know'), ('establish', 'establish'), ('degree', 'degre'), ('integration', 'integr'), ('systems', 'system'), ('databases', 'databas'), ('.', '.')]

>> Lemmatization: 
 [('Design', 'Design'), ('System', 'System'), ('·', '·'), ('Identify', 'Identify'), ('ES', 'ES'), ('Technology', 'Technology'), ('·', '·'), ('Know', 'Know'), ('establish', 'establish'), ('degree', 'degree'), ('integration', 'integration'), ('systems', 'system'), ('databases', 'database'), ('.', '.')]



============================ Sentence 70 =============================

· Realize how the concepts can represent the domain knowledge best. 


>> Tokens are: 
 ['·', 'Realize', 'concepts', 'represent', 'domain', 'knowledge', 'best', '.']

>> Bigrams are: 
 [('·', 'Realize'), ('Realize', 'concepts'), ('concepts', 'represent'), ('represent', 'domain'), ('domain', 'knowledge'), ('knowledge', 'best'), ('best', '.')]

>> Trigrams are: 
 [('·', 'Realize', 'concepts'), ('Realize', 'concepts', 'represent'), ('concepts', 'represent', 'domain'), ('represent', 'domain', 'knowledge'), ('domain', 'knowledge', 'best'), ('knowledge', 'best', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Realize', 'NNP'), ('concepts', 'NNS'), ('represent', 'VBP'), ('domain', 'NN'), ('knowledge', 'NN'), ('best', 'JJS'), ('.', '.')]

 (S
  (NP ·/JJ Realize/NNP concepts/NNS)
  represent/VBP
  (NP domain/NN knowledge/NN)
  best/JJS
  ./.) 


>> Noun Phrases are: 
 ['· Realize concepts', 'domain knowledge']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Realize', 'realiz'), ('concepts', 'concept'), ('represent', 'repres'), ('domain', 'domain'), ('knowledge', 'knowledg'), ('best', 'best'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Realize', 'realiz'), ('concepts', 'concept'), ('represent', 'repres'), ('domain', 'domain'), ('knowledge', 'knowledg'), ('best', 'best'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Realize', 'Realize'), ('concepts', 'concept'), ('represent', 'represent'), ('domain', 'domain'), ('knowledge', 'knowledge'), ('best', 'best'), ('.', '.')]



============================ Sentence 71 =============================

Develop the Prototype From Knowledge Base: The knowledge engineer works to − · Acquire domain knowledge from the expert. 


>> Tokens are: 
 ['Develop', 'Prototype', 'From', 'Knowledge', 'Base', ':', 'The', 'knowledge', 'engineer', 'works', '−', '·', 'Acquire', 'domain', 'knowledge', 'expert', '.']

>> Bigrams are: 
 [('Develop', 'Prototype'), ('Prototype', 'From'), ('From', 'Knowledge'), ('Knowledge', 'Base'), ('Base', ':'), (':', 'The'), ('The', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'works'), ('works', '−'), ('−', '·'), ('·', 'Acquire'), ('Acquire', 'domain'), ('domain', 'knowledge'), ('knowledge', 'expert'), ('expert', '.')]

>> Trigrams are: 
 [('Develop', 'Prototype', 'From'), ('Prototype', 'From', 'Knowledge'), ('From', 'Knowledge', 'Base'), ('Knowledge', 'Base', ':'), ('Base', ':', 'The'), (':', 'The', 'knowledge'), ('The', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'works'), ('engineer', 'works', '−'), ('works', '−', '·'), ('−', '·', 'Acquire'), ('·', 'Acquire', 'domain'), ('Acquire', 'domain', 'knowledge'), ('domain', 'knowledge', 'expert'), ('knowledge', 'expert', '.')]

>> POS Tags are: 
 [('Develop', 'NNP'), ('Prototype', 'NNP'), ('From', 'NNP'), ('Knowledge', 'NNP'), ('Base', 'NNP'), (':', ':'), ('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('works', 'VBZ'), ('−', 'NNP'), ('·', 'NNP'), ('Acquire', 'NNP'), ('domain', 'NN'), ('knowledge', 'NN'), ('expert', 'NN'), ('.', '.')]

 (S
  (NP Develop/NNP Prototype/NNP From/NNP Knowledge/NNP Base/NNP)
  :/:
  (NP The/DT knowledge/NN engineer/NN)
  works/VBZ
  (NP −/NNP ·/NNP Acquire/NNP domain/NN knowledge/NN expert/NN)
  ./.) 


>> Noun Phrases are: 
 ['Develop Prototype From Knowledge Base', 'The knowledge engineer', '− · Acquire domain knowledge expert']

>> Named Entities are: 
 [('PERSON', 'Develop')] 

>> Stemming using Porter Stemmer: 
 [('Develop', 'develop'), ('Prototype', 'prototyp'), ('From', 'from'), ('Knowledge', 'knowledg'), ('Base', 'base'), (':', ':'), ('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('works', 'work'), ('−', '−'), ('·', '·'), ('Acquire', 'acquir'), ('domain', 'domain'), ('knowledge', 'knowledg'), ('expert', 'expert'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Develop', 'develop'), ('Prototype', 'prototyp'), ('From', 'from'), ('Knowledge', 'knowledg'), ('Base', 'base'), (':', ':'), ('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('works', 'work'), ('−', '−'), ('·', '·'), ('Acquire', 'acquir'), ('domain', 'domain'), ('knowledge', 'knowledg'), ('expert', 'expert'), ('.', '.')]

>> Lemmatization: 
 [('Develop', 'Develop'), ('Prototype', 'Prototype'), ('From', 'From'), ('Knowledge', 'Knowledge'), ('Base', 'Base'), (':', ':'), ('The', 'The'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('works', 'work'), ('−', '−'), ('·', '·'), ('Acquire', 'Acquire'), ('domain', 'domain'), ('knowledge', 'knowledge'), ('expert', 'expert'), ('.', '.')]



============================ Sentence 72 =============================

· Represent it in the form of If-THEN-ELSE rules. 


>> Tokens are: 
 ['·', 'Represent', 'form', 'If-THEN-ELSE', 'rules', '.']

>> Bigrams are: 
 [('·', 'Represent'), ('Represent', 'form'), ('form', 'If-THEN-ELSE'), ('If-THEN-ELSE', 'rules'), ('rules', '.')]

>> Trigrams are: 
 [('·', 'Represent', 'form'), ('Represent', 'form', 'If-THEN-ELSE'), ('form', 'If-THEN-ELSE', 'rules'), ('If-THEN-ELSE', 'rules', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Represent', 'NNP'), ('form', 'NN'), ('If-THEN-ELSE', 'NNP'), ('rules', 'NNS'), ('.', '.')]

 (S (NP ·/JJ Represent/NNP form/NN If-THEN-ELSE/NNP rules/NNS) ./.) 


>> Noun Phrases are: 
 ['· Represent form If-THEN-ELSE rules']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Represent', 'repres'), ('form', 'form'), ('If-THEN-ELSE', 'if-then-els'), ('rules', 'rule'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Represent', 'repres'), ('form', 'form'), ('If-THEN-ELSE', 'if-then-els'), ('rules', 'rule'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Represent', 'Represent'), ('form', 'form'), ('If-THEN-ELSE', 'If-THEN-ELSE'), ('rules', 'rule'), ('.', '.')]



============================ Sentence 73 =============================

Test and Refine the Prototype · The knowledge engineer uses sample cases to test the prototype for any deficiencies in performance. 


>> Tokens are: 
 ['Test', 'Refine', 'Prototype', '·', 'The', 'knowledge', 'engineer', 'uses', 'sample', 'cases', 'test', 'prototype', 'deficiencies', 'performance', '.']

>> Bigrams are: 
 [('Test', 'Refine'), ('Refine', 'Prototype'), ('Prototype', '·'), ('·', 'The'), ('The', 'knowledge'), ('knowledge', 'engineer'), ('engineer', 'uses'), ('uses', 'sample'), ('sample', 'cases'), ('cases', 'test'), ('test', 'prototype'), ('prototype', 'deficiencies'), ('deficiencies', 'performance'), ('performance', '.')]

>> Trigrams are: 
 [('Test', 'Refine', 'Prototype'), ('Refine', 'Prototype', '·'), ('Prototype', '·', 'The'), ('·', 'The', 'knowledge'), ('The', 'knowledge', 'engineer'), ('knowledge', 'engineer', 'uses'), ('engineer', 'uses', 'sample'), ('uses', 'sample', 'cases'), ('sample', 'cases', 'test'), ('cases', 'test', 'prototype'), ('test', 'prototype', 'deficiencies'), ('prototype', 'deficiencies', 'performance'), ('deficiencies', 'performance', '.')]

>> POS Tags are: 
 [('Test', 'NNP'), ('Refine', 'NNP'), ('Prototype', 'NNP'), ('·', 'VBD'), ('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('uses', 'VBZ'), ('sample', 'JJ'), ('cases', 'NNS'), ('test', 'VBP'), ('prototype', 'NN'), ('deficiencies', 'NNS'), ('performance', 'NN'), ('.', '.')]

 (S
  (NP Test/NNP Refine/NNP Prototype/NNP)
  ·/VBD
  (NP The/DT knowledge/NN engineer/NN)
  uses/VBZ
  (NP sample/JJ cases/NNS)
  test/VBP
  (NP prototype/NN deficiencies/NNS performance/NN)
  ./.) 


>> Noun Phrases are: 
 ['Test Refine Prototype', 'The knowledge engineer', 'sample cases', 'prototype deficiencies performance']

>> Named Entities are: 
 [('PERSON', 'Test'), ('PERSON', 'Refine Prototype')] 

>> Stemming using Porter Stemmer: 
 [('Test', 'test'), ('Refine', 'refin'), ('Prototype', 'prototyp'), ('·', '·'), ('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('uses', 'use'), ('sample', 'sampl'), ('cases', 'case'), ('test', 'test'), ('prototype', 'prototyp'), ('deficiencies', 'defici'), ('performance', 'perform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Test', 'test'), ('Refine', 'refin'), ('Prototype', 'prototyp'), ('·', '·'), ('The', 'the'), ('knowledge', 'knowledg'), ('engineer', 'engin'), ('uses', 'use'), ('sample', 'sampl'), ('cases', 'case'), ('test', 'test'), ('prototype', 'prototyp'), ('deficiencies', 'defici'), ('performance', 'perform'), ('.', '.')]

>> Lemmatization: 
 [('Test', 'Test'), ('Refine', 'Refine'), ('Prototype', 'Prototype'), ('·', '·'), ('The', 'The'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('uses', 'us'), ('sample', 'sample'), ('cases', 'case'), ('test', 'test'), ('prototype', 'prototype'), ('deficiencies', 'deficiency'), ('performance', 'performance'), ('.', '.')]



============================ Sentence 74 =============================

· End users test the prototypes of the ES. 


>> Tokens are: 
 ['·', 'End', 'users', 'test', 'prototypes', 'ES', '.']

>> Bigrams are: 
 [('·', 'End'), ('End', 'users'), ('users', 'test'), ('test', 'prototypes'), ('prototypes', 'ES'), ('ES', '.')]

>> Trigrams are: 
 [('·', 'End', 'users'), ('End', 'users', 'test'), ('users', 'test', 'prototypes'), ('test', 'prototypes', 'ES'), ('prototypes', 'ES', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('End', 'NN'), ('users', 'NNS'), ('test', 'VBP'), ('prototypes', 'NNS'), ('ES', 'NNP'), ('.', '.')]

 (S
  (NP ·/JJ End/NN users/NNS)
  test/VBP
  (NP prototypes/NNS ES/NNP)
  ./.) 


>> Noun Phrases are: 
 ['· End users', 'prototypes ES']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('End', 'end'), ('users', 'user'), ('test', 'test'), ('prototypes', 'prototyp'), ('ES', 'es'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('End', 'end'), ('users', 'user'), ('test', 'test'), ('prototypes', 'prototyp'), ('ES', 'es'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('End', 'End'), ('users', 'user'), ('test', 'test'), ('prototypes', 'prototype'), ('ES', 'ES'), ('.', '.')]



============================ Sentence 75 =============================

Develop and Complete the ES · Test and ensure the interaction of the ES with all elements of its environment, including end users, databases, and other information systems. 


>> Tokens are: 
 ['Develop', 'Complete', 'ES', '·', 'Test', 'ensure', 'interaction', 'ES', 'elements', 'environment', ',', 'including', 'end', 'users', ',', 'databases', ',', 'information', 'systems', '.']

>> Bigrams are: 
 [('Develop', 'Complete'), ('Complete', 'ES'), ('ES', '·'), ('·', 'Test'), ('Test', 'ensure'), ('ensure', 'interaction'), ('interaction', 'ES'), ('ES', 'elements'), ('elements', 'environment'), ('environment', ','), (',', 'including'), ('including', 'end'), ('end', 'users'), ('users', ','), (',', 'databases'), ('databases', ','), (',', 'information'), ('information', 'systems'), ('systems', '.')]

>> Trigrams are: 
 [('Develop', 'Complete', 'ES'), ('Complete', 'ES', '·'), ('ES', '·', 'Test'), ('·', 'Test', 'ensure'), ('Test', 'ensure', 'interaction'), ('ensure', 'interaction', 'ES'), ('interaction', 'ES', 'elements'), ('ES', 'elements', 'environment'), ('elements', 'environment', ','), ('environment', ',', 'including'), (',', 'including', 'end'), ('including', 'end', 'users'), ('end', 'users', ','), ('users', ',', 'databases'), (',', 'databases', ','), ('databases', ',', 'information'), (',', 'information', 'systems'), ('information', 'systems', '.')]

>> POS Tags are: 
 [('Develop', 'NNP'), ('Complete', 'NNP'), ('ES', 'NNP'), ('·', 'NNP'), ('Test', 'NNP'), ('ensure', 'VB'), ('interaction', 'NN'), ('ES', 'NNP'), ('elements', 'VBZ'), ('environment', 'NN'), (',', ','), ('including', 'VBG'), ('end', 'NN'), ('users', 'NNS'), (',', ','), ('databases', 'NNS'), (',', ','), ('information', 'NN'), ('systems', 'NNS'), ('.', '.')]

 (S
  (NP Develop/NNP Complete/NNP ES/NNP ·/NNP Test/NNP)
  ensure/VB
  (NP interaction/NN ES/NNP)
  elements/VBZ
  (NP environment/NN)
  ,/,
  including/VBG
  (NP end/NN users/NNS)
  ,/,
  (NP databases/NNS)
  ,/,
  (NP information/NN systems/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Develop Complete ES · Test', 'interaction ES', 'environment', 'end users', 'databases', 'information systems']

>> Named Entities are: 
 [('PERSON', 'Develop'), ('ORGANIZATION', 'Complete')] 

>> Stemming using Porter Stemmer: 
 [('Develop', 'develop'), ('Complete', 'complet'), ('ES', 'es'), ('·', '·'), ('Test', 'test'), ('ensure', 'ensur'), ('interaction', 'interact'), ('ES', 'es'), ('elements', 'element'), ('environment', 'environ'), (',', ','), ('including', 'includ'), ('end', 'end'), ('users', 'user'), (',', ','), ('databases', 'databas'), (',', ','), ('information', 'inform'), ('systems', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Develop', 'develop'), ('Complete', 'complet'), ('ES', 'es'), ('·', '·'), ('Test', 'test'), ('ensure', 'ensur'), ('interaction', 'interact'), ('ES', 'es'), ('elements', 'element'), ('environment', 'environ'), (',', ','), ('including', 'includ'), ('end', 'end'), ('users', 'user'), (',', ','), ('databases', 'databas'), (',', ','), ('information', 'inform'), ('systems', 'system'), ('.', '.')]

>> Lemmatization: 
 [('Develop', 'Develop'), ('Complete', 'Complete'), ('ES', 'ES'), ('·', '·'), ('Test', 'Test'), ('ensure', 'ensure'), ('interaction', 'interaction'), ('ES', 'ES'), ('elements', 'element'), ('environment', 'environment'), (',', ','), ('including', 'including'), ('end', 'end'), ('users', 'user'), (',', ','), ('databases', 'database'), (',', ','), ('information', 'information'), ('systems', 'system'), ('.', '.')]



============================ Sentence 76 =============================

· Document the ES project well. 


>> Tokens are: 
 ['·', 'Document', 'ES', 'project', 'well', '.']

>> Bigrams are: 
 [('·', 'Document'), ('Document', 'ES'), ('ES', 'project'), ('project', 'well'), ('well', '.')]

>> Trigrams are: 
 [('·', 'Document', 'ES'), ('Document', 'ES', 'project'), ('ES', 'project', 'well'), ('project', 'well', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Document', 'NNP'), ('ES', 'NNP'), ('project', 'NN'), ('well', 'RB'), ('.', '.')]

 (S (NP ·/JJ Document/NNP ES/NNP project/NN) well/RB ./.) 


>> Noun Phrases are: 
 ['· Document ES project']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Document', 'document'), ('ES', 'es'), ('project', 'project'), ('well', 'well'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Document', 'document'), ('ES', 'es'), ('project', 'project'), ('well', 'well'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Document', 'Document'), ('ES', 'ES'), ('project', 'project'), ('well', 'well'), ('.', '.')]



============================ Sentence 77 =============================

· Train the user to use ES. 


>> Tokens are: 
 ['·', 'Train', 'user', 'use', 'ES', '.']

>> Bigrams are: 
 [('·', 'Train'), ('Train', 'user'), ('user', 'use'), ('use', 'ES'), ('ES', '.')]

>> Trigrams are: 
 [('·', 'Train', 'user'), ('Train', 'user', 'use'), ('user', 'use', 'ES'), ('use', 'ES', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Train', 'NNP'), ('user', 'NN'), ('use', 'NN'), ('ES', 'NNP'), ('.', '.')]

 (S (NP ·/NN Train/NNP user/NN use/NN ES/NNP) ./.) 


>> Noun Phrases are: 
 ['· Train user use ES']

>> Named Entities are: 
 [('GPE', 'Train')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Train', 'train'), ('user', 'user'), ('use', 'use'), ('ES', 'es'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Train', 'train'), ('user', 'user'), ('use', 'use'), ('ES', 'es'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Train', 'Train'), ('user', 'user'), ('use', 'use'), ('ES', 'ES'), ('.', '.')]



============================ Sentence 78 =============================

Maintain the System · Keep the knowledge base up-to-date by regular review and update. 


>> Tokens are: 
 ['Maintain', 'System', '·', 'Keep', 'knowledge', 'base', 'up-to-date', 'regular', 'review', 'update', '.']

>> Bigrams are: 
 [('Maintain', 'System'), ('System', '·'), ('·', 'Keep'), ('Keep', 'knowledge'), ('knowledge', 'base'), ('base', 'up-to-date'), ('up-to-date', 'regular'), ('regular', 'review'), ('review', 'update'), ('update', '.')]

>> Trigrams are: 
 [('Maintain', 'System', '·'), ('System', '·', 'Keep'), ('·', 'Keep', 'knowledge'), ('Keep', 'knowledge', 'base'), ('knowledge', 'base', 'up-to-date'), ('base', 'up-to-date', 'regular'), ('up-to-date', 'regular', 'review'), ('regular', 'review', 'update'), ('review', 'update', '.')]

>> POS Tags are: 
 [('Maintain', 'NNP'), ('System', 'NNP'), ('·', 'NNP'), ('Keep', 'NNP'), ('knowledge', 'NN'), ('base', 'NN'), ('up-to-date', 'JJ'), ('regular', 'JJ'), ('review', 'NN'), ('update', 'NN'), ('.', '.')]

 (S
  (NP Maintain/NNP System/NNP ·/NNP Keep/NNP knowledge/NN base/NN)
  (NP up-to-date/JJ regular/JJ review/NN update/NN)
  ./.) 


>> Noun Phrases are: 
 ['Maintain System · Keep knowledge base', 'up-to-date regular review update']

>> Named Entities are: 
 [('GPE', 'Maintain'), ('PERSON', 'System')] 

>> Stemming using Porter Stemmer: 
 [('Maintain', 'maintain'), ('System', 'system'), ('·', '·'), ('Keep', 'keep'), ('knowledge', 'knowledg'), ('base', 'base'), ('up-to-date', 'up-to-d'), ('regular', 'regular'), ('review', 'review'), ('update', 'updat'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Maintain', 'maintain'), ('System', 'system'), ('·', '·'), ('Keep', 'keep'), ('knowledge', 'knowledg'), ('base', 'base'), ('up-to-date', 'up-to-d'), ('regular', 'regular'), ('review', 'review'), ('update', 'updat'), ('.', '.')]

>> Lemmatization: 
 [('Maintain', 'Maintain'), ('System', 'System'), ('·', '·'), ('Keep', 'Keep'), ('knowledge', 'knowledge'), ('base', 'base'), ('up-to-date', 'up-to-date'), ('regular', 'regular'), ('review', 'review'), ('update', 'update'), ('.', '.')]



============================ Sentence 79 =============================

· Cater for new interfaces with other information systems, as those systems evolve. 


>> Tokens are: 
 ['·', 'Cater', 'new', 'interfaces', 'information', 'systems', ',', 'systems', 'evolve', '.']

>> Bigrams are: 
 [('·', 'Cater'), ('Cater', 'new'), ('new', 'interfaces'), ('interfaces', 'information'), ('information', 'systems'), ('systems', ','), (',', 'systems'), ('systems', 'evolve'), ('evolve', '.')]

>> Trigrams are: 
 [('·', 'Cater', 'new'), ('Cater', 'new', 'interfaces'), ('new', 'interfaces', 'information'), ('interfaces', 'information', 'systems'), ('information', 'systems', ','), ('systems', ',', 'systems'), (',', 'systems', 'evolve'), ('systems', 'evolve', '.')]

>> POS Tags are: 
 [('·', 'RB'), ('Cater', 'NNP'), ('new', 'JJ'), ('interfaces', 'NNS'), ('information', 'NN'), ('systems', 'NNS'), (',', ','), ('systems', 'NNS'), ('evolve', 'VBP'), ('.', '.')]

 (S
  ·/RB
  (NP Cater/NNP)
  (NP new/JJ interfaces/NNS information/NN systems/NNS)
  ,/,
  (NP systems/NNS)
  evolve/VBP
  ./.) 


>> Noun Phrases are: 
 ['Cater', 'new interfaces information systems', 'systems']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Cater', 'cater'), ('new', 'new'), ('interfaces', 'interfac'), ('information', 'inform'), ('systems', 'system'), (',', ','), ('systems', 'system'), ('evolve', 'evolv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Cater', 'cater'), ('new', 'new'), ('interfaces', 'interfac'), ('information', 'inform'), ('systems', 'system'), (',', ','), ('systems', 'system'), ('evolve', 'evolv'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Cater', 'Cater'), ('new', 'new'), ('interfaces', 'interface'), ('information', 'information'), ('systems', 'system'), (',', ','), ('systems', 'system'), ('evolve', 'evolve'), ('.', '.')]



============================ Sentence 80 =============================

Benefits of Expert Systems · Availability − They are easily available due to mass production of software. 


>> Tokens are: 
 ['Benefits', 'Expert', 'Systems', '·', 'Availability', '−', 'They', 'easily', 'available', 'due', 'mass', 'production', 'software', '.']

>> Bigrams are: 
 [('Benefits', 'Expert'), ('Expert', 'Systems'), ('Systems', '·'), ('·', 'Availability'), ('Availability', '−'), ('−', 'They'), ('They', 'easily'), ('easily', 'available'), ('available', 'due'), ('due', 'mass'), ('mass', 'production'), ('production', 'software'), ('software', '.')]

>> Trigrams are: 
 [('Benefits', 'Expert', 'Systems'), ('Expert', 'Systems', '·'), ('Systems', '·', 'Availability'), ('·', 'Availability', '−'), ('Availability', '−', 'They'), ('−', 'They', 'easily'), ('They', 'easily', 'available'), ('easily', 'available', 'due'), ('available', 'due', 'mass'), ('due', 'mass', 'production'), ('mass', 'production', 'software'), ('production', 'software', '.')]

>> POS Tags are: 
 [('Benefits', 'NNP'), ('Expert', 'NNP'), ('Systems', 'NNP'), ('·', 'NNP'), ('Availability', 'NNP'), ('−', 'NNP'), ('They', 'PRP'), ('easily', 'RB'), ('available', 'JJ'), ('due', 'JJ'), ('mass', 'NN'), ('production', 'NN'), ('software', 'NN'), ('.', '.')]

 (S
  (NP
    Benefits/NNP
    Expert/NNP
    Systems/NNP
    ·/NNP
    Availability/NNP
    −/NNP)
  They/PRP
  easily/RB
  (NP available/JJ due/JJ mass/NN production/NN software/NN)
  ./.) 


>> Noun Phrases are: 
 ['Benefits Expert Systems · Availability −', 'available due mass production software']

>> Named Entities are: 
 [('PERSON', 'Benefits'), ('PERSON', 'Expert Systems')] 

>> Stemming using Porter Stemmer: 
 [('Benefits', 'benefit'), ('Expert', 'expert'), ('Systems', 'system'), ('·', '·'), ('Availability', 'avail'), ('−', '−'), ('They', 'they'), ('easily', 'easili'), ('available', 'avail'), ('due', 'due'), ('mass', 'mass'), ('production', 'product'), ('software', 'softwar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Benefits', 'benefit'), ('Expert', 'expert'), ('Systems', 'system'), ('·', '·'), ('Availability', 'avail'), ('−', '−'), ('They', 'they'), ('easily', 'easili'), ('available', 'avail'), ('due', 'due'), ('mass', 'mass'), ('production', 'product'), ('software', 'softwar'), ('.', '.')]

>> Lemmatization: 
 [('Benefits', 'Benefits'), ('Expert', 'Expert'), ('Systems', 'Systems'), ('·', '·'), ('Availability', 'Availability'), ('−', '−'), ('They', 'They'), ('easily', 'easily'), ('available', 'available'), ('due', 'due'), ('mass', 'mass'), ('production', 'production'), ('software', 'software'), ('.', '.')]



============================ Sentence 81 =============================

· Less Production Cost − Production cost is reasonable. 


>> Tokens are: 
 ['·', 'Less', 'Production', 'Cost', '−', 'Production', 'cost', 'reasonable', '.']

>> Bigrams are: 
 [('·', 'Less'), ('Less', 'Production'), ('Production', 'Cost'), ('Cost', '−'), ('−', 'Production'), ('Production', 'cost'), ('cost', 'reasonable'), ('reasonable', '.')]

>> Trigrams are: 
 [('·', 'Less', 'Production'), ('Less', 'Production', 'Cost'), ('Production', 'Cost', '−'), ('Cost', '−', 'Production'), ('−', 'Production', 'cost'), ('Production', 'cost', 'reasonable'), ('cost', 'reasonable', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Less', 'NNP'), ('Production', 'NNP'), ('Cost', 'NNP'), ('−', 'NNP'), ('Production', 'NNP'), ('cost', 'NN'), ('reasonable', 'NN'), ('.', '.')]

 (S
  (NP
    ·/NN
    Less/NNP
    Production/NNP
    Cost/NNP
    −/NNP
    Production/NNP
    cost/NN
    reasonable/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Less Production Cost − Production cost reasonable']

>> Named Entities are: 
 [('PERSON', 'Less Production Cost')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Less', 'less'), ('Production', 'product'), ('Cost', 'cost'), ('−', '−'), ('Production', 'product'), ('cost', 'cost'), ('reasonable', 'reason'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Less', 'less'), ('Production', 'product'), ('Cost', 'cost'), ('−', '−'), ('Production', 'product'), ('cost', 'cost'), ('reasonable', 'reason'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Less', 'Less'), ('Production', 'Production'), ('Cost', 'Cost'), ('−', '−'), ('Production', 'Production'), ('cost', 'cost'), ('reasonable', 'reasonable'), ('.', '.')]



============================ Sentence 82 =============================

This makes them affordable. 


>> Tokens are: 
 ['This', 'makes', 'affordable', '.']

>> Bigrams are: 
 [('This', 'makes'), ('makes', 'affordable'), ('affordable', '.')]

>> Trigrams are: 
 [('This', 'makes', 'affordable'), ('makes', 'affordable', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('makes', 'VBZ'), ('affordable', 'JJ'), ('.', '.')]

 (S This/DT makes/VBZ affordable/JJ ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('makes', 'make'), ('affordable', 'afford'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('makes', 'make'), ('affordable', 'afford'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('makes', 'make'), ('affordable', 'affordable'), ('.', '.')]



============================ Sentence 83 =============================

· Speed − They offer great speed. 


>> Tokens are: 
 ['·', 'Speed', '−', 'They', 'offer', 'great', 'speed', '.']

>> Bigrams are: 
 [('·', 'Speed'), ('Speed', '−'), ('−', 'They'), ('They', 'offer'), ('offer', 'great'), ('great', 'speed'), ('speed', '.')]

>> Trigrams are: 
 [('·', 'Speed', '−'), ('Speed', '−', 'They'), ('−', 'They', 'offer'), ('They', 'offer', 'great'), ('offer', 'great', 'speed'), ('great', 'speed', '.')]

>> POS Tags are: 
 [('·', 'NNS'), ('Speed', 'NNP'), ('−', 'VBP'), ('They', 'PRP'), ('offer', 'VBP'), ('great', 'JJ'), ('speed', 'NN'), ('.', '.')]

 (S
  (NP ·/NNS Speed/NNP)
  −/VBP
  They/PRP
  offer/VBP
  (NP great/JJ speed/NN)
  ./.) 


>> Noun Phrases are: 
 ['· Speed', 'great speed']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Speed', 'speed'), ('−', '−'), ('They', 'they'), ('offer', 'offer'), ('great', 'great'), ('speed', 'speed'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Speed', 'speed'), ('−', '−'), ('They', 'they'), ('offer', 'offer'), ('great', 'great'), ('speed', 'speed'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Speed', 'Speed'), ('−', '−'), ('They', 'They'), ('offer', 'offer'), ('great', 'great'), ('speed', 'speed'), ('.', '.')]



============================ Sentence 84 =============================

They reduce the amount of work an individual puts in. 


>> Tokens are: 
 ['They', 'reduce', 'amount', 'work', 'individual', 'puts', '.']

>> Bigrams are: 
 [('They', 'reduce'), ('reduce', 'amount'), ('amount', 'work'), ('work', 'individual'), ('individual', 'puts'), ('puts', '.')]

>> Trigrams are: 
 [('They', 'reduce', 'amount'), ('reduce', 'amount', 'work'), ('amount', 'work', 'individual'), ('work', 'individual', 'puts'), ('individual', 'puts', '.')]

>> POS Tags are: 
 [('They', 'PRP'), ('reduce', 'VB'), ('amount', 'NN'), ('work', 'NN'), ('individual', 'JJ'), ('puts', 'NNS'), ('.', '.')]

 (S
  They/PRP
  reduce/VB
  (NP amount/NN work/NN)
  (NP individual/JJ puts/NNS)
  ./.) 


>> Noun Phrases are: 
 ['amount work', 'individual puts']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('They', 'they'), ('reduce', 'reduc'), ('amount', 'amount'), ('work', 'work'), ('individual', 'individu'), ('puts', 'put'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('They', 'they'), ('reduce', 'reduc'), ('amount', 'amount'), ('work', 'work'), ('individual', 'individu'), ('puts', 'put'), ('.', '.')]

>> Lemmatization: 
 [('They', 'They'), ('reduce', 'reduce'), ('amount', 'amount'), ('work', 'work'), ('individual', 'individual'), ('puts', 'put'), ('.', '.')]



============================ Sentence 85 =============================

· Less Error Rate − Error rate is low as compared to human errors. 


>> Tokens are: 
 ['·', 'Less', 'Error', 'Rate', '−', 'Error', 'rate', 'low', 'compared', 'human', 'errors', '.']

>> Bigrams are: 
 [('·', 'Less'), ('Less', 'Error'), ('Error', 'Rate'), ('Rate', '−'), ('−', 'Error'), ('Error', 'rate'), ('rate', 'low'), ('low', 'compared'), ('compared', 'human'), ('human', 'errors'), ('errors', '.')]

>> Trigrams are: 
 [('·', 'Less', 'Error'), ('Less', 'Error', 'Rate'), ('Error', 'Rate', '−'), ('Rate', '−', 'Error'), ('−', 'Error', 'rate'), ('Error', 'rate', 'low'), ('rate', 'low', 'compared'), ('low', 'compared', 'human'), ('compared', 'human', 'errors'), ('human', 'errors', '.')]

>> POS Tags are: 
 [('·', 'RB'), ('Less', 'NNP'), ('Error', 'NNP'), ('Rate', 'NNP'), ('−', 'NNP'), ('Error', 'NNP'), ('rate', 'NN'), ('low', 'JJ'), ('compared', 'VBN'), ('human', 'JJ'), ('errors', 'NNS'), ('.', '.')]

 (S
  ·/RB
  (NP Less/NNP Error/NNP Rate/NNP −/NNP Error/NNP rate/NN)
  low/JJ
  compared/VBN
  (NP human/JJ errors/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Less Error Rate − Error rate', 'human errors']

>> Named Entities are: 
 [('PERSON', 'Less Error Rate')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Less', 'less'), ('Error', 'error'), ('Rate', 'rate'), ('−', '−'), ('Error', 'error'), ('rate', 'rate'), ('low', 'low'), ('compared', 'compar'), ('human', 'human'), ('errors', 'error'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Less', 'less'), ('Error', 'error'), ('Rate', 'rate'), ('−', '−'), ('Error', 'error'), ('rate', 'rate'), ('low', 'low'), ('compared', 'compar'), ('human', 'human'), ('errors', 'error'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Less', 'Less'), ('Error', 'Error'), ('Rate', 'Rate'), ('−', '−'), ('Error', 'Error'), ('rate', 'rate'), ('low', 'low'), ('compared', 'compared'), ('human', 'human'), ('errors', 'error'), ('.', '.')]



============================ Sentence 86 =============================

· Reducing Risk − They can work in the environment dangerous to humans. 


>> Tokens are: 
 ['·', 'Reducing', 'Risk', '−', 'They', 'work', 'environment', 'dangerous', 'humans', '.']

>> Bigrams are: 
 [('·', 'Reducing'), ('Reducing', 'Risk'), ('Risk', '−'), ('−', 'They'), ('They', 'work'), ('work', 'environment'), ('environment', 'dangerous'), ('dangerous', 'humans'), ('humans', '.')]

>> Trigrams are: 
 [('·', 'Reducing', 'Risk'), ('Reducing', 'Risk', '−'), ('Risk', '−', 'They'), ('−', 'They', 'work'), ('They', 'work', 'environment'), ('work', 'environment', 'dangerous'), ('environment', 'dangerous', 'humans'), ('dangerous', 'humans', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('Reducing', 'VBG'), ('Risk', 'NNP'), ('−', 'NNP'), ('They', 'PRP'), ('work', 'VBP'), ('environment', 'NN'), ('dangerous', 'JJ'), ('humans', 'NNS'), ('.', '.')]

 (S
  (NP ·/NN)
  Reducing/VBG
  (NP Risk/NNP −/NNP)
  They/PRP
  work/VBP
  (NP environment/NN)
  (NP dangerous/JJ humans/NNS)
  ./.) 


>> Noun Phrases are: 
 ['·', 'Risk −', 'environment', 'dangerous humans']

>> Named Entities are: 
 [('PERSON', 'Risk')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Reducing', 'reduc'), ('Risk', 'risk'), ('−', '−'), ('They', 'they'), ('work', 'work'), ('environment', 'environ'), ('dangerous', 'danger'), ('humans', 'human'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Reducing', 'reduc'), ('Risk', 'risk'), ('−', '−'), ('They', 'they'), ('work', 'work'), ('environment', 'environ'), ('dangerous', 'danger'), ('humans', 'human'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Reducing', 'Reducing'), ('Risk', 'Risk'), ('−', '−'), ('They', 'They'), ('work', 'work'), ('environment', 'environment'), ('dangerous', 'dangerous'), ('humans', 'human'), ('.', '.')]



============================ Sentence 87 =============================

· Steady response − They work steadily without getting motional, tensed or fatigued. 


>> Tokens are: 
 ['·', 'Steady', 'response', '−', 'They', 'work', 'steadily', 'without', 'getting', 'motional', ',', 'tensed', 'fatigued', '.']

>> Bigrams are: 
 [('·', 'Steady'), ('Steady', 'response'), ('response', '−'), ('−', 'They'), ('They', 'work'), ('work', 'steadily'), ('steadily', 'without'), ('without', 'getting'), ('getting', 'motional'), ('motional', ','), (',', 'tensed'), ('tensed', 'fatigued'), ('fatigued', '.')]

>> Trigrams are: 
 [('·', 'Steady', 'response'), ('Steady', 'response', '−'), ('response', '−', 'They'), ('−', 'They', 'work'), ('They', 'work', 'steadily'), ('work', 'steadily', 'without'), ('steadily', 'without', 'getting'), ('without', 'getting', 'motional'), ('getting', 'motional', ','), ('motional', ',', 'tensed'), (',', 'tensed', 'fatigued'), ('tensed', 'fatigued', '.')]

>> POS Tags are: 
 [('·', 'NNS'), ('Steady', 'JJ'), ('response', 'NN'), ('−', 'NN'), ('They', 'PRP'), ('work', 'VBP'), ('steadily', 'RB'), ('without', 'IN'), ('getting', 'VBG'), ('motional', 'JJ'), (',', ','), ('tensed', 'JJ'), ('fatigued', 'VBN'), ('.', '.')]

 (S
  (NP ·/NNS)
  (NP Steady/JJ response/NN −/NN)
  They/PRP
  work/VBP
  steadily/RB
  without/IN
  getting/VBG
  motional/JJ
  ,/,
  tensed/JJ
  fatigued/VBN
  ./.) 


>> Noun Phrases are: 
 ['·', 'Steady response −']

>> Named Entities are: 
 [('PERSON', 'Steady')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Steady', 'steadi'), ('response', 'respons'), ('−', '−'), ('They', 'they'), ('work', 'work'), ('steadily', 'steadili'), ('without', 'without'), ('getting', 'get'), ('motional', 'motion'), (',', ','), ('tensed', 'tens'), ('fatigued', 'fatigu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Steady', 'steadi'), ('response', 'respons'), ('−', '−'), ('They', 'they'), ('work', 'work'), ('steadily', 'steadili'), ('without', 'without'), ('getting', 'get'), ('motional', 'motion'), (',', ','), ('tensed', 'tens'), ('fatigued', 'fatigu'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Steady', 'Steady'), ('response', 'response'), ('−', '−'), ('They', 'They'), ('work', 'work'), ('steadily', 'steadily'), ('without', 'without'), ('getting', 'getting'), ('motional', 'motional'), (',', ','), ('tensed', 'tensed'), ('fatigued', 'fatigued'), ('.', '.')]

