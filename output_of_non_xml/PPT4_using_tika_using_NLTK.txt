				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

PowerPoint Presentation  arjun.bala@darshan.ac.in 9624822202 Computer Engineering Department Prof. Arjun V. Bala Python for Data Science (PDS) (3150713)  Unit-04  Data Visualization   Darshan Institute of Engineering & Technology, Rajkot     Looping Outline  Introduction to MatPlotLib Graph Plot Drawing Multiple Lines and Plots Export graphs/plots to Image/PDF/SVG Axis, Ticks ad Grids Line Appearance Labels, Annotation, Legends Types of Graphs Pie Chart Bar Chart Histograms Boxplots Scatterplots Time Series Plotting Geographical data     Introduction to MatPlotLib Most people visualize information better when they see it in graphic versus textual format. 


>> Tokens are: 
 ['PowerPoint', 'Presentation', 'arjun.bala', '@', 'darshan.ac.in', '9624822202', 'Computer', 'Engineering', 'Department', 'Prof.', 'Arjun', 'V.', 'Bala', 'Python', 'Data', 'Science', '(', 'PDS', ')', '(', '3150713', ')', 'Unit-04', 'Data', 'Visualization', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', ',', 'Rajkot', '\uf050', 'Looping', 'Outline', 'Introduction', 'MatPlotLib', 'Graph', 'Plot', 'Drawing', 'Multiple', 'Lines', 'Plots', 'Export', 'graphs/plots', 'Image/PDF/SVG', 'Axis', ',', 'Ticks', 'ad', 'Grids', 'Line', 'Appearance', 'Labels', ',', 'Annotation', ',', 'Legends', 'Types', 'Graphs', 'Pie', 'Chart', 'Bar', 'Chart', 'Histograms', 'Boxplots', 'Scatterplots', 'Time', 'Series', 'Plotting', 'Geographical', 'data', 'Introduction', 'MatPlotLib', 'Most', 'people', 'visualize', 'information', 'better', 'see', 'graphic', 'versus', 'textual', 'format', '.']

>> Bigrams are: 
 [('PowerPoint', 'Presentation'), ('Presentation', 'arjun.bala'), ('arjun.bala', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '9624822202'), ('9624822202', 'Computer'), ('Computer', 'Engineering'), ('Engineering', 'Department'), ('Department', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', 'Python'), ('Python', 'Data'), ('Data', 'Science'), ('Science', '('), ('(', 'PDS'), ('PDS', ')'), (')', '('), ('(', '3150713'), ('3150713', ')'), (')', 'Unit-04'), ('Unit-04', 'Data'), ('Data', 'Visualization'), ('Visualization', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', ','), (',', 'Rajkot'), ('Rajkot', '\uf050'), ('\uf050', 'Looping'), ('Looping', 'Outline'), ('Outline', 'Introduction'), ('Introduction', 'MatPlotLib'), ('MatPlotLib', 'Graph'), ('Graph', 'Plot'), ('Plot', 'Drawing'), ('Drawing', 'Multiple'), ('Multiple', 'Lines'), ('Lines', 'Plots'), ('Plots', 'Export'), ('Export', 'graphs/plots'), ('graphs/plots', 'Image/PDF/SVG'), ('Image/PDF/SVG', 'Axis'), ('Axis', ','), (',', 'Ticks'), ('Ticks', 'ad'), ('ad', 'Grids'), ('Grids', 'Line'), ('Line', 'Appearance'), ('Appearance', 'Labels'), ('Labels', ','), (',', 'Annotation'), ('Annotation', ','), (',', 'Legends'), ('Legends', 'Types'), ('Types', 'Graphs'), ('Graphs', 'Pie'), ('Pie', 'Chart'), ('Chart', 'Bar'), ('Bar', 'Chart'), ('Chart', 'Histograms'), ('Histograms', 'Boxplots'), ('Boxplots', 'Scatterplots'), ('Scatterplots', 'Time'), ('Time', 'Series'), ('Series', 'Plotting'), ('Plotting', 'Geographical'), ('Geographical', 'data'), ('data', 'Introduction'), ('Introduction', 'MatPlotLib'), ('MatPlotLib', 'Most'), ('Most', 'people'), ('people', 'visualize'), ('visualize', 'information'), ('information', 'better'), ('better', 'see'), ('see', 'graphic'), ('graphic', 'versus'), ('versus', 'textual'), ('textual', 'format'), ('format', '.')]

>> Trigrams are: 
 [('PowerPoint', 'Presentation', 'arjun.bala'), ('Presentation', 'arjun.bala', '@'), ('arjun.bala', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '9624822202'), ('darshan.ac.in', '9624822202', 'Computer'), ('9624822202', 'Computer', 'Engineering'), ('Computer', 'Engineering', 'Department'), ('Engineering', 'Department', 'Prof.'), ('Department', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', 'Python'), ('Bala', 'Python', 'Data'), ('Python', 'Data', 'Science'), ('Data', 'Science', '('), ('Science', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '('), (')', '(', '3150713'), ('(', '3150713', ')'), ('3150713', ')', 'Unit-04'), (')', 'Unit-04', 'Data'), ('Unit-04', 'Data', 'Visualization'), ('Data', 'Visualization', 'Darshan'), ('Visualization', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', ','), ('Technology', ',', 'Rajkot'), (',', 'Rajkot', '\uf050'), ('Rajkot', '\uf050', 'Looping'), ('\uf050', 'Looping', 'Outline'), ('Looping', 'Outline', 'Introduction'), ('Outline', 'Introduction', 'MatPlotLib'), ('Introduction', 'MatPlotLib', 'Graph'), ('MatPlotLib', 'Graph', 'Plot'), ('Graph', 'Plot', 'Drawing'), ('Plot', 'Drawing', 'Multiple'), ('Drawing', 'Multiple', 'Lines'), ('Multiple', 'Lines', 'Plots'), ('Lines', 'Plots', 'Export'), ('Plots', 'Export', 'graphs/plots'), ('Export', 'graphs/plots', 'Image/PDF/SVG'), ('graphs/plots', 'Image/PDF/SVG', 'Axis'), ('Image/PDF/SVG', 'Axis', ','), ('Axis', ',', 'Ticks'), (',', 'Ticks', 'ad'), ('Ticks', 'ad', 'Grids'), ('ad', 'Grids', 'Line'), ('Grids', 'Line', 'Appearance'), ('Line', 'Appearance', 'Labels'), ('Appearance', 'Labels', ','), ('Labels', ',', 'Annotation'), (',', 'Annotation', ','), ('Annotation', ',', 'Legends'), (',', 'Legends', 'Types'), ('Legends', 'Types', 'Graphs'), ('Types', 'Graphs', 'Pie'), ('Graphs', 'Pie', 'Chart'), ('Pie', 'Chart', 'Bar'), ('Chart', 'Bar', 'Chart'), ('Bar', 'Chart', 'Histograms'), ('Chart', 'Histograms', 'Boxplots'), ('Histograms', 'Boxplots', 'Scatterplots'), ('Boxplots', 'Scatterplots', 'Time'), ('Scatterplots', 'Time', 'Series'), ('Time', 'Series', 'Plotting'), ('Series', 'Plotting', 'Geographical'), ('Plotting', 'Geographical', 'data'), ('Geographical', 'data', 'Introduction'), ('data', 'Introduction', 'MatPlotLib'), ('Introduction', 'MatPlotLib', 'Most'), ('MatPlotLib', 'Most', 'people'), ('Most', 'people', 'visualize'), ('people', 'visualize', 'information'), ('visualize', 'information', 'better'), ('information', 'better', 'see'), ('better', 'see', 'graphic'), ('see', 'graphic', 'versus'), ('graphic', 'versus', 'textual'), ('versus', 'textual', 'format'), ('textual', 'format', '.')]

>> POS Tags are: 
 [('PowerPoint', 'NNP'), ('Presentation', 'NNP'), ('arjun.bala', 'VBZ'), ('@', 'NNP'), ('darshan.ac.in', 'NN'), ('9624822202', 'CD'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('Python', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('(', '('), ('3150713', 'CD'), (')', ')'), ('Unit-04', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('\uf050', 'NNP'), ('Looping', 'NNP'), ('Outline', 'NNP'), ('Introduction', 'NNP'), ('MatPlotLib', 'NNP'), ('Graph', 'NNP'), ('Plot', 'NNP'), ('Drawing', 'NNP'), ('Multiple', 'NNP'), ('Lines', 'NNP'), ('Plots', 'NNP'), ('Export', 'NNP'), ('graphs/plots', 'NNS'), ('Image/PDF/SVG', 'NNP'), ('Axis', 'NNP'), (',', ','), ('Ticks', 'NNP'), ('ad', 'NN'), ('Grids', 'NNP'), ('Line', 'NNP'), ('Appearance', 'NNP'), ('Labels', 'NNP'), (',', ','), ('Annotation', 'NNP'), (',', ','), ('Legends', 'NNP'), ('Types', 'NNP'), ('Graphs', 'NNP'), ('Pie', 'NNP'), ('Chart', 'NNP'), ('Bar', 'NNP'), ('Chart', 'NNP'), ('Histograms', 'NNP'), ('Boxplots', 'NNP'), ('Scatterplots', 'NNP'), ('Time', 'NNP'), ('Series', 'NNP'), ('Plotting', 'NNP'), ('Geographical', 'NNP'), ('data', 'NNS'), ('Introduction', 'NNP'), ('MatPlotLib', 'NNP'), ('Most', 'JJS'), ('people', 'NNS'), ('visualize', 'VBP'), ('information', 'NN'), ('better', 'RBR'), ('see', 'NN'), ('graphic', 'JJ'), ('versus', 'FW'), ('textual', 'JJ'), ('format', 'NN'), ('.', '.')]

 (S
  (NP PowerPoint/NNP Presentation/NNP)
  arjun.bala/VBZ
  (NP @/NNP darshan.ac.in/NN)
  9624822202/CD
  (NP
    Computer/NNP
    Engineering/NNP
    Department/NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP
    Python/NNP
    Data/NNP
    Science/NNP)
  (/(
  (NP PDS/NNP)
  )/)
  (/(
  3150713/CD
  )/)
  (NP
    Unit-04/NNP
    Data/NNP
    Visualization/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP)
  ,/,
  (NP
    Rajkot/NNP
    /NNP
    Looping/NNP
    Outline/NNP
    Introduction/NNP
    MatPlotLib/NNP
    Graph/NNP
    Plot/NNP
    Drawing/NNP
    Multiple/NNP
    Lines/NNP
    Plots/NNP
    Export/NNP
    graphs/plots/NNS
    Image/PDF/SVG/NNP
    Axis/NNP)
  ,/,
  (NP Ticks/NNP ad/NN Grids/NNP Line/NNP Appearance/NNP Labels/NNP)
  ,/,
  (NP Annotation/NNP)
  ,/,
  (NP
    Legends/NNP
    Types/NNP
    Graphs/NNP
    Pie/NNP
    Chart/NNP
    Bar/NNP
    Chart/NNP
    Histograms/NNP
    Boxplots/NNP
    Scatterplots/NNP
    Time/NNP
    Series/NNP
    Plotting/NNP
    Geographical/NNP
    data/NNS
    Introduction/NNP
    MatPlotLib/NNP)
  Most/JJS
  (NP people/NNS)
  visualize/VBP
  (NP information/NN)
  better/RBR
  (NP see/NN)
  graphic/JJ
  versus/FW
  (NP textual/JJ format/NN)
  ./.) 


>> Noun Phrases are: 
 ['PowerPoint Presentation', '@ darshan.ac.in', 'Computer Engineering Department Prof. Arjun V. Bala Python Data Science', 'PDS', 'Unit-04 Data Visualization Darshan Institute Engineering', 'Technology', 'Rajkot \uf050 Looping Outline Introduction MatPlotLib Graph Plot Drawing Multiple Lines Plots Export graphs/plots Image/PDF/SVG Axis', 'Ticks ad Grids Line Appearance Labels', 'Annotation', 'Legends Types Graphs Pie Chart Bar Chart Histograms Boxplots Scatterplots Time Series Plotting Geographical data Introduction MatPlotLib', 'people', 'information', 'see', 'textual format']

>> Named Entities are: 
 [('ORGANIZATION', 'PowerPoint'), ('ORGANIZATION', 'Computer Engineering Department'), ('PERSON', 'Bala Python Data Science'), ('ORGANIZATION', 'PDS'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Rajkot'), ('PERSON', 'Lines Plots Export'), ('PERSON', 'Ticks'), ('PERSON', 'Grids Line Appearance Labels'), ('PERSON', 'Annotation'), ('PERSON', 'Legends Types Graphs Pie Chart Bar Chart Histograms Boxplots Scatterplots'), ('ORGANIZATION', 'Introduction')] 

>> Stemming using Porter Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('arjun.bala', 'arjun.bala'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('9624822202', '9624822202'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('Python', 'python'), ('Data', 'data'), ('Science', 'scienc'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('(', '('), ('3150713', '3150713'), (')', ')'), ('Unit-04', 'unit-04'), ('Data', 'data'), ('Visualization', 'visual'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Outline', 'outlin'), ('Introduction', 'introduct'), ('MatPlotLib', 'matplotlib'), ('Graph', 'graph'), ('Plot', 'plot'), ('Drawing', 'draw'), ('Multiple', 'multipl'), ('Lines', 'line'), ('Plots', 'plot'), ('Export', 'export'), ('graphs/plots', 'graphs/plot'), ('Image/PDF/SVG', 'image/pdf/svg'), ('Axis', 'axi'), (',', ','), ('Ticks', 'tick'), ('ad', 'ad'), ('Grids', 'grid'), ('Line', 'line'), ('Appearance', 'appear'), ('Labels', 'label'), (',', ','), ('Annotation', 'annot'), (',', ','), ('Legends', 'legend'), ('Types', 'type'), ('Graphs', 'graph'), ('Pie', 'pie'), ('Chart', 'chart'), ('Bar', 'bar'), ('Chart', 'chart'), ('Histograms', 'histogram'), ('Boxplots', 'boxplot'), ('Scatterplots', 'scatterplot'), ('Time', 'time'), ('Series', 'seri'), ('Plotting', 'plot'), ('Geographical', 'geograph'), ('data', 'data'), ('Introduction', 'introduct'), ('MatPlotLib', 'matplotlib'), ('Most', 'most'), ('people', 'peopl'), ('visualize', 'visual'), ('information', 'inform'), ('better', 'better'), ('see', 'see'), ('graphic', 'graphic'), ('versus', 'versu'), ('textual', 'textual'), ('format', 'format'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('arjun.bala', 'arjun.bala'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('9624822202', '9624822202'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('Python', 'python'), ('Data', 'data'), ('Science', 'scienc'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('(', '('), ('3150713', '3150713'), (')', ')'), ('Unit-04', 'unit-04'), ('Data', 'data'), ('Visualization', 'visual'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Outline', 'outlin'), ('Introduction', 'introduct'), ('MatPlotLib', 'matplotlib'), ('Graph', 'graph'), ('Plot', 'plot'), ('Drawing', 'draw'), ('Multiple', 'multipl'), ('Lines', 'line'), ('Plots', 'plot'), ('Export', 'export'), ('graphs/plots', 'graphs/plot'), ('Image/PDF/SVG', 'image/pdf/svg'), ('Axis', 'axi'), (',', ','), ('Ticks', 'tick'), ('ad', 'ad'), ('Grids', 'grid'), ('Line', 'line'), ('Appearance', 'appear'), ('Labels', 'label'), (',', ','), ('Annotation', 'annot'), (',', ','), ('Legends', 'legend'), ('Types', 'type'), ('Graphs', 'graph'), ('Pie', 'pie'), ('Chart', 'chart'), ('Bar', 'bar'), ('Chart', 'chart'), ('Histograms', 'histogram'), ('Boxplots', 'boxplot'), ('Scatterplots', 'scatterplot'), ('Time', 'time'), ('Series', 'seri'), ('Plotting', 'plot'), ('Geographical', 'geograph'), ('data', 'data'), ('Introduction', 'introduct'), ('MatPlotLib', 'matplotlib'), ('Most', 'most'), ('people', 'peopl'), ('visualize', 'visual'), ('information', 'inform'), ('better', 'better'), ('see', 'see'), ('graphic', 'graphic'), ('versus', 'versus'), ('textual', 'textual'), ('format', 'format'), ('.', '.')]

>> Lemmatization: 
 [('PowerPoint', 'PowerPoint'), ('Presentation', 'Presentation'), ('arjun.bala', 'arjun.bala'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('9624822202', '9624822202'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('Python', 'Python'), ('Data', 'Data'), ('Science', 'Science'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('(', '('), ('3150713', '3150713'), (')', ')'), ('Unit-04', 'Unit-04'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('\uf050', '\uf050'), ('Looping', 'Looping'), ('Outline', 'Outline'), ('Introduction', 'Introduction'), ('MatPlotLib', 'MatPlotLib'), ('Graph', 'Graph'), ('Plot', 'Plot'), ('Drawing', 'Drawing'), ('Multiple', 'Multiple'), ('Lines', 'Lines'), ('Plots', 'Plots'), ('Export', 'Export'), ('graphs/plots', 'graphs/plots'), ('Image/PDF/SVG', 'Image/PDF/SVG'), ('Axis', 'Axis'), (',', ','), ('Ticks', 'Ticks'), ('ad', 'ad'), ('Grids', 'Grids'), ('Line', 'Line'), ('Appearance', 'Appearance'), ('Labels', 'Labels'), (',', ','), ('Annotation', 'Annotation'), (',', ','), ('Legends', 'Legends'), ('Types', 'Types'), ('Graphs', 'Graphs'), ('Pie', 'Pie'), ('Chart', 'Chart'), ('Bar', 'Bar'), ('Chart', 'Chart'), ('Histograms', 'Histograms'), ('Boxplots', 'Boxplots'), ('Scatterplots', 'Scatterplots'), ('Time', 'Time'), ('Series', 'Series'), ('Plotting', 'Plotting'), ('Geographical', 'Geographical'), ('data', 'data'), ('Introduction', 'Introduction'), ('MatPlotLib', 'MatPlotLib'), ('Most', 'Most'), ('people', 'people'), ('visualize', 'visualize'), ('information', 'information'), ('better', 'better'), ('see', 'see'), ('graphic', 'graphic'), ('versus', 'versus'), ('textual', 'textual'), ('format', 'format'), ('.', '.')]



============================ Sentence 2 =============================

Graphics help people see relationships and make comparisons with greater ease. 


>> Tokens are: 
 ['Graphics', 'help', 'people', 'see', 'relationships', 'make', 'comparisons', 'greater', 'ease', '.']

>> Bigrams are: 
 [('Graphics', 'help'), ('help', 'people'), ('people', 'see'), ('see', 'relationships'), ('relationships', 'make'), ('make', 'comparisons'), ('comparisons', 'greater'), ('greater', 'ease'), ('ease', '.')]

>> Trigrams are: 
 [('Graphics', 'help', 'people'), ('help', 'people', 'see'), ('people', 'see', 'relationships'), ('see', 'relationships', 'make'), ('relationships', 'make', 'comparisons'), ('make', 'comparisons', 'greater'), ('comparisons', 'greater', 'ease'), ('greater', 'ease', '.')]

>> POS Tags are: 
 [('Graphics', 'NNS'), ('help', 'VBP'), ('people', 'NNS'), ('see', 'VBP'), ('relationships', 'NNS'), ('make', 'VBP'), ('comparisons', 'NNS'), ('greater', 'JJR'), ('ease', 'NN'), ('.', '.')]

 (S
  (NP Graphics/NNS)
  help/VBP
  (NP people/NNS)
  see/VBP
  (NP relationships/NNS)
  make/VBP
  (NP comparisons/NNS)
  greater/JJR
  (NP ease/NN)
  ./.) 


>> Noun Phrases are: 
 ['Graphics', 'people', 'relationships', 'comparisons', 'ease']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Graphics', 'graphic'), ('help', 'help'), ('people', 'peopl'), ('see', 'see'), ('relationships', 'relationship'), ('make', 'make'), ('comparisons', 'comparison'), ('greater', 'greater'), ('ease', 'eas'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Graphics', 'graphic'), ('help', 'help'), ('people', 'peopl'), ('see', 'see'), ('relationships', 'relationship'), ('make', 'make'), ('comparisons', 'comparison'), ('greater', 'greater'), ('ease', 'eas'), ('.', '.')]

>> Lemmatization: 
 [('Graphics', 'Graphics'), ('help', 'help'), ('people', 'people'), ('see', 'see'), ('relationships', 'relationship'), ('make', 'make'), ('comparisons', 'comparison'), ('greater', 'greater'), ('ease', 'ease'), ('.', '.')]



============================ Sentence 3 =============================

Fortunately, python makes the task of converting textual data into graphics relatively easy using libraries, one of most commonly used library for this is MatPlotLib. 


>> Tokens are: 
 ['Fortunately', ',', 'python', 'makes', 'task', 'converting', 'textual', 'data', 'graphics', 'relatively', 'easy', 'using', 'libraries', ',', 'one', 'commonly', 'used', 'library', 'MatPlotLib', '.']

>> Bigrams are: 
 [('Fortunately', ','), (',', 'python'), ('python', 'makes'), ('makes', 'task'), ('task', 'converting'), ('converting', 'textual'), ('textual', 'data'), ('data', 'graphics'), ('graphics', 'relatively'), ('relatively', 'easy'), ('easy', 'using'), ('using', 'libraries'), ('libraries', ','), (',', 'one'), ('one', 'commonly'), ('commonly', 'used'), ('used', 'library'), ('library', 'MatPlotLib'), ('MatPlotLib', '.')]

>> Trigrams are: 
 [('Fortunately', ',', 'python'), (',', 'python', 'makes'), ('python', 'makes', 'task'), ('makes', 'task', 'converting'), ('task', 'converting', 'textual'), ('converting', 'textual', 'data'), ('textual', 'data', 'graphics'), ('data', 'graphics', 'relatively'), ('graphics', 'relatively', 'easy'), ('relatively', 'easy', 'using'), ('easy', 'using', 'libraries'), ('using', 'libraries', ','), ('libraries', ',', 'one'), (',', 'one', 'commonly'), ('one', 'commonly', 'used'), ('commonly', 'used', 'library'), ('used', 'library', 'MatPlotLib'), ('library', 'MatPlotLib', '.')]

>> POS Tags are: 
 [('Fortunately', 'RB'), (',', ','), ('python', 'NN'), ('makes', 'VBZ'), ('task', 'NN'), ('converting', 'VBG'), ('textual', 'JJ'), ('data', 'NNS'), ('graphics', 'NNS'), ('relatively', 'RB'), ('easy', 'JJ'), ('using', 'VBG'), ('libraries', 'NNS'), (',', ','), ('one', 'CD'), ('commonly', 'NN'), ('used', 'VBN'), ('library', 'JJ'), ('MatPlotLib', 'NNP'), ('.', '.')]

 (S
  Fortunately/RB
  ,/,
  (NP python/NN)
  makes/VBZ
  (NP task/NN)
  converting/VBG
  (NP textual/JJ data/NNS graphics/NNS)
  relatively/RB
  easy/JJ
  using/VBG
  (NP libraries/NNS)
  ,/,
  one/CD
  (NP commonly/NN)
  used/VBN
  (NP library/JJ MatPlotLib/NNP)
  ./.) 


>> Noun Phrases are: 
 ['python', 'task', 'textual data graphics', 'libraries', 'commonly', 'library MatPlotLib']

>> Named Entities are: 
 [('ORGANIZATION', 'MatPlotLib')] 

>> Stemming using Porter Stemmer: 
 [('Fortunately', 'fortun'), (',', ','), ('python', 'python'), ('makes', 'make'), ('task', 'task'), ('converting', 'convert'), ('textual', 'textual'), ('data', 'data'), ('graphics', 'graphic'), ('relatively', 'rel'), ('easy', 'easi'), ('using', 'use'), ('libraries', 'librari'), (',', ','), ('one', 'one'), ('commonly', 'commonli'), ('used', 'use'), ('library', 'librari'), ('MatPlotLib', 'matplotlib'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Fortunately', 'fortun'), (',', ','), ('python', 'python'), ('makes', 'make'), ('task', 'task'), ('converting', 'convert'), ('textual', 'textual'), ('data', 'data'), ('graphics', 'graphic'), ('relatively', 'relat'), ('easy', 'easi'), ('using', 'use'), ('libraries', 'librari'), (',', ','), ('one', 'one'), ('commonly', 'common'), ('used', 'use'), ('library', 'librari'), ('MatPlotLib', 'matplotlib'), ('.', '.')]

>> Lemmatization: 
 [('Fortunately', 'Fortunately'), (',', ','), ('python', 'python'), ('makes', 'make'), ('task', 'task'), ('converting', 'converting'), ('textual', 'textual'), ('data', 'data'), ('graphics', 'graphic'), ('relatively', 'relatively'), ('easy', 'easy'), ('using', 'using'), ('libraries', 'library'), (',', ','), ('one', 'one'), ('commonly', 'commonly'), ('used', 'used'), ('library', 'library'), ('MatPlotLib', 'MatPlotLib'), ('.', '.')]



============================ Sentence 4 =============================

Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python. 


>> Tokens are: 
 ['Matplotlib', 'comprehensive', 'library', 'creating', 'static', ',', 'animated', ',', 'interactive', 'visualizations', 'Python', '.']

>> Bigrams are: 
 [('Matplotlib', 'comprehensive'), ('comprehensive', 'library'), ('library', 'creating'), ('creating', 'static'), ('static', ','), (',', 'animated'), ('animated', ','), (',', 'interactive'), ('interactive', 'visualizations'), ('visualizations', 'Python'), ('Python', '.')]

>> Trigrams are: 
 [('Matplotlib', 'comprehensive', 'library'), ('comprehensive', 'library', 'creating'), ('library', 'creating', 'static'), ('creating', 'static', ','), ('static', ',', 'animated'), (',', 'animated', ','), ('animated', ',', 'interactive'), (',', 'interactive', 'visualizations'), ('interactive', 'visualizations', 'Python'), ('visualizations', 'Python', '.')]

>> POS Tags are: 
 [('Matplotlib', 'NNP'), ('comprehensive', 'JJ'), ('library', 'NN'), ('creating', 'VBG'), ('static', 'JJ'), (',', ','), ('animated', 'VBN'), (',', ','), ('interactive', 'JJ'), ('visualizations', 'NNS'), ('Python', 'NNP'), ('.', '.')]

 (S
  (NP Matplotlib/NNP)
  (NP comprehensive/JJ library/NN)
  creating/VBG
  static/JJ
  ,/,
  animated/VBN
  ,/,
  (NP interactive/JJ visualizations/NNS Python/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Matplotlib', 'comprehensive library', 'interactive visualizations Python']

>> Named Entities are: 
 [('GPE', 'Matplotlib'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Matplotlib', 'matplotlib'), ('comprehensive', 'comprehens'), ('library', 'librari'), ('creating', 'creat'), ('static', 'static'), (',', ','), ('animated', 'anim'), (',', ','), ('interactive', 'interact'), ('visualizations', 'visual'), ('Python', 'python'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Matplotlib', 'matplotlib'), ('comprehensive', 'comprehens'), ('library', 'librari'), ('creating', 'creat'), ('static', 'static'), (',', ','), ('animated', 'anim'), (',', ','), ('interactive', 'interact'), ('visualizations', 'visual'), ('Python', 'python'), ('.', '.')]

>> Lemmatization: 
 [('Matplotlib', 'Matplotlib'), ('comprehensive', 'comprehensive'), ('library', 'library'), ('creating', 'creating'), ('static', 'static'), (',', ','), ('animated', 'animated'), (',', ','), ('interactive', 'interactive'), ('visualizations', 'visualization'), ('Python', 'Python'), ('.', '.')]



============================ Sentence 5 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Graph A Graph or chart is simply a visual representation of numeric data. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Graph', 'A', 'Graph', 'chart', 'simply', 'visual', 'representation', 'numeric', 'data', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Graph'), ('Graph', 'A'), ('A', 'Graph'), ('Graph', 'chart'), ('chart', 'simply'), ('simply', 'visual'), ('visual', 'representation'), ('representation', 'numeric'), ('numeric', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Graph'), ('›', 'Graph', 'A'), ('Graph', 'A', 'Graph'), ('A', 'Graph', 'chart'), ('Graph', 'chart', 'simply'), ('chart', 'simply', 'visual'), ('simply', 'visual', 'representation'), ('visual', 'representation', 'numeric'), ('representation', 'numeric', 'data'), ('numeric', 'data', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Graph', 'NNP'), ('A', 'NNP'), ('Graph', 'NNP'), ('chart', 'NN'), ('simply', 'RB'), ('visual', 'JJ'), ('representation', 'NN'), ('numeric', 'JJ'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Graph/NNP A/NNP Graph/NNP chart/NN)
  simply/RB
  (NP visual/JJ representation/NN)
  (NP numeric/JJ data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Graph A Graph chart', 'visual representation', 'numeric data']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Graph', 'graph'), ('A', 'a'), ('Graph', 'graph'), ('chart', 'chart'), ('simply', 'simpli'), ('visual', 'visual'), ('representation', 'represent'), ('numeric', 'numer'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Graph', 'graph'), ('A', 'a'), ('Graph', 'graph'), ('chart', 'chart'), ('simply', 'simpli'), ('visual', 'visual'), ('representation', 'represent'), ('numeric', 'numer'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Graph', 'Graph'), ('A', 'A'), ('Graph', 'Graph'), ('chart', 'chart'), ('simply', 'simply'), ('visual', 'visual'), ('representation', 'representation'), ('numeric', 'numeric'), ('data', 'data'), ('.', '.')]



============================ Sentence 6 =============================

MatPlotLib makes a large number of graph and chart types. 


>> Tokens are: 
 ['MatPlotLib', 'makes', 'large', 'number', 'graph', 'chart', 'types', '.']

>> Bigrams are: 
 [('MatPlotLib', 'makes'), ('makes', 'large'), ('large', 'number'), ('number', 'graph'), ('graph', 'chart'), ('chart', 'types'), ('types', '.')]

>> Trigrams are: 
 [('MatPlotLib', 'makes', 'large'), ('makes', 'large', 'number'), ('large', 'number', 'graph'), ('number', 'graph', 'chart'), ('graph', 'chart', 'types'), ('chart', 'types', '.')]

>> POS Tags are: 
 [('MatPlotLib', 'NNP'), ('makes', 'VBZ'), ('large', 'JJ'), ('number', 'NN'), ('graph', 'JJ'), ('chart', 'JJ'), ('types', 'NNS'), ('.', '.')]

 (S
  (NP MatPlotLib/NNP)
  makes/VBZ
  (NP large/JJ number/NN)
  (NP graph/JJ chart/JJ types/NNS)
  ./.) 


>> Noun Phrases are: 
 ['MatPlotLib', 'large number', 'graph chart types']

>> Named Entities are: 
 [('ORGANIZATION', 'MatPlotLib')] 

>> Stemming using Porter Stemmer: 
 [('MatPlotLib', 'matplotlib'), ('makes', 'make'), ('large', 'larg'), ('number', 'number'), ('graph', 'graph'), ('chart', 'chart'), ('types', 'type'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('MatPlotLib', 'matplotlib'), ('makes', 'make'), ('large', 'larg'), ('number', 'number'), ('graph', 'graph'), ('chart', 'chart'), ('types', 'type'), ('.', '.')]

>> Lemmatization: 
 [('MatPlotLib', 'MatPlotLib'), ('makes', 'make'), ('large', 'large'), ('number', 'number'), ('graph', 'graph'), ('chart', 'chart'), ('types', 'type'), ('.', '.')]



============================ Sentence 7 =============================

We can choose any of the common graph such as line charts, histogram, scatter plots etc....   Line Chart  Histogram  Scatter Plot  3D Plot  Images  Bar Chart  Pie Chart Etc.......     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Plot To define a plot, we need some values, the matplotlib.pyplot module and an idea of what we want to display. 


>> Tokens are: 
 ['We', 'choose', 'common', 'graph', 'line', 'charts', ',', 'histogram', ',', 'scatter', 'plots', 'etc', '....', 'Line', 'Chart', 'Histogram', 'Scatter', 'Plot', '3D', 'Plot', 'Images', 'Bar', 'Chart', 'Pie', 'Chart', 'Etc', '.......', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', 'To', 'define', 'plot', ',', 'need', 'values', ',', 'matplotlib.pyplot', 'module', 'idea', 'want', 'display', '.']

>> Bigrams are: 
 [('We', 'choose'), ('choose', 'common'), ('common', 'graph'), ('graph', 'line'), ('line', 'charts'), ('charts', ','), (',', 'histogram'), ('histogram', ','), (',', 'scatter'), ('scatter', 'plots'), ('plots', 'etc'), ('etc', '....'), ('....', 'Line'), ('Line', 'Chart'), ('Chart', 'Histogram'), ('Histogram', 'Scatter'), ('Scatter', 'Plot'), ('Plot', '3D'), ('3D', 'Plot'), ('Plot', 'Images'), ('Images', 'Bar'), ('Bar', 'Chart'), ('Chart', 'Pie'), ('Pie', 'Chart'), ('Chart', 'Etc'), ('Etc', '.......'), ('.......', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', 'To'), ('To', 'define'), ('define', 'plot'), ('plot', ','), (',', 'need'), ('need', 'values'), ('values', ','), (',', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'module'), ('module', 'idea'), ('idea', 'want'), ('want', 'display'), ('display', '.')]

>> Trigrams are: 
 [('We', 'choose', 'common'), ('choose', 'common', 'graph'), ('common', 'graph', 'line'), ('graph', 'line', 'charts'), ('line', 'charts', ','), ('charts', ',', 'histogram'), (',', 'histogram', ','), ('histogram', ',', 'scatter'), (',', 'scatter', 'plots'), ('scatter', 'plots', 'etc'), ('plots', 'etc', '....'), ('etc', '....', 'Line'), ('....', 'Line', 'Chart'), ('Line', 'Chart', 'Histogram'), ('Chart', 'Histogram', 'Scatter'), ('Histogram', 'Scatter', 'Plot'), ('Scatter', 'Plot', '3D'), ('Plot', '3D', 'Plot'), ('3D', 'Plot', 'Images'), ('Plot', 'Images', 'Bar'), ('Images', 'Bar', 'Chart'), ('Bar', 'Chart', 'Pie'), ('Chart', 'Pie', 'Chart'), ('Pie', 'Chart', 'Etc'), ('Chart', 'Etc', '.......'), ('Etc', '.......', 'Prof.'), ('.......', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', 'To'), ('Plot', 'To', 'define'), ('To', 'define', 'plot'), ('define', 'plot', ','), ('plot', ',', 'need'), (',', 'need', 'values'), ('need', 'values', ','), ('values', ',', 'matplotlib.pyplot'), (',', 'matplotlib.pyplot', 'module'), ('matplotlib.pyplot', 'module', 'idea'), ('module', 'idea', 'want'), ('idea', 'want', 'display'), ('want', 'display', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('choose', 'VBP'), ('common', 'JJ'), ('graph', 'NN'), ('line', 'NN'), ('charts', 'NNS'), (',', ','), ('histogram', 'NN'), (',', ','), ('scatter', 'JJ'), ('plots', 'NNS'), ('etc', 'VBP'), ('....', 'JJ'), ('Line', 'NNP'), ('Chart', 'NNP'), ('Histogram', 'NNP'), ('Scatter', 'NNP'), ('Plot', 'NNP'), ('3D', 'CD'), ('Plot', 'NNP'), ('Images', 'NNP'), ('Bar', 'NNP'), ('Chart', 'NNP'), ('Pie', 'NNP'), ('Chart', 'NNP'), ('Etc', 'NNP'), ('.......', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('To', 'TO'), ('define', 'VB'), ('plot', 'NN'), (',', ','), ('need', 'NN'), ('values', 'NNS'), (',', ','), ('matplotlib.pyplot', 'NN'), ('module', 'NN'), ('idea', 'NN'), ('want', 'VBP'), ('display', 'NN'), ('.', '.')]

 (S
  We/PRP
  choose/VBP
  (NP common/JJ graph/NN line/NN charts/NNS)
  ,/,
  (NP histogram/NN)
  ,/,
  (NP scatter/JJ plots/NNS)
  etc/VBP
  (NP ..../JJ Line/NNP Chart/NNP Histogram/NNP Scatter/NNP Plot/NNP)
  3D/CD
  (NP
    Plot/NNP
    Images/NNP
    Bar/NNP
    Chart/NNP
    Pie/NNP
    Chart/NNP
    Etc/NNP
    ......./NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP)
  To/TO
  define/VB
  (NP plot/NN)
  ,/,
  (NP need/NN values/NNS)
  ,/,
  (NP matplotlib.pyplot/NN module/NN idea/NN)
  want/VBP
  (NP display/NN)
  ./.) 


>> Noun Phrases are: 
 ['common graph line charts', 'histogram', 'scatter plots', '.... Line Chart Histogram Scatter Plot', 'Plot Images Bar Chart Pie Chart Etc ....... Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot', 'plot', 'need values', 'matplotlib.pyplot module idea', 'display']

>> Named Entities are: 
 [('PERSON', 'Line Chart Histogram Scatter'), ('PERSON', 'Images Bar Chart Pie Chart Etc'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('choose', 'choos'), ('common', 'common'), ('graph', 'graph'), ('line', 'line'), ('charts', 'chart'), (',', ','), ('histogram', 'histogram'), (',', ','), ('scatter', 'scatter'), ('plots', 'plot'), ('etc', 'etc'), ('....', '....'), ('Line', 'line'), ('Chart', 'chart'), ('Histogram', 'histogram'), ('Scatter', 'scatter'), ('Plot', 'plot'), ('3D', '3d'), ('Plot', 'plot'), ('Images', 'imag'), ('Bar', 'bar'), ('Chart', 'chart'), ('Pie', 'pie'), ('Chart', 'chart'), ('Etc', 'etc'), ('.......', '.......'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('To', 'to'), ('define', 'defin'), ('plot', 'plot'), (',', ','), ('need', 'need'), ('values', 'valu'), (',', ','), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('module', 'modul'), ('idea', 'idea'), ('want', 'want'), ('display', 'display'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('choose', 'choos'), ('common', 'common'), ('graph', 'graph'), ('line', 'line'), ('charts', 'chart'), (',', ','), ('histogram', 'histogram'), (',', ','), ('scatter', 'scatter'), ('plots', 'plot'), ('etc', 'etc'), ('....', '....'), ('Line', 'line'), ('Chart', 'chart'), ('Histogram', 'histogram'), ('Scatter', 'scatter'), ('Plot', 'plot'), ('3D', '3d'), ('Plot', 'plot'), ('Images', 'imag'), ('Bar', 'bar'), ('Chart', 'chart'), ('Pie', 'pie'), ('Chart', 'chart'), ('Etc', 'etc'), ('.......', '.......'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('To', 'to'), ('define', 'defin'), ('plot', 'plot'), (',', ','), ('need', 'need'), ('values', 'valu'), (',', ','), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('module', 'modul'), ('idea', 'idea'), ('want', 'want'), ('display', 'display'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('choose', 'choose'), ('common', 'common'), ('graph', 'graph'), ('line', 'line'), ('charts', 'chart'), (',', ','), ('histogram', 'histogram'), (',', ','), ('scatter', 'scatter'), ('plots', 'plot'), ('etc', 'etc'), ('....', '....'), ('Line', 'Line'), ('Chart', 'Chart'), ('Histogram', 'Histogram'), ('Scatter', 'Scatter'), ('Plot', 'Plot'), ('3D', '3D'), ('Plot', 'Plot'), ('Images', 'Images'), ('Bar', 'Bar'), ('Chart', 'Chart'), ('Pie', 'Pie'), ('Chart', 'Chart'), ('Etc', 'Etc'), ('.......', '.......'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('To', 'To'), ('define', 'define'), ('plot', 'plot'), (',', ','), ('need', 'need'), ('values', 'value'), (',', ','), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('module', 'module'), ('idea', 'idea'), ('want', 'want'), ('display', 'display'), ('.', '.')]



============================ Sentence 8 =============================

In this case, the code tells the plt.plot() function to create a plot using x-axis between 1 and 11 and y-axis as per values list. 


>> Tokens are: 
 ['In', 'case', ',', 'code', 'tells', 'plt.plot', '(', ')', 'function', 'create', 'plot', 'using', 'x-axis', '1', '11', 'y-axis', 'per', 'values', 'list', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', ','), (',', 'code'), ('code', 'tells'), ('tells', 'plt.plot'), ('plt.plot', '('), ('(', ')'), (')', 'function'), ('function', 'create'), ('create', 'plot'), ('plot', 'using'), ('using', 'x-axis'), ('x-axis', '1'), ('1', '11'), ('11', 'y-axis'), ('y-axis', 'per'), ('per', 'values'), ('values', 'list'), ('list', '.')]

>> Trigrams are: 
 [('In', 'case', ','), ('case', ',', 'code'), (',', 'code', 'tells'), ('code', 'tells', 'plt.plot'), ('tells', 'plt.plot', '('), ('plt.plot', '(', ')'), ('(', ')', 'function'), (')', 'function', 'create'), ('function', 'create', 'plot'), ('create', 'plot', 'using'), ('plot', 'using', 'x-axis'), ('using', 'x-axis', '1'), ('x-axis', '1', '11'), ('1', '11', 'y-axis'), ('11', 'y-axis', 'per'), ('y-axis', 'per', 'values'), ('per', 'values', 'list'), ('values', 'list', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), (',', ','), ('code', 'NN'), ('tells', 'NNS'), ('plt.plot', 'NN'), ('(', '('), (')', ')'), ('function', 'NN'), ('create', 'NN'), ('plot', 'NN'), ('using', 'VBG'), ('x-axis', 'JJ'), ('1', 'CD'), ('11', 'CD'), ('y-axis', 'JJ'), ('per', 'IN'), ('values', 'NNS'), ('list', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP case/NN)
  ,/,
  (NP code/NN tells/NNS plt.plot/NN)
  (/(
  )/)
  (NP function/NN create/NN plot/NN)
  using/VBG
  x-axis/JJ
  1/CD
  11/CD
  y-axis/JJ
  per/IN
  (NP values/NNS list/NN)
  ./.) 


>> Noun Phrases are: 
 ['case', 'code tells plt.plot', 'function create plot', 'values list']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('code', 'code'), ('tells', 'tell'), ('plt.plot', 'plt.plot'), ('(', '('), (')', ')'), ('function', 'function'), ('create', 'creat'), ('plot', 'plot'), ('using', 'use'), ('x-axis', 'x-axi'), ('1', '1'), ('11', '11'), ('y-axis', 'y-axi'), ('per', 'per'), ('values', 'valu'), ('list', 'list'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), (',', ','), ('code', 'code'), ('tells', 'tell'), ('plt.plot', 'plt.plot'), ('(', '('), (')', ')'), ('function', 'function'), ('create', 'creat'), ('plot', 'plot'), ('using', 'use'), ('x-axis', 'x-axi'), ('1', '1'), ('11', '11'), ('y-axis', 'y-axi'), ('per', 'per'), ('values', 'valu'), ('list', 'list'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), (',', ','), ('code', 'code'), ('tells', 'tell'), ('plt.plot', 'plt.plot'), ('(', '('), (')', ')'), ('function', 'function'), ('create', 'create'), ('plot', 'plot'), ('using', 'using'), ('x-axis', 'x-axis'), ('1', '1'), ('11', '11'), ('y-axis', 'y-axis'), ('per', 'per'), ('values', 'value'), ('list', 'list'), ('.', '.')]



============================ Sentence 9 =============================

import matplotlib.pyplot as plt %matplotlib inline values = [5,8,9,4,1,6,7,2,3,8] plt.plot(range(1,11),values) plt.show() 1 2 3 4 5 plotDemo1.py        Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Plot – Drawing multiple lines We can draw multiple lines in a plot by making multiple plt.plot() calls. 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'inline', 'values', '=', '[', '5,8,9,4,1,6,7,2,3,8', ']', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', 'plotDemo1.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', '–', 'Drawing', 'multiple', 'lines', 'We', 'draw', 'multiple', 'lines', 'plot', 'making', 'multiple', 'plt.plot', '(', ')', 'calls', '.']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'values'), ('values', '='), ('=', '['), ('[', '5,8,9,4,1,6,7,2,3,8'), ('5,8,9,4,1,6,7,2,3,8', ']'), (']', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values'), ('values', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', 'plotDemo1.py'), ('plotDemo1.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', '–'), ('–', 'Drawing'), ('Drawing', 'multiple'), ('multiple', 'lines'), ('lines', 'We'), ('We', 'draw'), ('draw', 'multiple'), ('multiple', 'lines'), ('lines', 'plot'), ('plot', 'making'), ('making', 'multiple'), ('multiple', 'plt.plot'), ('plt.plot', '('), ('(', ')'), (')', 'calls'), ('calls', '.')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'values'), ('inline', 'values', '='), ('values', '=', '['), ('=', '[', '5,8,9,4,1,6,7,2,3,8'), ('[', '5,8,9,4,1,6,7,2,3,8', ']'), ('5,8,9,4,1,6,7,2,3,8', ']', 'plt.plot'), (']', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values'), (',', 'values', ')'), ('values', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', 'plotDemo1.py'), ('5', 'plotDemo1.py', 'Prof.'), ('plotDemo1.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', '–'), ('Plot', '–', 'Drawing'), ('–', 'Drawing', 'multiple'), ('Drawing', 'multiple', 'lines'), ('multiple', 'lines', 'We'), ('lines', 'We', 'draw'), ('We', 'draw', 'multiple'), ('draw', 'multiple', 'lines'), ('multiple', 'lines', 'plot'), ('lines', 'plot', 'making'), ('plot', 'making', 'multiple'), ('making', 'multiple', 'plt.plot'), ('multiple', 'plt.plot', '('), ('plt.plot', '(', ')'), ('(', ')', 'calls'), (')', 'calls', '.')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('values', 'NNS'), ('=', 'VBP'), ('[', '$'), ('5,8,9,4,1,6,7,2,3,8', 'CD'), (']', 'NNP'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values', 'NNS'), (')', ')'), ('plt.show', 'VBP'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('plotDemo1.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('–', 'NNP'), ('Drawing', 'NNP'), ('multiple', 'JJ'), ('lines', 'NNS'), ('We', 'PRP'), ('draw', 'VBP'), ('multiple', 'JJ'), ('lines', 'NNS'), ('plot', 'NN'), ('making', 'VBG'), ('multiple', 'JJ'), ('plt.plot', 'NN'), ('(', '('), (')', ')'), ('calls', 'VBZ'), ('.', '.')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ inline/NN values/NNS)
  =/VBP
  [/$
  5,8,9,4,1,6,7,2,3,8/CD
  (NP ]/NNP plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values/NNS)
  )/)
  plt.show/VBP
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  (NP plotDemo1.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP –/NNP Drawing/NNP)
  (NP multiple/JJ lines/NNS)
  We/PRP
  draw/VBP
  (NP multiple/JJ lines/NNS plot/NN)
  making/VBG
  (NP multiple/JJ plt.plot/NN)
  (/(
  )/)
  calls/VBZ
  ./.) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt %', 'matplotlib inline values', '] plt.plot', 'range', 'values', 'plotDemo1.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot – Drawing', 'multiple lines', 'multiple lines plot', 'multiple plt.plot']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values', 'valu'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values', 'valu'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Drawing', 'draw'), ('multiple', 'multipl'), ('lines', 'line'), ('We', 'we'), ('draw', 'draw'), ('multiple', 'multipl'), ('lines', 'line'), ('plot', 'plot'), ('making', 'make'), ('multiple', 'multipl'), ('plt.plot', 'plt.plot'), ('(', '('), (')', ')'), ('calls', 'call'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values', 'valu'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values', 'valu'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Drawing', 'draw'), ('multiple', 'multipl'), ('lines', 'line'), ('We', 'we'), ('draw', 'draw'), ('multiple', 'multipl'), ('lines', 'line'), ('plot', 'plot'), ('making', 'make'), ('multiple', 'multipl'), ('plt.plot', 'plt.plot'), ('(', '('), (')', ')'), ('calls', 'call'), ('.', '.')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('values', 'value'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values', 'value'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('plotDemo1.py', 'plotDemo1.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('–', '–'), ('Drawing', 'Drawing'), ('multiple', 'multiple'), ('lines', 'line'), ('We', 'We'), ('draw', 'draw'), ('multiple', 'multiple'), ('lines', 'line'), ('plot', 'plot'), ('making', 'making'), ('multiple', 'multiple'), ('plt.plot', 'plt.plot'), ('(', '('), (')', ')'), ('calls', 'call'), ('.', '.')]



============================ Sentence 10 =============================

import matplotlib.pyplot as plt %matplotlib inline values1 = [5,8,9,4,1,6,7,2,3,8] values2 = [8,3,2,7,6,1,4,9,8,5] plt.plot(range(1,11),values1) plt.plot(range(1,11),values2) plt.show() 1 2 3 4 5 6 7 plotDemo1.py         Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Plot – Export graphs/plots We can export/save our plots on a drive using savefig() method. 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'inline', 'values1', '=', '[', '5,8,9,4,1,6,7,2,3,8', ']', 'values2', '=', '[', '8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values1', ')', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values2', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', 'plotDemo1.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', '–', 'Export', 'graphs/plots', 'We', 'export/save', 'plots', 'drive', 'using', 'savefig', '(', ')', 'method', '.']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'values1'), ('values1', '='), ('=', '['), ('[', '5,8,9,4,1,6,7,2,3,8'), ('5,8,9,4,1,6,7,2,3,8', ']'), (']', 'values2'), ('values2', '='), ('=', '['), ('[', '8,3,2,7,6,1,4,9,8,5'), ('8,3,2,7,6,1,4,9,8,5', ']'), (']', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values1'), ('values1', ')'), (')', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values2'), ('values2', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', 'plotDemo1.py'), ('plotDemo1.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', '–'), ('–', 'Export'), ('Export', 'graphs/plots'), ('graphs/plots', 'We'), ('We', 'export/save'), ('export/save', 'plots'), ('plots', 'drive'), ('drive', 'using'), ('using', 'savefig'), ('savefig', '('), ('(', ')'), (')', 'method'), ('method', '.')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'values1'), ('inline', 'values1', '='), ('values1', '=', '['), ('=', '[', '5,8,9,4,1,6,7,2,3,8'), ('[', '5,8,9,4,1,6,7,2,3,8', ']'), ('5,8,9,4,1,6,7,2,3,8', ']', 'values2'), (']', 'values2', '='), ('values2', '=', '['), ('=', '[', '8,3,2,7,6,1,4,9,8,5'), ('[', '8,3,2,7,6,1,4,9,8,5', ']'), ('8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot'), (']', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values1'), (',', 'values1', ')'), ('values1', ')', 'plt.plot'), (')', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values2'), (',', 'values2', ')'), ('values2', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', 'plotDemo1.py'), ('7', 'plotDemo1.py', 'Prof.'), ('plotDemo1.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', '–'), ('Plot', '–', 'Export'), ('–', 'Export', 'graphs/plots'), ('Export', 'graphs/plots', 'We'), ('graphs/plots', 'We', 'export/save'), ('We', 'export/save', 'plots'), ('export/save', 'plots', 'drive'), ('plots', 'drive', 'using'), ('drive', 'using', 'savefig'), ('using', 'savefig', '('), ('savefig', '(', ')'), ('(', ')', 'method'), (')', 'method', '.')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('values1', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('5,8,9,4,1,6,7,2,3,8', 'CD'), (']', 'NN'), ('values2', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('8,3,2,7,6,1,4,9,8,5', 'CD'), (']', 'NN'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values1', 'NN'), (')', ')'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values2', 'NN'), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('plotDemo1.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('–', 'NNP'), ('Export', 'NNP'), ('graphs/plots', 'VBZ'), ('We', 'PRP'), ('export/save', 'VBP'), ('plots', 'NNS'), ('drive', 'VBP'), ('using', 'VBG'), ('savefig', 'NN'), ('(', '('), (')', ')'), ('method', 'NN'), ('.', '.')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ inline/NN values1/NN =/NNP)
  [/VBZ
  5,8,9,4,1,6,7,2,3,8/CD
  (NP ]/NN values2/NN =/NNP)
  [/VBZ
  8,3,2,7,6,1,4,9,8,5/CD
  (NP ]/NN plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values1/NN)
  )/)
  (NP plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values2/NN)
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  (NP plotDemo1.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP –/NNP Export/NNP)
  graphs/plots/VBZ
  We/PRP
  export/save/VBP
  (NP plots/NNS)
  drive/VBP
  using/VBG
  (NP savefig/NN)
  (/(
  )/)
  (NP method/NN)
  ./.) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt %', 'matplotlib inline values1 =', '] values2 =', '] plt.plot', 'range', 'values1', 'plt.plot', 'range', 'values2', 'plt.show', 'plotDemo1.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot – Export', 'plots', 'savefig', 'method']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Export', 'export'), ('graphs/plots', 'graphs/plot'), ('We', 'we'), ('export/save', 'export/sav'), ('plots', 'plot'), ('drive', 'drive'), ('using', 'use'), ('savefig', 'savefig'), ('(', '('), (')', ')'), ('method', 'method'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Export', 'export'), ('graphs/plots', 'graphs/plot'), ('We', 'we'), ('export/save', 'export/sav'), ('plots', 'plot'), ('drive', 'drive'), ('using', 'use'), ('savefig', 'savefig'), ('(', '('), (')', ')'), ('method', 'method'), ('.', '.')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('plotDemo1.py', 'plotDemo1.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('–', '–'), ('Export', 'Export'), ('graphs/plots', 'graphs/plots'), ('We', 'We'), ('export/save', 'export/save'), ('plots', 'plot'), ('drive', 'drive'), ('using', 'using'), ('savefig', 'savefig'), ('(', '('), (')', ')'), ('method', 'method'), ('.', '.')]



============================ Sentence 11 =============================

Possible values for the format parameters are png svg pdf Etc...      import matplotlib.pyplot as plt %matplotlib inline values1 = [5,8,9,4,1,6,7,2,3,8] values2 = [8,3,2,7,6,1,4,9,8,5] plt.plot(range(1,11),values1) plt.plot(range(1,11),values2) #plt.show() plt.savefig('SaveToPath.png',format='png') 1 2 3 4 5 6 7 8 plotDemo1.py      SaveToPath.png    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›   Plot – Axis, Ticks and Grid We can access and format the axis, ticks and grid on the plot using the axis() method of the matplotlib.pyplot.plt import matplotlib.pyplot as plt %matplotlib notebook values = [5,8,9,4,1,6,7,2,3,8] ax = plt.axes() ax.set_xlim([0,50]) ax.set_ylim([-10,10]) ax.set_xticks([0,5,10,15,20,25,30,35,40,45,50]) ax.set_yticks([-10,-8,-6,-4,-2,0,2,4,6,8,10]) ax.grid() plt.plot(range(1,11),values) 1 2 3 4 5 6 7 8 9 10 plotDemo1.py    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  import matplotlib.pyplot as plt %matplotlib inline values1 = [5,8,9,4,1,6,7,2,3,8] values2 = [8,3,2,7,6,1,4,9,8,5] plt.plot(range(1,11),values1,c='r',lw=1,ls='--',marker='>') plt.plot(range(1,11),values2,c='b',lw=2,ls=':',marker='o') plt.show()  Plot – Line Appearance We need different line styles in order to differentiate when having multiple lines in the same plot, we can achieve this using many parameters, some of them are listed below. 


>> Tokens are: 
 ['Possible', 'values', 'format', 'parameters', 'png', 'svg', 'pdf', 'Etc', '...', 'import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'inline', 'values1', '=', '[', '5,8,9,4,1,6,7,2,3,8', ']', 'values2', '=', '[', '8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values1', ')', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values2', ')', '#', 'plt.show', '(', ')', 'plt.savefig', '(', "'SaveToPath.png", "'", ',', "format='png", "'", ')', '1', '2', '3', '4', '5', '6', '7', '8', 'plotDemo1.py', 'SaveToPath.png', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', '–', 'Axis', ',', 'Ticks', 'Grid', 'We', 'access', 'format', 'axis', ',', 'ticks', 'grid', 'plot', 'using', 'axis', '(', ')', 'method', 'matplotlib.pyplot.plt', 'import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'notebook', 'values', '=', '[', '5,8,9,4,1,6,7,2,3,8', ']', 'ax', '=', 'plt.axes', '(', ')', 'ax.set_xlim', '(', '[', '0,50', ']', ')', 'ax.set_ylim', '(', '[', '-10,10', ']', ')', 'ax.set_xticks', '(', '[', '0,5,10,15,20,25,30,35,40,45,50', ']', ')', 'ax.set_yticks', '(', '[', '-10', ',', '-8', ',', '-6', ',', '-4', ',', '-2,0,2,4,6,8,10', ']', ')', 'ax.grid', '(', ')', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values', ')', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'plotDemo1.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'inline', 'values1', '=', '[', '5,8,9,4,1,6,7,2,3,8', ']', 'values2', '=', '[', '8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values1', ',', 'c=', "'", 'r', "'", ',', 'lw=1', ',', 'ls=', "'", '--', "'", ',', 'marker=', "'", '>', "'", ')', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values2', ',', 'c=', "'", 'b', "'", ',', 'lw=2', ',', 'ls=', "'", ':', "'", ',', 'marker=', "'", "'", ')', 'plt.show', '(', ')', 'Plot', '–', 'Line', 'Appearance', 'We', 'need', 'different', 'line', 'styles', 'order', 'differentiate', 'multiple', 'lines', 'plot', ',', 'achieve', 'using', 'many', 'parameters', ',', 'listed', '.']

>> Bigrams are: 
 [('Possible', 'values'), ('values', 'format'), ('format', 'parameters'), ('parameters', 'png'), ('png', 'svg'), ('svg', 'pdf'), ('pdf', 'Etc'), ('Etc', '...'), ('...', 'import'), ('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'values1'), ('values1', '='), ('=', '['), ('[', '5,8,9,4,1,6,7,2,3,8'), ('5,8,9,4,1,6,7,2,3,8', ']'), (']', 'values2'), ('values2', '='), ('=', '['), ('[', '8,3,2,7,6,1,4,9,8,5'), ('8,3,2,7,6,1,4,9,8,5', ']'), (']', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values1'), ('values1', ')'), (')', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values2'), ('values2', ')'), (')', '#'), ('#', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', 'plt.savefig'), ('plt.savefig', '('), ('(', "'SaveToPath.png"), ("'SaveToPath.png", "'"), ("'", ','), (',', "format='png"), ("format='png", "'"), ("'", ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', 'plotDemo1.py'), ('plotDemo1.py', 'SaveToPath.png'), ('SaveToPath.png', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', '–'), ('–', 'Axis'), ('Axis', ','), (',', 'Ticks'), ('Ticks', 'Grid'), ('Grid', 'We'), ('We', 'access'), ('access', 'format'), ('format', 'axis'), ('axis', ','), (',', 'ticks'), ('ticks', 'grid'), ('grid', 'plot'), ('plot', 'using'), ('using', 'axis'), ('axis', '('), ('(', ')'), (')', 'method'), ('method', 'matplotlib.pyplot.plt'), ('matplotlib.pyplot.plt', 'import'), ('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'notebook'), ('notebook', 'values'), ('values', '='), ('=', '['), ('[', '5,8,9,4,1,6,7,2,3,8'), ('5,8,9,4,1,6,7,2,3,8', ']'), (']', 'ax'), ('ax', '='), ('=', 'plt.axes'), ('plt.axes', '('), ('(', ')'), (')', 'ax.set_xlim'), ('ax.set_xlim', '('), ('(', '['), ('[', '0,50'), ('0,50', ']'), (']', ')'), (')', 'ax.set_ylim'), ('ax.set_ylim', '('), ('(', '['), ('[', '-10,10'), ('-10,10', ']'), (']', ')'), (')', 'ax.set_xticks'), ('ax.set_xticks', '('), ('(', '['), ('[', '0,5,10,15,20,25,30,35,40,45,50'), ('0,5,10,15,20,25,30,35,40,45,50', ']'), (']', ')'), (')', 'ax.set_yticks'), ('ax.set_yticks', '('), ('(', '['), ('[', '-10'), ('-10', ','), (',', '-8'), ('-8', ','), (',', '-6'), ('-6', ','), (',', '-4'), ('-4', ','), (',', '-2,0,2,4,6,8,10'), ('-2,0,2,4,6,8,10', ']'), (']', ')'), (')', 'ax.grid'), ('ax.grid', '('), ('(', ')'), (')', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values'), ('values', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', '9'), ('9', '10'), ('10', 'plotDemo1.py'), ('plotDemo1.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'import'), ('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'values1'), ('values1', '='), ('=', '['), ('[', '5,8,9,4,1,6,7,2,3,8'), ('5,8,9,4,1,6,7,2,3,8', ']'), (']', 'values2'), ('values2', '='), ('=', '['), ('[', '8,3,2,7,6,1,4,9,8,5'), ('8,3,2,7,6,1,4,9,8,5', ']'), (']', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values1'), ('values1', ','), (',', 'c='), ('c=', "'"), ("'", 'r'), ('r', "'"), ("'", ','), (',', 'lw=1'), ('lw=1', ','), (',', 'ls='), ('ls=', "'"), ("'", '--'), ('--', "'"), ("'", ','), (',', 'marker='), ('marker=', "'"), ("'", '>'), ('>', "'"), ("'", ')'), (')', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values2'), ('values2', ','), (',', 'c='), ('c=', "'"), ("'", 'b'), ('b', "'"), ("'", ','), (',', 'lw=2'), ('lw=2', ','), (',', 'ls='), ('ls=', "'"), ("'", ':'), (':', "'"), ("'", ','), (',', 'marker='), ('marker=', "'"), ("'", "'"), ("'", ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', 'Plot'), ('Plot', '–'), ('–', 'Line'), ('Line', 'Appearance'), ('Appearance', 'We'), ('We', 'need'), ('need', 'different'), ('different', 'line'), ('line', 'styles'), ('styles', 'order'), ('order', 'differentiate'), ('differentiate', 'multiple'), ('multiple', 'lines'), ('lines', 'plot'), ('plot', ','), (',', 'achieve'), ('achieve', 'using'), ('using', 'many'), ('many', 'parameters'), ('parameters', ','), (',', 'listed'), ('listed', '.')]

>> Trigrams are: 
 [('Possible', 'values', 'format'), ('values', 'format', 'parameters'), ('format', 'parameters', 'png'), ('parameters', 'png', 'svg'), ('png', 'svg', 'pdf'), ('svg', 'pdf', 'Etc'), ('pdf', 'Etc', '...'), ('Etc', '...', 'import'), ('...', 'import', 'matplotlib.pyplot'), ('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'values1'), ('inline', 'values1', '='), ('values1', '=', '['), ('=', '[', '5,8,9,4,1,6,7,2,3,8'), ('[', '5,8,9,4,1,6,7,2,3,8', ']'), ('5,8,9,4,1,6,7,2,3,8', ']', 'values2'), (']', 'values2', '='), ('values2', '=', '['), ('=', '[', '8,3,2,7,6,1,4,9,8,5'), ('[', '8,3,2,7,6,1,4,9,8,5', ']'), ('8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot'), (']', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values1'), (',', 'values1', ')'), ('values1', ')', 'plt.plot'), (')', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values2'), (',', 'values2', ')'), ('values2', ')', '#'), (')', '#', 'plt.show'), ('#', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', 'plt.savefig'), (')', 'plt.savefig', '('), ('plt.savefig', '(', "'SaveToPath.png"), ('(', "'SaveToPath.png", "'"), ("'SaveToPath.png", "'", ','), ("'", ',', "format='png"), (',', "format='png", "'"), ("format='png", "'", ')'), ("'", ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', 'plotDemo1.py'), ('8', 'plotDemo1.py', 'SaveToPath.png'), ('plotDemo1.py', 'SaveToPath.png', 'Prof.'), ('SaveToPath.png', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', '–'), ('Plot', '–', 'Axis'), ('–', 'Axis', ','), ('Axis', ',', 'Ticks'), (',', 'Ticks', 'Grid'), ('Ticks', 'Grid', 'We'), ('Grid', 'We', 'access'), ('We', 'access', 'format'), ('access', 'format', 'axis'), ('format', 'axis', ','), ('axis', ',', 'ticks'), (',', 'ticks', 'grid'), ('ticks', 'grid', 'plot'), ('grid', 'plot', 'using'), ('plot', 'using', 'axis'), ('using', 'axis', '('), ('axis', '(', ')'), ('(', ')', 'method'), (')', 'method', 'matplotlib.pyplot.plt'), ('method', 'matplotlib.pyplot.plt', 'import'), ('matplotlib.pyplot.plt', 'import', 'matplotlib.pyplot'), ('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'notebook'), ('matplotlib', 'notebook', 'values'), ('notebook', 'values', '='), ('values', '=', '['), ('=', '[', '5,8,9,4,1,6,7,2,3,8'), ('[', '5,8,9,4,1,6,7,2,3,8', ']'), ('5,8,9,4,1,6,7,2,3,8', ']', 'ax'), (']', 'ax', '='), ('ax', '=', 'plt.axes'), ('=', 'plt.axes', '('), ('plt.axes', '(', ')'), ('(', ')', 'ax.set_xlim'), (')', 'ax.set_xlim', '('), ('ax.set_xlim', '(', '['), ('(', '[', '0,50'), ('[', '0,50', ']'), ('0,50', ']', ')'), (']', ')', 'ax.set_ylim'), (')', 'ax.set_ylim', '('), ('ax.set_ylim', '(', '['), ('(', '[', '-10,10'), ('[', '-10,10', ']'), ('-10,10', ']', ')'), (']', ')', 'ax.set_xticks'), (')', 'ax.set_xticks', '('), ('ax.set_xticks', '(', '['), ('(', '[', '0,5,10,15,20,25,30,35,40,45,50'), ('[', '0,5,10,15,20,25,30,35,40,45,50', ']'), ('0,5,10,15,20,25,30,35,40,45,50', ']', ')'), (']', ')', 'ax.set_yticks'), (')', 'ax.set_yticks', '('), ('ax.set_yticks', '(', '['), ('(', '[', '-10'), ('[', '-10', ','), ('-10', ',', '-8'), (',', '-8', ','), ('-8', ',', '-6'), (',', '-6', ','), ('-6', ',', '-4'), (',', '-4', ','), ('-4', ',', '-2,0,2,4,6,8,10'), (',', '-2,0,2,4,6,8,10', ']'), ('-2,0,2,4,6,8,10', ']', ')'), (']', ')', 'ax.grid'), (')', 'ax.grid', '('), ('ax.grid', '(', ')'), ('(', ')', 'plt.plot'), (')', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values'), (',', 'values', ')'), ('values', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', '9'), ('8', '9', '10'), ('9', '10', 'plotDemo1.py'), ('10', 'plotDemo1.py', 'Prof.'), ('plotDemo1.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'import'), ('›', 'import', 'matplotlib.pyplot'), ('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'values1'), ('inline', 'values1', '='), ('values1', '=', '['), ('=', '[', '5,8,9,4,1,6,7,2,3,8'), ('[', '5,8,9,4,1,6,7,2,3,8', ']'), ('5,8,9,4,1,6,7,2,3,8', ']', 'values2'), (']', 'values2', '='), ('values2', '=', '['), ('=', '[', '8,3,2,7,6,1,4,9,8,5'), ('[', '8,3,2,7,6,1,4,9,8,5', ']'), ('8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot'), (']', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values1'), (',', 'values1', ','), ('values1', ',', 'c='), (',', 'c=', "'"), ('c=', "'", 'r'), ("'", 'r', "'"), ('r', "'", ','), ("'", ',', 'lw=1'), (',', 'lw=1', ','), ('lw=1', ',', 'ls='), (',', 'ls=', "'"), ('ls=', "'", '--'), ("'", '--', "'"), ('--', "'", ','), ("'", ',', 'marker='), (',', 'marker=', "'"), ('marker=', "'", '>'), ("'", '>', "'"), ('>', "'", ')'), ("'", ')', 'plt.plot'), (')', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values2'), (',', 'values2', ','), ('values2', ',', 'c='), (',', 'c=', "'"), ('c=', "'", 'b'), ("'", 'b', "'"), ('b', "'", ','), ("'", ',', 'lw=2'), (',', 'lw=2', ','), ('lw=2', ',', 'ls='), (',', 'ls=', "'"), ('ls=', "'", ':'), ("'", ':', "'"), (':', "'", ','), ("'", ',', 'marker='), (',', 'marker=', "'"), ('marker=', "'", "'"), ("'", "'", ')'), ("'", ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', 'Plot'), (')', 'Plot', '–'), ('Plot', '–', 'Line'), ('–', 'Line', 'Appearance'), ('Line', 'Appearance', 'We'), ('Appearance', 'We', 'need'), ('We', 'need', 'different'), ('need', 'different', 'line'), ('different', 'line', 'styles'), ('line', 'styles', 'order'), ('styles', 'order', 'differentiate'), ('order', 'differentiate', 'multiple'), ('differentiate', 'multiple', 'lines'), ('multiple', 'lines', 'plot'), ('lines', 'plot', ','), ('plot', ',', 'achieve'), (',', 'achieve', 'using'), ('achieve', 'using', 'many'), ('using', 'many', 'parameters'), ('many', 'parameters', ','), ('parameters', ',', 'listed'), (',', 'listed', '.')]

>> POS Tags are: 
 [('Possible', 'JJ'), ('values', 'NNS'), ('format', 'VBP'), ('parameters', 'NNS'), ('png', 'VBP'), ('svg', 'JJ'), ('pdf', 'NN'), ('Etc', 'NNP'), ('...', ':'), ('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('values1', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('5,8,9,4,1,6,7,2,3,8', 'CD'), (']', 'NN'), ('values2', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('8,3,2,7,6,1,4,9,8,5', 'CD'), (']', 'NN'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values1', 'NN'), (')', ')'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values2', 'RB'), (')', ')'), ('#', '#'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('plt.savefig', 'NN'), ('(', '('), ("'SaveToPath.png", 'POS'), ("'", "''"), (',', ','), ("format='png", 'VBP'), ("'", 'POS'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('plotDemo1.py', 'NN'), ('SaveToPath.png', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('–', 'NNP'), ('Axis', 'NNP'), (',', ','), ('Ticks', 'NNP'), ('Grid', 'NNP'), ('We', 'PRP'), ('access', 'NN'), ('format', 'JJ'), ('axis', 'NN'), (',', ','), ('ticks', 'NNS'), ('grid', 'VBP'), ('plot', 'NN'), ('using', 'VBG'), ('axis', 'NNS'), ('(', '('), (')', ')'), ('method', 'NN'), ('matplotlib.pyplot.plt', 'NN'), ('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('notebook', 'NN'), ('values', 'NNS'), ('=', 'VBP'), ('[', '$'), ('5,8,9,4,1,6,7,2,3,8', 'CD'), (']', 'NNP'), ('ax', 'NN'), ('=', 'NN'), ('plt.axes', 'NNS'), ('(', '('), (')', ')'), ('ax.set_xlim', 'NN'), ('(', '('), ('[', 'JJ'), ('0,50', 'CD'), (']', 'NN'), (')', ')'), ('ax.set_ylim', 'NN'), ('(', '('), ('[', 'JJ'), ('-10,10', 'NNP'), (']', 'NNP'), (')', ')'), ('ax.set_xticks', 'NNS'), ('(', '('), ('[', '$'), ('0,5,10,15,20,25,30,35,40,45,50', 'CD'), (']', 'NNP'), (')', ')'), ('ax.set_yticks', 'NNS'), ('(', '('), ('[', 'JJ'), ('-10', 'NN'), (',', ','), ('-8', 'NNP'), (',', ','), ('-6', 'NNP'), (',', ','), ('-4', 'NNP'), (',', ','), ('-2,0,2,4,6,8,10', 'NNP'), (']', 'NNP'), (')', ')'), ('ax.grid', 'FW'), ('(', '('), (')', ')'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values', 'NNS'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('9', 'CD'), ('10', 'CD'), ('plotDemo1.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('values1', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('5,8,9,4,1,6,7,2,3,8', 'CD'), (']', 'NN'), ('values2', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('8,3,2,7,6,1,4,9,8,5', 'CD'), (']', 'NN'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values1', 'FW'), (',', ','), ('c=', 'NN'), ("'", "''"), ('r', 'NN'), ("'", "''"), (',', ','), ('lw=1', 'NN'), (',', ','), ('ls=', 'NN'), ("'", "''"), ('--', ':'), ("'", "''"), (',', ','), ('marker=', 'NN'), ("'", "''"), ('>', 'NNP'), ("'", 'POS'), (')', ')'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values2', 'FW'), (',', ','), ('c=', 'NN'), ("'", "''"), ('b', 'NN'), ("'", "''"), (',', ','), ('lw=2', 'NN'), (',', ','), ('ls=', 'NN'), ("'", "''"), (':', ':'), ("'", "''"), (',', ','), ('marker=', 'FW'), ("'", 'POS'), ("'", 'POS'), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('Plot', 'NNP'), ('–', 'NNP'), ('Line', 'NNP'), ('Appearance', 'NNP'), ('We', 'PRP'), ('need', 'VBP'), ('different', 'JJ'), ('line', 'NN'), ('styles', 'NNS'), ('order', 'NN'), ('differentiate', 'NN'), ('multiple', 'NN'), ('lines', 'NNS'), ('plot', 'NN'), (',', ','), ('achieve', 'VBP'), ('using', 'VBG'), ('many', 'JJ'), ('parameters', 'NNS'), (',', ','), ('listed', 'VBN'), ('.', '.')]

 (S
  (NP Possible/JJ values/NNS)
  format/VBP
  (NP parameters/NNS)
  png/VBP
  (NP svg/JJ pdf/NN Etc/NNP)
  .../:
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ inline/NN values1/NN =/NNP)
  [/VBZ
  5,8,9,4,1,6,7,2,3,8/CD
  (NP ]/NN values2/NN =/NNP)
  [/VBZ
  8,3,2,7,6,1,4,9,8,5/CD
  (NP ]/NN plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values1/NN)
  )/)
  (NP plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  values2/RB
  )/)
  #/#
  (NP plt.show/NN)
  (/(
  )/)
  (NP plt.savefig/NN)
  (/(
  'SaveToPath.png/POS
  '/''
  ,/,
  format='png/VBP
  '/POS
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  (NP
    plotDemo1.py/NN
    SaveToPath.png/NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP –/NNP Axis/NNP)
  ,/,
  (NP Ticks/NNP Grid/NNP)
  We/PRP
  (NP access/NN)
  (NP format/JJ axis/NN)
  ,/,
  (NP ticks/NNS)
  grid/VBP
  (NP plot/NN)
  using/VBG
  (NP axis/NNS)
  (/(
  )/)
  (NP
    method/NN
    matplotlib.pyplot.plt/NN
    import/NN
    matplotlib.pyplot/NN
    plt/NN
    %/NN)
  (NP matplotlib/JJ notebook/NN values/NNS)
  =/VBP
  [/$
  5,8,9,4,1,6,7,2,3,8/CD
  (NP ]/NNP ax/NN =/NN plt.axes/NNS)
  (/(
  )/)
  (NP ax.set_xlim/NN)
  (/(
  [/JJ
  0,50/CD
  (NP ]/NN)
  )/)
  (NP ax.set_ylim/NN)
  (/(
  (NP [/JJ -10,10/NNP ]/NNP)
  )/)
  (NP ax.set_xticks/NNS)
  (/(
  [/$
  0,5,10,15,20,25,30,35,40,45,50/CD
  (NP ]/NNP)
  )/)
  (NP ax.set_yticks/NNS)
  (/(
  (NP [/JJ -10/NN)
  ,/,
  (NP -8/NNP)
  ,/,
  (NP -6/NNP)
  ,/,
  (NP -4/NNP)
  ,/,
  (NP -2,0,2,4,6,8,10/NNP ]/NNP)
  )/)
  ax.grid/FW
  (/(
  )/)
  (NP plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values/NNS)
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  9/CD
  10/CD
  (NP plotDemo1.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ inline/NN values1/NN =/NNP)
  [/VBZ
  5,8,9,4,1,6,7,2,3,8/CD
  (NP ]/NN values2/NN =/NNP)
  [/VBZ
  8,3,2,7,6,1,4,9,8,5/CD
  (NP ]/NN plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  values1/FW
  ,/,
  (NP c=/NN)
  '/''
  (NP r/NN)
  '/''
  ,/,
  (NP lw=1/NN)
  ,/,
  (NP ls=/NN)
  '/''
  --/:
  '/''
  ,/,
  (NP marker=/NN)
  '/''
  (NP >/NNP)
  '/POS
  )/)
  (NP plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  values2/FW
  ,/,
  (NP c=/NN)
  '/''
  (NP b/NN)
  '/''
  ,/,
  (NP lw=2/NN)
  ,/,
  (NP ls=/NN)
  '/''
  :/:
  '/''
  ,/,
  marker=/FW
  '/POS
  '/POS
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  (NP Plot/NNP –/NNP Line/NNP Appearance/NNP)
  We/PRP
  need/VBP
  (NP
    different/JJ
    line/NN
    styles/NNS
    order/NN
    differentiate/NN
    multiple/NN
    lines/NNS
    plot/NN)
  ,/,
  achieve/VBP
  using/VBG
  (NP many/JJ parameters/NNS)
  ,/,
  listed/VBN
  ./.) 


>> Noun Phrases are: 
 ['Possible values', 'parameters', 'svg pdf Etc', 'import matplotlib.pyplot plt %', 'matplotlib inline values1 =', '] values2 =', '] plt.plot', 'range', 'values1', 'plt.plot', 'range', 'plt.show', 'plt.savefig', 'plotDemo1.py SaveToPath.png Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot – Axis', 'Ticks Grid', 'access', 'format axis', 'ticks', 'plot', 'axis', 'method matplotlib.pyplot.plt import matplotlib.pyplot plt %', 'matplotlib notebook values', '] ax = plt.axes', 'ax.set_xlim', ']', 'ax.set_ylim', '[ -10,10 ]', 'ax.set_xticks', ']', 'ax.set_yticks', '[ -10', '-8', '-6', '-4', '-2,0,2,4,6,8,10 ]', 'plt.plot', 'range', 'values', 'plotDemo1.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› import matplotlib.pyplot plt %', 'matplotlib inline values1 =', '] values2 =', '] plt.plot', 'range', 'c=', 'r', 'lw=1', 'ls=', 'marker=', '>', 'plt.plot', 'range', 'c=', 'b', 'lw=2', 'ls=', 'plt.show', 'Plot – Line Appearance', 'different line styles order differentiate multiple lines plot', 'many parameters']

>> Named Entities are: 
 [('PERSON', 'Etc'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Ticks Grid'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Plot'), ('PERSON', 'Line Appearance')] 

>> Stemming using Porter Stemmer: 
 [('Possible', 'possibl'), ('values', 'valu'), ('format', 'format'), ('parameters', 'paramet'), ('png', 'png'), ('svg', 'svg'), ('pdf', 'pdf'), ('Etc', 'etc'), ('...', '...'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('#', '#'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('plt.savefig', 'plt.savefig'), ('(', '('), ("'SaveToPath.png", "'savetopath.png"), ("'", "'"), (',', ','), ("format='png", "format='png"), ("'", "'"), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('plotDemo1.py', 'plotdemo1.pi'), ('SaveToPath.png', 'savetopath.png'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Axis', 'axi'), (',', ','), ('Ticks', 'tick'), ('Grid', 'grid'), ('We', 'we'), ('access', 'access'), ('format', 'format'), ('axis', 'axi'), (',', ','), ('ticks', 'tick'), ('grid', 'grid'), ('plot', 'plot'), ('using', 'use'), ('axis', 'axi'), ('(', '('), (')', ')'), ('method', 'method'), ('matplotlib.pyplot.plt', 'matplotlib.pyplot.plt'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'valu'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('ax', 'ax'), ('=', '='), ('plt.axes', 'plt.ax'), ('(', '('), (')', ')'), ('ax.set_xlim', 'ax.set_xlim'), ('(', '('), ('[', '['), ('0,50', '0,50'), (']', ']'), (')', ')'), ('ax.set_ylim', 'ax.set_ylim'), ('(', '('), ('[', '['), ('-10,10', '-10,10'), (']', ']'), (')', ')'), ('ax.set_xticks', 'ax.set_xtick'), ('(', '('), ('[', '['), ('0,5,10,15,20,25,30,35,40,45,50', '0,5,10,15,20,25,30,35,40,45,50'), (']', ']'), (')', ')'), ('ax.set_yticks', 'ax.set_ytick'), ('(', '('), ('[', '['), ('-10', '-10'), (',', ','), ('-8', '-8'), (',', ','), ('-6', '-6'), (',', ','), ('-4', '-4'), (',', ','), ('-2,0,2,4,6,8,10', '-2,0,2,4,6,8,10'), (']', ']'), (')', ')'), ('ax.grid', 'ax.grid'), ('(', '('), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values', 'valu'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (',', ','), ('c=', 'c='), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ('lw=1', 'lw=1'), (',', ','), ('ls=', 'ls='), ("'", "'"), ('--', '--'), ("'", "'"), (',', ','), ('marker=', 'marker='), ("'", "'"), ('>', '>'), ("'", "'"), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (',', ','), ('c=', 'c='), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ('lw=2', 'lw=2'), (',', ','), ('ls=', 'ls='), ("'", "'"), (':', ':'), ("'", "'"), (',', ','), ('marker=', 'marker='), ("'", "'"), ("'", "'"), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('Plot', 'plot'), ('–', '–'), ('Line', 'line'), ('Appearance', 'appear'), ('We', 'we'), ('need', 'need'), ('different', 'differ'), ('line', 'line'), ('styles', 'style'), ('order', 'order'), ('differentiate', 'differenti'), ('multiple', 'multipl'), ('lines', 'line'), ('plot', 'plot'), (',', ','), ('achieve', 'achiev'), ('using', 'use'), ('many', 'mani'), ('parameters', 'paramet'), (',', ','), ('listed', 'list'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Possible', 'possibl'), ('values', 'valu'), ('format', 'format'), ('parameters', 'paramet'), ('png', 'png'), ('svg', 'svg'), ('pdf', 'pdf'), ('Etc', 'etc'), ('...', '...'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('#', '#'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('plt.savefig', 'plt.savefig'), ('(', '('), ("'SaveToPath.png", 'savetopath.png'), ("'", "'"), (',', ','), ("format='png", "format='png"), ("'", "'"), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('plotDemo1.py', 'plotdemo1.pi'), ('SaveToPath.png', 'savetopath.png'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Axis', 'axi'), (',', ','), ('Ticks', 'tick'), ('Grid', 'grid'), ('We', 'we'), ('access', 'access'), ('format', 'format'), ('axis', 'axi'), (',', ','), ('ticks', 'tick'), ('grid', 'grid'), ('plot', 'plot'), ('using', 'use'), ('axis', 'axi'), ('(', '('), (')', ')'), ('method', 'method'), ('matplotlib.pyplot.plt', 'matplotlib.pyplot.plt'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'valu'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('ax', 'ax'), ('=', '='), ('plt.axes', 'plt.ax'), ('(', '('), (')', ')'), ('ax.set_xlim', 'ax.set_xlim'), ('(', '('), ('[', '['), ('0,50', '0,50'), (']', ']'), (')', ')'), ('ax.set_ylim', 'ax.set_ylim'), ('(', '('), ('[', '['), ('-10,10', '-10,10'), (']', ']'), (')', ')'), ('ax.set_xticks', 'ax.set_xtick'), ('(', '('), ('[', '['), ('0,5,10,15,20,25,30,35,40,45,50', '0,5,10,15,20,25,30,35,40,45,50'), (']', ']'), (')', ')'), ('ax.set_yticks', 'ax.set_ytick'), ('(', '('), ('[', '['), ('-10', '-10'), (',', ','), ('-8', '-8'), (',', ','), ('-6', '-6'), (',', ','), ('-4', '-4'), (',', ','), ('-2,0,2,4,6,8,10', '-2,0,2,4,6,8,10'), (']', ']'), (')', ')'), ('ax.grid', 'ax.grid'), ('(', '('), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values', 'valu'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (',', ','), ('c=', 'c='), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ('lw=1', 'lw=1'), (',', ','), ('ls=', 'ls='), ("'", "'"), ('--', '--'), ("'", "'"), (',', ','), ('marker=', 'marker='), ("'", "'"), ('>', '>'), ("'", "'"), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (',', ','), ('c=', 'c='), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ('lw=2', 'lw=2'), (',', ','), ('ls=', 'ls='), ("'", "'"), (':', ':'), ("'", "'"), (',', ','), ('marker=', 'marker='), ("'", "'"), ("'", "'"), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('Plot', 'plot'), ('–', '–'), ('Line', 'line'), ('Appearance', 'appear'), ('We', 'we'), ('need', 'need'), ('different', 'differ'), ('line', 'line'), ('styles', 'style'), ('order', 'order'), ('differentiate', 'differenti'), ('multiple', 'multipl'), ('lines', 'line'), ('plot', 'plot'), (',', ','), ('achieve', 'achiev'), ('using', 'use'), ('many', 'mani'), ('parameters', 'paramet'), (',', ','), ('listed', 'list'), ('.', '.')]

>> Lemmatization: 
 [('Possible', 'Possible'), ('values', 'value'), ('format', 'format'), ('parameters', 'parameter'), ('png', 'png'), ('svg', 'svg'), ('pdf', 'pdf'), ('Etc', 'Etc'), ('...', '...'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('#', '#'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('plt.savefig', 'plt.savefig'), ('(', '('), ("'SaveToPath.png", "'SaveToPath.png"), ("'", "'"), (',', ','), ("format='png", "format='png"), ("'", "'"), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('plotDemo1.py', 'plotDemo1.py'), ('SaveToPath.png', 'SaveToPath.png'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('–', '–'), ('Axis', 'Axis'), (',', ','), ('Ticks', 'Ticks'), ('Grid', 'Grid'), ('We', 'We'), ('access', 'access'), ('format', 'format'), ('axis', 'axis'), (',', ','), ('ticks', 'tick'), ('grid', 'grid'), ('plot', 'plot'), ('using', 'using'), ('axis', 'axis'), ('(', '('), (')', ')'), ('method', 'method'), ('matplotlib.pyplot.plt', 'matplotlib.pyplot.plt'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'value'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('ax', 'ax'), ('=', '='), ('plt.axes', 'plt.axes'), ('(', '('), (')', ')'), ('ax.set_xlim', 'ax.set_xlim'), ('(', '('), ('[', '['), ('0,50', '0,50'), (']', ']'), (')', ')'), ('ax.set_ylim', 'ax.set_ylim'), ('(', '('), ('[', '['), ('-10,10', '-10,10'), (']', ']'), (')', ')'), ('ax.set_xticks', 'ax.set_xticks'), ('(', '('), ('[', '['), ('0,5,10,15,20,25,30,35,40,45,50', '0,5,10,15,20,25,30,35,40,45,50'), (']', ']'), (')', ')'), ('ax.set_yticks', 'ax.set_yticks'), ('(', '('), ('[', '['), ('-10', '-10'), (',', ','), ('-8', '-8'), (',', ','), ('-6', '-6'), (',', ','), ('-4', '-4'), (',', ','), ('-2,0,2,4,6,8,10', '-2,0,2,4,6,8,10'), (']', ']'), (')', ')'), ('ax.grid', 'ax.grid'), ('(', '('), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values', 'value'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('plotDemo1.py', 'plotDemo1.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (',', ','), ('c=', 'c='), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ('lw=1', 'lw=1'), (',', ','), ('ls=', 'ls='), ("'", "'"), ('--', '--'), ("'", "'"), (',', ','), ('marker=', 'marker='), ("'", "'"), ('>', '>'), ("'", "'"), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (',', ','), ('c=', 'c='), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ('lw=2', 'lw=2'), (',', ','), ('ls=', 'ls='), ("'", "'"), (':', ':'), ("'", "'"), (',', ','), ('marker=', 'marker='), ("'", "'"), ("'", "'"), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('Plot', 'Plot'), ('–', '–'), ('Line', 'Line'), ('Appearance', 'Appearance'), ('We', 'We'), ('need', 'need'), ('different', 'different'), ('line', 'line'), ('styles', 'style'), ('order', 'order'), ('differentiate', 'differentiate'), ('multiple', 'multiple'), ('lines', 'line'), ('plot', 'plot'), (',', ','), ('achieve', 'achieve'), ('using', 'using'), ('many', 'many'), ('parameters', 'parameter'), (',', ','), ('listed', 'listed'), ('.', '.')]



============================ Sentence 12 =============================

Line style (linestyle or ls) Line width (linewidth or lw) Line color (color or c) Markers (marker) 1 2 3 4 5 6 7 plotDemo1.py    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Plot – Line Appearance (Cont.) 


>> Tokens are: 
 ['Line', 'style', '(', 'linestyle', 'ls', ')', 'Line', 'width', '(', 'linewidth', 'lw', ')', 'Line', 'color', '(', 'color', 'c', ')', 'Markers', '(', 'marker', ')', '1', '2', '3', '4', '5', '6', '7', 'plotDemo1.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', '–', 'Line', 'Appearance', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('Line', 'style'), ('style', '('), ('(', 'linestyle'), ('linestyle', 'ls'), ('ls', ')'), (')', 'Line'), ('Line', 'width'), ('width', '('), ('(', 'linewidth'), ('linewidth', 'lw'), ('lw', ')'), (')', 'Line'), ('Line', 'color'), ('color', '('), ('(', 'color'), ('color', 'c'), ('c', ')'), (')', 'Markers'), ('Markers', '('), ('(', 'marker'), ('marker', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', 'plotDemo1.py'), ('plotDemo1.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', '–'), ('–', 'Line'), ('Line', 'Appearance'), ('Appearance', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('Line', 'style', '('), ('style', '(', 'linestyle'), ('(', 'linestyle', 'ls'), ('linestyle', 'ls', ')'), ('ls', ')', 'Line'), (')', 'Line', 'width'), ('Line', 'width', '('), ('width', '(', 'linewidth'), ('(', 'linewidth', 'lw'), ('linewidth', 'lw', ')'), ('lw', ')', 'Line'), (')', 'Line', 'color'), ('Line', 'color', '('), ('color', '(', 'color'), ('(', 'color', 'c'), ('color', 'c', ')'), ('c', ')', 'Markers'), (')', 'Markers', '('), ('Markers', '(', 'marker'), ('(', 'marker', ')'), ('marker', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', 'plotDemo1.py'), ('7', 'plotDemo1.py', 'Prof.'), ('plotDemo1.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', '–'), ('Plot', '–', 'Line'), ('–', 'Line', 'Appearance'), ('Line', 'Appearance', '('), ('Appearance', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('Line', 'NNP'), ('style', 'NN'), ('(', '('), ('linestyle', 'JJ'), ('ls', 'NN'), (')', ')'), ('Line', 'NNP'), ('width', 'NN'), ('(', '('), ('linewidth', 'JJ'), ('lw', 'NN'), (')', ')'), ('Line', 'NNP'), ('color', 'NN'), ('(', '('), ('color', 'NN'), ('c', 'NN'), (')', ')'), ('Markers', 'NNP'), ('(', '('), ('marker', 'NN'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('plotDemo1.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('–', 'NNP'), ('Line', 'NNP'), ('Appearance', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  (NP Line/NNP style/NN)
  (/(
  (NP linestyle/JJ ls/NN)
  )/)
  (NP Line/NNP width/NN)
  (/(
  (NP linewidth/JJ lw/NN)
  )/)
  (NP Line/NNP color/NN)
  (/(
  (NP color/NN c/NN)
  )/)
  (NP Markers/NNP)
  (/(
  (NP marker/NN)
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  (NP plotDemo1.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP –/NNP Line/NNP Appearance/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['Line style', 'linestyle ls', 'Line width', 'linewidth lw', 'Line color', 'color c', 'Markers', 'marker', 'plotDemo1.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot – Line Appearance', 'Cont']

>> Named Entities are: 
 [('GPE', 'Line'), ('PERSON', 'Line'), ('PERSON', 'Line'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Line Appearance'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('Line', 'line'), ('style', 'style'), ('(', '('), ('linestyle', 'linestyl'), ('ls', 'ls'), (')', ')'), ('Line', 'line'), ('width', 'width'), ('(', '('), ('linewidth', 'linewidth'), ('lw', 'lw'), (')', ')'), ('Line', 'line'), ('color', 'color'), ('(', '('), ('color', 'color'), ('c', 'c'), (')', ')'), ('Markers', 'marker'), ('(', '('), ('marker', 'marker'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Line', 'line'), ('Appearance', 'appear'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('Line', 'line'), ('style', 'style'), ('(', '('), ('linestyle', 'linestyl'), ('ls', 'ls'), (')', ')'), ('Line', 'line'), ('width', 'width'), ('(', '('), ('linewidth', 'linewidth'), ('lw', 'lw'), (')', ')'), ('Line', 'line'), ('color', 'color'), ('(', '('), ('color', 'color'), ('c', 'c'), (')', ')'), ('Markers', 'marker'), ('(', '('), ('marker', 'marker'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Line', 'line'), ('Appearance', 'appear'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('Line', 'Line'), ('style', 'style'), ('(', '('), ('linestyle', 'linestyle'), ('ls', 'l'), (')', ')'), ('Line', 'Line'), ('width', 'width'), ('(', '('), ('linewidth', 'linewidth'), ('lw', 'lw'), (')', ')'), ('Line', 'Line'), ('color', 'color'), ('(', '('), ('color', 'color'), ('c', 'c'), (')', ')'), ('Markers', 'Markers'), ('(', '('), ('marker', 'marker'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('plotDemo1.py', 'plotDemo1.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('–', '–'), ('Line', 'Line'), ('Appearance', 'Appearance'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 13 =============================

Possible Values for each parameters are,  	Values	Line Style 	‘-’	Solid line 	‘--’	Dashed line 	‘-.’	Dash-dot line 	‘:’	Dotted line  	Values	Color 	‘b’	Blue 	‘g’	Green 	‘r’	Red 	‘c’	Cyan 	‘m’	Magenta 	‘y’	Yellow 	‘k’	Black 	‘w’	White  	Values	Marker 	‘.’	Point 	‘,’	Pixel 	‘o’	Circle 	‘v’	Triangle down 	‘^’	Triangle up 	‘>’	Triangle right 	‘<’	Triangle left 	‘*’	Star 	‘+’	Plus 	‘x’	X 	Etc.......	     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Plot – Labels, Annotation and Legends To fully document our graph, we have to resort the labels, annotation and legends. 


>> Tokens are: 
 ['Possible', 'Values', 'parameters', ',', 'Values', 'Line', 'Style', '‘', '-', '’', 'Solid', 'line', '‘', '--', '’', 'Dashed', 'line', '‘', '-.', '’', 'Dash-dot', 'line', '‘', ':', '’', 'Dotted', 'line', 'Values', 'Color', '‘', 'b', '’', 'Blue', '‘', 'g', '’', 'Green', '‘', 'r', '’', 'Red', '‘', 'c', '’', 'Cyan', '‘', '’', 'Magenta', '‘', '’', 'Yellow', '‘', 'k', '’', 'Black', '‘', 'w', '’', 'White', 'Values', 'Marker', '‘', '.', '’', 'Point', '‘', ',', '’', 'Pixel', '‘', '’', 'Circle', '‘', 'v', '’', 'Triangle', '‘', '^', '’', 'Triangle', '‘', '>', '’', 'Triangle', 'right', '‘', '<', '’', 'Triangle', 'left', '‘', '*', '’', 'Star', '‘', '+', '’', 'Plus', '‘', 'x', '’', 'X', 'Etc', '.......', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', '–', 'Labels', ',', 'Annotation', 'Legends', 'To', 'fully', 'document', 'graph', ',', 'resort', 'labels', ',', 'annotation', 'legends', '.']

>> Bigrams are: 
 [('Possible', 'Values'), ('Values', 'parameters'), ('parameters', ','), (',', 'Values'), ('Values', 'Line'), ('Line', 'Style'), ('Style', '‘'), ('‘', '-'), ('-', '’'), ('’', 'Solid'), ('Solid', 'line'), ('line', '‘'), ('‘', '--'), ('--', '’'), ('’', 'Dashed'), ('Dashed', 'line'), ('line', '‘'), ('‘', '-.'), ('-.', '’'), ('’', 'Dash-dot'), ('Dash-dot', 'line'), ('line', '‘'), ('‘', ':'), (':', '’'), ('’', 'Dotted'), ('Dotted', 'line'), ('line', 'Values'), ('Values', 'Color'), ('Color', '‘'), ('‘', 'b'), ('b', '’'), ('’', 'Blue'), ('Blue', '‘'), ('‘', 'g'), ('g', '’'), ('’', 'Green'), ('Green', '‘'), ('‘', 'r'), ('r', '’'), ('’', 'Red'), ('Red', '‘'), ('‘', 'c'), ('c', '’'), ('’', 'Cyan'), ('Cyan', '‘'), ('‘', '’'), ('’', 'Magenta'), ('Magenta', '‘'), ('‘', '’'), ('’', 'Yellow'), ('Yellow', '‘'), ('‘', 'k'), ('k', '’'), ('’', 'Black'), ('Black', '‘'), ('‘', 'w'), ('w', '’'), ('’', 'White'), ('White', 'Values'), ('Values', 'Marker'), ('Marker', '‘'), ('‘', '.'), ('.', '’'), ('’', 'Point'), ('Point', '‘'), ('‘', ','), (',', '’'), ('’', 'Pixel'), ('Pixel', '‘'), ('‘', '’'), ('’', 'Circle'), ('Circle', '‘'), ('‘', 'v'), ('v', '’'), ('’', 'Triangle'), ('Triangle', '‘'), ('‘', '^'), ('^', '’'), ('’', 'Triangle'), ('Triangle', '‘'), ('‘', '>'), ('>', '’'), ('’', 'Triangle'), ('Triangle', 'right'), ('right', '‘'), ('‘', '<'), ('<', '’'), ('’', 'Triangle'), ('Triangle', 'left'), ('left', '‘'), ('‘', '*'), ('*', '’'), ('’', 'Star'), ('Star', '‘'), ('‘', '+'), ('+', '’'), ('’', 'Plus'), ('Plus', '‘'), ('‘', 'x'), ('x', '’'), ('’', 'X'), ('X', 'Etc'), ('Etc', '.......'), ('.......', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', '–'), ('–', 'Labels'), ('Labels', ','), (',', 'Annotation'), ('Annotation', 'Legends'), ('Legends', 'To'), ('To', 'fully'), ('fully', 'document'), ('document', 'graph'), ('graph', ','), (',', 'resort'), ('resort', 'labels'), ('labels', ','), (',', 'annotation'), ('annotation', 'legends'), ('legends', '.')]

>> Trigrams are: 
 [('Possible', 'Values', 'parameters'), ('Values', 'parameters', ','), ('parameters', ',', 'Values'), (',', 'Values', 'Line'), ('Values', 'Line', 'Style'), ('Line', 'Style', '‘'), ('Style', '‘', '-'), ('‘', '-', '’'), ('-', '’', 'Solid'), ('’', 'Solid', 'line'), ('Solid', 'line', '‘'), ('line', '‘', '--'), ('‘', '--', '’'), ('--', '’', 'Dashed'), ('’', 'Dashed', 'line'), ('Dashed', 'line', '‘'), ('line', '‘', '-.'), ('‘', '-.', '’'), ('-.', '’', 'Dash-dot'), ('’', 'Dash-dot', 'line'), ('Dash-dot', 'line', '‘'), ('line', '‘', ':'), ('‘', ':', '’'), (':', '’', 'Dotted'), ('’', 'Dotted', 'line'), ('Dotted', 'line', 'Values'), ('line', 'Values', 'Color'), ('Values', 'Color', '‘'), ('Color', '‘', 'b'), ('‘', 'b', '’'), ('b', '’', 'Blue'), ('’', 'Blue', '‘'), ('Blue', '‘', 'g'), ('‘', 'g', '’'), ('g', '’', 'Green'), ('’', 'Green', '‘'), ('Green', '‘', 'r'), ('‘', 'r', '’'), ('r', '’', 'Red'), ('’', 'Red', '‘'), ('Red', '‘', 'c'), ('‘', 'c', '’'), ('c', '’', 'Cyan'), ('’', 'Cyan', '‘'), ('Cyan', '‘', '’'), ('‘', '’', 'Magenta'), ('’', 'Magenta', '‘'), ('Magenta', '‘', '’'), ('‘', '’', 'Yellow'), ('’', 'Yellow', '‘'), ('Yellow', '‘', 'k'), ('‘', 'k', '’'), ('k', '’', 'Black'), ('’', 'Black', '‘'), ('Black', '‘', 'w'), ('‘', 'w', '’'), ('w', '’', 'White'), ('’', 'White', 'Values'), ('White', 'Values', 'Marker'), ('Values', 'Marker', '‘'), ('Marker', '‘', '.'), ('‘', '.', '’'), ('.', '’', 'Point'), ('’', 'Point', '‘'), ('Point', '‘', ','), ('‘', ',', '’'), (',', '’', 'Pixel'), ('’', 'Pixel', '‘'), ('Pixel', '‘', '’'), ('‘', '’', 'Circle'), ('’', 'Circle', '‘'), ('Circle', '‘', 'v'), ('‘', 'v', '’'), ('v', '’', 'Triangle'), ('’', 'Triangle', '‘'), ('Triangle', '‘', '^'), ('‘', '^', '’'), ('^', '’', 'Triangle'), ('’', 'Triangle', '‘'), ('Triangle', '‘', '>'), ('‘', '>', '’'), ('>', '’', 'Triangle'), ('’', 'Triangle', 'right'), ('Triangle', 'right', '‘'), ('right', '‘', '<'), ('‘', '<', '’'), ('<', '’', 'Triangle'), ('’', 'Triangle', 'left'), ('Triangle', 'left', '‘'), ('left', '‘', '*'), ('‘', '*', '’'), ('*', '’', 'Star'), ('’', 'Star', '‘'), ('Star', '‘', '+'), ('‘', '+', '’'), ('+', '’', 'Plus'), ('’', 'Plus', '‘'), ('Plus', '‘', 'x'), ('‘', 'x', '’'), ('x', '’', 'X'), ('’', 'X', 'Etc'), ('X', 'Etc', '.......'), ('Etc', '.......', 'Prof.'), ('.......', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', '–'), ('Plot', '–', 'Labels'), ('–', 'Labels', ','), ('Labels', ',', 'Annotation'), (',', 'Annotation', 'Legends'), ('Annotation', 'Legends', 'To'), ('Legends', 'To', 'fully'), ('To', 'fully', 'document'), ('fully', 'document', 'graph'), ('document', 'graph', ','), ('graph', ',', 'resort'), (',', 'resort', 'labels'), ('resort', 'labels', ','), ('labels', ',', 'annotation'), (',', 'annotation', 'legends'), ('annotation', 'legends', '.')]

>> POS Tags are: 
 [('Possible', 'JJ'), ('Values', 'NNP'), ('parameters', 'NNS'), (',', ','), ('Values', 'NNP'), ('Line', 'NNP'), ('Style', 'NNP'), ('‘', 'NNP'), ('-', ':'), ('’', 'NN'), ('Solid', 'NNP'), ('line', 'NN'), ('‘', 'NNP'), ('--', ':'), ('’', 'VBP'), ('Dashed', 'NNP'), ('line', 'NN'), ('‘', 'NNP'), ('-.', 'NNP'), ('’', 'NNP'), ('Dash-dot', 'NNP'), ('line', 'NN'), ('‘', 'NN'), (':', ':'), ('’', 'NN'), ('Dotted', 'NNP'), ('line', 'NN'), ('Values', 'NNP'), ('Color', 'NNP'), ('‘', 'NNP'), ('b', 'NN'), ('’', 'NNP'), ('Blue', 'NNP'), ('‘', 'NNP'), ('g', 'NN'), ('’', 'NNP'), ('Green', 'NNP'), ('‘', 'NNP'), ('r', 'NN'), ('’', 'NNP'), ('Red', 'NNP'), ('‘', 'NNP'), ('c', 'VBZ'), ('’', 'NNP'), ('Cyan', 'NNP'), ('‘', 'NNP'), ('’', 'NNP'), ('Magenta', 'NNP'), ('‘', 'NNP'), ('’', 'NNP'), ('Yellow', 'NNP'), ('‘', 'NNP'), ('k', 'NN'), ('’', 'NNP'), ('Black', 'NNP'), ('‘', 'NNP'), ('w', 'NN'), ('’', 'NNP'), ('White', 'NNP'), ('Values', 'NNP'), ('Marker', 'NNP'), ('‘', 'NNP'), ('.', '.'), ('’', 'VB'), ('Point', 'NNP'), ('‘', 'NNP'), (',', ','), ('’', 'NNP'), ('Pixel', 'NNP'), ('‘', 'NNP'), ('’', 'NNP'), ('Circle', 'NNP'), ('‘', 'NNP'), ('v', 'NN'), ('’', 'NNP'), ('Triangle', 'NNP'), ('‘', 'NNP'), ('^', 'NNP'), ('’', 'NNP'), ('Triangle', 'NNP'), ('‘', 'NNP'), ('>', 'NNP'), ('’', 'NNP'), ('Triangle', 'NNP'), ('right', 'NN'), ('‘', 'NNP'), ('<', 'NNP'), ('’', 'NNP'), ('Triangle', 'NNP'), ('left', 'VBD'), ('‘', 'NNP'), ('*', 'NNP'), ('’', 'NNP'), ('Star', 'NNP'), ('‘', 'NNP'), ('+', 'NNP'), ('’', 'NNP'), ('Plus', 'NNP'), ('‘', 'NNP'), ('x', 'NNP'), ('’', 'NNP'), ('X', 'NNP'), ('Etc', 'NNP'), ('.......', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('–', 'NNP'), ('Labels', 'NNP'), (',', ','), ('Annotation', 'NNP'), ('Legends', 'NNP'), ('To', 'TO'), ('fully', 'RB'), ('document', 'VB'), ('graph', 'NN'), (',', ','), ('resort', 'NN'), ('labels', 'NNS'), (',', ','), ('annotation', 'NN'), ('legends', 'NNS'), ('.', '.')]

 (S
  (NP Possible/JJ Values/NNP parameters/NNS)
  ,/,
  (NP Values/NNP Line/NNP Style/NNP ‘/NNP)
  -/:
  (NP ’/NN Solid/NNP line/NN ‘/NNP)
  --/:
  ’/VBP
  (NP
    Dashed/NNP
    line/NN
    ‘/NNP
    -./NNP
    ’/NNP
    Dash-dot/NNP
    line/NN
    ‘/NN)
  :/:
  (NP
    ’/NN
    Dotted/NNP
    line/NN
    Values/NNP
    Color/NNP
    ‘/NNP
    b/NN
    ’/NNP
    Blue/NNP
    ‘/NNP
    g/NN
    ’/NNP
    Green/NNP
    ‘/NNP
    r/NN
    ’/NNP
    Red/NNP
    ‘/NNP)
  c/VBZ
  (NP
    ’/NNP
    Cyan/NNP
    ‘/NNP
    ’/NNP
    Magenta/NNP
    ‘/NNP
    ’/NNP
    Yellow/NNP
    ‘/NNP
    k/NN
    ’/NNP
    Black/NNP
    ‘/NNP
    w/NN
    ’/NNP
    White/NNP
    Values/NNP
    Marker/NNP
    ‘/NNP)
  ./.
  ’/VB
  (NP Point/NNP ‘/NNP)
  ,/,
  (NP
    ’/NNP
    Pixel/NNP
    ‘/NNP
    ’/NNP
    Circle/NNP
    ‘/NNP
    v/NN
    ’/NNP
    Triangle/NNP
    ‘/NNP
    ^/NNP
    ’/NNP
    Triangle/NNP
    ‘/NNP
    >/NNP
    ’/NNP
    Triangle/NNP
    right/NN
    ‘/NNP
    </NNP
    ’/NNP
    Triangle/NNP)
  left/VBD
  (NP
    ‘/NNP
    */NNP
    ’/NNP
    Star/NNP
    ‘/NNP
    +/NNP
    ’/NNP
    Plus/NNP
    ‘/NNP
    x/NNP
    ’/NNP
    X/NNP
    Etc/NNP
    ......./NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP –/NNP Labels/NNP)
  ,/,
  (NP Annotation/NNP Legends/NNP)
  To/TO
  fully/RB
  document/VB
  (NP graph/NN)
  ,/,
  (NP resort/NN labels/NNS)
  ,/,
  (NP annotation/NN legends/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Possible Values parameters', 'Values Line Style ‘', '’ Solid line ‘', 'Dashed line ‘ -. ’ Dash-dot line ‘', '’ Dotted line Values Color ‘ b ’ Blue ‘ g ’ Green ‘ r ’ Red ‘', '’ Cyan ‘ ’ Magenta ‘ ’ Yellow ‘ k ’ Black ‘ w ’ White Values Marker ‘', 'Point ‘', '’ Pixel ‘ ’ Circle ‘ v ’ Triangle ‘ ^ ’ Triangle ‘ > ’ Triangle right ‘ < ’ Triangle', '‘ * ’ Star ‘ + ’ Plus ‘ x ’ X Etc ....... Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot – Labels', 'Annotation Legends', 'graph', 'resort labels', 'annotation legends']

>> Named Entities are: 
 [('PERSON', 'Values Line Style'), ('PERSON', 'Solid'), ('PERSON', 'Dashed'), ('GPE', 'Dotted'), ('PERSON', 'Values Color'), ('PERSON', 'Magenta'), ('PERSON', 'Yellow'), ('FACILITY', 'White Values Marker'), ('PERSON', 'Point'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Annotation Legends')] 

>> Stemming using Porter Stemmer: 
 [('Possible', 'possibl'), ('Values', 'valu'), ('parameters', 'paramet'), (',', ','), ('Values', 'valu'), ('Line', 'line'), ('Style', 'style'), ('‘', '‘'), ('-', '-'), ('’', '’'), ('Solid', 'solid'), ('line', 'line'), ('‘', '‘'), ('--', '--'), ('’', '’'), ('Dashed', 'dash'), ('line', 'line'), ('‘', '‘'), ('-.', '-.'), ('’', '’'), ('Dash-dot', 'dash-dot'), ('line', 'line'), ('‘', '‘'), (':', ':'), ('’', '’'), ('Dotted', 'dot'), ('line', 'line'), ('Values', 'valu'), ('Color', 'color'), ('‘', '‘'), ('b', 'b'), ('’', '’'), ('Blue', 'blue'), ('‘', '‘'), ('g', 'g'), ('’', '’'), ('Green', 'green'), ('‘', '‘'), ('r', 'r'), ('’', '’'), ('Red', 'red'), ('‘', '‘'), ('c', 'c'), ('’', '’'), ('Cyan', 'cyan'), ('‘', '‘'), ('’', '’'), ('Magenta', 'magenta'), ('‘', '‘'), ('’', '’'), ('Yellow', 'yellow'), ('‘', '‘'), ('k', 'k'), ('’', '’'), ('Black', 'black'), ('‘', '‘'), ('w', 'w'), ('’', '’'), ('White', 'white'), ('Values', 'valu'), ('Marker', 'marker'), ('‘', '‘'), ('.', '.'), ('’', '’'), ('Point', 'point'), ('‘', '‘'), (',', ','), ('’', '’'), ('Pixel', 'pixel'), ('‘', '‘'), ('’', '’'), ('Circle', 'circl'), ('‘', '‘'), ('v', 'v'), ('’', '’'), ('Triangle', 'triangl'), ('‘', '‘'), ('^', '^'), ('’', '’'), ('Triangle', 'triangl'), ('‘', '‘'), ('>', '>'), ('’', '’'), ('Triangle', 'triangl'), ('right', 'right'), ('‘', '‘'), ('<', '<'), ('’', '’'), ('Triangle', 'triangl'), ('left', 'left'), ('‘', '‘'), ('*', '*'), ('’', '’'), ('Star', 'star'), ('‘', '‘'), ('+', '+'), ('’', '’'), ('Plus', 'plu'), ('‘', '‘'), ('x', 'x'), ('’', '’'), ('X', 'x'), ('Etc', 'etc'), ('.......', '.......'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Labels', 'label'), (',', ','), ('Annotation', 'annot'), ('Legends', 'legend'), ('To', 'to'), ('fully', 'fulli'), ('document', 'document'), ('graph', 'graph'), (',', ','), ('resort', 'resort'), ('labels', 'label'), (',', ','), ('annotation', 'annot'), ('legends', 'legend'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Possible', 'possibl'), ('Values', 'valu'), ('parameters', 'paramet'), (',', ','), ('Values', 'valu'), ('Line', 'line'), ('Style', 'style'), ('‘', '‘'), ('-', '-'), ('’', '’'), ('Solid', 'solid'), ('line', 'line'), ('‘', '‘'), ('--', '--'), ('’', '’'), ('Dashed', 'dash'), ('line', 'line'), ('‘', '‘'), ('-.', '-.'), ('’', '’'), ('Dash-dot', 'dash-dot'), ('line', 'line'), ('‘', '‘'), (':', ':'), ('’', '’'), ('Dotted', 'dot'), ('line', 'line'), ('Values', 'valu'), ('Color', 'color'), ('‘', '‘'), ('b', 'b'), ('’', '’'), ('Blue', 'blue'), ('‘', '‘'), ('g', 'g'), ('’', '’'), ('Green', 'green'), ('‘', '‘'), ('r', 'r'), ('’', '’'), ('Red', 'red'), ('‘', '‘'), ('c', 'c'), ('’', '’'), ('Cyan', 'cyan'), ('‘', '‘'), ('’', '’'), ('Magenta', 'magenta'), ('‘', '‘'), ('’', '’'), ('Yellow', 'yellow'), ('‘', '‘'), ('k', 'k'), ('’', '’'), ('Black', 'black'), ('‘', '‘'), ('w', 'w'), ('’', '’'), ('White', 'white'), ('Values', 'valu'), ('Marker', 'marker'), ('‘', '‘'), ('.', '.'), ('’', '’'), ('Point', 'point'), ('‘', '‘'), (',', ','), ('’', '’'), ('Pixel', 'pixel'), ('‘', '‘'), ('’', '’'), ('Circle', 'circl'), ('‘', '‘'), ('v', 'v'), ('’', '’'), ('Triangle', 'triangl'), ('‘', '‘'), ('^', '^'), ('’', '’'), ('Triangle', 'triangl'), ('‘', '‘'), ('>', '>'), ('’', '’'), ('Triangle', 'triangl'), ('right', 'right'), ('‘', '‘'), ('<', '<'), ('’', '’'), ('Triangle', 'triangl'), ('left', 'left'), ('‘', '‘'), ('*', '*'), ('’', '’'), ('Star', 'star'), ('‘', '‘'), ('+', '+'), ('’', '’'), ('Plus', 'plus'), ('‘', '‘'), ('x', 'x'), ('’', '’'), ('X', 'x'), ('Etc', 'etc'), ('.......', '.......'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Labels', 'label'), (',', ','), ('Annotation', 'annot'), ('Legends', 'legend'), ('To', 'to'), ('fully', 'fulli'), ('document', 'document'), ('graph', 'graph'), (',', ','), ('resort', 'resort'), ('labels', 'label'), (',', ','), ('annotation', 'annot'), ('legends', 'legend'), ('.', '.')]

>> Lemmatization: 
 [('Possible', 'Possible'), ('Values', 'Values'), ('parameters', 'parameter'), (',', ','), ('Values', 'Values'), ('Line', 'Line'), ('Style', 'Style'), ('‘', '‘'), ('-', '-'), ('’', '’'), ('Solid', 'Solid'), ('line', 'line'), ('‘', '‘'), ('--', '--'), ('’', '’'), ('Dashed', 'Dashed'), ('line', 'line'), ('‘', '‘'), ('-.', '-.'), ('’', '’'), ('Dash-dot', 'Dash-dot'), ('line', 'line'), ('‘', '‘'), (':', ':'), ('’', '’'), ('Dotted', 'Dotted'), ('line', 'line'), ('Values', 'Values'), ('Color', 'Color'), ('‘', '‘'), ('b', 'b'), ('’', '’'), ('Blue', 'Blue'), ('‘', '‘'), ('g', 'g'), ('’', '’'), ('Green', 'Green'), ('‘', '‘'), ('r', 'r'), ('’', '’'), ('Red', 'Red'), ('‘', '‘'), ('c', 'c'), ('’', '’'), ('Cyan', 'Cyan'), ('‘', '‘'), ('’', '’'), ('Magenta', 'Magenta'), ('‘', '‘'), ('’', '’'), ('Yellow', 'Yellow'), ('‘', '‘'), ('k', 'k'), ('’', '’'), ('Black', 'Black'), ('‘', '‘'), ('w', 'w'), ('’', '’'), ('White', 'White'), ('Values', 'Values'), ('Marker', 'Marker'), ('‘', '‘'), ('.', '.'), ('’', '’'), ('Point', 'Point'), ('‘', '‘'), (',', ','), ('’', '’'), ('Pixel', 'Pixel'), ('‘', '‘'), ('’', '’'), ('Circle', 'Circle'), ('‘', '‘'), ('v', 'v'), ('’', '’'), ('Triangle', 'Triangle'), ('‘', '‘'), ('^', '^'), ('’', '’'), ('Triangle', 'Triangle'), ('‘', '‘'), ('>', '>'), ('’', '’'), ('Triangle', 'Triangle'), ('right', 'right'), ('‘', '‘'), ('<', '<'), ('’', '’'), ('Triangle', 'Triangle'), ('left', 'left'), ('‘', '‘'), ('*', '*'), ('’', '’'), ('Star', 'Star'), ('‘', '‘'), ('+', '+'), ('’', '’'), ('Plus', 'Plus'), ('‘', '‘'), ('x', 'x'), ('’', '’'), ('X', 'X'), ('Etc', 'Etc'), ('.......', '.......'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('–', '–'), ('Labels', 'Labels'), (',', ','), ('Annotation', 'Annotation'), ('Legends', 'Legends'), ('To', 'To'), ('fully', 'fully'), ('document', 'document'), ('graph', 'graph'), (',', ','), ('resort', 'resort'), ('labels', 'label'), (',', ','), ('annotation', 'annotation'), ('legends', 'legend'), ('.', '.')]



============================ Sentence 14 =============================

Each of this elements has a different purpose as follows, Label : provides identification of a particular data element or grouping, it will make easy for viewer to know the name or kind of data illustrated. 


>> Tokens are: 
 ['Each', 'elements', 'different', 'purpose', 'follows', ',', 'Label', ':', 'provides', 'identification', 'particular', 'data', 'element', 'grouping', ',', 'make', 'easy', 'viewer', 'know', 'name', 'kind', 'data', 'illustrated', '.']

>> Bigrams are: 
 [('Each', 'elements'), ('elements', 'different'), ('different', 'purpose'), ('purpose', 'follows'), ('follows', ','), (',', 'Label'), ('Label', ':'), (':', 'provides'), ('provides', 'identification'), ('identification', 'particular'), ('particular', 'data'), ('data', 'element'), ('element', 'grouping'), ('grouping', ','), (',', 'make'), ('make', 'easy'), ('easy', 'viewer'), ('viewer', 'know'), ('know', 'name'), ('name', 'kind'), ('kind', 'data'), ('data', 'illustrated'), ('illustrated', '.')]

>> Trigrams are: 
 [('Each', 'elements', 'different'), ('elements', 'different', 'purpose'), ('different', 'purpose', 'follows'), ('purpose', 'follows', ','), ('follows', ',', 'Label'), (',', 'Label', ':'), ('Label', ':', 'provides'), (':', 'provides', 'identification'), ('provides', 'identification', 'particular'), ('identification', 'particular', 'data'), ('particular', 'data', 'element'), ('data', 'element', 'grouping'), ('element', 'grouping', ','), ('grouping', ',', 'make'), (',', 'make', 'easy'), ('make', 'easy', 'viewer'), ('easy', 'viewer', 'know'), ('viewer', 'know', 'name'), ('know', 'name', 'kind'), ('name', 'kind', 'data'), ('kind', 'data', 'illustrated'), ('data', 'illustrated', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('elements', 'NNS'), ('different', 'JJ'), ('purpose', 'JJ'), ('follows', 'VBZ'), (',', ','), ('Label', 'NNP'), (':', ':'), ('provides', 'VBZ'), ('identification', 'NN'), ('particular', 'JJ'), ('data', 'NNS'), ('element', 'NN'), ('grouping', 'NN'), (',', ','), ('make', 'VBP'), ('easy', 'JJ'), ('viewer', 'NN'), ('know', 'VBP'), ('name', 'NN'), ('kind', 'NN'), ('data', 'NNS'), ('illustrated', 'VBD'), ('.', '.')]

 (S
  (NP Each/DT elements/NNS)
  different/JJ
  purpose/JJ
  follows/VBZ
  ,/,
  (NP Label/NNP)
  :/:
  provides/VBZ
  (NP identification/NN)
  (NP particular/JJ data/NNS element/NN grouping/NN)
  ,/,
  make/VBP
  (NP easy/JJ viewer/NN)
  know/VBP
  (NP name/NN kind/NN data/NNS)
  illustrated/VBD
  ./.) 


>> Noun Phrases are: 
 ['Each elements', 'Label', 'identification', 'particular data element grouping', 'easy viewer', 'name kind data']

>> Named Entities are: 
 [('PERSON', 'Label')] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('elements', 'element'), ('different', 'differ'), ('purpose', 'purpos'), ('follows', 'follow'), (',', ','), ('Label', 'label'), (':', ':'), ('provides', 'provid'), ('identification', 'identif'), ('particular', 'particular'), ('data', 'data'), ('element', 'element'), ('grouping', 'group'), (',', ','), ('make', 'make'), ('easy', 'easi'), ('viewer', 'viewer'), ('know', 'know'), ('name', 'name'), ('kind', 'kind'), ('data', 'data'), ('illustrated', 'illustr'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('elements', 'element'), ('different', 'differ'), ('purpose', 'purpos'), ('follows', 'follow'), (',', ','), ('Label', 'label'), (':', ':'), ('provides', 'provid'), ('identification', 'identif'), ('particular', 'particular'), ('data', 'data'), ('element', 'element'), ('grouping', 'group'), (',', ','), ('make', 'make'), ('easy', 'easi'), ('viewer', 'viewer'), ('know', 'know'), ('name', 'name'), ('kind', 'kind'), ('data', 'data'), ('illustrated', 'illustr'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('elements', 'element'), ('different', 'different'), ('purpose', 'purpose'), ('follows', 'follows'), (',', ','), ('Label', 'Label'), (':', ':'), ('provides', 'provides'), ('identification', 'identification'), ('particular', 'particular'), ('data', 'data'), ('element', 'element'), ('grouping', 'grouping'), (',', ','), ('make', 'make'), ('easy', 'easy'), ('viewer', 'viewer'), ('know', 'know'), ('name', 'name'), ('kind', 'kind'), ('data', 'data'), ('illustrated', 'illustrated'), ('.', '.')]



============================ Sentence 15 =============================

Annotation : augments the information the viewer can immediately see about the data with notes, sources or other useful information. 


>> Tokens are: 
 ['Annotation', ':', 'augments', 'information', 'viewer', 'immediately', 'see', 'data', 'notes', ',', 'sources', 'useful', 'information', '.']

>> Bigrams are: 
 [('Annotation', ':'), (':', 'augments'), ('augments', 'information'), ('information', 'viewer'), ('viewer', 'immediately'), ('immediately', 'see'), ('see', 'data'), ('data', 'notes'), ('notes', ','), (',', 'sources'), ('sources', 'useful'), ('useful', 'information'), ('information', '.')]

>> Trigrams are: 
 [('Annotation', ':', 'augments'), (':', 'augments', 'information'), ('augments', 'information', 'viewer'), ('information', 'viewer', 'immediately'), ('viewer', 'immediately', 'see'), ('immediately', 'see', 'data'), ('see', 'data', 'notes'), ('data', 'notes', ','), ('notes', ',', 'sources'), (',', 'sources', 'useful'), ('sources', 'useful', 'information'), ('useful', 'information', '.')]

>> POS Tags are: 
 [('Annotation', 'NN'), (':', ':'), ('augments', 'NNS'), ('information', 'NN'), ('viewer', 'NN'), ('immediately', 'RB'), ('see', 'VB'), ('data', 'NNS'), ('notes', 'NNS'), (',', ','), ('sources', 'NNS'), ('useful', 'JJ'), ('information', 'NN'), ('.', '.')]

 (S
  (NP Annotation/NN)
  :/:
  (NP augments/NNS information/NN viewer/NN)
  immediately/RB
  see/VB
  (NP data/NNS notes/NNS)
  ,/,
  (NP sources/NNS)
  (NP useful/JJ information/NN)
  ./.) 


>> Noun Phrases are: 
 ['Annotation', 'augments information viewer', 'data notes', 'sources', 'useful information']

>> Named Entities are: 
 [('GPE', 'Annotation')] 

>> Stemming using Porter Stemmer: 
 [('Annotation', 'annot'), (':', ':'), ('augments', 'augment'), ('information', 'inform'), ('viewer', 'viewer'), ('immediately', 'immedi'), ('see', 'see'), ('data', 'data'), ('notes', 'note'), (',', ','), ('sources', 'sourc'), ('useful', 'use'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Annotation', 'annot'), (':', ':'), ('augments', 'augment'), ('information', 'inform'), ('viewer', 'viewer'), ('immediately', 'immedi'), ('see', 'see'), ('data', 'data'), ('notes', 'note'), (',', ','), ('sources', 'sourc'), ('useful', 'use'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('Annotation', 'Annotation'), (':', ':'), ('augments', 'augments'), ('information', 'information'), ('viewer', 'viewer'), ('immediately', 'immediately'), ('see', 'see'), ('data', 'data'), ('notes', 'note'), (',', ','), ('sources', 'source'), ('useful', 'useful'), ('information', 'information'), ('.', '.')]



============================ Sentence 16 =============================

Legend : presents a listing of the data groups within the graph and often provides cues ( such as line type or color) to identify the line with the data. 


>> Tokens are: 
 ['Legend', ':', 'presents', 'listing', 'data', 'groups', 'within', 'graph', 'often', 'provides', 'cues', '(', 'line', 'type', 'color', ')', 'identify', 'line', 'data', '.']

>> Bigrams are: 
 [('Legend', ':'), (':', 'presents'), ('presents', 'listing'), ('listing', 'data'), ('data', 'groups'), ('groups', 'within'), ('within', 'graph'), ('graph', 'often'), ('often', 'provides'), ('provides', 'cues'), ('cues', '('), ('(', 'line'), ('line', 'type'), ('type', 'color'), ('color', ')'), (')', 'identify'), ('identify', 'line'), ('line', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Legend', ':', 'presents'), (':', 'presents', 'listing'), ('presents', 'listing', 'data'), ('listing', 'data', 'groups'), ('data', 'groups', 'within'), ('groups', 'within', 'graph'), ('within', 'graph', 'often'), ('graph', 'often', 'provides'), ('often', 'provides', 'cues'), ('provides', 'cues', '('), ('cues', '(', 'line'), ('(', 'line', 'type'), ('line', 'type', 'color'), ('type', 'color', ')'), ('color', ')', 'identify'), (')', 'identify', 'line'), ('identify', 'line', 'data'), ('line', 'data', '.')]

>> POS Tags are: 
 [('Legend', 'NN'), (':', ':'), ('presents', 'NNS'), ('listing', 'VBG'), ('data', 'NNS'), ('groups', 'NNS'), ('within', 'IN'), ('graph', 'NNS'), ('often', 'RB'), ('provides', 'VBZ'), ('cues', 'NNS'), ('(', '('), ('line', 'NN'), ('type', 'IN'), ('color', 'NN'), (')', ')'), ('identify', 'VBP'), ('line', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP Legend/NN)
  :/:
  (NP presents/NNS)
  listing/VBG
  (NP data/NNS groups/NNS)
  within/IN
  (NP graph/NNS)
  often/RB
  provides/VBZ
  (NP cues/NNS)
  (/(
  (NP line/NN)
  type/IN
  (NP color/NN)
  )/)
  identify/VBP
  (NP line/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Legend', 'presents', 'data groups', 'graph', 'cues', 'line', 'color', 'line data']

>> Named Entities are: 
 [('GPE', 'Legend')] 

>> Stemming using Porter Stemmer: 
 [('Legend', 'legend'), (':', ':'), ('presents', 'present'), ('listing', 'list'), ('data', 'data'), ('groups', 'group'), ('within', 'within'), ('graph', 'graph'), ('often', 'often'), ('provides', 'provid'), ('cues', 'cue'), ('(', '('), ('line', 'line'), ('type', 'type'), ('color', 'color'), (')', ')'), ('identify', 'identifi'), ('line', 'line'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Legend', 'legend'), (':', ':'), ('presents', 'present'), ('listing', 'list'), ('data', 'data'), ('groups', 'group'), ('within', 'within'), ('graph', 'graph'), ('often', 'often'), ('provides', 'provid'), ('cues', 'cue'), ('(', '('), ('line', 'line'), ('type', 'type'), ('color', 'color'), (')', ')'), ('identify', 'identifi'), ('line', 'line'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Legend', 'Legend'), (':', ':'), ('presents', 'present'), ('listing', 'listing'), ('data', 'data'), ('groups', 'group'), ('within', 'within'), ('graph', 'graph'), ('often', 'often'), ('provides', 'provides'), ('cues', 'cue'), ('(', '('), ('line', 'line'), ('type', 'type'), ('color', 'color'), (')', ')'), ('identify', 'identify'), ('line', 'line'), ('data', 'data'), ('.', '.')]



============================ Sentence 17 =============================

Y Label X Label Annotation Legend    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Plot – Labels, Annotation and Legends (Example) import matplotlib.pyplot as plt %matplotlib inline values1 = [5,8,9,4,1,6,7,2,3,8] values2 = [8,3,2,7,6,1,4,9,8,5] plt.plot(range(1,11),values1) plt.plot(range(1,11),values2) plt.xlabel('Roll No') plt.ylabel('CPI') plt.annotate(xy=[5,1],s='Lowest CPI') plt.legend(['CX','CY'],loc=4) plt.show() 1 2 3 4 5 6 7 8 9 10 11 plotDemo1.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Choosing the Right Graph The kind of graph we choose determines how people view the associated data, so choosing the right graph from the outset is important. 


>> Tokens are: 
 ['Y', 'Label', 'X', 'Label', 'Annotation', 'Legend', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Plot', '–', 'Labels', ',', 'Annotation', 'Legends', '(', 'Example', ')', 'import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'inline', 'values1', '=', '[', '5,8,9,4,1,6,7,2,3,8', ']', 'values2', '=', '[', '8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values1', ')', 'plt.plot', '(', 'range', '(', '1,11', ')', ',', 'values2', ')', 'plt.xlabel', '(', "'Roll", 'No', "'", ')', 'plt.ylabel', '(', "'CPI", "'", ')', 'plt.annotate', '(', 'xy=', '[', '5,1', ']', ',', "s='Lowest", 'CPI', "'", ')', 'plt.legend', '(', '[', "'CX", "'", ',', "'CY", "'", ']', ',', 'loc=4', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', 'plotDemo1.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Choosing', 'Right', 'Graph', 'The', 'kind', 'graph', 'choose', 'determines', 'people', 'view', 'associated', 'data', ',', 'choosing', 'right', 'graph', 'outset', 'important', '.']

>> Bigrams are: 
 [('Y', 'Label'), ('Label', 'X'), ('X', 'Label'), ('Label', 'Annotation'), ('Annotation', 'Legend'), ('Legend', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plot'), ('Plot', '–'), ('–', 'Labels'), ('Labels', ','), (',', 'Annotation'), ('Annotation', 'Legends'), ('Legends', '('), ('(', 'Example'), ('Example', ')'), (')', 'import'), ('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'values1'), ('values1', '='), ('=', '['), ('[', '5,8,9,4,1,6,7,2,3,8'), ('5,8,9,4,1,6,7,2,3,8', ']'), (']', 'values2'), ('values2', '='), ('=', '['), ('[', '8,3,2,7,6,1,4,9,8,5'), ('8,3,2,7,6,1,4,9,8,5', ']'), (']', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values1'), ('values1', ')'), (')', 'plt.plot'), ('plt.plot', '('), ('(', 'range'), ('range', '('), ('(', '1,11'), ('1,11', ')'), (')', ','), (',', 'values2'), ('values2', ')'), (')', 'plt.xlabel'), ('plt.xlabel', '('), ('(', "'Roll"), ("'Roll", 'No'), ('No', "'"), ("'", ')'), (')', 'plt.ylabel'), ('plt.ylabel', '('), ('(', "'CPI"), ("'CPI", "'"), ("'", ')'), (')', 'plt.annotate'), ('plt.annotate', '('), ('(', 'xy='), ('xy=', '['), ('[', '5,1'), ('5,1', ']'), (']', ','), (',', "s='Lowest"), ("s='Lowest", 'CPI'), ('CPI', "'"), ("'", ')'), (')', 'plt.legend'), ('plt.legend', '('), ('(', '['), ('[', "'CX"), ("'CX", "'"), ("'", ','), (',', "'CY"), ("'CY", "'"), ("'", ']'), (']', ','), (',', 'loc=4'), ('loc=4', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', '9'), ('9', '10'), ('10', '11'), ('11', 'plotDemo1.py'), ('plotDemo1.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Choosing'), ('Choosing', 'Right'), ('Right', 'Graph'), ('Graph', 'The'), ('The', 'kind'), ('kind', 'graph'), ('graph', 'choose'), ('choose', 'determines'), ('determines', 'people'), ('people', 'view'), ('view', 'associated'), ('associated', 'data'), ('data', ','), (',', 'choosing'), ('choosing', 'right'), ('right', 'graph'), ('graph', 'outset'), ('outset', 'important'), ('important', '.')]

>> Trigrams are: 
 [('Y', 'Label', 'X'), ('Label', 'X', 'Label'), ('X', 'Label', 'Annotation'), ('Label', 'Annotation', 'Legend'), ('Annotation', 'Legend', 'Prof.'), ('Legend', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plot'), ('›', 'Plot', '–'), ('Plot', '–', 'Labels'), ('–', 'Labels', ','), ('Labels', ',', 'Annotation'), (',', 'Annotation', 'Legends'), ('Annotation', 'Legends', '('), ('Legends', '(', 'Example'), ('(', 'Example', ')'), ('Example', ')', 'import'), (')', 'import', 'matplotlib.pyplot'), ('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'values1'), ('inline', 'values1', '='), ('values1', '=', '['), ('=', '[', '5,8,9,4,1,6,7,2,3,8'), ('[', '5,8,9,4,1,6,7,2,3,8', ']'), ('5,8,9,4,1,6,7,2,3,8', ']', 'values2'), (']', 'values2', '='), ('values2', '=', '['), ('=', '[', '8,3,2,7,6,1,4,9,8,5'), ('[', '8,3,2,7,6,1,4,9,8,5', ']'), ('8,3,2,7,6,1,4,9,8,5', ']', 'plt.plot'), (']', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values1'), (',', 'values1', ')'), ('values1', ')', 'plt.plot'), (')', 'plt.plot', '('), ('plt.plot', '(', 'range'), ('(', 'range', '('), ('range', '(', '1,11'), ('(', '1,11', ')'), ('1,11', ')', ','), (')', ',', 'values2'), (',', 'values2', ')'), ('values2', ')', 'plt.xlabel'), (')', 'plt.xlabel', '('), ('plt.xlabel', '(', "'Roll"), ('(', "'Roll", 'No'), ("'Roll", 'No', "'"), ('No', "'", ')'), ("'", ')', 'plt.ylabel'), (')', 'plt.ylabel', '('), ('plt.ylabel', '(', "'CPI"), ('(', "'CPI", "'"), ("'CPI", "'", ')'), ("'", ')', 'plt.annotate'), (')', 'plt.annotate', '('), ('plt.annotate', '(', 'xy='), ('(', 'xy=', '['), ('xy=', '[', '5,1'), ('[', '5,1', ']'), ('5,1', ']', ','), (']', ',', "s='Lowest"), (',', "s='Lowest", 'CPI'), ("s='Lowest", 'CPI', "'"), ('CPI', "'", ')'), ("'", ')', 'plt.legend'), (')', 'plt.legend', '('), ('plt.legend', '(', '['), ('(', '[', "'CX"), ('[', "'CX", "'"), ("'CX", "'", ','), ("'", ',', "'CY"), (',', "'CY", "'"), ("'CY", "'", ']'), ("'", ']', ','), (']', ',', 'loc=4'), (',', 'loc=4', ')'), ('loc=4', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', '9'), ('8', '9', '10'), ('9', '10', '11'), ('10', '11', 'plotDemo1.py'), ('11', 'plotDemo1.py', 'Prof.'), ('plotDemo1.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Choosing'), ('›', 'Choosing', 'Right'), ('Choosing', 'Right', 'Graph'), ('Right', 'Graph', 'The'), ('Graph', 'The', 'kind'), ('The', 'kind', 'graph'), ('kind', 'graph', 'choose'), ('graph', 'choose', 'determines'), ('choose', 'determines', 'people'), ('determines', 'people', 'view'), ('people', 'view', 'associated'), ('view', 'associated', 'data'), ('associated', 'data', ','), ('data', ',', 'choosing'), (',', 'choosing', 'right'), ('choosing', 'right', 'graph'), ('right', 'graph', 'outset'), ('graph', 'outset', 'important'), ('outset', 'important', '.')]

>> POS Tags are: 
 [('Y', 'NNP'), ('Label', 'NNP'), ('X', 'NNP'), ('Label', 'NNP'), ('Annotation', 'NNP'), ('Legend', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plot', 'NNP'), ('–', 'NNP'), ('Labels', 'NNP'), (',', ','), ('Annotation', 'NNP'), ('Legends', 'NNP'), ('(', '('), ('Example', 'NNP'), (')', ')'), ('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('values1', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('5,8,9,4,1,6,7,2,3,8', 'CD'), (']', 'NN'), ('values2', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('8,3,2,7,6,1,4,9,8,5', 'CD'), (']', 'NN'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values1', 'NN'), (')', ')'), ('plt.plot', 'NN'), ('(', '('), ('range', 'NN'), ('(', '('), ('1,11', 'CD'), (')', ')'), (',', ','), ('values2', 'NN'), (')', ')'), ('plt.xlabel', 'NN'), ('(', '('), ("'Roll", 'CD'), ('No', 'NNP'), ("'", 'POS'), (')', ')'), ('plt.ylabel', 'NN'), ('(', '('), ("'CPI", 'NNP'), ("'", 'POS'), (')', ')'), ('plt.annotate', 'NN'), ('(', '('), ('xy=', 'JJ'), ('[', '$'), ('5,1', 'CD'), (']', 'NNP'), (',', ','), ("s='Lowest", 'JJS'), ('CPI', 'NNP'), ("'", 'POS'), (')', ')'), ('plt.legend', 'NN'), ('(', '('), ('[', 'JJ'), ("'CX", 'NNP'), ("'", 'POS'), (',', ','), ("'CY", "''"), ("'", 'POS'), (']', 'NN'), (',', ','), ('loc=4', 'NN'), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('9', 'CD'), ('10', 'CD'), ('11', 'CD'), ('plotDemo1.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Choosing', 'NNP'), ('Right', 'NNP'), ('Graph', 'NNP'), ('The', 'DT'), ('kind', 'NN'), ('graph', 'NN'), ('choose', 'JJ'), ('determines', 'NNS'), ('people', 'NNS'), ('view', 'VBP'), ('associated', 'VBN'), ('data', 'NNS'), (',', ','), ('choosing', 'VBG'), ('right', 'JJ'), ('graph', 'NN'), ('outset', 'VBN'), ('important', 'JJ'), ('.', '.')]

 (S
  (NP
    Y/NNP
    Label/NNP
    X/NNP
    Label/NNP
    Annotation/NNP
    Legend/NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Plot/NNP –/NNP Labels/NNP)
  ,/,
  (NP Annotation/NNP Legends/NNP)
  (/(
  (NP Example/NNP)
  )/)
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ inline/NN values1/NN =/NNP)
  [/VBZ
  5,8,9,4,1,6,7,2,3,8/CD
  (NP ]/NN values2/NN =/NNP)
  [/VBZ
  8,3,2,7,6,1,4,9,8,5/CD
  (NP ]/NN plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values1/NN)
  )/)
  (NP plt.plot/NN)
  (/(
  (NP range/NN)
  (/(
  1,11/CD
  )/)
  ,/,
  (NP values2/NN)
  )/)
  (NP plt.xlabel/NN)
  (/(
  'Roll/CD
  (NP No/NNP)
  '/POS
  )/)
  (NP plt.ylabel/NN)
  (/(
  (NP 'CPI/NNP)
  '/POS
  )/)
  (NP plt.annotate/NN)
  (/(
  xy=/JJ
  [/$
  5,1/CD
  (NP ]/NNP)
  ,/,
  s='Lowest/JJS
  (NP CPI/NNP)
  '/POS
  )/)
  (NP plt.legend/NN)
  (/(
  (NP [/JJ 'CX/NNP)
  '/POS
  ,/,
  'CY/''
  '/POS
  (NP ]/NN)
  ,/,
  (NP loc=4/NN)
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  9/CD
  10/CD
  11/CD
  (NP plotDemo1.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Choosing/NNP Right/NNP Graph/NNP)
  (NP The/DT kind/NN graph/NN)
  (NP choose/JJ determines/NNS people/NNS)
  view/VBP
  associated/VBN
  (NP data/NNS)
  ,/,
  choosing/VBG
  (NP right/JJ graph/NN)
  outset/VBN
  important/JJ
  ./.) 


>> Noun Phrases are: 
 ['Y Label X Label Annotation Legend Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Plot – Labels', 'Annotation Legends', 'Example', 'import matplotlib.pyplot plt %', 'matplotlib inline values1 =', '] values2 =', '] plt.plot', 'range', 'values1', 'plt.plot', 'range', 'values2', 'plt.xlabel', 'No', 'plt.ylabel', "'CPI", 'plt.annotate', ']', 'CPI', 'plt.legend', "[ 'CX", ']', 'loc=4', 'plt.show', 'plotDemo1.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Choosing Right Graph', 'The kind graph', 'choose determines people', 'data', 'right graph']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Annotation Legends'), ('ORGANIZATION', 'CPI'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Y', 'y'), ('Label', 'label'), ('X', 'x'), ('Label', 'label'), ('Annotation', 'annot'), ('Legend', 'legend'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Labels', 'label'), (',', ','), ('Annotation', 'annot'), ('Legends', 'legend'), ('(', '('), ('Example', 'exampl'), (')', ')'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('plt.xlabel', 'plt.xlabel'), ('(', '('), ("'Roll", "'roll"), ('No', 'no'), ("'", "'"), (')', ')'), ('plt.ylabel', 'plt.ylabel'), ('(', '('), ("'CPI", "'cpi"), ("'", "'"), (')', ')'), ('plt.annotate', 'plt.annot'), ('(', '('), ('xy=', 'xy='), ('[', '['), ('5,1', '5,1'), (']', ']'), (',', ','), ("s='Lowest", "s='lowest"), ('CPI', 'cpi'), ("'", "'"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), ('[', '['), ("'CX", "'cx"), ("'", "'"), (',', ','), ("'CY", "'ci"), ("'", "'"), (']', ']'), (',', ','), ('loc=4', 'loc=4'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Choosing', 'choos'), ('Right', 'right'), ('Graph', 'graph'), ('The', 'the'), ('kind', 'kind'), ('graph', 'graph'), ('choose', 'choos'), ('determines', 'determin'), ('people', 'peopl'), ('view', 'view'), ('associated', 'associ'), ('data', 'data'), (',', ','), ('choosing', 'choos'), ('right', 'right'), ('graph', 'graph'), ('outset', 'outset'), ('important', 'import'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Y', 'y'), ('Label', 'label'), ('X', 'x'), ('Label', 'label'), ('Annotation', 'annot'), ('Legend', 'legend'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'plot'), ('–', '–'), ('Labels', 'label'), (',', ','), ('Annotation', 'annot'), ('Legends', 'legend'), ('(', '('), ('Example', 'exampl'), (')', ')'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'rang'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('plt.xlabel', 'plt.xlabel'), ('(', '('), ("'Roll", 'roll'), ('No', 'no'), ("'", "'"), (')', ')'), ('plt.ylabel', 'plt.ylabel'), ('(', '('), ("'CPI", 'cpi'), ("'", "'"), (')', ')'), ('plt.annotate', 'plt.annot'), ('(', '('), ('xy=', 'xy='), ('[', '['), ('5,1', '5,1'), (']', ']'), (',', ','), ("s='Lowest", "s='lowest"), ('CPI', 'cpi'), ("'", "'"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), ('[', '['), ("'CX", 'cx'), ("'", "'"), (',', ','), ("'CY", 'cy'), ("'", "'"), (']', ']'), (',', ','), ('loc=4', 'loc=4'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('plotDemo1.py', 'plotdemo1.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Choosing', 'choos'), ('Right', 'right'), ('Graph', 'graph'), ('The', 'the'), ('kind', 'kind'), ('graph', 'graph'), ('choose', 'choos'), ('determines', 'determin'), ('people', 'peopl'), ('view', 'view'), ('associated', 'associ'), ('data', 'data'), (',', ','), ('choosing', 'choos'), ('right', 'right'), ('graph', 'graph'), ('outset', 'outset'), ('important', 'import'), ('.', '.')]

>> Lemmatization: 
 [('Y', 'Y'), ('Label', 'Label'), ('X', 'X'), ('Label', 'Label'), ('Annotation', 'Annotation'), ('Legend', 'Legend'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plot', 'Plot'), ('–', '–'), ('Labels', 'Labels'), (',', ','), ('Annotation', 'Annotation'), ('Legends', 'Legends'), ('(', '('), ('Example', 'Example'), (')', ')'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('values1', 'values1'), ('=', '='), ('[', '['), ('5,8,9,4,1,6,7,2,3,8', '5,8,9,4,1,6,7,2,3,8'), (']', ']'), ('values2', 'values2'), ('=', '='), ('[', '['), ('8,3,2,7,6,1,4,9,8,5', '8,3,2,7,6,1,4,9,8,5'), (']', ']'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values1', 'values1'), (')', ')'), ('plt.plot', 'plt.plot'), ('(', '('), ('range', 'range'), ('(', '('), ('1,11', '1,11'), (')', ')'), (',', ','), ('values2', 'values2'), (')', ')'), ('plt.xlabel', 'plt.xlabel'), ('(', '('), ("'Roll", "'Roll"), ('No', 'No'), ("'", "'"), (')', ')'), ('plt.ylabel', 'plt.ylabel'), ('(', '('), ("'CPI", "'CPI"), ("'", "'"), (')', ')'), ('plt.annotate', 'plt.annotate'), ('(', '('), ('xy=', 'xy='), ('[', '['), ('5,1', '5,1'), (']', ']'), (',', ','), ("s='Lowest", "s='Lowest"), ('CPI', 'CPI'), ("'", "'"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), ('[', '['), ("'CX", "'CX"), ("'", "'"), (',', ','), ("'CY", "'CY"), ("'", "'"), (']', ']'), (',', ','), ('loc=4', 'loc=4'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('plotDemo1.py', 'plotDemo1.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Choosing', 'Choosing'), ('Right', 'Right'), ('Graph', 'Graph'), ('The', 'The'), ('kind', 'kind'), ('graph', 'graph'), ('choose', 'choose'), ('determines', 'determines'), ('people', 'people'), ('view', 'view'), ('associated', 'associated'), ('data', 'data'), (',', ','), ('choosing', 'choosing'), ('right', 'right'), ('graph', 'graph'), ('outset', 'outset'), ('important', 'important'), ('.', '.')]



============================ Sentence 18 =============================

For example,  if we want o show how various data elements contribute towards a whole, we should use pie chart. 


>> Tokens are: 
 ['For', 'example', ',', 'want', 'show', 'various', 'data', 'elements', 'contribute', 'towards', 'whole', ',', 'use', 'pie', 'chart', '.']

>> Bigrams are: 
 [('For', 'example'), ('example', ','), (',', 'want'), ('want', 'show'), ('show', 'various'), ('various', 'data'), ('data', 'elements'), ('elements', 'contribute'), ('contribute', 'towards'), ('towards', 'whole'), ('whole', ','), (',', 'use'), ('use', 'pie'), ('pie', 'chart'), ('chart', '.')]

>> Trigrams are: 
 [('For', 'example', ','), ('example', ',', 'want'), (',', 'want', 'show'), ('want', 'show', 'various'), ('show', 'various', 'data'), ('various', 'data', 'elements'), ('data', 'elements', 'contribute'), ('elements', 'contribute', 'towards'), ('contribute', 'towards', 'whole'), ('towards', 'whole', ','), ('whole', ',', 'use'), (',', 'use', 'pie'), ('use', 'pie', 'chart'), ('pie', 'chart', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('example', 'NN'), (',', ','), ('want', 'VBP'), ('show', 'VBP'), ('various', 'JJ'), ('data', 'NNS'), ('elements', 'NNS'), ('contribute', 'VBP'), ('towards', 'NNS'), ('whole', 'JJ'), (',', ','), ('use', 'JJ'), ('pie', 'JJ'), ('chart', 'NN'), ('.', '.')]

 (S
  For/IN
  (NP example/NN)
  ,/,
  want/VBP
  show/VBP
  (NP various/JJ data/NNS elements/NNS)
  contribute/VBP
  (NP towards/NNS)
  whole/JJ
  ,/,
  (NP use/JJ pie/JJ chart/NN)
  ./.) 


>> Noun Phrases are: 
 ['example', 'various data elements', 'towards', 'use pie chart']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('want', 'want'), ('show', 'show'), ('various', 'variou'), ('data', 'data'), ('elements', 'element'), ('contribute', 'contribut'), ('towards', 'toward'), ('whole', 'whole'), (',', ','), ('use', 'use'), ('pie', 'pie'), ('chart', 'chart'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('example', 'exampl'), (',', ','), ('want', 'want'), ('show', 'show'), ('various', 'various'), ('data', 'data'), ('elements', 'element'), ('contribute', 'contribut'), ('towards', 'toward'), ('whole', 'whole'), (',', ','), ('use', 'use'), ('pie', 'pie'), ('chart', 'chart'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('example', 'example'), (',', ','), ('want', 'want'), ('show', 'show'), ('various', 'various'), ('data', 'data'), ('elements', 'element'), ('contribute', 'contribute'), ('towards', 'towards'), ('whole', 'whole'), (',', ','), ('use', 'use'), ('pie', 'pie'), ('chart', 'chart'), ('.', '.')]



============================ Sentence 19 =============================

If we want to compare data elements, we should use bar chart. 


>> Tokens are: 
 ['If', 'want', 'compare', 'data', 'elements', ',', 'use', 'bar', 'chart', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'compare'), ('compare', 'data'), ('data', 'elements'), ('elements', ','), (',', 'use'), ('use', 'bar'), ('bar', 'chart'), ('chart', '.')]

>> Trigrams are: 
 [('If', 'want', 'compare'), ('want', 'compare', 'data'), ('compare', 'data', 'elements'), ('data', 'elements', ','), ('elements', ',', 'use'), (',', 'use', 'bar'), ('use', 'bar', 'chart'), ('bar', 'chart', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('compare', 'NN'), ('data', 'NNS'), ('elements', 'NNS'), (',', ','), ('use', 'VBP'), ('bar', 'NN'), ('chart', 'NN'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ compare/NN data/NNS elements/NNS)
  ,/,
  use/VBP
  (NP bar/NN chart/NN)
  ./.) 


>> Noun Phrases are: 
 ['want compare data elements', 'bar chart']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('compare', 'compar'), ('data', 'data'), ('elements', 'element'), (',', ','), ('use', 'use'), ('bar', 'bar'), ('chart', 'chart'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('compare', 'compar'), ('data', 'data'), ('elements', 'element'), (',', ','), ('use', 'use'), ('bar', 'bar'), ('chart', 'chart'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('compare', 'compare'), ('data', 'data'), ('elements', 'element'), (',', ','), ('use', 'use'), ('bar', 'bar'), ('chart', 'chart'), ('.', '.')]



============================ Sentence 20 =============================

If we want to show distribution of elements, we should use histograms. 


>> Tokens are: 
 ['If', 'want', 'show', 'distribution', 'elements', ',', 'use', 'histograms', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'show'), ('show', 'distribution'), ('distribution', 'elements'), ('elements', ','), (',', 'use'), ('use', 'histograms'), ('histograms', '.')]

>> Trigrams are: 
 [('If', 'want', 'show'), ('want', 'show', 'distribution'), ('show', 'distribution', 'elements'), ('distribution', 'elements', ','), ('elements', ',', 'use'), (',', 'use', 'histograms'), ('use', 'histograms', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('show', 'NN'), ('distribution', 'NN'), ('elements', 'NNS'), (',', ','), ('use', 'NN'), ('histograms', 'NNS'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ show/NN distribution/NN elements/NNS)
  ,/,
  (NP use/NN histograms/NNS)
  ./.) 


>> Noun Phrases are: 
 ['want show distribution elements', 'use histograms']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('show', 'show'), ('distribution', 'distribut'), ('elements', 'element'), (',', ','), ('use', 'use'), ('histograms', 'histogram'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('show', 'show'), ('distribution', 'distribut'), ('elements', 'element'), (',', ','), ('use', 'use'), ('histograms', 'histogram'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('show', 'show'), ('distribution', 'distribution'), ('elements', 'element'), (',', ','), ('use', 'use'), ('histograms', 'histogram'), ('.', '.')]



============================ Sentence 21 =============================

If we want to depict groups in elements, we should use boxplots. 


>> Tokens are: 
 ['If', 'want', 'depict', 'groups', 'elements', ',', 'use', 'boxplots', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'depict'), ('depict', 'groups'), ('groups', 'elements'), ('elements', ','), (',', 'use'), ('use', 'boxplots'), ('boxplots', '.')]

>> Trigrams are: 
 [('If', 'want', 'depict'), ('want', 'depict', 'groups'), ('depict', 'groups', 'elements'), ('groups', 'elements', ','), ('elements', ',', 'use'), (',', 'use', 'boxplots'), ('use', 'boxplots', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('depict', 'NN'), ('groups', 'NNS'), ('elements', 'NNS'), (',', ','), ('use', 'NN'), ('boxplots', 'NNS'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ depict/NN groups/NNS elements/NNS)
  ,/,
  (NP use/NN boxplots/NNS)
  ./.) 


>> Noun Phrases are: 
 ['want depict groups elements', 'use boxplots']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('depict', 'depict'), ('groups', 'group'), ('elements', 'element'), (',', ','), ('use', 'use'), ('boxplots', 'boxplot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('depict', 'depict'), ('groups', 'group'), ('elements', 'element'), (',', ','), ('use', 'use'), ('boxplots', 'boxplot'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('depict', 'depict'), ('groups', 'group'), ('elements', 'element'), (',', ','), ('use', 'use'), ('boxplots', 'boxplots'), ('.', '.')]



============================ Sentence 22 =============================

If we want to find patterns in data, we should use scatterplots. 


>> Tokens are: 
 ['If', 'want', 'find', 'patterns', 'data', ',', 'use', 'scatterplots', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'find'), ('find', 'patterns'), ('patterns', 'data'), ('data', ','), (',', 'use'), ('use', 'scatterplots'), ('scatterplots', '.')]

>> Trigrams are: 
 [('If', 'want', 'find'), ('want', 'find', 'patterns'), ('find', 'patterns', 'data'), ('patterns', 'data', ','), ('data', ',', 'use'), (',', 'use', 'scatterplots'), ('use', 'scatterplots', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('find', 'NN'), ('patterns', 'NNS'), ('data', 'NNS'), (',', ','), ('use', 'NN'), ('scatterplots', 'NNS'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ find/NN patterns/NNS data/NNS)
  ,/,
  (NP use/NN scatterplots/NNS)
  ./.) 


>> Noun Phrases are: 
 ['want find patterns data', 'use scatterplots']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('find', 'find'), ('patterns', 'pattern'), ('data', 'data'), (',', ','), ('use', 'use'), ('scatterplots', 'scatterplot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('find', 'find'), ('patterns', 'pattern'), ('data', 'data'), (',', ','), ('use', 'use'), ('scatterplots', 'scatterplot'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('find', 'find'), ('patterns', 'pattern'), ('data', 'data'), (',', ','), ('use', 'use'), ('scatterplots', 'scatterplots'), ('.', '.')]



============================ Sentence 23 =============================

If we want to display trends over time, we should use line chart. 


>> Tokens are: 
 ['If', 'want', 'display', 'trends', 'time', ',', 'use', 'line', 'chart', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'display'), ('display', 'trends'), ('trends', 'time'), ('time', ','), (',', 'use'), ('use', 'line'), ('line', 'chart'), ('chart', '.')]

>> Trigrams are: 
 [('If', 'want', 'display'), ('want', 'display', 'trends'), ('display', 'trends', 'time'), ('trends', 'time', ','), ('time', ',', 'use'), (',', 'use', 'line'), ('use', 'line', 'chart'), ('line', 'chart', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('display', 'NN'), ('trends', 'NNS'), ('time', 'NN'), (',', ','), ('use', 'VBP'), ('line', 'NN'), ('chart', 'NN'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ display/NN trends/NNS time/NN)
  ,/,
  use/VBP
  (NP line/NN chart/NN)
  ./.) 


>> Noun Phrases are: 
 ['want display trends time', 'line chart']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('display', 'display'), ('trends', 'trend'), ('time', 'time'), (',', ','), ('use', 'use'), ('line', 'line'), ('chart', 'chart'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('display', 'display'), ('trends', 'trend'), ('time', 'time'), (',', ','), ('use', 'use'), ('line', 'line'), ('chart', 'chart'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('display', 'display'), ('trends', 'trend'), ('time', 'time'), (',', ','), ('use', 'use'), ('line', 'line'), ('chart', 'chart'), ('.', '.')]



============================ Sentence 24 =============================

If we want to display geographical data, we should use basemap. 


>> Tokens are: 
 ['If', 'want', 'display', 'geographical', 'data', ',', 'use', 'basemap', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'display'), ('display', 'geographical'), ('geographical', 'data'), ('data', ','), (',', 'use'), ('use', 'basemap'), ('basemap', '.')]

>> Trigrams are: 
 [('If', 'want', 'display'), ('want', 'display', 'geographical'), ('display', 'geographical', 'data'), ('geographical', 'data', ','), ('data', ',', 'use'), (',', 'use', 'basemap'), ('use', 'basemap', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('display', 'NN'), ('geographical', 'JJ'), ('data', 'NNS'), (',', ','), ('use', 'NN'), ('basemap', 'NN'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ display/NN)
  (NP geographical/JJ data/NNS)
  ,/,
  (NP use/NN basemap/NN)
  ./.) 


>> Noun Phrases are: 
 ['want display', 'geographical data', 'use basemap']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('display', 'display'), ('geographical', 'geograph'), ('data', 'data'), (',', ','), ('use', 'use'), ('basemap', 'basemap'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('display', 'display'), ('geographical', 'geograph'), ('data', 'data'), (',', ','), ('use', 'use'), ('basemap', 'basemap'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('display', 'display'), ('geographical', 'geographical'), ('data', 'data'), (',', ','), ('use', 'use'), ('basemap', 'basemap'), ('.', '.')]



============================ Sentence 25 =============================

If we want to display network, we should use networkx. 


>> Tokens are: 
 ['If', 'want', 'display', 'network', ',', 'use', 'networkx', '.']

>> Bigrams are: 
 [('If', 'want'), ('want', 'display'), ('display', 'network'), ('network', ','), (',', 'use'), ('use', 'networkx'), ('networkx', '.')]

>> Trigrams are: 
 [('If', 'want', 'display'), ('want', 'display', 'network'), ('display', 'network', ','), ('network', ',', 'use'), (',', 'use', 'networkx'), ('use', 'networkx', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('want', 'JJ'), ('display', 'NN'), ('network', 'NN'), (',', ','), ('use', 'NN'), ('networkx', 'NN'), ('.', '.')]

 (S
  If/IN
  (NP want/JJ display/NN network/NN)
  ,/,
  (NP use/NN networkx/NN)
  ./.) 


>> Noun Phrases are: 
 ['want display network', 'use networkx']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('want', 'want'), ('display', 'display'), ('network', 'network'), (',', ','), ('use', 'use'), ('networkx', 'networkx'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('want', 'want'), ('display', 'display'), ('network', 'network'), (',', ','), ('use', 'use'), ('networkx', 'networkx'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('want', 'want'), ('display', 'display'), ('network', 'network'), (',', ','), ('use', 'use'), ('networkx', 'networkx'), ('.', '.')]



============================ Sentence 26 =============================

All the above graphs are there in our syllabus and we are going to cover all the graphs in this Unit. 


>> Tokens are: 
 ['All', 'graphs', 'syllabus', 'going', 'cover', 'graphs', 'Unit', '.']

>> Bigrams are: 
 [('All', 'graphs'), ('graphs', 'syllabus'), ('syllabus', 'going'), ('going', 'cover'), ('cover', 'graphs'), ('graphs', 'Unit'), ('Unit', '.')]

>> Trigrams are: 
 [('All', 'graphs', 'syllabus'), ('graphs', 'syllabus', 'going'), ('syllabus', 'going', 'cover'), ('going', 'cover', 'graphs'), ('cover', 'graphs', 'Unit'), ('graphs', 'Unit', '.')]

>> POS Tags are: 
 [('All', 'DT'), ('graphs', 'NN'), ('syllabus', 'NN'), ('going', 'VBG'), ('cover', 'JJ'), ('graphs', 'NN'), ('Unit', 'NNP'), ('.', '.')]

 (S
  (NP All/DT graphs/NN syllabus/NN)
  going/VBG
  (NP cover/JJ graphs/NN Unit/NNP)
  ./.) 


>> Noun Phrases are: 
 ['All graphs syllabus', 'cover graphs Unit']

>> Named Entities are: 
 [('PERSON', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('All', 'all'), ('graphs', 'graph'), ('syllabus', 'syllabu'), ('going', 'go'), ('cover', 'cover'), ('graphs', 'graph'), ('Unit', 'unit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('All', 'all'), ('graphs', 'graph'), ('syllabus', 'syllabus'), ('going', 'go'), ('cover', 'cover'), ('graphs', 'graph'), ('Unit', 'unit'), ('.', '.')]

>> Lemmatization: 
 [('All', 'All'), ('graphs', 'graph'), ('syllabus', 'syllabus'), ('going', 'going'), ('cover', 'cover'), ('graphs', 'graph'), ('Unit', 'Unit'), ('.', '.')]



============================ Sentence 27 =============================

We are also going to cover some other types of libraries which is not in the syllabus like seaborn, plotly, cufflinks and choropleth maps etc..    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›   Pie Chart Pie chart focus on showing parts of a whole, the entire pie would be 100 percentage, the question is how much of that percentage each value occupies. 


>> Tokens are: 
 ['We', 'also', 'going', 'cover', 'types', 'libraries', 'syllabus', 'like', 'seaborn', ',', 'plotly', ',', 'cufflinks', 'choropleth', 'maps', 'etc', '..', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Pie', 'Chart', 'Pie', 'chart', 'focus', 'showing', 'parts', 'whole', ',', 'entire', 'pie', 'would', '100', 'percentage', ',', 'question', 'much', 'percentage', 'value', 'occupies', '.']

>> Bigrams are: 
 [('We', 'also'), ('also', 'going'), ('going', 'cover'), ('cover', 'types'), ('types', 'libraries'), ('libraries', 'syllabus'), ('syllabus', 'like'), ('like', 'seaborn'), ('seaborn', ','), (',', 'plotly'), ('plotly', ','), (',', 'cufflinks'), ('cufflinks', 'choropleth'), ('choropleth', 'maps'), ('maps', 'etc'), ('etc', '..'), ('..', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Pie'), ('Pie', 'Chart'), ('Chart', 'Pie'), ('Pie', 'chart'), ('chart', 'focus'), ('focus', 'showing'), ('showing', 'parts'), ('parts', 'whole'), ('whole', ','), (',', 'entire'), ('entire', 'pie'), ('pie', 'would'), ('would', '100'), ('100', 'percentage'), ('percentage', ','), (',', 'question'), ('question', 'much'), ('much', 'percentage'), ('percentage', 'value'), ('value', 'occupies'), ('occupies', '.')]

>> Trigrams are: 
 [('We', 'also', 'going'), ('also', 'going', 'cover'), ('going', 'cover', 'types'), ('cover', 'types', 'libraries'), ('types', 'libraries', 'syllabus'), ('libraries', 'syllabus', 'like'), ('syllabus', 'like', 'seaborn'), ('like', 'seaborn', ','), ('seaborn', ',', 'plotly'), (',', 'plotly', ','), ('plotly', ',', 'cufflinks'), (',', 'cufflinks', 'choropleth'), ('cufflinks', 'choropleth', 'maps'), ('choropleth', 'maps', 'etc'), ('maps', 'etc', '..'), ('etc', '..', 'Prof.'), ('..', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Pie'), ('›', 'Pie', 'Chart'), ('Pie', 'Chart', 'Pie'), ('Chart', 'Pie', 'chart'), ('Pie', 'chart', 'focus'), ('chart', 'focus', 'showing'), ('focus', 'showing', 'parts'), ('showing', 'parts', 'whole'), ('parts', 'whole', ','), ('whole', ',', 'entire'), (',', 'entire', 'pie'), ('entire', 'pie', 'would'), ('pie', 'would', '100'), ('would', '100', 'percentage'), ('100', 'percentage', ','), ('percentage', ',', 'question'), (',', 'question', 'much'), ('question', 'much', 'percentage'), ('much', 'percentage', 'value'), ('percentage', 'value', 'occupies'), ('value', 'occupies', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('also', 'RB'), ('going', 'VBG'), ('cover', 'RB'), ('types', 'NNS'), ('libraries', 'NNS'), ('syllabus', 'VBP'), ('like', 'IN'), ('seaborn', 'NN'), (',', ','), ('plotly', 'RB'), (',', ','), ('cufflinks', 'NNS'), ('choropleth', 'VBP'), ('maps', 'NNS'), ('etc', 'FW'), ('..', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Pie', 'NNP'), ('Chart', 'NNP'), ('Pie', 'NNP'), ('chart', 'NN'), ('focus', 'NN'), ('showing', 'VBG'), ('parts', 'NNS'), ('whole', 'JJ'), (',', ','), ('entire', 'JJ'), ('pie', 'NN'), ('would', 'MD'), ('100', 'CD'), ('percentage', 'NN'), (',', ','), ('question', 'NN'), ('much', 'JJ'), ('percentage', 'NN'), ('value', 'NN'), ('occupies', 'NNS'), ('.', '.')]

 (S
  We/PRP
  also/RB
  going/VBG
  cover/RB
  (NP types/NNS libraries/NNS)
  syllabus/VBP
  like/IN
  (NP seaborn/NN)
  ,/,
  plotly/RB
  ,/,
  (NP cufflinks/NNS)
  choropleth/VBP
  (NP maps/NNS)
  etc/FW
  (NP ../NNP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Pie/NNP Chart/NNP Pie/NNP chart/NN focus/NN)
  showing/VBG
  (NP parts/NNS)
  whole/JJ
  ,/,
  (NP entire/JJ pie/NN)
  would/MD
  100/CD
  (NP percentage/NN)
  ,/,
  (NP question/NN)
  (NP much/JJ percentage/NN value/NN occupies/NNS)
  ./.) 


>> Noun Phrases are: 
 ['types libraries', 'seaborn', 'cufflinks', 'maps', '.. Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Pie Chart Pie chart focus', 'parts', 'entire pie', 'percentage', 'question', 'much percentage value occupies']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('also', 'also'), ('going', 'go'), ('cover', 'cover'), ('types', 'type'), ('libraries', 'librari'), ('syllabus', 'syllabu'), ('like', 'like'), ('seaborn', 'seaborn'), (',', ','), ('plotly', 'plotli'), (',', ','), ('cufflinks', 'cufflink'), ('choropleth', 'choropleth'), ('maps', 'map'), ('etc', 'etc'), ('..', '..'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Pie', 'pie'), ('Chart', 'chart'), ('Pie', 'pie'), ('chart', 'chart'), ('focus', 'focu'), ('showing', 'show'), ('parts', 'part'), ('whole', 'whole'), (',', ','), ('entire', 'entir'), ('pie', 'pie'), ('would', 'would'), ('100', '100'), ('percentage', 'percentag'), (',', ','), ('question', 'question'), ('much', 'much'), ('percentage', 'percentag'), ('value', 'valu'), ('occupies', 'occupi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('also', 'also'), ('going', 'go'), ('cover', 'cover'), ('types', 'type'), ('libraries', 'librari'), ('syllabus', 'syllabus'), ('like', 'like'), ('seaborn', 'seaborn'), (',', ','), ('plotly', 'plot'), (',', ','), ('cufflinks', 'cufflink'), ('choropleth', 'choropleth'), ('maps', 'map'), ('etc', 'etc'), ('..', '..'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Pie', 'pie'), ('Chart', 'chart'), ('Pie', 'pie'), ('chart', 'chart'), ('focus', 'focus'), ('showing', 'show'), ('parts', 'part'), ('whole', 'whole'), (',', ','), ('entire', 'entir'), ('pie', 'pie'), ('would', 'would'), ('100', '100'), ('percentage', 'percentag'), (',', ','), ('question', 'question'), ('much', 'much'), ('percentage', 'percentag'), ('value', 'valu'), ('occupies', 'occupi'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('also', 'also'), ('going', 'going'), ('cover', 'cover'), ('types', 'type'), ('libraries', 'library'), ('syllabus', 'syllabus'), ('like', 'like'), ('seaborn', 'seaborn'), (',', ','), ('plotly', 'plotly'), (',', ','), ('cufflinks', 'cufflink'), ('choropleth', 'choropleth'), ('maps', 'map'), ('etc', 'etc'), ('..', '..'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Pie', 'Pie'), ('Chart', 'Chart'), ('Pie', 'Pie'), ('chart', 'chart'), ('focus', 'focus'), ('showing', 'showing'), ('parts', 'part'), ('whole', 'whole'), (',', ','), ('entire', 'entire'), ('pie', 'pie'), ('would', 'would'), ('100', '100'), ('percentage', 'percentage'), (',', ','), ('question', 'question'), ('much', 'much'), ('percentage', 'percentage'), ('value', 'value'), ('occupies', 'occupies'), ('.', '.')]



============================ Sentence 28 =============================

import matplotlib.pyplot as plt %matplotlib notebook values = [305,201,805,35,436] l = ['Food','Travel','Accomodation','Misc','Shoping'] c = ['b','g','r','c','m'] e = [0,0.2,0,0,0] plt.pie(values,colors=c,labels=l,explode=e) plt.show() 1 2 3 4  5 6 7 8 pieChartDemo.py    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Pie Chart (Cont.) 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'notebook', 'values', '=', '[', '305,201,805,35,436', ']', 'l', '=', '[', "'Food", "'", ',', "'Travel", "'", ',', "'Accomodation", "'", ',', "'Misc", "'", ',', "'Shoping", "'", ']', 'c', '=', '[', "'", 'b', "'", ',', "'", 'g', "'", ',', "'", 'r', "'", ',', "'", 'c', "'", ',', "'m", "'", ']', 'e', '=', '[', '0,0.2,0,0,0', ']', 'plt.pie', '(', 'values', ',', 'colors=c', ',', 'labels=l', ',', 'explode=e', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', '8', 'pieChartDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Pie', 'Chart', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'notebook'), ('notebook', 'values'), ('values', '='), ('=', '['), ('[', '305,201,805,35,436'), ('305,201,805,35,436', ']'), (']', 'l'), ('l', '='), ('=', '['), ('[', "'Food"), ("'Food", "'"), ("'", ','), (',', "'Travel"), ("'Travel", "'"), ("'", ','), (',', "'Accomodation"), ("'Accomodation", "'"), ("'", ','), (',', "'Misc"), ("'Misc", "'"), ("'", ','), (',', "'Shoping"), ("'Shoping", "'"), ("'", ']'), (']', 'c'), ('c', '='), ('=', '['), ('[', "'"), ("'", 'b'), ('b', "'"), ("'", ','), (',', "'"), ("'", 'g'), ('g', "'"), ("'", ','), (',', "'"), ("'", 'r'), ('r', "'"), ("'", ','), (',', "'"), ("'", 'c'), ('c', "'"), ("'", ','), (',', "'m"), ("'m", "'"), ("'", ']'), (']', 'e'), ('e', '='), ('=', '['), ('[', '0,0.2,0,0,0'), ('0,0.2,0,0,0', ']'), (']', 'plt.pie'), ('plt.pie', '('), ('(', 'values'), ('values', ','), (',', 'colors=c'), ('colors=c', ','), (',', 'labels=l'), ('labels=l', ','), (',', 'explode=e'), ('explode=e', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', 'pieChartDemo.py'), ('pieChartDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Pie'), ('Pie', 'Chart'), ('Chart', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'notebook'), ('matplotlib', 'notebook', 'values'), ('notebook', 'values', '='), ('values', '=', '['), ('=', '[', '305,201,805,35,436'), ('[', '305,201,805,35,436', ']'), ('305,201,805,35,436', ']', 'l'), (']', 'l', '='), ('l', '=', '['), ('=', '[', "'Food"), ('[', "'Food", "'"), ("'Food", "'", ','), ("'", ',', "'Travel"), (',', "'Travel", "'"), ("'Travel", "'", ','), ("'", ',', "'Accomodation"), (',', "'Accomodation", "'"), ("'Accomodation", "'", ','), ("'", ',', "'Misc"), (',', "'Misc", "'"), ("'Misc", "'", ','), ("'", ',', "'Shoping"), (',', "'Shoping", "'"), ("'Shoping", "'", ']'), ("'", ']', 'c'), (']', 'c', '='), ('c', '=', '['), ('=', '[', "'"), ('[', "'", 'b'), ("'", 'b', "'"), ('b', "'", ','), ("'", ',', "'"), (',', "'", 'g'), ("'", 'g', "'"), ('g', "'", ','), ("'", ',', "'"), (',', "'", 'r'), ("'", 'r', "'"), ('r', "'", ','), ("'", ',', "'"), (',', "'", 'c'), ("'", 'c', "'"), ('c', "'", ','), ("'", ',', "'m"), (',', "'m", "'"), ("'m", "'", ']'), ("'", ']', 'e'), (']', 'e', '='), ('e', '=', '['), ('=', '[', '0,0.2,0,0,0'), ('[', '0,0.2,0,0,0', ']'), ('0,0.2,0,0,0', ']', 'plt.pie'), (']', 'plt.pie', '('), ('plt.pie', '(', 'values'), ('(', 'values', ','), ('values', ',', 'colors=c'), (',', 'colors=c', ','), ('colors=c', ',', 'labels=l'), (',', 'labels=l', ','), ('labels=l', ',', 'explode=e'), (',', 'explode=e', ')'), ('explode=e', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', 'pieChartDemo.py'), ('8', 'pieChartDemo.py', 'Prof.'), ('pieChartDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Pie'), ('›', 'Pie', 'Chart'), ('Pie', 'Chart', '('), ('Chart', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('notebook', 'NN'), ('values', 'NNS'), ('=', 'VBP'), ('[', '$'), ('305,201,805,35,436', 'CD'), (']', 'NNP'), ('l', 'NN'), ('=', 'NNP'), ('[', 'NNP'), ("'Food", 'NNP'), ("'", 'POS'), (',', ','), ("'Travel", 'NNP'), ("'", 'POS'), (',', ','), ("'Accomodation", 'NN'), ("'", "''"), (',', ','), ("'Misc", 'NNP'), ("'", 'POS'), (',', ','), ("'Shoping", 'VBG'), ("'", "''"), (']', 'JJ'), ('c', 'NNS'), ('=', 'VBP'), ('[', 'NNP'), ("'", 'POS'), ('b', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('g', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('r', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('c', 'NN'), ("'", "''"), (',', ','), ("'m", 'VBP'), ("'", 'POS'), (']', 'JJ'), ('e', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('0,0.2,0,0,0', 'CD'), (']', 'NN'), ('plt.pie', 'NN'), ('(', '('), ('values', 'NNS'), (',', ','), ('colors=c', 'NN'), (',', ','), ('labels=l', 'NN'), (',', ','), ('explode=e', 'NN'), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('pieChartDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Pie', 'NNP'), ('Chart', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ notebook/NN values/NNS)
  =/VBP
  [/$
  305,201,805,35,436/CD
  (NP ]/NNP l/NN =/NNP [/NNP 'Food/NNP)
  '/POS
  ,/,
  (NP 'Travel/NNP)
  '/POS
  ,/,
  (NP 'Accomodation/NN)
  '/''
  ,/,
  (NP 'Misc/NNP)
  '/POS
  ,/,
  'Shoping/VBG
  '/''
  (NP ]/JJ c/NNS)
  =/VBP
  (NP [/NNP)
  '/POS
  (NP b/NN)
  '/''
  ,/,
  '/''
  (NP g/NN)
  '/''
  ,/,
  '/''
  (NP r/NN)
  '/''
  ,/,
  '/''
  (NP c/NN)
  '/''
  ,/,
  'm/VBP
  '/POS
  (NP ]/JJ e/NN =/NNP)
  [/VBZ
  0,0.2,0,0,0/CD
  (NP ]/NN plt.pie/NN)
  (/(
  (NP values/NNS)
  ,/,
  (NP colors=c/NN)
  ,/,
  (NP labels=l/NN)
  ,/,
  (NP explode=e/NN)
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  (NP pieChartDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Pie/NNP Chart/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt %', 'matplotlib notebook values', "] l = [ 'Food", "'Travel", "'Accomodation", "'Misc", '] c', '[', 'b', 'g', 'r', 'c', '] e =', '] plt.pie', 'values', 'colors=c', 'labels=l', 'explode=e', 'plt.show', 'pieChartDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Pie Chart', 'Cont']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'valu'), ('=', '='), ('[', '['), ('305,201,805,35,436', '305,201,805,35,436'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'Food", "'food"), ("'", "'"), (',', ','), ("'Travel", "'travel"), ("'", "'"), (',', ','), ("'Accomodation", "'accomod"), ("'", "'"), (',', ','), ("'Misc", "'misc"), ("'", "'"), (',', ','), ("'Shoping", "'shope"), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('e', 'e'), ('=', '='), ('[', '['), ('0,0.2,0,0,0', '0,0.2,0,0,0'), (']', ']'), ('plt.pie', 'plt.pie'), ('(', '('), ('values', 'valu'), (',', ','), ('colors=c', 'colors=c'), (',', ','), ('labels=l', 'labels=l'), (',', ','), ('explode=e', 'explode='), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('pieChartDemo.py', 'piechartdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Pie', 'pie'), ('Chart', 'chart'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'valu'), ('=', '='), ('[', '['), ('305,201,805,35,436', '305,201,805,35,436'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'Food", 'food'), ("'", "'"), (',', ','), ("'Travel", 'travel'), ("'", "'"), (',', ','), ("'Accomodation", 'accomod'), ("'", "'"), (',', ','), ("'Misc", 'misc'), ("'", "'"), (',', ','), ("'Shoping", 'shope'), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('e', 'e'), ('=', '='), ('[', '['), ('0,0.2,0,0,0', '0,0.2,0,0,0'), (']', ']'), ('plt.pie', 'plt.pie'), ('(', '('), ('values', 'valu'), (',', ','), ('colors=c', 'colors=c'), (',', ','), ('labels=l', 'labels=l'), (',', ','), ('explode=e', 'explode='), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('pieChartDemo.py', 'piechartdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Pie', 'pie'), ('Chart', 'chart'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'value'), ('=', '='), ('[', '['), ('305,201,805,35,436', '305,201,805,35,436'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'Food", "'Food"), ("'", "'"), (',', ','), ("'Travel", "'Travel"), ("'", "'"), (',', ','), ("'Accomodation", "'Accomodation"), ("'", "'"), (',', ','), ("'Misc", "'Misc"), ("'", "'"), (',', ','), ("'Shoping", "'Shoping"), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('e', 'e'), ('=', '='), ('[', '['), ('0,0.2,0,0,0', '0,0.2,0,0,0'), (']', ']'), ('plt.pie', 'plt.pie'), ('(', '('), ('values', 'value'), (',', ','), ('colors=c', 'colors=c'), (',', ','), ('labels=l', 'labels=l'), (',', ','), ('explode=e', 'explode=e'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('pieChartDemo.py', 'pieChartDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Pie', 'Pie'), ('Chart', 'Chart'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 29 =============================

There are lots of other options available with the pie chart, we are going to cover two important parameters in this slide. 


>> Tokens are: 
 ['There', 'lots', 'options', 'available', 'pie', 'chart', ',', 'going', 'cover', 'two', 'important', 'parameters', 'slide', '.']

>> Bigrams are: 
 [('There', 'lots'), ('lots', 'options'), ('options', 'available'), ('available', 'pie'), ('pie', 'chart'), ('chart', ','), (',', 'going'), ('going', 'cover'), ('cover', 'two'), ('two', 'important'), ('important', 'parameters'), ('parameters', 'slide'), ('slide', '.')]

>> Trigrams are: 
 [('There', 'lots', 'options'), ('lots', 'options', 'available'), ('options', 'available', 'pie'), ('available', 'pie', 'chart'), ('pie', 'chart', ','), ('chart', ',', 'going'), (',', 'going', 'cover'), ('going', 'cover', 'two'), ('cover', 'two', 'important'), ('two', 'important', 'parameters'), ('important', 'parameters', 'slide'), ('parameters', 'slide', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('lots', 'NNS'), ('options', 'NNS'), ('available', 'JJ'), ('pie', 'JJ'), ('chart', 'NN'), (',', ','), ('going', 'VBG'), ('cover', 'RB'), ('two', 'CD'), ('important', 'JJ'), ('parameters', 'NNS'), ('slide', 'VBP'), ('.', '.')]

 (S
  There/EX
  (NP lots/NNS options/NNS)
  (NP available/JJ pie/JJ chart/NN)
  ,/,
  going/VBG
  cover/RB
  two/CD
  (NP important/JJ parameters/NNS)
  slide/VBP
  ./.) 


>> Noun Phrases are: 
 ['lots options', 'available pie chart', 'important parameters']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('lots', 'lot'), ('options', 'option'), ('available', 'avail'), ('pie', 'pie'), ('chart', 'chart'), (',', ','), ('going', 'go'), ('cover', 'cover'), ('two', 'two'), ('important', 'import'), ('parameters', 'paramet'), ('slide', 'slide'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('lots', 'lot'), ('options', 'option'), ('available', 'avail'), ('pie', 'pie'), ('chart', 'chart'), (',', ','), ('going', 'go'), ('cover', 'cover'), ('two', 'two'), ('important', 'import'), ('parameters', 'paramet'), ('slide', 'slide'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('lots', 'lot'), ('options', 'option'), ('available', 'available'), ('pie', 'pie'), ('chart', 'chart'), (',', ','), ('going', 'going'), ('cover', 'cover'), ('two', 'two'), ('important', 'important'), ('parameters', 'parameter'), ('slide', 'slide'), ('.', '.')]



============================ Sentence 30 =============================

import matplotlib.pyplot as plt %matplotlib notebook values = [305,201,805,35,436] l = ['Food','Travel','Accomodation','Misc','Shoping'] c = ['b','g','r','c','m'] plt.pie(values,colors=c,labels=l,shadow=True,         autopct='%1.1f%%') plt.show() 1 2 3 4  5 6 7 8 pieChartDemo.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Bar charts Bar charts make comparing values easy, wide bars an d segregated measurements emphasize the difference between values, rather that the flow of one value to another as a line graph. 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'notebook', 'values', '=', '[', '305,201,805,35,436', ']', 'l', '=', '[', "'Food", "'", ',', "'Travel", "'", ',', "'Accomodation", "'", ',', "'Misc", "'", ',', "'Shoping", "'", ']', 'c', '=', '[', "'", 'b', "'", ',', "'", 'g', "'", ',', "'", 'r', "'", ',', "'", 'c', "'", ',', "'m", "'", ']', 'plt.pie', '(', 'values', ',', 'colors=c', ',', 'labels=l', ',', 'shadow=True', ',', 'autopct=', "'", '%', '1.1f', '%', '%', "'", ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', '8', 'pieChartDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Bar', 'charts', 'Bar', 'charts', 'make', 'comparing', 'values', 'easy', ',', 'wide', 'bars', 'segregated', 'measurements', 'emphasize', 'difference', 'values', ',', 'rather', 'flow', 'one', 'value', 'another', 'line', 'graph', '.']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'notebook'), ('notebook', 'values'), ('values', '='), ('=', '['), ('[', '305,201,805,35,436'), ('305,201,805,35,436', ']'), (']', 'l'), ('l', '='), ('=', '['), ('[', "'Food"), ("'Food", "'"), ("'", ','), (',', "'Travel"), ("'Travel", "'"), ("'", ','), (',', "'Accomodation"), ("'Accomodation", "'"), ("'", ','), (',', "'Misc"), ("'Misc", "'"), ("'", ','), (',', "'Shoping"), ("'Shoping", "'"), ("'", ']'), (']', 'c'), ('c', '='), ('=', '['), ('[', "'"), ("'", 'b'), ('b', "'"), ("'", ','), (',', "'"), ("'", 'g'), ('g', "'"), ("'", ','), (',', "'"), ("'", 'r'), ('r', "'"), ("'", ','), (',', "'"), ("'", 'c'), ('c', "'"), ("'", ','), (',', "'m"), ("'m", "'"), ("'", ']'), (']', 'plt.pie'), ('plt.pie', '('), ('(', 'values'), ('values', ','), (',', 'colors=c'), ('colors=c', ','), (',', 'labels=l'), ('labels=l', ','), (',', 'shadow=True'), ('shadow=True', ','), (',', 'autopct='), ('autopct=', "'"), ("'", '%'), ('%', '1.1f'), ('1.1f', '%'), ('%', '%'), ('%', "'"), ("'", ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', 'pieChartDemo.py'), ('pieChartDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Bar'), ('Bar', 'charts'), ('charts', 'Bar'), ('Bar', 'charts'), ('charts', 'make'), ('make', 'comparing'), ('comparing', 'values'), ('values', 'easy'), ('easy', ','), (',', 'wide'), ('wide', 'bars'), ('bars', 'segregated'), ('segregated', 'measurements'), ('measurements', 'emphasize'), ('emphasize', 'difference'), ('difference', 'values'), ('values', ','), (',', 'rather'), ('rather', 'flow'), ('flow', 'one'), ('one', 'value'), ('value', 'another'), ('another', 'line'), ('line', 'graph'), ('graph', '.')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'notebook'), ('matplotlib', 'notebook', 'values'), ('notebook', 'values', '='), ('values', '=', '['), ('=', '[', '305,201,805,35,436'), ('[', '305,201,805,35,436', ']'), ('305,201,805,35,436', ']', 'l'), (']', 'l', '='), ('l', '=', '['), ('=', '[', "'Food"), ('[', "'Food", "'"), ("'Food", "'", ','), ("'", ',', "'Travel"), (',', "'Travel", "'"), ("'Travel", "'", ','), ("'", ',', "'Accomodation"), (',', "'Accomodation", "'"), ("'Accomodation", "'", ','), ("'", ',', "'Misc"), (',', "'Misc", "'"), ("'Misc", "'", ','), ("'", ',', "'Shoping"), (',', "'Shoping", "'"), ("'Shoping", "'", ']'), ("'", ']', 'c'), (']', 'c', '='), ('c', '=', '['), ('=', '[', "'"), ('[', "'", 'b'), ("'", 'b', "'"), ('b', "'", ','), ("'", ',', "'"), (',', "'", 'g'), ("'", 'g', "'"), ('g', "'", ','), ("'", ',', "'"), (',', "'", 'r'), ("'", 'r', "'"), ('r', "'", ','), ("'", ',', "'"), (',', "'", 'c'), ("'", 'c', "'"), ('c', "'", ','), ("'", ',', "'m"), (',', "'m", "'"), ("'m", "'", ']'), ("'", ']', 'plt.pie'), (']', 'plt.pie', '('), ('plt.pie', '(', 'values'), ('(', 'values', ','), ('values', ',', 'colors=c'), (',', 'colors=c', ','), ('colors=c', ',', 'labels=l'), (',', 'labels=l', ','), ('labels=l', ',', 'shadow=True'), (',', 'shadow=True', ','), ('shadow=True', ',', 'autopct='), (',', 'autopct=', "'"), ('autopct=', "'", '%'), ("'", '%', '1.1f'), ('%', '1.1f', '%'), ('1.1f', '%', '%'), ('%', '%', "'"), ('%', "'", ')'), ("'", ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', 'pieChartDemo.py'), ('8', 'pieChartDemo.py', 'Prof.'), ('pieChartDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Bar'), ('›', 'Bar', 'charts'), ('Bar', 'charts', 'Bar'), ('charts', 'Bar', 'charts'), ('Bar', 'charts', 'make'), ('charts', 'make', 'comparing'), ('make', 'comparing', 'values'), ('comparing', 'values', 'easy'), ('values', 'easy', ','), ('easy', ',', 'wide'), (',', 'wide', 'bars'), ('wide', 'bars', 'segregated'), ('bars', 'segregated', 'measurements'), ('segregated', 'measurements', 'emphasize'), ('measurements', 'emphasize', 'difference'), ('emphasize', 'difference', 'values'), ('difference', 'values', ','), ('values', ',', 'rather'), (',', 'rather', 'flow'), ('rather', 'flow', 'one'), ('flow', 'one', 'value'), ('one', 'value', 'another'), ('value', 'another', 'line'), ('another', 'line', 'graph'), ('line', 'graph', '.')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('notebook', 'NN'), ('values', 'NNS'), ('=', 'VBP'), ('[', '$'), ('305,201,805,35,436', 'CD'), (']', 'NNP'), ('l', 'NN'), ('=', 'NNP'), ('[', 'NNP'), ("'Food", 'NNP'), ("'", 'POS'), (',', ','), ("'Travel", 'NNP'), ("'", 'POS'), (',', ','), ("'Accomodation", 'NN'), ("'", "''"), (',', ','), ("'Misc", 'NNP'), ("'", 'POS'), (',', ','), ("'Shoping", 'VBG'), ("'", "''"), (']', 'JJ'), ('c', 'NNS'), ('=', 'VBP'), ('[', 'NNP'), ("'", 'POS'), ('b', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('g', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('r', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('c', 'NN'), ("'", "''"), (',', ','), ("'m", 'VBP'), ("'", 'POS'), (']', 'NN'), ('plt.pie', 'NN'), ('(', '('), ('values', 'NNS'), (',', ','), ('colors=c', 'NN'), (',', ','), ('labels=l', 'NN'), (',', ','), ('shadow=True', 'NN'), (',', ','), ('autopct=', 'VBP'), ("'", 'POS'), ('%', 'NN'), ('1.1f', 'CD'), ('%', 'NN'), ('%', 'NN'), ("'", "''"), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('pieChartDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Bar', 'NNP'), ('charts', 'VBZ'), ('Bar', 'NNP'), ('charts', 'NNS'), ('make', 'VBP'), ('comparing', 'VBG'), ('values', 'NNS'), ('easy', 'JJ'), (',', ','), ('wide', 'JJ'), ('bars', 'NNS'), ('segregated', 'VBD'), ('measurements', 'NNS'), ('emphasize', 'VB'), ('difference', 'NN'), ('values', 'NNS'), (',', ','), ('rather', 'RB'), ('flow', 'JJ'), ('one', 'CD'), ('value', 'NN'), ('another', 'DT'), ('line', 'NN'), ('graph', 'NN'), ('.', '.')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ notebook/NN values/NNS)
  =/VBP
  [/$
  305,201,805,35,436/CD
  (NP ]/NNP l/NN =/NNP [/NNP 'Food/NNP)
  '/POS
  ,/,
  (NP 'Travel/NNP)
  '/POS
  ,/,
  (NP 'Accomodation/NN)
  '/''
  ,/,
  (NP 'Misc/NNP)
  '/POS
  ,/,
  'Shoping/VBG
  '/''
  (NP ]/JJ c/NNS)
  =/VBP
  (NP [/NNP)
  '/POS
  (NP b/NN)
  '/''
  ,/,
  '/''
  (NP g/NN)
  '/''
  ,/,
  '/''
  (NP r/NN)
  '/''
  ,/,
  '/''
  (NP c/NN)
  '/''
  ,/,
  'm/VBP
  '/POS
  (NP ]/NN plt.pie/NN)
  (/(
  (NP values/NNS)
  ,/,
  (NP colors=c/NN)
  ,/,
  (NP labels=l/NN)
  ,/,
  (NP shadow=True/NN)
  ,/,
  autopct=/VBP
  '/POS
  (NP %/NN)
  1.1f/CD
  (NP %/NN %/NN)
  '/''
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  (NP pieChartDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Bar/NNP)
  charts/VBZ
  (NP Bar/NNP charts/NNS)
  make/VBP
  comparing/VBG
  (NP values/NNS)
  easy/JJ
  ,/,
  (NP wide/JJ bars/NNS)
  segregated/VBD
  (NP measurements/NNS)
  emphasize/VB
  (NP difference/NN values/NNS)
  ,/,
  rather/RB
  flow/JJ
  one/CD
  (NP value/NN)
  (NP another/DT line/NN graph/NN)
  ./.) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt %', 'matplotlib notebook values', "] l = [ 'Food", "'Travel", "'Accomodation", "'Misc", '] c', '[', 'b', 'g', 'r', 'c', '] plt.pie', 'values', 'colors=c', 'labels=l', 'shadow=True', '%', '% %', 'plt.show', 'pieChartDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Bar', 'Bar charts', 'values', 'wide bars', 'measurements', 'difference values', 'value', 'another line graph']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Bar')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'valu'), ('=', '='), ('[', '['), ('305,201,805,35,436', '305,201,805,35,436'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'Food", "'food"), ("'", "'"), (',', ','), ("'Travel", "'travel"), ("'", "'"), (',', ','), ("'Accomodation", "'accomod"), ("'", "'"), (',', ','), ("'Misc", "'misc"), ("'", "'"), (',', ','), ("'Shoping", "'shope"), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('plt.pie', 'plt.pie'), ('(', '('), ('values', 'valu'), (',', ','), ('colors=c', 'colors=c'), (',', ','), ('labels=l', 'labels=l'), (',', ','), ('shadow=True', 'shadow=tru'), (',', ','), ('autopct=', 'autopct='), ("'", "'"), ('%', '%'), ('1.1f', '1.1f'), ('%', '%'), ('%', '%'), ("'", "'"), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('pieChartDemo.py', 'piechartdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bar', 'bar'), ('charts', 'chart'), ('Bar', 'bar'), ('charts', 'chart'), ('make', 'make'), ('comparing', 'compar'), ('values', 'valu'), ('easy', 'easi'), (',', ','), ('wide', 'wide'), ('bars', 'bar'), ('segregated', 'segreg'), ('measurements', 'measur'), ('emphasize', 'emphas'), ('difference', 'differ'), ('values', 'valu'), (',', ','), ('rather', 'rather'), ('flow', 'flow'), ('one', 'one'), ('value', 'valu'), ('another', 'anoth'), ('line', 'line'), ('graph', 'graph'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'valu'), ('=', '='), ('[', '['), ('305,201,805,35,436', '305,201,805,35,436'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'Food", 'food'), ("'", "'"), (',', ','), ("'Travel", 'travel'), ("'", "'"), (',', ','), ("'Accomodation", 'accomod'), ("'", "'"), (',', ','), ("'Misc", 'misc'), ("'", "'"), (',', ','), ("'Shoping", 'shope'), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('plt.pie', 'plt.pie'), ('(', '('), ('values', 'valu'), (',', ','), ('colors=c', 'colors=c'), (',', ','), ('labels=l', 'labels=l'), (',', ','), ('shadow=True', 'shadow=tru'), (',', ','), ('autopct=', 'autopct='), ("'", "'"), ('%', '%'), ('1.1f', '1.1f'), ('%', '%'), ('%', '%'), ("'", "'"), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('pieChartDemo.py', 'piechartdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bar', 'bar'), ('charts', 'chart'), ('Bar', 'bar'), ('charts', 'chart'), ('make', 'make'), ('comparing', 'compar'), ('values', 'valu'), ('easy', 'easi'), (',', ','), ('wide', 'wide'), ('bars', 'bar'), ('segregated', 'segreg'), ('measurements', 'measur'), ('emphasize', 'emphas'), ('difference', 'differ'), ('values', 'valu'), (',', ','), ('rather', 'rather'), ('flow', 'flow'), ('one', 'one'), ('value', 'valu'), ('another', 'anoth'), ('line', 'line'), ('graph', 'graph'), ('.', '.')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('values', 'value'), ('=', '='), ('[', '['), ('305,201,805,35,436', '305,201,805,35,436'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'Food", "'Food"), ("'", "'"), (',', ','), ("'Travel", "'Travel"), ("'", "'"), (',', ','), ("'Accomodation", "'Accomodation"), ("'", "'"), (',', ','), ("'Misc", "'Misc"), ("'", "'"), (',', ','), ("'Shoping", "'Shoping"), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('plt.pie', 'plt.pie'), ('(', '('), ('values', 'value'), (',', ','), ('colors=c', 'colors=c'), (',', ','), ('labels=l', 'labels=l'), (',', ','), ('shadow=True', 'shadow=True'), (',', ','), ('autopct=', 'autopct='), ("'", "'"), ('%', '%'), ('1.1f', '1.1f'), ('%', '%'), ('%', '%'), ("'", "'"), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('pieChartDemo.py', 'pieChartDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bar', 'Bar'), ('charts', 'chart'), ('Bar', 'Bar'), ('charts', 'chart'), ('make', 'make'), ('comparing', 'comparing'), ('values', 'value'), ('easy', 'easy'), (',', ','), ('wide', 'wide'), ('bars', 'bar'), ('segregated', 'segregated'), ('measurements', 'measurement'), ('emphasize', 'emphasize'), ('difference', 'difference'), ('values', 'value'), (',', ','), ('rather', 'rather'), ('flow', 'flow'), ('one', 'one'), ('value', 'value'), ('another', 'another'), ('line', 'line'), ('graph', 'graph'), ('.', '.')]



============================ Sentence 31 =============================

import matplotlib.pyplot as plt %matplotlib notebook x = [1,2,3,4,5] y = [5.9,6.2,3.2,8.9,9.7] l = ['1st','2nd','3rd','4th','5th'] c = ['b','g','r','c','m'] w = [0.5,0.6,0.3,0.8,0.9] plt.title('Sem wise spi') plt.bar(x,y,color=c,label=l,width=w) plt.show() 1 2 3 4 5 6 7 8 9 10 barChartDemo.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Histograms Histograms categorize data by breaking it into bins, where each bin contains a subset of the data range. 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'notebook', 'x', '=', '[', '1,2,3,4,5', ']', '=', '[', '5.9,6.2,3.2,8.9,9.7', ']', 'l', '=', '[', "'1st", "'", ',', "'2nd", "'", ',', "'3rd", "'", ',', "'4th", "'", ',', "'5th", "'", ']', 'c', '=', '[', "'", 'b', "'", ',', "'", 'g', "'", ',', "'", 'r', "'", ',', "'", 'c', "'", ',', "'m", "'", ']', 'w', '=', '[', '0.5,0.6,0.3,0.8,0.9', ']', 'plt.title', '(', "'Sem", 'wise', 'spi', "'", ')', 'plt.bar', '(', 'x', ',', ',', 'color=c', ',', 'label=l', ',', 'width=w', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'barChartDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Histograms', 'Histograms', 'categorize', 'data', 'breaking', 'bins', ',', 'bin', 'contains', 'subset', 'data', 'range', '.']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'notebook'), ('notebook', 'x'), ('x', '='), ('=', '['), ('[', '1,2,3,4,5'), ('1,2,3,4,5', ']'), (']', '='), ('=', '['), ('[', '5.9,6.2,3.2,8.9,9.7'), ('5.9,6.2,3.2,8.9,9.7', ']'), (']', 'l'), ('l', '='), ('=', '['), ('[', "'1st"), ("'1st", "'"), ("'", ','), (',', "'2nd"), ("'2nd", "'"), ("'", ','), (',', "'3rd"), ("'3rd", "'"), ("'", ','), (',', "'4th"), ("'4th", "'"), ("'", ','), (',', "'5th"), ("'5th", "'"), ("'", ']'), (']', 'c'), ('c', '='), ('=', '['), ('[', "'"), ("'", 'b'), ('b', "'"), ("'", ','), (',', "'"), ("'", 'g'), ('g', "'"), ("'", ','), (',', "'"), ("'", 'r'), ('r', "'"), ("'", ','), (',', "'"), ("'", 'c'), ('c', "'"), ("'", ','), (',', "'m"), ("'m", "'"), ("'", ']'), (']', 'w'), ('w', '='), ('=', '['), ('[', '0.5,0.6,0.3,0.8,0.9'), ('0.5,0.6,0.3,0.8,0.9', ']'), (']', 'plt.title'), ('plt.title', '('), ('(', "'Sem"), ("'Sem", 'wise'), ('wise', 'spi'), ('spi', "'"), ("'", ')'), (')', 'plt.bar'), ('plt.bar', '('), ('(', 'x'), ('x', ','), (',', ','), (',', 'color=c'), ('color=c', ','), (',', 'label=l'), ('label=l', ','), (',', 'width=w'), ('width=w', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', '9'), ('9', '10'), ('10', 'barChartDemo.py'), ('barChartDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Histograms'), ('Histograms', 'Histograms'), ('Histograms', 'categorize'), ('categorize', 'data'), ('data', 'breaking'), ('breaking', 'bins'), ('bins', ','), (',', 'bin'), ('bin', 'contains'), ('contains', 'subset'), ('subset', 'data'), ('data', 'range'), ('range', '.')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'notebook'), ('matplotlib', 'notebook', 'x'), ('notebook', 'x', '='), ('x', '=', '['), ('=', '[', '1,2,3,4,5'), ('[', '1,2,3,4,5', ']'), ('1,2,3,4,5', ']', '='), (']', '=', '['), ('=', '[', '5.9,6.2,3.2,8.9,9.7'), ('[', '5.9,6.2,3.2,8.9,9.7', ']'), ('5.9,6.2,3.2,8.9,9.7', ']', 'l'), (']', 'l', '='), ('l', '=', '['), ('=', '[', "'1st"), ('[', "'1st", "'"), ("'1st", "'", ','), ("'", ',', "'2nd"), (',', "'2nd", "'"), ("'2nd", "'", ','), ("'", ',', "'3rd"), (',', "'3rd", "'"), ("'3rd", "'", ','), ("'", ',', "'4th"), (',', "'4th", "'"), ("'4th", "'", ','), ("'", ',', "'5th"), (',', "'5th", "'"), ("'5th", "'", ']'), ("'", ']', 'c'), (']', 'c', '='), ('c', '=', '['), ('=', '[', "'"), ('[', "'", 'b'), ("'", 'b', "'"), ('b', "'", ','), ("'", ',', "'"), (',', "'", 'g'), ("'", 'g', "'"), ('g', "'", ','), ("'", ',', "'"), (',', "'", 'r'), ("'", 'r', "'"), ('r', "'", ','), ("'", ',', "'"), (',', "'", 'c'), ("'", 'c', "'"), ('c', "'", ','), ("'", ',', "'m"), (',', "'m", "'"), ("'m", "'", ']'), ("'", ']', 'w'), (']', 'w', '='), ('w', '=', '['), ('=', '[', '0.5,0.6,0.3,0.8,0.9'), ('[', '0.5,0.6,0.3,0.8,0.9', ']'), ('0.5,0.6,0.3,0.8,0.9', ']', 'plt.title'), (']', 'plt.title', '('), ('plt.title', '(', "'Sem"), ('(', "'Sem", 'wise'), ("'Sem", 'wise', 'spi'), ('wise', 'spi', "'"), ('spi', "'", ')'), ("'", ')', 'plt.bar'), (')', 'plt.bar', '('), ('plt.bar', '(', 'x'), ('(', 'x', ','), ('x', ',', ','), (',', ',', 'color=c'), (',', 'color=c', ','), ('color=c', ',', 'label=l'), (',', 'label=l', ','), ('label=l', ',', 'width=w'), (',', 'width=w', ')'), ('width=w', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', '9'), ('8', '9', '10'), ('9', '10', 'barChartDemo.py'), ('10', 'barChartDemo.py', 'Prof.'), ('barChartDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Histograms'), ('›', 'Histograms', 'Histograms'), ('Histograms', 'Histograms', 'categorize'), ('Histograms', 'categorize', 'data'), ('categorize', 'data', 'breaking'), ('data', 'breaking', 'bins'), ('breaking', 'bins', ','), ('bins', ',', 'bin'), (',', 'bin', 'contains'), ('bin', 'contains', 'subset'), ('contains', 'subset', 'data'), ('subset', 'data', 'range'), ('data', 'range', '.')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('notebook', 'NN'), ('x', 'NNP'), ('=', 'NNP'), ('[', 'VBD'), ('1,2,3,4,5', 'CD'), (']', 'NNP'), ('=', 'NNP'), ('[', 'VBD'), ('5.9,6.2,3.2,8.9,9.7', 'CD'), (']', 'NNP'), ('l', 'NN'), ('=', 'NNP'), ('[', 'NNP'), ("'1st", 'NNP'), ("'", 'POS'), (',', ','), ("'2nd", 'NNP'), ("'", 'POS'), (',', ','), ("'3rd", 'NNP'), ("'", 'POS'), (',', ','), ("'4th", 'NNP'), ("'", 'POS'), (',', ','), ("'5th", "''"), ("'", 'POS'), (']', 'NNP'), ('c', 'NNS'), ('=', 'NNP'), ('[', 'NNP'), ("'", 'POS'), ('b', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('g', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('r', 'NN'), ("'", "''"), (',', ','), ("'", "''"), ('c', 'NN'), ("'", "''"), (',', ','), ("'m", 'VBP'), ("'", 'POS'), (']', 'JJ'), ('w', 'NN'), ('=', 'NNP'), ('[', 'VBZ'), ('0.5,0.6,0.3,0.8,0.9', 'CD'), (']', 'JJ'), ('plt.title', 'NN'), ('(', '('), ("'Sem", 'POS'), ('wise', 'NN'), ('spi', 'NN'), ("'", "''"), (')', ')'), ('plt.bar', 'NN'), ('(', '('), ('x', 'NNP'), (',', ','), (',', ','), ('color=c', 'NN'), (',', ','), ('label=l', 'NN'), (',', ','), ('width=w', 'NN'), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('9', 'CD'), ('10', 'CD'), ('barChartDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Histograms', 'NNP'), ('Histograms', 'NNP'), ('categorize', 'VB'), ('data', 'NNS'), ('breaking', 'VBG'), ('bins', 'NNS'), (',', ','), ('bin', 'NN'), ('contains', 'NNS'), ('subset', 'VBN'), ('data', 'NNS'), ('range', 'NN'), ('.', '.')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ notebook/NN x/NNP =/NNP)
  [/VBD
  1,2,3,4,5/CD
  (NP ]/NNP =/NNP)
  [/VBD
  5.9,6.2,3.2,8.9,9.7/CD
  (NP ]/NNP l/NN =/NNP [/NNP '1st/NNP)
  '/POS
  ,/,
  (NP '2nd/NNP)
  '/POS
  ,/,
  (NP '3rd/NNP)
  '/POS
  ,/,
  (NP '4th/NNP)
  '/POS
  ,/,
  '5th/''
  '/POS
  (NP ]/NNP c/NNS =/NNP [/NNP)
  '/POS
  (NP b/NN)
  '/''
  ,/,
  '/''
  (NP g/NN)
  '/''
  ,/,
  '/''
  (NP r/NN)
  '/''
  ,/,
  '/''
  (NP c/NN)
  '/''
  ,/,
  'm/VBP
  '/POS
  (NP ]/JJ w/NN =/NNP)
  [/VBZ
  0.5,0.6,0.3,0.8,0.9/CD
  (NP ]/JJ plt.title/NN)
  (/(
  'Sem/POS
  (NP wise/NN spi/NN)
  '/''
  )/)
  (NP plt.bar/NN)
  (/(
  (NP x/NNP)
  ,/,
  ,/,
  (NP color=c/NN)
  ,/,
  (NP label=l/NN)
  ,/,
  (NP width=w/NN)
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  9/CD
  10/CD
  (NP barChartDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Histograms/NNP Histograms/NNP)
  categorize/VB
  (NP data/NNS)
  breaking/VBG
  (NP bins/NNS)
  ,/,
  (NP bin/NN contains/NNS)
  subset/VBN
  (NP data/NNS range/NN)
  ./.) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt %', 'matplotlib notebook x =', '] =', "] l = [ '1st", "'2nd", "'3rd", "'4th", '] c = [', 'b', 'g', 'r', 'c', '] w =', '] plt.title', 'wise spi', 'plt.bar', 'x', 'color=c', 'label=l', 'width=w', 'plt.show', 'barChartDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Histograms Histograms', 'data', 'bins', 'bin contains', 'data range']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('x', 'x'), ('=', '='), ('[', '['), ('1,2,3,4,5', '1,2,3,4,5'), (']', ']'), ('=', '='), ('[', '['), ('5.9,6.2,3.2,8.9,9.7', '5.9,6.2,3.2,8.9,9.7'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'1st", "'1st"), ("'", "'"), (',', ','), ("'2nd", "'2nd"), ("'", "'"), (',', ','), ("'3rd", "'3rd"), ("'", "'"), (',', ','), ("'4th", "'4th"), ("'", "'"), (',', ','), ("'5th", "'5th"), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('w', 'w'), ('=', '='), ('[', '['), ('0.5,0.6,0.3,0.8,0.9', '0.5,0.6,0.3,0.8,0.9'), (']', ']'), ('plt.title', 'plt.titl'), ('(', '('), ("'Sem", "'sem"), ('wise', 'wise'), ('spi', 'spi'), ("'", "'"), (')', ')'), ('plt.bar', 'plt.bar'), ('(', '('), ('x', 'x'), (',', ','), (',', ','), ('color=c', 'color=c'), (',', ','), ('label=l', 'label=l'), (',', ','), ('width=w', 'width=w'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('barChartDemo.py', 'barchartdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Histograms', 'histogram'), ('Histograms', 'histogram'), ('categorize', 'categor'), ('data', 'data'), ('breaking', 'break'), ('bins', 'bin'), (',', ','), ('bin', 'bin'), ('contains', 'contain'), ('subset', 'subset'), ('data', 'data'), ('range', 'rang'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('x', 'x'), ('=', '='), ('[', '['), ('1,2,3,4,5', '1,2,3,4,5'), (']', ']'), ('=', '='), ('[', '['), ('5.9,6.2,3.2,8.9,9.7', '5.9,6.2,3.2,8.9,9.7'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'1st", '1st'), ("'", "'"), (',', ','), ("'2nd", '2nd'), ("'", "'"), (',', ','), ("'3rd", '3rd'), ("'", "'"), (',', ','), ("'4th", '4th'), ("'", "'"), (',', ','), ("'5th", '5th'), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('w', 'w'), ('=', '='), ('[', '['), ('0.5,0.6,0.3,0.8,0.9', '0.5,0.6,0.3,0.8,0.9'), (']', ']'), ('plt.title', 'plt.titl'), ('(', '('), ("'Sem", 'sem'), ('wise', 'wise'), ('spi', 'spi'), ("'", "'"), (')', ')'), ('plt.bar', 'plt.bar'), ('(', '('), ('x', 'x'), (',', ','), (',', ','), ('color=c', 'color=c'), (',', ','), ('label=l', 'label=l'), (',', ','), ('width=w', 'width=w'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('barChartDemo.py', 'barchartdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Histograms', 'histogram'), ('Histograms', 'histogram'), ('categorize', 'categor'), ('data', 'data'), ('breaking', 'break'), ('bins', 'bin'), (',', ','), ('bin', 'bin'), ('contains', 'contain'), ('subset', 'subset'), ('data', 'data'), ('range', 'rang'), ('.', '.')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('x', 'x'), ('=', '='), ('[', '['), ('1,2,3,4,5', '1,2,3,4,5'), (']', ']'), ('=', '='), ('[', '['), ('5.9,6.2,3.2,8.9,9.7', '5.9,6.2,3.2,8.9,9.7'), (']', ']'), ('l', 'l'), ('=', '='), ('[', '['), ("'1st", "'1st"), ("'", "'"), (',', ','), ("'2nd", "'2nd"), ("'", "'"), (',', ','), ("'3rd", "'3rd"), ("'", "'"), (',', ','), ("'4th", "'4th"), ("'", "'"), (',', ','), ("'5th", "'5th"), ("'", "'"), (']', ']'), ('c', 'c'), ('=', '='), ('[', '['), ("'", "'"), ('b', 'b'), ("'", "'"), (',', ','), ("'", "'"), ('g', 'g'), ("'", "'"), (',', ','), ("'", "'"), ('r', 'r'), ("'", "'"), (',', ','), ("'", "'"), ('c', 'c'), ("'", "'"), (',', ','), ("'m", "'m"), ("'", "'"), (']', ']'), ('w', 'w'), ('=', '='), ('[', '['), ('0.5,0.6,0.3,0.8,0.9', '0.5,0.6,0.3,0.8,0.9'), (']', ']'), ('plt.title', 'plt.title'), ('(', '('), ("'Sem", "'Sem"), ('wise', 'wise'), ('spi', 'spi'), ("'", "'"), (')', ')'), ('plt.bar', 'plt.bar'), ('(', '('), ('x', 'x'), (',', ','), (',', ','), ('color=c', 'color=c'), (',', ','), ('label=l', 'label=l'), (',', ','), ('width=w', 'width=w'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('barChartDemo.py', 'barChartDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Histograms', 'Histograms'), ('Histograms', 'Histograms'), ('categorize', 'categorize'), ('data', 'data'), ('breaking', 'breaking'), ('bins', 'bin'), (',', ','), ('bin', 'bin'), ('contains', 'contains'), ('subset', 'subset'), ('data', 'data'), ('range', 'range'), ('.', '.')]



============================ Sentence 32 =============================

A Histogram then displays the number of items in each bin so that you can see the distribution of data and the progression of data from bin to bin. 


>> Tokens are: 
 ['A', 'Histogram', 'displays', 'number', 'items', 'bin', 'see', 'distribution', 'data', 'progression', 'data', 'bin', 'bin', '.']

>> Bigrams are: 
 [('A', 'Histogram'), ('Histogram', 'displays'), ('displays', 'number'), ('number', 'items'), ('items', 'bin'), ('bin', 'see'), ('see', 'distribution'), ('distribution', 'data'), ('data', 'progression'), ('progression', 'data'), ('data', 'bin'), ('bin', 'bin'), ('bin', '.')]

>> Trigrams are: 
 [('A', 'Histogram', 'displays'), ('Histogram', 'displays', 'number'), ('displays', 'number', 'items'), ('number', 'items', 'bin'), ('items', 'bin', 'see'), ('bin', 'see', 'distribution'), ('see', 'distribution', 'data'), ('distribution', 'data', 'progression'), ('data', 'progression', 'data'), ('progression', 'data', 'bin'), ('data', 'bin', 'bin'), ('bin', 'bin', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('Histogram', 'NNP'), ('displays', 'NNS'), ('number', 'NN'), ('items', 'NNS'), ('bin', 'VBD'), ('see', 'JJ'), ('distribution', 'NN'), ('data', 'NNS'), ('progression', 'NN'), ('data', 'NNS'), ('bin', 'NN'), ('bin', 'NN'), ('.', '.')]

 (S
  (NP A/DT Histogram/NNP displays/NNS number/NN items/NNS)
  bin/VBD
  (NP
    see/JJ
    distribution/NN
    data/NNS
    progression/NN
    data/NNS
    bin/NN
    bin/NN)
  ./.) 


>> Noun Phrases are: 
 ['A Histogram displays number items', 'see distribution data progression data bin bin']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('Histogram', 'histogram'), ('displays', 'display'), ('number', 'number'), ('items', 'item'), ('bin', 'bin'), ('see', 'see'), ('distribution', 'distribut'), ('data', 'data'), ('progression', 'progress'), ('data', 'data'), ('bin', 'bin'), ('bin', 'bin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('Histogram', 'histogram'), ('displays', 'display'), ('number', 'number'), ('items', 'item'), ('bin', 'bin'), ('see', 'see'), ('distribution', 'distribut'), ('data', 'data'), ('progression', 'progress'), ('data', 'data'), ('bin', 'bin'), ('bin', 'bin'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('Histogram', 'Histogram'), ('displays', 'display'), ('number', 'number'), ('items', 'item'), ('bin', 'bin'), ('see', 'see'), ('distribution', 'distribution'), ('data', 'data'), ('progression', 'progression'), ('data', 'data'), ('bin', 'bin'), ('bin', 'bin'), ('.', '.')]



============================ Sentence 33 =============================

import matplotlib.pyplot as plt import numpy as np %matplotlib notebook cpis = np.random.randint(0,10,100) plt.hist(cpis,bins=10, histtype='stepfilled',align='mid',label='CPI Hist') plt.legend() plt.show() 1 2 3 4 5   6 7 histDemo.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Boxplots Boxplots provide a means of depicting groups of numbers through their quartiles. 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', 'import', 'numpy', 'np', '%', 'matplotlib', 'notebook', 'cpis', '=', 'np.random.randint', '(', '0,10,100', ')', 'plt.hist', '(', 'cpis', ',', 'bins=10', ',', "histtype='stepfilled", "'", ',', "align='mid", "'", ',', "label='CPI", 'Hist', "'", ')', 'plt.legend', '(', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', 'histDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Boxplots', 'Boxplots', 'provide', 'means', 'depicting', 'groups', 'numbers', 'quartiles', '.']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', 'import'), ('import', 'numpy'), ('numpy', 'np'), ('np', '%'), ('%', 'matplotlib'), ('matplotlib', 'notebook'), ('notebook', 'cpis'), ('cpis', '='), ('=', 'np.random.randint'), ('np.random.randint', '('), ('(', '0,10,100'), ('0,10,100', ')'), (')', 'plt.hist'), ('plt.hist', '('), ('(', 'cpis'), ('cpis', ','), (',', 'bins=10'), ('bins=10', ','), (',', "histtype='stepfilled"), ("histtype='stepfilled", "'"), ("'", ','), (',', "align='mid"), ("align='mid", "'"), ("'", ','), (',', "label='CPI"), ("label='CPI", 'Hist'), ('Hist', "'"), ("'", ')'), (')', 'plt.legend'), ('plt.legend', '('), ('(', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', 'histDemo.py'), ('histDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Boxplots'), ('Boxplots', 'Boxplots'), ('Boxplots', 'provide'), ('provide', 'means'), ('means', 'depicting'), ('depicting', 'groups'), ('groups', 'numbers'), ('numbers', 'quartiles'), ('quartiles', '.')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', 'import'), ('plt', 'import', 'numpy'), ('import', 'numpy', 'np'), ('numpy', 'np', '%'), ('np', '%', 'matplotlib'), ('%', 'matplotlib', 'notebook'), ('matplotlib', 'notebook', 'cpis'), ('notebook', 'cpis', '='), ('cpis', '=', 'np.random.randint'), ('=', 'np.random.randint', '('), ('np.random.randint', '(', '0,10,100'), ('(', '0,10,100', ')'), ('0,10,100', ')', 'plt.hist'), (')', 'plt.hist', '('), ('plt.hist', '(', 'cpis'), ('(', 'cpis', ','), ('cpis', ',', 'bins=10'), (',', 'bins=10', ','), ('bins=10', ',', "histtype='stepfilled"), (',', "histtype='stepfilled", "'"), ("histtype='stepfilled", "'", ','), ("'", ',', "align='mid"), (',', "align='mid", "'"), ("align='mid", "'", ','), ("'", ',', "label='CPI"), (',', "label='CPI", 'Hist'), ("label='CPI", 'Hist', "'"), ('Hist', "'", ')'), ("'", ')', 'plt.legend'), (')', 'plt.legend', '('), ('plt.legend', '(', ')'), ('(', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', 'histDemo.py'), ('7', 'histDemo.py', 'Prof.'), ('histDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Boxplots'), ('›', 'Boxplots', 'Boxplots'), ('Boxplots', 'Boxplots', 'provide'), ('Boxplots', 'provide', 'means'), ('provide', 'means', 'depicting'), ('means', 'depicting', 'groups'), ('depicting', 'groups', 'numbers'), ('groups', 'numbers', 'quartiles'), ('numbers', 'quartiles', '.')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('import', 'NN'), ('numpy', 'JJ'), ('np', 'CD'), ('%', 'NN'), ('matplotlib', 'NN'), ('notebook', 'NN'), ('cpis', 'NN'), ('=', 'NN'), ('np.random.randint', 'NN'), ('(', '('), ('0,10,100', 'CD'), (')', ')'), ('plt.hist', 'NN'), ('(', '('), ('cpis', 'NN'), (',', ','), ('bins=10', 'NN'), (',', ','), ("histtype='stepfilled", 'VBD'), ("'", "''"), (',', ','), ("align='mid", 'NN'), ("'", "''"), (',', ','), ("label='CPI", 'JJ'), ('Hist', 'NNP'), ("'", 'POS'), (')', ')'), ('plt.legend', 'VBP'), ('(', '('), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('histDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Boxplots', 'NNP'), ('Boxplots', 'NNP'), ('provide', 'VBP'), ('means', 'VBZ'), ('depicting', 'VBG'), ('groups', 'NNS'), ('numbers', 'NNS'), ('quartiles', 'NNS'), ('.', '.')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN import/NN)
  numpy/JJ
  np/CD
  (NP
    %/NN
    matplotlib/NN
    notebook/NN
    cpis/NN
    =/NN
    np.random.randint/NN)
  (/(
  0,10,100/CD
  )/)
  (NP plt.hist/NN)
  (/(
  (NP cpis/NN)
  ,/,
  (NP bins=10/NN)
  ,/,
  histtype='stepfilled/VBD
  '/''
  ,/,
  (NP align='mid/NN)
  '/''
  ,/,
  (NP label='CPI/JJ Hist/NNP)
  '/POS
  )/)
  plt.legend/VBP
  (/(
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  (NP histDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Boxplots/NNP Boxplots/NNP)
  provide/VBP
  means/VBZ
  depicting/VBG
  (NP groups/NNS numbers/NNS quartiles/NNS)
  ./.) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt import', '% matplotlib notebook cpis = np.random.randint', 'plt.hist', 'cpis', 'bins=10', "align='mid", "label='CPI Hist", 'plt.show', 'histDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Boxplots Boxplots', 'groups numbers quartiles']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('numpy', 'numpi'), ('np', 'np'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('cpis', 'cpi'), ('=', '='), ('np.random.randint', 'np.random.randint'), ('(', '('), ('0,10,100', '0,10,100'), (')', ')'), ('plt.hist', 'plt.hist'), ('(', '('), ('cpis', 'cpi'), (',', ','), ('bins=10', 'bins=10'), (',', ','), ("histtype='stepfilled", "histtype='stepfil"), ("'", "'"), (',', ','), ("align='mid", "align='mid"), ("'", "'"), (',', ','), ("label='CPI", "label='cpi"), ('Hist', 'hist'), ("'", "'"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('histDemo.py', 'histdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Boxplots', 'boxplot'), ('Boxplots', 'boxplot'), ('provide', 'provid'), ('means', 'mean'), ('depicting', 'depict'), ('groups', 'group'), ('numbers', 'number'), ('quartiles', 'quartil'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('numpy', 'numpi'), ('np', 'np'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('cpis', 'cpis'), ('=', '='), ('np.random.randint', 'np.random.randint'), ('(', '('), ('0,10,100', '0,10,100'), (')', ')'), ('plt.hist', 'plt.hist'), ('(', '('), ('cpis', 'cpis'), (',', ','), ('bins=10', 'bins=10'), (',', ','), ("histtype='stepfilled", "histtype='stepfil"), ("'", "'"), (',', ','), ("align='mid", "align='mid"), ("'", "'"), (',', ','), ("label='CPI", "label='cpi"), ('Hist', 'hist'), ("'", "'"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('histDemo.py', 'histdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Boxplots', 'boxplot'), ('Boxplots', 'boxplot'), ('provide', 'provid'), ('means', 'mean'), ('depicting', 'depict'), ('groups', 'group'), ('numbers', 'number'), ('quartiles', 'quartil'), ('.', '.')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('numpy', 'numpy'), ('np', 'np'), ('%', '%'), ('matplotlib', 'matplotlib'), ('notebook', 'notebook'), ('cpis', 'cpi'), ('=', '='), ('np.random.randint', 'np.random.randint'), ('(', '('), ('0,10,100', '0,10,100'), (')', ')'), ('plt.hist', 'plt.hist'), ('(', '('), ('cpis', 'cpi'), (',', ','), ('bins=10', 'bins=10'), (',', ','), ("histtype='stepfilled", "histtype='stepfilled"), ("'", "'"), (',', ','), ("align='mid", "align='mid"), ("'", "'"), (',', ','), ("label='CPI", "label='CPI"), ('Hist', 'Hist'), ("'", "'"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('histDemo.py', 'histDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Boxplots', 'Boxplots'), ('Boxplots', 'Boxplots'), ('provide', 'provide'), ('means', 'mean'), ('depicting', 'depicting'), ('groups', 'group'), ('numbers', 'number'), ('quartiles', 'quartile'), ('.', '.')]



============================ Sentence 34 =============================

Quartiles means three points dividing a group into four equal parts. 


>> Tokens are: 
 ['Quartiles', 'means', 'three', 'points', 'dividing', 'group', 'four', 'equal', 'parts', '.']

>> Bigrams are: 
 [('Quartiles', 'means'), ('means', 'three'), ('three', 'points'), ('points', 'dividing'), ('dividing', 'group'), ('group', 'four'), ('four', 'equal'), ('equal', 'parts'), ('parts', '.')]

>> Trigrams are: 
 [('Quartiles', 'means', 'three'), ('means', 'three', 'points'), ('three', 'points', 'dividing'), ('points', 'dividing', 'group'), ('dividing', 'group', 'four'), ('group', 'four', 'equal'), ('four', 'equal', 'parts'), ('equal', 'parts', '.')]

>> POS Tags are: 
 [('Quartiles', 'NNS'), ('means', 'VBZ'), ('three', 'CD'), ('points', 'NNS'), ('dividing', 'VBG'), ('group', 'NN'), ('four', 'CD'), ('equal', 'JJ'), ('parts', 'NNS'), ('.', '.')]

 (S
  (NP Quartiles/NNS)
  means/VBZ
  three/CD
  (NP points/NNS)
  dividing/VBG
  (NP group/NN)
  four/CD
  (NP equal/JJ parts/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Quartiles', 'points', 'group', 'equal parts']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Quartiles', 'quartil'), ('means', 'mean'), ('three', 'three'), ('points', 'point'), ('dividing', 'divid'), ('group', 'group'), ('four', 'four'), ('equal', 'equal'), ('parts', 'part'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Quartiles', 'quartil'), ('means', 'mean'), ('three', 'three'), ('points', 'point'), ('dividing', 'divid'), ('group', 'group'), ('four', 'four'), ('equal', 'equal'), ('parts', 'part'), ('.', '.')]

>> Lemmatization: 
 [('Quartiles', 'Quartiles'), ('means', 'mean'), ('three', 'three'), ('points', 'point'), ('dividing', 'dividing'), ('group', 'group'), ('four', 'four'), ('equal', 'equal'), ('parts', 'part'), ('.', '.')]



============================ Sentence 35 =============================

In boxplot, data will be divided in 4 part using the 3 points (25th percentile, median, 75th percentile)  0 -1 -2 -3 -4 -5 5 4 3 2 1  Q1 (25th Percentile) Q3 (75th Percentile) Q2 (50th Percentile) Interquartile Range (IQR) Median Minimum (Q1 – 1.5 * IQR) Maximum (Q3 + 1.5 * IQR)      Outliers Outliers Whiskers Whiskers                                    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 –Data Visualization ‹#›  Boxplot (Cont.) 


>> Tokens are: 
 ['In', 'boxplot', ',', 'data', 'divided', '4', 'part', 'using', '3', 'points', '(', '25th', 'percentile', ',', 'median', ',', '75th', 'percentile', ')', '0', '-1', '-2', '-3', '-4', '-5', '5', '4', '3', '2', '1', 'Q1', '(', '25th', 'Percentile', ')', 'Q3', '(', '75th', 'Percentile', ')', 'Q2', '(', '50th', 'Percentile', ')', 'Interquartile', 'Range', '(', 'IQR', ')', 'Median', 'Minimum', '(', 'Q1', '–', '1.5', '*', 'IQR', ')', 'Maximum', '(', 'Q3', '+', '1.5', '*', 'IQR', ')', 'Outliers', 'Outliers', 'Whiskers', 'Whiskers', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–Data', 'Visualization', '‹', '#', '›', 'Boxplot', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('In', 'boxplot'), ('boxplot', ','), (',', 'data'), ('data', 'divided'), ('divided', '4'), ('4', 'part'), ('part', 'using'), ('using', '3'), ('3', 'points'), ('points', '('), ('(', '25th'), ('25th', 'percentile'), ('percentile', ','), (',', 'median'), ('median', ','), (',', '75th'), ('75th', 'percentile'), ('percentile', ')'), (')', '0'), ('0', '-1'), ('-1', '-2'), ('-2', '-3'), ('-3', '-4'), ('-4', '-5'), ('-5', '5'), ('5', '4'), ('4', '3'), ('3', '2'), ('2', '1'), ('1', 'Q1'), ('Q1', '('), ('(', '25th'), ('25th', 'Percentile'), ('Percentile', ')'), (')', 'Q3'), ('Q3', '('), ('(', '75th'), ('75th', 'Percentile'), ('Percentile', ')'), (')', 'Q2'), ('Q2', '('), ('(', '50th'), ('50th', 'Percentile'), ('Percentile', ')'), (')', 'Interquartile'), ('Interquartile', 'Range'), ('Range', '('), ('(', 'IQR'), ('IQR', ')'), (')', 'Median'), ('Median', 'Minimum'), ('Minimum', '('), ('(', 'Q1'), ('Q1', '–'), ('–', '1.5'), ('1.5', '*'), ('*', 'IQR'), ('IQR', ')'), (')', 'Maximum'), ('Maximum', '('), ('(', 'Q3'), ('Q3', '+'), ('+', '1.5'), ('1.5', '*'), ('*', 'IQR'), ('IQR', ')'), (')', 'Outliers'), ('Outliers', 'Outliers'), ('Outliers', 'Whiskers'), ('Whiskers', 'Whiskers'), ('Whiskers', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–Data'), ('–Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Boxplot'), ('Boxplot', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('In', 'boxplot', ','), ('boxplot', ',', 'data'), (',', 'data', 'divided'), ('data', 'divided', '4'), ('divided', '4', 'part'), ('4', 'part', 'using'), ('part', 'using', '3'), ('using', '3', 'points'), ('3', 'points', '('), ('points', '(', '25th'), ('(', '25th', 'percentile'), ('25th', 'percentile', ','), ('percentile', ',', 'median'), (',', 'median', ','), ('median', ',', '75th'), (',', '75th', 'percentile'), ('75th', 'percentile', ')'), ('percentile', ')', '0'), (')', '0', '-1'), ('0', '-1', '-2'), ('-1', '-2', '-3'), ('-2', '-3', '-4'), ('-3', '-4', '-5'), ('-4', '-5', '5'), ('-5', '5', '4'), ('5', '4', '3'), ('4', '3', '2'), ('3', '2', '1'), ('2', '1', 'Q1'), ('1', 'Q1', '('), ('Q1', '(', '25th'), ('(', '25th', 'Percentile'), ('25th', 'Percentile', ')'), ('Percentile', ')', 'Q3'), (')', 'Q3', '('), ('Q3', '(', '75th'), ('(', '75th', 'Percentile'), ('75th', 'Percentile', ')'), ('Percentile', ')', 'Q2'), (')', 'Q2', '('), ('Q2', '(', '50th'), ('(', '50th', 'Percentile'), ('50th', 'Percentile', ')'), ('Percentile', ')', 'Interquartile'), (')', 'Interquartile', 'Range'), ('Interquartile', 'Range', '('), ('Range', '(', 'IQR'), ('(', 'IQR', ')'), ('IQR', ')', 'Median'), (')', 'Median', 'Minimum'), ('Median', 'Minimum', '('), ('Minimum', '(', 'Q1'), ('(', 'Q1', '–'), ('Q1', '–', '1.5'), ('–', '1.5', '*'), ('1.5', '*', 'IQR'), ('*', 'IQR', ')'), ('IQR', ')', 'Maximum'), (')', 'Maximum', '('), ('Maximum', '(', 'Q3'), ('(', 'Q3', '+'), ('Q3', '+', '1.5'), ('+', '1.5', '*'), ('1.5', '*', 'IQR'), ('*', 'IQR', ')'), ('IQR', ')', 'Outliers'), (')', 'Outliers', 'Outliers'), ('Outliers', 'Outliers', 'Whiskers'), ('Outliers', 'Whiskers', 'Whiskers'), ('Whiskers', 'Whiskers', 'Prof.'), ('Whiskers', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–Data'), ('04', '–Data', 'Visualization'), ('–Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Boxplot'), ('›', 'Boxplot', '('), ('Boxplot', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('In', 'IN'), ('boxplot', 'NN'), (',', ','), ('data', 'NNS'), ('divided', 'VBD'), ('4', 'CD'), ('part', 'NN'), ('using', 'VBG'), ('3', 'CD'), ('points', 'NNS'), ('(', '('), ('25th', 'CD'), ('percentile', 'NN'), (',', ','), ('median', 'JJ'), (',', ','), ('75th', 'CD'), ('percentile', 'NN'), (')', ')'), ('0', 'CD'), ('-1', 'JJ'), ('-2', 'NNP'), ('-3', 'NNP'), ('-4', 'NNP'), ('-5', 'VBD'), ('5', 'CD'), ('4', 'CD'), ('3', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Q1', 'NNP'), ('(', '('), ('25th', 'CD'), ('Percentile', 'NNP'), (')', ')'), ('Q3', 'NNP'), ('(', '('), ('75th', 'CD'), ('Percentile', 'NNP'), (')', ')'), ('Q2', 'NNP'), ('(', '('), ('50th', 'CD'), ('Percentile', 'NNP'), (')', ')'), ('Interquartile', 'NNP'), ('Range', 'NNP'), ('(', '('), ('IQR', 'NNP'), (')', ')'), ('Median', 'NNP'), ('Minimum', 'NNP'), ('(', '('), ('Q1', 'NNP'), ('–', 'VBZ'), ('1.5', 'CD'), ('*', 'NNP'), ('IQR', 'NNP'), (')', ')'), ('Maximum', 'NNP'), ('(', '('), ('Q3', 'NNP'), ('+', 'VBZ'), ('1.5', 'CD'), ('*', 'NNP'), ('IQR', 'NNP'), (')', ')'), ('Outliers', 'NNPS'), ('Outliers', 'NNPS'), ('Whiskers', 'NNPS'), ('Whiskers', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Boxplot', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  In/IN
  (NP boxplot/NN)
  ,/,
  (NP data/NNS)
  divided/VBD
  4/CD
  (NP part/NN)
  using/VBG
  3/CD
  (NP points/NNS)
  (/(
  25th/CD
  (NP percentile/NN)
  ,/,
  median/JJ
  ,/,
  75th/CD
  (NP percentile/NN)
  )/)
  0/CD
  (NP -1/JJ -2/NNP -3/NNP -4/NNP)
  -5/VBD
  5/CD
  4/CD
  3/CD
  2/CD
  1/CD
  (NP Q1/NNP)
  (/(
  25th/CD
  (NP Percentile/NNP)
  )/)
  (NP Q3/NNP)
  (/(
  75th/CD
  (NP Percentile/NNP)
  )/)
  (NP Q2/NNP)
  (/(
  50th/CD
  (NP Percentile/NNP)
  )/)
  (NP Interquartile/NNP Range/NNP)
  (/(
  (NP IQR/NNP)
  )/)
  (NP Median/NNP Minimum/NNP)
  (/(
  (NP Q1/NNP)
  –/VBZ
  1.5/CD
  (NP */NNP IQR/NNP)
  )/)
  (NP Maximum/NNP)
  (/(
  (NP Q3/NNP)
  +/VBZ
  1.5/CD
  (NP */NNP IQR/NNP)
  )/)
  Outliers/NNPS
  Outliers/NNPS
  Whiskers/NNPS
  (NP Whiskers/NNP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Boxplot/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['boxplot', 'data', 'part', 'points', 'percentile', 'percentile', '-1 -2 -3 -4', 'Q1', 'Percentile', 'Q3', 'Percentile', 'Q2', 'Percentile', 'Interquartile Range', 'IQR', 'Median Minimum', 'Q1', '* IQR', 'Maximum', 'Q3', '* IQR', 'Whiskers Prof. Arjun V. Bala', 'PDS', 'Unit', '–Data Visualization ‹', '› Boxplot', 'Cont']

>> Named Entities are: 
 [('ORGANIZATION', 'IQR'), ('PERSON', 'Median Minimum'), ('GPE', 'Maximum'), ('ORGANIZATION', 'Outliers Outliers Whiskers Whiskers'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('boxplot', 'boxplot'), (',', ','), ('data', 'data'), ('divided', 'divid'), ('4', '4'), ('part', 'part'), ('using', 'use'), ('3', '3'), ('points', 'point'), ('(', '('), ('25th', '25th'), ('percentile', 'percentil'), (',', ','), ('median', 'median'), (',', ','), ('75th', '75th'), ('percentile', 'percentil'), (')', ')'), ('0', '0'), ('-1', '-1'), ('-2', '-2'), ('-3', '-3'), ('-4', '-4'), ('-5', '-5'), ('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('1', '1'), ('Q1', 'q1'), ('(', '('), ('25th', '25th'), ('Percentile', 'percentil'), (')', ')'), ('Q3', 'q3'), ('(', '('), ('75th', '75th'), ('Percentile', 'percentil'), (')', ')'), ('Q2', 'q2'), ('(', '('), ('50th', '50th'), ('Percentile', 'percentil'), (')', ')'), ('Interquartile', 'interquartil'), ('Range', 'rang'), ('(', '('), ('IQR', 'iqr'), (')', ')'), ('Median', 'median'), ('Minimum', 'minimum'), ('(', '('), ('Q1', 'q1'), ('–', '–'), ('1.5', '1.5'), ('*', '*'), ('IQR', 'iqr'), (')', ')'), ('Maximum', 'maximum'), ('(', '('), ('Q3', 'q3'), ('+', '+'), ('1.5', '1.5'), ('*', '*'), ('IQR', 'iqr'), (')', ')'), ('Outliers', 'outlier'), ('Outliers', 'outlier'), ('Whiskers', 'whisker'), ('Whiskers', 'whisker'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–Data', '–data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Boxplot', 'boxplot'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('boxplot', 'boxplot'), (',', ','), ('data', 'data'), ('divided', 'divid'), ('4', '4'), ('part', 'part'), ('using', 'use'), ('3', '3'), ('points', 'point'), ('(', '('), ('25th', '25th'), ('percentile', 'percentil'), (',', ','), ('median', 'median'), (',', ','), ('75th', '75th'), ('percentile', 'percentil'), (')', ')'), ('0', '0'), ('-1', '-1'), ('-2', '-2'), ('-3', '-3'), ('-4', '-4'), ('-5', '-5'), ('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('1', '1'), ('Q1', 'q1'), ('(', '('), ('25th', '25th'), ('Percentile', 'percentil'), (')', ')'), ('Q3', 'q3'), ('(', '('), ('75th', '75th'), ('Percentile', 'percentil'), (')', ')'), ('Q2', 'q2'), ('(', '('), ('50th', '50th'), ('Percentile', 'percentil'), (')', ')'), ('Interquartile', 'interquartil'), ('Range', 'rang'), ('(', '('), ('IQR', 'iqr'), (')', ')'), ('Median', 'median'), ('Minimum', 'minimum'), ('(', '('), ('Q1', 'q1'), ('–', '–'), ('1.5', '1.5'), ('*', '*'), ('IQR', 'iqr'), (')', ')'), ('Maximum', 'maximum'), ('(', '('), ('Q3', 'q3'), ('+', '+'), ('1.5', '1.5'), ('*', '*'), ('IQR', 'iqr'), (')', ')'), ('Outliers', 'outlier'), ('Outliers', 'outlier'), ('Whiskers', 'whisker'), ('Whiskers', 'whisker'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–Data', '–data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Boxplot', 'boxplot'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('In', 'In'), ('boxplot', 'boxplot'), (',', ','), ('data', 'data'), ('divided', 'divided'), ('4', '4'), ('part', 'part'), ('using', 'using'), ('3', '3'), ('points', 'point'), ('(', '('), ('25th', '25th'), ('percentile', 'percentile'), (',', ','), ('median', 'median'), (',', ','), ('75th', '75th'), ('percentile', 'percentile'), (')', ')'), ('0', '0'), ('-1', '-1'), ('-2', '-2'), ('-3', '-3'), ('-4', '-4'), ('-5', '-5'), ('5', '5'), ('4', '4'), ('3', '3'), ('2', '2'), ('1', '1'), ('Q1', 'Q1'), ('(', '('), ('25th', '25th'), ('Percentile', 'Percentile'), (')', ')'), ('Q3', 'Q3'), ('(', '('), ('75th', '75th'), ('Percentile', 'Percentile'), (')', ')'), ('Q2', 'Q2'), ('(', '('), ('50th', '50th'), ('Percentile', 'Percentile'), (')', ')'), ('Interquartile', 'Interquartile'), ('Range', 'Range'), ('(', '('), ('IQR', 'IQR'), (')', ')'), ('Median', 'Median'), ('Minimum', 'Minimum'), ('(', '('), ('Q1', 'Q1'), ('–', '–'), ('1.5', '1.5'), ('*', '*'), ('IQR', 'IQR'), (')', ')'), ('Maximum', 'Maximum'), ('(', '('), ('Q3', 'Q3'), ('+', '+'), ('1.5', '1.5'), ('*', '*'), ('IQR', 'IQR'), (')', ')'), ('Outliers', 'Outliers'), ('Outliers', 'Outliers'), ('Whiskers', 'Whiskers'), ('Whiskers', 'Whiskers'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–Data', '–Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Boxplot', 'Boxplot'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 36 =============================

Boxplot basically used to detect outliers in the data, lets see an example where we need boxplot. 


>> Tokens are: 
 ['Boxplot', 'basically', 'used', 'detect', 'outliers', 'data', ',', 'lets', 'see', 'example', 'need', 'boxplot', '.']

>> Bigrams are: 
 [('Boxplot', 'basically'), ('basically', 'used'), ('used', 'detect'), ('detect', 'outliers'), ('outliers', 'data'), ('data', ','), (',', 'lets'), ('lets', 'see'), ('see', 'example'), ('example', 'need'), ('need', 'boxplot'), ('boxplot', '.')]

>> Trigrams are: 
 [('Boxplot', 'basically', 'used'), ('basically', 'used', 'detect'), ('used', 'detect', 'outliers'), ('detect', 'outliers', 'data'), ('outliers', 'data', ','), ('data', ',', 'lets'), (',', 'lets', 'see'), ('lets', 'see', 'example'), ('see', 'example', 'need'), ('example', 'need', 'boxplot'), ('need', 'boxplot', '.')]

>> POS Tags are: 
 [('Boxplot', 'NNP'), ('basically', 'RB'), ('used', 'VBD'), ('detect', 'JJ'), ('outliers', 'NNS'), ('data', 'NNS'), (',', ','), ('lets', 'NNS'), ('see', 'VBP'), ('example', 'NN'), ('need', 'VBP'), ('boxplot', 'NN'), ('.', '.')]

 (S
  (NP Boxplot/NNP)
  basically/RB
  used/VBD
  (NP detect/JJ outliers/NNS data/NNS)
  ,/,
  (NP lets/NNS)
  see/VBP
  (NP example/NN)
  need/VBP
  (NP boxplot/NN)
  ./.) 


>> Noun Phrases are: 
 ['Boxplot', 'detect outliers data', 'lets', 'example', 'boxplot']

>> Named Entities are: 
 [('GPE', 'Boxplot')] 

>> Stemming using Porter Stemmer: 
 [('Boxplot', 'boxplot'), ('basically', 'basic'), ('used', 'use'), ('detect', 'detect'), ('outliers', 'outlier'), ('data', 'data'), (',', ','), ('lets', 'let'), ('see', 'see'), ('example', 'exampl'), ('need', 'need'), ('boxplot', 'boxplot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Boxplot', 'boxplot'), ('basically', 'basic'), ('used', 'use'), ('detect', 'detect'), ('outliers', 'outlier'), ('data', 'data'), (',', ','), ('lets', 'let'), ('see', 'see'), ('example', 'exampl'), ('need', 'need'), ('boxplot', 'boxplot'), ('.', '.')]

>> Lemmatization: 
 [('Boxplot', 'Boxplot'), ('basically', 'basically'), ('used', 'used'), ('detect', 'detect'), ('outliers', 'outlier'), ('data', 'data'), (',', ','), ('lets', 'let'), ('see', 'see'), ('example', 'example'), ('need', 'need'), ('boxplot', 'boxplot'), ('.', '.')]



============================ Sentence 37 =============================

We have a dataset where we have time taken to check the paper, and we want to find the faculty which either takes more time or very little time to check the paper. 


>> Tokens are: 
 ['We', 'dataset', 'time', 'taken', 'check', 'paper', ',', 'want', 'find', 'faculty', 'either', 'takes', 'time', 'little', 'time', 'check', 'paper', '.']

>> Bigrams are: 
 [('We', 'dataset'), ('dataset', 'time'), ('time', 'taken'), ('taken', 'check'), ('check', 'paper'), ('paper', ','), (',', 'want'), ('want', 'find'), ('find', 'faculty'), ('faculty', 'either'), ('either', 'takes'), ('takes', 'time'), ('time', 'little'), ('little', 'time'), ('time', 'check'), ('check', 'paper'), ('paper', '.')]

>> Trigrams are: 
 [('We', 'dataset', 'time'), ('dataset', 'time', 'taken'), ('time', 'taken', 'check'), ('taken', 'check', 'paper'), ('check', 'paper', ','), ('paper', ',', 'want'), (',', 'want', 'find'), ('want', 'find', 'faculty'), ('find', 'faculty', 'either'), ('faculty', 'either', 'takes'), ('either', 'takes', 'time'), ('takes', 'time', 'little'), ('time', 'little', 'time'), ('little', 'time', 'check'), ('time', 'check', 'paper'), ('check', 'paper', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('dataset', 'VBP'), ('time', 'NN'), ('taken', 'VBN'), ('check', 'VB'), ('paper', 'NN'), (',', ','), ('want', 'VBP'), ('find', 'VB'), ('faculty', 'NN'), ('either', 'CC'), ('takes', 'VBZ'), ('time', 'NN'), ('little', 'JJ'), ('time', 'NN'), ('check', 'VB'), ('paper', 'NN'), ('.', '.')]

 (S
  We/PRP
  dataset/VBP
  (NP time/NN)
  taken/VBN
  check/VB
  (NP paper/NN)
  ,/,
  want/VBP
  find/VB
  (NP faculty/NN)
  either/CC
  takes/VBZ
  (NP time/NN)
  (NP little/JJ time/NN)
  check/VB
  (NP paper/NN)
  ./.) 


>> Noun Phrases are: 
 ['time', 'paper', 'faculty', 'time', 'little time', 'paper']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('dataset', 'dataset'), ('time', 'time'), ('taken', 'taken'), ('check', 'check'), ('paper', 'paper'), (',', ','), ('want', 'want'), ('find', 'find'), ('faculty', 'faculti'), ('either', 'either'), ('takes', 'take'), ('time', 'time'), ('little', 'littl'), ('time', 'time'), ('check', 'check'), ('paper', 'paper'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('dataset', 'dataset'), ('time', 'time'), ('taken', 'taken'), ('check', 'check'), ('paper', 'paper'), (',', ','), ('want', 'want'), ('find', 'find'), ('faculty', 'faculti'), ('either', 'either'), ('takes', 'take'), ('time', 'time'), ('little', 'littl'), ('time', 'time'), ('check', 'check'), ('paper', 'paper'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('dataset', 'dataset'), ('time', 'time'), ('taken', 'taken'), ('check', 'check'), ('paper', 'paper'), (',', ','), ('want', 'want'), ('find', 'find'), ('faculty', 'faculty'), ('either', 'either'), ('takes', 'take'), ('time', 'time'), ('little', 'little'), ('time', 'time'), ('check', 'check'), ('paper', 'paper'), ('.', '.')]



============================ Sentence 38 =============================

We can specify other parameters like widths, which specify the width of the box notch, default is False vert, set to 0 if you want to have horizontal graph import pandas as pd import matplotlib.pyplot as plt %matplotlib inline timetaken = pd.Series([50,45,52,63,70,21,56,68,54,57,35,62,65,92,32]) plt.boxplot(timetaken) 1 2 3 4   5 boxDemo.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Scatter Plot A scatter plot is a type of plot that shows the data as a collection of points. 


>> Tokens are: 
 ['We', 'specify', 'parameters', 'like', 'widths', ',', 'specify', 'width', 'box', 'notch', ',', 'default', 'False', 'vert', ',', 'set', '0', 'want', 'horizontal', 'graph', 'import', 'pandas', 'pd', 'import', 'matplotlib.pyplot', 'plt', '%', 'matplotlib', 'inline', 'timetaken', '=', 'pd.Series', '(', '[', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', ']', ')', 'plt.boxplot', '(', 'timetaken', ')', '1', '2', '3', '4', '5', 'boxDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Scatter', 'Plot', 'A', 'scatter', 'plot', 'type', 'plot', 'shows', 'data', 'collection', 'points', '.']

>> Bigrams are: 
 [('We', 'specify'), ('specify', 'parameters'), ('parameters', 'like'), ('like', 'widths'), ('widths', ','), (',', 'specify'), ('specify', 'width'), ('width', 'box'), ('box', 'notch'), ('notch', ','), (',', 'default'), ('default', 'False'), ('False', 'vert'), ('vert', ','), (',', 'set'), ('set', '0'), ('0', 'want'), ('want', 'horizontal'), ('horizontal', 'graph'), ('graph', 'import'), ('import', 'pandas'), ('pandas', 'pd'), ('pd', 'import'), ('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'timetaken'), ('timetaken', '='), ('=', 'pd.Series'), ('pd.Series', '('), ('(', '['), ('[', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32'), ('50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', ']'), (']', ')'), (')', 'plt.boxplot'), ('plt.boxplot', '('), ('(', 'timetaken'), ('timetaken', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', 'boxDemo.py'), ('boxDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Scatter'), ('Scatter', 'Plot'), ('Plot', 'A'), ('A', 'scatter'), ('scatter', 'plot'), ('plot', 'type'), ('type', 'plot'), ('plot', 'shows'), ('shows', 'data'), ('data', 'collection'), ('collection', 'points'), ('points', '.')]

>> Trigrams are: 
 [('We', 'specify', 'parameters'), ('specify', 'parameters', 'like'), ('parameters', 'like', 'widths'), ('like', 'widths', ','), ('widths', ',', 'specify'), (',', 'specify', 'width'), ('specify', 'width', 'box'), ('width', 'box', 'notch'), ('box', 'notch', ','), ('notch', ',', 'default'), (',', 'default', 'False'), ('default', 'False', 'vert'), ('False', 'vert', ','), ('vert', ',', 'set'), (',', 'set', '0'), ('set', '0', 'want'), ('0', 'want', 'horizontal'), ('want', 'horizontal', 'graph'), ('horizontal', 'graph', 'import'), ('graph', 'import', 'pandas'), ('import', 'pandas', 'pd'), ('pandas', 'pd', 'import'), ('pd', 'import', 'matplotlib.pyplot'), ('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', '%'), ('plt', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'timetaken'), ('inline', 'timetaken', '='), ('timetaken', '=', 'pd.Series'), ('=', 'pd.Series', '('), ('pd.Series', '(', '['), ('(', '[', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32'), ('[', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', ']'), ('50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', ']', ')'), (']', ')', 'plt.boxplot'), (')', 'plt.boxplot', '('), ('plt.boxplot', '(', 'timetaken'), ('(', 'timetaken', ')'), ('timetaken', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', 'boxDemo.py'), ('5', 'boxDemo.py', 'Prof.'), ('boxDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Scatter'), ('›', 'Scatter', 'Plot'), ('Scatter', 'Plot', 'A'), ('Plot', 'A', 'scatter'), ('A', 'scatter', 'plot'), ('scatter', 'plot', 'type'), ('plot', 'type', 'plot'), ('type', 'plot', 'shows'), ('plot', 'shows', 'data'), ('shows', 'data', 'collection'), ('data', 'collection', 'points'), ('collection', 'points', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('specify', 'VBP'), ('parameters', 'NNS'), ('like', 'IN'), ('widths', 'NNS'), (',', ','), ('specify', 'VB'), ('width', 'JJ'), ('box', 'NN'), ('notch', 'NN'), (',', ','), ('default', 'NN'), ('False', 'NNP'), ('vert', 'NN'), (',', ','), ('set', 'VBD'), ('0', 'CD'), ('want', 'JJ'), ('horizontal', 'NN'), ('graph', 'NN'), ('import', 'NN'), ('pandas', 'NNS'), ('pd', 'VBP'), ('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('timetaken', 'VBN'), ('=', 'JJ'), ('pd.Series', 'NNS'), ('(', '('), ('[', '$'), ('50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', 'CD'), (']', 'NNP'), (')', ')'), ('plt.boxplot', 'NN'), ('(', '('), ('timetaken', 'VBN'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('boxDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Scatter', 'NNP'), ('Plot', 'NNP'), ('A', 'NNP'), ('scatter', 'NN'), ('plot', 'NN'), ('type', 'NN'), ('plot', 'NN'), ('shows', 'VBZ'), ('data', 'NNS'), ('collection', 'NN'), ('points', 'NNS'), ('.', '.')]

 (S
  We/PRP
  specify/VBP
  (NP parameters/NNS)
  like/IN
  (NP widths/NNS)
  ,/,
  specify/VB
  (NP width/JJ box/NN notch/NN)
  ,/,
  (NP default/NN False/NNP vert/NN)
  ,/,
  set/VBD
  0/CD
  (NP want/JJ horizontal/NN graph/NN import/NN pandas/NNS)
  pd/VBP
  (NP import/NN matplotlib.pyplot/NN plt/NN %/NN)
  (NP matplotlib/JJ inline/NN)
  timetaken/VBN
  (NP =/JJ pd.Series/NNS)
  (/(
  [/$
  50,45,52,63,70,21,56,68,54,57,35,62,65,92,32/CD
  (NP ]/NNP)
  )/)
  (NP plt.boxplot/NN)
  (/(
  timetaken/VBN
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  (NP boxDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Scatter/NNP
    Plot/NNP
    A/NNP
    scatter/NN
    plot/NN
    type/NN
    plot/NN)
  shows/VBZ
  (NP data/NNS collection/NN points/NNS)
  ./.) 


>> Noun Phrases are: 
 ['parameters', 'widths', 'width box notch', 'default False vert', 'want horizontal graph import pandas', 'import matplotlib.pyplot plt %', 'matplotlib inline', '= pd.Series', ']', 'plt.boxplot', 'boxDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Scatter Plot A scatter plot type plot', 'data collection points']

>> Named Entities are: 
 [('PERSON', 'False'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('specify', 'specifi'), ('parameters', 'paramet'), ('like', 'like'), ('widths', 'width'), (',', ','), ('specify', 'specifi'), ('width', 'width'), ('box', 'box'), ('notch', 'notch'), (',', ','), ('default', 'default'), ('False', 'fals'), ('vert', 'vert'), (',', ','), ('set', 'set'), ('0', '0'), ('want', 'want'), ('horizontal', 'horizont'), ('graph', 'graph'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('timetaken', 'timetaken'), ('=', '='), ('pd.Series', 'pd.seri'), ('(', '('), ('[', '['), ('50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32'), (']', ']'), (')', ')'), ('plt.boxplot', 'plt.boxplot'), ('(', '('), ('timetaken', 'timetaken'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('boxDemo.py', 'boxdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Scatter', 'scatter'), ('Plot', 'plot'), ('A', 'a'), ('scatter', 'scatter'), ('plot', 'plot'), ('type', 'type'), ('plot', 'plot'), ('shows', 'show'), ('data', 'data'), ('collection', 'collect'), ('points', 'point'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('specify', 'specifi'), ('parameters', 'paramet'), ('like', 'like'), ('widths', 'width'), (',', ','), ('specify', 'specifi'), ('width', 'width'), ('box', 'box'), ('notch', 'notch'), (',', ','), ('default', 'default'), ('False', 'fals'), ('vert', 'vert'), (',', ','), ('set', 'set'), ('0', '0'), ('want', 'want'), ('horizontal', 'horizont'), ('graph', 'graph'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('timetaken', 'timetaken'), ('=', '='), ('pd.Series', 'pd.seri'), ('(', '('), ('[', '['), ('50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32'), (']', ']'), (')', ')'), ('plt.boxplot', 'plt.boxplot'), ('(', '('), ('timetaken', 'timetaken'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('boxDemo.py', 'boxdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Scatter', 'scatter'), ('Plot', 'plot'), ('A', 'a'), ('scatter', 'scatter'), ('plot', 'plot'), ('type', 'type'), ('plot', 'plot'), ('shows', 'show'), ('data', 'data'), ('collection', 'collect'), ('points', 'point'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('specify', 'specify'), ('parameters', 'parameter'), ('like', 'like'), ('widths', 'width'), (',', ','), ('specify', 'specify'), ('width', 'width'), ('box', 'box'), ('notch', 'notch'), (',', ','), ('default', 'default'), ('False', 'False'), ('vert', 'vert'), (',', ','), ('set', 'set'), ('0', '0'), ('want', 'want'), ('horizontal', 'horizontal'), ('graph', 'graph'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('timetaken', 'timetaken'), ('=', '='), ('pd.Series', 'pd.Series'), ('(', '('), ('[', '['), ('50,45,52,63,70,21,56,68,54,57,35,62,65,92,32', '50,45,52,63,70,21,56,68,54,57,35,62,65,92,32'), (']', ']'), (')', ')'), ('plt.boxplot', 'plt.boxplot'), ('(', '('), ('timetaken', 'timetaken'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('boxDemo.py', 'boxDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Scatter', 'Scatter'), ('Plot', 'Plot'), ('A', 'A'), ('scatter', 'scatter'), ('plot', 'plot'), ('type', 'type'), ('plot', 'plot'), ('shows', 'show'), ('data', 'data'), ('collection', 'collection'), ('points', 'point'), ('.', '.')]



============================ Sentence 39 =============================

The position of a point depends on its two-dimensional value, where each value is a position on either the horizontal or vertical dimension. 


>> Tokens are: 
 ['The', 'position', 'point', 'depends', 'two-dimensional', 'value', ',', 'value', 'position', 'either', 'horizontal', 'vertical', 'dimension', '.']

>> Bigrams are: 
 [('The', 'position'), ('position', 'point'), ('point', 'depends'), ('depends', 'two-dimensional'), ('two-dimensional', 'value'), ('value', ','), (',', 'value'), ('value', 'position'), ('position', 'either'), ('either', 'horizontal'), ('horizontal', 'vertical'), ('vertical', 'dimension'), ('dimension', '.')]

>> Trigrams are: 
 [('The', 'position', 'point'), ('position', 'point', 'depends'), ('point', 'depends', 'two-dimensional'), ('depends', 'two-dimensional', 'value'), ('two-dimensional', 'value', ','), ('value', ',', 'value'), (',', 'value', 'position'), ('value', 'position', 'either'), ('position', 'either', 'horizontal'), ('either', 'horizontal', 'vertical'), ('horizontal', 'vertical', 'dimension'), ('vertical', 'dimension', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('position', 'NN'), ('point', 'NN'), ('depends', 'VBZ'), ('two-dimensional', 'JJ'), ('value', 'NN'), (',', ','), ('value', 'NN'), ('position', 'NN'), ('either', 'CC'), ('horizontal', 'JJ'), ('vertical', 'JJ'), ('dimension', 'NN'), ('.', '.')]

 (S
  (NP The/DT position/NN point/NN)
  depends/VBZ
  (NP two-dimensional/JJ value/NN)
  ,/,
  (NP value/NN position/NN)
  either/CC
  (NP horizontal/JJ vertical/JJ dimension/NN)
  ./.) 


>> Noun Phrases are: 
 ['The position point', 'two-dimensional value', 'value position', 'horizontal vertical dimension']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('position', 'posit'), ('point', 'point'), ('depends', 'depend'), ('two-dimensional', 'two-dimension'), ('value', 'valu'), (',', ','), ('value', 'valu'), ('position', 'posit'), ('either', 'either'), ('horizontal', 'horizont'), ('vertical', 'vertic'), ('dimension', 'dimens'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('position', 'posit'), ('point', 'point'), ('depends', 'depend'), ('two-dimensional', 'two-dimension'), ('value', 'valu'), (',', ','), ('value', 'valu'), ('position', 'posit'), ('either', 'either'), ('horizontal', 'horizont'), ('vertical', 'vertic'), ('dimension', 'dimens'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('position', 'position'), ('point', 'point'), ('depends', 'depends'), ('two-dimensional', 'two-dimensional'), ('value', 'value'), (',', ','), ('value', 'value'), ('position', 'position'), ('either', 'either'), ('horizontal', 'horizontal'), ('vertical', 'vertical'), ('dimension', 'dimension'), ('.', '.')]



============================ Sentence 40 =============================

It is really useful to study the relationship/pattern between variables. 


>> Tokens are: 
 ['It', 'really', 'useful', 'study', 'relationship/pattern', 'variables', '.']

>> Bigrams are: 
 [('It', 'really'), ('really', 'useful'), ('useful', 'study'), ('study', 'relationship/pattern'), ('relationship/pattern', 'variables'), ('variables', '.')]

>> Trigrams are: 
 [('It', 'really', 'useful'), ('really', 'useful', 'study'), ('useful', 'study', 'relationship/pattern'), ('study', 'relationship/pattern', 'variables'), ('relationship/pattern', 'variables', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('really', 'RB'), ('useful', 'JJ'), ('study', 'NN'), ('relationship/pattern', 'JJ'), ('variables', 'NNS'), ('.', '.')]

 (S
  It/PRP
  really/RB
  (NP useful/JJ study/NN)
  (NP relationship/pattern/JJ variables/NNS)
  ./.) 


>> Noun Phrases are: 
 ['useful study', 'relationship/pattern variables']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('really', 'realli'), ('useful', 'use'), ('study', 'studi'), ('relationship/pattern', 'relationship/pattern'), ('variables', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('really', 'realli'), ('useful', 'use'), ('study', 'studi'), ('relationship/pattern', 'relationship/pattern'), ('variables', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('really', 'really'), ('useful', 'useful'), ('study', 'study'), ('relationship/pattern', 'relationship/pattern'), ('variables', 'variable'), ('.', '.')]



============================ Sentence 41 =============================

import matplotlib.pyplot as plt import pandas as pd %matplotlib inline df = pd.read_csv('insurance.csv') plt.scatter(df['bmi'], df['charges']) plt.show() 1 2 3 4 5 6 histDemo.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Scatter Plot (Cont.) 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', 'import', 'pandas', 'pd', '%', 'matplotlib', 'inline', 'df', '=', 'pd.read_csv', '(', "'insurance.csv", "'", ')', 'plt.scatter', '(', 'df', '[', "'bmi", "'", ']', ',', 'df', '[', "'charges", "'", ']', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', 'histDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Scatter', 'Plot', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', 'import'), ('import', 'pandas'), ('pandas', 'pd'), ('pd', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'df'), ('df', '='), ('=', 'pd.read_csv'), ('pd.read_csv', '('), ('(', "'insurance.csv"), ("'insurance.csv", "'"), ("'", ')'), (')', 'plt.scatter'), ('plt.scatter', '('), ('(', 'df'), ('df', '['), ('[', "'bmi"), ("'bmi", "'"), ("'", ']'), (']', ','), (',', 'df'), ('df', '['), ('[', "'charges"), ("'charges", "'"), ("'", ']'), (']', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', 'histDemo.py'), ('histDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Scatter'), ('Scatter', 'Plot'), ('Plot', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', 'import'), ('plt', 'import', 'pandas'), ('import', 'pandas', 'pd'), ('pandas', 'pd', '%'), ('pd', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'df'), ('inline', 'df', '='), ('df', '=', 'pd.read_csv'), ('=', 'pd.read_csv', '('), ('pd.read_csv', '(', "'insurance.csv"), ('(', "'insurance.csv", "'"), ("'insurance.csv", "'", ')'), ("'", ')', 'plt.scatter'), (')', 'plt.scatter', '('), ('plt.scatter', '(', 'df'), ('(', 'df', '['), ('df', '[', "'bmi"), ('[', "'bmi", "'"), ("'bmi", "'", ']'), ("'", ']', ','), (']', ',', 'df'), (',', 'df', '['), ('df', '[', "'charges"), ('[', "'charges", "'"), ("'charges", "'", ']'), ("'", ']', ')'), (']', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', 'histDemo.py'), ('6', 'histDemo.py', 'Prof.'), ('histDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Scatter'), ('›', 'Scatter', 'Plot'), ('Scatter', 'Plot', '('), ('Plot', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('import', 'NN'), ('pandas', 'VBP'), ('pd', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('df', 'NN'), ('=', 'NNP'), ('pd.read_csv', 'NN'), ('(', '('), ("'insurance.csv", 'NNP'), ("'", 'POS'), (')', ')'), ('plt.scatter', 'NN'), ('(', '('), ('df', 'JJ'), ('[', 'NNP'), ("'bmi", 'NNP'), ("'", 'POS'), (']', 'NN'), (',', ','), ('df', 'NN'), ('[', 'NNP'), ("'charges", 'VBZ'), ("'", 'POS'), (']', 'NN'), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('histDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Scatter', 'NNP'), ('Plot', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN import/NN)
  pandas/VBP
  (NP pd/NN %/NN)
  (NP matplotlib/JJ inline/NN df/NN =/NNP pd.read_csv/NN)
  (/(
  (NP 'insurance.csv/NNP)
  '/POS
  )/)
  (NP plt.scatter/NN)
  (/(
  (NP df/JJ [/NNP 'bmi/NNP)
  '/POS
  (NP ]/NN)
  ,/,
  (NP df/NN [/NNP)
  'charges/VBZ
  '/POS
  (NP ]/NN)
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  (NP histDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Scatter/NNP Plot/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt import', 'pd %', 'matplotlib inline df = pd.read_csv', "'insurance.csv", 'plt.scatter', "df [ 'bmi", ']', 'df [', ']', 'plt.show', 'histDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Scatter Plot', 'Cont']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('df', 'df'), ('=', '='), ('pd.read_csv', 'pd.read_csv'), ('(', '('), ("'insurance.csv", "'insurance.csv"), ("'", "'"), (')', ')'), ('plt.scatter', 'plt.scatter'), ('(', '('), ('df', 'df'), ('[', '['), ("'bmi", "'bmi"), ("'", "'"), (']', ']'), (',', ','), ('df', 'df'), ('[', '['), ("'charges", "'charg"), ("'", "'"), (']', ']'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('histDemo.py', 'histdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Scatter', 'scatter'), ('Plot', 'plot'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('df', 'df'), ('=', '='), ('pd.read_csv', 'pd.read_csv'), ('(', '('), ("'insurance.csv", 'insurance.csv'), ("'", "'"), (')', ')'), ('plt.scatter', 'plt.scatter'), ('(', '('), ('df', 'df'), ('[', '['), ("'bmi", 'bmi'), ("'", "'"), (']', ']'), (',', ','), ('df', 'df'), ('[', '['), ("'charges", 'charg'), ("'", "'"), (']', ']'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('histDemo.py', 'histdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Scatter', 'scatter'), ('Plot', 'plot'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('df', 'df'), ('=', '='), ('pd.read_csv', 'pd.read_csv'), ('(', '('), ("'insurance.csv", "'insurance.csv"), ("'", "'"), (')', ')'), ('plt.scatter', 'plt.scatter'), ('(', '('), ('df', 'df'), ('[', '['), ("'bmi", "'bmi"), ("'", "'"), (']', ']'), (',', ','), ('df', 'df'), ('[', '['), ("'charges", "'charges"), ("'", "'"), (']', ']'), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('histDemo.py', 'histDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Scatter', 'Scatter'), ('Plot', 'Plot'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 42 =============================

To find specific pattern from the data, we can further divide the data and plot scatter plot. 


>> Tokens are: 
 ['To', 'find', 'specific', 'pattern', 'data', ',', 'divide', 'data', 'plot', 'scatter', 'plot', '.']

>> Bigrams are: 
 [('To', 'find'), ('find', 'specific'), ('specific', 'pattern'), ('pattern', 'data'), ('data', ','), (',', 'divide'), ('divide', 'data'), ('data', 'plot'), ('plot', 'scatter'), ('scatter', 'plot'), ('plot', '.')]

>> Trigrams are: 
 [('To', 'find', 'specific'), ('find', 'specific', 'pattern'), ('specific', 'pattern', 'data'), ('pattern', 'data', ','), ('data', ',', 'divide'), (',', 'divide', 'data'), ('divide', 'data', 'plot'), ('data', 'plot', 'scatter'), ('plot', 'scatter', 'plot'), ('scatter', 'plot', '.')]

>> POS Tags are: 
 [('To', 'TO'), ('find', 'VB'), ('specific', 'JJ'), ('pattern', 'NN'), ('data', 'NNS'), (',', ','), ('divide', 'NN'), ('data', 'NNS'), ('plot', 'NN'), ('scatter', 'NN'), ('plot', 'NN'), ('.', '.')]

 (S
  To/TO
  find/VB
  (NP specific/JJ pattern/NN data/NNS)
  ,/,
  (NP divide/NN data/NNS plot/NN scatter/NN plot/NN)
  ./.) 


>> Noun Phrases are: 
 ['specific pattern data', 'divide data plot scatter plot']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('To', 'to'), ('find', 'find'), ('specific', 'specif'), ('pattern', 'pattern'), ('data', 'data'), (',', ','), ('divide', 'divid'), ('data', 'data'), ('plot', 'plot'), ('scatter', 'scatter'), ('plot', 'plot'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('To', 'to'), ('find', 'find'), ('specific', 'specif'), ('pattern', 'pattern'), ('data', 'data'), (',', ','), ('divide', 'divid'), ('data', 'data'), ('plot', 'plot'), ('scatter', 'scatter'), ('plot', 'plot'), ('.', '.')]

>> Lemmatization: 
 [('To', 'To'), ('find', 'find'), ('specific', 'specific'), ('pattern', 'pattern'), ('data', 'data'), (',', ','), ('divide', 'divide'), ('data', 'data'), ('plot', 'plot'), ('scatter', 'scatter'), ('plot', 'plot'), ('.', '.')]



============================ Sentence 43 =============================

We can do this with the help of groupby method of DataFrame, and then using tuple unpacking while looping the group. 


>> Tokens are: 
 ['We', 'help', 'groupby', 'method', 'DataFrame', ',', 'using', 'tuple', 'unpacking', 'looping', 'group', '.']

>> Bigrams are: 
 [('We', 'help'), ('help', 'groupby'), ('groupby', 'method'), ('method', 'DataFrame'), ('DataFrame', ','), (',', 'using'), ('using', 'tuple'), ('tuple', 'unpacking'), ('unpacking', 'looping'), ('looping', 'group'), ('group', '.')]

>> Trigrams are: 
 [('We', 'help', 'groupby'), ('help', 'groupby', 'method'), ('groupby', 'method', 'DataFrame'), ('method', 'DataFrame', ','), ('DataFrame', ',', 'using'), (',', 'using', 'tuple'), ('using', 'tuple', 'unpacking'), ('tuple', 'unpacking', 'looping'), ('unpacking', 'looping', 'group'), ('looping', 'group', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('help', 'VBP'), ('groupby', 'VB'), ('method', 'NN'), ('DataFrame', 'NNP'), (',', ','), ('using', 'VBG'), ('tuple', 'JJ'), ('unpacking', 'JJ'), ('looping', 'VBG'), ('group', 'NN'), ('.', '.')]

 (S
  We/PRP
  help/VBP
  groupby/VB
  (NP method/NN DataFrame/NNP)
  ,/,
  using/VBG
  tuple/JJ
  unpacking/JJ
  looping/VBG
  (NP group/NN)
  ./.) 


>> Noun Phrases are: 
 ['method DataFrame', 'group']

>> Named Entities are: 
 [('ORGANIZATION', 'DataFrame')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('help', 'help'), ('groupby', 'groupbi'), ('method', 'method'), ('DataFrame', 'datafram'), (',', ','), ('using', 'use'), ('tuple', 'tupl'), ('unpacking', 'unpack'), ('looping', 'loop'), ('group', 'group'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('help', 'help'), ('groupby', 'groupbi'), ('method', 'method'), ('DataFrame', 'datafram'), (',', ','), ('using', 'use'), ('tuple', 'tupl'), ('unpacking', 'unpack'), ('looping', 'loop'), ('group', 'group'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('help', 'help'), ('groupby', 'groupby'), ('method', 'method'), ('DataFrame', 'DataFrame'), (',', ','), ('using', 'using'), ('tuple', 'tuple'), ('unpacking', 'unpacking'), ('looping', 'looping'), ('group', 'group'), ('.', '.')]



============================ Sentence 44 =============================

Note : we can specify marker, color, and size of the marker with the help     of marker, color and s parameter respectively. 


>> Tokens are: 
 ['Note', ':', 'specify', 'marker', ',', 'color', ',', 'size', 'marker', 'help', 'marker', ',', 'color', 'parameter', 'respectively', '.']

>> Bigrams are: 
 [('Note', ':'), (':', 'specify'), ('specify', 'marker'), ('marker', ','), (',', 'color'), ('color', ','), (',', 'size'), ('size', 'marker'), ('marker', 'help'), ('help', 'marker'), ('marker', ','), (',', 'color'), ('color', 'parameter'), ('parameter', 'respectively'), ('respectively', '.')]

>> Trigrams are: 
 [('Note', ':', 'specify'), (':', 'specify', 'marker'), ('specify', 'marker', ','), ('marker', ',', 'color'), (',', 'color', ','), ('color', ',', 'size'), (',', 'size', 'marker'), ('size', 'marker', 'help'), ('marker', 'help', 'marker'), ('help', 'marker', ','), ('marker', ',', 'color'), (',', 'color', 'parameter'), ('color', 'parameter', 'respectively'), ('parameter', 'respectively', '.')]

>> POS Tags are: 
 [('Note', 'NN'), (':', ':'), ('specify', 'NN'), ('marker', 'NN'), (',', ','), ('color', 'NN'), (',', ','), ('size', 'NN'), ('marker', 'NN'), ('help', 'NN'), ('marker', 'NN'), (',', ','), ('color', 'NN'), ('parameter', 'NN'), ('respectively', 'RB'), ('.', '.')]

 (S
  (NP Note/NN)
  :/:
  (NP specify/NN marker/NN)
  ,/,
  (NP color/NN)
  ,/,
  (NP size/NN marker/NN help/NN marker/NN)
  ,/,
  (NP color/NN parameter/NN)
  respectively/RB
  ./.) 


>> Noun Phrases are: 
 ['Note', 'specify marker', 'color', 'size marker help marker', 'color parameter']

>> Named Entities are: 
 [('GPE', 'Note')] 

>> Stemming using Porter Stemmer: 
 [('Note', 'note'), (':', ':'), ('specify', 'specifi'), ('marker', 'marker'), (',', ','), ('color', 'color'), (',', ','), ('size', 'size'), ('marker', 'marker'), ('help', 'help'), ('marker', 'marker'), (',', ','), ('color', 'color'), ('parameter', 'paramet'), ('respectively', 'respect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Note', 'note'), (':', ':'), ('specify', 'specifi'), ('marker', 'marker'), (',', ','), ('color', 'color'), (',', ','), ('size', 'size'), ('marker', 'marker'), ('help', 'help'), ('marker', 'marker'), (',', ','), ('color', 'color'), ('parameter', 'paramet'), ('respectively', 'respect'), ('.', '.')]

>> Lemmatization: 
 [('Note', 'Note'), (':', ':'), ('specify', 'specify'), ('marker', 'marker'), (',', ','), ('color', 'color'), (',', ','), ('size', 'size'), ('marker', 'marker'), ('help', 'help'), ('marker', 'marker'), (',', ','), ('color', 'color'), ('parameter', 'parameter'), ('respectively', 'respectively'), ('.', '.')]



============================ Sentence 45 =============================

import matplotlib.pyplot as plt import pandas as pd %matplotlib inline df = pd.read_csv('insurance.csv') grouped = df.groupby(['smoker']) for key, group in grouped:    plt.scatter(group['bmi'],    group['charges'],     label='Smoke = '+key) plt.legend() plt.show() 1 2 3 4 5 6 7   8 9 histDemo.py     Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Time Series Observations over time can be considered as a Time Series. 


>> Tokens are: 
 ['import', 'matplotlib.pyplot', 'plt', 'import', 'pandas', 'pd', '%', 'matplotlib', 'inline', 'df', '=', 'pd.read_csv', '(', "'insurance.csv", "'", ')', 'grouped', '=', 'df.groupby', '(', '[', "'smoker", "'", ']', ')', 'key', ',', 'group', 'grouped', ':', 'plt.scatter', '(', 'group', '[', "'bmi", "'", ']', ',', 'group', '[', "'charges", "'", ']', ',', "label='Smoke", '=', "'+key", ')', 'plt.legend', '(', ')', 'plt.show', '(', ')', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'histDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Time', 'Series', 'Observations', 'time', 'considered', 'Time', 'Series', '.']

>> Bigrams are: 
 [('import', 'matplotlib.pyplot'), ('matplotlib.pyplot', 'plt'), ('plt', 'import'), ('import', 'pandas'), ('pandas', 'pd'), ('pd', '%'), ('%', 'matplotlib'), ('matplotlib', 'inline'), ('inline', 'df'), ('df', '='), ('=', 'pd.read_csv'), ('pd.read_csv', '('), ('(', "'insurance.csv"), ("'insurance.csv", "'"), ("'", ')'), (')', 'grouped'), ('grouped', '='), ('=', 'df.groupby'), ('df.groupby', '('), ('(', '['), ('[', "'smoker"), ("'smoker", "'"), ("'", ']'), (']', ')'), (')', 'key'), ('key', ','), (',', 'group'), ('group', 'grouped'), ('grouped', ':'), (':', 'plt.scatter'), ('plt.scatter', '('), ('(', 'group'), ('group', '['), ('[', "'bmi"), ("'bmi", "'"), ("'", ']'), (']', ','), (',', 'group'), ('group', '['), ('[', "'charges"), ("'charges", "'"), ("'", ']'), (']', ','), (',', "label='Smoke"), ("label='Smoke", '='), ('=', "'+key"), ("'+key", ')'), (')', 'plt.legend'), ('plt.legend', '('), ('(', ')'), (')', 'plt.show'), ('plt.show', '('), ('(', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', '9'), ('9', 'histDemo.py'), ('histDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Time'), ('Time', 'Series'), ('Series', 'Observations'), ('Observations', 'time'), ('time', 'considered'), ('considered', 'Time'), ('Time', 'Series'), ('Series', '.')]

>> Trigrams are: 
 [('import', 'matplotlib.pyplot', 'plt'), ('matplotlib.pyplot', 'plt', 'import'), ('plt', 'import', 'pandas'), ('import', 'pandas', 'pd'), ('pandas', 'pd', '%'), ('pd', '%', 'matplotlib'), ('%', 'matplotlib', 'inline'), ('matplotlib', 'inline', 'df'), ('inline', 'df', '='), ('df', '=', 'pd.read_csv'), ('=', 'pd.read_csv', '('), ('pd.read_csv', '(', "'insurance.csv"), ('(', "'insurance.csv", "'"), ("'insurance.csv", "'", ')'), ("'", ')', 'grouped'), (')', 'grouped', '='), ('grouped', '=', 'df.groupby'), ('=', 'df.groupby', '('), ('df.groupby', '(', '['), ('(', '[', "'smoker"), ('[', "'smoker", "'"), ("'smoker", "'", ']'), ("'", ']', ')'), (']', ')', 'key'), (')', 'key', ','), ('key', ',', 'group'), (',', 'group', 'grouped'), ('group', 'grouped', ':'), ('grouped', ':', 'plt.scatter'), (':', 'plt.scatter', '('), ('plt.scatter', '(', 'group'), ('(', 'group', '['), ('group', '[', "'bmi"), ('[', "'bmi", "'"), ("'bmi", "'", ']'), ("'", ']', ','), (']', ',', 'group'), (',', 'group', '['), ('group', '[', "'charges"), ('[', "'charges", "'"), ("'charges", "'", ']'), ("'", ']', ','), (']', ',', "label='Smoke"), (',', "label='Smoke", '='), ("label='Smoke", '=', "'+key"), ('=', "'+key", ')'), ("'+key", ')', 'plt.legend'), (')', 'plt.legend', '('), ('plt.legend', '(', ')'), ('(', ')', 'plt.show'), (')', 'plt.show', '('), ('plt.show', '(', ')'), ('(', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', '9'), ('8', '9', 'histDemo.py'), ('9', 'histDemo.py', 'Prof.'), ('histDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Time'), ('›', 'Time', 'Series'), ('Time', 'Series', 'Observations'), ('Series', 'Observations', 'time'), ('Observations', 'time', 'considered'), ('time', 'considered', 'Time'), ('considered', 'Time', 'Series'), ('Time', 'Series', '.')]

>> POS Tags are: 
 [('import', 'NN'), ('matplotlib.pyplot', 'NN'), ('plt', 'NN'), ('import', 'NN'), ('pandas', 'VBP'), ('pd', 'NN'), ('%', 'NN'), ('matplotlib', 'JJ'), ('inline', 'NN'), ('df', 'NN'), ('=', 'NNP'), ('pd.read_csv', 'NN'), ('(', '('), ("'insurance.csv", 'NNP'), ("'", 'POS'), (')', ')'), ('grouped', 'VBD'), ('=', 'JJ'), ('df.groupby', 'NN'), ('(', '('), ('[', 'JJ'), ("'smoker", 'NN'), ("'", "''"), (']', 'NN'), (')', ')'), ('key', 'NN'), (',', ','), ('group', 'NN'), ('grouped', 'VBD'), (':', ':'), ('plt.scatter', 'NN'), ('(', '('), ('group', 'NN'), ('[', 'NNP'), ("'bmi", 'NNP'), ("'", 'POS'), (']', 'NNP'), (',', ','), ('group', 'NN'), ('[', 'NNP'), ("'charges", 'VBZ'), ("'", 'POS'), (']', 'NN'), (',', ','), ("label='Smoke", 'VBD'), ('=', 'NNP'), ("'+key", 'NNP'), (')', ')'), ('plt.legend', 'VBP'), ('(', '('), (')', ')'), ('plt.show', 'NN'), ('(', '('), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('9', 'CD'), ('histDemo.py', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Time', 'NNP'), ('Series', 'NNP'), ('Observations', 'NNP'), ('time', 'NN'), ('considered', 'VBD'), ('Time', 'NNP'), ('Series', 'NNP'), ('.', '.')]

 (S
  (NP import/NN matplotlib.pyplot/NN plt/NN import/NN)
  pandas/VBP
  (NP pd/NN %/NN)
  (NP matplotlib/JJ inline/NN df/NN =/NNP pd.read_csv/NN)
  (/(
  (NP 'insurance.csv/NNP)
  '/POS
  )/)
  grouped/VBD
  (NP =/JJ df.groupby/NN)
  (/(
  (NP [/JJ 'smoker/NN)
  '/''
  (NP ]/NN)
  )/)
  (NP key/NN)
  ,/,
  (NP group/NN)
  grouped/VBD
  :/:
  (NP plt.scatter/NN)
  (/(
  (NP group/NN [/NNP 'bmi/NNP)
  '/POS
  (NP ]/NNP)
  ,/,
  (NP group/NN [/NNP)
  'charges/VBZ
  '/POS
  (NP ]/NN)
  ,/,
  label='Smoke/VBD
  (NP =/NNP '+key/NNP)
  )/)
  plt.legend/VBP
  (/(
  )/)
  (NP plt.show/NN)
  (/(
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  9/CD
  (NP histDemo.py/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/JJ Time/NNP Series/NNP Observations/NNP time/NN)
  considered/VBD
  (NP Time/NNP Series/NNP)
  ./.) 


>> Noun Phrases are: 
 ['import matplotlib.pyplot plt import', 'pd %', 'matplotlib inline df = pd.read_csv', "'insurance.csv", '= df.groupby', "[ 'smoker", ']', 'key', 'group', 'plt.scatter', "group [ 'bmi", ']', 'group [', ']', "= '+key", 'plt.show', 'histDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Time Series Observations time', 'Time Series']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Time Series')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('df', 'df'), ('=', '='), ('pd.read_csv', 'pd.read_csv'), ('(', '('), ("'insurance.csv", "'insurance.csv"), ("'", "'"), (')', ')'), ('grouped', 'group'), ('=', '='), ('df.groupby', 'df.groupbi'), ('(', '('), ('[', '['), ("'smoker", "'smoker"), ("'", "'"), (']', ']'), (')', ')'), ('key', 'key'), (',', ','), ('group', 'group'), ('grouped', 'group'), (':', ':'), ('plt.scatter', 'plt.scatter'), ('(', '('), ('group', 'group'), ('[', '['), ("'bmi", "'bmi"), ("'", "'"), (']', ']'), (',', ','), ('group', 'group'), ('[', '['), ("'charges", "'charg"), ("'", "'"), (']', ']'), (',', ','), ("label='Smoke", "label='smok"), ('=', '='), ("'+key", "'+key"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('histDemo.py', 'histdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Time', 'time'), ('Series', 'seri'), ('Observations', 'observ'), ('time', 'time'), ('considered', 'consid'), ('Time', 'time'), ('Series', 'seri'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inlin'), ('df', 'df'), ('=', '='), ('pd.read_csv', 'pd.read_csv'), ('(', '('), ("'insurance.csv", 'insurance.csv'), ("'", "'"), (')', ')'), ('grouped', 'group'), ('=', '='), ('df.groupby', 'df.groupbi'), ('(', '('), ('[', '['), ("'smoker", 'smoker'), ("'", "'"), (']', ']'), (')', ')'), ('key', 'key'), (',', ','), ('group', 'group'), ('grouped', 'group'), (':', ':'), ('plt.scatter', 'plt.scatter'), ('(', '('), ('group', 'group'), ('[', '['), ("'bmi", 'bmi'), ("'", "'"), (']', ']'), (',', ','), ('group', 'group'), ('[', '['), ("'charges", 'charg'), ("'", "'"), (']', ']'), (',', ','), ("label='Smoke", "label='smok"), ('=', '='), ("'+key", '+key'), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('histDemo.py', 'histdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Time', 'time'), ('Series', 'seri'), ('Observations', 'observ'), ('time', 'time'), ('considered', 'consid'), ('Time', 'time'), ('Series', 'seri'), ('.', '.')]

>> Lemmatization: 
 [('import', 'import'), ('matplotlib.pyplot', 'matplotlib.pyplot'), ('plt', 'plt'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('%', '%'), ('matplotlib', 'matplotlib'), ('inline', 'inline'), ('df', 'df'), ('=', '='), ('pd.read_csv', 'pd.read_csv'), ('(', '('), ("'insurance.csv", "'insurance.csv"), ("'", "'"), (')', ')'), ('grouped', 'grouped'), ('=', '='), ('df.groupby', 'df.groupby'), ('(', '('), ('[', '['), ("'smoker", "'smoker"), ("'", "'"), (']', ']'), (')', ')'), ('key', 'key'), (',', ','), ('group', 'group'), ('grouped', 'grouped'), (':', ':'), ('plt.scatter', 'plt.scatter'), ('(', '('), ('group', 'group'), ('[', '['), ("'bmi", "'bmi"), ("'", "'"), (']', ']'), (',', ','), ('group', 'group'), ('[', '['), ("'charges", "'charges"), ("'", "'"), (']', ']'), (',', ','), ("label='Smoke", "label='Smoke"), ('=', '='), ("'+key", "'+key"), (')', ')'), ('plt.legend', 'plt.legend'), ('(', '('), (')', ')'), ('plt.show', 'plt.show'), ('(', '('), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('histDemo.py', 'histDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Time', 'Time'), ('Series', 'Series'), ('Observations', 'Observations'), ('time', 'time'), ('considered', 'considered'), ('Time', 'Time'), ('Series', 'Series'), ('.', '.')]



============================ Sentence 46 =============================

Visualization plays an important role in time series analysis and forecasting. 


>> Tokens are: 
 ['Visualization', 'plays', 'important', 'role', 'time', 'series', 'analysis', 'forecasting', '.']

>> Bigrams are: 
 [('Visualization', 'plays'), ('plays', 'important'), ('important', 'role'), ('role', 'time'), ('time', 'series'), ('series', 'analysis'), ('analysis', 'forecasting'), ('forecasting', '.')]

>> Trigrams are: 
 [('Visualization', 'plays', 'important'), ('plays', 'important', 'role'), ('important', 'role', 'time'), ('role', 'time', 'series'), ('time', 'series', 'analysis'), ('series', 'analysis', 'forecasting'), ('analysis', 'forecasting', '.')]

>> POS Tags are: 
 [('Visualization', 'NNP'), ('plays', 'VBZ'), ('important', 'JJ'), ('role', 'NN'), ('time', 'NN'), ('series', 'NN'), ('analysis', 'NN'), ('forecasting', 'NN'), ('.', '.')]

 (S
  (NP Visualization/NNP)
  plays/VBZ
  (NP
    important/JJ
    role/NN
    time/NN
    series/NN
    analysis/NN
    forecasting/NN)
  ./.) 


>> Noun Phrases are: 
 ['Visualization', 'important role time series analysis forecasting']

>> Named Entities are: 
 [('GPE', 'Visualization')] 

>> Stemming using Porter Stemmer: 
 [('Visualization', 'visual'), ('plays', 'play'), ('important', 'import'), ('role', 'role'), ('time', 'time'), ('series', 'seri'), ('analysis', 'analysi'), ('forecasting', 'forecast'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Visualization', 'visual'), ('plays', 'play'), ('important', 'import'), ('role', 'role'), ('time', 'time'), ('series', 'seri'), ('analysis', 'analysi'), ('forecasting', 'forecast'), ('.', '.')]

>> Lemmatization: 
 [('Visualization', 'Visualization'), ('plays', 'play'), ('important', 'important'), ('role', 'role'), ('time', 'time'), ('series', 'series'), ('analysis', 'analysis'), ('forecasting', 'forecasting'), ('.', '.')]



============================ Sentence 47 =============================

Time Series plots can provide valuable diagnostics to identify temporal structures like trends, cycles, and seasonality. 


>> Tokens are: 
 ['Time', 'Series', 'plots', 'provide', 'valuable', 'diagnostics', 'identify', 'temporal', 'structures', 'like', 'trends', ',', 'cycles', ',', 'seasonality', '.']

>> Bigrams are: 
 [('Time', 'Series'), ('Series', 'plots'), ('plots', 'provide'), ('provide', 'valuable'), ('valuable', 'diagnostics'), ('diagnostics', 'identify'), ('identify', 'temporal'), ('temporal', 'structures'), ('structures', 'like'), ('like', 'trends'), ('trends', ','), (',', 'cycles'), ('cycles', ','), (',', 'seasonality'), ('seasonality', '.')]

>> Trigrams are: 
 [('Time', 'Series', 'plots'), ('Series', 'plots', 'provide'), ('plots', 'provide', 'valuable'), ('provide', 'valuable', 'diagnostics'), ('valuable', 'diagnostics', 'identify'), ('diagnostics', 'identify', 'temporal'), ('identify', 'temporal', 'structures'), ('temporal', 'structures', 'like'), ('structures', 'like', 'trends'), ('like', 'trends', ','), ('trends', ',', 'cycles'), (',', 'cycles', ','), ('cycles', ',', 'seasonality'), (',', 'seasonality', '.')]

>> POS Tags are: 
 [('Time', 'NNP'), ('Series', 'NNP'), ('plots', 'NNS'), ('provide', 'VBP'), ('valuable', 'JJ'), ('diagnostics', 'NNS'), ('identify', 'JJ'), ('temporal', 'JJ'), ('structures', 'NNS'), ('like', 'IN'), ('trends', 'NNS'), (',', ','), ('cycles', 'NNS'), (',', ','), ('seasonality', 'NN'), ('.', '.')]

 (S
  (NP Time/NNP Series/NNP plots/NNS)
  provide/VBP
  (NP valuable/JJ diagnostics/NNS)
  (NP identify/JJ temporal/JJ structures/NNS)
  like/IN
  (NP trends/NNS)
  ,/,
  (NP cycles/NNS)
  ,/,
  (NP seasonality/NN)
  ./.) 


>> Noun Phrases are: 
 ['Time Series plots', 'valuable diagnostics', 'identify temporal structures', 'trends', 'cycles', 'seasonality']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Time', 'time'), ('Series', 'seri'), ('plots', 'plot'), ('provide', 'provid'), ('valuable', 'valuabl'), ('diagnostics', 'diagnost'), ('identify', 'identifi'), ('temporal', 'tempor'), ('structures', 'structur'), ('like', 'like'), ('trends', 'trend'), (',', ','), ('cycles', 'cycl'), (',', ','), ('seasonality', 'season'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Time', 'time'), ('Series', 'seri'), ('plots', 'plot'), ('provide', 'provid'), ('valuable', 'valuabl'), ('diagnostics', 'diagnost'), ('identify', 'identifi'), ('temporal', 'tempor'), ('structures', 'structur'), ('like', 'like'), ('trends', 'trend'), (',', ','), ('cycles', 'cycl'), (',', ','), ('seasonality', 'season'), ('.', '.')]

>> Lemmatization: 
 [('Time', 'Time'), ('Series', 'Series'), ('plots', 'plot'), ('provide', 'provide'), ('valuable', 'valuable'), ('diagnostics', 'diagnostics'), ('identify', 'identify'), ('temporal', 'temporal'), ('structures', 'structure'), ('like', 'like'), ('trends', 'trend'), (',', ','), ('cycles', 'cycle'), (',', ','), ('seasonality', 'seasonality'), ('.', '.')]



============================ Sentence 48 =============================

In order to create a Time Series we first need to get the date range, which can be created with the help of datetime and pandas library. 


>> Tokens are: 
 ['In', 'order', 'create', 'Time', 'Series', 'first', 'need', 'get', 'date', 'range', ',', 'created', 'help', 'datetime', 'pandas', 'library', '.']

>> Bigrams are: 
 [('In', 'order'), ('order', 'create'), ('create', 'Time'), ('Time', 'Series'), ('Series', 'first'), ('first', 'need'), ('need', 'get'), ('get', 'date'), ('date', 'range'), ('range', ','), (',', 'created'), ('created', 'help'), ('help', 'datetime'), ('datetime', 'pandas'), ('pandas', 'library'), ('library', '.')]

>> Trigrams are: 
 [('In', 'order', 'create'), ('order', 'create', 'Time'), ('create', 'Time', 'Series'), ('Time', 'Series', 'first'), ('Series', 'first', 'need'), ('first', 'need', 'get'), ('need', 'get', 'date'), ('get', 'date', 'range'), ('date', 'range', ','), ('range', ',', 'created'), (',', 'created', 'help'), ('created', 'help', 'datetime'), ('help', 'datetime', 'pandas'), ('datetime', 'pandas', 'library'), ('pandas', 'library', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('order', 'NN'), ('create', 'NN'), ('Time', 'NNP'), ('Series', 'NNP'), ('first', 'RB'), ('need', 'VBP'), ('get', 'VB'), ('date', 'NN'), ('range', 'NN'), (',', ','), ('created', 'VBD'), ('help', 'NN'), ('datetime', 'NN'), ('pandas', 'JJ'), ('library', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP order/NN create/NN Time/NNP Series/NNP)
  first/RB
  need/VBP
  get/VB
  (NP date/NN range/NN)
  ,/,
  created/VBD
  (NP help/NN datetime/NN)
  (NP pandas/JJ library/NN)
  ./.) 


>> Noun Phrases are: 
 ['order create Time Series', 'date range', 'help datetime', 'pandas library']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('order', 'order'), ('create', 'creat'), ('Time', 'time'), ('Series', 'seri'), ('first', 'first'), ('need', 'need'), ('get', 'get'), ('date', 'date'), ('range', 'rang'), (',', ','), ('created', 'creat'), ('help', 'help'), ('datetime', 'datetim'), ('pandas', 'panda'), ('library', 'librari'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('order', 'order'), ('create', 'creat'), ('Time', 'time'), ('Series', 'seri'), ('first', 'first'), ('need', 'need'), ('get', 'get'), ('date', 'date'), ('range', 'rang'), (',', ','), ('created', 'creat'), ('help', 'help'), ('datetime', 'datetim'), ('pandas', 'panda'), ('library', 'librari'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('order', 'order'), ('create', 'create'), ('Time', 'Time'), ('Series', 'Series'), ('first', 'first'), ('need', 'need'), ('get', 'get'), ('date', 'date'), ('range', 'range'), (',', ','), ('created', 'created'), ('help', 'help'), ('datetime', 'datetime'), ('pandas', 'panda'), ('library', 'library'), ('.', '.')]



============================ Sentence 49 =============================

import pandas as pd import datetime as dt start_date = dt.datetime(2020,8,28) end_date = dt.datetime(2020,9,05) daterange = pd.date_range(start_date,end_date) print(daterange) 1 2 3 4 5 6 timeDemo.py DatetimeIndex(['2020-08-28', '2020-08-29', '2020-08-30', '2020-08-31', '2020-09-01', '2020-09-02', '2020-09-03', '2020-09-04', '2020-09-05'], dtype='datetime64[ns]', freq='D') OUTPUT    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Time Series (Cont.) 


>> Tokens are: 
 ['import', 'pandas', 'pd', 'import', 'datetime', 'dt', 'start_date', '=', 'dt.datetime', '(', '2020,8,28', ')', 'end_date', '=', 'dt.datetime', '(', '2020,9,05', ')', 'daterange', '=', 'pd.date_range', '(', 'start_date', ',', 'end_date', ')', 'print', '(', 'daterange', ')', '1', '2', '3', '4', '5', '6', 'timeDemo.py', 'DatetimeIndex', '(', '[', "'2020-08-28", "'", ',', "'2020-08-29", "'", ',', "'2020-08-30", "'", ',', "'2020-08-31", "'", ',', "'2020-09-01", "'", ',', "'2020-09-02", "'", ',', "'2020-09-03", "'", ',', "'2020-09-04", "'", ',', "'2020-09-05", "'", ']', ',', "dtype='datetime64", '[', 'ns', ']', "'", ',', "freq='D", "'", ')', 'OUTPUT', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Time', 'Series', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('import', 'pandas'), ('pandas', 'pd'), ('pd', 'import'), ('import', 'datetime'), ('datetime', 'dt'), ('dt', 'start_date'), ('start_date', '='), ('=', 'dt.datetime'), ('dt.datetime', '('), ('(', '2020,8,28'), ('2020,8,28', ')'), (')', 'end_date'), ('end_date', '='), ('=', 'dt.datetime'), ('dt.datetime', '('), ('(', '2020,9,05'), ('2020,9,05', ')'), (')', 'daterange'), ('daterange', '='), ('=', 'pd.date_range'), ('pd.date_range', '('), ('(', 'start_date'), ('start_date', ','), (',', 'end_date'), ('end_date', ')'), (')', 'print'), ('print', '('), ('(', 'daterange'), ('daterange', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', 'timeDemo.py'), ('timeDemo.py', 'DatetimeIndex'), ('DatetimeIndex', '('), ('(', '['), ('[', "'2020-08-28"), ("'2020-08-28", "'"), ("'", ','), (',', "'2020-08-29"), ("'2020-08-29", "'"), ("'", ','), (',', "'2020-08-30"), ("'2020-08-30", "'"), ("'", ','), (',', "'2020-08-31"), ("'2020-08-31", "'"), ("'", ','), (',', "'2020-09-01"), ("'2020-09-01", "'"), ("'", ','), (',', "'2020-09-02"), ("'2020-09-02", "'"), ("'", ','), (',', "'2020-09-03"), ("'2020-09-03", "'"), ("'", ','), (',', "'2020-09-04"), ("'2020-09-04", "'"), ("'", ','), (',', "'2020-09-05"), ("'2020-09-05", "'"), ("'", ']'), (']', ','), (',', "dtype='datetime64"), ("dtype='datetime64", '['), ('[', 'ns'), ('ns', ']'), (']', "'"), ("'", ','), (',', "freq='D"), ("freq='D", "'"), ("'", ')'), (')', 'OUTPUT'), ('OUTPUT', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Time'), ('Time', 'Series'), ('Series', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('import', 'pandas', 'pd'), ('pandas', 'pd', 'import'), ('pd', 'import', 'datetime'), ('import', 'datetime', 'dt'), ('datetime', 'dt', 'start_date'), ('dt', 'start_date', '='), ('start_date', '=', 'dt.datetime'), ('=', 'dt.datetime', '('), ('dt.datetime', '(', '2020,8,28'), ('(', '2020,8,28', ')'), ('2020,8,28', ')', 'end_date'), (')', 'end_date', '='), ('end_date', '=', 'dt.datetime'), ('=', 'dt.datetime', '('), ('dt.datetime', '(', '2020,9,05'), ('(', '2020,9,05', ')'), ('2020,9,05', ')', 'daterange'), (')', 'daterange', '='), ('daterange', '=', 'pd.date_range'), ('=', 'pd.date_range', '('), ('pd.date_range', '(', 'start_date'), ('(', 'start_date', ','), ('start_date', ',', 'end_date'), (',', 'end_date', ')'), ('end_date', ')', 'print'), (')', 'print', '('), ('print', '(', 'daterange'), ('(', 'daterange', ')'), ('daterange', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', 'timeDemo.py'), ('6', 'timeDemo.py', 'DatetimeIndex'), ('timeDemo.py', 'DatetimeIndex', '('), ('DatetimeIndex', '(', '['), ('(', '[', "'2020-08-28"), ('[', "'2020-08-28", "'"), ("'2020-08-28", "'", ','), ("'", ',', "'2020-08-29"), (',', "'2020-08-29", "'"), ("'2020-08-29", "'", ','), ("'", ',', "'2020-08-30"), (',', "'2020-08-30", "'"), ("'2020-08-30", "'", ','), ("'", ',', "'2020-08-31"), (',', "'2020-08-31", "'"), ("'2020-08-31", "'", ','), ("'", ',', "'2020-09-01"), (',', "'2020-09-01", "'"), ("'2020-09-01", "'", ','), ("'", ',', "'2020-09-02"), (',', "'2020-09-02", "'"), ("'2020-09-02", "'", ','), ("'", ',', "'2020-09-03"), (',', "'2020-09-03", "'"), ("'2020-09-03", "'", ','), ("'", ',', "'2020-09-04"), (',', "'2020-09-04", "'"), ("'2020-09-04", "'", ','), ("'", ',', "'2020-09-05"), (',', "'2020-09-05", "'"), ("'2020-09-05", "'", ']'), ("'", ']', ','), (']', ',', "dtype='datetime64"), (',', "dtype='datetime64", '['), ("dtype='datetime64", '[', 'ns'), ('[', 'ns', ']'), ('ns', ']', "'"), (']', "'", ','), ("'", ',', "freq='D"), (',', "freq='D", "'"), ("freq='D", "'", ')'), ("'", ')', 'OUTPUT'), (')', 'OUTPUT', 'Prof.'), ('OUTPUT', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Time'), ('›', 'Time', 'Series'), ('Time', 'Series', '('), ('Series', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('import', 'NN'), ('pandas', 'NNS'), ('pd', 'VBP'), ('import', 'NN'), ('datetime', 'NN'), ('dt', 'NN'), ('start_date', 'NN'), ('=', 'NN'), ('dt.datetime', 'NN'), ('(', '('), ('2020,8,28', 'CD'), (')', ')'), ('end_date', 'NN'), ('=', 'NN'), ('dt.datetime', 'NN'), ('(', '('), ('2020,9,05', 'CD'), (')', ')'), ('daterange', 'NN'), ('=', 'JJ'), ('pd.date_range', 'NN'), ('(', '('), ('start_date', 'NN'), (',', ','), ('end_date', 'NN'), (')', ')'), ('print', 'NN'), ('(', '('), ('daterange', 'NN'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('timeDemo.py', 'NN'), ('DatetimeIndex', 'NNP'), ('(', '('), ('[', 'JJ'), ("'2020-08-28", 'NN'), ("'", "''"), (',', ','), ("'2020-08-29", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-30", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-31", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-01", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-02", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-03", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-04", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-05", 'JJ'), ("'", "''"), (']', 'NN'), (',', ','), ("dtype='datetime64", 'NN'), ('[', 'NNP'), ('ns', 'RB'), (']', 'NNP'), ("'", 'POS'), (',', ','), ("freq='D", 'NNS'), ("'", 'POS'), (')', ')'), ('OUTPUT', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Time', 'NNP'), ('Series', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  (NP import/NN pandas/NNS)
  pd/VBP
  (NP import/NN datetime/NN dt/NN start_date/NN =/NN dt.datetime/NN)
  (/(
  2020,8,28/CD
  )/)
  (NP end_date/NN =/NN dt.datetime/NN)
  (/(
  2020,9,05/CD
  )/)
  (NP daterange/NN)
  (NP =/JJ pd.date_range/NN)
  (/(
  (NP start_date/NN)
  ,/,
  (NP end_date/NN)
  )/)
  (NP print/NN)
  (/(
  (NP daterange/NN)
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  (NP timeDemo.py/NN DatetimeIndex/NNP)
  (/(
  (NP [/JJ '2020-08-28/NN)
  '/''
  ,/,
  '2020-08-29/JJ
  '/''
  ,/,
  '2020-08-30/JJ
  '/''
  ,/,
  '2020-08-31/JJ
  '/''
  ,/,
  '2020-09-01/JJ
  '/''
  ,/,
  '2020-09-02/JJ
  '/''
  ,/,
  '2020-09-03/JJ
  '/''
  ,/,
  '2020-09-04/JJ
  '/''
  ,/,
  '2020-09-05/JJ
  '/''
  (NP ]/NN)
  ,/,
  (NP dtype='datetime64/NN [/NNP)
  ns/RB
  (NP ]/NNP)
  '/POS
  ,/,
  (NP freq='D/NNS)
  '/POS
  )/)
  (NP OUTPUT/NNP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/JJ Time/NNP Series/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['import pandas', 'import datetime dt start_date = dt.datetime', 'end_date = dt.datetime', 'daterange', '= pd.date_range', 'start_date', 'end_date', 'print', 'daterange', 'timeDemo.py DatetimeIndex', "[ '2020-08-28", ']', "dtype='datetime64 [", ']', "freq='D", 'OUTPUT Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Time Series', 'Cont']

>> Named Entities are: 
 [('ORGANIZATION', 'DatetimeIndex'), ('ORGANIZATION', 'OUTPUT'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('datetime', 'datetim'), ('dt', 'dt'), ('start_date', 'start_dat'), ('=', '='), ('dt.datetime', 'dt.datetim'), ('(', '('), ('2020,8,28', '2020,8,28'), (')', ')'), ('end_date', 'end_dat'), ('=', '='), ('dt.datetime', 'dt.datetim'), ('(', '('), ('2020,9,05', '2020,9,05'), (')', ')'), ('daterange', 'daterang'), ('=', '='), ('pd.date_range', 'pd.date_rang'), ('(', '('), ('start_date', 'start_dat'), (',', ','), ('end_date', 'end_dat'), (')', ')'), ('print', 'print'), ('(', '('), ('daterange', 'daterang'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('timeDemo.py', 'timedemo.pi'), ('DatetimeIndex', 'datetimeindex'), ('(', '('), ('[', '['), ("'2020-08-28", "'2020-08-28"), ("'", "'"), (',', ','), ("'2020-08-29", "'2020-08-29"), ("'", "'"), (',', ','), ("'2020-08-30", "'2020-08-30"), ("'", "'"), (',', ','), ("'2020-08-31", "'2020-08-31"), ("'", "'"), (',', ','), ("'2020-09-01", "'2020-09-01"), ("'", "'"), (',', ','), ("'2020-09-02", "'2020-09-02"), ("'", "'"), (',', ','), ("'2020-09-03", "'2020-09-03"), ("'", "'"), (',', ','), ("'2020-09-04", "'2020-09-04"), ("'", "'"), (',', ','), ("'2020-09-05", "'2020-09-05"), ("'", "'"), (']', ']'), (',', ','), ("dtype='datetime64", "dtype='datetime64"), ('[', '['), ('ns', 'ns'), (']', ']'), ("'", "'"), (',', ','), ("freq='D", "freq='d"), ("'", "'"), (')', ')'), ('OUTPUT', 'output'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Time', 'time'), ('Series', 'seri'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('datetime', 'datetim'), ('dt', 'dt'), ('start_date', 'start_dat'), ('=', '='), ('dt.datetime', 'dt.datetim'), ('(', '('), ('2020,8,28', '2020,8,28'), (')', ')'), ('end_date', 'end_dat'), ('=', '='), ('dt.datetime', 'dt.datetim'), ('(', '('), ('2020,9,05', '2020,9,05'), (')', ')'), ('daterange', 'daterang'), ('=', '='), ('pd.date_range', 'pd.date_rang'), ('(', '('), ('start_date', 'start_dat'), (',', ','), ('end_date', 'end_dat'), (')', ')'), ('print', 'print'), ('(', '('), ('daterange', 'daterang'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('timeDemo.py', 'timedemo.pi'), ('DatetimeIndex', 'datetimeindex'), ('(', '('), ('[', '['), ("'2020-08-28", '2020-08-28'), ("'", "'"), (',', ','), ("'2020-08-29", '2020-08-29'), ("'", "'"), (',', ','), ("'2020-08-30", '2020-08-30'), ("'", "'"), (',', ','), ("'2020-08-31", '2020-08-31'), ("'", "'"), (',', ','), ("'2020-09-01", '2020-09-01'), ("'", "'"), (',', ','), ("'2020-09-02", '2020-09-02'), ("'", "'"), (',', ','), ("'2020-09-03", '2020-09-03'), ("'", "'"), (',', ','), ("'2020-09-04", '2020-09-04'), ("'", "'"), (',', ','), ("'2020-09-05", '2020-09-05'), ("'", "'"), (']', ']'), (',', ','), ("dtype='datetime64", "dtype='datetime64"), ('[', '['), ('ns', 'ns'), (']', ']'), ("'", "'"), (',', ','), ("freq='D", "freq='d"), ("'", "'"), (')', ')'), ('OUTPUT', 'output'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Time', 'time'), ('Series', 'seri'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('datetime', 'datetime'), ('dt', 'dt'), ('start_date', 'start_date'), ('=', '='), ('dt.datetime', 'dt.datetime'), ('(', '('), ('2020,8,28', '2020,8,28'), (')', ')'), ('end_date', 'end_date'), ('=', '='), ('dt.datetime', 'dt.datetime'), ('(', '('), ('2020,9,05', '2020,9,05'), (')', ')'), ('daterange', 'daterange'), ('=', '='), ('pd.date_range', 'pd.date_range'), ('(', '('), ('start_date', 'start_date'), (',', ','), ('end_date', 'end_date'), (')', ')'), ('print', 'print'), ('(', '('), ('daterange', 'daterange'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('timeDemo.py', 'timeDemo.py'), ('DatetimeIndex', 'DatetimeIndex'), ('(', '('), ('[', '['), ("'2020-08-28", "'2020-08-28"), ("'", "'"), (',', ','), ("'2020-08-29", "'2020-08-29"), ("'", "'"), (',', ','), ("'2020-08-30", "'2020-08-30"), ("'", "'"), (',', ','), ("'2020-08-31", "'2020-08-31"), ("'", "'"), (',', ','), ("'2020-09-01", "'2020-09-01"), ("'", "'"), (',', ','), ("'2020-09-02", "'2020-09-02"), ("'", "'"), (',', ','), ("'2020-09-03", "'2020-09-03"), ("'", "'"), (',', ','), ("'2020-09-04", "'2020-09-04"), ("'", "'"), (',', ','), ("'2020-09-05", "'2020-09-05"), ("'", "'"), (']', ']'), (',', ','), ("dtype='datetime64", "dtype='datetime64"), ('[', '['), ('ns', 'n'), (']', ']'), ("'", "'"), (',', ','), ("freq='D", "freq='D"), ("'", "'"), (')', ')'), ('OUTPUT', 'OUTPUT'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Time', 'Time'), ('Series', 'Series'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 50 =============================

We can use some more parameters for date_range() function like freq, to specify the frequency at which we want the date range (default is ‘D’ for days) periods, number of periods to generate in between start/end or from start with freq. 


>> Tokens are: 
 ['We', 'use', 'parameters', 'date_range', '(', ')', 'function', 'like', 'freq', ',', 'specify', 'frequency', 'want', 'date', 'range', '(', 'default', '‘', 'D', '’', 'days', ')', 'periods', ',', 'number', 'periods', 'generate', 'start/end', 'start', 'freq', '.']

>> Bigrams are: 
 [('We', 'use'), ('use', 'parameters'), ('parameters', 'date_range'), ('date_range', '('), ('(', ')'), (')', 'function'), ('function', 'like'), ('like', 'freq'), ('freq', ','), (',', 'specify'), ('specify', 'frequency'), ('frequency', 'want'), ('want', 'date'), ('date', 'range'), ('range', '('), ('(', 'default'), ('default', '‘'), ('‘', 'D'), ('D', '’'), ('’', 'days'), ('days', ')'), (')', 'periods'), ('periods', ','), (',', 'number'), ('number', 'periods'), ('periods', 'generate'), ('generate', 'start/end'), ('start/end', 'start'), ('start', 'freq'), ('freq', '.')]

>> Trigrams are: 
 [('We', 'use', 'parameters'), ('use', 'parameters', 'date_range'), ('parameters', 'date_range', '('), ('date_range', '(', ')'), ('(', ')', 'function'), (')', 'function', 'like'), ('function', 'like', 'freq'), ('like', 'freq', ','), ('freq', ',', 'specify'), (',', 'specify', 'frequency'), ('specify', 'frequency', 'want'), ('frequency', 'want', 'date'), ('want', 'date', 'range'), ('date', 'range', '('), ('range', '(', 'default'), ('(', 'default', '‘'), ('default', '‘', 'D'), ('‘', 'D', '’'), ('D', '’', 'days'), ('’', 'days', ')'), ('days', ')', 'periods'), (')', 'periods', ','), ('periods', ',', 'number'), (',', 'number', 'periods'), ('number', 'periods', 'generate'), ('periods', 'generate', 'start/end'), ('generate', 'start/end', 'start'), ('start/end', 'start', 'freq'), ('start', 'freq', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('use', 'VBP'), ('parameters', 'NNS'), ('date_range', 'VBP'), ('(', '('), (')', ')'), ('function', 'NN'), ('like', 'IN'), ('freq', 'NN'), (',', ','), ('specify', 'JJ'), ('frequency', 'NN'), ('want', 'VBP'), ('date', 'NN'), ('range', 'NN'), ('(', '('), ('default', 'NN'), ('‘', 'NNP'), ('D', 'NNP'), ('’', 'NNP'), ('days', 'NNS'), (')', ')'), ('periods', 'NNS'), (',', ','), ('number', 'NN'), ('periods', 'NNS'), ('generate', 'VBP'), ('start/end', 'JJ'), ('start', 'NN'), ('freq', 'NN'), ('.', '.')]

 (S
  We/PRP
  use/VBP
  (NP parameters/NNS)
  date_range/VBP
  (/(
  )/)
  (NP function/NN)
  like/IN
  (NP freq/NN)
  ,/,
  (NP specify/JJ frequency/NN)
  want/VBP
  (NP date/NN range/NN)
  (/(
  (NP default/NN ‘/NNP D/NNP ’/NNP days/NNS)
  )/)
  (NP periods/NNS)
  ,/,
  (NP number/NN periods/NNS)
  generate/VBP
  (NP start/end/JJ start/NN freq/NN)
  ./.) 


>> Noun Phrases are: 
 ['parameters', 'function', 'freq', 'specify frequency', 'date range', 'default ‘ D ’ days', 'periods', 'number periods', 'start/end start freq']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('use', 'use'), ('parameters', 'paramet'), ('date_range', 'date_rang'), ('(', '('), (')', ')'), ('function', 'function'), ('like', 'like'), ('freq', 'freq'), (',', ','), ('specify', 'specifi'), ('frequency', 'frequenc'), ('want', 'want'), ('date', 'date'), ('range', 'rang'), ('(', '('), ('default', 'default'), ('‘', '‘'), ('D', 'd'), ('’', '’'), ('days', 'day'), (')', ')'), ('periods', 'period'), (',', ','), ('number', 'number'), ('periods', 'period'), ('generate', 'gener'), ('start/end', 'start/end'), ('start', 'start'), ('freq', 'freq'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('use', 'use'), ('parameters', 'paramet'), ('date_range', 'date_rang'), ('(', '('), (')', ')'), ('function', 'function'), ('like', 'like'), ('freq', 'freq'), (',', ','), ('specify', 'specifi'), ('frequency', 'frequenc'), ('want', 'want'), ('date', 'date'), ('range', 'rang'), ('(', '('), ('default', 'default'), ('‘', '‘'), ('D', 'd'), ('’', '’'), ('days', 'day'), (')', ')'), ('periods', 'period'), (',', ','), ('number', 'number'), ('periods', 'period'), ('generate', 'generat'), ('start/end', 'start/end'), ('start', 'start'), ('freq', 'freq'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('use', 'use'), ('parameters', 'parameter'), ('date_range', 'date_range'), ('(', '('), (')', ')'), ('function', 'function'), ('like', 'like'), ('freq', 'freq'), (',', ','), ('specify', 'specify'), ('frequency', 'frequency'), ('want', 'want'), ('date', 'date'), ('range', 'range'), ('(', '('), ('default', 'default'), ('‘', '‘'), ('D', 'D'), ('’', '’'), ('days', 'day'), (')', ')'), ('periods', 'period'), (',', ','), ('number', 'number'), ('periods', 'period'), ('generate', 'generate'), ('start/end', 'start/end'), ('start', 'start'), ('freq', 'freq'), ('.', '.')]



============================ Sentence 51 =============================

We can also create a date range with the help of startdate, periods and freq, for example      Some of important possible values for the freq are  D, for calendar day W, for week M, for month Y, for year import pandas as pd import datetime as dt start_date = dt.datetime(2020,8,28) daterange = pd.date_range(start_date,freq='D',periods=10) print(daterange) 1 2 3 4 5 6 timeDemo.py DatetimeIndex(['2020-08-25', '2020-08-26', '2020-08-27', '2020-08-28', '2020-08-29', '2020-08-30', '2020-08-31', '2020-09-01', '2020-09-02', '2020-09-03'], dtype='datetime64[ns]', freq='D') OUTPUT H, for hour T/min, for minute S, for seconds L, for milliseconds B, for business day SM, for semi month end Q, for quarter end  BQ, for business quarter end    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  Basemap The matplotlib basemap toolkit is a library for plotting 2D data on maps in Python. 


>> Tokens are: 
 ['We', 'also', 'create', 'date', 'range', 'help', 'startdate', ',', 'periods', 'freq', ',', 'example', 'Some', 'important', 'possible', 'values', 'freq', 'D', ',', 'calendar', 'day', 'W', ',', 'week', 'M', ',', 'month', 'Y', ',', 'year', 'import', 'pandas', 'pd', 'import', 'datetime', 'dt', 'start_date', '=', 'dt.datetime', '(', '2020,8,28', ')', 'daterange', '=', 'pd.date_range', '(', 'start_date', ',', 'freq=', "'D", "'", ',', 'periods=10', ')', 'print', '(', 'daterange', ')', '1', '2', '3', '4', '5', '6', 'timeDemo.py', 'DatetimeIndex', '(', '[', "'2020-08-25", "'", ',', "'2020-08-26", "'", ',', "'2020-08-27", "'", ',', "'2020-08-28", "'", ',', "'2020-08-29", "'", ',', "'2020-08-30", "'", ',', "'2020-08-31", "'", ',', "'2020-09-01", "'", ',', "'2020-09-02", "'", ',', "'2020-09-03", "'", ']', ',', "dtype='datetime64", '[', 'ns', ']', "'", ',', "freq='D", "'", ')', 'OUTPUT', 'H', ',', 'hour', 'T/min', ',', 'minute', 'S', ',', 'seconds', 'L', ',', 'milliseconds', 'B', ',', 'business', 'day', 'SM', ',', 'semi', 'month', 'end', 'Q', ',', 'quarter', 'end', 'BQ', ',', 'business', 'quarter', 'end', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'Basemap', 'The', 'matplotlib', 'basemap', 'toolkit', 'library', 'plotting', '2D', 'data', 'maps', 'Python', '.']

>> Bigrams are: 
 [('We', 'also'), ('also', 'create'), ('create', 'date'), ('date', 'range'), ('range', 'help'), ('help', 'startdate'), ('startdate', ','), (',', 'periods'), ('periods', 'freq'), ('freq', ','), (',', 'example'), ('example', 'Some'), ('Some', 'important'), ('important', 'possible'), ('possible', 'values'), ('values', 'freq'), ('freq', 'D'), ('D', ','), (',', 'calendar'), ('calendar', 'day'), ('day', 'W'), ('W', ','), (',', 'week'), ('week', 'M'), ('M', ','), (',', 'month'), ('month', 'Y'), ('Y', ','), (',', 'year'), ('year', 'import'), ('import', 'pandas'), ('pandas', 'pd'), ('pd', 'import'), ('import', 'datetime'), ('datetime', 'dt'), ('dt', 'start_date'), ('start_date', '='), ('=', 'dt.datetime'), ('dt.datetime', '('), ('(', '2020,8,28'), ('2020,8,28', ')'), (')', 'daterange'), ('daterange', '='), ('=', 'pd.date_range'), ('pd.date_range', '('), ('(', 'start_date'), ('start_date', ','), (',', 'freq='), ('freq=', "'D"), ("'D", "'"), ("'", ','), (',', 'periods=10'), ('periods=10', ')'), (')', 'print'), ('print', '('), ('(', 'daterange'), ('daterange', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', 'timeDemo.py'), ('timeDemo.py', 'DatetimeIndex'), ('DatetimeIndex', '('), ('(', '['), ('[', "'2020-08-25"), ("'2020-08-25", "'"), ("'", ','), (',', "'2020-08-26"), ("'2020-08-26", "'"), ("'", ','), (',', "'2020-08-27"), ("'2020-08-27", "'"), ("'", ','), (',', "'2020-08-28"), ("'2020-08-28", "'"), ("'", ','), (',', "'2020-08-29"), ("'2020-08-29", "'"), ("'", ','), (',', "'2020-08-30"), ("'2020-08-30", "'"), ("'", ','), (',', "'2020-08-31"), ("'2020-08-31", "'"), ("'", ','), (',', "'2020-09-01"), ("'2020-09-01", "'"), ("'", ','), (',', "'2020-09-02"), ("'2020-09-02", "'"), ("'", ','), (',', "'2020-09-03"), ("'2020-09-03", "'"), ("'", ']'), (']', ','), (',', "dtype='datetime64"), ("dtype='datetime64", '['), ('[', 'ns'), ('ns', ']'), (']', "'"), ("'", ','), (',', "freq='D"), ("freq='D", "'"), ("'", ')'), (')', 'OUTPUT'), ('OUTPUT', 'H'), ('H', ','), (',', 'hour'), ('hour', 'T/min'), ('T/min', ','), (',', 'minute'), ('minute', 'S'), ('S', ','), (',', 'seconds'), ('seconds', 'L'), ('L', ','), (',', 'milliseconds'), ('milliseconds', 'B'), ('B', ','), (',', 'business'), ('business', 'day'), ('day', 'SM'), ('SM', ','), (',', 'semi'), ('semi', 'month'), ('month', 'end'), ('end', 'Q'), ('Q', ','), (',', 'quarter'), ('quarter', 'end'), ('end', 'BQ'), ('BQ', ','), (',', 'business'), ('business', 'quarter'), ('quarter', 'end'), ('end', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Basemap'), ('Basemap', 'The'), ('The', 'matplotlib'), ('matplotlib', 'basemap'), ('basemap', 'toolkit'), ('toolkit', 'library'), ('library', 'plotting'), ('plotting', '2D'), ('2D', 'data'), ('data', 'maps'), ('maps', 'Python'), ('Python', '.')]

>> Trigrams are: 
 [('We', 'also', 'create'), ('also', 'create', 'date'), ('create', 'date', 'range'), ('date', 'range', 'help'), ('range', 'help', 'startdate'), ('help', 'startdate', ','), ('startdate', ',', 'periods'), (',', 'periods', 'freq'), ('periods', 'freq', ','), ('freq', ',', 'example'), (',', 'example', 'Some'), ('example', 'Some', 'important'), ('Some', 'important', 'possible'), ('important', 'possible', 'values'), ('possible', 'values', 'freq'), ('values', 'freq', 'D'), ('freq', 'D', ','), ('D', ',', 'calendar'), (',', 'calendar', 'day'), ('calendar', 'day', 'W'), ('day', 'W', ','), ('W', ',', 'week'), (',', 'week', 'M'), ('week', 'M', ','), ('M', ',', 'month'), (',', 'month', 'Y'), ('month', 'Y', ','), ('Y', ',', 'year'), (',', 'year', 'import'), ('year', 'import', 'pandas'), ('import', 'pandas', 'pd'), ('pandas', 'pd', 'import'), ('pd', 'import', 'datetime'), ('import', 'datetime', 'dt'), ('datetime', 'dt', 'start_date'), ('dt', 'start_date', '='), ('start_date', '=', 'dt.datetime'), ('=', 'dt.datetime', '('), ('dt.datetime', '(', '2020,8,28'), ('(', '2020,8,28', ')'), ('2020,8,28', ')', 'daterange'), (')', 'daterange', '='), ('daterange', '=', 'pd.date_range'), ('=', 'pd.date_range', '('), ('pd.date_range', '(', 'start_date'), ('(', 'start_date', ','), ('start_date', ',', 'freq='), (',', 'freq=', "'D"), ('freq=', "'D", "'"), ("'D", "'", ','), ("'", ',', 'periods=10'), (',', 'periods=10', ')'), ('periods=10', ')', 'print'), (')', 'print', '('), ('print', '(', 'daterange'), ('(', 'daterange', ')'), ('daterange', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', 'timeDemo.py'), ('6', 'timeDemo.py', 'DatetimeIndex'), ('timeDemo.py', 'DatetimeIndex', '('), ('DatetimeIndex', '(', '['), ('(', '[', "'2020-08-25"), ('[', "'2020-08-25", "'"), ("'2020-08-25", "'", ','), ("'", ',', "'2020-08-26"), (',', "'2020-08-26", "'"), ("'2020-08-26", "'", ','), ("'", ',', "'2020-08-27"), (',', "'2020-08-27", "'"), ("'2020-08-27", "'", ','), ("'", ',', "'2020-08-28"), (',', "'2020-08-28", "'"), ("'2020-08-28", "'", ','), ("'", ',', "'2020-08-29"), (',', "'2020-08-29", "'"), ("'2020-08-29", "'", ','), ("'", ',', "'2020-08-30"), (',', "'2020-08-30", "'"), ("'2020-08-30", "'", ','), ("'", ',', "'2020-08-31"), (',', "'2020-08-31", "'"), ("'2020-08-31", "'", ','), ("'", ',', "'2020-09-01"), (',', "'2020-09-01", "'"), ("'2020-09-01", "'", ','), ("'", ',', "'2020-09-02"), (',', "'2020-09-02", "'"), ("'2020-09-02", "'", ','), ("'", ',', "'2020-09-03"), (',', "'2020-09-03", "'"), ("'2020-09-03", "'", ']'), ("'", ']', ','), (']', ',', "dtype='datetime64"), (',', "dtype='datetime64", '['), ("dtype='datetime64", '[', 'ns'), ('[', 'ns', ']'), ('ns', ']', "'"), (']', "'", ','), ("'", ',', "freq='D"), (',', "freq='D", "'"), ("freq='D", "'", ')'), ("'", ')', 'OUTPUT'), (')', 'OUTPUT', 'H'), ('OUTPUT', 'H', ','), ('H', ',', 'hour'), (',', 'hour', 'T/min'), ('hour', 'T/min', ','), ('T/min', ',', 'minute'), (',', 'minute', 'S'), ('minute', 'S', ','), ('S', ',', 'seconds'), (',', 'seconds', 'L'), ('seconds', 'L', ','), ('L', ',', 'milliseconds'), (',', 'milliseconds', 'B'), ('milliseconds', 'B', ','), ('B', ',', 'business'), (',', 'business', 'day'), ('business', 'day', 'SM'), ('day', 'SM', ','), ('SM', ',', 'semi'), (',', 'semi', 'month'), ('semi', 'month', 'end'), ('month', 'end', 'Q'), ('end', 'Q', ','), ('Q', ',', 'quarter'), (',', 'quarter', 'end'), ('quarter', 'end', 'BQ'), ('end', 'BQ', ','), ('BQ', ',', 'business'), (',', 'business', 'quarter'), ('business', 'quarter', 'end'), ('quarter', 'end', 'Prof.'), ('end', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Basemap'), ('›', 'Basemap', 'The'), ('Basemap', 'The', 'matplotlib'), ('The', 'matplotlib', 'basemap'), ('matplotlib', 'basemap', 'toolkit'), ('basemap', 'toolkit', 'library'), ('toolkit', 'library', 'plotting'), ('library', 'plotting', '2D'), ('plotting', '2D', 'data'), ('2D', 'data', 'maps'), ('data', 'maps', 'Python'), ('maps', 'Python', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('also', 'RB'), ('create', 'VBP'), ('date', 'NN'), ('range', 'NN'), ('help', 'NN'), ('startdate', 'VB'), (',', ','), ('periods', 'NNS'), ('freq', 'VBP'), (',', ','), ('example', 'NN'), ('Some', 'DT'), ('important', 'JJ'), ('possible', 'JJ'), ('values', 'NNS'), ('freq', 'VBP'), ('D', 'NNP'), (',', ','), ('calendar', 'NN'), ('day', 'NN'), ('W', 'NNP'), (',', ','), ('week', 'NN'), ('M', 'NNP'), (',', ','), ('month', 'NN'), ('Y', 'NNP'), (',', ','), ('year', 'NN'), ('import', 'NN'), ('pandas', 'IN'), ('pd', 'JJ'), ('import', 'NN'), ('datetime', 'NN'), ('dt', 'NN'), ('start_date', 'NN'), ('=', 'NN'), ('dt.datetime', 'NN'), ('(', '('), ('2020,8,28', 'CD'), (')', ')'), ('daterange', 'NN'), ('=', 'JJ'), ('pd.date_range', 'NN'), ('(', '('), ('start_date', 'NN'), (',', ','), ('freq=', 'JJ'), ("'D", 'NNP'), ("'", 'POS'), (',', ','), ('periods=10', 'NN'), (')', ')'), ('print', 'NN'), ('(', '('), ('daterange', 'NN'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('timeDemo.py', 'NN'), ('DatetimeIndex', 'NNP'), ('(', '('), ('[', 'JJ'), ("'2020-08-25", 'NN'), ("'", "''"), (',', ','), ("'2020-08-26", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-27", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-28", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-29", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-30", 'JJ'), ("'", "''"), (',', ','), ("'2020-08-31", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-01", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-02", 'JJ'), ("'", "''"), (',', ','), ("'2020-09-03", 'JJ'), ("'", "''"), (']', 'NN'), (',', ','), ("dtype='datetime64", 'NN'), ('[', 'NNP'), ('ns', 'RB'), (']', 'NNP'), ("'", 'POS'), (',', ','), ("freq='D", 'NNS'), ("'", 'POS'), (')', ')'), ('OUTPUT', 'NNP'), ('H', 'NNP'), (',', ','), ('hour', 'NN'), ('T/min', 'NNP'), (',', ','), ('minute', 'NN'), ('S', 'NNP'), (',', ','), ('seconds', 'VBZ'), ('L', 'NNP'), (',', ','), ('milliseconds', 'VBZ'), ('B', 'NNP'), (',', ','), ('business', 'NN'), ('day', 'NN'), ('SM', 'NNP'), (',', ','), ('semi', 'VBD'), ('month', 'NN'), ('end', 'NN'), ('Q', 'NNP'), (',', ','), ('quarter', 'NN'), ('end', 'NN'), ('BQ', 'NNP'), (',', ','), ('business', 'NN'), ('quarter', 'NN'), ('end', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Basemap', 'NNP'), ('The', 'DT'), ('matplotlib', 'NN'), ('basemap', 'NN'), ('toolkit', 'NN'), ('library', 'JJ'), ('plotting', 'VBG'), ('2D', 'CD'), ('data', 'NNS'), ('maps', 'NNS'), ('Python', 'NNP'), ('.', '.')]

 (S
  We/PRP
  also/RB
  create/VBP
  (NP date/NN range/NN help/NN)
  startdate/VB
  ,/,
  (NP periods/NNS)
  freq/VBP
  ,/,
  (NP example/NN)
  (NP Some/DT important/JJ possible/JJ values/NNS)
  freq/VBP
  (NP D/NNP)
  ,/,
  (NP calendar/NN day/NN W/NNP)
  ,/,
  (NP week/NN M/NNP)
  ,/,
  (NP month/NN Y/NNP)
  ,/,
  (NP year/NN import/NN)
  pandas/IN
  (NP
    pd/JJ
    import/NN
    datetime/NN
    dt/NN
    start_date/NN
    =/NN
    dt.datetime/NN)
  (/(
  2020,8,28/CD
  )/)
  (NP daterange/NN)
  (NP =/JJ pd.date_range/NN)
  (/(
  (NP start_date/NN)
  ,/,
  (NP freq=/JJ 'D/NNP)
  '/POS
  ,/,
  (NP periods=10/NN)
  )/)
  (NP print/NN)
  (/(
  (NP daterange/NN)
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  (NP timeDemo.py/NN DatetimeIndex/NNP)
  (/(
  (NP [/JJ '2020-08-25/NN)
  '/''
  ,/,
  '2020-08-26/JJ
  '/''
  ,/,
  '2020-08-27/JJ
  '/''
  ,/,
  '2020-08-28/JJ
  '/''
  ,/,
  '2020-08-29/JJ
  '/''
  ,/,
  '2020-08-30/JJ
  '/''
  ,/,
  '2020-08-31/JJ
  '/''
  ,/,
  '2020-09-01/JJ
  '/''
  ,/,
  '2020-09-02/JJ
  '/''
  ,/,
  '2020-09-03/JJ
  '/''
  (NP ]/NN)
  ,/,
  (NP dtype='datetime64/NN [/NNP)
  ns/RB
  (NP ]/NNP)
  '/POS
  ,/,
  (NP freq='D/NNS)
  '/POS
  )/)
  (NP OUTPUT/NNP H/NNP)
  ,/,
  (NP hour/NN T/min/NNP)
  ,/,
  (NP minute/NN S/NNP)
  ,/,
  seconds/VBZ
  (NP L/NNP)
  ,/,
  milliseconds/VBZ
  (NP B/NNP)
  ,/,
  (NP business/NN day/NN SM/NNP)
  ,/,
  semi/VBD
  (NP month/NN end/NN Q/NNP)
  ,/,
  (NP quarter/NN end/NN BQ/NNP)
  ,/,
  (NP
    business/NN
    quarter/NN
    end/NN
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP Basemap/NNP)
  (NP The/DT matplotlib/NN basemap/NN toolkit/NN)
  library/JJ
  plotting/VBG
  2D/CD
  (NP data/NNS maps/NNS Python/NNP)
  ./.) 


>> Noun Phrases are: 
 ['date range help', 'periods', 'example', 'Some important possible values', 'D', 'calendar day W', 'week M', 'month Y', 'year import', 'pd import datetime dt start_date = dt.datetime', 'daterange', '= pd.date_range', 'start_date', "freq= 'D", 'periods=10', 'print', 'daterange', 'timeDemo.py DatetimeIndex', "[ '2020-08-25", ']', "dtype='datetime64 [", ']', "freq='D", 'OUTPUT H', 'hour T/min', 'minute S', 'L', 'B', 'business day SM', 'month end Q', 'quarter end BQ', 'business quarter end Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› Basemap', 'The matplotlib basemap toolkit', 'data maps Python']

>> Named Entities are: 
 [('PERSON', 'D'), ('ORGANIZATION', 'DatetimeIndex'), ('ORGANIZATION', 'OUTPUT H'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('also', 'also'), ('create', 'creat'), ('date', 'date'), ('range', 'rang'), ('help', 'help'), ('startdate', 'startdat'), (',', ','), ('periods', 'period'), ('freq', 'freq'), (',', ','), ('example', 'exampl'), ('Some', 'some'), ('important', 'import'), ('possible', 'possibl'), ('values', 'valu'), ('freq', 'freq'), ('D', 'd'), (',', ','), ('calendar', 'calendar'), ('day', 'day'), ('W', 'w'), (',', ','), ('week', 'week'), ('M', 'm'), (',', ','), ('month', 'month'), ('Y', 'y'), (',', ','), ('year', 'year'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('datetime', 'datetim'), ('dt', 'dt'), ('start_date', 'start_dat'), ('=', '='), ('dt.datetime', 'dt.datetim'), ('(', '('), ('2020,8,28', '2020,8,28'), (')', ')'), ('daterange', 'daterang'), ('=', '='), ('pd.date_range', 'pd.date_rang'), ('(', '('), ('start_date', 'start_dat'), (',', ','), ('freq=', 'freq='), ("'D", "'d"), ("'", "'"), (',', ','), ('periods=10', 'periods=10'), (')', ')'), ('print', 'print'), ('(', '('), ('daterange', 'daterang'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('timeDemo.py', 'timedemo.pi'), ('DatetimeIndex', 'datetimeindex'), ('(', '('), ('[', '['), ("'2020-08-25", "'2020-08-25"), ("'", "'"), (',', ','), ("'2020-08-26", "'2020-08-26"), ("'", "'"), (',', ','), ("'2020-08-27", "'2020-08-27"), ("'", "'"), (',', ','), ("'2020-08-28", "'2020-08-28"), ("'", "'"), (',', ','), ("'2020-08-29", "'2020-08-29"), ("'", "'"), (',', ','), ("'2020-08-30", "'2020-08-30"), ("'", "'"), (',', ','), ("'2020-08-31", "'2020-08-31"), ("'", "'"), (',', ','), ("'2020-09-01", "'2020-09-01"), ("'", "'"), (',', ','), ("'2020-09-02", "'2020-09-02"), ("'", "'"), (',', ','), ("'2020-09-03", "'2020-09-03"), ("'", "'"), (']', ']'), (',', ','), ("dtype='datetime64", "dtype='datetime64"), ('[', '['), ('ns', 'ns'), (']', ']'), ("'", "'"), (',', ','), ("freq='D", "freq='d"), ("'", "'"), (')', ')'), ('OUTPUT', 'output'), ('H', 'h'), (',', ','), ('hour', 'hour'), ('T/min', 't/min'), (',', ','), ('minute', 'minut'), ('S', 's'), (',', ','), ('seconds', 'second'), ('L', 'l'), (',', ','), ('milliseconds', 'millisecond'), ('B', 'b'), (',', ','), ('business', 'busi'), ('day', 'day'), ('SM', 'sm'), (',', ','), ('semi', 'semi'), ('month', 'month'), ('end', 'end'), ('Q', 'q'), (',', ','), ('quarter', 'quarter'), ('end', 'end'), ('BQ', 'bq'), (',', ','), ('business', 'busi'), ('quarter', 'quarter'), ('end', 'end'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Basemap', 'basemap'), ('The', 'the'), ('matplotlib', 'matplotlib'), ('basemap', 'basemap'), ('toolkit', 'toolkit'), ('library', 'librari'), ('plotting', 'plot'), ('2D', '2d'), ('data', 'data'), ('maps', 'map'), ('Python', 'python'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('also', 'also'), ('create', 'creat'), ('date', 'date'), ('range', 'rang'), ('help', 'help'), ('startdate', 'startdat'), (',', ','), ('periods', 'period'), ('freq', 'freq'), (',', ','), ('example', 'exampl'), ('Some', 'some'), ('important', 'import'), ('possible', 'possibl'), ('values', 'valu'), ('freq', 'freq'), ('D', 'd'), (',', ','), ('calendar', 'calendar'), ('day', 'day'), ('W', 'w'), (',', ','), ('week', 'week'), ('M', 'm'), (',', ','), ('month', 'month'), ('Y', 'y'), (',', ','), ('year', 'year'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('datetime', 'datetim'), ('dt', 'dt'), ('start_date', 'start_dat'), ('=', '='), ('dt.datetime', 'dt.datetim'), ('(', '('), ('2020,8,28', '2020,8,28'), (')', ')'), ('daterange', 'daterang'), ('=', '='), ('pd.date_range', 'pd.date_rang'), ('(', '('), ('start_date', 'start_dat'), (',', ','), ('freq=', 'freq='), ("'D", "'d"), ("'", "'"), (',', ','), ('periods=10', 'periods=10'), (')', ')'), ('print', 'print'), ('(', '('), ('daterange', 'daterang'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('timeDemo.py', 'timedemo.pi'), ('DatetimeIndex', 'datetimeindex'), ('(', '('), ('[', '['), ("'2020-08-25", '2020-08-25'), ("'", "'"), (',', ','), ("'2020-08-26", '2020-08-26'), ("'", "'"), (',', ','), ("'2020-08-27", '2020-08-27'), ("'", "'"), (',', ','), ("'2020-08-28", '2020-08-28'), ("'", "'"), (',', ','), ("'2020-08-29", '2020-08-29'), ("'", "'"), (',', ','), ("'2020-08-30", '2020-08-30'), ("'", "'"), (',', ','), ("'2020-08-31", '2020-08-31'), ("'", "'"), (',', ','), ("'2020-09-01", '2020-09-01'), ("'", "'"), (',', ','), ("'2020-09-02", '2020-09-02'), ("'", "'"), (',', ','), ("'2020-09-03", '2020-09-03'), ("'", "'"), (']', ']'), (',', ','), ("dtype='datetime64", "dtype='datetime64"), ('[', '['), ('ns', 'ns'), (']', ']'), ("'", "'"), (',', ','), ("freq='D", "freq='d"), ("'", "'"), (')', ')'), ('OUTPUT', 'output'), ('H', 'h'), (',', ','), ('hour', 'hour'), ('T/min', 't/min'), (',', ','), ('minute', 'minut'), ('S', 's'), (',', ','), ('seconds', 'second'), ('L', 'l'), (',', ','), ('milliseconds', 'millisecond'), ('B', 'b'), (',', ','), ('business', 'busi'), ('day', 'day'), ('SM', 'sm'), (',', ','), ('semi', 'semi'), ('month', 'month'), ('end', 'end'), ('Q', 'q'), (',', ','), ('quarter', 'quarter'), ('end', 'end'), ('BQ', 'bq'), (',', ','), ('business', 'busi'), ('quarter', 'quarter'), ('end', 'end'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Basemap', 'basemap'), ('The', 'the'), ('matplotlib', 'matplotlib'), ('basemap', 'basemap'), ('toolkit', 'toolkit'), ('library', 'librari'), ('plotting', 'plot'), ('2D', '2d'), ('data', 'data'), ('maps', 'map'), ('Python', 'python'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('also', 'also'), ('create', 'create'), ('date', 'date'), ('range', 'range'), ('help', 'help'), ('startdate', 'startdate'), (',', ','), ('periods', 'period'), ('freq', 'freq'), (',', ','), ('example', 'example'), ('Some', 'Some'), ('important', 'important'), ('possible', 'possible'), ('values', 'value'), ('freq', 'freq'), ('D', 'D'), (',', ','), ('calendar', 'calendar'), ('day', 'day'), ('W', 'W'), (',', ','), ('week', 'week'), ('M', 'M'), (',', ','), ('month', 'month'), ('Y', 'Y'), (',', ','), ('year', 'year'), ('import', 'import'), ('pandas', 'panda'), ('pd', 'pd'), ('import', 'import'), ('datetime', 'datetime'), ('dt', 'dt'), ('start_date', 'start_date'), ('=', '='), ('dt.datetime', 'dt.datetime'), ('(', '('), ('2020,8,28', '2020,8,28'), (')', ')'), ('daterange', 'daterange'), ('=', '='), ('pd.date_range', 'pd.date_range'), ('(', '('), ('start_date', 'start_date'), (',', ','), ('freq=', 'freq='), ("'D", "'D"), ("'", "'"), (',', ','), ('periods=10', 'periods=10'), (')', ')'), ('print', 'print'), ('(', '('), ('daterange', 'daterange'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('timeDemo.py', 'timeDemo.py'), ('DatetimeIndex', 'DatetimeIndex'), ('(', '('), ('[', '['), ("'2020-08-25", "'2020-08-25"), ("'", "'"), (',', ','), ("'2020-08-26", "'2020-08-26"), ("'", "'"), (',', ','), ("'2020-08-27", "'2020-08-27"), ("'", "'"), (',', ','), ("'2020-08-28", "'2020-08-28"), ("'", "'"), (',', ','), ("'2020-08-29", "'2020-08-29"), ("'", "'"), (',', ','), ("'2020-08-30", "'2020-08-30"), ("'", "'"), (',', ','), ("'2020-08-31", "'2020-08-31"), ("'", "'"), (',', ','), ("'2020-09-01", "'2020-09-01"), ("'", "'"), (',', ','), ("'2020-09-02", "'2020-09-02"), ("'", "'"), (',', ','), ("'2020-09-03", "'2020-09-03"), ("'", "'"), (']', ']'), (',', ','), ("dtype='datetime64", "dtype='datetime64"), ('[', '['), ('ns', 'n'), (']', ']'), ("'", "'"), (',', ','), ("freq='D", "freq='D"), ("'", "'"), (')', ')'), ('OUTPUT', 'OUTPUT'), ('H', 'H'), (',', ','), ('hour', 'hour'), ('T/min', 'T/min'), (',', ','), ('minute', 'minute'), ('S', 'S'), (',', ','), ('seconds', 'second'), ('L', 'L'), (',', ','), ('milliseconds', 'millisecond'), ('B', 'B'), (',', ','), ('business', 'business'), ('day', 'day'), ('SM', 'SM'), (',', ','), ('semi', 'semi'), ('month', 'month'), ('end', 'end'), ('Q', 'Q'), (',', ','), ('quarter', 'quarter'), ('end', 'end'), ('BQ', 'BQ'), (',', ','), ('business', 'business'), ('quarter', 'quarter'), ('end', 'end'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Basemap', 'Basemap'), ('The', 'The'), ('matplotlib', 'matplotlib'), ('basemap', 'basemap'), ('toolkit', 'toolkit'), ('library', 'library'), ('plotting', 'plotting'), ('2D', '2D'), ('data', 'data'), ('maps', 'map'), ('Python', 'Python'), ('.', '.')]



============================ Sentence 52 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›  NetworkX We can use networkx library in order to deal with any kind of networks, which includes social network, railway network, road connectivity etc…. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'NetworkX', 'We', 'use', 'networkx', 'library', 'order', 'deal', 'kind', 'networks', ',', 'includes', 'social', 'network', ',', 'railway', 'network', ',', 'road', 'connectivity', 'etc…', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'NetworkX'), ('NetworkX', 'We'), ('We', 'use'), ('use', 'networkx'), ('networkx', 'library'), ('library', 'order'), ('order', 'deal'), ('deal', 'kind'), ('kind', 'networks'), ('networks', ','), (',', 'includes'), ('includes', 'social'), ('social', 'network'), ('network', ','), (',', 'railway'), ('railway', 'network'), ('network', ','), (',', 'road'), ('road', 'connectivity'), ('connectivity', 'etc…'), ('etc…', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'NetworkX'), ('›', 'NetworkX', 'We'), ('NetworkX', 'We', 'use'), ('We', 'use', 'networkx'), ('use', 'networkx', 'library'), ('networkx', 'library', 'order'), ('library', 'order', 'deal'), ('order', 'deal', 'kind'), ('deal', 'kind', 'networks'), ('kind', 'networks', ','), ('networks', ',', 'includes'), (',', 'includes', 'social'), ('includes', 'social', 'network'), ('social', 'network', ','), ('network', ',', 'railway'), (',', 'railway', 'network'), ('railway', 'network', ','), ('network', ',', 'road'), (',', 'road', 'connectivity'), ('road', 'connectivity', 'etc…'), ('connectivity', 'etc…', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('NetworkX', 'NNP'), ('We', 'PRP'), ('use', 'VBP'), ('networkx', 'JJ'), ('library', 'JJ'), ('order', 'NN'), ('deal', 'NN'), ('kind', 'NN'), ('networks', 'NNS'), (',', ','), ('includes', 'VBZ'), ('social', 'JJ'), ('network', 'NN'), (',', ','), ('railway', 'NN'), ('network', 'NN'), (',', ','), ('road', 'NN'), ('connectivity', 'NN'), ('etc…', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP NetworkX/NNP)
  We/PRP
  use/VBP
  (NP networkx/JJ library/JJ order/NN deal/NN kind/NN networks/NNS)
  ,/,
  includes/VBZ
  (NP social/JJ network/NN)
  ,/,
  (NP railway/NN network/NN)
  ,/,
  (NP road/NN connectivity/NN etc…/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› NetworkX', 'networkx library order deal kind networks', 'social network', 'railway network', 'road connectivity etc…']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'networkx'), ('We', 'we'), ('use', 'use'), ('networkx', 'networkx'), ('library', 'librari'), ('order', 'order'), ('deal', 'deal'), ('kind', 'kind'), ('networks', 'network'), (',', ','), ('includes', 'includ'), ('social', 'social'), ('network', 'network'), (',', ','), ('railway', 'railway'), ('network', 'network'), (',', ','), ('road', 'road'), ('connectivity', 'connect'), ('etc…', 'etc…'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'networkx'), ('We', 'we'), ('use', 'use'), ('networkx', 'networkx'), ('library', 'librari'), ('order', 'order'), ('deal', 'deal'), ('kind', 'kind'), ('networks', 'network'), (',', ','), ('includes', 'includ'), ('social', 'social'), ('network', 'network'), (',', ','), ('railway', 'railway'), ('network', 'network'), (',', ','), ('road', 'road'), ('connectivity', 'connect'), ('etc…', 'etc…'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'NetworkX'), ('We', 'We'), ('use', 'use'), ('networkx', 'networkx'), ('library', 'library'), ('order', 'order'), ('deal', 'deal'), ('kind', 'kind'), ('networks', 'network'), (',', ','), ('includes', 'includes'), ('social', 'social'), ('network', 'network'), (',', ','), ('railway', 'railway'), ('network', 'network'), (',', ','), ('road', 'road'), ('connectivity', 'connectivity'), ('etc…', 'etc…'), ('.', '.')]



============================ Sentence 53 =============================

Install pip install networkx conda install networkx Types of network graph Undirected Directed Weighted graph    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›   NetworkX (example) import networkx as nx g = nx.Graph() # undirected graph g.add_edge('rajkot','junagadh') g.add_edge('junagadh','porbandar') g.add_edge('rajkot','jamnagar') g.add_edge('jamnagar','bhanvad') g.add_edge('bhanvad','porbandar') nx.draw(g,with_labels=True) 1 2 3 4 5 6 7 8 networkxDemo.py  import networkx as nx gD = nx.DiGraph() # directed graph gD.add_edge('Modi','Arjun') gD.add_edge('Modi','GambhavaSir') gD.add_edge('GambhavaSir','Modi')  nx.draw(gD, with_labels=True) 1 2 3 4 5 6 7 networkxDemo.py    Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 –Data Visualization ‹#›  NetworkX (cont.) 


>> Tokens are: 
 ['Install', 'pip', 'install', 'networkx', 'conda', 'install', 'networkx', 'Types', 'network', 'graph', 'Undirected', 'Directed', 'Weighted', 'graph', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', 'NetworkX', '(', 'example', ')', 'import', 'networkx', 'nx', 'g', '=', 'nx.Graph', '(', ')', '#', 'undirected', 'graph', 'g.add_edge', '(', "'rajkot", "'", ',', "'junagadh", "'", ')', 'g.add_edge', '(', "'junagadh", "'", ',', "'porbandar", "'", ')', 'g.add_edge', '(', "'rajkot", "'", ',', "'jamnagar", "'", ')', 'g.add_edge', '(', "'jamnagar", "'", ',', "'bhanvad", "'", ')', 'g.add_edge', '(', "'bhanvad", "'", ',', "'porbandar", "'", ')', 'nx.draw', '(', 'g', ',', 'with_labels=True', ')', '1', '2', '3', '4', '5', '6', '7', '8', 'networkxDemo.py', 'import', 'networkx', 'nx', 'gD', '=', 'nx.DiGraph', '(', ')', '#', 'directed', 'graph', 'gD.add_edge', '(', "'Modi", "'", ',', "'Arjun", "'", ')', 'gD.add_edge', '(', "'Modi", "'", ',', "'GambhavaSir", "'", ')', 'gD.add_edge', '(', "'GambhavaSir", "'", ',', "'Modi", "'", ')', 'nx.draw', '(', 'gD', ',', 'with_labels=True', ')', '1', '2', '3', '4', '5', '6', '7', 'networkxDemo.py', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–Data', 'Visualization', '‹', '#', '›', 'NetworkX', '(', 'cont', '.', ')']

>> Bigrams are: 
 [('Install', 'pip'), ('pip', 'install'), ('install', 'networkx'), ('networkx', 'conda'), ('conda', 'install'), ('install', 'networkx'), ('networkx', 'Types'), ('Types', 'network'), ('network', 'graph'), ('graph', 'Undirected'), ('Undirected', 'Directed'), ('Directed', 'Weighted'), ('Weighted', 'graph'), ('graph', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'NetworkX'), ('NetworkX', '('), ('(', 'example'), ('example', ')'), (')', 'import'), ('import', 'networkx'), ('networkx', 'nx'), ('nx', 'g'), ('g', '='), ('=', 'nx.Graph'), ('nx.Graph', '('), ('(', ')'), (')', '#'), ('#', 'undirected'), ('undirected', 'graph'), ('graph', 'g.add_edge'), ('g.add_edge', '('), ('(', "'rajkot"), ("'rajkot", "'"), ("'", ','), (',', "'junagadh"), ("'junagadh", "'"), ("'", ')'), (')', 'g.add_edge'), ('g.add_edge', '('), ('(', "'junagadh"), ("'junagadh", "'"), ("'", ','), (',', "'porbandar"), ("'porbandar", "'"), ("'", ')'), (')', 'g.add_edge'), ('g.add_edge', '('), ('(', "'rajkot"), ("'rajkot", "'"), ("'", ','), (',', "'jamnagar"), ("'jamnagar", "'"), ("'", ')'), (')', 'g.add_edge'), ('g.add_edge', '('), ('(', "'jamnagar"), ("'jamnagar", "'"), ("'", ','), (',', "'bhanvad"), ("'bhanvad", "'"), ("'", ')'), (')', 'g.add_edge'), ('g.add_edge', '('), ('(', "'bhanvad"), ("'bhanvad", "'"), ("'", ','), (',', "'porbandar"), ("'porbandar", "'"), ("'", ')'), (')', 'nx.draw'), ('nx.draw', '('), ('(', 'g'), ('g', ','), (',', 'with_labels=True'), ('with_labels=True', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', '8'), ('8', 'networkxDemo.py'), ('networkxDemo.py', 'import'), ('import', 'networkx'), ('networkx', 'nx'), ('nx', 'gD'), ('gD', '='), ('=', 'nx.DiGraph'), ('nx.DiGraph', '('), ('(', ')'), (')', '#'), ('#', 'directed'), ('directed', 'graph'), ('graph', 'gD.add_edge'), ('gD.add_edge', '('), ('(', "'Modi"), ("'Modi", "'"), ("'", ','), (',', "'Arjun"), ("'Arjun", "'"), ("'", ')'), (')', 'gD.add_edge'), ('gD.add_edge', '('), ('(', "'Modi"), ("'Modi", "'"), ("'", ','), (',', "'GambhavaSir"), ("'GambhavaSir", "'"), ("'", ')'), (')', 'gD.add_edge'), ('gD.add_edge', '('), ('(', "'GambhavaSir"), ("'GambhavaSir", "'"), ("'", ','), (',', "'Modi"), ("'Modi", "'"), ("'", ')'), (')', 'nx.draw'), ('nx.draw', '('), ('(', 'gD'), ('gD', ','), (',', 'with_labels=True'), ('with_labels=True', ')'), (')', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', 'networkxDemo.py'), ('networkxDemo.py', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–Data'), ('–Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', 'NetworkX'), ('NetworkX', '('), ('(', 'cont'), ('cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('Install', 'pip', 'install'), ('pip', 'install', 'networkx'), ('install', 'networkx', 'conda'), ('networkx', 'conda', 'install'), ('conda', 'install', 'networkx'), ('install', 'networkx', 'Types'), ('networkx', 'Types', 'network'), ('Types', 'network', 'graph'), ('network', 'graph', 'Undirected'), ('graph', 'Undirected', 'Directed'), ('Undirected', 'Directed', 'Weighted'), ('Directed', 'Weighted', 'graph'), ('Weighted', 'graph', 'Prof.'), ('graph', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'NetworkX'), ('›', 'NetworkX', '('), ('NetworkX', '(', 'example'), ('(', 'example', ')'), ('example', ')', 'import'), (')', 'import', 'networkx'), ('import', 'networkx', 'nx'), ('networkx', 'nx', 'g'), ('nx', 'g', '='), ('g', '=', 'nx.Graph'), ('=', 'nx.Graph', '('), ('nx.Graph', '(', ')'), ('(', ')', '#'), (')', '#', 'undirected'), ('#', 'undirected', 'graph'), ('undirected', 'graph', 'g.add_edge'), ('graph', 'g.add_edge', '('), ('g.add_edge', '(', "'rajkot"), ('(', "'rajkot", "'"), ("'rajkot", "'", ','), ("'", ',', "'junagadh"), (',', "'junagadh", "'"), ("'junagadh", "'", ')'), ("'", ')', 'g.add_edge'), (')', 'g.add_edge', '('), ('g.add_edge', '(', "'junagadh"), ('(', "'junagadh", "'"), ("'junagadh", "'", ','), ("'", ',', "'porbandar"), (',', "'porbandar", "'"), ("'porbandar", "'", ')'), ("'", ')', 'g.add_edge'), (')', 'g.add_edge', '('), ('g.add_edge', '(', "'rajkot"), ('(', "'rajkot", "'"), ("'rajkot", "'", ','), ("'", ',', "'jamnagar"), (',', "'jamnagar", "'"), ("'jamnagar", "'", ')'), ("'", ')', 'g.add_edge'), (')', 'g.add_edge', '('), ('g.add_edge', '(', "'jamnagar"), ('(', "'jamnagar", "'"), ("'jamnagar", "'", ','), ("'", ',', "'bhanvad"), (',', "'bhanvad", "'"), ("'bhanvad", "'", ')'), ("'", ')', 'g.add_edge'), (')', 'g.add_edge', '('), ('g.add_edge', '(', "'bhanvad"), ('(', "'bhanvad", "'"), ("'bhanvad", "'", ','), ("'", ',', "'porbandar"), (',', "'porbandar", "'"), ("'porbandar", "'", ')'), ("'", ')', 'nx.draw'), (')', 'nx.draw', '('), ('nx.draw', '(', 'g'), ('(', 'g', ','), ('g', ',', 'with_labels=True'), (',', 'with_labels=True', ')'), ('with_labels=True', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', '8'), ('7', '8', 'networkxDemo.py'), ('8', 'networkxDemo.py', 'import'), ('networkxDemo.py', 'import', 'networkx'), ('import', 'networkx', 'nx'), ('networkx', 'nx', 'gD'), ('nx', 'gD', '='), ('gD', '=', 'nx.DiGraph'), ('=', 'nx.DiGraph', '('), ('nx.DiGraph', '(', ')'), ('(', ')', '#'), (')', '#', 'directed'), ('#', 'directed', 'graph'), ('directed', 'graph', 'gD.add_edge'), ('graph', 'gD.add_edge', '('), ('gD.add_edge', '(', "'Modi"), ('(', "'Modi", "'"), ("'Modi", "'", ','), ("'", ',', "'Arjun"), (',', "'Arjun", "'"), ("'Arjun", "'", ')'), ("'", ')', 'gD.add_edge'), (')', 'gD.add_edge', '('), ('gD.add_edge', '(', "'Modi"), ('(', "'Modi", "'"), ("'Modi", "'", ','), ("'", ',', "'GambhavaSir"), (',', "'GambhavaSir", "'"), ("'GambhavaSir", "'", ')'), ("'", ')', 'gD.add_edge'), (')', 'gD.add_edge', '('), ('gD.add_edge', '(', "'GambhavaSir"), ('(', "'GambhavaSir", "'"), ("'GambhavaSir", "'", ','), ("'", ',', "'Modi"), (',', "'Modi", "'"), ("'Modi", "'", ')'), ("'", ')', 'nx.draw'), (')', 'nx.draw', '('), ('nx.draw', '(', 'gD'), ('(', 'gD', ','), ('gD', ',', 'with_labels=True'), (',', 'with_labels=True', ')'), ('with_labels=True', ')', '1'), (')', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', 'networkxDemo.py'), ('7', 'networkxDemo.py', 'Prof.'), ('networkxDemo.py', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–Data'), ('04', '–Data', 'Visualization'), ('–Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'NetworkX'), ('›', 'NetworkX', '('), ('NetworkX', '(', 'cont'), ('(', 'cont', '.'), ('cont', '.', ')')]

>> POS Tags are: 
 [('Install', 'NNP'), ('pip', 'VBZ'), ('install', 'VB'), ('networkx', 'JJ'), ('conda', 'NN'), ('install', 'NN'), ('networkx', 'NN'), ('Types', 'NNP'), ('network', 'NN'), ('graph', 'NN'), ('Undirected', 'NNP'), ('Directed', 'NNP'), ('Weighted', 'VBD'), ('graph', 'JJ'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('NetworkX', 'NNP'), ('(', '('), ('example', 'NN'), (')', ')'), ('import', 'NN'), ('networkx', 'JJ'), ('nx', 'JJ'), ('g', 'NN'), ('=', 'NNP'), ('nx.Graph', 'NNP'), ('(', '('), (')', ')'), ('#', '#'), ('undirected', 'JJ'), ('graph', 'NN'), ('g.add_edge', 'NN'), ('(', '('), ("'rajkot", 'POS'), ("'", "''"), (',', ','), ("'junagadh", 'NNP'), ("'", 'POS'), (')', ')'), ('g.add_edge', 'NN'), ('(', '('), ("'junagadh", 'POS'), ("'", "''"), (',', ','), ("'porbandar", 'NNP'), ("'", 'POS'), (')', ')'), ('g.add_edge', 'NN'), ('(', '('), ("'rajkot", 'POS'), ("'", "''"), (',', ','), ("'jamnagar", 'NNP'), ("'", 'POS'), (')', ')'), ('g.add_edge', 'NN'), ('(', '('), ("'jamnagar", 'NNP'), ("'", 'POS'), (',', ','), ("'bhanvad", 'NNP'), ("'", 'POS'), (')', ')'), ('g.add_edge', 'NN'), ('(', '('), ("'bhanvad", 'POS'), ("'", "''"), (',', ','), ("'porbandar", 'NNP'), ("'", 'POS'), (')', ')'), ('nx.draw', 'FW'), ('(', '('), ('g', 'NN'), (',', ','), ('with_labels=True', 'NN'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('8', 'CD'), ('networkxDemo.py', 'JJ'), ('import', 'NN'), ('networkx', 'NN'), ('nx', 'JJ'), ('gD', 'NN'), ('=', 'NNP'), ('nx.DiGraph', 'NNP'), ('(', '('), (')', ')'), ('#', '#'), ('directed', 'VBN'), ('graph', 'NN'), ('gD.add_edge', 'NN'), ('(', '('), ("'Modi", 'POS'), ("'", "''"), (',', ','), ("'Arjun", 'NNP'), ("'", 'POS'), (')', ')'), ('gD.add_edge', 'NN'), ('(', '('), ("'Modi", 'POS'), ("'", "''"), (',', ','), ("'GambhavaSir", 'NNP'), ("'", 'POS'), (')', ')'), ('gD.add_edge', 'NN'), ('(', '('), ("'GambhavaSir", 'POS'), ("'", "''"), (',', ','), ("'Modi", 'NNP'), ("'", 'POS'), (')', ')'), ('nx.draw', 'FW'), ('(', '('), ('gD', 'NN'), (',', ','), ('with_labels=True', 'NN'), (')', ')'), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('networkxDemo.py', 'JJ'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('NetworkX', 'NNP'), ('(', '('), ('cont', 'NN'), ('.', '.'), (')', ')')]

 (S
  (NP Install/NNP)
  pip/VBZ
  install/VB
  (NP
    networkx/JJ
    conda/NN
    install/NN
    networkx/NN
    Types/NNP
    network/NN
    graph/NN
    Undirected/NNP
    Directed/NNP)
  Weighted/VBD
  (NP graph/JJ Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP NetworkX/NNP)
  (/(
  (NP example/NN)
  )/)
  (NP import/NN)
  (NP networkx/JJ nx/JJ g/NN =/NNP nx.Graph/NNP)
  (/(
  )/)
  #/#
  (NP undirected/JJ graph/NN g.add_edge/NN)
  (/(
  'rajkot/POS
  '/''
  ,/,
  (NP 'junagadh/NNP)
  '/POS
  )/)
  (NP g.add_edge/NN)
  (/(
  'junagadh/POS
  '/''
  ,/,
  (NP 'porbandar/NNP)
  '/POS
  )/)
  (NP g.add_edge/NN)
  (/(
  'rajkot/POS
  '/''
  ,/,
  (NP 'jamnagar/NNP)
  '/POS
  )/)
  (NP g.add_edge/NN)
  (/(
  (NP 'jamnagar/NNP)
  '/POS
  ,/,
  (NP 'bhanvad/NNP)
  '/POS
  )/)
  (NP g.add_edge/NN)
  (/(
  'bhanvad/POS
  '/''
  ,/,
  (NP 'porbandar/NNP)
  '/POS
  )/)
  nx.draw/FW
  (/(
  (NP g/NN)
  ,/,
  (NP with_labels=True/NN)
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  8/CD
  (NP networkxDemo.py/JJ import/NN networkx/NN)
  (NP nx/JJ gD/NN =/NNP nx.DiGraph/NNP)
  (/(
  )/)
  #/#
  directed/VBN
  (NP graph/NN gD.add_edge/NN)
  (/(
  'Modi/POS
  '/''
  ,/,
  (NP 'Arjun/NNP)
  '/POS
  )/)
  (NP gD.add_edge/NN)
  (/(
  'Modi/POS
  '/''
  ,/,
  (NP 'GambhavaSir/NNP)
  '/POS
  )/)
  (NP gD.add_edge/NN)
  (/(
  'GambhavaSir/POS
  '/''
  ,/,
  (NP 'Modi/NNP)
  '/POS
  )/)
  nx.draw/FW
  (/(
  (NP gD/NN)
  ,/,
  (NP with_labels=True/NN)
  )/)
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  (NP networkxDemo.py/JJ Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP NetworkX/NNP)
  (/(
  (NP cont/NN)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['Install', 'networkx conda install networkx Types network graph Undirected Directed', 'graph Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› NetworkX', 'example', 'import', 'networkx nx g = nx.Graph', 'undirected graph g.add_edge', "'junagadh", 'g.add_edge', "'porbandar", 'g.add_edge', "'jamnagar", 'g.add_edge', "'jamnagar", "'bhanvad", 'g.add_edge', "'porbandar", 'g', 'with_labels=True', 'networkxDemo.py import networkx', 'nx gD = nx.DiGraph', 'graph gD.add_edge', "'Arjun", 'gD.add_edge', "'GambhavaSir", 'gD.add_edge', "'Modi", 'gD', 'with_labels=True', 'networkxDemo.py Prof. Arjun V. Bala', 'PDS', 'Unit', '–Data Visualization ‹', '› NetworkX', 'cont']

>> Named Entities are: 
 [('GPE', 'Install'), ('PERSON', 'Types'), ('ORGANIZATION', 'Undirected Directed'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'gD'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Install', 'instal'), ('pip', 'pip'), ('install', 'instal'), ('networkx', 'networkx'), ('conda', 'conda'), ('install', 'instal'), ('networkx', 'networkx'), ('Types', 'type'), ('network', 'network'), ('graph', 'graph'), ('Undirected', 'undirect'), ('Directed', 'direct'), ('Weighted', 'weight'), ('graph', 'graph'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'networkx'), ('(', '('), ('example', 'exampl'), (')', ')'), ('import', 'import'), ('networkx', 'networkx'), ('nx', 'nx'), ('g', 'g'), ('=', '='), ('nx.Graph', 'nx.graph'), ('(', '('), (')', ')'), ('#', '#'), ('undirected', 'undirect'), ('graph', 'graph'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'junagadh", "'junagadh"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'junagadh", "'junagadh"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'jamnagar", "'jamnagar"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'jamnagar", "'jamnagar"), ("'", "'"), (',', ','), ("'bhanvad", "'bhanvad"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'bhanvad", "'bhanvad"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (')', ')'), ('nx.draw', 'nx.draw'), ('(', '('), ('g', 'g'), (',', ','), ('with_labels=True', 'with_labels=tru'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('networkxDemo.py', 'networkxdemo.pi'), ('import', 'import'), ('networkx', 'networkx'), ('nx', 'nx'), ('gD', 'gd'), ('=', '='), ('nx.DiGraph', 'nx.digraph'), ('(', '('), (')', ')'), ('#', '#'), ('directed', 'direct'), ('graph', 'graph'), ('gD.add_edge', 'gd.add_edg'), ('(', '('), ("'Modi", "'modi"), ("'", "'"), (',', ','), ("'Arjun", "'arjun"), ("'", "'"), (')', ')'), ('gD.add_edge', 'gd.add_edg'), ('(', '('), ("'Modi", "'modi"), ("'", "'"), (',', ','), ("'GambhavaSir", "'gambhavasir"), ("'", "'"), (')', ')'), ('gD.add_edge', 'gd.add_edg'), ('(', '('), ("'GambhavaSir", "'gambhavasir"), ("'", "'"), (',', ','), ("'Modi", "'modi"), ("'", "'"), (')', ')'), ('nx.draw', 'nx.draw'), ('(', '('), ('gD', 'gd'), (',', ','), ('with_labels=True', 'with_labels=tru'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('networkxDemo.py', 'networkxdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–Data', '–data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'networkx'), ('(', '('), ('cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('Install', 'instal'), ('pip', 'pip'), ('install', 'instal'), ('networkx', 'networkx'), ('conda', 'conda'), ('install', 'instal'), ('networkx', 'networkx'), ('Types', 'type'), ('network', 'network'), ('graph', 'graph'), ('Undirected', 'undirect'), ('Directed', 'direct'), ('Weighted', 'weight'), ('graph', 'graph'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'networkx'), ('(', '('), ('example', 'exampl'), (')', ')'), ('import', 'import'), ('networkx', 'networkx'), ('nx', 'nx'), ('g', 'g'), ('=', '='), ('nx.Graph', 'nx.graph'), ('(', '('), (')', ')'), ('#', '#'), ('undirected', 'undirect'), ('graph', 'graph'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'rajkot", 'rajkot'), ("'", "'"), (',', ','), ("'junagadh", 'junagadh'), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'junagadh", 'junagadh'), ("'", "'"), (',', ','), ("'porbandar", 'porbandar'), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'rajkot", 'rajkot'), ("'", "'"), (',', ','), ("'jamnagar", 'jamnagar'), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'jamnagar", 'jamnagar'), ("'", "'"), (',', ','), ("'bhanvad", 'bhanvad'), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edg'), ('(', '('), ("'bhanvad", 'bhanvad'), ("'", "'"), (',', ','), ("'porbandar", 'porbandar'), ("'", "'"), (')', ')'), ('nx.draw', 'nx.draw'), ('(', '('), ('g', 'g'), (',', ','), ('with_labels=True', 'with_labels=tru'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('networkxDemo.py', 'networkxdemo.pi'), ('import', 'import'), ('networkx', 'networkx'), ('nx', 'nx'), ('gD', 'gd'), ('=', '='), ('nx.DiGraph', 'nx.digraph'), ('(', '('), (')', ')'), ('#', '#'), ('directed', 'direct'), ('graph', 'graph'), ('gD.add_edge', 'gd.add_edg'), ('(', '('), ("'Modi", 'modi'), ("'", "'"), (',', ','), ("'Arjun", 'arjun'), ("'", "'"), (')', ')'), ('gD.add_edge', 'gd.add_edg'), ('(', '('), ("'Modi", 'modi'), ("'", "'"), (',', ','), ("'GambhavaSir", 'gambhavasir'), ("'", "'"), (')', ')'), ('gD.add_edge', 'gd.add_edg'), ('(', '('), ("'GambhavaSir", 'gambhavasir'), ("'", "'"), (',', ','), ("'Modi", 'modi'), ("'", "'"), (')', ')'), ('nx.draw', 'nx.draw'), ('(', '('), ('gD', 'gd'), (',', ','), ('with_labels=True', 'with_labels=tru'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('networkxDemo.py', 'networkxdemo.pi'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–Data', '–data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'networkx'), ('(', '('), ('cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('Install', 'Install'), ('pip', 'pip'), ('install', 'install'), ('networkx', 'networkx'), ('conda', 'conda'), ('install', 'install'), ('networkx', 'networkx'), ('Types', 'Types'), ('network', 'network'), ('graph', 'graph'), ('Undirected', 'Undirected'), ('Directed', 'Directed'), ('Weighted', 'Weighted'), ('graph', 'graph'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'NetworkX'), ('(', '('), ('example', 'example'), (')', ')'), ('import', 'import'), ('networkx', 'networkx'), ('nx', 'nx'), ('g', 'g'), ('=', '='), ('nx.Graph', 'nx.Graph'), ('(', '('), (')', ')'), ('#', '#'), ('undirected', 'undirected'), ('graph', 'graph'), ('g.add_edge', 'g.add_edge'), ('(', '('), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'junagadh", "'junagadh"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edge'), ('(', '('), ("'junagadh", "'junagadh"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edge'), ('(', '('), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'jamnagar", "'jamnagar"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edge'), ('(', '('), ("'jamnagar", "'jamnagar"), ("'", "'"), (',', ','), ("'bhanvad", "'bhanvad"), ("'", "'"), (')', ')'), ('g.add_edge', 'g.add_edge'), ('(', '('), ("'bhanvad", "'bhanvad"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (')', ')'), ('nx.draw', 'nx.draw'), ('(', '('), ('g', 'g'), (',', ','), ('with_labels=True', 'with_labels=True'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('networkxDemo.py', 'networkxDemo.py'), ('import', 'import'), ('networkx', 'networkx'), ('nx', 'nx'), ('gD', 'gD'), ('=', '='), ('nx.DiGraph', 'nx.DiGraph'), ('(', '('), (')', ')'), ('#', '#'), ('directed', 'directed'), ('graph', 'graph'), ('gD.add_edge', 'gD.add_edge'), ('(', '('), ("'Modi", "'Modi"), ("'", "'"), (',', ','), ("'Arjun", "'Arjun"), ("'", "'"), (')', ')'), ('gD.add_edge', 'gD.add_edge'), ('(', '('), ("'Modi", "'Modi"), ("'", "'"), (',', ','), ("'GambhavaSir", "'GambhavaSir"), ("'", "'"), (')', ')'), ('gD.add_edge', 'gD.add_edge'), ('(', '('), ("'GambhavaSir", "'GambhavaSir"), ("'", "'"), (',', ','), ("'Modi", "'Modi"), ("'", "'"), (')', ')'), ('nx.draw', 'nx.draw'), ('(', '('), ('gD', 'gD'), (',', ','), ('with_labels=True', 'with_labels=True'), (')', ')'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('networkxDemo.py', 'networkxDemo.py'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–Data', '–Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('NetworkX', 'NetworkX'), ('(', '('), ('cont', 'cont'), ('.', '.'), (')', ')')]



============================ Sentence 54 =============================

We can use many analysis functions available in NetworkX library, some of functions are as below nx.shortest_path(g,'rajkot','porbandar') Will return ['rajkot', 'junagadh', 'porbandar'] nx.clustering(g) Will return clustering value for each node nx.degree_centrality(g) Will return the degree of centrality for each node, we can find most popular/influential node using this method. 


>> Tokens are: 
 ['We', 'use', 'many', 'analysis', 'functions', 'available', 'NetworkX', 'library', ',', 'functions', 'nx.shortest_path', '(', 'g', ',', "'rajkot", "'", ',', "'porbandar", "'", ')', 'Will', 'return', '[', "'rajkot", "'", ',', "'junagadh", "'", ',', "'porbandar", "'", ']', 'nx.clustering', '(', 'g', ')', 'Will', 'return', 'clustering', 'value', 'node', 'nx.degree_centrality', '(', 'g', ')', 'Will', 'return', 'degree', 'centrality', 'node', ',', 'find', 'popular/influential', 'node', 'using', 'method', '.']

>> Bigrams are: 
 [('We', 'use'), ('use', 'many'), ('many', 'analysis'), ('analysis', 'functions'), ('functions', 'available'), ('available', 'NetworkX'), ('NetworkX', 'library'), ('library', ','), (',', 'functions'), ('functions', 'nx.shortest_path'), ('nx.shortest_path', '('), ('(', 'g'), ('g', ','), (',', "'rajkot"), ("'rajkot", "'"), ("'", ','), (',', "'porbandar"), ("'porbandar", "'"), ("'", ')'), (')', 'Will'), ('Will', 'return'), ('return', '['), ('[', "'rajkot"), ("'rajkot", "'"), ("'", ','), (',', "'junagadh"), ("'junagadh", "'"), ("'", ','), (',', "'porbandar"), ("'porbandar", "'"), ("'", ']'), (']', 'nx.clustering'), ('nx.clustering', '('), ('(', 'g'), ('g', ')'), (')', 'Will'), ('Will', 'return'), ('return', 'clustering'), ('clustering', 'value'), ('value', 'node'), ('node', 'nx.degree_centrality'), ('nx.degree_centrality', '('), ('(', 'g'), ('g', ')'), (')', 'Will'), ('Will', 'return'), ('return', 'degree'), ('degree', 'centrality'), ('centrality', 'node'), ('node', ','), (',', 'find'), ('find', 'popular/influential'), ('popular/influential', 'node'), ('node', 'using'), ('using', 'method'), ('method', '.')]

>> Trigrams are: 
 [('We', 'use', 'many'), ('use', 'many', 'analysis'), ('many', 'analysis', 'functions'), ('analysis', 'functions', 'available'), ('functions', 'available', 'NetworkX'), ('available', 'NetworkX', 'library'), ('NetworkX', 'library', ','), ('library', ',', 'functions'), (',', 'functions', 'nx.shortest_path'), ('functions', 'nx.shortest_path', '('), ('nx.shortest_path', '(', 'g'), ('(', 'g', ','), ('g', ',', "'rajkot"), (',', "'rajkot", "'"), ("'rajkot", "'", ','), ("'", ',', "'porbandar"), (',', "'porbandar", "'"), ("'porbandar", "'", ')'), ("'", ')', 'Will'), (')', 'Will', 'return'), ('Will', 'return', '['), ('return', '[', "'rajkot"), ('[', "'rajkot", "'"), ("'rajkot", "'", ','), ("'", ',', "'junagadh"), (',', "'junagadh", "'"), ("'junagadh", "'", ','), ("'", ',', "'porbandar"), (',', "'porbandar", "'"), ("'porbandar", "'", ']'), ("'", ']', 'nx.clustering'), (']', 'nx.clustering', '('), ('nx.clustering', '(', 'g'), ('(', 'g', ')'), ('g', ')', 'Will'), (')', 'Will', 'return'), ('Will', 'return', 'clustering'), ('return', 'clustering', 'value'), ('clustering', 'value', 'node'), ('value', 'node', 'nx.degree_centrality'), ('node', 'nx.degree_centrality', '('), ('nx.degree_centrality', '(', 'g'), ('(', 'g', ')'), ('g', ')', 'Will'), (')', 'Will', 'return'), ('Will', 'return', 'degree'), ('return', 'degree', 'centrality'), ('degree', 'centrality', 'node'), ('centrality', 'node', ','), ('node', ',', 'find'), (',', 'find', 'popular/influential'), ('find', 'popular/influential', 'node'), ('popular/influential', 'node', 'using'), ('node', 'using', 'method'), ('using', 'method', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('use', 'VBP'), ('many', 'JJ'), ('analysis', 'NN'), ('functions', 'NNS'), ('available', 'JJ'), ('NetworkX', 'NNP'), ('library', 'NN'), (',', ','), ('functions', 'NNS'), ('nx.shortest_path', 'VBP'), ('(', '('), ('g', 'NN'), (',', ','), ("'rajkot", "''"), ("'", "''"), (',', ','), ("'porbandar", 'NNP'), ("'", 'POS'), (')', ')'), ('Will', 'MD'), ('return', 'VB'), ('[', 'NNP'), ("'rajkot", 'NNP'), ("'", 'POS'), (',', ','), ("'junagadh", 'NNP'), ("'", 'POS'), (',', ','), ("'porbandar", "''"), ("'", 'POS'), (']', 'NN'), ('nx.clustering', 'NN'), ('(', '('), ('g', 'NN'), (')', ')'), ('Will', 'NNP'), ('return', 'VBP'), ('clustering', 'VBG'), ('value', 'NN'), ('node', 'NN'), ('nx.degree_centrality', 'NN'), ('(', '('), ('g', 'NN'), (')', ')'), ('Will', 'NNP'), ('return', 'VBP'), ('degree', 'JJ'), ('centrality', 'NN'), ('node', 'NN'), (',', ','), ('find', 'VBP'), ('popular/influential', 'JJ'), ('node', 'NN'), ('using', 'VBG'), ('method', 'NN'), ('.', '.')]

 (S
  We/PRP
  use/VBP
  (NP many/JJ analysis/NN functions/NNS)
  (NP available/JJ NetworkX/NNP library/NN)
  ,/,
  (NP functions/NNS)
  nx.shortest_path/VBP
  (/(
  (NP g/NN)
  ,/,
  'rajkot/''
  '/''
  ,/,
  (NP 'porbandar/NNP)
  '/POS
  )/)
  Will/MD
  return/VB
  (NP [/NNP 'rajkot/NNP)
  '/POS
  ,/,
  (NP 'junagadh/NNP)
  '/POS
  ,/,
  'porbandar/''
  '/POS
  (NP ]/NN nx.clustering/NN)
  (/(
  (NP g/NN)
  )/)
  (NP Will/NNP)
  return/VBP
  clustering/VBG
  (NP value/NN node/NN nx.degree_centrality/NN)
  (/(
  (NP g/NN)
  )/)
  (NP Will/NNP)
  return/VBP
  (NP degree/JJ centrality/NN node/NN)
  ,/,
  find/VBP
  (NP popular/influential/JJ node/NN)
  using/VBG
  (NP method/NN)
  ./.) 


>> Noun Phrases are: 
 ['many analysis functions', 'available NetworkX library', 'functions', 'g', "'porbandar", "[ 'rajkot", "'junagadh", '] nx.clustering', 'g', 'Will', 'value node nx.degree_centrality', 'g', 'Will', 'degree centrality node', 'popular/influential node', 'method']

>> Named Entities are: 
 [('ORGANIZATION', 'NetworkX')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('use', 'use'), ('many', 'mani'), ('analysis', 'analysi'), ('functions', 'function'), ('available', 'avail'), ('NetworkX', 'networkx'), ('library', 'librari'), (',', ','), ('functions', 'function'), ('nx.shortest_path', 'nx.shortest_path'), ('(', '('), ('g', 'g'), (',', ','), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (')', ')'), ('Will', 'will'), ('return', 'return'), ('[', '['), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'junagadh", "'junagadh"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (']', ']'), ('nx.clustering', 'nx.cluster'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'will'), ('return', 'return'), ('clustering', 'cluster'), ('value', 'valu'), ('node', 'node'), ('nx.degree_centrality', 'nx.degree_centr'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'will'), ('return', 'return'), ('degree', 'degre'), ('centrality', 'central'), ('node', 'node'), (',', ','), ('find', 'find'), ('popular/influential', 'popular/influenti'), ('node', 'node'), ('using', 'use'), ('method', 'method'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('use', 'use'), ('many', 'mani'), ('analysis', 'analysi'), ('functions', 'function'), ('available', 'avail'), ('NetworkX', 'networkx'), ('library', 'librari'), (',', ','), ('functions', 'function'), ('nx.shortest_path', 'nx.shortest_path'), ('(', '('), ('g', 'g'), (',', ','), ("'rajkot", 'rajkot'), ("'", "'"), (',', ','), ("'porbandar", 'porbandar'), ("'", "'"), (')', ')'), ('Will', 'will'), ('return', 'return'), ('[', '['), ("'rajkot", 'rajkot'), ("'", "'"), (',', ','), ("'junagadh", 'junagadh'), ("'", "'"), (',', ','), ("'porbandar", 'porbandar'), ("'", "'"), (']', ']'), ('nx.clustering', 'nx.cluster'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'will'), ('return', 'return'), ('clustering', 'cluster'), ('value', 'valu'), ('node', 'node'), ('nx.degree_centrality', 'nx.degree_centr'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'will'), ('return', 'return'), ('degree', 'degre'), ('centrality', 'central'), ('node', 'node'), (',', ','), ('find', 'find'), ('popular/influential', 'popular/influenti'), ('node', 'node'), ('using', 'use'), ('method', 'method'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('use', 'use'), ('many', 'many'), ('analysis', 'analysis'), ('functions', 'function'), ('available', 'available'), ('NetworkX', 'NetworkX'), ('library', 'library'), (',', ','), ('functions', 'function'), ('nx.shortest_path', 'nx.shortest_path'), ('(', '('), ('g', 'g'), (',', ','), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (')', ')'), ('Will', 'Will'), ('return', 'return'), ('[', '['), ("'rajkot", "'rajkot"), ("'", "'"), (',', ','), ("'junagadh", "'junagadh"), ("'", "'"), (',', ','), ("'porbandar", "'porbandar"), ("'", "'"), (']', ']'), ('nx.clustering', 'nx.clustering'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'Will'), ('return', 'return'), ('clustering', 'clustering'), ('value', 'value'), ('node', 'node'), ('nx.degree_centrality', 'nx.degree_centrality'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'Will'), ('return', 'return'), ('degree', 'degree'), ('centrality', 'centrality'), ('node', 'node'), (',', ','), ('find', 'find'), ('popular/influential', 'popular/influential'), ('node', 'node'), ('using', 'using'), ('method', 'method'), ('.', '.')]



============================ Sentence 55 =============================

nx.density(g) Will return the density of the graph. 


>> Tokens are: 
 ['nx.density', '(', 'g', ')', 'Will', 'return', 'density', 'graph', '.']

>> Bigrams are: 
 [('nx.density', '('), ('(', 'g'), ('g', ')'), (')', 'Will'), ('Will', 'return'), ('return', 'density'), ('density', 'graph'), ('graph', '.')]

>> Trigrams are: 
 [('nx.density', '(', 'g'), ('(', 'g', ')'), ('g', ')', 'Will'), (')', 'Will', 'return'), ('Will', 'return', 'density'), ('return', 'density', 'graph'), ('density', 'graph', '.')]

>> POS Tags are: 
 [('nx.density', 'NN'), ('(', '('), ('g', 'NN'), (')', ')'), ('Will', 'NNP'), ('return', 'VBP'), ('density', 'NN'), ('graph', 'NN'), ('.', '.')]

 (S
  (NP nx.density/NN)
  (/(
  (NP g/NN)
  )/)
  (NP Will/NNP)
  return/VBP
  (NP density/NN graph/NN)
  ./.) 


>> Noun Phrases are: 
 ['nx.density', 'g', 'Will', 'density graph']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('nx.density', 'nx.densiti'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'will'), ('return', 'return'), ('density', 'densiti'), ('graph', 'graph'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('nx.density', 'nx.densiti'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'will'), ('return', 'return'), ('density', 'densiti'), ('graph', 'graph'), ('.', '.')]

>> Lemmatization: 
 [('nx.density', 'nx.density'), ('(', '('), ('g', 'g'), (')', ')'), ('Will', 'Will'), ('return', 'return'), ('density', 'density'), ('graph', 'graph'), ('.', '.')]



============================ Sentence 56 =============================

The density is 0 for a graph without edges and 1 for a complete graph. 


>> Tokens are: 
 ['The', 'density', '0', 'graph', 'without', 'edges', '1', 'complete', 'graph', '.']

>> Bigrams are: 
 [('The', 'density'), ('density', '0'), ('0', 'graph'), ('graph', 'without'), ('without', 'edges'), ('edges', '1'), ('1', 'complete'), ('complete', 'graph'), ('graph', '.')]

>> Trigrams are: 
 [('The', 'density', '0'), ('density', '0', 'graph'), ('0', 'graph', 'without'), ('graph', 'without', 'edges'), ('without', 'edges', '1'), ('edges', '1', 'complete'), ('1', 'complete', 'graph'), ('complete', 'graph', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('density', 'NN'), ('0', 'CD'), ('graph', 'NN'), ('without', 'IN'), ('edges', 'NNS'), ('1', 'CD'), ('complete', 'JJ'), ('graph', 'NN'), ('.', '.')]

 (S
  (NP The/DT density/NN)
  0/CD
  (NP graph/NN)
  without/IN
  (NP edges/NNS)
  1/CD
  (NP complete/JJ graph/NN)
  ./.) 


>> Noun Phrases are: 
 ['The density', 'graph', 'edges', 'complete graph']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('density', 'densiti'), ('0', '0'), ('graph', 'graph'), ('without', 'without'), ('edges', 'edg'), ('1', '1'), ('complete', 'complet'), ('graph', 'graph'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('density', 'densiti'), ('0', '0'), ('graph', 'graph'), ('without', 'without'), ('edges', 'edg'), ('1', '1'), ('complete', 'complet'), ('graph', 'graph'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('density', 'density'), ('0', '0'), ('graph', 'graph'), ('without', 'without'), ('edges', 'edge'), ('1', '1'), ('complete', 'complete'), ('graph', 'graph'), ('.', '.')]



============================ Sentence 57 =============================

nx.info(g) Return a summary of information for the graph G. The summary includes the number of nodes and edges, and their average degree. 


>> Tokens are: 
 ['nx.info', '(', 'g', ')', 'Return', 'summary', 'information', 'graph', 'G.', 'The', 'summary', 'includes', 'number', 'nodes', 'edges', ',', 'average', 'degree', '.']

>> Bigrams are: 
 [('nx.info', '('), ('(', 'g'), ('g', ')'), (')', 'Return'), ('Return', 'summary'), ('summary', 'information'), ('information', 'graph'), ('graph', 'G.'), ('G.', 'The'), ('The', 'summary'), ('summary', 'includes'), ('includes', 'number'), ('number', 'nodes'), ('nodes', 'edges'), ('edges', ','), (',', 'average'), ('average', 'degree'), ('degree', '.')]

>> Trigrams are: 
 [('nx.info', '(', 'g'), ('(', 'g', ')'), ('g', ')', 'Return'), (')', 'Return', 'summary'), ('Return', 'summary', 'information'), ('summary', 'information', 'graph'), ('information', 'graph', 'G.'), ('graph', 'G.', 'The'), ('G.', 'The', 'summary'), ('The', 'summary', 'includes'), ('summary', 'includes', 'number'), ('includes', 'number', 'nodes'), ('number', 'nodes', 'edges'), ('nodes', 'edges', ','), ('edges', ',', 'average'), (',', 'average', 'degree'), ('average', 'degree', '.')]

>> POS Tags are: 
 [('nx.info', 'NN'), ('(', '('), ('g', 'NN'), (')', ')'), ('Return', 'NNP'), ('summary', 'JJ'), ('information', 'NN'), ('graph', 'NN'), ('G.', 'NNP'), ('The', 'DT'), ('summary', 'JJ'), ('includes', 'VBZ'), ('number', 'NN'), ('nodes', 'NNS'), ('edges', 'NNS'), (',', ','), ('average', 'JJ'), ('degree', 'NN'), ('.', '.')]

 (S
  (NP nx.info/NN)
  (/(
  (NP g/NN)
  )/)
  (NP Return/NNP)
  (NP summary/JJ information/NN graph/NN G./NNP)
  The/DT
  summary/JJ
  includes/VBZ
  (NP number/NN nodes/NNS edges/NNS)
  ,/,
  (NP average/JJ degree/NN)
  ./.) 


>> Noun Phrases are: 
 ['nx.info', 'g', 'Return', 'summary information graph G.', 'number nodes edges', 'average degree']

>> Named Entities are: 
 [('PERSON', 'Return')] 

>> Stemming using Porter Stemmer: 
 [('nx.info', 'nx.info'), ('(', '('), ('g', 'g'), (')', ')'), ('Return', 'return'), ('summary', 'summari'), ('information', 'inform'), ('graph', 'graph'), ('G.', 'g.'), ('The', 'the'), ('summary', 'summari'), ('includes', 'includ'), ('number', 'number'), ('nodes', 'node'), ('edges', 'edg'), (',', ','), ('average', 'averag'), ('degree', 'degre'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('nx.info', 'nx.info'), ('(', '('), ('g', 'g'), (')', ')'), ('Return', 'return'), ('summary', 'summari'), ('information', 'inform'), ('graph', 'graph'), ('G.', 'g.'), ('The', 'the'), ('summary', 'summari'), ('includes', 'includ'), ('number', 'number'), ('nodes', 'node'), ('edges', 'edg'), (',', ','), ('average', 'averag'), ('degree', 'degre'), ('.', '.')]

>> Lemmatization: 
 [('nx.info', 'nx.info'), ('(', '('), ('g', 'g'), (')', ')'), ('Return', 'Return'), ('summary', 'summary'), ('information', 'information'), ('graph', 'graph'), ('G.', 'G.'), ('The', 'The'), ('summary', 'summary'), ('includes', 'includes'), ('number', 'number'), ('nodes', 'node'), ('edges', 'edge'), (',', ','), ('average', 'average'), ('degree', 'degree'), ('.', '.')]



============================ Sentence 58 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 04 – Data Visualization ‹#›                                /docProps/thumbnail.jpeg 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '04', '–', 'Data', 'Visualization', '‹', '#', '›', '/docProps/thumbnail.jpeg']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '04'), ('04', '–'), ('–', 'Data'), ('Data', 'Visualization'), ('Visualization', '‹'), ('‹', '#'), ('#', '›'), ('›', '/docProps/thumbnail.jpeg')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '04'), ('Unit', '04', '–'), ('04', '–', 'Data'), ('–', 'Data', 'Visualization'), ('Data', 'Visualization', '‹'), ('Visualization', '‹', '#'), ('‹', '#', '›'), ('#', '›', '/docProps/thumbnail.jpeg')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('04', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Visualization', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('/docProps/thumbnail.jpeg', 'NN')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  04/CD
  (NP –/NNP Data/NNP Visualization/NNP ‹/NNP)
  #/#
  (NP ›/NNP /docProps/thumbnail.jpeg/NN)) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Visualization ‹', '› /docProps/thumbnail.jpeg']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('04', '04'), ('–', '–'), ('Data', 'data'), ('Visualization', 'visual'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('04', '04'), ('–', '–'), ('Data', 'Data'), ('Visualization', 'Visualization'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('/docProps/thumbnail.jpeg', '/docProps/thumbnail.jpeg')]

