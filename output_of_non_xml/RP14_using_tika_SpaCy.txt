				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

IQBAL MUHAMMAD AND ZHU YAN: SUPERVISED MACHINE 


>> Tokens are: 
[IQBAL, MUHAMMAD, ZHU, YAN, :, SUPERVISED, MACHINE] 

>> PoS Tags are: 
[('IQBAL', 'NOUN'), ('MUHAMMAD', 'PROPN'), ('ZHU', 'PROPN'), ('YAN', 'PROPN'), (':', 'PUNCT'), ('SUPERVISED', 'ADJ'), ('MACHINE', 'NOUN')] 

>> Dependency Tags are: 
[('IQBAL', 'compound'), ('MUHAMMAD', 'ROOT'), ('ZHU', 'compound'), ('YAN', 'conj'), (':', 'punct'), ('SUPERVISED', 'amod'), ('MACHINE', 'punct')]

>> Bigrams: 
[[IQBAL, MUHAMMAD], [MUHAMMAD, ZHU], [ZHU, YAN], [YAN, :], [:, SUPERVISED], [SUPERVISED, MACHINE]]

>> Trigrams: 
[[IQBAL, MUHAMMAD, ZHU], [MUHAMMAD, ZHU, YAN], [ZHU, YAN, :], [YAN, :, SUPERVISED], [:, SUPERVISED, MACHINE]]

>> Noun Phrases are: 
[IQBAL MUHAMMAD, ZHU YAN]

>> Named Entities are: 
[('IQBAL', 'PERSON'), ('ZHU YAN', 'PERSON')]


============================ Sentence 2 =============================

LEARNING APPROACHES: 


>> Tokens are: 
[LEARNING, APPROACHES, :] 

>> PoS Tags are: 
[('LEARNING', 'NOUN'), ('APPROACHES', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('LEARNING', 'compound'), ('APPROACHES', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[LEARNING, APPROACHES], [APPROACHES, :]]

>> Trigrams: 
[[LEARNING, APPROACHES, :]]

>> Noun Phrases are: 
[LEARNING APPROACHES]

>> Named Entities are: 
[]


============================ Sentence 3 =============================

A SURVEY   DOI: 10.21917/ijsc.2015.0133  946   SUPERVISED MACHINE LEARNING APPROACHES: A SURVEY    


>> Tokens are: 
[SURVEY,   , DOI, :, 10.21917, /, ijsc.2015.0133,  , 946,   , SUPERVISED, MACHINE, LEARNING, APPROACHES, :, SURVEY,   ] 

>> PoS Tags are: 
[('SURVEY', 'NOUN'), ('  ', 'SPACE'), ('DOI', 'PROPN'), (':', 'PUNCT'), ('10.21917', 'NUM'), ('/', 'SYM'), ('ijsc.2015.0133', 'PROPN'), (' ', 'SPACE'), ('946', 'NUM'), ('  ', 'SPACE'), ('SUPERVISED', 'ADJ'), ('MACHINE', 'NOUN'), ('LEARNING', 'NOUN'), ('APPROACHES', 'NOUN'), (':', 'PUNCT'), ('SURVEY', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('SURVEY', 'ROOT'), ('  ', 'appos'), ('DOI', 'appos'), (':', 'punct'), ('10.21917', 'appos'), ('/', 'punct'), ('ijsc.2015.0133', 'appos'), (' ', 'appos'), ('946', 'nummod'), ('  ', 'appos'), ('SUPERVISED', 'amod'), ('MACHINE', 'appos'), ('LEARNING', 'compound'), ('APPROACHES', 'appos'), (':', 'punct'), ('SURVEY', 'appos'), ('  ', 'appos')]

>> Bigrams: 
[[SURVEY,   ], [  , DOI], [DOI, :], [:, 10.21917], [10.21917, /], [/, ijsc.2015.0133], [ijsc.2015.0133,  ], [ , 946], [946,   ], [  , SUPERVISED], [SUPERVISED, MACHINE], [MACHINE, LEARNING], [LEARNING, APPROACHES], [APPROACHES, :], [:, SURVEY], [SURVEY,   ]]

>> Trigrams: 
[[SURVEY,   , DOI], [  , DOI, :], [DOI, :, 10.21917], [:, 10.21917, /], [10.21917, /, ijsc.2015.0133], [/, ijsc.2015.0133,  ], [ijsc.2015.0133,  , 946], [ , 946,   ], [946,   , SUPERVISED], [  , SUPERVISED, MACHINE], [SUPERVISED, MACHINE, LEARNING], [MACHINE, LEARNING, APPROACHES], [LEARNING, APPROACHES, :], [APPROACHES, :, SURVEY], [:, SURVEY,   ]]

>> Noun Phrases are: 
[A SURVEY, DOI, /ijsc.2015.0133, SUPERVISED MACHINE, LEARNING APPROACHES, A SURVEY]

>> Named Entities are: 
[('10.21917', 'CARDINAL'), ('946', 'CARDINAL')]


============================ Sentence 4 =============================

Iqbal Muhammad 1  and Zhu Yan  2  School of Information Sciences and Technology, Southwest Jiaotong University, China   E-mail:  1 muhammadiqbal72@yahoo.com,   2 yzhu@swjtu.edu.cn    


>> Tokens are: 
[Iqbal, Muhammad, 1,  , Zhu, Yan,  , 2,  , School, Information, Sciences, Technology, ,, Southwest, Jiaotong, University, ,, China,   , E, -, mail, :,  , 1, muhammadiqbal72@yahoo.com, ,,   , 2, yzhu@swjtu.edu.cn,   ] 

>> PoS Tags are: 
[('Iqbal', 'PROPN'), ('Muhammad', 'PROPN'), ('1', 'NUM'), (' ', 'SPACE'), ('Zhu', 'PROPN'), ('Yan', 'PROPN'), (' ', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('School', 'PROPN'), ('Information', 'PROPN'), ('Sciences', 'PROPN'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Southwest', 'PROPN'), ('Jiaotong', 'PROPN'), ('University', 'PROPN'), (',', 'PUNCT'), ('China', 'PROPN'), ('  ', 'SPACE'), ('E', 'NOUN'), ('-', 'NOUN'), ('mail', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('1', 'NUM'), ('muhammadiqbal72@yahoo.com', 'X'), (',', 'PUNCT'), ('  ', 'SPACE'), ('2', 'NUM'), ('yzhu@swjtu.edu.cn', 'NUM'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Iqbal', 'compound'), ('Muhammad', 'ROOT'), ('1', 'nummod'), (' ', 'appos'), ('Zhu', 'compound'), ('Yan', 'conj'), (' ', 'appos'), ('2', 'nummod'), (' ', 'appos'), ('School', 'appos'), ('Information', 'compound'), ('Sciences', 'pobj'), ('Technology', 'conj'), (',', 'punct'), ('Southwest', 'compound'), ('Jiaotong', 'compound'), ('University', 'appos'), (',', 'punct'), ('China', 'appos'), ('  ', 'nummod'), ('E', 'appos'), ('-', 'appos'), ('mail', 'appos'), (':', 'punct'), (' ', 'appos'), ('1', 'nummod'), ('muhammadiqbal72@yahoo.com', 'appos'), (',', 'punct'), ('  ', 'nmod'), ('2', 'nummod'), ('yzhu@swjtu.edu.cn', 'compound'), ('  ', 'appos')]

>> Bigrams: 
[[Iqbal, Muhammad], [Muhammad, 1], [1,  ], [ , Zhu], [Zhu, Yan], [Yan,  ], [ , 2], [2,  ], [ , School], [School, Information], [Information, Sciences], [Sciences, Technology], [Technology, ,], [,, Southwest], [Southwest, Jiaotong], [Jiaotong, University], [University, ,], [,, China], [China,   ], [  , E], [E, -], [-, mail], [mail, :], [:,  ], [ , 1], [1, muhammadiqbal72@yahoo.com], [muhammadiqbal72@yahoo.com, ,], [,,   ], [  , 2], [2, yzhu@swjtu.edu.cn], [yzhu@swjtu.edu.cn,   ]]

>> Trigrams: 
[[Iqbal, Muhammad, 1], [Muhammad, 1,  ], [1,  , Zhu], [ , Zhu, Yan], [Zhu, Yan,  ], [Yan,  , 2], [ , 2,  ], [2,  , School], [ , School, Information], [School, Information, Sciences], [Information, Sciences, Technology], [Sciences, Technology, ,], [Technology, ,, Southwest], [,, Southwest, Jiaotong], [Southwest, Jiaotong, University], [Jiaotong, University, ,], [University, ,, China], [,, China,   ], [China,   , E], [  , E, -], [E, -, mail], [-, mail, :], [mail, :,  ], [:,  , 1], [ , 1, muhammadiqbal72@yahoo.com], [1, muhammadiqbal72@yahoo.com, ,], [muhammadiqbal72@yahoo.com, ,,   ], [,,   , 2], [  , 2, yzhu@swjtu.edu.cn], [2, yzhu@swjtu.edu.cn,   ]]

>> Noun Phrases are: 
[Iqbal Muhammad, Zhu Yan, School, Information Sciences, Technology, Southwest Jiaotong University, China,   E, -, mail]

>> Named Entities are: 
[('Iqbal', 'PERSON'), ('1  ', 'TIME'), ('Zhu Yan', 'PERSON'), ('2', 'CARDINAL'), ('School of Information Sciences and Technology', 'ORG'), ('Southwest Jiaotong University', 'ORG'), ('China', 'GPE')]


============================ Sentence 5 =============================

Abstract   One of the core objectives of machine learning is to instruct   computers to use data or past experience to solve a given problem. 


>> Tokens are: 
[Abstract,   , core, objectives, machine, learning, instruct,   , computers, use, data, past, experience, solve, given, problem, .] 

>> PoS Tags are: 
[('Abstract', 'PROPN'), ('  ', 'SPACE'), ('core', 'ADJ'), ('objectives', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('instruct', 'VERB'), ('  ', 'SPACE'), ('computers', 'NOUN'), ('use', 'VERB'), ('data', 'NOUN'), ('past', 'ADJ'), ('experience', 'NOUN'), ('solve', 'VERB'), ('given', 'VERB'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Abstract', 'compound'), ('  ', 'compound'), ('core', 'amod'), ('objectives', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('instruct', 'xcomp'), ('  ', 'nummod'), ('computers', 'dobj'), ('use', 'xcomp'), ('data', 'dobj'), ('past', 'amod'), ('experience', 'conj'), ('solve', 'xcomp'), ('given', 'amod'), ('problem', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Abstract,   ], [  , core], [core, objectives], [objectives, machine], [machine, learning], [learning, instruct], [instruct,   ], [  , computers], [computers, use], [use, data], [data, past], [past, experience], [experience, solve], [solve, given], [given, problem], [problem, .]]

>> Trigrams: 
[[Abstract,   , core], [  , core, objectives], [core, objectives, machine], [objectives, machine, learning], [machine, learning, instruct], [learning, instruct,   ], [instruct,   , computers], [  , computers, use], [computers, use, data], [use, data, past], [data, past, experience], [past, experience, solve], [experience, solve, given], [solve, given, problem], [given, problem, .]]

>> Noun Phrases are: 
[the core objectives, machine learning,   computers, data, past experience, a given problem]

>> Named Entities are: 
[('One', 'CARDINAL')]


============================ Sentence 6 =============================

A   good number of successful applications of machine learning exist   already, including classifier to be trained on email messages to learn   in order to distinguish between spam and non-spam messages,   systems that analyze past sales data to predict customer buying   behavior, fraud detection etc. 


>> Tokens are: 
[  , good, number, successful, applications, machine, learning, exist,   , ,, including, classifier, trained, email, messages, learn,   , order, distinguish, spam, non, -, spam, messages, ,,   , systems, analyze, past, sales, data, predict, customer, buying,   , behavior, ,, fraud, detection, etc, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('good', 'ADJ'), ('number', 'NOUN'), ('successful', 'ADJ'), ('applications', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('exist', 'VERB'), ('  ', 'SPACE'), (',', 'PUNCT'), ('including', 'VERB'), ('classifier', 'NOUN'), ('trained', 'VERB'), ('email', 'NOUN'), ('messages', 'NOUN'), ('learn', 'VERB'), ('  ', 'SPACE'), ('order', 'NOUN'), ('distinguish', 'VERB'), ('spam', 'NOUN'), ('non', 'ADJ'), ('-', 'ADJ'), ('spam', 'ADJ'), ('messages', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('systems', 'NOUN'), ('analyze', 'VERB'), ('past', 'ADP'), ('sales', 'NOUN'), ('data', 'NOUN'), ('predict', 'VERB'), ('customer', 'NOUN'), ('buying', 'VERB'), ('  ', 'SPACE'), ('behavior', 'NOUN'), (',', 'PUNCT'), ('fraud', 'NOUN'), ('detection', 'NOUN'), ('etc', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('good', 'amod'), ('number', 'nsubj'), ('successful', 'amod'), ('applications', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), ('exist', 'ROOT'), ('  ', 'dobj'), (',', 'punct'), ('including', 'prep'), ('classifier', 'pobj'), ('trained', 'relcl'), ('email', 'compound'), ('messages', 'pobj'), ('learn', 'advcl'), ('  ', 'dobj'), ('order', 'pobj'), ('distinguish', 'acl'), ('spam', 'nmod'), ('non', 'conj'), ('-', 'amod'), ('spam', 'amod'), ('messages', 'pobj'), (',', 'punct'), ('  ', 'compound'), ('systems', 'conj'), ('analyze', 'relcl'), ('past', 'prep'), ('sales', 'compound'), ('data', 'pobj'), ('predict', 'advcl'), ('customer', 'nsubj'), ('buying', 'ccomp'), ('  ', 'nummod'), ('behavior', 'dobj'), (',', 'punct'), ('fraud', 'compound'), ('detection', 'nmod'), ('etc', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , good], [good, number], [number, successful], [successful, applications], [applications, machine], [machine, learning], [learning, exist], [exist,   ], [  , ,], [,, including], [including, classifier], [classifier, trained], [trained, email], [email, messages], [messages, learn], [learn,   ], [  , order], [order, distinguish], [distinguish, spam], [spam, non], [non, -], [-, spam], [spam, messages], [messages, ,], [,,   ], [  , systems], [systems, analyze], [analyze, past], [past, sales], [sales, data], [data, predict], [predict, customer], [customer, buying], [buying,   ], [  , behavior], [behavior, ,], [,, fraud], [fraud, detection], [detection, etc], [etc, .]]

>> Trigrams: 
[[  , good, number], [good, number, successful], [number, successful, applications], [successful, applications, machine], [applications, machine, learning], [machine, learning, exist], [learning, exist,   ], [exist,   , ,], [  , ,, including], [,, including, classifier], [including, classifier, trained], [classifier, trained, email], [trained, email, messages], [email, messages, learn], [messages, learn,   ], [learn,   , order], [  , order, distinguish], [order, distinguish, spam], [distinguish, spam, non], [spam, non, -], [non, -, spam], [-, spam, messages], [spam, messages, ,], [messages, ,,   ], [,,   , systems], [  , systems, analyze], [systems, analyze, past], [analyze, past, sales], [past, sales, data], [sales, data, predict], [data, predict, customer], [predict, customer, buying], [customer, buying,   ], [buying,   , behavior], [  , behavior, ,], [behavior, ,, fraud], [,, fraud, detection], [fraud, detection, etc], [detection, etc, .]]

>> Noun Phrases are: 
[A   good number, successful applications, machine learning, classifier, email messages, order, spam and non-spam messages,   systems, sales data, customer,   behavior]

>> Named Entities are: 
[]


============================ Sentence 7 =============================

Machine learning can be applied as   association analysis through Supervised learning, Unsupervised   learning and Reinforcement Learning but in this study we will focus   on strength and weakness of supervised learning classification   algorithms. 


>> Tokens are: 
[Machine, learning, applied,   , association, analysis, Supervised, learning, ,, Unsupervised,   , learning, Reinforcement, Learning, study, focus,   , strength, weakness, supervised, learning, classification,   , algorithms, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('applied', 'VERB'), ('  ', 'SPACE'), ('association', 'NOUN'), ('analysis', 'NOUN'), ('Supervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('Unsupervised', 'PROPN'), ('  ', 'SPACE'), ('learning', 'VERB'), ('Reinforcement', 'PROPN'), ('Learning', 'PROPN'), ('study', 'NOUN'), ('focus', 'VERB'), ('  ', 'SPACE'), ('strength', 'NOUN'), ('weakness', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'VERB'), ('classification', 'NOUN'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'nsubjpass'), ('applied', 'ROOT'), ('  ', 'compound'), ('association', 'compound'), ('analysis', 'pobj'), ('Supervised', 'amod'), ('learning', 'pobj'), (',', 'punct'), ('Unsupervised', 'amod'), ('  ', 'npadvmod'), ('learning', 'advcl'), ('Reinforcement', 'compound'), ('Learning', 'conj'), ('study', 'pobj'), ('focus', 'conj'), ('  ', 'dobj'), ('strength', 'pobj'), ('weakness', 'conj'), ('supervised', 'amod'), ('learning', 'amod'), ('classification', 'compound'), ('  ', 'nummod'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, applied], [applied,   ], [  , association], [association, analysis], [analysis, Supervised], [Supervised, learning], [learning, ,], [,, Unsupervised], [Unsupervised,   ], [  , learning], [learning, Reinforcement], [Reinforcement, Learning], [Learning, study], [study, focus], [focus,   ], [  , strength], [strength, weakness], [weakness, supervised], [supervised, learning], [learning, classification], [classification,   ], [  , algorithms], [algorithms, .]]

>> Trigrams: 
[[Machine, learning, applied], [learning, applied,   ], [applied,   , association], [  , association, analysis], [association, analysis, Supervised], [analysis, Supervised, learning], [Supervised, learning, ,], [learning, ,, Unsupervised], [,, Unsupervised,   ], [Unsupervised,   , learning], [  , learning, Reinforcement], [learning, Reinforcement, Learning], [Reinforcement, Learning, study], [Learning, study, focus], [study, focus,   ], [focus,   , strength], [  , strength, weakness], [strength, weakness, supervised], [weakness, supervised, learning], [supervised, learning, classification], [learning, classification,   ], [classification,   , algorithms], [  , algorithms, .]]

>> Noun Phrases are: 
[Machine learning,   association analysis, Supervised learning, this study, we, strength, weakness, supervised learning classification   algorithms]

>> Named Entities are: 
[('Reinforcement Learning', 'WORK_OF_ART')]


============================ Sentence 8 =============================

The goal of supervised learning is to build a concise   model of the distribution of class labels in terms of predictor features. 


>> Tokens are: 
[goal, supervised, learning, build, concise,   , model, distribution, class, labels, terms, predictor, features, .] 

>> PoS Tags are: 
[('goal', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('build', 'VERB'), ('concise', 'NOUN'), ('  ', 'SPACE'), ('model', 'NOUN'), ('distribution', 'NOUN'), ('class', 'NOUN'), ('labels', 'NOUN'), ('terms', 'NOUN'), ('predictor', 'NOUN'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('goal', 'nsubj'), ('supervised', 'amod'), ('learning', 'pobj'), ('build', 'xcomp'), ('concise', 'amod'), ('  ', 'compound'), ('model', 'dobj'), ('distribution', 'pobj'), ('class', 'compound'), ('labels', 'pobj'), ('terms', 'pobj'), ('predictor', 'compound'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[goal, supervised], [supervised, learning], [learning, build], [build, concise], [concise,   ], [  , model], [model, distribution], [distribution, class], [class, labels], [labels, terms], [terms, predictor], [predictor, features], [features, .]]

>> Trigrams: 
[[goal, supervised, learning], [supervised, learning, build], [learning, build, concise], [build, concise,   ], [concise,   , model], [  , model, distribution], [model, distribution, class], [distribution, class, labels], [class, labels, terms], [labels, terms, predictor], [terms, predictor, features], [predictor, features, .]]

>> Noun Phrases are: 
[The goal, supervised learning, a concise   model, the distribution, class labels, terms, predictor features]

>> Named Entities are: 
[]


============================ Sentence 9 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

The resulting classifier is then used to assign class labels to the testing   instances where the values of the predictor features are known, but   the value of the class label is unknown. 


>> Tokens are: 
[resulting, classifier, assign, class, labels, testing,   , instances, values, predictor, features, known, ,,   , value, class, label, unknown, .] 

>> PoS Tags are: 
[('resulting', 'VERB'), ('classifier', 'NOUN'), ('assign', 'VERB'), ('class', 'NOUN'), ('labels', 'NOUN'), ('testing', 'NOUN'), ('  ', 'SPACE'), ('instances', 'NOUN'), ('values', 'NOUN'), ('predictor', 'NOUN'), ('features', 'NOUN'), ('known', 'VERB'), (',', 'PUNCT'), ('  ', 'SPACE'), ('value', 'NOUN'), ('class', 'NOUN'), ('label', 'NOUN'), ('unknown', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('resulting', 'amod'), ('classifier', 'nsubjpass'), ('assign', 'xcomp'), ('class', 'compound'), ('labels', 'dobj'), ('testing', 'pobj'), ('  ', 'nsubj'), ('instances', 'dobj'), ('values', 'nsubjpass'), ('predictor', 'compound'), ('features', 'pobj'), ('known', 'relcl'), (',', 'punct'), ('  ', 'nmod'), ('value', 'nsubj'), ('class', 'compound'), ('label', 'pobj'), ('unknown', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[resulting, classifier], [classifier, assign], [assign, class], [class, labels], [labels, testing], [testing,   ], [  , instances], [instances, values], [values, predictor], [predictor, features], [features, known], [known, ,], [,,   ], [  , value], [value, class], [class, label], [label, unknown], [unknown, .]]

>> Trigrams: 
[[resulting, classifier, assign], [classifier, assign, class], [assign, class, labels], [class, labels, testing], [labels, testing,   ], [testing,   , instances], [  , instances, values], [instances, values, predictor], [values, predictor, features], [predictor, features, known], [features, known, ,], [known, ,,   ], [,,   , value], [  , value, class], [value, class, label], [class, label, unknown], [label, unknown, .]]

>> Noun Phrases are: 
[The resulting classifier, class labels, the testing,   instances, the values, the predictor features,   the value, the class label]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

We are optimistic that this   study will help new researchers to guiding new research areas and to   compare the effectiveness and impuissance of supervised learning   algorithms. 


>> Tokens are: 
[optimistic,   , study, help, new, researchers, guiding, new, research, areas,   , compare, effectiveness, impuissance, supervised, learning,   , algorithms, .] 

>> PoS Tags are: 
[('optimistic', 'ADJ'), ('  ', 'SPACE'), ('study', 'NOUN'), ('help', 'VERB'), ('new', 'ADJ'), ('researchers', 'NOUN'), ('guiding', 'VERB'), ('new', 'ADJ'), ('research', 'NOUN'), ('areas', 'NOUN'), ('  ', 'SPACE'), ('compare', 'VERB'), ('effectiveness', 'NOUN'), ('impuissance', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'VERB'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('optimistic', 'acomp'), ('  ', 'compound'), ('study', 'nsubj'), ('help', 'ccomp'), ('new', 'amod'), ('researchers', 'dobj'), ('guiding', 'pcomp'), ('new', 'amod'), ('research', 'compound'), ('areas', 'dobj'), ('  ', 'pobj'), ('compare', 'conj'), ('effectiveness', 'dobj'), ('impuissance', 'conj'), ('supervised', 'amod'), ('learning', 'amod'), ('  ', 'nummod'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[optimistic,   ], [  , study], [study, help], [help, new], [new, researchers], [researchers, guiding], [guiding, new], [new, research], [research, areas], [areas,   ], [  , compare], [compare, effectiveness], [effectiveness, impuissance], [impuissance, supervised], [supervised, learning], [learning,   ], [  , algorithms], [algorithms, .]]

>> Trigrams: 
[[optimistic,   , study], [  , study, help], [study, help, new], [help, new, researchers], [new, researchers, guiding], [researchers, guiding, new], [guiding, new, research], [new, research, areas], [research, areas,   ], [areas,   , compare], [  , compare, effectiveness], [compare, effectiveness, impuissance], [effectiveness, impuissance, supervised], [impuissance, supervised, learning], [supervised, learning,   ], [learning,   , algorithms], [  , algorithms, .]]

>> Noun Phrases are: 
[We, this   study, new researchers, new research areas, the effectiveness, impuissance, supervised learning   algorithms]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

  Keywords:   Supervised Machine Learning, SVM, DT, Classifier   1. 


>> Tokens are: 
[  , Keywords, :,   , Supervised, Machine, Learning, ,, SVM, ,, DT, ,, Classifier,   , 1, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Keywords', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('Supervised', 'ADJ'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (',', 'PUNCT'), ('SVM', 'PROPN'), (',', 'PUNCT'), ('DT', 'PROPN'), (',', 'PUNCT'), ('Classifier', 'PROPN'), ('  ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('Keywords', 'ROOT'), (':', 'punct'), ('  ', 'appos'), ('Supervised', 'amod'), ('Machine', 'compound'), ('Learning', 'appos'), (',', 'punct'), ('SVM', 'appos'), (',', 'punct'), ('DT', 'conj'), (',', 'punct'), ('Classifier', 'conj'), ('  ', 'npadvmod'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , Keywords], [Keywords, :], [:,   ], [  , Supervised], [Supervised, Machine], [Machine, Learning], [Learning, ,], [,, SVM], [SVM, ,], [,, DT], [DT, ,], [,, Classifier], [Classifier,   ], [  , 1], [1, .]]

>> Trigrams: 
[[  , Keywords, :], [Keywords, :,   ], [:,   , Supervised], [  , Supervised, Machine], [Supervised, Machine, Learning], [Machine, Learning, ,], [Learning, ,, SVM], [,, SVM, ,], [SVM, ,, DT], [,, DT, ,], [DT, ,, Classifier], [,, Classifier,   ], [Classifier,   , 1], [  , 1, .]]

>> Noun Phrases are: 
[  Keywords, Supervised Machine Learning, SVM, DT, Classifier]

>> Named Entities are: 
[('SVM', 'ORG'), ('DT', 'ORG')]


============================ Sentence 13 =============================

INTRODUCTION  Machine Learning (ML) can be considered as a subfield of   Artificial Intelligence since those algorithms can be seen as   building blocks to make computers learn to behave more   intelligently by somehow generalizing rather that just storing   and retrieving data items like a database system and other   applications would do. 


>> Tokens are: 
[INTRODUCTION,  , Machine, Learning, (, ML, ), considered, subfield,   , Artificial, Intelligence, algorithms, seen,   , building, blocks, computers, learn, behave,   , intelligently, generalizing, storing,   , retrieving, data, items, like, database, system,   , applications, .] 

>> PoS Tags are: 
[('INTRODUCTION', 'NOUN'), (' ', 'SPACE'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('(', 'PUNCT'), ('ML', 'PROPN'), (')', 'PUNCT'), ('considered', 'VERB'), ('subfield', 'NOUN'), ('  ', 'SPACE'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('algorithms', 'NOUN'), ('seen', 'VERB'), ('  ', 'SPACE'), ('building', 'VERB'), ('blocks', 'NOUN'), ('computers', 'NOUN'), ('learn', 'VERB'), ('behave', 'VERB'), ('  ', 'SPACE'), ('intelligently', 'ADV'), ('generalizing', 'VERB'), ('storing', 'VERB'), ('  ', 'SPACE'), ('retrieving', 'VERB'), ('data', 'NOUN'), ('items', 'NOUN'), ('like', 'ADP'), ('database', 'NOUN'), ('system', 'NOUN'), ('  ', 'SPACE'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('INTRODUCTION', 'nsubjpass'), (' ', 'nummod'), ('Machine', 'compound'), ('Learning', 'appos'), ('(', 'punct'), ('ML', 'appos'), (')', 'punct'), ('considered', 'ROOT'), ('subfield', 'pobj'), ('  ', 'compound'), ('Artificial', 'compound'), ('Intelligence', 'pobj'), ('algorithms', 'nsubjpass'), ('seen', 'advcl'), ('  ', 'nsubj'), ('building', 'pcomp'), ('blocks', 'dobj'), ('computers', 'nsubj'), ('learn', 'ccomp'), ('behave', 'xcomp'), ('  ', 'dobj'), ('intelligently', 'advmod'), ('generalizing', 'pcomp'), ('storing', 'ccomp'), ('  ', 'dobj'), ('retrieving', 'conj'), ('data', 'compound'), ('items', 'dobj'), ('like', 'prep'), ('database', 'compound'), ('system', 'pobj'), ('  ', 'compound'), ('applications', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[INTRODUCTION,  ], [ , Machine], [Machine, Learning], [Learning, (], [(, ML], [ML, )], [), considered], [considered, subfield], [subfield,   ], [  , Artificial], [Artificial, Intelligence], [Intelligence, algorithms], [algorithms, seen], [seen,   ], [  , building], [building, blocks], [blocks, computers], [computers, learn], [learn, behave], [behave,   ], [  , intelligently], [intelligently, generalizing], [generalizing, storing], [storing,   ], [  , retrieving], [retrieving, data], [data, items], [items, like], [like, database], [database, system], [system,   ], [  , applications], [applications, .]]

>> Trigrams: 
[[INTRODUCTION,  , Machine], [ , Machine, Learning], [Machine, Learning, (], [Learning, (, ML], [(, ML, )], [ML, ), considered], [), considered, subfield], [considered, subfield,   ], [subfield,   , Artificial], [  , Artificial, Intelligence], [Artificial, Intelligence, algorithms], [Intelligence, algorithms, seen], [algorithms, seen,   ], [seen,   , building], [  , building, blocks], [building, blocks, computers], [blocks, computers, learn], [computers, learn, behave], [learn, behave,   ], [behave,   , intelligently], [  , intelligently, generalizing], [intelligently, generalizing, storing], [generalizing, storing,   ], [storing,   , retrieving], [  , retrieving, data], [retrieving, data, items], [data, items, like], [items, like, database], [like, database, system], [database, system,   ], [system,   , applications], [  , applications, .]]

>> Noun Phrases are: 
[INTRODUCTION, Machine Learning, ML, a subfield,   Artificial Intelligence, those algorithms, blocks, computers, data items, a database system, other   applications]

>> Named Entities are: 
[('Artificial Intelligence', 'ORG')]


============================ Sentence 14 =============================

Machine learning has got its inspiration   from a variety of academic disciplines, including computer   science, statistics, biology, and psychology. 


>> Tokens are: 
[Machine, learning, got, inspiration,   , variety, academic, disciplines, ,, including, computer,   , science, ,, statistics, ,, biology, ,, psychology, .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('got', 'VERB'), ('inspiration', 'NOUN'), ('  ', 'SPACE'), ('variety', 'NOUN'), ('academic', 'ADJ'), ('disciplines', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('computer', 'NOUN'), ('  ', 'SPACE'), ('science', 'NOUN'), (',', 'PUNCT'), ('statistics', 'NOUN'), (',', 'PUNCT'), ('biology', 'NOUN'), (',', 'PUNCT'), ('psychology', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'nsubj'), ('got', 'ROOT'), ('inspiration', 'dobj'), ('  ', 'appos'), ('variety', 'pobj'), ('academic', 'amod'), ('disciplines', 'pobj'), (',', 'punct'), ('including', 'prep'), ('computer', 'compound'), ('  ', 'compound'), ('science', 'pobj'), (',', 'punct'), ('statistics', 'conj'), (',', 'punct'), ('biology', 'conj'), (',', 'punct'), ('psychology', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning, got], [got, inspiration], [inspiration,   ], [  , variety], [variety, academic], [academic, disciplines], [disciplines, ,], [,, including], [including, computer], [computer,   ], [  , science], [science, ,], [,, statistics], [statistics, ,], [,, biology], [biology, ,], [,, psychology], [psychology, .]]

>> Trigrams: 
[[Machine, learning, got], [learning, got, inspiration], [got, inspiration,   ], [inspiration,   , variety], [  , variety, academic], [variety, academic, disciplines], [academic, disciplines, ,], [disciplines, ,, including], [,, including, computer], [including, computer,   ], [computer,   , science], [  , science, ,], [science, ,, statistics], [,, statistics, ,], [statistics, ,, biology], [,, biology, ,], [biology, ,, psychology], [,, psychology, .]]

>> Noun Phrases are: 
[Machine learning, its inspiration, a variety, academic disciplines, computer   science, statistics, biology, psychology]

>> Named Entities are: 
[]


============================ Sentence 15 =============================

The core function of   Machine learning attempts is to tell computers how to   automatically find a good predictor based on past experiences   and this job is done by good classifier. 


>> Tokens are: 
[core, function,   , Machine, learning, attempts, tell, computers,   , automatically, find, good, predictor, based, past, experiences,   , job, good, classifier, .] 

>> PoS Tags are: 
[('core', 'NOUN'), ('function', 'NOUN'), ('  ', 'SPACE'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('attempts', 'NOUN'), ('tell', 'VERB'), ('computers', 'NOUN'), ('  ', 'SPACE'), ('automatically', 'ADV'), ('find', 'VERB'), ('good', 'ADJ'), ('predictor', 'NOUN'), ('based', 'VERB'), ('past', 'ADJ'), ('experiences', 'NOUN'), ('  ', 'SPACE'), ('job', 'NOUN'), ('good', 'ADJ'), ('classifier', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('core', 'compound'), ('function', 'nsubj'), ('  ', 'poss'), ('Machine', 'compound'), ('learning', 'compound'), ('attempts', 'pobj'), ('tell', 'xcomp'), ('computers', 'dobj'), ('  ', 'pobj'), ('automatically', 'advmod'), ('find', 'ccomp'), ('good', 'amod'), ('predictor', 'dobj'), ('based', 'acl'), ('past', 'amod'), ('experiences', 'pobj'), ('  ', 'appos'), ('job', 'nsubjpass'), ('good', 'amod'), ('classifier', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[core, function], [function,   ], [  , Machine], [Machine, learning], [learning, attempts], [attempts, tell], [tell, computers], [computers,   ], [  , automatically], [automatically, find], [find, good], [good, predictor], [predictor, based], [based, past], [past, experiences], [experiences,   ], [  , job], [job, good], [good, classifier], [classifier, .]]

>> Trigrams: 
[[core, function,   ], [function,   , Machine], [  , Machine, learning], [Machine, learning, attempts], [learning, attempts, tell], [attempts, tell, computers], [tell, computers,   ], [computers,   , automatically], [  , automatically, find], [automatically, find, good], [find, good, predictor], [good, predictor, based], [predictor, based, past], [based, past, experiences], [past, experiences,   ], [experiences,   , job], [  , job, good], [job, good, classifier], [good, classifier, .]]

>> Noun Phrases are: 
[The core function,   Machine learning attempts, computers, a good predictor, past experiences, this job, good classifier]

>> Named Entities are: 
[]


============================ Sentence 16 =============================

Classification is the   process of using a model to predict unknown values (output   variables), using a number of known values (input variables). 


>> Tokens are: 
[Classification,   , process, model, predict, unknown, values, (, output,   , variables, ), ,, number, known, values, (, input, variables, ), .] 

>> PoS Tags are: 
[('Classification', 'NOUN'), ('  ', 'SPACE'), ('process', 'NOUN'), ('model', 'NOUN'), ('predict', 'VERB'), ('unknown', 'ADJ'), ('values', 'NOUN'), ('(', 'PUNCT'), ('output', 'NOUN'), ('  ', 'SPACE'), ('variables', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('number', 'NOUN'), ('known', 'VERB'), ('values', 'NOUN'), ('(', 'PUNCT'), ('input', 'NOUN'), ('variables', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Classification', 'nsubj'), ('  ', 'nummod'), ('process', 'attr'), ('model', 'dobj'), ('predict', 'xcomp'), ('unknown', 'amod'), ('values', 'dobj'), ('(', 'punct'), ('output', 'compound'), ('  ', 'compound'), ('variables', 'appos'), (')', 'punct'), (',', 'punct'), ('number', 'dobj'), ('known', 'amod'), ('values', 'pobj'), ('(', 'punct'), ('input', 'compound'), ('variables', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Classification,   ], [  , process], [process, model], [model, predict], [predict, unknown], [unknown, values], [values, (], [(, output], [output,   ], [  , variables], [variables, )], [), ,], [,, number], [number, known], [known, values], [values, (], [(, input], [input, variables], [variables, )], [), .]]

>> Trigrams: 
[[Classification,   , process], [  , process, model], [process, model, predict], [model, predict, unknown], [predict, unknown, values], [unknown, values, (], [values, (, output], [(, output,   ], [output,   , variables], [  , variables, )], [variables, ), ,], [), ,, number], [,, number, known], [number, known, values], [known, values, (], [values, (, input], [(, input, variables], [input, variables, )], [variables, ), .]]

>> Noun Phrases are: 
[Classification, the   process, a model, unknown values, output   variables, a number, known values, input variables]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

  The classification process is performed on data set D which   holds following objects:    Set size →  AAAAA ,,2,1  , where A  denotes the number of attributes or the size of the set A.   Class label→ C: Target attribute;  CcccC ,,2,1  , where C  is the number of classes and 2C .   


>> Tokens are: 
[  , classification, process, performed, data, set, D,   , holds, following, objects, :,   , , Set, size, →, , AAAAA, ,, ,, 2,1, , ,,  , denotes, number, attributes, size, set, A.,  , , Class, label→, C, :, Target, attribute, ;, , CcccC, ,, ,, 2,1, , ,, C,  , number, classes, 2C, .,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('classification', 'NOUN'), ('process', 'NOUN'), ('performed', 'VERB'), ('data', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), ('  ', 'SPACE'), ('holds', 'VERB'), ('following', 'VERB'), ('objects', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('\uf0b7', 'NOUN'), ('Set', 'ADJ'), ('size', 'NOUN'), ('→', 'SYM'), ('\uf07b', 'PROPN'), ('\uf07dAAAAA', 'PROPN'), (',', 'PUNCT'), (',', 'PUNCT'), ('2,1', 'NUM'), ('\uf04b\uf03d', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('denotes', 'VERB'), ('number', 'NOUN'), ('attributes', 'NOUN'), ('size', 'NOUN'), ('set', 'ADJ'), ('A.', 'NOUN'), (' ', 'SPACE'), ('\uf0b7', 'X'), ('Class', 'PROPN'), ('label→', 'PROPN'), ('C', 'NOUN'), (':', 'PUNCT'), ('Target', 'NOUN'), ('attribute', 'NOUN'), (';', 'PUNCT'), ('\uf07b', 'NOUN'), ('\uf07dCcccC', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('2,1', 'NUM'), ('\uf04b\uf03d', 'PROPN'), (',', 'PUNCT'), ('C', 'PROPN'), (' ', 'SPACE'), ('number', 'NOUN'), ('classes', 'NOUN'), ('2\uf0b3C', 'NUM'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('classification', 'compound'), ('process', 'nsubjpass'), ('performed', 'ROOT'), ('data', 'compound'), ('set', 'amod'), ('D', 'pobj'), ('  ', 'nsubj'), ('holds', 'advcl'), ('following', 'xcomp'), ('objects', 'dobj'), (':', 'punct'), ('  ', 'appos'), ('\uf0b7', 'appos'), ('Set', 'amod'), ('size', 'appos'), ('→', 'prep'), ('\uf07b', 'compound'), ('\uf07dAAAAA', 'appos'), (',', 'punct'), (',', 'punct'), ('2,1', 'appos'), ('\uf04b\uf03d', 'appos'), (',', 'punct'), (' ', 'nsubj'), ('denotes', 'relcl'), ('number', 'dobj'), ('attributes', 'pobj'), ('size', 'conj'), ('set', 'amod'), ('A.', 'nmod'), (' ', 'dep'), ('\uf0b7', 'nmod'), ('Class', 'compound'), ('label→', 'compound'), ('C', 'pobj'), (':', 'punct'), ('Target', 'compound'), ('attribute', 'appos'), (';', 'punct'), ('\uf07b', 'compound'), ('\uf07dCcccC', 'conj'), (',', 'punct'), (',', 'punct'), ('2,1', 'appos'), ('\uf04b\uf03d', 'appos'), (',', 'punct'), ('C', 'compound'), (' ', 'nsubj'), ('number', 'attr'), ('classes', 'pobj'), ('2\uf0b3C', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , classification], [classification, process], [process, performed], [performed, data], [data, set], [set, D], [D,   ], [  , holds], [holds, following], [following, objects], [objects, :], [:,   ], [  , ], [, Set], [Set, size], [size, →], [→, ], [, AAAAA], [AAAAA, ,], [,, ,], [,, 2,1], [2,1, ], [, ,], [,,  ], [ , denotes], [denotes, number], [number, attributes], [attributes, size], [size, set], [set, A.], [A.,  ], [ , ], [, Class], [Class, label→], [label→, C], [C, :], [:, Target], [Target, attribute], [attribute, ;], [;, ], [, CcccC], [CcccC, ,], [,, ,], [,, 2,1], [2,1, ], [, ,], [,, C], [C,  ], [ , number], [number, classes], [classes, 2C], [2C, .], [.,  ]]

>> Trigrams: 
[[  , classification, process], [classification, process, performed], [process, performed, data], [performed, data, set], [data, set, D], [set, D,   ], [D,   , holds], [  , holds, following], [holds, following, objects], [following, objects, :], [objects, :,   ], [:,   , ], [  , , Set], [, Set, size], [Set, size, →], [size, →, ], [→, , AAAAA], [, AAAAA, ,], [AAAAA, ,, ,], [,, ,, 2,1], [,, 2,1, ], [2,1, , ,], [, ,,  ], [,,  , denotes], [ , denotes, number], [denotes, number, attributes], [number, attributes, size], [attributes, size, set], [size, set, A.], [set, A.,  ], [A.,  , ], [ , , Class], [, Class, label→], [Class, label→, C], [label→, C, :], [C, :, Target], [:, Target, attribute], [Target, attribute, ;], [attribute, ;, ], [;, , CcccC], [, CcccC, ,], [CcccC, ,, ,], [,, ,, 2,1], [,, 2,1, ], [2,1, , ,], [, ,, C], [,, C,  ], [C,  , number], [ , number, classes], [number, classes, 2C], [classes, 2C, .], [2C, .,  ]]

>> Noun Phrases are: 
[The classification process, data set D, objects, , Set size,  AAAAA, , the number, attributes, the size, the set A.   Class label→ C, Target attribute,  CcccC, , the number, classes]

>> Named Entities are: 
[('\uf0b7', 'CARDINAL'), ('2,1', 'CARDINAL'), ('\uf04b\uf03d', 'ORG'), ('\uf0b7', 'CARDINAL'), ('2,1', 'CARDINAL'), ('\uf04b\uf03d', 'ORG'), ('2\uf0b3C', 'GPE')]


============================ Sentence 18 =============================

Given a data set D, the core objective of ML is to produce a   prediction/classification function to relate values of attributes in   A and classes in C.   Data mining is one of the most tools of machine learning   among the number of different applications. 


>> Tokens are: 
[Given, data, set, D, ,, core, objective, ML, produce,   , prediction, /, classification, function, relate, values, attributes,   , classes, C.,   , Data, mining, tools, machine, learning,   , number, different, applications, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('data', 'NOUN'), ('set', 'VERB'), ('D', 'NOUN'), (',', 'PUNCT'), ('core', 'NOUN'), ('objective', 'NOUN'), ('ML', 'PROPN'), ('produce', 'VERB'), ('  ', 'SPACE'), ('prediction', 'NOUN'), ('/', 'SYM'), ('classification', 'NOUN'), ('function', 'NOUN'), ('relate', 'VERB'), ('values', 'NOUN'), ('attributes', 'NOUN'), ('  ', 'SPACE'), ('classes', 'NOUN'), ('C.', 'PROPN'), ('  ', 'SPACE'), ('Data', 'PROPN'), ('mining', 'NOUN'), ('tools', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('  ', 'SPACE'), ('number', 'NOUN'), ('different', 'ADJ'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('data', 'pobj'), ('set', 'acl'), ('D', 'pobj'), (',', 'punct'), ('core', 'compound'), ('objective', 'nsubj'), ('ML', 'pobj'), ('produce', 'xcomp'), ('  ', 'compound'), ('prediction', 'nmod'), ('/', 'punct'), ('classification', 'compound'), ('function', 'dobj'), ('relate', 'advcl'), ('values', 'dobj'), ('attributes', 'pobj'), ('  ', 'compound'), ('classes', 'conj'), ('C.', 'compound'), ('  ', 'compound'), ('Data', 'compound'), ('mining', 'pobj'), ('tools', 'pobj'), ('machine', 'pobj'), ('learning', 'acl'), ('  ', 'dobj'), ('number', 'pobj'), ('different', 'amod'), ('applications', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Given, data], [data, set], [set, D], [D, ,], [,, core], [core, objective], [objective, ML], [ML, produce], [produce,   ], [  , prediction], [prediction, /], [/, classification], [classification, function], [function, relate], [relate, values], [values, attributes], [attributes,   ], [  , classes], [classes, C.], [C.,   ], [  , Data], [Data, mining], [mining, tools], [tools, machine], [machine, learning], [learning,   ], [  , number], [number, different], [different, applications], [applications, .]]

>> Trigrams: 
[[Given, data, set], [data, set, D], [set, D, ,], [D, ,, core], [,, core, objective], [core, objective, ML], [objective, ML, produce], [ML, produce,   ], [produce,   , prediction], [  , prediction, /], [prediction, /, classification], [/, classification, function], [classification, function, relate], [function, relate, values], [relate, values, attributes], [values, attributes,   ], [attributes,   , classes], [  , classes, C.], [classes, C.,   ], [C.,   , Data], [  , Data, mining], [Data, mining, tools], [mining, tools, machine], [tools, machine, learning], [machine, learning,   ], [learning,   , number], [  , number, different], [number, different, applications], [different, applications, .]]

>> Noun Phrases are: 
[a data, D, the core objective, ML, a   prediction/classification function, values, attributes,   A, classes, C.   Data mining, the most tools, machine, the number, different applications]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 19 =============================

It is common that   people are often choosing a wrong choices during analysis phase   or, possibly, when trying to establish relationships between   multiple features. 


>> Tokens are: 
[common,   , people, choosing, wrong, choices, analysis, phase,   , ,, possibly, ,, trying, establish, relationships,   , multiple, features, .] 

>> PoS Tags are: 
[('common', 'ADJ'), ('  ', 'SPACE'), ('people', 'NOUN'), ('choosing', 'VERB'), ('wrong', 'ADJ'), ('choices', 'NOUN'), ('analysis', 'NOUN'), ('phase', 'NOUN'), ('  ', 'SPACE'), (',', 'PUNCT'), ('possibly', 'ADV'), (',', 'PUNCT'), ('trying', 'VERB'), ('establish', 'VERB'), ('relationships', 'NOUN'), ('  ', 'SPACE'), ('multiple', 'ADJ'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('common', 'acomp'), ('  ', 'nummod'), ('people', 'nsubj'), ('choosing', 'ccomp'), ('wrong', 'amod'), ('choices', 'dobj'), ('analysis', 'compound'), ('phase', 'pobj'), ('  ', 'appos'), (',', 'punct'), ('possibly', 'advmod'), (',', 'punct'), ('trying', 'advcl'), ('establish', 'xcomp'), ('relationships', 'dobj'), ('  ', 'nummod'), ('multiple', 'amod'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[common,   ], [  , people], [people, choosing], [choosing, wrong], [wrong, choices], [choices, analysis], [analysis, phase], [phase,   ], [  , ,], [,, possibly], [possibly, ,], [,, trying], [trying, establish], [establish, relationships], [relationships,   ], [  , multiple], [multiple, features], [features, .]]

>> Trigrams: 
[[common,   , people], [  , people, choosing], [people, choosing, wrong], [choosing, wrong, choices], [wrong, choices, analysis], [choices, analysis, phase], [analysis, phase,   ], [phase,   , ,], [  , ,, possibly], [,, possibly, ,], [possibly, ,, trying], [,, trying, establish], [trying, establish, relationships], [establish, relationships,   ], [relationships,   , multiple], [  , multiple, features], [multiple, features, .]]

>> Noun Phrases are: 
[It,   people, a wrong choices, analysis phase, relationships,   multiple features]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

Ultimately this makes it difficult for them to   explore solutions to certain problems. 


>> Tokens are: 
[Ultimately, makes, difficult,   , explore, solutions, certain, problems, .] 

>> PoS Tags are: 
[('Ultimately', 'ADV'), ('makes', 'VERB'), ('difficult', 'ADJ'), ('  ', 'SPACE'), ('explore', 'VERB'), ('solutions', 'NOUN'), ('certain', 'ADJ'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ultimately', 'advmod'), ('makes', 'ROOT'), ('difficult', 'ccomp'), ('  ', 'pobj'), ('explore', 'advcl'), ('solutions', 'dobj'), ('certain', 'amod'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Ultimately, makes], [makes, difficult], [difficult,   ], [  , explore], [explore, solutions], [solutions, certain], [certain, problems], [problems, .]]

>> Trigrams: 
[[Ultimately, makes, difficult], [makes, difficult,   ], [difficult,   , explore], [  , explore, solutions], [explore, solutions, certain], [solutions, certain, problems], [certain, problems, .]]

>> Noun Phrases are: 
[it, them, solutions, certain problems]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

Machine learning can   often be successfully applied to these problems, improving the   efficiency of systems and the designs of machines [1]. 


>> Tokens are: 
[Machine, learning,   , successfully, applied, problems, ,, improving,   , efficiency, systems, designs, machines, [, 1, ], .] 

>> PoS Tags are: 
[('Machine', 'NOUN'), ('learning', 'NOUN'), ('  ', 'SPACE'), ('successfully', 'ADV'), ('applied', 'VERB'), ('problems', 'NOUN'), (',', 'PUNCT'), ('improving', 'VERB'), ('  ', 'SPACE'), ('efficiency', 'NOUN'), ('systems', 'NOUN'), ('designs', 'NOUN'), ('machines', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Machine', 'compound'), ('learning', 'nsubjpass'), ('  ', 'nsubjpass'), ('successfully', 'advmod'), ('applied', 'ROOT'), ('problems', 'pobj'), (',', 'punct'), ('improving', 'advcl'), ('  ', 'nummod'), ('efficiency', 'dobj'), ('systems', 'pobj'), ('designs', 'conj'), ('machines', 'pobj'), ('[', 'punct'), ('1', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Machine, learning], [learning,   ], [  , successfully], [successfully, applied], [applied, problems], [problems, ,], [,, improving], [improving,   ], [  , efficiency], [efficiency, systems], [systems, designs], [designs, machines], [machines, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[Machine, learning,   ], [learning,   , successfully], [  , successfully, applied], [successfully, applied, problems], [applied, problems, ,], [problems, ,, improving], [,, improving,   ], [improving,   , efficiency], [  , efficiency, systems], [efficiency, systems, designs], [systems, designs, machines], [designs, machines, [], [machines, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[Machine learning, these problems, the   efficiency, systems, the designs, machines]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

In   machine learning algorithms every instance of particular dataset   is represented by using the same set of features. 


>> Tokens are: 
[  , machine, learning, algorithms, instance, particular, dataset,   , represented, set, features, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('instance', 'NOUN'), ('particular', 'ADJ'), ('dataset', 'NOUN'), ('  ', 'SPACE'), ('represented', 'VERB'), ('set', 'NOUN'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'poss'), ('machine', 'pobj'), ('learning', 'acl'), ('algorithms', 'dobj'), ('instance', 'nsubjpass'), ('particular', 'amod'), ('dataset', 'compound'), ('  ', 'pobj'), ('represented', 'ROOT'), ('set', 'dobj'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , machine], [machine, learning], [learning, algorithms], [algorithms, instance], [instance, particular], [particular, dataset], [dataset,   ], [  , represented], [represented, set], [set, features], [features, .]]

>> Trigrams: 
[[  , machine, learning], [machine, learning, algorithms], [learning, algorithms, instance], [algorithms, instance, particular], [instance, particular, dataset], [particular, dataset,   ], [dataset,   , represented], [  , represented, set], [represented, set, features], [set, features, .]]

>> Noun Phrases are: 
[  machine, algorithms, every instance, the same set, features]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

The nature of   these features could be continuous, categorical or binary. 


>> Tokens are: 
[nature,   , features, continuous, ,, categorical, binary, .] 

>> PoS Tags are: 
[('nature', 'NOUN'), ('  ', 'SPACE'), ('features', 'NOUN'), ('continuous', 'ADJ'), (',', 'PUNCT'), ('categorical', 'ADJ'), ('binary', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('nature', 'nsubj'), ('  ', 'pobj'), ('features', 'nsubj'), ('continuous', 'acomp'), (',', 'punct'), ('categorical', 'conj'), ('binary', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[nature,   ], [  , features], [features, continuous], [continuous, ,], [,, categorical], [categorical, binary], [binary, .]]

>> Trigrams: 
[[nature,   , features], [  , features, continuous], [features, continuous, ,], [continuous, ,, categorical], [,, categorical, binary], [categorical, binary, .]]

>> Noun Phrases are: 
[The nature, these features]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

If   instances are given with known labels (i.e.-- the corresponding   correct outputs) then the learning scheme is known as supervised   (see Table.1), while in unsupervised learning approach the   instances are unlabeled. 


>> Tokens are: 
[  , instances, given, known, labels, (, i.e.--, corresponding,   , correct, outputs, ), learning, scheme, known, supervised,   , (, Table.1, ), ,, unsupervised, learning, approach,   , instances, unlabeled, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('instances', 'NOUN'), ('given', 'VERB'), ('known', 'VERB'), ('labels', 'NOUN'), ('(', 'PUNCT'), ('i.e.--', 'ADP'), ('corresponding', 'ADJ'), ('  ', 'SPACE'), ('correct', 'ADJ'), ('outputs', 'NOUN'), (')', 'PUNCT'), ('learning', 'NOUN'), ('scheme', 'NOUN'), ('known', 'VERB'), ('supervised', 'ADJ'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('Table.1', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('approach', 'NOUN'), ('  ', 'SPACE'), ('instances', 'NOUN'), ('unlabeled', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('instances', 'nsubjpass'), ('given', 'advcl'), ('known', 'amod'), ('labels', 'pobj'), ('(', 'punct'), ('i.e.--', 'prep'), ('corresponding', 'amod'), ('  ', 'nmod'), ('correct', 'amod'), ('outputs', 'pobj'), (')', 'punct'), ('learning', 'compound'), ('scheme', 'nsubjpass'), ('known', 'ROOT'), ('supervised', 'amod'), ('  ', 'pobj'), ('(', 'punct'), ('Table.1', 'dobj'), (')', 'punct'), (',', 'punct'), ('unsupervised', 'amod'), ('learning', 'pobj'), ('approach', 'advcl'), ('  ', 'compound'), ('instances', 'nsubj'), ('unlabeled', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[  , instances], [instances, given], [given, known], [known, labels], [labels, (], [(, i.e.--], [i.e.--, corresponding], [corresponding,   ], [  , correct], [correct, outputs], [outputs, )], [), learning], [learning, scheme], [scheme, known], [known, supervised], [supervised,   ], [  , (], [(, Table.1], [Table.1, )], [), ,], [,, unsupervised], [unsupervised, learning], [learning, approach], [approach,   ], [  , instances], [instances, unlabeled], [unlabeled, .]]

>> Trigrams: 
[[  , instances, given], [instances, given, known], [given, known, labels], [known, labels, (], [labels, (, i.e.--], [(, i.e.--, corresponding], [i.e.--, corresponding,   ], [corresponding,   , correct], [  , correct, outputs], [correct, outputs, )], [outputs, ), learning], [), learning, scheme], [learning, scheme, known], [scheme, known, supervised], [known, supervised,   ], [supervised,   , (], [  , (, Table.1], [(, Table.1, )], [Table.1, ), ,], [), ,, unsupervised], [,, unsupervised, learning], [unsupervised, learning, approach], [learning, approach,   ], [approach,   , instances], [  , instances, unlabeled], [instances, unlabeled, .]]

>> Noun Phrases are: 
[  instances, known labels, the corresponding   correct outputs, the learning scheme, Table.1, unsupervised learning, the   instances]

>> Named Entities are: 
[]


============================ Sentence 25 =============================

Through applying these unsupervised   (clustering) algorithms, researchers are optimistic to discover   unknown, but useful, classes of items [3]. 


>> Tokens are: 
[applying, unsupervised,   , (, clustering, ), algorithms, ,, researchers, optimistic, discover,   , unknown, ,, useful, ,, classes, items, [, 3, ], .] 

>> PoS Tags are: 
[('applying', 'VERB'), ('unsupervised', 'ADJ'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('clustering', 'VERB'), (')', 'PUNCT'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('researchers', 'NOUN'), ('optimistic', 'ADJ'), ('discover', 'VERB'), ('  ', 'SPACE'), ('unknown', 'ADJ'), (',', 'PUNCT'), ('useful', 'ADJ'), (',', 'PUNCT'), ('classes', 'NOUN'), ('items', 'NOUN'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applying', 'pcomp'), ('unsupervised', 'amod'), ('  ', 'dobj'), ('(', 'punct'), ('clustering', 'pcomp'), (')', 'punct'), ('algorithms', 'dobj'), (',', 'punct'), ('researchers', 'nsubj'), ('optimistic', 'acomp'), ('discover', 'xcomp'), ('  ', 'dobj'), ('unknown', 'advmod'), (',', 'punct'), ('useful', 'amod'), (',', 'punct'), ('classes', 'conj'), ('items', 'pobj'), ('[', 'punct'), ('3', 'appos'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[applying, unsupervised], [unsupervised,   ], [  , (], [(, clustering], [clustering, )], [), algorithms], [algorithms, ,], [,, researchers], [researchers, optimistic], [optimistic, discover], [discover,   ], [  , unknown], [unknown, ,], [,, useful], [useful, ,], [,, classes], [classes, items], [items, [], [[, 3], [3, ]], [], .]]

>> Trigrams: 
[[applying, unsupervised,   ], [unsupervised,   , (], [  , (, clustering], [(, clustering, )], [clustering, ), algorithms], [), algorithms, ,], [algorithms, ,, researchers], [,, researchers, optimistic], [researchers, optimistic, discover], [optimistic, discover,   ], [discover,   , unknown], [  , unknown, ,], [unknown, ,, useful], [,, useful, ,], [useful, ,, classes], [,, classes, items], [classes, items, [], [items, [, 3], [[, 3, ]], [3, ], .]]

>> Noun Phrases are: 
[algorithms, researchers, useful, classes, items]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 26 =============================

Another kind of   machine learning is reinforcement learning. 


>> Tokens are: 
[kind,   , machine, learning, reinforcement, learning, .] 

>> PoS Tags are: 
[('kind', 'NOUN'), ('  ', 'SPACE'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('kind', 'nsubj'), ('  ', 'compound'), ('machine', 'compound'), ('learning', 'pobj'), ('reinforcement', 'compound'), ('learning', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[kind,   ], [  , machine], [machine, learning], [learning, reinforcement], [reinforcement, learning], [learning, .]]

>> Trigrams: 
[[kind,   , machine], [  , machine, learning], [machine, learning, reinforcement], [learning, reinforcement, learning], [reinforcement, learning, .]]

>> Noun Phrases are: 
[Another kind,   machine learning, reinforcement learning]

>> Named Entities are: 
[]


============================ Sentence 27 =============================

Here the training   information provided to the learning system by the environment   (i.e.-- external trainer) is in the form of a scalar reinforcement   signal that constitutes a measure of how well the system   operates. 


>> Tokens are: 
[training,   , information, provided, learning, system, environment,   , (, i.e.--, external, trainer, ), form, scalar, reinforcement,   , signal, constitutes, measure, system,   , operates, .] 

>> PoS Tags are: 
[('training', 'NOUN'), ('  ', 'SPACE'), ('information', 'NOUN'), ('provided', 'VERB'), ('learning', 'NOUN'), ('system', 'NOUN'), ('environment', 'NOUN'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('i.e.--', 'X'), ('external', 'ADJ'), ('trainer', 'NOUN'), (')', 'PUNCT'), ('form', 'NOUN'), ('scalar', 'ADJ'), ('reinforcement', 'NOUN'), ('  ', 'SPACE'), ('signal', 'VERB'), ('constitutes', 'VERB'), ('measure', 'NOUN'), ('system', 'NOUN'), ('  ', 'SPACE'), ('operates', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('training', 'compound'), ('  ', 'compound'), ('information', 'nsubj'), ('provided', 'acl'), ('learning', 'compound'), ('system', 'pobj'), ('environment', 'pobj'), ('  ', 'appos'), ('(', 'punct'), ('i.e.--', 'nmod'), ('external', 'amod'), ('trainer', 'appos'), (')', 'punct'), ('form', 'pobj'), ('scalar', 'amod'), ('reinforcement', 'compound'), ('  ', 'nsubj'), ('signal', 'pobj'), ('constitutes', 'relcl'), ('measure', 'dobj'), ('system', 'nsubj'), ('  ', 'appos'), ('operates', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[training,   ], [  , information], [information, provided], [provided, learning], [learning, system], [system, environment], [environment,   ], [  , (], [(, i.e.--], [i.e.--, external], [external, trainer], [trainer, )], [), form], [form, scalar], [scalar, reinforcement], [reinforcement,   ], [  , signal], [signal, constitutes], [constitutes, measure], [measure, system], [system,   ], [  , operates], [operates, .]]

>> Trigrams: 
[[training,   , information], [  , information, provided], [information, provided, learning], [provided, learning, system], [learning, system, environment], [system, environment,   ], [environment,   , (], [  , (, i.e.--], [(, i.e.--, external], [i.e.--, external, trainer], [external, trainer, )], [trainer, ), form], [), form, scalar], [form, scalar, reinforcement], [scalar, reinforcement,   ], [reinforcement,   , signal], [  , signal, constitutes], [signal, constitutes, measure], [constitutes, measure, system], [measure, system,   ], [system,   , operates], [  , operates, .]]

>> Noun Phrases are: 
[the training   information, the learning system, the environment, i.e.-- external trainer, the form, a measure, the system]

>> Named Entities are: 
[]


============================ Sentence 28 =============================

The learner is not told which action has to take, as in   most forms of machine learning, but instead must discover   which actions yield the most reward by trying them 


>> Tokens are: 
[learner, told, action, ,,   , forms, machine, learning, ,, instead, discover,   , actions, yield, reward, trying] 

>> PoS Tags are: 
[('learner', 'NOUN'), ('told', 'VERB'), ('action', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('forms', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('instead', 'ADV'), ('discover', 'VERB'), ('  ', 'SPACE'), ('actions', 'NOUN'), ('yield', 'VERB'), ('reward', 'NOUN'), ('trying', 'VERB')] 

>> Dependency Tags are: 
[('learner', 'nsubjpass'), ('told', 'ROOT'), ('action', 'nsubj'), (',', 'punct'), ('  ', 'pobj'), ('forms', 'pobj'), ('machine', 'compound'), ('learning', 'pobj'), (',', 'punct'), ('instead', 'advmod'), ('discover', 'conj'), ('  ', 'dobj'), ('actions', 'nsubj'), ('yield', 'advcl'), ('reward', 'dobj'), ('trying', 'pcomp')]

>> Bigrams: 
[[learner, told], [told, action], [action, ,], [,,   ], [  , forms], [forms, machine], [machine, learning], [learning, ,], [,, instead], [instead, discover], [discover,   ], [  , actions], [actions, yield], [yield, reward], [reward, trying]]

>> Trigrams: 
[[learner, told, action], [told, action, ,], [action, ,,   ], [,,   , forms], [  , forms, machine], [forms, machine, learning], [machine, learning, ,], [learning, ,, instead], [,, instead, discover], [instead, discover,   ], [discover,   , actions], [  , actions, yield], [actions, yield, reward], [yield, reward, trying]]

>> Noun Phrases are: 
[The learner, which action, most forms, machine learning, actions, the most reward, them]

>> Named Entities are: 
[]


============================ Sentence 29 =============================

[1]. 


>> Tokens are: 
[[, 1, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('1', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 1], [1, ]], [], .]]

>> Trigrams: 
[[[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 30 =============================

A   number of ML applications involve tasks that can be set up as   supervised. 


>> Tokens are: 
[  , number, ML, applications, involve, tasks, set,   , supervised, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('number', 'NOUN'), ('ML', 'PROPN'), ('applications', 'NOUN'), ('involve', 'VERB'), ('tasks', 'NOUN'), ('set', 'VERB'), ('  ', 'SPACE'), ('supervised', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('number', 'nsubj'), ('ML', 'compound'), ('applications', 'pobj'), ('involve', 'ROOT'), ('tasks', 'dobj'), ('set', 'relcl'), ('  ', 'nsubj'), ('supervised', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[  , number], [number, ML], [ML, applications], [applications, involve], [involve, tasks], [tasks, set], [set,   ], [  , supervised], [supervised, .]]

>> Trigrams: 
[[  , number, ML], [number, ML, applications], [ML, applications, involve], [applications, involve, tasks], [involve, tasks, set], [tasks, set,   ], [set,   , supervised], [  , supervised, .]]

>> Noun Phrases are: 
[A   number, ML applications, tasks]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

The below figure depicts the general classification   architecture. 


>> Tokens are: 
[figure, depicts, general, classification,   , architecture, .] 

>> PoS Tags are: 
[('figure', 'NOUN'), ('depicts', 'VERB'), ('general', 'ADJ'), ('classification', 'NOUN'), ('  ', 'SPACE'), ('architecture', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('figure', 'nsubj'), ('depicts', 'ROOT'), ('general', 'amod'), ('classification', 'compound'), ('  ', 'compound'), ('architecture', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[figure, depicts], [depicts, general], [general, classification], [classification,   ], [  , architecture], [architecture, .]]

>> Trigrams: 
[[figure, depicts, general], [depicts, general, classification], [general, classification,   ], [classification,   , architecture], [  , architecture, .]]

>> Noun Phrases are: 
[The below figure, the general classification   architecture]

>> Named Entities are: 
[]


============================ Sentence 32 =============================

  Fig.1. 


>> Tokens are: 
[  , Fig.1, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Fig.1', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Fig.1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Fig.1], [Fig.1, .]]

>> Trigrams: 
[[  , Fig.1, .]]

>> Noun Phrases are: 
[  Fig.1]

>> Named Entities are: 
[]


============================ Sentence 33 =============================

Classification Architecture    


>> Tokens are: 
[Classification, Architecture,   ] 

>> PoS Tags are: 
[('Classification', 'PROPN'), ('Architecture', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Classification', 'compound'), ('Architecture', 'nsubj'), ('  ', 'ROOT')]

>> Bigrams: 
[[Classification, Architecture], [Architecture,   ]]

>> Trigrams: 
[[Classification, Architecture,   ]]

>> Noun Phrases are: 
[Classification Architecture]

>> Named Entities are: 
[]


============================ Sentence 34 =============================

In this study, we will focus our attention on the methods   which are being used for supervised learning. 


>> Tokens are: 
[study, ,, focus, attention, methods,   , supervised, learning, .] 

>> PoS Tags are: 
[('study', 'NOUN'), (',', 'PUNCT'), ('focus', 'VERB'), ('attention', 'NOUN'), ('methods', 'NOUN'), ('  ', 'SPACE'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('study', 'pobj'), (',', 'punct'), ('focus', 'ROOT'), ('attention', 'dobj'), ('methods', 'pobj'), ('  ', 'appos'), ('supervised', 'amod'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[study, ,], [,, focus], [focus, attention], [attention, methods], [methods,   ], [  , supervised], [supervised, learning], [learning, .]]

>> Trigrams: 
[[study, ,, focus], [,, focus, attention], [focus, attention, methods], [attention, methods,   ], [methods,   , supervised], [  , supervised, learning], [supervised, learning, .]]

>> Noun Phrases are: 
[this study, we, our attention, the methods, supervised learning]

>> Named Entities are: 
[]


============================ Sentence 35 =============================

This study will   contribute to new researchers for getting up-to-date knowledge   about supervised ML approaches. 


>> Tokens are: 
[study,   , contribute, new, researchers, getting, -, -, date, knowledge,   , supervised, ML, approaches, .] 

>> PoS Tags are: 
[('study', 'NOUN'), ('  ', 'SPACE'), ('contribute', 'VERB'), ('new', 'ADJ'), ('researchers', 'NOUN'), ('getting', 'VERB'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('date', 'NOUN'), ('knowledge', 'NOUN'), ('  ', 'SPACE'), ('supervised', 'VERB'), ('ML', 'PROPN'), ('approaches', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('study', 'nsubj'), ('  ', 'nsubj'), ('contribute', 'ROOT'), ('new', 'amod'), ('researchers', 'pobj'), ('getting', 'pcomp'), ('-', 'punct'), ('-', 'punct'), ('date', 'pobj'), ('knowledge', 'dobj'), ('  ', 'dobj'), ('supervised', 'amod'), ('ML', 'compound'), ('approaches', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[study,   ], [  , contribute], [contribute, new], [new, researchers], [researchers, getting], [getting, -], [-, -], [-, date], [date, knowledge], [knowledge,   ], [  , supervised], [supervised, ML], [ML, approaches], [approaches, .]]

>> Trigrams: 
[[study,   , contribute], [  , contribute, new], [contribute, new, researchers], [new, researchers, getting], [researchers, getting, -], [getting, -, -], [-, -, date], [-, date, knowledge], [date, knowledge,   ], [knowledge,   , supervised], [  , supervised, ML], [supervised, ML, approaches], [ML, approaches, .]]

>> Noun Phrases are: 
[This study, new researchers, date, supervised ML approaches]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 36 =============================

  Table.1. 


>> Tokens are: 
[  , Table.1, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Table.1', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Table.1', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Table.1], [Table.1, .]]

>> Trigrams: 
[[  , Table.1, .]]

>> Noun Phrases are: 
[  Table.1]

>> Named Entities are: 
[]


============================ Sentence 37 =============================

Instances with known labels   Data in standard Format   Case 


>> Tokens are: 
[Instances, known, labels,   , Data, standard, Format,   , Case] 

>> PoS Tags are: 
[('Instances', 'NOUN'), ('known', 'VERB'), ('labels', 'NOUN'), ('  ', 'SPACE'), ('Data', 'PROPN'), ('standard', 'ADJ'), ('Format', 'PROPN'), ('  ', 'SPACE'), ('Case', 'NOUN')] 

>> Dependency Tags are: 
[('Instances', 'ROOT'), ('known', 'amod'), ('labels', 'pobj'), ('  ', 'compound'), ('Data', 'appos'), ('standard', 'amod'), ('Format', 'compound'), ('  ', 'compound'), ('Case', 'appos')]

>> Bigrams: 
[[Instances, known], [known, labels], [labels,   ], [  , Data], [Data, standard], [standard, Format], [Format,   ], [  , Case]]

>> Trigrams: 
[[Instances, known, labels], [known, labels,   ], [labels,   , Data], [  , Data, standard], [Data, standard, Format], [standard, Format,   ], [Format,   , Case]]

>> Noun Phrases are: 
[Instances, known labels,   Data, standard Format   Case]

>> Named Entities are: 
[('Format', 'GPE')]


============================ Sentence 38 =============================

Feature 1 Feature 2 … Feature n Class   1 aaa bbb … nnn 


>> Tokens are: 
[Feature, 1, Feature, 2, …, Feature, n, Class,   , 1, aaa, bbb, …, nnn] 

>> PoS Tags are: 
[('Feature', 'NOUN'), ('1', 'NUM'), ('Feature', 'PROPN'), ('2', 'NUM'), ('…', 'PUNCT'), ('Feature', 'NOUN'), ('n', 'CCONJ'), ('Class', 'PROPN'), ('  ', 'SPACE'), ('1', 'NUM'), ('aaa', 'NOUN'), ('bbb', 'NOUN'), ('…', 'PUNCT'), ('nnn', 'NOUN')] 

>> Dependency Tags are: 
[('Feature', 'dep'), ('1', 'nummod'), ('Feature', 'dep'), ('2', 'nummod'), ('…', 'punct'), ('Feature', 'nmod'), ('n', 'cc'), ('Class', 'nsubj'), ('  ', 'appos'), ('1', 'nummod'), ('aaa', 'compound'), ('bbb', 'dobj'), ('…', 'punct'), ('nnn', 'ROOT')]

>> Bigrams: 
[[Feature, 1], [1, Feature], [Feature, 2], [2, …], […, Feature], [Feature, n], [n, Class], [Class,   ], [  , 1], [1, aaa], [aaa, bbb], [bbb, …], […, nnn]]

>> Trigrams: 
[[Feature, 1, Feature], [1, Feature, 2], [Feature, 2, …], [2, …, Feature], […, Feature, n], [Feature, n, Class], [n, Class,   ], [Class,   , 1], [  , 1, aaa], [1, aaa, bbb], [aaa, bbb, …], [bbb, …, nnn]]

>> Noun Phrases are: 
[Feature n Class]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 39 =============================

Yes   2 aaa bbb … nnn 


>> Tokens are: 
[Yes,   , 2, aaa, bbb, …, nnn] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE'), ('2', 'NUM'), ('aaa', 'NOUN'), ('bbb', 'NOUN'), ('…', 'PUNCT'), ('nnn', 'NOUN')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'nmod'), ('2', 'nummod'), ('aaa', 'compound'), ('bbb', 'ROOT'), ('…', 'punct'), ('nnn', 'appos')]

>> Bigrams: 
[[Yes,   ], [  , 2], [2, aaa], [aaa, bbb], [bbb, …], […, nnn]]

>> Trigrams: 
[[Yes,   , 2], [  , 2, aaa], [2, aaa, bbb], [aaa, bbb, …], [bbb, …, nnn]]

>> Noun Phrases are: 
[Yes   2 aaa bbb, nnn]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 40 =============================

Yes   3 aaa bbb … nnn No   … … … … … …    


>> Tokens are: 
[Yes,   , 3, aaa, bbb, …, nnn,   , …, …, …, …, …, …,   ] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE'), ('3', 'NUM'), ('aaa', 'NOUN'), ('bbb', 'NOUN'), ('…', 'PUNCT'), ('nnn', 'NOUN'), ('  ', 'SPACE'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'nsubj'), ('3', 'nummod'), ('aaa', 'compound'), ('bbb', 'ROOT'), ('…', 'punct'), ('nnn', 'appos'), ('  ', 'dobj'), ('…', 'punct'), ('…', 'punct'), ('…', 'punct'), ('…', 'punct'), ('…', 'punct'), ('…', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Yes,   ], [  , 3], [3, aaa], [aaa, bbb], [bbb, …], […, nnn], [nnn,   ], [  , …], […, …], […, …], […, …], […, …], […, …], […,   ]]

>> Trigrams: 
[[Yes,   , 3], [  , 3, aaa], [3, aaa, bbb], [aaa, bbb, …], [bbb, …, nnn], […, nnn,   ], [nnn,   , …], [  , …, …], […, …, …], […, …, …], […, …, …], […, …, …], […, …,   ]]

>> Noun Phrases are: 
[Yes   3 aaa bbb, nnn]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 41 =============================

In this work we have limited our references to refereed   journals, published books, web data and conferences. 


>> Tokens are: 
[work, limited, references, refereed,   , journals, ,, published, books, ,, web, data, conferences, .] 

>> PoS Tags are: 
[('work', 'NOUN'), ('limited', 'VERB'), ('references', 'NOUN'), ('refereed', 'VERB'), ('  ', 'SPACE'), ('journals', 'NOUN'), (',', 'PUNCT'), ('published', 'VERB'), ('books', 'NOUN'), (',', 'PUNCT'), ('web', 'NOUN'), ('data', 'NOUN'), ('conferences', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('work', 'pobj'), ('limited', 'ROOT'), ('references', 'dobj'), ('refereed', 'advcl'), ('  ', 'nummod'), ('journals', 'dobj'), (',', 'punct'), ('published', 'amod'), ('books', 'conj'), (',', 'punct'), ('web', 'compound'), ('data', 'conj'), ('conferences', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[work, limited], [limited, references], [references, refereed], [refereed,   ], [  , journals], [journals, ,], [,, published], [published, books], [books, ,], [,, web], [web, data], [data, conferences], [conferences, .]]

>> Trigrams: 
[[work, limited, references], [limited, references, refereed], [references, refereed,   ], [refereed,   , journals], [  , journals, ,], [journals, ,, published], [,, published, books], [published, books, ,], [books, ,, web], [,, web, data], [web, data, conferences], [data, conferences, .]]

>> Noun Phrases are: 
[this work, we, our references,   journals, published books, web data, conferences]

>> Named Entities are: 
[]


============================ Sentence 42 =============================

Our major   goal for this work has been to provide a representative sample of   Training    


>> Tokens are: 
[major,   , goal, work, provide, representative, sample,   , Training,   ] 

>> PoS Tags are: 
[('major', 'ADJ'), ('  ', 'SPACE'), ('goal', 'NOUN'), ('work', 'NOUN'), ('provide', 'VERB'), ('representative', 'ADJ'), ('sample', 'NOUN'), ('  ', 'SPACE'), ('Training', 'VERB'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('major', 'amod'), ('  ', 'nummod'), ('goal', 'nsubj'), ('work', 'pobj'), ('provide', 'xcomp'), ('representative', 'amod'), ('sample', 'dobj'), ('  ', 'pobj'), ('Training', 'advcl'), ('  ', 'dobj')]

>> Bigrams: 
[[major,   ], [  , goal], [goal, work], [work, provide], [provide, representative], [representative, sample], [sample,   ], [  , Training], [Training,   ]]

>> Trigrams: 
[[major,   , goal], [  , goal, work], [goal, work, provide], [work, provide, representative], [provide, representative, sample], [representative, sample,   ], [sample,   , Training], [  , Training,   ]]

>> Noun Phrases are: 
[Our major   goal, this work, a representative sample]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

Data   Machine    


>> Tokens are: 
[Data,   , Machine,   ] 

>> PoS Tags are: 
[('Data', 'PROPN'), ('  ', 'SPACE'), ('Machine', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Data', 'compound'), ('  ', 'nmod'), ('Machine', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[Data,   ], [  , Machine], [Machine,   ]]

>> Trigrams: 
[[Data,   , Machine], [  , Machine,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 44 =============================

Learning   Program   Classification 


>> Tokens are: 
[Learning,   , Program,   , Classification] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('  ', 'SPACE'), ('Program', 'PROPN'), ('  ', 'SPACE'), ('Classification', 'PROPN')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), ('  ', 'dobj'), ('Program', 'compound'), ('  ', 'dobj'), ('Classification', 'dobj')]

>> Bigrams: 
[[Learning,   ], [  , Program], [Program,   ], [  , Classification]]

>> Trigrams: 
[[Learning,   , Program], [  , Program,   ], [Program,   , Classification]]

>> Noun Phrases are: 
[Classification]

>> Named Entities are: 
[]


============================ Sentence 45 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 46 =============================

Rules   Predicted   Classification    


>> Tokens are: 
[Rules,   , Predicted,   , Classification,   ] 

>> PoS Tags are: 
[('Rules', 'NOUN'), ('  ', 'SPACE'), ('Predicted', 'VERB'), ('  ', 'SPACE'), ('Classification', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Rules', 'nsubj'), ('  ', 'appos'), ('Predicted', 'ROOT'), ('  ', 'dobj'), ('Classification', 'compound'), ('  ', 'punct')]

>> Bigrams: 
[[Rules,   ], [  , Predicted], [Predicted,   ], [  , Classification], [Classification,   ]]

>> Trigrams: 
[[Rules,   , Predicted], [  , Predicted,   ], [Predicted,   , Classification], [  , Classification,   ]]

>> Noun Phrases are: 
[Rules]

>> Named Entities are: 
[]


============================ Sentence 47 =============================

Testing Data     ISSN: 2229-6956(ONLINE) 


>> Tokens are: 
[Testing, Data,     , ISSN, :, 2229, -, 6956(ONLINE, )] 

>> PoS Tags are: 
[('Testing', 'PROPN'), ('Data', 'PROPN'), ('    ', 'SPACE'), ('ISSN', 'PROPN'), (':', 'PUNCT'), ('2229', 'NUM'), ('-', 'SYM'), ('6956(ONLINE', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Testing', 'compound'), ('Data', 'ROOT'), ('    ', 'nummod'), ('ISSN', 'appos'), (':', 'punct'), ('2229', 'appos'), ('-', 'punct'), ('6956(ONLINE', 'prep'), (')', 'punct')]

>> Bigrams: 
[[Testing, Data], [Data,     ], [    , ISSN], [ISSN, :], [:, 2229], [2229, -], [-, 6956(ONLINE], [6956(ONLINE, )]]

>> Trigrams: 
[[Testing, Data,     ], [Data,     , ISSN], [    , ISSN, :], [ISSN, :, 2229], [:, 2229, -], [2229, -, 6956(ONLINE], [-, 6956(ONLINE, )]]

>> Noun Phrases are: 
[Testing Data, ISSN]

>> Named Entities are: 
[('ISSN', 'ORG'), ('2229', 'CARDINAL')]


============================ Sentence 48 =============================

                                                                                                                            ICTACT JOURNAL ON SOFT COMPUTING, APRIL 2015, VOLUME: 05, ISSUE: 03   947   existing lines of research in each learning technique. 


>> Tokens are: 
[                                                                                                                            , ICTACT, JOURNAL, SOFT, COMPUTING, ,, APRIL, 2015, ,, VOLUME, :, 05, ,, ISSUE, :, 03,   , 947,   , existing, lines, research, learning, technique, .] 

>> PoS Tags are: 
[('                                                                                                                            ', 'SPACE'), ('ICTACT', 'PROPN'), ('JOURNAL', 'PROPN'), ('SOFT', 'ADJ'), ('COMPUTING', 'NOUN'), (',', 'PUNCT'), ('APRIL', 'PROPN'), ('2015', 'NUM'), (',', 'PUNCT'), ('VOLUME', 'NOUN'), (':', 'PUNCT'), ('05', 'NUM'), (',', 'PUNCT'), ('ISSUE', 'NOUN'), (':', 'PUNCT'), ('03', 'NUM'), ('  ', 'SPACE'), ('947', 'NUM'), ('  ', 'SPACE'), ('existing', 'VERB'), ('lines', 'NOUN'), ('research', 'NOUN'), ('learning', 'NOUN'), ('technique', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('                                                                                                                            ', 'compound'), ('ICTACT', 'compound'), ('JOURNAL', 'ROOT'), ('SOFT', 'amod'), ('COMPUTING', 'pobj'), (',', 'punct'), ('APRIL', 'appos'), ('2015', 'nummod'), (',', 'punct'), ('VOLUME', 'appos'), (':', 'punct'), ('05', 'appos'), (',', 'punct'), ('ISSUE', 'appos'), (':', 'punct'), ('03', 'nummod'), ('  ', 'appos'), ('947', 'nummod'), ('  ', 'appos'), ('existing', 'amod'), ('lines', 'appos'), ('research', 'pobj'), ('learning', 'compound'), ('technique', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[                                                                                                                            , ICTACT], [ICTACT, JOURNAL], [JOURNAL, SOFT], [SOFT, COMPUTING], [COMPUTING, ,], [,, APRIL], [APRIL, 2015], [2015, ,], [,, VOLUME], [VOLUME, :], [:, 05], [05, ,], [,, ISSUE], [ISSUE, :], [:, 03], [03,   ], [  , 947], [947,   ], [  , existing], [existing, lines], [lines, research], [research, learning], [learning, technique], [technique, .]]

>> Trigrams: 
[[                                                                                                                            , ICTACT, JOURNAL], [ICTACT, JOURNAL, SOFT], [JOURNAL, SOFT, COMPUTING], [SOFT, COMPUTING, ,], [COMPUTING, ,, APRIL], [,, APRIL, 2015], [APRIL, 2015, ,], [2015, ,, VOLUME], [,, VOLUME, :], [VOLUME, :, 05], [:, 05, ,], [05, ,, ISSUE], [,, ISSUE, :], [ISSUE, :, 03], [:, 03,   ], [03,   , 947], [  , 947,   ], [947,   , existing], [  , existing, lines], [existing, lines, research], [lines, research, learning], [research, learning, technique], [learning, technique, .]]

>> Noun Phrases are: 
[                                                                                                                            ICTACT JOURNAL, SOFT COMPUTING, APRIL, VOLUME, ISSUE, existing lines, research, each learning technique]

>> Named Entities are: 
[('APRIL 2015', 'DATE'), ('05', 'CARDINAL'), ('03', 'CARDINAL'), ('947', 'CARDINAL')]


============================ Sentence 49 =============================

In each of   our listed areas, there are many other papers/books that could be   more comprehensively help the interested readers. 


>> Tokens are: 
[  , listed, areas, ,, papers, /, books,   , comprehensively, help, interested, readers, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('listed', 'VERB'), ('areas', 'NOUN'), (',', 'PUNCT'), ('papers', 'NOUN'), ('/', 'SYM'), ('books', 'NOUN'), ('  ', 'SPACE'), ('comprehensively', 'ADV'), ('help', 'VERB'), ('interested', 'ADJ'), ('readers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'pobj'), ('listed', 'amod'), ('areas', 'pobj'), (',', 'punct'), ('papers', 'nmod'), ('/', 'punct'), ('books', 'attr'), ('  ', 'attr'), ('comprehensively', 'advmod'), ('help', 'advcl'), ('interested', 'amod'), ('readers', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[  , listed], [listed, areas], [areas, ,], [,, papers], [papers, /], [/, books], [books,   ], [  , comprehensively], [comprehensively, help], [help, interested], [interested, readers], [readers, .]]

>> Trigrams: 
[[  , listed, areas], [listed, areas, ,], [areas, ,, papers], [,, papers, /], [papers, /, books], [/, books,   ], [books,   , comprehensively], [  , comprehensively, help], [comprehensively, help, interested], [help, interested, readers], [interested, readers, .]]

>> Noun Phrases are: 
[our listed areas, many other papers/books, the interested readers]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 51 =============================

In the next section, we will cover wide-ranging issues of   supervised machine learning such as selection of features and   data pre-processing. 


>> Tokens are: 
[section, ,, cover, wide, -, ranging, issues,   , supervised, machine, learning, selection, features,   , data, pre, -, processing, .] 

>> PoS Tags are: 
[('section', 'NOUN'), (',', 'PUNCT'), ('cover', 'VERB'), ('wide', 'ADV'), ('-', 'PUNCT'), ('ranging', 'VERB'), ('issues', 'NOUN'), ('  ', 'SPACE'), ('supervised', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('selection', 'NOUN'), ('features', 'NOUN'), ('  ', 'SPACE'), ('data', 'NOUN'), ('pre', 'ADJ'), ('-', 'ADJ'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('section', 'pobj'), (',', 'punct'), ('cover', 'ROOT'), ('wide', 'advmod'), ('-', 'punct'), ('ranging', 'amod'), ('issues', 'dobj'), ('  ', 'nmod'), ('supervised', 'amod'), ('machine', 'compound'), ('learning', 'pobj'), ('selection', 'pobj'), ('features', 'pobj'), ('  ', 'nummod'), ('data', 'conj'), ('pre', 'appos'), ('-', 'appos'), ('processing', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[section, ,], [,, cover], [cover, wide], [wide, -], [-, ranging], [ranging, issues], [issues,   ], [  , supervised], [supervised, machine], [machine, learning], [learning, selection], [selection, features], [features,   ], [  , data], [data, pre], [pre, -], [-, processing], [processing, .]]

>> Trigrams: 
[[section, ,, cover], [,, cover, wide], [cover, wide, -], [wide, -, ranging], [-, ranging, issues], [ranging, issues,   ], [issues,   , supervised], [  , supervised, machine], [supervised, machine, learning], [machine, learning, selection], [learning, selection, features], [selection, features,   ], [features,   , data], [  , data, pre], [data, pre, -], [pre, -, processing], [-, processing, .]]

>> Noun Phrases are: 
[the next section, we, wide-ranging issues, selection, features,   data, processing]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

Logical/Symbolic techniques are being   described in section 3, whereas statistical techniques for ML are   discussed in section 4. 


>> Tokens are: 
[Logical, /, Symbolic, techniques,   , described, section, 3, ,, statistical, techniques, ML,   , discussed, section, 4, .] 

>> PoS Tags are: 
[('Logical', 'ADJ'), ('/', 'SYM'), ('Symbolic', 'PROPN'), ('techniques', 'NOUN'), ('  ', 'SPACE'), ('described', 'VERB'), ('section', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('statistical', 'ADJ'), ('techniques', 'NOUN'), ('ML', 'PROPN'), ('  ', 'SPACE'), ('discussed', 'VERB'), ('section', 'NOUN'), ('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Logical', 'amod'), ('/', 'punct'), ('Symbolic', 'compound'), ('techniques', 'nsubj'), ('  ', 'attr'), ('described', 'acl'), ('section', 'pobj'), ('3', 'nummod'), (',', 'punct'), ('statistical', 'amod'), ('techniques', 'nsubjpass'), ('ML', 'pobj'), ('  ', 'nsubj'), ('discussed', 'advcl'), ('section', 'pobj'), ('4', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Logical, /], [/, Symbolic], [Symbolic, techniques], [techniques,   ], [  , described], [described, section], [section, 3], [3, ,], [,, statistical], [statistical, techniques], [techniques, ML], [ML,   ], [  , discussed], [discussed, section], [section, 4], [4, .]]

>> Trigrams: 
[[Logical, /, Symbolic], [/, Symbolic, techniques], [Symbolic, techniques,   ], [techniques,   , described], [  , described, section], [described, section, 3], [section, 3, ,], [3, ,, statistical], [,, statistical, techniques], [statistical, techniques, ML], [techniques, ML,   ], [ML,   , discussed], [  , discussed, section], [discussed, section, 4], [section, 4, .]]

>> Noun Phrases are: 
[Logical/Symbolic techniques, section, statistical techniques, ML, section]

>> Named Entities are: 
[('3', 'CARDINAL'), ('ML', 'ORG'), ('section 4', 'LAW')]


============================ Sentence 53 =============================

Section 5 will cover instance based   learners, SVM is discussed in section 6. 


>> Tokens are: 
[Section, 5, cover, instance, based,   , learners, ,, SVM, discussed, section, 6, .] 

>> PoS Tags are: 
[('Section', 'NOUN'), ('5', 'NUM'), ('cover', 'VERB'), ('instance', 'NOUN'), ('based', 'VERB'), ('  ', 'SPACE'), ('learners', 'NOUN'), (',', 'PUNCT'), ('SVM', 'PROPN'), ('discussed', 'VERB'), ('section', 'NOUN'), ('6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Section', 'nsubj'), ('5', 'nummod'), ('cover', 'ccomp'), ('instance', 'dobj'), ('based', 'prep'), ('  ', 'nummod'), ('learners', 'dobj'), (',', 'punct'), ('SVM', 'nsubjpass'), ('discussed', 'ROOT'), ('section', 'pobj'), ('6', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Section, 5], [5, cover], [cover, instance], [instance, based], [based,   ], [  , learners], [learners, ,], [,, SVM], [SVM, discussed], [discussed, section], [section, 6], [6, .]]

>> Trigrams: 
[[Section, 5, cover], [5, cover, instance], [cover, instance, based], [instance, based,   ], [based,   , learners], [  , learners, ,], [learners, ,, SVM], [,, SVM, discussed], [SVM, discussed, section], [discussed, section, 6], [section, 6, .]]

>> Noun Phrases are: 
[Section, instance,   learners, SVM, section]

>> Named Entities are: 
[('SVM', 'ORG'), ('section 6', 'LAW')]


============================ Sentence 54 =============================

The last section   concludes this work. 


>> Tokens are: 
[section,   , concludes, work, .] 

>> PoS Tags are: 
[('section', 'NOUN'), ('  ', 'SPACE'), ('concludes', 'VERB'), ('work', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('section', 'npadvmod'), ('  ', 'nsubj'), ('concludes', 'ROOT'), ('work', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[section,   ], [  , concludes], [concludes, work], [work, .]]

>> Trigrams: 
[[section,   , concludes], [  , concludes, work], [concludes, work, .]]

>> Noun Phrases are: 
[this work]

>> Named Entities are: 
[]


============================ Sentence 55 =============================

  2. 


>> Tokens are: 
[  , 2, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 2], [2, .]]

>> Trigrams: 
[[  , 2, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 56 =============================

ISSUES OF SUPERVISED LEARNING   


>> Tokens are: 
[ISSUES, SUPERVISED, LEARNING,  ] 

>> PoS Tags are: 
[('ISSUES', 'NOUN'), ('SUPERVISED', 'ADJ'), ('LEARNING', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('ISSUES', 'ROOT'), ('SUPERVISED', 'amod'), ('LEARNING', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[ISSUES, SUPERVISED], [SUPERVISED, LEARNING], [LEARNING,  ]]

>> Trigrams: 
[[ISSUES, SUPERVISED, LEARNING], [SUPERVISED, LEARNING,  ]]

>> Noun Phrases are: 
[ISSUES, SUPERVISED LEARNING]

>> Named Entities are: 
[]


============================ Sentence 57 =============================

ALGORITHMS    


>> Tokens are: 
[ALGORITHMS,   ] 

>> PoS Tags are: 
[('ALGORITHMS', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('ALGORITHMS', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[ALGORITHMS,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 58 =============================

Learning from the past experiences is an attribute of humans   while the computers do not have this ability. 


>> Tokens are: 
[Learning, past, experiences, attribute, humans,   , computers, ability, .] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('past', 'ADJ'), ('experiences', 'NOUN'), ('attribute', 'NOUN'), ('humans', 'NOUN'), ('  ', 'SPACE'), ('computers', 'NOUN'), ('ability', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'nsubj'), ('past', 'amod'), ('experiences', 'pobj'), ('attribute', 'attr'), ('humans', 'pobj'), ('  ', 'appos'), ('computers', 'nsubj'), ('ability', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Learning, past], [past, experiences], [experiences, attribute], [attribute, humans], [humans,   ], [  , computers], [computers, ability], [ability, .]]

>> Trigrams: 
[[Learning, past, experiences], [past, experiences, attribute], [experiences, attribute, humans], [attribute, humans,   ], [humans,   , computers], [  , computers, ability], [computers, ability, .]]

>> Noun Phrases are: 
[the past experiences, an attribute, humans, the computers, this ability]

>> Named Entities are: 
[]


============================ Sentence 59 =============================

In supervised or   Inductive machine learning, our main goal is to learn a target   function that can be used to predict the values of a class. 


>> Tokens are: 
[supervised,   , Inductive, machine, learning, ,, main, goal, learn, target,   , function, predict, values, class, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('  ', 'SPACE'), ('Inductive', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('main', 'ADJ'), ('goal', 'NOUN'), ('learn', 'VERB'), ('target', 'NOUN'), ('  ', 'SPACE'), ('function', 'NOUN'), ('predict', 'VERB'), ('values', 'NOUN'), ('class', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'pobj'), ('  ', 'conj'), ('Inductive', 'amod'), ('machine', 'compound'), ('learning', 'pobj'), (',', 'punct'), ('main', 'amod'), ('goal', 'nsubj'), ('learn', 'xcomp'), ('target', 'dobj'), ('  ', 'nummod'), ('function', 'dobj'), ('predict', 'xcomp'), ('values', 'dobj'), ('class', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[supervised,   ], [  , Inductive], [Inductive, machine], [machine, learning], [learning, ,], [,, main], [main, goal], [goal, learn], [learn, target], [target,   ], [  , function], [function, predict], [predict, values], [values, class], [class, .]]

>> Trigrams: 
[[supervised,   , Inductive], [  , Inductive, machine], [Inductive, machine, learning], [machine, learning, ,], [learning, ,, main], [,, main, goal], [main, goal, learn], [goal, learn, target], [learn, target,   ], [target,   , function], [  , function, predict], [function, predict, values], [predict, values, class], [values, class, .]]

>> Noun Phrases are: 
[Inductive machine learning, our main goal, a target,   function, the values, a class]

>> Named Entities are: 
[]


============================ Sentence 60 =============================

The   process of applying supervised ML to a real-world problem is   described in below figure. 


>> Tokens are: 
[  , process, applying, supervised, ML, real, -, world, problem,   , described, figure, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('process', 'NOUN'), ('applying', 'VERB'), ('supervised', 'VERB'), ('ML', 'PROPN'), ('real', 'ADJ'), ('-', 'PUNCT'), ('world', 'NOUN'), ('problem', 'NOUN'), ('  ', 'SPACE'), ('described', 'VERB'), ('figure', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('process', 'nsubj'), ('applying', 'pcomp'), ('supervised', 'amod'), ('ML', 'dobj'), ('real', 'amod'), ('-', 'punct'), ('world', 'compound'), ('problem', 'pobj'), ('  ', 'attr'), ('described', 'acl'), ('figure', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , process], [process, applying], [applying, supervised], [supervised, ML], [ML, real], [real, -], [-, world], [world, problem], [problem,   ], [  , described], [described, figure], [figure, .]]

>> Trigrams: 
[[  , process, applying], [process, applying, supervised], [applying, supervised, ML], [supervised, ML, real], [ML, real, -], [real, -, world], [-, world, problem], [world, problem,   ], [problem,   , described], [  , described, figure], [described, figure, .]]

>> Noun Phrases are: 
[The   process, supervised ML, a real-world problem, figure]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 61 =============================

     Fig.2. 


>> Tokens are: 
[     , Fig.2, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.2', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('Fig.2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.2], [Fig.2, .]]

>> Trigrams: 
[[     , Fig.2, .]]

>> Noun Phrases are: 
[     Fig.2]

>> Named Entities are: 
[]


============================ Sentence 62 =============================

Supervised Machine Learning Model    


>> Tokens are: 
[Supervised, Machine, Learning, Model,   ] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Model', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('Machine', 'compound'), ('Learning', 'compound'), ('Model', 'nsubj'), ('  ', 'ROOT')]

>> Bigrams: 
[[Supervised, Machine], [Machine, Learning], [Learning, Model], [Model,   ]]

>> Trigrams: 
[[Supervised, Machine, Learning], [Machine, Learning, Model], [Learning, Model,   ]]

>> Noun Phrases are: 
[Supervised Machine Learning Model]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

In supervised learning the first step is dealing with dataset. 


>> Tokens are: 
[supervised, learning, step, dealing, dataset, .] 

>> PoS Tags are: 
[('supervised', 'ADJ'), ('learning', 'VERB'), ('step', 'NOUN'), ('dealing', 'VERB'), ('dataset', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('supervised', 'amod'), ('learning', 'pobj'), ('step', 'nsubj'), ('dealing', 'ROOT'), ('dataset', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[supervised, learning], [learning, step], [step, dealing], [dealing, dataset], [dataset, .]]

>> Trigrams: 
[[supervised, learning, step], [learning, step, dealing], [step, dealing, dataset], [dealing, dataset, .]]

>> Noun Phrases are: 
[the first step, dataset]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 64 =============================

In   order to perform a better training on data set an appropriate   expert could suggest better selection of features. 


>> Tokens are: 
[  , order, perform, better, training, data, set, appropriate,   , expert, suggest, better, selection, features, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('order', 'NOUN'), ('perform', 'VERB'), ('better', 'ADJ'), ('training', 'NOUN'), ('data', 'NOUN'), ('set', 'VERB'), ('appropriate', 'ADJ'), ('  ', 'SPACE'), ('expert', 'NOUN'), ('suggest', 'VERB'), ('better', 'ADJ'), ('selection', 'NOUN'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'pobj'), ('order', 'pobj'), ('perform', 'acl'), ('better', 'amod'), ('training', 'dobj'), ('data', 'pobj'), ('set', 'csubj'), ('appropriate', 'amod'), ('  ', 'compound'), ('expert', 'dobj'), ('suggest', 'ROOT'), ('better', 'amod'), ('selection', 'dobj'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , order], [order, perform], [perform, better], [better, training], [training, data], [data, set], [set, appropriate], [appropriate,   ], [  , expert], [expert, suggest], [suggest, better], [better, selection], [selection, features], [features, .]]

>> Trigrams: 
[[  , order, perform], [order, perform, better], [perform, better, training], [better, training, data], [training, data, set], [data, set, appropriate], [set, appropriate,   ], [appropriate,   , expert], [  , expert, suggest], [expert, suggest, better], [suggest, better, selection], [better, selection, features], [selection, features, .]]

>> Noun Phrases are: 
[order, a better training, data, an appropriate   expert, better selection, features]

>> Named Entities are: 
[]


============================ Sentence 65 =============================

If concerned   expert is not in reach, then the other approach is “brute-force”,   which means measuring everything available in the hope that the   right (informative, relevant) features can be isolated. 


>> Tokens are: 
[concerned,   , expert, reach, ,, approach, “, brute, -, force, ”, ,,   , means, measuring, available, hope,   , right, (, informative, ,, relevant, ), features, isolated, .] 

>> PoS Tags are: 
[('concerned', 'VERB'), ('  ', 'SPACE'), ('expert', 'NOUN'), ('reach', 'NOUN'), (',', 'PUNCT'), ('approach', 'NOUN'), ('“', 'PUNCT'), ('brute', 'ADJ'), ('-', 'PUNCT'), ('force', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('means', 'VERB'), ('measuring', 'VERB'), ('available', 'ADJ'), ('hope', 'NOUN'), ('  ', 'SPACE'), ('right', 'ADJ'), ('(', 'PUNCT'), ('informative', 'ADJ'), (',', 'PUNCT'), ('relevant', 'ADJ'), (')', 'PUNCT'), ('features', 'NOUN'), ('isolated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('concerned', 'amod'), ('  ', 'nummod'), ('expert', 'nsubj'), ('reach', 'pobj'), (',', 'punct'), ('approach', 'nsubj'), ('“', 'punct'), ('brute', 'amod'), ('-', 'punct'), ('force', 'attr'), ('”', 'punct'), (',', 'punct'), ('  ', 'attr'), ('means', 'relcl'), ('measuring', 'xcomp'), ('available', 'amod'), ('hope', 'pobj'), ('  ', 'nsubj'), ('right', 'amod'), ('(', 'punct'), ('informative', 'amod'), (',', 'punct'), ('relevant', 'amod'), (')', 'punct'), ('features', 'nsubjpass'), ('isolated', 'acl'), ('.', 'punct')]

>> Bigrams: 
[[concerned,   ], [  , expert], [expert, reach], [reach, ,], [,, approach], [approach, “], [“, brute], [brute, -], [-, force], [force, ”], [”, ,], [,,   ], [  , means], [means, measuring], [measuring, available], [available, hope], [hope,   ], [  , right], [right, (], [(, informative], [informative, ,], [,, relevant], [relevant, )], [), features], [features, isolated], [isolated, .]]

>> Trigrams: 
[[concerned,   , expert], [  , expert, reach], [expert, reach, ,], [reach, ,, approach], [,, approach, “], [approach, “, brute], [“, brute, -], [brute, -, force], [-, force, ”], [force, ”, ,], [”, ,,   ], [,,   , means], [  , means, measuring], [means, measuring, available], [measuring, available, hope], [available, hope,   ], [hope,   , right], [  , right, (], [right, (, informative], [(, informative, ,], [informative, ,, relevant], [,, relevant, )], [relevant, ), features], [), features, isolated], [features, isolated, .]]

>> Noun Phrases are: 
[If concerned   expert, reach, the other approach, brute-force, everything, the hope, the   right (informative, relevant) features]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

However, a   dataset collected by the “brute-force” method is not directly   suitable for induction. 


>> Tokens are: 
[,,   , dataset, collected, “, brute, -, force, ”, method, directly,   , suitable, induction, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('  ', 'SPACE'), ('dataset', 'NOUN'), ('collected', 'VERB'), ('“', 'PUNCT'), ('brute', 'ADJ'), ('-', 'PUNCT'), ('force', 'NOUN'), ('”', 'PUNCT'), ('method', 'NOUN'), ('directly', 'ADV'), ('  ', 'SPACE'), ('suitable', 'ADJ'), ('induction', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('  ', 'nummod'), ('dataset', 'nsubj'), ('collected', 'acl'), ('“', 'punct'), ('brute', 'amod'), ('-', 'punct'), ('force', 'nmod'), ('”', 'punct'), ('method', 'pobj'), ('directly', 'advmod'), ('  ', 'attr'), ('suitable', 'amod'), ('induction', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,,   ], [  , dataset], [dataset, collected], [collected, “], [“, brute], [brute, -], [-, force], [force, ”], [”, method], [method, directly], [directly,   ], [  , suitable], [suitable, induction], [induction, .]]

>> Trigrams: 
[[,,   , dataset], [  , dataset, collected], [dataset, collected, “], [collected, “, brute], [“, brute, -], [brute, -, force], [-, force, ”], [force, ”, method], [”, method, directly], [method, directly,   ], [directly,   , suitable], [  , suitable, induction], [suitable, induction, .]]

>> Noun Phrases are: 
[a   dataset, the “brute-force” method, induction]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

Ultimately, in most cases it contains noise   and missing feature values, and therefore requires significant   pre-processing [1]. 


>> Tokens are: 
[Ultimately, ,, cases, contains, noise,   , missing, feature, values, ,, requires, significant,   , pre, -, processing, [, 1, ], .] 

>> PoS Tags are: 
[('Ultimately', 'ADV'), (',', 'PUNCT'), ('cases', 'NOUN'), ('contains', 'VERB'), ('noise', 'NOUN'), ('  ', 'SPACE'), ('missing', 'VERB'), ('feature', 'NOUN'), ('values', 'NOUN'), (',', 'PUNCT'), ('requires', 'VERB'), ('significant', 'ADJ'), ('  ', 'SPACE'), ('pre', 'ADJ'), ('-', 'ADJ'), ('processing', 'ADJ'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ultimately', 'advmod'), (',', 'punct'), ('cases', 'pobj'), ('contains', 'ROOT'), ('noise', 'compound'), ('  ', 'dobj'), ('missing', 'conj'), ('feature', 'compound'), ('values', 'dobj'), (',', 'punct'), ('requires', 'conj'), ('significant', 'amod'), ('  ', 'nmod'), ('pre', 'dobj'), ('-', 'dobj'), ('processing', 'dobj'), ('[', 'punct'), ('1', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Ultimately, ,], [,, cases], [cases, contains], [contains, noise], [noise,   ], [  , missing], [missing, feature], [feature, values], [values, ,], [,, requires], [requires, significant], [significant,   ], [  , pre], [pre, -], [-, processing], [processing, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[Ultimately, ,, cases], [,, cases, contains], [cases, contains, noise], [contains, noise,   ], [noise,   , missing], [  , missing, feature], [missing, feature, values], [feature, values, ,], [values, ,, requires], [,, requires, significant], [requires, significant,   ], [significant,   , pre], [  , pre, -], [pre, -, processing], [-, processing, [], [processing, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[most cases, it, feature values]

>> Named Entities are: 
[]


============================ Sentence 68 =============================

In the next step, data preparation and data   preprocessing is a key function of researcher in Supervised   Machine Learning (SML). 


>> Tokens are: 
[step, ,, data, preparation, data,   , preprocessing, key, function, researcher, Supervised,   , Machine, Learning, (, SML, ), .] 

>> PoS Tags are: 
[('step', 'NOUN'), (',', 'PUNCT'), ('data', 'NOUN'), ('preparation', 'NOUN'), ('data', 'NOUN'), ('  ', 'SPACE'), ('preprocessing', 'VERB'), ('key', 'ADJ'), ('function', 'NOUN'), ('researcher', 'NOUN'), ('Supervised', 'ADJ'), ('  ', 'SPACE'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('(', 'PUNCT'), ('SML', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('step', 'pobj'), (',', 'punct'), ('data', 'compound'), ('preparation', 'nsubj'), ('data', 'compound'), ('  ', 'nsubj'), ('preprocessing', 'conj'), ('key', 'amod'), ('function', 'attr'), ('researcher', 'pobj'), ('Supervised', 'amod'), ('  ', 'pobj'), ('Machine', 'compound'), ('Learning', 'pobj'), ('(', 'punct'), ('SML', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[step, ,], [,, data], [data, preparation], [preparation, data], [data,   ], [  , preprocessing], [preprocessing, key], [key, function], [function, researcher], [researcher, Supervised], [Supervised,   ], [  , Machine], [Machine, Learning], [Learning, (], [(, SML], [SML, )], [), .]]

>> Trigrams: 
[[step, ,, data], [,, data, preparation], [data, preparation, data], [preparation, data,   ], [data,   , preprocessing], [  , preprocessing, key], [preprocessing, key, function], [key, function, researcher], [function, researcher, Supervised], [researcher, Supervised,   ], [Supervised,   , Machine], [  , Machine, Learning], [Machine, Learning, (], [Learning, (, SML], [(, SML, )], [SML, ), .]]

>> Noun Phrases are: 
[the next step, data preparation, a key function, researcher, Machine Learning, (SML]

>> Named Entities are: 
[('Supervised   Machine Learning', 'ORG'), ('SML', 'ORG')]


============================ Sentence 69 =============================

A number of techniques have been   introduced by different researchers to deal with missing data   issue. 


>> Tokens are: 
[number, techniques,   , introduced, different, researchers, deal, missing, data,   , issue, .] 

>> PoS Tags are: 
[('number', 'NOUN'), ('techniques', 'NOUN'), ('  ', 'SPACE'), ('introduced', 'VERB'), ('different', 'ADJ'), ('researchers', 'NOUN'), ('deal', 'VERB'), ('missing', 'VERB'), ('data', 'NOUN'), ('  ', 'SPACE'), ('issue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('number', 'nsubj'), ('techniques', 'pobj'), ('  ', 'attr'), ('introduced', 'acl'), ('different', 'amod'), ('researchers', 'pobj'), ('deal', 'ROOT'), ('missing', 'amod'), ('data', 'compound'), ('  ', 'compound'), ('issue', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[number, techniques], [techniques,   ], [  , introduced], [introduced, different], [different, researchers], [researchers, deal], [deal, missing], [missing, data], [data,   ], [  , issue], [issue, .]]

>> Trigrams: 
[[number, techniques,   ], [techniques,   , introduced], [  , introduced, different], [introduced, different, researchers], [different, researchers, deal], [researchers, deal, missing], [deal, missing, data], [missing, data,   ], [data,   , issue], [  , issue, .]]

>> Noun Phrases are: 
[A number, techniques, different researchers, missing data   issue]

>> Named Entities are: 
[]


============================ Sentence 70 =============================

Hodge & Austin [4] have conducted a survey of   contemporary techniques for outlier (noise) detection. 


>> Tokens are: 
[Hodge, &, Austin, [, 4, ], conducted, survey,   , contemporary, techniques, outlier, (, noise, ), detection, .] 

>> PoS Tags are: 
[('Hodge', 'PROPN'), ('&', 'CCONJ'), ('Austin', 'PROPN'), ('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('conducted', 'VERB'), ('survey', 'NOUN'), ('  ', 'SPACE'), ('contemporary', 'ADJ'), ('techniques', 'NOUN'), ('outlier', 'ADJ'), ('(', 'PUNCT'), ('noise', 'NOUN'), (')', 'PUNCT'), ('detection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Hodge', 'nsubj'), ('&', 'cc'), ('Austin', 'conj'), ('[', 'punct'), ('4', 'appos'), (']', 'punct'), ('conducted', 'ROOT'), ('survey', 'dobj'), ('  ', 'nummod'), ('contemporary', 'amod'), ('techniques', 'pobj'), ('outlier', 'amod'), ('(', 'punct'), ('noise', 'nmod'), (')', 'punct'), ('detection', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Hodge, &], [&, Austin], [Austin, [], [[, 4], [4, ]], [], conducted], [conducted, survey], [survey,   ], [  , contemporary], [contemporary, techniques], [techniques, outlier], [outlier, (], [(, noise], [noise, )], [), detection], [detection, .]]

>> Trigrams: 
[[Hodge, &, Austin], [&, Austin, [], [Austin, [, 4], [[, 4, ]], [4, ], conducted], [], conducted, survey], [conducted, survey,   ], [survey,   , contemporary], [  , contemporary, techniques], [contemporary, techniques, outlier], [techniques, outlier, (], [outlier, (, noise], [(, noise, )], [noise, ), detection], [), detection, .]]

>> Noun Phrases are: 
[Hodge, Austin, a survey,   contemporary techniques, outlier (noise) detection]

>> Named Entities are: 
[('Hodge & Austin', 'ORG'), ('4', 'CARDINAL')]


============================ Sentence 71 =============================

Karanjit   & Shuchita [5] have also discussed different outlier detection   methods which are being used in different machine learning. 


>> Tokens are: 
[Karanjit,   , &, Shuchita, [, 5, ], discussed, different, outlier, detection,   , methods, different, machine, learning, .] 

>> PoS Tags are: 
[('Karanjit', 'PROPN'), ('  ', 'SPACE'), ('&', 'CCONJ'), ('Shuchita', 'PROPN'), ('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), ('discussed', 'VERB'), ('different', 'ADJ'), ('outlier', 'ADJ'), ('detection', 'NOUN'), ('  ', 'SPACE'), ('methods', 'NOUN'), ('different', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Karanjit', 'compound'), ('  ', 'nsubj'), ('&', 'cc'), ('Shuchita', 'conj'), ('[', 'punct'), ('5', 'appos'), (']', 'punct'), ('discussed', 'ROOT'), ('different', 'amod'), ('outlier', 'amod'), ('detection', 'compound'), ('  ', 'nummod'), ('methods', 'dobj'), ('different', 'amod'), ('machine', 'compound'), ('learning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Karanjit,   ], [  , &], [&, Shuchita], [Shuchita, [], [[, 5], [5, ]], [], discussed], [discussed, different], [different, outlier], [outlier, detection], [detection,   ], [  , methods], [methods, different], [different, machine], [machine, learning], [learning, .]]

>> Trigrams: 
[[Karanjit,   , &], [  , &, Shuchita], [&, Shuchita, [], [Shuchita, [, 5], [[, 5, ]], [5, ], discussed], [], discussed, different], [discussed, different, outlier], [different, outlier, detection], [outlier, detection,   ], [detection,   , methods], [  , methods, different], [methods, different, machine], [different, machine, learning], [machine, learning, .]]

>> Noun Phrases are: 
[Shuchita, different outlier detection   methods, different machine learning]

>> Named Entities are: 
[]


============================ Sentence 72 =============================

H.   Jair [6] has done comparison on 6 different outlier detection   methods by performing experiment on benchmark datasets and a   synthetic astronomical domain. 


>> Tokens are: 
[H.,   , Jair, [, 6, ], comparison, 6, different, outlier, detection,   , methods, performing, experiment, benchmark, datasets,   , synthetic, astronomical, domain, .] 

>> PoS Tags are: 
[('H.', 'NOUN'), ('  ', 'SPACE'), ('Jair', 'PROPN'), ('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('comparison', 'NOUN'), ('6', 'NUM'), ('different', 'ADJ'), ('outlier', 'ADJ'), ('detection', 'NOUN'), ('  ', 'SPACE'), ('methods', 'NOUN'), ('performing', 'VERB'), ('experiment', 'NOUN'), ('benchmark', 'ADJ'), ('datasets', 'NOUN'), ('  ', 'SPACE'), ('synthetic', 'ADJ'), ('astronomical', 'ADJ'), ('domain', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('H.', 'compound'), ('  ', 'compound'), ('Jair', 'nsubj'), ('[', 'punct'), ('6', 'appos'), (']', 'punct'), ('comparison', 'dobj'), ('6', 'nummod'), ('different', 'amod'), ('outlier', 'amod'), ('detection', 'pobj'), ('  ', 'nummod'), ('methods', 'dobj'), ('performing', 'pcomp'), ('experiment', 'dobj'), ('benchmark', 'amod'), ('datasets', 'pobj'), ('  ', 'nmod'), ('synthetic', 'amod'), ('astronomical', 'amod'), ('domain', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[H.,   ], [  , Jair], [Jair, [], [[, 6], [6, ]], [], comparison], [comparison, 6], [6, different], [different, outlier], [outlier, detection], [detection,   ], [  , methods], [methods, performing], [performing, experiment], [experiment, benchmark], [benchmark, datasets], [datasets,   ], [  , synthetic], [synthetic, astronomical], [astronomical, domain], [domain, .]]

>> Trigrams: 
[[H.,   , Jair], [  , Jair, [], [Jair, [, 6], [[, 6, ]], [6, ], comparison], [], comparison, 6], [comparison, 6, different], [6, different, outlier], [different, outlier, detection], [outlier, detection,   ], [detection,   , methods], [  , methods, performing], [methods, performing, experiment], [performing, experiment, benchmark], [experiment, benchmark, datasets], [benchmark, datasets,   ], [datasets,   , synthetic], [  , synthetic, astronomical], [synthetic, astronomical, domain], [astronomical, domain, .]]

>> Noun Phrases are: 
[H.   Jair, comparison, 6 different outlier detection,   methods, experiment, benchmark datasets, a   synthetic astronomical domain]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 73 =============================

  2.1 ALGORITHM SELECTION    


>> Tokens are: 
[  , 2.1, ALGORITHM, SELECTION,   ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('2.1', 'NUM'), ('ALGORITHM', 'PROPN'), ('SELECTION', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('2.1', 'nummod'), ('ALGORITHM', 'compound'), ('SELECTION', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[  , 2.1], [2.1, ALGORITHM], [ALGORITHM, SELECTION], [SELECTION,   ]]

>> Trigrams: 
[[  , 2.1, ALGORITHM], [2.1, ALGORITHM, SELECTION], [ALGORITHM, SELECTION,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2.1', 'CARDINAL')]


============================ Sentence 74 =============================

The selection of algorithm for achieving good results is an   important step. 


>> Tokens are: 
[selection, algorithm, achieving, good, results,   , important, step, .] 

>> PoS Tags are: 
[('selection', 'NOUN'), ('algorithm', 'NOUN'), ('achieving', 'VERB'), ('good', 'ADJ'), ('results', 'NOUN'), ('  ', 'SPACE'), ('important', 'ADJ'), ('step', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('selection', 'nsubj'), ('algorithm', 'pobj'), ('achieving', 'pcomp'), ('good', 'amod'), ('results', 'dobj'), ('  ', 'nmod'), ('important', 'amod'), ('step', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[selection, algorithm], [algorithm, achieving], [achieving, good], [good, results], [results,   ], [  , important], [important, step], [step, .]]

>> Trigrams: 
[[selection, algorithm, achieving], [algorithm, achieving, good], [achieving, good, results], [good, results,   ], [results,   , important], [  , important, step], [important, step, .]]

>> Noun Phrases are: 
[The selection, algorithm, good results, an   important step]

>> Named Entities are: 
[]


============================ Sentence 75 =============================

The algorithm evaluation is mostly judge by   prediction accuracy. 


>> Tokens are: 
[algorithm, evaluation, judge,   , prediction, accuracy, .] 

>> PoS Tags are: 
[('algorithm', 'ADJ'), ('evaluation', 'NOUN'), ('judge', 'ADJ'), ('  ', 'SPACE'), ('prediction', 'NOUN'), ('accuracy', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'amod'), ('evaluation', 'nsubjpass'), ('judge', 'ROOT'), ('  ', 'compound'), ('prediction', 'compound'), ('accuracy', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, evaluation], [evaluation, judge], [judge,   ], [  , prediction], [prediction, accuracy], [accuracy, .]]

>> Trigrams: 
[[algorithm, evaluation, judge], [evaluation, judge,   ], [judge,   , prediction], [  , prediction, accuracy], [prediction, accuracy, .]]

>> Noun Phrases are: 
[The algorithm evaluation,   prediction accuracy]

>> Named Entities are: 
[]


============================ Sentence 76 =============================

The classifier’s (Algorithm) evaluation is   most often based on prediction accuracy and it can be measured   by given below formula     cases test of number Total  tionsclassifica Correct of Number Accuracy    


>> Tokens are: 
[classifier, (, Algorithm, ), evaluation,   , based, prediction, accuracy, measured,   , given, formula,     , cases, test, number, Total,  , tionsclassifica, Correct, Number, Accuracy, ,  ] 

>> PoS Tags are: 
[('classifier', 'NOUN'), ('(', 'PUNCT'), ('Algorithm', 'PROPN'), (')', 'PUNCT'), ('evaluation', 'NOUN'), ('  ', 'SPACE'), ('based', 'VERB'), ('prediction', 'NOUN'), ('accuracy', 'NOUN'), ('measured', 'VERB'), ('  ', 'SPACE'), ('given', 'VERB'), ('formula', 'NOUN'), ('    ', 'SPACE'), ('cases', 'NOUN'), ('test', 'NOUN'), ('number', 'NOUN'), ('Total', 'PROPN'), (' ', 'SPACE'), ('tionsclassifica', 'ADJ'), ('Correct', 'PROPN'), ('Number', 'PROPN'), ('Accuracy', 'PROPN'), ('\uf03d', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('classifier', 'poss'), ('(', 'punct'), ('Algorithm', 'nmod'), (')', 'punct'), ('evaluation', 'nsubj'), ('  ', 'attr'), ('based', 'acl'), ('prediction', 'compound'), ('accuracy', 'pobj'), ('measured', 'conj'), ('  ', 'dobj'), ('given', 'pcomp'), ('formula', 'pobj'), ('    ', 'nummod'), ('cases', 'compound'), ('test', 'dobj'), ('number', 'pobj'), ('Total', 'appos'), (' ', 'nummod'), ('tionsclassifica', 'amod'), ('Correct', 'punct'), ('Number', 'compound'), ('Accuracy', 'pobj'), ('\uf03d', 'compound'), (' ', 'appos')]

>> Bigrams: 
[[classifier, (], [(, Algorithm], [Algorithm, )], [), evaluation], [evaluation,   ], [  , based], [based, prediction], [prediction, accuracy], [accuracy, measured], [measured,   ], [  , given], [given, formula], [formula,     ], [    , cases], [cases, test], [test, number], [number, Total], [Total,  ], [ , tionsclassifica], [tionsclassifica, Correct], [Correct, Number], [Number, Accuracy], [Accuracy, ], [,  ]]

>> Trigrams: 
[[classifier, (, Algorithm], [(, Algorithm, )], [Algorithm, ), evaluation], [), evaluation,   ], [evaluation,   , based], [  , based, prediction], [based, prediction, accuracy], [prediction, accuracy, measured], [accuracy, measured,   ], [measured,   , given], [  , given, formula], [given, formula,     ], [formula,     , cases], [    , cases, test], [cases, test, number], [test, number, Total], [number, Total,  ], [Total,  , tionsclassifica], [ , tionsclassifica, Correct], [tionsclassifica, Correct, Number], [Correct, Number, Accuracy], [Number, Accuracy, ], [Accuracy, ,  ]]

>> Noun Phrases are: 
[The classifier’s (Algorithm) evaluation, prediction accuracy, it, formula,     cases test, number, Total, Number Accuracy]

>> Named Entities are: 
[]


============================ Sentence 77 =============================

(1)    


>> Tokens are: 
[(, 1, ),   ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('1', 'meta'), (')', 'punct'), ('  ', 'ROOT')]

>> Bigrams: 
[[(, 1], [1, )], [),   ]]

>> Trigrams: 
[[(, 1, )], [1, ),   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 78 =============================

There are number of methods which are being used by   different researchers to calculate classifier’s accuracy. 


>> Tokens are: 
[number, methods,   , different, researchers, calculate, classifier, accuracy, .] 

>> PoS Tags are: 
[('number', 'NOUN'), ('methods', 'NOUN'), ('  ', 'SPACE'), ('different', 'ADJ'), ('researchers', 'NOUN'), ('calculate', 'VERB'), ('classifier', 'NOUN'), ('accuracy', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('number', 'attr'), ('methods', 'pobj'), ('  ', 'nummod'), ('different', 'amod'), ('researchers', 'pobj'), ('calculate', 'xcomp'), ('classifier', 'poss'), ('accuracy', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[number, methods], [methods,   ], [  , different], [different, researchers], [researchers, calculate], [calculate, classifier], [classifier, accuracy], [accuracy, .]]

>> Trigrams: 
[[number, methods,   ], [methods,   , different], [  , different, researchers], [different, researchers, calculate], [researchers, calculate, classifier], [calculate, classifier, accuracy], [classifier, accuracy, .]]

>> Noun Phrases are: 
[number, methods,   different researchers, classifier’s accuracy]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

Some   researcher’s splits the training set in such a way that, two-thirds   retain for training and the other third for estimating performance. 


>> Tokens are: 
[  , researcher, splits, training, set, way, ,, -, thirds,   , retain, training, estimating, performance, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('researcher', 'NOUN'), ('splits', 'VERB'), ('training', 'NOUN'), ('set', 'VERB'), ('way', 'NOUN'), (',', 'PUNCT'), ('-', 'PUNCT'), ('thirds', 'NOUN'), ('  ', 'SPACE'), ('retain', 'VERB'), ('training', 'NOUN'), ('estimating', 'VERB'), ('performance', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('researcher', 'nsubj'), ('splits', 'ROOT'), ('training', 'dobj'), ('set', 'acl'), ('way', 'pobj'), (',', 'punct'), ('-', 'punct'), ('thirds', 'nsubj'), ('  ', 'appos'), ('retain', 'relcl'), ('training', 'pobj'), ('estimating', 'pcomp'), ('performance', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[  , researcher], [researcher, splits], [splits, training], [training, set], [set, way], [way, ,], [,, -], [-, thirds], [thirds,   ], [  , retain], [retain, training], [training, estimating], [estimating, performance], [performance, .]]

>> Trigrams: 
[[  , researcher, splits], [researcher, splits, training], [splits, training, set], [training, set, way], [set, way, ,], [way, ,, -], [,, -, thirds], [-, thirds,   ], [thirds,   , retain], [  , retain, training], [retain, training, estimating], [training, estimating, performance], [estimating, performance, .]]

>> Noun Phrases are: 
[Some   researcher, the training, such a way, two-thirds, training, performance]

>> Named Entities are: 
[('two-thirds', 'CARDINAL'), ('third', 'ORDINAL')]


============================ Sentence 80 =============================

  Cross-Validation (CV) or Rotation Estimation is another   approach. 


>> Tokens are: 
[  , Cross, -, Validation, (, CV, ), Rotation, Estimation,   , approach, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Cross', 'PROPN'), ('-', 'PROPN'), ('Validation', 'PROPN'), ('(', 'PUNCT'), ('CV', 'PROPN'), (')', 'PUNCT'), ('Rotation', 'PROPN'), ('Estimation', 'PROPN'), ('  ', 'SPACE'), ('approach', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Cross', 'compound'), ('-', 'punct'), ('Validation', 'nmod'), ('(', 'punct'), ('CV', 'appos'), (')', 'punct'), ('Rotation', 'compound'), ('Estimation', 'nsubj'), ('  ', 'compound'), ('approach', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[  , Cross], [Cross, -], [-, Validation], [Validation, (], [(, CV], [CV, )], [), Rotation], [Rotation, Estimation], [Estimation,   ], [  , approach], [approach, .]]

>> Trigrams: 
[[  , Cross, -], [Cross, -, Validation], [-, Validation, (], [Validation, (, CV], [(, CV, )], [CV, ), Rotation], [), Rotation, Estimation], [Rotation, Estimation,   ], [Estimation,   , approach], [  , approach, .]]

>> Noun Phrases are: 
[(CV, another   approach]

>> Named Entities are: 
[('Cross-Validation', 'ORG'), ('Rotation Estimation', 'ORG')]


============================ Sentence 81 =============================

CV provides a way to make a better use of the   available sample. 


>> Tokens are: 
[CV, provides, way, better, use,   , available, sample, .] 

>> PoS Tags are: 
[('CV', 'NOUN'), ('provides', 'VERB'), ('way', 'NOUN'), ('better', 'ADJ'), ('use', 'NOUN'), ('  ', 'SPACE'), ('available', 'ADJ'), ('sample', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CV', 'nsubj'), ('provides', 'ROOT'), ('way', 'dobj'), ('better', 'amod'), ('use', 'dobj'), ('  ', 'nmod'), ('available', 'amod'), ('sample', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[CV, provides], [provides, way], [way, better], [better, use], [use,   ], [  , available], [available, sample], [sample, .]]

>> Trigrams: 
[[CV, provides, way], [provides, way, better], [way, better, use], [better, use,   ], [use,   , available], [  , available, sample], [available, sample, .]]

>> Noun Phrases are: 
[CV, a way, a better use, the   available sample]

>> Named Entities are: 
[('CV', 'ORG')]


============================ Sentence 82 =============================

In k-fold cross-validation scheme, we divide   the learning sample into k disjoint subsets of the same size, i.e.--    klslslsls  211   


>> Tokens are: 
[k, -, fold, cross, -, validation, scheme, ,, divide,   , learning, sample, k, disjoint, subsets, size, ,, i.e.--,    , klslslsls, , 211,  ] 

>> PoS Tags are: 
[('k', 'DET'), ('-', 'ADJ'), ('fold', 'ADJ'), ('cross', 'ADJ'), ('-', 'ADJ'), ('validation', 'ADJ'), ('scheme', 'NOUN'), (',', 'PUNCT'), ('divide', 'VERB'), ('  ', 'SPACE'), ('learning', 'VERB'), ('sample', 'NOUN'), ('k', 'PUNCT'), ('disjoint', 'NOUN'), ('subsets', 'NOUN'), ('size', 'NOUN'), (',', 'PUNCT'), ('i.e.--', 'NOUN'), ('   ', 'SPACE'), ('klslslsls', 'NOUN'), ('\uf0c8\uf0c8\uf03d', 'NUM'), ('211', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('k', 'det'), ('-', 'amod'), ('fold', 'amod'), ('cross', 'amod'), ('-', 'amod'), ('validation', 'amod'), ('scheme', 'pobj'), (',', 'punct'), ('divide', 'ROOT'), ('  ', 'dobj'), ('learning', 'amod'), ('sample', 'dobj'), ('k', 'pobj'), ('disjoint', 'compound'), ('subsets', 'pobj'), ('size', 'pobj'), (',', 'punct'), ('i.e.--', 'punct'), ('   ', 'nummod'), ('klslslsls', 'dobj'), ('\uf0c8\uf0c8\uf03d', 'appos'), ('211', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[k, -], [-, fold], [fold, cross], [cross, -], [-, validation], [validation, scheme], [scheme, ,], [,, divide], [divide,   ], [  , learning], [learning, sample], [sample, k], [k, disjoint], [disjoint, subsets], [subsets, size], [size, ,], [,, i.e.--], [i.e.--,    ], [   , klslslsls], [klslslsls, ], [, 211], [211,  ]]

>> Trigrams: 
[[k, -, fold], [-, fold, cross], [fold, cross, -], [cross, -, validation], [-, validation, scheme], [validation, scheme, ,], [scheme, ,, divide], [,, divide,   ], [divide,   , learning], [  , learning, sample], [learning, sample, k], [sample, k, disjoint], [k, disjoint, subsets], [disjoint, subsets, size], [subsets, size, ,], [size, ,, i.e.--], [,, i.e.--,    ], [i.e.--,    , klslslsls], [   , klslslsls, ], [klslslsls, , 211], [, 211,  ]]

>> Noun Phrases are: 
[k-fold cross-validation scheme, we, the learning sample, disjoint subsets, the same size,    klslslsls]

>> Named Entities are: 
[]


============================ Sentence 83 =============================

(2)    


>> Tokens are: 
[(, 2, ),   ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('2', 'ROOT'), (')', 'punct'), ('  ', 'punct')]

>> Bigrams: 
[[(, 2], [2, )], [),   ]]

>> Trigrams: 
[[(, 2, )], [2, ),   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 84 =============================

A model is then inferred by the learning algorithm from each   sample ls\ls, i = 1,..,k and its performance is determined on the   held out sample lsi. 


>> Tokens are: 
[model, inferred, learning, algorithm,   , sample, ls\ls, ,, =, 1,, .., ,k, performance, determined,   , held, sample, lsi, .] 

>> PoS Tags are: 
[('model', 'NOUN'), ('inferred', 'VERB'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('  ', 'SPACE'), ('sample', 'NOUN'), ('ls\\ls', 'NOUN'), (',', 'PUNCT'), ('=', 'X'), ('1,', 'ADJ'), ('..', 'PUNCT'), (',k', 'PUNCT'), ('performance', 'NOUN'), ('determined', 'VERB'), ('  ', 'SPACE'), ('held', 'VERB'), ('sample', 'NOUN'), ('lsi', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('model', 'nsubjpass'), ('inferred', 'ccomp'), ('learning', 'amod'), ('algorithm', 'pobj'), ('  ', 'nummod'), ('sample', 'compound'), ('ls\\ls', 'pobj'), (',', 'punct'), ('=', 'punct'), ('1,', 'ROOT'), ('..', 'punct'), (',k', 'punct'), ('performance', 'nsubjpass'), ('determined', 'conj'), ('  ', 'pobj'), ('held', 'acl'), ('sample', 'compound'), ('lsi', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[model, inferred], [inferred, learning], [learning, algorithm], [algorithm,   ], [  , sample], [sample, ls\ls], [ls\ls, ,], [,, =], [=, 1,], [1,, ..], [.., ,k], [,k, performance], [performance, determined], [determined,   ], [  , held], [held, sample], [sample, lsi], [lsi, .]]

>> Trigrams: 
[[model, inferred, learning], [inferred, learning, algorithm], [learning, algorithm,   ], [algorithm,   , sample], [  , sample, ls\ls], [sample, ls\ls, ,], [ls\ls, ,, =], [,, =, 1,], [=, 1,, ..], [1,, .., ,k], [.., ,k, performance], [,k, performance, determined], [performance, determined,   ], [determined,   , held], [  , held, sample], [held, sample, lsi], [sample, lsi, .]]

>> Noun Phrases are: 
[A model, the learning algorithm, each   sample ls\ls, its performance, sample lsi]

>> Named Entities are: 
[]


============================ Sentence 85 =============================

Final performance is computed as the   average performance over all these models. 


>> Tokens are: 
[Final, performance, computed,   , average, performance, models, .] 

>> PoS Tags are: 
[('Final', 'ADJ'), ('performance', 'NOUN'), ('computed', 'VERB'), ('  ', 'SPACE'), ('average', 'ADJ'), ('performance', 'NOUN'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Final', 'amod'), ('performance', 'nsubjpass'), ('computed', 'ROOT'), ('  ', 'nmod'), ('average', 'amod'), ('performance', 'pobj'), ('models', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Final, performance], [performance, computed], [computed,   ], [  , average], [average, performance], [performance, models], [models, .]]

>> Trigrams: 
[[Final, performance, computed], [performance, computed,   ], [computed,   , average], [  , average, performance], [average, performance, models], [performance, models, .]]

>> Noun Phrases are: 
[Final performance, the   average performance, all these models]

>> Named Entities are: 
[]


============================ Sentence 86 =============================

Notice that when k is   equal to the number of objects in the learning sample, this   method is called leave-one-out. 


>> Tokens are: 
[Notice, k,   , equal, number, objects, learning, sample, ,,   , method, called, leave, -, -, .] 

>> PoS Tags are: 
[('Notice', 'NOUN'), ('k', 'NOUN'), ('  ', 'SPACE'), ('equal', 'ADJ'), ('number', 'NOUN'), ('objects', 'NOUN'), ('learning', 'VERB'), ('sample', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('method', 'NOUN'), ('called', 'VERB'), ('leave', 'VERB'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Notice', 'ROOT'), ('k', 'nsubj'), ('  ', 'attr'), ('equal', 'amod'), ('number', 'pobj'), ('objects', 'pobj'), ('learning', 'amod'), ('sample', 'pobj'), (',', 'punct'), ('  ', 'compound'), ('method', 'nsubjpass'), ('called', 'acl'), ('leave', 'oprd'), ('-', 'punct'), ('-', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Notice, k], [k,   ], [  , equal], [equal, number], [number, objects], [objects, learning], [learning, sample], [sample, ,], [,,   ], [  , method], [method, called], [called, leave], [leave, -], [-, -], [-, .]]

>> Trigrams: 
[[Notice, k,   ], [k,   , equal], [  , equal, number], [equal, number, objects], [number, objects, learning], [objects, learning, sample], [learning, sample, ,], [sample, ,,   ], [,,   , method], [  , method, called], [method, called, leave], [called, leave, -], [leave, -, -], [-, -, .]]

>> Noun Phrases are: 
[Notice, k, the number, objects, the learning sample, this   method, one-out]

>> Named Entities are: 
[]


============================ Sentence 87 =============================

Typically, smaller values of k   (10 or 20) are however preferred for computational reasons [7]. 


>> Tokens are: 
[Typically, ,, smaller, values, k,   , (, 10, 20, ), preferred, computational, reasons, [, 7, ], .] 

>> PoS Tags are: 
[('Typically', 'ADV'), (',', 'PUNCT'), ('smaller', 'ADJ'), ('values', 'NOUN'), ('k', 'NOUN'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('10', 'NUM'), ('20', 'NUM'), (')', 'PUNCT'), ('preferred', 'ADJ'), ('computational', 'ADJ'), ('reasons', 'NOUN'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Typically', 'advmod'), (',', 'punct'), ('smaller', 'amod'), ('values', 'nsubj'), ('k', 'pobj'), ('  ', 'pobj'), ('(', 'punct'), ('10', 'appos'), ('20', 'conj'), (')', 'punct'), ('preferred', 'acomp'), ('computational', 'amod'), ('reasons', 'pobj'), ('[', 'punct'), ('7', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Typically, ,], [,, smaller], [smaller, values], [values, k], [k,   ], [  , (], [(, 10], [10, 20], [20, )], [), preferred], [preferred, computational], [computational, reasons], [reasons, [], [[, 7], [7, ]], [], .]]

>> Trigrams: 
[[Typically, ,, smaller], [,, smaller, values], [smaller, values, k], [values, k,   ], [k,   , (], [  , (, 10], [(, 10, 20], [10, 20, )], [20, ), preferred], [), preferred, computational], [preferred, computational, reasons], [computational, reasons, [], [reasons, [, 7], [[, 7, ]], [7, ], .]]

>> Noun Phrases are: 
[smaller values, k, computational reasons]

>> Named Entities are: 
[('10 or 20', 'CARDINAL')]


============================ Sentence 88 =============================

  The comparison between supervised ML methods can be done   through to perform statistical comparisons of the accuracies of   trained classifiers on specific datasets. 


>> Tokens are: 
[  , comparison, supervised, ML, methods,   , perform, statistical, comparisons, accuracies,   , trained, classifiers, specific, datasets, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('comparison', 'NOUN'), ('supervised', 'VERB'), ('ML', 'PROPN'), ('methods', 'NOUN'), ('  ', 'SPACE'), ('perform', 'VERB'), ('statistical', 'ADJ'), ('comparisons', 'NOUN'), ('accuracies', 'NOUN'), ('  ', 'SPACE'), ('trained', 'VERB'), ('classifiers', 'NOUN'), ('specific', 'ADJ'), ('datasets', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('comparison', 'nsubjpass'), ('supervised', 'amod'), ('ML', 'compound'), ('methods', 'pobj'), ('  ', 'dobj'), ('perform', 'advcl'), ('statistical', 'amod'), ('comparisons', 'dobj'), ('accuracies', 'pobj'), ('  ', 'nmod'), ('trained', 'amod'), ('classifiers', 'pobj'), ('specific', 'amod'), ('datasets', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , comparison], [comparison, supervised], [supervised, ML], [ML, methods], [methods,   ], [  , perform], [perform, statistical], [statistical, comparisons], [comparisons, accuracies], [accuracies,   ], [  , trained], [trained, classifiers], [classifiers, specific], [specific, datasets], [datasets, .]]

>> Trigrams: 
[[  , comparison, supervised], [comparison, supervised, ML], [supervised, ML, methods], [ML, methods,   ], [methods,   , perform], [  , perform, statistical], [perform, statistical, comparisons], [statistical, comparisons, accuracies], [comparisons, accuracies,   ], [accuracies,   , trained], [  , trained, classifiers], [trained, classifiers, specific], [classifiers, specific, datasets], [specific, datasets, .]]

>> Noun Phrases are: 
[The comparison, supervised ML methods, statistical comparisons, the accuracies,   trained classifiers, specific datasets]

>> Named Entities are: 
[]


============================ Sentence 89 =============================

For doing this we can run   two different learning algorithms on samples of training set of size   N, estimate the difference in accuracy for each pair of classifiers   on a large test set[1]. 


>> Tokens are: 
[run,   , different, learning, algorithms, samples, training, set, size,   , N, ,, estimate, difference, accuracy, pair, classifiers,   , large, test, set[1, ], .] 

>> PoS Tags are: 
[('run', 'VERB'), ('  ', 'SPACE'), ('different', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('samples', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('size', 'NOUN'), ('  ', 'SPACE'), ('N', 'PROPN'), (',', 'PUNCT'), ('estimate', 'VERB'), ('difference', 'NOUN'), ('accuracy', 'NOUN'), ('pair', 'NOUN'), ('classifiers', 'NOUN'), ('  ', 'SPACE'), ('large', 'ADJ'), ('test', 'NOUN'), ('set[1', 'NOUN'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('run', 'ROOT'), ('  ', 'poss'), ('different', 'amod'), ('learning', 'amod'), ('algorithms', 'dobj'), ('samples', 'pobj'), ('training', 'compound'), ('set', 'pobj'), ('size', 'pobj'), ('  ', 'compound'), ('N', 'npadvmod'), (',', 'punct'), ('estimate', 'conj'), ('difference', 'dobj'), ('accuracy', 'pobj'), ('pair', 'pobj'), ('classifiers', 'pobj'), ('  ', 'dobj'), ('large', 'amod'), ('test', 'compound'), ('set[1', 'pobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[run,   ], [  , different], [different, learning], [learning, algorithms], [algorithms, samples], [samples, training], [training, set], [set, size], [size,   ], [  , N], [N, ,], [,, estimate], [estimate, difference], [difference, accuracy], [accuracy, pair], [pair, classifiers], [classifiers,   ], [  , large], [large, test], [test, set[1], [set[1, ]], [], .]]

>> Trigrams: 
[[run,   , different], [  , different, learning], [different, learning, algorithms], [learning, algorithms, samples], [algorithms, samples, training], [samples, training, set], [training, set, size], [set, size,   ], [size,   , N], [  , N, ,], [N, ,, estimate], [,, estimate, difference], [estimate, difference, accuracy], [difference, accuracy, pair], [accuracy, pair, classifiers], [pair, classifiers,   ], [classifiers,   , large], [  , large, test], [large, test, set[1], [test, set[1, ]], [set[1, ], .]]

>> Noun Phrases are: 
[we,   two different learning algorithms, samples, training set, size, the difference, accuracy, each pair, classifiers, a large test set[1]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 90 =============================

For classification of data, a good number of   techniques have been developed by researchers, such as logical   statistics based techniques. 


>> Tokens are: 
[classification, data, ,, good, number,   , techniques, developed, researchers, ,, logical,   , statistics, based, techniques, .] 

>> PoS Tags are: 
[('classification', 'NOUN'), ('data', 'NOUN'), (',', 'PUNCT'), ('good', 'ADJ'), ('number', 'NOUN'), ('  ', 'SPACE'), ('techniques', 'NOUN'), ('developed', 'VERB'), ('researchers', 'NOUN'), (',', 'PUNCT'), ('logical', 'ADJ'), ('  ', 'SPACE'), ('statistics', 'NOUN'), ('based', 'VERB'), ('techniques', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('classification', 'pobj'), ('data', 'pobj'), (',', 'punct'), ('good', 'amod'), ('number', 'nsubjpass'), ('  ', 'compound'), ('techniques', 'pobj'), ('developed', 'ROOT'), ('researchers', 'pobj'), (',', 'punct'), ('logical', 'amod'), ('  ', 'nmod'), ('statistics', 'npadvmod'), ('based', 'amod'), ('techniques', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[classification, data], [data, ,], [,, good], [good, number], [number,   ], [  , techniques], [techniques, developed], [developed, researchers], [researchers, ,], [,, logical], [logical,   ], [  , statistics], [statistics, based], [based, techniques], [techniques, .]]

>> Trigrams: 
[[classification, data, ,], [data, ,, good], [,, good, number], [good, number,   ], [number,   , techniques], [  , techniques, developed], [techniques, developed, researchers], [developed, researchers, ,], [researchers, ,, logical], [,, logical,   ], [logical,   , statistics], [  , statistics, based], [statistics, based, techniques], [based, techniques, .]]

>> Noun Phrases are: 
[classification, data, a good number,   techniques, researchers, logical   statistics based techniques]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

In next sections, we will precisely   discuss the most important supervised machine learning   techniques, starting with logical techniques [1]. 


>> Tokens are: 
[sections, ,, precisely,   , discuss, important, supervised, machine, learning,   , techniques, ,, starting, logical, techniques, [, 1, ], .] 

>> PoS Tags are: 
[('sections', 'NOUN'), (',', 'PUNCT'), ('precisely', 'ADV'), ('  ', 'SPACE'), ('discuss', 'VERB'), ('important', 'ADJ'), ('supervised', 'ADJ'), ('machine', 'NOUN'), ('learning', 'VERB'), ('  ', 'SPACE'), ('techniques', 'NOUN'), (',', 'PUNCT'), ('starting', 'VERB'), ('logical', 'ADJ'), ('techniques', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sections', 'pobj'), (',', 'punct'), ('precisely', 'advmod'), ('  ', 'nsubj'), ('discuss', 'ROOT'), ('important', 'amod'), ('supervised', 'amod'), ('machine', 'dobj'), ('learning', 'acl'), ('  ', 'compound'), ('techniques', 'dobj'), (',', 'punct'), ('starting', 'advcl'), ('logical', 'amod'), ('techniques', 'pobj'), ('[', 'punct'), ('1', 'prep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[sections, ,], [,, precisely], [precisely,   ], [  , discuss], [discuss, important], [important, supervised], [supervised, machine], [machine, learning], [learning,   ], [  , techniques], [techniques, ,], [,, starting], [starting, logical], [logical, techniques], [techniques, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[sections, ,, precisely], [,, precisely,   ], [precisely,   , discuss], [  , discuss, important], [discuss, important, supervised], [important, supervised, machine], [supervised, machine, learning], [machine, learning,   ], [learning,   , techniques], [  , techniques, ,], [techniques, ,, starting], [,, starting, logical], [starting, logical, techniques], [logical, techniques, [], [techniques, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[next sections, we, the most important supervised machine,   techniques, logical techniques]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 92 =============================

  3. 


>> Tokens are: 
[  , 3, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 3], [3, .]]

>> Trigrams: 
[[  , 3, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 93 =============================

LOGIC BASED 


>> Tokens are: 
[LOGIC, BASED] 

>> PoS Tags are: 
[('LOGIC', 'PROPN'), ('BASED', 'PROPN')] 

>> Dependency Tags are: 
[('LOGIC', 'compound'), ('BASED', 'ROOT')]

>> Bigrams: 
[[LOGIC, BASED]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[LOGIC BASED]

>> Named Entities are: 
[]


============================ Sentence 94 =============================

ALGORITHMS     


>> Tokens are: 
[ALGORITHMS,    ] 

>> PoS Tags are: 
[('ALGORITHMS', 'PROPN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('ALGORITHMS', 'ROOT'), ('   ', 'nummod')]

>> Bigrams: 
[[ALGORITHMS,    ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[ALGORITHMS]

>> Named Entities are: 
[]


============================ Sentence 95 =============================

In this section we will discuss two logical (symbolic)   learning methods: decision trees and rule-based classifiers. 


>> Tokens are: 
[section, discuss, logical, (, symbolic, ),   , learning, methods, :, decision, trees, rule, -, based, classifiers, .] 

>> PoS Tags are: 
[('section', 'NOUN'), ('discuss', 'VERB'), ('logical', 'ADJ'), ('(', 'PUNCT'), ('symbolic', 'ADJ'), (')', 'PUNCT'), ('  ', 'SPACE'), ('learning', 'VERB'), ('methods', 'NOUN'), (':', 'PUNCT'), ('decision', 'NOUN'), ('trees', 'NOUN'), ('rule', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('classifiers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('section', 'pobj'), ('discuss', 'ROOT'), ('logical', 'amod'), ('(', 'punct'), ('symbolic', 'dobj'), (')', 'punct'), ('  ', 'dobj'), ('learning', 'acl'), ('methods', 'dobj'), (':', 'punct'), ('decision', 'compound'), ('trees', 'conj'), ('rule', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('classifiers', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[section, discuss], [discuss, logical], [logical, (], [(, symbolic], [symbolic, )], [),   ], [  , learning], [learning, methods], [methods, :], [:, decision], [decision, trees], [trees, rule], [rule, -], [-, based], [based, classifiers], [classifiers, .]]

>> Trigrams: 
[[section, discuss, logical], [discuss, logical, (], [logical, (, symbolic], [(, symbolic, )], [symbolic, ),   ], [),   , learning], [  , learning, methods], [learning, methods, :], [methods, :, decision], [:, decision, trees], [decision, trees, rule], [trees, rule, -], [rule, -, based], [-, based, classifiers], [based, classifiers, .]]

>> Noun Phrases are: 
[this section, we, methods, decision trees, rule-based classifiers]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 96 =============================

  3.1 DECISION TREES    


>> Tokens are: 
[  , 3.1, DECISION, TREES,   ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('3.1', 'NUM'), ('DECISION', 'NOUN'), ('TREES', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('3.1', 'nummod'), ('DECISION', 'compound'), ('TREES', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[  , 3.1], [3.1, DECISION], [DECISION, TREES], [TREES,   ]]

>> Trigrams: 
[[  , 3.1, DECISION], [3.1, DECISION, TREES], [DECISION, TREES,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3.1', 'CARDINAL')]


============================ Sentence 97 =============================

In machine learning domain the Decision Tree Induction [8,   9] is currently one of the most important supervised learning   algorithms. 


>> Tokens are: 
[machine, learning, domain, Decision, Tree, Induction, [, 8, ,,   , 9, ], currently, important, supervised, learning,   , algorithms, .] 

>> PoS Tags are: 
[('machine', 'NOUN'), ('learning', 'NOUN'), ('domain', 'VERB'), ('Decision', 'PROPN'), ('Tree', 'PROPN'), ('Induction', 'PROPN'), ('[', 'PUNCT'), ('8', 'NUM'), (',', 'PUNCT'), ('  ', 'SPACE'), ('9', 'NUM'), (']', 'PUNCT'), ('currently', 'ADV'), ('important', 'ADJ'), ('supervised', 'ADJ'), ('learning', 'VERB'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('machine', 'compound'), ('learning', 'nsubj'), ('domain', 'pcomp'), ('Decision', 'compound'), ('Tree', 'compound'), ('Induction', 'dobj'), ('[', 'punct'), ('8', 'parataxis'), (',', 'punct'), ('  ', 'pobj'), ('9', 'nummod'), (']', 'pobj'), ('currently', 'advmod'), ('important', 'amod'), ('supervised', 'amod'), ('learning', 'amod'), ('  ', 'nummod'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[machine, learning], [learning, domain], [domain, Decision], [Decision, Tree], [Tree, Induction], [Induction, [], [[, 8], [8, ,], [,,   ], [  , 9], [9, ]], [], currently], [currently, important], [important, supervised], [supervised, learning], [learning,   ], [  , algorithms], [algorithms, .]]

>> Trigrams: 
[[machine, learning, domain], [learning, domain, Decision], [domain, Decision, Tree], [Decision, Tree, Induction], [Tree, Induction, [], [Induction, [, 8], [[, 8, ,], [8, ,,   ], [,,   , 9], [  , 9, ]], [9, ], currently], [], currently, important], [currently, important, supervised], [important, supervised, learning], [supervised, learning,   ], [learning,   , algorithms], [  , algorithms, .]]

>> Noun Phrases are: 
[machine learning, the Decision Tree Induction, the most important supervised learning   algorithms]

>> Named Entities are: 
[('the Decision Tree Induction [8', 'LAW'), ('9', 'CARDINAL')]


============================ Sentence 98 =============================

In Artificial Intelligence (AI) field, Quinlan has   contributed through his ID3 and C4.5 algorithms. 


>> Tokens are: 
[Artificial, Intelligence, (, AI, ), field, ,, Quinlan,   , contributed, ID3, C4.5, algorithms, .] 

>> PoS Tags are: 
[('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('(', 'PUNCT'), ('AI', 'PROPN'), (')', 'PUNCT'), ('field', 'NOUN'), (',', 'PUNCT'), ('Quinlan', 'PROPN'), ('  ', 'SPACE'), ('contributed', 'VERB'), ('ID3', 'PROPN'), ('C4.5', 'PROPN'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Artificial', 'nmod'), ('Intelligence', 'nmod'), ('(', 'punct'), ('AI', 'nmod'), (')', 'punct'), ('field', 'pobj'), (',', 'punct'), ('Quinlan', 'nsubj'), ('  ', 'nsubj'), ('contributed', 'ccomp'), ('ID3', 'pobj'), ('C4.5', 'conj'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Artificial, Intelligence], [Intelligence, (], [(, AI], [AI, )], [), field], [field, ,], [,, Quinlan], [Quinlan,   ], [  , contributed], [contributed, ID3], [ID3, C4.5], [C4.5, algorithms], [algorithms, .]]

>> Trigrams: 
[[Artificial, Intelligence, (], [Intelligence, (, AI], [(, AI, )], [AI, ), field], [), field, ,], [field, ,, Quinlan], [,, Quinlan,   ], [Quinlan,   , contributed], [  , contributed, ID3], [contributed, ID3, C4.5], [ID3, C4.5, algorithms], [C4.5, algorithms, .]]

>> Noun Phrases are: 
[Artificial Intelligence (AI) field, Quinlan, his ID3, C4.5, algorithms]

>> Named Entities are: 
[('Artificial Intelligence', 'ORG'), ('Quinlan', 'PERSON')]


============================ Sentence 99 =============================

C4.5 is one of   the most popular and the efficient method in decision tree-based   approach. 


>> Tokens are: 
[C4.5,   , popular, efficient, method, decision, tree, -, based,   , approach, .] 

>> PoS Tags are: 
[('C4.5', 'PROPN'), ('  ', 'SPACE'), ('popular', 'ADJ'), ('efficient', 'ADJ'), ('method', 'NOUN'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('  ', 'SPACE'), ('approach', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('C4.5', 'nsubj'), ('  ', 'pobj'), ('popular', 'amod'), ('efficient', 'amod'), ('method', 'conj'), ('decision', 'compound'), ('tree', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('  ', 'compound'), ('approach', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[C4.5,   ], [  , popular], [popular, efficient], [efficient, method], [method, decision], [decision, tree], [tree, -], [-, based], [based,   ], [  , approach], [approach, .]]

>> Trigrams: 
[[C4.5,   , popular], [  , popular, efficient], [popular, efficient, method], [efficient, method, decision], [method, decision, tree], [decision, tree, -], [tree, -, based], [-, based,   ], [based,   , approach], [  , approach, .]]

>> Noun Phrases are: 
[C4.5, decision tree-based   approach]

>> Named Entities are: 
[]


============================ Sentence 100 =============================

Here C4.5 algorithm creates a tree model by using   values of only one attribute at a time [10]. 


>> Tokens are: 
[C4.5, algorithm, creates, tree, model,   , values, attribute, time, [, 10, ], .] 

>> PoS Tags are: 
[('C4.5', 'PROPN'), ('algorithm', 'NOUN'), ('creates', 'VERB'), ('tree', 'NOUN'), ('model', 'NOUN'), ('  ', 'SPACE'), ('values', 'NOUN'), ('attribute', 'NOUN'), ('time', 'NOUN'), ('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('C4.5', 'compound'), ('algorithm', 'nsubj'), ('creates', 'ROOT'), ('tree', 'compound'), ('model', 'dobj'), ('  ', 'nummod'), ('values', 'dobj'), ('attribute', 'pobj'), ('time', 'pobj'), ('[', 'punct'), ('10', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[C4.5, algorithm], [algorithm, creates], [creates, tree], [tree, model], [model,   ], [  , values], [values, attribute], [attribute, time], [time, [], [[, 10], [10, ]], [], .]]

>> Trigrams: 
[[C4.5, algorithm, creates], [algorithm, creates, tree], [creates, tree, model], [tree, model,   ], [model,   , values], [  , values, attribute], [values, attribute, time], [attribute, time, [], [time, [, 10], [[, 10, ]], [10, ], .]]

>> Noun Phrases are: 
[C4.5 algorithm, a tree model,   values, only one attribute, a time]

>> Named Entities are: 
[('only one', 'CARDINAL'), ('10', 'CARDINAL')]


============================ Sentence 101 =============================

According to authors   [7], the decision tree induction, which was initially designed to   solve classification problems, has been extended to deal with   single or multi-dimensional regression. 


>> Tokens are: 
[According, authors,   , [, 7, ], ,, decision, tree, induction, ,, initially, designed,   , solve, classification, problems, ,, extended, deal,   , single, multi, -, dimensional, regression, .] 

>> PoS Tags are: 
[('According', 'VERB'), ('authors', 'NOUN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('induction', 'NOUN'), (',', 'PUNCT'), ('initially', 'ADV'), ('designed', 'VERB'), ('  ', 'SPACE'), ('solve', 'VERB'), ('classification', 'NOUN'), ('problems', 'NOUN'), (',', 'PUNCT'), ('extended', 'VERB'), ('deal', 'VERB'), ('  ', 'SPACE'), ('single', 'ADJ'), ('multi', 'ADJ'), ('-', 'ADJ'), ('dimensional', 'ADJ'), ('regression', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('According', 'prep'), ('authors', 'pobj'), ('  ', 'pobj'), ('[', 'punct'), ('7', 'appos'), (']', 'punct'), (',', 'punct'), ('decision', 'compound'), ('tree', 'compound'), ('induction', 'nsubj'), (',', 'punct'), ('initially', 'advmod'), ('designed', 'relcl'), ('  ', 'pobj'), ('solve', 'advcl'), ('classification', 'compound'), ('problems', 'dobj'), (',', 'punct'), ('extended', 'ROOT'), ('deal', 'advcl'), ('  ', 'nmod'), ('single', 'amod'), ('multi', 'conj'), ('-', 'amod'), ('dimensional', 'amod'), ('regression', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[According, authors], [authors,   ], [  , [], [[, 7], [7, ]], [], ,], [,, decision], [decision, tree], [tree, induction], [induction, ,], [,, initially], [initially, designed], [designed,   ], [  , solve], [solve, classification], [classification, problems], [problems, ,], [,, extended], [extended, deal], [deal,   ], [  , single], [single, multi], [multi, -], [-, dimensional], [dimensional, regression], [regression, .]]

>> Trigrams: 
[[According, authors,   ], [authors,   , [], [  , [, 7], [[, 7, ]], [7, ], ,], [], ,, decision], [,, decision, tree], [decision, tree, induction], [tree, induction, ,], [induction, ,, initially], [,, initially, designed], [initially, designed,   ], [designed,   , solve], [  , solve, classification], [solve, classification, problems], [classification, problems, ,], [problems, ,, extended], [,, extended, deal], [extended, deal,   ], [deal,   , single], [  , single, multi], [single, multi, -], [multi, -, dimensional], [-, dimensional, regression], [dimensional, regression, .]]

>> Noun Phrases are: 
[authors, the decision tree induction, classification problems,   single or multi-dimensional regression]

>> Named Entities are: 
[]


============================ Sentence 102 =============================

The major benefits of   decision trees are (i) produce intensive results, (ii) easy to  understand, (iii) and holds well-organized knowledge structure   


>> Tokens are: 
[major, benefits,   , decision, trees, (, ), produce, intensive, results, ,, (, ii, ), easy,  , understand, ,, (, iii, ), holds, -, organized, knowledge, structure,  ] 

>> PoS Tags are: 
[('major', 'ADJ'), ('benefits', 'NOUN'), ('  ', 'SPACE'), ('decision', 'NOUN'), ('trees', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('produce', 'VERB'), ('intensive', 'ADJ'), ('results', 'NOUN'), (',', 'PUNCT'), ('(', 'PUNCT'), ('ii', 'NOUN'), (')', 'PUNCT'), ('easy', 'ADJ'), (' ', 'SPACE'), ('understand', 'VERB'), (',', 'PUNCT'), ('(', 'PUNCT'), ('iii', 'NOUN'), (')', 'PUNCT'), ('holds', 'VERB'), ('-', 'PUNCT'), ('organized', 'VERB'), ('knowledge', 'NOUN'), ('structure', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('major', 'amod'), ('benefits', 'nsubj'), ('  ', 'compound'), ('decision', 'compound'), ('trees', 'pobj'), ('(', 'punct'), (')', 'punct'), ('produce', 'ROOT'), ('intensive', 'amod'), ('results', 'dobj'), (',', 'punct'), ('(', 'punct'), ('ii', 'parataxis'), (')', 'punct'), ('easy', 'advmod'), (' ', 'nsubj'), ('understand', 'xcomp'), (',', 'punct'), ('(', 'punct'), ('iii', 'parataxis'), (')', 'punct'), ('holds', 'conj'), ('-', 'punct'), ('organized', 'amod'), ('knowledge', 'compound'), ('structure', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[major, benefits], [benefits,   ], [  , decision], [decision, trees], [trees, (], [(, )], [), produce], [produce, intensive], [intensive, results], [results, ,], [,, (], [(, ii], [ii, )], [), easy], [easy,  ], [ , understand], [understand, ,], [,, (], [(, iii], [iii, )], [), holds], [holds, -], [-, organized], [organized, knowledge], [knowledge, structure], [structure,  ]]

>> Trigrams: 
[[major, benefits,   ], [benefits,   , decision], [  , decision, trees], [decision, trees, (], [trees, (, )], [(, ), produce], [), produce, intensive], [produce, intensive, results], [intensive, results, ,], [results, ,, (], [,, (, ii], [(, ii, )], [ii, ), easy], [), easy,  ], [easy,  , understand], [ , understand, ,], [understand, ,, (], [,, (, iii], [(, iii, )], [iii, ), holds], [), holds, -], [holds, -, organized], [-, organized, knowledge], [organized, knowledge, structure], [knowledge, structure,  ]]

>> Noun Phrases are: 
[The major benefits,   decision trees, intensive results, well-organized knowledge structure]

>> Named Entities are: 
[]


============================ Sentence 103 =============================

[28]. 


>> Tokens are: 
[[, 28, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('28', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 28], [28, ]], [], .]]

>> Trigrams: 
[[[, 28, ]], [28, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('28', 'CARDINAL')]


============================ Sentence 104 =============================

  Decision Trees (DT) are trees that classify instances by   sorting them based on feature values, where each node in a   decision tree represents a feature in an instance to be classified,   and each branch represents a value that the node can assume [1]. 


>> Tokens are: 
[  , Decision, Trees, (, DT, ), trees, classify, instances,   , sorting, based, feature, values, ,, node,   , decision, tree, represents, feature, instance, classified, ,,   , branch, represents, value, node, assume, [, 1, ], .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Decision', 'NOUN'), ('Trees', 'PROPN'), ('(', 'PUNCT'), ('DT', 'PROPN'), (')', 'PUNCT'), ('trees', 'NOUN'), ('classify', 'VERB'), ('instances', 'NOUN'), ('  ', 'SPACE'), ('sorting', 'VERB'), ('based', 'VERB'), ('feature', 'NOUN'), ('values', 'NOUN'), (',', 'PUNCT'), ('node', 'NOUN'), ('  ', 'SPACE'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('represents', 'VERB'), ('feature', 'NOUN'), ('instance', 'NOUN'), ('classified', 'VERB'), (',', 'PUNCT'), ('  ', 'SPACE'), ('branch', 'NOUN'), ('represents', 'VERB'), ('value', 'NOUN'), ('node', 'NOUN'), ('assume', 'VERB'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Decision', 'compound'), ('Trees', 'nsubj'), ('(', 'punct'), ('DT', 'appos'), (')', 'punct'), ('trees', 'attr'), ('classify', 'relcl'), ('instances', 'dobj'), ('  ', 'nsubj'), ('sorting', 'pcomp'), ('based', 'prep'), ('feature', 'compound'), ('values', 'pobj'), (',', 'punct'), ('node', 'nsubj'), ('  ', 'nummod'), ('decision', 'compound'), ('tree', 'pobj'), ('represents', 'relcl'), ('feature', 'dobj'), ('instance', 'pobj'), ('classified', 'acomp'), (',', 'punct'), ('  ', 'conj'), ('branch', 'conj'), ('represents', 'conj'), ('value', 'dobj'), ('node', 'nsubj'), ('assume', 'relcl'), ('[', 'punct'), ('1', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[  , Decision], [Decision, Trees], [Trees, (], [(, DT], [DT, )], [), trees], [trees, classify], [classify, instances], [instances,   ], [  , sorting], [sorting, based], [based, feature], [feature, values], [values, ,], [,, node], [node,   ], [  , decision], [decision, tree], [tree, represents], [represents, feature], [feature, instance], [instance, classified], [classified, ,], [,,   ], [  , branch], [branch, represents], [represents, value], [value, node], [node, assume], [assume, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[  , Decision, Trees], [Decision, Trees, (], [Trees, (, DT], [(, DT, )], [DT, ), trees], [), trees, classify], [trees, classify, instances], [classify, instances,   ], [instances,   , sorting], [  , sorting, based], [sorting, based, feature], [based, feature, values], [feature, values, ,], [values, ,, node], [,, node,   ], [node,   , decision], [  , decision, tree], [decision, tree, represents], [tree, represents, feature], [represents, feature, instance], [feature, instance, classified], [instance, classified, ,], [classified, ,,   ], [,,   , branch], [  , branch, represents], [branch, represents, value], [represents, value, node], [value, node, assume], [node, assume, [], [assume, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[  Decision Trees, DT, trees, instances, them, feature values, each node, a   decision tree, a feature, an instance, each branch, a value, the node]

>> Named Entities are: 
[('Decision Trees', 'ORG')]


============================ Sentence 105 =============================

  Instances are classified starting at the root node and sorted based   on their feature values. 


>> Tokens are: 
[  , Instances, classified, starting, root, node, sorted, based,   , feature, values, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Instances', 'NOUN'), ('classified', 'VERB'), ('starting', 'VERB'), ('root', 'NOUN'), ('node', 'NOUN'), ('sorted', 'VERB'), ('based', 'VERB'), ('  ', 'SPACE'), ('feature', 'NOUN'), ('values', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('Instances', 'nsubjpass'), ('classified', 'ROOT'), ('starting', 'prep'), ('root', 'compound'), ('node', 'pobj'), ('sorted', 'conj'), ('based', 'amod'), ('  ', 'dobj'), ('feature', 'compound'), ('values', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , Instances], [Instances, classified], [classified, starting], [starting, root], [root, node], [node, sorted], [sorted, based], [based,   ], [  , feature], [feature, values], [values, .]]

>> Trigrams: 
[[  , Instances, classified], [Instances, classified, starting], [classified, starting, root], [starting, root, node], [root, node, sorted], [node, sorted, based], [sorted, based,   ], [based,   , feature], [  , feature, values], [feature, values, .]]

>> Noun Phrases are: 
[  Instances, the root node, their feature values]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

    IQBAL MUHAMMAD AND ZHU YAN: SUPERVISED MACHINE LEARNING APPROACHES: 


>> Tokens are: 
[    , IQBAL, MUHAMMAD, ZHU, YAN, :, SUPERVISED, MACHINE, LEARNING, APPROACHES, :] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('IQBAL', 'VERB'), ('MUHAMMAD', 'PROPN'), ('ZHU', 'PROPN'), ('YAN', 'PROPN'), (':', 'PUNCT'), ('SUPERVISED', 'ADJ'), ('MACHINE', 'NOUN'), ('LEARNING', 'NOUN'), ('APPROACHES', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'nsubj'), ('IQBAL', 'ROOT'), ('MUHAMMAD', 'dobj'), ('ZHU', 'compound'), ('YAN', 'conj'), (':', 'punct'), ('SUPERVISED', 'amod'), ('MACHINE', 'compound'), ('LEARNING', 'compound'), ('APPROACHES', 'appos'), (':', 'punct')]

>> Bigrams: 
[[    , IQBAL], [IQBAL, MUHAMMAD], [MUHAMMAD, ZHU], [ZHU, YAN], [YAN, :], [:, SUPERVISED], [SUPERVISED, MACHINE], [MACHINE, LEARNING], [LEARNING, APPROACHES], [APPROACHES, :]]

>> Trigrams: 
[[    , IQBAL, MUHAMMAD], [IQBAL, MUHAMMAD, ZHU], [MUHAMMAD, ZHU, YAN], [ZHU, YAN, :], [YAN, :, SUPERVISED], [:, SUPERVISED, MACHINE], [SUPERVISED, MACHINE, LEARNING], [MACHINE, LEARNING, APPROACHES], [LEARNING, APPROACHES, :]]

>> Noun Phrases are: 
[MUHAMMAD, ZHU YAN, SUPERVISED MACHINE LEARNING APPROACHES]

>> Named Entities are: 
[('ZHU YAN', 'PERSON')]


============================ Sentence 107 =============================

A SURVEY   948    


>> Tokens are: 
[SURVEY,   , 948,   ] 

>> PoS Tags are: 
[('SURVEY', 'NOUN'), ('  ', 'SPACE'), ('948', 'NUM'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('SURVEY', 'nsubj'), ('  ', 'ROOT'), ('948', 'nummod'), ('  ', 'npadvmod')]

>> Bigrams: 
[[SURVEY,   ], [  , 948], [948,   ]]

>> Trigrams: 
[[SURVEY,   , 948], [  , 948,   ]]

>> Noun Phrases are: 
[A SURVEY]

>> Named Entities are: 
[('948', 'CARDINAL')]


============================ Sentence 108 =============================

The Fig.3 is an example of a decision tree for the training set   of Table.2. 


>> Tokens are: 
[Fig.3, example, decision, tree, training, set,   , Table.2, .] 

>> PoS Tags are: 
[('Fig.3', 'PROPN'), ('example', 'NOUN'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('training', 'NOUN'), ('set', 'VERB'), ('  ', 'SPACE'), ('Table.2', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig.3', 'nsubj'), ('example', 'attr'), ('decision', 'compound'), ('tree', 'pobj'), ('training', 'pobj'), ('set', 'dep'), ('  ', 'dobj'), ('Table.2', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Fig.3, example], [example, decision], [decision, tree], [tree, training], [training, set], [set,   ], [  , Table.2], [Table.2, .]]

>> Trigrams: 
[[Fig.3, example, decision], [example, decision, tree], [decision, tree, training], [tree, training, set], [training, set,   ], [set,   , Table.2], [  , Table.2, .]]

>> Noun Phrases are: 
[The Fig.3, an example, a decision tree, the training, Table.2]

>> Named Entities are: 
[('Fig.3', 'CARDINAL')]


============================ Sentence 109 =============================

DT are extensively used is different computational   fields to classify data. 


>> Tokens are: 
[DT, extensively, different, computational,   , fields, classify, data, .] 

>> PoS Tags are: 
[('DT', 'PRON'), ('extensively', 'ADV'), ('different', 'ADJ'), ('computational', 'ADJ'), ('  ', 'SPACE'), ('fields', 'NOUN'), ('classify', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('DT', 'nsubjpass'), ('extensively', 'advmod'), ('different', 'amod'), ('computational', 'amod'), ('  ', 'compound'), ('fields', 'attr'), ('classify', 'relcl'), ('data', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[DT, extensively], [extensively, different], [different, computational], [computational,   ], [  , fields], [fields, classify], [classify, data], [data, .]]

>> Trigrams: 
[[DT, extensively, different], [extensively, different, computational], [different, computational,   ], [computational,   , fields], [  , fields, classify], [fields, classify, data], [classify, data, .]]

>> Noun Phrases are: 
[DT, different computational   fields, data]

>> Named Entities are: 
[]


============================ Sentence 110 =============================

The reasons behinds the widely   acceptability of DT learning algorithms are their flexibility to   apply in wide range of problems. 


>> Tokens are: 
[reasons, behinds, widely,   , acceptability, DT, learning, algorithms, flexibility,   , apply, wide, range, problems, .] 

>> PoS Tags are: 
[('reasons', 'NOUN'), ('behinds', 'VERB'), ('widely', 'ADV'), ('  ', 'SPACE'), ('acceptability', 'NOUN'), ('DT', 'PROPN'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('flexibility', 'NOUN'), ('  ', 'SPACE'), ('apply', 'VERB'), ('wide', 'ADJ'), ('range', 'NOUN'), ('problems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('reasons', 'nsubj'), ('behinds', 'ROOT'), ('widely', 'advmod'), ('  ', 'nummod'), ('acceptability', 'dobj'), ('DT', 'compound'), ('learning', 'pcomp'), ('algorithms', 'dobj'), ('flexibility', 'attr'), ('  ', 'pobj'), ('apply', 'conj'), ('wide', 'amod'), ('range', 'pobj'), ('problems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[reasons, behinds], [behinds, widely], [widely,   ], [  , acceptability], [acceptability, DT], [DT, learning], [learning, algorithms], [algorithms, flexibility], [flexibility,   ], [  , apply], [apply, wide], [wide, range], [range, problems], [problems, .]]

>> Trigrams: 
[[reasons, behinds, widely], [behinds, widely,   ], [widely,   , acceptability], [  , acceptability, DT], [acceptability, DT, learning], [DT, learning, algorithms], [learning, algorithms, flexibility], [algorithms, flexibility,   ], [flexibility,   , apply], [  , apply, wide], [apply, wide, range], [wide, range, problems], [range, problems, .]]

>> Noun Phrases are: 
[The reasons, the widely   acceptability, algorithms, their flexibility, wide range, problems]

>> Named Entities are: 
[('DT', 'ORG')]


============================ Sentence 111 =============================

An interesting and important   property of a decision tree and its resulting set of rules is that the   tree paths or the rules are mutually exclusive and exhaustive. 


>> Tokens are: 
[interesting, important,   , property, decision, tree, resulting, set, rules,   , tree, paths, rules, mutually, exclusive, exhaustive, .] 

>> PoS Tags are: 
[('interesting', 'ADJ'), ('important', 'ADJ'), ('  ', 'SPACE'), ('property', 'NOUN'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('resulting', 'VERB'), ('set', 'NOUN'), ('rules', 'NOUN'), ('  ', 'SPACE'), ('tree', 'NOUN'), ('paths', 'NOUN'), ('rules', 'NOUN'), ('mutually', 'ADV'), ('exclusive', 'ADJ'), ('exhaustive', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('interesting', 'amod'), ('important', 'conj'), ('  ', 'compound'), ('property', 'nsubj'), ('decision', 'compound'), ('tree', 'pobj'), ('resulting', 'amod'), ('set', 'conj'), ('rules', 'pobj'), ('  ', 'nummod'), ('tree', 'compound'), ('paths', 'nsubj'), ('rules', 'conj'), ('mutually', 'advmod'), ('exclusive', 'acomp'), ('exhaustive', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[interesting, important], [important,   ], [  , property], [property, decision], [decision, tree], [tree, resulting], [resulting, set], [set, rules], [rules,   ], [  , tree], [tree, paths], [paths, rules], [rules, mutually], [mutually, exclusive], [exclusive, exhaustive], [exhaustive, .]]

>> Trigrams: 
[[interesting, important,   ], [important,   , property], [  , property, decision], [property, decision, tree], [decision, tree, resulting], [tree, resulting, set], [resulting, set, rules], [set, rules,   ], [rules,   , tree], [  , tree, paths], [tree, paths, rules], [paths, rules, mutually], [rules, mutually, exclusive], [mutually, exclusive, exhaustive], [exclusive, exhaustive, .]]

>> Noun Phrases are: 
[An interesting and important   property, a decision tree, its resulting set, rules, the   tree paths, the rules]

>> Named Entities are: 
[]


============================ Sentence 112 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

This means that every data instance/record/example/vector/case   is covered by a single rule. 


>> Tokens are: 
[means, data, instance, /, record, /, example, /, vector, /, case,   , covered, single, rule, .] 

>> PoS Tags are: 
[('means', 'VERB'), ('data', 'NOUN'), ('instance', 'NOUN'), ('/', 'SYM'), ('record', 'NOUN'), ('/', 'SYM'), ('example', 'NOUN'), ('/', 'SYM'), ('vector', 'NOUN'), ('/', 'SYM'), ('case', 'NOUN'), ('  ', 'SPACE'), ('covered', 'VERB'), ('single', 'ADJ'), ('rule', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('means', 'ROOT'), ('data', 'compound'), ('instance', 'nmod'), ('/', 'punct'), ('record', 'nmod'), ('/', 'punct'), ('example', 'nmod'), ('/', 'punct'), ('vector', 'nmod'), ('/', 'punct'), ('case', 'nsubjpass'), ('  ', 'nsubjpass'), ('covered', 'ccomp'), ('single', 'amod'), ('rule', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[means, data], [data, instance], [instance, /], [/, record], [record, /], [/, example], [example, /], [/, vector], [vector, /], [/, case], [case,   ], [  , covered], [covered, single], [single, rule], [rule, .]]

>> Trigrams: 
[[means, data, instance], [data, instance, /], [instance, /, record], [/, record, /], [record, /, example], [/, example, /], [example, /, vector], [/, vector, /], [vector, /, case], [/, case,   ], [case,   , covered], [  , covered, single], [covered, single, rule], [single, rule, .]]

>> Noun Phrases are: 
[every data instance/record/example/vector/case, a single rule]

>> Named Entities are: 
[]


============================ Sentence 114 =============================

According to Pierre et al. 


>> Tokens are: 
[According, Pierre, et, al, .] 

>> PoS Tags are: 
[('According', 'VERB'), ('Pierre', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('According', 'ROOT'), ('Pierre', 'compound'), ('et', 'compound'), ('al', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[According, Pierre], [Pierre, et], [et, al], [al, .]]

>> Trigrams: 
[[According, Pierre, et], [Pierre, et, al], [et, al, .]]

>> Noun Phrases are: 
[Pierre et al]

>> Named Entities are: 
[('Pierre', 'PERSON')]


============================ Sentence 115 =============================

[7], DT   algorithms combined with ensemble methods, can provide better   results in terms of predictive accuracy and significantly in the   context of high-throughput data sets, tree-based methods are also   highly scalable from a computational point of view. 


>> Tokens are: 
[[, 7, ], ,, DT,   , algorithms, combined, ensemble, methods, ,, provide, better,   , results, terms, predictive, accuracy, significantly,   , context, high, -, throughput, data, sets, ,, tree, -, based, methods,   , highly, scalable, computational, point, view, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'X'), (']', 'PUNCT'), (',', 'PUNCT'), ('DT', 'PROPN'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('combined', 'VERB'), ('ensemble', 'ADJ'), ('methods', 'NOUN'), (',', 'PUNCT'), ('provide', 'VERB'), ('better', 'ADJ'), ('  ', 'SPACE'), ('results', 'NOUN'), ('terms', 'NOUN'), ('predictive', 'ADJ'), ('accuracy', 'NOUN'), ('significantly', 'ADV'), ('  ', 'SPACE'), ('context', 'NOUN'), ('high', 'ADJ'), ('-', 'PUNCT'), ('throughput', 'NOUN'), ('data', 'NOUN'), ('sets', 'NOUN'), (',', 'PUNCT'), ('tree', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('methods', 'NOUN'), ('  ', 'SPACE'), ('highly', 'ADV'), ('scalable', 'ADJ'), ('computational', 'ADJ'), ('point', 'NOUN'), ('view', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'dep'), (']', 'dep'), (',', 'punct'), ('DT', 'compound'), ('  ', 'nmod'), ('algorithms', 'nsubj'), ('combined', 'acl'), ('ensemble', 'amod'), ('methods', 'pobj'), (',', 'punct'), ('provide', 'advcl'), ('better', 'amod'), ('  ', 'compound'), ('results', 'dobj'), ('terms', 'pobj'), ('predictive', 'amod'), ('accuracy', 'pobj'), ('significantly', 'advmod'), ('  ', 'compound'), ('context', 'pobj'), ('high', 'amod'), ('-', 'punct'), ('throughput', 'compound'), ('data', 'compound'), ('sets', 'pobj'), (',', 'punct'), ('tree', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('methods', 'nsubj'), ('  ', 'attr'), ('highly', 'advmod'), ('scalable', 'amod'), ('computational', 'amod'), ('point', 'pobj'), ('view', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], ,], [,, DT], [DT,   ], [  , algorithms], [algorithms, combined], [combined, ensemble], [ensemble, methods], [methods, ,], [,, provide], [provide, better], [better,   ], [  , results], [results, terms], [terms, predictive], [predictive, accuracy], [accuracy, significantly], [significantly,   ], [  , context], [context, high], [high, -], [-, throughput], [throughput, data], [data, sets], [sets, ,], [,, tree], [tree, -], [-, based], [based, methods], [methods,   ], [  , highly], [highly, scalable], [scalable, computational], [computational, point], [point, view], [view, .]]

>> Trigrams: 
[[[, 7, ]], [7, ], ,], [], ,, DT], [,, DT,   ], [DT,   , algorithms], [  , algorithms, combined], [algorithms, combined, ensemble], [combined, ensemble, methods], [ensemble, methods, ,], [methods, ,, provide], [,, provide, better], [provide, better,   ], [better,   , results], [  , results, terms], [results, terms, predictive], [terms, predictive, accuracy], [predictive, accuracy, significantly], [accuracy, significantly,   ], [significantly,   , context], [  , context, high], [context, high, -], [high, -, throughput], [-, throughput, data], [throughput, data, sets], [data, sets, ,], [sets, ,, tree], [,, tree, -], [tree, -, based], [-, based, methods], [based, methods,   ], [methods,   , highly], [  , highly, scalable], [highly, scalable, computational], [scalable, computational, point], [computational, point, view], [point, view, .]]

>> Noun Phrases are: 
[DT   algorithms, ensemble methods, better   results, terms, predictive accuracy, the   context, high-throughput data sets, tree-based methods, a computational point, view]

>> Named Entities are: 
[]


============================ Sentence 116 =============================

     Fig.3. 


>> Tokens are: 
[     , Fig.3, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.3', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'nsubj'), ('Fig.3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.3], [Fig.3, .]]

>> Trigrams: 
[[     , Fig.3, .]]

>> Noun Phrases are: 
[     Fig.3]

>> Named Entities are: 
[]


============================ Sentence 117 =============================

A Sample Decision Tree    


>> Tokens are: 
[Sample, Decision, Tree,   ] 

>> PoS Tags are: 
[('Sample', 'PROPN'), ('Decision', 'NOUN'), ('Tree', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Sample', 'compound'), ('Decision', 'compound'), ('Tree', 'nsubj'), ('  ', 'ROOT')]

>> Bigrams: 
[[Sample, Decision], [Decision, Tree], [Tree,   ]]

>> Trigrams: 
[[Sample, Decision, Tree], [Decision, Tree,   ]]

>> Noun Phrases are: 
[A Sample Decision Tree]

>> Named Entities are: 
[]


============================ Sentence 118 =============================

By using the DT depicted in Fig.3 as an example, the   instance (at1 = a1, at2 = b2, at3 = a3, at4 = b4) would sort to the   nodes: at1, at2, and finally at3, which would classify the instance   as being positive (represented by the values “Yes”). 


>> Tokens are: 
[DT, depicted, Fig.3, example, ,,   , instance, (, at1, =, a1, ,, at2, =, b2, ,, at3, =, a3, ,, at4, =, b4, ), sort,   , nodes, :, at1, ,, at2, ,, finally, at3, ,, classify, instance,   , positive, (, represented, values, “, Yes, ”, ), .] 

>> PoS Tags are: 
[('DT', 'PROPN'), ('depicted', 'VERB'), ('Fig.3', 'PROPN'), ('example', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('instance', 'NOUN'), ('(', 'PUNCT'), ('at1', 'NOUN'), ('=', 'SYM'), ('a1', 'NUM'), (',', 'PUNCT'), ('at2', 'NOUN'), ('=', 'SYM'), ('b2', 'PROPN'), (',', 'PUNCT'), ('at3', 'NOUN'), ('=', 'SYM'), ('a3', 'NOUN'), (',', 'PUNCT'), ('at4', 'NOUN'), ('=', 'X'), ('b4', 'PROPN'), (')', 'PUNCT'), ('sort', 'VERB'), ('  ', 'SPACE'), ('nodes', 'NOUN'), (':', 'PUNCT'), ('at1', 'NOUN'), (',', 'PUNCT'), ('at2', 'NOUN'), (',', 'PUNCT'), ('finally', 'ADV'), ('at3', 'NOUN'), (',', 'PUNCT'), ('classify', 'VERB'), ('instance', 'NOUN'), ('  ', 'SPACE'), ('positive', 'ADJ'), ('(', 'PUNCT'), ('represented', 'VERB'), ('values', 'NOUN'), ('“', 'PUNCT'), ('Yes', 'INTJ'), ('”', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('DT', 'dobj'), ('depicted', 'xcomp'), ('Fig.3', 'pobj'), ('example', 'pobj'), (',', 'punct'), ('  ', 'nummod'), ('instance', 'nsubj'), ('(', 'punct'), ('at1', 'appos'), ('=', 'punct'), ('a1', 'appos'), (',', 'punct'), ('at2', 'compound'), ('=', 'punct'), ('b2', 'appos'), (',', 'punct'), ('at3', 'csubj'), ('=', 'compound'), ('a3', 'dobj'), (',', 'punct'), ('at4', 'dep'), ('=', 'dobj'), ('b4', 'npadvmod'), (')', 'punct'), ('sort', 'ROOT'), ('  ', 'pobj'), ('nodes', 'dobj'), (':', 'punct'), ('at1', 'appos'), (',', 'punct'), ('at2', 'conj'), (',', 'punct'), ('finally', 'advmod'), ('at3', 'conj'), (',', 'punct'), ('classify', 'relcl'), ('instance', 'dobj'), ('  ', 'dobj'), ('positive', 'acomp'), ('(', 'punct'), ('represented', 'pcomp'), ('values', 'pobj'), ('“', 'punct'), ('Yes', 'intj'), ('”', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[DT, depicted], [depicted, Fig.3], [Fig.3, example], [example, ,], [,,   ], [  , instance], [instance, (], [(, at1], [at1, =], [=, a1], [a1, ,], [,, at2], [at2, =], [=, b2], [b2, ,], [,, at3], [at3, =], [=, a3], [a3, ,], [,, at4], [at4, =], [=, b4], [b4, )], [), sort], [sort,   ], [  , nodes], [nodes, :], [:, at1], [at1, ,], [,, at2], [at2, ,], [,, finally], [finally, at3], [at3, ,], [,, classify], [classify, instance], [instance,   ], [  , positive], [positive, (], [(, represented], [represented, values], [values, “], [“, Yes], [Yes, ”], [”, )], [), .]]

>> Trigrams: 
[[DT, depicted, Fig.3], [depicted, Fig.3, example], [Fig.3, example, ,], [example, ,,   ], [,,   , instance], [  , instance, (], [instance, (, at1], [(, at1, =], [at1, =, a1], [=, a1, ,], [a1, ,, at2], [,, at2, =], [at2, =, b2], [=, b2, ,], [b2, ,, at3], [,, at3, =], [at3, =, a3], [=, a3, ,], [a3, ,, at4], [,, at4, =], [at4, =, b4], [=, b4, )], [b4, ), sort], [), sort,   ], [sort,   , nodes], [  , nodes, :], [nodes, :, at1], [:, at1, ,], [at1, ,, at2], [,, at2, ,], [at2, ,, finally], [,, finally, at3], [finally, at3, ,], [at3, ,, classify], [,, classify, instance], [classify, instance,   ], [instance,   , positive], [  , positive, (], [positive, (, represented], [(, represented, values], [represented, values, “], [values, “, Yes], [“, Yes, ”], [Yes, ”, )], [”, ), .]]

>> Noun Phrases are: 
[the DT, Fig.3, an example, the   instance, at1, at2 = b2, = a3, nodes, at1, at2, finally at3, the instance, the values]

>> Named Entities are: 
[('Fig.3', 'CARDINAL')]


============================ Sentence 119 =============================

  Table.2. 


>> Tokens are: 
[  , Table.2, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Table.2', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Table.2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Table.2], [Table.2, .]]

>> Trigrams: 
[[  , Table.2, .]]

>> Noun Phrases are: 
[  Table.2]

>> Named Entities are: 
[]


============================ Sentence 120 =============================

Sample Training set   at1 at2 at3 at4 Class   a1 a2 a3 a4 


>> Tokens are: 
[Sample, Training, set,   , at1, at2, at3, at4, Class,   , a1, a2, a3, a4] 

>> PoS Tags are: 
[('Sample', 'PROPN'), ('Training', 'PROPN'), ('set', 'VERB'), ('  ', 'SPACE'), ('at1', 'NOUN'), ('at2', 'NOUN'), ('at3', 'NOUN'), ('at4', 'NOUN'), ('Class', 'NOUN'), ('  ', 'SPACE'), ('a1', 'NUM'), ('a2', 'PROPN'), ('a3', 'PROPN'), ('a4', 'NUM')] 

>> Dependency Tags are: 
[('Sample', 'compound'), ('Training', 'nsubj'), ('set', 'ROOT'), ('  ', 'dobj'), ('at1', 'compound'), ('at2', 'compound'), ('at3', 'compound'), ('at4', 'compound'), ('Class', 'dobj'), ('  ', 'appos'), ('a1', 'compound'), ('a2', 'compound'), ('a3', 'appos'), ('a4', 'appos')]

>> Bigrams: 
[[Sample, Training], [Training, set], [set,   ], [  , at1], [at1, at2], [at2, at3], [at3, at4], [at4, Class], [Class,   ], [  , a1], [a1, a2], [a2, a3], [a3, a4]]

>> Trigrams: 
[[Sample, Training, set], [Training, set,   ], [set,   , at1], [  , at1, at2], [at1, at2, at3], [at2, at3, at4], [at3, at4, Class], [at4, Class,   ], [Class,   , a1], [  , a1, a2], [a1, a2, a3], [a2, a3, a4]]

>> Noun Phrases are: 
[Sample Training, at1 at2 at3 at4 Class, a1 a2 a3]

>> Named Entities are: 
[('Sample Training', 'PERSON'), ('a4', 'PERSON')]


============================ Sentence 121 =============================

Yes   a1 a2 a3 b4 


>> Tokens are: 
[Yes,   , a1, a2, a3, b4] 

>> PoS Tags are: 
[('Yes', 'SYM'), ('  ', 'SPACE'), ('a1', 'NUM'), ('a2', 'PROPN'), ('a3', 'PROPN'), ('b4', 'PROPN')] 

>> Dependency Tags are: 
[('Yes', 'ROOT'), ('  ', 'nmod'), ('a1', 'quantmod'), ('a2', 'compound'), ('a3', 'compound'), ('b4', 'pobj')]

>> Bigrams: 
[[Yes,   ], [  , a1], [a1, a2], [a2, a3], [a3, b4]]

>> Trigrams: 
[[Yes,   , a1], [  , a1, a2], [a1, a2, a3], [a2, a3, b4]]

>> Noun Phrases are: 
[  a1 a2 a3 b4]

>> Named Entities are: 
[]


============================ Sentence 122 =============================

Yes   a1 b2 a3 a4 


>> Tokens are: 
[Yes,   , a1, b2, a3, a4] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE'), ('a1', 'NUM'), ('b2', 'NUM'), ('a3', 'NOUN'), ('a4', 'NUM')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'ROOT'), ('a1', 'compound'), ('b2', 'compound'), ('a3', 'appos'), ('a4', 'appos')]

>> Bigrams: 
[[Yes,   ], [  , a1], [a1, b2], [b2, a3], [a3, a4]]

>> Trigrams: 
[[Yes,   , a1], [  , a1, b2], [a1, b2, a3], [b2, a3, a4]]

>> Noun Phrases are: 
[a1 b2 a3]

>> Named Entities are: 
[]


============================ Sentence 123 =============================

Yes   a1 b2 b3 b4 


>> Tokens are: 
[Yes,   , a1, b2, b3, b4] 

>> PoS Tags are: 
[('Yes', 'SYM'), ('  ', 'SPACE'), ('a1', 'NUM'), ('b2', 'PROPN'), ('b3', 'PROPN'), ('b4', 'PROPN')] 

>> Dependency Tags are: 
[('Yes', 'ROOT'), ('  ', 'nmod'), ('a1', 'quantmod'), ('b2', 'compound'), ('b3', 'compound'), ('b4', 'pobj')]

>> Bigrams: 
[[Yes,   ], [  , a1], [a1, b2], [b2, b3], [b3, b4]]

>> Trigrams: 
[[Yes,   , a1], [  , a1, b2], [a1, b2, b3], [b2, b3, b4]]

>> Noun Phrases are: 
[  a1 b2 b3 b4]

>> Named Entities are: 
[]


============================ Sentence 124 =============================

No   a1 c2 a3 a4 


>> Tokens are: 
[  , a1, c2, a3, a4] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('a1', 'NUM'), ('c2', 'PROPN'), ('a3', 'NOUN'), ('a4', 'NUM')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('a1', 'compound'), ('c2', 'compound'), ('a3', 'appos'), ('a4', 'appos')]

>> Bigrams: 
[[  , a1], [a1, c2], [c2, a3], [a3, a4]]

>> Trigrams: 
[[  , a1, c2], [a1, c2, a3], [c2, a3, a4]]

>> Noun Phrases are: 
[a1 c2 a3]

>> Named Entities are: 
[]


============================ Sentence 125 =============================

Yes   a1 c2 a3 b4 


>> Tokens are: 
[Yes,   , a1, c2, a3, b4] 

>> PoS Tags are: 
[('Yes', 'SYM'), ('  ', 'SPACE'), ('a1', 'NUM'), ('c2', 'PROPN'), ('a3', 'PROPN'), ('b4', 'PROPN')] 

>> Dependency Tags are: 
[('Yes', 'ROOT'), ('  ', 'nmod'), ('a1', 'nummod'), ('c2', 'compound'), ('a3', 'compound'), ('b4', 'pobj')]

>> Bigrams: 
[[Yes,   ], [  , a1], [a1, c2], [c2, a3], [a3, b4]]

>> Trigrams: 
[[Yes,   , a1], [  , a1, c2], [a1, c2, a3], [c2, a3, b4]]

>> Noun Phrases are: 
[  a1 c2 a3 b4]

>> Named Entities are: 
[]


============================ Sentence 126 =============================

No   b1 b2 b3 b4 


>> Tokens are: 
[  , b1, b2, b3, b4] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('b1', 'PROPN'), ('b2', 'PROPN'), ('b3', 'PROPN'), ('b4', 'PROPN')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('b1', 'compound'), ('b2', 'compound'), ('b3', 'compound'), ('b4', 'appos')]

>> Bigrams: 
[[  , b1], [b1, b2], [b2, b3], [b3, b4]]

>> Trigrams: 
[[  , b1, b2], [b1, b2, b3], [b2, b3, b4]]

>> Noun Phrases are: 
[b1 b2 b3 b4]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

No   c1 b2 b3 b4 


>> Tokens are: 
[  , c1, b2, b3, b4] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('c1', 'PROPN'), ('b2', 'PROPN'), ('b3', 'PROPN'), ('b4', 'PROPN')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('c1', 'nmod'), ('b2', 'compound'), ('b3', 'appos'), ('b4', 'ROOT')]

>> Bigrams: 
[[  , c1], [c1, b2], [b2, b3], [b3, b4]]

>> Trigrams: 
[[  , c1, b2], [c1, b2, b3], [b2, b3, b4]]

>> Noun Phrases are: 
[b2 b3]

>> Named Entities are: 
[]


============================ Sentence 128 =============================

No   The feature that best divides the training data would be the   root node of the tree. 


>> Tokens are: 
[  , feature, best, divides, training, data,   , root, node, tree, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('feature', 'NOUN'), ('best', 'ADJ'), ('divides', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('  ', 'SPACE'), ('root', 'NOUN'), ('node', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('feature', 'appos'), ('best', 'advmod'), ('divides', 'relcl'), ('training', 'compound'), ('data', 'nsubj'), ('  ', 'compound'), ('root', 'compound'), ('node', 'attr'), ('tree', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , feature], [feature, best], [best, divides], [divides, training], [training, data], [data,   ], [  , root], [root, node], [node, tree], [tree, .]]

>> Trigrams: 
[[  , feature, best], [feature, best, divides], [best, divides, training], [divides, training, data], [training, data,   ], [data,   , root], [  , root, node], [root, node, tree], [node, tree, .]]

>> Noun Phrases are: 
[The feature, the training data, the   root node, the tree]

>> Named Entities are: 
[]


============================ Sentence 129 =============================

There are different methods to extract the   features that best divides the training data such as information   gain [11] and gini index [12]. 


>> Tokens are: 
[different, methods, extract,   , features, best, divides, training, data, information,   , gain, [, 11, ], gini, index, [, 12, ], .] 

>> PoS Tags are: 
[('different', 'ADJ'), ('methods', 'NOUN'), ('extract', 'VERB'), ('  ', 'SPACE'), ('features', 'VERB'), ('best', 'ADJ'), ('divides', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('information', 'NOUN'), ('  ', 'SPACE'), ('gain', 'NOUN'), ('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('gini', 'NOUN'), ('index', 'NOUN'), ('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('different', 'amod'), ('methods', 'attr'), ('extract', 'relcl'), ('  ', 'nsubj'), ('features', 'conj'), ('best', 'nsubj'), ('divides', 'ccomp'), ('training', 'compound'), ('data', 'dobj'), ('information', 'compound'), ('  ', 'compound'), ('gain', 'pobj'), ('[', 'punct'), ('11', 'meta'), (']', 'punct'), ('gini', 'compound'), ('index', 'conj'), ('[', 'punct'), ('12', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[different, methods], [methods, extract], [extract,   ], [  , features], [features, best], [best, divides], [divides, training], [training, data], [data, information], [information,   ], [  , gain], [gain, [], [[, 11], [11, ]], [], gini], [gini, index], [index, [], [[, 12], [12, ]], [], .]]

>> Trigrams: 
[[different, methods, extract], [methods, extract,   ], [extract,   , features], [  , features, best], [features, best, divides], [best, divides, training], [divides, training, data], [training, data, information], [data, information,   ], [information,   , gain], [  , gain, [], [gain, [, 11], [[, 11, ]], [11, ], gini], [], gini, index], [gini, index, [], [index, [, 12], [[, 12, ]], [12, ], .]]

>> Noun Phrases are: 
[different methods, the training data, information   gain, gini index]

>> Named Entities are: 
[('11', 'CARDINAL'), ('12', 'CARDINAL')]


============================ Sentence 130 =============================

     Fig.4. 


>> Tokens are: 
[     , Fig.4, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.4', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('Fig.4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.4], [Fig.4, .]]

>> Trigrams: 
[[     , Fig.4, .]]

>> Noun Phrases are: 
[     Fig.4]

>> Named Entities are: 
[]


============================ Sentence 131 =============================

General pseudo-code for building decision trees   3.2 LEARNING SET OF RULES    


>> Tokens are: 
[General, pseudo, -, code, building, decision, trees,   , 3.2, LEARNING, SET, RULES,   ] 

>> PoS Tags are: 
[('General', 'ADJ'), ('pseudo', 'NOUN'), ('-', 'NOUN'), ('code', 'NOUN'), ('building', 'VERB'), ('decision', 'NOUN'), ('trees', 'NOUN'), ('  ', 'SPACE'), ('3.2', 'NUM'), ('LEARNING', 'NOUN'), ('SET', 'PROPN'), ('RULES', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('General', 'amod'), ('pseudo', 'compound'), ('-', 'punct'), ('code', 'nsubj'), ('building', 'pcomp'), ('decision', 'compound'), ('trees', 'dobj'), ('  ', 'dep'), ('3.2', 'npadvmod'), ('LEARNING', 'compound'), ('SET', 'ROOT'), ('RULES', 'pobj'), ('  ', 'punct')]

>> Bigrams: 
[[General, pseudo], [pseudo, -], [-, code], [code, building], [building, decision], [decision, trees], [trees,   ], [  , 3.2], [3.2, LEARNING], [LEARNING, SET], [SET, RULES], [RULES,   ]]

>> Trigrams: 
[[General, pseudo, -], [pseudo, -, code], [-, code, building], [code, building, decision], [building, decision, trees], [decision, trees,   ], [trees,   , 3.2], [  , 3.2, LEARNING], [3.2, LEARNING, SET], [LEARNING, SET, RULES], [SET, RULES,   ]]

>> Noun Phrases are: 
[General pseudo-code, decision trees, RULES]

>> Named Entities are: 
[('3.2', 'CARDINAL')]


============================ Sentence 132 =============================

It is also possible that decision trees can be translated into a   set of rules by creating a separate rule for each path from the   root to a leaf in the tree [13]. 


>> Tokens are: 
[possible, decision, trees, translated,   , set, rules, creating, separate, rule, path,   , root, leaf, tree, [, 13, ], .] 

>> PoS Tags are: 
[('possible', 'ADJ'), ('decision', 'NOUN'), ('trees', 'NOUN'), ('translated', 'VERB'), ('  ', 'SPACE'), ('set', 'NOUN'), ('rules', 'NOUN'), ('creating', 'VERB'), ('separate', 'ADJ'), ('rule', 'NOUN'), ('path', 'NOUN'), ('  ', 'SPACE'), ('root', 'NOUN'), ('leaf', 'NOUN'), ('tree', 'NOUN'), ('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('possible', 'acomp'), ('decision', 'compound'), ('trees', 'nsubjpass'), ('translated', 'ccomp'), ('  ', 'compound'), ('set', 'pobj'), ('rules', 'pobj'), ('creating', 'pcomp'), ('separate', 'amod'), ('rule', 'dobj'), ('path', 'pobj'), ('  ', 'nummod'), ('root', 'pobj'), ('leaf', 'pobj'), ('tree', 'pobj'), ('[', 'punct'), ('13', 'npadvmod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[possible, decision], [decision, trees], [trees, translated], [translated,   ], [  , set], [set, rules], [rules, creating], [creating, separate], [separate, rule], [rule, path], [path,   ], [  , root], [root, leaf], [leaf, tree], [tree, [], [[, 13], [13, ]], [], .]]

>> Trigrams: 
[[possible, decision, trees], [decision, trees, translated], [trees, translated,   ], [translated,   , set], [  , set, rules], [set, rules, creating], [rules, creating, separate], [creating, separate, rule], [separate, rule, path], [rule, path,   ], [path,   , root], [  , root, leaf], [root, leaf, tree], [leaf, tree, [], [tree, [, 13], [[, 13, ]], [13, ], .]]

>> Noun Phrases are: 
[It, decision trees, a   set, rules, a separate rule, each path, the   root, a leaf, the tree]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 133 =============================

However, rules can also be directly   induced from training data using a variety of rule-based   algorithms. 


>> Tokens are: 
[,, rules, directly,   , induced, training, data, variety, rule, -, based,   , algorithms, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('rules', 'NOUN'), ('directly', 'ADV'), ('  ', 'SPACE'), ('induced', 'VERB'), ('training', 'NOUN'), ('data', 'NOUN'), ('variety', 'NOUN'), ('rule', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('rules', 'nsubj'), ('directly', 'advmod'), ('  ', 'attr'), ('induced', 'acl'), ('training', 'compound'), ('data', 'pobj'), ('variety', 'dobj'), ('rule', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('  ', 'nummod'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, rules], [rules, directly], [directly,   ], [  , induced], [induced, training], [training, data], [data, variety], [variety, rule], [rule, -], [-, based], [based,   ], [  , algorithms], [algorithms, .]]

>> Trigrams: 
[[,, rules, directly], [rules, directly,   ], [directly,   , induced], [  , induced, training], [induced, training, data], [training, data, variety], [data, variety, rule], [variety, rule, -], [rule, -, based], [-, based,   ], [based,   , algorithms], [  , algorithms, .]]

>> Noun Phrases are: 
[rules, training data, a variety, rule-based   algorithms]

>> Named Entities are: 
[]


============================ Sentence 134 =============================

In [14], the author has provided an excellent   overview of existing work in rule-based methods. 


>> Tokens are: 
[[, 14, ], ,, author, provided, excellent,   , overview, existing, work, rule, -, based, methods, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('author', 'NOUN'), ('provided', 'VERB'), ('excellent', 'ADJ'), ('  ', 'SPACE'), ('overview', 'NOUN'), ('existing', 'VERB'), ('work', 'NOUN'), ('rule', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('methods', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'pobj'), ('14', 'pobj'), (']', 'pobj'), (',', 'punct'), ('author', 'nsubj'), ('provided', 'ROOT'), ('excellent', 'amod'), ('  ', 'compound'), ('overview', 'dobj'), ('existing', 'amod'), ('work', 'pobj'), ('rule', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('methods', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 14], [14, ]], [], ,], [,, author], [author, provided], [provided, excellent], [excellent,   ], [  , overview], [overview, existing], [existing, work], [work, rule], [rule, -], [-, based], [based, methods], [methods, .]]

>> Trigrams: 
[[[, 14, ]], [14, ], ,], [], ,, author], [,, author, provided], [author, provided, excellent], [provided, excellent,   ], [excellent,   , overview], [  , overview, existing], [overview, existing, work], [existing, work, rule], [work, rule, -], [rule, -, based], [-, based, methods], [based, methods, .]]

>> Noun Phrases are: 
[the author, an excellent   overview, existing work, rule-based methods]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 135 =============================

The   classification rules represent each class by Disjunctive Normal   Form (DNF). 


>> Tokens are: 
[  , classification, rules, represent, class, Disjunctive, Normal,   , Form, (, DNF, ), .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('classification', 'NOUN'), ('rules', 'NOUN'), ('represent', 'VERB'), ('class', 'NOUN'), ('Disjunctive', 'PROPN'), ('Normal', 'PROPN'), ('  ', 'SPACE'), ('Form', 'PROPN'), ('(', 'PUNCT'), ('DNF', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('classification', 'compound'), ('rules', 'nsubj'), ('represent', 'ROOT'), ('class', 'dobj'), ('Disjunctive', 'compound'), ('Normal', 'pobj'), ('  ', 'compound'), ('Form', 'dobj'), ('(', 'punct'), ('DNF', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[  , classification], [classification, rules], [rules, represent], [represent, class], [class, Disjunctive], [Disjunctive, Normal], [Normal,   ], [  , Form], [Form, (], [(, DNF], [DNF, )], [), .]]

>> Trigrams: 
[[  , classification, rules], [classification, rules, represent], [rules, represent, class], [represent, class, Disjunctive], [class, Disjunctive, Normal], [Disjunctive, Normal,   ], [Normal,   , Form], [  , Form, (], [Form, (, DNF], [(, DNF, )], [DNF, ), .]]

>> Noun Phrases are: 
[The   classification rules, each class, Disjunctive Normal,   Form, (DNF]

>> Named Entities are: 
[('Disjunctive Normal', 'PERSON')]


============================ Sentence 136 =============================

A statement is in DNF if it is a disjunction   (sequence of ORs) consisting of one or more disjuncts, each of   which is a conjunction (AND) of one or more literals. 


>> Tokens are: 
[statement, DNF, disjunction,   , (, sequence, ORs, ), consisting, disjuncts, ,,   , conjunction, (, ), literals, .] 

>> PoS Tags are: 
[('statement', 'NOUN'), ('DNF', 'PROPN'), ('disjunction', 'NOUN'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('sequence', 'NOUN'), ('ORs', 'NOUN'), (')', 'PUNCT'), ('consisting', 'VERB'), ('disjuncts', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('conjunction', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('literals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('statement', 'nsubj'), ('DNF', 'pobj'), ('disjunction', 'compound'), ('  ', 'attr'), ('(', 'punct'), ('sequence', 'appos'), ('ORs', 'pobj'), (')', 'punct'), ('consisting', 'advcl'), ('disjuncts', 'pobj'), (',', 'punct'), ('  ', 'pobj'), ('conjunction', 'attr'), ('(', 'punct'), (')', 'punct'), ('literals', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[statement, DNF], [DNF, disjunction], [disjunction,   ], [  , (], [(, sequence], [sequence, ORs], [ORs, )], [), consisting], [consisting, disjuncts], [disjuncts, ,], [,,   ], [  , conjunction], [conjunction, (], [(, )], [), literals], [literals, .]]

>> Trigrams: 
[[statement, DNF, disjunction], [DNF, disjunction,   ], [disjunction,   , (], [  , (, sequence], [(, sequence, ORs], [sequence, ORs, )], [ORs, ), consisting], [), consisting, disjuncts], [consisting, disjuncts, ,], [disjuncts, ,,   ], [,,   , conjunction], [  , conjunction, (], [conjunction, (, )], [(, ), literals], [), literals, .]]

>> Noun Phrases are: 
[A statement, DNF, it, sequence, ORs, one or more disjuncts, a conjunction, one or more literals]

>> Named Entities are: 
[('one', 'CARDINAL'), ('one', 'CARDINAL')]


============================ Sentence 137 =============================

Below is   an example of disjunctive normal forms. 


>> Tokens are: 
[  , example, disjunctive, normal, forms, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('example', 'NOUN'), ('disjunctive', 'ADJ'), ('normal', 'ADJ'), ('forms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('example', 'attr'), ('disjunctive', 'amod'), ('normal', 'amod'), ('forms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , example], [example, disjunctive], [disjunctive, normal], [normal, forms], [forms, .]]

>> Trigrams: 
[[  , example, disjunctive], [example, disjunctive, normal], [disjunctive, normal, forms], [normal, forms, .]]

>> Noun Phrases are: 
[an example, disjunctive normal forms]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

  A k-DNF expression is of the form:          nnnn AAAAAA 22121     knnknk AAA   2111 , where k is the number of   disjunctions, n is the number of conjunctions in each disjunction,   and An is defined over the alphabet   jj AAAAAA  2121 ~,~,,,,  . 


>> Tokens are: 
[  , k, -, DNF, expression, form, :,   , , , , , , , , nnnn, AAAAAA, 22121, , , , , knnknk, AAA, , , 2111, ,, k, number,   , disjunctions, ,, n, number, conjunctions, disjunction, ,,   , defined, alphabet,   , jj, AAAAAA, , 2121, ~,~, ,, ,, ,, ,, , .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('k', 'PROPN'), ('-', 'PUNCT'), ('DNF', 'PROPN'), ('expression', 'NOUN'), ('form', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029\uf028', 'X'), ('\uf029\uf0da\uf0da\uf0d9\uf0d9\uf0da\uf0d9\uf0d9', 'X'), ('\uf02b\uf02b', 'PROPN'), ('\uf04b\uf04b\uf04b', 'PROPN'), ('nnnn', 'VERB'), ('AAAAAA', 'PROPN'), ('22121', 'NUM'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'ADJ'), ('\uf029\uf028', 'NOUN'), ('\uf029knnknk', 'ADJ'), ('AAA', 'PROPN'), ('\uf0d9\uf0d9\uf0d9', 'PROPN'), ('\uf02b\uf02d\uf02b\uf02d', 'PROPN'), ('\uf04b2111', 'PROPN'), (',', 'PUNCT'), ('k', 'NOUN'), ('number', 'NOUN'), ('  ', 'SPACE'), ('disjunctions', 'NOUN'), (',', 'PUNCT'), ('n', 'CCONJ'), ('number', 'NOUN'), ('conjunctions', 'NOUN'), ('disjunction', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('defined', 'VERB'), ('alphabet', 'NOUN'), ('  ', 'SPACE'), ('jj', 'PROPN'), ('AAAAAA', 'PROPN'), ('\uf04b\uf04b', 'PUNCT'), ('2121', 'NUM'), ('~,~', 'NUM'), (',', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), ('\uf04a', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('k', 'compound'), ('-', 'punct'), ('DNF', 'compound'), ('expression', 'nsubj'), ('form', 'pobj'), (':', 'punct'), ('  ', 'nsubj'), ('\uf028', 'appos'), ('\uf029', 'compound'), ('\uf028', 'nmod'), ('\uf029\uf028', 'compound'), ('\uf029\uf0da\uf0da\uf0d9\uf0d9\uf0da\uf0d9\uf0d9', 'nmod'), ('\uf02b\uf02b', 'compound'), ('\uf04b\uf04b\uf04b', 'appos'), ('nnnn', 'ROOT'), ('AAAAAA', 'dobj'), ('22121', 'nummod'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('\uf028', 'amod'), ('\uf029\uf028', 'compound'), ('\uf029knnknk', 'amod'), ('AAA', 'compound'), ('\uf0d9\uf0d9\uf0d9', 'compound'), ('\uf02b\uf02d\uf02b\uf02d', 'compound'), ('\uf04b2111', 'dobj'), (',', 'punct'), ('k', 'nsubj'), ('number', 'attr'), ('  ', 'nummod'), ('disjunctions', 'pobj'), (',', 'punct'), ('n', 'cc'), ('number', 'attr'), ('conjunctions', 'pobj'), ('disjunction', 'pobj'), (',', 'punct'), ('  ', 'conj'), ('defined', 'relcl'), ('alphabet', 'pobj'), ('  ', 'compound'), ('jj', 'compound'), ('AAAAAA', 'appos'), ('\uf04b\uf04b', 'punct'), ('2121', 'npadvmod'), ('~,~', 'punct'), (',', 'punct'), (',', 'punct'), (',', 'punct'), (',', 'punct'), ('\uf04a', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , k], [k, -], [-, DNF], [DNF, expression], [expression, form], [form, :], [:,   ], [  , ], [, ], [, ], [, ], [, ], [, ], [, ], [, nnnn], [nnnn, AAAAAA], [AAAAAA, 22121], [22121, ], [, ], [, ], [, ], [, knnknk], [knnknk, AAA], [AAA, ], [, ], [, 2111], [2111, ,], [,, k], [k, number], [number,   ], [  , disjunctions], [disjunctions, ,], [,, n], [n, number], [number, conjunctions], [conjunctions, disjunction], [disjunction, ,], [,,   ], [  , defined], [defined, alphabet], [alphabet,   ], [  , jj], [jj, AAAAAA], [AAAAAA, ], [, 2121], [2121, ~,~], [~,~, ,], [,, ,], [,, ,], [,, ,], [,, ], [, .]]

>> Trigrams: 
[[  , k, -], [k, -, DNF], [-, DNF, expression], [DNF, expression, form], [expression, form, :], [form, :,   ], [:,   , ], [  , , ], [, , ], [, , ], [, , ], [, , ], [, , ], [, , nnnn], [, nnnn, AAAAAA], [nnnn, AAAAAA, 22121], [AAAAAA, 22121, ], [22121, , ], [, , ], [, , ], [, , knnknk], [, knnknk, AAA], [knnknk, AAA, ], [AAA, , ], [, , 2111], [, 2111, ,], [2111, ,, k], [,, k, number], [k, number,   ], [number,   , disjunctions], [  , disjunctions, ,], [disjunctions, ,, n], [,, n, number], [n, number, conjunctions], [number, conjunctions, disjunction], [conjunctions, disjunction, ,], [disjunction, ,,   ], [,,   , defined], [  , defined, alphabet], [defined, alphabet,   ], [alphabet,   , jj], [  , jj, AAAAAA], [jj, AAAAAA, ], [AAAAAA, , 2121], [, 2121, ~,~], [2121, ~,~, ,], [~,~, ,, ,], [,, ,, ,], [,, ,, ,], [,, ,, ], [,, , .]]

>> Noun Phrases are: 
[  A k-DNF expression, the form, ,      , AAAAAA,     knnknk AAA   2111, k, the number,   disjunctions, the number, conjunctions, each disjunction, An, the alphabet,   jj AAAAAA]

>> Named Entities are: 
[('\uf029', 'ORG'), ('AAAAAA 22121', 'ORG'), ('\uf029', 'ORG'), ('\uf029knnknk AAA', 'ORG')]


============================ Sentence 139 =============================

Here the objective is to build   the smallest rule-set that is consistent with the training data [1]. 


>> Tokens are: 
[objective, build,   , smallest, rule, -, set, consistent, training, data, [, 1, ], .] 

>> PoS Tags are: 
[('objective', 'NOUN'), ('build', 'VERB'), ('  ', 'SPACE'), ('smallest', 'ADJ'), ('rule', 'NOUN'), ('-', 'PUNCT'), ('set', 'NOUN'), ('consistent', 'ADJ'), ('training', 'NOUN'), ('data', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('objective', 'nsubj'), ('build', 'xcomp'), ('  ', 'dative'), ('smallest', 'amod'), ('rule', 'compound'), ('-', 'punct'), ('set', 'dobj'), ('consistent', 'acomp'), ('training', 'compound'), ('data', 'pobj'), ('[', 'punct'), ('1', 'nummod'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[objective, build], [build,   ], [  , smallest], [smallest, rule], [rule, -], [-, set], [set, consistent], [consistent, training], [training, data], [data, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[objective, build,   ], [build,   , smallest], [  , smallest, rule], [smallest, rule, -], [rule, -, set], [-, set, consistent], [set, consistent, training], [consistent, training, data], [training, data, [], [data, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[the objective, the smallest rule-set, the training data]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 140 =============================

  A good number of learned rules is usually a positive sign that the   learning algorithm is attempting to remember the training set,   instead of discovering the assumptions that govern it. 


>> Tokens are: 
[  , good, number, learned, rules, usually, positive, sign,   , learning, algorithm, attempting, remember, training, set, ,,   , instead, discovering, assumptions, govern, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('good', 'ADJ'), ('number', 'NOUN'), ('learned', 'VERB'), ('rules', 'NOUN'), ('usually', 'ADV'), ('positive', 'ADJ'), ('sign', 'NOUN'), ('  ', 'SPACE'), ('learning', 'VERB'), ('algorithm', 'NOUN'), ('attempting', 'VERB'), ('remember', 'VERB'), ('training', 'NOUN'), ('set', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('instead', 'ADV'), ('discovering', 'VERB'), ('assumptions', 'NOUN'), ('govern', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('good', 'amod'), ('number', 'nsubj'), ('learned', 'amod'), ('rules', 'pobj'), ('usually', 'advmod'), ('positive', 'amod'), ('sign', 'attr'), ('  ', 'nsubj'), ('learning', 'acl'), ('algorithm', 'dobj'), ('attempting', 'acl'), ('remember', 'xcomp'), ('training', 'compound'), ('set', 'dobj'), (',', 'punct'), ('  ', 'npadvmod'), ('instead', 'advmod'), ('discovering', 'pcomp'), ('assumptions', 'dobj'), ('govern', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[  , good], [good, number], [number, learned], [learned, rules], [rules, usually], [usually, positive], [positive, sign], [sign,   ], [  , learning], [learning, algorithm], [algorithm, attempting], [attempting, remember], [remember, training], [training, set], [set, ,], [,,   ], [  , instead], [instead, discovering], [discovering, assumptions], [assumptions, govern], [govern, .]]

>> Trigrams: 
[[  , good, number], [good, number, learned], [number, learned, rules], [learned, rules, usually], [rules, usually, positive], [usually, positive, sign], [positive, sign,   ], [sign,   , learning], [  , learning, algorithm], [learning, algorithm, attempting], [algorithm, attempting, remember], [attempting, remember, training], [remember, training, set], [training, set, ,], [set, ,,   ], [,,   , instead], [  , instead, discovering], [instead, discovering, assumptions], [discovering, assumptions, govern], [assumptions, govern, .]]

>> Noun Phrases are: 
[A good number, learned rules, a positive sign, algorithm, the training set, the assumptions, it]

>> Named Entities are: 
[]


============================ Sentence 141 =============================

A   separate-and-conquer algorithm (recursively breaking down a   problem into sub-problems) search for a rule that explains a part   of its training instances, separates these instances and recursively   conquers the remaining instances by learning more rules, until   no instances remain [1]. 


>> Tokens are: 
[  , separate, -, -, conquer, algorithm, (, recursively, breaking,   , problem, sub, -, problems, ), search, rule, explains,   , training, instances, ,, separates, instances, recursively,   , conquers, remaining, instances, learning, rules, ,,   , instances, remain, [, 1, ], .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('separate', 'ADJ'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('conquer', 'NOUN'), ('algorithm', 'NOUN'), ('(', 'PUNCT'), ('recursively', 'ADV'), ('breaking', 'VERB'), ('  ', 'SPACE'), ('problem', 'NOUN'), ('sub', 'NOUN'), ('-', 'NOUN'), ('problems', 'NOUN'), (')', 'PUNCT'), ('search', 'NOUN'), ('rule', 'NOUN'), ('explains', 'VERB'), ('  ', 'SPACE'), ('training', 'NOUN'), ('instances', 'NOUN'), (',', 'PUNCT'), ('separates', 'VERB'), ('instances', 'NOUN'), ('recursively', 'ADV'), ('  ', 'SPACE'), ('conquers', 'NOUN'), ('remaining', 'VERB'), ('instances', 'NOUN'), ('learning', 'VERB'), ('rules', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('instances', 'NOUN'), ('remain', 'VERB'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('separate', 'amod'), ('-', 'punct'), ('-', 'punct'), ('conquer', 'conj'), ('algorithm', 'appos'), ('(', 'punct'), ('recursively', 'advmod'), ('breaking', 'csubj'), ('  ', 'nummod'), ('problem', 'dobj'), ('sub', 'pobj'), ('-', 'pobj'), ('problems', 'pobj'), (')', 'punct'), ('search', 'ROOT'), ('rule', 'pobj'), ('explains', 'relcl'), ('  ', 'nummod'), ('training', 'compound'), ('instances', 'pobj'), (',', 'punct'), ('separates', 'conj'), ('instances', 'dobj'), ('recursively', 'advmod'), ('  ', 'nsubj'), ('conquers', 'conj'), ('remaining', 'amod'), ('instances', 'dobj'), ('learning', 'pcomp'), ('rules', 'dobj'), (',', 'punct'), ('  ', 'nsubj'), ('instances', 'nsubj'), ('remain', 'advcl'), ('[', 'attr'), ('1', 'dep'), (']', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[  , separate], [separate, -], [-, -], [-, conquer], [conquer, algorithm], [algorithm, (], [(, recursively], [recursively, breaking], [breaking,   ], [  , problem], [problem, sub], [sub, -], [-, problems], [problems, )], [), search], [search, rule], [rule, explains], [explains,   ], [  , training], [training, instances], [instances, ,], [,, separates], [separates, instances], [instances, recursively], [recursively,   ], [  , conquers], [conquers, remaining], [remaining, instances], [instances, learning], [learning, rules], [rules, ,], [,,   ], [  , instances], [instances, remain], [remain, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[  , separate, -], [separate, -, -], [-, -, conquer], [-, conquer, algorithm], [conquer, algorithm, (], [algorithm, (, recursively], [(, recursively, breaking], [recursively, breaking,   ], [breaking,   , problem], [  , problem, sub], [problem, sub, -], [sub, -, problems], [-, problems, )], [problems, ), search], [), search, rule], [search, rule, explains], [rule, explains,   ], [explains,   , training], [  , training, instances], [training, instances, ,], [instances, ,, separates], [,, separates, instances], [separates, instances, recursively], [instances, recursively,   ], [recursively,   , conquers], [  , conquers, remaining], [conquers, remaining, instances], [remaining, instances, learning], [instances, learning, rules], [learning, rules, ,], [rules, ,,   ], [,,   , instances], [  , instances, remain], [instances, remain, [], [remain, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[separate-and-conquer algorithm, a   problem, sub, -, problems, a rule, a part, its training instances, these instances, recursively   conquers, the remaining instances, more rules, no instances]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 142 =============================

In below Fig.5, a general pseudo-code   for rule learners is presented. 


>> Tokens are: 
[Fig.5, ,, general, pseudo, -, code,   , rule, learners, presented, .] 

>> PoS Tags are: 
[('Fig.5', 'NOUN'), (',', 'PUNCT'), ('general', 'ADJ'), ('pseudo', 'NOUN'), ('-', 'NOUN'), ('code', 'NOUN'), ('  ', 'SPACE'), ('rule', 'NOUN'), ('learners', 'NOUN'), ('presented', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Fig.5', 'pobj'), (',', 'punct'), ('general', 'amod'), ('pseudo', 'compound'), ('-', 'punct'), ('code', 'compound'), ('  ', 'nsubjpass'), ('rule', 'compound'), ('learners', 'pobj'), ('presented', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Fig.5, ,], [,, general], [general, pseudo], [pseudo, -], [-, code], [code,   ], [  , rule], [rule, learners], [learners, presented], [presented, .]]

>> Trigrams: 
[[Fig.5, ,, general], [,, general, pseudo], [general, pseudo, -], [pseudo, -, code], [-, code,   ], [code,   , rule], [  , rule, learners], [rule, learners, presented], [learners, presented, .]]

>> Noun Phrases are: 
[Fig.5, rule learners]

>> Named Entities are: 
[]


============================ Sentence 143 =============================

     Fig.5. 


>> Tokens are: 
[     , Fig.5, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.5', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('Fig.5', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.5], [Fig.5, .]]

>> Trigrams: 
[[     , Fig.5, .]]

>> Noun Phrases are: 
[     Fig.5]

>> Named Entities are: 
[]


============================ Sentence 144 =============================

A general Pseudo code for rule learners    


>> Tokens are: 
[general, Pseudo, code, rule, learners,   ] 

>> PoS Tags are: 
[('general', 'ADJ'), ('Pseudo', 'PROPN'), ('code', 'NOUN'), ('rule', 'NOUN'), ('learners', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('general', 'amod'), ('Pseudo', 'compound'), ('code', 'nsubj'), ('rule', 'compound'), ('learners', 'pobj'), ('  ', 'ROOT')]

>> Bigrams: 
[[general, Pseudo], [Pseudo, code], [code, rule], [rule, learners], [learners,   ]]

>> Trigrams: 
[[general, Pseudo, code], [Pseudo, code, rule], [code, rule, learners], [rule, learners,   ]]

>> Noun Phrases are: 
[A general Pseudo code, rule learners]

>> Named Entities are: 
[]


============================ Sentence 145 =============================

The core difference between heuristics for rule learning   algorithms and heuristics for decision trees algorithms is that the   latter evaluate the average quality of a number of disjointed sets,   while rule learners only evaluate the quality of the set of   instances that is covered by the candidate rule [1]. 


>> Tokens are: 
[core, difference, heuristics, rule, learning,   , algorithms, heuristics, decision, trees, algorithms,   , evaluate, average, quality, number, disjointed, sets, ,,   , rule, learners, evaluate, quality, set,   , instances, covered, candidate, rule, [, 1, ], .] 

>> PoS Tags are: 
[('core', 'NOUN'), ('difference', 'NOUN'), ('heuristics', 'NOUN'), ('rule', 'NOUN'), ('learning', 'VERB'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('heuristics', 'NOUN'), ('decision', 'NOUN'), ('trees', 'NOUN'), ('algorithms', 'NOUN'), ('  ', 'SPACE'), ('evaluate', 'VERB'), ('average', 'ADJ'), ('quality', 'NOUN'), ('number', 'NOUN'), ('disjointed', 'ADJ'), ('sets', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('rule', 'NOUN'), ('learners', 'NOUN'), ('evaluate', 'VERB'), ('quality', 'NOUN'), ('set', 'NOUN'), ('  ', 'SPACE'), ('instances', 'NOUN'), ('covered', 'VERB'), ('candidate', 'NOUN'), ('rule', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('core', 'compound'), ('difference', 'nsubj'), ('heuristics', 'pobj'), ('rule', 'pobj'), ('learning', 'acl'), ('  ', 'nummod'), ('algorithms', 'dobj'), ('heuristics', 'conj'), ('decision', 'compound'), ('trees', 'compound'), ('algorithms', 'pobj'), ('  ', 'nummod'), ('evaluate', 'ccomp'), ('average', 'amod'), ('quality', 'dobj'), ('number', 'pobj'), ('disjointed', 'amod'), ('sets', 'pobj'), (',', 'punct'), ('  ', 'npadvmod'), ('rule', 'compound'), ('learners', 'nsubj'), ('evaluate', 'advcl'), ('quality', 'dobj'), ('set', 'pobj'), ('  ', 'compound'), ('instances', 'pobj'), ('covered', 'relcl'), ('candidate', 'compound'), ('rule', 'pobj'), ('[', 'punct'), ('1', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[core, difference], [difference, heuristics], [heuristics, rule], [rule, learning], [learning,   ], [  , algorithms], [algorithms, heuristics], [heuristics, decision], [decision, trees], [trees, algorithms], [algorithms,   ], [  , evaluate], [evaluate, average], [average, quality], [quality, number], [number, disjointed], [disjointed, sets], [sets, ,], [,,   ], [  , rule], [rule, learners], [learners, evaluate], [evaluate, quality], [quality, set], [set,   ], [  , instances], [instances, covered], [covered, candidate], [candidate, rule], [rule, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[core, difference, heuristics], [difference, heuristics, rule], [heuristics, rule, learning], [rule, learning,   ], [learning,   , algorithms], [  , algorithms, heuristics], [algorithms, heuristics, decision], [heuristics, decision, trees], [decision, trees, algorithms], [trees, algorithms,   ], [algorithms,   , evaluate], [  , evaluate, average], [evaluate, average, quality], [average, quality, number], [quality, number, disjointed], [number, disjointed, sets], [disjointed, sets, ,], [sets, ,,   ], [,,   , rule], [  , rule, learners], [rule, learners, evaluate], [learners, evaluate, quality], [evaluate, quality, set], [quality, set,   ], [set,   , instances], [  , instances, covered], [instances, covered, candidate], [covered, candidate, rule], [candidate, rule, [], [rule, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[The core difference, heuristics, rule,   algorithms, heuristics, decision trees algorithms, the average quality, a number, disjointed sets, rule learners, the quality, the set,   instances, the candidate rule]

>> Named Entities are: 
[]


============================ Sentence 146 =============================

One of the   most useful characteristic of rule based classifiers is their   comprehensibility. 


>> Tokens are: 
[  , useful, characteristic, rule, based, classifiers,   , comprehensibility, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('useful', 'ADJ'), ('characteristic', 'NOUN'), ('rule', 'NOUN'), ('based', 'VERB'), ('classifiers', 'NOUN'), ('  ', 'SPACE'), ('comprehensibility', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'pobj'), ('useful', 'amod'), ('characteristic', 'nsubj'), ('rule', 'npadvmod'), ('based', 'amod'), ('classifiers', 'pobj'), ('  ', 'nummod'), ('comprehensibility', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[  , useful], [useful, characteristic], [characteristic, rule], [rule, based], [based, classifiers], [classifiers,   ], [  , comprehensibility], [comprehensibility, .]]

>> Trigrams: 
[[  , useful, characteristic], [useful, characteristic, rule], [characteristic, rule, based], [rule, based, classifiers], [based, classifiers,   ], [classifiers,   , comprehensibility], [  , comprehensibility, .]]

>> Noun Phrases are: 
[One of the   most useful characteristic, rule based classifiers, their   comprehensibility]

>> Named Entities are: 
[]


============================ Sentence 147 =============================

In order to achieve better performance, even   though some rule-based classifiers can deal with numerical   features, some experts propose these features should be   discredited before induction, so as to reduce training time and   increase classification accuracy 


>> Tokens are: 
[order, achieve, better, performance, ,,   , rule, -, based, classifiers, deal, numerical,   , features, ,, experts, propose, features,   , discredited, induction, ,, reduce, training, time,   , increase, classification, accuracy] 

>> PoS Tags are: 
[('order', 'NOUN'), ('achieve', 'VERB'), ('better', 'ADJ'), ('performance', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('rule', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('classifiers', 'NOUN'), ('deal', 'VERB'), ('numerical', 'ADJ'), ('  ', 'SPACE'), ('features', 'NOUN'), (',', 'PUNCT'), ('experts', 'NOUN'), ('propose', 'VERB'), ('features', 'NOUN'), ('  ', 'SPACE'), ('discredited', 'VERB'), ('induction', 'NOUN'), (',', 'PUNCT'), ('reduce', 'VERB'), ('training', 'NOUN'), ('time', 'NOUN'), ('  ', 'SPACE'), ('increase', 'VERB'), ('classification', 'NOUN'), ('accuracy', 'NOUN')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('achieve', 'acl'), ('better', 'amod'), ('performance', 'dobj'), (',', 'punct'), ('  ', 'npadvmod'), ('rule', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('classifiers', 'nsubj'), ('deal', 'advcl'), ('numerical', 'amod'), ('  ', 'compound'), ('features', 'pobj'), (',', 'punct'), ('experts', 'nsubj'), ('propose', 'ROOT'), ('features', 'nsubjpass'), ('  ', 'nsubjpass'), ('discredited', 'ccomp'), ('induction', 'pobj'), (',', 'punct'), ('reduce', 'advcl'), ('training', 'compound'), ('time', 'dobj'), ('  ', 'conj'), ('increase', 'conj'), ('classification', 'compound'), ('accuracy', 'dobj')]

>> Bigrams: 
[[order, achieve], [achieve, better], [better, performance], [performance, ,], [,,   ], [  , rule], [rule, -], [-, based], [based, classifiers], [classifiers, deal], [deal, numerical], [numerical,   ], [  , features], [features, ,], [,, experts], [experts, propose], [propose, features], [features,   ], [  , discredited], [discredited, induction], [induction, ,], [,, reduce], [reduce, training], [training, time], [time,   ], [  , increase], [increase, classification], [classification, accuracy]]

>> Trigrams: 
[[order, achieve, better], [achieve, better, performance], [better, performance, ,], [performance, ,,   ], [,,   , rule], [  , rule, -], [rule, -, based], [-, based, classifiers], [based, classifiers, deal], [classifiers, deal, numerical], [deal, numerical,   ], [numerical,   , features], [  , features, ,], [features, ,, experts], [,, experts, propose], [experts, propose, features], [propose, features,   ], [features,   , discredited], [  , discredited, induction], [discredited, induction, ,], [induction, ,, reduce], [,, reduce, training], [reduce, training, time], [training, time,   ], [time,   , increase], [  , increase, classification], [increase, classification, accuracy]]

>> Noun Phrases are: 
[order, better performance, some rule-based classifiers, numerical   features, some experts, these features, induction, training time, classification accuracy]

>> Named Entities are: 
[]


============================ Sentence 148 =============================

[15]. 


>> Tokens are: 
[[, 15, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('15', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 15], [15, ]], [], .]]

>> Trigrams: 
[[[, 15, ]], [15, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('15', 'CARDINAL')]


============================ Sentence 149 =============================

  4. 


>> Tokens are: 
[  , 4, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('4', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 4], [4, .]]

>> Trigrams: 
[[  , 4, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 150 =============================

STATISTICAL LEARNING ALGORITHMS   Statistical learning is a framework for machine learning   drawing from the fields of statistics and functional analysis [16]. 


>> Tokens are: 
[STATISTICAL, LEARNING, ALGORITHMS,   , Statistical, learning, framework, machine, learning,   , drawing, fields, statistics, functional, analysis, [, 16, ], .] 

>> PoS Tags are: 
[('STATISTICAL', 'PROPN'), ('LEARNING', 'PROPN'), ('ALGORITHMS', 'PROPN'), ('  ', 'SPACE'), ('Statistical', 'PROPN'), ('learning', 'NOUN'), ('framework', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('  ', 'SPACE'), ('drawing', 'VERB'), ('fields', 'NOUN'), ('statistics', 'NOUN'), ('functional', 'ADJ'), ('analysis', 'NOUN'), ('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('STATISTICAL', 'compound'), ('LEARNING', 'compound'), ('ALGORITHMS', 'nsubj'), ('  ', 'appos'), ('Statistical', 'compound'), ('learning', 'nsubj'), ('framework', 'attr'), ('machine', 'pobj'), ('learning', 'acl'), ('  ', 'dobj'), ('drawing', 'acl'), ('fields', 'pobj'), ('statistics', 'pobj'), ('functional', 'amod'), ('analysis', 'conj'), ('[', 'punct'), ('16', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[STATISTICAL, LEARNING], [LEARNING, ALGORITHMS], [ALGORITHMS,   ], [  , Statistical], [Statistical, learning], [learning, framework], [framework, machine], [machine, learning], [learning,   ], [  , drawing], [drawing, fields], [fields, statistics], [statistics, functional], [functional, analysis], [analysis, [], [[, 16], [16, ]], [], .]]

>> Trigrams: 
[[STATISTICAL, LEARNING, ALGORITHMS], [LEARNING, ALGORITHMS,   ], [ALGORITHMS,   , Statistical], [  , Statistical, learning], [Statistical, learning, framework], [learning, framework, machine], [framework, machine, learning], [machine, learning,   ], [learning,   , drawing], [  , drawing, fields], [drawing, fields, statistics], [fields, statistics, functional], [statistics, functional, analysis], [functional, analysis, [], [analysis, [, 16], [[, 16, ]], [16, ], .]]

>> Noun Phrases are: 
[STATISTICAL LEARNING ALGORITHMS, Statistical learning, a framework, machine, the fields, statistics, functional analysis]

>> Named Entities are: 
[('16', 'CARDINAL')]


============================ Sentence 151 =============================

  1. 


>> Tokens are: 
[  , 1, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 1], [1, .]]

>> Trigrams: 
[[  , 1, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 152 =============================

Initialize rule set to a default   2. 


>> Tokens are: 
[Initialize, rule, set, default,   , 2, .] 

>> PoS Tags are: 
[('Initialize', 'NOUN'), ('rule', 'NOUN'), ('set', 'VERB'), ('default', 'NOUN'), ('  ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Initialize', 'compound'), ('rule', 'ROOT'), ('set', 'acl'), ('default', 'pobj'), ('  ', 'compound'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Initialize, rule], [rule, set], [set, default], [default,   ], [  , 2], [2, .]]

>> Trigrams: 
[[Initialize, rule, set], [rule, set, default], [set, default,   ], [default,   , 2], [  , 2, .]]

>> Noun Phrases are: 
[Initialize rule, a default]

>> Named Entities are: 
[('Initialize', 'ORG'), ('2', 'CARDINAL')]


============================ Sentence 153 =============================

Initialize examples to either all available examples   or all examples not correctly handled by rule set. 


>> Tokens are: 
[Initialize, examples, available, examples,   , examples, correctly, handled, rule, set, .] 

>> PoS Tags are: 
[('Initialize', 'NOUN'), ('examples', 'NOUN'), ('available', 'ADJ'), ('examples', 'NOUN'), ('  ', 'SPACE'), ('examples', 'NOUN'), ('correctly', 'ADV'), ('handled', 'VERB'), ('rule', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Initialize', 'ROOT'), ('examples', 'dobj'), ('available', 'amod'), ('examples', 'pobj'), ('  ', 'appos'), ('examples', 'conj'), ('correctly', 'advmod'), ('handled', 'acl'), ('rule', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Initialize, examples], [examples, available], [available, examples], [examples,   ], [  , examples], [examples, correctly], [correctly, handled], [handled, rule], [rule, set], [set, .]]

>> Trigrams: 
[[Initialize, examples, available], [examples, available, examples], [available, examples,   ], [examples,   , examples], [  , examples, correctly], [examples, correctly, handled], [correctly, handled, rule], [handled, rule, set], [rule, set, .]]

>> Noun Phrases are: 
[Initialize, examples, either all available examples, all examples, rule set]

>> Named Entities are: 
[]


============================ Sentence 154 =============================

   3. 


>> Tokens are: 
[   , 3, .] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'ROOT'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[   , 3], [3, .]]

>> Trigrams: 
[[   , 3, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

Repeat         (a) Find best, the best rule with respect to examples. 


>> Tokens are: 
[Repeat,         , (, ), Find, best, ,, best, rule, respect, examples, .] 

>> PoS Tags are: 
[('Repeat', 'VERB'), ('        ', 'SPACE'), ('(', 'PUNCT'), (')', 'PUNCT'), ('Find', 'VERB'), ('best', 'ADJ'), (',', 'PUNCT'), ('best', 'ADJ'), ('rule', 'NOUN'), ('respect', 'NOUN'), ('examples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Repeat', 'ROOT'), ('        ', 'dobj'), ('(', 'punct'), (')', 'punct'), ('Find', 'conj'), ('best', 'advmod'), (',', 'punct'), ('best', 'amod'), ('rule', 'dobj'), ('respect', 'pobj'), ('examples', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Repeat,         ], [        , (], [(, )], [), Find], [Find, best], [best, ,], [,, best], [best, rule], [rule, respect], [respect, examples], [examples, .]]

>> Trigrams: 
[[Repeat,         , (], [        , (, )], [(, ), Find], [), Find, best], [Find, best, ,], [best, ,, best], [,, best, rule], [best, rule, respect], [rule, respect, examples], [respect, examples, .]]

>> Noun Phrases are: 
[the best rule, respect, examples]

>> Named Entities are: 
[]


============================ Sentence 156 =============================

        (b) 


>> Tokens are: 
[        , (, b, )] 

>> PoS Tags are: 
[('        ', 'SPACE'), ('(', 'PUNCT'), ('b', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('        ', 'ROOT'), ('(', 'punct'), ('b', 'appos'), (')', 'punct')]

>> Bigrams: 
[[        , (], [(, b], [b, )]]

>> Trigrams: 
[[        , (, b], [(, b, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

If such a rule can be found    i. Add best to rule set. 


>> Tokens are: 
[rule, found,    , i., Add, best, rule, set, .] 

>> PoS Tags are: 
[('rule', 'NOUN'), ('found', 'VERB'), ('   ', 'SPACE'), ('i.', 'NOUN'), ('Add', 'VERB'), ('best', 'ADJ'), ('rule', 'VERB'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('rule', 'nsubjpass'), ('found', 'ROOT'), ('   ', 'nummod'), ('i.', 'nsubj'), ('Add', 'ccomp'), ('best', 'advmod'), ('rule', 'advcl'), ('set', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[rule, found], [found,    ], [   , i.], [i., Add], [Add, best], [best, rule], [rule, set], [set, .]]

>> Trigrams: 
[[rule, found,    ], [found,    , i.], [   , i., Add], [i., Add, best], [Add, best, rule], [best, rule, set], [rule, set, .]]

>> Noun Phrases are: 
[such a rule,    i., set]

>> Named Entities are: 
[]


============================ Sentence 158 =============================

  ii. 


>> Tokens are: 
[  , ii, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('ii', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('ii', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , ii], [ii, .]]

>> Trigrams: 
[[  , ii, .]]

>> Noun Phrases are: 
[  ii]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

Set examples to all examples not handled   correctly by rule set. 


>> Tokens are: 
[Set, examples, examples, handled,   , correctly, rule, set, .] 

>> PoS Tags are: 
[('Set', 'ADJ'), ('examples', 'NOUN'), ('examples', 'NOUN'), ('handled', 'VERB'), ('  ', 'SPACE'), ('correctly', 'ADV'), ('rule', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Set', 'amod'), ('examples', 'nsubj'), ('examples', 'pobj'), ('handled', 'ROOT'), ('  ', 'dobj'), ('correctly', 'advmod'), ('rule', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Set, examples], [examples, examples], [examples, handled], [handled,   ], [  , correctly], [correctly, rule], [rule, set], [set, .]]

>> Trigrams: 
[[Set, examples, examples], [examples, examples, handled], [examples, handled,   ], [handled,   , correctly], [  , correctly, rule], [correctly, rule, set], [rule, set, .]]

>> Noun Phrases are: 
[Set examples, all examples, rule set]

>> Named Entities are: 
[]


============================ Sentence 160 =============================

          4. 


>> Tokens are: 
[          , 4, .] 

>> PoS Tags are: 
[('          ', 'SPACE'), ('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('          ', 'ROOT'), ('4', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[          , 4], [4, .]]

>> Trigrams: 
[[          , 4, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 161 =============================

Until no rule best can be found    1. 


>> Tokens are: 
[rule, best, found,    , 1, .] 

>> PoS Tags are: 
[('rule', 'NOUN'), ('best', 'ADV'), ('found', 'VERB'), ('   ', 'SPACE'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('rule', 'nsubjpass'), ('best', 'advmod'), ('found', 'ROOT'), ('   ', 'compound'), ('1', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[rule, best], [best, found], [found,    ], [   , 1], [1, .]]

>> Trigrams: 
[[rule, best, found], [best, found,    ], [found,    , 1], [   , 1, .]]

>> Noun Phrases are: 
[no rule]

>> Named Entities are: 
[]


============================ Sentence 162 =============================

Check for base cases   2. 


>> Tokens are: 
[Check, base, cases,   , 2, .] 

>> PoS Tags are: 
[('Check', 'VERB'), ('base', 'NOUN'), ('cases', 'NOUN'), ('  ', 'SPACE'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Check', 'ROOT'), ('base', 'compound'), ('cases', 'pobj'), ('  ', 'dobj'), ('2', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Check, base], [base, cases], [cases,   ], [  , 2], [2, .]]

>> Trigrams: 
[[Check, base, cases], [base, cases,   ], [cases,   , 2], [  , 2, .]]

>> Noun Phrases are: 
[base cases]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 163 =============================

For each attribute “a”  calculate   i. 


>> Tokens are: 
[attribute, “, ”,  , calculate,   , i.] 

>> PoS Tags are: 
[('attribute', 'NOUN'), ('“', 'PUNCT'), ('”', 'PUNCT'), (' ', 'SPACE'), ('calculate', 'VERB'), ('  ', 'SPACE'), ('i.', 'NOUN')] 

>> Dependency Tags are: 
[('attribute', 'pobj'), ('“', 'punct'), ('”', 'punct'), (' ', 'nsubj'), ('calculate', 'ROOT'), ('  ', 'compound'), ('i.', 'dobj')]

>> Bigrams: 
[[attribute, “], [“, ”], [”,  ], [ , calculate], [calculate,   ], [  , i.]]

>> Trigrams: 
[[attribute, “, ”], [“, ”,  ], [”,  , calculate], [ , calculate,   ], [calculate,   , i.]]

>> Noun Phrases are: 
[each attribute,   i.]

>> Named Entities are: 
[]


============================ Sentence 164 =============================

Normalized the information gain (IG) from splitting  on attribute “a”. 


>> Tokens are: 
[Normalized, information, gain, (, IG, ), splitting,  , attribute, “, ”, .] 

>> PoS Tags are: 
[('Normalized', 'VERB'), ('information', 'NOUN'), ('gain', 'NOUN'), ('(', 'PUNCT'), ('IG', 'PROPN'), (')', 'PUNCT'), ('splitting', 'VERB'), (' ', 'SPACE'), ('attribute', 'NOUN'), ('“', 'PUNCT'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Normalized', 'ROOT'), ('information', 'compound'), ('gain', 'dobj'), ('(', 'punct'), ('IG', 'appos'), (')', 'punct'), ('splitting', 'pcomp'), (' ', 'dobj'), ('attribute', 'pobj'), ('“', 'punct'), ('”', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Normalized, information], [information, gain], [gain, (], [(, IG], [IG, )], [), splitting], [splitting,  ], [ , attribute], [attribute, “], [“, ”], [”, .]]

>> Trigrams: 
[[Normalized, information, gain], [information, gain, (], [gain, (, IG], [(, IG, )], [IG, ), splitting], [), splitting,  ], [splitting,  , attribute], [ , attribute, “], [attribute, “, ”], [“, ”, .]]

>> Noun Phrases are: 
[the information gain, IG, attribute]

>> Named Entities are: 
[('IG', 'ORG')]


============================ Sentence 165 =============================

  3. 


>> Tokens are: 
[  , 3, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('3', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('3', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 3], [3, .]]

>> Trigrams: 
[[  , 3, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 166 =============================

Find the best “a”, attribute that has highest IG   4. 


>> Tokens are: 
[Find, best, “, ”, ,, attribute, highest, IG,   , 4, .] 

>> PoS Tags are: 
[('Find', 'VERB'), ('best', 'ADJ'), ('“', 'PUNCT'), ('”', 'PUNCT'), (',', 'PUNCT'), ('attribute', 'NOUN'), ('highest', 'ADJ'), ('IG', 'PROPN'), ('  ', 'SPACE'), ('4', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Find', 'ROOT'), ('best', 'amod'), ('“', 'punct'), ('”', 'punct'), (',', 'punct'), ('attribute', 'dep'), ('highest', 'amod'), ('IG', 'dobj'), ('  ', 'dobj'), ('4', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Find, best], [best, “], [“, ”], [”, ,], [,, attribute], [attribute, highest], [highest, IG], [IG,   ], [  , 4], [4, .]]

>> Trigrams: 
[[Find, best, “], [best, “, ”], [“, ”, ,], [”, ,, attribute], [,, attribute, highest], [attribute, highest, IG], [highest, IG,   ], [IG,   , 4], [  , 4, .]]

>> Noun Phrases are: 
[highest IG]

>> Named Entities are: 
[('IG', 'ORG'), ('4', 'CARDINAL')]


============================ Sentence 167 =============================

Create a decision node: node that splits on best of “a”  5. 


>> Tokens are: 
[Create, decision, node, :, node, splits, best, “, ”,  , 5, .] 

>> PoS Tags are: 
[('Create', 'VERB'), ('decision', 'NOUN'), ('node', 'NOUN'), (':', 'PUNCT'), ('node', 'NOUN'), ('splits', 'VERB'), ('best', 'ADJ'), ('“', 'PUNCT'), ('”', 'PUNCT'), (' ', 'SPACE'), ('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Create', 'ROOT'), ('decision', 'compound'), ('node', 'dobj'), (':', 'punct'), ('node', 'dobj'), ('splits', 'relcl'), ('best', 'pobj'), ('“', 'punct'), ('”', 'punct'), (' ', 'pobj'), ('5', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Create, decision], [decision, node], [node, :], [:, node], [node, splits], [splits, best], [best, “], [“, ”], [”,  ], [ , 5], [5, .]]

>> Trigrams: 
[[Create, decision, node], [decision, node, :], [node, :, node], [:, node, splits], [node, splits, best], [splits, best, “], [best, “, ”], [“, ”,  ], [”,  , 5], [ , 5, .]]

>> Noun Phrases are: 
[a decision node, node]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 168 =============================

Recurse on the sub-lists obtained by Splitting on a best   and add those nodes as children of node   at1   at2 


>> Tokens are: 
[Recurse, sub, -, lists, obtained, Splitting, best,   , add, nodes, children, node,   , at1,   , at2] 

>> PoS Tags are: 
[('Recurse', 'PROPN'), ('sub', 'NOUN'), ('-', 'NOUN'), ('lists', 'NOUN'), ('obtained', 'VERB'), ('Splitting', 'PROPN'), ('best', 'ADJ'), ('  ', 'SPACE'), ('add', 'VERB'), ('nodes', 'NOUN'), ('children', 'NOUN'), ('node', 'NOUN'), ('  ', 'SPACE'), ('at1', 'NOUN'), ('  ', 'SPACE'), ('at2', 'NOUN')] 

>> Dependency Tags are: 
[('Recurse', 'nsubj'), ('sub', 'pobj'), ('-', 'pobj'), ('lists', 'pobj'), ('obtained', 'acl'), ('Splitting', 'pobj'), ('best', 'amod'), ('  ', 'pobj'), ('add', 'conj'), ('nodes', 'dobj'), ('children', 'pobj'), ('node', 'compound'), ('  ', 'pobj'), ('at1', 'ROOT'), ('  ', 'nummod'), ('at2', 'dobj')]

>> Bigrams: 
[[Recurse, sub], [sub, -], [-, lists], [lists, obtained], [obtained, Splitting], [Splitting, best], [best,   ], [  , add], [add, nodes], [nodes, children], [children, node], [node,   ], [  , at1], [at1,   ], [  , at2]]

>> Trigrams: 
[[Recurse, sub, -], [sub, -, lists], [-, lists, obtained], [lists, obtained, Splitting], [obtained, Splitting, best], [Splitting, best,   ], [best,   , add], [  , add, nodes], [add, nodes, children], [nodes, children, node], [children, node,   ], [node,   , at1], [  , at1,   ], [at1,   , at2]]

>> Noun Phrases are: 
[Recurse, the sub, -, lists, Splitting, those nodes, children,   at2]

>> Named Entities are: 
[]


============================ Sentence 169 =============================

No 


>> Tokens are: 
[] 

>> PoS Tags are: 
[] 

>> Dependency Tags are: 
[]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 170 =============================

No      at4 at3   


>> Tokens are: 
[     , at4, at3,  ] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('at4', 'NOUN'), ('at3', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('at4', 'compound'), ('at3', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[     , at4], [at4, at3], [at3,  ]]

>> Trigrams: 
[[     , at4, at3], [at4, at3,  ]]

>> Noun Phrases are: 
[No      at4 at3]

>> Named Entities are: 
[]


============================ Sentence 171 =============================

No    


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 172 =============================

Yes    


>> Tokens are: 
[Yes,   ] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'ROOT')]

>> Bigrams: 
[[Yes,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 173 =============================

No      


>> Tokens are: 
[    ] 

>> PoS Tags are: 
[('    ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 174 =============================

Yes No   http://mathworld.wolfram.com/Disjunction.html http://mathworld.wolfram.com/OR.html http://mathworld.wolfram.com/Disjunct.html http://mathworld.wolfram.com/Conjunction.html http://mathworld.wolfram.com/AND.html 


>> Tokens are: 
[Yes,   , http://mathworld.wolfram.com/Disjunction.html, http://mathworld.wolfram.com/OR.html, http://mathworld.wolfram.com/Disjunct.html, http://mathworld.wolfram.com/Conjunction.html, http://mathworld.wolfram.com/AND.html] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE'), ('http://mathworld.wolfram.com/Disjunction.html', 'PROPN'), ('http://mathworld.wolfram.com/OR.html', 'X'), ('http://mathworld.wolfram.com/Disjunct.html', 'PROPN'), ('http://mathworld.wolfram.com/Conjunction.html', 'X'), ('http://mathworld.wolfram.com/AND.html', 'PROPN')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'ROOT'), ('http://mathworld.wolfram.com/Disjunction.html', 'npadvmod'), ('http://mathworld.wolfram.com/OR.html', 'punct'), ('http://mathworld.wolfram.com/Disjunct.html', 'punct'), ('http://mathworld.wolfram.com/Conjunction.html', 'punct'), ('http://mathworld.wolfram.com/AND.html', 'punct')]

>> Bigrams: 
[[Yes,   ], [  , http://mathworld.wolfram.com/Disjunction.html], [http://mathworld.wolfram.com/Disjunction.html, http://mathworld.wolfram.com/OR.html], [http://mathworld.wolfram.com/OR.html, http://mathworld.wolfram.com/Disjunct.html], [http://mathworld.wolfram.com/Disjunct.html, http://mathworld.wolfram.com/Conjunction.html], [http://mathworld.wolfram.com/Conjunction.html, http://mathworld.wolfram.com/AND.html]]

>> Trigrams: 
[[Yes,   , http://mathworld.wolfram.com/Disjunction.html], [  , http://mathworld.wolfram.com/Disjunction.html, http://mathworld.wolfram.com/OR.html], [http://mathworld.wolfram.com/Disjunction.html, http://mathworld.wolfram.com/OR.html, http://mathworld.wolfram.com/Disjunct.html], [http://mathworld.wolfram.com/OR.html, http://mathworld.wolfram.com/Disjunct.html, http://mathworld.wolfram.com/Conjunction.html], [http://mathworld.wolfram.com/Disjunct.html, http://mathworld.wolfram.com/Conjunction.html, http://mathworld.wolfram.com/AND.html]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 175 =============================

http://mathworld.wolfram.com/Literal.html   ISSN: 2229-6956(ONLINE) 


>> Tokens are: 
[http://mathworld.wolfram.com/Literal.html,   , ISSN, :, 2229, -, 6956(ONLINE, )] 

>> PoS Tags are: 
[('http://mathworld.wolfram.com/Literal.html', 'PROPN'), ('  ', 'SPACE'), ('ISSN', 'PROPN'), (':', 'PUNCT'), ('2229', 'NUM'), ('-', 'SYM'), ('6956(ONLINE', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('http://mathworld.wolfram.com/Literal.html', 'ROOT'), ('  ', 'appos'), ('ISSN', 'appos'), (':', 'punct'), ('2229', 'appos'), ('-', 'punct'), ('6956(ONLINE', 'prep'), (')', 'punct')]

>> Bigrams: 
[[http://mathworld.wolfram.com/Literal.html,   ], [  , ISSN], [ISSN, :], [:, 2229], [2229, -], [-, 6956(ONLINE], [6956(ONLINE, )]]

>> Trigrams: 
[[http://mathworld.wolfram.com/Literal.html,   , ISSN], [  , ISSN, :], [ISSN, :, 2229], [:, 2229, -], [2229, -, 6956(ONLINE], [-, 6956(ONLINE, )]]

>> Noun Phrases are: 
[http://mathworld.wolfram.com/Literal.html, ISSN]

>> Named Entities are: 
[('ISSN', 'ORG'), ('2229-6956(ONLINE', 'CARDINAL')]


============================ Sentence 176 =============================

                                                                                                                            ICTACT JOURNAL ON SOFT COMPUTING, APRIL 2015, VOLUME: 05, ISSUE: 03   949   Statistical learning theory deals with the problem of finding a   predictive function based on data and it has a good number of   applications in the field of AI. 


>> Tokens are: 
[                                                                                                                            , ICTACT, JOURNAL, SOFT, COMPUTING, ,, APRIL, 2015, ,, VOLUME, :, 05, ,, ISSUE, :, 03,   , 949,   , Statistical, learning, theory, deals, problem, finding,   , predictive, function, based, data, good, number,   , applications, field, AI, .] 

>> PoS Tags are: 
[('                                                                                                                            ', 'SPACE'), ('ICTACT', 'PROPN'), ('JOURNAL', 'PROPN'), ('SOFT', 'ADJ'), ('COMPUTING', 'NOUN'), (',', 'PUNCT'), ('APRIL', 'PROPN'), ('2015', 'NUM'), (',', 'PUNCT'), ('VOLUME', 'NOUN'), (':', 'PUNCT'), ('05', 'NUM'), (',', 'PUNCT'), ('ISSUE', 'NOUN'), (':', 'PUNCT'), ('03', 'NUM'), ('  ', 'SPACE'), ('949', 'NUM'), ('  ', 'SPACE'), ('Statistical', 'PROPN'), ('learning', 'NOUN'), ('theory', 'NOUN'), ('deals', 'VERB'), ('problem', 'NOUN'), ('finding', 'VERB'), ('  ', 'SPACE'), ('predictive', 'ADJ'), ('function', 'NOUN'), ('based', 'VERB'), ('data', 'NOUN'), ('good', 'ADJ'), ('number', 'NOUN'), ('  ', 'SPACE'), ('applications', 'NOUN'), ('field', 'NOUN'), ('AI', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('                                                                                                                            ', 'compound'), ('ICTACT', 'compound'), ('JOURNAL', 'nsubj'), ('SOFT', 'amod'), ('COMPUTING', 'pobj'), (',', 'punct'), ('APRIL', 'appos'), ('2015', 'nummod'), (',', 'punct'), ('VOLUME', 'appos'), (':', 'punct'), ('05', 'appos'), (',', 'punct'), ('ISSUE', 'appos'), (':', 'punct'), ('03', 'nummod'), ('  ', 'appos'), ('949', 'nummod'), ('  ', 'appos'), ('Statistical', 'compound'), ('learning', 'compound'), ('theory', 'appos'), ('deals', 'ROOT'), ('problem', 'pobj'), ('finding', 'pcomp'), ('  ', 'nmod'), ('predictive', 'amod'), ('function', 'dobj'), ('based', 'prep'), ('data', 'pobj'), ('good', 'amod'), ('number', 'dobj'), ('  ', 'compound'), ('applications', 'pobj'), ('field', 'pobj'), ('AI', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[                                                                                                                            , ICTACT], [ICTACT, JOURNAL], [JOURNAL, SOFT], [SOFT, COMPUTING], [COMPUTING, ,], [,, APRIL], [APRIL, 2015], [2015, ,], [,, VOLUME], [VOLUME, :], [:, 05], [05, ,], [,, ISSUE], [ISSUE, :], [:, 03], [03,   ], [  , 949], [949,   ], [  , Statistical], [Statistical, learning], [learning, theory], [theory, deals], [deals, problem], [problem, finding], [finding,   ], [  , predictive], [predictive, function], [function, based], [based, data], [data, good], [good, number], [number,   ], [  , applications], [applications, field], [field, AI], [AI, .]]

>> Trigrams: 
[[                                                                                                                            , ICTACT, JOURNAL], [ICTACT, JOURNAL, SOFT], [JOURNAL, SOFT, COMPUTING], [SOFT, COMPUTING, ,], [COMPUTING, ,, APRIL], [,, APRIL, 2015], [APRIL, 2015, ,], [2015, ,, VOLUME], [,, VOLUME, :], [VOLUME, :, 05], [:, 05, ,], [05, ,, ISSUE], [,, ISSUE, :], [ISSUE, :, 03], [:, 03,   ], [03,   , 949], [  , 949,   ], [949,   , Statistical], [  , Statistical, learning], [Statistical, learning, theory], [learning, theory, deals], [theory, deals, problem], [deals, problem, finding], [problem, finding,   ], [finding,   , predictive], [  , predictive, function], [predictive, function, based], [function, based, data], [based, data, good], [data, good, number], [good, number,   ], [number,   , applications], [  , applications, field], [applications, field, AI], [field, AI, .]]

>> Noun Phrases are: 
[                                                                                                                            ICTACT JOURNAL, SOFT COMPUTING, APRIL, VOLUME, ISSUE, Statistical learning theory, the problem, a   predictive function, data, it, a good number,   applications, the field, AI]

>> Named Entities are: 
[('APRIL 2015', 'DATE'), ('05', 'CARDINAL'), ('03', 'CARDINAL'), ('949', 'CARDINAL'), ('AI', 'ORG')]


============================ Sentence 177 =============================

The major of goal of statistical   learning algorithms is to provide a framework for studying the   problem of inference that is obtaining knowledge, making   predictions and making decision by constructing model from a   set of data [17]. 


>> Tokens are: 
[major, goal, statistical,   , learning, algorithms, provide, framework, studying,   , problem, inference, obtaining, knowledge, ,, making,   , predictions, making, decision, constructing, model,   , set, data, [, 17, ], .] 

>> PoS Tags are: 
[('major', 'NOUN'), ('goal', 'NOUN'), ('statistical', 'ADJ'), ('  ', 'SPACE'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('provide', 'VERB'), ('framework', 'NOUN'), ('studying', 'VERB'), ('  ', 'SPACE'), ('problem', 'NOUN'), ('inference', 'NOUN'), ('obtaining', 'VERB'), ('knowledge', 'NOUN'), (',', 'PUNCT'), ('making', 'VERB'), ('  ', 'SPACE'), ('predictions', 'NOUN'), ('making', 'VERB'), ('decision', 'NOUN'), ('constructing', 'VERB'), ('model', 'NOUN'), ('  ', 'SPACE'), ('set', 'NOUN'), ('data', 'NOUN'), ('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('major', 'nsubj'), ('goal', 'pobj'), ('statistical', 'amod'), ('  ', 'pobj'), ('learning', 'acl'), ('algorithms', 'dobj'), ('provide', 'xcomp'), ('framework', 'dobj'), ('studying', 'pcomp'), ('  ', 'nummod'), ('problem', 'dobj'), ('inference', 'pobj'), ('obtaining', 'relcl'), ('knowledge', 'dobj'), (',', 'punct'), ('making', 'advcl'), ('  ', 'poss'), ('predictions', 'dobj'), ('making', 'conj'), ('decision', 'dobj'), ('constructing', 'pcomp'), ('model', 'dobj'), ('  ', 'compound'), ('set', 'pobj'), ('data', 'pobj'), ('[', 'punct'), ('17', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[major, goal], [goal, statistical], [statistical,   ], [  , learning], [learning, algorithms], [algorithms, provide], [provide, framework], [framework, studying], [studying,   ], [  , problem], [problem, inference], [inference, obtaining], [obtaining, knowledge], [knowledge, ,], [,, making], [making,   ], [  , predictions], [predictions, making], [making, decision], [decision, constructing], [constructing, model], [model,   ], [  , set], [set, data], [data, [], [[, 17], [17, ]], [], .]]

>> Trigrams: 
[[major, goal, statistical], [goal, statistical,   ], [statistical,   , learning], [  , learning, algorithms], [learning, algorithms, provide], [algorithms, provide, framework], [provide, framework, studying], [framework, studying,   ], [studying,   , problem], [  , problem, inference], [problem, inference, obtaining], [inference, obtaining, knowledge], [obtaining, knowledge, ,], [knowledge, ,, making], [,, making,   ], [making,   , predictions], [  , predictions, making], [predictions, making, decision], [making, decision, constructing], [decision, constructing, model], [constructing, model,   ], [model,   , set], [  , set, data], [set, data, [], [data, [, 17], [[, 17, ]], [17, ], .]]

>> Noun Phrases are: 
[The major, goal, algorithms, a framework, the   problem, inference, knowledge,   predictions, decision, model, a   set, data]

>> Named Entities are: 
[('17', 'CARDINAL')]


============================ Sentence 178 =============================

  Bayesian networks are the most well known representative of   statistical learning algorithms. 


>> Tokens are: 
[  , Bayesian, networks, known, representative,   , statistical, learning, algorithms, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Bayesian', 'ADJ'), ('networks', 'NOUN'), ('known', 'VERB'), ('representative', 'NOUN'), ('  ', 'SPACE'), ('statistical', 'ADJ'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Bayesian', 'compound'), ('networks', 'nsubj'), ('known', 'amod'), ('representative', 'attr'), ('  ', 'nmod'), ('statistical', 'amod'), ('learning', 'compound'), ('algorithms', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , Bayesian], [Bayesian, networks], [networks, known], [known, representative], [representative,   ], [  , statistical], [statistical, learning], [learning, algorithms], [algorithms, .]]

>> Trigrams: 
[[  , Bayesian, networks], [Bayesian, networks, known], [networks, known, representative], [known, representative,   ], [representative,   , statistical], [  , statistical, learning], [statistical, learning, algorithms], [learning, algorithms, .]]

>> Noun Phrases are: 
[  Bayesian networks, the most well known representative,   statistical learning algorithms]

>> Named Entities are: 
[('Bayesian', 'NORP')]


============================ Sentence 179 =============================

A good source for learning   Bayesian Networks (BN) theory is [18], where readers can learn   applications of BN. 


>> Tokens are: 
[good, source, learning,   , Bayesian, Networks, (, BN, ), theory, [, 18, ], ,, readers, learn,   , applications, BN, .] 

>> PoS Tags are: 
[('good', 'ADJ'), ('source', 'NOUN'), ('learning', 'VERB'), ('  ', 'SPACE'), ('Bayesian', 'PROPN'), ('Networks', 'PROPN'), ('(', 'PUNCT'), ('BN', 'NOUN'), (')', 'PUNCT'), ('theory', 'NOUN'), ('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('readers', 'NOUN'), ('learn', 'VERB'), ('  ', 'SPACE'), ('applications', 'NOUN'), ('BN', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('good', 'amod'), ('source', 'nsubj'), ('learning', 'pcomp'), ('  ', 'compound'), ('Bayesian', 'compound'), ('Networks', 'dobj'), ('(', 'punct'), ('BN', 'appos'), (')', 'punct'), ('theory', 'nsubj'), ('[', 'punct'), ('18', 'dep'), (']', 'punct'), (',', 'punct'), ('readers', 'nsubj'), ('learn', 'relcl'), ('  ', 'compound'), ('applications', 'dobj'), ('BN', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[good, source], [source, learning], [learning,   ], [  , Bayesian], [Bayesian, Networks], [Networks, (], [(, BN], [BN, )], [), theory], [theory, [], [[, 18], [18, ]], [], ,], [,, readers], [readers, learn], [learn,   ], [  , applications], [applications, BN], [BN, .]]

>> Trigrams: 
[[good, source, learning], [source, learning,   ], [learning,   , Bayesian], [  , Bayesian, Networks], [Bayesian, Networks, (], [Networks, (, BN], [(, BN, )], [BN, ), theory], [), theory, [], [theory, [, 18], [[, 18, ]], [18, ], ,], [], ,, readers], [,, readers, learn], [readers, learn,   ], [learn,   , applications], [  , applications, BN], [applications, BN, .]]

>> Noun Phrases are: 
[A good source,   Bayesian Networks, BN, theory, readers,   applications, BN]

>> Named Entities are: 
[('Bayesian Networks', 'ORG'), ('18', 'CARDINAL')]


============================ Sentence 180 =============================

  Statistical methods are characterized by having an explicit   underlying probability model, which provides a probability that an   instance belongs in each class, rather than simply a classification. 


>> Tokens are: 
[  , Statistical, methods, characterized, having, explicit,   , underlying, probability, model, ,, provides, probability,   , instance, belongs, class, ,, simply, classification, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Statistical', 'ADJ'), ('methods', 'NOUN'), ('characterized', 'VERB'), ('having', 'VERB'), ('explicit', 'ADJ'), ('  ', 'SPACE'), ('underlying', 'VERB'), ('probability', 'NOUN'), ('model', 'NOUN'), (',', 'PUNCT'), ('provides', 'VERB'), ('probability', 'NOUN'), ('  ', 'SPACE'), ('instance', 'NOUN'), ('belongs', 'VERB'), ('class', 'NOUN'), (',', 'PUNCT'), ('simply', 'ADV'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Statistical', 'amod'), ('methods', 'nsubjpass'), ('characterized', 'ROOT'), ('having', 'pcomp'), ('explicit', 'amod'), ('  ', 'nmod'), ('underlying', 'amod'), ('probability', 'compound'), ('model', 'dobj'), (',', 'punct'), ('provides', 'relcl'), ('probability', 'dobj'), ('  ', 'compound'), ('instance', 'nsubj'), ('belongs', 'relcl'), ('class', 'pobj'), (',', 'punct'), ('simply', 'advmod'), ('classification', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , Statistical], [Statistical, methods], [methods, characterized], [characterized, having], [having, explicit], [explicit,   ], [  , underlying], [underlying, probability], [probability, model], [model, ,], [,, provides], [provides, probability], [probability,   ], [  , instance], [instance, belongs], [belongs, class], [class, ,], [,, simply], [simply, classification], [classification, .]]

>> Trigrams: 
[[  , Statistical, methods], [Statistical, methods, characterized], [methods, characterized, having], [characterized, having, explicit], [having, explicit,   ], [explicit,   , underlying], [  , underlying, probability], [underlying, probability, model], [probability, model, ,], [model, ,, provides], [,, provides, probability], [provides, probability,   ], [probability,   , instance], [  , instance, belongs], [instance, belongs, class], [belongs, class, ,], [class, ,, simply], [,, simply, classification], [simply, classification, .]]

>> Noun Phrases are: 
[  Statistical methods, an explicit   underlying probability model, a probability, an   instance, each class, simply a classification]

>> Named Entities are: 
[]


============================ Sentence 181 =============================

  Linear Discriminate Analysis (LDA),which was developed in   1936, and the related Fisher’s linear discriminate are famous   methods used in statistics and machine learning to retrieve the   linear combination of features which best separate two or more   classes of object [1]. 


>> Tokens are: 
[  , Linear, Discriminate, Analysis, (, LDA),which, developed,   , 1936, ,, related, Fisher, linear, discriminate, famous,   , methods, statistics, machine, learning, retrieve,   , linear, combination, features, best, separate,   , classes, object, [, 1, ], .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Linear', 'PROPN'), ('Discriminate', 'PROPN'), ('Analysis', 'PROPN'), ('(', 'PUNCT'), ('LDA),which', 'PROPN'), ('developed', 'VERB'), ('  ', 'SPACE'), ('1936', 'NUM'), (',', 'PUNCT'), ('related', 'ADJ'), ('Fisher', 'PROPN'), ('linear', 'ADJ'), ('discriminate', 'NOUN'), ('famous', 'ADJ'), ('  ', 'SPACE'), ('methods', 'NOUN'), ('statistics', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('retrieve', 'VERB'), ('  ', 'SPACE'), ('linear', 'ADJ'), ('combination', 'NOUN'), ('features', 'NOUN'), ('best', 'ADV'), ('separate', 'VERB'), ('  ', 'SPACE'), ('classes', 'NOUN'), ('object', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('Linear', 'compound'), ('Discriminate', 'compound'), ('Analysis', 'appos'), ('(', 'punct'), ('LDA),which', 'nsubjpass'), ('developed', 'relcl'), ('  ', 'pobj'), ('1936', 'nummod'), (',', 'punct'), ('related', 'amod'), ('Fisher', 'conj'), ('linear', 'amod'), ('discriminate', 'conj'), ('famous', 'amod'), ('  ', 'nummod'), ('methods', 'attr'), ('statistics', 'pobj'), ('machine', 'compound'), ('learning', 'conj'), ('retrieve', 'xcomp'), ('  ', 'nummod'), ('linear', 'amod'), ('combination', 'dobj'), ('features', 'pobj'), ('best', 'advmod'), ('separate', 'relcl'), ('  ', 'compound'), ('classes', 'dobj'), ('object', 'pobj'), ('[', 'punct'), ('1', 'dep'), (']', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[  , Linear], [Linear, Discriminate], [Discriminate, Analysis], [Analysis, (], [(, LDA),which], [LDA),which, developed], [developed,   ], [  , 1936], [1936, ,], [,, related], [related, Fisher], [Fisher, linear], [linear, discriminate], [discriminate, famous], [famous,   ], [  , methods], [methods, statistics], [statistics, machine], [machine, learning], [learning, retrieve], [retrieve,   ], [  , linear], [linear, combination], [combination, features], [features, best], [best, separate], [separate,   ], [  , classes], [classes, object], [object, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[  , Linear, Discriminate], [Linear, Discriminate, Analysis], [Discriminate, Analysis, (], [Analysis, (, LDA),which], [(, LDA),which, developed], [LDA),which, developed,   ], [developed,   , 1936], [  , 1936, ,], [1936, ,, related], [,, related, Fisher], [related, Fisher, linear], [Fisher, linear, discriminate], [linear, discriminate, famous], [discriminate, famous,   ], [famous,   , methods], [  , methods, statistics], [methods, statistics, machine], [statistics, machine, learning], [machine, learning, retrieve], [learning, retrieve,   ], [retrieve,   , linear], [  , linear, combination], [linear, combination, features], [combination, features, best], [features, best, separate], [best, separate,   ], [separate,   , classes], [  , classes, object], [classes, object, [], [object, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[Linear Discriminate Analysis, LDA),which, the related Fisher, linear discriminate, famous   methods, statistics, machine learning, the   linear combination, features, two or more   classes, object]

>> Named Entities are: 
[('Linear Discriminate Analysis', 'ORG'), ('LDA),which', 'PERSON'), ('1936', 'DATE'), ('Fisher', 'ORG'), ('two', 'CARDINAL')]


============================ Sentence 182 =============================

The purpose of discriminate analysis is to   classify objects (nations, people, customers…) into one of two or   more groups based on set of features that describe the objects (e.g.--.-   gender, marital status, income, height, weight...). 


>> Tokens are: 
[purpose, discriminate, analysis,   , classify, objects, (, nations, ,, people, ,, customers, …, ),   , groups, based, set, features, describe, objects, (, e.g.--.-,   , gender, ,, marital, status, ,, income, ,, height, ,, weight, ..., ), .] 

>> PoS Tags are: 
[('purpose', 'NOUN'), ('discriminate', 'ADJ'), ('analysis', 'NOUN'), ('  ', 'SPACE'), ('classify', 'NOUN'), ('objects', 'NOUN'), ('(', 'PUNCT'), ('nations', 'NOUN'), (',', 'PUNCT'), ('people', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), ('…', 'PUNCT'), (')', 'PUNCT'), ('  ', 'SPACE'), ('groups', 'NOUN'), ('based', 'VERB'), ('set', 'NOUN'), ('features', 'NOUN'), ('describe', 'VERB'), ('objects', 'NOUN'), ('(', 'PUNCT'), ('e.g.--.-', 'X'), ('  ', 'SPACE'), ('gender', 'NOUN'), (',', 'PUNCT'), ('marital', 'ADJ'), ('status', 'NOUN'), (',', 'PUNCT'), ('income', 'NOUN'), (',', 'PUNCT'), ('height', 'NOUN'), (',', 'PUNCT'), ('weight', 'NOUN'), ('...', 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('purpose', 'nsubj'), ('discriminate', 'amod'), ('analysis', 'pobj'), ('  ', 'nummod'), ('classify', 'compound'), ('objects', 'pobj'), ('(', 'punct'), ('nations', 'appos'), (',', 'punct'), ('people', 'conj'), (',', 'punct'), ('customers', 'conj'), ('…', 'punct'), (')', 'punct'), ('  ', 'conj'), ('groups', 'pobj'), ('based', 'acl'), ('set', 'pobj'), ('features', 'pobj'), ('describe', 'relcl'), ('objects', 'dobj'), ('(', 'punct'), ('e.g.--.-', 'poss'), ('  ', 'compound'), ('gender', 'appos'), (',', 'punct'), ('marital', 'amod'), ('status', 'conj'), (',', 'punct'), ('income', 'conj'), (',', 'punct'), ('height', 'nmod'), (',', 'punct'), ('weight', 'conj'), ('...', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[purpose, discriminate], [discriminate, analysis], [analysis,   ], [  , classify], [classify, objects], [objects, (], [(, nations], [nations, ,], [,, people], [people, ,], [,, customers], [customers, …], […, )], [),   ], [  , groups], [groups, based], [based, set], [set, features], [features, describe], [describe, objects], [objects, (], [(, e.g.--.-], [e.g.--.-,   ], [  , gender], [gender, ,], [,, marital], [marital, status], [status, ,], [,, income], [income, ,], [,, height], [height, ,], [,, weight], [weight, ...], [..., )], [), .]]

>> Trigrams: 
[[purpose, discriminate, analysis], [discriminate, analysis,   ], [analysis,   , classify], [  , classify, objects], [classify, objects, (], [objects, (, nations], [(, nations, ,], [nations, ,, people], [,, people, ,], [people, ,, customers], [,, customers, …], [customers, …, )], […, ),   ], [),   , groups], [  , groups, based], [groups, based, set], [based, set, features], [set, features, describe], [features, describe, objects], [describe, objects, (], [objects, (, e.g.--.-], [(, e.g.--.-,   ], [e.g.--.-,   , gender], [  , gender, ,], [gender, ,, marital], [,, marital, status], [marital, status, ,], [status, ,, income], [,, income, ,], [income, ,, height], [,, height, ,], [height, ,, weight], [,, weight, ...], [weight, ..., )], [..., ), .]]

>> Noun Phrases are: 
[The purpose, discriminate analysis,   classify objects, nations, people, customers, two or   more groups, set, features, the objects, e.g.--.-   gender, marital status, income, height, weight]

>> Named Entities are: 
[('one', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 183 =============================

The another   method for estimating probability distributions from data is   maximum entropy. 


>> Tokens are: 
[  , method, estimating, probability, distributions, data,   , maximum, entropy, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('method', 'NOUN'), ('estimating', 'VERB'), ('probability', 'NOUN'), ('distributions', 'NOUN'), ('data', 'NOUN'), ('  ', 'SPACE'), ('maximum', 'ADJ'), ('entropy', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('method', 'nsubj'), ('estimating', 'pcomp'), ('probability', 'compound'), ('distributions', 'dobj'), ('data', 'pobj'), ('  ', 'nmod'), ('maximum', 'amod'), ('entropy', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[  , method], [method, estimating], [estimating, probability], [probability, distributions], [distributions, data], [data,   ], [  , maximum], [maximum, entropy], [entropy, .]]

>> Trigrams: 
[[  , method, estimating], [method, estimating, probability], [estimating, probability, distributions], [probability, distributions, data], [distributions, data,   ], [data,   , maximum], [  , maximum, entropy], [maximum, entropy, .]]

>> Noun Phrases are: 
[The another   method, probability distributions, data,   maximum entropy]

>> Named Entities are: 
[]


============================ Sentence 184 =============================

According to the base theory of maximum   entropy, if nothing is known about a distribution except that it   belongs to a certain class, then the distribution with the largest   entropy should be chosen as the default. 


>> Tokens are: 
[According, base, theory, maximum,   , entropy, ,, known, distribution,   , belongs, certain, class, ,, distribution, largest,   , entropy, chosen, default, .] 

>> PoS Tags are: 
[('According', 'VERB'), ('base', 'NOUN'), ('theory', 'NOUN'), ('maximum', 'ADJ'), ('  ', 'SPACE'), ('entropy', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), ('distribution', 'NOUN'), ('  ', 'SPACE'), ('belongs', 'VERB'), ('certain', 'ADJ'), ('class', 'NOUN'), (',', 'PUNCT'), ('distribution', 'NOUN'), ('largest', 'ADJ'), ('  ', 'SPACE'), ('entropy', 'NOUN'), ('chosen', 'VERB'), ('default', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('According', 'prep'), ('base', 'compound'), ('theory', 'pobj'), ('maximum', 'amod'), ('  ', 'compound'), ('entropy', 'pobj'), (',', 'punct'), ('known', 'advcl'), ('distribution', 'pobj'), ('  ', 'appos'), ('belongs', 'pcomp'), ('certain', 'amod'), ('class', 'pobj'), (',', 'punct'), ('distribution', 'nsubjpass'), ('largest', 'amod'), ('  ', 'compound'), ('entropy', 'pobj'), ('chosen', 'ROOT'), ('default', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[According, base], [base, theory], [theory, maximum], [maximum,   ], [  , entropy], [entropy, ,], [,, known], [known, distribution], [distribution,   ], [  , belongs], [belongs, certain], [certain, class], [class, ,], [,, distribution], [distribution, largest], [largest,   ], [  , entropy], [entropy, chosen], [chosen, default], [default, .]]

>> Trigrams: 
[[According, base, theory], [base, theory, maximum], [theory, maximum,   ], [maximum,   , entropy], [  , entropy, ,], [entropy, ,, known], [,, known, distribution], [known, distribution,   ], [distribution,   , belongs], [  , belongs, certain], [belongs, certain, class], [certain, class, ,], [class, ,, distribution], [,, distribution, largest], [distribution, largest,   ], [largest,   , entropy], [  , entropy, chosen], [entropy, chosen, default], [chosen, default, .]]

>> Noun Phrases are: 
[the base theory, maximum   entropy, nothing, a distribution, it, a certain class, the distribution, the largest   entropy, the default]

>> Named Entities are: 
[]


============================ Sentence 185 =============================

  4.1 NAIVE BAYES CLASSIFIERS   Bayesian networks are widely used to perform classification   tasks. 


>> Tokens are: 
[  , 4.1, NAIVE, BAYES, CLASSIFIERS,   , Bayesian, networks, widely, perform, classification,   , tasks, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('4.1', 'NUM'), ('NAIVE', 'PROPN'), ('BAYES', 'NOUN'), ('CLASSIFIERS', 'NOUN'), ('  ', 'SPACE'), ('Bayesian', 'ADJ'), ('networks', 'NOUN'), ('widely', 'ADV'), ('perform', 'VERB'), ('classification', 'NOUN'), ('  ', 'SPACE'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('4.1', 'nummod'), ('NAIVE', 'compound'), ('BAYES', 'compound'), ('CLASSIFIERS', 'nsubjpass'), ('  ', 'nmod'), ('Bayesian', 'compound'), ('networks', 'nsubjpass'), ('widely', 'advmod'), ('perform', 'xcomp'), ('classification', 'compound'), ('  ', 'nummod'), ('tasks', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[  , 4.1], [4.1, NAIVE], [NAIVE, BAYES], [BAYES, CLASSIFIERS], [CLASSIFIERS,   ], [  , Bayesian], [Bayesian, networks], [networks, widely], [widely, perform], [perform, classification], [classification,   ], [  , tasks], [tasks, .]]

>> Trigrams: 
[[  , 4.1, NAIVE], [4.1, NAIVE, BAYES], [NAIVE, BAYES, CLASSIFIERS], [BAYES, CLASSIFIERS,   ], [CLASSIFIERS,   , Bayesian], [  , Bayesian, networks], [Bayesian, networks, widely], [networks, widely, perform], [widely, perform, classification], [perform, classification,   ], [classification,   , tasks], [  , tasks, .]]

>> Noun Phrases are: 
[  4.1 NAIVE BAYES CLASSIFIERS,   Bayesian networks, classification   tasks]

>> Named Entities are: 
[('4.1', 'CARDINAL'), ('Bayesian', 'NORP')]


============================ Sentence 186 =============================

Naive Bayesian Networks (NBN) are very simple   Bayesian networks which are composed of directed acyclic   graphs with only one parent (representing the unobserved node)   and several children (corresponding to observed nodes) with a   strong assumption of independence among child nodes in the   context of their parent [21]. 


>> Tokens are: 
[Naive, Bayesian, Networks, (, NBN, ), simple,   , Bayesian, networks, composed, directed, acyclic,   , graphs, parent, (, representing, unobserved, node, ),   , children, (, corresponding, observed, nodes, ),   , strong, assumption, independence, child, nodes,   , context, parent, [, 21, ], .] 

>> PoS Tags are: 
[('Naive', 'PROPN'), ('Bayesian', 'PROPN'), ('Networks', 'PROPN'), ('(', 'PUNCT'), ('NBN', 'PROPN'), (')', 'PUNCT'), ('simple', 'ADJ'), ('  ', 'SPACE'), ('Bayesian', 'PROPN'), ('networks', 'NOUN'), ('composed', 'VERB'), ('directed', 'VERB'), ('acyclic', 'NOUN'), ('  ', 'SPACE'), ('graphs', 'NOUN'), ('parent', 'NOUN'), ('(', 'PUNCT'), ('representing', 'VERB'), ('unobserved', 'ADJ'), ('node', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('children', 'NOUN'), ('(', 'PUNCT'), ('corresponding', 'VERB'), ('observed', 'VERB'), ('nodes', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('strong', 'ADJ'), ('assumption', 'NOUN'), ('independence', 'NOUN'), ('child', 'NOUN'), ('nodes', 'NOUN'), ('  ', 'SPACE'), ('context', 'NOUN'), ('parent', 'NOUN'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Naive', 'compound'), ('Bayesian', 'compound'), ('Networks', 'nsubj'), ('(', 'punct'), ('NBN', 'appos'), (')', 'punct'), ('simple', 'amod'), ('  ', 'nummod'), ('Bayesian', 'compound'), ('networks', 'attr'), ('composed', 'relcl'), ('directed', 'amod'), ('acyclic', 'amod'), ('  ', 'compound'), ('graphs', 'pobj'), ('parent', 'pobj'), ('(', 'punct'), ('representing', 'acl'), ('unobserved', 'amod'), ('node', 'dobj'), (')', 'punct'), ('  ', 'appos'), ('children', 'conj'), ('(', 'punct'), ('corresponding', 'advcl'), ('observed', 'amod'), ('nodes', 'pobj'), (')', 'punct'), ('  ', 'nummod'), ('strong', 'amod'), ('assumption', 'pobj'), ('independence', 'pobj'), ('child', 'compound'), ('nodes', 'pobj'), ('  ', 'nummod'), ('context', 'pobj'), ('parent', 'pobj'), ('[', 'punct'), ('21', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Naive, Bayesian], [Bayesian, Networks], [Networks, (], [(, NBN], [NBN, )], [), simple], [simple,   ], [  , Bayesian], [Bayesian, networks], [networks, composed], [composed, directed], [directed, acyclic], [acyclic,   ], [  , graphs], [graphs, parent], [parent, (], [(, representing], [representing, unobserved], [unobserved, node], [node, )], [),   ], [  , children], [children, (], [(, corresponding], [corresponding, observed], [observed, nodes], [nodes, )], [),   ], [  , strong], [strong, assumption], [assumption, independence], [independence, child], [child, nodes], [nodes,   ], [  , context], [context, parent], [parent, [], [[, 21], [21, ]], [], .]]

>> Trigrams: 
[[Naive, Bayesian, Networks], [Bayesian, Networks, (], [Networks, (, NBN], [(, NBN, )], [NBN, ), simple], [), simple,   ], [simple,   , Bayesian], [  , Bayesian, networks], [Bayesian, networks, composed], [networks, composed, directed], [composed, directed, acyclic], [directed, acyclic,   ], [acyclic,   , graphs], [  , graphs, parent], [graphs, parent, (], [parent, (, representing], [(, representing, unobserved], [representing, unobserved, node], [unobserved, node, )], [node, ),   ], [),   , children], [  , children, (], [children, (, corresponding], [(, corresponding, observed], [corresponding, observed, nodes], [observed, nodes, )], [nodes, ),   ], [),   , strong], [  , strong, assumption], [strong, assumption, independence], [assumption, independence, child], [independence, child, nodes], [child, nodes,   ], [nodes,   , context], [  , context, parent], [context, parent, [], [parent, [, 21], [[, 21, ]], [21, ], .]]

>> Noun Phrases are: 
[Naive Bayesian Networks, NBN, very simple   Bayesian networks, directed acyclic   graphs, only one parent, the unobserved node, several children, observed nodes, a   strong assumption, independence, child nodes, the   context, their parent]

>> Named Entities are: 
[('Naive Bayesian Networks', 'ORG'), ('NBN', 'ORG'), ('Bayesian', 'NORP'), ('only one', 'CARDINAL'), ('21', 'CARDINAL')]


============================ Sentence 187 =============================

According to author [20] the   independence model (Naive Bayes) is based on estimating: 


>> Tokens are: 
[According, author, [, 20, ],   , independence, model, (, Naive, Bayes, ), based, estimating, :] 

>> PoS Tags are: 
[('According', 'VERB'), ('author', 'NOUN'), ('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('independence', 'NOUN'), ('model', 'NOUN'), ('(', 'PUNCT'), ('Naive', 'PROPN'), ('Bayes', 'PROPN'), (')', 'PUNCT'), ('based', 'VERB'), ('estimating', 'VERB'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('According', 'prep'), ('author', 'pobj'), ('[', 'punct'), ('20', 'nummod'), (']', 'punct'), ('  ', 'nummod'), ('independence', 'compound'), ('model', 'nsubjpass'), ('(', 'punct'), ('Naive', 'compound'), ('Bayes', 'appos'), (')', 'punct'), ('based', 'ROOT'), ('estimating', 'pcomp'), (':', 'punct')]

>> Bigrams: 
[[According, author], [author, [], [[, 20], [20, ]], [],   ], [  , independence], [independence, model], [model, (], [(, Naive], [Naive, Bayes], [Bayes, )], [), based], [based, estimating], [estimating, :]]

>> Trigrams: 
[[According, author, [], [author, [, 20], [[, 20, ]], [20, ],   ], [],   , independence], [  , independence, model], [independence, model, (], [model, (, Naive], [(, Naive, Bayes], [Naive, Bayes, )], [Bayes, ), based], [), based, estimating], [based, estimating, :]]

>> Noun Phrases are: 
[author, (Naive Bayes]

>> Named Entities are: 
[('20', 'CARDINAL'), ('Bayes', 'ORG')]


============================ Sentence 188 =============================

                         JXPjP  XPPiP  JXPjP  XPiP  XJP   


>> Tokens are: 
[    , , , , ,  , , , , , , , , ,  , , , , , , , , JXPjP,  , XPPiP,  , JXPjP,  , XPiP,  , XJP,  ] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), (' ', 'SPACE'), ('\uf028', 'ADJ'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'ADJ'), ('\uf029', 'PROPN'), (' ', 'SPACE'), ('\uf028', 'ADJ'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'DET'), ('\uf029JXPjP', 'NOUN'), (' ', 'SPACE'), ('XPPiP', 'PROPN'), (' ', 'SPACE'), ('JXPjP', 'ADP'), (' ', 'SPACE'), ('XPiP', 'PROPN'), (' ', 'SPACE'), ('XJP', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('\uf028', 'advmod'), ('\uf029', 'compound'), (' ', 'nmod'), ('\uf028', 'amod'), ('\uf029', 'appos'), ('\uf028', 'appos'), ('\uf029', 'compound'), ('\uf028', 'conj'), ('\uf029', 'compound'), ('\uf028', 'conj'), ('\uf029', 'compound'), (' ', 'appos'), ('\uf028', 'amod'), ('\uf029', 'appos'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('\uf028', 'nmod'), ('\uf029', 'ROOT'), ('\uf028', 'det'), ('\uf029JXPjP', 'appos'), (' ', 'appos'), ('XPPiP', 'prep'), (' ', 'pobj'), ('JXPjP', 'prep'), (' ', 'pobj'), ('XPiP', 'compound'), (' ', 'compound'), ('XJP', 'compound'), (' ', 'appos')]

>> Bigrams: 
[[    , ], [, ], [, ], [, ], [,  ], [ , ], [, ], [, ], [, ], [, ], [, ], [, ], [, ], [,  ], [ , ], [, ], [, ], [, ], [, ], [, ], [, ], [, JXPjP], [JXPjP,  ], [ , XPPiP], [XPPiP,  ], [ , JXPjP], [JXPjP,  ], [ , XPiP], [XPiP,  ], [ , XJP], [XJP,  ]]

>> Trigrams: 
[[    , , ], [, , ], [, , ], [, ,  ], [,  , ], [ , , ], [, , ], [, , ], [, , ], [, , ], [, , ], [, , ], [, ,  ], [,  , ], [ , , ], [, , ], [, , ], [, , ], [, , ], [, , ], [, , JXPjP], [, JXPjP,  ], [JXPjP,  , XPPiP], [ , XPPiP,  ], [XPPiP,  , JXPjP], [ , JXPjP,  ], [JXPjP,  , XPiP], [ , XPiP,  ], [XPiP,  , XJP], [ , XJP,  ]]

>> Noun Phrases are: 
[ , ,  ,  JXPjP]

>> Named Entities are: 
[('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('XPPiP', 'PERSON'), ('XPiP', 'GPE'), ('XJP', 'ORG')]


============================ Sentence 189 =============================

XP R  r  r |  |  |  |  |  |         (3)    


>> Tokens are: 
[XP, R,  , r,  , r, |,  , |,  , |,  , |,  , |,  , |,  , ,  , , ,  , ,  , (, 3, ),   ] 

>> PoS Tags are: 
[('XP', 'PROPN'), ('R', 'PROPN'), (' ', 'SPACE'), ('r', 'AUX'), (' ', 'SPACE'), ('r', 'NOUN'), ('|', 'NOUN'), (' ', 'SPACE'), ('|', 'NOUN'), (' ', 'SPACE'), ('|', 'NOUN'), (' ', 'SPACE'), ('|', 'NOUN'), (' ', 'SPACE'), ('|', 'NOUN'), (' ', 'SPACE'), ('|', 'NOUN'), (' ', 'SPACE'), ('\uf050', 'PROPN'), (' ', 'SPACE'), ('\uf050', 'PROPN'), ('\uf03d\uf03d\uf03d', 'X'), (' ', 'SPACE'), ('\uf069\uf069\uf069', 'ADJ'), (' ', 'SPACE'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('XP', 'compound'), ('R', 'compound'), (' ', 'dep'), ('r', 'punct'), (' ', 'pobj'), ('r', 'advmod'), ('|', 'npadvmod'), (' ', 'appos'), ('|', 'npadvmod'), (' ', 'punct'), ('|', 'npadvmod'), (' ', 'punct'), ('|', 'npadvmod'), (' ', 'punct'), ('|', 'npadvmod'), (' ', 'punct'), ('|', 'npadvmod'), (' ', 'nsubj'), ('\uf050', 'punct'), (' ', 'nmod'), ('\uf050', 'dep'), ('\uf03d\uf03d\uf03d', 'nmod'), (' ', 'nmod'), ('\uf069\uf069\uf069', 'amod'), (' ', 'dobj'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), ('  ', 'ROOT')]

>> Bigrams: 
[[XP, R], [R,  ], [ , r], [r,  ], [ , r], [r, |], [|,  ], [ , |], [|,  ], [ , |], [|,  ], [ , |], [|,  ], [ , |], [|,  ], [ , |], [|,  ], [ , ], [,  ], [ , ], [, ], [,  ], [ , ], [,  ], [ , (], [(, 3], [3, )], [),   ]]

>> Trigrams: 
[[XP, R,  ], [R,  , r], [ , r,  ], [r,  , r], [ , r, |], [r, |,  ], [|,  , |], [ , |,  ], [|,  , |], [ , |,  ], [|,  , |], [ , |,  ], [|,  , |], [ , |,  ], [|,  , |], [ , |,  ], [|,  , ], [ , ,  ], [,  , ], [ , , ], [, ,  ], [,  , ], [ , ,  ], [,  , (], [ , (, 3], [(, 3, )], [3, ),   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 190 =============================

Here comparing these two probabilities, the larger   probability indicates that the class label value that is more likely   to be the actual label (if R>1: predict i else predict j) 


>> Tokens are: 
[comparing, probabilities, ,, larger,   , probability, indicates, class, label, value, likely,   , actual, label, (, R>1, :, predict, predict, j, )] 

>> PoS Tags are: 
[('comparing', 'VERB'), ('probabilities', 'NOUN'), (',', 'PUNCT'), ('larger', 'ADJ'), ('  ', 'SPACE'), ('probability', 'NOUN'), ('indicates', 'VERB'), ('class', 'NOUN'), ('label', 'NOUN'), ('value', 'NOUN'), ('likely', 'ADJ'), ('  ', 'SPACE'), ('actual', 'ADJ'), ('label', 'NOUN'), ('(', 'PUNCT'), ('R>1', 'NOUN'), (':', 'PUNCT'), ('predict', 'VERB'), ('predict', 'VERB'), ('j', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('comparing', 'pcomp'), ('probabilities', 'dobj'), (',', 'punct'), ('larger', 'amod'), ('  ', 'nummod'), ('probability', 'nsubj'), ('indicates', 'ROOT'), ('class', 'compound'), ('label', 'compound'), ('value', 'meta'), ('likely', 'amod'), ('  ', 'attr'), ('actual', 'amod'), ('label', 'attr'), ('(', 'punct'), ('R>1', 'nsubj'), (':', 'punct'), ('predict', 'advcl'), ('predict', 'parataxis'), ('j', 'dobj'), (')', 'punct')]

>> Bigrams: 
[[comparing, probabilities], [probabilities, ,], [,, larger], [larger,   ], [  , probability], [probability, indicates], [indicates, class], [class, label], [label, value], [value, likely], [likely,   ], [  , actual], [actual, label], [label, (], [(, R>1], [R>1, :], [:, predict], [predict, predict], [predict, j], [j, )]]

>> Trigrams: 
[[comparing, probabilities, ,], [probabilities, ,, larger], [,, larger,   ], [larger,   , probability], [  , probability, indicates], [probability, indicates, class], [indicates, class, label], [class, label, value], [label, value, likely], [value, likely,   ], [likely,   , actual], [  , actual, label], [actual, label, (], [label, (, R>1], [(, R>1, :], [R>1, :, predict], [:, predict, predict], [predict, predict, j], [predict, j, )]]

>> Noun Phrases are: 
[these two probabilities, the larger   probability, the actual label, R>1, i, j]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 191 =============================

[1]. 


>> Tokens are: 
[[, 1, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('1', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 1], [1, ]], [], .]]

>> Trigrams: 
[[[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 192 =============================

As   shown in the below figure, the links in a Naive Bayes model are   directed from output to input, which gives the model its   simplicity, as there are no interactions between the inputs, except   indirectly via the output. 


>> Tokens are: 
[  , shown, figure, ,, links, Naive, Bayes, model,   , directed, output, input, ,, gives, model,   , simplicity, ,, interactions, inputs, ,,   , indirectly, output, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('shown', 'VERB'), ('figure', 'NOUN'), (',', 'PUNCT'), ('links', 'NOUN'), ('Naive', 'PROPN'), ('Bayes', 'PROPN'), ('model', 'NOUN'), ('  ', 'SPACE'), ('directed', 'VERB'), ('output', 'NOUN'), ('input', 'NOUN'), (',', 'PUNCT'), ('gives', 'VERB'), ('model', 'NOUN'), ('  ', 'SPACE'), ('simplicity', 'NOUN'), (',', 'PUNCT'), ('interactions', 'NOUN'), ('inputs', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('indirectly', 'ADV'), ('output', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('shown', 'advcl'), ('figure', 'pobj'), (',', 'punct'), ('links', 'nsubjpass'), ('Naive', 'compound'), ('Bayes', 'compound'), ('model', 'pobj'), ('  ', 'nsubjpass'), ('directed', 'ROOT'), ('output', 'pobj'), ('input', 'pobj'), (',', 'punct'), ('gives', 'advcl'), ('model', 'dative'), ('  ', 'compound'), ('simplicity', 'dobj'), (',', 'punct'), ('interactions', 'attr'), ('inputs', 'pobj'), (',', 'punct'), ('  ', 'pobj'), ('indirectly', 'advmod'), ('output', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , shown], [shown, figure], [figure, ,], [,, links], [links, Naive], [Naive, Bayes], [Bayes, model], [model,   ], [  , directed], [directed, output], [output, input], [input, ,], [,, gives], [gives, model], [model,   ], [  , simplicity], [simplicity, ,], [,, interactions], [interactions, inputs], [inputs, ,], [,,   ], [  , indirectly], [indirectly, output], [output, .]]

>> Trigrams: 
[[  , shown, figure], [shown, figure, ,], [figure, ,, links], [,, links, Naive], [links, Naive, Bayes], [Naive, Bayes, model], [Bayes, model,   ], [model,   , directed], [  , directed, output], [directed, output, input], [output, input, ,], [input, ,, gives], [,, gives, model], [gives, model,   ], [model,   , simplicity], [  , simplicity, ,], [simplicity, ,, interactions], [,, interactions, inputs], [interactions, inputs, ,], [inputs, ,,   ], [,,   , indirectly], [  , indirectly, output], [indirectly, output, .]]

>> Noun Phrases are: 
[the below figure, the links, a Naive Bayes model, output, input, the model, its   simplicity, no interactions, the inputs, the output]

>> Named Entities are: 
[('Bayes', 'ORG')]


============================ Sentence 193 =============================

     Fig.6. 


>> Tokens are: 
[     , Fig.6, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.6', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('Fig.6', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.6], [Fig.6, .]]

>> Trigrams: 
[[     , Fig.6, .]]

>> Noun Phrases are: 
[     Fig.6]

>> Named Entities are: 
[]


============================ Sentence 194 =============================

Naive Bayes model   An advantage of the Naive Bayes classifier is that it requires   a small amount of training data to estimate the parameters   necessary for classification. 


>> Tokens are: 
[Naive, Bayes, model,   , advantage, Naive, Bayes, classifier, requires,   , small, training, data, estimate, parameters,   , necessary, classification, .] 

>> PoS Tags are: 
[('Naive', 'PROPN'), ('Bayes', 'PROPN'), ('model', 'NOUN'), ('  ', 'SPACE'), ('advantage', 'NOUN'), ('Naive', 'PROPN'), ('Bayes', 'PROPN'), ('classifier', 'NOUN'), ('requires', 'VERB'), ('  ', 'SPACE'), ('small', 'ADJ'), ('training', 'NOUN'), ('data', 'NOUN'), ('estimate', 'VERB'), ('parameters', 'NOUN'), ('  ', 'SPACE'), ('necessary', 'ADJ'), ('classification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Naive', 'compound'), ('Bayes', 'compound'), ('model', 'nsubj'), ('  ', 'nsubj'), ('advantage', 'dobj'), ('Naive', 'compound'), ('Bayes', 'compound'), ('classifier', 'pobj'), ('requires', 'ccomp'), ('  ', 'dative'), ('small', 'amod'), ('training', 'compound'), ('data', 'pobj'), ('estimate', 'xcomp'), ('parameters', 'dobj'), ('  ', 'appos'), ('necessary', 'ccomp'), ('classification', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Naive, Bayes], [Bayes, model], [model,   ], [  , advantage], [advantage, Naive], [Naive, Bayes], [Bayes, classifier], [classifier, requires], [requires,   ], [  , small], [small, training], [training, data], [data, estimate], [estimate, parameters], [parameters,   ], [  , necessary], [necessary, classification], [classification, .]]

>> Trigrams: 
[[Naive, Bayes, model], [Bayes, model,   ], [model,   , advantage], [  , advantage, Naive], [advantage, Naive, Bayes], [Naive, Bayes, classifier], [Bayes, classifier, requires], [classifier, requires,   ], [requires,   , small], [  , small, training], [small, training, data], [training, data, estimate], [data, estimate, parameters], [estimate, parameters,   ], [parameters,   , necessary], [  , necessary, classification], [necessary, classification, .]]

>> Noun Phrases are: 
[Naive Bayes model, An advantage, the Naive Bayes classifier, it, a small amount, training data, the parameters, classification]

>> Named Entities are: 
[('Bayes', 'ORG'), ('Bayes', 'ORG')]


============================ Sentence 195 =============================

  4.2 BAYESIAN NETWORKS   Bayesian Networks (BN) are graphical models that are used   to illustrate relationships between events or ideas to infer   probabilities or uncertainties associated with those ideas or   events. 


>> Tokens are: 
[  , 4.2, BAYESIAN, NETWORKS,   , Bayesian, Networks, (, BN, ), graphical, models,   , illustrate, relationships, events, ideas, infer,   , probabilities, uncertainties, associated, ideas,   , events, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('4.2', 'NUM'), ('BAYESIAN', 'PROPN'), ('NETWORKS', 'PROPN'), ('  ', 'SPACE'), ('Bayesian', 'PROPN'), ('Networks', 'PROPN'), ('(', 'PUNCT'), ('BN', 'PROPN'), (')', 'PUNCT'), ('graphical', 'ADJ'), ('models', 'NOUN'), ('  ', 'SPACE'), ('illustrate', 'VERB'), ('relationships', 'NOUN'), ('events', 'NOUN'), ('ideas', 'NOUN'), ('infer', 'VERB'), ('  ', 'SPACE'), ('probabilities', 'NOUN'), ('uncertainties', 'NOUN'), ('associated', 'VERB'), ('ideas', 'NOUN'), ('  ', 'SPACE'), ('events', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'poss'), ('4.2', 'nummod'), ('BAYESIAN', 'compound'), ('NETWORKS', 'nsubj'), ('  ', 'appos'), ('Bayesian', 'compound'), ('Networks', 'appos'), ('(', 'punct'), ('BN', 'appos'), (')', 'punct'), ('graphical', 'amod'), ('models', 'attr'), ('  ', 'dobj'), ('illustrate', 'xcomp'), ('relationships', 'dobj'), ('events', 'pobj'), ('ideas', 'conj'), ('infer', 'relcl'), ('  ', 'nummod'), ('probabilities', 'dobj'), ('uncertainties', 'conj'), ('associated', 'acl'), ('ideas', 'pobj'), ('  ', 'nummod'), ('events', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , 4.2], [4.2, BAYESIAN], [BAYESIAN, NETWORKS], [NETWORKS,   ], [  , Bayesian], [Bayesian, Networks], [Networks, (], [(, BN], [BN, )], [), graphical], [graphical, models], [models,   ], [  , illustrate], [illustrate, relationships], [relationships, events], [events, ideas], [ideas, infer], [infer,   ], [  , probabilities], [probabilities, uncertainties], [uncertainties, associated], [associated, ideas], [ideas,   ], [  , events], [events, .]]

>> Trigrams: 
[[  , 4.2, BAYESIAN], [4.2, BAYESIAN, NETWORKS], [BAYESIAN, NETWORKS,   ], [NETWORKS,   , Bayesian], [  , Bayesian, Networks], [Bayesian, Networks, (], [Networks, (, BN], [(, BN, )], [BN, ), graphical], [), graphical, models], [graphical, models,   ], [models,   , illustrate], [  , illustrate, relationships], [illustrate, relationships, events], [relationships, events, ideas], [events, ideas, infer], [ideas, infer,   ], [infer,   , probabilities], [  , probabilities, uncertainties], [probabilities, uncertainties, associated], [uncertainties, associated, ideas], [associated, ideas,   ], [ideas,   , events], [  , events, .]]

>> Noun Phrases are: 
[  4.2 BAYESIAN NETWORKS, Bayesian Networks, BN, graphical models, relationships, events, ideas,   probabilities, uncertainties, those ideas,   events]

>> Named Entities are: 
[('4.2', 'CARDINAL'), ('Bayesian Networks', 'ORG')]


============================ Sentence 196 =============================

Information retrieval, predictions based on limited input   or recognition software is some main applications of BN. 


>> Tokens are: 
[Information, retrieval, ,, predictions, based, limited, input,   , recognition, software, main, applications, BN, .] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('retrieval', 'NOUN'), (',', 'PUNCT'), ('predictions', 'NOUN'), ('based', 'VERB'), ('limited', 'ADJ'), ('input', 'NOUN'), ('  ', 'SPACE'), ('recognition', 'NOUN'), ('software', 'NOUN'), ('main', 'ADJ'), ('applications', 'NOUN'), ('BN', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('retrieval', 'nsubj'), (',', 'punct'), ('predictions', 'appos'), ('based', 'acl'), ('limited', 'amod'), ('input', 'nmod'), ('  ', 'nmod'), ('recognition', 'conj'), ('software', 'pobj'), ('main', 'amod'), ('applications', 'attr'), ('BN', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Information, retrieval], [retrieval, ,], [,, predictions], [predictions, based], [based, limited], [limited, input], [input,   ], [  , recognition], [recognition, software], [software, main], [main, applications], [applications, BN], [BN, .]]

>> Trigrams: 
[[Information, retrieval, ,], [retrieval, ,, predictions], [,, predictions, based], [predictions, based, limited], [based, limited, input], [limited, input,   ], [input,   , recognition], [  , recognition, software], [recognition, software, main], [software, main, applications], [main, applications, BN], [applications, BN, .]]

>> Noun Phrases are: 
[Information retrieval, predictions, limited input   or recognition software, some main applications, BN]

>> Named Entities are: 
[]


============================ Sentence 197 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 198 =============================

The Bayesian network structure S is a directed acyclic graph   (DAG) and the nodes in S are in one-to-one correspondence with   the features X. 


>> Tokens are: 
[Bayesian, network, structure, S, directed, acyclic, graph,   , (, DAG, ), nodes, S, -, -, correspondence,   , features, X.] 

>> PoS Tags are: 
[('Bayesian', 'PROPN'), ('network', 'NOUN'), ('structure', 'NOUN'), ('S', 'PROPN'), ('directed', 'VERB'), ('acyclic', 'ADJ'), ('graph', 'NOUN'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('DAG', 'PROPN'), (')', 'PUNCT'), ('nodes', 'NOUN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('correspondence', 'NOUN'), ('  ', 'SPACE'), ('features', 'NOUN'), ('X.', 'PROPN')] 

>> Dependency Tags are: 
[('Bayesian', 'compound'), ('network', 'compound'), ('structure', 'compound'), ('S', 'nsubj'), ('directed', 'amod'), ('acyclic', 'amod'), ('graph', 'attr'), ('  ', 'appos'), ('(', 'punct'), ('DAG', 'appos'), (')', 'punct'), ('nodes', 'conj'), ('S', 'pobj'), ('-', 'punct'), ('-', 'punct'), ('correspondence', 'pobj'), ('  ', 'pobj'), ('features', 'attr'), ('X.', 'punct')]

>> Bigrams: 
[[Bayesian, network], [network, structure], [structure, S], [S, directed], [directed, acyclic], [acyclic, graph], [graph,   ], [  , (], [(, DAG], [DAG, )], [), nodes], [nodes, S], [S, -], [-, -], [-, correspondence], [correspondence,   ], [  , features], [features, X.]]

>> Trigrams: 
[[Bayesian, network, structure], [network, structure, S], [structure, S, directed], [S, directed, acyclic], [directed, acyclic, graph], [acyclic, graph,   ], [graph,   , (], [  , (, DAG], [(, DAG, )], [DAG, ), nodes], [), nodes, S], [nodes, S, -], [S, -, -], [-, -, correspondence], [-, correspondence,   ], [correspondence,   , features], [  , features, X.]]

>> Noun Phrases are: 
[The Bayesian network structure S, a directed acyclic graph, DAG, the nodes, S, one-to-one correspondence, the features]

>> Named Entities are: 
[('Bayesian', 'GPE'), ('DAG', 'ORG')]


============================ Sentence 199 =============================

The arcs represent casual influences among the   features while the lack of possible arcs in S encodes conditional   independencies. 


>> Tokens are: 
[arcs, represent, casual, influences,   , features, lack, possible, arcs, S, encodes, conditional,   , independencies, .] 

>> PoS Tags are: 
[('arcs', 'NOUN'), ('represent', 'VERB'), ('casual', 'ADJ'), ('influences', 'NOUN'), ('  ', 'SPACE'), ('features', 'NOUN'), ('lack', 'NOUN'), ('possible', 'ADJ'), ('arcs', 'NOUN'), ('S', 'PROPN'), ('encodes', 'NOUN'), ('conditional', 'ADJ'), ('  ', 'SPACE'), ('independencies', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('arcs', 'nsubj'), ('represent', 'ROOT'), ('casual', 'amod'), ('influences', 'dobj'), ('  ', 'pobj'), ('features', 'pobj'), ('lack', 'advcl'), ('possible', 'amod'), ('arcs', 'pobj'), ('S', 'compound'), ('encodes', 'pobj'), ('conditional', 'amod'), ('  ', 'nummod'), ('independencies', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[arcs, represent], [represent, casual], [casual, influences], [influences,   ], [  , features], [features, lack], [lack, possible], [possible, arcs], [arcs, S], [S, encodes], [encodes, conditional], [conditional,   ], [  , independencies], [independencies, .]]

>> Trigrams: 
[[arcs, represent, casual], [represent, casual, influences], [casual, influences,   ], [influences,   , features], [  , features, lack], [features, lack, possible], [lack, possible, arcs], [possible, arcs, S], [arcs, S, encodes], [S, encodes, conditional], [encodes, conditional,   ], [conditional,   , independencies], [  , independencies, .]]

>> Noun Phrases are: 
[The arcs, casual influences, features, possible arcs, S encodes, conditional   independencies]

>> Named Entities are: 
[]


============================ Sentence 200 =============================

Moreover, a feature (node) is conditionally   independent from its non-descendants given its parents (X1 is   conditionally independent from X2). 


>> Tokens are: 
[,, feature, (, node, ), conditionally,   , independent, non, -, descendants, given, parents, (, X1,   , conditionally, independent, X2, ), .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('feature', 'NOUN'), ('(', 'PUNCT'), ('node', 'NOUN'), (')', 'PUNCT'), ('conditionally', 'ADV'), ('  ', 'SPACE'), ('independent', 'ADJ'), ('non', 'ADJ'), ('-', 'NOUN'), ('descendants', 'NOUN'), ('given', 'VERB'), ('parents', 'NOUN'), ('(', 'PUNCT'), ('X1', 'PROPN'), ('  ', 'SPACE'), ('conditionally', 'ADV'), ('independent', 'ADJ'), ('X2', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('feature', 'nsubj'), ('(', 'punct'), ('node', 'appos'), (')', 'punct'), ('conditionally', 'advmod'), ('  ', 'attr'), ('independent', 'amod'), ('non', 'pobj'), ('-', 'pobj'), ('descendants', 'pobj'), ('given', 'acl'), ('parents', 'pobj'), ('(', 'punct'), ('X1', 'nsubj'), ('  ', 'attr'), ('conditionally', 'advmod'), ('independent', 'amod'), ('X2', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[,, feature], [feature, (], [(, node], [node, )], [), conditionally], [conditionally,   ], [  , independent], [independent, non], [non, -], [-, descendants], [descendants, given], [given, parents], [parents, (], [(, X1], [X1,   ], [  , conditionally], [conditionally, independent], [independent, X2], [X2, )], [), .]]

>> Trigrams: 
[[,, feature, (], [feature, (, node], [(, node, )], [node, ), conditionally], [), conditionally,   ], [conditionally,   , independent], [  , independent, non], [independent, non, -], [non, -, descendants], [-, descendants, given], [descendants, given, parents], [given, parents, (], [parents, (, X1], [(, X1,   ], [X1,   , conditionally], [  , conditionally, independent], [conditionally, independent, X2], [independent, X2, )], [X2, ), .]]

>> Noun Phrases are: 
[a feature, (node, -, descendants, its parents, X1, X2]

>> Named Entities are: 
[]


============================ Sentence 201 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 202 =============================

The below example shows that there are two events which   could cause grass to be wet i.e.-- either the sprinkler is on or it’s   raining. 


>> Tokens are: 
[example, shows, events,   , cause, grass, wet, i.e.--, sprinkler,   , raining, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('shows', 'VERB'), ('events', 'NOUN'), ('  ', 'SPACE'), ('cause', 'VERB'), ('grass', 'NOUN'), ('wet', 'ADJ'), ('i.e.--', 'PUNCT'), ('sprinkler', 'NOUN'), ('  ', 'SPACE'), ('raining', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'nsubj'), ('shows', 'ROOT'), ('events', 'attr'), ('  ', 'nsubj'), ('cause', 'relcl'), ('grass', 'nsubj'), ('wet', 'acomp'), ('i.e.--', 'punct'), ('sprinkler', 'nsubj'), ('  ', 'nsubj'), ('raining', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[example, shows], [shows, events], [events,   ], [  , cause], [cause, grass], [grass, wet], [wet, i.e.--], [i.e.--, sprinkler], [sprinkler,   ], [  , raining], [raining, .]]

>> Trigrams: 
[[example, shows, events], [shows, events,   ], [events,   , cause], [  , cause, grass], [cause, grass, wet], [grass, wet, i.e.--], [wet, i.e.--, sprinkler], [i.e.--, sprinkler,   ], [sprinkler,   , raining], [  , raining, .]]

>> Noun Phrases are: 
[The below example, two events, grass, the sprinkler, it]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 203 =============================

Additionally here we also, suppose that the rain has a   direct effect on the use of the sprinkler (namely that when it   rains, the sprinkler is usually not turned on). 


>> Tokens are: 
[Additionally, ,, suppose, rain,   , direct, effect, use, sprinkler, (,   , rains, ,, sprinkler, usually, turned, ), .] 

>> PoS Tags are: 
[('Additionally', 'ADV'), (',', 'PUNCT'), ('suppose', 'VERB'), ('rain', 'NOUN'), ('  ', 'SPACE'), ('direct', 'ADJ'), ('effect', 'NOUN'), ('use', 'NOUN'), ('sprinkler', 'NOUN'), ('(', 'PUNCT'), ('  ', 'SPACE'), ('rains', 'VERB'), (',', 'PUNCT'), ('sprinkler', 'NOUN'), ('usually', 'ADV'), ('turned', 'VERB'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Additionally', 'advmod'), (',', 'punct'), ('suppose', 'ROOT'), ('rain', 'nsubj'), ('  ', 'nmod'), ('direct', 'amod'), ('effect', 'dobj'), ('use', 'pobj'), ('sprinkler', 'pobj'), ('(', 'punct'), ('  ', 'appos'), ('rains', 'advcl'), (',', 'punct'), ('sprinkler', 'nsubjpass'), ('usually', 'advmod'), ('turned', 'ccomp'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Additionally, ,], [,, suppose], [suppose, rain], [rain,   ], [  , direct], [direct, effect], [effect, use], [use, sprinkler], [sprinkler, (], [(,   ], [  , rains], [rains, ,], [,, sprinkler], [sprinkler, usually], [usually, turned], [turned, )], [), .]]

>> Trigrams: 
[[Additionally, ,, suppose], [,, suppose, rain], [suppose, rain,   ], [rain,   , direct], [  , direct, effect], [direct, effect, use], [effect, use, sprinkler], [use, sprinkler, (], [sprinkler, (,   ], [(,   , rains], [  , rains, ,], [rains, ,, sprinkler], [,, sprinkler, usually], [sprinkler, usually, turned], [usually, turned, )], [turned, ), .]]

>> Noun Phrases are: 
[we, the rain, a   direct effect, the use, the sprinkler, it, the sprinkler]

>> Named Entities are: 
[]


============================ Sentence 204 =============================

Then the situation   can be modeled with a Bayesian network. 


>> Tokens are: 
[situation,   , modeled, Bayesian, network, .] 

>> PoS Tags are: 
[('situation', 'NOUN'), ('  ', 'SPACE'), ('modeled', 'VERB'), ('Bayesian', 'PROPN'), ('network', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('situation', 'nsubjpass'), ('  ', 'appos'), ('modeled', 'ROOT'), ('Bayesian', 'compound'), ('network', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[situation,   ], [  , modeled], [modeled, Bayesian], [Bayesian, network], [network, .]]

>> Trigrams: 
[[situation,   , modeled], [  , modeled, Bayesian], [modeled, Bayesian, network], [Bayesian, network, .]]

>> Noun Phrases are: 
[the situation, a Bayesian network]

>> Named Entities are: 
[('Bayesian', 'NORP')]


============================ Sentence 205 =============================

All three variables   have two possible values, T (for true) and F (for false) 


>> Tokens are: 
[variables,   , possible, values, ,, T, (, true, ), F, (, false, )] 

>> PoS Tags are: 
[('variables', 'NOUN'), ('  ', 'SPACE'), ('possible', 'ADJ'), ('values', 'NOUN'), (',', 'PUNCT'), ('T', 'NOUN'), ('(', 'PUNCT'), ('true', 'ADJ'), (')', 'PUNCT'), ('F', 'PROPN'), ('(', 'PUNCT'), ('false', 'ADJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('variables', 'nsubj'), ('  ', 'appos'), ('possible', 'amod'), ('values', 'dobj'), (',', 'punct'), ('T', 'appos'), ('(', 'punct'), ('true', 'amod'), (')', 'punct'), ('F', 'conj'), ('(', 'punct'), ('false', 'amod'), (')', 'punct')]

>> Bigrams: 
[[variables,   ], [  , possible], [possible, values], [values, ,], [,, T], [T, (], [(, true], [true, )], [), F], [F, (], [(, false], [false, )]]

>> Trigrams: 
[[variables,   , possible], [  , possible, values], [possible, values, ,], [values, ,, T], [,, T, (], [T, (, true], [(, true, )], [true, ), F], [), F, (], [F, (, false], [(, false, )]]

>> Noun Phrases are: 
[All three variables, two possible values, T, F]

>> Named Entities are: 
[('three', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 206 =============================

[22]. 


>> Tokens are: 
[[, 22, ], .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('22', 'ROOT'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[[, 22], [22, ]], [], .]]

>> Trigrams: 
[[[, 22, ]], [22, ], .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('22', 'CARDINAL')]


============================ Sentence 207 =============================

     Fig.7. 


>> Tokens are: 
[     , Fig.7, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.7', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('Fig.7', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.7], [Fig.7, .]]

>> Trigrams: 
[[     , Fig.7, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 208 =============================

Bayesian network with conditional probability tables    


>> Tokens are: 
[Bayesian, network, conditional, probability, tables,   ] 

>> PoS Tags are: 
[('Bayesian', 'ADJ'), ('network', 'NOUN'), ('conditional', 'ADJ'), ('probability', 'NOUN'), ('tables', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Bayesian', 'compound'), ('network', 'ROOT'), ('conditional', 'amod'), ('probability', 'compound'), ('tables', 'pobj'), ('  ', 'punct')]

>> Bigrams: 
[[Bayesian, network], [network, conditional], [conditional, probability], [probability, tables], [tables,   ]]

>> Trigrams: 
[[Bayesian, network, conditional], [network, conditional, probability], [conditional, probability, tables], [probability, tables,   ]]

>> Noun Phrases are: 
[Bayesian network, conditional probability tables]

>> Named Entities are: 
[('Bayesian', 'NORP')]


============================ Sentence 209 =============================

The below is a joint probability function:           RPRSPRSGPRSGP ,,,   (4)  where, the names of the variables have been abbreviated to:   G = Grass wet (yes/no)   S = Sprinkler turned on (yes/no)   R = 


>> Tokens are: 
[joint, probability, function, :,    , , , , , , , , RPRSPRSGPRSGP, ,, ,, ,, ,  , (, 4, ),  , ,, names, variables, abbreviated, :,   , G, =, Grass, wet, (, yes, /, ),   , S, =, Sprinkler, turned, (, yes, /, ),   , R, =] 

>> PoS Tags are: 
[('joint', 'ADJ'), ('probability', 'NOUN'), ('function', 'NOUN'), (':', 'PUNCT'), ('   ', 'SPACE'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'ADJ'), ('\uf029RPRSPRSGPRSGP', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), ('\uf03d', 'PROPN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE'), (',', 'PUNCT'), ('names', 'NOUN'), ('variables', 'NOUN'), ('abbreviated', 'VERB'), (':', 'PUNCT'), ('  ', 'SPACE'), ('G', 'PROPN'), ('=', 'SYM'), ('Grass', 'PROPN'), ('wet', 'ADJ'), ('(', 'PUNCT'), ('yes', 'INTJ'), ('/', 'SYM'), (')', 'PUNCT'), ('  ', 'SPACE'), ('S', 'NOUN'), ('=', 'PUNCT'), ('Sprinkler', 'PROPN'), ('turned', 'VERB'), ('(', 'PUNCT'), ('yes', 'INTJ'), ('/', 'SYM'), (')', 'PUNCT'), ('  ', 'SPACE'), ('R', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('joint', 'amod'), ('probability', 'compound'), ('function', 'attr'), (':', 'punct'), ('   ', 'nummod'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('\uf028', 'compound'), ('\uf029RPRSPRSGPRSGP', 'appos'), (',', 'punct'), (',', 'punct'), (',', 'punct'), ('\uf03d', 'nmod'), (' ', 'appos'), ('(', 'punct'), ('4', 'appos'), (')', 'punct'), (' ', 'appos'), (',', 'punct'), ('names', 'nsubjpass'), ('variables', 'pobj'), ('abbreviated', 'relcl'), (':', 'punct'), ('  ', 'nmod'), ('G', 'nmod'), ('=', 'punct'), ('Grass', 'nsubj'), ('wet', 'relcl'), ('(', 'punct'), ('yes', 'intj'), ('/', 'punct'), (')', 'punct'), ('  ', 'compound'), ('S', 'appos'), ('=', 'punct'), ('Sprinkler', 'nsubj'), ('turned', 'ccomp'), ('(', 'punct'), ('yes', 'intj'), ('/', 'punct'), (')', 'punct'), ('  ', 'compound'), ('R', 'npadvmod'), ('=', 'punct')]

>> Bigrams: 
[[joint, probability], [probability, function], [function, :], [:,    ], [   , ], [, ], [, ], [, ], [, ], [, ], [, ], [, RPRSPRSGPRSGP], [RPRSPRSGPRSGP, ,], [,, ,], [,, ,], [,, ], [,  ], [ , (], [(, 4], [4, )], [),  ], [ , ,], [,, names], [names, variables], [variables, abbreviated], [abbreviated, :], [:,   ], [  , G], [G, =], [=, Grass], [Grass, wet], [wet, (], [(, yes], [yes, /], [/, )], [),   ], [  , S], [S, =], [=, Sprinkler], [Sprinkler, turned], [turned, (], [(, yes], [yes, /], [/, )], [),   ], [  , R], [R, =]]

>> Trigrams: 
[[joint, probability, function], [probability, function, :], [function, :,    ], [:,    , ], [   , , ], [, , ], [, , ], [, , ], [, , ], [, , ], [, , RPRSPRSGPRSGP], [, RPRSPRSGPRSGP, ,], [RPRSPRSGPRSGP, ,, ,], [,, ,, ,], [,, ,, ], [,, ,  ], [,  , (], [ , (, 4], [(, 4, )], [4, ),  ], [),  , ,], [ , ,, names], [,, names, variables], [names, variables, abbreviated], [variables, abbreviated, :], [abbreviated, :,   ], [:,   , G], [  , G, =], [G, =, Grass], [=, Grass, wet], [Grass, wet, (], [wet, (, yes], [(, yes, /], [yes, /, )], [/, ),   ], [),   , S], [  , S, =], [S, =, Sprinkler], [=, Sprinkler, turned], [Sprinkler, turned, (], [turned, (, yes], [(, yes, /], [yes, /, )], [/, ),   ], [),   , R], [  , R, =]]

>> Noun Phrases are: 
[a joint probability function,       RPRSPRSGPRSGP, the names, the variables,   G = Grass,   S, Sprinkler]

>> Named Entities are: 
[('\uf029', 'ORG'), ('\uf029', 'ORG'), ('\uf029', 'ORG'), ('Grass', 'PERSON'), ('Sprinkler', 'ORG')]


============================ Sentence 210 =============================

Raining (yes/no). 


>> Tokens are: 
[Raining, (, yes, /, ), .] 

>> PoS Tags are: 
[('Raining', 'VERB'), ('(', 'PUNCT'), ('yes', 'INTJ'), ('/', 'SYM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Raining', 'ROOT'), ('(', 'punct'), ('yes', 'intj'), ('/', 'punct'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Raining, (], [(, yes], [yes, /], [/, )], [), .]]

>> Trigrams: 
[[Raining, (, yes], [(, yes, /], [yes, /, )], [/, ), .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 211 =============================

  Cheng et al. draw the attention of a problem of BN classifiers   that it is not suitable for datasets with many features. 


>> Tokens are: 
[  , Cheng, et, al, ., draw, attention, problem, BN, classifiers,   , suitable, datasets, features, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Cheng', 'PROPN'), ('et', 'PROPN'), ('al', 'PROPN'), ('.', 'PUNCT'), ('draw', 'VERB'), ('attention', 'NOUN'), ('problem', 'NOUN'), ('BN', 'NOUN'), ('classifiers', 'NOUN'), ('  ', 'SPACE'), ('suitable', 'ADJ'), ('datasets', 'NOUN'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('Cheng', 'compound'), ('et', 'compound'), ('al', 'nsubj'), ('.', 'punct'), ('draw', 'ROOT'), ('attention', 'dobj'), ('problem', 'pobj'), ('BN', 'compound'), ('classifiers', 'pobj'), ('  ', 'pobj'), ('suitable', 'acomp'), ('datasets', 'pobj'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , Cheng], [Cheng, et], [et, al], [al, .], [., draw], [draw, attention], [attention, problem], [problem, BN], [BN, classifiers], [classifiers,   ], [  , suitable], [suitable, datasets], [datasets, features], [features, .]]

>> Trigrams: 
[[  , Cheng, et], [Cheng, et, al], [et, al, .], [al, ., draw], [., draw, attention], [draw, attention, problem], [attention, problem, BN], [problem, BN, classifiers], [BN, classifiers,   ], [classifiers,   , suitable], [  , suitable, datasets], [suitable, datasets, features], [datasets, features, .]]

>> Noun Phrases are: 
[  Cheng et al, the attention, a problem, BN classifiers, it, datasets, many features]

>> Named Entities are: 
[('Cheng', 'PERSON')]


============================ Sentence 212 =============================

The reason   for this is that trying to construct a very large network is simply   not feasible in terms of time and space [23]. 


>> Tokens are: 
[reason,   , trying, construct, large, network, simply,   , feasible, terms, time, space, [, 23, ], .] 

>> PoS Tags are: 
[('reason', 'NOUN'), ('  ', 'SPACE'), ('trying', 'VERB'), ('construct', 'VERB'), ('large', 'ADJ'), ('network', 'NOUN'), ('simply', 'ADV'), ('  ', 'SPACE'), ('feasible', 'ADJ'), ('terms', 'NOUN'), ('time', 'NOUN'), ('space', 'NOUN'), ('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('reason', 'nsubj'), ('  ', 'appos'), ('trying', 'csubj'), ('construct', 'xcomp'), ('large', 'amod'), ('network', 'dobj'), ('simply', 'advmod'), ('  ', 'attr'), ('feasible', 'acomp'), ('terms', 'pobj'), ('time', 'pobj'), ('space', 'conj'), ('[', 'punct'), ('23', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[reason,   ], [  , trying], [trying, construct], [construct, large], [large, network], [network, simply], [simply,   ], [  , feasible], [feasible, terms], [terms, time], [time, space], [space, [], [[, 23], [23, ]], [], .]]

>> Trigrams: 
[[reason,   , trying], [  , trying, construct], [trying, construct, large], [construct, large, network], [large, network, simply], [network, simply,   ], [simply,   , feasible], [  , feasible, terms], [feasible, terms, time], [terms, time, space], [time, space, [], [space, [, 23], [[, 23, ]], [23, ], .]]

>> Noun Phrases are: 
[The reason, a very large network, terms, time, space]

>> Named Entities are: 
[('23', 'CARDINAL')]


============================ Sentence 213 =============================

The pseudo code of   training BN is shown in below figure:   Input 1    


>> Tokens are: 
[pseudo, code,   , training, BN, shown, figure, :,   , Input, 1,   ] 

>> PoS Tags are: 
[('pseudo', 'NOUN'), ('code', 'NOUN'), ('  ', 'SPACE'), ('training', 'VERB'), ('BN', 'PROPN'), ('shown', 'VERB'), ('figure', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('Input', 'NOUN'), ('1', 'NUM'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('pseudo', 'compound'), ('code', 'nsubjpass'), ('  ', 'pobj'), ('training', 'acl'), ('BN', 'dobj'), ('shown', 'ROOT'), ('figure', 'pobj'), (':', 'punct'), ('  ', 'dep'), ('Input', 'appos'), ('1', 'nummod'), ('  ', 'appos')]

>> Bigrams: 
[[pseudo, code], [code,   ], [  , training], [training, BN], [BN, shown], [shown, figure], [figure, :], [:,   ], [  , Input], [Input, 1], [1,   ]]

>> Trigrams: 
[[pseudo, code,   ], [code,   , training], [  , training, BN], [training, BN, shown], [BN, shown, figure], [shown, figure, :], [figure, :,   ], [:,   , Input], [  , Input, 1], [Input, 1,   ]]

>> Noun Phrases are: 
[The pseudo code, BN, figure, Input]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 214 =============================

Input 2   Input 3   Input 4   Output 1     IQBAL MUHAMMAD AND ZHU YAN: SUPERVISED MACHINE 


>> Tokens are: 
[Input, 2,   , Input, 3,   , Input, 4,   , Output, 1,     , IQBAL, MUHAMMAD, ZHU, YAN, :, SUPERVISED, MACHINE] 

>> PoS Tags are: 
[('Input', 'NOUN'), ('2', 'NUM'), ('  ', 'SPACE'), ('Input', 'NOUN'), ('3', 'NUM'), ('  ', 'SPACE'), ('Input', 'NOUN'), ('4', 'NUM'), ('  ', 'SPACE'), ('Output', 'NOUN'), ('1', 'NUM'), ('    ', 'SPACE'), ('IQBAL', 'VERB'), ('MUHAMMAD', 'PROPN'), ('ZHU', 'PROPN'), ('YAN', 'PROPN'), (':', 'PUNCT'), ('SUPERVISED', 'ADJ'), ('MACHINE', 'NOUN')] 

>> Dependency Tags are: 
[('Input', 'npadvmod'), ('2', 'nummod'), ('  ', 'appos'), ('Input', 'appos'), ('3', 'nummod'), ('  ', 'appos'), ('Input', 'appos'), ('4', 'nummod'), ('  ', 'appos'), ('Output', 'nmod'), ('1', 'nummod'), ('    ', 'nsubj'), ('IQBAL', 'compound'), ('MUHAMMAD', 'ROOT'), ('ZHU', 'compound'), ('YAN', 'conj'), (':', 'punct'), ('SUPERVISED', 'amod'), ('MACHINE', 'punct')]

>> Bigrams: 
[[Input, 2], [2,   ], [  , Input], [Input, 3], [3,   ], [  , Input], [Input, 4], [4,   ], [  , Output], [Output, 1], [1,     ], [    , IQBAL], [IQBAL, MUHAMMAD], [MUHAMMAD, ZHU], [ZHU, YAN], [YAN, :], [:, SUPERVISED], [SUPERVISED, MACHINE]]

>> Trigrams: 
[[Input, 2,   ], [2,   , Input], [  , Input, 3], [Input, 3,   ], [3,   , Input], [  , Input, 4], [Input, 4,   ], [4,   , Output], [  , Output, 1], [Output, 1,     ], [1,     , IQBAL], [    , IQBAL, MUHAMMAD], [IQBAL, MUHAMMAD, ZHU], [MUHAMMAD, ZHU, YAN], [ZHU, YAN, :], [YAN, :, SUPERVISED], [:, SUPERVISED, MACHINE]]

>> Noun Phrases are: 
[Input, Input, ZHU YAN]

>> Named Entities are: 
[('2', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('ZHU YAN', 'PERSON')]


============================ Sentence 215 =============================

LEARNING APPROACHES: 


>> Tokens are: 
[LEARNING, APPROACHES, :] 

>> PoS Tags are: 
[('LEARNING', 'NOUN'), ('APPROACHES', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('LEARNING', 'compound'), ('APPROACHES', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[LEARNING, APPROACHES], [APPROACHES, :]]

>> Trigrams: 
[[LEARNING, APPROACHES, :]]

>> Noun Phrases are: 
[LEARNING APPROACHES]

>> Named Entities are: 
[]


============================ Sentence 216 =============================

A SURVEY   950      Fig.8. 


>> Tokens are: 
[SURVEY,   , 950,      , Fig.8, .] 

>> PoS Tags are: 
[('SURVEY', 'NOUN'), ('  ', 'SPACE'), ('950', 'NUM'), ('     ', 'SPACE'), ('Fig.8', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SURVEY', 'nsubj'), ('  ', 'ROOT'), ('950', 'nummod'), ('     ', 'compound'), ('Fig.8', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[SURVEY,   ], [  , 950], [950,      ], [     , Fig.8], [Fig.8, .]]

>> Trigrams: 
[[SURVEY,   , 950], [  , 950,      ], [950,      , Fig.8], [     , Fig.8, .]]

>> Noun Phrases are: 
[A SURVEY, 950      Fig.8]

>> Named Entities are: 
[]


============================ Sentence 217 =============================

Pseudo-code for training of BN   5. 


>> Tokens are: 
[Pseudo, -, code, training, BN,   , 5, .] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('-', 'PUNCT'), ('code', 'NOUN'), ('training', 'NOUN'), ('BN', 'PROPN'), ('  ', 'SPACE'), ('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('-', 'punct'), ('code', 'nsubj'), ('training', 'pobj'), ('BN', 'pobj'), ('  ', 'ROOT'), ('5', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Pseudo, -], [-, code], [code, training], [training, BN], [BN,   ], [  , 5], [5, .]]

>> Trigrams: 
[[Pseudo, -, code], [-, code, training], [code, training, BN], [training, BN,   ], [BN,   , 5], [  , 5, .]]

>> Noun Phrases are: 
[Pseudo-code, training, BN]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 218 =============================

INSTANCE-BASED LEARNING   About this learning scheme, the author [24] describes it as   lazy-learning algorithms, as they delay the induction or   generalization process until classification is performed. 


>> Tokens are: 
[INSTANCE, -, BASED, LEARNING,   , learning, scheme, ,, author, [, 24, ], describes,   , lazy, -, learning, algorithms, ,, delay, induction,   , generalization, process, classification, performed, .] 

>> PoS Tags are: 
[('INSTANCE', 'PROPN'), ('-', 'PUNCT'), ('BASED', 'VERB'), ('LEARNING', 'VERB'), ('  ', 'SPACE'), ('learning', 'NOUN'), ('scheme', 'NOUN'), (',', 'PUNCT'), ('author', 'NOUN'), ('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('describes', 'VERB'), ('  ', 'SPACE'), ('lazy', 'ADJ'), ('-', 'PUNCT'), ('learning', 'VERB'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('delay', 'VERB'), ('induction', 'NOUN'), ('  ', 'SPACE'), ('generalization', 'NOUN'), ('process', 'NOUN'), ('classification', 'NOUN'), ('performed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('INSTANCE', 'npadvmod'), ('-', 'punct'), ('BASED', 'compound'), ('LEARNING', 'advcl'), ('  ', 'dobj'), ('learning', 'compound'), ('scheme', 'pobj'), (',', 'punct'), ('author', 'nsubj'), ('[', 'punct'), ('24', 'appos'), (']', 'punct'), ('describes', 'ROOT'), ('  ', 'poss'), ('lazy', 'amod'), ('-', 'punct'), ('learning', 'amod'), ('algorithms', 'pobj'), (',', 'punct'), ('delay', 'advcl'), ('induction', 'dobj'), ('  ', 'compound'), ('generalization', 'compound'), ('process', 'conj'), ('classification', 'nsubjpass'), ('performed', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[INSTANCE, -], [-, BASED], [BASED, LEARNING], [LEARNING,   ], [  , learning], [learning, scheme], [scheme, ,], [,, author], [author, [], [[, 24], [24, ]], [], describes], [describes,   ], [  , lazy], [lazy, -], [-, learning], [learning, algorithms], [algorithms, ,], [,, delay], [delay, induction], [induction,   ], [  , generalization], [generalization, process], [process, classification], [classification, performed], [performed, .]]

>> Trigrams: 
[[INSTANCE, -, BASED], [-, BASED, LEARNING], [BASED, LEARNING,   ], [LEARNING,   , learning], [  , learning, scheme], [learning, scheme, ,], [scheme, ,, author], [,, author, [], [author, [, 24], [[, 24, ]], [24, ], describes], [], describes,   ], [describes,   , lazy], [  , lazy, -], [lazy, -, learning], [-, learning, algorithms], [learning, algorithms, ,], [algorithms, ,, delay], [,, delay, induction], [delay, induction,   ], [induction,   , generalization], [  , generalization, process], [generalization, process, classification], [process, classification, performed], [classification, performed, .]]

>> Noun Phrases are: 
[this learning scheme, the author, it,   lazy-learning algorithms, they, the induction,   generalization process, classification]

>> Named Entities are: 
[('INSTANCE-BASED LEARNING', 'ORG'), ('24', 'CARDINAL')]


============================ Sentence 219 =============================

These   algorithms require less computational time during the training   phase than other eager-learning algorithms (such as decision trees,   neural and Bayes nets) but need more computation time during the   classification process. 


>> Tokens are: 
[  , algorithms, require, computational, time, training,   , phase, eager, -, learning, algorithms, (, decision, trees, ,,   , neural, Bayes, nets, ), need, computation, time,   , classification, process, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('algorithms', 'NOUN'), ('require', 'VERB'), ('computational', 'ADJ'), ('time', 'NOUN'), ('training', 'NOUN'), ('  ', 'SPACE'), ('phase', 'NOUN'), ('eager', 'ADJ'), ('-', 'PUNCT'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('(', 'PUNCT'), ('decision', 'NOUN'), ('trees', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('neural', 'ADJ'), ('Bayes', 'PROPN'), ('nets', 'NOUN'), (')', 'PUNCT'), ('need', 'VERB'), ('computation', 'NOUN'), ('time', 'NOUN'), ('  ', 'SPACE'), ('classification', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('algorithms', 'nsubj'), ('require', 'ROOT'), ('computational', 'amod'), ('time', 'dobj'), ('training', 'pobj'), ('  ', 'nummod'), ('phase', 'dobj'), ('eager', 'amod'), ('-', 'punct'), ('learning', 'amod'), ('algorithms', 'pobj'), ('(', 'punct'), ('decision', 'compound'), ('trees', 'pobj'), (',', 'punct'), ('  ', 'nmod'), ('neural', 'amod'), ('Bayes', 'conj'), ('nets', 'conj'), (')', 'punct'), ('need', 'conj'), ('computation', 'compound'), ('time', 'dobj'), ('  ', 'nummod'), ('classification', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , algorithms], [algorithms, require], [require, computational], [computational, time], [time, training], [training,   ], [  , phase], [phase, eager], [eager, -], [-, learning], [learning, algorithms], [algorithms, (], [(, decision], [decision, trees], [trees, ,], [,,   ], [  , neural], [neural, Bayes], [Bayes, nets], [nets, )], [), need], [need, computation], [computation, time], [time,   ], [  , classification], [classification, process], [process, .]]

>> Trigrams: 
[[  , algorithms, require], [algorithms, require, computational], [require, computational, time], [computational, time, training], [time, training,   ], [training,   , phase], [  , phase, eager], [phase, eager, -], [eager, -, learning], [-, learning, algorithms], [learning, algorithms, (], [algorithms, (, decision], [(, decision, trees], [decision, trees, ,], [trees, ,,   ], [,,   , neural], [  , neural, Bayes], [neural, Bayes, nets], [Bayes, nets, )], [nets, ), need], [), need, computation], [need, computation, time], [computation, time,   ], [time,   , classification], [  , classification, process], [classification, process, .]]

>> Noun Phrases are: 
[These   algorithms, less computational time, the training,   phase, other eager-learning algorithms, decision trees,   neural and Bayes nets, more computation time, the   classification process]

>> Named Entities are: 
[('Bayes', 'ORG')]


============================ Sentence 220 =============================

Nearest Neighbor algorithm is an example   of instance-based learning algorithms [1]. 


>> Tokens are: 
[Nearest, Neighbor, algorithm, example,   , instance, -, based, learning, algorithms, [, 1, ], .] 

>> PoS Tags are: 
[('Nearest', 'PROPN'), ('Neighbor', 'PROPN'), ('algorithm', 'NOUN'), ('example', 'NOUN'), ('  ', 'SPACE'), ('instance', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Nearest', 'compound'), ('Neighbor', 'compound'), ('algorithm', 'nsubj'), ('example', 'attr'), ('  ', 'appos'), ('instance', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('learning', 'compound'), ('algorithms', 'pobj'), ('[', 'punct'), ('1', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Nearest, Neighbor], [Neighbor, algorithm], [algorithm, example], [example,   ], [  , instance], [instance, -], [-, based], [based, learning], [learning, algorithms], [algorithms, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[Nearest, Neighbor, algorithm], [Neighbor, algorithm, example], [algorithm, example,   ], [example,   , instance], [  , instance, -], [instance, -, based], [-, based, learning], [based, learning, algorithms], [learning, algorithms, [], [algorithms, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[Nearest Neighbor algorithm, an example, instance-based learning algorithms]

>> Named Entities are: 
[('Nearest Neighbor', 'PERSON')]


============================ Sentence 221 =============================

Aha 


>> Tokens are: 
[Aha] 

>> PoS Tags are: 
[('Aha', 'INTJ')] 

>> Dependency Tags are: 
[('Aha', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 222 =============================

[25] and De et. 


>> Tokens are: 
[[, 25, ], De, et, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('De', 'PROPN'), ('et', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('25', 'ROOT'), (']', 'punct'), ('De', 'compound'), ('et', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[[, 25], [25, ]], [], De], [De, et], [et, .]]

>> Trigrams: 
[[[, 25, ]], [25, ], De], [], De, et], [De, et, .]]

>> Noun Phrases are: 
[De et]

>> Named Entities are: 
[('25', 'CARDINAL'), ('De', 'PERSON')]


============================ Sentence 223 =============================

al    


>> Tokens are: 
[al,   ] 

>> PoS Tags are: 
[('al', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('al', 'compound'), ('  ', 'ROOT')]

>> Bigrams: 
[[al,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 224 =============================

[26] discussed the instance-based learning classifiers. 


>> Tokens are: 
[[, 26, ], discussed, instance, -, based, learning, classifiers, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('discussed', 'VERB'), ('instance', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('learning', 'NOUN'), ('classifiers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('26', 'nsubj'), (']', 'punct'), ('discussed', 'ROOT'), ('instance', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('learning', 'compound'), ('classifiers', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 26], [26, ]], [], discussed], [discussed, instance], [instance, -], [-, based], [based, learning], [learning, classifiers], [classifiers, .]]

>> Trigrams: 
[[[, 26, ]], [26, ], discussed], [], discussed, instance], [discussed, instance, -], [instance, -, based], [-, based, learning], [based, learning, classifiers], [learning, classifiers, .]]

>> Noun Phrases are: 
[the instance-based learning classifiers]

>> Named Entities are: 
[('26', 'CARDINAL')]


============================ Sentence 225 =============================

  k-Nearest-Neighbor (kNN) classification  is one of the most   widely used method for a classification of objects when there is   little or no prior knowledge about the distribution of the data. 


>> Tokens are: 
[  , k, -, Nearest, -, Neighbor, (, kNN, ), classification,  ,   , widely, method, classification, objects,   , little, prior, knowledge, distribution, data, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('k', 'PROPN'), ('-', 'PUNCT'), ('Nearest', 'PROPN'), ('-', 'PUNCT'), ('Neighbor', 'PROPN'), ('(', 'PUNCT'), ('kNN', 'PROPN'), (')', 'PUNCT'), ('classification', 'NOUN'), (' ', 'SPACE'), ('  ', 'SPACE'), ('widely', 'ADV'), ('method', 'NOUN'), ('classification', 'NOUN'), ('objects', 'NOUN'), ('  ', 'SPACE'), ('little', 'ADJ'), ('prior', 'ADJ'), ('knowledge', 'NOUN'), ('distribution', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('k', 'dep'), ('-', 'punct'), ('Nearest', 'nmod'), ('-', 'punct'), ('Neighbor', 'appos'), ('(', 'punct'), ('kNN', 'appos'), (')', 'punct'), ('classification', 'compound'), (' ', 'nsubj'), ('  ', 'pobj'), ('widely', 'advmod'), ('method', 'pobj'), ('classification', 'pobj'), ('objects', 'pobj'), ('  ', 'attr'), ('little', 'attr'), ('prior', 'amod'), ('knowledge', 'conj'), ('distribution', 'pobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , k], [k, -], [-, Nearest], [Nearest, -], [-, Neighbor], [Neighbor, (], [(, kNN], [kNN, )], [), classification], [classification,  ], [ ,   ], [  , widely], [widely, method], [method, classification], [classification, objects], [objects,   ], [  , little], [little, prior], [prior, knowledge], [knowledge, distribution], [distribution, data], [data, .]]

>> Trigrams: 
[[  , k, -], [k, -, Nearest], [-, Nearest, -], [Nearest, -, Neighbor], [-, Neighbor, (], [Neighbor, (, kNN], [(, kNN, )], [kNN, ), classification], [), classification,  ], [classification,  ,   ], [ ,   , widely], [  , widely, method], [widely, method, classification], [method, classification, objects], [classification, objects,   ], [objects,   , little], [  , little, prior], [little, prior, knowledge], [prior, knowledge, distribution], [knowledge, distribution, data], [distribution, data, .]]

>> Noun Phrases are: 
[k-Nearest-Neighbor, (kNN, widely used method, a classification, objects, no prior knowledge, the distribution, the data]

>> Named Entities are: 
[('kNN', 'ORG')]


============================ Sentence 226 =============================

  kNN is a good choice to perform discriminate analysis when   reliable parametric estimates of probability densities are   unknown or difficult to determine[27]. 


>> Tokens are: 
[  , kNN, good, choice, perform, discriminate, analysis,   , reliable, parametric, estimates, probability, densities,   , unknown, difficult, determine[27, ], .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('kNN', 'PROPN'), ('good', 'ADJ'), ('choice', 'NOUN'), ('perform', 'VERB'), ('discriminate', 'ADJ'), ('analysis', 'NOUN'), ('  ', 'SPACE'), ('reliable', 'ADJ'), ('parametric', 'NOUN'), ('estimates', 'NOUN'), ('probability', 'NOUN'), ('densities', 'NOUN'), ('  ', 'SPACE'), ('unknown', 'ADJ'), ('difficult', 'ADJ'), ('determine[27', 'X'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('kNN', 'nsubj'), ('good', 'amod'), ('choice', 'attr'), ('perform', 'relcl'), ('discriminate', 'amod'), ('analysis', 'dobj'), ('  ', 'nsubj'), ('reliable', 'advcl'), ('parametric', 'compound'), ('estimates', 'dobj'), ('probability', 'compound'), ('densities', 'pobj'), ('  ', 'attr'), ('unknown', 'acomp'), ('difficult', 'conj'), ('determine[27', 'pobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[  , kNN], [kNN, good], [good, choice], [choice, perform], [perform, discriminate], [discriminate, analysis], [analysis,   ], [  , reliable], [reliable, parametric], [parametric, estimates], [estimates, probability], [probability, densities], [densities,   ], [  , unknown], [unknown, difficult], [difficult, determine[27], [determine[27, ]], [], .]]

>> Trigrams: 
[[  , kNN, good], [kNN, good, choice], [good, choice, perform], [choice, perform, discriminate], [perform, discriminate, analysis], [discriminate, analysis,   ], [analysis,   , reliable], [  , reliable, parametric], [reliable, parametric, estimates], [parametric, estimates, probability], [estimates, probability, densities], [probability, densities,   ], [densities,   , unknown], [  , unknown, difficult], [unknown, difficult, determine[27], [difficult, determine[27, ]], [determine[27, ], .]]

>> Noun Phrases are: 
[  kNN, a good choice, discriminate analysis, parametric estimates, probability densities]

>> Named Entities are: 
[('kNN', 'ORG')]


============================ Sentence 227 =============================

  kNN is a example of supervised learning algorithm  in which   the result of new instance query is classified based on majority   of k-nearest neighbor category. 


>> Tokens are: 
[  , kNN, example, supervised, learning, algorithm,  ,   , result, new, instance, query, classified, based, majority,   , k, -, nearest, neighbor, category, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('kNN', 'PROPN'), ('example', 'NOUN'), ('supervised', 'ADJ'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), (' ', 'SPACE'), ('  ', 'SPACE'), ('result', 'NOUN'), ('new', 'ADJ'), ('instance', 'NOUN'), ('query', 'NOUN'), ('classified', 'VERB'), ('based', 'VERB'), ('majority', 'NOUN'), ('  ', 'SPACE'), ('k', 'NOUN'), ('-', 'PUNCT'), ('nearest', 'ADJ'), ('neighbor', 'NOUN'), ('category', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('kNN', 'nsubj'), ('example', 'attr'), ('supervised', 'amod'), ('learning', 'pobj'), ('algorithm', 'advmod'), (' ', 'attr'), ('  ', 'relcl'), ('result', 'nsubj'), ('new', 'amod'), ('instance', 'compound'), ('query', 'pobj'), ('classified', 'ccomp'), ('based', 'prep'), ('majority', 'compound'), ('  ', 'pobj'), ('k', 'advmod'), ('-', 'punct'), ('nearest', 'amod'), ('neighbor', 'compound'), ('category', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , kNN], [kNN, example], [example, supervised], [supervised, learning], [learning, algorithm], [algorithm,  ], [ ,   ], [  , result], [result, new], [new, instance], [instance, query], [query, classified], [classified, based], [based, majority], [majority,   ], [  , k], [k, -], [-, nearest], [nearest, neighbor], [neighbor, category], [category, .]]

>> Trigrams: 
[[  , kNN, example], [kNN, example, supervised], [example, supervised, learning], [supervised, learning, algorithm], [learning, algorithm,  ], [algorithm,  ,   ], [ ,   , result], [  , result, new], [result, new, instance], [new, instance, query], [instance, query, classified], [query, classified, based], [classified, based, majority], [based, majority,   ], [majority,   , k], [  , k, -], [k, -, nearest], [-, nearest, neighbor], [nearest, neighbor, category], [neighbor, category, .]]

>> Noun Phrases are: 
[  kNN, a example, supervised learning, the result, new instance query, k-nearest neighbor category]

>> Named Entities are: 
[('kNN', 'ORG')]


============================ Sentence 228 =============================

The core function of algorithm is   to classify a new object based on attributes and training samples. 


>> Tokens are: 
[core, function, algorithm,   , classify, new, object, based, attributes, training, samples, .] 

>> PoS Tags are: 
[('core', 'NOUN'), ('function', 'NOUN'), ('algorithm', 'NOUN'), ('  ', 'SPACE'), ('classify', 'VERB'), ('new', 'ADJ'), ('object', 'NOUN'), ('based', 'VERB'), ('attributes', 'NOUN'), ('training', 'VERB'), ('samples', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('core', 'compound'), ('function', 'nsubj'), ('algorithm', 'pobj'), ('  ', 'attr'), ('classify', 'xcomp'), ('new', 'amod'), ('object', 'dobj'), ('based', 'acl'), ('attributes', 'pobj'), ('training', 'compound'), ('samples', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[core, function], [function, algorithm], [algorithm,   ], [  , classify], [classify, new], [new, object], [object, based], [based, attributes], [attributes, training], [training, samples], [samples, .]]

>> Trigrams: 
[[core, function, algorithm], [function, algorithm,   ], [algorithm,   , classify], [  , classify, new], [classify, new, object], [new, object, based], [object, based, attributes], [based, attributes, training], [attributes, training, samples], [training, samples, .]]

>> Noun Phrases are: 
[The core function, algorithm, a new object, attributes, training samples]

>> Named Entities are: 
[]


============================ Sentence 229 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 230 =============================

Here the classification is using majority vote among the   classification of the k objects. 


>> Tokens are: 
[classification, majority, vote,   , classification, k, objects, .] 

>> PoS Tags are: 
[('classification', 'NOUN'), ('majority', 'NOUN'), ('vote', 'NOUN'), ('  ', 'SPACE'), ('classification', 'NOUN'), ('k', 'NOUN'), ('objects', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('classification', 'nsubj'), ('majority', 'compound'), ('vote', 'dobj'), ('  ', 'nummod'), ('classification', 'pobj'), ('k', 'det'), ('objects', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[classification, majority], [majority, vote], [vote,   ], [  , classification], [classification, k], [k, objects], [objects, .]]

>> Trigrams: 
[[classification, majority, vote], [majority, vote,   ], [vote,   , classification], [  , classification, k], [classification, k, objects], [k, objects, .]]

>> Noun Phrases are: 
[the classification, majority vote, the   classification, the k objects]

>> Named Entities are: 
[]


============================ Sentence 231 =============================

For example we have conducted a   survey on consumption of any particular item to know it’s worth   in the market. 


>> Tokens are: 
[example, conducted,   , survey, consumption, particular, item, know, worth,   , market, .] 

>> PoS Tags are: 
[('example', 'NOUN'), ('conducted', 'VERB'), ('  ', 'SPACE'), ('survey', 'NOUN'), ('consumption', 'NOUN'), ('particular', 'ADJ'), ('item', 'NOUN'), ('know', 'VERB'), ('worth', 'ADJ'), ('  ', 'SPACE'), ('market', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), ('conducted', 'ROOT'), ('  ', 'compound'), ('survey', 'dobj'), ('consumption', 'pobj'), ('particular', 'amod'), ('item', 'pobj'), ('know', 'advcl'), ('worth', 'acomp'), ('  ', 'npadvmod'), ('market', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, conducted], [conducted,   ], [  , survey], [survey, consumption], [consumption, particular], [particular, item], [item, know], [know, worth], [worth,   ], [  , market], [market, .]]

>> Trigrams: 
[[example, conducted,   ], [conducted,   , survey], [  , survey, consumption], [survey, consumption, particular], [consumption, particular, item], [particular, item, know], [item, know, worth], [know, worth,   ], [worth,   , market], [  , market, .]]

>> Noun Phrases are: 
[example, we, a   survey, consumption, any particular item, it, the market]

>> Named Entities are: 
[]


============================ Sentence 232 =============================

Below is a sample training table. 


>> Tokens are: 
[sample, training, table, .] 

>> PoS Tags are: 
[('sample', 'NOUN'), ('training', 'NOUN'), ('table', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sample', 'compound'), ('training', 'compound'), ('table', 'nsubj'), ('.', 'punct')]

>> Bigrams: 
[[sample, training], [training, table], [table, .]]

>> Trigrams: 
[[sample, training, table], [training, table, .]]

>> Noun Phrases are: 
[a sample training table]

>> Named Entities are: 
[]


============================ Sentence 233 =============================

  Table.3. 


>> Tokens are: 
[  , Table.3, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Table.3', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Table.3', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Table.3], [Table.3, .]]

>> Trigrams: 
[[  , Table.3, .]]

>> Noun Phrases are: 
[  Table.3]

>> Named Entities are: 
[]


============================ Sentence 234 =============================

Training sample   X1 X2 Result   8 8 NO   8 5 NO   4 5 


>> Tokens are: 
[Training, sample,   , X1, X2, Result,   , 8, 8,   , 8, 5,   , 4, 5] 

>> PoS Tags are: 
[('Training', 'NOUN'), ('sample', 'NOUN'), ('  ', 'SPACE'), ('X1', 'PROPN'), ('X2', 'PROPN'), ('Result', 'PROPN'), ('  ', 'SPACE'), ('8', 'NUM'), ('8', 'NUM'), ('  ', 'SPACE'), ('8', 'NUM'), ('5', 'NUM'), ('  ', 'SPACE'), ('4', 'NUM'), ('5', 'NUM')] 

>> Dependency Tags are: 
[('Training', 'compound'), ('sample', 'nsubj'), ('  ', 'nsubj'), ('X1', 'compound'), ('X2', 'compound'), ('Result', 'appos'), ('  ', 'ROOT'), ('8', 'compound'), ('8', 'npadvmod'), ('  ', 'appos'), ('8', 'compound'), ('5', 'appos'), ('  ', 'npadvmod'), ('4', 'compound'), ('5', 'appos')]

>> Bigrams: 
[[Training, sample], [sample,   ], [  , X1], [X1, X2], [X2, Result], [Result,   ], [  , 8], [8, 8], [8,   ], [  , 8], [8, 5], [5,   ], [  , 4], [4, 5]]

>> Trigrams: 
[[Training, sample,   ], [sample,   , X1], [  , X1, X2], [X1, X2, Result], [X2, Result,   ], [Result,   , 8], [  , 8, 8], [8, 8,   ], [8,   , 8], [  , 8, 5], [8, 5,   ], [5,   , 4], [  , 4, 5]]

>> Noun Phrases are: 
[Training sample, X1 X2 Result, NO]

>> Named Entities are: 
[('8 8', 'CARDINAL')]


============================ Sentence 235 =============================

Yes   1 5 


>> Tokens are: 
[Yes,   , 1, 5] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE'), ('1', 'NUM'), ('5', 'NUM')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'ROOT'), ('1', 'compound'), ('5', 'appos')]

>> Bigrams: 
[[Yes,   ], [  , 1], [1, 5]]

>> Trigrams: 
[[Yes,   , 1], [  , 1, 5]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 236 =============================

Yes    


>> Tokens are: 
[Yes,   ] 

>> PoS Tags are: 
[('Yes', 'INTJ'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Yes', 'intj'), ('  ', 'ROOT')]

>> Bigrams: 
[[Yes,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 237 =============================

The outcome “Yes” or “No” is depended on the variable   values of X1 and X2, so if we want to know the outcome of that   combination which is not available in data table, for example,   when  x1 = 4, and x2 = 8 then without doing lengthy exercise of   conducting surveys, we can predict the results by using kNN   classification method. 


>> Tokens are: 
[outcome, “, Yes, ”, “, ”, depended, variable,   , values, X1, X2, ,, want, know, outcome,   , combination, available, data, table, ,, example, ,,   ,  , x1, =, 4, ,, x2, =, 8, lengthy, exercise,   , conducting, surveys, ,, predict, results, kNN,   , classification, method, .] 

>> PoS Tags are: 
[('outcome', 'NOUN'), ('“', 'PUNCT'), ('Yes', 'INTJ'), ('”', 'PUNCT'), ('“', 'PUNCT'), ('”', 'PUNCT'), ('depended', 'VERB'), ('variable', 'NOUN'), ('  ', 'SPACE'), ('values', 'NOUN'), ('X1', 'PROPN'), ('X2', 'PROPN'), (',', 'PUNCT'), ('want', 'VERB'), ('know', 'VERB'), ('outcome', 'NOUN'), ('  ', 'SPACE'), ('combination', 'NOUN'), ('available', 'ADJ'), ('data', 'NOUN'), ('table', 'NOUN'), (',', 'PUNCT'), ('example', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), (' ', 'SPACE'), ('x1', 'NUM'), ('=', 'SYM'), ('4', 'NUM'), (',', 'PUNCT'), ('x2', 'NUM'), ('=', 'SYM'), ('8', 'NUM'), ('lengthy', 'ADJ'), ('exercise', 'NOUN'), ('  ', 'SPACE'), ('conducting', 'VERB'), ('surveys', 'NOUN'), (',', 'PUNCT'), ('predict', 'VERB'), ('results', 'NOUN'), ('kNN', 'PROPN'), ('  ', 'SPACE'), ('classification', 'NOUN'), ('method', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('outcome', 'nsubjpass'), ('“', 'punct'), ('Yes', 'intj'), ('”', 'punct'), ('“', 'punct'), ('”', 'punct'), ('depended', 'ROOT'), ('variable', 'amod'), ('  ', 'nummod'), ('values', 'pobj'), ('X1', 'pobj'), ('X2', 'conj'), (',', 'punct'), ('want', 'advcl'), ('know', 'xcomp'), ('outcome', 'dobj'), ('  ', 'compound'), ('combination', 'pobj'), ('available', 'acomp'), ('data', 'compound'), ('table', 'pobj'), (',', 'punct'), ('example', 'pobj'), (',', 'punct'), ('  ', 'npadvmod'), (' ', 'advcl'), ('x1', 'appos'), ('=', 'punct'), ('4', 'prep'), (',', 'punct'), ('x2', 'conj'), ('=', 'punct'), ('8', 'prep'), ('lengthy', 'amod'), ('exercise', 'dobj'), ('  ', 'pobj'), ('conducting', 'acl'), ('surveys', 'dobj'), (',', 'punct'), ('predict', 'advcl'), ('results', 'dobj'), ('kNN', 'compound'), ('  ', 'compound'), ('classification', 'compound'), ('method', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[outcome, “], [“, Yes], [Yes, ”], [”, “], [“, ”], [”, depended], [depended, variable], [variable,   ], [  , values], [values, X1], [X1, X2], [X2, ,], [,, want], [want, know], [know, outcome], [outcome,   ], [  , combination], [combination, available], [available, data], [data, table], [table, ,], [,, example], [example, ,], [,,   ], [  ,  ], [ , x1], [x1, =], [=, 4], [4, ,], [,, x2], [x2, =], [=, 8], [8, lengthy], [lengthy, exercise], [exercise,   ], [  , conducting], [conducting, surveys], [surveys, ,], [,, predict], [predict, results], [results, kNN], [kNN,   ], [  , classification], [classification, method], [method, .]]

>> Trigrams: 
[[outcome, “, Yes], [“, Yes, ”], [Yes, ”, “], [”, “, ”], [“, ”, depended], [”, depended, variable], [depended, variable,   ], [variable,   , values], [  , values, X1], [values, X1, X2], [X1, X2, ,], [X2, ,, want], [,, want, know], [want, know, outcome], [know, outcome,   ], [outcome,   , combination], [  , combination, available], [combination, available, data], [available, data, table], [data, table, ,], [table, ,, example], [,, example, ,], [example, ,,   ], [,,   ,  ], [  ,  , x1], [ , x1, =], [x1, =, 4], [=, 4, ,], [4, ,, x2], [,, x2, =], [x2, =, 8], [=, 8, lengthy], [8, lengthy, exercise], [lengthy, exercise,   ], [exercise,   , conducting], [  , conducting, surveys], [conducting, surveys, ,], [surveys, ,, predict], [,, predict, results], [predict, results, kNN], [results, kNN,   ], [kNN,   , classification], [  , classification, method], [classification, method, .]]

>> Noun Phrases are: 
[The outcome, the variable   values, X1, X2, we, the outcome, that   combination, data table, example, lengthy exercise, surveys, we, the results, kNN   classification method]

>> Named Entities are: 
[('4', 'CARDINAL'), ('8', 'CARDINAL'), ('kNN', 'ORG')]


============================ Sentence 238 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 239 =============================

The below pseudo code is an example for the instance base   learning methods. 


>> Tokens are: 
[pseudo, code, example, instance, base,   , learning, methods, .] 

>> PoS Tags are: 
[('pseudo', 'NOUN'), ('code', 'NOUN'), ('example', 'NOUN'), ('instance', 'NOUN'), ('base', 'NOUN'), ('  ', 'SPACE'), ('learning', 'VERB'), ('methods', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pseudo', 'compound'), ('code', 'nsubj'), ('example', 'attr'), ('instance', 'compound'), ('base', 'nsubj'), ('  ', 'nsubj'), ('learning', 'pcomp'), ('methods', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[pseudo, code], [code, example], [example, instance], [instance, base], [base,   ], [  , learning], [learning, methods], [methods, .]]

>> Trigrams: 
[[pseudo, code, example], [code, example, instance], [example, instance, base], [instance, base,   ], [base,   , learning], [  , learning, methods], [learning, methods, .]]

>> Noun Phrases are: 
[The below pseudo code, an example, the instance base, methods]

>> Named Entities are: 
[]


============================ Sentence 240 =============================

     Fig.9. 


>> Tokens are: 
[     , Fig.9, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.9', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'nsubj'), ('Fig.9', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.9], [Fig.9, .]]

>> Trigrams: 
[[     , Fig.9, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 241 =============================

Pseudo-code for instance-based learners   6. 


>> Tokens are: 
[Pseudo, -, code, instance, -, based, learners,   , 6, .] 

>> PoS Tags are: 
[('Pseudo', 'NOUN'), ('-', 'PUNCT'), ('code', 'NOUN'), ('instance', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('learners', 'NOUN'), ('  ', 'SPACE'), ('6', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pseudo', 'compound'), ('-', 'punct'), ('code', 'nsubj'), ('instance', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('learners', 'pobj'), ('  ', 'ROOT'), ('6', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Pseudo, -], [-, code], [code, instance], [instance, -], [-, based], [based, learners], [learners,   ], [  , 6], [6, .]]

>> Trigrams: 
[[Pseudo, -, code], [-, code, instance], [code, instance, -], [instance, -, based], [-, based, learners], [based, learners,   ], [learners,   , 6], [  , 6, .]]

>> Noun Phrases are: 
[Pseudo-code, instance-based learners]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 242 =============================

SUPPORT VECTOR MACHINES   Support Vector Machines (SVMs) are a set of supervised   learning methods which have been used for classification,   regression and outlier’s detection. 


>> Tokens are: 
[SUPPORT, VECTOR, MACHINES,   , Support, Vector, Machines, (, SVMs, ), set, supervised,   , learning, methods, classification, ,,   , regression, outlier, detection, .] 

>> PoS Tags are: 
[('SUPPORT', 'PROPN'), ('VECTOR', 'PROPN'), ('MACHINES', 'PROPN'), ('  ', 'SPACE'), ('Support', 'PROPN'), ('Vector', 'PROPN'), ('Machines', 'PROPN'), ('(', 'PUNCT'), ('SVMs', 'PROPN'), (')', 'PUNCT'), ('set', 'NOUN'), ('supervised', 'ADJ'), ('  ', 'SPACE'), ('learning', 'VERB'), ('methods', 'NOUN'), ('classification', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('regression', 'NOUN'), ('outlier', 'ADJ'), ('detection', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('SUPPORT', 'compound'), ('VECTOR', 'compound'), ('MACHINES', 'nsubj'), ('  ', 'appos'), ('Support', 'compound'), ('Vector', 'compound'), ('Machines', 'appos'), ('(', 'punct'), ('SVMs', 'appos'), (')', 'punct'), ('set', 'attr'), ('supervised', 'amod'), ('  ', 'pobj'), ('learning', 'amod'), ('methods', 'pobj'), ('classification', 'pobj'), (',', 'punct'), ('  ', 'compound'), ('regression', 'conj'), ('outlier', 'conj'), ('detection', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[SUPPORT, VECTOR], [VECTOR, MACHINES], [MACHINES,   ], [  , Support], [Support, Vector], [Vector, Machines], [Machines, (], [(, SVMs], [SVMs, )], [), set], [set, supervised], [supervised,   ], [  , learning], [learning, methods], [methods, classification], [classification, ,], [,,   ], [  , regression], [regression, outlier], [outlier, detection], [detection, .]]

>> Trigrams: 
[[SUPPORT, VECTOR, MACHINES], [VECTOR, MACHINES,   ], [MACHINES,   , Support], [  , Support, Vector], [Support, Vector, Machines], [Vector, Machines, (], [Machines, (, SVMs], [(, SVMs, )], [SVMs, ), set], [), set, supervised], [set, supervised,   ], [supervised,   , learning], [  , learning, methods], [learning, methods, classification], [methods, classification, ,], [classification, ,,   ], [,,   , regression], [  , regression, outlier], [regression, outlier, detection], [outlier, detection, .]]

>> Noun Phrases are: 
[SUPPORT VECTOR MACHINES, Support Vector Machines, SVMs, a set, learning methods, classification,   regression, detection]

>> Named Entities are: 
[('Support Vector Machines', 'ORG')]


============================ Sentence 243 =============================

There are number of benefits   for using SVM such as: (i) 


>> Tokens are: 
[number, benefits,   , SVM, :, (, )] 

>> PoS Tags are: 
[('number', 'NOUN'), ('benefits', 'NOUN'), ('  ', 'SPACE'), ('SVM', 'PROPN'), (':', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('number', 'attr'), ('benefits', 'pobj'), ('  ', 'appos'), ('SVM', 'dobj'), (':', 'punct'), ('(', 'punct'), (')', 'punct')]

>> Bigrams: 
[[number, benefits], [benefits,   ], [  , SVM], [SVM, :], [:, (], [(, )]]

>> Trigrams: 
[[number, benefits,   ], [benefits,   , SVM], [  , SVM, :], [SVM, :, (], [:, (, )]]

>> Noun Phrases are: 
[number, benefits, SVM]

>> Named Entities are: 
[('SVM', 'ORG')]


============================ Sentence 244 =============================

It is effective is high dimensional  space, (ii) Uses a subset of training points in the decision function  (called support vectors), so it is also memory efficient, (iii) It is  versatile because holds different kernel functions can be   specified for the decision function. 


>> Tokens are: 
[effective, high, dimensional,  , space, ,, (, ii, ), Uses, subset, training, points, decision, function,  , (, called, support, vectors, ), ,, memory, efficient, ,, (, iii, ),  , versatile, holds, different, kernel, functions,   , specified, decision, function, .] 

>> PoS Tags are: 
[('effective', 'ADJ'), ('high', 'ADJ'), ('dimensional', 'ADJ'), (' ', 'SPACE'), ('space', 'NOUN'), (',', 'PUNCT'), ('(', 'PUNCT'), ('ii', 'X'), (')', 'PUNCT'), ('Uses', 'VERB'), ('subset', 'NOUN'), ('training', 'NOUN'), ('points', 'NOUN'), ('decision', 'NOUN'), ('function', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('called', 'VERB'), ('support', 'NOUN'), ('vectors', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('memory', 'NOUN'), ('efficient', 'ADJ'), (',', 'PUNCT'), ('(', 'PUNCT'), ('iii', 'X'), (')', 'PUNCT'), (' ', 'SPACE'), ('versatile', 'ADJ'), ('holds', 'VERB'), ('different', 'ADJ'), ('kernel', 'NOUN'), ('functions', 'NOUN'), ('  ', 'SPACE'), ('specified', 'VERB'), ('decision', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('effective', 'acomp'), ('high', 'amod'), ('dimensional', 'amod'), (' ', 'compound'), ('space', 'attr'), (',', 'punct'), ('(', 'punct'), ('ii', 'meta'), (')', 'punct'), ('Uses', 'ROOT'), ('subset', 'dobj'), ('training', 'compound'), ('points', 'pobj'), ('decision', 'compound'), ('function', 'pobj'), (' ', 'appos'), ('(', 'punct'), ('called', 'relcl'), ('support', 'compound'), ('vectors', 'oprd'), (')', 'punct'), (',', 'punct'), ('memory', 'npadvmod'), ('efficient', 'acomp'), (',', 'punct'), ('(', 'punct'), ('iii', 'dep'), (')', 'punct'), (' ', 'attr'), ('versatile', 'acomp'), ('holds', 'advcl'), ('different', 'amod'), ('kernel', 'compound'), ('functions', 'dobj'), ('  ', 'nsubjpass'), ('specified', 'ccomp'), ('decision', 'compound'), ('function', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[effective, high], [high, dimensional], [dimensional,  ], [ , space], [space, ,], [,, (], [(, ii], [ii, )], [), Uses], [Uses, subset], [subset, training], [training, points], [points, decision], [decision, function], [function,  ], [ , (], [(, called], [called, support], [support, vectors], [vectors, )], [), ,], [,, memory], [memory, efficient], [efficient, ,], [,, (], [(, iii], [iii, )], [),  ], [ , versatile], [versatile, holds], [holds, different], [different, kernel], [kernel, functions], [functions,   ], [  , specified], [specified, decision], [decision, function], [function, .]]

>> Trigrams: 
[[effective, high, dimensional], [high, dimensional,  ], [dimensional,  , space], [ , space, ,], [space, ,, (], [,, (, ii], [(, ii, )], [ii, ), Uses], [), Uses, subset], [Uses, subset, training], [subset, training, points], [training, points, decision], [points, decision, function], [decision, function,  ], [function,  , (], [ , (, called], [(, called, support], [called, support, vectors], [support, vectors, )], [vectors, ), ,], [), ,, memory], [,, memory, efficient], [memory, efficient, ,], [efficient, ,, (], [,, (, iii], [(, iii, )], [iii, ),  ], [),  , versatile], [ , versatile, holds], [versatile, holds, different], [holds, different, kernel], [different, kernel, functions], [kernel, functions,   ], [functions,   , specified], [  , specified, decision], [specified, decision, function], [decision, function, .]]

>> Noun Phrases are: 
[It, high dimensional  space, a subset, training points, the decision function, support vectors, it, It, different kernel functions, the decision function]

>> Named Entities are: 
[]


============================ Sentence 245 =============================

Common kernels are   provided, but it is also possible to specify custom kernels. 


>> Tokens are: 
[Common, kernels,   , provided, ,, possible, specify, custom, kernels, .] 

>> PoS Tags are: 
[('Common', 'ADJ'), ('kernels', 'NOUN'), ('  ', 'SPACE'), ('provided', 'VERB'), (',', 'PUNCT'), ('possible', 'ADJ'), ('specify', 'VERB'), ('custom', 'NOUN'), ('kernels', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Common', 'amod'), ('kernels', 'nsubjpass'), ('  ', 'nsubjpass'), ('provided', 'ROOT'), (',', 'punct'), ('possible', 'acomp'), ('specify', 'xcomp'), ('custom', 'compound'), ('kernels', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Common, kernels], [kernels,   ], [  , provided], [provided, ,], [,, possible], [possible, specify], [specify, custom], [custom, kernels], [kernels, .]]

>> Trigrams: 
[[Common, kernels,   ], [kernels,   , provided], [  , provided, ,], [provided, ,, possible], [,, possible, specify], [possible, specify, custom], [specify, custom, kernels], [custom, kernels, .]]

>> Noun Phrases are: 
[Common kernels, it, custom kernels]

>> Named Entities are: 
[]


============================ Sentence 246 =============================

  Most real-world problems involve non-separable data for   which no hyperplane exists that successfully separates the   positive from negative instances in the training set. 


>> Tokens are: 
[  , real, -, world, problems, involve, non, -, separable, data,   , hyperplane, exists, successfully, separates,   , positive, negative, instances, training, set, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('real', 'ADJ'), ('-', 'PUNCT'), ('world', 'NOUN'), ('problems', 'NOUN'), ('involve', 'VERB'), ('non', 'ADJ'), ('-', 'ADJ'), ('separable', 'ADJ'), ('data', 'NOUN'), ('  ', 'SPACE'), ('hyperplane', 'NOUN'), ('exists', 'VERB'), ('successfully', 'ADV'), ('separates', 'VERB'), ('  ', 'SPACE'), ('positive', 'ADJ'), ('negative', 'ADJ'), ('instances', 'NOUN'), ('training', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('real', 'amod'), ('-', 'punct'), ('world', 'compound'), ('problems', 'nsubj'), ('involve', 'ROOT'), ('non', 'amod'), ('-', 'amod'), ('separable', 'amod'), ('data', 'dobj'), ('  ', 'pobj'), ('hyperplane', 'nsubj'), ('exists', 'relcl'), ('successfully', 'advmod'), ('separates', 'ccomp'), ('  ', 'dobj'), ('positive', 'amod'), ('negative', 'amod'), ('instances', 'pobj'), ('training', 'compound'), ('set', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , real], [real, -], [-, world], [world, problems], [problems, involve], [involve, non], [non, -], [-, separable], [separable, data], [data,   ], [  , hyperplane], [hyperplane, exists], [exists, successfully], [successfully, separates], [separates,   ], [  , positive], [positive, negative], [negative, instances], [instances, training], [training, set], [set, .]]

>> Trigrams: 
[[  , real, -], [real, -, world], [-, world, problems], [world, problems, involve], [problems, involve, non], [involve, non, -], [non, -, separable], [-, separable, data], [separable, data,   ], [data,   , hyperplane], [  , hyperplane, exists], [hyperplane, exists, successfully], [exists, successfully, separates], [successfully, separates,   ], [separates,   , positive], [  , positive, negative], [positive, negative, instances], [negative, instances, training], [instances, training, set], [training, set, .]]

>> Noun Phrases are: 
[Most real-world problems, non-separable data, no hyperplane, negative instances, the training set]

>> Named Entities are: 
[]


============================ Sentence 247 =============================

One good   solution to this inseparability problem is to map the data onto a   higher dimensional space and define a separating hyperplane   there. 


>> Tokens are: 
[good,   , solution, inseparability, problem, map, data,   , higher, dimensional, space, define, separating, hyperplane,   , .] 

>> PoS Tags are: 
[('good', 'ADJ'), ('  ', 'SPACE'), ('solution', 'NOUN'), ('inseparability', 'NOUN'), ('problem', 'NOUN'), ('map', 'VERB'), ('data', 'NOUN'), ('  ', 'SPACE'), ('higher', 'ADJ'), ('dimensional', 'ADJ'), ('space', 'NOUN'), ('define', 'VERB'), ('separating', 'VERB'), ('hyperplane', 'NOUN'), ('  ', 'SPACE'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('good', 'amod'), ('  ', 'compound'), ('solution', 'nsubj'), ('inseparability', 'compound'), ('problem', 'pobj'), ('map', 'xcomp'), ('data', 'dobj'), ('  ', 'npadvmod'), ('higher', 'amod'), ('dimensional', 'amod'), ('space', 'pobj'), ('define', 'conj'), ('separating', 'amod'), ('hyperplane', 'dobj'), ('  ', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[good,   ], [  , solution], [solution, inseparability], [inseparability, problem], [problem, map], [map, data], [data,   ], [  , higher], [higher, dimensional], [dimensional, space], [space, define], [define, separating], [separating, hyperplane], [hyperplane,   ], [  , .]]

>> Trigrams: 
[[good,   , solution], [  , solution, inseparability], [solution, inseparability, problem], [inseparability, problem, map], [problem, map, data], [map, data,   ], [data,   , higher], [  , higher, dimensional], [higher, dimensional, space], [dimensional, space, define], [space, define, separating], [define, separating, hyperplane], [separating, hyperplane,   ], [hyperplane,   , .]]

>> Noun Phrases are: 
[One good   solution, this inseparability problem, the data, a   higher dimensional space, a separating hyperplane]

>> Named Entities are: 
[('One', 'CARDINAL')]


============================ Sentence 248 =============================

This higher-dimensional space is called the transformed   feature space, as opposed to the input space occupied by the   training instances [1]. 


>> Tokens are: 
[higher, -, dimensional, space, called, transformed,   , feature, space, ,, opposed, input, space, occupied,   , training, instances, [, 1, ], .] 

>> PoS Tags are: 
[('higher', 'ADV'), ('-', 'PUNCT'), ('dimensional', 'ADJ'), ('space', 'NOUN'), ('called', 'VERB'), ('transformed', 'VERB'), ('  ', 'SPACE'), ('feature', 'NOUN'), ('space', 'NOUN'), (',', 'PUNCT'), ('opposed', 'VERB'), ('input', 'NOUN'), ('space', 'NOUN'), ('occupied', 'VERB'), ('  ', 'SPACE'), ('training', 'NOUN'), ('instances', 'NOUN'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('higher', 'advmod'), ('-', 'punct'), ('dimensional', 'amod'), ('space', 'nsubjpass'), ('called', 'ROOT'), ('transformed', 'amod'), ('  ', 'nummod'), ('feature', 'compound'), ('space', 'oprd'), (',', 'punct'), ('opposed', 'advcl'), ('input', 'compound'), ('space', 'pobj'), ('occupied', 'acl'), ('  ', 'compound'), ('training', 'compound'), ('instances', 'pobj'), ('[', 'punct'), ('1', 'appos'), (']', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[higher, -], [-, dimensional], [dimensional, space], [space, called], [called, transformed], [transformed,   ], [  , feature], [feature, space], [space, ,], [,, opposed], [opposed, input], [input, space], [space, occupied], [occupied,   ], [  , training], [training, instances], [instances, [], [[, 1], [1, ]], [], .]]

>> Trigrams: 
[[higher, -, dimensional], [-, dimensional, space], [dimensional, space, called], [space, called, transformed], [called, transformed,   ], [transformed,   , feature], [  , feature, space], [feature, space, ,], [space, ,, opposed], [,, opposed, input], [opposed, input, space], [input, space, occupied], [space, occupied,   ], [occupied,   , training], [  , training, instances], [training, instances, [], [instances, [, 1], [[, 1, ]], [1, ], .]]

>> Noun Phrases are: 
[This higher-dimensional space, the transformed   feature space, the input space, the   training instances]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 249 =============================

     Fig.10. 


>> Tokens are: 
[     , Fig.10, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.10', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'ROOT'), ('Fig.10', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.10], [Fig.10, .]]

>> Trigrams: 
[[     , Fig.10, .]]

>> Noun Phrases are: 
[Fig.10]

>> Named Entities are: 
[]


============================ Sentence 250 =============================

Maximum margin through SVM    


>> Tokens are: 
[Maximum, margin, SVM,   ] 

>> PoS Tags are: 
[('Maximum', 'ADJ'), ('margin', 'NOUN'), ('SVM', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Maximum', 'amod'), ('margin', 'nsubj'), ('SVM', 'pobj'), ('  ', 'ROOT')]

>> Bigrams: 
[[Maximum, margin], [margin, SVM], [SVM,   ]]

>> Trigrams: 
[[Maximum, margin, SVM], [margin, SVM,   ]]

>> Noun Phrases are: 
[Maximum margin, SVM]

>> Named Entities are: 
[('SVM', 'ORG')]


============================ Sentence 251 =============================

In order to get better results the selection of an appropriate   kernel function is important, since the kernel function defines   the transformed feature space in which the training set instances   Procedure InstanceBaseLearner 


>> Tokens are: 
[order, better, results, selection, appropriate,   , kernel, function, important, ,, kernel, function, defines,   , transformed, feature, space, training, set, instances,   , Procedure, InstanceBaseLearner] 

>> PoS Tags are: 
[('order', 'NOUN'), ('better', 'ADJ'), ('results', 'NOUN'), ('selection', 'NOUN'), ('appropriate', 'ADJ'), ('  ', 'SPACE'), ('kernel', 'NOUN'), ('function', 'NOUN'), ('important', 'ADJ'), (',', 'PUNCT'), ('kernel', 'NOUN'), ('function', 'NOUN'), ('defines', 'VERB'), ('  ', 'SPACE'), ('transformed', 'VERB'), ('feature', 'NOUN'), ('space', 'NOUN'), ('training', 'NOUN'), ('set', 'VERB'), ('instances', 'NOUN'), ('  ', 'SPACE'), ('Procedure', 'PROPN'), ('InstanceBaseLearner', 'PROPN')] 

>> Dependency Tags are: 
[('order', 'pobj'), ('better', 'amod'), ('results', 'dobj'), ('selection', 'dobj'), ('appropriate', 'amod'), ('  ', 'compound'), ('kernel', 'compound'), ('function', 'pobj'), ('important', 'acomp'), (',', 'punct'), ('kernel', 'compound'), ('function', 'nsubj'), ('defines', 'advcl'), ('  ', 'dobj'), ('transformed', 'amod'), ('feature', 'compound'), ('space', 'dobj'), ('training', 'nsubj'), ('set', 'relcl'), ('instances', 'dobj'), ('  ', 'dep'), ('Procedure', 'compound'), ('InstanceBaseLearner', 'dobj')]

>> Bigrams: 
[[order, better], [better, results], [results, selection], [selection, appropriate], [appropriate,   ], [  , kernel], [kernel, function], [function, important], [important, ,], [,, kernel], [kernel, function], [function, defines], [defines,   ], [  , transformed], [transformed, feature], [feature, space], [space, training], [training, set], [set, instances], [instances,   ], [  , Procedure], [Procedure, InstanceBaseLearner]]

>> Trigrams: 
[[order, better, results], [better, results, selection], [results, selection, appropriate], [selection, appropriate,   ], [appropriate,   , kernel], [  , kernel, function], [kernel, function, important], [function, important, ,], [important, ,, kernel], [,, kernel, function], [kernel, function, defines], [function, defines,   ], [defines,   , transformed], [  , transformed, feature], [transformed, feature, space], [feature, space, training], [space, training, set], [training, set, instances], [set, instances,   ], [instances,   , Procedure], [  , Procedure, InstanceBaseLearner]]

>> Noun Phrases are: 
[order, better results, the selection, an appropriate   kernel function, the kernel function, the transformed feature space, the training, instances,   Procedure InstanceBaseLearner]

>> Named Entities are: 
[]


============================ Sentence 252 =============================

(Testing Instances). 


>> Tokens are: 
[(, Testing, Instances, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Testing', 'PROPN'), ('Instances', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Testing', 'compound'), ('Instances', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, Testing], [Testing, Instances], [Instances, )], [), .]]

>> Trigrams: 
[[(, Testing, Instances], [Testing, Instances, )], [Instances, ), .]]

>> Noun Phrases are: 
[(Testing Instances]

>> Named Entities are: 
[]


============================ Sentence 253 =============================

    for each testing instance      {   find the k most nearest instances of the   training set according to a distance metric        Resulting Class: most frequent class        label of the k nearest instances      }      Initialize an Empty Bayesian Network G containing n   nodes (i.e.--, a BN with n nodes but no edges). 


>> Tokens are: 
[    , testing, instance,      , {,   , find, k, nearest, instances,   , training, set, according, distance, metric,        , Resulting, Class, :, frequent, class,        , label, k, nearest, instances,      , },      , Initialize, Bayesian, Network, G, containing, n,   , nodes, (, i.e.--, ,, BN, n, nodes, edges, ), .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('testing', 'NOUN'), ('instance', 'NOUN'), ('     ', 'SPACE'), ('{', 'PUNCT'), ('  ', 'SPACE'), ('find', 'VERB'), ('k', 'X'), ('nearest', 'ADJ'), ('instances', 'NOUN'), ('  ', 'SPACE'), ('training', 'NOUN'), ('set', 'NOUN'), ('according', 'VERB'), ('distance', 'NOUN'), ('metric', 'ADJ'), ('       ', 'SPACE'), ('Resulting', 'PROPN'), ('Class', 'NOUN'), (':', 'PUNCT'), ('frequent', 'ADJ'), ('class', 'NOUN'), ('       ', 'SPACE'), ('label', 'NOUN'), ('k', 'X'), ('nearest', 'ADJ'), ('instances', 'NOUN'), ('     ', 'SPACE'), ('}', 'PUNCT'), ('     ', 'SPACE'), ('Initialize', 'VERB'), ('Bayesian', 'PROPN'), ('Network', 'PROPN'), ('G', 'PROPN'), ('containing', 'VERB'), ('n', 'NOUN'), ('  ', 'SPACE'), ('nodes', 'NOUN'), ('(', 'PUNCT'), ('i.e.--', 'X'), (',', 'PUNCT'), ('BN', 'NOUN'), ('n', 'NUM'), ('nodes', 'NOUN'), ('edges', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'nsubj'), ('testing', 'compound'), ('instance', 'pobj'), ('     ', 'pobj'), ('{', 'punct'), ('  ', 'nsubj'), ('find', 'ROOT'), ('k', 'meta'), ('nearest', 'amod'), ('instances', 'dobj'), ('  ', 'compound'), ('training', 'pobj'), ('set', 'acl'), ('according', 'prep'), ('distance', 'pobj'), ('metric', 'amod'), ('       ', 'compound'), ('Resulting', 'compound'), ('Class', 'dobj'), (':', 'punct'), ('frequent', 'amod'), ('class', 'compound'), ('       ', 'compound'), ('label', 'appos'), ('k', 'dep'), ('nearest', 'amod'), ('instances', 'pobj'), ('     ', 'conj'), ('}', 'punct'), ('     ', 'nsubj'), ('Initialize', 'acl'), ('Bayesian', 'compound'), ('Network', 'compound'), ('G', 'dobj'), ('containing', 'acl'), ('n', 'dobj'), ('  ', 'nummod'), ('nodes', 'dobj'), ('(', 'punct'), ('i.e.--', 'punct'), (',', 'punct'), ('BN', 'appos'), ('n', 'cc'), ('nodes', 'conj'), ('edges', 'conj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[    , testing], [testing, instance], [instance,      ], [     , {], [{,   ], [  , find], [find, k], [k, nearest], [nearest, instances], [instances,   ], [  , training], [training, set], [set, according], [according, distance], [distance, metric], [metric,        ], [       , Resulting], [Resulting, Class], [Class, :], [:, frequent], [frequent, class], [class,        ], [       , label], [label, k], [k, nearest], [nearest, instances], [instances,      ], [     , }], [},      ], [     , Initialize], [Initialize, Bayesian], [Bayesian, Network], [Network, G], [G, containing], [containing, n], [n,   ], [  , nodes], [nodes, (], [(, i.e.--], [i.e.--, ,], [,, BN], [BN, n], [n, nodes], [nodes, edges], [edges, )], [), .]]

>> Trigrams: 
[[    , testing, instance], [testing, instance,      ], [instance,      , {], [     , {,   ], [{,   , find], [  , find, k], [find, k, nearest], [k, nearest, instances], [nearest, instances,   ], [instances,   , training], [  , training, set], [training, set, according], [set, according, distance], [according, distance, metric], [distance, metric,        ], [metric,        , Resulting], [       , Resulting, Class], [Resulting, Class, :], [Class, :, frequent], [:, frequent, class], [frequent, class,        ], [class,        , label], [       , label, k], [label, k, nearest], [k, nearest, instances], [nearest, instances,      ], [instances,      , }], [     , },      ], [},      , Initialize], [     , Initialize, Bayesian], [Initialize, Bayesian, Network], [Bayesian, Network, G], [Network, G, containing], [G, containing, n], [containing, n,   ], [n,   , nodes], [  , nodes, (], [nodes, (, i.e.--], [(, i.e.--, ,], [i.e.--, ,, BN], [,, BN, n], [BN, n, nodes], [n, nodes, edges], [nodes, edges, )], [edges, ), .]]

>> Noun Phrases are: 
[each testing instance, the k most nearest instances, the   training, a distance, metric        Resulting Class, most frequent class        label, the k nearest instances, an Empty Bayesian Network G, n,   nodes, a BN, nodes, no edges]

>> Named Entities are: 
[]


============================ Sentence 254 =============================

   (1) Evaluate the score of G: Score (G) (2) G’ = 


>> Tokens are: 
[   , (, 1, ), Evaluate, score, G, :, Score, (, G, ), (, 2, ), G, ’, =] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('(', 'PUNCT'), ('1', 'X'), (')', 'PUNCT'), ('Evaluate', 'VERB'), ('score', 'NOUN'), ('G', 'NOUN'), (':', 'PUNCT'), ('Score', 'NOUN'), ('(', 'PUNCT'), ('G', 'NOUN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('G', 'NOUN'), ('’', 'PUNCT'), ('=', 'NOUN')] 

>> Dependency Tags are: 
[('   ', 'meta'), ('(', 'punct'), ('1', 'meta'), (')', 'punct'), ('Evaluate', 'ROOT'), ('score', 'dobj'), ('G', 'pobj'), (':', 'punct'), ('Score', 'nmod'), ('(', 'punct'), ('G', 'appos'), (')', 'punct'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('G', 'punct'), ('’', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[   , (], [(, 1], [1, )], [), Evaluate], [Evaluate, score], [score, G], [G, :], [:, Score], [Score, (], [(, G], [G, )], [), (], [(, 2], [2, )], [), G], [G, ’], [’, =]]

>> Trigrams: 
[[   , (, 1], [(, 1, )], [1, ), Evaluate], [), Evaluate, score], [Evaluate, score, G], [score, G, :], [G, :, Score], [:, Score, (], [Score, (, G], [(, G, )], [G, ), (], [), (, 2], [(, 2, )], [2, ), G], [), G, ’], [G, ’, =]]

>> Noun Phrases are: 
[the score, G, Score (G]

>> Named Entities are: 
[('1', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 255 =============================

G (3) for i = 1 to n do (4) for j = 1 to n do (5) if i • j then (6) if there is no edge between the nodes i and  j in G• then. 


>> Tokens are: 
[G, (, 3, ), =, 1, n, (, 4, ), j, =, 1, n, (, 5, ), •, j, (, 6, ), edge, nodes,  , j, G•, .] 

>> PoS Tags are: 
[('G', 'NOUN'), ('(', 'PUNCT'), ('3', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('1', 'NUM'), ('n', 'CCONJ'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), ('j', 'DET'), ('=', 'SYM'), ('1', 'NUM'), ('n', 'CCONJ'), ('(', 'PUNCT'), ('5', 'X'), (')', 'PUNCT'), ('•', 'VERB'), ('j', 'ADV'), ('(', 'PUNCT'), ('6', 'X'), (')', 'PUNCT'), ('edge', 'NOUN'), ('nodes', 'NOUN'), (' ', 'SPACE'), ('j', 'NOUN'), ('G•', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('G', 'nsubj'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), ('=', 'punct'), ('1', 'prep'), ('n', 'appos'), ('(', 'punct'), ('4', 'npadvmod'), (')', 'punct'), ('j', 'pobj'), ('=', 'quantmod'), ('1', 'prep'), ('n', 'cc'), ('(', 'punct'), ('5', 'parataxis'), (')', 'punct'), ('•', 'advcl'), ('j', 'dep'), ('(', 'punct'), ('6', 'parataxis'), (')', 'punct'), ('edge', 'attr'), ('nodes', 'pobj'), (' ', 'conj'), ('j', 'dep'), ('G•', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[G, (], [(, 3], [3, )], [), =], [=, 1], [1, n], [n, (], [(, 4], [4, )], [), j], [j, =], [=, 1], [1, n], [n, (], [(, 5], [5, )], [), •], [•, j], [j, (], [(, 6], [6, )], [), edge], [edge, nodes], [nodes,  ], [ , j], [j, G•], [G•, .]]

>> Trigrams: 
[[G, (, 3], [(, 3, )], [3, ), =], [), =, 1], [=, 1, n], [1, n, (], [n, (, 4], [(, 4, )], [4, ), j], [), j, =], [j, =, 1], [=, 1, n], [1, n, (], [n, (, 5], [(, 5, )], [5, ), •], [), •, j], [•, j, (], [j, (, 6], [(, 6, )], [6, ), edge], [), edge, nodes], [edge, nodes,  ], [nodes,  , j], [ , j, G•], [j, G•, .]]

>> Noun Phrases are: 
[G, i, i, no edge, the nodes, i, G•]

>> Named Entities are: 
[('3', 'CARDINAL'), ('1', 'CARDINAL'), ('4', 'CARDINAL'), ('1', 'CARDINAL'), ('5', 'CARDINAL'), ('G•', 'ORG')]


============================ Sentence 256 =============================

 (7) 


>> Tokens are: 
[ , (, 7, )] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('(', 'PUNCT'), ('7', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('(', 'punct'), ('7', 'appos'), (')', 'punct')]

>> Bigrams: 
[[ , (], [(, 7], [7, )]]

>> Trigrams: 
[[ , (, 7], [(, 7, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 257 =============================

Modify G’ by adding an edge between the nodes i and j in G• such that i is a   parent of j: (i • j)    (8) if the resulting G’ is a DAG then (9) if (Score(G’) 


>> Tokens are: 
[Modify, G, ’, adding, edge, nodes, j, G•,   , parent, j, :, (, •, j, ),    , (, 8), resulting, G, ’, DAG, (, 9, ), (, Score(G, ’, )] 

>> PoS Tags are: 
[('Modify', 'VERB'), ('G', 'NOUN'), ('’', 'PUNCT'), ('adding', 'VERB'), ('edge', 'NOUN'), ('nodes', 'NOUN'), ('j', 'NOUN'), ('G•', 'VERB'), ('  ', 'SPACE'), ('parent', 'NOUN'), ('j', 'NOUN'), (':', 'PUNCT'), ('(', 'PUNCT'), ('•', 'VERB'), ('j', 'NOUN'), (')', 'PUNCT'), ('   ', 'SPACE'), ('(', 'PUNCT'), ('8)', 'NUM'), ('resulting', 'VERB'), ('G', 'NOUN'), ('’', 'PUNCT'), ('DAG', 'PROPN'), ('(', 'PUNCT'), ('9', 'X'), (')', 'PUNCT'), ('(', 'PUNCT'), ('Score(G', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Modify', 'amod'), ('G', 'dobj'), ('’', 'punct'), ('adding', 'pcomp'), ('edge', 'dobj'), ('nodes', 'pobj'), ('j', 'conj'), ('G•', 'pobj'), ('  ', 'nummod'), ('parent', 'attr'), ('j', 'pobj'), (':', 'punct'), ('(', 'punct'), ('•', 'parataxis'), ('j', 'npadvmod'), (')', 'punct'), ('   ', 'ROOT'), ('(', 'punct'), ('8)', 'appos'), ('resulting', 'amod'), ('G', 'nsubj'), ('’', 'punct'), ('DAG', 'attr'), ('(', 'punct'), ('9', 'appos'), (')', 'punct'), ('(', 'punct'), ('Score(G', 'advcl'), ('’', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Modify, G], [G, ’], [’, adding], [adding, edge], [edge, nodes], [nodes, j], [j, G•], [G•,   ], [  , parent], [parent, j], [j, :], [:, (], [(, •], [•, j], [j, )], [),    ], [   , (], [(, 8)], [8), resulting], [resulting, G], [G, ’], [’, DAG], [DAG, (], [(, 9], [9, )], [), (], [(, Score(G], [Score(G, ’], [’, )]]

>> Trigrams: 
[[Modify, G, ’], [G, ’, adding], [’, adding, edge], [adding, edge, nodes], [edge, nodes, j], [nodes, j, G•], [j, G•,   ], [G•,   , parent], [  , parent, j], [parent, j, :], [j, :, (], [:, (, •], [(, •, j], [•, j, )], [j, ),    ], [),    , (], [   , (, 8)], [(, 8), resulting], [8), resulting, G], [resulting, G, ’], [G, ’, DAG], [’, DAG, (], [DAG, (, 9], [(, 9, )], [9, ), (], [), (, Score(G], [(, Score(G, ’], [Score(G, ’, )]]

>> Noun Phrases are: 
[G, an edge, the nodes, i, j, i, a   parent, j, i, the resulting G, a DAG]

>> Named Entities are: 
[('G•', 'NORP'), ('8)', 'CARDINAL'), ('DAG', 'ORG'), ('9', 'CARDINAL')]


============================ Sentence 258 =============================

> Score (G)) 


>> Tokens are: 
[>, Score, (, G, ), )] 

>> PoS Tags are: 
[('>', 'PUNCT'), ('Score', 'NOUN'), ('(', 'PUNCT'), ('G', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('>', 'dep'), ('Score', 'ROOT'), ('(', 'punct'), ('G', 'appos'), (')', 'punct'), (')', 'punct')]

>> Bigrams: 
[[>, Score], [Score, (], [(, G], [G, )], [), )]]

>> Trigrams: 
[[>, Score, (], [Score, (, G], [(, G, )], [G, ), )]]

>> Noun Phrases are: 
[> Score, (G]

>> Named Entities are: 
[]


============================ Sentence 259 =============================

then (10) G = G’ (11) end if (12) end if (13) end if (14) end if (15) G’ = 


>> Tokens are: 
[(, 10, ), G, =, G, ’, (, 11, ), end, (, 12, ), end, (, 13, ), end, (, 14, ), end, (, 15, ), G, ’, =] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('10', 'X'), (')', 'PUNCT'), ('G', 'PROPN'), ('=', 'SYM'), ('G', 'NOUN'), ('’', 'PUNCT'), ('(', 'PUNCT'), ('11', 'NUM'), (')', 'PUNCT'), ('end', 'NOUN'), ('(', 'PUNCT'), ('12', 'NUM'), (')', 'PUNCT'), ('end', 'NOUN'), ('(', 'PUNCT'), ('13', 'NUM'), (')', 'PUNCT'), ('end', 'NOUN'), ('(', 'PUNCT'), ('14', 'NUM'), (')', 'PUNCT'), ('end', 'NOUN'), ('(', 'PUNCT'), ('15', 'X'), (')', 'PUNCT'), ('G', 'NOUN'), ('’', 'PUNCT'), ('=', 'NOUN')] 

>> Dependency Tags are: 
[('(', 'punct'), ('10', 'meta'), (')', 'punct'), ('G', 'nmod'), ('=', 'punct'), ('G', 'nmod'), ('’', 'punct'), ('(', 'punct'), ('11', 'appos'), (')', 'punct'), ('end', 'ROOT'), ('(', 'punct'), ('12', 'meta'), (')', 'punct'), ('end', 'advcl'), ('(', 'punct'), ('13', 'meta'), (')', 'punct'), ('end', 'advcl'), ('(', 'punct'), ('14', 'meta'), (')', 'punct'), ('end', 'advcl'), ('(', 'punct'), ('15', 'meta'), (')', 'punct'), ('G', 'advcl'), ('’', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[(, 10], [10, )], [), G], [G, =], [=, G], [G, ’], [’, (], [(, 11], [11, )], [), end], [end, (], [(, 12], [12, )], [), end], [end, (], [(, 13], [13, )], [), end], [end, (], [(, 14], [14, )], [), end], [end, (], [(, 15], [15, )], [), G], [G, ’], [’, =]]

>> Trigrams: 
[[(, 10, )], [10, ), G], [), G, =], [G, =, G], [=, G, ’], [G, ’, (], [’, (, 11], [(, 11, )], [11, ), end], [), end, (], [end, (, 12], [(, 12, )], [12, ), end], [), end, (], [end, (, 13], [(, 13, )], [13, ), end], [), end, (], [end, (, 14], [(, 14, )], [14, ), end], [), end, (], [end, (, 15], [(, 15, )], [15, ), G], [), G, ’], [G, ’, =]]

>> Noun Phrases are: 
[then (10) G = G’ (11) end]

>> Named Entities are: 
[('10', 'CARDINAL'), ('12', 'CARDINAL'), ('13', 'CARDINAL'), ('14', 'CARDINAL'), ('15', 'CARDINAL')]


============================ Sentence 260 =============================

G (16) end for  (17) end for  f(x) 


>> Tokens are: 
[G, (, 16, ), end,  , (, 17, ), end,  , f(x, )] 

>> PoS Tags are: 
[('G', 'NOUN'), ('(', 'PUNCT'), ('16', 'NUM'), (')', 'PUNCT'), ('end', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('17', 'NUM'), (')', 'PUNCT'), ('end', 'NOUN'), (' ', 'SPACE'), ('f(x', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('G', 'nsubj'), ('(', 'punct'), ('16', 'appos'), (')', 'punct'), ('end', 'ROOT'), (' ', 'pobj'), ('(', 'punct'), ('17', 'appos'), (')', 'punct'), ('end', 'conj'), (' ', 'compound'), ('f(x', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[G, (], [(, 16], [16, )], [), end], [end,  ], [ , (], [(, 17], [17, )], [), end], [end,  ], [ , f(x], [f(x, )]]

>> Trigrams: 
[[G, (, 16], [(, 16, )], [16, ), end], [), end,  ], [end,  , (], [ , (, 17], [(, 17, )], [17, ), end], [), end,  ], [end,  , f(x], [ , f(x, )]]

>> Noun Phrases are: 
[G, end,  f(x]

>> Named Entities are: 
[('17', 'CARDINAL')]


============================ Sentence 261 =============================

  http://scikit-learn.org/stable/modules/svm.html#svm-classification 


>> Tokens are: 
[  , http://scikit-learn.org/stable/modules/svm.html#svm-classification] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('http://scikit-learn.org/stable/modules/svm.html#svm-classification', 'NOUN')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('http://scikit-learn.org/stable/modules/svm.html#svm-classification', 'ROOT')]

>> Bigrams: 
[[  , http://scikit-learn.org/stable/modules/svm.html#svm-classification]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[  http://scikit-learn.org/stable/modules/svm.html#svm-classification]

>> Named Entities are: 
[]


============================ Sentence 262 =============================

http://scikit-learn.org/stable/modules/svm.html#svm-regression http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection   ISSN: 2229-6956(ONLINE) 


>> Tokens are: 
[http://scikit-learn.org/stable/modules/svm.html#svm-regression, http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection,   , ISSN, :, 2229, -, 6956(ONLINE, )] 

>> PoS Tags are: 
[('http://scikit-learn.org/stable/modules/svm.html#svm-regression', 'NOUN'), ('http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection', 'NOUN'), ('  ', 'SPACE'), ('ISSN', 'NOUN'), (':', 'PUNCT'), ('2229', 'NUM'), ('-', 'SYM'), ('6956(ONLINE', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('http://scikit-learn.org/stable/modules/svm.html#svm-regression', 'compound'), ('http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection', 'ROOT'), ('  ', 'appos'), ('ISSN', 'appos'), (':', 'punct'), ('2229', 'npadvmod'), ('-', 'punct'), ('6956(ONLINE', 'prep'), (')', 'punct')]

>> Bigrams: 
[[http://scikit-learn.org/stable/modules/svm.html#svm-regression, http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection], [http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection,   ], [  , ISSN], [ISSN, :], [:, 2229], [2229, -], [-, 6956(ONLINE], [6956(ONLINE, )]]

>> Trigrams: 
[[http://scikit-learn.org/stable/modules/svm.html#svm-regression, http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection,   ], [http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection,   , ISSN], [  , ISSN, :], [ISSN, :, 2229], [:, 2229, -], [2229, -, 6956(ONLINE], [-, 6956(ONLINE, )]]

>> Noun Phrases are: 
[http://scikit-learn.org/stable/modules/svm.html#svm-regression http://scikit-learn.org/stable/modules/svm.html#svm-outlier-detection, ISSN]

>> Named Entities are: 
[('ISSN', 'ORG'), ('2229-6956(ONLINE', 'CARDINAL')]


============================ Sentence 263 =============================

                                                                                                                            ICTACT JOURNAL ON SOFT COMPUTING, APRIL 2015, VOLUME: 05, ISSUE: 03   951   will be classified. 


>> Tokens are: 
[                                                                                                                            , ICTACT, JOURNAL, SOFT, COMPUTING, ,, APRIL, 2015, ,, VOLUME, :, 05, ,, ISSUE, :, 03,   , 951,   , classified, .] 

>> PoS Tags are: 
[('                                                                                                                            ', 'SPACE'), ('ICTACT', 'PROPN'), ('JOURNAL', 'PROPN'), ('SOFT', 'ADJ'), ('COMPUTING', 'NOUN'), (',', 'PUNCT'), ('APRIL', 'PROPN'), ('2015', 'NUM'), (',', 'PUNCT'), ('VOLUME', 'NOUN'), (':', 'PUNCT'), ('05', 'NUM'), (',', 'PUNCT'), ('ISSUE', 'NOUN'), (':', 'PUNCT'), ('03', 'NUM'), ('  ', 'SPACE'), ('951', 'NUM'), ('  ', 'SPACE'), ('classified', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('                                                                                                                            ', 'compound'), ('ICTACT', 'compound'), ('JOURNAL', 'nsubjpass'), ('SOFT', 'amod'), ('COMPUTING', 'pobj'), (',', 'punct'), ('APRIL', 'appos'), ('2015', 'nummod'), (',', 'punct'), ('VOLUME', 'appos'), (':', 'punct'), ('05', 'appos'), (',', 'punct'), ('ISSUE', 'appos'), (':', 'punct'), ('03', 'nummod'), ('  ', 'appos'), ('951', 'nummod'), ('  ', 'appos'), ('classified', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[                                                                                                                            , ICTACT], [ICTACT, JOURNAL], [JOURNAL, SOFT], [SOFT, COMPUTING], [COMPUTING, ,], [,, APRIL], [APRIL, 2015], [2015, ,], [,, VOLUME], [VOLUME, :], [:, 05], [05, ,], [,, ISSUE], [ISSUE, :], [:, 03], [03,   ], [  , 951], [951,   ], [  , classified], [classified, .]]

>> Trigrams: 
[[                                                                                                                            , ICTACT, JOURNAL], [ICTACT, JOURNAL, SOFT], [JOURNAL, SOFT, COMPUTING], [SOFT, COMPUTING, ,], [COMPUTING, ,, APRIL], [,, APRIL, 2015], [APRIL, 2015, ,], [2015, ,, VOLUME], [,, VOLUME, :], [VOLUME, :, 05], [:, 05, ,], [05, ,, ISSUE], [,, ISSUE, :], [ISSUE, :, 03], [:, 03,   ], [03,   , 951], [  , 951,   ], [951,   , classified], [  , classified, .]]

>> Noun Phrases are: 
[                                                                                                                            ICTACT JOURNAL, SOFT COMPUTING, APRIL, VOLUME, ISSUE]

>> Named Entities are: 
[('APRIL 2015', 'DATE'), ('05', 'CARDINAL'), ('03', 'CARDINAL'), ('951', 'CARDINAL')]


============================ Sentence 264 =============================

Some new kernels are being proposed by   researchers but given bellow is list of some popular kernels:    Linear:   j T iji XXXXK ,     


>> Tokens are: 
[new, kernels, proposed,   , researchers, given, bellow, list, popular, kernels, :,   , , Linear, :, , , j, T, iji, XXXXK, , ,,    ] 

>> PoS Tags are: 
[('new', 'ADJ'), ('kernels', 'NOUN'), ('proposed', 'VERB'), ('  ', 'SPACE'), ('researchers', 'NOUN'), ('given', 'VERB'), ('bellow', 'NOUN'), ('list', 'NOUN'), ('popular', 'ADJ'), ('kernels', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('\uf0b7', 'PUNCT'), ('Linear', 'NOUN'), (':', 'PUNCT'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('j', 'DET'), ('T', 'PROPN'), ('iji', 'VERB'), ('XXXXK', 'NOUN'), ('\uf03d', 'PROPN'), (',', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('new', 'amod'), ('kernels', 'nsubjpass'), ('proposed', 'ROOT'), ('  ', 'compound'), ('researchers', 'pobj'), ('given', 'prep'), ('bellow', 'dobj'), ('list', 'attr'), ('popular', 'amod'), ('kernels', 'pobj'), (':', 'punct'), ('  ', 'nsubj'), ('\uf0b7', 'punct'), ('Linear', 'appos'), (':', 'punct'), ('\uf028', 'nmod'), ('\uf029', 'compound'), ('j', 'det'), ('T', 'appos'), ('iji', 'conj'), ('XXXXK', 'dobj'), ('\uf03d', 'advmod'), (',', 'punct'), ('   ', 'conj')]

>> Bigrams: 
[[new, kernels], [kernels, proposed], [proposed,   ], [  , researchers], [researchers, given], [given, bellow], [bellow, list], [list, popular], [popular, kernels], [kernels, :], [:,   ], [  , ], [, Linear], [Linear, :], [:, ], [, ], [, j], [j, T], [T, iji], [iji, XXXXK], [XXXXK, ], [, ,], [,,    ]]

>> Trigrams: 
[[new, kernels, proposed], [kernels, proposed,   ], [proposed,   , researchers], [  , researchers, given], [researchers, given, bellow], [given, bellow, list], [bellow, list, popular], [list, popular, kernels], [popular, kernels, :], [kernels, :,   ], [:,   , ], [  , , Linear], [, Linear, :], [Linear, :, ], [:, , ], [, , j], [, j, T], [j, T, iji], [T, iji, XXXXK], [iji, XXXXK, ], [XXXXK, , ,], [, ,,    ]]

>> Noun Phrases are: 
[Some new kernels,   researchers, bellow, list, some popular kernels, Linear,   j T, XXXXK]

>> Named Entities are: 
[('\uf0b7', 'CARDINAL')]


============================ Sentence 265 =============================

 Polynomial:     0,,   djTiji rXXXXK    Radial Basis Function (RBF):     0,exp, 2      


>> Tokens are: 
[, Polynomial, :, , , , , 0, ,, ,, , , djTiji, rXXXXK,   , , Radial, Basis, Function, (, RBF, ):,   , , , 0,exp, ,, 2,  , , ,  ] 

>> PoS Tags are: 
[('\uf0b7', 'X'), ('Polynomial', 'PROPN'), (':', 'PUNCT'), ('\uf028', 'ADJ'), ('\uf029', 'PROPN'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('0', 'NUM'), (',', 'PUNCT'), (',', 'PUNCT'), ('\uf03e\uf02b\uf03d', 'VERB'), ('\uf067\uf067', 'ADV'), ('djTiji', 'NOUN'), ('rXXXXK', 'NOUN'), ('  ', 'SPACE'), ('\uf0b7', 'NOUN'), ('Radial', 'PROPN'), ('Basis', 'PROPN'), ('Function', 'PROPN'), ('(', 'PUNCT'), ('RBF', 'PROPN'), ('):', 'PUNCT'), ('  ', 'SPACE'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('0,exp', 'PROPN'), (',', 'PUNCT'), ('2', 'NUM'), (' ', 'SPACE'), ('\uf03e\uf0f7', 'NOUN'), ('\uf0f8', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\uf0b7', 'nsubj'), ('Polynomial', 'nmod'), (':', 'punct'), ('\uf028', 'appos'), ('\uf029', 'compound'), ('\uf028', 'nmod'), ('\uf029', 'appos'), ('0', 'appos'), (',', 'punct'), (',', 'punct'), ('\uf03e\uf02b\uf03d', 'intj'), ('\uf067\uf067', 'advmod'), ('djTiji', 'npadvmod'), ('rXXXXK', 'dep'), ('  ', 'nmod'), ('\uf0b7', 'compound'), ('Radial', 'compound'), ('Basis', 'compound'), ('Function', 'dobj'), ('(', 'punct'), ('RBF', 'appos'), ('):', 'punct'), ('  ', 'nummod'), ('\uf028', 'appos'), ('\uf029', 'compound'), ('0,exp', 'appos'), (',', 'punct'), ('2', 'nummod'), (' ', 'compound'), ('\uf03e\uf0f7', 'compound'), ('\uf0f8', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[, Polynomial], [Polynomial, :], [:, ], [, ], [, ], [, ], [, 0], [0, ,], [,, ,], [,, ], [, ], [, djTiji], [djTiji, rXXXXK], [rXXXXK,   ], [  , ], [, Radial], [Radial, Basis], [Basis, Function], [Function, (], [(, RBF], [RBF, ):], [):,   ], [  , ], [, ], [, 0,exp], [0,exp, ,], [,, 2], [2,  ], [ , ], [, ], [,  ]]

>> Trigrams: 
[[, Polynomial, :], [Polynomial, :, ], [:, , ], [, , ], [, , ], [, , 0], [, 0, ,], [0, ,, ,], [,, ,, ], [,, , ], [, , djTiji], [, djTiji, rXXXXK], [djTiji, rXXXXK,   ], [rXXXXK,   , ], [  , , Radial], [, Radial, Basis], [Radial, Basis, Function], [Basis, Function, (], [Function, (, RBF], [(, RBF, ):], [RBF, ):,   ], [):,   , ], [  , , ], [, , 0,exp], [, 0,exp, ,], [0,exp, ,, 2], [,, 2,  ], [2,  , ], [ , , ], [, ,  ]]

>> Noun Phrases are: 
[  ,    Radial Basis Function, RBF, ]

>> Named Entities are: 
[('\uf029', 'ORG'), ('\uf0b7 Radial Basis Function (', 'ORG'), ('\uf029 0,exp', 'PERSON'), ('2', 'CARDINAL')]


============================ Sentence 266 =============================

 


>> Tokens are: 
[] 

>> PoS Tags are: 
[('\uf0f6', 'PROPN')] 

>> Dependency Tags are: 
[('\uf0f6', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 267 =============================

     


>> Tokens are: 
[, ,  , , ] 

>> PoS Tags are: 
[('\uf0e7', 'PROPN'), ('\uf0e8', 'PROPN'), (' ', 'SPACE'), ('\uf0e6', 'NOUN'), ('\uf02d\uf02d\uf03d', 'PUNCT')] 

>> Dependency Tags are: 
[('\uf0e7', 'compound'), ('\uf0e8', 'ROOT'), (' ', 'appos'), ('\uf0e6', 'appos'), ('\uf02d\uf02d\uf03d', 'punct')]

>> Bigrams: 
[[, ], [,  ], [ , ], [, ]]

>> Trigrams: 
[[, ,  ], [,  , ], [ , , ]]

>> Noun Phrases are: 
[ , ]

>> Named Entities are: 
[('\uf0e7', 'GPE'), ('\uf0e6 \uf02d\uf02d\uf03d', 'ORG')]


============================ Sentence 268 =============================

 jiji XXXXK     Sigmoid:    rXXXXK jTiji  tanh,   Here dr  and ,  are the kernel parameters. 


>> Tokens are: 
[, jiji, XXXXK,    , , Sigmoid, :, , , , rXXXXK, jTiji, , tanh, ,,   , dr,  , ,, ,  , kernel, parameters, .] 

>> PoS Tags are: 
[('\uf067\uf067', 'ADJ'), ('jiji', 'NOUN'), ('XXXXK', 'PROPN'), ('   ', 'SPACE'), ('\uf0b7', 'X'), ('Sigmoid', 'PROPN'), (':', 'PUNCT'), ('\uf028', 'NOUN'), ('\uf029', 'PROPN'), ('\uf028', 'ADJ'), ('\uf029rXXXXK', 'PROPN'), ('jTiji', 'PROPN'), ('\uf02b\uf03d', 'ADJ'), ('\uf067tanh', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('dr', 'VERB'), (' ', 'SPACE'), (',', 'PUNCT'), ('\uf067', 'PROPN'), (' ', 'SPACE'), ('kernel', 'NOUN'), ('parameters', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\uf067\uf067', 'amod'), ('jiji', 'compound'), ('XXXXK', 'nsubj'), ('   ', 'nummod'), ('\uf0b7', 'punct'), ('Sigmoid', 'appos'), (':', 'punct'), ('\uf028', 'nmod'), ('\uf029', 'nmod'), ('\uf028', 'amod'), ('\uf029rXXXXK', 'compound'), ('jTiji', 'nmod'), ('\uf02b\uf03d', 'amod'), ('\uf067tanh', 'appos'), (',', 'punct'), ('  ', 'appos'), ('dr', 'prep'), (' ', 'pobj'), (',', 'punct'), ('\uf067', 'nmod'), (' ', 'nsubj'), ('kernel', 'compound'), ('parameters', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[, jiji], [jiji, XXXXK], [XXXXK,    ], [   , ], [, Sigmoid], [Sigmoid, :], [:, ], [, ], [, ], [, rXXXXK], [rXXXXK, jTiji], [jTiji, ], [, tanh], [tanh, ,], [,,   ], [  , dr], [dr,  ], [ , ,], [,, ], [,  ], [ , kernel], [kernel, parameters], [parameters, .]]

>> Trigrams: 
[[, jiji, XXXXK], [jiji, XXXXK,    ], [XXXXK,    , ], [   , , Sigmoid], [, Sigmoid, :], [Sigmoid, :, ], [:, , ], [, , ], [, , rXXXXK], [, rXXXXK, jTiji], [rXXXXK, jTiji, ], [jTiji, , tanh], [, tanh, ,], [tanh, ,,   ], [,,   , dr], [  , dr,  ], [dr,  , ,], [ , ,, ], [,, ,  ], [,  , kernel], [ , kernel, parameters], [kernel, parameters, .]]

>> Noun Phrases are: 
[ jiji XXXXK,  Sigmoid,    rXXXXK jTiji  tanh, the kernel parameters]

>> Named Entities are: 
[('\uf029', 'ORG'), ('jTiji \uf02b\uf03d', 'PERSON')]


============================ Sentence 269 =============================

Where, iX is a   training vector and mapped into a high dimensional space by the  function  and    jji XXXK ,  is known as kernel function. 


>> Tokens are: 
[,, iX,   , training, vector, mapped, high, dimensional, space,  , function, , , , , jji, XXXK, , ,,  , known, kernel, function, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('iX', 'PROPN'), ('  ', 'SPACE'), ('training', 'NOUN'), ('vector', 'NOUN'), ('mapped', 'VERB'), ('high', 'ADJ'), ('dimensional', 'ADJ'), ('space', 'NOUN'), (' ', 'SPACE'), ('function', 'NOUN'), ('\uf066', 'PROPN'), ('\uf028', 'ADJ'), ('\uf029', 'PROPN'), ('\uf028', 'ADJ'), ('\uf029jji', 'NOUN'), ('XXXK', 'PROPN'), ('\uf066\uf0ba', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('known', 'VERB'), ('kernel', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('iX', 'nsubj'), ('  ', 'compound'), ('training', 'compound'), ('vector', 'attr'), ('mapped', 'conj'), ('high', 'amod'), ('dimensional', 'amod'), ('space', 'pobj'), (' ', 'compound'), ('function', 'compound'), ('\uf066', 'pobj'), ('\uf028', 'amod'), ('\uf029', 'nmod'), ('\uf028', 'amod'), ('\uf029jji', 'compound'), ('XXXK', 'compound'), ('\uf066\uf0ba', 'conj'), (',', 'punct'), (' ', 'nsubjpass'), ('known', 'ROOT'), ('kernel', 'compound'), ('function', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, iX], [iX,   ], [  , training], [training, vector], [vector, mapped], [mapped, high], [high, dimensional], [dimensional, space], [space,  ], [ , function], [function, ], [, ], [, ], [, ], [, jji], [jji, XXXK], [XXXK, ], [, ,], [,,  ], [ , known], [known, kernel], [kernel, function], [function, .]]

>> Trigrams: 
[[,, iX,   ], [iX,   , training], [  , training, vector], [training, vector, mapped], [vector, mapped, high], [mapped, high, dimensional], [high, dimensional, space], [dimensional, space,  ], [space,  , function], [ , function, ], [function, , ], [, , ], [, , ], [, , jji], [, jji, XXXK], [jji, XXXK, ], [XXXK, , ,], [, ,,  ], [,,  , known], [ , known, kernel], [known, kernel, function], [kernel, function, .]]

>> Noun Phrases are: 
[iX, a   training vector, a high dimensional space, the  function ,    jji XXXK , kernel function]

>> Named Entities are: 
[('\uf029', 'ORG')]


============================ Sentence 270 =============================

  7. 


>> Tokens are: 
[  , 7, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('7', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('7', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 7], [7, .]]

>> Trigrams: 
[[  , 7, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 271 =============================

DEEP LEARNING     


>> Tokens are: 
[DEEP, LEARNING,    ] 

>> PoS Tags are: 
[('DEEP', 'ADJ'), ('LEARNING', 'PROPN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('DEEP', 'amod'), ('LEARNING', 'ROOT'), ('   ', 'nummod')]

>> Bigrams: 
[[DEEP, LEARNING], [LEARNING,    ]]

>> Trigrams: 
[[DEEP, LEARNING,    ]]

>> Noun Phrases are: 
[DEEP LEARNING]

>> Named Entities are: 
[]


============================ Sentence 272 =============================

The use of deep artificial neural networks has gain popularity   for the last few years in pattern recognition and machine   learning. 


>> Tokens are: 
[use, deep, artificial, neural, networks, gain, popularity,   , years, pattern, recognition, machine,   , learning, .] 

>> PoS Tags are: 
[('use', 'NOUN'), ('deep', 'ADJ'), ('artificial', 'ADJ'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('gain', 'VERB'), ('popularity', 'NOUN'), ('  ', 'SPACE'), ('years', 'NOUN'), ('pattern', 'NOUN'), ('recognition', 'NOUN'), ('machine', 'NOUN'), ('  ', 'SPACE'), ('learning', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('use', 'nsubj'), ('deep', 'amod'), ('artificial', 'amod'), ('neural', 'amod'), ('networks', 'pobj'), ('gain', 'ROOT'), ('popularity', 'compound'), ('  ', 'dobj'), ('years', 'pobj'), ('pattern', 'compound'), ('recognition', 'pobj'), ('machine', 'compound'), ('  ', 'nsubj'), ('learning', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[use, deep], [deep, artificial], [artificial, neural], [neural, networks], [networks, gain], [gain, popularity], [popularity,   ], [  , years], [years, pattern], [pattern, recognition], [recognition, machine], [machine,   ], [  , learning], [learning, .]]

>> Trigrams: 
[[use, deep, artificial], [deep, artificial, neural], [artificial, neural, networks], [neural, networks, gain], [networks, gain, popularity], [gain, popularity,   ], [popularity,   , years], [  , years, pattern], [years, pattern, recognition], [pattern, recognition, machine], [recognition, machine,   ], [machine,   , learning], [  , learning, .]]

>> Noun Phrases are: 
[The use, deep artificial neural networks, the last few years, pattern recognition]

>> Named Entities are: 
[('the last few years', 'DATE')]


============================ Sentence 273 =============================

Most of the popular Deep Learning Techniques are   built from Artificial Neural Network (ANN). 


>> Tokens are: 
[popular, Deep, Learning, Techniques,   , built, Artificial, Neural, Network, (, ANN, ), .] 

>> PoS Tags are: 
[('popular', 'ADJ'), ('Deep', 'PROPN'), ('Learning', 'PROPN'), ('Techniques', 'PROPN'), ('  ', 'SPACE'), ('built', 'VERB'), ('Artificial', 'PROPN'), ('Neural', 'PROPN'), ('Network', 'PROPN'), ('(', 'PUNCT'), ('ANN', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('popular', 'amod'), ('Deep', 'compound'), ('Learning', 'compound'), ('Techniques', 'pobj'), ('  ', 'nsubjpass'), ('built', 'ROOT'), ('Artificial', 'compound'), ('Neural', 'compound'), ('Network', 'pobj'), ('(', 'punct'), ('ANN', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[popular, Deep], [Deep, Learning], [Learning, Techniques], [Techniques,   ], [  , built], [built, Artificial], [Artificial, Neural], [Neural, Network], [Network, (], [(, ANN], [ANN, )], [), .]]

>> Trigrams: 
[[popular, Deep, Learning], [Deep, Learning, Techniques], [Learning, Techniques,   ], [Techniques,   , built], [  , built, Artificial], [built, Artificial, Neural], [Artificial, Neural, Network], [Neural, Network, (], [Network, (, ANN], [(, ANN, )], [ANN, ), .]]

>> Noun Phrases are: 
[the popular Deep Learning Techniques, Artificial Neural Network, ANN]

>> Named Entities are: 
[('Deep Learning Techniques', 'WORK_OF_ART'), ('Artificial Neural Network', 'ORG')]


============================ Sentence 274 =============================

Deep learning can   be defined as a model (e.g.--.-, neural network) with many layers,   trained in a layer- wise fashion. 


>> Tokens are: 
[Deep, learning,   , defined, model, (, e.g.--.-, ,, neural, network, ), layers, ,,   , trained, layer-, wise, fashion, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), ('  ', 'SPACE'), ('defined', 'VERB'), ('model', 'NOUN'), ('(', 'PUNCT'), ('e.g.--.-', 'ADJ'), (',', 'PUNCT'), ('neural', 'ADJ'), ('network', 'NOUN'), (')', 'PUNCT'), ('layers', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('trained', 'VERB'), ('layer-', 'ADJ'), ('wise', 'ADJ'), ('fashion', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'nsubjpass'), ('  ', 'nsubjpass'), ('defined', 'ROOT'), ('model', 'pobj'), ('(', 'punct'), ('e.g.--.-', 'amod'), (',', 'punct'), ('neural', 'amod'), ('network', 'appos'), (')', 'punct'), ('layers', 'pobj'), (',', 'punct'), ('  ', 'nsubj'), ('trained', 'advcl'), ('layer-', 'amod'), ('wise', 'amod'), ('fashion', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning,   ], [  , defined], [defined, model], [model, (], [(, e.g.--.-], [e.g.--.-, ,], [,, neural], [neural, network], [network, )], [), layers], [layers, ,], [,,   ], [  , trained], [trained, layer-], [layer-, wise], [wise, fashion], [fashion, .]]

>> Trigrams: 
[[Deep, learning,   ], [learning,   , defined], [  , defined, model], [defined, model, (], [model, (, e.g.--.-], [(, e.g.--.-, ,], [e.g.--.-, ,, neural], [,, neural, network], [neural, network, )], [network, ), layers], [), layers, ,], [layers, ,,   ], [,,   , trained], [  , trained, layer-], [trained, layer-, wise], [layer-, wise, fashion], [wise, fashion, .]]

>> Noun Phrases are: 
[Deep learning, a model, (e.g.--.-, neural network, many layers, a layer- wise fashion]

>> Named Entities are: 
[]


============================ Sentence 275 =============================

Deep learning has had a   tremendous impact on various applications such as computer   vision, speech recognition, natural language processing [29], and   crawling deep web [30]. 


>> Tokens are: 
[Deep, learning,   , tremendous, impact, applications, computer,   , vision, ,, speech, recognition, ,, natural, language, processing, [, 29, ], ,,   , crawling, deep, web, [, 30, ], .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('learning', 'NOUN'), ('  ', 'SPACE'), ('tremendous', 'ADJ'), ('impact', 'NOUN'), ('applications', 'NOUN'), ('computer', 'NOUN'), ('  ', 'SPACE'), ('vision', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('crawling', 'VERB'), ('deep', 'ADJ'), ('web', 'NOUN'), ('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('learning', 'nsubj'), ('  ', 'nummod'), ('tremendous', 'amod'), ('impact', 'dobj'), ('applications', 'pobj'), ('computer', 'compound'), ('  ', 'compound'), ('vision', 'pobj'), (',', 'punct'), ('speech', 'compound'), ('recognition', 'conj'), (',', 'punct'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'conj'), ('[', 'punct'), ('29', 'dobj'), (']', 'punct'), (',', 'punct'), ('  ', 'nsubj'), ('crawling', 'conj'), ('deep', 'amod'), ('web', 'dobj'), ('[', 'punct'), ('30', 'dep'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Deep, learning], [learning,   ], [  , tremendous], [tremendous, impact], [impact, applications], [applications, computer], [computer,   ], [  , vision], [vision, ,], [,, speech], [speech, recognition], [recognition, ,], [,, natural], [natural, language], [language, processing], [processing, [], [[, 29], [29, ]], [], ,], [,,   ], [  , crawling], [crawling, deep], [deep, web], [web, [], [[, 30], [30, ]], [], .]]

>> Trigrams: 
[[Deep, learning,   ], [learning,   , tremendous], [  , tremendous, impact], [tremendous, impact, applications], [impact, applications, computer], [applications, computer,   ], [computer,   , vision], [  , vision, ,], [vision, ,, speech], [,, speech, recognition], [speech, recognition, ,], [recognition, ,, natural], [,, natural, language], [natural, language, processing], [language, processing, [], [processing, [, 29], [[, 29, ]], [29, ], ,], [], ,,   ], [,,   , crawling], [  , crawling, deep], [crawling, deep, web], [deep, web, [], [web, [, 30], [[, 30, ]], [30, ], .]]

>> Noun Phrases are: 
[Deep learning, a   tremendous impact, various applications, computer   vision, speech recognition, natural language processing, deep web]

>> Named Entities are: 
[('29', 'CARDINAL'), ('30', 'CARDINAL')]


============================ Sentence 276 =============================

Samy et al. 


>> Tokens are: 
[Samy, et, al, .] 

>> PoS Tags are: 
[('Samy', 'PROPN'), ('et', 'NOUN'), ('al', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Samy', 'compound'), ('et', 'compound'), ('al', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Samy, et], [et, al], [al, .]]

>> Trigrams: 
[[Samy, et, al], [et, al, .]]

>> Noun Phrases are: 
[Samy et al]

>> Named Entities are: 
[]


============================ Sentence 277 =============================

[29] have discussed   challenges and new applications of deep learning in their study. 


>> Tokens are: 
[[, 29, ], discussed,   , challenges, new, applications, deep, learning, study, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('discussed', 'VERB'), ('  ', 'SPACE'), ('challenges', 'NOUN'), ('new', 'ADJ'), ('applications', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('study', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('29', 'nsubj'), (']', 'punct'), ('discussed', 'ROOT'), ('  ', 'nummod'), ('challenges', 'dobj'), ('new', 'amod'), ('applications', 'conj'), ('deep', 'amod'), ('learning', 'pobj'), ('study', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[[, 29], [29, ]], [], discussed], [discussed,   ], [  , challenges], [challenges, new], [new, applications], [applications, deep], [deep, learning], [learning, study], [study, .]]

>> Trigrams: 
[[[, 29, ]], [29, ], discussed], [], discussed,   ], [discussed,   , challenges], [  , challenges, new], [challenges, new, applications], [new, applications, deep], [applications, deep, learning], [deep, learning, study], [learning, study, .]]

>> Noun Phrases are: 
[  challenges, new applications, deep learning, their study]

>> Named Entities are: 
[('29', 'CARDINAL')]


============================ Sentence 278 =============================

     Fig.11. 


>> Tokens are: 
[     , Fig.11, .] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('Fig.11', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('     ', 'compound'), ('Fig.11', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[     , Fig.11], [Fig.11, .]]

>> Trigrams: 
[[     , Fig.11, .]]

>> Noun Phrases are: 
[     Fig.11]

>> Named Entities are: 
[]


============================ Sentence 279 =============================

Deep network Architecture   The Fig.11 depicts the deep learning network architecture   with one 3-unit input layer, one 2-unit output layer, and two 5-  unit hidden layers. 


>> Tokens are: 
[Deep, network, Architecture,   , Fig.11, depicts, deep, learning, network, architecture,   , 3, -, unit, input, layer, ,, 2, -, unit, output, layer, ,, 5-,  , unit, hidden, layers, .] 

>> PoS Tags are: 
[('Deep', 'ADJ'), ('network', 'NOUN'), ('Architecture', 'PROPN'), ('  ', 'SPACE'), ('Fig.11', 'PROPN'), ('depicts', 'VERB'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('network', 'NOUN'), ('architecture', 'NOUN'), ('  ', 'SPACE'), ('3', 'NUM'), ('-', 'PUNCT'), ('unit', 'NOUN'), ('input', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('2', 'NUM'), ('-', 'PUNCT'), ('unit', 'NOUN'), ('output', 'NOUN'), ('layer', 'NOUN'), (',', 'PUNCT'), ('5-', 'X'), (' ', 'SPACE'), ('unit', 'NOUN'), ('hidden', 'VERB'), ('layers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deep', 'amod'), ('network', 'nsubj'), ('Architecture', 'appos'), ('  ', 'npadvmod'), ('Fig.11', 'nsubj'), ('depicts', 'ROOT'), ('deep', 'amod'), ('learning', 'amod'), ('network', 'compound'), ('architecture', 'dobj'), ('  ', 'appos'), ('3', 'nummod'), ('-', 'punct'), ('unit', 'compound'), ('input', 'compound'), ('layer', 'pobj'), (',', 'punct'), ('2', 'nummod'), ('-', 'punct'), ('unit', 'compound'), ('output', 'compound'), ('layer', 'appos'), (',', 'punct'), ('5-', 'quantmod'), (' ', 'compound'), ('unit', 'nmod'), ('hidden', 'amod'), ('layers', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Deep, network], [network, Architecture], [Architecture,   ], [  , Fig.11], [Fig.11, depicts], [depicts, deep], [deep, learning], [learning, network], [network, architecture], [architecture,   ], [  , 3], [3, -], [-, unit], [unit, input], [input, layer], [layer, ,], [,, 2], [2, -], [-, unit], [unit, output], [output, layer], [layer, ,], [,, 5-], [5-,  ], [ , unit], [unit, hidden], [hidden, layers], [layers, .]]

>> Trigrams: 
[[Deep, network, Architecture], [network, Architecture,   ], [Architecture,   , Fig.11], [  , Fig.11, depicts], [Fig.11, depicts, deep], [depicts, deep, learning], [deep, learning, network], [learning, network, architecture], [network, architecture,   ], [architecture,   , 3], [  , 3, -], [3, -, unit], [-, unit, input], [unit, input, layer], [input, layer, ,], [layer, ,, 2], [,, 2, -], [2, -, unit], [-, unit, output], [unit, output, layer], [output, layer, ,], [layer, ,, 5-], [,, 5-,  ], [5-,  , unit], [ , unit, hidden], [unit, hidden, layers], [hidden, layers, .]]

>> Noun Phrases are: 
[Deep network, Architecture, The Fig.11, the deep learning network architecture, one 3-unit input layer, one 2-unit output layer, two 5-  unit hidden layers]

>> Named Entities are: 
[('one', 'CARDINAL'), ('3', 'CARDINAL'), ('one', 'CARDINAL'), ('2', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 280 =============================

    Deep learning has also been successfully implemented in   industry products that ultimately take advantage of the large   volume of data. 


>> Tokens are: 
[    , Deep, learning, successfully, implemented,   , industry, products, ultimately, advantage, large,   , volume, data, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Deep', 'ADJ'), ('learning', 'NOUN'), ('successfully', 'ADV'), ('implemented', 'VERB'), ('  ', 'SPACE'), ('industry', 'NOUN'), ('products', 'NOUN'), ('ultimately', 'ADV'), ('advantage', 'NOUN'), ('large', 'ADJ'), ('  ', 'SPACE'), ('volume', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'poss'), ('Deep', 'amod'), ('learning', 'nsubjpass'), ('successfully', 'advmod'), ('implemented', 'ROOT'), ('  ', 'nummod'), ('industry', 'compound'), ('products', 'pobj'), ('ultimately', 'advmod'), ('advantage', 'dobj'), ('large', 'amod'), ('  ', 'compound'), ('volume', 'pobj'), ('data', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[    , Deep], [Deep, learning], [learning, successfully], [successfully, implemented], [implemented,   ], [  , industry], [industry, products], [products, ultimately], [ultimately, advantage], [advantage, large], [large,   ], [  , volume], [volume, data], [data, .]]

>> Trigrams: 
[[    , Deep, learning], [Deep, learning, successfully], [learning, successfully, implemented], [successfully, implemented,   ], [implemented,   , industry], [  , industry, products], [industry, products, ultimately], [products, ultimately, advantage], [ultimately, advantage, large], [advantage, large,   ], [large,   , volume], [  , volume, data], [volume, data, .]]

>> Noun Phrases are: 
[    Deep learning,   industry products, advantage, the large   volume, data]

>> Named Entities are: 
[]


============================ Sentence 281 =============================

Top Information Technology (IT) companies   like Microsoft, Google, Apple, Yahoo, Baidu, Amazon and   Facebook, who collect and analyze massive amounts of data on a   daily basis, have been investing a good share on finances on   deep learning related projects. 


>> Tokens are: 
[Information, Technology, (, ), companies,   , like, Microsoft, ,, Google, ,, Apple, ,, Yahoo, ,, Baidu, ,, Amazon,   , Facebook, ,, collect, analyze, massive, amounts, data,   , daily, basis, ,, investing, good, share, finances,   , deep, learning, related, projects, .] 

>> PoS Tags are: 
[('Information', 'PROPN'), ('Technology', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('companies', 'NOUN'), ('  ', 'SPACE'), ('like', 'ADP'), ('Microsoft', 'PROPN'), (',', 'PUNCT'), ('Google', 'PROPN'), (',', 'PUNCT'), ('Apple', 'PROPN'), (',', 'PUNCT'), ('Yahoo', 'PROPN'), (',', 'PUNCT'), ('Baidu', 'PROPN'), (',', 'PUNCT'), ('Amazon', 'PROPN'), ('  ', 'SPACE'), ('Facebook', 'PROPN'), (',', 'PUNCT'), ('collect', 'VERB'), ('analyze', 'VERB'), ('massive', 'ADJ'), ('amounts', 'NOUN'), ('data', 'NOUN'), ('  ', 'SPACE'), ('daily', 'ADJ'), ('basis', 'NOUN'), (',', 'PUNCT'), ('investing', 'VERB'), ('good', 'ADJ'), ('share', 'NOUN'), ('finances', 'NOUN'), ('  ', 'SPACE'), ('deep', 'ADJ'), ('learning', 'VERB'), ('related', 'VERB'), ('projects', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Information', 'compound'), ('Technology', 'nmod'), ('(', 'punct'), (')', 'punct'), ('companies', 'nsubj'), ('  ', 'appos'), ('like', 'prep'), ('Microsoft', 'pobj'), (',', 'punct'), ('Google', 'conj'), (',', 'punct'), ('Apple', 'conj'), (',', 'punct'), ('Yahoo', 'conj'), (',', 'punct'), ('Baidu', 'conj'), (',', 'punct'), ('Amazon', 'conj'), ('  ', 'nmod'), ('Facebook', 'conj'), (',', 'punct'), ('collect', 'relcl'), ('analyze', 'conj'), ('massive', 'amod'), ('amounts', 'dobj'), ('data', 'pobj'), ('  ', 'nummod'), ('daily', 'amod'), ('basis', 'pobj'), (',', 'punct'), ('investing', 'ROOT'), ('good', 'amod'), ('share', 'dobj'), ('finances', 'pobj'), ('  ', 'nmod'), ('deep', 'amod'), ('learning', 'amod'), ('related', 'amod'), ('projects', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Information, Technology], [Technology, (], [(, )], [), companies], [companies,   ], [  , like], [like, Microsoft], [Microsoft, ,], [,, Google], [Google, ,], [,, Apple], [Apple, ,], [,, Yahoo], [Yahoo, ,], [,, Baidu], [Baidu, ,], [,, Amazon], [Amazon,   ], [  , Facebook], [Facebook, ,], [,, collect], [collect, analyze], [analyze, massive], [massive, amounts], [amounts, data], [data,   ], [  , daily], [daily, basis], [basis, ,], [,, investing], [investing, good], [good, share], [share, finances], [finances,   ], [  , deep], [deep, learning], [learning, related], [related, projects], [projects, .]]

>> Trigrams: 
[[Information, Technology, (], [Technology, (, )], [(, ), companies], [), companies,   ], [companies,   , like], [  , like, Microsoft], [like, Microsoft, ,], [Microsoft, ,, Google], [,, Google, ,], [Google, ,, Apple], [,, Apple, ,], [Apple, ,, Yahoo], [,, Yahoo, ,], [Yahoo, ,, Baidu], [,, Baidu, ,], [Baidu, ,, Amazon], [,, Amazon,   ], [Amazon,   , Facebook], [  , Facebook, ,], [Facebook, ,, collect], [,, collect, analyze], [collect, analyze, massive], [analyze, massive, amounts], [massive, amounts, data], [amounts, data,   ], [data,   , daily], [  , daily, basis], [daily, basis, ,], [basis, ,, investing], [,, investing, good], [investing, good, share], [good, share, finances], [share, finances,   ], [finances,   , deep], [  , deep, learning], [deep, learning, related], [learning, related, projects], [related, projects, .]]

>> Noun Phrases are: 
[Top Information Technology (IT) companies, Microsoft, Google, Apple, Yahoo, Baidu, Amazon,   Facebook, who, massive amounts, data, a   daily basis, a good share, finances,   deep learning related projects]

>> Named Entities are: 
[('Top Information Technology', 'ORG'), ('Microsoft', 'ORG'), ('Google', 'ORG'), ('Apple', 'ORG'), ('Baidu', 'ORG'), ('Amazon', 'ORG'), ('daily', 'DATE')]


============================ Sentence 282 =============================

For example, Apple's Siri and   Google Voice Search offer a wide variety of services including   weather reports, sport news, answers to user’s questions, and   reminders etc., by utilizing deep learning algorithms [31]. 


>> Tokens are: 
[example, ,, Apple, Siri,   , Google, Voice, Search, offer, wide, variety, services, including,   , weather, reports, ,, sport, news, ,, answers, user, questions, ,,   , reminders, etc, ., ,, utilizing, deep, learning, algorithms, [, 31, ], .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('Apple', 'PROPN'), ('Siri', 'PROPN'), ('  ', 'SPACE'), ('Google', 'PROPN'), ('Voice', 'PROPN'), ('Search', 'PROPN'), ('offer', 'VERB'), ('wide', 'ADJ'), ('variety', 'NOUN'), ('services', 'NOUN'), ('including', 'VERB'), ('  ', 'SPACE'), ('weather', 'NOUN'), ('reports', 'NOUN'), (',', 'PUNCT'), ('sport', 'NOUN'), ('news', 'NOUN'), (',', 'PUNCT'), ('answers', 'NOUN'), ('user', 'NOUN'), ('questions', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('reminders', 'NOUN'), ('etc', 'X'), ('.', 'X'), (',', 'PUNCT'), ('utilizing', 'VERB'), ('deep', 'ADJ'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('[', 'PUNCT'), ('31', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('Apple', 'poss'), ('Siri', 'nsubj'), ('  ', 'conj'), ('Google', 'compound'), ('Voice', 'compound'), ('Search', 'conj'), ('offer', 'ROOT'), ('wide', 'amod'), ('variety', 'dobj'), ('services', 'pobj'), ('including', 'prep'), ('  ', 'nummod'), ('weather', 'compound'), ('reports', 'pobj'), (',', 'punct'), ('sport', 'compound'), ('news', 'conj'), (',', 'punct'), ('answers', 'conj'), ('user', 'nmod'), ('questions', 'pobj'), (',', 'punct'), ('  ', 'compound'), ('reminders', 'conj'), ('etc', 'conj'), ('.', 'conj'), (',', 'punct'), ('utilizing', 'pcomp'), ('deep', 'amod'), ('learning', 'amod'), ('algorithms', 'dobj'), ('[', 'punct'), ('31', 'dobj'), (']', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, Apple], [Apple, Siri], [Siri,   ], [  , Google], [Google, Voice], [Voice, Search], [Search, offer], [offer, wide], [wide, variety], [variety, services], [services, including], [including,   ], [  , weather], [weather, reports], [reports, ,], [,, sport], [sport, news], [news, ,], [,, answers], [answers, user], [user, questions], [questions, ,], [,,   ], [  , reminders], [reminders, etc], [etc, .], [., ,], [,, utilizing], [utilizing, deep], [deep, learning], [learning, algorithms], [algorithms, [], [[, 31], [31, ]], [], .]]

>> Trigrams: 
[[example, ,, Apple], [,, Apple, Siri], [Apple, Siri,   ], [Siri,   , Google], [  , Google, Voice], [Google, Voice, Search], [Voice, Search, offer], [Search, offer, wide], [offer, wide, variety], [wide, variety, services], [variety, services, including], [services, including,   ], [including,   , weather], [  , weather, reports], [weather, reports, ,], [reports, ,, sport], [,, sport, news], [sport, news, ,], [news, ,, answers], [,, answers, user], [answers, user, questions], [user, questions, ,], [questions, ,,   ], [,,   , reminders], [  , reminders, etc], [reminders, etc, .], [etc, ., ,], [., ,, utilizing], [,, utilizing, deep], [utilizing, deep, learning], [deep, learning, algorithms], [learning, algorithms, [], [algorithms, [, 31], [[, 31, ]], [31, ], .]]

>> Noun Phrases are: 
[example, Apple's Siri, Google Voice Search, a wide variety, services,   weather reports, sport news, answers, user’s questions,   reminders, deep learning algorithms]

>> Named Entities are: 
[('Apple', 'ORG'), ('Google Voice Search', 'ORG'), ('31', 'CARDINAL')]


============================ Sentence 283 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 284 =============================

Currently, these two applications support wide range spoken   languages. 


>> Tokens are: 
[Currently, ,, applications, support, wide, range, spoken,   , languages, .] 

>> PoS Tags are: 
[('Currently', 'ADV'), (',', 'PUNCT'), ('applications', 'NOUN'), ('support', 'NOUN'), ('wide', 'ADJ'), ('range', 'NOUN'), ('spoken', 'VERB'), ('  ', 'SPACE'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Currently', 'advmod'), (',', 'punct'), ('applications', 'nmod'), ('support', 'nmod'), ('wide', 'amod'), ('range', 'nsubj'), ('spoken', 'ROOT'), ('  ', 'nummod'), ('languages', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Currently, ,], [,, applications], [applications, support], [support, wide], [wide, range], [range, spoken], [spoken,   ], [  , languages], [languages, .]]

>> Trigrams: 
[[Currently, ,, applications], [,, applications, support], [applications, support, wide], [support, wide, range], [wide, range, spoken], [range, spoken,   ], [spoken,   , languages], [  , languages, .]]

>> Noun Phrases are: 
[these two applications support wide range,   languages]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 285 =============================

  Table.4. 


>> Tokens are: 
[  , Table.4, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Table.4', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Table.4', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[  , Table.4], [Table.4, .]]

>> Trigrams: 
[[  , Table.4, .]]

>> Noun Phrases are: 
[  Table.4]

>> Named Entities are: 
[]


============================ Sentence 286 =============================

Large scale deep learning research progress   Method Computing power  # of examples and   parameters   Average   running   Time   DBN [32]   


>> Tokens are: 
[Large, scale, deep, learning, research, progress,   , Method, Computing, power,  , #, examples,   , parameters,   , Average,   , running,   , Time,   , DBN, [, 32, ],  ] 

>> PoS Tags are: 
[('Large', 'ADJ'), ('scale', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('research', 'NOUN'), ('progress', 'NOUN'), ('  ', 'SPACE'), ('Method', 'PROPN'), ('Computing', 'PROPN'), ('power', 'NOUN'), (' ', 'SPACE'), ('#', 'NUM'), ('examples', 'NOUN'), ('  ', 'SPACE'), ('parameters', 'NOUN'), ('  ', 'SPACE'), ('Average', 'ADJ'), ('  ', 'SPACE'), ('running', 'VERB'), ('  ', 'SPACE'), ('Time', 'PROPN'), ('  ', 'SPACE'), ('DBN', 'PROPN'), ('[', 'PUNCT'), ('32', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Large', 'amod'), ('scale', 'nmod'), ('deep', 'amod'), ('learning', 'compound'), ('research', 'compound'), ('progress', 'nsubj'), ('  ', 'appos'), ('Method', 'compound'), ('Computing', 'compound'), ('power', 'appos'), (' ', 'npadvmod'), ('#', 'appos'), ('examples', 'pobj'), ('  ', 'nummod'), ('parameters', 'conj'), ('  ', 'npadvmod'), ('Average', 'amod'), ('  ', 'appos'), ('running', 'acl'), ('  ', 'nmod'), ('Time', 'npadvmod'), ('  ', 'nsubj'), ('DBN', 'ROOT'), ('[', 'punct'), ('32', 'npadvmod'), (']', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Large, scale], [scale, deep], [deep, learning], [learning, research], [research, progress], [progress,   ], [  , Method], [Method, Computing], [Computing, power], [power,  ], [ , #], [#, examples], [examples,   ], [  , parameters], [parameters,   ], [  , Average], [Average,   ], [  , running], [running,   ], [  , Time], [Time,   ], [  , DBN], [DBN, [], [[, 32], [32, ]], [],  ]]

>> Trigrams: 
[[Large, scale, deep], [scale, deep, learning], [deep, learning, research], [learning, research, progress], [research, progress,   ], [progress,   , Method], [  , Method, Computing], [Method, Computing, power], [Computing, power,  ], [power,  , #], [ , #, examples], [#, examples,   ], [examples,   , parameters], [  , parameters,   ], [parameters,   , Average], [  , Average,   ], [Average,   , running], [  , running,   ], [running,   , Time], [  , Time,   ], [Time,   , DBN], [  , DBN, [], [DBN, [, 32], [[, 32, ]], [32, ],  ]]

>> Noun Phrases are: 
[Large scale deep learning research progress, Method Computing power, examples,   parameters]

>> Named Entities are: 
[('Method Computing', 'FAC'), ('#', 'CARDINAL'), ('32', 'CARDINAL')]


============================ Sentence 287 =============================

NVIDIA GTX 280   GPU (1 GB RAM) 


>> Tokens are: 
[NVIDIA, GTX, 280,   , GPU, (, 1, GB, RAM, )] 

>> PoS Tags are: 
[('NVIDIA', 'PROPN'), ('GTX', 'PROPN'), ('280', 'NUM'), ('  ', 'SPACE'), ('GPU', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), ('GB', 'PROPN'), ('RAM', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('NVIDIA', 'compound'), ('GTX', 'ROOT'), ('280', 'nummod'), ('  ', 'appos'), ('GPU', 'appos'), ('(', 'punct'), ('1', 'nummod'), ('GB', 'compound'), ('RAM', 'appos'), (')', 'punct')]

>> Bigrams: 
[[NVIDIA, GTX], [GTX, 280], [280,   ], [  , GPU], [GPU, (], [(, 1], [1, GB], [GB, RAM], [RAM, )]]

>> Trigrams: 
[[NVIDIA, GTX, 280], [GTX, 280,   ], [280,   , GPU], [  , GPU, (], [GPU, (, 1], [(, 1, GB], [1, GB, RAM], [GB, RAM, )]]

>> Noun Phrases are: 
[NVIDIA GTX, GPU, (1 GB RAM]

>> Named Entities are: 
[('280', 'CARDINAL'), ('GPU', 'ORG'), ('1 GB', 'PERCENT'), ('RAM', 'ORG')]


============================ Sentence 288 =============================

  1million images and   1006 parameters  ~ 1 day   CNN [33]  Two GTX 580   GPUs( 6 GB RAM)   1.2 million high  resolution (256 × 256)   images and 606   parameters   ~ 5-6 days    


>> Tokens are: 
[  , 1million, images,   , 1006, parameters,  , ~, 1, day,   , CNN, [, 33, ],  , GTX, 580,   , GPUs, (, 6, GB, RAM, ),   , 1.2, million, high,  , resolution, (, 256, ×, 256, ),   , images, 606,   , parameters,   , ~, 5, -, 6, days,   ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('1million', 'NUM'), ('images', 'NOUN'), ('  ', 'SPACE'), ('1006', 'NUM'), ('parameters', 'NOUN'), (' ', 'SPACE'), ('~', 'PUNCT'), ('1', 'NUM'), ('day', 'NOUN'), ('  ', 'SPACE'), ('CNN', 'PROPN'), ('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), (' ', 'SPACE'), ('GTX', 'PROPN'), ('580', 'NUM'), ('  ', 'SPACE'), ('GPUs', 'NOUN'), ('(', 'PUNCT'), ('6', 'NUM'), ('GB', 'PROPN'), ('RAM', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('1.2', 'NUM'), ('million', 'NUM'), ('high', 'ADJ'), (' ', 'SPACE'), ('resolution', 'NOUN'), ('(', 'PUNCT'), ('256', 'NUM'), ('×', 'NOUN'), ('256', 'NUM'), (')', 'PUNCT'), ('  ', 'SPACE'), ('images', 'NOUN'), ('606', 'NUM'), ('  ', 'SPACE'), ('parameters', 'NOUN'), ('  ', 'SPACE'), ('~', 'PUNCT'), ('5', 'NUM'), ('-', 'SYM'), ('6', 'NUM'), ('days', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('1million', 'nummod'), ('images', 'attr'), ('  ', 'nmod'), ('1006', 'nummod'), ('parameters', 'conj'), (' ', 'appos'), ('~', 'punct'), ('1', 'nummod'), ('day', 'npadvmod'), ('  ', 'compound'), ('CNN', 'nsubj'), ('[', 'punct'), ('33', 'appos'), (']', 'punct'), (' ', 'appos'), ('GTX', 'nmod'), ('580', 'nummod'), ('  ', 'compound'), ('GPUs', 'pobj'), ('(', 'punct'), ('6', 'nummod'), ('GB', 'compound'), ('RAM', 'appos'), (')', 'punct'), ('  ', 'ROOT'), ('1.2', 'compound'), ('million', 'nummod'), ('high', 'amod'), (' ', 'compound'), ('resolution', 'attr'), ('(', 'punct'), ('256', 'nummod'), ('×', 'npadvmod'), ('256', 'nummod'), (')', 'punct'), ('  ', 'nummod'), ('images', 'appos'), ('606', 'nummod'), ('  ', 'nummod'), ('parameters', 'conj'), ('  ', 'appos'), ('~', 'punct'), ('5', 'quantmod'), ('-', 'punct'), ('6', 'nummod'), ('days', 'appos'), ('  ', 'punct')]

>> Bigrams: 
[[  , 1million], [1million, images], [images,   ], [  , 1006], [1006, parameters], [parameters,  ], [ , ~], [~, 1], [1, day], [day,   ], [  , CNN], [CNN, [], [[, 33], [33, ]], [],  ], [ , GTX], [GTX, 580], [580,   ], [  , GPUs], [GPUs, (], [(, 6], [6, GB], [GB, RAM], [RAM, )], [),   ], [  , 1.2], [1.2, million], [million, high], [high,  ], [ , resolution], [resolution, (], [(, 256], [256, ×], [×, 256], [256, )], [),   ], [  , images], [images, 606], [606,   ], [  , parameters], [parameters,   ], [  , ~], [~, 5], [5, -], [-, 6], [6, days], [days,   ]]

>> Trigrams: 
[[  , 1million, images], [1million, images,   ], [images,   , 1006], [  , 1006, parameters], [1006, parameters,  ], [parameters,  , ~], [ , ~, 1], [~, 1, day], [1, day,   ], [day,   , CNN], [  , CNN, [], [CNN, [, 33], [[, 33, ]], [33, ],  ], [],  , GTX], [ , GTX, 580], [GTX, 580,   ], [580,   , GPUs], [  , GPUs, (], [GPUs, (, 6], [(, 6, GB], [6, GB, RAM], [GB, RAM, )], [RAM, ),   ], [),   , 1.2], [  , 1.2, million], [1.2, million, high], [million, high,  ], [high,  , resolution], [ , resolution, (], [resolution, (, 256], [(, 256, ×], [256, ×, 256], [×, 256, )], [256, ),   ], [),   , images], [  , images, 606], [images, 606,   ], [606,   , parameters], [  , parameters,   ], [parameters,   , ~], [  , ~, 5], [~, 5, -], [5, -, 6], [-, 6, days], [6, days,   ]]

>> Noun Phrases are: 
[1million images,   1006 parameters, Two GTX 580   GPUs, 6 GB RAM, 1.2 million high  resolution, 256 × 256)   images, 606   parameters, 5-6 days]

>> Named Entities are: 
[('1million', 'CARDINAL'), ('1006', 'DATE'), ('1 day', 'DATE'), ('CNN', 'ORG'), ('33', 'CARDINAL'), ('Two', 'CARDINAL'), ('6 GB RAM', 'PERCENT'), ('1.2 million', 'CARDINAL'), ('256', 'CARDINAL'), ('606', 'CARDINAL'), ('5-6 days', 'DATE')]


============================ Sentence 289 =============================

DisBelief 


>> Tokens are: 
[DisBelief] 

>> PoS Tags are: 
[('DisBelief', 'PROPN')] 

>> Dependency Tags are: 
[('DisBelief', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[DisBelief]

>> Named Entities are: 
[('DisBelief', 'ORG')]


============================ Sentence 290 =============================

[34]   1000 CPUs with   Downpour SGD with   Adagrad   1.1 billion audio   examples with 42 million   parameters   ~ 16 hours   Sparse   


>> Tokens are: 
[[, 34, ],   , 1000, CPUs,   , Downpour, SGD,   , Adagrad,   , 1.1, billion, audio,   , examples, 42, million,   , parameters,   , ~, 16, hours,   , Sparse,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('34', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('1000', 'NUM'), ('CPUs', 'NOUN'), ('  ', 'SPACE'), ('Downpour', 'PROPN'), ('SGD', 'PROPN'), ('  ', 'SPACE'), ('Adagrad', 'PROPN'), ('  ', 'SPACE'), ('1.1', 'NUM'), ('billion', 'NUM'), ('audio', 'ADJ'), ('  ', 'SPACE'), ('examples', 'NOUN'), ('42', 'NUM'), ('million', 'NUM'), ('  ', 'SPACE'), ('parameters', 'NOUN'), ('  ', 'SPACE'), ('~', 'PUNCT'), ('16', 'NUM'), ('hours', 'NOUN'), ('  ', 'SPACE'), ('Sparse', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('34', 'nmod'), (']', 'punct'), ('  ', 'ROOT'), ('1000', 'nummod'), ('CPUs', 'appos'), ('  ', 'pobj'), ('Downpour', 'compound'), ('SGD', 'appos'), ('  ', 'pobj'), ('Adagrad', 'nmod'), ('  ', 'nmod'), ('1.1', 'compound'), ('billion', 'nummod'), ('audio', 'amod'), ('  ', 'compound'), ('examples', 'npadvmod'), ('42', 'compound'), ('million', 'nummod'), ('  ', 'compound'), ('parameters', 'pobj'), ('  ', 'appos'), ('~', 'punct'), ('16', 'nummod'), ('hours', 'npadvmod'), ('  ', 'appos'), ('Sparse', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[[, 34], [34, ]], [],   ], [  , 1000], [1000, CPUs], [CPUs,   ], [  , Downpour], [Downpour, SGD], [SGD,   ], [  , Adagrad], [Adagrad,   ], [  , 1.1], [1.1, billion], [billion, audio], [audio,   ], [  , examples], [examples, 42], [42, million], [million,   ], [  , parameters], [parameters,   ], [  , ~], [~, 16], [16, hours], [hours,   ], [  , Sparse], [Sparse,  ]]

>> Trigrams: 
[[[, 34, ]], [34, ],   ], [],   , 1000], [  , 1000, CPUs], [1000, CPUs,   ], [CPUs,   , Downpour], [  , Downpour, SGD], [Downpour, SGD,   ], [SGD,   , Adagrad], [  , Adagrad,   ], [Adagrad,   , 1.1], [  , 1.1, billion], [1.1, billion, audio], [billion, audio,   ], [audio,   , examples], [  , examples, 42], [examples, 42, million], [42, million,   ], [million,   , parameters], [  , parameters,   ], [parameters,   , ~], [  , ~, 16], [~, 16, hours], [16, hours,   ], [hours,   , Sparse], [  , Sparse,  ]]

>> Noun Phrases are: 
[1000 CPUs, Downpour SGD, 42 million   parameters, Sparse]

>> Named Entities are: 
[('34', 'CARDINAL'), ('1000', 'CARDINAL'), ('Adagrad', 'ORG'), ('1.1 billion', 'CARDINAL'), ('42 million', 'CARDINAL'), ('16 hours', 'TIME'), ('Sparse', 'PERSON')]


============================ Sentence 291 =============================

Autoencoder   [35]   1000 CPUs with   16,000 core   10 million (200 × 200 )   


>> Tokens are: 
[Autoencoder,   , [, 35, ],   , 1000, CPUs,   , 16,000, core,   , 10, million, (, 200, ×, 200, ),  ] 

>> PoS Tags are: 
[('Autoencoder', 'NOUN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('35', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('1000', 'NUM'), ('CPUs', 'NOUN'), ('  ', 'SPACE'), ('16,000', 'NUM'), ('core', 'NOUN'), ('  ', 'SPACE'), ('10', 'NUM'), ('million', 'NUM'), ('(', 'PUNCT'), ('200', 'NUM'), ('×', 'NOUN'), ('200', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Autoencoder', 'compound'), ('  ', 'ROOT'), ('[', 'punct'), ('35', 'appos'), (']', 'punct'), ('  ', 'nmod'), ('1000', 'nummod'), ('CPUs', 'appos'), ('  ', 'nmod'), ('16,000', 'nummod'), ('core', 'pobj'), ('  ', 'quantmod'), ('10', 'compound'), ('million', 'appos'), ('(', 'punct'), ('200', 'nummod'), ('×', 'appos'), ('200', 'nummod'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Autoencoder,   ], [  , [], [[, 35], [35, ]], [],   ], [  , 1000], [1000, CPUs], [CPUs,   ], [  , 16,000], [16,000, core], [core,   ], [  , 10], [10, million], [million, (], [(, 200], [200, ×], [×, 200], [200, )], [),  ]]

>> Trigrams: 
[[Autoencoder,   , [], [  , [, 35], [[, 35, ]], [35, ],   ], [],   , 1000], [  , 1000, CPUs], [1000, CPUs,   ], [CPUs,   , 16,000], [  , 16,000, core], [16,000, core,   ], [core,   , 10], [  , 10, million], [10, million, (], [million, (, 200], [(, 200, ×], [200, ×, 200], [×, 200, )], [200, ),  ]]

>> Noun Phrases are: 
[  1000 CPUs,   16,000 core, 200 ×]

>> Named Entities are: 
[('35', 'CARDINAL'), ('1000', 'CARDINAL'), ('16,000', 'CARDINAL'), ('10 million', 'CARDINAL'), ('200', 'CARDINAL')]


============================ Sentence 292 =============================

Images and 1 billion   parameters   ~ 3Days   COTS HPC   [36]   64 NVIDIA GTX  680 GPUs   (256 GB RAM) 


>> Tokens are: 
[Images, 1, billion,   , parameters,   , ~, 3Days,   , COTS, HPC,   , [, 36, ],   , 64, NVIDIA, GTX,  , 680, GPUs,   , (, 256, GB, RAM, )] 

>> PoS Tags are: 
[('Images', 'PROPN'), ('1', 'NUM'), ('billion', 'NUM'), ('  ', 'SPACE'), ('parameters', 'NOUN'), ('  ', 'SPACE'), ('~', 'PUNCT'), ('3Days', 'ADV'), ('  ', 'SPACE'), ('COTS', 'PROPN'), ('HPC', 'NOUN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('36', 'NUM'), (']', 'PUNCT'), ('  ', 'SPACE'), ('64', 'NUM'), ('NVIDIA', 'PROPN'), ('GTX', 'PROPN'), (' ', 'SPACE'), ('680', 'NUM'), ('GPUs', 'NOUN'), ('  ', 'SPACE'), ('(', 'PUNCT'), ('256', 'NUM'), ('GB', 'PROPN'), ('RAM', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Images', 'nsubj'), ('1', 'compound'), ('billion', 'nummod'), ('  ', 'compound'), ('parameters', 'conj'), ('  ', 'appos'), ('~', 'punct'), ('3Days', 'advmod'), ('  ', 'nmod'), ('COTS', 'compound'), ('HPC', 'compound'), ('  ', 'appos'), ('[', 'punct'), ('36', 'appos'), (']', 'punct'), ('  ', 'nmod'), ('64', 'nummod'), ('NVIDIA', 'compound'), ('GTX', 'appos'), (' ', 'ROOT'), ('680', 'nummod'), ('GPUs', 'dobj'), ('  ', 'dobj'), ('(', 'punct'), ('256', 'nummod'), ('GB', 'compound'), ('RAM', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Images, 1], [1, billion], [billion,   ], [  , parameters], [parameters,   ], [  , ~], [~, 3Days], [3Days,   ], [  , COTS], [COTS, HPC], [HPC,   ], [  , [], [[, 36], [36, ]], [],   ], [  , 64], [64, NVIDIA], [NVIDIA, GTX], [GTX,  ], [ , 680], [680, GPUs], [GPUs,   ], [  , (], [(, 256], [256, GB], [GB, RAM], [RAM, )]]

>> Trigrams: 
[[Images, 1, billion], [1, billion,   ], [billion,   , parameters], [  , parameters,   ], [parameters,   , ~], [  , ~, 3Days], [~, 3Days,   ], [3Days,   , COTS], [  , COTS, HPC], [COTS, HPC,   ], [HPC,   , [], [  , [, 36], [[, 36, ]], [36, ],   ], [],   , 64], [  , 64, NVIDIA], [64, NVIDIA, GTX], [NVIDIA, GTX,  ], [GTX,  , 680], [ , 680, GPUs], [680, GPUs,   ], [GPUs,   , (], [  , (, 256], [(, 256, GB], [256, GB, RAM], [GB, RAM, )]]

>> Noun Phrases are: 
[Images, 1 billion   parameters,   64 NVIDIA GTX, 680 GPUs, (256 GB RAM]

>> Named Entities are: 
[('Images', 'GPE'), ('1 billion', 'CARDINAL'), ('3Days', 'CARDINAL'), ('36', 'CARDINAL'), ('64', 'CARDINAL'), ('680', 'CARDINAL'), ('256', 'CARDINAL'), ('RAM', 'ORG')]


============================ Sentence 293 =============================

  10 million (200 × 200 )   


>> Tokens are: 
[  , 10, million, (, 200, ×, 200, ),  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('10', 'NUM'), ('million', 'NUM'), ('(', 'PUNCT'), ('200', 'NUM'), ('×', 'NOUN'), ('200', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('10', 'compound'), ('million', 'npadvmod'), ('(', 'punct'), ('200', 'nummod'), ('×', 'appos'), ('200', 'nummod'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , 10], [10, million], [million, (], [(, 200], [200, ×], [×, 200], [200, )], [),  ]]

>> Trigrams: 
[[  , 10, million], [10, million, (], [million, (, 200], [(, 200, ×], [200, ×, 200], [×, 200, )], [200, ),  ]]

>> Noun Phrases are: 
[200 ×]

>> Named Entities are: 
[('10 million', 'CARDINAL'), ('200', 'CARDINAL')]


============================ Sentence 294 =============================

Images and 11 billion   parameters   ~ 3Days   The Table.4 summarizes the current progress in deep   learning algorithms. 


>> Tokens are: 
[Images, 11, billion,   , parameters,   , ~, 3Days,   , Table.4, summarizes, current, progress, deep,   , learning, algorithms, .] 

>> PoS Tags are: 
[('Images', 'PROPN'), ('11', 'NUM'), ('billion', 'NUM'), ('  ', 'SPACE'), ('parameters', 'NOUN'), ('  ', 'SPACE'), ('~', 'PUNCT'), ('3Days', 'ADV'), ('  ', 'SPACE'), ('Table.4', 'NOUN'), ('summarizes', 'VERB'), ('current', 'ADJ'), ('progress', 'NOUN'), ('deep', 'ADJ'), ('  ', 'SPACE'), ('learning', 'VERB'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Images', 'nsubj'), ('11', 'compound'), ('billion', 'nummod'), ('  ', 'compound'), ('parameters', 'conj'), ('  ', 'appos'), ('~', 'punct'), ('3Days', 'appos'), ('  ', 'npadvmod'), ('Table.4', 'nsubj'), ('summarizes', 'ROOT'), ('current', 'amod'), ('progress', 'dobj'), ('deep', 'amod'), ('  ', 'pobj'), ('learning', 'pcomp'), ('algorithms', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Images, 11], [11, billion], [billion,   ], [  , parameters], [parameters,   ], [  , ~], [~, 3Days], [3Days,   ], [  , Table.4], [Table.4, summarizes], [summarizes, current], [current, progress], [progress, deep], [deep,   ], [  , learning], [learning, algorithms], [algorithms, .]]

>> Trigrams: 
[[Images, 11, billion], [11, billion,   ], [billion,   , parameters], [  , parameters,   ], [parameters,   , ~], [  , ~, 3Days], [~, 3Days,   ], [3Days,   , Table.4], [  , Table.4, summarizes], [Table.4, summarizes, current], [summarizes, current, progress], [current, progress, deep], [progress, deep,   ], [deep,   , learning], [  , learning, algorithms], [learning, algorithms, .]]

>> Noun Phrases are: 
[Images, 11 billion   parameters, The Table.4, the current progress, algorithms]

>> Named Entities are: 
[('Images', 'GPE'), ('11 billion', 'CARDINAL'), ('3Days', 'CARDINAL')]


============================ Sentence 295 =============================

It has been observed that different deep   learning technologies [32-36] required huge computational   resources to achieve significant results. 


>> Tokens are: 
[observed, different, deep,   , learning, technologies, [, 32, -, 36, ], required, huge, computational,   , resources, achieve, significant, results, .] 

>> PoS Tags are: 
[('observed', 'VERB'), ('different', 'ADJ'), ('deep', 'ADJ'), ('  ', 'SPACE'), ('learning', 'VERB'), ('technologies', 'NOUN'), ('[', 'PUNCT'), ('32', 'NUM'), ('-', 'SYM'), ('36', 'NUM'), (']', 'PUNCT'), ('required', 'VERB'), ('huge', 'ADJ'), ('computational', 'ADJ'), ('  ', 'SPACE'), ('resources', 'NOUN'), ('achieve', 'VERB'), ('significant', 'ADJ'), ('results', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('observed', 'ROOT'), ('different', 'amod'), ('deep', 'amod'), ('  ', 'nsubj'), ('learning', 'acl'), ('technologies', 'dobj'), ('[', 'punct'), ('32', 'nsubj'), ('-', 'punct'), ('36', 'prep'), (']', 'punct'), ('required', 'ccomp'), ('huge', 'amod'), ('computational', 'amod'), ('  ', 'compound'), ('resources', 'dobj'), ('achieve', 'advcl'), ('significant', 'amod'), ('results', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[observed, different], [different, deep], [deep,   ], [  , learning], [learning, technologies], [technologies, [], [[, 32], [32, -], [-, 36], [36, ]], [], required], [required, huge], [huge, computational], [computational,   ], [  , resources], [resources, achieve], [achieve, significant], [significant, results], [results, .]]

>> Trigrams: 
[[observed, different, deep], [different, deep,   ], [deep,   , learning], [  , learning, technologies], [learning, technologies, [], [technologies, [, 32], [[, 32, -], [32, -, 36], [-, 36, ]], [36, ], required], [], required, huge], [required, huge, computational], [huge, computational,   ], [computational,   , resources], [  , resources, achieve], [resources, achieve, significant], [achieve, significant, results], [significant, results, .]]

>> Noun Phrases are: 
[It, technologies, huge computational   resources, significant results]

>> Named Entities are: 
[('32-36', 'CARDINAL')]


============================ Sentence 296 =============================

  8. 


>> Tokens are: 
[  , 8, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('8', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('8', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[  , 8], [8, .]]

>> Trigrams: 
[[  , 8, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('8', 'CARDINAL')]


============================ Sentence 297 =============================

CONCLUSION    


>> Tokens are: 
[CONCLUSION,   ] 

>> PoS Tags are: 
[('CONCLUSION', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('CONCLUSION', 'ROOT'), ('  ', 'punct')]

>> Bigrams: 
[[CONCLUSION,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CONCLUSION]

>> Named Entities are: 
[]


============================ Sentence 298 =============================

Supervised machine learning methods are being applied in   different domains. 


>> Tokens are: 
[Supervised, machine, learning, methods, applied,   , different, domains, .] 

>> PoS Tags are: 
[('Supervised', 'ADJ'), ('machine', 'NOUN'), ('learning', 'VERB'), ('methods', 'NOUN'), ('applied', 'VERB'), ('  ', 'SPACE'), ('different', 'ADJ'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Supervised', 'amod'), ('machine', 'compound'), ('learning', 'compound'), ('methods', 'nsubjpass'), ('applied', 'ROOT'), ('  ', 'nummod'), ('different', 'amod'), ('domains', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Supervised, machine], [machine, learning], [learning, methods], [methods, applied], [applied,   ], [  , different], [different, domains], [domains, .]]

>> Trigrams: 
[[Supervised, machine, learning], [machine, learning, methods], [learning, methods, applied], [methods, applied,   ], [applied,   , different], [  , different, domains], [different, domains, .]]

>> Noun Phrases are: 
[Supervised machine learning methods,   different domains]

>> Named Entities are: 
[]


============================ Sentence 299 =============================

Due to scope of this paper, it is very difficult to   discuss the strength and weaknesses of each algorithm of ML. 


>> Tokens are: 
[scope, paper, ,, difficult,   , discuss, strength, weaknesses, algorithm, ML, .] 

>> PoS Tags are: 
[('scope', 'NOUN'), ('paper', 'NOUN'), (',', 'PUNCT'), ('difficult', 'ADJ'), ('  ', 'SPACE'), ('discuss', 'VERB'), ('strength', 'NOUN'), ('weaknesses', 'NOUN'), ('algorithm', 'NOUN'), ('ML', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('scope', 'pobj'), ('paper', 'pobj'), (',', 'punct'), ('difficult', 'acomp'), ('  ', 'nsubj'), ('discuss', 'conj'), ('strength', 'dobj'), ('weaknesses', 'conj'), ('algorithm', 'pobj'), ('ML', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[scope, paper], [paper, ,], [,, difficult], [difficult,   ], [  , discuss], [discuss, strength], [strength, weaknesses], [weaknesses, algorithm], [algorithm, ML], [ML, .]]

>> Trigrams: 
[[scope, paper, ,], [paper, ,, difficult], [,, difficult,   ], [difficult,   , discuss], [  , discuss, strength], [discuss, strength, weaknesses], [strength, weaknesses, algorithm], [weaknesses, algorithm, ML], [algorithm, ML, .]]

>> Noun Phrases are: 
[scope, this paper, it, the strength, weaknesses, each algorithm, ML]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 300 =============================

The   selection of algorithm in ML is mainly depends on task nature. 


>> Tokens are: 
[  , selection, algorithm, ML, mainly, depends, task, nature, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('selection', 'NOUN'), ('algorithm', 'NOUN'), ('ML', 'PROPN'), ('mainly', 'ADV'), ('depends', 'VERB'), ('task', 'NOUN'), ('nature', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('selection', 'nsubj'), ('algorithm', 'pobj'), ('ML', 'pobj'), ('mainly', 'advmod'), ('depends', 'ROOT'), ('task', 'compound'), ('nature', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , selection], [selection, algorithm], [algorithm, ML], [ML, mainly], [mainly, depends], [depends, task], [task, nature], [nature, .]]

>> Trigrams: 
[[  , selection, algorithm], [selection, algorithm, ML], [algorithm, ML, mainly], [ML, mainly, depends], [mainly, depends, task], [depends, task, nature], [task, nature, .]]

>> Noun Phrases are: 
[The   selection, algorithm, ML, task nature]

>> Named Entities are: 
[('ML', 'ORG')]


============================ Sentence 301 =============================

The   performance of SVM and Neural Networks is better when dealing   with multidimensions and continuous features. 


>> Tokens are: 
[  , performance, SVM, Neural, Networks, better, dealing,   , multidimensions, continuous, features, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('performance', 'NOUN'), ('SVM', 'PROPN'), ('Neural', 'PROPN'), ('Networks', 'PROPN'), ('better', 'ADJ'), ('dealing', 'VERB'), ('  ', 'SPACE'), ('multidimensions', 'NOUN'), ('continuous', 'ADJ'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('performance', 'nsubj'), ('SVM', 'pobj'), ('Neural', 'compound'), ('Networks', 'conj'), ('better', 'acomp'), ('dealing', 'advcl'), ('  ', 'dobj'), ('multidimensions', 'pobj'), ('continuous', 'amod'), ('features', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[  , performance], [performance, SVM], [SVM, Neural], [Neural, Networks], [Networks, better], [better, dealing], [dealing,   ], [  , multidimensions], [multidimensions, continuous], [continuous, features], [features, .]]

>> Trigrams: 
[[  , performance, SVM], [performance, SVM, Neural], [SVM, Neural, Networks], [Neural, Networks, better], [Networks, better, dealing], [better, dealing,   ], [dealing,   , multidimensions], [  , multidimensions, continuous], [multidimensions, continuous, features], [continuous, features, .]]

>> Noun Phrases are: 
[The   performance, SVM, Neural Networks, multidimensions, continuous features]

>> Named Entities are: 
[('SVM', 'ORG'), ('Neural Networks', 'ORG')]


============================ Sentence 302 =============================

While logic-based   systems tend to perform better when dealing with   discrete/categorical features. 


>> Tokens are: 
[logic, -, based,   , systems, tend, perform, better, dealing,   , discrete, /, categorical, features, .] 

>> PoS Tags are: 
[('logic', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('  ', 'SPACE'), ('systems', 'NOUN'), ('tend', 'VERB'), ('perform', 'VERB'), ('better', 'ADV'), ('dealing', 'VERB'), ('  ', 'SPACE'), ('discrete', 'ADJ'), ('/', 'SYM'), ('categorical', 'ADJ'), ('features', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('logic', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('  ', 'compound'), ('systems', 'nsubj'), ('tend', 'ROOT'), ('perform', 'xcomp'), ('better', 'advmod'), ('dealing', 'advcl'), ('  ', 'nummod'), ('discrete', 'amod'), ('/', 'punct'), ('categorical', 'amod'), ('features', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[logic, -], [-, based], [based,   ], [  , systems], [systems, tend], [tend, perform], [perform, better], [better, dealing], [dealing,   ], [  , discrete], [discrete, /], [/, categorical], [categorical, features], [features, .]]

>> Trigrams: 
[[logic, -, based], [-, based,   ], [based,   , systems], [  , systems, tend], [systems, tend, perform], [tend, perform, better], [perform, better, dealing], [better, dealing,   ], [dealing,   , discrete], [  , discrete, /], [discrete, /, categorical], [/, categorical, features], [categorical, features, .]]

>> Noun Phrases are: 
[logic-based   systems,   discrete/categorical features]

>> Named Entities are: 
[]


============================ Sentence 303 =============================

For neural network models and SVMs,   a large sample size is required in order to achieve its maximum   prediction accuracy whereas NB may need a relatively small   dataset. 


>> Tokens are: 
[neural, network, models, SVMs, ,,   , large, sample, size, required, order, achieve, maximum,   , prediction, accuracy, NB, need, relatively, small,   , dataset, .] 

>> PoS Tags are: 
[('neural', 'ADJ'), ('network', 'NOUN'), ('models', 'NOUN'), ('SVMs', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('large', 'ADJ'), ('sample', 'NOUN'), ('size', 'NOUN'), ('required', 'VERB'), ('order', 'NOUN'), ('achieve', 'VERB'), ('maximum', 'ADJ'), ('  ', 'SPACE'), ('prediction', 'NOUN'), ('accuracy', 'NOUN'), ('NB', 'PROPN'), ('need', 'VERB'), ('relatively', 'ADV'), ('small', 'ADJ'), ('  ', 'SPACE'), ('dataset', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('neural', 'amod'), ('network', 'compound'), ('models', 'pobj'), ('SVMs', 'conj'), (',', 'punct'), ('  ', 'nmod'), ('large', 'amod'), ('sample', 'compound'), ('size', 'nsubjpass'), ('required', 'ROOT'), ('order', 'pobj'), ('achieve', 'acl'), ('maximum', 'amod'), ('  ', 'nummod'), ('prediction', 'compound'), ('accuracy', 'dobj'), ('NB', 'nsubj'), ('need', 'advcl'), ('relatively', 'advmod'), ('small', 'amod'), ('  ', 'compound'), ('dataset', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[neural, network], [network, models], [models, SVMs], [SVMs, ,], [,,   ], [  , large], [large, sample], [sample, size], [size, required], [required, order], [order, achieve], [achieve, maximum], [maximum,   ], [  , prediction], [prediction, accuracy], [accuracy, NB], [NB, need], [need, relatively], [relatively, small], [small,   ], [  , dataset], [dataset, .]]

>> Trigrams: 
[[neural, network, models], [network, models, SVMs], [models, SVMs, ,], [SVMs, ,,   ], [,,   , large], [  , large, sample], [large, sample, size], [sample, size, required], [size, required, order], [required, order, achieve], [order, achieve, maximum], [achieve, maximum,   ], [maximum,   , prediction], [  , prediction, accuracy], [prediction, accuracy, NB], [accuracy, NB, need], [NB, need, relatively], [need, relatively, small], [relatively, small,   ], [small,   , dataset], [  , dataset, .]]

>> Noun Phrases are: 
[neural network models, SVMs,   a large sample size, order, its maximum   prediction accuracy, NB, a relatively small   dataset]

>> Named Entities are: 
[('NB', 'ORG')]


============================ Sentence 304 =============================

For the last few years deep learning is becoming a   mainstream technology for variety of application domains, like face   detection, speech recognition and detection, object recognition,   natural language processing and robotics. 


>> Tokens are: 
[years, deep, learning,   , mainstream, technology, variety, application, domains, ,, like, face,   , detection, ,, speech, recognition, detection, ,, object, recognition, ,,   , natural, language, processing, robotics, .] 

>> PoS Tags are: 
[('years', 'NOUN'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('  ', 'SPACE'), ('mainstream', 'NOUN'), ('technology', 'NOUN'), ('variety', 'NOUN'), ('application', 'NOUN'), ('domains', 'NOUN'), (',', 'PUNCT'), ('like', 'ADP'), ('face', 'NOUN'), ('  ', 'SPACE'), ('detection', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('object', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('robotics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('years', 'pobj'), ('deep', 'amod'), ('learning', 'nsubj'), ('  ', 'nummod'), ('mainstream', 'compound'), ('technology', 'attr'), ('variety', 'pobj'), ('application', 'compound'), ('domains', 'pobj'), (',', 'punct'), ('like', 'prep'), ('face', 'pcomp'), ('  ', 'nummod'), ('detection', 'dobj'), (',', 'punct'), ('speech', 'compound'), ('recognition', 'conj'), ('detection', 'conj'), (',', 'punct'), ('object', 'compound'), ('recognition', 'conj'), (',', 'punct'), ('  ', 'nmod'), ('natural', 'amod'), ('language', 'compound'), ('processing', 'pobj'), ('robotics', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[years, deep], [deep, learning], [learning,   ], [  , mainstream], [mainstream, technology], [technology, variety], [variety, application], [application, domains], [domains, ,], [,, like], [like, face], [face,   ], [  , detection], [detection, ,], [,, speech], [speech, recognition], [recognition, detection], [detection, ,], [,, object], [object, recognition], [recognition, ,], [,,   ], [  , natural], [natural, language], [language, processing], [processing, robotics], [robotics, .]]

>> Trigrams: 
[[years, deep, learning], [deep, learning,   ], [learning,   , mainstream], [  , mainstream, technology], [mainstream, technology, variety], [technology, variety, application], [variety, application, domains], [application, domains, ,], [domains, ,, like], [,, like, face], [like, face,   ], [face,   , detection], [  , detection, ,], [detection, ,, speech], [,, speech, recognition], [speech, recognition, detection], [recognition, detection, ,], [detection, ,, object], [,, object, recognition], [object, recognition, ,], [recognition, ,,   ], [,,   , natural], [  , natural, language], [natural, language, processing], [language, processing, robotics], [processing, robotics, .]]

>> Noun Phrases are: 
[the last few years, deep learning, a   mainstream technology, variety, application domains, face,   detection, speech recognition, detection, object recognition,   natural language processing, robotics]

>> Named Entities are: 
[('the last few years', 'DATE')]


============================ Sentence 305 =============================

We believe that the   challenges posed by big data will bring ample opportunities for ML   algorithms and especially to deep learning methods. 


>> Tokens are: 
[believe,   , challenges, posed, big, data, bring, ample, opportunities, ML,   , algorithms, especially, deep, learning, methods, .] 

>> PoS Tags are: 
[('believe', 'VERB'), ('  ', 'SPACE'), ('challenges', 'NOUN'), ('posed', 'VERB'), ('big', 'ADJ'), ('data', 'NOUN'), ('bring', 'VERB'), ('ample', 'ADJ'), ('opportunities', 'NOUN'), ('ML', 'PROPN'), ('  ', 'SPACE'), ('algorithms', 'NOUN'), ('especially', 'ADV'), ('deep', 'ADJ'), ('learning', 'NOUN'), ('methods', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('believe', 'ROOT'), ('  ', 'compound'), ('challenges', 'nsubj'), ('posed', 'acl'), ('big', 'amod'), ('data', 'pobj'), ('bring', 'ccomp'), ('ample', 'amod'), ('opportunities', 'dobj'), ('ML', 'compound'), ('  ', 'nummod'), ('algorithms', 'pobj'), ('especially', 'advmod'), ('deep', 'amod'), ('learning', 'compound'), ('methods', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[believe,   ], [  , challenges], [challenges, posed], [posed, big], [big, data], [data, bring], [bring, ample], [ample, opportunities], [opportunities, ML], [ML,   ], [  , algorithms], [algorithms, especially], [especially, deep], [deep, learning], [learning, methods], [methods, .]]

>> Trigrams: 
[[believe,   , challenges], [  , challenges, posed], [challenges, posed, big], [posed, big, data], [big, data, bring], [data, bring, ample], [bring, ample, opportunities], [ample, opportunities, ML], [opportunities, ML,   ], [ML,   , algorithms], [  , algorithms, especially], [algorithms, especially, deep], [especially, deep, learning], [deep, learning, methods], [learning, methods, .]]

>> Noun Phrases are: 
[We, the   challenges, big data, ample opportunities, ML   algorithms, deep learning methods]

>> Named Entities are: 
[]


============================ Sentence 306 =============================

   ACKNOWLEDGEMENT   I would like to express my gratitude to my teacher, Dr. Wang    


>> Tokens are: 
[   , ACKNOWLEDGEMENT,   , like, express, gratitude, teacher, ,, Dr., Wang,   ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('ACKNOWLEDGEMENT', 'NOUN'), ('  ', 'SPACE'), ('like', 'VERB'), ('express', 'VERB'), ('gratitude', 'NOUN'), ('teacher', 'NOUN'), (',', 'PUNCT'), ('Dr.', 'PROPN'), ('Wang', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('ACKNOWLEDGEMENT', 'npadvmod'), ('  ', 'appos'), ('like', 'ROOT'), ('express', 'xcomp'), ('gratitude', 'dobj'), ('teacher', 'pobj'), (',', 'punct'), ('Dr.', 'compound'), ('Wang', 'npadvmod'), ('  ', 'punct')]

>> Bigrams: 
[[   , ACKNOWLEDGEMENT], [ACKNOWLEDGEMENT,   ], [  , like], [like, express], [express, gratitude], [gratitude, teacher], [teacher, ,], [,, Dr.], [Dr., Wang], [Wang,   ]]

>> Trigrams: 
[[   , ACKNOWLEDGEMENT,   ], [ACKNOWLEDGEMENT,   , like], [  , like, express], [like, express, gratitude], [express, gratitude, teacher], [gratitude, teacher, ,], [teacher, ,, Dr.], [,, Dr., Wang], [Dr., Wang,   ]]

>> Noun Phrases are: 
[I, my gratitude, my teacher]

>> Named Entities are: 
[('Wang', 'PERSON')]


============================ Sentence 307 =============================

Hongjun, whose expertise and guidance added considerably to   my graduate experience. 


>> Tokens are: 
[Hongjun, ,, expertise, guidance, added, considerably,   , graduate, experience, .] 

>> PoS Tags are: 
[('Hongjun', 'PROPN'), (',', 'PUNCT'), ('expertise', 'NOUN'), ('guidance', 'NOUN'), ('added', 'VERB'), ('considerably', 'ADV'), ('  ', 'SPACE'), ('graduate', 'NOUN'), ('experience', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Hongjun', 'ROOT'), (',', 'punct'), ('expertise', 'nsubj'), ('guidance', 'conj'), ('added', 'relcl'), ('considerably', 'advmod'), ('  ', 'pobj'), ('graduate', 'compound'), ('experience', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Hongjun, ,], [,, expertise], [expertise, guidance], [guidance, added], [added, considerably], [considerably,   ], [  , graduate], [graduate, experience], [experience, .]]

>> Trigrams: 
[[Hongjun, ,, expertise], [,, expertise, guidance], [expertise, guidance, added], [guidance, added, considerably], [added, considerably,   ], [considerably,   , graduate], [  , graduate, experience], [graduate, experience, .]]

>> Noun Phrases are: 
[Hongjun, whose expertise, guidance, my graduate experience]

>> Named Entities are: 
[('Hongjun', 'PERSON')]


============================ Sentence 308 =============================

I appreciate his vast knowledge and his   consistent assistance in completing this work. 


>> Tokens are: 
[appreciate, vast, knowledge,   , consistent, assistance, completing, work, .] 

>> PoS Tags are: 
[('appreciate', 'VERB'), ('vast', 'ADJ'), ('knowledge', 'NOUN'), ('  ', 'SPACE'), ('consistent', 'ADJ'), ('assistance', 'NOUN'), ('completing', 'VERB'), ('work', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('appreciate', 'ROOT'), ('vast', 'amod'), ('knowledge', 'dobj'), ('  ', 'nmod'), ('consistent', 'amod'), ('assistance', 'conj'), ('completing', 'pcomp'), ('work', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[appreciate, vast], [vast, knowledge], [knowledge,   ], [  , consistent], [consistent, assistance], [assistance, completing], [completing, work], [work, .]]

>> Trigrams: 
[[appreciate, vast, knowledge], [vast, knowledge,   ], [knowledge,   , consistent], [  , consistent, assistance], [consistent, assistance, completing], [assistance, completing, work], [completing, work, .]]

>> Noun Phrases are: 
[I, his vast knowledge, his   consistent assistance, this work]

>> Named Entities are: 
[]


============================ Sentence 309 =============================

I would also like   to thank the other PhD Scholars of my school, Mr. Amjad   Ahmed, and Mr. Mehtab Afzal for the assistance they provided   to understand machine learning. 


>> Tokens are: 
[like,   , thank, PhD, Scholars, school, ,, Mr., Amjad,   , Ahmed, ,, Mr., Mehtab, Afzal, assistance, provided,   , understand, machine, learning, .] 

>> PoS Tags are: 
[('like', 'VERB'), ('  ', 'SPACE'), ('thank', 'VERB'), ('PhD', 'NOUN'), ('Scholars', 'NOUN'), ('school', 'NOUN'), (',', 'PUNCT'), ('Mr.', 'PROPN'), ('Amjad', 'PROPN'), ('  ', 'SPACE'), ('Ahmed', 'PROPN'), (',', 'PUNCT'), ('Mr.', 'PROPN'), ('Mehtab', 'PROPN'), ('Afzal', 'PROPN'), ('assistance', 'NOUN'), ('provided', 'VERB'), ('  ', 'SPACE'), ('understand', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('like', 'ROOT'), ('  ', 'dobj'), ('thank', 'advcl'), ('PhD', 'compound'), ('Scholars', 'dobj'), ('school', 'pobj'), (',', 'punct'), ('Mr.', 'compound'), ('Amjad', 'npadvmod'), ('  ', 'compound'), ('Ahmed', 'appos'), (',', 'punct'), ('Mr.', 'compound'), ('Mehtab', 'compound'), ('Afzal', 'conj'), ('assistance', 'pobj'), ('provided', 'relcl'), ('  ', 'dobj'), ('understand', 'acl'), ('machine', 'compound'), ('learning', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[like,   ], [  , thank], [thank, PhD], [PhD, Scholars], [Scholars, school], [school, ,], [,, Mr.], [Mr., Amjad], [Amjad,   ], [  , Ahmed], [Ahmed, ,], [,, Mr.], [Mr., Mehtab], [Mehtab, Afzal], [Afzal, assistance], [assistance, provided], [provided,   ], [  , understand], [understand, machine], [machine, learning], [learning, .]]

>> Trigrams: 
[[like,   , thank], [  , thank, PhD], [thank, PhD, Scholars], [PhD, Scholars, school], [Scholars, school, ,], [school, ,, Mr.], [,, Mr., Amjad], [Mr., Amjad,   ], [Amjad,   , Ahmed], [  , Ahmed, ,], [Ahmed, ,, Mr.], [,, Mr., Mehtab], [Mr., Mehtab, Afzal], [Mehtab, Afzal, assistance], [Afzal, assistance, provided], [assistance, provided,   ], [provided,   , understand], [  , understand, machine], [understand, machine, learning], [machine, learning, .]]

>> Noun Phrases are: 
[I, the other PhD Scholars, my school,   Ahmed, the assistance, they, machine learning]

>> Named Entities are: 
[('PhD Scholars', 'WORK_OF_ART'), ('Amjad', 'PERSON'), ('Ahmed', 'PERSON'), ('Mehtab Afzal', 'PERSON')]


============================ Sentence 310 =============================

Very special thanks goes to Dr.   Zhu Yan, without whose motivation and encouragement, I   confess that it would be difficult for me to move forward in my   PhD Program. 


>> Tokens are: 
[special, thanks, goes, Dr.,   , Zhu, Yan, ,, motivation, encouragement, ,,   , confess, difficult, forward,   , PhD, Program, .] 

>> PoS Tags are: 
[('special', 'ADJ'), ('thanks', 'NOUN'), ('goes', 'VERB'), ('Dr.', 'PROPN'), ('  ', 'SPACE'), ('Zhu', 'PROPN'), ('Yan', 'PROPN'), (',', 'PUNCT'), ('motivation', 'NOUN'), ('encouragement', 'NOUN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('confess', 'VERB'), ('difficult', 'ADJ'), ('forward', 'ADV'), ('  ', 'SPACE'), ('PhD', 'NOUN'), ('Program', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('special', 'amod'), ('thanks', 'nsubj'), ('goes', 'ROOT'), ('Dr.', 'pobj'), ('  ', 'appos'), ('Zhu', 'compound'), ('Yan', 'pobj'), (',', 'punct'), ('motivation', 'pobj'), ('encouragement', 'conj'), (',', 'punct'), ('  ', 'appos'), ('confess', 'advcl'), ('difficult', 'acomp'), ('forward', 'advmod'), ('  ', 'compound'), ('PhD', 'compound'), ('Program', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[special, thanks], [thanks, goes], [goes, Dr.], [Dr.,   ], [  , Zhu], [Zhu, Yan], [Yan, ,], [,, motivation], [motivation, encouragement], [encouragement, ,], [,,   ], [  , confess], [confess, difficult], [difficult, forward], [forward,   ], [  , PhD], [PhD, Program], [Program, .]]

>> Trigrams: 
[[special, thanks, goes], [thanks, goes, Dr.], [goes, Dr.,   ], [Dr.,   , Zhu], [  , Zhu, Yan], [Zhu, Yan, ,], [Yan, ,, motivation], [,, motivation, encouragement], [motivation, encouragement, ,], [encouragement, ,,   ], [,,   , confess], [  , confess, difficult], [confess, difficult, forward], [difficult, forward,   ], [forward,   , PhD], [  , PhD, Program], [PhD, Program, .]]

>> Noun Phrases are: 
[Very special thanks, Dr., Zhu Yan, whose motivation, encouragement, I, it, me, my   PhD Program]

>> Named Entities are: 
[('Zhu Yan', 'PERSON'), ('PhD Program', 'ORG')]


============================ Sentence 311 =============================

  REFERENCES   [1] S. B. Kotsiantis, “Supervised Machine Learning: 


>> Tokens are: 
[  , REFERENCES,   , [, 1, ], S., B., Kotsiantis, ,, “, Supervised, Machine, Learning, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('REFERENCES', 'NOUN'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('1', 'NUM'), (']', 'PUNCT'), ('S.', 'PROPN'), ('B.', 'PROPN'), ('Kotsiantis', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Supervised', 'ADJ'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('REFERENCES', 'compound'), ('  ', 'ROOT'), ('[', 'punct'), ('1', 'appos'), (']', 'punct'), ('S.', 'compound'), ('B.', 'compound'), ('Kotsiantis', 'appos'), (',', 'punct'), ('“', 'punct'), ('Supervised', 'amod'), ('Machine', 'compound'), ('Learning', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , REFERENCES], [REFERENCES,   ], [  , [], [[, 1], [1, ]], [], S.], [S., B.], [B., Kotsiantis], [Kotsiantis, ,], [,, “], [“, Supervised], [Supervised, Machine], [Machine, Learning], [Learning, :]]

>> Trigrams: 
[[  , REFERENCES,   ], [REFERENCES,   , [], [  , [, 1], [[, 1, ]], [1, ], S.], [], S., B.], [S., B., Kotsiantis], [B., Kotsiantis, ,], [Kotsiantis, ,, “], [,, “, Supervised], [“, Supervised, Machine], [Supervised, Machine, Learning], [Machine, Learning, :]]

>> Noun Phrases are: 
[S. B. Kotsiantis, “Supervised Machine Learning]

>> Named Entities are: 
[('S. B. Kotsiantis', 'PERSON'), ('Supervised Machine Learning:', 'WORK_OF_ART')]


============================ Sentence 312 =============================

A Review  of Classification Techniques”, Informatica, Vol. 


>> Tokens are: 
[Review,  , Classification, Techniques, ”, ,, Informatica, ,, Vol, .] 

>> PoS Tags are: 
[('Review', 'PROPN'), (' ', 'SPACE'), ('Classification', 'PROPN'), ('Techniques', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Informatica', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Review', 'ROOT'), (' ', 'appos'), ('Classification', 'compound'), ('Techniques', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Informatica', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Review,  ], [ , Classification], [Classification, Techniques], [Techniques, ”], [”, ,], [,, Informatica], [Informatica, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Review,  , Classification], [ , Classification, Techniques], [Classification, Techniques, ”], [Techniques, ”, ,], [”, ,, Informatica], [,, Informatica, ,], [Informatica, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[A Review, Classification Techniques, Informatica]

>> Named Entities are: 
[('Informatica', 'PERSON')]


============================ Sentence 313 =============================

31, No. 3,   pp. 


>> Tokens are: 
[31, ,, ., 3, ,,   , pp, .] 

>> PoS Tags are: 
[('31', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('  ', 'SPACE'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('31', 'nummod'), (',', 'punct'), ('.', 'appos'), ('3', 'nummod'), (',', 'punct'), ('  ', 'ROOT'), ('pp', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[31, ,], [,, .], [., 3], [3, ,], [,,   ], [  , pp], [pp, .]]

>> Trigrams: 
[[31, ,, .], [,, ., 3], [., 3, ,], [3, ,,   ], [,,   , pp], [  , pp, .]]

>> Noun Phrases are: 
[.]

>> Named Entities are: 
[('31', 'DATE'), ('3', 'CARDINAL')]


============================ Sentence 314 =============================

249-268, 2007. 


>> Tokens are: 
[249, -, 268, ,, 2007, .] 

>> PoS Tags are: 
[('249', 'NUM'), ('-', 'SYM'), ('268', 'NUM'), (',', 'PUNCT'), ('2007', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('249', 'ROOT'), ('-', 'punct'), ('268', 'prep'), (',', 'punct'), ('2007', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[249, -], [-, 268], [268, ,], [,, 2007], [2007, .]]

>> Trigrams: 
[[249, -, 268], [-, 268, ,], [268, ,, 2007], [,, 2007, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('249', 'CARDINAL')]


============================ Sentence 315 =============================

  javascript:void(0); javascript:void(0); javascript:void(0); javascript:void(0);   IQBAL MUHAMMAD AND ZHU YAN: SUPERVISED MACHINE LEARNING APPROACHES: 


>> Tokens are: 
[  , javascript, :, void(0, ), ;, javascript, :, void(0, ), ;, javascript, :, void(0, ), ;, javascript, :, void(0, ), ;,   , IQBAL, MUHAMMAD, ZHU, YAN, :, SUPERVISED, MACHINE, LEARNING, APPROACHES, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('javascript', 'NOUN'), (':', 'PUNCT'), ('void(0', 'X'), (')', 'PUNCT'), (';', 'PUNCT'), ('javascript', 'NOUN'), (':', 'PUNCT'), ('void(0', 'X'), (')', 'PUNCT'), (';', 'PUNCT'), ('javascript', 'NOUN'), (':', 'PUNCT'), ('void(0', 'X'), (')', 'PUNCT'), (';', 'PUNCT'), ('javascript', 'NOUN'), (':', 'PUNCT'), ('void(0', 'X'), (')', 'PUNCT'), (';', 'PUNCT'), ('  ', 'SPACE'), ('IQBAL', 'VERB'), ('MUHAMMAD', 'PROPN'), ('ZHU', 'PROPN'), ('YAN', 'PROPN'), (':', 'PUNCT'), ('SUPERVISED', 'ADJ'), ('MACHINE', 'NOUN'), ('LEARNING', 'NOUN'), ('APPROACHES', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('javascript', 'ROOT'), (':', 'punct'), ('void(0', 'appos'), (')', 'punct'), (';', 'punct'), ('javascript', 'appos'), (':', 'punct'), ('void(0', 'appos'), (')', 'punct'), (';', 'punct'), ('javascript', 'appos'), (':', 'punct'), ('void(0', 'appos'), (')', 'punct'), (';', 'punct'), ('javascript', 'conj'), (':', 'punct'), ('void(0', 'appos'), (')', 'punct'), (';', 'punct'), ('  ', 'compound'), ('IQBAL', 'compound'), ('MUHAMMAD', 'conj'), ('ZHU', 'compound'), ('YAN', 'conj'), (':', 'punct'), ('SUPERVISED', 'amod'), ('MACHINE', 'compound'), ('LEARNING', 'compound'), ('APPROACHES', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , javascript], [javascript, :], [:, void(0], [void(0, )], [), ;], [;, javascript], [javascript, :], [:, void(0], [void(0, )], [), ;], [;, javascript], [javascript, :], [:, void(0], [void(0, )], [), ;], [;, javascript], [javascript, :], [:, void(0], [void(0, )], [), ;], [;,   ], [  , IQBAL], [IQBAL, MUHAMMAD], [MUHAMMAD, ZHU], [ZHU, YAN], [YAN, :], [:, SUPERVISED], [SUPERVISED, MACHINE], [MACHINE, LEARNING], [LEARNING, APPROACHES], [APPROACHES, :]]

>> Trigrams: 
[[  , javascript, :], [javascript, :, void(0], [:, void(0, )], [void(0, ), ;], [), ;, javascript], [;, javascript, :], [javascript, :, void(0], [:, void(0, )], [void(0, ), ;], [), ;, javascript], [;, javascript, :], [javascript, :, void(0], [:, void(0, )], [void(0, ), ;], [), ;, javascript], [;, javascript, :], [javascript, :, void(0], [:, void(0, )], [void(0, ), ;], [), ;,   ], [;,   , IQBAL], [  , IQBAL, MUHAMMAD], [IQBAL, MUHAMMAD, ZHU], [MUHAMMAD, ZHU, YAN], [ZHU, YAN, :], [YAN, :, SUPERVISED], [:, SUPERVISED, MACHINE], [SUPERVISED, MACHINE, LEARNING], [MACHINE, LEARNING, APPROACHES], [LEARNING, APPROACHES, :]]

>> Noun Phrases are: 
[  javascript, javascript, javascript, javascript,   IQBAL MUHAMMAD, ZHU YAN, SUPERVISED MACHINE LEARNING APPROACHES]

>> Named Entities are: 
[('ZHU YAN', 'PERSON')]


============================ Sentence 316 =============================

A SURVEY   952    


>> Tokens are: 
[SURVEY,   , 952,   ] 

>> PoS Tags are: 
[('SURVEY', 'NOUN'), ('  ', 'SPACE'), ('952', 'NUM'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('SURVEY', 'nsubj'), ('  ', 'ROOT'), ('952', 'nummod'), ('  ', 'npadvmod')]

>> Bigrams: 
[[SURVEY,   ], [  , 952], [952,   ]]

>> Trigrams: 
[[SURVEY,   , 952], [  , 952,   ]]

>> Noun Phrases are: 
[A SURVEY]

>> Named Entities are: 
[('952', 'CARDINAL')]


============================ Sentence 317 =============================

[2] James Cussens, “Machine Learning”, IEEE Journal of  Computing and Control, Vol. 


>> Tokens are: 
[[, 2, ], James, Cussens, ,, “, Machine, Learning, ”, ,, IEEE, Journal,  , Computing, Control, ,, Vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('2', 'NUM'), (']', 'PUNCT'), ('James', 'PROPN'), ('Cussens', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('IEEE', 'PROPN'), ('Journal', 'PROPN'), (' ', 'SPACE'), ('Computing', 'PROPN'), ('Control', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('2', 'nummod'), (']', 'punct'), ('James', 'compound'), ('Cussens', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('Learning', 'appos'), ('”', 'punct'), (',', 'punct'), ('IEEE', 'compound'), ('Journal', 'conj'), (' ', 'pobj'), ('Computing', 'conj'), ('Control', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 2], [2, ]], [], James], [James, Cussens], [Cussens, ,], [,, “], [“, Machine], [Machine, Learning], [Learning, ”], [”, ,], [,, IEEE], [IEEE, Journal], [Journal,  ], [ , Computing], [Computing, Control], [Control, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[[, 2, ]], [2, ], James], [], James, Cussens], [James, Cussens, ,], [Cussens, ,, “], [,, “, Machine], [“, Machine, Learning], [Machine, Learning, ”], [Learning, ”, ,], [”, ,, IEEE], [,, IEEE, Journal], [IEEE, Journal,  ], [Journal,  , Computing], [ , Computing, Control], [Computing, Control, ,], [Control, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[[2] James Cussens, “Machine Learning, IEEE Journal, Computing, Control]

>> Named Entities are: 
[('2', 'CARDINAL'), ('James Cussens', 'PERSON'), ('Machine Learning', 'WORK_OF_ART'), ('IEEE Journal of  Computing', 'ORG')]


============================ Sentence 318 =============================

7, No. 4, pp 164-168, 1996. 


>> Tokens are: 
[7, ,, ., 4, ,, pp, 164, -, 168, ,, 1996, .] 

>> PoS Tags are: 
[('7', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('164', 'NUM'), ('-', 'SYM'), ('168', 'NUM'), (',', 'PUNCT'), ('1996', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('4', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('164', 'npadvmod'), ('-', 'punct'), ('168', 'prep'), (',', 'punct'), ('1996', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[7, ,], [,, .], [., 4], [4, ,], [,, pp], [pp, 164], [164, -], [-, 168], [168, ,], [,, 1996], [1996, .]]

>> Trigrams: 
[[7, ,, .], [,, ., 4], [., 4, ,], [4, ,, pp], [,, pp, 164], [pp, 164, -], [164, -, 168], [-, 168, ,], [168, ,, 1996], [,, 1996, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('7', 'CARDINAL'), ('4', 'CARDINAL'), ('164', 'CARDINAL')]


============================ Sentence 319 =============================

  [3] Richard S. Sutton and Andrew G. Barto, “Reinforcement   


>> Tokens are: 
[  , [, 3, ], Richard, S., Sutton, Andrew, G., Barto, ,, “, Reinforcement,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('3', 'NUM'), (']', 'PUNCT'), ('Richard', 'PROPN'), ('S.', 'PROPN'), ('Sutton', 'PROPN'), ('Andrew', 'PROPN'), ('G.', 'PROPN'), ('Barto', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Reinforcement', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('3', 'appos'), (']', 'punct'), ('Richard', 'compound'), ('S.', 'compound'), ('Sutton', 'appos'), ('Andrew', 'compound'), ('G.', 'compound'), ('Barto', 'conj'), (',', 'punct'), ('“', 'punct'), ('Reinforcement', 'appos'), (' ', 'nummod')]

>> Bigrams: 
[[  , [], [[, 3], [3, ]], [], Richard], [Richard, S.], [S., Sutton], [Sutton, Andrew], [Andrew, G.], [G., Barto], [Barto, ,], [,, “], [“, Reinforcement], [Reinforcement,  ]]

>> Trigrams: 
[[  , [, 3], [[, 3, ]], [3, ], Richard], [], Richard, S.], [Richard, S., Sutton], [S., Sutton, Andrew], [Sutton, Andrew, G.], [Andrew, G., Barto], [G., Barto, ,], [Barto, ,, “], [,, “, Reinforcement], [“, Reinforcement,  ]]

>> Noun Phrases are: 
[Richard S. Sutton, Andrew G. Barto, Reinforcement]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Richard S. Sutton', 'PERSON'), ('Andrew G. Barto', 'PERSON'), ('Reinforcement  ', 'WORK_OF_ART')]


============================ Sentence 320 =============================

Learning: An Introduction”, Cambridge, MA: MIT Press, 1998. 


>> Tokens are: 
[Learning, :, Introduction, ”, ,, Cambridge, ,, MA, :, MIT, Press, ,, 1998, .] 

>> PoS Tags are: 
[('Learning', 'NOUN'), (':', 'PUNCT'), ('Introduction', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Cambridge', 'PROPN'), (',', 'PUNCT'), ('MA', 'PROPN'), (':', 'PUNCT'), ('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('1998', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), (':', 'punct'), ('Introduction', 'appos'), ('”', 'punct'), (',', 'punct'), ('Cambridge', 'appos'), (',', 'punct'), ('MA', 'appos'), (':', 'punct'), ('MIT', 'compound'), ('Press', 'appos'), (',', 'punct'), ('1998', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Learning, :], [:, Introduction], [Introduction, ”], [”, ,], [,, Cambridge], [Cambridge, ,], [,, MA], [MA, :], [:, MIT], [MIT, Press], [Press, ,], [,, 1998], [1998, .]]

>> Trigrams: 
[[Learning, :, Introduction], [:, Introduction, ”], [Introduction, ”, ,], [”, ,, Cambridge], [,, Cambridge, ,], [Cambridge, ,, MA], [,, MA, :], [MA, :, MIT], [:, MIT, Press], [MIT, Press, ,], [Press, ,, 1998], [,, 1998, .]]

>> Noun Phrases are: 
[Learning, An Introduction, Cambridge, MA, MIT Press]

>> Named Entities are: 
[('Cambridge', 'GPE'), ('MA', 'ORG'), ('MIT Press', 'ORG'), ('1998', 'DATE')]


============================ Sentence 321 =============================

  [4] Victoria J. Hodge and Jim Austin, “A Survey of Outlier  Detection Methodologies”, Artificial Intelligence Review,   Vol. 


>> Tokens are: 
[  , [, 4, ], Victoria, J., Hodge, Jim, Austin, ,, “, Survey, Outlier,  , Detection, Methodologies, ”, ,, Artificial, Intelligence, Review, ,,   , Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('4', 'NUM'), (']', 'PUNCT'), ('Victoria', 'PROPN'), ('J.', 'PROPN'), ('Hodge', 'PROPN'), ('Jim', 'PROPN'), ('Austin', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Survey', 'NOUN'), ('Outlier', 'PROPN'), (' ', 'SPACE'), ('Detection', 'PROPN'), ('Methodologies', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Review', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('4', 'appos'), (']', 'punct'), ('Victoria', 'compound'), ('J.', 'compound'), ('Hodge', 'appos'), ('Jim', 'compound'), ('Austin', 'conj'), (',', 'punct'), ('“', 'punct'), ('Survey', 'appos'), ('Outlier', 'nmod'), (' ', 'nmod'), ('Detection', 'compound'), ('Methodologies', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Artificial', 'compound'), ('Intelligence', 'compound'), ('Review', 'conj'), (',', 'punct'), ('  ', 'compound'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 4], [4, ]], [], Victoria], [Victoria, J.], [J., Hodge], [Hodge, Jim], [Jim, Austin], [Austin, ,], [,, “], [“, Survey], [Survey, Outlier], [Outlier,  ], [ , Detection], [Detection, Methodologies], [Methodologies, ”], [”, ,], [,, Artificial], [Artificial, Intelligence], [Intelligence, Review], [Review, ,], [,,   ], [  , Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 4], [[, 4, ]], [4, ], Victoria], [], Victoria, J.], [Victoria, J., Hodge], [J., Hodge, Jim], [Hodge, Jim, Austin], [Jim, Austin, ,], [Austin, ,, “], [,, “, Survey], [“, Survey, Outlier], [Survey, Outlier,  ], [Outlier,  , Detection], [ , Detection, Methodologies], [Detection, Methodologies, ”], [Methodologies, ”, ,], [”, ,, Artificial], [,, Artificial, Intelligence], [Artificial, Intelligence, Review], [Intelligence, Review, ,], [Review, ,,   ], [,,   , Vol], [  , Vol, .]]

>> Noun Phrases are: 
[Victoria J. Hodge, Jim Austin, “A Survey, Outlier  Detection Methodologies, Artificial Intelligence Review]

>> Named Entities are: 
[('Jim Austin', 'PERSON'), ('A Survey of Outlier  Detection Methodologies”', 'WORK_OF_ART'), ('Artificial Intelligence Review', 'ORG')]


============================ Sentence 322 =============================

22, No. 2, pp. 


>> Tokens are: 
[22, ,, ., 2, ,, pp, .] 

>> PoS Tags are: 
[('22', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('2', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('22', 'ROOT'), (',', 'punct'), ('.', 'npadvmod'), ('2', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[22, ,], [,, .], [., 2], [2, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[22, ,, .], [,, ., 2], [., 2, ,], [2, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('22', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 323 =============================

85-126, 2004. 


>> Tokens are: 
[85, -, 126, ,, 2004, .] 

>> PoS Tags are: 
[('85', 'NUM'), ('-', 'SYM'), ('126', 'NUM'), (',', 'PUNCT'), ('2004', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('85', 'ROOT'), ('-', 'punct'), ('126', 'prep'), (',', 'punct'), ('2004', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[85, -], [-, 126], [126, ,], [,, 2004], [2004, .]]

>> Trigrams: 
[[85, -, 126], [-, 126, ,], [126, ,, 2004], [,, 2004, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('85', 'CARDINAL')]


============================ Sentence 324 =============================

  [5] Karanjit Singh and Shuchita Upadhyaya, “Outlier Detection: 


>> Tokens are: 
[  , [, 5, ], Karanjit, Singh, Shuchita, Upadhyaya, ,, “, Outlier, Detection, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('5', 'NUM'), (']', 'PUNCT'), ('Karanjit', 'PROPN'), ('Singh', 'PROPN'), ('Shuchita', 'PROPN'), ('Upadhyaya', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Outlier', 'PROPN'), ('Detection', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('5', 'appos'), (']', 'punct'), ('Karanjit', 'compound'), ('Singh', 'appos'), ('Shuchita', 'compound'), ('Upadhyaya', 'conj'), (',', 'punct'), ('“', 'punct'), ('Outlier', 'compound'), ('Detection', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , [], [[, 5], [5, ]], [], Karanjit], [Karanjit, Singh], [Singh, Shuchita], [Shuchita, Upadhyaya], [Upadhyaya, ,], [,, “], [“, Outlier], [Outlier, Detection], [Detection, :]]

>> Trigrams: 
[[  , [, 5], [[, 5, ]], [5, ], Karanjit], [], Karanjit, Singh], [Karanjit, Singh, Shuchita], [Singh, Shuchita, Upadhyaya], [Shuchita, Upadhyaya, ,], [Upadhyaya, ,, “], [,, “, Outlier], [“, Outlier, Detection], [Outlier, Detection, :]]

>> Noun Phrases are: 
[Karanjit Singh, Shuchita Upadhyaya, “Outlier Detection]

>> Named Entities are: 
[('5', 'CARDINAL'), ('Singh', 'GPE'), ('Shuchita Upadhyaya', 'GPE'), ('Outlier Detection:', 'WORK_OF_ART')]


============================ Sentence 325 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 326 =============================

Applications and Techniques”, International Journal of Computer   Science Issues, Vol. 


>> Tokens are: 
[Applications, Techniques, ”, ,, International, Journal, Computer,   , Science, Issues, ,, Vol, .] 

>> PoS Tags are: 
[('Applications', 'PROPN'), ('Techniques', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('International', 'PROPN'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('  ', 'SPACE'), ('Science', 'PROPN'), ('Issues', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Applications', 'nmod'), ('Techniques', 'conj'), ('”', 'punct'), (',', 'punct'), ('International', 'compound'), ('Journal', 'conj'), ('Computer', 'pobj'), ('  ', 'compound'), ('Science', 'compound'), ('Issues', 'ROOT'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Applications, Techniques], [Techniques, ”], [”, ,], [,, International], [International, Journal], [Journal, Computer], [Computer,   ], [  , Science], [Science, Issues], [Issues, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Applications, Techniques, ”], [Techniques, ”, ,], [”, ,, International], [,, International, Journal], [International, Journal, Computer], [Journal, Computer,   ], [Computer,   , Science], [  , Science, Issues], [Science, Issues, ,], [Issues, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Computer]

>> Named Entities are: 
[('International Journal of Computer   Science Issues', 'ORG')]


============================ Sentence 327 =============================

9, Issue. 


>> Tokens are: 
[9, ,, Issue, .] 

>> PoS Tags are: 
[('9', 'NUM'), (',', 'PUNCT'), ('Issue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('9', 'nummod'), (',', 'punct'), ('Issue', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[9, ,], [,, Issue], [Issue, .]]

>> Trigrams: 
[[9, ,, Issue], [,, Issue, .]]

>> Noun Phrases are: 
[9, Issue]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 328 =============================

1, No. 3, pp. 


>> Tokens are: 
[1, ,, ., 3, ,, pp, .] 

>> PoS Tags are: 
[('1', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'ROOT'), (',', 'punct'), ('.', 'npadvmod'), ('3', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[1, ,], [,, .], [., 3], [3, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[1, ,, .], [,, ., 3], [., 3, ,], [3, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('1', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 329 =============================

307-323, 2012. 


>> Tokens are: 
[307, -, 323, ,, 2012, .] 

>> PoS Tags are: 
[('307', 'NUM'), ('-', 'SYM'), ('323', 'NUM'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('307', 'ROOT'), ('-', 'punct'), ('323', 'prep'), (',', 'punct'), ('2012', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[307, -], [-, 323], [323, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[307, -, 323], [-, 323, ,], [323, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('307', 'CARDINAL')]


============================ Sentence 330 =============================

  [6] Hugo Jair Escalante, “A Comparison of Outlier Detection   


>> Tokens are: 
[  , [, 6, ], Hugo, Jair, Escalante, ,, “, Comparison, Outlier, Detection,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('6', 'NUM'), (']', 'PUNCT'), ('Hugo', 'PROPN'), ('Jair', 'PROPN'), ('Escalante', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Comparison', 'PROPN'), ('Outlier', 'PROPN'), ('Detection', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('6', 'appos'), (']', 'punct'), ('Hugo', 'compound'), ('Jair', 'compound'), ('Escalante', 'appos'), (',', 'punct'), ('“', 'punct'), ('Comparison', 'appos'), ('Outlier', 'compound'), ('Detection', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[  , [], [[, 6], [6, ]], [], Hugo], [Hugo, Jair], [Jair, Escalante], [Escalante, ,], [,, “], [“, Comparison], [Comparison, Outlier], [Outlier, Detection], [Detection,  ]]

>> Trigrams: 
[[  , [, 6], [[, 6, ]], [6, ], Hugo], [], Hugo, Jair], [Hugo, Jair, Escalante], [Jair, Escalante, ,], [Escalante, ,, “], [,, “, Comparison], [“, Comparison, Outlier], [Comparison, Outlier, Detection], [Outlier, Detection,  ]]

>> Noun Phrases are: 
[Hugo Jair Escalante, A Comparison, Outlier Detection]

>> Named Entities are: 
[('A Comparison of Outlier Detection  ', 'WORK_OF_ART')]


============================ Sentence 331 =============================

Algorithms for Machine Learning”, CIC-2005 Congreso   Internacional en Computacion-IPN, 2005. 


>> Tokens are: 
[Algorithms, Machine, Learning, ”, ,, CIC-2005, Congreso,   , Internacional, en, Computacion, -, IPN, ,, 2005, .] 

>> PoS Tags are: 
[('Algorithms', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('CIC-2005', 'PROPN'), ('Congreso', 'PROPN'), ('  ', 'SPACE'), ('Internacional', 'PROPN'), ('en', 'PROPN'), ('Computacion', 'PROPN'), ('-', 'PUNCT'), ('IPN', 'PROPN'), (',', 'PUNCT'), ('2005', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Algorithms', 'ROOT'), ('Machine', 'compound'), ('Learning', 'pobj'), ('”', 'punct'), (',', 'punct'), ('CIC-2005', 'compound'), ('Congreso', 'appos'), ('  ', 'appos'), ('Internacional', 'nmod'), ('en', 'compound'), ('Computacion', 'compound'), ('-', 'punct'), ('IPN', 'appos'), (',', 'punct'), ('2005', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Algorithms, Machine], [Machine, Learning], [Learning, ”], [”, ,], [,, CIC-2005], [CIC-2005, Congreso], [Congreso,   ], [  , Internacional], [Internacional, en], [en, Computacion], [Computacion, -], [-, IPN], [IPN, ,], [,, 2005], [2005, .]]

>> Trigrams: 
[[Algorithms, Machine, Learning], [Machine, Learning, ”], [Learning, ”, ,], [”, ,, CIC-2005], [,, CIC-2005, Congreso], [CIC-2005, Congreso,   ], [Congreso,   , Internacional], [  , Internacional, en], [Internacional, en, Computacion], [en, Computacion, -], [Computacion, -, IPN], [-, IPN, ,], [IPN, ,, 2005], [,, 2005, .]]

>> Noun Phrases are: 
[Algorithms, Machine Learning, CIC-2005 Congreso, Internacional en Computacion-IPN]

>> Named Entities are: 
[('CIC-2005 Congreso   Internacional en Computacion-IPN', 'ORG'), ('2005', 'DATE')]


============================ Sentence 332 =============================

   


>> Tokens are: 
[  ] 

>> PoS Tags are: 
[('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 333 =============================

[7] Pierre Geurts, Alexandre Irrthum, Louis Wehenkel,  “Supervised learning with decision tree-based methods in   computational and systems biology”, Molecular   BioSystems, Vol. 


>> Tokens are: 
[[, 7, ], Pierre, Geurts, ,, Alexandre, Irrthum, ,, Louis, Wehenkel, ,,  , “, Supervised, learning, decision, tree, -, based, methods,   , computational, systems, biology, ”, ,, Molecular,   , BioSystems, ,, Vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('7', 'NUM'), (']', 'PUNCT'), ('Pierre', 'PROPN'), ('Geurts', 'PROPN'), (',', 'PUNCT'), ('Alexandre', 'PROPN'), ('Irrthum', 'PROPN'), (',', 'PUNCT'), ('Louis', 'PROPN'), ('Wehenkel', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('“', 'PUNCT'), ('Supervised', 'ADJ'), ('learning', 'NOUN'), ('decision', 'NOUN'), ('tree', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('methods', 'NOUN'), ('  ', 'SPACE'), ('computational', 'ADJ'), ('systems', 'NOUN'), ('biology', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Molecular', 'PROPN'), ('  ', 'SPACE'), ('BioSystems', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('7', 'nummod'), (']', 'punct'), ('Pierre', 'compound'), ('Geurts', 'ROOT'), (',', 'punct'), ('Alexandre', 'compound'), ('Irrthum', 'conj'), (',', 'punct'), ('Louis', 'compound'), ('Wehenkel', 'conj'), (',', 'punct'), (' ', 'nmod'), ('“', 'punct'), ('Supervised', 'amod'), ('learning', 'conj'), ('decision', 'compound'), ('tree', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('methods', 'pobj'), ('  ', 'nmod'), ('computational', 'amod'), ('systems', 'conj'), ('biology', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Molecular', 'compound'), ('  ', 'compound'), ('BioSystems', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 7], [7, ]], [], Pierre], [Pierre, Geurts], [Geurts, ,], [,, Alexandre], [Alexandre, Irrthum], [Irrthum, ,], [,, Louis], [Louis, Wehenkel], [Wehenkel, ,], [,,  ], [ , “], [“, Supervised], [Supervised, learning], [learning, decision], [decision, tree], [tree, -], [-, based], [based, methods], [methods,   ], [  , computational], [computational, systems], [systems, biology], [biology, ”], [”, ,], [,, Molecular], [Molecular,   ], [  , BioSystems], [BioSystems, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[[, 7, ]], [7, ], Pierre], [], Pierre, Geurts], [Pierre, Geurts, ,], [Geurts, ,, Alexandre], [,, Alexandre, Irrthum], [Alexandre, Irrthum, ,], [Irrthum, ,, Louis], [,, Louis, Wehenkel], [Louis, Wehenkel, ,], [Wehenkel, ,,  ], [,,  , “], [ , “, Supervised], [“, Supervised, learning], [Supervised, learning, decision], [learning, decision, tree], [decision, tree, -], [tree, -, based], [-, based, methods], [based, methods,   ], [methods,   , computational], [  , computational, systems], [computational, systems, biology], [systems, biology, ”], [biology, ”, ,], [”, ,, Molecular], [,, Molecular,   ], [Molecular,   , BioSystems], [  , BioSystems, ,], [BioSystems, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[[7] Pierre Geurts, Alexandre Irrthum, Louis Wehenkel,  “Supervised learning, decision tree-based methods,   computational and systems biology, Molecular   BioSystems]

>> Named Entities are: 
[('Pierre Geurts', 'PERSON'), ('Alexandre Irrthum', 'PERSON'), ('Louis Wehenkel', 'PERSON'), ('BioSystems', 'ORG')]


============================ Sentence 334 =============================

5, No. 12, pp. 


>> Tokens are: 
[5, ,, ., 12, ,, pp, .] 

>> PoS Tags are: 
[('5', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('12', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('5', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('12', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[5, ,], [,, .], [., 12], [12, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[5, ,, .], [,, ., 12], [., 12, ,], [12, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('5', 'CARDINAL'), ('12', 'CARDINAL')]


============================ Sentence 335 =============================

1593-1605, 2009. 


>> Tokens are: 
[1593, -, 1605, ,, 2009, .] 

>> PoS Tags are: 
[('1593', 'NUM'), ('-', 'SYM'), ('1605', 'NUM'), (',', 'PUNCT'), ('2009', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1593', 'ROOT'), ('-', 'punct'), ('1605', 'prep'), (',', 'punct'), ('2009', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1593, -], [-, 1605], [1605, ,], [,, 2009], [2009, .]]

>> Trigrams: 
[[1593, -, 1605], [-, 1605, ,], [1605, ,, 2009], [,, 2009, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1593-1605', 'DATE'), ('2009', 'DATE')]


============================ Sentence 336 =============================

  [8] L. Breiman, J. Friedman, R. A. Olsen and C. J. Stone,  “Classification and Regression Trees”, Belmont,   California: 


>> Tokens are: 
[  , [, 8, ], L., Breiman, ,, J., Friedman, ,, R., A., Olsen, C., J., Stone, ,,  , “, Classification, Regression, Trees, ”, ,, Belmont, ,,   , California, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('8', 'NUM'), (']', 'PUNCT'), ('L.', 'PROPN'), ('Breiman', 'PROPN'), (',', 'PUNCT'), ('J.', 'PROPN'), ('Friedman', 'PROPN'), (',', 'PUNCT'), ('R.', 'PROPN'), ('A.', 'NOUN'), ('Olsen', 'PROPN'), ('C.', 'PROPN'), ('J.', 'PROPN'), ('Stone', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('“', 'PUNCT'), ('Classification', 'PROPN'), ('Regression', 'PROPN'), ('Trees', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Belmont', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('California', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('8', 'appos'), (']', 'punct'), ('L.', 'compound'), ('Breiman', 'appos'), (',', 'punct'), ('J.', 'compound'), ('Friedman', 'conj'), (',', 'punct'), ('R.', 'compound'), ('A.', 'compound'), ('Olsen', 'conj'), ('C.', 'compound'), ('J.', 'compound'), ('Stone', 'conj'), (',', 'punct'), (' ', 'appos'), ('“', 'punct'), ('Classification', 'nmod'), ('Regression', 'conj'), ('Trees', 'appos'), ('”', 'punct'), (',', 'punct'), ('Belmont', 'conj'), (',', 'punct'), ('  ', 'nmod'), ('California', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , [], [[, 8], [8, ]], [], L.], [L., Breiman], [Breiman, ,], [,, J.], [J., Friedman], [Friedman, ,], [,, R.], [R., A.], [A., Olsen], [Olsen, C.], [C., J.], [J., Stone], [Stone, ,], [,,  ], [ , “], [“, Classification], [Classification, Regression], [Regression, Trees], [Trees, ”], [”, ,], [,, Belmont], [Belmont, ,], [,,   ], [  , California], [California, :]]

>> Trigrams: 
[[  , [, 8], [[, 8, ]], [8, ], L.], [], L., Breiman], [L., Breiman, ,], [Breiman, ,, J.], [,, J., Friedman], [J., Friedman, ,], [Friedman, ,, R.], [,, R., A.], [R., A., Olsen], [A., Olsen, C.], [Olsen, C., J.], [C., J., Stone], [J., Stone, ,], [Stone, ,,  ], [,,  , “], [ , “, Classification], [“, Classification, Regression], [Classification, Regression, Trees], [Regression, Trees, ”], [Trees, ”, ,], [”, ,, Belmont], [,, Belmont, ,], [Belmont, ,,   ], [,,   , California], [  , California, :]]

>> Noun Phrases are: 
[L. Breiman, J. Friedman, R. A. Olsen, C. J. Stone, “Classification and Regression Trees, Belmont,   California]

>> Named Entities are: 
[('8', 'CARDINAL'), ('L. Breiman', 'PERSON'), ('J. Friedman', 'PERSON'), ('R. A. Olsen', 'PERSON'), ('C. J. Stone', 'PERSON'), ('Classification and Regression Trees”,', 'WORK_OF_ART'), ('Belmont', 'GPE'), ('California', 'GPE')]


============================ Sentence 337 =============================

Wadsworth International Group, 1984. 


>> Tokens are: 
[Wadsworth, International, Group, ,, 1984, .] 

>> PoS Tags are: 
[('Wadsworth', 'PROPN'), ('International', 'PROPN'), ('Group', 'PROPN'), (',', 'PUNCT'), ('1984', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Wadsworth', 'compound'), ('International', 'compound'), ('Group', 'ROOT'), (',', 'punct'), ('1984', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Wadsworth, International], [International, Group], [Group, ,], [,, 1984], [1984, .]]

>> Trigrams: 
[[Wadsworth, International, Group], [International, Group, ,], [Group, ,, 1984], [,, 1984, .]]

>> Noun Phrases are: 
[Wadsworth International Group]

>> Named Entities are: 
[('Wadsworth International Group', 'ORG'), ('1984', 'DATE')]


============================ Sentence 338 =============================

  [9] J. Quinlan, “C4.5: Programs for machine learning”, San  Francisco, CA: 


>> Tokens are: 
[  , [, 9, ], J., Quinlan, ,, “, C4.5, :, Programs, machine, learning, ”, ,, San,  , Francisco, ,, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('9', 'NUM'), (']', 'PUNCT'), ('J.', 'PROPN'), ('Quinlan', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('C4.5', 'PROPN'), (':', 'PUNCT'), ('Programs', 'NOUN'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('San', 'PROPN'), (' ', 'SPACE'), ('Francisco', 'PROPN'), (',', 'PUNCT'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('9', 'dep'), (']', 'punct'), ('J.', 'compound'), ('Quinlan', 'appos'), (',', 'punct'), ('“', 'punct'), ('C4.5', 'acl'), (':', 'punct'), ('Programs', 'nsubj'), ('machine', 'compound'), ('learning', 'pobj'), ('”', 'punct'), (',', 'punct'), ('San', 'nmod'), (' ', 'compound'), ('Francisco', 'conj'), (',', 'punct'), (':', 'punct')]

>> Bigrams: 
[[  , [], [[, 9], [9, ]], [], J.], [J., Quinlan], [Quinlan, ,], [,, “], [“, C4.5], [C4.5, :], [:, Programs], [Programs, machine], [machine, learning], [learning, ”], [”, ,], [,, San], [San,  ], [ , Francisco], [Francisco, ,], [,, :]]

>> Trigrams: 
[[  , [, 9], [[, 9, ]], [9, ], J.], [], J., Quinlan], [J., Quinlan, ,], [Quinlan, ,, “], [,, “, C4.5], [“, C4.5, :], [C4.5, :, Programs], [:, Programs, machine], [Programs, machine, learning], [machine, learning, ”], [learning, ”, ,], [”, ,, San], [,, San,  ], [San,  , Francisco], [ , Francisco, ,], [Francisco, ,, :]]

>> Noun Phrases are: 
[[9] J. Quinlan, Programs, machine learning, San  Francisco, CA]

>> Named Entities are: 
[('9', 'CARDINAL'), ('J. Quinlan', 'PERSON')]


============================ Sentence 339 =============================

Morgan Kaufmann, 1986.    


>> Tokens are: 
[Morgan, Kaufmann, ,, 1986, .,   ] 

>> PoS Tags are: 
[('Morgan', 'PROPN'), ('Kaufmann', 'PROPN'), (',', 'PUNCT'), ('1986', 'NUM'), ('.', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Morgan', 'compound'), ('Kaufmann', 'ROOT'), (',', 'punct'), ('1986', 'appos'), ('.', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Morgan, Kaufmann], [Kaufmann, ,], [,, 1986], [1986, .], [.,   ]]

>> Trigrams: 
[[Morgan, Kaufmann, ,], [Kaufmann, ,, 1986], [,, 1986, .], [1986, .,   ]]

>> Noun Phrases are: 
[Morgan Kaufmann]

>> Named Entities are: 
[('Morgan Kaufmann', 'PERSON'), ('1986', 'DATE')]


============================ Sentence 340 =============================

[10] Masud Karim and Rashedur M. Rahman, “Decision Tree  and Naïve Bayes Algorithm for Classification and   Generation of Actionable Knowledge for Direct   Marketing”, Journal of Software Engineering and   Applications, Vol. 


>> Tokens are: 
[[, 10, ], Masud, Karim, Rashedur, M., Rahman, ,, “, Decision, Tree,  , Naïve, Bayes, Algorithm, Classification,   , Generation, Actionable, Knowledge, Direct,   , Marketing, ”, ,, Journal, Software, Engineering,   , Applications, ,, Vol, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('10', 'NUM'), (']', 'PUNCT'), ('Masud', 'PROPN'), ('Karim', 'PROPN'), ('Rashedur', 'PROPN'), ('M.', 'PROPN'), ('Rahman', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Decision', 'NOUN'), ('Tree', 'PROPN'), (' ', 'SPACE'), ('Naïve', 'PROPN'), ('Bayes', 'PROPN'), ('Algorithm', 'PROPN'), ('Classification', 'PROPN'), ('  ', 'SPACE'), ('Generation', 'PROPN'), ('Actionable', 'ADJ'), ('Knowledge', 'PROPN'), ('Direct', 'ADJ'), ('  ', 'SPACE'), ('Marketing', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Journal', 'PROPN'), ('Software', 'PROPN'), ('Engineering', 'PROPN'), ('  ', 'SPACE'), ('Applications', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('10', 'nummod'), (']', 'punct'), ('Masud', 'compound'), ('Karim', 'ROOT'), ('Rashedur', 'compound'), ('M.', 'compound'), ('Rahman', 'conj'), (',', 'punct'), ('“', 'punct'), ('Decision', 'compound'), ('Tree', 'appos'), (' ', 'appos'), ('Naïve', 'compound'), ('Bayes', 'compound'), ('Algorithm', 'conj'), ('Classification', 'pobj'), ('  ', 'nmod'), ('Generation', 'conj'), ('Actionable', 'amod'), ('Knowledge', 'pobj'), ('Direct', 'amod'), ('  ', 'compound'), ('Marketing', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Journal', 'conj'), ('Software', 'compound'), ('Engineering', 'pobj'), ('  ', 'compound'), ('Applications', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[[, 10], [10, ]], [], Masud], [Masud, Karim], [Karim, Rashedur], [Rashedur, M.], [M., Rahman], [Rahman, ,], [,, “], [“, Decision], [Decision, Tree], [Tree,  ], [ , Naïve], [Naïve, Bayes], [Bayes, Algorithm], [Algorithm, Classification], [Classification,   ], [  , Generation], [Generation, Actionable], [Actionable, Knowledge], [Knowledge, Direct], [Direct,   ], [  , Marketing], [Marketing, ”], [”, ,], [,, Journal], [Journal, Software], [Software, Engineering], [Engineering,   ], [  , Applications], [Applications, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[[, 10, ]], [10, ], Masud], [], Masud, Karim], [Masud, Karim, Rashedur], [Karim, Rashedur, M.], [Rashedur, M., Rahman], [M., Rahman, ,], [Rahman, ,, “], [,, “, Decision], [“, Decision, Tree], [Decision, Tree,  ], [Tree,  , Naïve], [ , Naïve, Bayes], [Naïve, Bayes, Algorithm], [Bayes, Algorithm, Classification], [Algorithm, Classification,   ], [Classification,   , Generation], [  , Generation, Actionable], [Generation, Actionable, Knowledge], [Actionable, Knowledge, Direct], [Knowledge, Direct,   ], [Direct,   , Marketing], [  , Marketing, ”], [Marketing, ”, ,], [”, ,, Journal], [,, Journal, Software], [Journal, Software, Engineering], [Software, Engineering,   ], [Engineering,   , Applications], [  , Applications, ,], [Applications, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[[10] Masud Karim, Rashedur M. Rahman, Decision Tree, Naïve Bayes Algorithm, Classification,   Generation, Actionable Knowledge, Direct   Marketing, Journal, Software Engineering,   Applications]

>> Named Entities are: 
[('10', 'CARDINAL'), ('Rashedur M. Rahman', 'PERSON'), ('Decision Tree  ', 'WORK_OF_ART'), ('Naïve Bayes Algorithm for Classification', 'ORG'), ('Journal of Software Engineering', 'ORG')]


============================ Sentence 341 =============================

6, No. 4, pp. 


>> Tokens are: 
[6, ,, ., 4, ,, pp, .] 

>> PoS Tags are: 
[('6', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('4', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('6', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('4', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[6, ,], [,, .], [., 4], [4, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[6, ,, .], [,, ., 4], [., 4, ,], [4, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('6', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 342 =============================

196-206, 2013. 


>> Tokens are: 
[196, -, 206, ,, 2013, .] 

>> PoS Tags are: 
[('196', 'NUM'), ('-', 'SYM'), ('206', 'NUM'), (',', 'PUNCT'), ('2013', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('196', 'ROOT'), ('-', 'punct'), ('206', 'prep'), (',', 'punct'), ('2013', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[196, -], [-, 206], [206, ,], [,, 2013], [2013, .]]

>> Trigrams: 
[[196, -, 206], [-, 206, ,], [206, ,, 2013], [,, 2013, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('196', 'CARDINAL')]


============================ Sentence 343 =============================

  [11] Earl B. Hunt, Janet Marin and Philip J. Stone, “Experiments  in Induction”, New York: Academic Press, 1966.    


>> Tokens are: 
[  , [, 11, ], Earl, B., Hunt, ,, Janet, Marin, Philip, J., Stone, ,, “, Experiments,  , Induction, ”, ,, New, York, :, Academic, Press, ,, 1966, .,   ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('11', 'NUM'), (']', 'PUNCT'), ('Earl', 'PROPN'), ('B.', 'PROPN'), ('Hunt', 'PROPN'), (',', 'PUNCT'), ('Janet', 'PROPN'), ('Marin', 'PROPN'), ('Philip', 'PROPN'), ('J.', 'PROPN'), ('Stone', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Experiments', 'NOUN'), (' ', 'SPACE'), ('Induction', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('New', 'PROPN'), ('York', 'PROPN'), (':', 'PUNCT'), ('Academic', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('1966', 'NUM'), ('.', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('11', 'appos'), (']', 'punct'), ('Earl', 'compound'), ('B.', 'compound'), ('Hunt', 'appos'), (',', 'punct'), ('Janet', 'compound'), ('Marin', 'conj'), ('Philip', 'compound'), ('J.', 'compound'), ('Stone', 'conj'), (',', 'punct'), ('“', 'punct'), ('Experiments', 'appos'), (' ', 'nummod'), ('Induction', 'pobj'), ('”', 'punct'), (',', 'punct'), ('New', 'compound'), ('York', 'appos'), (':', 'punct'), ('Academic', 'compound'), ('Press', 'appos'), (',', 'punct'), ('1966', 'appos'), ('.', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[  , [], [[, 11], [11, ]], [], Earl], [Earl, B.], [B., Hunt], [Hunt, ,], [,, Janet], [Janet, Marin], [Marin, Philip], [Philip, J.], [J., Stone], [Stone, ,], [,, “], [“, Experiments], [Experiments,  ], [ , Induction], [Induction, ”], [”, ,], [,, New], [New, York], [York, :], [:, Academic], [Academic, Press], [Press, ,], [,, 1966], [1966, .], [.,   ]]

>> Trigrams: 
[[  , [, 11], [[, 11, ]], [11, ], Earl], [], Earl, B.], [Earl, B., Hunt], [B., Hunt, ,], [Hunt, ,, Janet], [,, Janet, Marin], [Janet, Marin, Philip], [Marin, Philip, J.], [Philip, J., Stone], [J., Stone, ,], [Stone, ,, “], [,, “, Experiments], [“, Experiments,  ], [Experiments,  , Induction], [ , Induction, ”], [Induction, ”, ,], [”, ,, New], [,, New, York], [New, York, :], [York, :, Academic], [:, Academic, Press], [Academic, Press, ,], [Press, ,, 1966], [,, 1966, .], [1966, .,   ]]

>> Noun Phrases are: 
[Earl B. Hunt, Janet Marin, Philip J. Stone, Experiments, Induction, New York, Academic Press]

>> Named Entities are: 
[('11', 'CARDINAL'), ('Earl B. Hunt', 'PERSON'), ('Janet Marin', 'PERSON'), ('Philip J. Stone', 'PERSON'), ('Experiments  in Induction”', 'WORK_OF_ART'), ('New York', 'GPE'), ('Academic Press', 'ORG'), ('1966', 'DATE')]


============================ Sentence 344 =============================

[12] Leo Breiman, Jerome Friedman, Charles J. Stone and R. A.   


>> Tokens are: 
[[, 12, ], Leo, Breiman, ,, Jerome, Friedman, ,, Charles, J., Stone, R., A.,  ] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('12', 'NUM'), (']', 'PUNCT'), ('Leo', 'PROPN'), ('Breiman', 'PROPN'), (',', 'PUNCT'), ('Jerome', 'PROPN'), ('Friedman', 'PROPN'), (',', 'PUNCT'), ('Charles', 'PROPN'), ('J.', 'PROPN'), ('Stone', 'PROPN'), ('R.', 'PROPN'), ('A.', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('[', 'punct'), ('12', 'nummod'), (']', 'punct'), ('Leo', 'compound'), ('Breiman', 'ROOT'), (',', 'punct'), ('Jerome', 'compound'), ('Friedman', 'appos'), (',', 'punct'), ('Charles', 'compound'), ('J.', 'compound'), ('Stone', 'conj'), ('R.', 'compound'), ('A.', 'compound'), (' ', 'punct')]

>> Bigrams: 
[[[, 12], [12, ]], [], Leo], [Leo, Breiman], [Breiman, ,], [,, Jerome], [Jerome, Friedman], [Friedman, ,], [,, Charles], [Charles, J.], [J., Stone], [Stone, R.], [R., A.], [A.,  ]]

>> Trigrams: 
[[[, 12, ]], [12, ], Leo], [], Leo, Breiman], [Leo, Breiman, ,], [Breiman, ,, Jerome], [,, Jerome, Friedman], [Jerome, Friedman, ,], [Friedman, ,, Charles], [,, Charles, J.], [Charles, J., Stone], [J., Stone, R.], [Stone, R., A.], [R., A.,  ]]

>> Noun Phrases are: 
[[12] Leo Breiman, Jerome Friedman, Charles J. Stone]

>> Named Entities are: 
[('12', 'CARDINAL'), ('Leo Breiman', 'PERSON'), ('Jerome Friedman', 'PERSON'), ('Charles J. Stone', 'PERSON'), ('R. A.', 'PERSON')]


============================ Sentence 345 =============================

Olshen, “Classification and Regression Trees (Wadsworth   Statistics/Probability)”, Chapman and Hall/CRC, 1984. 


>> Tokens are: 
[Olshen, ,, “, Classification, Regression, Trees, (, Wadsworth,   , Statistics, /, Probability, ), ”, ,, Chapman, Hall, /, CRC, ,, 1984, .] 

>> PoS Tags are: 
[('Olshen', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Classification', 'PROPN'), ('Regression', 'NOUN'), ('Trees', 'PROPN'), ('(', 'PUNCT'), ('Wadsworth', 'PROPN'), ('  ', 'SPACE'), ('Statistics', 'PROPN'), ('/', 'SYM'), ('Probability', 'PROPN'), (')', 'PUNCT'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Chapman', 'PROPN'), ('Hall', 'PROPN'), ('/', 'SYM'), ('CRC', 'PROPN'), (',', 'PUNCT'), ('1984', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Olshen', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Classification', 'nmod'), ('Regression', 'conj'), ('Trees', 'appos'), ('(', 'punct'), ('Wadsworth', 'appos'), ('  ', 'nmod'), ('Statistics', 'nmod'), ('/', 'punct'), ('Probability', 'appos'), (')', 'punct'), ('”', 'punct'), (',', 'punct'), ('Chapman', 'conj'), ('Hall', 'nmod'), ('/', 'punct'), ('CRC', 'conj'), (',', 'punct'), ('1984', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Olshen, ,], [,, “], [“, Classification], [Classification, Regression], [Regression, Trees], [Trees, (], [(, Wadsworth], [Wadsworth,   ], [  , Statistics], [Statistics, /], [/, Probability], [Probability, )], [), ”], [”, ,], [,, Chapman], [Chapman, Hall], [Hall, /], [/, CRC], [CRC, ,], [,, 1984], [1984, .]]

>> Trigrams: 
[[Olshen, ,, “], [,, “, Classification], [“, Classification, Regression], [Classification, Regression, Trees], [Regression, Trees, (], [Trees, (, Wadsworth], [(, Wadsworth,   ], [Wadsworth,   , Statistics], [  , Statistics, /], [Statistics, /, Probability], [/, Probability, )], [Probability, ), ”], [), ”, ,], [”, ,, Chapman], [,, Chapman, Hall], [Chapman, Hall, /], [Hall, /, CRC], [/, CRC, ,], [CRC, ,, 1984], [,, 1984, .]]

>> Noun Phrases are: 
[Olshen, Classification and Regression Trees, Wadsworth,   Statistics/Probability, Chapman, Hall/CRC]

>> Named Entities are: 
[('Classification and Regression Trees', 'WORK_OF_ART'), ('Hall/CRC', 'ORG'), ('1984', 'DATE')]


============================ Sentence 346 =============================

  [13] Steven L. Salzberg, “Book Review: C4.5: Programs for  Machine Learning by J. Ross Quinlan. 


>> Tokens are: 
[  , [, 13, ], Steven, L., Salzberg, ,, “, Book, Review, :, C4.5, :, Programs,  , Machine, Learning, J., Ross, Quinlan, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('13', 'NUM'), (']', 'PUNCT'), ('Steven', 'PROPN'), ('L.', 'PROPN'), ('Salzberg', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Book', 'PROPN'), ('Review', 'PROPN'), (':', 'PUNCT'), ('C4.5', 'PROPN'), (':', 'PUNCT'), ('Programs', 'NOUN'), (' ', 'SPACE'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('J.', 'PROPN'), ('Ross', 'PROPN'), ('Quinlan', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('[', 'punct'), ('13', 'appos'), (']', 'punct'), ('Steven', 'compound'), ('L.', 'compound'), ('Salzberg', 'appos'), (',', 'punct'), ('“', 'punct'), ('Book', 'compound'), ('Review', 'appos'), (':', 'punct'), ('C4.5', 'ROOT'), (':', 'punct'), ('Programs', 'appos'), (' ', 'pobj'), ('Machine', 'compound'), ('Learning', 'appos'), ('J.', 'compound'), ('Ross', 'compound'), ('Quinlan', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 13], [13, ]], [], Steven], [Steven, L.], [L., Salzberg], [Salzberg, ,], [,, “], [“, Book], [Book, Review], [Review, :], [:, C4.5], [C4.5, :], [:, Programs], [Programs,  ], [ , Machine], [Machine, Learning], [Learning, J.], [J., Ross], [Ross, Quinlan], [Quinlan, .]]

>> Trigrams: 
[[  , [, 13], [[, 13, ]], [13, ], Steven], [], Steven, L.], [Steven, L., Salzberg], [L., Salzberg, ,], [Salzberg, ,, “], [,, “, Book], [“, Book, Review], [Book, Review, :], [Review, :, C4.5], [:, C4.5, :], [C4.5, :, Programs], [:, Programs,  ], [Programs,  , Machine], [ , Machine, Learning], [Machine, Learning, J.], [Learning, J., Ross], [J., Ross, Quinlan], [Ross, Quinlan, .]]

>> Noun Phrases are: 
[Steven L. Salzberg, Book Review, Programs, Machine Learning, J. Ross Quinlan]

>> Named Entities are: 
[('13', 'CARDINAL'), ('Steven L. Salzberg', 'PERSON'), ('Book Review: C4.5: Programs for  Machine Learning', 'WORK_OF_ART'), ('J. Ross Quinlan', 'PERSON')]


============================ Sentence 347 =============================

Inc., 1993”,   Machine Learning, Vol. 


>> Tokens are: 
[Inc., ,, 1993, ”, ,,   , Machine, Learning, ,, Vol, .] 

>> PoS Tags are: 
[('Inc.', 'PROPN'), (',', 'PUNCT'), ('1993', 'NUM'), ('”', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Inc.', 'ROOT'), (',', 'punct'), ('1993', 'npadvmod'), ('”', 'punct'), (',', 'punct'), ('  ', 'compound'), ('Machine', 'compound'), ('Learning', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Inc., ,], [,, 1993], [1993, ”], [”, ,], [,,   ], [  , Machine], [Machine, Learning], [Learning, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Inc., ,, 1993], [,, 1993, ”], [1993, ”, ,], [”, ,,   ], [,,   , Machine], [  , Machine, Learning], [Machine, Learning, ,], [Learning, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Inc.,   Machine Learning]

>> Named Entities are: 
[('1993', 'DATE'), ('Machine Learning', 'ORG')]


============================ Sentence 348 =============================

16, No. 3, pp. 


>> Tokens are: 
[16, ,, ., 3, ,, pp, .] 

>> PoS Tags are: 
[('16', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('16', 'ROOT'), (',', 'punct'), ('.', 'punct'), ('3', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[16, ,], [,, .], [., 3], [3, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[16, ,, .], [,, ., 3], [., 3, ,], [3, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('16', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 349 =============================

235-240, 1994. 


>> Tokens are: 
[235, -, 240, ,, 1994, .] 

>> PoS Tags are: 
[('235', 'NUM'), ('-', 'SYM'), ('240', 'NUM'), (',', 'PUNCT'), ('1994', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('235', 'ROOT'), ('-', 'punct'), ('240', 'prep'), (',', 'punct'), ('1994', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[235, -], [-, 240], [240, ,], [,, 1994], [1994, .]]

>> Trigrams: 
[[235, -, 240], [-, 240, ,], [240, ,, 1994], [,, 1994, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('235', 'CARDINAL')]


============================ Sentence 350 =============================

  [14] Johannes Fürnkranz, “Separate-and-Conquer Rule Learning”,  Artificial Intelligence Review, Vol. 13, pp. 


>> Tokens are: 
[  , [, 14, ], Johannes, Fürnkranz, ,, “, Separate, -, -, Conquer, Rule, Learning, ”, ,,  , Artificial, Intelligence, Review, ,, Vol, ., 13, ,, pp, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('14', 'NUM'), (']', 'PUNCT'), ('Johannes', 'PROPN'), ('Fürnkranz', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Separate', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('Conquer', 'NOUN'), ('Rule', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('Review', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT'), ('13', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('14', 'appos'), (']', 'punct'), ('Johannes', 'compound'), ('Fürnkranz', 'appos'), (',', 'punct'), ('“', 'punct'), ('Separate', 'amod'), ('-', 'punct'), ('-', 'punct'), ('Conquer', 'conj'), ('Rule', 'compound'), ('Learning', 'appos'), ('”', 'punct'), (',', 'punct'), (' ', 'compound'), ('Artificial', 'compound'), ('Intelligence', 'compound'), ('Review', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct'), ('13', 'appos'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 14], [14, ]], [], Johannes], [Johannes, Fürnkranz], [Fürnkranz, ,], [,, “], [“, Separate], [Separate, -], [-, -], [-, Conquer], [Conquer, Rule], [Rule, Learning], [Learning, ”], [”, ,], [,,  ], [ , Artificial], [Artificial, Intelligence], [Intelligence, Review], [Review, ,], [,, Vol], [Vol, .], [., 13], [13, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[  , [, 14], [[, 14, ]], [14, ], Johannes], [], Johannes, Fürnkranz], [Johannes, Fürnkranz, ,], [Fürnkranz, ,, “], [,, “, Separate], [“, Separate, -], [Separate, -, -], [-, -, Conquer], [-, Conquer, Rule], [Conquer, Rule, Learning], [Rule, Learning, ”], [Learning, ”, ,], [”, ,,  ], [,,  , Artificial], [ , Artificial, Intelligence], [Artificial, Intelligence, Review], [Intelligence, Review, ,], [Review, ,, Vol], [,, Vol, .], [Vol, ., 13], [., 13, ,], [13, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[Johannes Fürnkranz, Separate-and-Conquer Rule Learning,  Artificial Intelligence Review, pp]

>> Named Entities are: 
[('14', 'CARDINAL'), ('13', 'CARDINAL')]


============================ Sentence 351 =============================

3-54, 1999. 


>> Tokens are: 
[3, -, 54, ,, 1999, .] 

>> PoS Tags are: 
[('3', 'NUM'), ('-', 'SYM'), ('54', 'NUM'), (',', 'PUNCT'), ('1999', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3', 'ROOT'), ('-', 'punct'), ('54', 'prep'), (',', 'punct'), ('1999', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[3, -], [-, 54], [54, ,], [,, 1999], [1999, .]]

>> Trigrams: 
[[3, -, 54], [-, 54, ,], [54, ,, 1999], [,, 1999, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3-54, 1999', 'DATE')]


============================ Sentence 352 =============================

  [15] Aijun An and Nick Cercone, “Discretization of continuous  attributes for learning classification rules”, Third Pacific-   


>> Tokens are: 
[  , [, 15, ], Aijun, Nick, Cercone, ,, “, Discretization, continuous,  , attributes, learning, classification, rules, ”, ,, Pacific-,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('15', 'NUM'), (']', 'PUNCT'), ('Aijun', 'PROPN'), ('Nick', 'PROPN'), ('Cercone', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Discretization', 'NOUN'), ('continuous', 'ADJ'), (' ', 'SPACE'), ('attributes', 'NOUN'), ('learning', 'VERB'), ('classification', 'NOUN'), ('rules', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Pacific-', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('15', 'appos'), (']', 'punct'), ('Aijun', 'compound'), ('Nick', 'compound'), ('Cercone', 'conj'), (',', 'punct'), ('“', 'punct'), ('Discretization', 'appos'), ('continuous', 'amod'), (' ', 'compound'), ('attributes', 'pobj'), ('learning', 'pcomp'), ('classification', 'compound'), ('rules', 'dobj'), ('”', 'punct'), (',', 'punct'), ('Pacific-', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[  , [], [[, 15], [15, ]], [], Aijun], [Aijun, Nick], [Nick, Cercone], [Cercone, ,], [,, “], [“, Discretization], [Discretization, continuous], [continuous,  ], [ , attributes], [attributes, learning], [learning, classification], [classification, rules], [rules, ”], [”, ,], [,, Pacific-], [Pacific-,  ]]

>> Trigrams: 
[[  , [, 15], [[, 15, ]], [15, ], Aijun], [], Aijun, Nick], [Aijun, Nick, Cercone], [Nick, Cercone, ,], [Cercone, ,, “], [,, “, Discretization], [“, Discretization, continuous], [Discretization, continuous,  ], [continuous,  , attributes], [ , attributes, learning], [attributes, learning, classification], [learning, classification, rules], [classification, rules, ”], [rules, ”, ,], [”, ,, Pacific-], [,, Pacific-,  ]]

>> Noun Phrases are: 
[Aijun An, Nick Cercone, Discretization, continuous  attributes, classification rules, Third Pacific-]

>> Named Entities are: 
[('15', 'CARDINAL'), ('Nick Cercone', 'PERSON'), ('Third', 'ORDINAL')]


============================ Sentence 353 =============================

Asia Conference on Methodologies for Knowledge   Discovery & Data Mining, Vol. 


>> Tokens are: 
[Asia, Conference, Methodologies, Knowledge,   , Discovery, &, Data, Mining, ,, Vol, .] 

>> PoS Tags are: 
[('Asia', 'PROPN'), ('Conference', 'PROPN'), ('Methodologies', 'PROPN'), ('Knowledge', 'PROPN'), ('  ', 'SPACE'), ('Discovery', 'PROPN'), ('&', 'CCONJ'), ('Data', 'PROPN'), ('Mining', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Asia', 'compound'), ('Conference', 'nsubj'), ('Methodologies', 'pobj'), ('Knowledge', 'pobj'), ('  ', 'ROOT'), ('Discovery', 'npadvmod'), ('&', 'cc'), ('Data', 'compound'), ('Mining', 'conj'), (',', 'punct'), ('Vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Asia, Conference], [Conference, Methodologies], [Methodologies, Knowledge], [Knowledge,   ], [  , Discovery], [Discovery, &], [&, Data], [Data, Mining], [Mining, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Asia, Conference, Methodologies], [Conference, Methodologies, Knowledge], [Methodologies, Knowledge,   ], [Knowledge,   , Discovery], [  , Discovery, &], [Discovery, &, Data], [&, Data, Mining], [Data, Mining, ,], [Mining, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Asia Conference, Methodologies, Knowledge, Vol]

>> Named Entities are: 
[('Discovery & Data Mining', 'ORG')]


============================ Sentence 354 =============================

1574, pp. 


>> Tokens are: 
[1574, ,, pp, .] 

>> PoS Tags are: 
[('1574', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1574', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[1574, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[1574, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[1574, pp]

>> Named Entities are: 
[('1574', 'DATE')]


============================ Sentence 355 =============================

509-514, 1999. 


>> Tokens are: 
[509, -, 514, ,, 1999, .] 

>> PoS Tags are: 
[('509', 'NUM'), ('-', 'SYM'), ('514', 'NUM'), (',', 'PUNCT'), ('1999', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('509', 'ROOT'), ('-', 'punct'), ('514', 'prep'), (',', 'punct'), ('1999', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[509, -], [-, 514], [514, ,], [,, 1999], [1999, .]]

>> Trigrams: 
[[509, -, 514], [-, 514, ,], [514, ,, 1999], [,, 1999, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('509', 'CARDINAL')]


============================ Sentence 356 =============================

  [16] Mehryar Mohri, Afshin Rostamizadeh and Ameet   


>> Tokens are: 
[  , [, 16, ], Mehryar, Mohri, ,, Afshin, Rostamizadeh, Ameet,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('16', 'NUM'), (']', 'PUNCT'), ('Mehryar', 'PROPN'), ('Mohri', 'PROPN'), (',', 'PUNCT'), ('Afshin', 'PROPN'), ('Rostamizadeh', 'PROPN'), ('Ameet', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('16', 'appos'), (']', 'punct'), ('Mehryar', 'compound'), ('Mohri', 'appos'), (',', 'punct'), ('Afshin', 'compound'), ('Rostamizadeh', 'conj'), ('Ameet', 'compound'), (' ', 'conj')]

>> Bigrams: 
[[  , [], [[, 16], [16, ]], [], Mehryar], [Mehryar, Mohri], [Mohri, ,], [,, Afshin], [Afshin, Rostamizadeh], [Rostamizadeh, Ameet], [Ameet,  ]]

>> Trigrams: 
[[  , [, 16], [[, 16, ]], [16, ], Mehryar], [], Mehryar, Mohri], [Mehryar, Mohri, ,], [Mohri, ,, Afshin], [,, Afshin, Rostamizadeh], [Afshin, Rostamizadeh, Ameet], [Rostamizadeh, Ameet,  ]]

>> Noun Phrases are: 
[Mehryar Mohri, Afshin Rostamizadeh]

>> Named Entities are: 
[('16', 'CARDINAL'), ('Mohri', 'PERSON'), ('Afshin Rostamizadeh', 'ORG')]


============================ Sentence 357 =============================

Talwalkar, “Foundations of Machine Learning”, One   Rogers Street Cambridge MA: The MIT Press, 2012. 


>> Tokens are: 
[Talwalkar, ,, “, Foundations, Machine, Learning, ”, ,,   , Rogers, Street, Cambridge, MA, :, MIT, Press, ,, 2012, .] 

>> PoS Tags are: 
[('Talwalkar', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Foundations', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Rogers', 'PROPN'), ('Street', 'PROPN'), ('Cambridge', 'PROPN'), ('MA', 'PROPN'), (':', 'PUNCT'), ('MIT', 'PROPN'), ('Press', 'PROPN'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Talwalkar', 'ROOT'), (',', 'punct'), ('“', 'punct'), ('Foundations', 'appos'), ('Machine', 'compound'), ('Learning', 'pobj'), ('”', 'punct'), (',', 'punct'), ('  ', 'appos'), ('Rogers', 'compound'), ('Street', 'compound'), ('Cambridge', 'compound'), ('MA', 'appos'), (':', 'punct'), ('MIT', 'compound'), ('Press', 'appos'), (',', 'punct'), ('2012', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Talwalkar, ,], [,, “], [“, Foundations], [Foundations, Machine], [Machine, Learning], [Learning, ”], [”, ,], [,,   ], [  , Rogers], [Rogers, Street], [Street, Cambridge], [Cambridge, MA], [MA, :], [:, MIT], [MIT, Press], [Press, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[Talwalkar, ,, “], [,, “, Foundations], [“, Foundations, Machine], [Foundations, Machine, Learning], [Machine, Learning, ”], [Learning, ”, ,], [”, ,,   ], [,,   , Rogers], [  , Rogers, Street], [Rogers, Street, Cambridge], [Street, Cambridge, MA], [Cambridge, MA, :], [MA, :, MIT], [:, MIT, Press], [MIT, Press, ,], [Press, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[Talwalkar, Foundations, Machine Learning, Rogers Street Cambridge MA, The MIT Press]

>> Named Entities are: 
[('Foundations of Machine Learning', 'WORK_OF_ART'), ('One', 'CARDINAL'), ('MA', 'PERSON'), ('The MIT Press', 'ORG'), ('2012', 'DATE')]


============================ Sentence 358 =============================

  [17] Olivier Bousquet, St´ephane Boucheron and G´abor  Lugosi, “Introduction to Statistical Learning Theory”,   Lecture Notes in Computer Science, Vol. 


>> Tokens are: 
[  , [, 17, ], Olivier, Bousquet, ,, St´ephane, Boucheron, G´abor,  , Lugosi, ,, “, Introduction, Statistical, Learning, Theory, ”, ,,   , Lecture, Notes, Computer, Science, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('17', 'NUM'), (']', 'PUNCT'), ('Olivier', 'PROPN'), ('Bousquet', 'PROPN'), (',', 'PUNCT'), ('St´ephane', 'NUM'), ('Boucheron', 'PROPN'), ('G´abor', 'PROPN'), (' ', 'SPACE'), ('Lugosi', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Introduction', 'NOUN'), ('Statistical', 'PROPN'), ('Learning', 'PROPN'), ('Theory', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Lecture', 'PROPN'), ('Notes', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'nmod'), ('17', 'appos'), (']', 'punct'), ('Olivier', 'compound'), ('Bousquet', 'appos'), (',', 'punct'), ('St´ephane', 'nummod'), ('Boucheron', 'appos'), ('G´abor', 'compound'), (' ', 'compound'), ('Lugosi', 'conj'), (',', 'punct'), ('“', 'punct'), ('Introduction', 'appos'), ('Statistical', 'compound'), ('Learning', 'compound'), ('Theory', 'pobj'), ('”', 'punct'), (',', 'punct'), ('  ', 'compound'), ('Lecture', 'compound'), ('Notes', 'appos'), ('Computer', 'compound'), ('Science', 'pobj'), (',', 'punct'), ('Vol', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 17], [17, ]], [], Olivier], [Olivier, Bousquet], [Bousquet, ,], [,, St´ephane], [St´ephane, Boucheron], [Boucheron, G´abor], [G´abor,  ], [ , Lugosi], [Lugosi, ,], [,, “], [“, Introduction], [Introduction, Statistical], [Statistical, Learning], [Learning, Theory], [Theory, ”], [”, ,], [,,   ], [  , Lecture], [Lecture, Notes], [Notes, Computer], [Computer, Science], [Science, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 17], [[, 17, ]], [17, ], Olivier], [], Olivier, Bousquet], [Olivier, Bousquet, ,], [Bousquet, ,, St´ephane], [,, St´ephane, Boucheron], [St´ephane, Boucheron, G´abor], [Boucheron, G´abor,  ], [G´abor,  , Lugosi], [ , Lugosi, ,], [Lugosi, ,, “], [,, “, Introduction], [“, Introduction, Statistical], [Introduction, Statistical, Learning], [Statistical, Learning, Theory], [Learning, Theory, ”], [Theory, ”, ,], [”, ,,   ], [,,   , Lecture], [  , Lecture, Notes], [Lecture, Notes, Computer], [Notes, Computer, Science], [Computer, Science, ,], [Science, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Olivier Bousquet, St´ephane Boucheron, G´abor  Lugosi, “Introduction, Statistical Learning Theory,   Lecture Notes, Computer Science, Vol]

>> Named Entities are: 
[('17', 'CARDINAL'), ('Olivier Bousquet', 'PERSON'), ('Boucheron', 'ORG'), ('Introduction to Statistical Learning Theory', 'ORG'), ('Lecture Notes in Computer Science', 'WORK_OF_ART')]


============================ Sentence 359 =============================

3176, pp. 


>> Tokens are: 
[3176, ,, pp, .] 

>> PoS Tags are: 
[('3176', 'NUM'), (',', 'PUNCT'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('3176', 'nummod'), (',', 'punct'), ('pp', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[3176, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[3176, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3176', 'CARDINAL')]


============================ Sentence 360 =============================

175-  213, 2004. 


>> Tokens are: 
[175-,  , 213, ,, 2004, .] 

>> PoS Tags are: 
[('175-', 'NUM'), (' ', 'SPACE'), ('213', 'NUM'), (',', 'PUNCT'), ('2004', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('175-', 'nummod'), (' ', 'ROOT'), ('213', 'appos'), (',', 'punct'), ('2004', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[175-,  ], [ , 213], [213, ,], [,, 2004], [2004, .]]

>> Trigrams: 
[[175-,  , 213], [ , 213, ,], [213, ,, 2004], [,, 2004, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('175-', 'DATE'), ('213', 'CARDINAL')]


============================ Sentence 361 =============================

  [18] Olivier Pourret, Patrick Naim and Bruce Marcot, “Bayesian  Networks: A Practical Guide to Applications”, Wiley   Publishers, 2008. 


>> Tokens are: 
[  , [, 18, ], Olivier, Pourret, ,, Patrick, Naim, Bruce, Marcot, ,, “, Bayesian,  , Networks, :, Practical, Guide, Applications, ”, ,, Wiley,   , Publishers, ,, 2008, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('18', 'NUM'), (']', 'PUNCT'), ('Olivier', 'PROPN'), ('Pourret', 'PROPN'), (',', 'PUNCT'), ('Patrick', 'PROPN'), ('Naim', 'PROPN'), ('Bruce', 'PROPN'), ('Marcot', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Bayesian', 'PROPN'), (' ', 'SPACE'), ('Networks', 'NOUN'), (':', 'PUNCT'), ('Practical', 'PROPN'), ('Guide', 'PROPN'), ('Applications', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Wiley', 'PROPN'), ('  ', 'SPACE'), ('Publishers', 'PROPN'), (',', 'PUNCT'), ('2008', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('18', 'appos'), (']', 'punct'), ('Olivier', 'compound'), ('Pourret', 'appos'), (',', 'punct'), ('Patrick', 'compound'), ('Naim', 'conj'), ('Bruce', 'compound'), ('Marcot', 'conj'), (',', 'punct'), ('“', 'punct'), ('Bayesian', 'nmod'), (' ', 'compound'), ('Networks', 'appos'), (':', 'punct'), ('Practical', 'compound'), ('Guide', 'appos'), ('Applications', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Wiley', 'appos'), ('  ', 'punct'), ('Publishers', 'appos'), (',', 'punct'), ('2008', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 18], [18, ]], [], Olivier], [Olivier, Pourret], [Pourret, ,], [,, Patrick], [Patrick, Naim], [Naim, Bruce], [Bruce, Marcot], [Marcot, ,], [,, “], [“, Bayesian], [Bayesian,  ], [ , Networks], [Networks, :], [:, Practical], [Practical, Guide], [Guide, Applications], [Applications, ”], [”, ,], [,, Wiley], [Wiley,   ], [  , Publishers], [Publishers, ,], [,, 2008], [2008, .]]

>> Trigrams: 
[[  , [, 18], [[, 18, ]], [18, ], Olivier], [], Olivier, Pourret], [Olivier, Pourret, ,], [Pourret, ,, Patrick], [,, Patrick, Naim], [Patrick, Naim, Bruce], [Naim, Bruce, Marcot], [Bruce, Marcot, ,], [Marcot, ,, “], [,, “, Bayesian], [“, Bayesian,  ], [Bayesian,  , Networks], [ , Networks, :], [Networks, :, Practical], [:, Practical, Guide], [Practical, Guide, Applications], [Guide, Applications, ”], [Applications, ”, ,], [”, ,, Wiley], [,, Wiley,   ], [Wiley,   , Publishers], [  , Publishers, ,], [Publishers, ,, 2008], [,, 2008, .]]

>> Noun Phrases are: 
[Olivier Pourret, Patrick Naim, Bruce Marcot, “Bayesian  Networks, A Practical Guide, Applications, Wiley, Publishers]

>> Named Entities are: 
[('18', 'CARDINAL'), ('Olivier Pourret', 'PERSON'), ('Patrick Naim', 'PERSON'), ('Bruce Marcot', 'PERSON'), ('Bayesian  Networks: A Practical Guide to Applications', 'WORK_OF_ART')]


============================ Sentence 362 =============================

  [19] Kamal Nigam, John Lafferty and Andrew McCallum,   


>> Tokens are: 
[  , [, 19, ], Kamal, Nigam, ,, John, Lafferty, Andrew, McCallum, ,,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('19', 'NUM'), (']', 'PUNCT'), ('Kamal', 'PROPN'), ('Nigam', 'PROPN'), (',', 'PUNCT'), ('John', 'PROPN'), ('Lafferty', 'PROPN'), ('Andrew', 'PROPN'), ('McCallum', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('19', 'appos'), (']', 'punct'), ('Kamal', 'compound'), ('Nigam', 'appos'), (',', 'punct'), ('John', 'compound'), ('Lafferty', 'conj'), ('Andrew', 'compound'), ('McCallum', 'conj'), (',', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[  , [], [[, 19], [19, ]], [], Kamal], [Kamal, Nigam], [Nigam, ,], [,, John], [John, Lafferty], [Lafferty, Andrew], [Andrew, McCallum], [McCallum, ,], [,,  ]]

>> Trigrams: 
[[  , [, 19], [[, 19, ]], [19, ], Kamal], [], Kamal, Nigam], [Kamal, Nigam, ,], [Nigam, ,, John], [,, John, Lafferty], [John, Lafferty, Andrew], [Lafferty, Andrew, McCallum], [Andrew, McCallum, ,], [McCallum, ,,  ]]

>> Noun Phrases are: 
[Kamal Nigam, John Lafferty, Andrew McCallum]

>> Named Entities are: 
[('19', 'CARDINAL'), ('John Lafferty', 'PERSON'), ('Andrew McCallum', 'PERSON')]


============================ Sentence 363 =============================

“Using Maximum Entropy for Text Classification”,   Workshop on Machine Learning for Information Filtering,   pp. 


>> Tokens are: 
[“, Maximum, Entropy, Text, Classification, ”, ,,   , Workshop, Machine, Learning, Information, Filtering, ,,   , pp, .] 

>> PoS Tags are: 
[('“', 'PUNCT'), ('Maximum', 'PROPN'), ('Entropy', 'PROPN'), ('Text', 'PROPN'), ('Classification', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Workshop', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Information', 'PROPN'), ('Filtering', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('pp', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('“', 'punct'), ('Maximum', 'compound'), ('Entropy', 'dobj'), ('Text', 'compound'), ('Classification', 'pobj'), ('”', 'punct'), (',', 'punct'), ('  ', 'compound'), ('Workshop', 'dep'), ('Machine', 'compound'), ('Learning', 'pobj'), ('Information', 'compound'), ('Filtering', 'pobj'), (',', 'punct'), ('  ', 'appos'), ('pp', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[“, Maximum], [Maximum, Entropy], [Entropy, Text], [Text, Classification], [Classification, ”], [”, ,], [,,   ], [  , Workshop], [Workshop, Machine], [Machine, Learning], [Learning, Information], [Information, Filtering], [Filtering, ,], [,,   ], [  , pp], [pp, .]]

>> Trigrams: 
[[“, Maximum, Entropy], [Maximum, Entropy, Text], [Entropy, Text, Classification], [Text, Classification, ”], [Classification, ”, ,], [”, ,,   ], [,,   , Workshop], [  , Workshop, Machine], [Workshop, Machine, Learning], [Machine, Learning, Information], [Learning, Information, Filtering], [Information, Filtering, ,], [Filtering, ,,   ], [,,   , pp], [  , pp, .]]

>> Noun Phrases are: 
[Maximum Entropy, Text Classification, Machine Learning, Information Filtering]

>> Named Entities are: 
[('Using Maximum Entropy for Text Classification', 'WORK_OF_ART')]


============================ Sentence 364 =============================

61-67, 1999. 


>> Tokens are: 
[61, -, 67, ,, 1999, .] 

>> PoS Tags are: 
[('61', 'NUM'), ('-', 'SYM'), ('67', 'NUM'), (',', 'PUNCT'), ('1999', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('61', 'ROOT'), ('-', 'punct'), ('67', 'prep'), (',', 'punct'), ('1999', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[61, -], [-, 67], [67, ,], [,, 1999], [1999, .]]

>> Trigrams: 
[[61, -, 67], [-, 67, ,], [67, ,, 1999], [,, 1999, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('61-67, 1999', 'DATE')]


============================ Sentence 365 =============================

  [20] N. J. Nilsson, “Learning Machines: Foundations of  Trainable Pattern-Classifying Systems”, First Edition, New   York: McGraw-Hill, 1965. 


>> Tokens are: 
[  , [, 20, ], N., J., Nilsson, ,, “, Learning, Machines, :, Foundations,  , Trainable, Pattern, -, Classifying, Systems, ”, ,, Edition, ,, New,   , York, :, McGraw, -, Hill, ,, 1965, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('20', 'NUM'), (']', 'PUNCT'), ('N.', 'PROPN'), ('J.', 'PROPN'), ('Nilsson', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'PROPN'), ('Machines', 'PROPN'), (':', 'PUNCT'), ('Foundations', 'NOUN'), (' ', 'SPACE'), ('Trainable', 'PROPN'), ('Pattern', 'PROPN'), ('-', 'PUNCT'), ('Classifying', 'PROPN'), ('Systems', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Edition', 'PROPN'), (',', 'PUNCT'), ('New', 'PROPN'), ('  ', 'SPACE'), ('York', 'PROPN'), (':', 'PUNCT'), ('McGraw', 'PROPN'), ('-', 'PUNCT'), ('Hill', 'PROPN'), (',', 'PUNCT'), ('1965', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('20', 'appos'), (']', 'punct'), ('N.', 'compound'), ('J.', 'compound'), ('Nilsson', 'appos'), (',', 'punct'), ('“', 'punct'), ('Learning', 'compound'), ('Machines', 'appos'), (':', 'punct'), ('Foundations', 'appos'), (' ', 'pobj'), ('Trainable', 'compound'), ('Pattern', 'compound'), ('-', 'punct'), ('Classifying', 'compound'), ('Systems', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Edition', 'conj'), (',', 'punct'), ('New', 'nmod'), ('  ', 'compound'), ('York', 'npadvmod'), (':', 'punct'), ('McGraw', 'compound'), ('-', 'punct'), ('Hill', 'appos'), (',', 'punct'), ('1965', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 20], [20, ]], [], N.], [N., J.], [J., Nilsson], [Nilsson, ,], [,, “], [“, Learning], [Learning, Machines], [Machines, :], [:, Foundations], [Foundations,  ], [ , Trainable], [Trainable, Pattern], [Pattern, -], [-, Classifying], [Classifying, Systems], [Systems, ”], [”, ,], [,, Edition], [Edition, ,], [,, New], [New,   ], [  , York], [York, :], [:, McGraw], [McGraw, -], [-, Hill], [Hill, ,], [,, 1965], [1965, .]]

>> Trigrams: 
[[  , [, 20], [[, 20, ]], [20, ], N.], [], N., J.], [N., J., Nilsson], [J., Nilsson, ,], [Nilsson, ,, “], [,, “, Learning], [“, Learning, Machines], [Learning, Machines, :], [Machines, :, Foundations], [:, Foundations,  ], [Foundations,  , Trainable], [ , Trainable, Pattern], [Trainable, Pattern, -], [Pattern, -, Classifying], [-, Classifying, Systems], [Classifying, Systems, ”], [Systems, ”, ,], [”, ,, Edition], [,, Edition, ,], [Edition, ,, New], [,, New,   ], [New,   , York], [  , York, :], [York, :, McGraw], [:, McGraw, -], [McGraw, -, Hill], [-, Hill, ,], [Hill, ,, 1965], [,, 1965, .]]

>> Noun Phrases are: 
[N. J. Nilsson, Learning Machines, Foundations, Trainable Pattern-Classifying Systems, First Edition, McGraw-Hill]

>> Named Entities are: 
[('20', 'CARDINAL'), ('N. J. Nilsson', 'PERSON'), ('Learning Machines: Foundations of  Trainable Pattern-Classifying Systems', 'WORK_OF_ART'), ('First Edition', 'WORK_OF_ART'), ('McGraw-Hill', 'ORG'), ('1965', 'DATE')]


============================ Sentence 366 =============================

  [21] Isidore Jacob Good, “Probability and the Weighing of  Evidence”, The University of Wisconsin - Madison:   Charles Griffin, 1950. 


>> Tokens are: 
[  , [, 21, ], Isidore, Jacob, Good, ,, “, Probability, Weighing,  , Evidence, ”, ,, University, Wisconsin, -, Madison, :,   , Charles, Griffin, ,, 1950, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('21', 'NUM'), (']', 'PUNCT'), ('Isidore', 'PROPN'), ('Jacob', 'PROPN'), ('Good', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Probability', 'NOUN'), ('Weighing', 'PROPN'), (' ', 'SPACE'), ('Evidence', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('University', 'PROPN'), ('Wisconsin', 'PROPN'), ('-', 'PUNCT'), ('Madison', 'PROPN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('Charles', 'PROPN'), ('Griffin', 'PROPN'), (',', 'PUNCT'), ('1950', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('21', 'appos'), (']', 'punct'), ('Isidore', 'compound'), ('Jacob', 'compound'), ('Good', 'appos'), (',', 'punct'), ('“', 'punct'), ('Probability', 'appos'), ('Weighing', 'conj'), (' ', 'pobj'), ('Evidence', 'appos'), ('”', 'punct'), (',', 'punct'), ('University', 'conj'), ('Wisconsin', 'pobj'), ('-', 'punct'), ('Madison', 'appos'), (':', 'punct'), ('  ', 'appos'), ('Charles', 'compound'), ('Griffin', 'conj'), (',', 'punct'), ('1950', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 21], [21, ]], [], Isidore], [Isidore, Jacob], [Jacob, Good], [Good, ,], [,, “], [“, Probability], [Probability, Weighing], [Weighing,  ], [ , Evidence], [Evidence, ”], [”, ,], [,, University], [University, Wisconsin], [Wisconsin, -], [-, Madison], [Madison, :], [:,   ], [  , Charles], [Charles, Griffin], [Griffin, ,], [,, 1950], [1950, .]]

>> Trigrams: 
[[  , [, 21], [[, 21, ]], [21, ], Isidore], [], Isidore, Jacob], [Isidore, Jacob, Good], [Jacob, Good, ,], [Good, ,, “], [,, “, Probability], [“, Probability, Weighing], [Probability, Weighing,  ], [Weighing,  , Evidence], [ , Evidence, ”], [Evidence, ”, ,], [”, ,, University], [,, University, Wisconsin], [University, Wisconsin, -], [Wisconsin, -, Madison], [-, Madison, :], [Madison, :,   ], [:,   , Charles], [  , Charles, Griffin], [Charles, Griffin, ,], [Griffin, ,, 1950], [,, 1950, .]]

>> Noun Phrases are: 
[Isidore Jacob Good, Probability, the Weighing, Evidence, The University, Wisconsin, - Madison, Charles Griffin]

>> Named Entities are: 
[('21', 'CARDINAL'), ('Probability and the Weighing of  Evidence', 'WORK_OF_ART'), ('The University of Wisconsin - Madison', 'ORG'), ('Charles Griffin', 'PERSON'), ('1950', 'DATE')]


============================ Sentence 367 =============================

  [22] Shiliang Sun, Changshui Zhang and Guoqiang Yu, “A  Bayesian Network Approach to Traffic Flow Forecasting”,   IEEE Transactions on Intelligent Transportation Systems,   Vol. 


>> Tokens are: 
[  , [, 22, ], Shiliang, Sun, ,, Changshui, Zhang, Guoqiang, Yu, ,, “,  , Bayesian, Network, Approach, Traffic, Flow, Forecasting, ”, ,,   , IEEE, Transactions, Intelligent, Transportation, Systems, ,,   , Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('22', 'NUM'), (']', 'PUNCT'), ('Shiliang', 'PROPN'), ('Sun', 'PROPN'), (',', 'PUNCT'), ('Changshui', 'PROPN'), ('Zhang', 'PROPN'), ('Guoqiang', 'PROPN'), ('Yu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), (' ', 'SPACE'), ('Bayesian', 'PROPN'), ('Network', 'PROPN'), ('Approach', 'PROPN'), ('Traffic', 'PROPN'), ('Flow', 'PROPN'), ('Forecasting', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('  ', 'SPACE'), ('IEEE', 'PROPN'), ('Transactions', 'PROPN'), ('Intelligent', 'PROPN'), ('Transportation', 'PROPN'), ('Systems', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('22', 'appos'), (']', 'punct'), ('Shiliang', 'compound'), ('Sun', 'appos'), (',', 'punct'), ('Changshui', 'compound'), ('Zhang', 'conj'), ('Guoqiang', 'compound'), ('Yu', 'conj'), (',', 'punct'), ('“', 'punct'), (' ', 'amod'), ('Bayesian', 'compound'), ('Network', 'compound'), ('Approach', 'appos'), ('Traffic', 'compound'), ('Flow', 'compound'), ('Forecasting', 'pobj'), ('”', 'punct'), (',', 'punct'), ('  ', 'nummod'), ('IEEE', 'compound'), ('Transactions', 'conj'), ('Intelligent', 'compound'), ('Transportation', 'compound'), ('Systems', 'pobj'), (',', 'punct'), ('  ', 'compound'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 22], [22, ]], [], Shiliang], [Shiliang, Sun], [Sun, ,], [,, Changshui], [Changshui, Zhang], [Zhang, Guoqiang], [Guoqiang, Yu], [Yu, ,], [,, “], [“,  ], [ , Bayesian], [Bayesian, Network], [Network, Approach], [Approach, Traffic], [Traffic, Flow], [Flow, Forecasting], [Forecasting, ”], [”, ,], [,,   ], [  , IEEE], [IEEE, Transactions], [Transactions, Intelligent], [Intelligent, Transportation], [Transportation, Systems], [Systems, ,], [,,   ], [  , Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 22], [[, 22, ]], [22, ], Shiliang], [], Shiliang, Sun], [Shiliang, Sun, ,], [Sun, ,, Changshui], [,, Changshui, Zhang], [Changshui, Zhang, Guoqiang], [Zhang, Guoqiang, Yu], [Guoqiang, Yu, ,], [Yu, ,, “], [,, “,  ], [“,  , Bayesian], [ , Bayesian, Network], [Bayesian, Network, Approach], [Network, Approach, Traffic], [Approach, Traffic, Flow], [Traffic, Flow, Forecasting], [Flow, Forecasting, ”], [Forecasting, ”, ,], [”, ,,   ], [,,   , IEEE], [  , IEEE, Transactions], [IEEE, Transactions, Intelligent], [Transactions, Intelligent, Transportation], [Intelligent, Transportation, Systems], [Transportation, Systems, ,], [Systems, ,,   ], [,,   , Vol], [  , Vol, .]]

>> Noun Phrases are: 
[Shiliang Sun, Changshui Zhang, Guoqiang Yu, “A  Bayesian Network Approach, Traffic Flow Forecasting,   IEEE Transactions, Intelligent Transportation Systems]

>> Named Entities are: 
[('22', 'CARDINAL'), ('Shiliang Sun', 'PERSON'), ('Changshui Zhang', 'PERSON'), ('Guoqiang Yu', 'PERSON'), ('A  Bayesian Network Approach', 'WORK_OF_ART'), ('Traffic Flow Forecasting', 'ORG'), ('IEEE Transactions on', 'ORG'), ('Intelligent Transportation Systems', 'ORG')]


============================ Sentence 368 =============================

7, No. 1, pp. 


>> Tokens are: 
[7, ,, ., 1, ,, pp, .] 

>> PoS Tags are: 
[('7', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('7', 'ROOT'), (',', 'punct'), ('.', 'npadvmod'), ('1', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[7, ,], [,, .], [., 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[7, ,, .], [,, ., 1], [., 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('7', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 369 =============================

124-132, 2006.   [23] Jie Cheng, Russell Greiner, Jonathan Kelly, David Bell and  Weiru Liu, “Learning Bayesian networks from data: An   information-Theory based approach”, The Artificial   Intelligence Journal, Vol. 


>> Tokens are: 
[124, -, 132, ,, 2006, .,   , [, 23, ], Jie, Cheng, ,, Russell, Greiner, ,, Jonathan, Kelly, ,, David, Bell,  , Weiru, Liu, ,, “, Learning, Bayesian, networks, data, :,   , information, -, Theory, based, approach, ”, ,, Artificial,   , Intelligence, Journal, ,, Vol, .] 

>> PoS Tags are: 
[('124', 'NUM'), ('-', 'SYM'), ('132', 'NUM'), (',', 'PUNCT'), ('2006', 'NUM'), ('.', 'PUNCT'), ('  ', 'SPACE'), ('[', 'PUNCT'), ('23', 'NUM'), (']', 'PUNCT'), ('Jie', 'PROPN'), ('Cheng', 'PROPN'), (',', 'PUNCT'), ('Russell', 'PROPN'), ('Greiner', 'PROPN'), (',', 'PUNCT'), ('Jonathan', 'PROPN'), ('Kelly', 'PROPN'), (',', 'PUNCT'), ('David', 'PROPN'), ('Bell', 'PROPN'), (' ', 'SPACE'), ('Weiru', 'PROPN'), ('Liu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'PROPN'), ('Bayesian', 'PROPN'), ('networks', 'NOUN'), ('data', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), ('information', 'NOUN'), ('-', 'PUNCT'), ('Theory', 'NOUN'), ('based', 'VERB'), ('approach', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Artificial', 'PROPN'), ('  ', 'SPACE'), ('Intelligence', 'PROPN'), ('Journal', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('124', 'nummod'), ('-', 'punct'), ('132', 'prep'), (',', 'punct'), ('2006', 'npadvmod'), ('.', 'punct'), ('  ', 'ROOT'), ('[', 'punct'), ('23', 'appos'), (']', 'punct'), ('Jie', 'compound'), ('Cheng', 'appos'), (',', 'punct'), ('Russell', 'compound'), ('Greiner', 'conj'), (',', 'punct'), ('Jonathan', 'compound'), ('Kelly', 'conj'), (',', 'punct'), ('David', 'compound'), ('Bell', 'conj'), (' ', 'compound'), ('Weiru', 'compound'), ('Liu', 'conj'), (',', 'punct'), ('“', 'punct'), ('Learning', 'compound'), ('Bayesian', 'nsubj'), ('networks', 'appos'), ('data', 'pobj'), (':', 'punct'), ('  ', 'nmod'), ('information', 'nmod'), ('-', 'punct'), ('Theory', 'npadvmod'), ('based', 'amod'), ('approach', 'appos'), ('”', 'punct'), (',', 'punct'), ('Artificial', 'amod'), ('  ', 'compound'), ('Intelligence', 'compound'), ('Journal', 'appos'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[124, -], [-, 132], [132, ,], [,, 2006], [2006, .], [.,   ], [  , [], [[, 23], [23, ]], [], Jie], [Jie, Cheng], [Cheng, ,], [,, Russell], [Russell, Greiner], [Greiner, ,], [,, Jonathan], [Jonathan, Kelly], [Kelly, ,], [,, David], [David, Bell], [Bell,  ], [ , Weiru], [Weiru, Liu], [Liu, ,], [,, “], [“, Learning], [Learning, Bayesian], [Bayesian, networks], [networks, data], [data, :], [:,   ], [  , information], [information, -], [-, Theory], [Theory, based], [based, approach], [approach, ”], [”, ,], [,, Artificial], [Artificial,   ], [  , Intelligence], [Intelligence, Journal], [Journal, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[124, -, 132], [-, 132, ,], [132, ,, 2006], [,, 2006, .], [2006, .,   ], [.,   , [], [  , [, 23], [[, 23, ]], [23, ], Jie], [], Jie, Cheng], [Jie, Cheng, ,], [Cheng, ,, Russell], [,, Russell, Greiner], [Russell, Greiner, ,], [Greiner, ,, Jonathan], [,, Jonathan, Kelly], [Jonathan, Kelly, ,], [Kelly, ,, David], [,, David, Bell], [David, Bell,  ], [Bell,  , Weiru], [ , Weiru, Liu], [Weiru, Liu, ,], [Liu, ,, “], [,, “, Learning], [“, Learning, Bayesian], [Learning, Bayesian, networks], [Bayesian, networks, data], [networks, data, :], [data, :,   ], [:,   , information], [  , information, -], [information, -, Theory], [-, Theory, based], [Theory, based, approach], [based, approach, ”], [approach, ”, ,], [”, ,, Artificial], [,, Artificial,   ], [Artificial,   , Intelligence], [  , Intelligence, Journal], [Intelligence, Journal, ,], [Journal, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Jie Cheng, Russell Greiner, Jonathan Kelly, David Bell,  Weiru Liu, Learning Bayesian, data, An   information-Theory based approach, The Artificial   Intelligence Journal]

>> Named Entities are: 
[('124', 'CARDINAL'), ('2006', 'DATE'), ('23', 'CARDINAL'), ('] Jie Cheng', 'PERSON'), ('Russell Greiner', 'PERSON'), ('Jonathan Kelly', 'PERSON'), ('David Bell', 'PERSON'), ('Weiru Liu', 'PERSON'), ('Learning Bayesian', 'WORK_OF_ART'), ('Intelligence Journal', 'ORG')]


============================ Sentence 370 =============================

137, pp. 


>> Tokens are: 
[137, ,, pp, .] 

>> PoS Tags are: 
[('137', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('137', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[137, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[137, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('137', 'CARDINAL')]


============================ Sentence 371 =============================

43-90, 2002. 


>> Tokens are: 
[43, -, 90, ,, 2002, .] 

>> PoS Tags are: 
[('43', 'NUM'), ('-', 'SYM'), ('90', 'NUM'), (',', 'PUNCT'), ('2002', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('43', 'ROOT'), ('-', 'punct'), ('90', 'prep'), (',', 'punct'), ('2002', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[43, -], [-, 90], [90, ,], [,, 2002], [2002, .]]

>> Trigrams: 
[[43, -, 90], [-, 90, ,], [90, ,, 2002], [,, 2002, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('43-90, 2002', 'DATE')]


============================ Sentence 372 =============================

  [24] Tom M. Mitchell, “Machine Learning: 


>> Tokens are: 
[  , [, 24, ], Tom, M., Mitchell, ,, “, Machine, Learning, :] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('24', 'NUM'), (']', 'PUNCT'), ('Tom', 'PROPN'), ('M.', 'PROPN'), ('Mitchell', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), ('Learning', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('24', 'appos'), (']', 'punct'), ('Tom', 'compound'), ('M.', 'compound'), ('Mitchell', 'appos'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), ('Learning', 'appos'), (':', 'punct')]

>> Bigrams: 
[[  , [], [[, 24], [24, ]], [], Tom], [Tom, M.], [M., Mitchell], [Mitchell, ,], [,, “], [“, Machine], [Machine, Learning], [Learning, :]]

>> Trigrams: 
[[  , [, 24], [[, 24, ]], [24, ], Tom], [], Tom, M.], [Tom, M., Mitchell], [M., Mitchell, ,], [Mitchell, ,, “], [,, “, Machine], [“, Machine, Learning], [Machine, Learning, :]]

>> Noun Phrases are: 
[Tom M. Mitchell, Machine Learning]

>> Named Entities are: 
[('24', 'CARDINAL'), ('Tom M. Mitchell', 'PERSON'), ('Machine Learning:', 'WORK_OF_ART')]


============================ Sentence 373 =============================

A Guide to Current  Research”, The Springer International Series in Engineering   and Computer Science Series, McGraw Hill, 1997. 


>> Tokens are: 
[Guide, Current,  , Research, ”, ,, Springer, International, Series, Engineering,   , Computer, Science, Series, ,, McGraw, Hill, ,, 1997, .] 

>> PoS Tags are: 
[('Guide', 'PROPN'), ('Current', 'PROPN'), (' ', 'SPACE'), ('Research', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Springer', 'PROPN'), ('International', 'PROPN'), ('Series', 'PROPN'), ('Engineering', 'PROPN'), ('  ', 'SPACE'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Series', 'PROPN'), (',', 'PUNCT'), ('McGraw', 'PROPN'), ('Hill', 'PROPN'), (',', 'PUNCT'), ('1997', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Guide', 'ROOT'), ('Current', 'compound'), (' ', 'compound'), ('Research', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Springer', 'compound'), ('International', 'compound'), ('Series', 'appos'), ('Engineering', 'pobj'), ('  ', 'appos'), ('Computer', 'compound'), ('Science', 'compound'), ('Series', 'conj'), (',', 'punct'), ('McGraw', 'compound'), ('Hill', 'conj'), (',', 'punct'), ('1997', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Guide, Current], [Current,  ], [ , Research], [Research, ”], [”, ,], [,, Springer], [Springer, International], [International, Series], [Series, Engineering], [Engineering,   ], [  , Computer], [Computer, Science], [Science, Series], [Series, ,], [,, McGraw], [McGraw, Hill], [Hill, ,], [,, 1997], [1997, .]]

>> Trigrams: 
[[Guide, Current,  ], [Current,  , Research], [ , Research, ”], [Research, ”, ,], [”, ,, Springer], [,, Springer, International], [Springer, International, Series], [International, Series, Engineering], [Series, Engineering,   ], [Engineering,   , Computer], [  , Computer, Science], [Computer, Science, Series], [Science, Series, ,], [Series, ,, McGraw], [,, McGraw, Hill], [McGraw, Hill, ,], [Hill, ,, 1997], [,, 1997, .]]

>> Noun Phrases are: 
[A Guide, Current  Research, The Springer International Series, Engineering, Computer Science Series, McGraw Hill]

>> Named Entities are: 
[('The Springer International Series in Engineering   and Computer Science Series', 'WORK_OF_ART'), ('McGraw Hill', 'ORG'), ('1997', 'DATE')]


============================ Sentence 374 =============================

  [25] D. Aha, “Lazy Learning”, Dordrecht: Kluwer Academic  Publishers, 1997. 


>> Tokens are: 
[  , [, 25, ], D., Aha, ,, “, Lazy, Learning, ”, ,, Dordrecht, :, Kluwer, Academic,  , Publishers, ,, 1997, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('25', 'NUM'), (']', 'PUNCT'), ('D.', 'PROPN'), ('Aha', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Lazy', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Dordrecht', 'NOUN'), (':', 'PUNCT'), ('Kluwer', 'PROPN'), ('Academic', 'PROPN'), (' ', 'SPACE'), ('Publishers', 'PROPN'), (',', 'PUNCT'), ('1997', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('25', 'dep'), (']', 'punct'), ('D.', 'compound'), ('Aha', 'appos'), (',', 'punct'), ('“', 'punct'), ('Lazy', 'compound'), ('Learning', 'appos'), ('”', 'punct'), (',', 'punct'), ('Dordrecht', 'appos'), (':', 'punct'), ('Kluwer', 'compound'), ('Academic', 'appos'), (' ', 'prep'), ('Publishers', 'appos'), (',', 'punct'), ('1997', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 25], [25, ]], [], D.], [D., Aha], [Aha, ,], [,, “], [“, Lazy], [Lazy, Learning], [Learning, ”], [”, ,], [,, Dordrecht], [Dordrecht, :], [:, Kluwer], [Kluwer, Academic], [Academic,  ], [ , Publishers], [Publishers, ,], [,, 1997], [1997, .]]

>> Trigrams: 
[[  , [, 25], [[, 25, ]], [25, ], D.], [], D., Aha], [D., Aha, ,], [Aha, ,, “], [,, “, Lazy], [“, Lazy, Learning], [Lazy, Learning, ”], [Learning, ”, ,], [”, ,, Dordrecht], [,, Dordrecht, :], [Dordrecht, :, Kluwer], [:, Kluwer, Academic], [Kluwer, Academic,  ], [Academic,  , Publishers], [ , Publishers, ,], [Publishers, ,, 1997], [,, 1997, .]]

>> Noun Phrases are: 
[[25] D. Aha, Lazy Learning, Dordrecht, Kluwer Academic, Publishers]

>> Named Entities are: 
[('25', 'CARDINAL'), ('Lazy Learning', 'WORK_OF_ART'), ('Dordrecht: Kluwer Academic  Publishers', 'WORK_OF_ART'), ('1997', 'DATE')]


============================ Sentence 375 =============================

  [26] Ramon Lopez De Mantaras and Eva Armengol, “Machine  learning from examples: Inductive and Lazy methods”, Data and   Knowledge Engineering, Vol. 


>> Tokens are: 
[  , [, 26, ], Ramon, Lopez, De, Mantaras, Eva, Armengol, ,, “, Machine,  , learning, examples, :, Inductive, Lazy, methods, ”, ,, Data,   , Knowledge, Engineering, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('26', 'NUM'), (']', 'PUNCT'), ('Ramon', 'PROPN'), ('Lopez', 'PROPN'), ('De', 'PROPN'), ('Mantaras', 'PROPN'), ('Eva', 'PROPN'), ('Armengol', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Machine', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('examples', 'NOUN'), (':', 'PUNCT'), ('Inductive', 'PROPN'), ('Lazy', 'PROPN'), ('methods', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Data', 'PROPN'), ('  ', 'SPACE'), ('Knowledge', 'PROPN'), ('Engineering', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'nmod'), ('26', 'appos'), (']', 'punct'), ('Ramon', 'compound'), ('Lopez', 'compound'), ('De', 'compound'), ('Mantaras', 'appos'), ('Eva', 'compound'), ('Armengol', 'conj'), (',', 'punct'), ('“', 'punct'), ('Machine', 'compound'), (' ', 'nsubj'), ('learning', 'acl'), ('examples', 'pobj'), (':', 'punct'), ('Inductive', 'amod'), ('Lazy', 'conj'), ('methods', 'appos'), ('”', 'punct'), (',', 'punct'), ('Data', 'conj'), ('  ', 'compound'), ('Knowledge', 'compound'), ('Engineering', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 26], [26, ]], [], Ramon], [Ramon, Lopez], [Lopez, De], [De, Mantaras], [Mantaras, Eva], [Eva, Armengol], [Armengol, ,], [,, “], [“, Machine], [Machine,  ], [ , learning], [learning, examples], [examples, :], [:, Inductive], [Inductive, Lazy], [Lazy, methods], [methods, ”], [”, ,], [,, Data], [Data,   ], [  , Knowledge], [Knowledge, Engineering], [Engineering, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 26], [[, 26, ]], [26, ], Ramon], [], Ramon, Lopez], [Ramon, Lopez, De], [Lopez, De, Mantaras], [De, Mantaras, Eva], [Mantaras, Eva, Armengol], [Eva, Armengol, ,], [Armengol, ,, “], [,, “, Machine], [“, Machine,  ], [Machine,  , learning], [ , learning, examples], [learning, examples, :], [examples, :, Inductive], [:, Inductive, Lazy], [Inductive, Lazy, methods], [Lazy, methods, ”], [methods, ”, ,], [”, ,, Data], [,, Data,   ], [Data,   , Knowledge], [  , Knowledge, Engineering], [Knowledge, Engineering, ,], [Engineering, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Ramon Lopez De Mantaras, Eva Armengol, examples, Inductive and Lazy methods, Data,   Knowledge Engineering]

>> Named Entities are: 
[('26', 'CARDINAL'), ('Eva Armengol', 'PERSON'), ('Machine  ', 'WORK_OF_ART'), ('Data', 'ORG')]


============================ Sentence 376 =============================

25, No. 1-2, pp. 


>> Tokens are: 
[25, ,, ., 1, -, 2, ,, pp, .] 

>> PoS Tags are: 
[('25', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('1', 'NUM'), ('-', 'SYM'), ('2', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('25', 'nummod'), (',', 'punct'), ('.', 'appos'), ('1', 'nummod'), ('-', 'punct'), ('2', 'prep'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[25, ,], [,, .], [., 1], [1, -], [-, 2], [2, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[25, ,, .], [,, ., 1], [., 1, -], [1, -, 2], [-, 2, ,], [2, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[., pp]

>> Named Entities are: 
[('25', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 377 =============================

99-123, 1998. 


>> Tokens are: 
[99, -, 123, ,, 1998, .] 

>> PoS Tags are: 
[('99', 'NUM'), ('-', 'SYM'), ('123', 'NUM'), (',', 'PUNCT'), ('1998', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('99', 'ROOT'), ('-', 'punct'), ('123', 'prep'), (',', 'punct'), ('1998', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[99, -], [-, 123], [123, ,], [,, 1998], [1998, .]]

>> Trigrams: 
[[99, -, 123], [-, 123, ,], [123, ,, 1998], [,, 1998, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('99', 'CARDINAL')]


============================ Sentence 378 =============================

  [27] Hamid Parvin, Hoseinali Alizadeh and Behrouz Minati, “A  Modification on K-Nearest Neighbor Classifier”, Global   Journal of Computer Science and Technology, Vol. 


>> Tokens are: 
[  , [, 27, ], Hamid, Parvin, ,, Hoseinali, Alizadeh, Behrouz, Minati, ,, “,  , Modification, K, -, Nearest, Neighbor, Classifier, ”, ,, Global,   , Journal, Computer, Science, Technology, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('27', 'NUM'), (']', 'PUNCT'), ('Hamid', 'PROPN'), ('Parvin', 'PROPN'), (',', 'PUNCT'), ('Hoseinali', 'PROPN'), ('Alizadeh', 'PROPN'), ('Behrouz', 'PROPN'), ('Minati', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), (' ', 'SPACE'), ('Modification', 'NOUN'), ('K', 'PROPN'), ('-', 'PUNCT'), ('Nearest', 'PROPN'), ('Neighbor', 'PROPN'), ('Classifier', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Global', 'PROPN'), ('  ', 'SPACE'), ('Journal', 'PROPN'), ('Computer', 'PROPN'), ('Science', 'PROPN'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('27', 'appos'), (']', 'punct'), ('Hamid', 'compound'), ('Parvin', 'appos'), (',', 'punct'), ('Hoseinali', 'compound'), ('Alizadeh', 'conj'), ('Behrouz', 'compound'), ('Minati', 'conj'), (',', 'punct'), ('“', 'punct'), (' ', 'compound'), ('Modification', 'appos'), ('K', 'compound'), ('-', 'punct'), ('Nearest', 'compound'), ('Neighbor', 'compound'), ('Classifier', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Global', 'compound'), ('  ', 'appos'), ('Journal', 'appos'), ('Computer', 'compound'), ('Science', 'pobj'), ('Technology', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 27], [27, ]], [], Hamid], [Hamid, Parvin], [Parvin, ,], [,, Hoseinali], [Hoseinali, Alizadeh], [Alizadeh, Behrouz], [Behrouz, Minati], [Minati, ,], [,, “], [“,  ], [ , Modification], [Modification, K], [K, -], [-, Nearest], [Nearest, Neighbor], [Neighbor, Classifier], [Classifier, ”], [”, ,], [,, Global], [Global,   ], [  , Journal], [Journal, Computer], [Computer, Science], [Science, Technology], [Technology, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 27], [[, 27, ]], [27, ], Hamid], [], Hamid, Parvin], [Hamid, Parvin, ,], [Parvin, ,, Hoseinali], [,, Hoseinali, Alizadeh], [Hoseinali, Alizadeh, Behrouz], [Alizadeh, Behrouz, Minati], [Behrouz, Minati, ,], [Minati, ,, “], [,, “,  ], [“,  , Modification], [ , Modification, K], [Modification, K, -], [K, -, Nearest], [-, Nearest, Neighbor], [Nearest, Neighbor, Classifier], [Neighbor, Classifier, ”], [Classifier, ”, ,], [”, ,, Global], [,, Global,   ], [Global,   , Journal], [  , Journal, Computer], [Journal, Computer, Science], [Computer, Science, Technology], [Science, Technology, ,], [Technology, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Hamid Parvin, Hoseinali Alizadeh, Behrouz Minati, “A  Modification, K-Nearest Neighbor Classifier, Journal, Computer Science, Technology]

>> Named Entities are: 
[('27', 'CARDINAL'), ('Hamid Parvin', 'PERSON'), ('Behrouz Minati', 'PERSON'), ('A  Modification on K-Nearest Neighbor Classifier', 'WORK_OF_ART'), ('Global   ', 'ORG'), ('Journal of Computer Science and Technology', 'ORG')]


============================ Sentence 379 =============================

10, No.   14 (Ver.1.0), pp. 


>> Tokens are: 
[10, ,, .,   , 14, (, Ver.1.0, ), ,, pp, .] 

>> PoS Tags are: 
[('10', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('  ', 'SPACE'), ('14', 'NUM'), ('(', 'PUNCT'), ('Ver.1.0', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('10', 'nummod'), (',', 'punct'), ('.', 'punct'), ('  ', 'ROOT'), ('14', 'nummod'), ('(', 'punct'), ('Ver.1.0', 'appos'), (')', 'punct'), (',', 'punct'), ('pp', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[10, ,], [,, .], [.,   ], [  , 14], [14, (], [(, Ver.1.0], [Ver.1.0, )], [), ,], [,, pp], [pp, .]]

>> Trigrams: 
[[10, ,, .], [,, .,   ], [.,   , 14], [  , 14, (], [14, (, Ver.1.0], [(, Ver.1.0, )], [Ver.1.0, ), ,], [), ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[(Ver.1.0, , pp]

>> Named Entities are: 
[('10', 'CARDINAL'), ('14', 'CARDINAL')]


============================ Sentence 380 =============================

37-41, 2010. 


>> Tokens are: 
[37, -, 41, ,, 2010, .] 

>> PoS Tags are: 
[('37', 'NUM'), ('-', 'SYM'), ('41', 'NUM'), (',', 'PUNCT'), ('2010', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('37', 'ROOT'), ('-', 'punct'), ('41', 'prep'), (',', 'punct'), ('2010', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[37, -], [-, 41], [41, ,], [,, 2010], [2010, .]]

>> Trigrams: 
[[37, -, 41], [-, 41, ,], [41, ,, 2010], [,, 2010, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('37', 'CARDINAL')]


============================ Sentence 381 =============================

  [28] Yen-Liang Chen and Lucas Tzu-Hsuan Hung, “Using  decision trees to summarize associative classification   rules”, Expert Systems with Applications, Vol. 


>> Tokens are: 
[  , [, 28, ], Yen, -, Liang, Chen, Lucas, Tzu, -, Hsuan, Hung, ,, “,  , decision, trees, summarize, associative, classification,   , rules, ”, ,, Expert, Systems, Applications, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('28', 'NUM'), (']', 'PUNCT'), ('Yen', 'PROPN'), ('-', 'PUNCT'), ('Liang', 'PROPN'), ('Chen', 'PROPN'), ('Lucas', 'PROPN'), ('Tzu', 'PROPN'), ('-', 'PUNCT'), ('Hsuan', 'PROPN'), ('Hung', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), (' ', 'SPACE'), ('decision', 'NOUN'), ('trees', 'NOUN'), ('summarize', 'VERB'), ('associative', 'ADJ'), ('classification', 'NOUN'), ('  ', 'SPACE'), ('rules', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Expert', 'PROPN'), ('Systems', 'PROPN'), ('Applications', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'nmod'), ('28', 'appos'), (']', 'punct'), ('Yen', 'compound'), ('-', 'punct'), ('Liang', 'compound'), ('Chen', 'appos'), ('Lucas', 'compound'), ('Tzu', 'compound'), ('-', 'punct'), ('Hsuan', 'compound'), ('Hung', 'conj'), (',', 'punct'), ('“', 'punct'), (' ', 'dobj'), ('decision', 'compound'), ('trees', 'dobj'), ('summarize', 'xcomp'), ('associative', 'amod'), ('classification', 'compound'), ('  ', 'compound'), ('rules', 'dobj'), ('”', 'punct'), (',', 'punct'), ('Expert', 'compound'), ('Systems', 'conj'), ('Applications', 'pobj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 28], [28, ]], [], Yen], [Yen, -], [-, Liang], [Liang, Chen], [Chen, Lucas], [Lucas, Tzu], [Tzu, -], [-, Hsuan], [Hsuan, Hung], [Hung, ,], [,, “], [“,  ], [ , decision], [decision, trees], [trees, summarize], [summarize, associative], [associative, classification], [classification,   ], [  , rules], [rules, ”], [”, ,], [,, Expert], [Expert, Systems], [Systems, Applications], [Applications, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 28], [[, 28, ]], [28, ], Yen], [], Yen, -], [Yen, -, Liang], [-, Liang, Chen], [Liang, Chen, Lucas], [Chen, Lucas, Tzu], [Lucas, Tzu, -], [Tzu, -, Hsuan], [-, Hsuan, Hung], [Hsuan, Hung, ,], [Hung, ,, “], [,, “,  ], [“,  , decision], [ , decision, trees], [decision, trees, summarize], [trees, summarize, associative], [summarize, associative, classification], [associative, classification,   ], [classification,   , rules], [  , rules, ”], [rules, ”, ,], [”, ,, Expert], [,, Expert, Systems], [Expert, Systems, Applications], [Systems, Applications, ,], [Applications, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Yen-Liang Chen, Lucas Tzu-Hsuan Hung, decision trees, associative classification   rules, Applications]

>> Named Entities are: 
[('28', 'CARDINAL'), ('Yen-Liang Chen', 'PERSON'), ('Lucas Tzu-Hsuan Hung', 'ORG')]


============================ Sentence 382 =============================

36, No. 2,   Part 1, pp. 


>> Tokens are: 
[36, ,, ., 2, ,,   , 1, ,, pp, .] 

>> PoS Tags are: 
[('36', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('2', 'NUM'), (',', 'PUNCT'), ('  ', 'SPACE'), ('1', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('36', 'nummod'), (',', 'punct'), ('.', 'appos'), ('2', 'nummod'), (',', 'punct'), ('  ', 'ROOT'), ('1', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[36, ,], [,, .], [., 2], [2, ,], [,,   ], [  , 1], [1, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[36, ,, .], [,, ., 2], [., 2, ,], [2, ,,   ], [,,   , 1], [  , 1, ,], [1, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[., pp]

>> Named Entities are: 
[('36', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 383 =============================

2338-2351, 2009. 


>> Tokens are: 
[2338, -, 2351, ,, 2009, .] 

>> PoS Tags are: 
[('2338', 'NUM'), ('-', 'SYM'), ('2351', 'NUM'), (',', 'PUNCT'), ('2009', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2338', 'ROOT'), ('-', 'punct'), ('2351', 'prep'), (',', 'punct'), ('2009', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[2338, -], [-, 2351], [2351, ,], [,, 2009], [2009, .]]

>> Trigrams: 
[[2338, -, 2351], [-, 2351, ,], [2351, ,, 2009], [,, 2009, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2338-2351', 'DATE'), ('2009', 'DATE')]


============================ Sentence 384 =============================

  [29] Samy Bengio, Li Deng, Hugo Larochelle, Honglak Lee, and  Ruslan Salakhutdinov, “Guest Editors’ Introduction: Special   Section on Learning Deep Architectures”, IEEE   Transactions on   Pattern Analysis and Machine   Intelligence, Vol. 


>> Tokens are: 
[  , [, 29, ], Samy, Bengio, ,, Li, Deng, ,, Hugo, Larochelle, ,, Honglak, Lee, ,,  , Ruslan, Salakhutdinov, ,, “, Guest, Editors, ’, Introduction, :, Special,   , Section, Learning, Deep, Architectures, ”, ,, IEEE,   , Transactions,   , Pattern, Analysis, Machine,   , Intelligence, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('29', 'NUM'), (']', 'PUNCT'), ('Samy', 'PROPN'), ('Bengio', 'PROPN'), (',', 'PUNCT'), ('Li', 'PROPN'), ('Deng', 'PROPN'), (',', 'PUNCT'), ('Hugo', 'PROPN'), ('Larochelle', 'PROPN'), (',', 'PUNCT'), ('Honglak', 'PROPN'), ('Lee', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('Ruslan', 'PROPN'), ('Salakhutdinov', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Guest', 'PROPN'), ('Editors', 'NOUN'), ('’', 'PUNCT'), ('Introduction', 'NOUN'), (':', 'PUNCT'), ('Special', 'ADJ'), ('  ', 'SPACE'), ('Section', 'NOUN'), ('Learning', 'PROPN'), ('Deep', 'PROPN'), ('Architectures', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('IEEE', 'PROPN'), ('  ', 'SPACE'), ('Transactions', 'PROPN'), ('  ', 'SPACE'), ('Pattern', 'PROPN'), ('Analysis', 'PROPN'), ('Machine', 'PROPN'), ('  ', 'SPACE'), ('Intelligence', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('[', 'nmod'), ('29', 'appos'), (']', 'punct'), ('Samy', 'compound'), ('Bengio', 'appos'), (',', 'punct'), ('Li', 'compound'), ('Deng', 'conj'), (',', 'punct'), ('Hugo', 'compound'), ('Larochelle', 'conj'), (',', 'punct'), ('Honglak', 'compound'), ('Lee', 'conj'), (',', 'punct'), (' ', 'compound'), ('Ruslan', 'compound'), ('Salakhutdinov', 'conj'), (',', 'punct'), ('“', 'punct'), ('Guest', 'compound'), ('Editors', 'nmod'), ('’', 'punct'), ('Introduction', 'appos'), (':', 'punct'), ('Special', 'amod'), ('  ', 'compound'), ('Section', 'appos'), ('Learning', 'compound'), ('Deep', 'compound'), ('Architectures', 'pobj'), ('”', 'punct'), (',', 'punct'), ('IEEE', 'appos'), ('  ', 'ROOT'), ('Transactions', 'dobj'), ('  ', 'compound'), ('Pattern', 'compound'), ('Analysis', 'pobj'), ('Machine', 'conj'), ('  ', 'compound'), ('Intelligence', 'npadvmod'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 29], [29, ]], [], Samy], [Samy, Bengio], [Bengio, ,], [,, Li], [Li, Deng], [Deng, ,], [,, Hugo], [Hugo, Larochelle], [Larochelle, ,], [,, Honglak], [Honglak, Lee], [Lee, ,], [,,  ], [ , Ruslan], [Ruslan, Salakhutdinov], [Salakhutdinov, ,], [,, “], [“, Guest], [Guest, Editors], [Editors, ’], [’, Introduction], [Introduction, :], [:, Special], [Special,   ], [  , Section], [Section, Learning], [Learning, Deep], [Deep, Architectures], [Architectures, ”], [”, ,], [,, IEEE], [IEEE,   ], [  , Transactions], [Transactions,   ], [  , Pattern], [Pattern, Analysis], [Analysis, Machine], [Machine,   ], [  , Intelligence], [Intelligence, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 29], [[, 29, ]], [29, ], Samy], [], Samy, Bengio], [Samy, Bengio, ,], [Bengio, ,, Li], [,, Li, Deng], [Li, Deng, ,], [Deng, ,, Hugo], [,, Hugo, Larochelle], [Hugo, Larochelle, ,], [Larochelle, ,, Honglak], [,, Honglak, Lee], [Honglak, Lee, ,], [Lee, ,,  ], [,,  , Ruslan], [ , Ruslan, Salakhutdinov], [Ruslan, Salakhutdinov, ,], [Salakhutdinov, ,, “], [,, “, Guest], [“, Guest, Editors], [Guest, Editors, ’], [Editors, ’, Introduction], [’, Introduction, :], [Introduction, :, Special], [:, Special,   ], [Special,   , Section], [  , Section, Learning], [Section, Learning, Deep], [Learning, Deep, Architectures], [Deep, Architectures, ”], [Architectures, ”, ,], [”, ,, IEEE], [,, IEEE,   ], [IEEE,   , Transactions], [  , Transactions,   ], [Transactions,   , Pattern], [  , Pattern, Analysis], [Pattern, Analysis, Machine], [Analysis, Machine,   ], [Machine,   , Intelligence], [  , Intelligence, ,], [Intelligence, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Samy Bengio, Li Deng, Hugo Larochelle, Honglak Lee,  Ruslan Salakhutdinov, “Guest Editors’ Introduction, Special   Section, Learning Deep Architectures, IEEE, Transactions,   Pattern Analysis, Machine]

>> Named Entities are: 
[('29', 'CARDINAL'), ('Samy Bengio', 'ORG'), ('Li Deng', 'PERSON'), ('Hugo Larochelle', 'PERSON'), ('Honglak Lee', 'PERSON'), ('Ruslan Salakhutdinov', 'PERSON'), ('Guest Editors’ Introduction: Special   Section on Learning Deep Architectures', 'WORK_OF_ART'), ('Pattern Analysis', 'ORG')]


============================ Sentence 385 =============================

35, No. 8, pp. 


>> Tokens are: 
[35, ,, ., 8, ,, pp, .] 

>> PoS Tags are: 
[('35', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('8', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('35', 'ROOT'), (',', 'punct'), ('.', 'npadvmod'), ('8', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[35, ,], [,, .], [., 8], [8, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[35, ,, .], [,, ., 8], [., 8, ,], [8, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('35', 'DATE'), ('8', 'CARDINAL')]


============================ Sentence 386 =============================

1795-1797, 2013. 


>> Tokens are: 
[1795, -, 1797, ,, 2013, .] 

>> PoS Tags are: 
[('1795', 'NUM'), ('-', 'SYM'), ('1797', 'NUM'), (',', 'PUNCT'), ('2013', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1795', 'nummod'), ('-', 'punct'), ('1797', 'ROOT'), (',', 'punct'), ('2013', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[1795, -], [-, 1797], [1797, ,], [,, 2013], [2013, .]]

>> Trigrams: 
[[1795, -, 1797], [-, 1797, ,], [1797, ,, 2013], [,, 2013, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1795-1797', 'DATE'), ('2013', 'DATE')]


============================ Sentence 387 =============================

  [30] Qinghua Zheng, Zhaohui Wu, Xiaocheng Cheng, Lu Jiang  and Jun Liu, “Learning to crawl deep web”, Information   Systems, Vol. 


>> Tokens are: 
[  , [, 30, ], Qinghua, Zheng, ,, Zhaohui, Wu, ,, Xiaocheng, Cheng, ,, Lu, Jiang,  , Jun, Liu, ,, “, Learning, crawl, deep, web, ”, ,, Information,   , Systems, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('30', 'NUM'), (']', 'PUNCT'), ('Qinghua', 'PROPN'), ('Zheng', 'PROPN'), (',', 'PUNCT'), ('Zhaohui', 'PROPN'), ('Wu', 'PROPN'), (',', 'PUNCT'), ('Xiaocheng', 'PROPN'), ('Cheng', 'PROPN'), (',', 'PUNCT'), ('Lu', 'PROPN'), ('Jiang', 'PROPN'), (' ', 'SPACE'), ('Jun', 'PROPN'), ('Liu', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Learning', 'VERB'), ('crawl', 'VERB'), ('deep', 'ADJ'), ('web', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Information', 'PROPN'), ('  ', 'SPACE'), ('Systems', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('30', 'appos'), (']', 'punct'), ('Qinghua', 'compound'), ('Zheng', 'appos'), (',', 'punct'), ('Zhaohui', 'compound'), ('Wu', 'conj'), (',', 'punct'), ('Xiaocheng', 'compound'), ('Cheng', 'conj'), (',', 'punct'), ('Lu', 'compound'), ('Jiang', 'compound'), (' ', 'appos'), ('Jun', 'compound'), ('Liu', 'conj'), (',', 'punct'), ('“', 'punct'), ('Learning', 'appos'), ('crawl', 'xcomp'), ('deep', 'amod'), ('web', 'dobj'), ('”', 'punct'), (',', 'punct'), ('Information', 'compound'), ('  ', 'compound'), ('Systems', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 30], [30, ]], [], Qinghua], [Qinghua, Zheng], [Zheng, ,], [,, Zhaohui], [Zhaohui, Wu], [Wu, ,], [,, Xiaocheng], [Xiaocheng, Cheng], [Cheng, ,], [,, Lu], [Lu, Jiang], [Jiang,  ], [ , Jun], [Jun, Liu], [Liu, ,], [,, “], [“, Learning], [Learning, crawl], [crawl, deep], [deep, web], [web, ”], [”, ,], [,, Information], [Information,   ], [  , Systems], [Systems, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 30], [[, 30, ]], [30, ], Qinghua], [], Qinghua, Zheng], [Qinghua, Zheng, ,], [Zheng, ,, Zhaohui], [,, Zhaohui, Wu], [Zhaohui, Wu, ,], [Wu, ,, Xiaocheng], [,, Xiaocheng, Cheng], [Xiaocheng, Cheng, ,], [Cheng, ,, Lu], [,, Lu, Jiang], [Lu, Jiang,  ], [Jiang,  , Jun], [ , Jun, Liu], [Jun, Liu, ,], [Liu, ,, “], [,, “, Learning], [“, Learning, crawl], [Learning, crawl, deep], [crawl, deep, web], [deep, web, ”], [web, ”, ,], [”, ,, Information], [,, Information,   ], [Information,   , Systems], [  , Systems, ,], [Systems, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Qinghua Zheng, Zhaohui Wu, Xiaocheng Cheng, Jun Liu, deep web, Information   Systems]

>> Named Entities are: 
[('30', 'CARDINAL'), ('Qinghua Zheng', 'PERSON'), ('Zhaohui Wu', 'PERSON'), ('Xiaocheng Cheng', 'PERSON'), ('Lu Jiang', 'PERSON'), ('Jun Liu', 'PERSON'), ('Vol', 'GPE')]


============================ Sentence 388 =============================

38, No. 6, pp. 


>> Tokens are: 
[38, ,, ., 6, ,, pp, .] 

>> PoS Tags are: 
[('38', 'NUM'), (',', 'PUNCT'), ('.', 'NOUN'), ('6', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('38', 'ROOT'), (',', 'punct'), ('.', 'npadvmod'), ('6', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[38, ,], [,, .], [., 6], [6, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[38, ,, .], [,, ., 6], [., 6, ,], [6, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('38', 'DATE'), ('6', 'CARDINAL')]


============================ Sentence 389 =============================

801-819, 2013. 


>> Tokens are: 
[801, -, 819, ,, 2013, .] 

>> PoS Tags are: 
[('801', 'NUM'), ('-', 'SYM'), ('819', 'NUM'), (',', 'PUNCT'), ('2013', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('801', 'ROOT'), ('-', 'punct'), ('819', 'prep'), (',', 'punct'), ('2013', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[801, -], [-, 819], [819, ,], [,, 2013], [2013, .]]

>> Trigrams: 
[[801, -, 819], [-, 819, ,], [819, ,, 2013], [,, 2013, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('801', 'CARDINAL')]


============================ Sentence 390 =============================

  [31] Xue-Wen Chen and Xiaotong Lin,” Big Data Deep 


>> Tokens are: 
[  , [, 31, ], Xue, -, Wen, Chen, Xiaotong, Lin, ,, ”, Big, Data, Deep] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('31', 'NUM'), (']', 'PUNCT'), ('Xue', 'PROPN'), ('-', 'PUNCT'), ('Wen', 'PROPN'), ('Chen', 'PROPN'), ('Xiaotong', 'PROPN'), ('Lin', 'PROPN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('Big', 'PROPN'), ('Data', 'PROPN'), ('Deep', 'PROPN')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('31', 'appos'), (']', 'punct'), ('Xue', 'compound'), ('-', 'punct'), ('Wen', 'compound'), ('Chen', 'appos'), ('Xiaotong', 'compound'), ('Lin', 'conj'), (',', 'punct'), ('”', 'punct'), ('Big', 'compound'), ('Data', 'compound'), ('Deep', 'appos')]

>> Bigrams: 
[[  , [], [[, 31], [31, ]], [], Xue], [Xue, -], [-, Wen], [Wen, Chen], [Chen, Xiaotong], [Xiaotong, Lin], [Lin, ,], [,, ”], [”, Big], [Big, Data], [Data, Deep]]

>> Trigrams: 
[[  , [, 31], [[, 31, ]], [31, ], Xue], [], Xue, -], [Xue, -, Wen], [-, Wen, Chen], [Wen, Chen, Xiaotong], [Chen, Xiaotong, Lin], [Xiaotong, Lin, ,], [Lin, ,, ”], [,, ”, Big], [”, Big, Data], [Big, Data, Deep]]

>> Noun Phrases are: 
[Xue-Wen Chen, Xiaotong Lin, Big Data Deep]

>> Named Entities are: 
[('31', 'CARDINAL'), ('Wen Chen', 'PERSON'), ('Xiaotong Lin', 'PERSON'), ('Big Data Deep', 'PRODUCT')]


============================ Sentence 391 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 392 =============================

Learning: Challenges and Perspectives”, IEEE Access   Practical Innovations: Open Solutions and Access and   IEEE, Vol. 


>> Tokens are: 
[Learning, :, Challenges, Perspectives, ”, ,, IEEE, Access,   , Practical, Innovations, :, Open, Solutions, Access,   , IEEE, ,, Vol, .] 

>> PoS Tags are: 
[('Learning', 'PROPN'), (':', 'PUNCT'), ('Challenges', 'NOUN'), ('Perspectives', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('IEEE', 'PROPN'), ('Access', 'PROPN'), ('  ', 'SPACE'), ('Practical', 'PROPN'), ('Innovations', 'PROPN'), (':', 'PUNCT'), ('Open', 'PROPN'), ('Solutions', 'PROPN'), ('Access', 'PROPN'), ('  ', 'SPACE'), ('IEEE', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'dep'), (':', 'punct'), ('Challenges', 'appos'), ('Perspectives', 'conj'), ('”', 'punct'), (',', 'punct'), ('IEEE', 'compound'), ('Access', 'appos'), ('  ', 'compound'), ('Practical', 'compound'), ('Innovations', 'ROOT'), (':', 'punct'), ('Open', 'compound'), ('Solutions', 'appos'), ('Access', 'conj'), ('  ', 'conj'), ('IEEE', 'conj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Learning, :], [:, Challenges], [Challenges, Perspectives], [Perspectives, ”], [”, ,], [,, IEEE], [IEEE, Access], [Access,   ], [  , Practical], [Practical, Innovations], [Innovations, :], [:, Open], [Open, Solutions], [Solutions, Access], [Access,   ], [  , IEEE], [IEEE, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[Learning, :, Challenges], [:, Challenges, Perspectives], [Challenges, Perspectives, ”], [Perspectives, ”, ,], [”, ,, IEEE], [,, IEEE, Access], [IEEE, Access,   ], [Access,   , Practical], [  , Practical, Innovations], [Practical, Innovations, :], [Innovations, :, Open], [:, Open, Solutions], [Open, Solutions, Access], [Solutions, Access,   ], [Access,   , IEEE], [  , IEEE, ,], [IEEE, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[Challenges, Perspectives, IEEE Access, Open Solutions, Access, IEEE]

>> Named Entities are: 
[]


============================ Sentence 393 =============================

2, pp. 


>> Tokens are: 
[2, ,, pp, .] 

>> PoS Tags are: 
[('2', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('2', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[2, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[2, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[pp]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 394 =============================

514-525, 2014. 


>> Tokens are: 
[514, -, 525, ,, 2014, .] 

>> PoS Tags are: 
[('514', 'NUM'), ('-', 'SYM'), ('525', 'NUM'), (',', 'PUNCT'), ('2014', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('514', 'ROOT'), ('-', 'punct'), ('525', 'prep'), (',', 'punct'), ('2014', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[514, -], [-, 525], [525, ,], [,, 2014], [2014, .]]

>> Trigrams: 
[[514, -, 525], [-, 525, ,], [525, ,, 2014], [,, 2014, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('514', 'CARDINAL')]


============================ Sentence 395 =============================

  [32] Rajat Raina, Anand Madhavan and Andrew Yg, “Large- scale Deep Unsupervised Learning using Graphics   Processors”, 26 th   


>> Tokens are: 
[  , [, 32, ], Rajat, Raina, ,, Anand, Madhavan, Andrew, Yg, ,, “, Large-, scale, Deep, Unsupervised, Learning, Graphics,   , Processors, ”, ,, 26, th,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('32', 'NUM'), (']', 'PUNCT'), ('Rajat', 'PROPN'), ('Raina', 'PROPN'), (',', 'PUNCT'), ('Anand', 'PROPN'), ('Madhavan', 'PROPN'), ('Andrew', 'PROPN'), ('Yg', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Large-', 'ADJ'), ('scale', 'NOUN'), ('Deep', 'PROPN'), ('Unsupervised', 'PROPN'), ('Learning', 'PROPN'), ('Graphics', 'PROPN'), ('  ', 'SPACE'), ('Processors', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('26', 'NUM'), ('th', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('32', 'appos'), (']', 'punct'), ('Rajat', 'compound'), ('Raina', 'appos'), (',', 'punct'), ('Anand', 'compound'), ('Madhavan', 'conj'), ('Andrew', 'compound'), ('Yg', 'conj'), (',', 'punct'), ('“', 'punct'), ('Large-', 'amod'), ('scale', 'appos'), ('Deep', 'compound'), ('Unsupervised', 'compound'), ('Learning', 'dobj'), ('Graphics', 'dative'), ('  ', 'compound'), ('Processors', 'dobj'), ('”', 'punct'), (',', 'punct'), ('26', 'nummod'), ('th', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[  , [], [[, 32], [32, ]], [], Rajat], [Rajat, Raina], [Raina, ,], [,, Anand], [Anand, Madhavan], [Madhavan, Andrew], [Andrew, Yg], [Yg, ,], [,, “], [“, Large-], [Large-, scale], [scale, Deep], [Deep, Unsupervised], [Unsupervised, Learning], [Learning, Graphics], [Graphics,   ], [  , Processors], [Processors, ”], [”, ,], [,, 26], [26, th], [th,  ]]

>> Trigrams: 
[[  , [, 32], [[, 32, ]], [32, ], Rajat], [], Rajat, Raina], [Rajat, Raina, ,], [Raina, ,, Anand], [,, Anand, Madhavan], [Anand, Madhavan, Andrew], [Madhavan, Andrew, Yg], [Andrew, Yg, ,], [Yg, ,, “], [,, “, Large-], [“, Large-, scale], [Large-, scale, Deep], [scale, Deep, Unsupervised], [Deep, Unsupervised, Learning], [Unsupervised, Learning, Graphics], [Learning, Graphics,   ], [Graphics,   , Processors], [  , Processors, ”], [Processors, ”, ,], [”, ,, 26], [,, 26, th], [26, th,  ]]

>> Noun Phrases are: 
[Rajat Raina, Anand Madhavan, Andrew Yg, Large- scale, Deep Unsupervised Learning, Graphics,   Processors]

>> Named Entities are: 
[('32', 'CARDINAL'), ('Rajat Raina', 'PERSON'), ('Anand Madhavan', 'PERSON'), ('Andrew Yg', 'PERSON'), ('Deep Unsupervised Learning using Graphics   Processors', 'PERSON'), ('26', 'CARDINAL')]


============================ Sentence 396 =============================

International Conference on Machine    


>> Tokens are: 
[International, Conference, Machine,   ] 

>> PoS Tags are: 
[('International', 'PROPN'), ('Conference', 'PROPN'), ('Machine', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('International', 'compound'), ('Conference', 'ROOT'), ('Machine', 'compound'), ('  ', 'pobj')]

>> Bigrams: 
[[International, Conference], [Conference, Machine], [Machine,   ]]

>> Trigrams: 
[[International, Conference, Machine], [Conference, Machine,   ]]

>> Noun Phrases are: 
[International Conference]

>> Named Entities are: 
[]


============================ Sentence 397 =============================

Learning, pp. 


>> Tokens are: 
[Learning, ,, pp, .] 

>> PoS Tags are: 
[('Learning', 'PROPN'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'ROOT'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Learning, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[Learning, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[Learning, pp]

>> Named Entities are: 
[]


============================ Sentence 398 =============================

609-616, 2009. 


>> Tokens are: 
[609, -, 616, ,, 2009, .] 

>> PoS Tags are: 
[('609', 'NUM'), ('-', 'SYM'), ('616', 'NUM'), (',', 'PUNCT'), ('2009', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('609', 'ROOT'), ('-', 'punct'), ('616', 'prep'), (',', 'punct'), ('2009', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[609, -], [-, 616], [616, ,], [,, 2009], [2009, .]]

>> Trigrams: 
[[609, -, 616], [-, 616, ,], [616, ,, 2009], [,, 2009, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('609', 'CARDINAL'), ('2009', 'DATE')]


============================ Sentence 399 =============================

  [33] Alex Krizhevsky, Ilya Sutskever and Geoffrey E. Hinton,  “ImageNet Classification with Deep Convolutional Neural   Networks”, Advances in Neural Information Processing   System, pp. 


>> Tokens are: 
[  , [, 33, ], Alex, Krizhevsky, ,, Ilya, Sutskever, Geoffrey, E., Hinton, ,,  , “, ImageNet, Classification, Deep, Convolutional, Neural,   , Networks, ”, ,, Advances, Neural, Information, Processing,   , System, ,, pp, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('33', 'NUM'), (']', 'PUNCT'), ('Alex', 'PROPN'), ('Krizhevsky', 'PROPN'), (',', 'PUNCT'), ('Ilya', 'PROPN'), ('Sutskever', 'PROPN'), ('Geoffrey', 'PROPN'), ('E.', 'PROPN'), ('Hinton', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('“', 'PUNCT'), ('ImageNet', 'PROPN'), ('Classification', 'NOUN'), ('Deep', 'PROPN'), ('Convolutional', 'PROPN'), ('Neural', 'PROPN'), ('  ', 'SPACE'), ('Networks', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Advances', 'NOUN'), ('Neural', 'PROPN'), ('Information', 'PROPN'), ('Processing', 'VERB'), ('  ', 'SPACE'), ('System', 'PROPN'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'nmod'), ('33', 'appos'), (']', 'punct'), ('Alex', 'compound'), ('Krizhevsky', 'appos'), (',', 'punct'), ('Ilya', 'compound'), ('Sutskever', 'conj'), ('Geoffrey', 'compound'), ('E.', 'compound'), ('Hinton', 'conj'), (',', 'punct'), (' ', 'punct'), ('“', 'punct'), ('ImageNet', 'compound'), ('Classification', 'nmod'), ('Deep', 'compound'), ('Convolutional', 'compound'), ('Neural', 'pobj'), ('  ', 'compound'), ('Networks', 'appos'), ('”', 'punct'), (',', 'punct'), ('Advances', 'appos'), ('Neural', 'compound'), ('Information', 'compound'), ('Processing', 'pobj'), ('  ', 'compound'), ('System', 'conj'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 33], [33, ]], [], Alex], [Alex, Krizhevsky], [Krizhevsky, ,], [,, Ilya], [Ilya, Sutskever], [Sutskever, Geoffrey], [Geoffrey, E.], [E., Hinton], [Hinton, ,], [,,  ], [ , “], [“, ImageNet], [ImageNet, Classification], [Classification, Deep], [Deep, Convolutional], [Convolutional, Neural], [Neural,   ], [  , Networks], [Networks, ”], [”, ,], [,, Advances], [Advances, Neural], [Neural, Information], [Information, Processing], [Processing,   ], [  , System], [System, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[  , [, 33], [[, 33, ]], [33, ], Alex], [], Alex, Krizhevsky], [Alex, Krizhevsky, ,], [Krizhevsky, ,, Ilya], [,, Ilya, Sutskever], [Ilya, Sutskever, Geoffrey], [Sutskever, Geoffrey, E.], [Geoffrey, E., Hinton], [E., Hinton, ,], [Hinton, ,,  ], [,,  , “], [ , “, ImageNet], [“, ImageNet, Classification], [ImageNet, Classification, Deep], [Classification, Deep, Convolutional], [Deep, Convolutional, Neural], [Convolutional, Neural,   ], [Neural,   , Networks], [  , Networks, ”], [Networks, ”, ,], [”, ,, Advances], [,, Advances, Neural], [Advances, Neural, Information], [Neural, Information, Processing], [Information, Processing,   ], [Processing,   , System], [  , System, ,], [System, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[Alex Krizhevsky, Ilya Sutskever, Geoffrey E. Hinton, Deep Convolutional Neural,   Networks, Advances,   System, pp]

>> Named Entities are: 
[('33', 'CARDINAL'), ('Alex Krizhevsky', 'PERSON'), ('Ilya Sutskever', 'PERSON'), ('Geoffrey E. Hinton', 'PERSON'), ('ImageNet Classification', 'WORK_OF_ART')]


============================ Sentence 400 =============================

1106-1114, 2012. 


>> Tokens are: 
[1106, -, 1114, ,, 2012, .] 

>> PoS Tags are: 
[('1106', 'NUM'), ('-', 'SYM'), ('1114', 'NUM'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1106', 'nummod'), ('-', 'punct'), ('1114', 'ROOT'), (',', 'punct'), ('2012', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1106, -], [-, 1114], [1114, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[1106, -, 1114], [-, 1114, ,], [1114, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1106-1114', 'DATE'), ('2012', 'DATE')]


============================ Sentence 401 =============================

  [34] Jeffrey Dean, Greg S. Corrado and Rajat Monga Kai, “Large  Scale Distributed Deep Networks”, Advances in Neural   Information Processing System, pp. 


>> Tokens are: 
[  , [, 34, ], Jeffrey, Dean, ,, Greg, S., Corrado, Rajat, Monga, Kai, ,, “, Large,  , Scale, Distributed, Deep, Networks, ”, ,, Advances, Neural,   , Information, Processing, System, ,, pp, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('34', 'NUM'), (']', 'PUNCT'), ('Jeffrey', 'PROPN'), ('Dean', 'PROPN'), (',', 'PUNCT'), ('Greg', 'PROPN'), ('S.', 'PROPN'), ('Corrado', 'PROPN'), ('Rajat', 'PROPN'), ('Monga', 'PROPN'), ('Kai', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Large', 'ADJ'), (' ', 'SPACE'), ('Scale', 'PROPN'), ('Distributed', 'VERB'), ('Deep', 'PROPN'), ('Networks', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Advances', 'NOUN'), ('Neural', 'PROPN'), ('  ', 'SPACE'), ('Information', 'PROPN'), ('Processing', 'PROPN'), ('System', 'PROPN'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('34', 'appos'), (']', 'punct'), ('Jeffrey', 'compound'), ('Dean', 'appos'), (',', 'punct'), ('Greg', 'compound'), ('S.', 'compound'), ('Corrado', 'conj'), ('Rajat', 'compound'), ('Monga', 'compound'), ('Kai', 'conj'), (',', 'punct'), ('“', 'punct'), ('Large', 'amod'), (' ', 'compound'), ('Scale', 'npadvmod'), ('Distributed', 'acl'), ('Deep', 'compound'), ('Networks', 'dobj'), ('”', 'punct'), (',', 'punct'), ('Advances', 'appos'), ('Neural', 'pobj'), ('  ', 'compound'), ('Information', 'compound'), ('Processing', 'compound'), ('System', 'appos'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 34], [34, ]], [], Jeffrey], [Jeffrey, Dean], [Dean, ,], [,, Greg], [Greg, S.], [S., Corrado], [Corrado, Rajat], [Rajat, Monga], [Monga, Kai], [Kai, ,], [,, “], [“, Large], [Large,  ], [ , Scale], [Scale, Distributed], [Distributed, Deep], [Deep, Networks], [Networks, ”], [”, ,], [,, Advances], [Advances, Neural], [Neural,   ], [  , Information], [Information, Processing], [Processing, System], [System, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[  , [, 34], [[, 34, ]], [34, ], Jeffrey], [], Jeffrey, Dean], [Jeffrey, Dean, ,], [Dean, ,, Greg], [,, Greg, S.], [Greg, S., Corrado], [S., Corrado, Rajat], [Corrado, Rajat, Monga], [Rajat, Monga, Kai], [Monga, Kai, ,], [Kai, ,, “], [,, “, Large], [“, Large,  ], [Large,  , Scale], [ , Scale, Distributed], [Scale, Distributed, Deep], [Distributed, Deep, Networks], [Deep, Networks, ”], [Networks, ”, ,], [”, ,, Advances], [,, Advances, Neural], [Advances, Neural,   ], [Neural,   , Information], [  , Information, Processing], [Information, Processing, System], [Processing, System, ,], [System, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[Jeffrey Dean, Greg S. Corrado, Rajat Monga Kai, Deep Networks, Advances, Neural,   Information Processing System, pp]

>> Named Entities are: 
[('34', 'CARDINAL'), ('Jeffrey Dean', 'PERSON'), ('Greg S. Corrado', 'PERSON'), ('Rajat Monga Kai', 'PERSON'), ('Large  Scale Distributed Deep Networks', 'WORK_OF_ART')]


============================ Sentence 402 =============================

1232-1240, 2012. 


>> Tokens are: 
[1232, -, 1240, ,, 2012, .] 

>> PoS Tags are: 
[('1232', 'NUM'), ('-', 'SYM'), ('1240', 'NUM'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1232', 'nummod'), ('-', 'punct'), ('1240', 'ROOT'), (',', 'punct'), ('2012', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[1232, -], [-, 1240], [1240, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[1232, -, 1240], [-, 1240, ,], [1240, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1232-1240', 'DATE'), ('2012', 'DATE')]


============================ Sentence 403 =============================

  [35] Quoc V. Le, Marc’Aurelio Ranzato, Rajat Monga, Matthieu  Devin, Kai Chen, Greg S. Corrado, Jeffrey  Dean, and   Andrew Y. Ng, “Building High-level Features Using Large   Scale Unsupervised Learning”, Proceedings of the 29 th    International Conference on Machine Learning, 2012. 


>> Tokens are: 
[  , [, 35, ], Quoc, V., Le, ,, Marc’Aurelio, Ranzato, ,, Rajat, Monga, ,, Matthieu,  , Devin, ,, Kai, Chen, ,, Greg, S., Corrado, ,, Jeffrey,  , Dean, ,,   , Andrew, Y., Ng, ,, “, Building, High, -, level, Features, Large,   , Scale, Unsupervised, Learning, ”, ,, Proceedings, 29, th,    , International, Conference, Machine, Learning, ,, 2012, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('35', 'NUM'), (']', 'PUNCT'), ('Quoc', 'PROPN'), ('V.', 'PROPN'), ('Le', 'PROPN'), (',', 'PUNCT'), ('Marc’Aurelio', 'PROPN'), ('Ranzato', 'PROPN'), (',', 'PUNCT'), ('Rajat', 'PROPN'), ('Monga', 'PROPN'), (',', 'PUNCT'), ('Matthieu', 'PROPN'), (' ', 'SPACE'), ('Devin', 'PROPN'), (',', 'PUNCT'), ('Kai', 'PROPN'), ('Chen', 'PROPN'), (',', 'PUNCT'), ('Greg', 'PROPN'), ('S.', 'PROPN'), ('Corrado', 'PROPN'), (',', 'PUNCT'), ('Jeffrey', 'PROPN'), (' ', 'SPACE'), ('Dean', 'PROPN'), (',', 'PUNCT'), ('  ', 'SPACE'), ('Andrew', 'PROPN'), ('Y.', 'PROPN'), ('Ng', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Building', 'VERB'), ('High', 'ADJ'), ('-', 'PUNCT'), ('level', 'NOUN'), ('Features', 'NOUN'), ('Large', 'ADJ'), ('  ', 'SPACE'), ('Scale', 'PROPN'), ('Unsupervised', 'PROPN'), ('Learning', 'PROPN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Proceedings', 'NOUN'), ('29', 'NUM'), ('th', 'NUM'), ('   ', 'SPACE'), ('International', 'PROPN'), ('Conference', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), (',', 'PUNCT'), ('2012', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('35', 'appos'), (']', 'punct'), ('Quoc', 'compound'), ('V.', 'compound'), ('Le', 'appos'), (',', 'punct'), ('Marc’Aurelio', 'compound'), ('Ranzato', 'conj'), (',', 'punct'), ('Rajat', 'compound'), ('Monga', 'conj'), (',', 'punct'), ('Matthieu', 'nmod'), (' ', 'compound'), ('Devin', 'conj'), (',', 'punct'), ('Kai', 'compound'), ('Chen', 'conj'), (',', 'punct'), ('Greg', 'compound'), ('S.', 'compound'), ('Corrado', 'conj'), (',', 'punct'), ('Jeffrey', 'npadvmod'), (' ', 'compound'), ('Dean', 'appos'), (',', 'punct'), ('  ', 'conj'), ('Andrew', 'compound'), ('Y.', 'compound'), ('Ng', 'appos'), (',', 'punct'), ('“', 'punct'), ('Building', 'acl'), ('High', 'amod'), ('-', 'punct'), ('level', 'compound'), ('Features', 'dobj'), ('Large', 'amod'), ('  ', 'compound'), ('Scale', 'compound'), ('Unsupervised', 'compound'), ('Learning', 'dobj'), ('”', 'punct'), (',', 'punct'), ('Proceedings', 'appos'), ('29', 'nummod'), ('th', 'quantmod'), ('   ', 'nummod'), ('International', 'compound'), ('Conference', 'pobj'), ('Machine', 'compound'), ('Learning', 'pobj'), (',', 'punct'), ('2012', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 35], [35, ]], [], Quoc], [Quoc, V.], [V., Le], [Le, ,], [,, Marc’Aurelio], [Marc’Aurelio, Ranzato], [Ranzato, ,], [,, Rajat], [Rajat, Monga], [Monga, ,], [,, Matthieu], [Matthieu,  ], [ , Devin], [Devin, ,], [,, Kai], [Kai, Chen], [Chen, ,], [,, Greg], [Greg, S.], [S., Corrado], [Corrado, ,], [,, Jeffrey], [Jeffrey,  ], [ , Dean], [Dean, ,], [,,   ], [  , Andrew], [Andrew, Y.], [Y., Ng], [Ng, ,], [,, “], [“, Building], [Building, High], [High, -], [-, level], [level, Features], [Features, Large], [Large,   ], [  , Scale], [Scale, Unsupervised], [Unsupervised, Learning], [Learning, ”], [”, ,], [,, Proceedings], [Proceedings, 29], [29, th], [th,    ], [   , International], [International, Conference], [Conference, Machine], [Machine, Learning], [Learning, ,], [,, 2012], [2012, .]]

>> Trigrams: 
[[  , [, 35], [[, 35, ]], [35, ], Quoc], [], Quoc, V.], [Quoc, V., Le], [V., Le, ,], [Le, ,, Marc’Aurelio], [,, Marc’Aurelio, Ranzato], [Marc’Aurelio, Ranzato, ,], [Ranzato, ,, Rajat], [,, Rajat, Monga], [Rajat, Monga, ,], [Monga, ,, Matthieu], [,, Matthieu,  ], [Matthieu,  , Devin], [ , Devin, ,], [Devin, ,, Kai], [,, Kai, Chen], [Kai, Chen, ,], [Chen, ,, Greg], [,, Greg, S.], [Greg, S., Corrado], [S., Corrado, ,], [Corrado, ,, Jeffrey], [,, Jeffrey,  ], [Jeffrey,  , Dean], [ , Dean, ,], [Dean, ,,   ], [,,   , Andrew], [  , Andrew, Y.], [Andrew, Y., Ng], [Y., Ng, ,], [Ng, ,, “], [,, “, Building], [“, Building, High], [Building, High, -], [High, -, level], [-, level, Features], [level, Features, Large], [Features, Large,   ], [Large,   , Scale], [  , Scale, Unsupervised], [Scale, Unsupervised, Learning], [Unsupervised, Learning, ”], [Learning, ”, ,], [”, ,, Proceedings], [,, Proceedings, 29], [Proceedings, 29, th], [29, th,    ], [th,    , International], [   , International, Conference], [International, Conference, Machine], [Conference, Machine, Learning], [Machine, Learning, ,], [Learning, ,, 2012], [,, 2012, .]]

>> Noun Phrases are: 
[Quoc V. Le, Marc’Aurelio Ranzato, Rajat Monga, Matthieu  Devin, Kai Chen, Greg S. Corrado,  Dean, Andrew Y. Ng, High-level Features, Large   Scale Unsupervised Learning, Proceedings, the 29 th    International Conference, Machine Learning]

>> Named Entities are: 
[('35', 'CARDINAL'), ('Quoc V. Le', 'PERSON'), ('Marc’Aurelio Ranzato', 'PERSON'), ('Rajat Monga', 'PERSON'), ('Matthieu', 'PERSON'), ('Devin', 'PERSON'), ('Kai Chen', 'PERSON'), ('Greg S. Corrado', 'PERSON'), ('Jeffrey  Dean', 'PERSON'), ('Andrew Y. Ng', 'PERSON'), ('Features Using Large   Scale Unsupervised Learning”', 'ORG'), ('Proceedings of the 29', 'WORK_OF_ART'), ('2012', 'DATE')]


============================ Sentence 404 =============================

  [36] A. Coats and B. Huval, “Deep Learning with COTS HPS  systems”, Journal of Machine Learning Research, Vol. 


>> Tokens are: 
[  , [, 36, ], A., Coats, B., Huval, ,, “, Deep, Learning, COTS, HPS,  , systems, ”, ,, Journal, Machine, Learning, Research, ,, Vol, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('[', 'PUNCT'), ('36', 'NUM'), (']', 'PUNCT'), ('A.', 'PROPN'), ('Coats', 'PROPN'), ('B.', 'PROPN'), ('Huval', 'PROPN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Deep', 'PROPN'), ('Learning', 'PROPN'), ('COTS', 'PROPN'), ('HPS', 'PROPN'), (' ', 'SPACE'), ('systems', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('Journal', 'PROPN'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('Research', 'PROPN'), (',', 'PUNCT'), ('Vol', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('[', 'punct'), ('36', 'nummod'), (']', 'punct'), ('A.', 'compound'), ('Coats', 'appos'), ('B.', 'compound'), ('Huval', 'conj'), (',', 'punct'), ('“', 'punct'), ('Deep', 'compound'), ('Learning', 'appos'), ('COTS', 'compound'), ('HPS', 'compound'), (' ', 'compound'), ('systems', 'pobj'), ('”', 'punct'), (',', 'punct'), ('Journal', 'conj'), ('Machine', 'compound'), ('Learning', 'compound'), ('Research', 'pobj'), (',', 'punct'), ('Vol', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[  , [], [[, 36], [36, ]], [], A.], [A., Coats], [Coats, B.], [B., Huval], [Huval, ,], [,, “], [“, Deep], [Deep, Learning], [Learning, COTS], [COTS, HPS], [HPS,  ], [ , systems], [systems, ”], [”, ,], [,, Journal], [Journal, Machine], [Machine, Learning], [Learning, Research], [Research, ,], [,, Vol], [Vol, .]]

>> Trigrams: 
[[  , [, 36], [[, 36, ]], [36, ], A.], [], A., Coats], [A., Coats, B.], [Coats, B., Huval], [B., Huval, ,], [Huval, ,, “], [,, “, Deep], [“, Deep, Learning], [Deep, Learning, COTS], [Learning, COTS, HPS], [COTS, HPS,  ], [HPS,  , systems], [ , systems, ”], [systems, ”, ,], [”, ,, Journal], [,, Journal, Machine], [Journal, Machine, Learning], [Machine, Learning, Research], [Learning, Research, ,], [Research, ,, Vol], [,, Vol, .]]

>> Noun Phrases are: 
[[36] A. Coats, B. Huval, Deep Learning, COTS HPS  systems, Journal, Machine Learning Research]

>> Named Entities are: 
[('36', 'CARDINAL'), ('B. Huval', 'ORG'), ('Deep Learning', 'WORK_OF_ART'), ('Journal of Machine Learning Research', 'ORG')]


============================ Sentence 405 =============================

28,    


>> Tokens are: 
[28, ,,   ] 

>> PoS Tags are: 
[('28', 'NUM'), (',', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('28', 'ROOT'), (',', 'punct'), ('  ', 'npadvmod')]

>> Bigrams: 
[[28, ,], [,,   ]]

>> Trigrams: 
[[28, ,,   ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('28', 'CARDINAL')]


============================ Sentence 406 =============================

No. 3, pp. 


>> Tokens are: 
[., 3, ,, pp, .] 

>> PoS Tags are: 
[('.', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('pp', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('.', 'appos'), ('3', 'nummod'), (',', 'punct'), ('pp', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[., 3], [3, ,], [,, pp], [pp, .]]

>> Trigrams: 
[[., 3, ,], [3, ,, pp], [,, pp, .]]

>> Noun Phrases are: 
[No, ., pp]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 407 =============================

1337-1345, 2013. 


>> Tokens are: 
[1337, -, 1345, ,, 2013, .] 

>> PoS Tags are: 
[('1337', 'NUM'), ('-', 'SYM'), ('1345', 'NUM'), (',', 'PUNCT'), ('2013', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('1337', 'ROOT'), ('-', 'punct'), ('1345', 'prep'), (',', 'punct'), ('2013', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[1337, -], [-, 1345], [1345, ,], [,, 2013], [2013, .]]

>> Trigrams: 
[[1337, -, 1345], [-, 1345, ,], [1345, ,, 2013], [,, 2013, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1337-1345', 'DATE'), ('2013', 'DATE')]


============================ Sentence 408 =============================

     http://webdocs.cs.ualberta.ca/~sutton/index.html http://www-anw.cs.umass.edu/~barto/ http://link.springer.com/search?facet-author=%22Aijun+An%22 http://link.springer.com/search?facet-author=%22Nick+Cercone%22 


>> Tokens are: 
[     , http://webdocs.cs.ualberta.ca/~sutton/index.html, http://www-anw.cs.umass.edu/~barto/, http://link.springer.com/search?facet-author=%22Aijun+An%22, http://link.springer.com/search?facet-author=%22Nick+Cercone%22] 

>> PoS Tags are: 
[('     ', 'SPACE'), ('http://webdocs.cs.ualberta.ca/~sutton/index.html', 'PROPN'), ('http://www-anw.cs.umass.edu/~barto/', 'NUM'), ('http://link.springer.com/search?facet-author=%22Aijun+An%22', 'PROPN'), ('http://link.springer.com/search?facet-author=%22Nick+Cercone%22', 'PROPN')] 

>> Dependency Tags are: 
[('     ', 'ROOT'), ('http://webdocs.cs.ualberta.ca/~sutton/index.html', 'appos'), ('http://www-anw.cs.umass.edu/~barto/', 'punct'), ('http://link.springer.com/search?facet-author=%22Aijun+An%22', 'punct'), ('http://link.springer.com/search?facet-author=%22Nick+Cercone%22', 'punct')]

>> Bigrams: 
[[     , http://webdocs.cs.ualberta.ca/~sutton/index.html], [http://webdocs.cs.ualberta.ca/~sutton/index.html, http://www-anw.cs.umass.edu/~barto/], [http://www-anw.cs.umass.edu/~barto/, http://link.springer.com/search?facet-author=%22Aijun+An%22], [http://link.springer.com/search?facet-author=%22Aijun+An%22, http://link.springer.com/search?facet-author=%22Nick+Cercone%22]]

>> Trigrams: 
[[     , http://webdocs.cs.ualberta.ca/~sutton/index.html, http://www-anw.cs.umass.edu/~barto/], [http://webdocs.cs.ualberta.ca/~sutton/index.html, http://www-anw.cs.umass.edu/~barto/, http://link.springer.com/search?facet-author=%22Aijun+An%22], [http://www-anw.cs.umass.edu/~barto/, http://link.springer.com/search?facet-author=%22Aijun+An%22, http://link.springer.com/search?facet-author=%22Nick+Cercone%22]]

>> Noun Phrases are: 
[http://webdocs.cs.ualberta.ca/~sutton/index.html]

>> Named Entities are: 
[]


============================ Sentence 409 =============================

http://en.wikipedia.org/wiki/Mehryar_Mohri http://www.sciencedirect.com/science/journal/03064379 http://www.sciencedirect.com/science/journal/03064379 http://www.sciencedirect.com/science/journal/03064379 http://www.sciencedirect.com/science/journal/03064379/38/6 


>> Tokens are: 
[http://en.wikipedia.org/wiki/Mehryar_Mohri, http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379/38/6] 

>> PoS Tags are: 
[('http://en.wikipedia.org/wiki/Mehryar_Mohri', 'PROPN'), ('http://www.sciencedirect.com/science/journal/03064379', 'PROPN'), ('http://www.sciencedirect.com/science/journal/03064379', 'PROPN'), ('http://www.sciencedirect.com/science/journal/03064379', 'PROPN'), ('http://www.sciencedirect.com/science/journal/03064379/38/6', 'PROPN')] 

>> Dependency Tags are: 
[('http://en.wikipedia.org/wiki/Mehryar_Mohri', 'compound'), ('http://www.sciencedirect.com/science/journal/03064379', 'compound'), ('http://www.sciencedirect.com/science/journal/03064379', 'compound'), ('http://www.sciencedirect.com/science/journal/03064379', 'compound'), ('http://www.sciencedirect.com/science/journal/03064379/38/6', 'ROOT')]

>> Bigrams: 
[[http://en.wikipedia.org/wiki/Mehryar_Mohri, http://www.sciencedirect.com/science/journal/03064379], [http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379], [http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379], [http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379/38/6]]

>> Trigrams: 
[[http://en.wikipedia.org/wiki/Mehryar_Mohri, http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379], [http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379], [http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379, http://www.sciencedirect.com/science/journal/03064379/38/6]]

>> Noun Phrases are: 
[http://en.wikipedia.org/wiki/Mehryar_Mohri http://www.sciencedirect.com/science/journal/03064379 http://www.sciencedirect.com/science/journal/03064379 http://www.sciencedirect.com/science/journal/03064379 http://www.sciencedirect.com/science/journal/03064379/38/6]

>> Named Entities are: 
[('http://en.wikipedia.org/wiki/Mehryar_Mohri', 'PERSON')]
