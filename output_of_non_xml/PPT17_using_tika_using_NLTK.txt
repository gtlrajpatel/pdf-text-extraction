				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-5 Cryptographic Hash Functions      1  Outline Cryptographic Hash Functions  Applications Simple hash functions Requirements and security Hash functions based on Cipher Block Chaining Secure Hash Algorithm (SHA)   Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 2  Hash Function A hash function H accepts a variable-length block of data M as input and produces a fixed-size hash value h = H(M). 


>> Tokens are: 
 ['OOPC++', 'UNIT-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav', '@', 'darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', 'UNIT-5', 'Cryptographic', 'Hash', 'Functions', '1', 'Outline', 'Cryptographic', 'Hash', 'Functions', 'Applications', 'Simple', 'hash', 'functions', 'Requirements', 'security', 'Hash', 'functions', 'based', 'Cipher', 'Block', 'Chaining', 'Secure', 'Hash', 'Algorithm', '(', 'SHA', ')', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'X.800', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')', '2', 'Hash', 'Function', 'A', 'hash', 'function', 'H', 'accepts', 'variable-length', 'block', 'data', 'M', 'input', 'produces', 'fixed-size', 'hash', 'value', 'h', '=', 'H', '(', 'M', ')', '.']

>> Bigrams are: 
 [('OOPC++', 'UNIT-1'), ('UNIT-1', 'Prof.'), ('Prof.', 'Rupesh'), ('Rupesh', 'G.'), ('G.', 'Vaishnav'), ('Vaishnav', 'rupesh.vaishnav'), ('rupesh.vaishnav', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '94280-37452'), ('94280-37452', 'Information'), ('Information', '&'), ('&', 'Network'), ('Network', 'Security'), ('Security', '('), ('(', '2170709'), ('2170709', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', 'UNIT-5'), ('UNIT-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', '1'), ('1', 'Outline'), ('Outline', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Applications'), ('Applications', 'Simple'), ('Simple', 'hash'), ('hash', 'functions'), ('functions', 'Requirements'), ('Requirements', 'security'), ('security', 'Hash'), ('Hash', 'functions'), ('functions', 'based'), ('based', 'Cipher'), ('Cipher', 'Block'), ('Block', 'Chaining'), ('Chaining', 'Secure'), ('Secure', 'Hash'), ('Hash', 'Algorithm'), ('Algorithm', '('), ('(', 'SHA'), ('SHA', ')'), (')', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'X.800'), ('X.800', 'RFC'), ('RFC', '2828'), ('2828', 'International'), ('International', 'Telecommunication'), ('Telecommunication', 'Union'), ('Union', '('), ('(', 'ITU'), ('ITU', ')'), (')', '2'), ('2', 'Hash'), ('Hash', 'Function'), ('Function', 'A'), ('A', 'hash'), ('hash', 'function'), ('function', 'H'), ('H', 'accepts'), ('accepts', 'variable-length'), ('variable-length', 'block'), ('block', 'data'), ('data', 'M'), ('M', 'input'), ('input', 'produces'), ('produces', 'fixed-size'), ('fixed-size', 'hash'), ('hash', 'value'), ('value', 'h'), ('h', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', '.')]

>> Trigrams are: 
 [('OOPC++', 'UNIT-1', 'Prof.'), ('UNIT-1', 'Prof.', 'Rupesh'), ('Prof.', 'Rupesh', 'G.'), ('Rupesh', 'G.', 'Vaishnav'), ('G.', 'Vaishnav', 'rupesh.vaishnav'), ('Vaishnav', 'rupesh.vaishnav', '@'), ('rupesh.vaishnav', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '94280-37452'), ('darshan.ac.in', '94280-37452', 'Information'), ('94280-37452', 'Information', '&'), ('Information', '&', 'Network'), ('&', 'Network', 'Security'), ('Network', 'Security', '('), ('Security', '(', '2170709'), ('(', '2170709', ')'), ('2170709', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', 'UNIT-5'), ('Technology', 'UNIT-5', 'Cryptographic'), ('UNIT-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', '1'), ('Functions', '1', 'Outline'), ('1', 'Outline', 'Cryptographic'), ('Outline', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Applications'), ('Functions', 'Applications', 'Simple'), ('Applications', 'Simple', 'hash'), ('Simple', 'hash', 'functions'), ('hash', 'functions', 'Requirements'), ('functions', 'Requirements', 'security'), ('Requirements', 'security', 'Hash'), ('security', 'Hash', 'functions'), ('Hash', 'functions', 'based'), ('functions', 'based', 'Cipher'), ('based', 'Cipher', 'Block'), ('Cipher', 'Block', 'Chaining'), ('Block', 'Chaining', 'Secure'), ('Chaining', 'Secure', 'Hash'), ('Secure', 'Hash', 'Algorithm'), ('Hash', 'Algorithm', '('), ('Algorithm', '(', 'SHA'), ('(', 'SHA', ')'), ('SHA', ')', 'Unit-5'), (')', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'X.800'), ('›', 'X.800', 'RFC'), ('X.800', 'RFC', '2828'), ('RFC', '2828', 'International'), ('2828', 'International', 'Telecommunication'), ('International', 'Telecommunication', 'Union'), ('Telecommunication', 'Union', '('), ('Union', '(', 'ITU'), ('(', 'ITU', ')'), ('ITU', ')', '2'), (')', '2', 'Hash'), ('2', 'Hash', 'Function'), ('Hash', 'Function', 'A'), ('Function', 'A', 'hash'), ('A', 'hash', 'function'), ('hash', 'function', 'H'), ('function', 'H', 'accepts'), ('H', 'accepts', 'variable-length'), ('accepts', 'variable-length', 'block'), ('variable-length', 'block', 'data'), ('block', 'data', 'M'), ('data', 'M', 'input'), ('M', 'input', 'produces'), ('input', 'produces', 'fixed-size'), ('produces', 'fixed-size', 'hash'), ('fixed-size', 'hash', 'value'), ('hash', 'value', 'h'), ('value', 'h', '='), ('h', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', '.')]

>> POS Tags are: 
 [('OOPC++', 'NNP'), ('UNIT-1', 'NNP'), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav', 'NN'), ('@', 'NNP'), ('darshan.ac.in', 'VBZ'), ('94280-37452', 'CD'), ('Information', 'NNP'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NNP'), ('(', '('), ('2170709', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('UNIT-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('1', 'CD'), ('Outline', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Applications', 'NNP'), ('Simple', 'NNP'), ('hash', 'NN'), ('functions', 'NNS'), ('Requirements', 'NNP'), ('security', 'NN'), ('Hash', 'NNP'), ('functions', 'NNS'), ('based', 'VBN'), ('Cipher', 'NNP'), ('Block', 'NNP'), ('Chaining', 'NNP'), ('Secure', 'NNP'), ('Hash', 'NNP'), ('Algorithm', 'NNP'), ('(', '('), ('SHA', 'NNP'), (')', ')'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('X.800', 'NNP'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '('), ('ITU', 'NNP'), (')', ')'), ('2', 'CD'), ('Hash', 'NNP'), ('Function', 'NNP'), ('A', 'NNP'), ('hash', 'NN'), ('function', 'NN'), ('H', 'NNP'), ('accepts', 'VBZ'), ('variable-length', 'JJ'), ('block', 'NN'), ('data', 'NNS'), ('M', 'NNP'), ('input', 'NN'), ('produces', 'VBZ'), ('fixed-size', 'JJ'), ('hash', 'NN'), ('value', 'NN'), ('h', 'NN'), ('=', 'NNP'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP
    OOPC++/NNP
    UNIT-1/NNP
    Prof./NNP
    Rupesh/NNP
    G./NNP
    Vaishnav/NNP
    rupesh.vaishnav/NN
    @/NNP)
  darshan.ac.in/VBZ
  94280-37452/CD
  (NP Information/NNP)
  &/CC
  (NP Network/NNP Security/NNP)
  (/(
  2170709/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP
    Technology/NNP
    UNIT-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP)
  1/CD
  (NP
    Outline/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Applications/NNP
    Simple/NNP
    hash/NN
    functions/NNS
    Requirements/NNP
    security/NN
    Hash/NNP
    functions/NNS)
  based/VBN
  (NP
    Cipher/NNP
    Block/NNP
    Chaining/NNP
    Secure/NNP
    Hash/NNP
    Algorithm/NNP)
  (/(
  (NP SHA/NNP)
  )/)
  (NP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP X.800/NNP RFC/NNP)
  2828/CD
  (NP International/NNP Telecommunication/NNP Union/NNP)
  (/(
  (NP ITU/NNP)
  )/)
  2/CD
  (NP Hash/NNP Function/NNP A/NNP hash/NN function/NN H/NNP)
  accepts/VBZ
  (NP variable-length/JJ block/NN data/NNS M/NNP input/NN)
  produces/VBZ
  (NP fixed-size/JJ hash/NN value/NN h/NN =/NNP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['OOPC++ UNIT-1 Prof. Rupesh G. Vaishnav rupesh.vaishnav @', 'Information', 'Network Security', 'Darshan Institute Engineering', 'Technology UNIT-5 Cryptographic Hash Functions', 'Outline Cryptographic Hash Functions Applications Simple hash functions Requirements security Hash functions', 'Cipher Block Chaining Secure Hash Algorithm', 'SHA', 'Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› X.800 RFC', 'International Telecommunication Union', 'ITU', 'Hash Function A hash function H', 'variable-length block data M input', 'fixed-size hash value h = H', 'M']

>> Named Entities are: 
 [('PERSON', 'Rupesh G. Vaishnav'), ('PERSON', 'Network Security'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Cipher Block'), ('ORGANIZATION', 'SHA'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'International Telecommunication Union'), ('ORGANIZATION', 'ITU')] 

>> Stemming using Porter Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('1', '1'), ('Outline', 'outlin'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Applications', 'applic'), ('Simple', 'simpl'), ('hash', 'hash'), ('functions', 'function'), ('Requirements', 'requir'), ('security', 'secur'), ('Hash', 'hash'), ('functions', 'function'), ('based', 'base'), ('Cipher', 'cipher'), ('Block', 'block'), ('Chaining', 'chain'), ('Secure', 'secur'), ('Hash', 'hash'), ('Algorithm', 'algorithm'), ('(', '('), ('SHA', 'sha'), (')', ')'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Hash', 'hash'), ('Function', 'function'), ('A', 'a'), ('hash', 'hash'), ('function', 'function'), ('H', 'h'), ('accepts', 'accept'), ('variable-length', 'variable-length'), ('block', 'block'), ('data', 'data'), ('M', 'm'), ('input', 'input'), ('produces', 'produc'), ('fixed-size', 'fixed-s'), ('hash', 'hash'), ('value', 'valu'), ('h', 'h'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('1', '1'), ('Outline', 'outlin'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Applications', 'applic'), ('Simple', 'simpl'), ('hash', 'hash'), ('functions', 'function'), ('Requirements', 'requir'), ('security', 'secur'), ('Hash', 'hash'), ('functions', 'function'), ('based', 'base'), ('Cipher', 'cipher'), ('Block', 'block'), ('Chaining', 'chain'), ('Secure', 'secur'), ('Hash', 'hash'), ('Algorithm', 'algorithm'), ('(', '('), ('SHA', 'sha'), (')', ')'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Hash', 'hash'), ('Function', 'function'), ('A', 'a'), ('hash', 'hash'), ('function', 'function'), ('H', 'h'), ('accepts', 'accept'), ('variable-length', 'variable-length'), ('block', 'block'), ('data', 'data'), ('M', 'm'), ('input', 'input'), ('produces', 'produc'), ('fixed-size', 'fixed-s'), ('hash', 'hash'), ('value', 'valu'), ('h', 'h'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('OOPC++', 'OOPC++'), ('UNIT-1', 'UNIT-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'Information'), ('&', '&'), ('Network', 'Network'), ('Security', 'Security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('UNIT-5', 'UNIT-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('1', '1'), ('Outline', 'Outline'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Applications', 'Applications'), ('Simple', 'Simple'), ('hash', 'hash'), ('functions', 'function'), ('Requirements', 'Requirements'), ('security', 'security'), ('Hash', 'Hash'), ('functions', 'function'), ('based', 'based'), ('Cipher', 'Cipher'), ('Block', 'Block'), ('Chaining', 'Chaining'), ('Secure', 'Secure'), ('Hash', 'Hash'), ('Algorithm', 'Algorithm'), ('(', '('), ('SHA', 'SHA'), (')', ')'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'X.800'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')'), ('2', '2'), ('Hash', 'Hash'), ('Function', 'Function'), ('A', 'A'), ('hash', 'hash'), ('function', 'function'), ('H', 'H'), ('accepts', 'accepts'), ('variable-length', 'variable-length'), ('block', 'block'), ('data', 'data'), ('M', 'M'), ('input', 'input'), ('produces', 'produce'), ('fixed-size', 'fixed-size'), ('hash', 'hash'), ('value', 'value'), ('h', 'h'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), ('.', '.')]



============================ Sentence 2 =============================

A “good” hash function has the property that the results of applying a change to any bit or bits in M results, with high probability, in a change to the hash code. 


>> Tokens are: 
 ['A', '“', 'good', '”', 'hash', 'function', 'property', 'results', 'applying', 'change', 'bit', 'bits', 'M', 'results', ',', 'high', 'probability', ',', 'change', 'hash', 'code', '.']

>> Bigrams are: 
 [('A', '“'), ('“', 'good'), ('good', '”'), ('”', 'hash'), ('hash', 'function'), ('function', 'property'), ('property', 'results'), ('results', 'applying'), ('applying', 'change'), ('change', 'bit'), ('bit', 'bits'), ('bits', 'M'), ('M', 'results'), ('results', ','), (',', 'high'), ('high', 'probability'), ('probability', ','), (',', 'change'), ('change', 'hash'), ('hash', 'code'), ('code', '.')]

>> Trigrams are: 
 [('A', '“', 'good'), ('“', 'good', '”'), ('good', '”', 'hash'), ('”', 'hash', 'function'), ('hash', 'function', 'property'), ('function', 'property', 'results'), ('property', 'results', 'applying'), ('results', 'applying', 'change'), ('applying', 'change', 'bit'), ('change', 'bit', 'bits'), ('bit', 'bits', 'M'), ('bits', 'M', 'results'), ('M', 'results', ','), ('results', ',', 'high'), (',', 'high', 'probability'), ('high', 'probability', ','), ('probability', ',', 'change'), (',', 'change', 'hash'), ('change', 'hash', 'code'), ('hash', 'code', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('“', 'JJ'), ('good', 'JJ'), ('”', 'NN'), ('hash', 'NN'), ('function', 'NN'), ('property', 'NN'), ('results', 'NNS'), ('applying', 'VBG'), ('change', 'NN'), ('bit', 'NN'), ('bits', 'NNS'), ('M', 'NNP'), ('results', 'NNS'), (',', ','), ('high', 'JJ'), ('probability', 'NN'), (',', ','), ('change', 'NN'), ('hash', 'NN'), ('code', 'NN'), ('.', '.')]

 (S
  (NP
    A/DT
    “/JJ
    good/JJ
    ”/NN
    hash/NN
    function/NN
    property/NN
    results/NNS)
  applying/VBG
  (NP change/NN bit/NN bits/NNS M/NNP results/NNS)
  ,/,
  (NP high/JJ probability/NN)
  ,/,
  (NP change/NN hash/NN code/NN)
  ./.) 


>> Noun Phrases are: 
 ['A “ good ” hash function property results', 'change bit bits M results', 'high probability', 'change hash code']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('“', '“'), ('good', 'good'), ('”', '”'), ('hash', 'hash'), ('function', 'function'), ('property', 'properti'), ('results', 'result'), ('applying', 'appli'), ('change', 'chang'), ('bit', 'bit'), ('bits', 'bit'), ('M', 'm'), ('results', 'result'), (',', ','), ('high', 'high'), ('probability', 'probabl'), (',', ','), ('change', 'chang'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('“', '“'), ('good', 'good'), ('”', '”'), ('hash', 'hash'), ('function', 'function'), ('property', 'properti'), ('results', 'result'), ('applying', 'appli'), ('change', 'chang'), ('bit', 'bit'), ('bits', 'bit'), ('M', 'm'), ('results', 'result'), (',', ','), ('high', 'high'), ('probability', 'probabl'), (',', ','), ('change', 'chang'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('“', '“'), ('good', 'good'), ('”', '”'), ('hash', 'hash'), ('function', 'function'), ('property', 'property'), ('results', 'result'), ('applying', 'applying'), ('change', 'change'), ('bit', 'bit'), ('bits', 'bit'), ('M', 'M'), ('results', 'result'), (',', ','), ('high', 'high'), ('probability', 'probability'), (',', ','), ('change', 'change'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]



============================ Sentence 3 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Applications of Cryptographic Hash Functions Message authentication Digital Signature One-way password file   Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  1. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Applications', 'Cryptographic', 'Hash', 'Functions', 'Message', 'authentication', 'Digital', 'Signature', 'One-way', 'password', 'file', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '1', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Applications'), ('Applications', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Message'), ('Message', 'authentication'), ('authentication', 'Digital'), ('Digital', 'Signature'), ('Signature', 'One-way'), ('One-way', 'password'), ('password', 'file'), ('file', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '1'), ('1', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Applications'), ('›', 'Applications', 'Cryptographic'), ('Applications', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Message'), ('Functions', 'Message', 'authentication'), ('Message', 'authentication', 'Digital'), ('authentication', 'Digital', 'Signature'), ('Digital', 'Signature', 'One-way'), ('Signature', 'One-way', 'password'), ('One-way', 'password', 'file'), ('password', 'file', 'Unit-5'), ('file', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '1'), ('›', '1', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Applications', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Message', 'NNP'), ('authentication', 'NN'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('One-way', 'NNP'), ('password', 'NN'), ('file', 'NN'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('1', 'CD'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Applications/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Message/NNP
    authentication/NN
    Digital/NNP
    Signature/NNP
    One-way/NNP
    password/NN
    file/NN
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Applications Cryptographic Hash Functions Message authentication Digital Signature One-way password file Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Applications', 'applic'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Message', 'messag'), ('authentication', 'authent'), ('Digital', 'digit'), ('Signature', 'signatur'), ('One-way', 'one-way'), ('password', 'password'), ('file', 'file'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Applications', 'applic'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Message', 'messag'), ('authentication', 'authent'), ('Digital', 'digit'), ('Signature', 'signatur'), ('One-way', 'one-way'), ('password', 'password'), ('file', 'file'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Applications', 'Applications'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Message', 'Message'), ('authentication', 'authentication'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('One-way', 'One-way'), ('password', 'password'), ('file', 'file'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('1', '1'), ('.', '.')]



============================ Sentence 4 =============================

Message Authentication Message authentication is a mechanism or service used to verify the integrity of a message. 


>> Tokens are: 
 ['Message', 'Authentication', 'Message', 'authentication', 'mechanism', 'service', 'used', 'verify', 'integrity', 'message', '.']

>> Bigrams are: 
 [('Message', 'Authentication'), ('Authentication', 'Message'), ('Message', 'authentication'), ('authentication', 'mechanism'), ('mechanism', 'service'), ('service', 'used'), ('used', 'verify'), ('verify', 'integrity'), ('integrity', 'message'), ('message', '.')]

>> Trigrams are: 
 [('Message', 'Authentication', 'Message'), ('Authentication', 'Message', 'authentication'), ('Message', 'authentication', 'mechanism'), ('authentication', 'mechanism', 'service'), ('mechanism', 'service', 'used'), ('service', 'used', 'verify'), ('used', 'verify', 'integrity'), ('verify', 'integrity', 'message'), ('integrity', 'message', '.')]

>> POS Tags are: 
 [('Message', 'NN'), ('Authentication', 'NNP'), ('Message', 'NNP'), ('authentication', 'NN'), ('mechanism', 'NN'), ('service', 'NN'), ('used', 'VBN'), ('verify', 'JJ'), ('integrity', 'NN'), ('message', 'NN'), ('.', '.')]

 (S
  (NP
    Message/NN
    Authentication/NNP
    Message/NNP
    authentication/NN
    mechanism/NN
    service/NN)
  used/VBN
  (NP verify/JJ integrity/NN message/NN)
  ./.) 


>> Noun Phrases are: 
 ['Message Authentication Message authentication mechanism service', 'verify integrity message']

>> Named Entities are: 
 [('PERSON', 'Message'), ('ORGANIZATION', 'Authentication Message')] 

>> Stemming using Porter Stemmer: 
 [('Message', 'messag'), ('Authentication', 'authent'), ('Message', 'messag'), ('authentication', 'authent'), ('mechanism', 'mechan'), ('service', 'servic'), ('used', 'use'), ('verify', 'verifi'), ('integrity', 'integr'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Message', 'messag'), ('Authentication', 'authent'), ('Message', 'messag'), ('authentication', 'authent'), ('mechanism', 'mechan'), ('service', 'servic'), ('used', 'use'), ('verify', 'verifi'), ('integrity', 'integr'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('Message', 'Message'), ('Authentication', 'Authentication'), ('Message', 'Message'), ('authentication', 'authentication'), ('mechanism', 'mechanism'), ('service', 'service'), ('used', 'used'), ('verify', 'verify'), ('integrity', 'integrity'), ('message', 'message'), ('.', '.')]



============================ Sentence 5 =============================

Message authentication assures that data received are exactly as sent (i.e.-, contain no modification, insertion, deletion, or replay). 


>> Tokens are: 
 ['Message', 'authentication', 'assures', 'data', 'received', 'exactly', 'sent', '(', 'i.e.-', ',', 'contain', 'modification', ',', 'insertion', ',', 'deletion', ',', 'replay', ')', '.']

>> Bigrams are: 
 [('Message', 'authentication'), ('authentication', 'assures'), ('assures', 'data'), ('data', 'received'), ('received', 'exactly'), ('exactly', 'sent'), ('sent', '('), ('(', 'i.e.-'), ('i.e.-', ','), (',', 'contain'), ('contain', 'modification'), ('modification', ','), (',', 'insertion'), ('insertion', ','), (',', 'deletion'), ('deletion', ','), (',', 'replay'), ('replay', ')'), (')', '.')]

>> Trigrams are: 
 [('Message', 'authentication', 'assures'), ('authentication', 'assures', 'data'), ('assures', 'data', 'received'), ('data', 'received', 'exactly'), ('received', 'exactly', 'sent'), ('exactly', 'sent', '('), ('sent', '(', 'i.e.-'), ('(', 'i.e.-', ','), ('i.e.-', ',', 'contain'), (',', 'contain', 'modification'), ('contain', 'modification', ','), ('modification', ',', 'insertion'), (',', 'insertion', ','), ('insertion', ',', 'deletion'), (',', 'deletion', ','), ('deletion', ',', 'replay'), (',', 'replay', ')'), ('replay', ')', '.')]

>> POS Tags are: 
 [('Message', 'NN'), ('authentication', 'NN'), ('assures', 'VBZ'), ('data', 'NNS'), ('received', 'VBD'), ('exactly', 'RB'), ('sent', 'VBN'), ('(', '('), ('i.e.-', 'JJ'), (',', ','), ('contain', 'JJ'), ('modification', 'NN'), (',', ','), ('insertion', 'NN'), (',', ','), ('deletion', 'NN'), (',', ','), ('replay', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP Message/NN authentication/NN)
  assures/VBZ
  (NP data/NNS)
  received/VBD
  exactly/RB
  sent/VBN
  (/(
  i.e.-/JJ
  ,/,
  (NP contain/JJ modification/NN)
  ,/,
  (NP insertion/NN)
  ,/,
  (NP deletion/NN)
  ,/,
  (NP replay/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Message authentication', 'data', 'contain modification', 'insertion', 'deletion', 'replay']

>> Named Entities are: 
 [('GPE', 'Message')] 

>> Stemming using Porter Stemmer: 
 [('Message', 'messag'), ('authentication', 'authent'), ('assures', 'assur'), ('data', 'data'), ('received', 'receiv'), ('exactly', 'exactli'), ('sent', 'sent'), ('(', '('), ('i.e.-', 'i.e.-'), (',', ','), ('contain', 'contain'), ('modification', 'modif'), (',', ','), ('insertion', 'insert'), (',', ','), ('deletion', 'delet'), (',', ','), ('replay', 'replay'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Message', 'messag'), ('authentication', 'authent'), ('assures', 'assur'), ('data', 'data'), ('received', 'receiv'), ('exactly', 'exact'), ('sent', 'sent'), ('(', '('), ('i.e.-', 'i.e.-'), (',', ','), ('contain', 'contain'), ('modification', 'modif'), (',', ','), ('insertion', 'insert'), (',', ','), ('deletion', 'delet'), (',', ','), ('replay', 'replay'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Message', 'Message'), ('authentication', 'authentication'), ('assures', 'assures'), ('data', 'data'), ('received', 'received'), ('exactly', 'exactly'), ('sent', 'sent'), ('(', '('), ('i.e.-', 'i.e.-'), (',', ','), ('contain', 'contain'), ('modification', 'modification'), (',', ','), ('insertion', 'insertion'), (',', ','), ('deletion', 'deletion'), (',', ','), ('replay', 'replay'), (')', ')'), ('.', '.')]



============================ Sentence 6 =============================

When a hash function is used to provide message authentication, the hash function value is often referred to as a message digest. 


>> Tokens are: 
 ['When', 'hash', 'function', 'used', 'provide', 'message', 'authentication', ',', 'hash', 'function', 'value', 'often', 'referred', 'message', 'digest', '.']

>> Bigrams are: 
 [('When', 'hash'), ('hash', 'function'), ('function', 'used'), ('used', 'provide'), ('provide', 'message'), ('message', 'authentication'), ('authentication', ','), (',', 'hash'), ('hash', 'function'), ('function', 'value'), ('value', 'often'), ('often', 'referred'), ('referred', 'message'), ('message', 'digest'), ('digest', '.')]

>> Trigrams are: 
 [('When', 'hash', 'function'), ('hash', 'function', 'used'), ('function', 'used', 'provide'), ('used', 'provide', 'message'), ('provide', 'message', 'authentication'), ('message', 'authentication', ','), ('authentication', ',', 'hash'), (',', 'hash', 'function'), ('hash', 'function', 'value'), ('function', 'value', 'often'), ('value', 'often', 'referred'), ('often', 'referred', 'message'), ('referred', 'message', 'digest'), ('message', 'digest', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('hash', 'NN'), ('function', 'NN'), ('used', 'VBN'), ('provide', 'JJ'), ('message', 'NN'), ('authentication', 'NN'), (',', ','), ('hash', 'NN'), ('function', 'NN'), ('value', 'NN'), ('often', 'RB'), ('referred', 'VBD'), ('message', 'NN'), ('digest', 'NN'), ('.', '.')]

 (S
  When/WRB
  (NP hash/NN function/NN)
  used/VBN
  (NP provide/JJ message/NN authentication/NN)
  ,/,
  (NP hash/NN function/NN value/NN)
  often/RB
  referred/VBD
  (NP message/NN digest/NN)
  ./.) 


>> Noun Phrases are: 
 ['hash function', 'provide message authentication', 'hash function value', 'message digest']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('hash', 'hash'), ('function', 'function'), ('used', 'use'), ('provide', 'provid'), ('message', 'messag'), ('authentication', 'authent'), (',', ','), ('hash', 'hash'), ('function', 'function'), ('value', 'valu'), ('often', 'often'), ('referred', 'refer'), ('message', 'messag'), ('digest', 'digest'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('hash', 'hash'), ('function', 'function'), ('used', 'use'), ('provide', 'provid'), ('message', 'messag'), ('authentication', 'authent'), (',', ','), ('hash', 'hash'), ('function', 'function'), ('value', 'valu'), ('often', 'often'), ('referred', 'refer'), ('message', 'messag'), ('digest', 'digest'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('hash', 'hash'), ('function', 'function'), ('used', 'used'), ('provide', 'provide'), ('message', 'message'), ('authentication', 'authentication'), (',', ','), ('hash', 'hash'), ('function', 'function'), ('value', 'value'), ('often', 'often'), ('referred', 'referred'), ('message', 'message'), ('digest', 'digest'), ('.', '.')]



============================ Sentence 7 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Message authentication method - 1 Only A and B share the secret key, the message must have come from A and has not been altered. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Message', 'authentication', 'method', '-', '1', 'Only', 'A', 'B', 'share', 'secret', 'key', ',', 'message', 'must', 'come', 'A', 'altered', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Message'), ('Message', 'authentication'), ('authentication', 'method'), ('method', '-'), ('-', '1'), ('1', 'Only'), ('Only', 'A'), ('A', 'B'), ('B', 'share'), ('share', 'secret'), ('secret', 'key'), ('key', ','), (',', 'message'), ('message', 'must'), ('must', 'come'), ('come', 'A'), ('A', 'altered'), ('altered', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Message'), ('›', 'Message', 'authentication'), ('Message', 'authentication', 'method'), ('authentication', 'method', '-'), ('method', '-', '1'), ('-', '1', 'Only'), ('1', 'Only', 'A'), ('Only', 'A', 'B'), ('A', 'B', 'share'), ('B', 'share', 'secret'), ('share', 'secret', 'key'), ('secret', 'key', ','), ('key', ',', 'message'), (',', 'message', 'must'), ('message', 'must', 'come'), ('must', 'come', 'A'), ('come', 'A', 'altered'), ('A', 'altered', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Message', 'NNP'), ('authentication', 'NN'), ('method', 'NN'), ('-', ':'), ('1', 'CD'), ('Only', 'RB'), ('A', 'NNP'), ('B', 'NNP'), ('share', 'NN'), ('secret', 'JJ'), ('key', 'NN'), (',', ','), ('message', 'NN'), ('must', 'MD'), ('come', 'VB'), ('A', 'NNP'), ('altered', 'JJ'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Message/NNP authentication/NN method/NN)
  -/:
  1/CD
  Only/RB
  (NP A/NNP B/NNP share/NN)
  (NP secret/JJ key/NN)
  ,/,
  (NP message/NN)
  must/MD
  come/VB
  (NP A/NNP)
  altered/JJ
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Message authentication method', 'A B share', 'secret key', 'message', 'A']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('1', '1'), ('Only', 'onli'), ('A', 'a'), ('B', 'b'), ('share', 'share'), ('secret', 'secret'), ('key', 'key'), (',', ','), ('message', 'messag'), ('must', 'must'), ('come', 'come'), ('A', 'a'), ('altered', 'alter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('1', '1'), ('Only', 'onli'), ('A', 'a'), ('B', 'b'), ('share', 'share'), ('secret', 'secret'), ('key', 'key'), (',', ','), ('message', 'messag'), ('must', 'must'), ('come', 'come'), ('A', 'a'), ('altered', 'alter'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'Message'), ('authentication', 'authentication'), ('method', 'method'), ('-', '-'), ('1', '1'), ('Only', 'Only'), ('A', 'A'), ('B', 'B'), ('share', 'share'), ('secret', 'secret'), ('key', 'key'), (',', ','), ('message', 'message'), ('must', 'must'), ('come', 'come'), ('A', 'A'), ('altered', 'altered'), ('.', '.')]



============================ Sentence 8 =============================

The hash code provides the structure required to achieve authentication. 


>> Tokens are: 
 ['The', 'hash', 'code', 'provides', 'structure', 'required', 'achieve', 'authentication', '.']

>> Bigrams are: 
 [('The', 'hash'), ('hash', 'code'), ('code', 'provides'), ('provides', 'structure'), ('structure', 'required'), ('required', 'achieve'), ('achieve', 'authentication'), ('authentication', '.')]

>> Trigrams are: 
 [('The', 'hash', 'code'), ('hash', 'code', 'provides'), ('code', 'provides', 'structure'), ('provides', 'structure', 'required'), ('structure', 'required', 'achieve'), ('required', 'achieve', 'authentication'), ('achieve', 'authentication', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('provides', 'VBZ'), ('structure', 'NN'), ('required', 'VBN'), ('achieve', 'JJ'), ('authentication', 'NN'), ('.', '.')]

 (S
  (NP The/DT hash/NN code/NN)
  provides/VBZ
  (NP structure/NN)
  required/VBN
  (NP achieve/JJ authentication/NN)
  ./.) 


>> Noun Phrases are: 
 ['The hash code', 'structure', 'achieve authentication']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('provides', 'provid'), ('structure', 'structur'), ('required', 'requir'), ('achieve', 'achiev'), ('authentication', 'authent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('provides', 'provid'), ('structure', 'structur'), ('required', 'requir'), ('achieve', 'achiev'), ('authentication', 'authent'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('hash', 'hash'), ('code', 'code'), ('provides', 'provides'), ('structure', 'structure'), ('required', 'required'), ('achieve', 'achieve'), ('authentication', 'authentication'), ('.', '.')]



============================ Sentence 9 =============================

Because encryption is applied to the entire message plus hash code, confidentiality is also provided. 


>> Tokens are: 
 ['Because', 'encryption', 'applied', 'entire', 'message', 'plus', 'hash', 'code', ',', 'confidentiality', 'also', 'provided', '.']

>> Bigrams are: 
 [('Because', 'encryption'), ('encryption', 'applied'), ('applied', 'entire'), ('entire', 'message'), ('message', 'plus'), ('plus', 'hash'), ('hash', 'code'), ('code', ','), (',', 'confidentiality'), ('confidentiality', 'also'), ('also', 'provided'), ('provided', '.')]

>> Trigrams are: 
 [('Because', 'encryption', 'applied'), ('encryption', 'applied', 'entire'), ('applied', 'entire', 'message'), ('entire', 'message', 'plus'), ('message', 'plus', 'hash'), ('plus', 'hash', 'code'), ('hash', 'code', ','), ('code', ',', 'confidentiality'), (',', 'confidentiality', 'also'), ('confidentiality', 'also', 'provided'), ('also', 'provided', '.')]

>> POS Tags are: 
 [('Because', 'IN'), ('encryption', 'NN'), ('applied', 'VBN'), ('entire', 'JJ'), ('message', 'NN'), ('plus', 'CC'), ('hash', 'JJ'), ('code', 'NN'), (',', ','), ('confidentiality', 'NN'), ('also', 'RB'), ('provided', 'VBD'), ('.', '.')]

 (S
  Because/IN
  (NP encryption/NN)
  applied/VBN
  (NP entire/JJ message/NN)
  plus/CC
  (NP hash/JJ code/NN)
  ,/,
  (NP confidentiality/NN)
  also/RB
  provided/VBD
  ./.) 


>> Noun Phrases are: 
 ['encryption', 'entire message', 'hash code', 'confidentiality']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Because', 'becaus'), ('encryption', 'encrypt'), ('applied', 'appli'), ('entire', 'entir'), ('message', 'messag'), ('plus', 'plu'), ('hash', 'hash'), ('code', 'code'), (',', ','), ('confidentiality', 'confidenti'), ('also', 'also'), ('provided', 'provid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Because', 'becaus'), ('encryption', 'encrypt'), ('applied', 'appli'), ('entire', 'entir'), ('message', 'messag'), ('plus', 'plus'), ('hash', 'hash'), ('code', 'code'), (',', ','), ('confidentiality', 'confidenti'), ('also', 'also'), ('provided', 'provid'), ('.', '.')]

>> Lemmatization: 
 [('Because', 'Because'), ('encryption', 'encryption'), ('applied', 'applied'), ('entire', 'entire'), ('message', 'message'), ('plus', 'plus'), ('hash', 'hash'), ('code', 'code'), (',', ','), ('confidentiality', 'confidentiality'), ('also', 'also'), ('provided', 'provided'), ('.', '.')]



============================ Sentence 10 =============================

E D ll H H M M    K K H(M) Compare  E (K, [ M || H(M)]) Source A Destination B  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Message authentication method - 2 Only the hash code is encrypted, using symmetric encryption. 


>> Tokens are: 
 ['E', 'D', 'H', 'H', 'M', 'M', 'K', 'K', 'H', '(', 'M', ')', 'Compare', 'E', '(', 'K', ',', '[', 'M', '||', 'H', '(', 'M', ')', ']', ')', 'Source', 'A', 'Destination', 'B', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Message', 'authentication', 'method', '-', '2', 'Only', 'hash', 'code', 'encrypted', ',', 'using', 'symmetric', 'encryption', '.']

>> Bigrams are: 
 [('E', 'D'), ('D', 'H'), ('H', 'H'), ('H', 'M'), ('M', 'M'), ('M', 'K'), ('K', 'K'), ('K', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', 'Compare'), ('Compare', 'E'), ('E', '('), ('(', 'K'), ('K', ','), (',', '['), ('[', 'M'), ('M', '||'), ('||', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ']'), (']', ')'), (')', 'Source'), ('Source', 'A'), ('A', 'Destination'), ('Destination', 'B'), ('B', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Message'), ('Message', 'authentication'), ('authentication', 'method'), ('method', '-'), ('-', '2'), ('2', 'Only'), ('Only', 'hash'), ('hash', 'code'), ('code', 'encrypted'), ('encrypted', ','), (',', 'using'), ('using', 'symmetric'), ('symmetric', 'encryption'), ('encryption', '.')]

>> Trigrams are: 
 [('E', 'D', 'H'), ('D', 'H', 'H'), ('H', 'H', 'M'), ('H', 'M', 'M'), ('M', 'M', 'K'), ('M', 'K', 'K'), ('K', 'K', 'H'), ('K', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', 'Compare'), (')', 'Compare', 'E'), ('Compare', 'E', '('), ('E', '(', 'K'), ('(', 'K', ','), ('K', ',', '['), (',', '[', 'M'), ('[', 'M', '||'), ('M', '||', 'H'), ('||', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ']'), (')', ']', ')'), (']', ')', 'Source'), (')', 'Source', 'A'), ('Source', 'A', 'Destination'), ('A', 'Destination', 'B'), ('Destination', 'B', 'Unit-5'), ('B', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Message'), ('›', 'Message', 'authentication'), ('Message', 'authentication', 'method'), ('authentication', 'method', '-'), ('method', '-', '2'), ('-', '2', 'Only'), ('2', 'Only', 'hash'), ('Only', 'hash', 'code'), ('hash', 'code', 'encrypted'), ('code', 'encrypted', ','), ('encrypted', ',', 'using'), (',', 'using', 'symmetric'), ('using', 'symmetric', 'encryption'), ('symmetric', 'encryption', '.')]

>> POS Tags are: 
 [('E', 'NNP'), ('D', 'NNP'), ('H', 'NNP'), ('H', 'NNP'), ('M', 'NNP'), ('M', 'NNP'), ('K', 'NNP'), ('K', 'NNP'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), ('Compare', 'NNP'), ('E', 'NNP'), ('(', '('), ('K', 'NNP'), (',', ','), ('[', 'NNP'), ('M', 'NNP'), ('||', 'NNP'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (']', 'NN'), (')', ')'), ('Source', 'NN'), ('A', 'DT'), ('Destination', 'NNP'), ('B', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Message', 'NNP'), ('authentication', 'NN'), ('method', 'NN'), ('-', ':'), ('2', 'CD'), ('Only', 'RB'), ('hash', 'JJ'), ('code', 'NN'), ('encrypted', 'VBD'), (',', ','), ('using', 'VBG'), ('symmetric', 'JJ'), ('encryption', 'NN'), ('.', '.')]

 (S
  (NP E/NNP D/NNP H/NNP H/NNP M/NNP M/NNP K/NNP K/NNP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  (NP Compare/NNP E/NNP)
  (/(
  (NP K/NNP)
  ,/,
  (NP [/NNP M/NNP ||/NNP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  (NP ]/NN)
  )/)
  (NP Source/NN)
  (NP
    A/DT
    Destination/NNP
    B/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Message/NNP authentication/NN method/NN)
  -/:
  2/CD
  Only/RB
  (NP hash/JJ code/NN)
  encrypted/VBD
  ,/,
  using/VBG
  (NP symmetric/JJ encryption/NN)
  ./.) 


>> Noun Phrases are: 
 ['E D H H M M K K H', 'M', 'Compare E', 'K', '[ M || H', 'M', ']', 'Source', 'A Destination B Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Message authentication method', 'hash code', 'symmetric encryption']

>> Named Entities are: 
 [('ORGANIZATION', 'Compare'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('E', 'e'), ('D', 'd'), ('H', 'h'), ('H', 'h'), ('M', 'm'), ('M', 'm'), ('K', 'k'), ('K', 'k'), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), ('Compare', 'compar'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('[', '['), ('M', 'm'), ('||', '||'), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (']', ']'), (')', ')'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('2', '2'), ('Only', 'onli'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), (',', ','), ('using', 'use'), ('symmetric', 'symmetr'), ('encryption', 'encrypt'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E', 'e'), ('D', 'd'), ('H', 'h'), ('H', 'h'), ('M', 'm'), ('M', 'm'), ('K', 'k'), ('K', 'k'), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), ('Compare', 'compar'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('[', '['), ('M', 'm'), ('||', '||'), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (']', ']'), (')', ')'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('2', '2'), ('Only', 'onli'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), (',', ','), ('using', 'use'), ('symmetric', 'symmetr'), ('encryption', 'encrypt'), ('.', '.')]

>> Lemmatization: 
 [('E', 'E'), ('D', 'D'), ('H', 'H'), ('H', 'H'), ('M', 'M'), ('M', 'M'), ('K', 'K'), ('K', 'K'), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), ('Compare', 'Compare'), ('E', 'E'), ('(', '('), ('K', 'K'), (',', ','), ('[', '['), ('M', 'M'), ('||', '||'), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (']', ']'), (')', ')'), ('Source', 'Source'), ('A', 'A'), ('Destination', 'Destination'), ('B', 'B'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'Message'), ('authentication', 'authentication'), ('method', 'method'), ('-', '-'), ('2', '2'), ('Only', 'Only'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypted'), (',', ','), ('using', 'using'), ('symmetric', 'symmetric'), ('encryption', 'encryption'), ('.', '.')]



============================ Sentence 11 =============================

This reduces the processing burden for those applications that do not require confidentiality. 


>> Tokens are: 
 ['This', 'reduces', 'processing', 'burden', 'applications', 'require', 'confidentiality', '.']

>> Bigrams are: 
 [('This', 'reduces'), ('reduces', 'processing'), ('processing', 'burden'), ('burden', 'applications'), ('applications', 'require'), ('require', 'confidentiality'), ('confidentiality', '.')]

>> Trigrams are: 
 [('This', 'reduces', 'processing'), ('reduces', 'processing', 'burden'), ('processing', 'burden', 'applications'), ('burden', 'applications', 'require'), ('applications', 'require', 'confidentiality'), ('require', 'confidentiality', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('reduces', 'VBZ'), ('processing', 'VBG'), ('burden', 'NN'), ('applications', 'NNS'), ('require', 'VBP'), ('confidentiality', 'NN'), ('.', '.')]

 (S
  This/DT
  reduces/VBZ
  processing/VBG
  (NP burden/NN applications/NNS)
  require/VBP
  (NP confidentiality/NN)
  ./.) 


>> Noun Phrases are: 
 ['burden applications', 'confidentiality']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('reduces', 'reduc'), ('processing', 'process'), ('burden', 'burden'), ('applications', 'applic'), ('require', 'requir'), ('confidentiality', 'confidenti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('reduces', 'reduc'), ('processing', 'process'), ('burden', 'burden'), ('applications', 'applic'), ('require', 'requir'), ('confidentiality', 'confidenti'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('reduces', 'reduces'), ('processing', 'processing'), ('burden', 'burden'), ('applications', 'application'), ('require', 'require'), ('confidentiality', 'confidentiality'), ('.', '.')]



============================ Sentence 12 =============================

H M   Source A Destination B E K ll M  E(K, H(M)) H D K  Compare    Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Message authentication method - 3 It is possible to use a hash function but no encryption for message authentication. 


>> Tokens are: 
 ['H', 'M', 'Source', 'A', 'Destination', 'B', 'E', 'K', 'M', 'E', '(', 'K', ',', 'H', '(', 'M', ')', ')', 'H', 'D', 'K', 'Compare', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Message', 'authentication', 'method', '-', '3', 'It', 'possible', 'use', 'hash', 'function', 'encryption', 'message', 'authentication', '.']

>> Bigrams are: 
 [('H', 'M'), ('M', 'Source'), ('Source', 'A'), ('A', 'Destination'), ('Destination', 'B'), ('B', 'E'), ('E', 'K'), ('K', 'M'), ('M', 'E'), ('E', '('), ('(', 'K'), ('K', ','), (',', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ')'), (')', 'H'), ('H', 'D'), ('D', 'K'), ('K', 'Compare'), ('Compare', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Message'), ('Message', 'authentication'), ('authentication', 'method'), ('method', '-'), ('-', '3'), ('3', 'It'), ('It', 'possible'), ('possible', 'use'), ('use', 'hash'), ('hash', 'function'), ('function', 'encryption'), ('encryption', 'message'), ('message', 'authentication'), ('authentication', '.')]

>> Trigrams are: 
 [('H', 'M', 'Source'), ('M', 'Source', 'A'), ('Source', 'A', 'Destination'), ('A', 'Destination', 'B'), ('Destination', 'B', 'E'), ('B', 'E', 'K'), ('E', 'K', 'M'), ('K', 'M', 'E'), ('M', 'E', '('), ('E', '(', 'K'), ('(', 'K', ','), ('K', ',', 'H'), (',', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ')'), (')', ')', 'H'), (')', 'H', 'D'), ('H', 'D', 'K'), ('D', 'K', 'Compare'), ('K', 'Compare', 'Unit-5'), ('Compare', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Message'), ('›', 'Message', 'authentication'), ('Message', 'authentication', 'method'), ('authentication', 'method', '-'), ('method', '-', '3'), ('-', '3', 'It'), ('3', 'It', 'possible'), ('It', 'possible', 'use'), ('possible', 'use', 'hash'), ('use', 'hash', 'function'), ('hash', 'function', 'encryption'), ('function', 'encryption', 'message'), ('encryption', 'message', 'authentication'), ('message', 'authentication', '.')]

>> POS Tags are: 
 [('H', 'NNP'), ('M', 'NNP'), ('Source', 'NNP'), ('A', 'NNP'), ('Destination', 'NNP'), ('B', 'NNP'), ('E', 'NNP'), ('K', 'NNP'), ('M', 'NNP'), ('E', 'NNP'), ('(', '('), ('K', 'NNP'), (',', ','), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (')', ')'), ('H', 'NNP'), ('D', 'NNP'), ('K', 'NNP'), ('Compare', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Message', 'NNP'), ('authentication', 'NN'), ('method', 'NN'), ('-', ':'), ('3', 'CD'), ('It', 'PRP'), ('possible', 'JJ'), ('use', 'NN'), ('hash', 'NN'), ('function', 'NN'), ('encryption', 'NN'), ('message', 'NN'), ('authentication', 'NN'), ('.', '.')]

 (S
  (NP
    H/NNP
    M/NNP
    Source/NNP
    A/NNP
    Destination/NNP
    B/NNP
    E/NNP
    K/NNP
    M/NNP
    E/NNP)
  (/(
  (NP K/NNP)
  ,/,
  (NP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  )/)
  (NP
    H/NNP
    D/NNP
    K/NNP
    Compare/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Message/NNP authentication/NN method/NN)
  -/:
  3/CD
  It/PRP
  (NP
    possible/JJ
    use/NN
    hash/NN
    function/NN
    encryption/NN
    message/NN
    authentication/NN)
  ./.) 


>> Noun Phrases are: 
 ['H M Source A Destination B E K M E', 'K', 'H', 'M', 'H D K Compare Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Message authentication method', 'possible use hash function encryption message authentication']

>> Named Entities are: 
 [('GPE', 'H'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('H', 'h'), ('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('E', 'e'), ('K', 'k'), ('M', 'm'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (')', ')'), ('H', 'h'), ('D', 'd'), ('K', 'k'), ('Compare', 'compar'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('3', '3'), ('It', 'it'), ('possible', 'possibl'), ('use', 'use'), ('hash', 'hash'), ('function', 'function'), ('encryption', 'encrypt'), ('message', 'messag'), ('authentication', 'authent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('H', 'h'), ('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('E', 'e'), ('K', 'k'), ('M', 'm'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (')', ')'), ('H', 'h'), ('D', 'd'), ('K', 'k'), ('Compare', 'compar'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('3', '3'), ('It', 'it'), ('possible', 'possibl'), ('use', 'use'), ('hash', 'hash'), ('function', 'function'), ('encryption', 'encrypt'), ('message', 'messag'), ('authentication', 'authent'), ('.', '.')]

>> Lemmatization: 
 [('H', 'H'), ('M', 'M'), ('Source', 'Source'), ('A', 'A'), ('Destination', 'Destination'), ('B', 'B'), ('E', 'E'), ('K', 'K'), ('M', 'M'), ('E', 'E'), ('(', '('), ('K', 'K'), (',', ','), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (')', ')'), ('H', 'H'), ('D', 'D'), ('K', 'K'), ('Compare', 'Compare'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'Message'), ('authentication', 'authentication'), ('method', 'method'), ('-', '-'), ('3', '3'), ('It', 'It'), ('possible', 'possible'), ('use', 'use'), ('hash', 'hash'), ('function', 'function'), ('encryption', 'encryption'), ('message', 'message'), ('authentication', 'authentication'), ('.', '.')]



============================ Sentence 13 =============================

A and B share a common secret value S. A computes the hash value over the concatenation of M  and S  and appends the resulting hash value to M.  Because B possesses S, it can recompute the hash value to verify. 


>> Tokens are: 
 ['A', 'B', 'share', 'common', 'secret', 'value', 'S.', 'A', 'computes', 'hash', 'value', 'concatenation', 'M', 'S', 'appends', 'resulting', 'hash', 'value', 'M.', 'Because', 'B', 'possesses', 'S', ',', 'recompute', 'hash', 'value', 'verify', '.']

>> Bigrams are: 
 [('A', 'B'), ('B', 'share'), ('share', 'common'), ('common', 'secret'), ('secret', 'value'), ('value', 'S.'), ('S.', 'A'), ('A', 'computes'), ('computes', 'hash'), ('hash', 'value'), ('value', 'concatenation'), ('concatenation', 'M'), ('M', 'S'), ('S', 'appends'), ('appends', 'resulting'), ('resulting', 'hash'), ('hash', 'value'), ('value', 'M.'), ('M.', 'Because'), ('Because', 'B'), ('B', 'possesses'), ('possesses', 'S'), ('S', ','), (',', 'recompute'), ('recompute', 'hash'), ('hash', 'value'), ('value', 'verify'), ('verify', '.')]

>> Trigrams are: 
 [('A', 'B', 'share'), ('B', 'share', 'common'), ('share', 'common', 'secret'), ('common', 'secret', 'value'), ('secret', 'value', 'S.'), ('value', 'S.', 'A'), ('S.', 'A', 'computes'), ('A', 'computes', 'hash'), ('computes', 'hash', 'value'), ('hash', 'value', 'concatenation'), ('value', 'concatenation', 'M'), ('concatenation', 'M', 'S'), ('M', 'S', 'appends'), ('S', 'appends', 'resulting'), ('appends', 'resulting', 'hash'), ('resulting', 'hash', 'value'), ('hash', 'value', 'M.'), ('value', 'M.', 'Because'), ('M.', 'Because', 'B'), ('Because', 'B', 'possesses'), ('B', 'possesses', 'S'), ('possesses', 'S', ','), ('S', ',', 'recompute'), (',', 'recompute', 'hash'), ('recompute', 'hash', 'value'), ('hash', 'value', 'verify'), ('value', 'verify', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('B', 'NNP'), ('share', 'NN'), ('common', 'JJ'), ('secret', 'JJ'), ('value', 'NN'), ('S.', 'NNP'), ('A', 'NNP'), ('computes', 'VBZ'), ('hash', 'JJ'), ('value', 'NN'), ('concatenation', 'NN'), ('M', 'NNP'), ('S', 'NNP'), ('appends', 'VBZ'), ('resulting', 'VBG'), ('hash', 'JJ'), ('value', 'NN'), ('M.', 'NNP'), ('Because', 'IN'), ('B', 'NNP'), ('possesses', 'NNS'), ('S', 'NNP'), (',', ','), ('recompute', 'NN'), ('hash', 'NN'), ('value', 'NN'), ('verify', 'NN'), ('.', '.')]

 (S
  (NP A/DT B/NNP share/NN)
  (NP common/JJ secret/JJ value/NN S./NNP A/NNP)
  computes/VBZ
  (NP hash/JJ value/NN concatenation/NN M/NNP S/NNP)
  appends/VBZ
  resulting/VBG
  (NP hash/JJ value/NN M./NNP)
  Because/IN
  (NP B/NNP possesses/NNS S/NNP)
  ,/,
  (NP recompute/NN hash/NN value/NN verify/NN)
  ./.) 


>> Noun Phrases are: 
 ['A B share', 'common secret value S. A', 'hash value concatenation M S', 'hash value M.', 'B possesses S', 'recompute hash value verify']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('B', 'b'), ('share', 'share'), ('common', 'common'), ('secret', 'secret'), ('value', 'valu'), ('S.', 's.'), ('A', 'a'), ('computes', 'comput'), ('hash', 'hash'), ('value', 'valu'), ('concatenation', 'concaten'), ('M', 'm'), ('S', 's'), ('appends', 'append'), ('resulting', 'result'), ('hash', 'hash'), ('value', 'valu'), ('M.', 'm.'), ('Because', 'becaus'), ('B', 'b'), ('possesses', 'possess'), ('S', 's'), (',', ','), ('recompute', 'recomput'), ('hash', 'hash'), ('value', 'valu'), ('verify', 'verifi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('B', 'b'), ('share', 'share'), ('common', 'common'), ('secret', 'secret'), ('value', 'valu'), ('S.', 's.'), ('A', 'a'), ('computes', 'comput'), ('hash', 'hash'), ('value', 'valu'), ('concatenation', 'concaten'), ('M', 'm'), ('S', 's'), ('appends', 'append'), ('resulting', 'result'), ('hash', 'hash'), ('value', 'valu'), ('M.', 'm.'), ('Because', 'becaus'), ('B', 'b'), ('possesses', 'possess'), ('S', 's'), (',', ','), ('recompute', 'recomput'), ('hash', 'hash'), ('value', 'valu'), ('verify', 'verifi'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('B', 'B'), ('share', 'share'), ('common', 'common'), ('secret', 'secret'), ('value', 'value'), ('S.', 'S.'), ('A', 'A'), ('computes', 'computes'), ('hash', 'hash'), ('value', 'value'), ('concatenation', 'concatenation'), ('M', 'M'), ('S', 'S'), ('appends', 'appends'), ('resulting', 'resulting'), ('hash', 'hash'), ('value', 'value'), ('M.', 'M.'), ('Because', 'Because'), ('B', 'B'), ('possesses', 'posse'), ('S', 'S'), (',', ','), ('recompute', 'recompute'), ('hash', 'hash'), ('value', 'value'), ('verify', 'verify'), ('.', '.')]



============================ Sentence 14 =============================

An opponent cannot modify an intercepted message. 


>> Tokens are: 
 ['An', 'opponent', 'modify', 'intercepted', 'message', '.']

>> Bigrams are: 
 [('An', 'opponent'), ('opponent', 'modify'), ('modify', 'intercepted'), ('intercepted', 'message'), ('message', '.')]

>> Trigrams are: 
 [('An', 'opponent', 'modify'), ('opponent', 'modify', 'intercepted'), ('modify', 'intercepted', 'message'), ('intercepted', 'message', '.')]

>> POS Tags are: 
 [('An', 'DT'), ('opponent', 'NN'), ('modify', 'NN'), ('intercepted', 'JJ'), ('message', 'NN'), ('.', '.')]

 (S
  (NP An/DT opponent/NN modify/NN)
  (NP intercepted/JJ message/NN)
  ./.) 


>> Noun Phrases are: 
 ['An opponent modify', 'intercepted message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('An', 'an'), ('opponent', 'oppon'), ('modify', 'modifi'), ('intercepted', 'intercept'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('An', 'an'), ('opponent', 'oppon'), ('modify', 'modifi'), ('intercepted', 'intercept'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('An', 'An'), ('opponent', 'opponent'), ('modify', 'modify'), ('intercepted', 'intercepted'), ('message', 'message'), ('.', '.')]



============================ Sentence 15 =============================

M   Source A Destination B H ll M  H(M || S) H Compare   ll S ll S  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Message authentication method - 4 Confidentiality can be added to the approach of method (3) by encrypting the entire message plus the hash code. 


>> Tokens are: 
 ['M', 'Source', 'A', 'Destination', 'B', 'H', 'M', 'H', '(', 'M', '||', 'S', ')', 'H', 'Compare', 'S', 'S', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Message', 'authentication', 'method', '-', '4', 'Confidentiality', 'added', 'approach', 'method', '(', '3', ')', 'encrypting', 'entire', 'message', 'plus', 'hash', 'code', '.']

>> Bigrams are: 
 [('M', 'Source'), ('Source', 'A'), ('A', 'Destination'), ('Destination', 'B'), ('B', 'H'), ('H', 'M'), ('M', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'S'), ('S', ')'), (')', 'H'), ('H', 'Compare'), ('Compare', 'S'), ('S', 'S'), ('S', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Message'), ('Message', 'authentication'), ('authentication', 'method'), ('method', '-'), ('-', '4'), ('4', 'Confidentiality'), ('Confidentiality', 'added'), ('added', 'approach'), ('approach', 'method'), ('method', '('), ('(', '3'), ('3', ')'), (')', 'encrypting'), ('encrypting', 'entire'), ('entire', 'message'), ('message', 'plus'), ('plus', 'hash'), ('hash', 'code'), ('code', '.')]

>> Trigrams are: 
 [('M', 'Source', 'A'), ('Source', 'A', 'Destination'), ('A', 'Destination', 'B'), ('Destination', 'B', 'H'), ('B', 'H', 'M'), ('H', 'M', 'H'), ('M', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'S'), ('||', 'S', ')'), ('S', ')', 'H'), (')', 'H', 'Compare'), ('H', 'Compare', 'S'), ('Compare', 'S', 'S'), ('S', 'S', 'Unit-5'), ('S', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Message'), ('›', 'Message', 'authentication'), ('Message', 'authentication', 'method'), ('authentication', 'method', '-'), ('method', '-', '4'), ('-', '4', 'Confidentiality'), ('4', 'Confidentiality', 'added'), ('Confidentiality', 'added', 'approach'), ('added', 'approach', 'method'), ('approach', 'method', '('), ('method', '(', '3'), ('(', '3', ')'), ('3', ')', 'encrypting'), (')', 'encrypting', 'entire'), ('encrypting', 'entire', 'message'), ('entire', 'message', 'plus'), ('message', 'plus', 'hash'), ('plus', 'hash', 'code'), ('hash', 'code', '.')]

>> POS Tags are: 
 [('M', 'NNP'), ('Source', 'NNP'), ('A', 'NNP'), ('Destination', 'NNP'), ('B', 'NNP'), ('H', 'NNP'), ('M', 'NNP'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('S', 'NNP'), (')', ')'), ('H', 'NNP'), ('Compare', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Message', 'NNP'), ('authentication', 'NN'), ('method', 'NN'), ('-', ':'), ('4', 'CD'), ('Confidentiality', 'NNP'), ('added', 'VBD'), ('approach', 'NN'), ('method', 'NN'), ('(', '('), ('3', 'CD'), (')', ')'), ('encrypting', 'VBG'), ('entire', 'JJ'), ('message', 'NN'), ('plus', 'CC'), ('hash', 'JJ'), ('code', 'NN'), ('.', '.')]

 (S
  (NP M/NNP Source/NNP A/NNP Destination/NNP B/NNP H/NNP M/NNP H/NNP)
  (/(
  (NP M/NNP ||/NNP S/NNP)
  )/)
  (NP
    H/NNP
    Compare/NNP
    S/NNP
    S/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Message/NNP authentication/NN method/NN)
  -/:
  4/CD
  (NP Confidentiality/NNP)
  added/VBD
  (NP approach/NN method/NN)
  (/(
  3/CD
  )/)
  encrypting/VBG
  (NP entire/JJ message/NN)
  plus/CC
  (NP hash/JJ code/NN)
  ./.) 


>> Noun Phrases are: 
 ['M Source A Destination B H M H', 'M || S', 'H Compare S S Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Message authentication method', 'Confidentiality', 'approach method', 'entire message', 'hash code']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Confidentiality')] 

>> Stemming using Porter Stemmer: 
 [('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('H', 'h'), ('M', 'm'), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('S', 's'), (')', ')'), ('H', 'h'), ('Compare', 'compar'), ('S', 's'), ('S', 's'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('4', '4'), ('Confidentiality', 'confidenti'), ('added', 'ad'), ('approach', 'approach'), ('method', 'method'), ('(', '('), ('3', '3'), (')', ')'), ('encrypting', 'encrypt'), ('entire', 'entir'), ('message', 'messag'), ('plus', 'plu'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('H', 'h'), ('M', 'm'), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('S', 's'), (')', ')'), ('H', 'h'), ('Compare', 'compar'), ('S', 's'), ('S', 's'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('authentication', 'authent'), ('method', 'method'), ('-', '-'), ('4', '4'), ('Confidentiality', 'confidenti'), ('added', 'ad'), ('approach', 'approach'), ('method', 'method'), ('(', '('), ('3', '3'), (')', ')'), ('encrypting', 'encrypt'), ('entire', 'entir'), ('message', 'messag'), ('plus', 'plus'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Lemmatization: 
 [('M', 'M'), ('Source', 'Source'), ('A', 'A'), ('Destination', 'Destination'), ('B', 'B'), ('H', 'H'), ('M', 'M'), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('S', 'S'), (')', ')'), ('H', 'H'), ('Compare', 'Compare'), ('S', 'S'), ('S', 'S'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'Message'), ('authentication', 'authentication'), ('method', 'method'), ('-', '-'), ('4', '4'), ('Confidentiality', 'Confidentiality'), ('added', 'added'), ('approach', 'approach'), ('method', 'method'), ('(', '('), ('3', '3'), (')', ')'), ('encrypting', 'encrypting'), ('entire', 'entire'), ('message', 'message'), ('plus', 'plus'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]



============================ Sentence 16 =============================

M   Source A Destination B H ll M  H(M || S) H Compare   ll S ll S E K  D K E (K, [ M || H(M || S)])  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›   9  MAC (Message Authentication Code) More commonly, message authentication is achieved using a MAC also known as keyed hash function. 


>> Tokens are: 
 ['M', 'Source', 'A', 'Destination', 'B', 'H', 'M', 'H', '(', 'M', '||', 'S', ')', 'H', 'Compare', 'S', 'S', 'E', 'K', 'D', 'K', 'E', '(', 'K', ',', '[', 'M', '||', 'H', '(', 'M', '||', 'S', ')', ']', ')', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '9', 'MAC', '(', 'Message', 'Authentication', 'Code', ')', 'More', 'commonly', ',', 'message', 'authentication', 'achieved', 'using', 'MAC', 'also', 'known', 'keyed', 'hash', 'function', '.']

>> Bigrams are: 
 [('M', 'Source'), ('Source', 'A'), ('A', 'Destination'), ('Destination', 'B'), ('B', 'H'), ('H', 'M'), ('M', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'S'), ('S', ')'), (')', 'H'), ('H', 'Compare'), ('Compare', 'S'), ('S', 'S'), ('S', 'E'), ('E', 'K'), ('K', 'D'), ('D', 'K'), ('K', 'E'), ('E', '('), ('(', 'K'), ('K', ','), (',', '['), ('[', 'M'), ('M', '||'), ('||', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'S'), ('S', ')'), (')', ']'), (']', ')'), (')', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '9'), ('9', 'MAC'), ('MAC', '('), ('(', 'Message'), ('Message', 'Authentication'), ('Authentication', 'Code'), ('Code', ')'), (')', 'More'), ('More', 'commonly'), ('commonly', ','), (',', 'message'), ('message', 'authentication'), ('authentication', 'achieved'), ('achieved', 'using'), ('using', 'MAC'), ('MAC', 'also'), ('also', 'known'), ('known', 'keyed'), ('keyed', 'hash'), ('hash', 'function'), ('function', '.')]

>> Trigrams are: 
 [('M', 'Source', 'A'), ('Source', 'A', 'Destination'), ('A', 'Destination', 'B'), ('Destination', 'B', 'H'), ('B', 'H', 'M'), ('H', 'M', 'H'), ('M', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'S'), ('||', 'S', ')'), ('S', ')', 'H'), (')', 'H', 'Compare'), ('H', 'Compare', 'S'), ('Compare', 'S', 'S'), ('S', 'S', 'E'), ('S', 'E', 'K'), ('E', 'K', 'D'), ('K', 'D', 'K'), ('D', 'K', 'E'), ('K', 'E', '('), ('E', '(', 'K'), ('(', 'K', ','), ('K', ',', '['), (',', '[', 'M'), ('[', 'M', '||'), ('M', '||', 'H'), ('||', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'S'), ('||', 'S', ')'), ('S', ')', ']'), (')', ']', ')'), (']', ')', 'Unit-5'), (')', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '9'), ('›', '9', 'MAC'), ('9', 'MAC', '('), ('MAC', '(', 'Message'), ('(', 'Message', 'Authentication'), ('Message', 'Authentication', 'Code'), ('Authentication', 'Code', ')'), ('Code', ')', 'More'), (')', 'More', 'commonly'), ('More', 'commonly', ','), ('commonly', ',', 'message'), (',', 'message', 'authentication'), ('message', 'authentication', 'achieved'), ('authentication', 'achieved', 'using'), ('achieved', 'using', 'MAC'), ('using', 'MAC', 'also'), ('MAC', 'also', 'known'), ('also', 'known', 'keyed'), ('known', 'keyed', 'hash'), ('keyed', 'hash', 'function'), ('hash', 'function', '.')]

>> POS Tags are: 
 [('M', 'NNP'), ('Source', 'NNP'), ('A', 'NNP'), ('Destination', 'NNP'), ('B', 'NNP'), ('H', 'NNP'), ('M', 'NNP'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('S', 'NNP'), (')', ')'), ('H', 'NNP'), ('Compare', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('E', 'NNP'), ('K', 'NNP'), ('D', 'NNP'), ('K', 'NNP'), ('E', 'NNP'), ('(', '('), ('K', 'NNP'), (',', ','), ('[', 'NNP'), ('M', 'NNP'), ('||', 'NNP'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('S', 'NNP'), (')', ')'), (']', 'NN'), (')', ')'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('9', 'CD'), ('MAC', 'NNP'), ('(', '('), ('Message', 'NNP'), ('Authentication', 'NNP'), ('Code', 'NNP'), (')', ')'), ('More', 'JJR'), ('commonly', 'RB'), (',', ','), ('message', 'NN'), ('authentication', 'NN'), ('achieved', 'VBD'), ('using', 'VBG'), ('MAC', 'NNP'), ('also', 'RB'), ('known', 'VBN'), ('keyed', 'JJ'), ('hash', 'NN'), ('function', 'NN'), ('.', '.')]

 (S
  (NP M/NNP Source/NNP A/NNP Destination/NNP B/NNP H/NNP M/NNP H/NNP)
  (/(
  (NP M/NNP ||/NNP S/NNP)
  )/)
  (NP H/NNP Compare/NNP S/NNP S/NNP E/NNP K/NNP D/NNP K/NNP E/NNP)
  (/(
  (NP K/NNP)
  ,/,
  (NP [/NNP M/NNP ||/NNP H/NNP)
  (/(
  (NP M/NNP ||/NNP S/NNP)
  )/)
  (NP ]/NN)
  )/)
  (NP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  9/CD
  (NP MAC/NNP)
  (/(
  (NP Message/NNP Authentication/NNP Code/NNP)
  )/)
  More/JJR
  commonly/RB
  ,/,
  (NP message/NN authentication/NN)
  achieved/VBD
  using/VBG
  (NP MAC/NNP)
  also/RB
  known/VBN
  (NP keyed/JJ hash/NN function/NN)
  ./.) 


>> Noun Phrases are: 
 ['M Source A Destination B H M H', 'M || S', 'H Compare S S E K D K E', 'K', '[ M || H', 'M || S', ']', 'Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', 'MAC', 'Message Authentication Code', 'message authentication', 'MAC', 'keyed hash function']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'MAC'), ('ORGANIZATION', 'Message Authentication Code'), ('ORGANIZATION', 'MAC')] 

>> Stemming using Porter Stemmer: 
 [('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('H', 'h'), ('M', 'm'), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('S', 's'), (')', ')'), ('H', 'h'), ('Compare', 'compar'), ('S', 's'), ('S', 's'), ('E', 'e'), ('K', 'k'), ('D', 'd'), ('K', 'k'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('[', '['), ('M', 'm'), ('||', '||'), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('S', 's'), (')', ')'), (']', ']'), (')', ')'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('9', '9'), ('MAC', 'mac'), ('(', '('), ('Message', 'messag'), ('Authentication', 'authent'), ('Code', 'code'), (')', ')'), ('More', 'more'), ('commonly', 'commonli'), (',', ','), ('message', 'messag'), ('authentication', 'authent'), ('achieved', 'achiev'), ('using', 'use'), ('MAC', 'mac'), ('also', 'also'), ('known', 'known'), ('keyed', 'key'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('H', 'h'), ('M', 'm'), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('S', 's'), (')', ')'), ('H', 'h'), ('Compare', 'compar'), ('S', 's'), ('S', 's'), ('E', 'e'), ('K', 'k'), ('D', 'd'), ('K', 'k'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('[', '['), ('M', 'm'), ('||', '||'), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('S', 's'), (')', ')'), (']', ']'), (')', ')'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('9', '9'), ('MAC', 'mac'), ('(', '('), ('Message', 'messag'), ('Authentication', 'authent'), ('Code', 'code'), (')', ')'), ('More', 'more'), ('commonly', 'common'), (',', ','), ('message', 'messag'), ('authentication', 'authent'), ('achieved', 'achiev'), ('using', 'use'), ('MAC', 'mac'), ('also', 'also'), ('known', 'known'), ('keyed', 'key'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('M', 'M'), ('Source', 'Source'), ('A', 'A'), ('Destination', 'Destination'), ('B', 'B'), ('H', 'H'), ('M', 'M'), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('S', 'S'), (')', ')'), ('H', 'H'), ('Compare', 'Compare'), ('S', 'S'), ('S', 'S'), ('E', 'E'), ('K', 'K'), ('D', 'D'), ('K', 'K'), ('E', 'E'), ('(', '('), ('K', 'K'), (',', ','), ('[', '['), ('M', 'M'), ('||', '||'), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('S', 'S'), (')', ')'), (']', ']'), (')', ')'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('9', '9'), ('MAC', 'MAC'), ('(', '('), ('Message', 'Message'), ('Authentication', 'Authentication'), ('Code', 'Code'), (')', ')'), ('More', 'More'), ('commonly', 'commonly'), (',', ','), ('message', 'message'), ('authentication', 'authentication'), ('achieved', 'achieved'), ('using', 'using'), ('MAC', 'MAC'), ('also', 'also'), ('known', 'known'), ('keyed', 'keyed'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]



============================ Sentence 17 =============================

MACs are used between two parties that share a secret key to authenticate information exchanged between those parties. 


>> Tokens are: 
 ['MACs', 'used', 'two', 'parties', 'share', 'secret', 'key', 'authenticate', 'information', 'exchanged', 'parties', '.']

>> Bigrams are: 
 [('MACs', 'used'), ('used', 'two'), ('two', 'parties'), ('parties', 'share'), ('share', 'secret'), ('secret', 'key'), ('key', 'authenticate'), ('authenticate', 'information'), ('information', 'exchanged'), ('exchanged', 'parties'), ('parties', '.')]

>> Trigrams are: 
 [('MACs', 'used', 'two'), ('used', 'two', 'parties'), ('two', 'parties', 'share'), ('parties', 'share', 'secret'), ('share', 'secret', 'key'), ('secret', 'key', 'authenticate'), ('key', 'authenticate', 'information'), ('authenticate', 'information', 'exchanged'), ('information', 'exchanged', 'parties'), ('exchanged', 'parties', '.')]

>> POS Tags are: 
 [('MACs', 'NNS'), ('used', 'VBD'), ('two', 'CD'), ('parties', 'NNS'), ('share', 'NN'), ('secret', 'JJ'), ('key', 'NN'), ('authenticate', 'JJ'), ('information', 'NN'), ('exchanged', 'VBD'), ('parties', 'NNS'), ('.', '.')]

 (S
  (NP MACs/NNS)
  used/VBD
  two/CD
  (NP parties/NNS share/NN)
  (NP secret/JJ key/NN)
  (NP authenticate/JJ information/NN)
  exchanged/VBD
  (NP parties/NNS)
  ./.) 


>> Noun Phrases are: 
 ['MACs', 'parties share', 'secret key', 'authenticate information', 'parties']

>> Named Entities are: 
 [('ORGANIZATION', 'MACs')] 

>> Stemming using Porter Stemmer: 
 [('MACs', 'mac'), ('used', 'use'), ('two', 'two'), ('parties', 'parti'), ('share', 'share'), ('secret', 'secret'), ('key', 'key'), ('authenticate', 'authent'), ('information', 'inform'), ('exchanged', 'exchang'), ('parties', 'parti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('MACs', 'mac'), ('used', 'use'), ('two', 'two'), ('parties', 'parti'), ('share', 'share'), ('secret', 'secret'), ('key', 'key'), ('authenticate', 'authent'), ('information', 'inform'), ('exchanged', 'exchang'), ('parties', 'parti'), ('.', '.')]

>> Lemmatization: 
 [('MACs', 'MACs'), ('used', 'used'), ('two', 'two'), ('parties', 'party'), ('share', 'share'), ('secret', 'secret'), ('key', 'key'), ('authenticate', 'authenticate'), ('information', 'information'), ('exchanged', 'exchanged'), ('parties', 'party'), ('.', '.')]



============================ Sentence 18 =============================

A MAC function takes as input a secret key and a data block and produces a hash value, referred to as the MAC. 


>> Tokens are: 
 ['A', 'MAC', 'function', 'takes', 'input', 'secret', 'key', 'data', 'block', 'produces', 'hash', 'value', ',', 'referred', 'MAC', '.']

>> Bigrams are: 
 [('A', 'MAC'), ('MAC', 'function'), ('function', 'takes'), ('takes', 'input'), ('input', 'secret'), ('secret', 'key'), ('key', 'data'), ('data', 'block'), ('block', 'produces'), ('produces', 'hash'), ('hash', 'value'), ('value', ','), (',', 'referred'), ('referred', 'MAC'), ('MAC', '.')]

>> Trigrams are: 
 [('A', 'MAC', 'function'), ('MAC', 'function', 'takes'), ('function', 'takes', 'input'), ('takes', 'input', 'secret'), ('input', 'secret', 'key'), ('secret', 'key', 'data'), ('key', 'data', 'block'), ('data', 'block', 'produces'), ('block', 'produces', 'hash'), ('produces', 'hash', 'value'), ('hash', 'value', ','), ('value', ',', 'referred'), (',', 'referred', 'MAC'), ('referred', 'MAC', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('MAC', 'NNP'), ('function', 'NN'), ('takes', 'VBZ'), ('input', 'NN'), ('secret', 'JJ'), ('key', 'NN'), ('data', 'NNS'), ('block', 'NN'), ('produces', 'VBZ'), ('hash', 'NN'), ('value', 'NN'), (',', ','), ('referred', 'VBD'), ('MAC', 'NNP'), ('.', '.')]

 (S
  (NP A/DT MAC/NNP function/NN)
  takes/VBZ
  (NP input/NN)
  (NP secret/JJ key/NN data/NNS block/NN)
  produces/VBZ
  (NP hash/NN value/NN)
  ,/,
  referred/VBD
  (NP MAC/NNP)
  ./.) 


>> Noun Phrases are: 
 ['A MAC function', 'input', 'secret key data block', 'hash value', 'MAC']

>> Named Entities are: 
 [('ORGANIZATION', 'MAC'), ('ORGANIZATION', 'MAC')] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('MAC', 'mac'), ('function', 'function'), ('takes', 'take'), ('input', 'input'), ('secret', 'secret'), ('key', 'key'), ('data', 'data'), ('block', 'block'), ('produces', 'produc'), ('hash', 'hash'), ('value', 'valu'), (',', ','), ('referred', 'refer'), ('MAC', 'mac'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('MAC', 'mac'), ('function', 'function'), ('takes', 'take'), ('input', 'input'), ('secret', 'secret'), ('key', 'key'), ('data', 'data'), ('block', 'block'), ('produces', 'produc'), ('hash', 'hash'), ('value', 'valu'), (',', ','), ('referred', 'refer'), ('MAC', 'mac'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('MAC', 'MAC'), ('function', 'function'), ('takes', 'take'), ('input', 'input'), ('secret', 'secret'), ('key', 'key'), ('data', 'data'), ('block', 'block'), ('produces', 'produce'), ('hash', 'hash'), ('value', 'value'), (',', ','), ('referred', 'referred'), ('MAC', 'MAC'), ('.', '.')]



============================ Sentence 19 =============================

The combination of hashing and encryption results in an overall function that is, in fact, a MAC (Method -2 in previous slide). 


>> Tokens are: 
 ['The', 'combination', 'hashing', 'encryption', 'results', 'overall', 'function', ',', 'fact', ',', 'MAC', '(', 'Method', '-2', 'previous', 'slide', ')', '.']

>> Bigrams are: 
 [('The', 'combination'), ('combination', 'hashing'), ('hashing', 'encryption'), ('encryption', 'results'), ('results', 'overall'), ('overall', 'function'), ('function', ','), (',', 'fact'), ('fact', ','), (',', 'MAC'), ('MAC', '('), ('(', 'Method'), ('Method', '-2'), ('-2', 'previous'), ('previous', 'slide'), ('slide', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'combination', 'hashing'), ('combination', 'hashing', 'encryption'), ('hashing', 'encryption', 'results'), ('encryption', 'results', 'overall'), ('results', 'overall', 'function'), ('overall', 'function', ','), ('function', ',', 'fact'), (',', 'fact', ','), ('fact', ',', 'MAC'), (',', 'MAC', '('), ('MAC', '(', 'Method'), ('(', 'Method', '-2'), ('Method', '-2', 'previous'), ('-2', 'previous', 'slide'), ('previous', 'slide', ')'), ('slide', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('combination', 'NN'), ('hashing', 'VBG'), ('encryption', 'NN'), ('results', 'NNS'), ('overall', 'JJ'), ('function', 'NN'), (',', ','), ('fact', 'NN'), (',', ','), ('MAC', 'NNP'), ('(', '('), ('Method', 'NNP'), ('-2', 'NNP'), ('previous', 'JJ'), ('slide', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT combination/NN)
  hashing/VBG
  (NP encryption/NN results/NNS)
  (NP overall/JJ function/NN)
  ,/,
  (NP fact/NN)
  ,/,
  (NP MAC/NNP)
  (/(
  (NP Method/NNP -2/NNP)
  (NP previous/JJ slide/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The combination', 'encryption results', 'overall function', 'fact', 'MAC', 'Method -2', 'previous slide']

>> Named Entities are: 
 [('ORGANIZATION', 'MAC'), ('ORGANIZATION', 'Method')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('combination', 'combin'), ('hashing', 'hash'), ('encryption', 'encrypt'), ('results', 'result'), ('overall', 'overal'), ('function', 'function'), (',', ','), ('fact', 'fact'), (',', ','), ('MAC', 'mac'), ('(', '('), ('Method', 'method'), ('-2', '-2'), ('previous', 'previou'), ('slide', 'slide'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('combination', 'combin'), ('hashing', 'hash'), ('encryption', 'encrypt'), ('results', 'result'), ('overall', 'overal'), ('function', 'function'), (',', ','), ('fact', 'fact'), (',', ','), ('MAC', 'mac'), ('(', '('), ('Method', 'method'), ('-2', '-2'), ('previous', 'previous'), ('slide', 'slide'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('combination', 'combination'), ('hashing', 'hashing'), ('encryption', 'encryption'), ('results', 'result'), ('overall', 'overall'), ('function', 'function'), (',', ','), ('fact', 'fact'), (',', ','), ('MAC', 'MAC'), ('(', '('), ('Method', 'Method'), ('-2', '-2'), ('previous', 'previous'), ('slide', 'slide'), (')', ')'), ('.', '.')]



============================ Sentence 20 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Digital Signature A digital signature is a mathematical technique used to validate the authenticity and integrity of a message, software or digital document. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'A', 'digital', 'signature', 'mathematical', 'technique', 'used', 'validate', 'authenticity', 'integrity', 'message', ',', 'software', 'digital', 'document', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'A'), ('A', 'digital'), ('digital', 'signature'), ('signature', 'mathematical'), ('mathematical', 'technique'), ('technique', 'used'), ('used', 'validate'), ('validate', 'authenticity'), ('authenticity', 'integrity'), ('integrity', 'message'), ('message', ','), (',', 'software'), ('software', 'digital'), ('digital', 'document'), ('document', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'A'), ('Signature', 'A', 'digital'), ('A', 'digital', 'signature'), ('digital', 'signature', 'mathematical'), ('signature', 'mathematical', 'technique'), ('mathematical', 'technique', 'used'), ('technique', 'used', 'validate'), ('used', 'validate', 'authenticity'), ('validate', 'authenticity', 'integrity'), ('authenticity', 'integrity', 'message'), ('integrity', 'message', ','), ('message', ',', 'software'), (',', 'software', 'digital'), ('software', 'digital', 'document'), ('digital', 'document', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('A', 'NNP'), ('digital', 'JJ'), ('signature', 'NN'), ('mathematical', 'JJ'), ('technique', 'NN'), ('used', 'VBN'), ('validate', 'JJ'), ('authenticity', 'NN'), ('integrity', 'NN'), ('message', 'NN'), (',', ','), ('software', 'NN'), ('digital', 'JJ'), ('document', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Digital/NNP Signature/NNP A/NNP)
  (NP digital/JJ signature/NN)
  (NP mathematical/JJ technique/NN)
  used/VBN
  (NP validate/JJ authenticity/NN integrity/NN message/NN)
  ,/,
  (NP software/NN)
  (NP digital/JJ document/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Digital Signature A', 'digital signature', 'mathematical technique', 'validate authenticity integrity message', 'software', 'digital document']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('A', 'a'), ('digital', 'digit'), ('signature', 'signatur'), ('mathematical', 'mathemat'), ('technique', 'techniqu'), ('used', 'use'), ('validate', 'valid'), ('authenticity', 'authent'), ('integrity', 'integr'), ('message', 'messag'), (',', ','), ('software', 'softwar'), ('digital', 'digit'), ('document', 'document'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('A', 'a'), ('digital', 'digit'), ('signature', 'signatur'), ('mathematical', 'mathemat'), ('technique', 'techniqu'), ('used', 'use'), ('validate', 'valid'), ('authenticity', 'authent'), ('integrity', 'integr'), ('message', 'messag'), (',', ','), ('software', 'softwar'), ('digital', 'digit'), ('document', 'document'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('A', 'A'), ('digital', 'digital'), ('signature', 'signature'), ('mathematical', 'mathematical'), ('technique', 'technique'), ('used', 'used'), ('validate', 'validate'), ('authenticity', 'authenticity'), ('integrity', 'integrity'), ('message', 'message'), (',', ','), ('software', 'software'), ('digital', 'digital'), ('document', 'document'), ('.', '.')]



============================ Sentence 21 =============================

The operation of the digital signature is similar to that of the MAC. 


>> Tokens are: 
 ['The', 'operation', 'digital', 'signature', 'similar', 'MAC', '.']

>> Bigrams are: 
 [('The', 'operation'), ('operation', 'digital'), ('digital', 'signature'), ('signature', 'similar'), ('similar', 'MAC'), ('MAC', '.')]

>> Trigrams are: 
 [('The', 'operation', 'digital'), ('operation', 'digital', 'signature'), ('digital', 'signature', 'similar'), ('signature', 'similar', 'MAC'), ('similar', 'MAC', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('operation', 'NN'), ('digital', 'JJ'), ('signature', 'NN'), ('similar', 'JJ'), ('MAC', 'NNP'), ('.', '.')]

 (S
  (NP The/DT operation/NN)
  (NP digital/JJ signature/NN)
  (NP similar/JJ MAC/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The operation', 'digital signature', 'similar MAC']

>> Named Entities are: 
 [('ORGANIZATION', 'MAC')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('operation', 'oper'), ('digital', 'digit'), ('signature', 'signatur'), ('similar', 'similar'), ('MAC', 'mac'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('operation', 'oper'), ('digital', 'digit'), ('signature', 'signatur'), ('similar', 'similar'), ('MAC', 'mac'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('operation', 'operation'), ('digital', 'digital'), ('signature', 'signature'), ('similar', 'similar'), ('MAC', 'MAC'), ('.', '.')]



============================ Sentence 22 =============================

In the case of the digital signature, the hash value of a message is encrypted with a user’s private key. 


>> Tokens are: 
 ['In', 'case', 'digital', 'signature', ',', 'hash', 'value', 'message', 'encrypted', 'user', '’', 'private', 'key', '.']

>> Bigrams are: 
 [('In', 'case'), ('case', 'digital'), ('digital', 'signature'), ('signature', ','), (',', 'hash'), ('hash', 'value'), ('value', 'message'), ('message', 'encrypted'), ('encrypted', 'user'), ('user', '’'), ('’', 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('In', 'case', 'digital'), ('case', 'digital', 'signature'), ('digital', 'signature', ','), ('signature', ',', 'hash'), (',', 'hash', 'value'), ('hash', 'value', 'message'), ('value', 'message', 'encrypted'), ('message', 'encrypted', 'user'), ('encrypted', 'user', '’'), ('user', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('case', 'NN'), ('digital', 'JJ'), ('signature', 'NN'), (',', ','), ('hash', 'NN'), ('value', 'NN'), ('message', 'NN'), ('encrypted', 'VBD'), ('user', 'JJ'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP case/NN)
  (NP digital/JJ signature/NN)
  ,/,
  (NP hash/NN value/NN message/NN)
  encrypted/VBD
  (NP user/JJ ’/NNP)
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['case', 'digital signature', 'hash value message', 'user ’', 'private key']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('case', 'case'), ('digital', 'digit'), ('signature', 'signatur'), (',', ','), ('hash', 'hash'), ('value', 'valu'), ('message', 'messag'), ('encrypted', 'encrypt'), ('user', 'user'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('case', 'case'), ('digital', 'digit'), ('signature', 'signatur'), (',', ','), ('hash', 'hash'), ('value', 'valu'), ('message', 'messag'), ('encrypted', 'encrypt'), ('user', 'user'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('case', 'case'), ('digital', 'digital'), ('signature', 'signature'), (',', ','), ('hash', 'hash'), ('value', 'value'), ('message', 'message'), ('encrypted', 'encrypted'), ('user', 'user'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 23 =============================

Anyone who knows the user’s public key can verify the integrity of the message that is associated with the digital signature. 


>> Tokens are: 
 ['Anyone', 'knows', 'user', '’', 'public', 'key', 'verify', 'integrity', 'message', 'associated', 'digital', 'signature', '.']

>> Bigrams are: 
 [('Anyone', 'knows'), ('knows', 'user'), ('user', '’'), ('’', 'public'), ('public', 'key'), ('key', 'verify'), ('verify', 'integrity'), ('integrity', 'message'), ('message', 'associated'), ('associated', 'digital'), ('digital', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('Anyone', 'knows', 'user'), ('knows', 'user', '’'), ('user', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', 'verify'), ('key', 'verify', 'integrity'), ('verify', 'integrity', 'message'), ('integrity', 'message', 'associated'), ('message', 'associated', 'digital'), ('associated', 'digital', 'signature'), ('digital', 'signature', '.')]

>> POS Tags are: 
 [('Anyone', 'NN'), ('knows', 'VBZ'), ('user', 'JJ'), ('’', 'NNP'), ('public', 'NN'), ('key', 'NN'), ('verify', 'FW'), ('integrity', 'NN'), ('message', 'NN'), ('associated', 'VBN'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  (NP Anyone/NN)
  knows/VBZ
  (NP user/JJ ’/NNP public/NN key/NN)
  verify/FW
  (NP integrity/NN message/NN)
  associated/VBN
  (NP digital/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['Anyone', 'user ’ public key', 'integrity message', 'digital signature']

>> Named Entities are: 
 [('GPE', 'Anyone')] 

>> Stemming using Porter Stemmer: 
 [('Anyone', 'anyon'), ('knows', 'know'), ('user', 'user'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('verify', 'verifi'), ('integrity', 'integr'), ('message', 'messag'), ('associated', 'associ'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Anyone', 'anyon'), ('knows', 'know'), ('user', 'user'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('verify', 'verifi'), ('integrity', 'integr'), ('message', 'messag'), ('associated', 'associ'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('Anyone', 'Anyone'), ('knows', 'know'), ('user', 'user'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('verify', 'verify'), ('integrity', 'integrity'), ('message', 'message'), ('associated', 'associated'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 24 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Digital Signature method - 1 The hash code is encrypted, using public-key encryption with the sender’s private key. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'method', '-', '1', 'The', 'hash', 'code', 'encrypted', ',', 'using', 'public-key', 'encryption', 'sender', '’', 'private', 'key', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'method'), ('method', '-'), ('-', '1'), ('1', 'The'), ('The', 'hash'), ('hash', 'code'), ('code', 'encrypted'), ('encrypted', ','), (',', 'using'), ('using', 'public-key'), ('public-key', 'encryption'), ('encryption', 'sender'), ('sender', '’'), ('’', 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'method'), ('Signature', 'method', '-'), ('method', '-', '1'), ('-', '1', 'The'), ('1', 'The', 'hash'), ('The', 'hash', 'code'), ('hash', 'code', 'encrypted'), ('code', 'encrypted', ','), ('encrypted', ',', 'using'), (',', 'using', 'public-key'), ('using', 'public-key', 'encryption'), ('public-key', 'encryption', 'sender'), ('encryption', 'sender', '’'), ('sender', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('method', 'VBD'), ('-', ':'), ('1', 'CD'), ('The', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('encrypted', 'VBD'), (',', ','), ('using', 'VBG'), ('public-key', 'JJ'), ('encryption', 'NN'), ('sender', 'NN'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Digital/NNP Signature/NNP)
  method/VBD
  -/:
  1/CD
  (NP The/DT hash/NN code/NN)
  encrypted/VBD
  ,/,
  using/VBG
  (NP public-key/JJ encryption/NN sender/NN ’/NNP)
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Digital Signature', 'The hash code', 'public-key encryption sender ’', 'private key']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('method', 'method'), ('-', '-'), ('1', '1'), ('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), (',', ','), ('using', 'use'), ('public-key', 'public-key'), ('encryption', 'encrypt'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('method', 'method'), ('-', '-'), ('1', '1'), ('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), (',', ','), ('using', 'use'), ('public-key', 'public-key'), ('encryption', 'encrypt'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('method', 'method'), ('-', '-'), ('1', '1'), ('The', 'The'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypted'), (',', ','), ('using', 'using'), ('public-key', 'public-key'), ('encryption', 'encryption'), ('sender', 'sender'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 25 =============================

This provides authentication. 


>> Tokens are: 
 ['This', 'provides', 'authentication', '.']

>> Bigrams are: 
 [('This', 'provides'), ('provides', 'authentication'), ('authentication', '.')]

>> Trigrams are: 
 [('This', 'provides', 'authentication'), ('provides', 'authentication', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('provides', 'VBZ'), ('authentication', 'NN'), ('.', '.')]

 (S This/DT provides/VBZ (NP authentication/NN) ./.) 


>> Noun Phrases are: 
 ['authentication']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('provides', 'provid'), ('authentication', 'authent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('provides', 'provid'), ('authentication', 'authent'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('provides', 'provides'), ('authentication', 'authentication'), ('.', '.')]



============================ Sentence 26 =============================

It also provides a digital signature, because only the sender could have produced the encrypted hash code. 


>> Tokens are: 
 ['It', 'also', 'provides', 'digital', 'signature', ',', 'sender', 'could', 'produced', 'encrypted', 'hash', 'code', '.']

>> Bigrams are: 
 [('It', 'also'), ('also', 'provides'), ('provides', 'digital'), ('digital', 'signature'), ('signature', ','), (',', 'sender'), ('sender', 'could'), ('could', 'produced'), ('produced', 'encrypted'), ('encrypted', 'hash'), ('hash', 'code'), ('code', '.')]

>> Trigrams are: 
 [('It', 'also', 'provides'), ('also', 'provides', 'digital'), ('provides', 'digital', 'signature'), ('digital', 'signature', ','), ('signature', ',', 'sender'), (',', 'sender', 'could'), ('sender', 'could', 'produced'), ('could', 'produced', 'encrypted'), ('produced', 'encrypted', 'hash'), ('encrypted', 'hash', 'code'), ('hash', 'code', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('also', 'RB'), ('provides', 'VBZ'), ('digital', 'JJ'), ('signature', 'NN'), (',', ','), ('sender', 'NN'), ('could', 'MD'), ('produced', 'VB'), ('encrypted', 'JJ'), ('hash', 'NN'), ('code', 'NN'), ('.', '.')]

 (S
  It/PRP
  also/RB
  provides/VBZ
  (NP digital/JJ signature/NN)
  ,/,
  (NP sender/NN)
  could/MD
  produced/VB
  (NP encrypted/JJ hash/NN code/NN)
  ./.) 


>> Noun Phrases are: 
 ['digital signature', 'sender', 'encrypted hash code']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('also', 'also'), ('provides', 'provid'), ('digital', 'digit'), ('signature', 'signatur'), (',', ','), ('sender', 'sender'), ('could', 'could'), ('produced', 'produc'), ('encrypted', 'encrypt'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('also', 'also'), ('provides', 'provid'), ('digital', 'digit'), ('signature', 'signatur'), (',', ','), ('sender', 'sender'), ('could', 'could'), ('produced', 'produc'), ('encrypted', 'encrypt'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('also', 'also'), ('provides', 'provides'), ('digital', 'digital'), ('signature', 'signature'), (',', ','), ('sender', 'sender'), ('could', 'could'), ('produced', 'produced'), ('encrypted', 'encrypted'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]



============================ Sentence 27 =============================

H M   Source A Destination B E PRa ll M  E(PRa, H(M)) H D PUa  Compare    Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Digital Signature method - 2 If confidentiality as well as a digital signature is desired, then the message plus the private-key-encrypted hash code can be encrypted using a symmetric  secret key. 


>> Tokens are: 
 ['H', 'M', 'Source', 'A', 'Destination', 'B', 'E', 'PRa', 'M', 'E', '(', 'PRa', ',', 'H', '(', 'M', ')', ')', 'H', 'D', 'PUa', 'Compare', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'method', '-', '2', 'If', 'confidentiality', 'well', 'digital', 'signature', 'desired', ',', 'message', 'plus', 'private-key-encrypted', 'hash', 'code', 'encrypted', 'using', 'symmetric', 'secret', 'key', '.']

>> Bigrams are: 
 [('H', 'M'), ('M', 'Source'), ('Source', 'A'), ('A', 'Destination'), ('Destination', 'B'), ('B', 'E'), ('E', 'PRa'), ('PRa', 'M'), ('M', 'E'), ('E', '('), ('(', 'PRa'), ('PRa', ','), (',', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ')'), (')', 'H'), ('H', 'D'), ('D', 'PUa'), ('PUa', 'Compare'), ('Compare', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'method'), ('method', '-'), ('-', '2'), ('2', 'If'), ('If', 'confidentiality'), ('confidentiality', 'well'), ('well', 'digital'), ('digital', 'signature'), ('signature', 'desired'), ('desired', ','), (',', 'message'), ('message', 'plus'), ('plus', 'private-key-encrypted'), ('private-key-encrypted', 'hash'), ('hash', 'code'), ('code', 'encrypted'), ('encrypted', 'using'), ('using', 'symmetric'), ('symmetric', 'secret'), ('secret', 'key'), ('key', '.')]

>> Trigrams are: 
 [('H', 'M', 'Source'), ('M', 'Source', 'A'), ('Source', 'A', 'Destination'), ('A', 'Destination', 'B'), ('Destination', 'B', 'E'), ('B', 'E', 'PRa'), ('E', 'PRa', 'M'), ('PRa', 'M', 'E'), ('M', 'E', '('), ('E', '(', 'PRa'), ('(', 'PRa', ','), ('PRa', ',', 'H'), (',', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ')'), (')', ')', 'H'), (')', 'H', 'D'), ('H', 'D', 'PUa'), ('D', 'PUa', 'Compare'), ('PUa', 'Compare', 'Unit-5'), ('Compare', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'method'), ('Signature', 'method', '-'), ('method', '-', '2'), ('-', '2', 'If'), ('2', 'If', 'confidentiality'), ('If', 'confidentiality', 'well'), ('confidentiality', 'well', 'digital'), ('well', 'digital', 'signature'), ('digital', 'signature', 'desired'), ('signature', 'desired', ','), ('desired', ',', 'message'), (',', 'message', 'plus'), ('message', 'plus', 'private-key-encrypted'), ('plus', 'private-key-encrypted', 'hash'), ('private-key-encrypted', 'hash', 'code'), ('hash', 'code', 'encrypted'), ('code', 'encrypted', 'using'), ('encrypted', 'using', 'symmetric'), ('using', 'symmetric', 'secret'), ('symmetric', 'secret', 'key'), ('secret', 'key', '.')]

>> POS Tags are: 
 [('H', 'NNP'), ('M', 'NNP'), ('Source', 'NNP'), ('A', 'NNP'), ('Destination', 'NNP'), ('B', 'NNP'), ('E', 'NNP'), ('PRa', 'NNP'), ('M', 'NNP'), ('E', 'NNP'), ('(', '('), ('PRa', 'NNP'), (',', ','), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (')', ')'), ('H', 'NNP'), ('D', 'NNP'), ('PUa', 'NNP'), ('Compare', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('method', 'VBD'), ('-', ':'), ('2', 'CD'), ('If', 'IN'), ('confidentiality', 'NN'), ('well', 'RB'), ('digital', 'JJ'), ('signature', 'NN'), ('desired', 'VBN'), (',', ','), ('message', 'NN'), ('plus', 'CC'), ('private-key-encrypted', 'JJ'), ('hash', 'NN'), ('code', 'NN'), ('encrypted', 'VBD'), ('using', 'VBG'), ('symmetric', 'JJ'), ('secret', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP
    H/NNP
    M/NNP
    Source/NNP
    A/NNP
    Destination/NNP
    B/NNP
    E/NNP
    PRa/NNP
    M/NNP
    E/NNP)
  (/(
  (NP PRa/NNP)
  ,/,
  (NP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  )/)
  (NP
    H/NNP
    D/NNP
    PUa/NNP
    Compare/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Digital/NNP Signature/NNP)
  method/VBD
  -/:
  2/CD
  If/IN
  (NP confidentiality/NN)
  well/RB
  (NP digital/JJ signature/NN)
  desired/VBN
  ,/,
  (NP message/NN)
  plus/CC
  (NP private-key-encrypted/JJ hash/NN code/NN)
  encrypted/VBD
  using/VBG
  (NP symmetric/JJ secret/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['H M Source A Destination B E PRa M E', 'PRa', 'H', 'M', 'H D PUa Compare Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Digital Signature', 'confidentiality', 'digital signature', 'message', 'private-key-encrypted hash code', 'symmetric secret key']

>> Named Entities are: 
 [('ORGANIZATION', 'PRa'), ('GPE', 'H'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature')] 

>> Stemming using Porter Stemmer: 
 [('H', 'h'), ('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('E', 'e'), ('PRa', 'pra'), ('M', 'm'), ('E', 'e'), ('(', '('), ('PRa', 'pra'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (')', ')'), ('H', 'h'), ('D', 'd'), ('PUa', 'pua'), ('Compare', 'compar'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('method', 'method'), ('-', '-'), ('2', '2'), ('If', 'if'), ('confidentiality', 'confidenti'), ('well', 'well'), ('digital', 'digit'), ('signature', 'signatur'), ('desired', 'desir'), (',', ','), ('message', 'messag'), ('plus', 'plu'), ('private-key-encrypted', 'private-key-encrypt'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), ('using', 'use'), ('symmetric', 'symmetr'), ('secret', 'secret'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('H', 'h'), ('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('E', 'e'), ('PRa', 'pra'), ('M', 'm'), ('E', 'e'), ('(', '('), ('PRa', 'pra'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (')', ')'), ('H', 'h'), ('D', 'd'), ('PUa', 'pua'), ('Compare', 'compar'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('method', 'method'), ('-', '-'), ('2', '2'), ('If', 'if'), ('confidentiality', 'confidenti'), ('well', 'well'), ('digital', 'digit'), ('signature', 'signatur'), ('desired', 'desir'), (',', ','), ('message', 'messag'), ('plus', 'plus'), ('private-key-encrypted', 'private-key-encrypt'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), ('using', 'use'), ('symmetric', 'symmetr'), ('secret', 'secret'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('H', 'H'), ('M', 'M'), ('Source', 'Source'), ('A', 'A'), ('Destination', 'Destination'), ('B', 'B'), ('E', 'E'), ('PRa', 'PRa'), ('M', 'M'), ('E', 'E'), ('(', '('), ('PRa', 'PRa'), (',', ','), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (')', ')'), ('H', 'H'), ('D', 'D'), ('PUa', 'PUa'), ('Compare', 'Compare'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('method', 'method'), ('-', '-'), ('2', '2'), ('If', 'If'), ('confidentiality', 'confidentiality'), ('well', 'well'), ('digital', 'digital'), ('signature', 'signature'), ('desired', 'desired'), (',', ','), ('message', 'message'), ('plus', 'plus'), ('private-key-encrypted', 'private-key-encrypted'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypted'), ('using', 'using'), ('symmetric', 'symmetric'), ('secret', 'secret'), ('key', 'key'), ('.', '.')]



============================ Sentence 28 =============================

M   Source A Destination B E ll M  E(Pra, H(M)) H Compare  E K  D K E (K, [ M || E(Pra, H(M)]) H PRa D PUa    Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›   13  Security Requirements  Disclosure Traffic analysis Masquerade Content modification Sequence modification Timing modification Source repudiation Destination repudiation   Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Requirements for hash functions Can be applied to any sized message M. Produces fixed-length output h. It is easy to compute h=H(M) for any message M. Given hash value h is infeasible to find y such that (H(y) = h) One-way property For given block x, it is computational infeasible to find         y ≠ x with H(y) = H(x) Weak collision resistance It is computationally infeasible to find messages m1  and m2 with H(m1) = H(m2)  Strong collision resistance   Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Simple Hash Function The input (message, file, etc.) 


>> Tokens are: 
 ['M', 'Source', 'A', 'Destination', 'B', 'E', 'M', 'E', '(', 'Pra', ',', 'H', '(', 'M', ')', ')', 'H', 'Compare', 'E', 'K', 'D', 'K', 'E', '(', 'K', ',', '[', 'M', '||', 'E', '(', 'Pra', ',', 'H', '(', 'M', ')', ']', ')', 'H', 'PRa', 'D', 'PUa', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '13', 'Security', 'Requirements', 'Disclosure', 'Traffic', 'analysis', 'Masquerade', 'Content', 'modification', 'Sequence', 'modification', 'Timing', 'modification', 'Source', 'repudiation', 'Destination', 'repudiation', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Requirements', 'hash', 'functions', 'Can', 'applied', 'sized', 'message', 'M.', 'Produces', 'fixed-length', 'output', 'h.', 'It', 'easy', 'compute', 'h=H', '(', 'M', ')', 'message', 'M.', 'Given', 'hash', 'value', 'h', 'infeasible', 'find', '(', 'H', '(', ')', '=', 'h', ')', 'One-way', 'property', 'For', 'given', 'block', 'x', ',', 'computational', 'infeasible', 'find', '≠', 'x', 'H', '(', ')', '=', 'H', '(', 'x', ')', 'Weak', 'collision', 'resistance', 'It', 'computationally', 'infeasible', 'find', 'messages', 'm1', 'm2', 'H', '(', 'm1', ')', '=', 'H', '(', 'm2', ')', 'Strong', 'collision', 'resistance', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Simple', 'Hash', 'Function', 'The', 'input', '(', 'message', ',', 'file', ',', 'etc', '.', ')']

>> Bigrams are: 
 [('M', 'Source'), ('Source', 'A'), ('A', 'Destination'), ('Destination', 'B'), ('B', 'E'), ('E', 'M'), ('M', 'E'), ('E', '('), ('(', 'Pra'), ('Pra', ','), (',', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ')'), (')', 'H'), ('H', 'Compare'), ('Compare', 'E'), ('E', 'K'), ('K', 'D'), ('D', 'K'), ('K', 'E'), ('E', '('), ('(', 'K'), ('K', ','), (',', '['), ('[', 'M'), ('M', '||'), ('||', 'E'), ('E', '('), ('(', 'Pra'), ('Pra', ','), (',', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ']'), (']', ')'), (')', 'H'), ('H', 'PRa'), ('PRa', 'D'), ('D', 'PUa'), ('PUa', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '13'), ('13', 'Security'), ('Security', 'Requirements'), ('Requirements', 'Disclosure'), ('Disclosure', 'Traffic'), ('Traffic', 'analysis'), ('analysis', 'Masquerade'), ('Masquerade', 'Content'), ('Content', 'modification'), ('modification', 'Sequence'), ('Sequence', 'modification'), ('modification', 'Timing'), ('Timing', 'modification'), ('modification', 'Source'), ('Source', 'repudiation'), ('repudiation', 'Destination'), ('Destination', 'repudiation'), ('repudiation', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Requirements'), ('Requirements', 'hash'), ('hash', 'functions'), ('functions', 'Can'), ('Can', 'applied'), ('applied', 'sized'), ('sized', 'message'), ('message', 'M.'), ('M.', 'Produces'), ('Produces', 'fixed-length'), ('fixed-length', 'output'), ('output', 'h.'), ('h.', 'It'), ('It', 'easy'), ('easy', 'compute'), ('compute', 'h=H'), ('h=H', '('), ('(', 'M'), ('M', ')'), (')', 'message'), ('message', 'M.'), ('M.', 'Given'), ('Given', 'hash'), ('hash', 'value'), ('value', 'h'), ('h', 'infeasible'), ('infeasible', 'find'), ('find', '('), ('(', 'H'), ('H', '('), ('(', ')'), (')', '='), ('=', 'h'), ('h', ')'), (')', 'One-way'), ('One-way', 'property'), ('property', 'For'), ('For', 'given'), ('given', 'block'), ('block', 'x'), ('x', ','), (',', 'computational'), ('computational', 'infeasible'), ('infeasible', 'find'), ('find', '≠'), ('≠', 'x'), ('x', 'H'), ('H', '('), ('(', ')'), (')', '='), ('=', 'H'), ('H', '('), ('(', 'x'), ('x', ')'), (')', 'Weak'), ('Weak', 'collision'), ('collision', 'resistance'), ('resistance', 'It'), ('It', 'computationally'), ('computationally', 'infeasible'), ('infeasible', 'find'), ('find', 'messages'), ('messages', 'm1'), ('m1', 'm2'), ('m2', 'H'), ('H', '('), ('(', 'm1'), ('m1', ')'), (')', '='), ('=', 'H'), ('H', '('), ('(', 'm2'), ('m2', ')'), (')', 'Strong'), ('Strong', 'collision'), ('collision', 'resistance'), ('resistance', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Simple'), ('Simple', 'Hash'), ('Hash', 'Function'), ('Function', 'The'), ('The', 'input'), ('input', '('), ('(', 'message'), ('message', ','), (',', 'file'), ('file', ','), (',', 'etc'), ('etc', '.'), ('.', ')')]

>> Trigrams are: 
 [('M', 'Source', 'A'), ('Source', 'A', 'Destination'), ('A', 'Destination', 'B'), ('Destination', 'B', 'E'), ('B', 'E', 'M'), ('E', 'M', 'E'), ('M', 'E', '('), ('E', '(', 'Pra'), ('(', 'Pra', ','), ('Pra', ',', 'H'), (',', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ')'), (')', ')', 'H'), (')', 'H', 'Compare'), ('H', 'Compare', 'E'), ('Compare', 'E', 'K'), ('E', 'K', 'D'), ('K', 'D', 'K'), ('D', 'K', 'E'), ('K', 'E', '('), ('E', '(', 'K'), ('(', 'K', ','), ('K', ',', '['), (',', '[', 'M'), ('[', 'M', '||'), ('M', '||', 'E'), ('||', 'E', '('), ('E', '(', 'Pra'), ('(', 'Pra', ','), ('Pra', ',', 'H'), (',', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ']'), (')', ']', ')'), (']', ')', 'H'), (')', 'H', 'PRa'), ('H', 'PRa', 'D'), ('PRa', 'D', 'PUa'), ('D', 'PUa', 'Unit-5'), ('PUa', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '13'), ('›', '13', 'Security'), ('13', 'Security', 'Requirements'), ('Security', 'Requirements', 'Disclosure'), ('Requirements', 'Disclosure', 'Traffic'), ('Disclosure', 'Traffic', 'analysis'), ('Traffic', 'analysis', 'Masquerade'), ('analysis', 'Masquerade', 'Content'), ('Masquerade', 'Content', 'modification'), ('Content', 'modification', 'Sequence'), ('modification', 'Sequence', 'modification'), ('Sequence', 'modification', 'Timing'), ('modification', 'Timing', 'modification'), ('Timing', 'modification', 'Source'), ('modification', 'Source', 'repudiation'), ('Source', 'repudiation', 'Destination'), ('repudiation', 'Destination', 'repudiation'), ('Destination', 'repudiation', 'Unit-5'), ('repudiation', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Requirements'), ('›', 'Requirements', 'hash'), ('Requirements', 'hash', 'functions'), ('hash', 'functions', 'Can'), ('functions', 'Can', 'applied'), ('Can', 'applied', 'sized'), ('applied', 'sized', 'message'), ('sized', 'message', 'M.'), ('message', 'M.', 'Produces'), ('M.', 'Produces', 'fixed-length'), ('Produces', 'fixed-length', 'output'), ('fixed-length', 'output', 'h.'), ('output', 'h.', 'It'), ('h.', 'It', 'easy'), ('It', 'easy', 'compute'), ('easy', 'compute', 'h=H'), ('compute', 'h=H', '('), ('h=H', '(', 'M'), ('(', 'M', ')'), ('M', ')', 'message'), (')', 'message', 'M.'), ('message', 'M.', 'Given'), ('M.', 'Given', 'hash'), ('Given', 'hash', 'value'), ('hash', 'value', 'h'), ('value', 'h', 'infeasible'), ('h', 'infeasible', 'find'), ('infeasible', 'find', '('), ('find', '(', 'H'), ('(', 'H', '('), ('H', '(', ')'), ('(', ')', '='), (')', '=', 'h'), ('=', 'h', ')'), ('h', ')', 'One-way'), (')', 'One-way', 'property'), ('One-way', 'property', 'For'), ('property', 'For', 'given'), ('For', 'given', 'block'), ('given', 'block', 'x'), ('block', 'x', ','), ('x', ',', 'computational'), (',', 'computational', 'infeasible'), ('computational', 'infeasible', 'find'), ('infeasible', 'find', '≠'), ('find', '≠', 'x'), ('≠', 'x', 'H'), ('x', 'H', '('), ('H', '(', ')'), ('(', ')', '='), (')', '=', 'H'), ('=', 'H', '('), ('H', '(', 'x'), ('(', 'x', ')'), ('x', ')', 'Weak'), (')', 'Weak', 'collision'), ('Weak', 'collision', 'resistance'), ('collision', 'resistance', 'It'), ('resistance', 'It', 'computationally'), ('It', 'computationally', 'infeasible'), ('computationally', 'infeasible', 'find'), ('infeasible', 'find', 'messages'), ('find', 'messages', 'm1'), ('messages', 'm1', 'm2'), ('m1', 'm2', 'H'), ('m2', 'H', '('), ('H', '(', 'm1'), ('(', 'm1', ')'), ('m1', ')', '='), (')', '=', 'H'), ('=', 'H', '('), ('H', '(', 'm2'), ('(', 'm2', ')'), ('m2', ')', 'Strong'), (')', 'Strong', 'collision'), ('Strong', 'collision', 'resistance'), ('collision', 'resistance', 'Unit-5'), ('resistance', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Simple'), ('›', 'Simple', 'Hash'), ('Simple', 'Hash', 'Function'), ('Hash', 'Function', 'The'), ('Function', 'The', 'input'), ('The', 'input', '('), ('input', '(', 'message'), ('(', 'message', ','), ('message', ',', 'file'), (',', 'file', ','), ('file', ',', 'etc'), (',', 'etc', '.'), ('etc', '.', ')')]

>> POS Tags are: 
 [('M', 'NNP'), ('Source', 'NNP'), ('A', 'NNP'), ('Destination', 'NNP'), ('B', 'NNP'), ('E', 'NNP'), ('M', 'NNP'), ('E', 'NNP'), ('(', '('), ('Pra', 'NNP'), (',', ','), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (')', ')'), ('H', 'NNP'), ('Compare', 'NNP'), ('E', 'NNP'), ('K', 'NNP'), ('D', 'NNP'), ('K', 'NNP'), ('E', 'NNP'), ('(', '('), ('K', 'NNP'), (',', ','), ('[', 'NNP'), ('M', 'NNP'), ('||', 'NNP'), ('E', 'NNP'), ('(', '('), ('Pra', 'NNP'), (',', ','), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (']', 'NN'), (')', ')'), ('H', 'NNP'), ('PRa', 'NNP'), ('D', 'NNP'), ('PUa', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('13', 'CD'), ('Security', 'NNP'), ('Requirements', 'NNP'), ('Disclosure', 'NNP'), ('Traffic', 'NNP'), ('analysis', 'NN'), ('Masquerade', 'NNP'), ('Content', 'NNP'), ('modification', 'NN'), ('Sequence', 'NNP'), ('modification', 'NN'), ('Timing', 'NNP'), ('modification', 'NN'), ('Source', 'NNP'), ('repudiation', 'NN'), ('Destination', 'NNP'), ('repudiation', 'NN'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN'), ('Requirements', 'NNP'), ('hash', 'NN'), ('functions', 'NNS'), ('Can', 'MD'), ('applied', 'VB'), ('sized', 'JJ'), ('message', 'NN'), ('M.', 'NNP'), ('Produces', 'VBZ'), ('fixed-length', 'JJ'), ('output', 'NN'), ('h.', 'VBD'), ('It', 'PRP'), ('easy', 'JJ'), ('compute', 'JJ'), ('h=H', 'NN'), ('(', '('), ('M', 'NNP'), (')', ')'), ('message', 'NN'), ('M.', 'NNP'), ('Given', 'NNP'), ('hash', 'VBZ'), ('value', 'NN'), ('h', 'NN'), ('infeasible', 'JJ'), ('find', 'NN'), ('(', '('), ('H', 'NNP'), ('(', '('), (')', ')'), ('=', 'VBP'), ('h', 'NN'), (')', ')'), ('One-way', 'NNP'), ('property', 'NN'), ('For', 'IN'), ('given', 'VBN'), ('block', 'NN'), ('x', 'NN'), (',', ','), ('computational', 'JJ'), ('infeasible', 'JJ'), ('find', 'NN'), ('≠', 'JJ'), ('x', 'NN'), ('H', 'NNP'), ('(', '('), (')', ')'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('x', 'NNP'), (')', ')'), ('Weak', 'NNP'), ('collision', 'NN'), ('resistance', 'NN'), ('It', 'PRP'), ('computationally', 'RB'), ('infeasible', 'JJ'), ('find', 'NN'), ('messages', 'NNS'), ('m1', 'VBP'), ('m2', 'NN'), ('H', 'NNP'), ('(', '('), ('m1', 'NN'), (')', ')'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('m2', 'NN'), (')', ')'), ('Strong', 'NNP'), ('collision', 'NN'), ('resistance', 'NN'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Simple', 'NNP'), ('Hash', 'NNP'), ('Function', 'NNP'), ('The', 'DT'), ('input', 'NN'), ('(', '('), ('message', 'NN'), (',', ','), ('file', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.'), (')', ')')]

 (S
  (NP M/NNP Source/NNP A/NNP Destination/NNP B/NNP E/NNP M/NNP E/NNP)
  (/(
  (NP Pra/NNP)
  ,/,
  (NP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  )/)
  (NP H/NNP Compare/NNP E/NNP K/NNP D/NNP K/NNP E/NNP)
  (/(
  (NP K/NNP)
  ,/,
  (NP [/NNP M/NNP ||/NNP E/NNP)
  (/(
  (NP Pra/NNP)
  ,/,
  (NP H/NNP)
  (/(
  (NP M/NNP)
  )/)
  (NP ]/NN)
  )/)
  (NP
    H/NNP
    PRa/NNP
    D/NNP
    PUa/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  13/CD
  (NP
    Security/NNP
    Requirements/NNP
    Disclosure/NNP
    Traffic/NNP
    analysis/NN
    Masquerade/NNP
    Content/NNP
    modification/NN
    Sequence/NNP
    modification/NN
    Timing/NNP
    modification/NN
    Source/NNP
    repudiation/NN
    Destination/NNP
    repudiation/NN
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN Requirements/NNP hash/NN functions/NNS)
  Can/MD
  applied/VB
  (NP sized/JJ message/NN M./NNP)
  Produces/VBZ
  (NP fixed-length/JJ output/NN)
  h./VBD
  It/PRP
  (NP easy/JJ compute/JJ h=H/NN)
  (/(
  (NP M/NNP)
  )/)
  (NP message/NN M./NNP Given/NNP)
  hash/VBZ
  (NP value/NN h/NN)
  (NP infeasible/JJ find/NN)
  (/(
  (NP H/NNP)
  (/(
  )/)
  =/VBP
  (NP h/NN)
  )/)
  (NP One-way/NNP property/NN)
  For/IN
  given/VBN
  (NP block/NN x/NN)
  ,/,
  (NP computational/JJ infeasible/JJ find/NN)
  (NP ≠/JJ x/NN H/NNP)
  (/(
  )/)
  (NP =/NN H/NNP)
  (/(
  (NP x/NNP)
  )/)
  (NP Weak/NNP collision/NN resistance/NN)
  It/PRP
  computationally/RB
  (NP infeasible/JJ find/NN messages/NNS)
  m1/VBP
  (NP m2/NN H/NNP)
  (/(
  (NP m1/NN)
  )/)
  (NP =/NN H/NNP)
  (/(
  (NP m2/NN)
  )/)
  (NP
    Strong/NNP
    collision/NN
    resistance/NN
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Simple/NNP Hash/NNP Function/NNP)
  (NP The/DT input/NN)
  (/(
  (NP message/NN)
  ,/,
  (NP file/NN)
  ,/,
  etc/FW
  ./.
  )/)) 


>> Noun Phrases are: 
 ['M Source A Destination B E M E', 'Pra', 'H', 'M', 'H Compare E K D K E', 'K', '[ M || E', 'Pra', 'H', 'M', ']', 'H PRa D PUa Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', 'Security Requirements Disclosure Traffic analysis Masquerade Content modification Sequence modification Timing modification Source repudiation Destination repudiation Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Requirements hash functions', 'sized message M.', 'fixed-length output', 'easy compute h=H', 'M', 'message M. Given', 'value h', 'infeasible find', 'H', 'h', 'One-way property', 'block x', 'computational infeasible find', '≠ x H', '= H', 'x', 'Weak collision resistance', 'infeasible find messages', 'm2 H', 'm1', '= H', 'm2', 'Strong collision resistance Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Simple Hash Function', 'The input', 'message', 'file']

>> Named Entities are: 
 [('ORGANIZATION', 'Pra'), ('GPE', 'H'), ('ORGANIZATION', 'Pra'), ('GPE', 'H'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Security Requirements Disclosure Traffic'), ('PERSON', 'Masquerade Content'), ('PERSON', 'Source'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('GPE', 'Strong'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('E', 'e'), ('M', 'm'), ('E', 'e'), ('(', '('), ('Pra', 'pra'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (')', ')'), ('H', 'h'), ('Compare', 'compar'), ('E', 'e'), ('K', 'k'), ('D', 'd'), ('K', 'k'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('[', '['), ('M', 'm'), ('||', '||'), ('E', 'e'), ('(', '('), ('Pra', 'pra'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (']', ']'), (')', ')'), ('H', 'h'), ('PRa', 'pra'), ('D', 'd'), ('PUa', 'pua'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('13', '13'), ('Security', 'secur'), ('Requirements', 'requir'), ('Disclosure', 'disclosur'), ('Traffic', 'traffic'), ('analysis', 'analysi'), ('Masquerade', 'masquerad'), ('Content', 'content'), ('modification', 'modif'), ('Sequence', 'sequenc'), ('modification', 'modif'), ('Timing', 'time'), ('modification', 'modif'), ('Source', 'sourc'), ('repudiation', 'repudi'), ('Destination', 'destin'), ('repudiation', 'repudi'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Requirements', 'requir'), ('hash', 'hash'), ('functions', 'function'), ('Can', 'can'), ('applied', 'appli'), ('sized', 'size'), ('message', 'messag'), ('M.', 'm.'), ('Produces', 'produc'), ('fixed-length', 'fixed-length'), ('output', 'output'), ('h.', 'h.'), ('It', 'it'), ('easy', 'easi'), ('compute', 'comput'), ('h=H', 'h=h'), ('(', '('), ('M', 'm'), (')', ')'), ('message', 'messag'), ('M.', 'm.'), ('Given', 'given'), ('hash', 'hash'), ('value', 'valu'), ('h', 'h'), ('infeasible', 'infeas'), ('find', 'find'), ('(', '('), ('H', 'h'), ('(', '('), (')', ')'), ('=', '='), ('h', 'h'), (')', ')'), ('One-way', 'one-way'), ('property', 'properti'), ('For', 'for'), ('given', 'given'), ('block', 'block'), ('x', 'x'), (',', ','), ('computational', 'comput'), ('infeasible', 'infeas'), ('find', 'find'), ('≠', '≠'), ('x', 'x'), ('H', 'h'), ('(', '('), (')', ')'), ('=', '='), ('H', 'h'), ('(', '('), ('x', 'x'), (')', ')'), ('Weak', 'weak'), ('collision', 'collis'), ('resistance', 'resist'), ('It', 'it'), ('computationally', 'comput'), ('infeasible', 'infeas'), ('find', 'find'), ('messages', 'messag'), ('m1', 'm1'), ('m2', 'm2'), ('H', 'h'), ('(', '('), ('m1', 'm1'), (')', ')'), ('=', '='), ('H', 'h'), ('(', '('), ('m2', 'm2'), (')', ')'), ('Strong', 'strong'), ('collision', 'collis'), ('resistance', 'resist'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Simple', 'simpl'), ('Hash', 'hash'), ('Function', 'function'), ('The', 'the'), ('input', 'input'), ('(', '('), ('message', 'messag'), (',', ','), ('file', 'file'), (',', ','), ('etc', 'etc'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('M', 'm'), ('Source', 'sourc'), ('A', 'a'), ('Destination', 'destin'), ('B', 'b'), ('E', 'e'), ('M', 'm'), ('E', 'e'), ('(', '('), ('Pra', 'pra'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (')', ')'), ('H', 'h'), ('Compare', 'compar'), ('E', 'e'), ('K', 'k'), ('D', 'd'), ('K', 'k'), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('[', '['), ('M', 'm'), ('||', '||'), ('E', 'e'), ('(', '('), ('Pra', 'pra'), (',', ','), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (']', ']'), (')', ')'), ('H', 'h'), ('PRa', 'pra'), ('D', 'd'), ('PUa', 'pua'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('13', '13'), ('Security', 'secur'), ('Requirements', 'requir'), ('Disclosure', 'disclosur'), ('Traffic', 'traffic'), ('analysis', 'analysi'), ('Masquerade', 'masquerad'), ('Content', 'content'), ('modification', 'modif'), ('Sequence', 'sequenc'), ('modification', 'modif'), ('Timing', 'time'), ('modification', 'modif'), ('Source', 'sourc'), ('repudiation', 'repudi'), ('Destination', 'destin'), ('repudiation', 'repudi'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Requirements', 'requir'), ('hash', 'hash'), ('functions', 'function'), ('Can', 'can'), ('applied', 'appli'), ('sized', 'size'), ('message', 'messag'), ('M.', 'm.'), ('Produces', 'produc'), ('fixed-length', 'fixed-length'), ('output', 'output'), ('h.', 'h.'), ('It', 'it'), ('easy', 'easi'), ('compute', 'comput'), ('h=H', 'h=h'), ('(', '('), ('M', 'm'), (')', ')'), ('message', 'messag'), ('M.', 'm.'), ('Given', 'given'), ('hash', 'hash'), ('value', 'valu'), ('h', 'h'), ('infeasible', 'infeas'), ('find', 'find'), ('(', '('), ('H', 'h'), ('(', '('), (')', ')'), ('=', '='), ('h', 'h'), (')', ')'), ('One-way', 'one-way'), ('property', 'properti'), ('For', 'for'), ('given', 'given'), ('block', 'block'), ('x', 'x'), (',', ','), ('computational', 'comput'), ('infeasible', 'infeas'), ('find', 'find'), ('≠', '≠'), ('x', 'x'), ('H', 'h'), ('(', '('), (')', ')'), ('=', '='), ('H', 'h'), ('(', '('), ('x', 'x'), (')', ')'), ('Weak', 'weak'), ('collision', 'collis'), ('resistance', 'resist'), ('It', 'it'), ('computationally', 'comput'), ('infeasible', 'infeas'), ('find', 'find'), ('messages', 'messag'), ('m1', 'm1'), ('m2', 'm2'), ('H', 'h'), ('(', '('), ('m1', 'm1'), (')', ')'), ('=', '='), ('H', 'h'), ('(', '('), ('m2', 'm2'), (')', ')'), ('Strong', 'strong'), ('collision', 'collis'), ('resistance', 'resist'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Simple', 'simpl'), ('Hash', 'hash'), ('Function', 'function'), ('The', 'the'), ('input', 'input'), ('(', '('), ('message', 'messag'), (',', ','), ('file', 'file'), (',', ','), ('etc', 'etc'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('M', 'M'), ('Source', 'Source'), ('A', 'A'), ('Destination', 'Destination'), ('B', 'B'), ('E', 'E'), ('M', 'M'), ('E', 'E'), ('(', '('), ('Pra', 'Pra'), (',', ','), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (')', ')'), ('H', 'H'), ('Compare', 'Compare'), ('E', 'E'), ('K', 'K'), ('D', 'D'), ('K', 'K'), ('E', 'E'), ('(', '('), ('K', 'K'), (',', ','), ('[', '['), ('M', 'M'), ('||', '||'), ('E', 'E'), ('(', '('), ('Pra', 'Pra'), (',', ','), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (']', ']'), (')', ')'), ('H', 'H'), ('PRa', 'PRa'), ('D', 'D'), ('PUa', 'PUa'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('13', '13'), ('Security', 'Security'), ('Requirements', 'Requirements'), ('Disclosure', 'Disclosure'), ('Traffic', 'Traffic'), ('analysis', 'analysis'), ('Masquerade', 'Masquerade'), ('Content', 'Content'), ('modification', 'modification'), ('Sequence', 'Sequence'), ('modification', 'modification'), ('Timing', 'Timing'), ('modification', 'modification'), ('Source', 'Source'), ('repudiation', 'repudiation'), ('Destination', 'Destination'), ('repudiation', 'repudiation'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Requirements', 'Requirements'), ('hash', 'hash'), ('functions', 'function'), ('Can', 'Can'), ('applied', 'applied'), ('sized', 'sized'), ('message', 'message'), ('M.', 'M.'), ('Produces', 'Produces'), ('fixed-length', 'fixed-length'), ('output', 'output'), ('h.', 'h.'), ('It', 'It'), ('easy', 'easy'), ('compute', 'compute'), ('h=H', 'h=H'), ('(', '('), ('M', 'M'), (')', ')'), ('message', 'message'), ('M.', 'M.'), ('Given', 'Given'), ('hash', 'hash'), ('value', 'value'), ('h', 'h'), ('infeasible', 'infeasible'), ('find', 'find'), ('(', '('), ('H', 'H'), ('(', '('), (')', ')'), ('=', '='), ('h', 'h'), (')', ')'), ('One-way', 'One-way'), ('property', 'property'), ('For', 'For'), ('given', 'given'), ('block', 'block'), ('x', 'x'), (',', ','), ('computational', 'computational'), ('infeasible', 'infeasible'), ('find', 'find'), ('≠', '≠'), ('x', 'x'), ('H', 'H'), ('(', '('), (')', ')'), ('=', '='), ('H', 'H'), ('(', '('), ('x', 'x'), (')', ')'), ('Weak', 'Weak'), ('collision', 'collision'), ('resistance', 'resistance'), ('It', 'It'), ('computationally', 'computationally'), ('infeasible', 'infeasible'), ('find', 'find'), ('messages', 'message'), ('m1', 'm1'), ('m2', 'm2'), ('H', 'H'), ('(', '('), ('m1', 'm1'), (')', ')'), ('=', '='), ('H', 'H'), ('(', '('), ('m2', 'm2'), (')', ')'), ('Strong', 'Strong'), ('collision', 'collision'), ('resistance', 'resistance'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Simple', 'Simple'), ('Hash', 'Hash'), ('Function', 'Function'), ('The', 'The'), ('input', 'input'), ('(', '('), ('message', 'message'), (',', ','), ('file', 'file'), (',', ','), ('etc', 'etc'), ('.', '.'), (')', ')')]



============================ Sentence 29 =============================

is viewed as a sequence of n-bit blocks. 


>> Tokens are: 
 ['viewed', 'sequence', 'n-bit', 'blocks', '.']

>> Bigrams are: 
 [('viewed', 'sequence'), ('sequence', 'n-bit'), ('n-bit', 'blocks'), ('blocks', '.')]

>> Trigrams are: 
 [('viewed', 'sequence', 'n-bit'), ('sequence', 'n-bit', 'blocks'), ('n-bit', 'blocks', '.')]

>> POS Tags are: 
 [('viewed', 'VBN'), ('sequence', 'NN'), ('n-bit', 'NN'), ('blocks', 'NNS'), ('.', '.')]

 (S viewed/VBN (NP sequence/NN n-bit/NN blocks/NNS) ./.) 


>> Noun Phrases are: 
 ['sequence n-bit blocks']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('viewed', 'view'), ('sequence', 'sequenc'), ('n-bit', 'n-bit'), ('blocks', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('viewed', 'view'), ('sequence', 'sequenc'), ('n-bit', 'n-bit'), ('blocks', 'block'), ('.', '.')]

>> Lemmatization: 
 [('viewed', 'viewed'), ('sequence', 'sequence'), ('n-bit', 'n-bit'), ('blocks', 'block'), ('.', '.')]



============================ Sentence 30 =============================

The input is processed one block at a time in an iterative fashion to produce an n-bit hash function. 


>> Tokens are: 
 ['The', 'input', 'processed', 'one', 'block', 'time', 'iterative', 'fashion', 'produce', 'n-bit', 'hash', 'function', '.']

>> Bigrams are: 
 [('The', 'input'), ('input', 'processed'), ('processed', 'one'), ('one', 'block'), ('block', 'time'), ('time', 'iterative'), ('iterative', 'fashion'), ('fashion', 'produce'), ('produce', 'n-bit'), ('n-bit', 'hash'), ('hash', 'function'), ('function', '.')]

>> Trigrams are: 
 [('The', 'input', 'processed'), ('input', 'processed', 'one'), ('processed', 'one', 'block'), ('one', 'block', 'time'), ('block', 'time', 'iterative'), ('time', 'iterative', 'fashion'), ('iterative', 'fashion', 'produce'), ('fashion', 'produce', 'n-bit'), ('produce', 'n-bit', 'hash'), ('n-bit', 'hash', 'function'), ('hash', 'function', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('input', 'NN'), ('processed', 'VBD'), ('one', 'CD'), ('block', 'NN'), ('time', 'NN'), ('iterative', 'JJ'), ('fashion', 'NN'), ('produce', 'VBP'), ('n-bit', 'JJ'), ('hash', 'NN'), ('function', 'NN'), ('.', '.')]

 (S
  (NP The/DT input/NN)
  processed/VBD
  one/CD
  (NP block/NN time/NN)
  (NP iterative/JJ fashion/NN)
  produce/VBP
  (NP n-bit/JJ hash/NN function/NN)
  ./.) 


>> Noun Phrases are: 
 ['The input', 'block time', 'iterative fashion', 'n-bit hash function']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('input', 'input'), ('processed', 'process'), ('one', 'one'), ('block', 'block'), ('time', 'time'), ('iterative', 'iter'), ('fashion', 'fashion'), ('produce', 'produc'), ('n-bit', 'n-bit'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('input', 'input'), ('processed', 'process'), ('one', 'one'), ('block', 'block'), ('time', 'time'), ('iterative', 'iter'), ('fashion', 'fashion'), ('produce', 'produc'), ('n-bit', 'n-bit'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('input', 'input'), ('processed', 'processed'), ('one', 'one'), ('block', 'block'), ('time', 'time'), ('iterative', 'iterative'), ('fashion', 'fashion'), ('produce', 'produce'), ('n-bit', 'n-bit'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]



============================ Sentence 31 =============================

One of the simplest hash functions is the bit-by-bit exclusive-OR (XOR) of every block. 


>> Tokens are: 
 ['One', 'simplest', 'hash', 'functions', 'bit-by-bit', 'exclusive-OR', '(', 'XOR', ')', 'every', 'block', '.']

>> Bigrams are: 
 [('One', 'simplest'), ('simplest', 'hash'), ('hash', 'functions'), ('functions', 'bit-by-bit'), ('bit-by-bit', 'exclusive-OR'), ('exclusive-OR', '('), ('(', 'XOR'), ('XOR', ')'), (')', 'every'), ('every', 'block'), ('block', '.')]

>> Trigrams are: 
 [('One', 'simplest', 'hash'), ('simplest', 'hash', 'functions'), ('hash', 'functions', 'bit-by-bit'), ('functions', 'bit-by-bit', 'exclusive-OR'), ('bit-by-bit', 'exclusive-OR', '('), ('exclusive-OR', '(', 'XOR'), ('(', 'XOR', ')'), ('XOR', ')', 'every'), (')', 'every', 'block'), ('every', 'block', '.')]

>> POS Tags are: 
 [('One', 'CD'), ('simplest', 'JJS'), ('hash', 'NN'), ('functions', 'NNS'), ('bit-by-bit', 'JJ'), ('exclusive-OR', 'JJ'), ('(', '('), ('XOR', 'NNP'), (')', ')'), ('every', 'DT'), ('block', 'NN'), ('.', '.')]

 (S
  One/CD
  simplest/JJS
  (NP hash/NN functions/NNS)
  bit-by-bit/JJ
  exclusive-OR/JJ
  (/(
  (NP XOR/NNP)
  )/)
  (NP every/DT block/NN)
  ./.) 


>> Noun Phrases are: 
 ['hash functions', 'XOR', 'every block']

>> Named Entities are: 
 [('ORGANIZATION', 'XOR')] 

>> Stemming using Porter Stemmer: 
 [('One', 'one'), ('simplest', 'simplest'), ('hash', 'hash'), ('functions', 'function'), ('bit-by-bit', 'bit-by-bit'), ('exclusive-OR', 'exclusive-or'), ('(', '('), ('XOR', 'xor'), (')', ')'), ('every', 'everi'), ('block', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('One', 'one'), ('simplest', 'simplest'), ('hash', 'hash'), ('functions', 'function'), ('bit-by-bit', 'bit-by-bit'), ('exclusive-OR', 'exclusive-or'), ('(', '('), ('XOR', 'xor'), (')', ')'), ('every', 'everi'), ('block', 'block'), ('.', '.')]

>> Lemmatization: 
 [('One', 'One'), ('simplest', 'simplest'), ('hash', 'hash'), ('functions', 'function'), ('bit-by-bit', 'bit-by-bit'), ('exclusive-OR', 'exclusive-OR'), ('(', '('), ('XOR', 'XOR'), (')', ')'), ('every', 'every'), ('block', 'block'), ('.', '.')]



============================ Sentence 32 =============================

Where,  		           = ith bit of the hash code 1 ≤ i ≤ n 		          m = number of n-bit blocks in the input 		          = ith bit in jth block   		  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  SHA -  Secure Hash Algorithm 		SHA - 1	SHA - 224	SHA - 256	SHA - 384	SHA - 512  	Message Digest Size	160	224	256	384	512  	Message Size	< 264	< 264	< 264	< 2128	< 2128  	Block Size	512	512	512	1024	1024  	Word Size	32	32	32	64	64  	Number of Steps	80	64	64	80	80   Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  SHA - 512 The algorithm takes as input a message with a maximum length of less than 2128 bits and produces as output a 512-bit message digest. 


>> Tokens are: 
 ['Where', ',', '=', 'ith', 'bit', 'hash', 'code', '1', '≤', '≤', 'n', '=', 'number', 'n-bit', 'blocks', 'input', '=', 'ith', 'bit', 'jth', 'block', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SHA', '-', 'Secure', 'Hash', 'Algorithm', 'SHA', '-', '1', 'SHA', '-', '224', 'SHA', '-', '256', 'SHA', '-', '384', 'SHA', '-', '512', 'Message', 'Digest', 'Size', '160', '224', '256', '384', '512', 'Message', 'Size', '<', '264', '<', '264', '<', '264', '<', '2128', '<', '2128', 'Block', 'Size', '512', '512', '512', '1024', '1024', 'Word', 'Size', '32', '32', '32', '64', '64', 'Number', 'Steps', '80', '64', '64', '80', '80', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SHA', '-', '512', 'The', 'algorithm', 'takes', 'input', 'message', 'maximum', 'length', 'less', '2128', 'bits', 'produces', 'output', '512-bit', 'message', 'digest', '.']

>> Bigrams are: 
 [('Where', ','), (',', '='), ('=', 'ith'), ('ith', 'bit'), ('bit', 'hash'), ('hash', 'code'), ('code', '1'), ('1', '≤'), ('≤', '≤'), ('≤', 'n'), ('n', '='), ('=', 'number'), ('number', 'n-bit'), ('n-bit', 'blocks'), ('blocks', 'input'), ('input', '='), ('=', 'ith'), ('ith', 'bit'), ('bit', 'jth'), ('jth', 'block'), ('block', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SHA'), ('SHA', '-'), ('-', 'Secure'), ('Secure', 'Hash'), ('Hash', 'Algorithm'), ('Algorithm', 'SHA'), ('SHA', '-'), ('-', '1'), ('1', 'SHA'), ('SHA', '-'), ('-', '224'), ('224', 'SHA'), ('SHA', '-'), ('-', '256'), ('256', 'SHA'), ('SHA', '-'), ('-', '384'), ('384', 'SHA'), ('SHA', '-'), ('-', '512'), ('512', 'Message'), ('Message', 'Digest'), ('Digest', 'Size'), ('Size', '160'), ('160', '224'), ('224', '256'), ('256', '384'), ('384', '512'), ('512', 'Message'), ('Message', 'Size'), ('Size', '<'), ('<', '264'), ('264', '<'), ('<', '264'), ('264', '<'), ('<', '264'), ('264', '<'), ('<', '2128'), ('2128', '<'), ('<', '2128'), ('2128', 'Block'), ('Block', 'Size'), ('Size', '512'), ('512', '512'), ('512', '512'), ('512', '1024'), ('1024', '1024'), ('1024', 'Word'), ('Word', 'Size'), ('Size', '32'), ('32', '32'), ('32', '32'), ('32', '64'), ('64', '64'), ('64', 'Number'), ('Number', 'Steps'), ('Steps', '80'), ('80', '64'), ('64', '64'), ('64', '80'), ('80', '80'), ('80', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SHA'), ('SHA', '-'), ('-', '512'), ('512', 'The'), ('The', 'algorithm'), ('algorithm', 'takes'), ('takes', 'input'), ('input', 'message'), ('message', 'maximum'), ('maximum', 'length'), ('length', 'less'), ('less', '2128'), ('2128', 'bits'), ('bits', 'produces'), ('produces', 'output'), ('output', '512-bit'), ('512-bit', 'message'), ('message', 'digest'), ('digest', '.')]

>> Trigrams are: 
 [('Where', ',', '='), (',', '=', 'ith'), ('=', 'ith', 'bit'), ('ith', 'bit', 'hash'), ('bit', 'hash', 'code'), ('hash', 'code', '1'), ('code', '1', '≤'), ('1', '≤', '≤'), ('≤', '≤', 'n'), ('≤', 'n', '='), ('n', '=', 'number'), ('=', 'number', 'n-bit'), ('number', 'n-bit', 'blocks'), ('n-bit', 'blocks', 'input'), ('blocks', 'input', '='), ('input', '=', 'ith'), ('=', 'ith', 'bit'), ('ith', 'bit', 'jth'), ('bit', 'jth', 'block'), ('jth', 'block', 'Unit-5'), ('block', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SHA'), ('›', 'SHA', '-'), ('SHA', '-', 'Secure'), ('-', 'Secure', 'Hash'), ('Secure', 'Hash', 'Algorithm'), ('Hash', 'Algorithm', 'SHA'), ('Algorithm', 'SHA', '-'), ('SHA', '-', '1'), ('-', '1', 'SHA'), ('1', 'SHA', '-'), ('SHA', '-', '224'), ('-', '224', 'SHA'), ('224', 'SHA', '-'), ('SHA', '-', '256'), ('-', '256', 'SHA'), ('256', 'SHA', '-'), ('SHA', '-', '384'), ('-', '384', 'SHA'), ('384', 'SHA', '-'), ('SHA', '-', '512'), ('-', '512', 'Message'), ('512', 'Message', 'Digest'), ('Message', 'Digest', 'Size'), ('Digest', 'Size', '160'), ('Size', '160', '224'), ('160', '224', '256'), ('224', '256', '384'), ('256', '384', '512'), ('384', '512', 'Message'), ('512', 'Message', 'Size'), ('Message', 'Size', '<'), ('Size', '<', '264'), ('<', '264', '<'), ('264', '<', '264'), ('<', '264', '<'), ('264', '<', '264'), ('<', '264', '<'), ('264', '<', '2128'), ('<', '2128', '<'), ('2128', '<', '2128'), ('<', '2128', 'Block'), ('2128', 'Block', 'Size'), ('Block', 'Size', '512'), ('Size', '512', '512'), ('512', '512', '512'), ('512', '512', '1024'), ('512', '1024', '1024'), ('1024', '1024', 'Word'), ('1024', 'Word', 'Size'), ('Word', 'Size', '32'), ('Size', '32', '32'), ('32', '32', '32'), ('32', '32', '64'), ('32', '64', '64'), ('64', '64', 'Number'), ('64', 'Number', 'Steps'), ('Number', 'Steps', '80'), ('Steps', '80', '64'), ('80', '64', '64'), ('64', '64', '80'), ('64', '80', '80'), ('80', '80', 'Unit-5'), ('80', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SHA'), ('›', 'SHA', '-'), ('SHA', '-', '512'), ('-', '512', 'The'), ('512', 'The', 'algorithm'), ('The', 'algorithm', 'takes'), ('algorithm', 'takes', 'input'), ('takes', 'input', 'message'), ('input', 'message', 'maximum'), ('message', 'maximum', 'length'), ('maximum', 'length', 'less'), ('length', 'less', '2128'), ('less', '2128', 'bits'), ('2128', 'bits', 'produces'), ('bits', 'produces', 'output'), ('produces', 'output', '512-bit'), ('output', '512-bit', 'message'), ('512-bit', 'message', 'digest'), ('message', 'digest', '.')]

>> POS Tags are: 
 [('Where', 'WRB'), (',', ','), ('=', 'VB'), ('ith', 'JJ'), ('bit', 'NN'), ('hash', 'JJ'), ('code', 'NN'), ('1', 'CD'), ('≤', 'NN'), ('≤', 'NNP'), ('n', 'CC'), ('=', 'JJ'), ('number', 'NN'), ('n-bit', 'JJ'), ('blocks', 'NNS'), ('input', 'VBP'), ('=', 'RB'), ('ith', 'JJ'), ('bit', 'NN'), ('jth', 'JJ'), ('block', 'NN'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SHA', 'NNP'), ('-', ':'), ('Secure', 'NN'), ('Hash', 'NNP'), ('Algorithm', 'NNP'), ('SHA', 'NNP'), ('-', ':'), ('1', 'CD'), ('SHA', 'NNP'), ('-', ':'), ('224', 'CD'), ('SHA', 'NNP'), ('-', ':'), ('256', 'CD'), ('SHA', 'NNP'), ('-', ':'), ('384', 'CD'), ('SHA', 'NNP'), ('-', ':'), ('512', 'CD'), ('Message', 'NN'), ('Digest', 'NNP'), ('Size', 'NNP'), ('160', 'CD'), ('224', 'CD'), ('256', 'CD'), ('384', 'CD'), ('512', 'CD'), ('Message', 'NN'), ('Size', 'NNP'), ('<', 'VBZ'), ('264', 'CD'), ('<', 'NN'), ('264', 'CD'), ('<', 'NN'), ('264', 'CD'), ('<', 'NN'), ('2128', 'CD'), ('<', 'NN'), ('2128', 'CD'), ('Block', 'NNP'), ('Size', 'NNP'), ('512', 'CD'), ('512', 'CD'), ('512', 'CD'), ('1024', 'CD'), ('1024', 'CD'), ('Word', 'NNP'), ('Size', 'NNP'), ('32', 'CD'), ('32', 'CD'), ('32', 'CD'), ('64', 'CD'), ('64', 'CD'), ('Number', 'NNP'), ('Steps', 'NNP'), ('80', 'CD'), ('64', 'CD'), ('64', 'CD'), ('80', 'CD'), ('80', 'CD'), ('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SHA', 'NNP'), ('-', ':'), ('512', 'CD'), ('The', 'DT'), ('algorithm', 'NN'), ('takes', 'VBZ'), ('input', 'JJ'), ('message', 'NN'), ('maximum', 'JJ'), ('length', 'NN'), ('less', 'RBR'), ('2128', 'CD'), ('bits', 'NNS'), ('produces', 'VBZ'), ('output', 'NN'), ('512-bit', 'JJ'), ('message', 'NN'), ('digest', 'NN'), ('.', '.')]

 (S
  Where/WRB
  ,/,
  =/VB
  (NP ith/JJ bit/NN)
  (NP hash/JJ code/NN)
  1/CD
  (NP ≤/NN ≤/NNP)
  n/CC
  (NP =/JJ number/NN)
  (NP n-bit/JJ blocks/NNS)
  input/VBP
  =/RB
  (NP ith/JJ bit/NN)
  (NP
    jth/JJ
    block/NN
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP SHA/NNP)
  -/:
  (NP Secure/NN Hash/NNP Algorithm/NNP SHA/NNP)
  -/:
  1/CD
  (NP SHA/NNP)
  -/:
  224/CD
  (NP SHA/NNP)
  -/:
  256/CD
  (NP SHA/NNP)
  -/:
  384/CD
  (NP SHA/NNP)
  -/:
  512/CD
  (NP Message/NN Digest/NNP Size/NNP)
  160/CD
  224/CD
  256/CD
  384/CD
  512/CD
  (NP Message/NN Size/NNP)
  </VBZ
  264/CD
  (NP </NN)
  264/CD
  (NP </NN)
  264/CD
  (NP </NN)
  2128/CD
  (NP </NN)
  2128/CD
  (NP Block/NNP Size/NNP)
  512/CD
  512/CD
  512/CD
  1024/CD
  1024/CD
  (NP Word/NNP Size/NNP)
  32/CD
  32/CD
  32/CD
  64/CD
  64/CD
  (NP Number/NNP Steps/NNP)
  80/CD
  64/CD
  64/CD
  80/CD
  80/CD
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP SHA/NNP)
  -/:
  512/CD
  (NP The/DT algorithm/NN)
  takes/VBZ
  (NP input/JJ message/NN)
  (NP maximum/JJ length/NN)
  less/RBR
  2128/CD
  (NP bits/NNS)
  produces/VBZ
  (NP output/NN)
  (NP 512-bit/JJ message/NN digest/NN)
  ./.) 


>> Noun Phrases are: 
 ['ith bit', 'hash code', '≤ ≤', '= number', 'n-bit blocks', 'ith bit', 'jth block Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› SHA', 'Secure Hash Algorithm SHA', 'SHA', 'SHA', 'SHA', 'SHA', 'Message Digest Size', 'Message Size', '<', '<', '<', '<', 'Block Size', 'Word Size', 'Number Steps', 'Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› SHA', 'The algorithm', 'input message', 'maximum length', 'bits', 'output', '512-bit message digest']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'SHA'), ('ORGANIZATION', 'Secure Hash Algorithm'), ('ORGANIZATION', 'SHA'), ('ORGANIZATION', 'SHA'), ('ORGANIZATION', 'SHA'), ('ORGANIZATION', 'SHA'), ('ORGANIZATION', 'SHA'), ('PERSON', 'Digest Size'), ('PERSON', 'Size'), ('PERSON', 'Block Size'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'SHA')] 

>> Stemming using Porter Stemmer: 
 [('Where', 'where'), (',', ','), ('=', '='), ('ith', 'ith'), ('bit', 'bit'), ('hash', 'hash'), ('code', 'code'), ('1', '1'), ('≤', '≤'), ('≤', '≤'), ('n', 'n'), ('=', '='), ('number', 'number'), ('n-bit', 'n-bit'), ('blocks', 'block'), ('input', 'input'), ('=', '='), ('ith', 'ith'), ('bit', 'bit'), ('jth', 'jth'), ('block', 'block'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA', 'sha'), ('-', '-'), ('Secure', 'secur'), ('Hash', 'hash'), ('Algorithm', 'algorithm'), ('SHA', 'sha'), ('-', '-'), ('1', '1'), ('SHA', 'sha'), ('-', '-'), ('224', '224'), ('SHA', 'sha'), ('-', '-'), ('256', '256'), ('SHA', 'sha'), ('-', '-'), ('384', '384'), ('SHA', 'sha'), ('-', '-'), ('512', '512'), ('Message', 'messag'), ('Digest', 'digest'), ('Size', 'size'), ('160', '160'), ('224', '224'), ('256', '256'), ('384', '384'), ('512', '512'), ('Message', 'messag'), ('Size', 'size'), ('<', '<'), ('264', '264'), ('<', '<'), ('264', '264'), ('<', '<'), ('264', '264'), ('<', '<'), ('2128', '2128'), ('<', '<'), ('2128', '2128'), ('Block', 'block'), ('Size', 'size'), ('512', '512'), ('512', '512'), ('512', '512'), ('1024', '1024'), ('1024', '1024'), ('Word', 'word'), ('Size', 'size'), ('32', '32'), ('32', '32'), ('32', '32'), ('64', '64'), ('64', '64'), ('Number', 'number'), ('Steps', 'step'), ('80', '80'), ('64', '64'), ('64', '64'), ('80', '80'), ('80', '80'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA', 'sha'), ('-', '-'), ('512', '512'), ('The', 'the'), ('algorithm', 'algorithm'), ('takes', 'take'), ('input', 'input'), ('message', 'messag'), ('maximum', 'maximum'), ('length', 'length'), ('less', 'less'), ('2128', '2128'), ('bits', 'bit'), ('produces', 'produc'), ('output', 'output'), ('512-bit', '512-bit'), ('message', 'messag'), ('digest', 'digest'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Where', 'where'), (',', ','), ('=', '='), ('ith', 'ith'), ('bit', 'bit'), ('hash', 'hash'), ('code', 'code'), ('1', '1'), ('≤', '≤'), ('≤', '≤'), ('n', 'n'), ('=', '='), ('number', 'number'), ('n-bit', 'n-bit'), ('blocks', 'block'), ('input', 'input'), ('=', '='), ('ith', 'ith'), ('bit', 'bit'), ('jth', 'jth'), ('block', 'block'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA', 'sha'), ('-', '-'), ('Secure', 'secur'), ('Hash', 'hash'), ('Algorithm', 'algorithm'), ('SHA', 'sha'), ('-', '-'), ('1', '1'), ('SHA', 'sha'), ('-', '-'), ('224', '224'), ('SHA', 'sha'), ('-', '-'), ('256', '256'), ('SHA', 'sha'), ('-', '-'), ('384', '384'), ('SHA', 'sha'), ('-', '-'), ('512', '512'), ('Message', 'messag'), ('Digest', 'digest'), ('Size', 'size'), ('160', '160'), ('224', '224'), ('256', '256'), ('384', '384'), ('512', '512'), ('Message', 'messag'), ('Size', 'size'), ('<', '<'), ('264', '264'), ('<', '<'), ('264', '264'), ('<', '<'), ('264', '264'), ('<', '<'), ('2128', '2128'), ('<', '<'), ('2128', '2128'), ('Block', 'block'), ('Size', 'size'), ('512', '512'), ('512', '512'), ('512', '512'), ('1024', '1024'), ('1024', '1024'), ('Word', 'word'), ('Size', 'size'), ('32', '32'), ('32', '32'), ('32', '32'), ('64', '64'), ('64', '64'), ('Number', 'number'), ('Steps', 'step'), ('80', '80'), ('64', '64'), ('64', '64'), ('80', '80'), ('80', '80'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA', 'sha'), ('-', '-'), ('512', '512'), ('The', 'the'), ('algorithm', 'algorithm'), ('takes', 'take'), ('input', 'input'), ('message', 'messag'), ('maximum', 'maximum'), ('length', 'length'), ('less', 'less'), ('2128', '2128'), ('bits', 'bit'), ('produces', 'produc'), ('output', 'output'), ('512-bit', '512-bit'), ('message', 'messag'), ('digest', 'digest'), ('.', '.')]

>> Lemmatization: 
 [('Where', 'Where'), (',', ','), ('=', '='), ('ith', 'ith'), ('bit', 'bit'), ('hash', 'hash'), ('code', 'code'), ('1', '1'), ('≤', '≤'), ('≤', '≤'), ('n', 'n'), ('=', '='), ('number', 'number'), ('n-bit', 'n-bit'), ('blocks', 'block'), ('input', 'input'), ('=', '='), ('ith', 'ith'), ('bit', 'bit'), ('jth', 'jth'), ('block', 'block'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA', 'SHA'), ('-', '-'), ('Secure', 'Secure'), ('Hash', 'Hash'), ('Algorithm', 'Algorithm'), ('SHA', 'SHA'), ('-', '-'), ('1', '1'), ('SHA', 'SHA'), ('-', '-'), ('224', '224'), ('SHA', 'SHA'), ('-', '-'), ('256', '256'), ('SHA', 'SHA'), ('-', '-'), ('384', '384'), ('SHA', 'SHA'), ('-', '-'), ('512', '512'), ('Message', 'Message'), ('Digest', 'Digest'), ('Size', 'Size'), ('160', '160'), ('224', '224'), ('256', '256'), ('384', '384'), ('512', '512'), ('Message', 'Message'), ('Size', 'Size'), ('<', '<'), ('264', '264'), ('<', '<'), ('264', '264'), ('<', '<'), ('264', '264'), ('<', '<'), ('2128', '2128'), ('<', '<'), ('2128', '2128'), ('Block', 'Block'), ('Size', 'Size'), ('512', '512'), ('512', '512'), ('512', '512'), ('1024', '1024'), ('1024', '1024'), ('Word', 'Word'), ('Size', 'Size'), ('32', '32'), ('32', '32'), ('32', '32'), ('64', '64'), ('64', '64'), ('Number', 'Number'), ('Steps', 'Steps'), ('80', '80'), ('64', '64'), ('64', '64'), ('80', '80'), ('80', '80'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA', 'SHA'), ('-', '-'), ('512', '512'), ('The', 'The'), ('algorithm', 'algorithm'), ('takes', 'take'), ('input', 'input'), ('message', 'message'), ('maximum', 'maximum'), ('length', 'length'), ('less', 'le'), ('2128', '2128'), ('bits', 'bit'), ('produces', 'produce'), ('output', 'output'), ('512-bit', '512-bit'), ('message', 'message'), ('digest', 'digest'), ('.', '.')]



============================ Sentence 33 =============================

The input is processed in 1024-bit blocks. 


>> Tokens are: 
 ['The', 'input', 'processed', '1024-bit', 'blocks', '.']

>> Bigrams are: 
 [('The', 'input'), ('input', 'processed'), ('processed', '1024-bit'), ('1024-bit', 'blocks'), ('blocks', '.')]

>> Trigrams are: 
 [('The', 'input', 'processed'), ('input', 'processed', '1024-bit'), ('processed', '1024-bit', 'blocks'), ('1024-bit', 'blocks', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('input', 'NN'), ('processed', 'VBD'), ('1024-bit', 'JJ'), ('blocks', 'NNS'), ('.', '.')]

 (S
  (NP The/DT input/NN)
  processed/VBD
  (NP 1024-bit/JJ blocks/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The input', '1024-bit blocks']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('input', 'input'), ('processed', 'process'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('input', 'input'), ('processed', 'process'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('input', 'input'), ('processed', 'processed'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('.', '.')]



============================ Sentence 34 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›   Message Digest Generation using SHA -512    Message (L bit) 10000…0 L M1 (1024 bits) M2 (1024 bits) MN (1024 bits) F + H1 (512 bits) IV=H0 F + H2 (512 bits) F + HN (512 bits)        Message Digest Generation using SHA -512   Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Step -1 Append Padding Bits The message is padded so that its length is congruent to 896 modulo 1024 [length ≡ 896(mod 1024)] . 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Message', 'Digest', 'Generation', 'using', 'SHA', '-512', 'Message', '(', 'L', 'bit', ')', '10000…0', 'L', 'M1', '(', '1024', 'bits', ')', 'M2', '(', '1024', 'bits', ')', 'MN', '(', '1024', 'bits', ')', 'F', '+', 'H1', '(', '512', 'bits', ')', 'IV=H0', 'F', '+', 'H2', '(', '512', 'bits', ')', 'F', '+', 'HN', '(', '512', 'bits', ')', 'Message', 'Digest', 'Generation', 'using', 'SHA', '-512', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step', '-1', 'Append', 'Padding', 'Bits', 'The', 'message', 'padded', 'length', 'congruent', '896', 'modulo', '1024', '[', 'length', '≡', '896', '(', 'mod', '1024', ')', ']', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Message'), ('Message', 'Digest'), ('Digest', 'Generation'), ('Generation', 'using'), ('using', 'SHA'), ('SHA', '-512'), ('-512', 'Message'), ('Message', '('), ('(', 'L'), ('L', 'bit'), ('bit', ')'), (')', '10000…0'), ('10000…0', 'L'), ('L', 'M1'), ('M1', '('), ('(', '1024'), ('1024', 'bits'), ('bits', ')'), (')', 'M2'), ('M2', '('), ('(', '1024'), ('1024', 'bits'), ('bits', ')'), (')', 'MN'), ('MN', '('), ('(', '1024'), ('1024', 'bits'), ('bits', ')'), (')', 'F'), ('F', '+'), ('+', 'H1'), ('H1', '('), ('(', '512'), ('512', 'bits'), ('bits', ')'), (')', 'IV=H0'), ('IV=H0', 'F'), ('F', '+'), ('+', 'H2'), ('H2', '('), ('(', '512'), ('512', 'bits'), ('bits', ')'), (')', 'F'), ('F', '+'), ('+', 'HN'), ('HN', '('), ('(', '512'), ('512', 'bits'), ('bits', ')'), (')', 'Message'), ('Message', 'Digest'), ('Digest', 'Generation'), ('Generation', 'using'), ('using', 'SHA'), ('SHA', '-512'), ('-512', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step'), ('Step', '-1'), ('-1', 'Append'), ('Append', 'Padding'), ('Padding', 'Bits'), ('Bits', 'The'), ('The', 'message'), ('message', 'padded'), ('padded', 'length'), ('length', 'congruent'), ('congruent', '896'), ('896', 'modulo'), ('modulo', '1024'), ('1024', '['), ('[', 'length'), ('length', '≡'), ('≡', '896'), ('896', '('), ('(', 'mod'), ('mod', '1024'), ('1024', ')'), (')', ']'), (']', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Message'), ('›', 'Message', 'Digest'), ('Message', 'Digest', 'Generation'), ('Digest', 'Generation', 'using'), ('Generation', 'using', 'SHA'), ('using', 'SHA', '-512'), ('SHA', '-512', 'Message'), ('-512', 'Message', '('), ('Message', '(', 'L'), ('(', 'L', 'bit'), ('L', 'bit', ')'), ('bit', ')', '10000…0'), (')', '10000…0', 'L'), ('10000…0', 'L', 'M1'), ('L', 'M1', '('), ('M1', '(', '1024'), ('(', '1024', 'bits'), ('1024', 'bits', ')'), ('bits', ')', 'M2'), (')', 'M2', '('), ('M2', '(', '1024'), ('(', '1024', 'bits'), ('1024', 'bits', ')'), ('bits', ')', 'MN'), (')', 'MN', '('), ('MN', '(', '1024'), ('(', '1024', 'bits'), ('1024', 'bits', ')'), ('bits', ')', 'F'), (')', 'F', '+'), ('F', '+', 'H1'), ('+', 'H1', '('), ('H1', '(', '512'), ('(', '512', 'bits'), ('512', 'bits', ')'), ('bits', ')', 'IV=H0'), (')', 'IV=H0', 'F'), ('IV=H0', 'F', '+'), ('F', '+', 'H2'), ('+', 'H2', '('), ('H2', '(', '512'), ('(', '512', 'bits'), ('512', 'bits', ')'), ('bits', ')', 'F'), (')', 'F', '+'), ('F', '+', 'HN'), ('+', 'HN', '('), ('HN', '(', '512'), ('(', '512', 'bits'), ('512', 'bits', ')'), ('bits', ')', 'Message'), (')', 'Message', 'Digest'), ('Message', 'Digest', 'Generation'), ('Digest', 'Generation', 'using'), ('Generation', 'using', 'SHA'), ('using', 'SHA', '-512'), ('SHA', '-512', 'Unit-5'), ('-512', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step'), ('›', 'Step', '-1'), ('Step', '-1', 'Append'), ('-1', 'Append', 'Padding'), ('Append', 'Padding', 'Bits'), ('Padding', 'Bits', 'The'), ('Bits', 'The', 'message'), ('The', 'message', 'padded'), ('message', 'padded', 'length'), ('padded', 'length', 'congruent'), ('length', 'congruent', '896'), ('congruent', '896', 'modulo'), ('896', 'modulo', '1024'), ('modulo', '1024', '['), ('1024', '[', 'length'), ('[', 'length', '≡'), ('length', '≡', '896'), ('≡', '896', '('), ('896', '(', 'mod'), ('(', 'mod', '1024'), ('mod', '1024', ')'), ('1024', ')', ']'), (')', ']', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Message', 'NNP'), ('Digest', 'NNP'), ('Generation', 'NNP'), ('using', 'VBG'), ('SHA', 'NNP'), ('-512', 'NNP'), ('Message', 'NNP'), ('(', '('), ('L', 'NNP'), ('bit', 'NN'), (')', ')'), ('10000…0', 'CD'), ('L', 'NNP'), ('M1', 'NNP'), ('(', '('), ('1024', 'CD'), ('bits', 'NNS'), (')', ')'), ('M2', 'NNP'), ('(', '('), ('1024', 'CD'), ('bits', 'NNS'), (')', ')'), ('MN', 'NNP'), ('(', '('), ('1024', 'CD'), ('bits', 'NNS'), (')', ')'), ('F', 'NNP'), ('+', 'NNP'), ('H1', 'NNP'), ('(', '('), ('512', 'CD'), ('bits', 'NNS'), (')', ')'), ('IV=H0', 'NNP'), ('F', 'NNP'), ('+', 'NNP'), ('H2', 'NNP'), ('(', '('), ('512', 'CD'), ('bits', 'NNS'), (')', ')'), ('F', 'NNP'), ('+', 'NNP'), ('HN', 'NNP'), ('(', '('), ('512', 'CD'), ('bits', 'NNS'), (')', ')'), ('Message', 'VBP'), ('Digest', 'JJS'), ('Generation', 'NN'), ('using', 'VBG'), ('SHA', 'NNP'), ('-512', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step', 'NNP'), ('-1', 'NNP'), ('Append', 'NNP'), ('Padding', 'VBG'), ('Bits', 'NNP'), ('The', 'DT'), ('message', 'NN'), ('padded', 'VBD'), ('length', 'JJ'), ('congruent', 'NN'), ('896', 'CD'), ('modulo', 'NN'), ('1024', 'CD'), ('[', 'NNP'), ('length', 'VBD'), ('≡', 'JJ'), ('896', 'CD'), ('(', '('), ('mod', 'JJ'), ('1024', 'CD'), (')', ')'), (']', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Message/NNP Digest/NNP Generation/NNP)
  using/VBG
  (NP SHA/NNP -512/NNP Message/NNP)
  (/(
  (NP L/NNP bit/NN)
  )/)
  10000…0/CD
  (NP L/NNP M1/NNP)
  (/(
  1024/CD
  (NP bits/NNS)
  )/)
  (NP M2/NNP)
  (/(
  1024/CD
  (NP bits/NNS)
  )/)
  (NP MN/NNP)
  (/(
  1024/CD
  (NP bits/NNS)
  )/)
  (NP F/NNP +/NNP H1/NNP)
  (/(
  512/CD
  (NP bits/NNS)
  )/)
  (NP IV=H0/NNP F/NNP +/NNP H2/NNP)
  (/(
  512/CD
  (NP bits/NNS)
  )/)
  (NP F/NNP +/NNP HN/NNP)
  (/(
  512/CD
  (NP bits/NNS)
  )/)
  Message/VBP
  Digest/JJS
  (NP Generation/NN)
  using/VBG
  (NP
    SHA/NNP
    -512/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Step/NNP -1/NNP Append/NNP)
  Padding/VBG
  (NP Bits/NNP)
  (NP The/DT message/NN)
  padded/VBD
  (NP length/JJ congruent/NN)
  896/CD
  (NP modulo/NN)
  1024/CD
  (NP [/NNP)
  length/VBD
  ≡/JJ
  896/CD
  (/(
  mod/JJ
  1024/CD
  )/)
  (NP ]/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Message Digest Generation', 'SHA -512 Message', 'L bit', 'L M1', 'bits', 'M2', 'bits', 'MN', 'bits', 'F + H1', 'bits', 'IV=H0 F + H2', 'bits', 'F + HN', 'bits', 'Generation', 'SHA -512 Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Step -1 Append', 'Bits', 'The message', 'length congruent', 'modulo', '[', ']']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Message Digest'), ('ORGANIZATION', 'SHA'), ('ORGANIZATION', 'SHA'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Step -1 Append')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('Digest', 'digest'), ('Generation', 'gener'), ('using', 'use'), ('SHA', 'sha'), ('-512', '-512'), ('Message', 'messag'), ('(', '('), ('L', 'l'), ('bit', 'bit'), (')', ')'), ('10000…0', '10000…0'), ('L', 'l'), ('M1', 'm1'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('M2', 'm2'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('MN', 'mn'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('+', '+'), ('H1', 'h1'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('IV=H0', 'iv=h0'), ('F', 'f'), ('+', '+'), ('H2', 'h2'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('+', '+'), ('HN', 'hn'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('Message', 'messag'), ('Digest', 'digest'), ('Generation', 'gener'), ('using', 'use'), ('SHA', 'sha'), ('-512', '-512'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-1', '-1'), ('Append', 'append'), ('Padding', 'pad'), ('Bits', 'bit'), ('The', 'the'), ('message', 'messag'), ('padded', 'pad'), ('length', 'length'), ('congruent', 'congruent'), ('896', '896'), ('modulo', 'modulo'), ('1024', '1024'), ('[', '['), ('length', 'length'), ('≡', '≡'), ('896', '896'), ('(', '('), ('mod', 'mod'), ('1024', '1024'), (')', ')'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'messag'), ('Digest', 'digest'), ('Generation', 'generat'), ('using', 'use'), ('SHA', 'sha'), ('-512', '-512'), ('Message', 'messag'), ('(', '('), ('L', 'l'), ('bit', 'bit'), (')', ')'), ('10000…0', '10000…0'), ('L', 'l'), ('M1', 'm1'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('M2', 'm2'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('MN', 'mn'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('+', '+'), ('H1', 'h1'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('IV=H0', 'iv=h0'), ('F', 'f'), ('+', '+'), ('H2', 'h2'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('+', '+'), ('HN', 'hn'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('Message', 'messag'), ('Digest', 'digest'), ('Generation', 'generat'), ('using', 'use'), ('SHA', 'sha'), ('-512', '-512'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-1', '-1'), ('Append', 'append'), ('Padding', 'pad'), ('Bits', 'bit'), ('The', 'the'), ('message', 'messag'), ('padded', 'pad'), ('length', 'length'), ('congruent', 'congruent'), ('896', '896'), ('modulo', 'modulo'), ('1024', '1024'), ('[', '['), ('length', 'length'), ('≡', '≡'), ('896', '896'), ('(', '('), ('mod', 'mod'), ('1024', '1024'), (')', ')'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Message', 'Message'), ('Digest', 'Digest'), ('Generation', 'Generation'), ('using', 'using'), ('SHA', 'SHA'), ('-512', '-512'), ('Message', 'Message'), ('(', '('), ('L', 'L'), ('bit', 'bit'), (')', ')'), ('10000…0', '10000…0'), ('L', 'L'), ('M1', 'M1'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('M2', 'M2'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('MN', 'MN'), ('(', '('), ('1024', '1024'), ('bits', 'bit'), (')', ')'), ('F', 'F'), ('+', '+'), ('H1', 'H1'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('IV=H0', 'IV=H0'), ('F', 'F'), ('+', '+'), ('H2', 'H2'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('F', 'F'), ('+', '+'), ('HN', 'HN'), ('(', '('), ('512', '512'), ('bits', 'bit'), (')', ')'), ('Message', 'Message'), ('Digest', 'Digest'), ('Generation', 'Generation'), ('using', 'using'), ('SHA', 'SHA'), ('-512', '-512'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'Step'), ('-1', '-1'), ('Append', 'Append'), ('Padding', 'Padding'), ('Bits', 'Bits'), ('The', 'The'), ('message', 'message'), ('padded', 'padded'), ('length', 'length'), ('congruent', 'congruent'), ('896', '896'), ('modulo', 'modulo'), ('1024', '1024'), ('[', '['), ('length', 'length'), ('≡', '≡'), ('896', '896'), ('(', '('), ('mod', 'mod'), ('1024', '1024'), (')', ')'), (']', ']'), ('.', '.')]



============================ Sentence 35 =============================

Padding is always added, even if the message is already of the desired length. 


>> Tokens are: 
 ['Padding', 'always', 'added', ',', 'even', 'message', 'already', 'desired', 'length', '.']

>> Bigrams are: 
 [('Padding', 'always'), ('always', 'added'), ('added', ','), (',', 'even'), ('even', 'message'), ('message', 'already'), ('already', 'desired'), ('desired', 'length'), ('length', '.')]

>> Trigrams are: 
 [('Padding', 'always', 'added'), ('always', 'added', ','), ('added', ',', 'even'), (',', 'even', 'message'), ('even', 'message', 'already'), ('message', 'already', 'desired'), ('already', 'desired', 'length'), ('desired', 'length', '.')]

>> POS Tags are: 
 [('Padding', 'VBG'), ('always', 'RB'), ('added', 'VBN'), (',', ','), ('even', 'RB'), ('message', 'VB'), ('already', 'RB'), ('desired', 'JJ'), ('length', 'NN'), ('.', '.')]

 (S
  Padding/VBG
  always/RB
  added/VBN
  ,/,
  even/RB
  message/VB
  already/RB
  (NP desired/JJ length/NN)
  ./.) 


>> Noun Phrases are: 
 ['desired length']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Padding', 'pad'), ('always', 'alway'), ('added', 'ad'), (',', ','), ('even', 'even'), ('message', 'messag'), ('already', 'alreadi'), ('desired', 'desir'), ('length', 'length'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Padding', 'pad'), ('always', 'alway'), ('added', 'ad'), (',', ','), ('even', 'even'), ('message', 'messag'), ('already', 'alreadi'), ('desired', 'desir'), ('length', 'length'), ('.', '.')]

>> Lemmatization: 
 [('Padding', 'Padding'), ('always', 'always'), ('added', 'added'), (',', ','), ('even', 'even'), ('message', 'message'), ('already', 'already'), ('desired', 'desired'), ('length', 'length'), ('.', '.')]



============================ Sentence 36 =============================

Thus, the number of padding bits is in the range of 1 to 1024. 


>> Tokens are: 
 ['Thus', ',', 'number', 'padding', 'bits', 'range', '1', '1024', '.']

>> Bigrams are: 
 [('Thus', ','), (',', 'number'), ('number', 'padding'), ('padding', 'bits'), ('bits', 'range'), ('range', '1'), ('1', '1024'), ('1024', '.')]

>> Trigrams are: 
 [('Thus', ',', 'number'), (',', 'number', 'padding'), ('number', 'padding', 'bits'), ('padding', 'bits', 'range'), ('bits', 'range', '1'), ('range', '1', '1024'), ('1', '1024', '.')]

>> POS Tags are: 
 [('Thus', 'RB'), (',', ','), ('number', 'NN'), ('padding', 'VBG'), ('bits', 'NNS'), ('range', 'VBP'), ('1', 'CD'), ('1024', 'CD'), ('.', '.')]

 (S
  Thus/RB
  ,/,
  (NP number/NN)
  padding/VBG
  (NP bits/NNS)
  range/VBP
  1/CD
  1024/CD
  ./.) 


>> Noun Phrases are: 
 ['number', 'bits']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Thus', 'thu'), (',', ','), ('number', 'number'), ('padding', 'pad'), ('bits', 'bit'), ('range', 'rang'), ('1', '1'), ('1024', '1024'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Thus', 'thus'), (',', ','), ('number', 'number'), ('padding', 'pad'), ('bits', 'bit'), ('range', 'rang'), ('1', '1'), ('1024', '1024'), ('.', '.')]

>> Lemmatization: 
 [('Thus', 'Thus'), (',', ','), ('number', 'number'), ('padding', 'padding'), ('bits', 'bit'), ('range', 'range'), ('1', '1'), ('1024', '1024'), ('.', '.')]



============================ Sentence 37 =============================

The padding consists of a single 1 bit followed by the necessary number of 0 bits. 


>> Tokens are: 
 ['The', 'padding', 'consists', 'single', '1', 'bit', 'followed', 'necessary', 'number', '0', 'bits', '.']

>> Bigrams are: 
 [('The', 'padding'), ('padding', 'consists'), ('consists', 'single'), ('single', '1'), ('1', 'bit'), ('bit', 'followed'), ('followed', 'necessary'), ('necessary', 'number'), ('number', '0'), ('0', 'bits'), ('bits', '.')]

>> Trigrams are: 
 [('The', 'padding', 'consists'), ('padding', 'consists', 'single'), ('consists', 'single', '1'), ('single', '1', 'bit'), ('1', 'bit', 'followed'), ('bit', 'followed', 'necessary'), ('followed', 'necessary', 'number'), ('necessary', 'number', '0'), ('number', '0', 'bits'), ('0', 'bits', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('padding', 'NN'), ('consists', 'VBZ'), ('single', 'JJ'), ('1', 'CD'), ('bit', 'NN'), ('followed', 'VBD'), ('necessary', 'JJ'), ('number', 'NN'), ('0', 'CD'), ('bits', 'NNS'), ('.', '.')]

 (S
  (NP The/DT padding/NN)
  consists/VBZ
  single/JJ
  1/CD
  (NP bit/NN)
  followed/VBD
  (NP necessary/JJ number/NN)
  0/CD
  (NP bits/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The padding', 'bit', 'necessary number', 'bits']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('padding', 'pad'), ('consists', 'consist'), ('single', 'singl'), ('1', '1'), ('bit', 'bit'), ('followed', 'follow'), ('necessary', 'necessari'), ('number', 'number'), ('0', '0'), ('bits', 'bit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('padding', 'pad'), ('consists', 'consist'), ('single', 'singl'), ('1', '1'), ('bit', 'bit'), ('followed', 'follow'), ('necessary', 'necessari'), ('number', 'number'), ('0', '0'), ('bits', 'bit'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('padding', 'padding'), ('consists', 'consists'), ('single', 'single'), ('1', '1'), ('bit', 'bit'), ('followed', 'followed'), ('necessary', 'necessary'), ('number', 'number'), ('0', '0'), ('bits', 'bit'), ('.', '.')]



============================ Sentence 38 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Step -2 Append Length A block of 128 bits is appended to the message. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step', '-2', 'Append', 'Length', 'A', 'block', '128', 'bits', 'appended', 'message', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step'), ('Step', '-2'), ('-2', 'Append'), ('Append', 'Length'), ('Length', 'A'), ('A', 'block'), ('block', '128'), ('128', 'bits'), ('bits', 'appended'), ('appended', 'message'), ('message', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step'), ('›', 'Step', '-2'), ('Step', '-2', 'Append'), ('-2', 'Append', 'Length'), ('Append', 'Length', 'A'), ('Length', 'A', 'block'), ('A', 'block', '128'), ('block', '128', 'bits'), ('128', 'bits', 'appended'), ('bits', 'appended', 'message'), ('appended', 'message', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step', 'NNP'), ('-2', 'NNP'), ('Append', 'NNP'), ('Length', 'NNP'), ('A', 'NNP'), ('block', 'NN'), ('128', 'CD'), ('bits', 'NNS'), ('appended', 'VBN'), ('message', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Step/NNP -2/NNP Append/NNP Length/NNP A/NNP block/NN)
  128/CD
  (NP bits/NNS)
  appended/VBN
  (NP message/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Step -2 Append Length A block', 'bits', 'message']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Step -2 Append Length')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-2', '-2'), ('Append', 'append'), ('Length', 'length'), ('A', 'a'), ('block', 'block'), ('128', '128'), ('bits', 'bit'), ('appended', 'append'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-2', '-2'), ('Append', 'append'), ('Length', 'length'), ('A', 'a'), ('block', 'block'), ('128', '128'), ('bits', 'bit'), ('appended', 'append'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'Step'), ('-2', '-2'), ('Append', 'Append'), ('Length', 'Length'), ('A', 'A'), ('block', 'block'), ('128', '128'), ('bits', 'bit'), ('appended', 'appended'), ('message', 'message'), ('.', '.')]



============================ Sentence 39 =============================

This block is treated as an unsigned 128-bit integer (most significant byte first) and contains the length of the original message (before the padding). 


>> Tokens are: 
 ['This', 'block', 'treated', 'unsigned', '128-bit', 'integer', '(', 'significant', 'byte', 'first', ')', 'contains', 'length', 'original', 'message', '(', 'padding', ')', '.']

>> Bigrams are: 
 [('This', 'block'), ('block', 'treated'), ('treated', 'unsigned'), ('unsigned', '128-bit'), ('128-bit', 'integer'), ('integer', '('), ('(', 'significant'), ('significant', 'byte'), ('byte', 'first'), ('first', ')'), (')', 'contains'), ('contains', 'length'), ('length', 'original'), ('original', 'message'), ('message', '('), ('(', 'padding'), ('padding', ')'), (')', '.')]

>> Trigrams are: 
 [('This', 'block', 'treated'), ('block', 'treated', 'unsigned'), ('treated', 'unsigned', '128-bit'), ('unsigned', '128-bit', 'integer'), ('128-bit', 'integer', '('), ('integer', '(', 'significant'), ('(', 'significant', 'byte'), ('significant', 'byte', 'first'), ('byte', 'first', ')'), ('first', ')', 'contains'), (')', 'contains', 'length'), ('contains', 'length', 'original'), ('length', 'original', 'message'), ('original', 'message', '('), ('message', '(', 'padding'), ('(', 'padding', ')'), ('padding', ')', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('block', 'NN'), ('treated', 'VBD'), ('unsigned', 'JJ'), ('128-bit', 'JJ'), ('integer', 'NN'), ('(', '('), ('significant', 'JJ'), ('byte', 'NN'), ('first', 'RB'), (')', ')'), ('contains', 'VBZ'), ('length', 'JJ'), ('original', 'JJ'), ('message', 'NN'), ('(', '('), ('padding', 'VBG'), (')', ')'), ('.', '.')]

 (S
  (NP This/DT block/NN)
  treated/VBD
  (NP unsigned/JJ 128-bit/JJ integer/NN)
  (/(
  (NP significant/JJ byte/NN)
  first/RB
  )/)
  contains/VBZ
  (NP length/JJ original/JJ message/NN)
  (/(
  padding/VBG
  )/)
  ./.) 


>> Noun Phrases are: 
 ['This block', 'unsigned 128-bit integer', 'significant byte', 'length original message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('block', 'block'), ('treated', 'treat'), ('unsigned', 'unsign'), ('128-bit', '128-bit'), ('integer', 'integ'), ('(', '('), ('significant', 'signific'), ('byte', 'byte'), ('first', 'first'), (')', ')'), ('contains', 'contain'), ('length', 'length'), ('original', 'origin'), ('message', 'messag'), ('(', '('), ('padding', 'pad'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('block', 'block'), ('treated', 'treat'), ('unsigned', 'unsign'), ('128-bit', '128-bit'), ('integer', 'integ'), ('(', '('), ('significant', 'signific'), ('byte', 'byte'), ('first', 'first'), (')', ')'), ('contains', 'contain'), ('length', 'length'), ('original', 'origin'), ('message', 'messag'), ('(', '('), ('padding', 'pad'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('block', 'block'), ('treated', 'treated'), ('unsigned', 'unsigned'), ('128-bit', '128-bit'), ('integer', 'integer'), ('(', '('), ('significant', 'significant'), ('byte', 'byte'), ('first', 'first'), (')', ')'), ('contains', 'contains'), ('length', 'length'), ('original', 'original'), ('message', 'message'), ('(', '('), ('padding', 'padding'), (')', ')'), ('.', '.')]



============================ Sentence 40 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Step -3 Initialize hash buffer The outcome of the first two steps produces a message that is an integer multiple of 1024 bits in length. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step', '-3', 'Initialize', 'hash', 'buffer', 'The', 'outcome', 'first', 'two', 'steps', 'produces', 'message', 'integer', 'multiple', '1024', 'bits', 'length', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step'), ('Step', '-3'), ('-3', 'Initialize'), ('Initialize', 'hash'), ('hash', 'buffer'), ('buffer', 'The'), ('The', 'outcome'), ('outcome', 'first'), ('first', 'two'), ('two', 'steps'), ('steps', 'produces'), ('produces', 'message'), ('message', 'integer'), ('integer', 'multiple'), ('multiple', '1024'), ('1024', 'bits'), ('bits', 'length'), ('length', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step'), ('›', 'Step', '-3'), ('Step', '-3', 'Initialize'), ('-3', 'Initialize', 'hash'), ('Initialize', 'hash', 'buffer'), ('hash', 'buffer', 'The'), ('buffer', 'The', 'outcome'), ('The', 'outcome', 'first'), ('outcome', 'first', 'two'), ('first', 'two', 'steps'), ('two', 'steps', 'produces'), ('steps', 'produces', 'message'), ('produces', 'message', 'integer'), ('message', 'integer', 'multiple'), ('integer', 'multiple', '1024'), ('multiple', '1024', 'bits'), ('1024', 'bits', 'length'), ('bits', 'length', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step', 'NNP'), ('-3', 'NNP'), ('Initialize', 'NNP'), ('hash', 'NN'), ('buffer', 'VBP'), ('The', 'DT'), ('outcome', 'NN'), ('first', 'RB'), ('two', 'CD'), ('steps', 'NNS'), ('produces', 'VBZ'), ('message', 'NN'), ('integer', 'NN'), ('multiple', 'JJ'), ('1024', 'CD'), ('bits', 'NNS'), ('length', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Step/NNP -3/NNP Initialize/NNP hash/NN)
  buffer/VBP
  (NP The/DT outcome/NN)
  first/RB
  two/CD
  (NP steps/NNS)
  produces/VBZ
  (NP message/NN integer/NN)
  multiple/JJ
  1024/CD
  (NP bits/NNS length/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Step -3 Initialize hash', 'The outcome', 'steps', 'message integer', 'bits length']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Step -3 Initialize')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-3', '-3'), ('Initialize', 'initi'), ('hash', 'hash'), ('buffer', 'buffer'), ('The', 'the'), ('outcome', 'outcom'), ('first', 'first'), ('two', 'two'), ('steps', 'step'), ('produces', 'produc'), ('message', 'messag'), ('integer', 'integ'), ('multiple', 'multipl'), ('1024', '1024'), ('bits', 'bit'), ('length', 'length'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-3', '-3'), ('Initialize', 'initi'), ('hash', 'hash'), ('buffer', 'buffer'), ('The', 'the'), ('outcome', 'outcom'), ('first', 'first'), ('two', 'two'), ('steps', 'step'), ('produces', 'produc'), ('message', 'messag'), ('integer', 'integ'), ('multiple', 'multipl'), ('1024', '1024'), ('bits', 'bit'), ('length', 'length'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'Step'), ('-3', '-3'), ('Initialize', 'Initialize'), ('hash', 'hash'), ('buffer', 'buffer'), ('The', 'The'), ('outcome', 'outcome'), ('first', 'first'), ('two', 'two'), ('steps', 'step'), ('produces', 'produce'), ('message', 'message'), ('integer', 'integer'), ('multiple', 'multiple'), ('1024', '1024'), ('bits', 'bit'), ('length', 'length'), ('.', '.')]



============================ Sentence 41 =============================

the expanded message is represented as the sequence of 1024-bit blocks M1 , M2, … , MN, so that the total length of expanded message is N X 1024 bits. 


>> Tokens are: 
 ['expanded', 'message', 'represented', 'sequence', '1024-bit', 'blocks', 'M1', ',', 'M2', ',', '…', ',', 'MN', ',', 'total', 'length', 'expanded', 'message', 'N', 'X', '1024', 'bits', '.']

>> Bigrams are: 
 [('expanded', 'message'), ('message', 'represented'), ('represented', 'sequence'), ('sequence', '1024-bit'), ('1024-bit', 'blocks'), ('blocks', 'M1'), ('M1', ','), (',', 'M2'), ('M2', ','), (',', '…'), ('…', ','), (',', 'MN'), ('MN', ','), (',', 'total'), ('total', 'length'), ('length', 'expanded'), ('expanded', 'message'), ('message', 'N'), ('N', 'X'), ('X', '1024'), ('1024', 'bits'), ('bits', '.')]

>> Trigrams are: 
 [('expanded', 'message', 'represented'), ('message', 'represented', 'sequence'), ('represented', 'sequence', '1024-bit'), ('sequence', '1024-bit', 'blocks'), ('1024-bit', 'blocks', 'M1'), ('blocks', 'M1', ','), ('M1', ',', 'M2'), (',', 'M2', ','), ('M2', ',', '…'), (',', '…', ','), ('…', ',', 'MN'), (',', 'MN', ','), ('MN', ',', 'total'), (',', 'total', 'length'), ('total', 'length', 'expanded'), ('length', 'expanded', 'message'), ('expanded', 'message', 'N'), ('message', 'N', 'X'), ('N', 'X', '1024'), ('X', '1024', 'bits'), ('1024', 'bits', '.')]

>> POS Tags are: 
 [('expanded', 'VBN'), ('message', 'NN'), ('represented', 'VBN'), ('sequence', 'NN'), ('1024-bit', 'JJ'), ('blocks', 'NNS'), ('M1', 'NNP'), (',', ','), ('M2', 'NNP'), (',', ','), ('…', 'NNP'), (',', ','), ('MN', 'NNP'), (',', ','), ('total', 'JJ'), ('length', 'NN'), ('expanded', 'VBD'), ('message', 'NN'), ('N', 'NNP'), ('X', 'NNP'), ('1024', 'CD'), ('bits', 'NNS'), ('.', '.')]

 (S
  expanded/VBN
  (NP message/NN)
  represented/VBN
  (NP sequence/NN)
  (NP 1024-bit/JJ blocks/NNS M1/NNP)
  ,/,
  (NP M2/NNP)
  ,/,
  (NP …/NNP)
  ,/,
  (NP MN/NNP)
  ,/,
  (NP total/JJ length/NN)
  expanded/VBD
  (NP message/NN N/NNP X/NNP)
  1024/CD
  (NP bits/NNS)
  ./.) 


>> Noun Phrases are: 
 ['message', 'sequence', '1024-bit blocks M1', 'M2', '…', 'MN', 'total length', 'message N X', 'bits']

>> Named Entities are: 
 [('GPE', 'M2'), ('ORGANIZATION', 'MN')] 

>> Stemming using Porter Stemmer: 
 [('expanded', 'expand'), ('message', 'messag'), ('represented', 'repres'), ('sequence', 'sequenc'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('M1', 'm1'), (',', ','), ('M2', 'm2'), (',', ','), ('…', '…'), (',', ','), ('MN', 'mn'), (',', ','), ('total', 'total'), ('length', 'length'), ('expanded', 'expand'), ('message', 'messag'), ('N', 'n'), ('X', 'x'), ('1024', '1024'), ('bits', 'bit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('expanded', 'expand'), ('message', 'messag'), ('represented', 'repres'), ('sequence', 'sequenc'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('M1', 'm1'), (',', ','), ('M2', 'm2'), (',', ','), ('…', '…'), (',', ','), ('MN', 'mn'), (',', ','), ('total', 'total'), ('length', 'length'), ('expanded', 'expand'), ('message', 'messag'), ('N', 'n'), ('X', 'x'), ('1024', '1024'), ('bits', 'bit'), ('.', '.')]

>> Lemmatization: 
 [('expanded', 'expanded'), ('message', 'message'), ('represented', 'represented'), ('sequence', 'sequence'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('M1', 'M1'), (',', ','), ('M2', 'M2'), (',', ','), ('…', '…'), (',', ','), ('MN', 'MN'), (',', ','), ('total', 'total'), ('length', 'length'), ('expanded', 'expanded'), ('message', 'message'), ('N', 'N'), ('X', 'X'), ('1024', '1024'), ('bits', 'bit'), ('.', '.')]



============================ Sentence 42 =============================

A 512-bit buffer is used to hold intermediate and final results of the hash function. 


>> Tokens are: 
 ['A', '512-bit', 'buffer', 'used', 'hold', 'intermediate', 'final', 'results', 'hash', 'function', '.']

>> Bigrams are: 
 [('A', '512-bit'), ('512-bit', 'buffer'), ('buffer', 'used'), ('used', 'hold'), ('hold', 'intermediate'), ('intermediate', 'final'), ('final', 'results'), ('results', 'hash'), ('hash', 'function'), ('function', '.')]

>> Trigrams are: 
 [('A', '512-bit', 'buffer'), ('512-bit', 'buffer', 'used'), ('buffer', 'used', 'hold'), ('used', 'hold', 'intermediate'), ('hold', 'intermediate', 'final'), ('intermediate', 'final', 'results'), ('final', 'results', 'hash'), ('results', 'hash', 'function'), ('hash', 'function', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('512-bit', 'JJ'), ('buffer', 'NN'), ('used', 'VBN'), ('hold', 'NN'), ('intermediate', 'JJ'), ('final', 'JJ'), ('results', 'NNS'), ('hash', 'JJ'), ('function', 'NN'), ('.', '.')]

 (S
  (NP A/DT 512-bit/JJ buffer/NN)
  used/VBN
  (NP hold/NN)
  (NP intermediate/JJ final/JJ results/NNS)
  (NP hash/JJ function/NN)
  ./.) 


>> Noun Phrases are: 
 ['A 512-bit buffer', 'hold', 'intermediate final results', 'hash function']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('512-bit', '512-bit'), ('buffer', 'buffer'), ('used', 'use'), ('hold', 'hold'), ('intermediate', 'intermedi'), ('final', 'final'), ('results', 'result'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('512-bit', '512-bit'), ('buffer', 'buffer'), ('used', 'use'), ('hold', 'hold'), ('intermediate', 'intermedi'), ('final', 'final'), ('results', 'result'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('512-bit', '512-bit'), ('buffer', 'buffer'), ('used', 'used'), ('hold', 'hold'), ('intermediate', 'intermediate'), ('final', 'final'), ('results', 'result'), ('hash', 'hash'), ('function', 'function'), ('.', '.')]



============================ Sentence 43 =============================

The buffer can be represented as eight 64-bit registers (a, b, c, d, e, f, g, h). 


>> Tokens are: 
 ['The', 'buffer', 'represented', 'eight', '64-bit', 'registers', '(', ',', 'b', ',', 'c', ',', ',', 'e', ',', 'f', ',', 'g', ',', 'h', ')', '.']

>> Bigrams are: 
 [('The', 'buffer'), ('buffer', 'represented'), ('represented', 'eight'), ('eight', '64-bit'), ('64-bit', 'registers'), ('registers', '('), ('(', ','), (',', 'b'), ('b', ','), (',', 'c'), ('c', ','), (',', ','), (',', 'e'), ('e', ','), (',', 'f'), ('f', ','), (',', 'g'), ('g', ','), (',', 'h'), ('h', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'buffer', 'represented'), ('buffer', 'represented', 'eight'), ('represented', 'eight', '64-bit'), ('eight', '64-bit', 'registers'), ('64-bit', 'registers', '('), ('registers', '(', ','), ('(', ',', 'b'), (',', 'b', ','), ('b', ',', 'c'), (',', 'c', ','), ('c', ',', ','), (',', ',', 'e'), (',', 'e', ','), ('e', ',', 'f'), (',', 'f', ','), ('f', ',', 'g'), (',', 'g', ','), ('g', ',', 'h'), (',', 'h', ')'), ('h', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('buffer', 'NN'), ('represented', 'VBD'), ('eight', 'CD'), ('64-bit', 'JJ'), ('registers', 'NNS'), ('(', '('), (',', ','), ('b', 'NN'), (',', ','), ('c', 'NN'), (',', ','), (',', ','), ('e', 'NN'), (',', ','), ('f', 'NN'), (',', ','), ('g', 'NN'), (',', ','), ('h', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT buffer/NN)
  represented/VBD
  eight/CD
  (NP 64-bit/JJ registers/NNS)
  (/(
  ,/,
  (NP b/NN)
  ,/,
  (NP c/NN)
  ,/,
  ,/,
  (NP e/NN)
  ,/,
  (NP f/NN)
  ,/,
  (NP g/NN)
  ,/,
  (NP h/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The buffer', '64-bit registers', 'b', 'c', 'e', 'f', 'g', 'h']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('buffer', 'buffer'), ('represented', 'repres'), ('eight', 'eight'), ('64-bit', '64-bit'), ('registers', 'regist'), ('(', '('), (',', ','), ('b', 'b'), (',', ','), ('c', 'c'), (',', ','), (',', ','), ('e', 'e'), (',', ','), ('f', 'f'), (',', ','), ('g', 'g'), (',', ','), ('h', 'h'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('buffer', 'buffer'), ('represented', 'repres'), ('eight', 'eight'), ('64-bit', '64-bit'), ('registers', 'regist'), ('(', '('), (',', ','), ('b', 'b'), (',', ','), ('c', 'c'), (',', ','), (',', ','), ('e', 'e'), (',', ','), ('f', 'f'), (',', ','), ('g', 'g'), (',', ','), ('h', 'h'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('buffer', 'buffer'), ('represented', 'represented'), ('eight', 'eight'), ('64-bit', '64-bit'), ('registers', 'register'), ('(', '('), (',', ','), ('b', 'b'), (',', ','), ('c', 'c'), (',', ','), (',', ','), ('e', 'e'), (',', ','), ('f', 'f'), (',', ','), ('g', 'g'), (',', ','), ('h', 'h'), (')', ')'), ('.', '.')]



============================ Sentence 44 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Step -4 Process message in 1024-bit (128-word) blocks The heart of the algorithm is a module that consists of 80 rounds; this module is labelled F  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›   SHA-512 Processing of a Single 1024-Bit Block   SHA-512 Processing of a Single 1024-Bit Block Message schedule Mi Hi-1 a b c d e f g e 64 Round 0 K0 a b c d e f g e 64 Round 79 K79    W0 W79 + + + + + + + +  Hi  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  SHA-512 Processing of a Single 1024-Bit Block Each round takes as input the 512-bit buffer value, abcdefgh, and updates the contents of the buffer. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step', '-4', 'Process', 'message', '1024-bit', '(', '128-word', ')', 'blocks', 'The', 'heart', 'algorithm', 'module', 'consists', '80', 'rounds', ';', 'module', 'labelled', 'F', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SHA-512', 'Processing', 'Single', '1024-Bit', 'Block', 'SHA-512', 'Processing', 'Single', '1024-Bit', 'Block', 'Message', 'schedule', 'Mi', 'Hi-1', 'b', 'c', 'e', 'f', 'g', 'e', '64', 'Round', '0', 'K0', 'b', 'c', 'e', 'f', 'g', 'e', '64', 'Round', '79', 'K79', 'W0', 'W79', '+', '+', '+', '+', '+', '+', '+', '+', 'Hi', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SHA-512', 'Processing', 'Single', '1024-Bit', 'Block', 'Each', 'round', 'takes', 'input', '512-bit', 'buffer', 'value', ',', 'abcdefgh', ',', 'updates', 'contents', 'buffer', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step'), ('Step', '-4'), ('-4', 'Process'), ('Process', 'message'), ('message', '1024-bit'), ('1024-bit', '('), ('(', '128-word'), ('128-word', ')'), (')', 'blocks'), ('blocks', 'The'), ('The', 'heart'), ('heart', 'algorithm'), ('algorithm', 'module'), ('module', 'consists'), ('consists', '80'), ('80', 'rounds'), ('rounds', ';'), (';', 'module'), ('module', 'labelled'), ('labelled', 'F'), ('F', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SHA-512'), ('SHA-512', 'Processing'), ('Processing', 'Single'), ('Single', '1024-Bit'), ('1024-Bit', 'Block'), ('Block', 'SHA-512'), ('SHA-512', 'Processing'), ('Processing', 'Single'), ('Single', '1024-Bit'), ('1024-Bit', 'Block'), ('Block', 'Message'), ('Message', 'schedule'), ('schedule', 'Mi'), ('Mi', 'Hi-1'), ('Hi-1', 'b'), ('b', 'c'), ('c', 'e'), ('e', 'f'), ('f', 'g'), ('g', 'e'), ('e', '64'), ('64', 'Round'), ('Round', '0'), ('0', 'K0'), ('K0', 'b'), ('b', 'c'), ('c', 'e'), ('e', 'f'), ('f', 'g'), ('g', 'e'), ('e', '64'), ('64', 'Round'), ('Round', '79'), ('79', 'K79'), ('K79', 'W0'), ('W0', 'W79'), ('W79', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', 'Hi'), ('Hi', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SHA-512'), ('SHA-512', 'Processing'), ('Processing', 'Single'), ('Single', '1024-Bit'), ('1024-Bit', 'Block'), ('Block', 'Each'), ('Each', 'round'), ('round', 'takes'), ('takes', 'input'), ('input', '512-bit'), ('512-bit', 'buffer'), ('buffer', 'value'), ('value', ','), (',', 'abcdefgh'), ('abcdefgh', ','), (',', 'updates'), ('updates', 'contents'), ('contents', 'buffer'), ('buffer', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step'), ('›', 'Step', '-4'), ('Step', '-4', 'Process'), ('-4', 'Process', 'message'), ('Process', 'message', '1024-bit'), ('message', '1024-bit', '('), ('1024-bit', '(', '128-word'), ('(', '128-word', ')'), ('128-word', ')', 'blocks'), (')', 'blocks', 'The'), ('blocks', 'The', 'heart'), ('The', 'heart', 'algorithm'), ('heart', 'algorithm', 'module'), ('algorithm', 'module', 'consists'), ('module', 'consists', '80'), ('consists', '80', 'rounds'), ('80', 'rounds', ';'), ('rounds', ';', 'module'), (';', 'module', 'labelled'), ('module', 'labelled', 'F'), ('labelled', 'F', 'Unit-5'), ('F', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SHA-512'), ('›', 'SHA-512', 'Processing'), ('SHA-512', 'Processing', 'Single'), ('Processing', 'Single', '1024-Bit'), ('Single', '1024-Bit', 'Block'), ('1024-Bit', 'Block', 'SHA-512'), ('Block', 'SHA-512', 'Processing'), ('SHA-512', 'Processing', 'Single'), ('Processing', 'Single', '1024-Bit'), ('Single', '1024-Bit', 'Block'), ('1024-Bit', 'Block', 'Message'), ('Block', 'Message', 'schedule'), ('Message', 'schedule', 'Mi'), ('schedule', 'Mi', 'Hi-1'), ('Mi', 'Hi-1', 'b'), ('Hi-1', 'b', 'c'), ('b', 'c', 'e'), ('c', 'e', 'f'), ('e', 'f', 'g'), ('f', 'g', 'e'), ('g', 'e', '64'), ('e', '64', 'Round'), ('64', 'Round', '0'), ('Round', '0', 'K0'), ('0', 'K0', 'b'), ('K0', 'b', 'c'), ('b', 'c', 'e'), ('c', 'e', 'f'), ('e', 'f', 'g'), ('f', 'g', 'e'), ('g', 'e', '64'), ('e', '64', 'Round'), ('64', 'Round', '79'), ('Round', '79', 'K79'), ('79', 'K79', 'W0'), ('K79', 'W0', 'W79'), ('W0', 'W79', '+'), ('W79', '+', '+'), ('+', '+', '+'), ('+', '+', '+'), ('+', '+', '+'), ('+', '+', '+'), ('+', '+', '+'), ('+', '+', '+'), ('+', '+', 'Hi'), ('+', 'Hi', 'Unit-5'), ('Hi', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SHA-512'), ('›', 'SHA-512', 'Processing'), ('SHA-512', 'Processing', 'Single'), ('Processing', 'Single', '1024-Bit'), ('Single', '1024-Bit', 'Block'), ('1024-Bit', 'Block', 'Each'), ('Block', 'Each', 'round'), ('Each', 'round', 'takes'), ('round', 'takes', 'input'), ('takes', 'input', '512-bit'), ('input', '512-bit', 'buffer'), ('512-bit', 'buffer', 'value'), ('buffer', 'value', ','), ('value', ',', 'abcdefgh'), (',', 'abcdefgh', ','), ('abcdefgh', ',', 'updates'), (',', 'updates', 'contents'), ('updates', 'contents', 'buffer'), ('contents', 'buffer', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step', 'NNP'), ('-4', 'NNP'), ('Process', 'NNP'), ('message', 'NN'), ('1024-bit', 'JJ'), ('(', '('), ('128-word', 'JJ'), (')', ')'), ('blocks', 'VBZ'), ('The', 'DT'), ('heart', 'NN'), ('algorithm', 'NN'), ('module', 'NN'), ('consists', 'VBZ'), ('80', 'CD'), ('rounds', 'NNS'), (';', ':'), ('module', 'NN'), ('labelled', 'VBD'), ('F', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SHA-512', 'NNP'), ('Processing', 'NNP'), ('Single', 'NNP'), ('1024-Bit', 'JJ'), ('Block', 'NNP'), ('SHA-512', 'NNP'), ('Processing', 'NNP'), ('Single', 'NNP'), ('1024-Bit', 'JJ'), ('Block', 'NNP'), ('Message', 'NNP'), ('schedule', 'NN'), ('Mi', 'NNP'), ('Hi-1', 'NNP'), ('b', 'NN'), ('c', 'NN'), ('e', 'NN'), ('f', 'JJ'), ('g', 'NN'), ('e', 'VBZ'), ('64', 'CD'), ('Round', 'NNP'), ('0', 'CD'), ('K0', 'NNP'), ('b', 'NN'), ('c', 'NN'), ('e', 'NN'), ('f', 'JJ'), ('g', 'NN'), ('e', 'VBZ'), ('64', 'CD'), ('Round', 'NNP'), ('79', 'CD'), ('K79', 'NNP'), ('W0', 'NNP'), ('W79', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('Hi', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SHA-512', 'NNP'), ('Processing', 'NNP'), ('Single', 'NNP'), ('1024-Bit', 'JJ'), ('Block', 'NNP'), ('Each', 'DT'), ('round', 'NN'), ('takes', 'VBZ'), ('input', 'JJ'), ('512-bit', 'JJ'), ('buffer', 'NN'), ('value', 'NN'), (',', ','), ('abcdefgh', 'NN'), (',', ','), ('updates', 'VBZ'), ('contents', 'NNS'), ('buffer', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Step/NNP -4/NNP Process/NNP message/NN)
  1024-bit/JJ
  (/(
  128-word/JJ
  )/)
  blocks/VBZ
  (NP The/DT heart/NN algorithm/NN module/NN)
  consists/VBZ
  80/CD
  (NP rounds/NNS)
  ;/:
  (NP module/NN)
  labelled/VBD
  (NP
    F/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP SHA-512/NNP Processing/NNP Single/NNP)
  (NP 1024-Bit/JJ Block/NNP SHA-512/NNP Processing/NNP Single/NNP)
  (NP
    1024-Bit/JJ
    Block/NNP
    Message/NNP
    schedule/NN
    Mi/NNP
    Hi-1/NNP
    b/NN
    c/NN
    e/NN)
  (NP f/JJ g/NN)
  e/VBZ
  64/CD
  (NP Round/NNP)
  0/CD
  (NP K0/NNP b/NN c/NN e/NN)
  (NP f/JJ g/NN)
  e/VBZ
  64/CD
  (NP Round/NNP)
  79/CD
  (NP
    K79/NNP
    W0/NNP
    W79/NNP
    +/NNP
    +/NNP
    +/NNP
    +/NNP
    +/NNP
    +/NNP
    +/NNP
    +/NNP
    Hi/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP SHA-512/NNP Processing/NNP Single/NNP)
  (NP 1024-Bit/JJ Block/NNP)
  (NP Each/DT round/NN)
  takes/VBZ
  (NP input/JJ 512-bit/JJ buffer/NN value/NN)
  ,/,
  (NP abcdefgh/NN)
  ,/,
  updates/VBZ
  (NP contents/NNS buffer/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Step -4 Process message', 'The heart algorithm module', 'rounds', 'module', 'F Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› SHA-512 Processing Single', '1024-Bit Block SHA-512 Processing Single', '1024-Bit Block Message schedule Mi Hi-1 b c e', 'f g', 'Round', 'K0 b c e', 'f g', 'Round', 'K79 W0 W79 + + + + + + + + Hi Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› SHA-512 Processing Single', '1024-Bit Block', 'Each round', 'input 512-bit buffer value', 'abcdefgh', 'contents buffer']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Step -4'), ('PERSON', 'F Unit-5 Cryptographic Hash Functions Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Block'), ('PERSON', 'Block Message'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-4', '-4'), ('Process', 'process'), ('message', 'messag'), ('1024-bit', '1024-bit'), ('(', '('), ('128-word', '128-word'), (')', ')'), ('blocks', 'block'), ('The', 'the'), ('heart', 'heart'), ('algorithm', 'algorithm'), ('module', 'modul'), ('consists', 'consist'), ('80', '80'), ('rounds', 'round'), (';', ';'), ('module', 'modul'), ('labelled', 'label'), ('F', 'f'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Processing', 'process'), ('Single', 'singl'), ('1024-Bit', '1024-bit'), ('Block', 'block'), ('SHA-512', 'sha-512'), ('Processing', 'process'), ('Single', 'singl'), ('1024-Bit', '1024-bit'), ('Block', 'block'), ('Message', 'messag'), ('schedule', 'schedul'), ('Mi', 'mi'), ('Hi-1', 'hi-1'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('e', 'e'), ('64', '64'), ('Round', 'round'), ('0', '0'), ('K0', 'k0'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('e', 'e'), ('64', '64'), ('Round', 'round'), ('79', '79'), ('K79', 'k79'), ('W0', 'w0'), ('W79', 'w79'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('Hi', 'hi'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Processing', 'process'), ('Single', 'singl'), ('1024-Bit', '1024-bit'), ('Block', 'block'), ('Each', 'each'), ('round', 'round'), ('takes', 'take'), ('input', 'input'), ('512-bit', '512-bit'), ('buffer', 'buffer'), ('value', 'valu'), (',', ','), ('abcdefgh', 'abcdefgh'), (',', ','), ('updates', 'updat'), ('contents', 'content'), ('buffer', 'buffer'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('-4', '-4'), ('Process', 'process'), ('message', 'messag'), ('1024-bit', '1024-bit'), ('(', '('), ('128-word', '128-word'), (')', ')'), ('blocks', 'block'), ('The', 'the'), ('heart', 'heart'), ('algorithm', 'algorithm'), ('module', 'modul'), ('consists', 'consist'), ('80', '80'), ('rounds', 'round'), (';', ';'), ('module', 'modul'), ('labelled', 'label'), ('F', 'f'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Processing', 'process'), ('Single', 'singl'), ('1024-Bit', '1024-bit'), ('Block', 'block'), ('SHA-512', 'sha-512'), ('Processing', 'process'), ('Single', 'singl'), ('1024-Bit', '1024-bit'), ('Block', 'block'), ('Message', 'messag'), ('schedule', 'schedul'), ('Mi', 'mi'), ('Hi-1', 'hi-1'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('e', 'e'), ('64', '64'), ('Round', 'round'), ('0', '0'), ('K0', 'k0'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('e', 'e'), ('64', '64'), ('Round', 'round'), ('79', '79'), ('K79', 'k79'), ('W0', 'w0'), ('W79', 'w79'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('Hi', 'hi'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Processing', 'process'), ('Single', 'singl'), ('1024-Bit', '1024-bit'), ('Block', 'block'), ('Each', 'each'), ('round', 'round'), ('takes', 'take'), ('input', 'input'), ('512-bit', '512-bit'), ('buffer', 'buffer'), ('value', 'valu'), (',', ','), ('abcdefgh', 'abcdefgh'), (',', ','), ('updates', 'updat'), ('contents', 'content'), ('buffer', 'buffer'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'Step'), ('-4', '-4'), ('Process', 'Process'), ('message', 'message'), ('1024-bit', '1024-bit'), ('(', '('), ('128-word', '128-word'), (')', ')'), ('blocks', 'block'), ('The', 'The'), ('heart', 'heart'), ('algorithm', 'algorithm'), ('module', 'module'), ('consists', 'consists'), ('80', '80'), ('rounds', 'round'), (';', ';'), ('module', 'module'), ('labelled', 'labelled'), ('F', 'F'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'SHA-512'), ('Processing', 'Processing'), ('Single', 'Single'), ('1024-Bit', '1024-Bit'), ('Block', 'Block'), ('SHA-512', 'SHA-512'), ('Processing', 'Processing'), ('Single', 'Single'), ('1024-Bit', '1024-Bit'), ('Block', 'Block'), ('Message', 'Message'), ('schedule', 'schedule'), ('Mi', 'Mi'), ('Hi-1', 'Hi-1'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('e', 'e'), ('64', '64'), ('Round', 'Round'), ('0', '0'), ('K0', 'K0'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('e', 'e'), ('64', '64'), ('Round', 'Round'), ('79', '79'), ('K79', 'K79'), ('W0', 'W0'), ('W79', 'W79'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('+', '+'), ('Hi', 'Hi'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'SHA-512'), ('Processing', 'Processing'), ('Single', 'Single'), ('1024-Bit', '1024-Bit'), ('Block', 'Block'), ('Each', 'Each'), ('round', 'round'), ('takes', 'take'), ('input', 'input'), ('512-bit', '512-bit'), ('buffer', 'buffer'), ('value', 'value'), (',', ','), ('abcdefgh', 'abcdefgh'), (',', ','), ('updates', 'update'), ('contents', 'content'), ('buffer', 'buffer'), ('.', '.')]



============================ Sentence 45 =============================

At input to the first round, the buffer has the value of the intermediate hash value, Hi-1. 


>> Tokens are: 
 ['At', 'input', 'first', 'round', ',', 'buffer', 'value', 'intermediate', 'hash', 'value', ',', 'Hi-1', '.']

>> Bigrams are: 
 [('At', 'input'), ('input', 'first'), ('first', 'round'), ('round', ','), (',', 'buffer'), ('buffer', 'value'), ('value', 'intermediate'), ('intermediate', 'hash'), ('hash', 'value'), ('value', ','), (',', 'Hi-1'), ('Hi-1', '.')]

>> Trigrams are: 
 [('At', 'input', 'first'), ('input', 'first', 'round'), ('first', 'round', ','), ('round', ',', 'buffer'), (',', 'buffer', 'value'), ('buffer', 'value', 'intermediate'), ('value', 'intermediate', 'hash'), ('intermediate', 'hash', 'value'), ('hash', 'value', ','), ('value', ',', 'Hi-1'), (',', 'Hi-1', '.')]

>> POS Tags are: 
 [('At', 'IN'), ('input', 'NN'), ('first', 'RB'), ('round', 'NN'), (',', ','), ('buffer', 'VBP'), ('value', 'NN'), ('intermediate', 'JJ'), ('hash', 'NN'), ('value', 'NN'), (',', ','), ('Hi-1', 'NNP'), ('.', '.')]

 (S
  At/IN
  (NP input/NN)
  first/RB
  (NP round/NN)
  ,/,
  buffer/VBP
  (NP value/NN)
  (NP intermediate/JJ hash/NN value/NN)
  ,/,
  (NP Hi-1/NNP)
  ./.) 


>> Noun Phrases are: 
 ['input', 'round', 'value', 'intermediate hash value', 'Hi-1']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('At', 'at'), ('input', 'input'), ('first', 'first'), ('round', 'round'), (',', ','), ('buffer', 'buffer'), ('value', 'valu'), ('intermediate', 'intermedi'), ('hash', 'hash'), ('value', 'valu'), (',', ','), ('Hi-1', 'hi-1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('At', 'at'), ('input', 'input'), ('first', 'first'), ('round', 'round'), (',', ','), ('buffer', 'buffer'), ('value', 'valu'), ('intermediate', 'intermedi'), ('hash', 'hash'), ('value', 'valu'), (',', ','), ('Hi-1', 'hi-1'), ('.', '.')]

>> Lemmatization: 
 [('At', 'At'), ('input', 'input'), ('first', 'first'), ('round', 'round'), (',', ','), ('buffer', 'buffer'), ('value', 'value'), ('intermediate', 'intermediate'), ('hash', 'hash'), ('value', 'value'), (',', ','), ('Hi-1', 'Hi-1'), ('.', '.')]



============================ Sentence 46 =============================

Each round t makes use of a 64-bit value Wt, derived from the current 1024-bit block being processed. 


>> Tokens are: 
 ['Each', 'round', 'makes', 'use', '64-bit', 'value', 'Wt', ',', 'derived', 'current', '1024-bit', 'block', 'processed', '.']

>> Bigrams are: 
 [('Each', 'round'), ('round', 'makes'), ('makes', 'use'), ('use', '64-bit'), ('64-bit', 'value'), ('value', 'Wt'), ('Wt', ','), (',', 'derived'), ('derived', 'current'), ('current', '1024-bit'), ('1024-bit', 'block'), ('block', 'processed'), ('processed', '.')]

>> Trigrams are: 
 [('Each', 'round', 'makes'), ('round', 'makes', 'use'), ('makes', 'use', '64-bit'), ('use', '64-bit', 'value'), ('64-bit', 'value', 'Wt'), ('value', 'Wt', ','), ('Wt', ',', 'derived'), (',', 'derived', 'current'), ('derived', 'current', '1024-bit'), ('current', '1024-bit', 'block'), ('1024-bit', 'block', 'processed'), ('block', 'processed', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('round', 'NN'), ('makes', 'VBZ'), ('use', 'IN'), ('64-bit', 'JJ'), ('value', 'NN'), ('Wt', 'NNP'), (',', ','), ('derived', 'VBD'), ('current', 'JJ'), ('1024-bit', 'JJ'), ('block', 'NN'), ('processed', 'VBD'), ('.', '.')]

 (S
  (NP Each/DT round/NN)
  makes/VBZ
  use/IN
  (NP 64-bit/JJ value/NN Wt/NNP)
  ,/,
  derived/VBD
  (NP current/JJ 1024-bit/JJ block/NN)
  processed/VBD
  ./.) 


>> Noun Phrases are: 
 ['Each round', '64-bit value Wt', 'current 1024-bit block']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('round', 'round'), ('makes', 'make'), ('use', 'use'), ('64-bit', '64-bit'), ('value', 'valu'), ('Wt', 'wt'), (',', ','), ('derived', 'deriv'), ('current', 'current'), ('1024-bit', '1024-bit'), ('block', 'block'), ('processed', 'process'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('round', 'round'), ('makes', 'make'), ('use', 'use'), ('64-bit', '64-bit'), ('value', 'valu'), ('Wt', 'wt'), (',', ','), ('derived', 'deriv'), ('current', 'current'), ('1024-bit', '1024-bit'), ('block', 'block'), ('processed', 'process'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('round', 'round'), ('makes', 'make'), ('use', 'use'), ('64-bit', '64-bit'), ('value', 'value'), ('Wt', 'Wt'), (',', ','), ('derived', 'derived'), ('current', 'current'), ('1024-bit', '1024-bit'), ('block', 'block'), ('processed', 'processed'), ('.', '.')]



============================ Sentence 47 =============================

The output of the eightieth round is added to the input to the first round (Hi-1) to produce Hi. 


>> Tokens are: 
 ['The', 'output', 'eightieth', 'round', 'added', 'input', 'first', 'round', '(', 'Hi-1', ')', 'produce', 'Hi', '.']

>> Bigrams are: 
 [('The', 'output'), ('output', 'eightieth'), ('eightieth', 'round'), ('round', 'added'), ('added', 'input'), ('input', 'first'), ('first', 'round'), ('round', '('), ('(', 'Hi-1'), ('Hi-1', ')'), (')', 'produce'), ('produce', 'Hi'), ('Hi', '.')]

>> Trigrams are: 
 [('The', 'output', 'eightieth'), ('output', 'eightieth', 'round'), ('eightieth', 'round', 'added'), ('round', 'added', 'input'), ('added', 'input', 'first'), ('input', 'first', 'round'), ('first', 'round', '('), ('round', '(', 'Hi-1'), ('(', 'Hi-1', ')'), ('Hi-1', ')', 'produce'), (')', 'produce', 'Hi'), ('produce', 'Hi', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('output', 'NN'), ('eightieth', 'VBP'), ('round', 'NN'), ('added', 'VBD'), ('input', 'NN'), ('first', 'RB'), ('round', 'NN'), ('(', '('), ('Hi-1', 'NNP'), (')', ')'), ('produce', 'VBP'), ('Hi', 'NNP'), ('.', '.')]

 (S
  (NP The/DT output/NN)
  eightieth/VBP
  (NP round/NN)
  added/VBD
  (NP input/NN)
  first/RB
  (NP round/NN)
  (/(
  (NP Hi-1/NNP)
  )/)
  produce/VBP
  (NP Hi/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The output', 'round', 'input', 'round', 'Hi-1', 'Hi']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('output', 'output'), ('eightieth', 'eightieth'), ('round', 'round'), ('added', 'ad'), ('input', 'input'), ('first', 'first'), ('round', 'round'), ('(', '('), ('Hi-1', 'hi-1'), (')', ')'), ('produce', 'produc'), ('Hi', 'hi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('output', 'output'), ('eightieth', 'eightieth'), ('round', 'round'), ('added', 'ad'), ('input', 'input'), ('first', 'first'), ('round', 'round'), ('(', '('), ('Hi-1', 'hi-1'), (')', ')'), ('produce', 'produc'), ('Hi', 'hi'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('output', 'output'), ('eightieth', 'eightieth'), ('round', 'round'), ('added', 'added'), ('input', 'input'), ('first', 'first'), ('round', 'round'), ('(', '('), ('Hi-1', 'Hi-1'), (')', ')'), ('produce', 'produce'), ('Hi', 'Hi'), ('.', '.')]



============================ Sentence 48 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›  Step – 5 Output  After all N 1024-bit blocks have been processed, the output from the Nth stage is the 512-bit message digest  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›   SHA-512 Round Function   SHA-512 Round Function – Cont… a b c d e f g h b c d e f g h a Ʃ + + Maj + Ʃ Ch + + + Wt + Kt  Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#›               SHA-512 Round Function Elements Maj(a,b,c) = (a AND b) XOR (a AND c) XOR (b AND c) Majority of arguments are true ∑(a) = ROTR(a,28) XOR ROTR(a,34) XOR ROTR(a,39) ∑(e) = ROTR(e,14) XOR ROTR(e,18) XOR ROTR(e,41) + = addition modulo 264 Kt  = a 64-bit additive constant  Wt = a 64-bit word derived from the current 512-bit input block. 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step', '–', '5', 'Output', 'After', 'N', '1024-bit', 'blocks', 'processed', ',', 'output', 'Nth', 'stage', '512-bit', 'message', 'digest', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SHA-512', 'Round', 'Function', 'SHA-512', 'Round', 'Function', '–', 'Cont…', 'b', 'c', 'e', 'f', 'g', 'h', 'b', 'c', 'e', 'f', 'g', 'h', 'Ʃ', '+', '+', 'Maj', '+', 'Ʃ', 'Ch', '+', '+', '+', 'Wt', '+', 'Kt', 'Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'SHA-512', 'Round', 'Function', 'Elements', 'Maj', '(', ',', 'b', ',', 'c', ')', '=', '(', 'AND', 'b', ')', 'XOR', '(', 'AND', 'c', ')', 'XOR', '(', 'b', 'AND', 'c', ')', 'Majority', 'arguments', 'true', '∑', '(', ')', '=', 'ROTR', '(', 'a,28', ')', 'XOR', 'ROTR', '(', 'a,34', ')', 'XOR', 'ROTR', '(', 'a,39', ')', '∑', '(', 'e', ')', '=', 'ROTR', '(', 'e,14', ')', 'XOR', 'ROTR', '(', 'e,18', ')', 'XOR', 'ROTR', '(', 'e,41', ')', '+', '=', 'addition', 'modulo', '264', 'Kt', '=', '64-bit', 'additive', 'constant', 'Wt', '=', '64-bit', 'word', 'derived', 'current', '512-bit', 'input', 'block', '.']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step'), ('Step', '–'), ('–', '5'), ('5', 'Output'), ('Output', 'After'), ('After', 'N'), ('N', '1024-bit'), ('1024-bit', 'blocks'), ('blocks', 'processed'), ('processed', ','), (',', 'output'), ('output', 'Nth'), ('Nth', 'stage'), ('stage', '512-bit'), ('512-bit', 'message'), ('message', 'digest'), ('digest', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SHA-512'), ('SHA-512', 'Round'), ('Round', 'Function'), ('Function', 'SHA-512'), ('SHA-512', 'Round'), ('Round', 'Function'), ('Function', '–'), ('–', 'Cont…'), ('Cont…', 'b'), ('b', 'c'), ('c', 'e'), ('e', 'f'), ('f', 'g'), ('g', 'h'), ('h', 'b'), ('b', 'c'), ('c', 'e'), ('e', 'f'), ('f', 'g'), ('g', 'h'), ('h', 'Ʃ'), ('Ʃ', '+'), ('+', '+'), ('+', 'Maj'), ('Maj', '+'), ('+', 'Ʃ'), ('Ʃ', 'Ch'), ('Ch', '+'), ('+', '+'), ('+', '+'), ('+', 'Wt'), ('Wt', '+'), ('+', 'Kt'), ('Kt', 'Unit-5'), ('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'SHA-512'), ('SHA-512', 'Round'), ('Round', 'Function'), ('Function', 'Elements'), ('Elements', 'Maj'), ('Maj', '('), ('(', ','), (',', 'b'), ('b', ','), (',', 'c'), ('c', ')'), (')', '='), ('=', '('), ('(', 'AND'), ('AND', 'b'), ('b', ')'), (')', 'XOR'), ('XOR', '('), ('(', 'AND'), ('AND', 'c'), ('c', ')'), (')', 'XOR'), ('XOR', '('), ('(', 'b'), ('b', 'AND'), ('AND', 'c'), ('c', ')'), (')', 'Majority'), ('Majority', 'arguments'), ('arguments', 'true'), ('true', '∑'), ('∑', '('), ('(', ')'), (')', '='), ('=', 'ROTR'), ('ROTR', '('), ('(', 'a,28'), ('a,28', ')'), (')', 'XOR'), ('XOR', 'ROTR'), ('ROTR', '('), ('(', 'a,34'), ('a,34', ')'), (')', 'XOR'), ('XOR', 'ROTR'), ('ROTR', '('), ('(', 'a,39'), ('a,39', ')'), (')', '∑'), ('∑', '('), ('(', 'e'), ('e', ')'), (')', '='), ('=', 'ROTR'), ('ROTR', '('), ('(', 'e,14'), ('e,14', ')'), (')', 'XOR'), ('XOR', 'ROTR'), ('ROTR', '('), ('(', 'e,18'), ('e,18', ')'), (')', 'XOR'), ('XOR', 'ROTR'), ('ROTR', '('), ('(', 'e,41'), ('e,41', ')'), (')', '+'), ('+', '='), ('=', 'addition'), ('addition', 'modulo'), ('modulo', '264'), ('264', 'Kt'), ('Kt', '='), ('=', '64-bit'), ('64-bit', 'additive'), ('additive', 'constant'), ('constant', 'Wt'), ('Wt', '='), ('=', '64-bit'), ('64-bit', 'word'), ('word', 'derived'), ('derived', 'current'), ('current', '512-bit'), ('512-bit', 'input'), ('input', 'block'), ('block', '.')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step'), ('›', 'Step', '–'), ('Step', '–', '5'), ('–', '5', 'Output'), ('5', 'Output', 'After'), ('Output', 'After', 'N'), ('After', 'N', '1024-bit'), ('N', '1024-bit', 'blocks'), ('1024-bit', 'blocks', 'processed'), ('blocks', 'processed', ','), ('processed', ',', 'output'), (',', 'output', 'Nth'), ('output', 'Nth', 'stage'), ('Nth', 'stage', '512-bit'), ('stage', '512-bit', 'message'), ('512-bit', 'message', 'digest'), ('message', 'digest', 'Unit-5'), ('digest', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SHA-512'), ('›', 'SHA-512', 'Round'), ('SHA-512', 'Round', 'Function'), ('Round', 'Function', 'SHA-512'), ('Function', 'SHA-512', 'Round'), ('SHA-512', 'Round', 'Function'), ('Round', 'Function', '–'), ('Function', '–', 'Cont…'), ('–', 'Cont…', 'b'), ('Cont…', 'b', 'c'), ('b', 'c', 'e'), ('c', 'e', 'f'), ('e', 'f', 'g'), ('f', 'g', 'h'), ('g', 'h', 'b'), ('h', 'b', 'c'), ('b', 'c', 'e'), ('c', 'e', 'f'), ('e', 'f', 'g'), ('f', 'g', 'h'), ('g', 'h', 'Ʃ'), ('h', 'Ʃ', '+'), ('Ʃ', '+', '+'), ('+', '+', 'Maj'), ('+', 'Maj', '+'), ('Maj', '+', 'Ʃ'), ('+', 'Ʃ', 'Ch'), ('Ʃ', 'Ch', '+'), ('Ch', '+', '+'), ('+', '+', '+'), ('+', '+', 'Wt'), ('+', 'Wt', '+'), ('Wt', '+', 'Kt'), ('+', 'Kt', 'Unit-5'), ('Kt', 'Unit-5', 'Cryptographic'), ('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'SHA-512'), ('›', 'SHA-512', 'Round'), ('SHA-512', 'Round', 'Function'), ('Round', 'Function', 'Elements'), ('Function', 'Elements', 'Maj'), ('Elements', 'Maj', '('), ('Maj', '(', ','), ('(', ',', 'b'), (',', 'b', ','), ('b', ',', 'c'), (',', 'c', ')'), ('c', ')', '='), (')', '=', '('), ('=', '(', 'AND'), ('(', 'AND', 'b'), ('AND', 'b', ')'), ('b', ')', 'XOR'), (')', 'XOR', '('), ('XOR', '(', 'AND'), ('(', 'AND', 'c'), ('AND', 'c', ')'), ('c', ')', 'XOR'), (')', 'XOR', '('), ('XOR', '(', 'b'), ('(', 'b', 'AND'), ('b', 'AND', 'c'), ('AND', 'c', ')'), ('c', ')', 'Majority'), (')', 'Majority', 'arguments'), ('Majority', 'arguments', 'true'), ('arguments', 'true', '∑'), ('true', '∑', '('), ('∑', '(', ')'), ('(', ')', '='), (')', '=', 'ROTR'), ('=', 'ROTR', '('), ('ROTR', '(', 'a,28'), ('(', 'a,28', ')'), ('a,28', ')', 'XOR'), (')', 'XOR', 'ROTR'), ('XOR', 'ROTR', '('), ('ROTR', '(', 'a,34'), ('(', 'a,34', ')'), ('a,34', ')', 'XOR'), (')', 'XOR', 'ROTR'), ('XOR', 'ROTR', '('), ('ROTR', '(', 'a,39'), ('(', 'a,39', ')'), ('a,39', ')', '∑'), (')', '∑', '('), ('∑', '(', 'e'), ('(', 'e', ')'), ('e', ')', '='), (')', '=', 'ROTR'), ('=', 'ROTR', '('), ('ROTR', '(', 'e,14'), ('(', 'e,14', ')'), ('e,14', ')', 'XOR'), (')', 'XOR', 'ROTR'), ('XOR', 'ROTR', '('), ('ROTR', '(', 'e,18'), ('(', 'e,18', ')'), ('e,18', ')', 'XOR'), (')', 'XOR', 'ROTR'), ('XOR', 'ROTR', '('), ('ROTR', '(', 'e,41'), ('(', 'e,41', ')'), ('e,41', ')', '+'), (')', '+', '='), ('+', '=', 'addition'), ('=', 'addition', 'modulo'), ('addition', 'modulo', '264'), ('modulo', '264', 'Kt'), ('264', 'Kt', '='), ('Kt', '=', '64-bit'), ('=', '64-bit', 'additive'), ('64-bit', 'additive', 'constant'), ('additive', 'constant', 'Wt'), ('constant', 'Wt', '='), ('Wt', '=', '64-bit'), ('=', '64-bit', 'word'), ('64-bit', 'word', 'derived'), ('word', 'derived', 'current'), ('derived', 'current', '512-bit'), ('current', '512-bit', 'input'), ('512-bit', 'input', 'block'), ('input', 'block', '.')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step', 'NNP'), ('–', 'NNP'), ('5', 'CD'), ('Output', 'NNP'), ('After', 'IN'), ('N', 'NNP'), ('1024-bit', 'JJ'), ('blocks', 'NNS'), ('processed', 'VBN'), (',', ','), ('output', 'NN'), ('Nth', 'NNP'), ('stage', 'NN'), ('512-bit', 'JJ'), ('message', 'NN'), ('digest', 'JJS'), ('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SHA-512', 'NNP'), ('Round', 'NNP'), ('Function', 'NNP'), ('SHA-512', 'NNP'), ('Round', 'NNP'), ('Function', 'NNP'), ('–', 'NNP'), ('Cont…', 'NNP'), ('b', 'NN'), ('c', 'NN'), ('e', 'NN'), ('f', 'JJ'), ('g', 'NN'), ('h', 'NN'), ('b', 'NN'), ('c', 'NN'), ('e', 'NN'), ('f', 'JJ'), ('g', 'NN'), ('h', 'NN'), ('Ʃ', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('Maj', 'NNP'), ('+', 'NNP'), ('Ʃ', 'NNP'), ('Ch', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('+', 'NNP'), ('Wt', 'NNP'), ('+', 'NNP'), ('Kt', 'NNP'), ('Unit-5', 'NNP'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('SHA-512', 'NNP'), ('Round', 'NNP'), ('Function', 'NNP'), ('Elements', 'NNP'), ('Maj', 'NNP'), ('(', '('), (',', ','), ('b', 'NN'), (',', ','), ('c', 'NN'), (')', ')'), ('=', 'NN'), ('(', '('), ('AND', 'NNP'), ('b', 'NN'), (')', ')'), ('XOR', 'NN'), ('(', '('), ('AND', 'NNP'), ('c', 'NN'), (')', ')'), ('XOR', 'NN'), ('(', '('), ('b', 'NN'), ('AND', 'NNP'), ('c', 'NN'), (')', ')'), ('Majority', 'NNP'), ('arguments', 'VBZ'), ('true', 'JJ'), ('∑', 'NNP'), ('(', '('), (')', ')'), ('=', 'VBP'), ('ROTR', 'NNP'), ('(', '('), ('a,28', 'NN'), (')', ')'), ('XOR', 'NN'), ('ROTR', 'NNP'), ('(', '('), ('a,34', 'NN'), (')', ')'), ('XOR', 'NN'), ('ROTR', 'NNP'), ('(', '('), ('a,39', 'NN'), (')', ')'), ('∑', 'NN'), ('(', '('), ('e', 'NN'), (')', ')'), ('=', 'NN'), ('ROTR', 'NNP'), ('(', '('), ('e,14', 'NN'), (')', ')'), ('XOR', 'NN'), ('ROTR', 'NNP'), ('(', '('), ('e,18', 'NN'), (')', ')'), ('XOR', 'NN'), ('ROTR', 'NNP'), ('(', '('), ('e,41', 'NN'), (')', ')'), ('+', 'VBZ'), ('=', 'JJ'), ('addition', 'NN'), ('modulo', 'VBD'), ('264', 'CD'), ('Kt', 'NNP'), ('=', 'NNP'), ('64-bit', 'JJ'), ('additive', 'JJ'), ('constant', 'JJ'), ('Wt', 'NNP'), ('=', 'NNP'), ('64-bit', 'JJ'), ('word', 'NN'), ('derived', 'VBN'), ('current', 'JJ'), ('512-bit', 'JJ'), ('input', 'NN'), ('block', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Step/NNP –/NNP)
  5/CD
  (NP Output/NNP)
  After/IN
  (NP N/NNP)
  (NP 1024-bit/JJ blocks/NNS)
  processed/VBN
  ,/,
  (NP output/NN Nth/NNP stage/NN)
  (NP 512-bit/JJ message/NN)
  digest/JJS
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    SHA-512/NNP
    Round/NNP
    Function/NNP
    SHA-512/NNP
    Round/NNP
    Function/NNP
    –/NNP
    Cont…/NNP
    b/NN
    c/NN
    e/NN)
  (NP f/JJ g/NN h/NN b/NN c/NN e/NN)
  (NP
    f/JJ
    g/NN
    h/NN
    Ʃ/NNP
    +/NNP
    +/NNP
    Maj/NNP
    +/NNP
    Ʃ/NNP
    Ch/NNP
    +/NNP
    +/NNP
    +/NNP
    Wt/NNP
    +/NNP
    Kt/NNP
    Unit-5/NNP
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP SHA-512/NNP Round/NNP Function/NNP Elements/NNP Maj/NNP)
  (/(
  ,/,
  (NP b/NN)
  ,/,
  (NP c/NN)
  )/)
  (NP =/NN)
  (/(
  (NP AND/NNP b/NN)
  )/)
  (NP XOR/NN)
  (/(
  (NP AND/NNP c/NN)
  )/)
  (NP XOR/NN)
  (/(
  (NP b/NN AND/NNP c/NN)
  )/)
  (NP Majority/NNP)
  arguments/VBZ
  (NP true/JJ ∑/NNP)
  (/(
  )/)
  =/VBP
  (NP ROTR/NNP)
  (/(
  (NP a,28/NN)
  )/)
  (NP XOR/NN ROTR/NNP)
  (/(
  (NP a,34/NN)
  )/)
  (NP XOR/NN ROTR/NNP)
  (/(
  (NP a,39/NN)
  )/)
  (NP ∑/NN)
  (/(
  (NP e/NN)
  )/)
  (NP =/NN ROTR/NNP)
  (/(
  (NP e,14/NN)
  )/)
  (NP XOR/NN ROTR/NNP)
  (/(
  (NP e,18/NN)
  )/)
  (NP XOR/NN ROTR/NNP)
  (/(
  (NP e,41/NN)
  )/)
  +/VBZ
  (NP =/JJ addition/NN)
  modulo/VBD
  264/CD
  (NP Kt/NNP =/NNP)
  (NP 64-bit/JJ additive/JJ constant/JJ Wt/NNP =/NNP)
  (NP 64-bit/JJ word/NN)
  derived/VBN
  (NP current/JJ 512-bit/JJ input/NN block/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› Step –', 'Output', 'N', '1024-bit blocks', 'output Nth stage', '512-bit message', 'Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› SHA-512 Round Function SHA-512 Round Function – Cont… b c e', 'f g h b c e', 'f g h Ʃ + + Maj + Ʃ Ch + + + Wt + Kt Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '› SHA-512 Round Function Elements Maj', 'b', 'c', '=', 'AND b', 'XOR', 'AND c', 'XOR', 'b AND c', 'Majority', 'true ∑', 'ROTR', 'a,28', 'XOR ROTR', 'a,34', 'XOR ROTR', 'a,39', '∑', 'e', '= ROTR', 'e,14', 'XOR ROTR', 'e,18', 'XOR ROTR', 'e,41', '= addition', 'Kt =', '64-bit additive constant Wt =', '64-bit word', 'current 512-bit input block']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Step'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'AND'), ('ORGANIZATION', 'AND'), ('ORGANIZATION', 'AND'), ('ORGANIZATION', 'ROTR'), ('ORGANIZATION', 'XOR'), ('ORGANIZATION', 'ROTR'), ('ORGANIZATION', 'XOR'), ('ORGANIZATION', 'ROTR'), ('ORGANIZATION', 'ROTR'), ('ORGANIZATION', 'XOR'), ('ORGANIZATION', 'ROTR'), ('ORGANIZATION', 'XOR'), ('ORGANIZATION', 'ROTR')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('–', '–'), ('5', '5'), ('Output', 'output'), ('After', 'after'), ('N', 'n'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('processed', 'process'), (',', ','), ('output', 'output'), ('Nth', 'nth'), ('stage', 'stage'), ('512-bit', '512-bit'), ('message', 'messag'), ('digest', 'digest'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Round', 'round'), ('Function', 'function'), ('SHA-512', 'sha-512'), ('Round', 'round'), ('Function', 'function'), ('–', '–'), ('Cont…', 'cont…'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('h', 'h'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('h', 'h'), ('Ʃ', 'ʃ'), ('+', '+'), ('+', '+'), ('Maj', 'maj'), ('+', '+'), ('Ʃ', 'ʃ'), ('Ch', 'ch'), ('+', '+'), ('+', '+'), ('+', '+'), ('Wt', 'wt'), ('+', '+'), ('Kt', 'kt'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Round', 'round'), ('Function', 'function'), ('Elements', 'element'), ('Maj', 'maj'), ('(', '('), (',', ','), ('b', 'b'), (',', ','), ('c', 'c'), (')', ')'), ('=', '='), ('(', '('), ('AND', 'and'), ('b', 'b'), (')', ')'), ('XOR', 'xor'), ('(', '('), ('AND', 'and'), ('c', 'c'), (')', ')'), ('XOR', 'xor'), ('(', '('), ('b', 'b'), ('AND', 'and'), ('c', 'c'), (')', ')'), ('Majority', 'major'), ('arguments', 'argument'), ('true', 'true'), ('∑', '∑'), ('(', '('), (')', ')'), ('=', '='), ('ROTR', 'rotr'), ('(', '('), ('a,28', 'a,28'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('a,34', 'a,34'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('a,39', 'a,39'), (')', ')'), ('∑', '∑'), ('(', '('), ('e', 'e'), (')', ')'), ('=', '='), ('ROTR', 'rotr'), ('(', '('), ('e,14', 'e,14'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('e,18', 'e,18'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('e,41', 'e,41'), (')', ')'), ('+', '+'), ('=', '='), ('addition', 'addit'), ('modulo', 'modulo'), ('264', '264'), ('Kt', 'kt'), ('=', '='), ('64-bit', '64-bit'), ('additive', 'addit'), ('constant', 'constant'), ('Wt', 'wt'), ('=', '='), ('64-bit', '64-bit'), ('word', 'word'), ('derived', 'deriv'), ('current', 'current'), ('512-bit', '512-bit'), ('input', 'input'), ('block', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'step'), ('–', '–'), ('5', '5'), ('Output', 'output'), ('After', 'after'), ('N', 'n'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('processed', 'process'), (',', ','), ('output', 'output'), ('Nth', 'nth'), ('stage', 'stage'), ('512-bit', '512-bit'), ('message', 'messag'), ('digest', 'digest'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Round', 'round'), ('Function', 'function'), ('SHA-512', 'sha-512'), ('Round', 'round'), ('Function', 'function'), ('–', '–'), ('Cont…', 'cont…'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('h', 'h'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('h', 'h'), ('Ʃ', 'ʃ'), ('+', '+'), ('+', '+'), ('Maj', 'maj'), ('+', '+'), ('Ʃ', 'ʃ'), ('Ch', 'ch'), ('+', '+'), ('+', '+'), ('+', '+'), ('Wt', 'wt'), ('+', '+'), ('Kt', 'kt'), ('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'sha-512'), ('Round', 'round'), ('Function', 'function'), ('Elements', 'element'), ('Maj', 'maj'), ('(', '('), (',', ','), ('b', 'b'), (',', ','), ('c', 'c'), (')', ')'), ('=', '='), ('(', '('), ('AND', 'and'), ('b', 'b'), (')', ')'), ('XOR', 'xor'), ('(', '('), ('AND', 'and'), ('c', 'c'), (')', ')'), ('XOR', 'xor'), ('(', '('), ('b', 'b'), ('AND', 'and'), ('c', 'c'), (')', ')'), ('Majority', 'major'), ('arguments', 'argument'), ('true', 'true'), ('∑', '∑'), ('(', '('), (')', ')'), ('=', '='), ('ROTR', 'rotr'), ('(', '('), ('a,28', 'a,28'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('a,34', 'a,34'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('a,39', 'a,39'), (')', ')'), ('∑', '∑'), ('(', '('), ('e', 'e'), (')', ')'), ('=', '='), ('ROTR', 'rotr'), ('(', '('), ('e,14', 'e,14'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('e,18', 'e,18'), (')', ')'), ('XOR', 'xor'), ('ROTR', 'rotr'), ('(', '('), ('e,41', 'e,41'), (')', ')'), ('+', '+'), ('=', '='), ('addition', 'addit'), ('modulo', 'modulo'), ('264', '264'), ('Kt', 'kt'), ('=', '='), ('64-bit', '64-bit'), ('additive', 'addit'), ('constant', 'constant'), ('Wt', 'wt'), ('=', '='), ('64-bit', '64-bit'), ('word', 'word'), ('derived', 'deriv'), ('current', 'current'), ('512-bit', '512-bit'), ('input', 'input'), ('block', 'block'), ('.', '.')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step', 'Step'), ('–', '–'), ('5', '5'), ('Output', 'Output'), ('After', 'After'), ('N', 'N'), ('1024-bit', '1024-bit'), ('blocks', 'block'), ('processed', 'processed'), (',', ','), ('output', 'output'), ('Nth', 'Nth'), ('stage', 'stage'), ('512-bit', '512-bit'), ('message', 'message'), ('digest', 'digest'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'SHA-512'), ('Round', 'Round'), ('Function', 'Function'), ('SHA-512', 'SHA-512'), ('Round', 'Round'), ('Function', 'Function'), ('–', '–'), ('Cont…', 'Cont…'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('h', 'h'), ('b', 'b'), ('c', 'c'), ('e', 'e'), ('f', 'f'), ('g', 'g'), ('h', 'h'), ('Ʃ', 'Ʃ'), ('+', '+'), ('+', '+'), ('Maj', 'Maj'), ('+', '+'), ('Ʃ', 'Ʃ'), ('Ch', 'Ch'), ('+', '+'), ('+', '+'), ('+', '+'), ('Wt', 'Wt'), ('+', '+'), ('Kt', 'Kt'), ('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('SHA-512', 'SHA-512'), ('Round', 'Round'), ('Function', 'Function'), ('Elements', 'Elements'), ('Maj', 'Maj'), ('(', '('), (',', ','), ('b', 'b'), (',', ','), ('c', 'c'), (')', ')'), ('=', '='), ('(', '('), ('AND', 'AND'), ('b', 'b'), (')', ')'), ('XOR', 'XOR'), ('(', '('), ('AND', 'AND'), ('c', 'c'), (')', ')'), ('XOR', 'XOR'), ('(', '('), ('b', 'b'), ('AND', 'AND'), ('c', 'c'), (')', ')'), ('Majority', 'Majority'), ('arguments', 'argument'), ('true', 'true'), ('∑', '∑'), ('(', '('), (')', ')'), ('=', '='), ('ROTR', 'ROTR'), ('(', '('), ('a,28', 'a,28'), (')', ')'), ('XOR', 'XOR'), ('ROTR', 'ROTR'), ('(', '('), ('a,34', 'a,34'), (')', ')'), ('XOR', 'XOR'), ('ROTR', 'ROTR'), ('(', '('), ('a,39', 'a,39'), (')', ')'), ('∑', '∑'), ('(', '('), ('e', 'e'), (')', ')'), ('=', '='), ('ROTR', 'ROTR'), ('(', '('), ('e,14', 'e,14'), (')', ')'), ('XOR', 'XOR'), ('ROTR', 'ROTR'), ('(', '('), ('e,18', 'e,18'), (')', ')'), ('XOR', 'XOR'), ('ROTR', 'ROTR'), ('(', '('), ('e,41', 'e,41'), (')', ')'), ('+', '+'), ('=', '='), ('addition', 'addition'), ('modulo', 'modulo'), ('264', '264'), ('Kt', 'Kt'), ('=', '='), ('64-bit', '64-bit'), ('additive', 'additive'), ('constant', 'constant'), ('Wt', 'Wt'), ('=', '='), ('64-bit', '64-bit'), ('word', 'word'), ('derived', 'derived'), ('current', 'current'), ('512-bit', '512-bit'), ('input', 'input'), ('block', 'block'), ('.', '.')]



============================ Sentence 49 =============================

Unit-5  Cryptographic Hash Functions                                 Darshan Institute of Engineering & Technology   ‹#› 


>> Tokens are: 
 ['Unit-5', 'Cryptographic', 'Hash', 'Functions', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›']

>> Bigrams are: 
 [('Unit-5', 'Cryptographic'), ('Cryptographic', 'Hash'), ('Hash', 'Functions'), ('Functions', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›')]

>> Trigrams are: 
 [('Unit-5', 'Cryptographic', 'Hash'), ('Cryptographic', 'Hash', 'Functions'), ('Hash', 'Functions', 'Darshan'), ('Functions', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›')]

>> POS Tags are: 
 [('Unit-5', 'JJ'), ('Cryptographic', 'NNP'), ('Hash', 'NNP'), ('Functions', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN')]

 (S
  (NP
    Unit-5/JJ
    Cryptographic/NNP
    Hash/NNP
    Functions/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN)) 


>> Noun Phrases are: 
 ['Unit-5 Cryptographic Hash Functions Darshan Institute Engineering', 'Technology ‹', '›']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Stemming using Snowball Stemmer: 
 [('Unit-5', 'unit-5'), ('Cryptographic', 'cryptograph'), ('Hash', 'hash'), ('Functions', 'function'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Lemmatization: 
 [('Unit-5', 'Unit-5'), ('Cryptographic', 'Cryptographic'), ('Hash', 'Hash'), ('Functions', 'Functions'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›')]

