				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

PowerPoint Presentation  Unit-2  Process and Threads Management: 


>> Tokens are: 
[PowerPoint, Presentation,  , Unit-2,  , Process, Threads, Management, :] 

>> PoS Tags are: 
[('PowerPoint', 'PROPN'), ('Presentation', 'PROPN'), (' ', 'SPACE'), ('Unit-2', 'ADV'), (' ', 'SPACE'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('PowerPoint', 'compound'), ('Presentation', 'ROOT'), (' ', 'appos'), ('Unit-2', 'advmod'), (' ', 'compound'), ('Process', 'appos'), ('Threads', 'compound'), ('Management', 'conj'), (':', 'punct')]

>> Bigrams: 
[[PowerPoint, Presentation], [Presentation,  ], [ , Unit-2], [Unit-2,  ], [ , Process], [Process, Threads], [Threads, Management], [Management, :]]

>> Trigrams: 
[[PowerPoint, Presentation,  ], [Presentation,  , Unit-2], [ , Unit-2,  ], [Unit-2,  , Process], [ , Process, Threads], [Process, Threads, Management], [Threads, Management, :]]

>> Noun Phrases are: 
[PowerPoint Presentation, Unit-2  Process, Threads Management]

>> Named Entities are: 
[('Unit-2', 'PERSON'), ('Process and Threads Management:', 'ORG')]


============================ Sentence 2 =============================

Scheduling Algorithms firoz.sherasiya@darshan.ac.in 9879879861 


>> Tokens are: 
[Scheduling, Algorithms, firoz.sherasiya@darshan.ac.in, 9879879861] 

>> PoS Tags are: 
[('Scheduling', 'PROPN'), ('Algorithms', 'PROPN'), ('firoz.sherasiya@darshan.ac.in', 'PROPN'), ('9879879861', 'NUM')] 

>> Dependency Tags are: 
[('Scheduling', 'compound'), ('Algorithms', 'ROOT'), ('firoz.sherasiya@darshan.ac.in', 'appos'), ('9879879861', 'nummod')]

>> Bigrams: 
[[Scheduling, Algorithms], [Algorithms, firoz.sherasiya@darshan.ac.in], [firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Trigrams: 
[[Scheduling, Algorithms, firoz.sherasiya@darshan.ac.in], [Algorithms, firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Noun Phrases are: 
[Scheduling Algorithms, firoz.sherasiya@darshan.ac.in]

>> Named Entities are: 
[]


============================ Sentence 3 =============================

Computer Engineering Department Prof. Firoz A Sherasiya Operating System (OS) GTU # 3140702   Darshan Institute of Engineering & Technology, Rajkot     Looping Outline 


>> Tokens are: 
[Computer, Engineering, Department, Prof., Firoz, Sherasiya, Operating, System, (, OS, ), GTU, #, 3140702,   , Darshan, Institute, Engineering, &, Technology, ,, Rajkot,    , , Looping, Outline] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('Operating', 'PROPN'), ('System', 'PROPN'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('GTU', 'NOUN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('  ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('   ', 'SPACE'), ('\uf050', 'PROPN'), ('Looping', 'PROPN'), ('Outline', 'PROPN')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Engineering', 'compound'), ('Department', 'compound'), ('Prof.', 'compound'), ('Firoz', 'compound'), ('Sherasiya', 'compound'), ('Operating', 'compound'), ('System', 'ROOT'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('GTU', 'appos'), ('#', 'nmod'), ('3140702', 'nummod'), ('  ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), (',', 'punct'), ('Rajkot', 'appos'), ('   ', 'appos'), ('\uf050', 'prep'), ('Looping', 'compound'), ('Outline', 'appos')]

>> Bigrams: 
[[Computer, Engineering], [Engineering, Department], [Department, Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, Operating], [Operating, System], [System, (], [(, OS], [OS, )], [), GTU], [GTU, #], [#, 3140702], [3140702,   ], [  , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ,], [,, Rajkot], [Rajkot,    ], [   , ], [, Looping], [Looping, Outline]]

>> Trigrams: 
[[Computer, Engineering, Department], [Engineering, Department, Prof.], [Department, Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, Operating], [Sherasiya, Operating, System], [Operating, System, (], [System, (, OS], [(, OS, )], [OS, ), GTU], [), GTU, #], [GTU, #, 3140702], [#, 3140702,   ], [3140702,   , Darshan], [  , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ,], [Technology, ,, Rajkot], [,, Rajkot,    ], [Rajkot,    , ], [   , , Looping], [, Looping, Outline]]

>> Noun Phrases are: 
[Computer Engineering Department Prof. Firoz A Sherasiya Operating System, OS, GTU, Darshan Institute, Engineering, Technology, Rajkot, Looping Outline]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('Looping Outline', 'ORG')]


============================ Sentence 4 =============================

What is scheduling Objectives of scheduling Types of scheduler Scheduling algorithms First Come First Served (FCFS) 


>> Tokens are: 
[scheduling, Objectives, scheduling, Types, scheduler, Scheduling, algorithms, Come, Served, (, FCFS, )] 

>> PoS Tags are: 
[('scheduling', 'VERB'), ('Objectives', 'NOUN'), ('scheduling', 'NOUN'), ('Types', 'NOUN'), ('scheduler', 'NOUN'), ('Scheduling', 'PROPN'), ('algorithms', 'NOUN'), ('Come', 'PROPN'), ('Served', 'PROPN'), ('(', 'PUNCT'), ('FCFS', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('scheduling', 'ROOT'), ('Objectives', 'dobj'), ('scheduling', 'compound'), ('Types', 'pobj'), ('scheduler', 'compound'), ('Scheduling', 'compound'), ('algorithms', 'pobj'), ('Come', 'npadvmod'), ('Served', 'dobj'), ('(', 'punct'), ('FCFS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[scheduling, Objectives], [Objectives, scheduling], [scheduling, Types], [Types, scheduler], [scheduler, Scheduling], [Scheduling, algorithms], [algorithms, Come], [Come, Served], [Served, (], [(, FCFS], [FCFS, )]]

>> Trigrams: 
[[scheduling, Objectives, scheduling], [Objectives, scheduling, Types], [scheduling, Types, scheduler], [Types, scheduler, Scheduling], [scheduler, Scheduling, algorithms], [Scheduling, algorithms, Come], [algorithms, Come, Served], [Come, Served, (], [Served, (, FCFS], [(, FCFS, )]]

>> Noun Phrases are: 
[What, Objectives, scheduling Types, scheduler Scheduling algorithms, First Come First Served, FCFS]

>> Named Entities are: 
[('Objectives', 'ORG'), ('First', 'ORDINAL'), ('FCFS', 'ORG')]


============================ Sentence 5 =============================

Shortest Job First (SJF) 


>> Tokens are: 
[Shortest, Job, (, SJF, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Job', 'PROPN'), ('(', 'PUNCT'), ('SJF', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'compound'), ('Job', 'compound'), ('(', 'punct'), ('SJF', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Job], [Job, (], [(, SJF], [SJF, )]]

>> Trigrams: 
[[Shortest, Job, (], [Job, (, SJF], [(, SJF, )]]

>> Noun Phrases are: 
[Shortest Job First, (SJF]

>> Named Entities are: 
[('SJF', 'ORG')]


============================ Sentence 6 =============================

Shortest Remaining Time Next (SRTN) 


>> Tokens are: 
[Shortest, Remaining, Time, (, SRTN, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('SRTN', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'nmod'), ('Remaining', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('SRTN', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Remaining], [Remaining, Time], [Time, (], [(, SRTN], [SRTN, )]]

>> Trigrams: 
[[Shortest, Remaining, Time], [Remaining, Time, (], [Time, (, SRTN], [(, SRTN, )]]

>> Noun Phrases are: 
[Shortest Remaining Time, (SRTN]

>> Named Entities are: 
[('Shortest Remaining Time Next', 'PERSON')]


============================ Sentence 7 =============================

Round Robin (RR) Priority Non-Preemptive Priority Preemptive Priority Real Time Operating System      


>> Tokens are: 
[Round, Robin, (, RR, ), Priority, Non, -, Preemptive, Priority, Preemptive, Priority, Real, Time, Operating, System,     ] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'PROPN'), (')', 'PUNCT'), ('Priority', 'PROPN'), ('Non', 'PROPN'), ('-', 'ADJ'), ('Preemptive', 'ADJ'), ('Priority', 'PROPN'), ('Preemptive', 'PROPN'), ('Priority', 'PROPN'), ('Real', 'PROPN'), ('Time', 'PROPN'), ('Operating', 'NOUN'), ('System', 'PROPN'), ('    ', 'SPACE')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'ROOT'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('Priority', 'compound'), ('Non', 'compound'), ('-', 'amod'), ('Preemptive', 'amod'), ('Priority', 'compound'), ('Preemptive', 'compound'), ('Priority', 'compound'), ('Real', 'compound'), ('Time', 'compound'), ('Operating', 'compound'), ('System', 'appos'), ('    ', 'appos')]

>> Bigrams: 
[[Round, Robin], [Robin, (], [(, RR], [RR, )], [), Priority], [Priority, Non], [Non, -], [-, Preemptive], [Preemptive, Priority], [Priority, Preemptive], [Preemptive, Priority], [Priority, Real], [Real, Time], [Time, Operating], [Operating, System], [System,     ]]

>> Trigrams: 
[[Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ), Priority], [), Priority, Non], [Priority, Non, -], [Non, -, Preemptive], [-, Preemptive, Priority], [Preemptive, Priority, Preemptive], [Priority, Preemptive, Priority], [Preemptive, Priority, Real], [Priority, Real, Time], [Real, Time, Operating], [Time, Operating, System], [Operating, System,     ]]

>> Noun Phrases are: 
[Round Robin, (RR) Priority Non-Preemptive Priority Preemptive Priority Real Time Operating System]

>> Named Entities are: 
[('Round Robin', 'PERSON')]


============================ Sentence 8 =============================

What is process scheduling? 


>> Tokens are: 
[process, scheduling, ?] 

>> PoS Tags are: 
[('process', 'NOUN'), ('scheduling', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'compound'), ('scheduling', 'attr'), ('?', 'punct')]

>> Bigrams: 
[[process, scheduling], [scheduling, ?]]

>> Trigrams: 
[[process, scheduling, ?]]

>> Noun Phrases are: 
[What, process scheduling]

>> Named Entities are: 
[]


============================ Sentence 9 =============================

Section - 1      What is process scheduling? 


>> Tokens are: 
[Section, -, 1,      , process, scheduling, ?] 

>> PoS Tags are: 
[('Section', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), ('     ', 'SPACE'), ('process', 'NOUN'), ('scheduling', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Section', 'ROOT'), ('-', 'punct'), ('1', 'nummod'), ('     ', 'appos'), ('process', 'compound'), ('scheduling', 'attr'), ('?', 'punct')]

>> Bigrams: 
[[Section, -], [-, 1], [1,      ], [     , process], [process, scheduling], [scheduling, ?]]

>> Trigrams: 
[[Section, -, 1], [-, 1,      ], [1,      , process], [     , process, scheduling], [process, scheduling, ?]]

>> Noun Phrases are: 
[Section, What, process scheduling]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

Process scheduling is the activity of the process manager that handles suspension of running process from CPU and selection of another process on the basis of a particular strategy. 


>> Tokens are: 
[Process, scheduling, activity, process, manager, handles, suspension, running, process, CPU, selection, process, basis, particular, strategy, .] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('scheduling', 'NOUN'), ('activity', 'NOUN'), ('process', 'NOUN'), ('manager', 'NOUN'), ('handles', 'VERB'), ('suspension', 'NOUN'), ('running', 'NOUN'), ('process', 'NOUN'), ('CPU', 'NOUN'), ('selection', 'NOUN'), ('process', 'NOUN'), ('basis', 'NOUN'), ('particular', 'ADJ'), ('strategy', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'compound'), ('scheduling', 'nsubj'), ('activity', 'attr'), ('process', 'compound'), ('manager', 'pobj'), ('handles', 'relcl'), ('suspension', 'dobj'), ('running', 'amod'), ('process', 'pobj'), ('CPU', 'pobj'), ('selection', 'conj'), ('process', 'pobj'), ('basis', 'pobj'), ('particular', 'amod'), ('strategy', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Process, scheduling], [scheduling, activity], [activity, process], [process, manager], [manager, handles], [handles, suspension], [suspension, running], [running, process], [process, CPU], [CPU, selection], [selection, process], [process, basis], [basis, particular], [particular, strategy], [strategy, .]]

>> Trigrams: 
[[Process, scheduling, activity], [scheduling, activity, process], [activity, process, manager], [process, manager, handles], [manager, handles, suspension], [handles, suspension, running], [suspension, running, process], [running, process, CPU], [process, CPU, selection], [CPU, selection, process], [selection, process, basis], [process, basis, particular], [basis, particular, strategy], [particular, strategy, .]]

>> Noun Phrases are: 
[Process scheduling, the activity, the process manager, suspension, running process, CPU, selection, another process, the basis, a particular strategy]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

The part of operating system that makes the choice is called scheduler. 


>> Tokens are: 
[operating, system, makes, choice, called, scheduler, .] 

>> PoS Tags are: 
[('operating', 'NOUN'), ('system', 'NOUN'), ('makes', 'VERB'), ('choice', 'NOUN'), ('called', 'VERB'), ('scheduler', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('operating', 'compound'), ('system', 'pobj'), ('makes', 'relcl'), ('choice', 'nsubjpass'), ('called', 'ccomp'), ('scheduler', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[operating, system], [system, makes], [makes, choice], [choice, called], [called, scheduler], [scheduler, .]]

>> Trigrams: 
[[operating, system, makes], [system, makes, choice], [makes, choice, called], [choice, called, scheduler], [called, scheduler, .]]

>> Noun Phrases are: 
[The part, operating system, the choice, scheduler]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

The algorithm used by this scheduler is called scheduling algorithm. 


>> Tokens are: 
[algorithm, scheduler, called, scheduling, algorithm, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('scheduler', 'NOUN'), ('called', 'VERB'), ('scheduling', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'nsubjpass'), ('scheduler', 'pobj'), ('called', 'ROOT'), ('scheduling', 'compound'), ('algorithm', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, scheduler], [scheduler, called], [called, scheduling], [scheduling, algorithm], [algorithm, .]]

>> Trigrams: 
[[algorithm, scheduler, called], [scheduler, called, scheduling], [called, scheduling, algorithm], [scheduling, algorithm, .]]

>> Noun Phrases are: 
[The algorithm, this scheduler, scheduling algorithm]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

Process scheduling is an essential part of a multiprogramming operating systems. 


>> Tokens are: 
[Process, scheduling, essential, multiprogramming, operating, systems, .] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('scheduling', 'NOUN'), ('essential', 'ADJ'), ('multiprogramming', 'VERB'), ('operating', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'compound'), ('scheduling', 'nsubj'), ('essential', 'amod'), ('multiprogramming', 'amod'), ('operating', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Process, scheduling], [scheduling, essential], [essential, multiprogramming], [multiprogramming, operating], [operating, systems], [systems, .]]

>> Trigrams: 
[[Process, scheduling, essential], [scheduling, essential, multiprogramming], [essential, multiprogramming, operating], [multiprogramming, operating, systems], [operating, systems, .]]

>> Noun Phrases are: 
[Process scheduling, an essential part, a multiprogramming operating systems]

>> Named Entities are: 
[]


============================ Sentence 14 =============================

    Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›  Objectives (goals) of scheduling Section - 2      Objectives (goals) of scheduling Fairness: 


>> Tokens are: 
[    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  , Objectives, (, goals, ), scheduling, Section, -, 2,      , Objectives, (, goals, ), scheduling, Fairness, :] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE'), ('Objectives', 'PROPN'), ('(', 'PUNCT'), ('goals', 'NOUN'), (')', 'PUNCT'), ('scheduling', 'VERB'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), ('     ', 'SPACE'), ('Objectives', 'NOUN'), ('(', 'PUNCT'), ('goals', 'NOUN'), (')', 'PUNCT'), ('scheduling', 'VERB'), ('Fairness', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'dobj'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'compound'), ('Objectives', 'dobj'), ('(', 'punct'), ('goals', 'appos'), (')', 'punct'), ('scheduling', 'pcomp'), ('Section', 'nmod'), ('-', 'punct'), ('2', 'nummod'), ('     ', 'compound'), ('Objectives', 'dobj'), ('(', 'punct'), ('goals', 'appos'), (')', 'punct'), ('scheduling', 'pcomp'), ('Fairness', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ], [ , Objectives], [Objectives, (], [(, goals], [goals, )], [), scheduling], [scheduling, Section], [Section, -], [-, 2], [2,      ], [     , Objectives], [Objectives, (], [(, goals], [goals, )], [), scheduling], [scheduling, Fairness], [Fairness, :]]

>> Trigrams: 
[[    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ], [‹#›,  , Objectives], [ , Objectives, (], [Objectives, (, goals], [(, goals, )], [goals, ), scheduling], [), scheduling, Section], [scheduling, Section, -], [Section, -, 2], [-, 2,      ], [2,      , Objectives], [     , Objectives, (], [Objectives, (, goals], [(, goals, )], [goals, ), scheduling], [), scheduling, Fairness], [scheduling, Fairness, :]]

>> Noun Phrases are: 
[    Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management,  Objectives, (goals, Section - 2      Objectives, (goals, Fairness]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Section - 2      Objectives', 'LAW'), ('Fairness', 'ORG')]


============================ Sentence 15 =============================

giving each process a fair share of the CPU. 


>> Tokens are: 
[giving, process, fair, share, CPU, .] 

>> PoS Tags are: 
[('giving', 'VERB'), ('process', 'NOUN'), ('fair', 'ADJ'), ('share', 'NOUN'), ('CPU', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('giving', 'ROOT'), ('process', 'dative'), ('fair', 'amod'), ('share', 'dobj'), ('CPU', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[giving, process], [process, fair], [fair, share], [share, CPU], [CPU, .]]

>> Trigrams: 
[[giving, process, fair], [process, fair, share], [fair, share, CPU], [share, CPU, .]]

>> Noun Phrases are: 
[each process, a fair share, the CPU]

>> Named Entities are: 
[]


============================ Sentence 16 =============================

Balance: keeping all the parts of the system busy (Maximize). 


>> Tokens are: 
[Balance, :, keeping, parts, system, busy, (, Maximize, ), .] 

>> PoS Tags are: 
[('Balance', 'NOUN'), (':', 'PUNCT'), ('keeping', 'VERB'), ('parts', 'NOUN'), ('system', 'NOUN'), ('busy', 'ADJ'), ('(', 'PUNCT'), ('Maximize', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Balance', 'ROOT'), (':', 'punct'), ('keeping', 'acl'), ('parts', 'dobj'), ('system', 'pobj'), ('busy', 'oprd'), ('(', 'punct'), ('Maximize', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Balance, :], [:, keeping], [keeping, parts], [parts, system], [system, busy], [busy, (], [(, Maximize], [Maximize, )], [), .]]

>> Trigrams: 
[[Balance, :, keeping], [:, keeping, parts], [keeping, parts, system], [parts, system, busy], [system, busy, (], [busy, (, Maximize], [(, Maximize, )], [Maximize, ), .]]

>> Noun Phrases are: 
[Balance, all the parts, the system]

>> Named Entities are: 
[('Maximize', 'NORP')]


============================ Sentence 17 =============================

Throughput: no of processes that are completed per time unit (Maximize). 


>> Tokens are: 
[Throughput, :, processes, completed, time, unit, (, Maximize, ), .] 

>> PoS Tags are: 
[('Throughput', 'NOUN'), (':', 'PUNCT'), ('processes', 'NOUN'), ('completed', 'VERB'), ('time', 'NOUN'), ('unit', 'NOUN'), ('(', 'PUNCT'), ('Maximize', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Throughput', 'ROOT'), (':', 'punct'), ('processes', 'pobj'), ('completed', 'relcl'), ('time', 'compound'), ('unit', 'pobj'), ('(', 'punct'), ('Maximize', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Throughput, :], [:, processes], [processes, completed], [completed, time], [time, unit], [unit, (], [(, Maximize], [Maximize, )], [), .]]

>> Trigrams: 
[[Throughput, :, processes], [:, processes, completed], [processes, completed, time], [completed, time, unit], [time, unit, (], [unit, (, Maximize], [(, Maximize, )], [Maximize, ), .]]

>> Noun Phrases are: 
[Throughput, processes, time unit, Maximize]

>> Named Entities are: 
[('Maximize', 'ORG')]


============================ Sentence 18 =============================

Turnaround time: time to execute a process from submission to completion (Minimize). 


>> Tokens are: 
[Turnaround, time, :, time, execute, process, submission, completion, (, Minimize, ), .] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('time', 'NOUN'), (':', 'PUNCT'), ('time', 'NOUN'), ('execute', 'VERB'), ('process', 'NOUN'), ('submission', 'NOUN'), ('completion', 'NOUN'), ('(', 'PUNCT'), ('Minimize', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('time', 'dep'), (':', 'punct'), ('time', 'appos'), ('execute', 'relcl'), ('process', 'dobj'), ('submission', 'pobj'), ('completion', 'pobj'), ('(', 'punct'), ('Minimize', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Turnaround, time], [time, :], [:, time], [time, execute], [execute, process], [process, submission], [submission, completion], [completion, (], [(, Minimize], [Minimize, )], [), .]]

>> Trigrams: 
[[Turnaround, time, :], [time, :, time], [:, time, execute], [time, execute, process], [execute, process, submission], [process, submission, completion], [submission, completion, (], [completion, (, Minimize], [(, Minimize, )], [Minimize, ), .]]

>> Noun Phrases are: 
[time, a process, submission, completion]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

Turnaround time = Process finish time – Process arrival time CPU utilization: percent of time that the CPU is busy in executing a process. 


>> Tokens are: 
[Turnaround, time, =, Process, finish, time, –, Process, arrival, time, CPU, utilization, :, percent, time, CPU, busy, executing, process, .] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('time', 'NOUN'), ('=', 'PUNCT'), ('Process', 'NOUN'), ('finish', 'NOUN'), ('time', 'NOUN'), ('–', 'PUNCT'), ('Process', 'NOUN'), ('arrival', 'NOUN'), ('time', 'NOUN'), ('CPU', 'NOUN'), ('utilization', 'NOUN'), (':', 'PUNCT'), ('percent', 'NOUN'), ('time', 'NOUN'), ('CPU', 'NOUN'), ('busy', 'ADJ'), ('executing', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('time', 'npadvmod'), ('=', 'punct'), ('Process', 'nsubj'), ('finish', 'ROOT'), ('time', 'dobj'), ('–', 'punct'), ('Process', 'compound'), ('arrival', 'compound'), ('time', 'compound'), ('CPU', 'compound'), ('utilization', 'dobj'), (':', 'punct'), ('percent', 'dobj'), ('time', 'pobj'), ('CPU', 'nsubj'), ('busy', 'acomp'), ('executing', 'pcomp'), ('process', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Turnaround, time], [time, =], [=, Process], [Process, finish], [finish, time], [time, –], [–, Process], [Process, arrival], [arrival, time], [time, CPU], [CPU, utilization], [utilization, :], [:, percent], [percent, time], [time, CPU], [CPU, busy], [busy, executing], [executing, process], [process, .]]

>> Trigrams: 
[[Turnaround, time, =], [time, =, Process], [=, Process, finish], [Process, finish, time], [finish, time, –], [time, –, Process], [–, Process, arrival], [Process, arrival, time], [arrival, time, CPU], [time, CPU, utilization], [CPU, utilization, :], [utilization, :, percent], [:, percent, time], [percent, time, CPU], [time, CPU, busy], [CPU, busy, executing], [busy, executing, process], [executing, process, .]]

>> Noun Phrases are: 
[Process, time, Process arrival time CPU utilization, percent, time, the CPU, a process]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

keep CPU as busy as possible (Maximized). 


>> Tokens are: 
[CPU, busy, possible, (, Maximized, ), .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('busy', 'ADJ'), ('possible', 'ADJ'), ('(', 'PUNCT'), ('Maximized', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'dobj'), ('busy', 'oprd'), ('possible', 'amod'), ('(', 'punct'), ('Maximized', 'pobj'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[CPU, busy], [busy, possible], [possible, (], [(, Maximized], [Maximized, )], [), .]]

>> Trigrams: 
[[CPU, busy, possible], [busy, possible, (], [possible, (, Maximized], [(, Maximized, )], [Maximized, ), .]]

>> Noun Phrases are: 
[CPU, possible (Maximized]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

Response time: time between issuing a command and getting the result (Minimized). 


>> Tokens are: 
[Response, time, :, time, issuing, command, getting, result, (, Minimized, ), .] 

>> PoS Tags are: 
[('Response', 'NOUN'), ('time', 'NOUN'), (':', 'PUNCT'), ('time', 'NOUN'), ('issuing', 'VERB'), ('command', 'NOUN'), ('getting', 'VERB'), ('result', 'NOUN'), ('(', 'PUNCT'), ('Minimized', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Response', 'compound'), ('time', 'ROOT'), (':', 'punct'), ('time', 'appos'), ('issuing', 'pcomp'), ('command', 'dobj'), ('getting', 'conj'), ('result', 'dobj'), ('(', 'punct'), ('Minimized', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Response, time], [time, :], [:, time], [time, issuing], [issuing, command], [command, getting], [getting, result], [result, (], [(, Minimized], [Minimized, )], [), .]]

>> Trigrams: 
[[Response, time, :], [time, :, time], [:, time, issuing], [time, issuing, command], [issuing, command, getting], [command, getting, result], [getting, result, (], [result, (, Minimized], [(, Minimized, )], [Minimized, ), .]]

>> Noun Phrases are: 
[Response time, time, a command, the result, (Minimized]

>> Named Entities are: 
[('Minimized', 'ORG')]


============================ Sentence 22 =============================

Waiting time: amount of time a process has been waiting in the ready queue (Minimize). 


>> Tokens are: 
[Waiting, time, :, time, process, waiting, ready, queue, (, Minimize, ), .] 

>> PoS Tags are: 
[('Waiting', 'VERB'), ('time', 'NOUN'), (':', 'PUNCT'), ('time', 'NOUN'), ('process', 'NOUN'), ('waiting', 'VERB'), ('ready', 'ADJ'), ('queue', 'NOUN'), ('(', 'PUNCT'), ('Minimize', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Waiting', 'ROOT'), ('time', 'dobj'), (':', 'punct'), ('time', 'pobj'), ('process', 'nsubj'), ('waiting', 'relcl'), ('ready', 'amod'), ('queue', 'pobj'), ('(', 'punct'), ('Minimize', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Waiting, time], [time, :], [:, time], [time, process], [process, waiting], [waiting, ready], [ready, queue], [queue, (], [(, Minimize], [Minimize, )], [), .]]

>> Trigrams: 
[[Waiting, time, :], [time, :, time], [:, time, process], [time, process, waiting], [process, waiting, ready], [waiting, ready, queue], [ready, queue, (], [queue, (, Minimize], [(, Minimize, )], [Minimize, ), .]]

>> Noun Phrases are: 
[time, : amount, time, a process, the ready queue, (Minimize]

>> Named Entities are: 
[('Minimize', 'PERSON')]


============================ Sentence 23 =============================

Waiting time = 


>> Tokens are: 
[Waiting, time, =] 

>> PoS Tags are: 
[('Waiting', 'VERB'), ('time', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Waiting', 'compound'), ('time', 'ROOT'), ('=', 'punct')]

>> Bigrams: 
[[Waiting, time], [time, =]]

>> Trigrams: 
[[Waiting, time, =]]

>> Noun Phrases are: 
[Waiting time]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

Turnaround time – Actual execution time     


>> Tokens are: 
[Turnaround, time, –, Actual, execution, time,    ] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('time', 'NOUN'), ('–', 'PUNCT'), ('Actual', 'ADJ'), ('execution', 'NOUN'), ('time', 'NOUN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('time', 'dep'), ('–', 'punct'), ('Actual', 'amod'), ('execution', 'compound'), ('time', 'appos'), ('   ', 'ROOT')]

>> Bigrams: 
[[Turnaround, time], [time, –], [–, Actual], [Actual, execution], [execution, time], [time,    ]]

>> Trigrams: 
[[Turnaround, time, –], [time, –, Actual], [–, Actual, execution], [Actual, execution, time], [execution, time,    ]]

>> Noun Phrases are: 
[Actual execution time]

>> Named Entities are: 
[]


============================ Sentence 25 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 26 =============================

Types of schedulers Section - 3      Types of schedulers                             Admit Ready Queue Dispatch Time-out Event Wait Exit Processor Blocked Queue Event Occurs   


>> Tokens are: 
[Types, schedulers, Section, -, 3,      , Types, schedulers,                             , Admit, Ready, Queue, Dispatch, Time, -, Event, Wait, Exit, Processor, Blocked, Queue, Event, Occurs,  ] 

>> PoS Tags are: 
[('Types', 'NOUN'), ('schedulers', 'NOUN'), ('Section', 'PROPN'), ('-', 'PUNCT'), ('3', 'NUM'), ('     ', 'SPACE'), ('Types', 'PROPN'), ('schedulers', 'NOUN'), ('                            ', 'SPACE'), ('Admit', 'PROPN'), ('Ready', 'PROPN'), ('Queue', 'PROPN'), ('Dispatch', 'PROPN'), ('Time', 'PROPN'), ('-', 'PUNCT'), ('Event', 'NOUN'), ('Wait', 'VERB'), ('Exit', 'NOUN'), ('Processor', 'PROPN'), ('Blocked', 'VERB'), ('Queue', 'PROPN'), ('Event', 'NOUN'), ('Occurs', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Types', 'nmod'), ('schedulers', 'pobj'), ('Section', 'nmod'), ('-', 'punct'), ('3', 'nummod'), ('     ', 'compound'), ('Types', 'nsubj'), ('schedulers', 'pobj'), ('                            ', 'compound'), ('Admit', 'compound'), ('Ready', 'compound'), ('Queue', 'compound'), ('Dispatch', 'compound'), ('Time', 'nmod'), ('-', 'punct'), ('Event', 'appos'), ('Wait', 'ROOT'), ('Exit', 'compound'), ('Processor', 'nsubj'), ('Blocked', 'compound'), ('Queue', 'compound'), ('Event', 'appos'), ('Occurs', 'ccomp'), (' ', 'punct')]

>> Bigrams: 
[[Types, schedulers], [schedulers, Section], [Section, -], [-, 3], [3,      ], [     , Types], [Types, schedulers], [schedulers,                             ], [                            , Admit], [Admit, Ready], [Ready, Queue], [Queue, Dispatch], [Dispatch, Time], [Time, -], [-, Event], [Event, Wait], [Wait, Exit], [Exit, Processor], [Processor, Blocked], [Blocked, Queue], [Queue, Event], [Event, Occurs], [Occurs,  ]]

>> Trigrams: 
[[Types, schedulers, Section], [schedulers, Section, -], [Section, -, 3], [-, 3,      ], [3,      , Types], [     , Types, schedulers], [Types, schedulers,                             ], [schedulers,                             , Admit], [                            , Admit, Ready], [Admit, Ready, Queue], [Ready, Queue, Dispatch], [Queue, Dispatch, Time], [Dispatch, Time, -], [Time, -, Event], [-, Event, Wait], [Event, Wait, Exit], [Wait, Exit, Processor], [Exit, Processor, Blocked], [Processor, Blocked, Queue], [Blocked, Queue, Event], [Queue, Event, Occurs], [Event, Occurs,  ]]

>> Noun Phrases are: 
[schedulers, schedulers,                             Admit Ready Queue Dispatch Time-out Event, Exit Processor, Blocked Queue Event]

>> Named Entities are: 
[('Section - 3      Types', 'LAW'), ('Ready Queue Dispatch Time-out', 'PERSON'), ('Exit Processor', 'PERSON')]


============================ Sentence 27 =============================

Long Term Scheduler Short Term 


>> Tokens are: 
[Long, Term, Scheduler, Short, Term] 

>> PoS Tags are: 
[('Long', 'PROPN'), ('Term', 'NOUN'), ('Scheduler', 'PROPN'), ('Short', 'PROPN'), ('Term', 'PROPN')] 

>> Dependency Tags are: 
[('Long', 'compound'), ('Term', 'compound'), ('Scheduler', 'ROOT'), ('Short', 'compound'), ('Term', 'appos')]

>> Bigrams: 
[[Long, Term], [Term, Scheduler], [Scheduler, Short], [Short, Term]]

>> Trigrams: 
[[Long, Term, Scheduler], [Term, Scheduler, Short], [Scheduler, Short, Term]]

>> Noun Phrases are: 
[Long Term Scheduler, Short Term]

>> Named Entities are: 
[('Long Term Scheduler', 'ORG')]


============================ Sentence 28 =============================

Scheduler Medium Term Scheduler     


>> Tokens are: 
[Scheduler, Medium, Term, Scheduler,    ] 

>> PoS Tags are: 
[('Scheduler', 'PROPN'), ('Medium', 'PROPN'), ('Term', 'NOUN'), ('Scheduler', 'PROPN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Scheduler', 'compound'), ('Medium', 'compound'), ('Term', 'compound'), ('Scheduler', 'ROOT'), ('   ', 'nummod')]

>> Bigrams: 
[[Scheduler, Medium], [Medium, Term], [Term, Scheduler], [Scheduler,    ]]

>> Trigrams: 
[[Scheduler, Medium, Term], [Medium, Term, Scheduler], [Term, Scheduler,    ]]

>> Noun Phrases are: 
[Scheduler Medium Term Scheduler]

>> Named Entities are: 
[]


============================ Sentence 29 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 30 =============================

Types of schedulers  	Long-Term Scheduler	Short-Term Scheduler	Medium-Term Scheduler  	 


>> Tokens are: 
[Types, schedulers,  	, Long, -, Term, Scheduler, 	, Short, -, Term, Scheduler, 	, Medium, -, Term, Scheduler,  	] 

>> PoS Tags are: 
[('Types', 'NOUN'), ('schedulers', 'NOUN'), (' \t', 'SPACE'), ('Long', 'ADJ'), ('-', 'PUNCT'), ('Term', 'PROPN'), ('Scheduler', 'PROPN'), ('\t', 'SPACE'), ('Short', 'PROPN'), ('-', 'PUNCT'), ('Term', 'PROPN'), ('Scheduler', 'PROPN'), ('\t', 'SPACE'), ('Medium', 'PROPN'), ('-', 'PUNCT'), ('Term', 'NOUN'), ('Scheduler', 'PROPN'), (' \t', 'SPACE')] 

>> Dependency Tags are: 
[('Types', 'ROOT'), ('schedulers', 'pobj'), (' \t', 'appos'), ('Long', 'amod'), ('-', 'punct'), ('Term', 'compound'), ('Scheduler', 'nmod'), ('\t', 'compound'), ('Short', 'compound'), ('-', 'punct'), ('Term', 'compound'), ('Scheduler', 'compound'), ('\t', 'compound'), ('Medium', 'compound'), ('-', 'punct'), ('Term', 'compound'), ('Scheduler', 'compound'), (' \t', 'appos')]

>> Bigrams: 
[[Types, schedulers], [schedulers,  	], [ 	, Long], [Long, -], [-, Term], [Term, Scheduler], [Scheduler, 	], [	, Short], [Short, -], [-, Term], [Term, Scheduler], [Scheduler, 	], [	, Medium], [Medium, -], [-, Term], [Term, Scheduler], [Scheduler,  	]]

>> Trigrams: 
[[Types, schedulers,  	], [schedulers,  	, Long], [ 	, Long, -], [Long, -, Term], [-, Term, Scheduler], [Term, Scheduler, 	], [Scheduler, 	, Short], [	, Short, -], [Short, -, Term], [-, Term, Scheduler], [Term, Scheduler, 	], [Scheduler, 	, Medium], [	, Medium, -], [Medium, -, Term], [-, Term, Scheduler], [Term, Scheduler,  	]]

>> Noun Phrases are: 
[Types, schedulers]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

It selects processes from pool and loads them into memory for execution. 


>> Tokens are: 
[selects, processes, pool, loads, memory, execution, .] 

>> PoS Tags are: 
[('selects', 'VERB'), ('processes', 'NOUN'), ('pool', 'NOUN'), ('loads', 'VERB'), ('memory', 'NOUN'), ('execution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('selects', 'ROOT'), ('processes', 'dobj'), ('pool', 'pobj'), ('loads', 'conj'), ('memory', 'pobj'), ('execution', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[selects, processes], [processes, pool], [pool, loads], [loads, memory], [memory, execution], [execution, .]]

>> Trigrams: 
[[selects, processes, pool], [processes, pool, loads], [pool, loads, memory], [loads, memory, execution], [memory, execution, .]]

>> Noun Phrases are: 
[It, processes, pool, them, memory, execution]

>> Named Entities are: 
[]


============================ Sentence 32 =============================

	It selects those processes which are ready to execute. 


>> Tokens are: 
[	, selects, processes, ready, execute, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('selects', 'VERB'), ('processes', 'NOUN'), ('ready', 'ADJ'), ('execute', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'dep'), ('selects', 'ROOT'), ('processes', 'dobj'), ('ready', 'acomp'), ('execute', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[	, selects], [selects, processes], [processes, ready], [ready, execute], [execute, .]]

>> Trigrams: 
[[	, selects, processes], [selects, processes, ready], [processes, ready, execute], [ready, execute, .]]

>> Noun Phrases are: 
[It, those processes]

>> Named Entities are: 
[]


============================ Sentence 33 =============================

	It can re-introduce the process into memory and execution can be continued. 


>> Tokens are: 
[	, -, introduce, process, memory, execution, continued, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'VERB'), ('introduce', 'VERB'), ('process', 'NOUN'), ('memory', 'NOUN'), ('execution', 'NOUN'), ('continued', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'amod'), ('-', 'nsubjpass'), ('introduce', 'advcl'), ('process', 'dobj'), ('memory', 'pobj'), ('execution', 'conj'), ('continued', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[	, -], [-, introduce], [introduce, process], [process, memory], [memory, execution], [execution, continued], [continued, .]]

>> Trigrams: 
[[	, -, introduce], [-, introduce, process], [introduce, process, memory], [process, memory, execution], [memory, execution, continued], [execution, continued, .]]

>> Noun Phrases are: 
[It, the process, memory, execution]

>> Named Entities are: 
[]


============================ Sentence 34 =============================

 	Speed is lesser than short term scheduler. 


>> Tokens are: 
[ 	, Speed, lesser, short, term, scheduler, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Speed', 'PROPN'), ('lesser', 'ADJ'), ('short', 'ADJ'), ('term', 'NOUN'), ('scheduler', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('Speed', 'nsubj'), ('lesser', 'acomp'), ('short', 'amod'), ('term', 'compound'), ('scheduler', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, Speed], [Speed, lesser], [lesser, short], [short, term], [term, scheduler], [scheduler, .]]

>> Trigrams: 
[[ 	, Speed, lesser], [Speed, lesser, short], [lesser, short, term], [short, term, scheduler], [term, scheduler, .]]

>> Noun Phrases are: 
[ 	Speed, short term scheduler]

>> Named Entities are: 
[]


============================ Sentence 35 =============================

	Speed is fastest among other two schedulers. 


>> Tokens are: 
[	, Speed, fastest, schedulers, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Speed', 'PROPN'), ('fastest', 'ADJ'), ('schedulers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Speed', 'nsubj'), ('fastest', 'acomp'), ('schedulers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Speed], [Speed, fastest], [fastest, schedulers], [schedulers, .]]

>> Trigrams: 
[[	, Speed, fastest], [Speed, fastest, schedulers], [fastest, schedulers, .]]

>> Noun Phrases are: 
[	Speed, other two schedulers]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 36 =============================

	Speed is in between both short and long term scheduler. 


>> Tokens are: 
[	, Speed, short, long, term, scheduler, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Speed', 'PROPN'), ('short', 'ADJ'), ('long', 'ADJ'), ('term', 'NOUN'), ('scheduler', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Speed', 'nsubj'), ('short', 'amod'), ('long', 'conj'), ('term', 'compound'), ('scheduler', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Speed], [Speed, short], [short, long], [long, term], [term, scheduler], [scheduler, .]]

>> Trigrams: 
[[	, Speed, short], [Speed, short, long], [short, long, term], [long, term, scheduler], [term, scheduler, .]]

>> Noun Phrases are: 
[	Speed, both short and long term scheduler]

>> Named Entities are: 
[]


============================ Sentence 37 =============================

 	 


>> Tokens are: 
[ 	] 

>> PoS Tags are: 
[(' \t', 'SPACE')] 

>> Dependency Tags are: 
[(' \t', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 38 =============================

It is almost absent or minimal in time sharing system. 


>> Tokens are: 
[absent, minimal, time, sharing, system, .] 

>> PoS Tags are: 
[('absent', 'ADJ'), ('minimal', 'ADJ'), ('time', 'NOUN'), ('sharing', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('absent', 'acomp'), ('minimal', 'conj'), ('time', 'compound'), ('sharing', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[absent, minimal], [minimal, time], [time, sharing], [sharing, system], [system, .]]

>> Trigrams: 
[[absent, minimal, time], [minimal, time, sharing], [time, sharing, system], [sharing, system, .]]

>> Noun Phrases are: 
[It, time sharing system]

>> Named Entities are: 
[]


============================ Sentence 39 =============================

	It is also minimal in time sharing system. 


>> Tokens are: 
[	, minimal, time, sharing, system, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('minimal', 'ADJ'), ('time', 'NOUN'), ('sharing', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'intj'), ('minimal', 'acomp'), ('time', 'compound'), ('sharing', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, minimal], [minimal, time], [time, sharing], [sharing, system], [system, .]]

>> Trigrams: 
[[	, minimal, time], [minimal, time, sharing], [time, sharing, system], [sharing, system, .]]

>> Noun Phrases are: 
[It, time sharing system]

>> Named Entities are: 
[]


============================ Sentence 40 =============================

	It is a part of time sharing systems. 


>> Tokens are: 
[	, time, sharing, systems, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('time', 'NOUN'), ('sharing', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'intj'), ('time', 'compound'), ('sharing', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, time], [time, sharing], [sharing, systems], [systems, .]]

>> Trigrams: 
[[	, time, sharing], [time, sharing, systems], [sharing, systems, .]]

>> Noun Phrases are: 
[It, a part, time sharing systems]

>> Named Entities are: 
[]


============================ Sentence 41 =============================

 	It is a job scheduler. 


>> Tokens are: 
[ 	, job, scheduler, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('job', 'NOUN'), ('scheduler', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'dep'), ('job', 'compound'), ('scheduler', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[ 	, job], [job, scheduler], [scheduler, .]]

>> Trigrams: 
[[ 	, job, scheduler], [job, scheduler, .]]

>> Noun Phrases are: 
[It, a job scheduler]

>> Named Entities are: 
[]


============================ Sentence 42 =============================

	It is a CPU scheduler. 


>> Tokens are: 
[	, CPU, scheduler, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('CPU', 'NOUN'), ('scheduler', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'dep'), ('CPU', 'compound'), ('scheduler', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[	, CPU], [CPU, scheduler], [scheduler, .]]

>> Trigrams: 
[[	, CPU, scheduler], [CPU, scheduler, .]]

>> Noun Phrases are: 
[It, a CPU scheduler]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

	It is a process swapping scheduler. 


>> Tokens are: 
[	, process, swapping, scheduler, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('process', 'NOUN'), ('swapping', 'NOUN'), ('scheduler', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'dep'), ('process', 'compound'), ('swapping', 'amod'), ('scheduler', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[	, process], [process, swapping], [swapping, scheduler], [scheduler, .]]

>> Trigrams: 
[[	, process, swapping], [process, swapping, scheduler], [swapping, scheduler, .]]

>> Noun Phrases are: 
[It, a process swapping scheduler]

>> Named Entities are: 
[]


============================ Sentence 44 =============================

    Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'dobj'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[    Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 45 =============================

Scheduling algorithms Section - 4      Scheduling algorithms First Come First Served (FCFS) 


>> Tokens are: 
[Scheduling, algorithms, Section, -, 4,      , Scheduling, algorithms, Come, Served, (, FCFS, )] 

>> PoS Tags are: 
[('Scheduling', 'NOUN'), ('algorithms', 'NOUN'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('4', 'NUM'), ('     ', 'SPACE'), ('Scheduling', 'PROPN'), ('algorithms', 'NOUN'), ('Come', 'PROPN'), ('Served', 'PROPN'), ('(', 'PUNCT'), ('FCFS', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Scheduling', 'compound'), ('algorithms', 'nmod'), ('Section', 'nmod'), ('-', 'punct'), ('4', 'nummod'), ('     ', 'compound'), ('Scheduling', 'compound'), ('algorithms', 'ROOT'), ('Come', 'appos'), ('Served', 'dobj'), ('(', 'punct'), ('FCFS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Scheduling, algorithms], [algorithms, Section], [Section, -], [-, 4], [4,      ], [     , Scheduling], [Scheduling, algorithms], [algorithms, Come], [Come, Served], [Served, (], [(, FCFS], [FCFS, )]]

>> Trigrams: 
[[Scheduling, algorithms, Section], [algorithms, Section, -], [Section, -, 4], [-, 4,      ], [4,      , Scheduling], [     , Scheduling, algorithms], [Scheduling, algorithms, Come], [algorithms, Come, Served], [Come, Served, (], [Served, (, FCFS], [(, FCFS, )]]

>> Noun Phrases are: 
[Scheduling algorithms Section - 4      Scheduling algorithms, First Come, First Served, FCFS]

>> Named Entities are: 
[('First', 'ORDINAL'), ('FCFS', 'ORG')]


============================ Sentence 46 =============================

Shortest Job First (SJF) 


>> Tokens are: 
[Shortest, Job, (, SJF, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Job', 'PROPN'), ('(', 'PUNCT'), ('SJF', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'compound'), ('Job', 'compound'), ('(', 'punct'), ('SJF', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Job], [Job, (], [(, SJF], [SJF, )]]

>> Trigrams: 
[[Shortest, Job, (], [Job, (, SJF], [(, SJF, )]]

>> Noun Phrases are: 
[Shortest Job First, (SJF]

>> Named Entities are: 
[('SJF', 'ORG')]


============================ Sentence 47 =============================

Shortest Remaining Time Next (SRTN) 


>> Tokens are: 
[Shortest, Remaining, Time, (, SRTN, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('SRTN', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'nmod'), ('Remaining', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('SRTN', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Remaining], [Remaining, Time], [Time, (], [(, SRTN], [SRTN, )]]

>> Trigrams: 
[[Shortest, Remaining, Time], [Remaining, Time, (], [Time, (, SRTN], [(, SRTN, )]]

>> Noun Phrases are: 
[Shortest Remaining Time, (SRTN]

>> Named Entities are: 
[('Shortest Remaining Time Next', 'PERSON')]


============================ Sentence 48 =============================

Round Robin (RR) Priority Preemptive Non-Preemptive    Prof. 


>> Tokens are: 
[Round, Robin, (, RR, ), Priority, Preemptive, Non, -, Preemptive,    , Prof.] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'PROPN'), (')', 'PUNCT'), ('Priority', 'PROPN'), ('Preemptive', 'PROPN'), ('Non', 'ADJ'), ('-', 'ADJ'), ('Preemptive', 'ADJ'), ('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'ROOT'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('Priority', 'compound'), ('Preemptive', 'compound'), ('Non', 'amod'), ('-', 'amod'), ('Preemptive', 'amod'), ('   ', 'compound'), ('Prof.', 'appos')]

>> Bigrams: 
[[Round, Robin], [Robin, (], [(, RR], [RR, )], [), Priority], [Priority, Preemptive], [Preemptive, Non], [Non, -], [-, Preemptive], [Preemptive,    ], [   , Prof.]]

>> Trigrams: 
[[Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ), Priority], [), Priority, Preemptive], [Priority, Preemptive, Non], [Preemptive, Non, -], [Non, -, Preemptive], [-, Preemptive,    ], [Preemptive,    , Prof.]]

>> Noun Phrases are: 
[Round Robin, (RR) Priority Preemptive Non-Preemptive    Prof.]

>> Named Entities are: 
[('Round Robin', 'PERSON')]


============================ Sentence 49 =============================

Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 50 =============================

First Come First Served (FCFS) Section – 4.1      First Come First Served (FCFS) 


>> Tokens are: 
[Come, Served, (, FCFS, ), Section, –, 4.1,      , Come, Served, (, FCFS, )] 

>> PoS Tags are: 
[('Come', 'PROPN'), ('Served', 'PROPN'), ('(', 'PUNCT'), ('FCFS', 'PROPN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('4.1', 'NUM'), ('     ', 'SPACE'), ('Come', 'PROPN'), ('Served', 'PROPN'), ('(', 'PUNCT'), ('FCFS', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Come', 'compound'), ('Served', 'nmod'), ('(', 'punct'), ('FCFS', 'appos'), (')', 'punct'), ('Section', 'ROOT'), ('–', 'punct'), ('4.1', 'nummod'), ('     ', 'nsubj'), ('Come', 'acl'), ('Served', 'dobj'), ('(', 'punct'), ('FCFS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Come, Served], [Served, (], [(, FCFS], [FCFS, )], [), Section], [Section, –], [–, 4.1], [4.1,      ], [     , Come], [Come, Served], [Served, (], [(, FCFS], [FCFS, )]]

>> Trigrams: 
[[Come, Served, (], [Served, (, FCFS], [(, FCFS, )], [FCFS, ), Section], [), Section, –], [Section, –, 4.1], [–, 4.1,      ], [4.1,      , Come], [     , Come, Served], [Come, Served, (], [Served, (, FCFS], [(, FCFS, )]]

>> Noun Phrases are: 
[FCFS, First Served, FCFS]

>> Named Entities are: 
[('First', 'ORDINAL'), ('4.1', 'CARDINAL'), ('FCFS', 'ORG')]


============================ Sentence 51 =============================

Selection criteria: The process that request first is served first. 


>> Tokens are: 
[Selection, criteria, :, process, request, served, .] 

>> PoS Tags are: 
[('Selection', 'NOUN'), ('criteria', 'NOUN'), (':', 'PUNCT'), ('process', 'NOUN'), ('request', 'VERB'), ('served', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Selection', 'nsubj'), ('criteria', 'ROOT'), (':', 'punct'), ('process', 'nsubjpass'), ('request', 'relcl'), ('served', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Selection, criteria], [criteria, :], [:, process], [process, request], [request, served], [served, .]]

>> Trigrams: 
[[Selection, criteria, :], [criteria, :, process], [:, process, request], [process, request, served], [request, served, .]]

>> Noun Phrases are: 
[Selection, The process]

>> Named Entities are: 
[('first', 'ORDINAL'), ('first', 'ORDINAL')]


============================ Sentence 52 =============================

It means that processes are served in the exact order of their arrival. 


>> Tokens are: 
[means, processes, served, exact, order, arrival, .] 

>> PoS Tags are: 
[('means', 'VERB'), ('processes', 'NOUN'), ('served', 'VERB'), ('exact', 'ADJ'), ('order', 'NOUN'), ('arrival', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('means', 'ROOT'), ('processes', 'nsubjpass'), ('served', 'ccomp'), ('exact', 'amod'), ('order', 'pobj'), ('arrival', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[means, processes], [processes, served], [served, exact], [exact, order], [order, arrival], [arrival, .]]

>> Trigrams: 
[[means, processes, served], [processes, served, exact], [served, exact, order], [exact, order, arrival], [order, arrival, .]]

>> Noun Phrases are: 
[It, processes, the exact order, their arrival]

>> Named Entities are: 
[]


============================ Sentence 53 =============================

    Decision Mode: Non preemptive: Once a process is selected, it runs until it is blocked for an I/O or some other event or it is terminated. 


>> Tokens are: 
[    , Decision, Mode, :, Non, preemptive, :, process, selected, ,, runs, blocked, /, O, event, terminated, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Decision', 'NOUN'), ('Mode', 'PROPN'), (':', 'PUNCT'), ('Non', 'VERB'), ('preemptive', 'ADJ'), (':', 'PUNCT'), ('process', 'NOUN'), ('selected', 'VERB'), (',', 'PUNCT'), ('runs', 'VERB'), ('blocked', 'VERB'), ('/', 'SYM'), ('O', 'INTJ'), ('event', 'NOUN'), ('terminated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Decision', 'compound'), ('Mode', 'dep'), (':', 'punct'), ('Non', 'appos'), ('preemptive', 'advmod'), (':', 'punct'), ('process', 'nsubjpass'), ('selected', 'advcl'), (',', 'punct'), ('runs', 'ROOT'), ('blocked', 'advcl'), ('/', 'punct'), ('O', 'pobj'), ('event', 'conj'), ('terminated', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[    , Decision], [Decision, Mode], [Mode, :], [:, Non], [Non, preemptive], [preemptive, :], [:, process], [process, selected], [selected, ,], [,, runs], [runs, blocked], [blocked, /], [/, O], [O, event], [event, terminated], [terminated, .]]

>> Trigrams: 
[[    , Decision, Mode], [Decision, Mode, :], [Mode, :, Non], [:, Non, preemptive], [Non, preemptive, :], [preemptive, :, process], [:, process, selected], [process, selected, ,], [selected, ,, runs], [,, runs, blocked], [runs, blocked, /], [blocked, /, O], [/, O, event], [O, event, terminated], [event, terminated, .]]

>> Noun Phrases are: 
[a process, it, it, some other event, it]

>> Named Entities are: 
[]


============================ Sentence 54 =============================

Implementation: 


>> Tokens are: 
[Implementation, :] 

>> PoS Tags are: 
[('Implementation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Implementation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Implementation, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Implementation]

>> Named Entities are: 
[]


============================ Sentence 55 =============================

This strategy can be easily implemented by using FIFO (First In First Out) queue.   


>> Tokens are: 
[strategy, easily, implemented, FIFO, (, ), queue, .,  ] 

>> PoS Tags are: 
[('strategy', 'NOUN'), ('easily', 'ADV'), ('implemented', 'VERB'), ('FIFO', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('queue', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('strategy', 'nsubjpass'), ('easily', 'advmod'), ('implemented', 'ROOT'), ('FIFO', 'dobj'), ('(', 'punct'), (')', 'punct'), ('queue', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[strategy, easily], [easily, implemented], [implemented, FIFO], [FIFO, (], [(, )], [), queue], [queue, .], [.,  ]]

>> Trigrams: 
[[strategy, easily, implemented], [easily, implemented, FIFO], [implemented, FIFO, (], [FIFO, (, )], [(, ), queue], [), queue, .], [queue, .,  ]]

>> Noun Phrases are: 
[This strategy, FIFO, First Out, ) queue]

>> Named Entities are: 
[('FIFO', 'ORG'), ('First', 'ORDINAL'), ('First', 'ORDINAL')]


============================ Sentence 56 =============================

When CPU becomes free, a process from the first position in a queue is selected to run. 


>> Tokens are: 
[CPU, free, ,, process, position, queue, selected, run, .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('free', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('position', 'NOUN'), ('queue', 'NOUN'), ('selected', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'nsubj'), ('free', 'acomp'), (',', 'punct'), ('process', 'nsubjpass'), ('position', 'pobj'), ('queue', 'pobj'), ('selected', 'ROOT'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CPU, free], [free, ,], [,, process], [process, position], [position, queue], [queue, selected], [selected, run], [run, .]]

>> Trigrams: 
[[CPU, free, ,], [free, ,, process], [,, process, position], [process, position, queue], [position, queue, selected], [queue, selected, run], [selected, run, .]]

>> Noun Phrases are: 
[CPU, a process, the first position, a queue]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 57 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 58 =============================

Head Tail P1 P2 P3  Ready queue P0     


>> Tokens are: 
[Head, Tail, P1, P2, P3,  , Ready, queue, P0,    ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('P3', 'VERB'), (' ', 'SPACE'), ('Ready', 'PROPN'), ('queue', 'NOUN'), ('P0', 'PROPN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'compound'), ('P2', 'nsubj'), ('P3', 'ROOT'), (' ', 'compound'), ('Ready', 'amod'), ('queue', 'compound'), ('P0', 'npadvmod'), ('   ', 'nummod')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, P2], [P2, P3], [P3,  ], [ , Ready], [Ready, queue], [queue, P0], [P0,    ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, P2], [P1, P2, P3], [P2, P3,  ], [P3,  , Ready], [ , Ready, queue], [Ready, queue, P0], [queue, P0,    ]]

>> Noun Phrases are: 
[Head Tail P1 P2]

>> Named Entities are: 
[('P1 P2 P3', 'PRODUCT')]


============================ Sentence 59 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 60 =============================

First Come First Served (FCFS)         


>> Tokens are: 
[Come, Served, (, FCFS, ),        ] 

>> PoS Tags are: 
[('Come', 'PROPN'), ('Served', 'PROPN'), ('(', 'PUNCT'), ('FCFS', 'PROPN'), (')', 'PUNCT'), ('       ', 'SPACE')] 

>> Dependency Tags are: 
[('Come', 'compound'), ('Served', 'ROOT'), ('(', 'punct'), ('FCFS', 'appos'), (')', 'punct'), ('       ', 'punct')]

>> Bigrams: 
[[Come, Served], [Served, (], [(, FCFS], [FCFS, )], [),        ]]

>> Trigrams: 
[[Come, Served, (], [Served, (, FCFS], [(, FCFS, )], [FCFS, ),        ]]

>> Noun Phrases are: 
[First Come First Served, FCFS]

>> Named Entities are: 
[('First', 'ORDINAL'), ('FCFS', 'ORG')]


============================ Sentence 61 =============================

Gantt Chart   Average Turnaround Time:	 (10+15+15+17)/4 	=	14.25 ms. 


>> Tokens are: 
[Gantt, Chart,   , Average, Turnaround, Time, :, 	 , (, 10, +, 15, +, 15, +, 17)/4, 	, =, 	, 14.25, ms, .] 

>> PoS Tags are: 
[('Gantt', 'PROPN'), ('Chart', 'PROPN'), ('  ', 'SPACE'), ('Average', 'PROPN'), ('Turnaround', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('\t ', 'SPACE'), ('(', 'PUNCT'), ('10', 'NUM'), ('+', 'SYM'), ('15', 'NUM'), ('+', 'SYM'), ('15', 'NUM'), ('+', 'SYM'), ('17)/4', 'NUM'), ('\t', 'SPACE'), ('=', 'PUNCT'), ('\t', 'SPACE'), ('14.25', 'NUM'), ('ms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Gantt', 'compound'), ('Chart', 'nsubj'), ('  ', 'nmod'), ('Average', 'compound'), ('Turnaround', 'compound'), ('Time', 'dep'), (':', 'punct'), ('\t ', 'appos'), ('(', 'punct'), ('10', 'appos'), ('+', 'punct'), ('15', 'appos'), ('+', 'punct'), ('15', 'appos'), ('+', 'punct'), ('17)/4', 'appos'), ('\t', 'appos'), ('=', 'punct'), ('\t', 'ROOT'), ('14.25', 'nummod'), ('ms', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Gantt, Chart], [Chart,   ], [  , Average], [Average, Turnaround], [Turnaround, Time], [Time, :], [:, 	 ], [	 , (], [(, 10], [10, +], [+, 15], [15, +], [+, 15], [15, +], [+, 17)/4], [17)/4, 	], [	, =], [=, 	], [	, 14.25], [14.25, ms], [ms, .]]

>> Trigrams: 
[[Gantt, Chart,   ], [Chart,   , Average], [  , Average, Turnaround], [Average, Turnaround, Time], [Turnaround, Time, :], [Time, :, 	 ], [:, 	 , (], [	 , (, 10], [(, 10, +], [10, +, 15], [+, 15, +], [15, +, 15], [+, 15, +], [15, +, 17)/4], [+, 17)/4, 	], [17)/4, 	, =], [	, =, 	], [=, 	, 14.25], [	, 14.25, ms], [14.25, ms, .]]

>> Noun Phrases are: 
[Gantt Chart, 14.25 ms]

>> Named Entities are: 
[('10', 'CARDINAL'), ('14.25', 'CARDINAL')]


============================ Sentence 62 =============================

Average Waiting Time:	 (0+9+13+13)/4  	= 


>> Tokens are: 
[Average, Waiting, Time, :, 	 , (, 0, +, 9, +, 13, +, 13)/4,  	, =] 

>> PoS Tags are: 
[('Average', 'PROPN'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('\t ', 'SPACE'), ('(', 'PUNCT'), ('0', 'NUM'), ('+', 'SYM'), ('9', 'NUM'), ('+', 'SYM'), ('13', 'NUM'), ('+', 'SYM'), ('13)/4', 'NUM'), (' \t', 'SPACE'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Average', 'compound'), ('Waiting', 'compound'), ('Time', 'ROOT'), (':', 'punct'), ('\t ', 'appos'), ('(', 'punct'), ('0', 'appos'), ('+', 'punct'), ('9', 'npadvmod'), ('+', 'punct'), ('13', 'npadvmod'), ('+', 'punct'), ('13)/4', 'nummod'), (' \t', 'appos'), ('=', 'punct')]

>> Bigrams: 
[[Average, Waiting], [Waiting, Time], [Time, :], [:, 	 ], [	 , (], [(, 0], [0, +], [+, 9], [9, +], [+, 13], [13, +], [+, 13)/4], [13)/4,  	], [ 	, =]]

>> Trigrams: 
[[Average, Waiting, Time], [Waiting, Time, :], [Time, :, 	 ], [:, 	 , (], [	 , (, 0], [(, 0, +], [0, +, 9], [+, 9, +], [9, +, 13], [+, 13, +], [13, +, 13)/4], [+, 13)/4,  	], [13)/4,  	, =]]

>> Noun Phrases are: 
[Average Waiting Time]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

	8.75 ms. 


>> Tokens are: 
[	, 8.75, ms, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('8.75', 'NUM'), ('ms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('8.75', 'nummod'), ('ms', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[	, 8.75], [8.75, ms], [ms, .]]

>> Trigrams: 
[[	, 8.75, ms], [8.75, ms, .]]

>> Noun Phrases are: 
[8.75 ms]

>> Named Entities are: 
[('8.75', 'CARDINAL')]


============================ Sentence 64 =============================

	Process	Arrival Time (T0) 


>> Tokens are: 
[	, Process, 	, Arrival, Time, (, T0, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Arrival', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('T0', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, Arrival], [Arrival, Time], [Time, (], [(, T0], [T0, )]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, Arrival], [	, Arrival, Time], [Arrival, Time, (], [Time, (, T0], [(, T0, )]]

>> Noun Phrases are: 
[	Process	Arrival Time, (T0]

>> Named Entities are: 
[]


============================ Sentence 65 =============================

	Burst Time (ΔT) 


>> Tokens are: 
[	, Burst, Time, (, ΔT, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Burst', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Burst], [Burst, Time], [Time, (], [(, ΔT], [ΔT, )]]

>> Trigrams: 
[[	, Burst, Time], [Burst, Time, (], [Time, (, ΔT], [(, ΔT, )]]

>> Noun Phrases are: 
[	Burst Time, (ΔT]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

	P0	0 


>> Tokens are: 
[	, P0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P0', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

	10 	P1	1	6 	P2	3	2 	P3	5	4  	Finish Time (T1)  	Turnaround Time 


>> Tokens are: 
[	, 10, 	, P1, 	, 1, 	, 6, 	, P2, 	, 3, 	, 2, 	, P3, 	, 5, 	, 4,  	, Finish, Time, (, T1, ),  	, Turnaround, Time] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('10', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Finish', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T1', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Turnaround', 'PROPN'), ('Time', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('10', 'nummod'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'nmod'), ('5', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), (' \t', 'nummod'), ('Finish', 'compound'), ('Time', 'dobj'), ('(', 'punct'), ('T1', 'appos'), (')', 'punct'), (' \t', 'nummod'), ('Turnaround', 'compound'), ('Time', 'appos')]

>> Bigrams: 
[[	, 10], [10, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, P2], [P2, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 5], [5, 	], [	, 4], [4,  	], [ 	, Finish], [Finish, Time], [Time, (], [(, T1], [T1, )], [),  	], [ 	, Turnaround], [Turnaround, Time]]

>> Trigrams: 
[[	, 10, 	], [10, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, P2], [	, P2, 	], [P2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4,  	], [4,  	, Finish], [ 	, Finish, Time], [Finish, Time, (], [Time, (, T1], [(, T1, )], [T1, ),  	], [),  	, Turnaround], [ 	, Turnaround, Time]]

>> Noun Phrases are: 
[	2 	P3, 	5	4  	Finish Time, (T1,  	Turnaround Time]

>> Named Entities are: 
[('Finish', 'NORP'), ('T1', 'CARDINAL'), ('Turnaround Time', 'PERSON')]


============================ Sentence 68 =============================

(TAT = T1 - T0)  	Waiting Time (WT = TAT - ΔT)  	10  	16  	18  	22  	10  	15  	15  	17  	0 


>> Tokens are: 
[(, TAT, =, T1, -, T0, ),  	, Waiting, Time, (, WT, =, TAT, -, ΔT, ),  	, 10,  	, 16,  	, 18,  	, 22,  	, 10,  	, 15,  	, 15,  	, 17,  	, 0] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TAT', 'PROPN'), ('=', 'SYM'), ('T1', 'PROPN'), ('-', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('WT', 'PROPN'), ('=', 'SYM'), ('TAT', 'PROPN'), ('-', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('10', 'NUM'), (' \t', 'SPACE'), ('16', 'NUM'), (' \t', 'SPACE'), ('18', 'NUM'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('10', 'NUM'), (' \t', 'SPACE'), ('15', 'NUM'), (' \t', 'SPACE'), ('15', 'NUM'), (' \t', 'SPACE'), ('17', 'NUM'), (' \t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TAT', 'nmod'), ('=', 'punct'), ('T1', 'compound'), ('-', 'punct'), ('T0', 'ROOT'), (')', 'punct'), (' \t', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('WT', 'nmod'), ('=', 'punct'), ('TAT', 'compound'), ('-', 'punct'), ('ΔT', 'appos'), (')', 'punct'), (' \t', 'nmod'), ('10', 'nummod'), (' \t', 'nmod'), ('16', 'nummod'), (' \t', 'nmod'), ('18', 'nummod'), (' \t', 'nmod'), ('22', 'nummod'), (' \t', 'quantmod'), ('10', 'nummod'), (' \t', 'quantmod'), ('15', 'nummod'), (' \t', 'compound'), ('15', 'nummod'), (' \t', 'compound'), ('17', 'nummod'), (' \t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[(, TAT], [TAT, =], [=, T1], [T1, -], [-, T0], [T0, )], [),  	], [ 	, Waiting], [Waiting, Time], [Time, (], [(, WT], [WT, =], [=, TAT], [TAT, -], [-, ΔT], [ΔT, )], [),  	], [ 	, 10], [10,  	], [ 	, 16], [16,  	], [ 	, 18], [18,  	], [ 	, 22], [22,  	], [ 	, 10], [10,  	], [ 	, 15], [15,  	], [ 	, 15], [15,  	], [ 	, 17], [17,  	], [ 	, 0]]

>> Trigrams: 
[[(, TAT, =], [TAT, =, T1], [=, T1, -], [T1, -, T0], [-, T0, )], [T0, ),  	], [),  	, Waiting], [ 	, Waiting, Time], [Waiting, Time, (], [Time, (, WT], [(, WT, =], [WT, =, TAT], [=, TAT, -], [TAT, -, ΔT], [-, ΔT, )], [ΔT, ),  	], [),  	, 10], [ 	, 10,  	], [10,  	, 16], [ 	, 16,  	], [16,  	, 18], [ 	, 18,  	], [18,  	, 22], [ 	, 22,  	], [22,  	, 10], [ 	, 10,  	], [10,  	, 15], [ 	, 15,  	], [15,  	, 15], [ 	, 15,  	], [15,  	, 17], [ 	, 17,  	], [17,  	, 0]]

>> Noun Phrases are: 
[(TAT = T1 - T0,  	Waiting Time, (WT = TAT - ΔT]

>> Named Entities are: 
[('TAT', 'ORG'), ('T1', 'CARDINAL'), ('Waiting Time', 'PERSON'), ('TAT - ΔT', 'ORG'), ('10', 'CARDINAL'), ('16', 'CARDINAL'), ('18', 'CARDINAL'), ('22', 'CARDINAL'), ('10', 'CARDINAL'), ('15', 'CARDINAL'), ('15', 'CARDINAL'), ('17', 'CARDINAL'), ('0', 'CARDINAL')]


============================ Sentence 69 =============================

 	9  	13  	13  P0 P1 P2 P3 0 10 16 18 22     


>> Tokens are: 
[ 	, 9,  	, 13,  	, 13,  , P0, P1, P2, P3, 0, 10, 16, 18, 22,    ] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('13', 'NUM'), (' \t', 'SPACE'), ('13', 'NUM'), (' ', 'SPACE'), ('P0', 'PROPN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('P3', 'PROPN'), ('0', 'NUM'), ('10', 'NUM'), ('16', 'NUM'), ('18', 'NUM'), ('22', 'NUM'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[(' \t', 'nmod'), ('9', 'nummod'), (' \t', 'nmod'), ('13', 'nummod'), (' \t', 'nmod'), ('13', 'nummod'), (' ', 'dep'), ('P0', 'nsubj'), ('P1', 'compound'), ('P2', 'appos'), ('P3', 'ROOT'), ('0', 'nummod'), ('10', 'quantmod'), ('16', 'quantmod'), ('18', 'quantmod'), ('22', 'nummod'), ('   ', 'nummod')]

>> Bigrams: 
[[ 	, 9], [9,  	], [ 	, 13], [13,  	], [ 	, 13], [13,  ], [ , P0], [P0, P1], [P1, P2], [P2, P3], [P3, 0], [0, 10], [10, 16], [16, 18], [18, 22], [22,    ]]

>> Trigrams: 
[[ 	, 9,  	], [9,  	, 13], [ 	, 13,  	], [13,  	, 13], [ 	, 13,  ], [13,  , P0], [ , P0, P1], [P0, P1, P2], [P1, P2, P3], [P2, P3, 0], [P3, 0, 10], [0, 10, 16], [10, 16, 18], [16, 18, 22], [18, 22,    ]]

>> Noun Phrases are: 
[P0, P1 P2]

>> Named Entities are: 
[('9', 'CARDINAL'), ('13', 'CARDINAL'), ('13', 'CARDINAL'), ('P0 P1 P2 P3', 'PRODUCT')]


============================ Sentence 70 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 71 =============================

First Come First Served (FCFS) 


>> Tokens are: 
[Come, Served, (, FCFS, )] 

>> PoS Tags are: 
[('Come', 'PROPN'), ('Served', 'PROPN'), ('(', 'PUNCT'), ('FCFS', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Come', 'compound'), ('Served', 'ROOT'), ('(', 'punct'), ('FCFS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Come, Served], [Served, (], [(, FCFS], [FCFS, )]]

>> Trigrams: 
[[Come, Served, (], [Served, (, FCFS], [(, FCFS, )]]

>> Noun Phrases are: 
[First Come First Served, FCFS]

>> Named Entities are: 
[('First', 'ORDINAL')]


============================ Sentence 72 =============================

Advantages Simple and fair. 


>> Tokens are: 
[Advantages, Simple, fair, .] 

>> PoS Tags are: 
[('Advantages', 'PROPN'), ('Simple', 'PROPN'), ('fair', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Advantages', 'compound'), ('Simple', 'ROOT'), ('fair', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Advantages, Simple], [Simple, fair], [fair, .]]

>> Trigrams: 
[[Advantages, Simple, fair], [Simple, fair, .]]

>> Noun Phrases are: 
[Advantages Simple]

>> Named Entities are: 
[]


============================ Sentence 73 =============================

Easy to understand and implement. 


>> Tokens are: 
[Easy, understand, implement, .] 

>> PoS Tags are: 
[('Easy', 'ADJ'), ('understand', 'VERB'), ('implement', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Easy', 'ROOT'), ('understand', 'xcomp'), ('implement', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Easy, understand], [understand, implement], [implement, .]]

>> Trigrams: 
[[Easy, understand, implement], [understand, implement, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 74 =============================

Every process will get a chance to run, so starvation doesn't occur. 


>> Tokens are: 
[process, chance, run, ,, starvation, occur, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('chance', 'NOUN'), ('run', 'VERB'), (',', 'PUNCT'), ('starvation', 'NOUN'), ('occur', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('chance', 'dobj'), ('run', 'acl'), (',', 'punct'), ('starvation', 'nsubj'), ('occur', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[process, chance], [chance, run], [run, ,], [,, starvation], [starvation, occur], [occur, .]]

>> Trigrams: 
[[process, chance, run], [chance, run, ,], [run, ,, starvation], [,, starvation, occur], [starvation, occur, .]]

>> Noun Phrases are: 
[Every process, a chance, starvation]

>> Named Entities are: 
[]


============================ Sentence 75 =============================

Starvation is the problem that occurs when high priority processes keep executing and low priority processes get blocked for indefinite time. 


>> Tokens are: 
[Starvation, problem, occurs, high, priority, processes, executing, low, priority, processes, blocked, indefinite, time, .] 

>> PoS Tags are: 
[('Starvation', 'NOUN'), ('problem', 'NOUN'), ('occurs', 'VERB'), ('high', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('executing', 'NOUN'), ('low', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('blocked', 'VERB'), ('indefinite', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Starvation', 'nsubj'), ('problem', 'attr'), ('occurs', 'relcl'), ('high', 'amod'), ('priority', 'compound'), ('processes', 'nsubj'), ('executing', 'dobj'), ('low', 'amod'), ('priority', 'compound'), ('processes', 'nsubjpass'), ('blocked', 'conj'), ('indefinite', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Starvation, problem], [problem, occurs], [occurs, high], [high, priority], [priority, processes], [processes, executing], [executing, low], [low, priority], [priority, processes], [processes, blocked], [blocked, indefinite], [indefinite, time], [time, .]]

>> Trigrams: 
[[Starvation, problem, occurs], [problem, occurs, high], [occurs, high, priority], [high, priority, processes], [priority, processes, executing], [processes, executing, low], [executing, low, priority], [low, priority, processes], [priority, processes, blocked], [processes, blocked, indefinite], [blocked, indefinite, time], [indefinite, time, .]]

>> Noun Phrases are: 
[Starvation, the problem, high priority processes, executing, low priority processes, indefinite time]

>> Named Entities are: 
[]


============================ Sentence 76 =============================

Disadvantages  Not efficient because average waiting time is too high. 


>> Tokens are: 
[Disadvantages,  , efficient, average, waiting, time, high, .] 

>> PoS Tags are: 
[('Disadvantages', 'NOUN'), (' ', 'SPACE'), ('efficient', 'ADJ'), ('average', 'ADJ'), ('waiting', 'VERB'), ('time', 'NOUN'), ('high', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Disadvantages', 'ROOT'), (' ', 'nummod'), ('efficient', 'amod'), ('average', 'amod'), ('waiting', 'amod'), ('time', 'nsubj'), ('high', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Disadvantages,  ], [ , efficient], [efficient, average], [average, waiting], [waiting, time], [time, high], [high, .]]

>> Trigrams: 
[[Disadvantages,  , efficient], [ , efficient, average], [efficient, average, waiting], [average, waiting, time], [waiting, time, high], [time, high, .]]

>> Noun Phrases are: 
[Disadvantages, average waiting time]

>> Named Entities are: 
[]


============================ Sentence 77 =============================

Convoy effect is possible. 


>> Tokens are: 
[Convoy, effect, possible, .] 

>> PoS Tags are: 
[('Convoy', 'PROPN'), ('effect', 'NOUN'), ('possible', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Convoy', 'compound'), ('effect', 'nsubj'), ('possible', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Convoy, effect], [effect, possible], [possible, .]]

>> Trigrams: 
[[Convoy, effect, possible], [effect, possible, .]]

>> Noun Phrases are: 
[Convoy effect]

>> Named Entities are: 
[]


============================ Sentence 78 =============================

All small I/O bound processes wait for one big CPU bound process to acquire CPU. 


>> Tokens are: 
[small, /, O, bound, processes, wait, big, CPU, bound, process, acquire, CPU, .] 

>> PoS Tags are: 
[('small', 'ADJ'), ('/', 'SYM'), ('O', 'INTJ'), ('bound', 'VERB'), ('processes', 'NOUN'), ('wait', 'VERB'), ('big', 'ADJ'), ('CPU', 'NOUN'), ('bound', 'VERB'), ('process', 'NOUN'), ('acquire', 'VERB'), ('CPU', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('small', 'amod'), ('/', 'punct'), ('O', 'nmod'), ('bound', 'amod'), ('processes', 'nsubj'), ('wait', 'ROOT'), ('big', 'amod'), ('CPU', 'npadvmod'), ('bound', 'amod'), ('process', 'pobj'), ('acquire', 'acl'), ('CPU', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[small, /], [/, O], [O, bound], [bound, processes], [processes, wait], [wait, big], [big, CPU], [CPU, bound], [bound, process], [process, acquire], [acquire, CPU], [CPU, .]]

>> Trigrams: 
[[small, /, O], [/, O, bound], [O, bound, processes], [bound, processes, wait], [processes, wait, big], [wait, big, CPU], [big, CPU, bound], [CPU, bound, process], [bound, process, acquire], [process, acquire, CPU], [acquire, CPU, .]]

>> Noun Phrases are: 
[All small I/O bound processes, one big CPU bound process, CPU]

>> Named Entities are: 
[('one', 'CARDINAL')]


============================ Sentence 79 =============================

      CPU utilization may be less efficient especially when a CPU bound process is running with many I/O bound processes. 


>> Tokens are: 
[      , CPU, utilization, efficient, especially, CPU, bound, process, running, /, O, bound, processes, .] 

>> PoS Tags are: 
[('      ', 'SPACE'), ('CPU', 'NOUN'), ('utilization', 'NOUN'), ('efficient', 'ADJ'), ('especially', 'ADV'), ('CPU', 'NOUN'), ('bound', 'VERB'), ('process', 'NOUN'), ('running', 'VERB'), ('/', 'SYM'), ('O', 'INTJ'), ('bound', 'VERB'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('      ', 'compound'), ('CPU', 'compound'), ('utilization', 'nsubj'), ('efficient', 'acomp'), ('especially', 'advmod'), ('CPU', 'npadvmod'), ('bound', 'amod'), ('process', 'nsubj'), ('running', 'advcl'), ('/', 'punct'), ('O', 'nmod'), ('bound', 'amod'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[      , CPU], [CPU, utilization], [utilization, efficient], [efficient, especially], [especially, CPU], [CPU, bound], [bound, process], [process, running], [running, /], [/, O], [O, bound], [bound, processes], [processes, .]]

>> Trigrams: 
[[      , CPU, utilization], [CPU, utilization, efficient], [utilization, efficient, especially], [efficient, especially, CPU], [especially, CPU, bound], [CPU, bound, process], [bound, process, running], [process, running, /], [running, /, O], [/, O, bound], [O, bound, processes], [bound, processes, .]]

>> Noun Phrases are: 
[      CPU utilization, a CPU bound process, many I/O bound processes]

>> Named Entities are: 
[]


============================ Sentence 80 =============================

    Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'dobj'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[    Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 81 =============================

Shortest Job First (SJF) Section – 4.2      Shortest Job First (SJF) Selection criteria: The process, that requires shortest time to complete execution, is served first. 


>> Tokens are: 
[Shortest, Job, (, SJF, ), Section, –, 4.2,      , Shortest, Job, (, SJF, ), Selection, criteria, :, process, ,, requires, shortest, time, complete, execution, ,, served, .] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Job', 'PROPN'), ('(', 'PUNCT'), ('SJF', 'PROPN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('4.2', 'NUM'), ('     ', 'SPACE'), ('Shortest', 'PROPN'), ('Job', 'PROPN'), ('(', 'PUNCT'), ('SJF', 'PROPN'), (')', 'PUNCT'), ('Selection', 'NOUN'), ('criteria', 'VERB'), (':', 'PUNCT'), ('process', 'NOUN'), (',', 'PUNCT'), ('requires', 'VERB'), ('shortest', 'ADJ'), ('time', 'NOUN'), ('complete', 'VERB'), ('execution', 'NOUN'), (',', 'PUNCT'), ('served', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'compound'), ('Job', 'compound'), ('(', 'punct'), ('SJF', 'nmod'), (')', 'punct'), ('Section', 'appos'), ('–', 'punct'), ('4.2', 'nummod'), ('     ', 'appos'), ('Shortest', 'compound'), ('Job', 'compound'), ('(', 'punct'), ('SJF', 'appos'), (')', 'punct'), ('Selection', 'appos'), ('criteria', 'ROOT'), (':', 'punct'), ('process', 'nsubj'), (',', 'punct'), ('requires', 'ccomp'), ('shortest', 'amod'), ('time', 'dobj'), ('complete', 'relcl'), ('execution', 'dobj'), (',', 'punct'), ('served', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Shortest, Job], [Job, (], [(, SJF], [SJF, )], [), Section], [Section, –], [–, 4.2], [4.2,      ], [     , Shortest], [Shortest, Job], [Job, (], [(, SJF], [SJF, )], [), Selection], [Selection, criteria], [criteria, :], [:, process], [process, ,], [,, requires], [requires, shortest], [shortest, time], [time, complete], [complete, execution], [execution, ,], [,, served], [served, .]]

>> Trigrams: 
[[Shortest, Job, (], [Job, (, SJF], [(, SJF, )], [SJF, ), Section], [), Section, –], [Section, –, 4.2], [–, 4.2,      ], [4.2,      , Shortest], [     , Shortest, Job], [Shortest, Job, (], [Job, (, SJF], [(, SJF, )], [SJF, ), Selection], [), Selection, criteria], [Selection, criteria, :], [criteria, :, process], [:, process, ,], [process, ,, requires], [,, requires, shortest], [requires, shortest, time], [shortest, time, complete], [time, complete, execution], [complete, execution, ,], [execution, ,, served], [,, served, .]]

>> Noun Phrases are: 
[Shortest Job First, SJF) Section, Shortest Job First, SJF, Selection, The process, shortest time, execution]

>> Named Entities are: 
[('SJF', 'ORG'), ('4.2', 'CARDINAL'), ('SJF', 'ORG'), ('first', 'ORDINAL')]


============================ Sentence 82 =============================

    Decision Mode: Non preemptive: Once a process is selected, it runs until it is blocked for an I/O or some other event or it is terminated. 


>> Tokens are: 
[    , Decision, Mode, :, Non, preemptive, :, process, selected, ,, runs, blocked, /, O, event, terminated, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Decision', 'NOUN'), ('Mode', 'PROPN'), (':', 'PUNCT'), ('Non', 'VERB'), ('preemptive', 'ADJ'), (':', 'PUNCT'), ('process', 'NOUN'), ('selected', 'VERB'), (',', 'PUNCT'), ('runs', 'VERB'), ('blocked', 'VERB'), ('/', 'SYM'), ('O', 'INTJ'), ('event', 'NOUN'), ('terminated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Decision', 'compound'), ('Mode', 'dep'), (':', 'punct'), ('Non', 'appos'), ('preemptive', 'advmod'), (':', 'punct'), ('process', 'nsubjpass'), ('selected', 'advcl'), (',', 'punct'), ('runs', 'ROOT'), ('blocked', 'advcl'), ('/', 'punct'), ('O', 'pobj'), ('event', 'conj'), ('terminated', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[    , Decision], [Decision, Mode], [Mode, :], [:, Non], [Non, preemptive], [preemptive, :], [:, process], [process, selected], [selected, ,], [,, runs], [runs, blocked], [blocked, /], [/, O], [O, event], [event, terminated], [terminated, .]]

>> Trigrams: 
[[    , Decision, Mode], [Decision, Mode, :], [Mode, :, Non], [:, Non, preemptive], [Non, preemptive, :], [preemptive, :, process], [:, process, selected], [process, selected, ,], [selected, ,, runs], [,, runs, blocked], [runs, blocked, /], [blocked, /, O], [/, O, event], [O, event, terminated], [event, terminated, .]]

>> Noun Phrases are: 
[a process, it, it, some other event, it]

>> Named Entities are: 
[]


============================ Sentence 83 =============================

Implementation: 


>> Tokens are: 
[Implementation, :] 

>> PoS Tags are: 
[('Implementation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Implementation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Implementation, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Implementation]

>> Named Entities are: 
[]


============================ Sentence 84 =============================

This strategy can be easily implemented by using sorted FIFO (First In First Out) queue.   


>> Tokens are: 
[strategy, easily, implemented, sorted, FIFO, (, ), queue, .,  ] 

>> PoS Tags are: 
[('strategy', 'NOUN'), ('easily', 'ADV'), ('implemented', 'VERB'), ('sorted', 'ADJ'), ('FIFO', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), ('queue', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('strategy', 'nsubjpass'), ('easily', 'advmod'), ('implemented', 'ROOT'), ('sorted', 'amod'), ('FIFO', 'dobj'), ('(', 'punct'), (')', 'punct'), ('queue', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[strategy, easily], [easily, implemented], [implemented, sorted], [sorted, FIFO], [FIFO, (], [(, )], [), queue], [queue, .], [.,  ]]

>> Trigrams: 
[[strategy, easily, implemented], [easily, implemented, sorted], [implemented, sorted, FIFO], [sorted, FIFO, (], [FIFO, (, )], [(, ), queue], [), queue, .], [queue, .,  ]]

>> Noun Phrases are: 
[This strategy, sorted FIFO, First Out, ) queue]

>> Named Entities are: 
[('FIFO', 'PERSON'), ('First', 'ORDINAL'), ('First', 'ORDINAL')]


============================ Sentence 85 =============================

All processes in a queue are sorted in ascending order based on their required CPU bursts. 


>> Tokens are: 
[processes, queue, sorted, ascending, order, based, required, CPU, bursts, .] 

>> PoS Tags are: 
[('processes', 'NOUN'), ('queue', 'NOUN'), ('sorted', 'VERB'), ('ascending', 'VERB'), ('order', 'NOUN'), ('based', 'VERB'), ('required', 'VERB'), ('CPU', 'NOUN'), ('bursts', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('processes', 'nsubjpass'), ('queue', 'pobj'), ('sorted', 'ROOT'), ('ascending', 'pcomp'), ('order', 'dobj'), ('based', 'prep'), ('required', 'amod'), ('CPU', 'compound'), ('bursts', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[processes, queue], [queue, sorted], [sorted, ascending], [ascending, order], [order, based], [based, required], [required, CPU], [CPU, bursts], [bursts, .]]

>> Trigrams: 
[[processes, queue, sorted], [queue, sorted, ascending], [sorted, ascending, order], [ascending, order, based], [order, based, required], [based, required, CPU], [required, CPU, bursts], [CPU, bursts, .]]

>> Noun Phrases are: 
[All processes, a queue, order, their required CPU bursts]

>> Named Entities are: 
[]


============================ Sentence 86 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 87 =============================

When CPU becomes free, a process from the first position in a queue is selected to run. 


>> Tokens are: 
[CPU, free, ,, process, position, queue, selected, run, .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('free', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('position', 'NOUN'), ('queue', 'NOUN'), ('selected', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'nsubj'), ('free', 'acomp'), (',', 'punct'), ('process', 'nsubjpass'), ('position', 'pobj'), ('queue', 'pobj'), ('selected', 'ROOT'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CPU, free], [free, ,], [,, process], [process, position], [position, queue], [queue, selected], [selected, run], [run, .]]

>> Trigrams: 
[[CPU, free, ,], [free, ,, process], [,, process, position], [process, position, queue], [position, queue, selected], [queue, selected, run], [selected, run, .]]

>> Noun Phrases are: 
[CPU, a process, the first position, a queue]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 88 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 89 =============================

Head Tail P1 (2) P2 (6) P3 (3)   


>> Tokens are: 
[Head, Tail, P1, (, 2, ), P2, (, 6, ), P3, (, 3, ),  ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('P2', 'PROPN'), ('(', 'PUNCT'), ('6', 'NUM'), (')', 'PUNCT'), ('P3', 'PROPN'), ('(', 'PUNCT'), ('3', 'X'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('P2', 'appos'), ('(', 'punct'), ('6', 'appos'), (')', 'punct'), ('P3', 'appos'), ('(', 'punct'), ('3', 'appos'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, (], [(, 2], [2, )], [), P2], [P2, (], [(, 6], [6, )], [), P3], [P3, (], [(, 3], [3, )], [),  ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, (], [P1, (, 2], [(, 2, )], [2, ), P2], [), P2, (], [P2, (, 6], [(, 6, )], [6, ), P3], [), P3, (], [P3, (, 3], [(, 3, )], [3, ),  ]]

>> Noun Phrases are: 
[Head Tail P1, P2, P3]

>> Named Entities are: 
[('2', 'CARDINAL'), ('6', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 90 =============================

Ready queue P0 (4)     


>> Tokens are: 
[Ready, queue, P0, (, 4, ),    ] 

>> PoS Tags are: 
[('Ready', 'ADJ'), ('queue', 'NOUN'), ('P0', 'PROPN'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Ready', 'amod'), ('queue', 'compound'), ('P0', 'ROOT'), ('(', 'punct'), ('4', 'appos'), (')', 'punct'), ('   ', 'appos')]

>> Bigrams: 
[[Ready, queue], [queue, P0], [P0, (], [(, 4], [4, )], [),    ]]

>> Trigrams: 
[[Ready, queue, P0], [queue, P0, (], [P0, (, 4], [(, 4, )], [4, ),    ]]

>> Noun Phrases are: 
[Ready queue P0]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 91 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 92 =============================

Shortest Job First (SJF)         


>> Tokens are: 
[Shortest, Job, (, SJF, ),        ] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Job', 'PROPN'), ('(', 'PUNCT'), ('SJF', 'PROPN'), (')', 'PUNCT'), ('       ', 'SPACE')] 

>> Dependency Tags are: 
[('Shortest', 'compound'), ('Job', 'compound'), ('(', 'punct'), ('SJF', 'appos'), (')', 'punct'), ('       ', 'punct')]

>> Bigrams: 
[[Shortest, Job], [Job, (], [(, SJF], [SJF, )], [),        ]]

>> Trigrams: 
[[Shortest, Job, (], [Job, (, SJF], [(, SJF, )], [SJF, ),        ]]

>> Noun Phrases are: 
[Shortest Job First, (SJF]

>> Named Entities are: 
[('SJF', 'ORG')]


============================ Sentence 93 =============================

Gantt Chart   Average Turnaround Time:	 (10+21+9+11)/4 	=	12.75 ms. 


>> Tokens are: 
[Gantt, Chart,   , Average, Turnaround, Time, :, 	 , (, 10, +, 21, +, 9, +, 11)/4, 	, =, 	, 12.75, ms, .] 

>> PoS Tags are: 
[('Gantt', 'PROPN'), ('Chart', 'PROPN'), ('  ', 'SPACE'), ('Average', 'PROPN'), ('Turnaround', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('\t ', 'SPACE'), ('(', 'PUNCT'), ('10', 'NUM'), ('+', 'SYM'), ('21', 'NUM'), ('+', 'SYM'), ('9', 'NUM'), ('+', 'NUM'), ('11)/4', 'NUM'), ('\t', 'SPACE'), ('=', 'PUNCT'), ('\t', 'SPACE'), ('12.75', 'NUM'), ('ms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Gantt', 'compound'), ('Chart', 'nsubj'), ('  ', 'nmod'), ('Average', 'compound'), ('Turnaround', 'compound'), ('Time', 'dep'), (':', 'punct'), ('\t ', 'appos'), ('(', 'punct'), ('10', 'appos'), ('+', 'cc'), ('21', 'appos'), ('+', 'cc'), ('9', 'appos'), ('+', 'punct'), ('11)/4', 'appos'), ('\t', 'appos'), ('=', 'punct'), ('\t', 'ROOT'), ('12.75', 'nummod'), ('ms', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Gantt, Chart], [Chart,   ], [  , Average], [Average, Turnaround], [Turnaround, Time], [Time, :], [:, 	 ], [	 , (], [(, 10], [10, +], [+, 21], [21, +], [+, 9], [9, +], [+, 11)/4], [11)/4, 	], [	, =], [=, 	], [	, 12.75], [12.75, ms], [ms, .]]

>> Trigrams: 
[[Gantt, Chart,   ], [Chart,   , Average], [  , Average, Turnaround], [Average, Turnaround, Time], [Turnaround, Time, :], [Time, :, 	 ], [:, 	 , (], [	 , (, 10], [(, 10, +], [10, +, 21], [+, 21, +], [21, +, 9], [+, 9, +], [9, +, 11)/4], [+, 11)/4, 	], [11)/4, 	, =], [	, =, 	], [=, 	, 12.75], [	, 12.75, ms], [12.75, ms, .]]

>> Noun Phrases are: 
[Gantt Chart, 12.75 ms]

>> Named Entities are: 
[('10', 'CARDINAL'), ('12.75', 'CARDINAL')]


============================ Sentence 94 =============================

Average Waiting Time:	 (0+15+7+7)/4  	= 


>> Tokens are: 
[Average, Waiting, Time, :, 	 , (, 0, +, 15, +, 7, +, 7)/4,  	, =] 

>> PoS Tags are: 
[('Average', 'PROPN'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('\t ', 'SPACE'), ('(', 'PUNCT'), ('0', 'NUM'), ('+', 'SYM'), ('15', 'NUM'), ('+', 'SYM'), ('7', 'NUM'), ('+', 'SYM'), ('7)/4', 'NUM'), (' \t', 'SPACE'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Average', 'compound'), ('Waiting', 'compound'), ('Time', 'ROOT'), (':', 'punct'), ('\t ', 'appos'), ('(', 'punct'), ('0', 'appos'), ('+', 'appos'), ('15', 'npadvmod'), ('+', 'punct'), ('7', 'nummod'), ('+', 'nummod'), ('7)/4', 'nummod'), (' \t', 'appos'), ('=', 'punct')]

>> Bigrams: 
[[Average, Waiting], [Waiting, Time], [Time, :], [:, 	 ], [	 , (], [(, 0], [0, +], [+, 15], [15, +], [+, 7], [7, +], [+, 7)/4], [7)/4,  	], [ 	, =]]

>> Trigrams: 
[[Average, Waiting, Time], [Waiting, Time, :], [Time, :, 	 ], [:, 	 , (], [	 , (, 0], [(, 0, +], [0, +, 15], [+, 15, +], [15, +, 7], [+, 7, +], [7, +, 7)/4], [+, 7)/4,  	], [7)/4,  	, =]]

>> Noun Phrases are: 
[Average Waiting Time]

>> Named Entities are: 
[]


============================ Sentence 95 =============================

	7.25 ms. 


>> Tokens are: 
[	, 7.25, ms, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('7.25', 'NUM'), ('ms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('7.25', 'nummod'), ('ms', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[	, 7.25], [7.25, ms], [ms, .]]

>> Trigrams: 
[[	, 7.25, ms], [7.25, ms, .]]

>> Noun Phrases are: 
[7.25 ms]

>> Named Entities are: 
[('7.25', 'CARDINAL')]


============================ Sentence 96 =============================

	Process	Arrival Time (T0) 


>> Tokens are: 
[	, Process, 	, Arrival, Time, (, T0, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Arrival', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('T0', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, Arrival], [Arrival, Time], [Time, (], [(, T0], [T0, )]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, Arrival], [	, Arrival, Time], [Arrival, Time, (], [Time, (, T0], [(, T0, )]]

>> Noun Phrases are: 
[	Process	Arrival Time, (T0]

>> Named Entities are: 
[]


============================ Sentence 97 =============================

	Burst Time (ΔT) 


>> Tokens are: 
[	, Burst, Time, (, ΔT, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Burst', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Burst], [Burst, Time], [Time, (], [(, ΔT], [ΔT, )]]

>> Trigrams: 
[[	, Burst, Time], [Burst, Time, (], [Time, (, ΔT], [(, ΔT, )]]

>> Noun Phrases are: 
[	Burst Time, (ΔT]

>> Named Entities are: 
[]


============================ Sentence 98 =============================

	P0	0 


>> Tokens are: 
[	, P0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P0', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 99 =============================

	10 	P1	1	6 	P2	3	2 	P3	5	4  	Finish Time (T1)  	Turnaround Time 


>> Tokens are: 
[	, 10, 	, P1, 	, 1, 	, 6, 	, P2, 	, 3, 	, 2, 	, P3, 	, 5, 	, 4,  	, Finish, Time, (, T1, ),  	, Turnaround, Time] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('10', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Finish', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T1', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Turnaround', 'PROPN'), ('Time', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('10', 'nummod'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'nmod'), ('5', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), (' \t', 'nummod'), ('Finish', 'compound'), ('Time', 'dobj'), ('(', 'punct'), ('T1', 'appos'), (')', 'punct'), (' \t', 'nummod'), ('Turnaround', 'compound'), ('Time', 'appos')]

>> Bigrams: 
[[	, 10], [10, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, P2], [P2, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 5], [5, 	], [	, 4], [4,  	], [ 	, Finish], [Finish, Time], [Time, (], [(, T1], [T1, )], [),  	], [ 	, Turnaround], [Turnaround, Time]]

>> Trigrams: 
[[	, 10, 	], [10, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, P2], [	, P2, 	], [P2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4,  	], [4,  	, Finish], [ 	, Finish, Time], [Finish, Time, (], [Time, (, T1], [(, T1, )], [T1, ),  	], [),  	, Turnaround], [ 	, Turnaround, Time]]

>> Noun Phrases are: 
[	2 	P3, 	5	4  	Finish Time, (T1,  	Turnaround Time]

>> Named Entities are: 
[('Finish', 'NORP'), ('T1', 'CARDINAL'), ('Turnaround Time', 'PERSON')]


============================ Sentence 100 =============================

(TAT = T1 - T0)  	Waiting Time (WT = TAT - ΔT)  	10  	22  	12  	16  	10  	21  	9  	11  	0  	15  	7  	7   


>> Tokens are: 
[(, TAT, =, T1, -, T0, ),  	, Waiting, Time, (, WT, =, TAT, -, ΔT, ),  	, 10,  	, 22,  	, 12,  	, 16,  	, 10,  	, 21,  	, 9,  	, 11,  	, 0,  	, 15,  	, 7,  	, 7,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TAT', 'PROPN'), ('=', 'SYM'), ('T1', 'PROPN'), ('-', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('WT', 'PROPN'), ('=', 'SYM'), ('TAT', 'PROPN'), ('-', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('10', 'NUM'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('12', 'NUM'), (' \t', 'SPACE'), ('16', 'NUM'), (' \t', 'SPACE'), ('10', 'NUM'), (' \t', 'SPACE'), ('21', 'NUM'), (' \t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('11', 'NUM'), (' \t', 'SPACE'), ('0', 'NUM'), (' \t', 'SPACE'), ('15', 'NUM'), (' \t', 'SPACE'), ('7', 'NUM'), (' \t', 'SPACE'), ('7', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TAT', 'nmod'), ('=', 'punct'), ('T1', 'compound'), ('-', 'punct'), ('T0', 'ROOT'), (')', 'punct'), (' \t', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('WT', 'nmod'), ('=', 'punct'), ('TAT', 'compound'), ('-', 'punct'), ('ΔT', 'appos'), (')', 'punct'), (' \t', 'nmod'), ('10', 'nummod'), (' \t', 'nmod'), ('22', 'nummod'), (' \t', 'nmod'), ('12', 'nummod'), (' \t', 'nmod'), ('16', 'nummod'), (' \t', 'nmod'), ('10', 'nummod'), (' \t', 'nmod'), ('21', 'nummod'), (' \t', 'nmod'), ('9', 'nummod'), (' \t', 'nmod'), ('11', 'nummod'), (' \t', 'appos'), ('0', 'appos'), (' \t', 'nmod'), ('15', 'nummod'), (' \t', 'nmod'), ('7', 'nummod'), (' \t', 'nmod'), ('7', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[(, TAT], [TAT, =], [=, T1], [T1, -], [-, T0], [T0, )], [),  	], [ 	, Waiting], [Waiting, Time], [Time, (], [(, WT], [WT, =], [=, TAT], [TAT, -], [-, ΔT], [ΔT, )], [),  	], [ 	, 10], [10,  	], [ 	, 22], [22,  	], [ 	, 12], [12,  	], [ 	, 16], [16,  	], [ 	, 10], [10,  	], [ 	, 21], [21,  	], [ 	, 9], [9,  	], [ 	, 11], [11,  	], [ 	, 0], [0,  	], [ 	, 15], [15,  	], [ 	, 7], [7,  	], [ 	, 7], [7,  ]]

>> Trigrams: 
[[(, TAT, =], [TAT, =, T1], [=, T1, -], [T1, -, T0], [-, T0, )], [T0, ),  	], [),  	, Waiting], [ 	, Waiting, Time], [Waiting, Time, (], [Time, (, WT], [(, WT, =], [WT, =, TAT], [=, TAT, -], [TAT, -, ΔT], [-, ΔT, )], [ΔT, ),  	], [),  	, 10], [ 	, 10,  	], [10,  	, 22], [ 	, 22,  	], [22,  	, 12], [ 	, 12,  	], [12,  	, 16], [ 	, 16,  	], [16,  	, 10], [ 	, 10,  	], [10,  	, 21], [ 	, 21,  	], [21,  	, 9], [ 	, 9,  	], [9,  	, 11], [ 	, 11,  	], [11,  	, 0], [ 	, 0,  	], [0,  	, 15], [ 	, 15,  	], [15,  	, 7], [ 	, 7,  	], [7,  	, 7], [ 	, 7,  ]]

>> Noun Phrases are: 
[(TAT = T1 - T0,  	Waiting Time, (WT = TAT - ΔT]

>> Named Entities are: 
[('TAT', 'ORG'), ('T1', 'CARDINAL'), ('Waiting Time', 'PERSON'), ('TAT - ΔT', 'ORG'), ('10', 'CARDINAL'), ('22', 'CARDINAL'), ('12', 'CARDINAL'), ('16', 'CARDINAL'), ('10', 'CARDINAL'), ('21', 'CARDINAL'), ('9', 'CARDINAL'), ('11', 'CARDINAL'), ('0', 'CARDINAL'), ('15', 'CARDINAL'), ('7', 'CARDINAL'), ('7', 'CARDINAL')]


============================ Sentence 101 =============================

P0 P1 P2 P3 0 10 16 12 22     


>> Tokens are: 
[P0, P1, P2, P3, 0, 10, 16, 12, 22,    ] 

>> PoS Tags are: 
[('P0', 'PROPN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('P3', 'PROPN'), ('0', 'NUM'), ('10', 'NUM'), ('16', 'NUM'), ('12', 'NUM'), ('22', 'NUM'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('P0', 'compound'), ('P1', 'compound'), ('P2', 'nsubj'), ('P3', 'ROOT'), ('0', 'nummod'), ('10', 'quantmod'), ('16', 'quantmod'), ('12', 'quantmod'), ('22', 'compound'), ('   ', 'punct')]

>> Bigrams: 
[[P0, P1], [P1, P2], [P2, P3], [P3, 0], [0, 10], [10, 16], [16, 12], [12, 22], [22,    ]]

>> Trigrams: 
[[P0, P1, P2], [P1, P2, P3], [P2, P3, 0], [P3, 0, 10], [0, 10, 16], [10, 16, 12], [16, 12, 22], [12, 22,    ]]

>> Noun Phrases are: 
[P0 P1 P2]

>> Named Entities are: 
[('P0 P1 P2 P3', 'PRODUCT')]


============================ Sentence 102 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 103 =============================

Shortest Job First (SJF) 


>> Tokens are: 
[Shortest, Job, (, SJF, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Job', 'PROPN'), ('(', 'PUNCT'), ('SJF', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'compound'), ('Job', 'compound'), ('(', 'punct'), ('SJF', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Job], [Job, (], [(, SJF], [SJF, )]]

>> Trigrams: 
[[Shortest, Job, (], [Job, (, SJF], [(, SJF, )]]

>> Noun Phrases are: 
[Shortest Job First, SJF]

>> Named Entities are: 
[]


============================ Sentence 104 =============================

Advantages 


>> Tokens are: 
[Advantages] 

>> PoS Tags are: 
[('Advantages', 'PROPN')] 

>> Dependency Tags are: 
[('Advantages', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Advantages]

>> Named Entities are: 
[]


============================ Sentence 105 =============================

Less waiting time. 


>> Tokens are: 
[waiting, time, .] 

>> PoS Tags are: 
[('waiting', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('waiting', 'compound'), ('time', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[waiting, time], [time, .]]

>> Trigrams: 
[[waiting, time, .]]

>> Noun Phrases are: 
[Less waiting time]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

Good response for short processes. 


>> Tokens are: 
[Good, response, short, processes, .] 

>> PoS Tags are: 
[('Good', 'ADJ'), ('response', 'NOUN'), ('short', 'ADJ'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Good', 'amod'), ('response', 'ROOT'), ('short', 'amod'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Good, response], [response, short], [short, processes], [processes, .]]

>> Trigrams: 
[[Good, response, short], [response, short, processes], [short, processes, .]]

>> Noun Phrases are: 
[Good response, short processes]

>> Named Entities are: 
[]


============================ Sentence 107 =============================

Disadvantages   


>> Tokens are: 
[Disadvantages,  ] 

>> PoS Tags are: 
[('Disadvantages', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Disadvantages', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Disadvantages,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Disadvantages]

>> Named Entities are: 
[]


============================ Sentence 108 =============================

It is difficult to estimate time required to complete execution. 


>> Tokens are: 
[difficult, estimate, time, required, complete, execution, .] 

>> PoS Tags are: 
[('difficult', 'ADJ'), ('estimate', 'VERB'), ('time', 'NOUN'), ('required', 'VERB'), ('complete', 'VERB'), ('execution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('difficult', 'acomp'), ('estimate', 'xcomp'), ('time', 'dobj'), ('required', 'acl'), ('complete', 'xcomp'), ('execution', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[difficult, estimate], [estimate, time], [time, required], [required, complete], [complete, execution], [execution, .]]

>> Trigrams: 
[[difficult, estimate, time], [estimate, time, required], [time, required, complete], [required, complete, execution], [complete, execution, .]]

>> Noun Phrases are: 
[It, time, execution]

>> Named Entities are: 
[]


============================ Sentence 109 =============================

Starvation is possible for long process. 


>> Tokens are: 
[Starvation, possible, long, process, .] 

>> PoS Tags are: 
[('Starvation', 'NOUN'), ('possible', 'ADJ'), ('long', 'ADJ'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Starvation', 'nsubj'), ('possible', 'acomp'), ('long', 'amod'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Starvation, possible], [possible, long], [long, process], [process, .]]

>> Trigrams: 
[[Starvation, possible, long], [possible, long, process], [long, process, .]]

>> Noun Phrases are: 
[Starvation, long process]

>> Named Entities are: 
[]


============================ Sentence 110 =============================

Long process may wait forever. 


>> Tokens are: 
[Long, process, wait, forever, .] 

>> PoS Tags are: 
[('Long', 'ADJ'), ('process', 'NOUN'), ('wait', 'VERB'), ('forever', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Long', 'amod'), ('process', 'nsubj'), ('wait', 'ROOT'), ('forever', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Long, process], [process, wait], [wait, forever], [forever, .]]

>> Trigrams: 
[[Long, process, wait], [process, wait, forever], [wait, forever, .]]

>> Noun Phrases are: 
[Long process]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

Starvation is the problem that occurs when high priority processes keep executing and low priority processes get blocked for indefinite time. 


>> Tokens are: 
[Starvation, problem, occurs, high, priority, processes, executing, low, priority, processes, blocked, indefinite, time, .] 

>> PoS Tags are: 
[('Starvation', 'NOUN'), ('problem', 'NOUN'), ('occurs', 'VERB'), ('high', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('executing', 'NOUN'), ('low', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('blocked', 'VERB'), ('indefinite', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Starvation', 'nsubj'), ('problem', 'attr'), ('occurs', 'relcl'), ('high', 'amod'), ('priority', 'compound'), ('processes', 'nsubj'), ('executing', 'dobj'), ('low', 'amod'), ('priority', 'compound'), ('processes', 'nsubjpass'), ('blocked', 'relcl'), ('indefinite', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Starvation, problem], [problem, occurs], [occurs, high], [high, priority], [priority, processes], [processes, executing], [executing, low], [low, priority], [priority, processes], [processes, blocked], [blocked, indefinite], [indefinite, time], [time, .]]

>> Trigrams: 
[[Starvation, problem, occurs], [problem, occurs, high], [occurs, high, priority], [high, priority, processes], [priority, processes, executing], [processes, executing, low], [executing, low, priority], [low, priority, processes], [priority, processes, blocked], [processes, blocked, indefinite], [blocked, indefinite, time], [indefinite, time, .]]

>> Noun Phrases are: 
[Starvation, the problem, high priority processes, executing, low priority processes, indefinite time]

>> Named Entities are: 
[]


============================ Sentence 112 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 114 =============================

Shortest Remaining Time Next (SRTN) Section – 4.3      Shortest Remaining Time Next (SRTN) 


>> Tokens are: 
[Shortest, Remaining, Time, (, SRTN, ), Section, –, 4.3,      , Shortest, Remaining, Time, (, SRTN, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Remaining', 'PROPN'), ('Time', 'NOUN'), ('(', 'PUNCT'), ('SRTN', 'PROPN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('4.3', 'NUM'), ('     ', 'SPACE'), ('Shortest', 'PROPN'), ('Remaining', 'PROPN'), ('Time', 'NOUN'), ('(', 'PUNCT'), ('SRTN', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'nmod'), ('Remaining', 'compound'), ('Time', 'nmod'), ('(', 'punct'), ('SRTN', 'nmod'), (')', 'punct'), ('Section', 'ROOT'), ('–', 'punct'), ('4.3', 'nummod'), ('     ', 'appos'), ('Shortest', 'nmod'), ('Remaining', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('SRTN', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Remaining], [Remaining, Time], [Time, (], [(, SRTN], [SRTN, )], [), Section], [Section, –], [–, 4.3], [4.3,      ], [     , Shortest], [Shortest, Remaining], [Remaining, Time], [Time, (], [(, SRTN], [SRTN, )]]

>> Trigrams: 
[[Shortest, Remaining, Time], [Remaining, Time, (], [Time, (, SRTN], [(, SRTN, )], [SRTN, ), Section], [), Section, –], [Section, –, 4.3], [–, 4.3,      ], [4.3,      , Shortest], [     , Shortest, Remaining], [Shortest, Remaining, Time], [Remaining, Time, (], [Time, (, SRTN], [(, SRTN, )]]

>> Noun Phrases are: 
[Shortest Remaining Time Next (SRTN) Section, Shortest Remaining Time, (SRTN]

>> Named Entities are: 
[('4.3', 'CARDINAL')]


============================ Sentence 115 =============================

Selection criteria: The process, whose remaining run time is shortest, is served first. 


>> Tokens are: 
[Selection, criteria, :, process, ,, remaining, run, time, shortest, ,, served, .] 

>> PoS Tags are: 
[('Selection', 'NOUN'), ('criteria', 'NOUN'), (':', 'PUNCT'), ('process', 'NOUN'), (',', 'PUNCT'), ('remaining', 'VERB'), ('run', 'NOUN'), ('time', 'NOUN'), ('shortest', 'ADJ'), (',', 'PUNCT'), ('served', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Selection', 'nsubj'), ('criteria', 'nsubjpass'), (':', 'punct'), ('process', 'nsubj'), (',', 'punct'), ('remaining', 'amod'), ('run', 'amod'), ('time', 'nsubj'), ('shortest', 'acomp'), (',', 'punct'), ('served', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Selection, criteria], [criteria, :], [:, process], [process, ,], [,, remaining], [remaining, run], [run, time], [time, shortest], [shortest, ,], [,, served], [served, .]]

>> Trigrams: 
[[Selection, criteria, :], [criteria, :, process], [:, process, ,], [process, ,, remaining], [,, remaining, run], [remaining, run, time], [run, time, shortest], [time, shortest, ,], [shortest, ,, served], [,, served, .]]

>> Noun Phrases are: 
[Selection, The process, whose remaining run time]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 116 =============================

This is a preemptive version of SJF scheduling. 


>> Tokens are: 
[preemptive, version, SJF, scheduling, .] 

>> PoS Tags are: 
[('preemptive', 'ADJ'), ('version', 'NOUN'), ('SJF', 'PROPN'), ('scheduling', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('preemptive', 'amod'), ('version', 'attr'), ('SJF', 'compound'), ('scheduling', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[preemptive, version], [version, SJF], [SJF, scheduling], [scheduling, .]]

>> Trigrams: 
[[preemptive, version, SJF], [version, SJF, scheduling], [SJF, scheduling, .]]

>> Noun Phrases are: 
[a preemptive version, SJF scheduling]

>> Named Entities are: 
[('SJF', 'ORG')]


============================ Sentence 117 =============================

    Decision Mode: Preemptive: When a new process arrives, its total time is compared to the current process remaining run time. 


>> Tokens are: 
[    , Decision, Mode, :, Preemptive, :, new, process, arrives, ,, total, time, compared, current, process, remaining, run, time, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Decision', 'NOUN'), ('Mode', 'PROPN'), (':', 'PUNCT'), ('Preemptive', 'ADJ'), (':', 'PUNCT'), ('new', 'ADJ'), ('process', 'NOUN'), ('arrives', 'VERB'), (',', 'PUNCT'), ('total', 'ADJ'), ('time', 'NOUN'), ('compared', 'VERB'), ('current', 'ADJ'), ('process', 'NOUN'), ('remaining', 'VERB'), ('run', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Decision', 'compound'), ('Mode', 'dep'), (':', 'punct'), ('Preemptive', 'appos'), (':', 'punct'), ('new', 'amod'), ('process', 'nsubj'), ('arrives', 'advcl'), (',', 'punct'), ('total', 'amod'), ('time', 'nsubjpass'), ('compared', 'ROOT'), ('current', 'amod'), ('process', 'pobj'), ('remaining', 'amod'), ('run', 'amod'), ('time', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[    , Decision], [Decision, Mode], [Mode, :], [:, Preemptive], [Preemptive, :], [:, new], [new, process], [process, arrives], [arrives, ,], [,, total], [total, time], [time, compared], [compared, current], [current, process], [process, remaining], [remaining, run], [run, time], [time, .]]

>> Trigrams: 
[[    , Decision, Mode], [Decision, Mode, :], [Mode, :, Preemptive], [:, Preemptive, :], [Preemptive, :, new], [:, new, process], [new, process, arrives], [process, arrives, ,], [arrives, ,, total], [,, total, time], [total, time, compared], [time, compared, current], [compared, current, process], [current, process, remaining], [process, remaining, run], [remaining, run, time], [run, time, .]]

>> Noun Phrases are: 
[a new process, its total time, the current process, remaining run time]

>> Named Entities are: 
[]


============================ Sentence 118 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 119 =============================

If the new process needs less time to finish than the current process, the current process is suspended and the new job is started. 


>> Tokens are: 
[new, process, needs, time, finish, current, process, ,, current, process, suspended, new, job, started, .] 

>> PoS Tags are: 
[('new', 'ADJ'), ('process', 'NOUN'), ('needs', 'VERB'), ('time', 'NOUN'), ('finish', 'VERB'), ('current', 'ADJ'), ('process', 'NOUN'), (',', 'PUNCT'), ('current', 'ADJ'), ('process', 'NOUN'), ('suspended', 'VERB'), ('new', 'ADJ'), ('job', 'NOUN'), ('started', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), ('process', 'nsubj'), ('needs', 'advcl'), ('time', 'dobj'), ('finish', 'relcl'), ('current', 'amod'), ('process', 'pobj'), (',', 'punct'), ('current', 'amod'), ('process', 'nsubjpass'), ('suspended', 'ROOT'), ('new', 'amod'), ('job', 'nsubjpass'), ('started', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[new, process], [process, needs], [needs, time], [time, finish], [finish, current], [current, process], [process, ,], [,, current], [current, process], [process, suspended], [suspended, new], [new, job], [job, started], [started, .]]

>> Trigrams: 
[[new, process, needs], [process, needs, time], [needs, time, finish], [time, finish, current], [finish, current, process], [current, process, ,], [process, ,, current], [,, current, process], [current, process, suspended], [process, suspended, new], [suspended, new, job], [new, job, started], [job, started, .]]

>> Noun Phrases are: 
[the new process, less time, the current process, the current process, the new job]

>> Named Entities are: 
[]


============================ Sentence 120 =============================

Implementation: 


>> Tokens are: 
[Implementation, :] 

>> PoS Tags are: 
[('Implementation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Implementation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Implementation, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Implementation]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

This strategy can also be implemented by using sorted FIFO queue. 


>> Tokens are: 
[strategy, implemented, sorted, FIFO, queue, .] 

>> PoS Tags are: 
[('strategy', 'NOUN'), ('implemented', 'VERB'), ('sorted', 'ADJ'), ('FIFO', 'PROPN'), ('queue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('strategy', 'nsubjpass'), ('implemented', 'ROOT'), ('sorted', 'amod'), ('FIFO', 'compound'), ('queue', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[strategy, implemented], [implemented, sorted], [sorted, FIFO], [FIFO, queue], [queue, .]]

>> Trigrams: 
[[strategy, implemented, sorted], [implemented, sorted, FIFO], [sorted, FIFO, queue], [FIFO, queue, .]]

>> Noun Phrases are: 
[This strategy, sorted FIFO queue]

>> Named Entities are: 
[('FIFO', 'ORG')]


============================ Sentence 122 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 123 =============================

All processes in a queue are sorted in ascending order on their remaining run time. 


>> Tokens are: 
[processes, queue, sorted, ascending, order, remaining, run, time, .] 

>> PoS Tags are: 
[('processes', 'NOUN'), ('queue', 'NOUN'), ('sorted', 'VERB'), ('ascending', 'VERB'), ('order', 'NOUN'), ('remaining', 'VERB'), ('run', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('processes', 'nsubjpass'), ('queue', 'pobj'), ('sorted', 'ROOT'), ('ascending', 'pcomp'), ('order', 'dobj'), ('remaining', 'amod'), ('run', 'compound'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[processes, queue], [queue, sorted], [sorted, ascending], [ascending, order], [order, remaining], [remaining, run], [run, time], [time, .]]

>> Trigrams: 
[[processes, queue, sorted], [queue, sorted, ascending], [sorted, ascending, order], [ascending, order, remaining], [order, remaining, run], [remaining, run, time], [run, time, .]]

>> Noun Phrases are: 
[All processes, a queue, order, their remaining run time]

>> Named Entities are: 
[]


============================ Sentence 124 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 125 =============================

When CPU becomes free, a process from the first position in a queue is selected to run. 


>> Tokens are: 
[CPU, free, ,, process, position, queue, selected, run, .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('free', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('position', 'NOUN'), ('queue', 'NOUN'), ('selected', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'nsubj'), ('free', 'acomp'), (',', 'punct'), ('process', 'nsubjpass'), ('position', 'pobj'), ('queue', 'pobj'), ('selected', 'ROOT'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CPU, free], [free, ,], [,, process], [process, position], [position, queue], [queue, selected], [selected, run], [run, .]]

>> Trigrams: 
[[CPU, free, ,], [free, ,, process], [,, process, position], [process, position, queue], [position, queue, selected], [queue, selected, run], [selected, run, .]]

>> Noun Phrases are: 
[CPU, a process, the first position, a queue]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 126 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

Head Tail P1 (2) P2 (6) P3 (1)   


>> Tokens are: 
[Head, Tail, P1, (, 2, ), P2, (, 6, ), P3, (, 1, ),  ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('P2', 'PROPN'), ('(', 'PUNCT'), ('6', 'NUM'), (')', 'PUNCT'), ('P3', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('P2', 'appos'), ('(', 'punct'), ('6', 'appos'), (')', 'punct'), ('P3', 'appos'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, (], [(, 2], [2, )], [), P2], [P2, (], [(, 6], [6, )], [), P3], [P3, (], [(, 1], [1, )], [),  ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, (], [P1, (, 2], [(, 2, )], [2, ), P2], [), P2, (], [P2, (, 6], [(, 6, )], [6, ), P3], [), P3, (], [P3, (, 1], [(, 1, )], [1, ),  ]]

>> Noun Phrases are: 
[Head Tail P1, P2, P3]

>> Named Entities are: 
[('2', 'CARDINAL'), ('6', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 128 =============================

Ready queue P0 (2)     


>> Tokens are: 
[Ready, queue, P0, (, 2, ),    ] 

>> PoS Tags are: 
[('Ready', 'ADJ'), ('queue', 'NOUN'), ('P0', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Ready', 'amod'), ('queue', 'compound'), ('P0', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('   ', 'appos')]

>> Bigrams: 
[[Ready, queue], [queue, P0], [P0, (], [(, 2], [2, )], [),    ]]

>> Trigrams: 
[[Ready, queue, P0], [queue, P0, (], [P0, (, 2], [(, 2, )], [2, ),    ]]

>> Noun Phrases are: 
[Ready queue P0]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 129 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 130 =============================

Shortest Remaining Time Next (SRTN) 


>> Tokens are: 
[Shortest, Remaining, Time, (, SRTN, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Remaining', 'PROPN'), ('Time', 'NOUN'), ('(', 'PUNCT'), ('SRTN', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'nmod'), ('Remaining', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('SRTN', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Remaining], [Remaining, Time], [Time, (], [(, SRTN], [SRTN, )]]

>> Trigrams: 
[[Shortest, Remaining, Time], [Remaining, Time, (], [Time, (, SRTN], [(, SRTN, )]]

>> Noun Phrases are: 
[Shortest Remaining Time, (SRTN]

>> Named Entities are: 
[]


============================ Sentence 131 =============================

       Gantt Chart   


>> Tokens are: 
[       , Gantt, Chart,  ] 

>> PoS Tags are: 
[('       ', 'SPACE'), ('Gantt', 'PROPN'), ('Chart', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('       ', 'nmod'), ('Gantt', 'compound'), ('Chart', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[       , Gantt], [Gantt, Chart], [Chart,  ]]

>> Trigrams: 
[[       , Gantt, Chart], [Gantt, Chart,  ]]

>> Noun Phrases are: 
[       Gantt Chart]

>> Named Entities are: 
[]


============================ Sentence 132 =============================

Average Turnaround Time:     10 ms Average Waiting Time:            4.5 ms 	Process	Arrival Time (T0) 


>> Tokens are: 
[Average, Turnaround, Time, :,     , 10, ms, Average, Waiting, Time, :,            , 4.5, ms, 	, Process, 	, Arrival, Time, (, T0, )] 

>> PoS Tags are: 
[('Average', 'PROPN'), ('Turnaround', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('    ', 'SPACE'), ('10', 'NUM'), ('ms', 'NOUN'), ('Average', 'PROPN'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('           ', 'SPACE'), ('4.5', 'NUM'), ('ms', 'NOUN'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Average', 'compound'), ('Turnaround', 'compound'), ('Time', 'ROOT'), (':', 'punct'), ('    ', 'compound'), ('10', 'nummod'), ('ms', 'compound'), ('Average', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), (':', 'punct'), ('           ', 'nmod'), ('4.5', 'nummod'), ('ms', 'compound'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Arrival', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('T0', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Average, Turnaround], [Turnaround, Time], [Time, :], [:,     ], [    , 10], [10, ms], [ms, Average], [Average, Waiting], [Waiting, Time], [Time, :], [:,            ], [           , 4.5], [4.5, ms], [ms, 	], [	, Process], [Process, 	], [	, Arrival], [Arrival, Time], [Time, (], [(, T0], [T0, )]]

>> Trigrams: 
[[Average, Turnaround, Time], [Turnaround, Time, :], [Time, :,     ], [:,     , 10], [    , 10, ms], [10, ms, Average], [ms, Average, Waiting], [Average, Waiting, Time], [Waiting, Time, :], [Time, :,            ], [:,            , 4.5], [           , 4.5, ms], [4.5, ms, 	], [ms, 	, Process], [	, Process, 	], [Process, 	, Arrival], [	, Arrival, Time], [Arrival, Time, (], [Time, (, T0], [(, T0, )]]

>> Noun Phrases are: 
[Average Turnaround Time,     10 ms Average Waiting Time,            4.5 ms 	Process	Arrival Time, (T0]

>> Named Entities are: 
[('10', 'CARDINAL'), ('4.5', 'CARDINAL')]


============================ Sentence 133 =============================

	Burst Time (ΔT) 


>> Tokens are: 
[	, Burst, Time, (, ΔT, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Burst', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Burst], [Burst, Time], [Time, (], [(, ΔT], [ΔT, )]]

>> Trigrams: 
[[	, Burst, Time], [Burst, Time, (], [Time, (, ΔT], [(, ΔT, )]]

>> Noun Phrases are: 
[	Burst Time, (ΔT]

>> Named Entities are: 
[]


============================ Sentence 134 =============================

	P0	0 


>> Tokens are: 
[	, P0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P0', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 135 =============================

	10 	P1	1	6 	P2	3	2 	P3	5	4  	Finish Time (T1)  	Turnaround Time 


>> Tokens are: 
[	, 10, 	, P1, 	, 1, 	, 6, 	, P2, 	, 3, 	, 2, 	, P3, 	, 5, 	, 4,  	, Finish, Time, (, T1, ),  	, Turnaround, Time] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('10', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Finish', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T1', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Turnaround', 'PROPN'), ('Time', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('10', 'nummod'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'nmod'), ('5', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), (' \t', 'nummod'), ('Finish', 'compound'), ('Time', 'dobj'), ('(', 'punct'), ('T1', 'appos'), (')', 'punct'), (' \t', 'nummod'), ('Turnaround', 'compound'), ('Time', 'appos')]

>> Bigrams: 
[[	, 10], [10, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, P2], [P2, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 5], [5, 	], [	, 4], [4,  	], [ 	, Finish], [Finish, Time], [Time, (], [(, T1], [T1, )], [),  	], [ 	, Turnaround], [Turnaround, Time]]

>> Trigrams: 
[[	, 10, 	], [10, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, P2], [	, P2, 	], [P2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4,  	], [4,  	, Finish], [ 	, Finish, Time], [Finish, Time, (], [Time, (, T1], [(, T1, )], [T1, ),  	], [),  	, Turnaround], [ 	, Turnaround, Time]]

>> Noun Phrases are: 
[	2 	P3, 	5	4  	Finish Time, (T1,  	Turnaround Time]

>> Named Entities are: 
[('Finish', 'NORP'), ('T1', 'CARDINAL'), ('Turnaround Time', 'PERSON')]


============================ Sentence 136 =============================

(TAT = T1 - T0)  	Waiting Time (WT = TAT - ΔT) 


>> Tokens are: 
[(, TAT, =, T1, -, T0, ),  	, Waiting, Time, (, WT, =, TAT, -, ΔT, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TAT', 'PROPN'), ('=', 'SYM'), ('T1', 'PROPN'), ('-', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('WT', 'PROPN'), ('=', 'SYM'), ('TAT', 'PROPN'), ('-', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TAT', 'nmod'), ('=', 'punct'), ('T1', 'compound'), ('-', 'punct'), ('T0', 'ROOT'), (')', 'punct'), (' \t', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('WT', 'nmod'), ('=', 'punct'), ('TAT', 'compound'), ('-', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[(, TAT], [TAT, =], [=, T1], [T1, -], [-, T0], [T0, )], [),  	], [ 	, Waiting], [Waiting, Time], [Time, (], [(, WT], [WT, =], [=, TAT], [TAT, -], [-, ΔT], [ΔT, )]]

>> Trigrams: 
[[(, TAT, =], [TAT, =, T1], [=, T1, -], [T1, -, T0], [-, T0, )], [T0, ),  	], [),  	, Waiting], [ 	, Waiting, Time], [Waiting, Time, (], [Time, (, WT], [(, WT, =], [WT, =, TAT], [=, TAT, -], [TAT, -, ΔT], [-, ΔT, )]]

>> Noun Phrases are: 
[(TAT = T1 - T0,  	Waiting Time, (WT = TAT - ΔT]

>> Named Entities are: 
[('TAT', 'ORG'), ('T1', 'CARDINAL'), ('Waiting Time', 'PERSON'), ('TAT - ΔT', 'ORG')]


============================ Sentence 137 =============================

 	22  	9  	5  	13  	22  	8  	2  	8  	12  	2  	0 


>> Tokens are: 
[ 	, 22,  	, 9,  	, 5,  	, 13,  	, 22,  	, 8,  	, 2,  	, 8,  	, 12,  	, 2,  	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('5', 'NUM'), (' \t', 'SPACE'), ('13', 'NUM'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('8', 'NUM'), (' \t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('8', 'NUM'), (' \t', 'SPACE'), ('12', 'NUM'), (' \t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('22', 'nummod'), (' \t', 'nmod'), ('9', 'nummod'), (' \t', 'nmod'), ('5', 'nummod'), (' \t', 'nmod'), ('13', 'nummod'), (' \t', 'nmod'), ('22', 'nummod'), (' \t', 'nmod'), ('8', 'nummod'), (' \t', 'compound'), ('2', 'nummod'), (' \t', 'nmod'), ('8', 'nummod'), (' \t', 'nmod'), ('12', 'nummod'), (' \t', 'nmod'), ('2', 'nummod'), (' \t', 'appos'), ('0', 'appos')]

>> Bigrams: 
[[ 	, 22], [22,  	], [ 	, 9], [9,  	], [ 	, 5], [5,  	], [ 	, 13], [13,  	], [ 	, 22], [22,  	], [ 	, 8], [8,  	], [ 	, 2], [2,  	], [ 	, 8], [8,  	], [ 	, 12], [12,  	], [ 	, 2], [2,  	], [ 	, 0]]

>> Trigrams: 
[[ 	, 22,  	], [22,  	, 9], [ 	, 9,  	], [9,  	, 5], [ 	, 5,  	], [5,  	, 13], [ 	, 13,  	], [13,  	, 22], [ 	, 22,  	], [22,  	, 8], [ 	, 8,  	], [8,  	, 2], [ 	, 2,  	], [2,  	, 8], [ 	, 8,  	], [8,  	, 12], [ 	, 12,  	], [12,  	, 2], [ 	, 2,  	], [2,  	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('22', 'CARDINAL'), ('9', 'CARDINAL'), ('5', 'CARDINAL'), ('13', 'CARDINAL'), ('22', 'CARDINAL'), ('8', 'CARDINAL'), ('2', 'CARDINAL'), ('8', 'CARDINAL'), ('12', 'CARDINAL'), ('2', 'CARDINAL'), ('0', 'CARDINAL')]


============================ Sentence 138 =============================

 	4  P0 P1 0 9 22 P0 1 P1 3 P2 5 P3 13 	Process	Remaining Time 	P1	6 	P0	9  	Process	Remaining Time 	P0	9 	P2	2 	P1	4  	Process	Remaining Time 	P0	9 	P1	4 	P3	4  	Process	Remaining Time 	P0	9 	P3	4  	Process	Remaining Time 	P0	9 


>> Tokens are: 
[ 	, 4,  , P0, P1, 0, 9, 22, P0, 1, P1, 3, P2, 5, P3, 13, 	, Process, 	, Remaining, Time, 	, P1, 	, 6, 	, P0, 	, 9,  	, Process, 	, Remaining, Time, 	, P0, 	, 9, 	, P2, 	, 2, 	, P1, 	, 4,  	, Process, 	, Remaining, Time, 	, P0, 	, 9, 	, P1, 	, 4, 	, P3, 	, 4,  	, Process, 	, Remaining, Time, 	, P0, 	, 9, 	, P3, 	, 4,  	, Process, 	, Remaining, Time, 	, P0, 	, 9] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('4', 'NUM'), (' ', 'SPACE'), ('P0', 'PROPN'), ('P1', 'PROPN'), ('0', 'NUM'), ('9', 'NUM'), ('22', 'NUM'), ('P0', 'PROPN'), ('1', 'NUM'), ('P1', 'PROPN'), ('3', 'NUM'), ('P2', 'PROPN'), ('5', 'NUM'), ('P3', 'PROPN'), ('13', 'NUM'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'PROPN'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('9', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('4', 'nummod'), (' ', 'ROOT'), ('P0', 'appos'), ('P1', 'appos'), ('0', 'nummod'), ('9', 'compound'), ('22', 'nummod'), ('P0', 'appos'), ('1', 'nummod'), ('P1', 'appos'), ('3', 'nummod'), ('P2', 'nmod'), ('5', 'nummod'), ('P3', 'nmod'), ('13', 'nummod'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'nmod'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('P0', 'nmod'), ('\t', 'nmod'), ('9', 'nummod'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nmod'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'nmod'), ('P0', 'appos'), ('\t', 'appos'), ('9', 'nummod'), ('\t', 'appos'), ('P2', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('P1', 'nmod'), ('\t', 'conj'), ('4', 'appos'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'nmod'), ('P0', 'appos'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'appos'), ('4', 'nummod'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nmod'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'nmod'), ('P0', 'nmod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'appos'), ('4', 'nummod'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nmod'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P0', 'nmod'), ('\t', 'appos'), ('9', 'nummod')]

>> Bigrams: 
[[ 	, 4], [4,  ], [ , P0], [P0, P1], [P1, 0], [0, 9], [9, 22], [22, P0], [P0, 1], [1, P1], [P1, 3], [3, P2], [P2, 5], [5, P3], [P3, 13], [13, 	], [	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P1], [P1, 	], [	, 6], [6, 	], [	, P0], [P0, 	], [	, 9], [9,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P0], [P0, 	], [	, 9], [9, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, P1], [P1, 	], [	, 4], [4,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P0], [P0, 	], [	, 9], [9, 	], [	, P1], [P1, 	], [	, 4], [4, 	], [	, P3], [P3, 	], [	, 4], [4,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P0], [P0, 	], [	, 9], [9, 	], [	, P3], [P3, 	], [	, 4], [4,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P0], [P0, 	], [	, 9]]

>> Trigrams: 
[[ 	, 4,  ], [4,  , P0], [ , P0, P1], [P0, P1, 0], [P1, 0, 9], [0, 9, 22], [9, 22, P0], [22, P0, 1], [P0, 1, P1], [1, P1, 3], [P1, 3, P2], [3, P2, 5], [P2, 5, P3], [5, P3, 13], [P3, 13, 	], [13, 	, Process], [	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P1], [	, P1, 	], [P1, 	, 6], [	, 6, 	], [6, 	, P0], [	, P0, 	], [P0, 	, 9], [	, 9,  	], [9,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P0], [	, P0, 	], [P0, 	, 9], [	, 9, 	], [9, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4,  	], [4,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P0], [	, P0, 	], [P0, 	, 9], [	, 9, 	], [9, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4, 	], [4, 	, P3], [	, P3, 	], [P3, 	, 4], [	, 4,  	], [4,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P0], [	, P0, 	], [P0, 	, 9], [	, 9, 	], [9, 	, P3], [	, P3, 	], [P3, 	, 4], [	, 4,  	], [4,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P0], [	, P0, 	], [P0, 	, 9]]

>> Noun Phrases are: 
[P0, P1, 9 22 P0, 1 P1, P2 5 P3 13 	Process	Remaining Time 	P1	6 	P0	9  	Process	Remaining Time 	P0, Remaining Time 	P0, 	9 	P1	4 	P3, 4  	Process	Remaining Time 	P0	9 	P3]

>> Named Entities are: 
[('4', 'CARDINAL'), ('1', 'CARDINAL'), ('9', 'CARDINAL')]


============================ Sentence 139 =============================

    Prof. 


>> Tokens are: 
[    , Prof.] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[    , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[    Prof.]

>> Named Entities are: 
[]


============================ Sentence 140 =============================

Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'nsubj'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 141 =============================

Shortest Remaining Time Next (SRTN) 


>> Tokens are: 
[Shortest, Remaining, Time, (, SRTN, )] 

>> PoS Tags are: 
[('Shortest', 'PROPN'), ('Remaining', 'PROPN'), ('Time', 'NOUN'), ('(', 'PUNCT'), ('SRTN', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Shortest', 'nmod'), ('Remaining', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('SRTN', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Shortest, Remaining], [Remaining, Time], [Time, (], [(, SRTN], [SRTN, )]]

>> Trigrams: 
[[Shortest, Remaining, Time], [Remaining, Time, (], [Time, (, SRTN], [(, SRTN, )]]

>> Noun Phrases are: 
[Shortest Remaining Time, (SRTN]

>> Named Entities are: 
[]


============================ Sentence 142 =============================

Advantages 


>> Tokens are: 
[Advantages] 

>> PoS Tags are: 
[('Advantages', 'PROPN')] 

>> Dependency Tags are: 
[('Advantages', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Advantages]

>> Named Entities are: 
[]


============================ Sentence 143 =============================

Less waiting time. 


>> Tokens are: 
[waiting, time, .] 

>> PoS Tags are: 
[('waiting', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('waiting', 'compound'), ('time', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[waiting, time], [time, .]]

>> Trigrams: 
[[waiting, time, .]]

>> Noun Phrases are: 
[Less waiting time]

>> Named Entities are: 
[]


============================ Sentence 144 =============================

Quite good response for short processes. 


>> Tokens are: 
[good, response, short, processes, .] 

>> PoS Tags are: 
[('good', 'ADJ'), ('response', 'NOUN'), ('short', 'ADJ'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('good', 'amod'), ('response', 'ROOT'), ('short', 'amod'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[good, response], [response, short], [short, processes], [processes, .]]

>> Trigrams: 
[[good, response, short], [response, short, processes], [short, processes, .]]

>> Noun Phrases are: 
[Quite good response, short processes]

>> Named Entities are: 
[]


============================ Sentence 145 =============================

Disadvantages   


>> Tokens are: 
[Disadvantages,  ] 

>> PoS Tags are: 
[('Disadvantages', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Disadvantages', 'ROOT'), (' ', 'nummod')]

>> Bigrams: 
[[Disadvantages,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Disadvantages]

>> Named Entities are: 
[]


============================ Sentence 146 =============================

It is difficult to estimate time required to complete execution. 


>> Tokens are: 
[difficult, estimate, time, required, complete, execution, .] 

>> PoS Tags are: 
[('difficult', 'ADJ'), ('estimate', 'VERB'), ('time', 'NOUN'), ('required', 'VERB'), ('complete', 'VERB'), ('execution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('difficult', 'acomp'), ('estimate', 'xcomp'), ('time', 'dobj'), ('required', 'acl'), ('complete', 'xcomp'), ('execution', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[difficult, estimate], [estimate, time], [time, required], [required, complete], [complete, execution], [execution, .]]

>> Trigrams: 
[[difficult, estimate, time], [estimate, time, required], [time, required, complete], [required, complete, execution], [complete, execution, .]]

>> Noun Phrases are: 
[It, time, execution]

>> Named Entities are: 
[]


============================ Sentence 147 =============================

Starvation is possible for long process. 


>> Tokens are: 
[Starvation, possible, long, process, .] 

>> PoS Tags are: 
[('Starvation', 'NOUN'), ('possible', 'ADJ'), ('long', 'ADJ'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Starvation', 'nsubj'), ('possible', 'acomp'), ('long', 'amod'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Starvation, possible], [possible, long], [long, process], [process, .]]

>> Trigrams: 
[[Starvation, possible, long], [possible, long, process], [long, process, .]]

>> Noun Phrases are: 
[Starvation, long process]

>> Named Entities are: 
[]


============================ Sentence 148 =============================

Long process may wait forever. 


>> Tokens are: 
[Long, process, wait, forever, .] 

>> PoS Tags are: 
[('Long', 'ADJ'), ('process', 'NOUN'), ('wait', 'VERB'), ('forever', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Long', 'amod'), ('process', 'nsubj'), ('wait', 'ROOT'), ('forever', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Long, process], [process, wait], [wait, forever], [forever, .]]

>> Trigrams: 
[[Long, process, wait], [process, wait, forever], [wait, forever, .]]

>> Noun Phrases are: 
[Long process]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

Starvation is the problem that occurs when high priority processes keep executing and low priority processes get blocked for indefinite time. 


>> Tokens are: 
[Starvation, problem, occurs, high, priority, processes, executing, low, priority, processes, blocked, indefinite, time, .] 

>> PoS Tags are: 
[('Starvation', 'NOUN'), ('problem', 'NOUN'), ('occurs', 'VERB'), ('high', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('executing', 'NOUN'), ('low', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('blocked', 'VERB'), ('indefinite', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Starvation', 'nsubj'), ('problem', 'attr'), ('occurs', 'relcl'), ('high', 'amod'), ('priority', 'compound'), ('processes', 'nsubj'), ('executing', 'dobj'), ('low', 'amod'), ('priority', 'compound'), ('processes', 'nsubjpass'), ('blocked', 'conj'), ('indefinite', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Starvation, problem], [problem, occurs], [occurs, high], [high, priority], [priority, processes], [processes, executing], [executing, low], [low, priority], [priority, processes], [processes, blocked], [blocked, indefinite], [indefinite, time], [time, .]]

>> Trigrams: 
[[Starvation, problem, occurs], [problem, occurs, high], [occurs, high, priority], [high, priority, processes], [priority, processes, executing], [processes, executing, low], [executing, low, priority], [low, priority, processes], [priority, processes, blocked], [processes, blocked, indefinite], [blocked, indefinite, time], [indefinite, time, .]]

>> Noun Phrases are: 
[Starvation, the problem, high priority processes, executing, low priority processes, indefinite time]

>> Named Entities are: 
[]


============================ Sentence 150 =============================

Context switch overhead is there. 


>> Tokens are: 
[Context, switch, overhead, .] 

>> PoS Tags are: 
[('Context', 'PROPN'), ('switch', 'NOUN'), ('overhead', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Context', 'compound'), ('switch', 'nsubj'), ('overhead', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Context, switch], [switch, overhead], [overhead, .]]

>> Trigrams: 
[[Context, switch, overhead], [switch, overhead, .]]

>> Noun Phrases are: 
[Context switch]

>> Named Entities are: 
[]


============================ Sentence 151 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 152 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 153 =============================

Round Robin (RR) Section – 4.4      Round Robin (RR) Selection criteria: Each selected process is assigned a time interval, called time quantum or time slice. 


>> Tokens are: 
[Round, Robin, (, RR, ), Section, –, 4.4,      , Round, Robin, (, RR, ), Selection, criteria, :, selected, process, assigned, time, interval, ,, called, time, quantum, time, slice, .] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'NOUN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('4.4', 'NUM'), ('     ', 'SPACE'), ('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'NOUN'), (')', 'PUNCT'), ('Selection', 'NOUN'), ('criteria', 'NOUN'), (':', 'PUNCT'), ('selected', 'VERB'), ('process', 'NOUN'), ('assigned', 'VERB'), ('time', 'NOUN'), ('interval', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), ('time', 'NOUN'), ('quantum', 'NOUN'), ('time', 'NOUN'), ('slice', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'nsubj'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('Section', 'appos'), ('–', 'punct'), ('4.4', 'nummod'), ('     ', 'appos'), ('Round', 'compound'), ('Robin', 'appos'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('Selection', 'appos'), ('criteria', 'ROOT'), (':', 'punct'), ('selected', 'amod'), ('process', 'nsubjpass'), ('assigned', 'ccomp'), ('time', 'compound'), ('interval', 'dobj'), (',', 'punct'), ('called', 'advcl'), ('time', 'compound'), ('quantum', 'oprd'), ('time', 'compound'), ('slice', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Round, Robin], [Robin, (], [(, RR], [RR, )], [), Section], [Section, –], [–, 4.4], [4.4,      ], [     , Round], [Round, Robin], [Robin, (], [(, RR], [RR, )], [), Selection], [Selection, criteria], [criteria, :], [:, selected], [selected, process], [process, assigned], [assigned, time], [time, interval], [interval, ,], [,, called], [called, time], [time, quantum], [quantum, time], [time, slice], [slice, .]]

>> Trigrams: 
[[Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ), Section], [), Section, –], [Section, –, 4.4], [–, 4.4,      ], [4.4,      , Round], [     , Round, Robin], [Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ), Selection], [), Selection, criteria], [Selection, criteria, :], [criteria, :, selected], [:, selected, process], [selected, process, assigned], [process, assigned, time], [assigned, time, interval], [time, interval, ,], [interval, ,, called], [,, called, time], [called, time, quantum], [time, quantum, time], [quantum, time, slice], [time, slice, .]]

>> Noun Phrases are: 
[Round Robin, (RR) Section, Round Robin, (RR) Selection, Each selected process, a time interval, time quantum, time slice]

>> Named Entities are: 
[('Round Robin', 'PERSON'), ('4.4', 'CARDINAL'), ('Round Robin', 'PERSON')]


============================ Sentence 154 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

Process is allowed to run only for this time interval. 


>> Tokens are: 
[Process, allowed, run, time, interval, .] 

>> PoS Tags are: 
[('Process', 'PROPN'), ('allowed', 'VERB'), ('run', 'VERB'), ('time', 'NOUN'), ('interval', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubjpass'), ('allowed', 'ROOT'), ('run', 'xcomp'), ('time', 'compound'), ('interval', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Process, allowed], [allowed, run], [run, time], [time, interval], [interval, .]]

>> Trigrams: 
[[Process, allowed, run], [allowed, run, time], [run, time, interval], [time, interval, .]]

>> Noun Phrases are: 
[Process, this time interval]

>> Named Entities are: 
[]


============================ Sentence 156 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

Here, two things are possible:   First, process is either blocked or terminated before the quantum has elapsed. 


>> Tokens are: 
[,, things, possible, :,   , ,, process, blocked, terminated, quantum, elapsed, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('things', 'NOUN'), ('possible', 'ADJ'), (':', 'PUNCT'), ('  ', 'SPACE'), (',', 'PUNCT'), ('process', 'NOUN'), ('blocked', 'VERB'), ('terminated', 'VERB'), ('quantum', 'NOUN'), ('elapsed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('things', 'nsubj'), ('possible', 'acomp'), (':', 'punct'), ('  ', 'npadvmod'), (',', 'punct'), ('process', 'nsubjpass'), ('blocked', 'ROOT'), ('terminated', 'conj'), ('quantum', 'nsubj'), ('elapsed', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[,, things], [things, possible], [possible, :], [:,   ], [  , ,], [,, process], [process, blocked], [blocked, terminated], [terminated, quantum], [quantum, elapsed], [elapsed, .]]

>> Trigrams: 
[[,, things, possible], [things, possible, :], [possible, :,   ], [:,   , ,], [  , ,, process], [,, process, blocked], [process, blocked, terminated], [blocked, terminated, quantum], [terminated, quantum, elapsed], [quantum, elapsed, .]]

>> Noun Phrases are: 
[two things, process, the quantum]

>> Named Entities are: 
[('two', 'CARDINAL'), ('First', 'ORDINAL')]


============================ Sentence 158 =============================

In this case the CPU switching is done and another process is scheduled to run. 


>> Tokens are: 
[case, CPU, switching, process, scheduled, run, .] 

>> PoS Tags are: 
[('case', 'NOUN'), ('CPU', 'NOUN'), ('switching', 'NOUN'), ('process', 'NOUN'), ('scheduled', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), ('CPU', 'compound'), ('switching', 'nsubjpass'), ('process', 'nsubjpass'), ('scheduled', 'conj'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[case, CPU], [CPU, switching], [switching, process], [process, scheduled], [scheduled, run], [run, .]]

>> Trigrams: 
[[case, CPU, switching], [CPU, switching, process], [switching, process, scheduled], [process, scheduled, run], [scheduled, run, .]]

>> Noun Phrases are: 
[this case, the CPU switching, another process]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

    Second, process needs CPU burst longer than time quantum. 


>> Tokens are: 
[    , Second, ,, process, needs, CPU, burst, longer, time, quantum, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Second', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('needs', 'VERB'), ('CPU', 'NOUN'), ('burst', 'VERB'), ('longer', 'ADV'), ('time', 'NOUN'), ('quantum', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'dep'), ('Second', 'amod'), (',', 'punct'), ('process', 'nsubj'), ('needs', 'ROOT'), ('CPU', 'nsubj'), ('burst', 'ccomp'), ('longer', 'advmod'), ('time', 'compound'), ('quantum', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[    , Second], [Second, ,], [,, process], [process, needs], [needs, CPU], [CPU, burst], [burst, longer], [longer, time], [time, quantum], [quantum, .]]

>> Trigrams: 
[[    , Second, ,], [Second, ,, process], [,, process, needs], [process, needs, CPU], [needs, CPU, burst], [CPU, burst, longer], [burst, longer, time], [longer, time, quantum], [time, quantum, .]]

>> Noun Phrases are: 
[process, CPU, time quantum]

>> Named Entities are: 
[('Second', 'ORDINAL')]


============================ Sentence 160 =============================

In this case, process is running at the end of the time quantum. 


>> Tokens are: 
[case, ,, process, running, end, time, quantum, .] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('process', 'NOUN'), ('running', 'VERB'), ('end', 'NOUN'), ('time', 'NOUN'), ('quantum', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('process', 'nsubj'), ('running', 'ROOT'), ('end', 'pobj'), ('time', 'compound'), ('quantum', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[case, ,], [,, process], [process, running], [running, end], [end, time], [time, quantum], [quantum, .]]

>> Trigrams: 
[[case, ,, process], [,, process, running], [process, running, end], [running, end, time], [end, time, quantum], [time, quantum, .]]

>> Noun Phrases are: 
[this case, process, the end, the time quantum]

>> Named Entities are: 
[]


============================ Sentence 161 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 162 =============================

Now, it will be preempted and moved to the end of the queue. 


>> Tokens are: 
[,, preempted, moved, end, queue, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('preempted', 'VERB'), ('moved', 'VERB'), ('end', 'NOUN'), ('queue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('preempted', 'ROOT'), ('moved', 'conj'), ('end', 'pobj'), ('queue', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, preempted], [preempted, moved], [moved, end], [end, queue], [queue, .]]

>> Trigrams: 
[[,, preempted, moved], [preempted, moved, end], [moved, end, queue], [end, queue, .]]

>> Noun Phrases are: 
[it, the end, the queue]

>> Named Entities are: 
[]


============================ Sentence 163 =============================

 CPU will be allocated to another process. 


>> Tokens are: 
[ , CPU, allocated, process, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('CPU', 'NOUN'), ('allocated', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('CPU', 'nsubjpass'), ('allocated', 'ROOT'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , CPU], [CPU, allocated], [allocated, process], [process, .]]

>> Trigrams: 
[[ , CPU, allocated], [CPU, allocated, process], [allocated, process, .]]

>> Noun Phrases are: 
[ CPU, another process]

>> Named Entities are: 
[]


============================ Sentence 164 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 165 =============================

Here, length of time quantum is critical to determine. 


>> Tokens are: 
[,, length, time, quantum, critical, determine, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('length', 'NOUN'), ('time', 'NOUN'), ('quantum', 'NOUN'), ('critical', 'ADJ'), ('determine', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('length', 'nsubj'), ('time', 'compound'), ('quantum', 'pobj'), ('critical', 'acomp'), ('determine', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[,, length], [length, time], [time, quantum], [quantum, critical], [critical, determine], [determine, .]]

>> Trigrams: 
[[,, length, time], [length, time, quantum], [time, quantum, critical], [quantum, critical, determine], [critical, determine, .]]

>> Noun Phrases are: 
[length, time quantum]

>> Named Entities are: 
[]


============================ Sentence 166 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 167 =============================

Head Tail P1 (2) P2 (6) P3 (1)   


>> Tokens are: 
[Head, Tail, P1, (, 2, ), P2, (, 6, ), P3, (, 1, ),  ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('P2', 'PROPN'), ('(', 'PUNCT'), ('6', 'NUM'), (')', 'PUNCT'), ('P3', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('P2', 'appos'), ('(', 'punct'), ('6', 'appos'), (')', 'punct'), ('P3', 'appos'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, (], [(, 2], [2, )], [), P2], [P2, (], [(, 6], [6, )], [), P3], [P3, (], [(, 1], [1, )], [),  ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, (], [P1, (, 2], [(, 2, )], [2, ), P2], [), P2, (], [P2, (, 6], [(, 6, )], [6, ), P3], [), P3, (], [P3, (, 1], [(, 1, )], [1, ),  ]]

>> Noun Phrases are: 
[Head Tail P1, P2, P3]

>> Named Entities are: 
[('2', 'CARDINAL'), ('6', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 168 =============================

Ready queue & Quantum = 


>> Tokens are: 
[Ready, queue, &, Quantum, =] 

>> PoS Tags are: 
[('Ready', 'ADJ'), ('queue', 'NOUN'), ('&', 'CCONJ'), ('Quantum', 'PROPN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Ready', 'amod'), ('queue', 'ROOT'), ('&', 'cc'), ('Quantum', 'conj'), ('=', 'punct')]

>> Bigrams: 
[[Ready, queue], [queue, &], [&, Quantum], [Quantum, =]]

>> Trigrams: 
[[Ready, queue, &], [queue, &, Quantum], [&, Quantum, =]]

>> Noun Phrases are: 
[Ready queue, Quantum]

>> Named Entities are: 
[]


============================ Sentence 169 =============================

3 


>> Tokens are: 
[3] 

>> PoS Tags are: 
[('3', 'NUM')] 

>> Dependency Tags are: 
[('3', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 170 =============================

P0 (2) Ready queue & Quantum = 3   


>> Tokens are: 
[P0, (, 2, ), Ready, queue, &, Quantum, =, 3,  ] 

>> PoS Tags are: 
[('P0', 'PROPN'), ('(', 'PUNCT'), ('2', 'X'), (')', 'PUNCT'), ('Ready', 'ADJ'), ('queue', 'NOUN'), ('&', 'CCONJ'), ('Quantum', 'PROPN'), ('=', 'PUNCT'), ('3', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('P0', 'ROOT'), ('(', 'punct'), ('2', 'nummod'), (')', 'punct'), ('Ready', 'amod'), ('queue', 'appos'), ('&', 'cc'), ('Quantum', 'conj'), ('=', 'punct'), ('3', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[P0, (], [(, 2], [2, )], [), Ready], [Ready, queue], [queue, &], [&, Quantum], [Quantum, =], [=, 3], [3,  ]]

>> Trigrams: 
[[P0, (, 2], [(, 2, )], [2, ), Ready], [), Ready, queue], [Ready, queue, &], [queue, &, Quantum], [&, Quantum, =], [Quantum, =, 3], [=, 3,  ]]

>> Noun Phrases are: 
[P0, 2) Ready queue, Quantum]

>> Named Entities are: 
[('2', 'CARDINAL'), ('3', 'CARDINAL')]


============================ Sentence 171 =============================

Head Tail P1 (2) P2 (6) P3 (1)   


>> Tokens are: 
[Head, Tail, P1, (, 2, ), P2, (, 6, ), P3, (, 1, ),  ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('P2', 'PROPN'), ('(', 'PUNCT'), ('6', 'NUM'), (')', 'PUNCT'), ('P3', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('P2', 'appos'), ('(', 'punct'), ('6', 'appos'), (')', 'punct'), ('P3', 'appos'), ('(', 'punct'), ('1', 'appos'), (')', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, (], [(, 2], [2, )], [), P2], [P2, (], [(, 6], [6, )], [), P3], [P3, (], [(, 1], [1, )], [),  ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, (], [P1, (, 2], [(, 2, )], [2, ), P2], [), P2, (], [P2, (, 6], [(, 6, )], [6, ), P3], [), P3, (], [P3, (, 1], [(, 1, )], [1, ),  ]]

>> Noun Phrases are: 
[Head Tail P1, P2, P3]

>> Named Entities are: 
[('2', 'CARDINAL'), ('6', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 172 =============================

Ready queue & Quantum = 3 


>> Tokens are: 
[Ready, queue, &, Quantum, =, 3] 

>> PoS Tags are: 
[('Ready', 'ADJ'), ('queue', 'NOUN'), ('&', 'CCONJ'), ('Quantum', 'PROPN'), ('=', 'PUNCT'), ('3', 'NUM')] 

>> Dependency Tags are: 
[('Ready', 'amod'), ('queue', 'ROOT'), ('&', 'cc'), ('Quantum', 'conj'), ('=', 'punct'), ('3', 'punct')]

>> Bigrams: 
[[Ready, queue], [queue, &], [&, Quantum], [Quantum, =], [=, 3]]

>> Trigrams: 
[[Ready, queue, &], [queue, &, Quantum], [&, Quantum, =], [Quantum, =, 3]]

>> Noun Phrases are: 
[Ready queue, Quantum]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 173 =============================

P0 (1) P0 (4)     


>> Tokens are: 
[P0, (, 1, ), P0, (, 4, ),    ] 

>> PoS Tags are: 
[('P0', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('P0', 'PROPN'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('P0', 'ROOT'), ('(', 'punct'), ('1', 'nummod'), (')', 'punct'), ('P0', 'appos'), ('(', 'punct'), ('4', 'appos'), (')', 'punct'), ('   ', 'punct')]

>> Bigrams: 
[[P0, (], [(, 1], [1, )], [), P0], [P0, (], [(, 4], [4, )], [),    ]]

>> Trigrams: 
[[P0, (, 1], [(, 1, )], [1, ), P0], [), P0, (], [P0, (, 4], [(, 4, )], [4, ),    ]]

>> Noun Phrases are: 
[P0, (1) P0]

>> Named Entities are: 
[('1', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 174 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 175 =============================

Round Robin (RR) Decision Mode: Preemptive: When a new process arrives, its total time is compared to the current process remaining run time. 


>> Tokens are: 
[Round, Robin, (, RR, ), Decision, Mode, :, Preemptive, :, new, process, arrives, ,, total, time, compared, current, process, remaining, run, time, .] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'NOUN'), (')', 'PUNCT'), ('Decision', 'NOUN'), ('Mode', 'PROPN'), (':', 'PUNCT'), ('Preemptive', 'ADJ'), (':', 'PUNCT'), ('new', 'ADJ'), ('process', 'NOUN'), ('arrives', 'VERB'), (',', 'PUNCT'), ('total', 'ADJ'), ('time', 'NOUN'), ('compared', 'VERB'), ('current', 'ADJ'), ('process', 'NOUN'), ('remaining', 'VERB'), ('run', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'nsubj'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('Decision', 'compound'), ('Mode', 'appos'), (':', 'punct'), ('Preemptive', 'dep'), (':', 'punct'), ('new', 'amod'), ('process', 'nsubj'), ('arrives', 'advcl'), (',', 'punct'), ('total', 'amod'), ('time', 'nsubjpass'), ('compared', 'ROOT'), ('current', 'amod'), ('process', 'pobj'), ('remaining', 'amod'), ('run', 'amod'), ('time', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Round, Robin], [Robin, (], [(, RR], [RR, )], [), Decision], [Decision, Mode], [Mode, :], [:, Preemptive], [Preemptive, :], [:, new], [new, process], [process, arrives], [arrives, ,], [,, total], [total, time], [time, compared], [compared, current], [current, process], [process, remaining], [remaining, run], [run, time], [time, .]]

>> Trigrams: 
[[Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ), Decision], [), Decision, Mode], [Decision, Mode, :], [Mode, :, Preemptive], [:, Preemptive, :], [Preemptive, :, new], [:, new, process], [new, process, arrives], [process, arrives, ,], [arrives, ,, total], [,, total, time], [total, time, compared], [time, compared, current], [compared, current, process], [current, process, remaining], [process, remaining, run], [remaining, run, time], [run, time, .]]

>> Noun Phrases are: 
[Round Robin, (RR) Decision Mode, a new process, its total time, the current process, remaining run time]

>> Named Entities are: 
[('Round Robin', 'PERSON')]


============================ Sentence 176 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 177 =============================

Selection of new job is as per FCFS scheduling algorithm. 


>> Tokens are: 
[Selection, new, job, FCFS, scheduling, algorithm, .] 

>> PoS Tags are: 
[('Selection', 'NOUN'), ('new', 'ADJ'), ('job', 'NOUN'), ('FCFS', 'PROPN'), ('scheduling', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Selection', 'nsubj'), ('new', 'amod'), ('job', 'pobj'), ('FCFS', 'compound'), ('scheduling', 'compound'), ('algorithm', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Selection, new], [new, job], [job, FCFS], [FCFS, scheduling], [scheduling, algorithm], [algorithm, .]]

>> Trigrams: 
[[Selection, new, job], [new, job, FCFS], [job, FCFS, scheduling], [FCFS, scheduling, algorithm], [scheduling, algorithm, .]]

>> Noun Phrases are: 
[Selection, new job, FCFS scheduling algorithm]

>> Named Entities are: 
[('FCFS', 'ORG')]


============================ Sentence 178 =============================

Implementation: 


>> Tokens are: 
[Implementation, :] 

>> PoS Tags are: 
[('Implementation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Implementation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Implementation, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Implementation]

>> Named Entities are: 
[]


============================ Sentence 179 =============================

This strategy can be implemented by using circular FIFO queue. 


>> Tokens are: 
[strategy, implemented, circular, FIFO, queue, .] 

>> PoS Tags are: 
[('strategy', 'NOUN'), ('implemented', 'VERB'), ('circular', 'ADJ'), ('FIFO', 'PROPN'), ('queue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('strategy', 'nsubjpass'), ('implemented', 'ROOT'), ('circular', 'amod'), ('FIFO', 'compound'), ('queue', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[strategy, implemented], [implemented, circular], [circular, FIFO], [FIFO, queue], [queue, .]]

>> Trigrams: 
[[strategy, implemented, circular], [implemented, circular, FIFO], [circular, FIFO, queue], [FIFO, queue, .]]

>> Noun Phrases are: 
[This strategy, circular FIFO queue]

>> Named Entities are: 
[('FIFO', 'ORG')]


============================ Sentence 180 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 181 =============================

If any process comes, or process releases CPU, or process is preempted. 


>> Tokens are: 
[process, comes, ,, process, releases, CPU, ,, process, preempted, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('comes', 'VERB'), (',', 'PUNCT'), ('process', 'NOUN'), ('releases', 'VERB'), ('CPU', 'NOUN'), (',', 'PUNCT'), ('process', 'NOUN'), ('preempted', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('comes', 'advcl'), (',', 'punct'), ('process', 'nsubj'), ('releases', 'conj'), ('CPU', 'dobj'), (',', 'punct'), ('process', 'nsubjpass'), ('preempted', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[process, comes], [comes, ,], [,, process], [process, releases], [releases, CPU], [CPU, ,], [,, process], [process, preempted], [preempted, .]]

>> Trigrams: 
[[process, comes, ,], [comes, ,, process], [,, process, releases], [process, releases, CPU], [releases, CPU, ,], [CPU, ,, process], [,, process, preempted], [process, preempted, .]]

>> Noun Phrases are: 
[any process, process, CPU, process]

>> Named Entities are: 
[]


============================ Sentence 182 =============================

It is moved to the end of the queue. 


>> Tokens are: 
[moved, end, queue, .] 

>> PoS Tags are: 
[('moved', 'VERB'), ('end', 'NOUN'), ('queue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('moved', 'ROOT'), ('end', 'pobj'), ('queue', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[moved, end], [end, queue], [queue, .]]

>> Trigrams: 
[[moved, end, queue], [end, queue, .]]

>> Noun Phrases are: 
[It, the end, the queue]

>> Named Entities are: 
[]


============================ Sentence 183 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 184 =============================

When CPU becomes free, a process from the first position in a queue is selected to run. 


>> Tokens are: 
[CPU, free, ,, process, position, queue, selected, run, .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('free', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('position', 'NOUN'), ('queue', 'NOUN'), ('selected', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'nsubj'), ('free', 'acomp'), (',', 'punct'), ('process', 'nsubjpass'), ('position', 'pobj'), ('queue', 'pobj'), ('selected', 'ROOT'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CPU, free], [free, ,], [,, process], [process, position], [position, queue], [queue, selected], [selected, run], [run, .]]

>> Trigrams: 
[[CPU, free, ,], [free, ,, process], [,, process, position], [process, position, queue], [position, queue, selected], [queue, selected, run], [selected, run, .]]

>> Noun Phrases are: 
[CPU, a process, the first position, a queue]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 185 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 186 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 187 =============================

Round Robin (RR)         


>> Tokens are: 
[Round, Robin, (, RR, ),        ] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'NOUN'), (')', 'PUNCT'), ('       ', 'SPACE')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'ROOT'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('       ', 'appos')]

>> Bigrams: 
[[Round, Robin], [Robin, (], [(, RR], [RR, )], [),        ]]

>> Trigrams: 
[[Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ),        ]]

>> Noun Phrases are: 
[Round Robin]

>> Named Entities are: 
[('Round Robin', 'PERSON')]


============================ Sentence 188 =============================

Gantt Chart   


>> Tokens are: 
[Gantt, Chart,  ] 

>> PoS Tags are: 
[('Gantt', 'PROPN'), ('Chart', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Gantt', 'compound'), ('Chart', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[Gantt, Chart], [Chart,  ]]

>> Trigrams: 
[[Gantt, Chart,  ]]

>> Noun Phrases are: 
[Gantt Chart]

>> Named Entities are: 
[('Gantt Chart', 'PERSON')]


============================ Sentence 189 =============================

Quantum time is 4 ms &  Context switch overhead is 1 ms Avg. 


>> Tokens are: 
[Quantum, time, 4, ms, &,  , Context, switch, overhead, 1, ms, Avg, .] 

>> PoS Tags are: 
[('Quantum', 'PROPN'), ('time', 'NOUN'), ('4', 'NUM'), ('ms', 'NOUN'), ('&', 'CCONJ'), (' ', 'SPACE'), ('Context', 'PROPN'), ('switch', 'NOUN'), ('overhead', 'NOUN'), ('1', 'NUM'), ('ms', 'NOUN'), ('Avg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Quantum', 'compound'), ('time', 'nsubj'), ('4', 'nummod'), ('ms', 'attr'), ('&', 'cc'), (' ', 'conj'), ('Context', 'compound'), ('switch', 'compound'), ('overhead', 'attr'), ('1', 'compound'), ('ms', 'compound'), ('Avg', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Quantum, time], [time, 4], [4, ms], [ms, &], [&,  ], [ , Context], [Context, switch], [switch, overhead], [overhead, 1], [1, ms], [ms, Avg], [Avg, .]]

>> Trigrams: 
[[Quantum, time, 4], [time, 4, ms], [4, ms, &], [ms, &,  ], [&,  , Context], [ , Context, switch], [Context, switch, overhead], [switch, overhead, 1], [overhead, 1, ms], [1, ms, Avg], [ms, Avg, .]]

>> Noun Phrases are: 
[Quantum time, 4 ms, Context switch overhead, 1 ms Avg]

>> Named Entities are: 
[('Quantum', 'ORG'), ('4 ms &  Context', 'ORG'), ('1', 'CARDINAL'), ('Avg', 'GPE')]


============================ Sentence 190 =============================

Turnaround Time:  19.5 ms Avg. 


>> Tokens are: 
[Turnaround, Time, :,  , 19.5, ms, Avg, .] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE'), ('19.5', 'NUM'), ('ms', 'NOUN'), ('Avg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('Time', 'ROOT'), (':', 'punct'), (' ', 'appos'), ('19.5', 'nummod'), ('ms', 'appos'), ('Avg', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Turnaround, Time], [Time, :], [:,  ], [ , 19.5], [19.5, ms], [ms, Avg], [Avg, .]]

>> Trigrams: 
[[Turnaround, Time, :], [Time, :,  ], [:,  , 19.5], [ , 19.5, ms], [19.5, ms, Avg], [ms, Avg, .]]

>> Noun Phrases are: 
[Turnaround Time, 19.5 ms, Avg]

>> Named Entities are: 
[('Turnaround Time', 'PERSON'), ('19.5', 'CARDINAL'), ('Avg', 'GPE')]


============================ Sentence 191 =============================

Waiting Time:         14 ms 	Process	Arrival Time (T0) 


>> Tokens are: 
[Waiting, Time, :,         , 14, ms, 	, Process, 	, Arrival, Time, (, T0, )] 

>> PoS Tags are: 
[('Waiting', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('        ', 'SPACE'), ('14', 'NUM'), ('ms', 'NOUN'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Waiting', 'compound'), ('Time', 'ROOT'), (':', 'punct'), ('        ', 'compound'), ('14', 'nummod'), ('ms', 'compound'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Arrival', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('T0', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Waiting, Time], [Time, :], [:,         ], [        , 14], [14, ms], [ms, 	], [	, Process], [Process, 	], [	, Arrival], [Arrival, Time], [Time, (], [(, T0], [T0, )]]

>> Trigrams: 
[[Waiting, Time, :], [Time, :,         ], [:,         , 14], [        , 14, ms], [14, ms, 	], [ms, 	, Process], [	, Process, 	], [Process, 	, Arrival], [	, Arrival, Time], [Arrival, Time, (], [Time, (, T0], [(, T0, )]]

>> Noun Phrases are: 
[Waiting Time,         14 ms 	Process	Arrival Time, (T0]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 192 =============================

	Burst Time (ΔT) 


>> Tokens are: 
[	, Burst, Time, (, ΔT, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Burst', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Burst], [Burst, Time], [Time, (], [(, ΔT], [ΔT, )]]

>> Trigrams: 
[[	, Burst, Time], [Burst, Time, (], [Time, (, ΔT], [(, ΔT, )]]

>> Noun Phrases are: 
[	Burst Time, (ΔT]

>> Named Entities are: 
[]


============================ Sentence 193 =============================

	P0	0 


>> Tokens are: 
[	, P0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P0', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 194 =============================

	10 	P1	1	6 	P2	3	2 	P3	5	4  	Finish Time (T1)  	Turnaround Time 


>> Tokens are: 
[	, 10, 	, P1, 	, 1, 	, 6, 	, P2, 	, 3, 	, 2, 	, P3, 	, 5, 	, 4,  	, Finish, Time, (, T1, ),  	, Turnaround, Time] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('10', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Finish', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T1', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Turnaround', 'PROPN'), ('Time', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('10', 'nummod'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'nmod'), ('5', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), (' \t', 'nummod'), ('Finish', 'compound'), ('Time', 'dobj'), ('(', 'punct'), ('T1', 'appos'), (')', 'punct'), (' \t', 'nummod'), ('Turnaround', 'compound'), ('Time', 'appos')]

>> Bigrams: 
[[	, 10], [10, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, P2], [P2, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 5], [5, 	], [	, 4], [4,  	], [ 	, Finish], [Finish, Time], [Time, (], [(, T1], [T1, )], [),  	], [ 	, Turnaround], [Turnaround, Time]]

>> Trigrams: 
[[	, 10, 	], [10, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, P2], [	, P2, 	], [P2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4,  	], [4,  	, Finish], [ 	, Finish, Time], [Finish, Time, (], [Time, (, T1], [(, T1, )], [T1, ),  	], [),  	, Turnaround], [ 	, Turnaround, Time]]

>> Noun Phrases are: 
[	2 	P3, 	5	4  	Finish Time, (T1,  	Turnaround Time]

>> Named Entities are: 
[('Finish', 'NORP'), ('T1', 'CARDINAL'), ('Turnaround Time', 'PERSON')]


============================ Sentence 195 =============================

(TAT = T1 - T0)  	Waiting Time (WT = TAT - ΔT) 


>> Tokens are: 
[(, TAT, =, T1, -, T0, ),  	, Waiting, Time, (, WT, =, TAT, -, ΔT, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TAT', 'PROPN'), ('=', 'SYM'), ('T1', 'PROPN'), ('-', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('WT', 'PROPN'), ('=', 'SYM'), ('TAT', 'PROPN'), ('-', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TAT', 'nmod'), ('=', 'punct'), ('T1', 'compound'), ('-', 'punct'), ('T0', 'ROOT'), (')', 'punct'), (' \t', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('WT', 'nmod'), ('=', 'punct'), ('TAT', 'compound'), ('-', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[(, TAT], [TAT, =], [=, T1], [T1, -], [-, T0], [T0, )], [),  	], [ 	, Waiting], [Waiting, Time], [Time, (], [(, WT], [WT, =], [=, TAT], [TAT, -], [-, ΔT], [ΔT, )]]

>> Trigrams: 
[[(, TAT, =], [TAT, =, T1], [=, T1, -], [T1, -, T0], [-, T0, )], [T0, ),  	], [),  	, Waiting], [ 	, Waiting, Time], [Waiting, Time, (], [Time, (, WT], [(, WT, =], [WT, =, TAT], [=, TAT, -], [TAT, -, ΔT], [-, ΔT, )]]

>> Noun Phrases are: 
[(TAT = T1 - T0,  	Waiting Time, (WT = TAT - ΔT]

>> Named Entities are: 
[('TAT', 'ORG'), ('T1', 'CARDINAL'), ('Waiting Time', 'PERSON'), ('TAT - ΔT', 'ORG')]


============================ Sentence 196 =============================

 	28  	25  	12  	22  	28  	24  	9  	17  	18  	18  	7  	13  0 P0  4 5 P1  9 10 P2  12 13 P0  17 18 P3  22 23 P1  25 26 P0 28 	Process	Remaining Time 	P1	6 	P2	2 	P0	6  	Process	Remaining Time 	P2	2 	P0	6 	P3	4 	P1	2  	Process	Remaining Time 	P0	6 	P3	4 	P1	2  	Process	Remaining Time 	P3	4 	P1	2 	P0	2  	Process	Remaining Time 	P1	2 	P0	2  	Process	Remaining Time 	P0	2      


>> Tokens are: 
[ 	, 28,  	, 25,  	, 12,  	, 22,  	, 28,  	, 24,  	, 9,  	, 17,  	, 18,  	, 18,  	, 7,  	, 13,  , 0, P0,  , 4, 5, P1,  , 9, 10, P2,  , 12, 13, P0,  , 17, 18, P3,  , 22, 23, P1,  , 25, 26, P0, 28, 	, Process, 	, Remaining, Time, 	, P1, 	, 6, 	, P2, 	, 2, 	, P0, 	, 6,  	, Process, 	, Remaining, Time, 	, P2, 	, 2, 	, P0, 	, 6, 	, P3, 	, 4, 	, P1, 	, 2,  	, Process, 	, Remaining, Time, 	, P0, 	, 6, 	, P3, 	, 4, 	, P1, 	, 2,  	, Process, 	, Remaining, Time, 	, P3, 	, 4, 	, P1, 	, 2, 	, P0, 	, 2,  	, Process, 	, Remaining, Time, 	, P1, 	, 2, 	, P0, 	, 2,  	, Process, 	, Remaining, Time, 	, P0, 	, 2,     ] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('28', 'NUM'), (' \t', 'SPACE'), ('25', 'NUM'), (' \t', 'SPACE'), ('12', 'NUM'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('28', 'NUM'), (' \t', 'SPACE'), ('24', 'NUM'), (' \t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('17', 'NUM'), (' \t', 'SPACE'), ('18', 'NUM'), (' \t', 'SPACE'), ('18', 'NUM'), (' \t', 'SPACE'), ('7', 'NUM'), (' \t', 'SPACE'), ('13', 'NUM'), (' ', 'SPACE'), ('0', 'NUM'), ('P0', 'PROPN'), (' ', 'SPACE'), ('4', 'NUM'), ('5', 'NUM'), ('P1', 'PROPN'), (' ', 'SPACE'), ('9', 'NUM'), ('10', 'NUM'), ('P2', 'PROPN'), (' ', 'SPACE'), ('12', 'NUM'), ('13', 'NUM'), ('P0', 'NOUN'), (' ', 'SPACE'), ('17', 'NUM'), ('18', 'NUM'), ('P3', 'NOUN'), (' ', 'SPACE'), ('22', 'NUM'), ('23', 'NUM'), ('P1', 'PROPN'), (' ', 'SPACE'), ('25', 'NUM'), ('26', 'NUM'), ('P0', 'PROPN'), ('28', 'PROPN'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Remaining', 'PROPN'), ('Time', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('    ', 'SPACE')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('28', 'nummod'), (' \t', 'nmod'), ('25', 'nummod'), (' \t', 'quantmod'), ('12', 'punct'), (' \t', 'quantmod'), ('22', 'nummod'), (' \t', 'compound'), ('28', 'nummod'), (' \t', 'compound'), ('24', 'nummod'), (' \t', 'nmod'), ('9', 'nummod'), (' \t', 'compound'), ('17', 'nummod'), (' \t', 'nmod'), ('18', 'nummod'), (' \t', 'nmod'), ('18', 'nummod'), (' \t', 'appos'), ('7', 'nummod'), (' \t', 'nmod'), ('13', 'nummod'), (' ', 'punct'), ('0', 'punct'), ('P0', 'nsubj'), (' ', 'appos'), ('4', 'compound'), ('5', 'nummod'), ('P1', 'npadvmod'), (' ', 'appos'), ('9', 'compound'), ('10', 'nummod'), ('P2', 'appos'), (' ', 'ROOT'), ('12', 'compound'), ('13', 'nummod'), ('P0', 'npadvmod'), (' ', 'appos'), ('17', 'nummod'), ('18', 'nummod'), ('P3', 'appos'), (' ', 'appos'), ('22', 'compound'), ('23', 'nummod'), ('P1', 'appos'), (' ', 'appos'), ('25', 'compound'), ('26', 'nummod'), ('P0', 'appos'), ('28', 'nummod'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'compound'), ('P0', 'nmod'), ('\t', 'conj'), ('6', 'nummod'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'appos'), ('P2', 'nmod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P0', 'appos'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'nmod'), ('P1', 'nmod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nmod'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P0', 'compound'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'compound'), ('4', 'appos'), ('\t', 'nmod'), ('P1', 'nmod'), ('\t', 'appos'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P3', 'parataxis'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P0', 'nmod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('P0', 'nmod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Remaining', 'compound'), ('Time', 'compound'), ('\t', 'compound'), ('P0', 'appos'), ('\t', 'appos'), ('2', 'nummod'), ('    ', 'nummod')]

>> Bigrams: 
[[ 	, 28], [28,  	], [ 	, 25], [25,  	], [ 	, 12], [12,  	], [ 	, 22], [22,  	], [ 	, 28], [28,  	], [ 	, 24], [24,  	], [ 	, 9], [9,  	], [ 	, 17], [17,  	], [ 	, 18], [18,  	], [ 	, 18], [18,  	], [ 	, 7], [7,  	], [ 	, 13], [13,  ], [ , 0], [0, P0], [P0,  ], [ , 4], [4, 5], [5, P1], [P1,  ], [ , 9], [9, 10], [10, P2], [P2,  ], [ , 12], [12, 13], [13, P0], [P0,  ], [ , 17], [17, 18], [18, P3], [P3,  ], [ , 22], [22, 23], [23, P1], [P1,  ], [ , 25], [25, 26], [26, P0], [P0, 28], [28, 	], [	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P1], [P1, 	], [	, 6], [6, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, P0], [P0, 	], [	, 6], [6,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, P0], [P0, 	], [	, 6], [6, 	], [	, P3], [P3, 	], [	, 4], [4, 	], [	, P1], [P1, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P0], [P0, 	], [	, 6], [6, 	], [	, P3], [P3, 	], [	, 4], [4, 	], [	, P1], [P1, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P3], [P3, 	], [	, 4], [4, 	], [	, P1], [P1, 	], [	, 2], [2, 	], [	, P0], [P0, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P1], [P1, 	], [	, 2], [2, 	], [	, P0], [P0, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Remaining], [Remaining, Time], [Time, 	], [	, P0], [P0, 	], [	, 2], [2,     ]]

>> Trigrams: 
[[ 	, 28,  	], [28,  	, 25], [ 	, 25,  	], [25,  	, 12], [ 	, 12,  	], [12,  	, 22], [ 	, 22,  	], [22,  	, 28], [ 	, 28,  	], [28,  	, 24], [ 	, 24,  	], [24,  	, 9], [ 	, 9,  	], [9,  	, 17], [ 	, 17,  	], [17,  	, 18], [ 	, 18,  	], [18,  	, 18], [ 	, 18,  	], [18,  	, 7], [ 	, 7,  	], [7,  	, 13], [ 	, 13,  ], [13,  , 0], [ , 0, P0], [0, P0,  ], [P0,  , 4], [ , 4, 5], [4, 5, P1], [5, P1,  ], [P1,  , 9], [ , 9, 10], [9, 10, P2], [10, P2,  ], [P2,  , 12], [ , 12, 13], [12, 13, P0], [13, P0,  ], [P0,  , 17], [ , 17, 18], [17, 18, P3], [18, P3,  ], [P3,  , 22], [ , 22, 23], [22, 23, P1], [23, P1,  ], [P1,  , 25], [ , 25, 26], [25, 26, P0], [26, P0, 28], [P0, 28, 	], [28, 	, Process], [	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P1], [	, P1, 	], [P1, 	, 6], [	, 6, 	], [6, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, P0], [	, P0, 	], [P0, 	, 6], [	, 6,  	], [6,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, P0], [	, P0, 	], [P0, 	, 6], [	, 6, 	], [6, 	, P3], [	, P3, 	], [P3, 	, 4], [	, 4, 	], [4, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P0], [	, P0, 	], [P0, 	, 6], [	, 6, 	], [6, 	, P3], [	, P3, 	], [P3, 	, 4], [	, 4, 	], [4, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P3], [	, P3, 	], [P3, 	, 4], [	, 4, 	], [4, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2, 	], [2, 	, P0], [	, P0, 	], [P0, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2, 	], [2, 	, P0], [	, P0, 	], [P0, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Remaining], [	, Remaining, Time], [Remaining, Time, 	], [Time, 	, P0], [	, P0, 	], [P0, 	, 2], [	, 2,     ]]

>> Noun Phrases are: 
[ 	28  	25  	12  	22  	28  	24  	9  	17  	18  	18  	7  	13  0 P0, 9 10 P2, 17 18 P3, 22 23 P1, 25 26 P0, P2	2 	P0, 	P3, 	P1	2  	Process	Remaining Time 	P0	6 	P3, Remaining Time 	P0]

>> Named Entities are: 
[('28', 'CARDINAL'), ('25', 'CARDINAL'), ('12', 'CARDINAL'), ('22', 'CARDINAL'), ('28', 'CARDINAL'), ('24', 'CARDINAL'), ('9', 'CARDINAL'), ('17', 'CARDINAL'), ('18', 'CARDINAL'), ('18', 'CARDINAL'), ('7', 'CARDINAL'), ('13', 'CARDINAL'), ('P0  ', 'PRODUCT'), ('9 10 P2  ', 'PERCENT'), ('12 13', 'CARDINAL'), ('17 18 P3', 'PERCENT'), ('22', 'CARDINAL'), ('25 26', 'CARDINAL'), ('28', 'CARDINAL')]


============================ Sentence 197 =============================

Prof. 


>> Tokens are: 
[Prof.] 

>> PoS Tags are: 
[('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('Prof.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Prof.]

>> Named Entities are: 
[]


============================ Sentence 198 =============================

Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'nsubj'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'npadvmod'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 199 =============================

Round Robin (RR) Advantages Simplest, fairest and most widely used algorithms. 


>> Tokens are: 
[Round, Robin, (, RR, ), Advantages, Simplest, ,, fairest, widely, algorithms, .] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('RR', 'PROPN'), (')', 'PUNCT'), ('Advantages', 'PROPN'), ('Simplest', 'PROPN'), (',', 'PUNCT'), ('fairest', 'ADV'), ('widely', 'ADV'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'ROOT'), ('(', 'punct'), ('RR', 'nmod'), (')', 'punct'), ('Advantages', 'compound'), ('Simplest', 'appos'), (',', 'punct'), ('fairest', 'amod'), ('widely', 'advmod'), ('algorithms', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Round, Robin], [Robin, (], [(, RR], [RR, )], [), Advantages], [Advantages, Simplest], [Simplest, ,], [,, fairest], [fairest, widely], [widely, algorithms], [algorithms, .]]

>> Trigrams: 
[[Round, Robin, (], [Robin, (, RR], [(, RR, )], [RR, ), Advantages], [), Advantages, Simplest], [Advantages, Simplest, ,], [Simplest, ,, fairest], [,, fairest, widely], [fairest, widely, algorithms], [widely, algorithms, .]]

>> Noun Phrases are: 
[Round Robin, (RR) Advantages Simplest, fairest and most widely used algorithms]

>> Named Entities are: 
[('Round Robin', 'PERSON')]


============================ Sentence 200 =============================

Disadvantages  Context switch overhead is there. 


>> Tokens are: 
[Disadvantages,  , Context, switch, overhead, .] 

>> PoS Tags are: 
[('Disadvantages', 'NOUN'), (' ', 'SPACE'), ('Context', 'PROPN'), ('switch', 'NOUN'), ('overhead', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Disadvantages', 'nmod'), (' ', 'nummod'), ('Context', 'compound'), ('switch', 'nsubj'), ('overhead', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Disadvantages,  ], [ , Context], [Context, switch], [switch, overhead], [overhead, .]]

>> Trigrams: 
[[Disadvantages,  , Context], [ , Context, switch], [Context, switch, overhead], [switch, overhead, .]]

>> Noun Phrases are: 
[Disadvantages  Context switch]

>> Named Entities are: 
[]


============================ Sentence 201 =============================

Determination of time quantum is too critical. 


>> Tokens are: 
[Determination, time, quantum, critical, .] 

>> PoS Tags are: 
[('Determination', 'NOUN'), ('time', 'NOUN'), ('quantum', 'NOUN'), ('critical', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Determination', 'nsubj'), ('time', 'compound'), ('quantum', 'pobj'), ('critical', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Determination, time], [time, quantum], [quantum, critical], [critical, .]]

>> Trigrams: 
[[Determination, time, quantum], [time, quantum, critical], [quantum, critical, .]]

>> Noun Phrases are: 
[Determination, time quantum]

>> Named Entities are: 
[]


============================ Sentence 202 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 203 =============================

If it is too short, it causes frequent context switches and lowers CPU efficiency. 


>> Tokens are: 
[short, ,, causes, frequent, context, switches, lowers, CPU, efficiency, .] 

>> PoS Tags are: 
[('short', 'ADJ'), (',', 'PUNCT'), ('causes', 'VERB'), ('frequent', 'ADJ'), ('context', 'NOUN'), ('switches', 'NOUN'), ('lowers', 'NOUN'), ('CPU', 'NOUN'), ('efficiency', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('short', 'acomp'), (',', 'punct'), ('causes', 'ROOT'), ('frequent', 'amod'), ('context', 'compound'), ('switches', 'dobj'), ('lowers', 'compound'), ('CPU', 'compound'), ('efficiency', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[short, ,], [,, causes], [causes, frequent], [frequent, context], [context, switches], [switches, lowers], [lowers, CPU], [CPU, efficiency], [efficiency, .]]

>> Trigrams: 
[[short, ,, causes], [,, causes, frequent], [causes, frequent, context], [frequent, context, switches], [context, switches, lowers], [switches, lowers, CPU], [lowers, CPU, efficiency], [CPU, efficiency, .]]

>> Noun Phrases are: 
[it, it, frequent context switches, lowers CPU efficiency]

>> Named Entities are: 
[]


============================ Sentence 204 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 205 =============================

If it is too long, it causes poor response for short interactive process. 


>> Tokens are: 
[long, ,, causes, poor, response, short, interactive, process, .] 

>> PoS Tags are: 
[('long', 'ADJ'), (',', 'PUNCT'), ('causes', 'VERB'), ('poor', 'ADJ'), ('response', 'NOUN'), ('short', 'ADJ'), ('interactive', 'ADJ'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('long', 'acomp'), (',', 'punct'), ('causes', 'ROOT'), ('poor', 'amod'), ('response', 'dobj'), ('short', 'amod'), ('interactive', 'amod'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[long, ,], [,, causes], [causes, poor], [poor, response], [response, short], [short, interactive], [interactive, process], [process, .]]

>> Trigrams: 
[[long, ,, causes], [,, causes, poor], [causes, poor, response], [poor, response, short], [response, short, interactive], [short, interactive, process], [interactive, process, .]]

>> Noun Phrases are: 
[it, it, poor response, short interactive process]

>> Named Entities are: 
[]


============================ Sentence 206 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 207 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 208 =============================

Priority  (Non-Preemptive Priority) Section – 4.5.1      Non-Preemptive Priority Selection criteria: The process, that has highest priority, is served first. 


>> Tokens are: 
[Priority,  , (, Non, -, Preemptive, Priority, ), Section, –, 4.5.1,      , Non, -, Preemptive, Priority, Selection, criteria, :, process, ,, highest, priority, ,, served, .] 

>> PoS Tags are: 
[('Priority', 'PROPN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('Non', 'PROPN'), ('-', 'ADJ'), ('Preemptive', 'ADJ'), ('Priority', 'PROPN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('4.5.1', 'NUM'), ('     ', 'SPACE'), ('Non', 'PROPN'), ('-', 'PROPN'), ('Preemptive', 'ADJ'), ('Priority', 'PROPN'), ('Selection', 'PROPN'), ('criteria', 'NOUN'), (':', 'PUNCT'), ('process', 'NOUN'), (',', 'PUNCT'), ('highest', 'ADJ'), ('priority', 'NOUN'), (',', 'PUNCT'), ('served', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Priority', 'nmod'), (' ', 'nummod'), ('(', 'punct'), ('Non', 'compound'), ('-', 'amod'), ('Preemptive', 'amod'), ('Priority', 'nmod'), (')', 'punct'), ('Section', 'nsubjpass'), ('–', 'punct'), ('4.5.1', 'nummod'), ('     ', 'compound'), ('Non', 'compound'), ('-', 'compound'), ('Preemptive', 'compound'), ('Priority', 'compound'), ('Selection', 'compound'), ('criteria', 'appos'), (':', 'punct'), ('process', 'appos'), (',', 'punct'), ('highest', 'amod'), ('priority', 'dobj'), (',', 'punct'), ('served', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Priority,  ], [ , (], [(, Non], [Non, -], [-, Preemptive], [Preemptive, Priority], [Priority, )], [), Section], [Section, –], [–, 4.5.1], [4.5.1,      ], [     , Non], [Non, -], [-, Preemptive], [Preemptive, Priority], [Priority, Selection], [Selection, criteria], [criteria, :], [:, process], [process, ,], [,, highest], [highest, priority], [priority, ,], [,, served], [served, .]]

>> Trigrams: 
[[Priority,  , (], [ , (, Non], [(, Non, -], [Non, -, Preemptive], [-, Preemptive, Priority], [Preemptive, Priority, )], [Priority, ), Section], [), Section, –], [Section, –, 4.5.1], [–, 4.5.1,      ], [4.5.1,      , Non], [     , Non, -], [Non, -, Preemptive], [-, Preemptive, Priority], [Preemptive, Priority, Selection], [Priority, Selection, criteria], [Selection, criteria, :], [criteria, :, process], [:, process, ,], [process, ,, highest], [,, highest, priority], [highest, priority, ,], [priority, ,, served], [,, served, .]]

>> Noun Phrases are: 
[Priority  (Non-Preemptive Priority) Section, 4.5.1      Non-Preemptive Priority Selection criteria, The process, highest priority]

>> Named Entities are: 
[('Non-Preemptive Priority', 'ORG'), ('Non-Preemptive Priority Selection', 'ORG'), ('first', 'ORDINAL')]


============================ Sentence 209 =============================

    Decision Mode: Non preemptive: Once a process is selected, it runs until it is blocked for an I/O or some other event or it is terminated. 


>> Tokens are: 
[    , Decision, Mode, :, Non, preemptive, :, process, selected, ,, runs, blocked, /, O, event, terminated, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Decision', 'NOUN'), ('Mode', 'PROPN'), (':', 'PUNCT'), ('Non', 'VERB'), ('preemptive', 'ADJ'), (':', 'PUNCT'), ('process', 'NOUN'), ('selected', 'VERB'), (',', 'PUNCT'), ('runs', 'VERB'), ('blocked', 'VERB'), ('/', 'SYM'), ('O', 'INTJ'), ('event', 'NOUN'), ('terminated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Decision', 'compound'), ('Mode', 'dep'), (':', 'punct'), ('Non', 'appos'), ('preemptive', 'advmod'), (':', 'punct'), ('process', 'nsubjpass'), ('selected', 'advcl'), (',', 'punct'), ('runs', 'ROOT'), ('blocked', 'advcl'), ('/', 'punct'), ('O', 'pobj'), ('event', 'conj'), ('terminated', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[    , Decision], [Decision, Mode], [Mode, :], [:, Non], [Non, preemptive], [preemptive, :], [:, process], [process, selected], [selected, ,], [,, runs], [runs, blocked], [blocked, /], [/, O], [O, event], [event, terminated], [terminated, .]]

>> Trigrams: 
[[    , Decision, Mode], [Decision, Mode, :], [Mode, :, Non], [:, Non, preemptive], [Non, preemptive, :], [preemptive, :, process], [:, process, selected], [process, selected, ,], [selected, ,, runs], [,, runs, blocked], [runs, blocked, /], [blocked, /, O], [/, O, event], [O, event, terminated], [event, terminated, .]]

>> Noun Phrases are: 
[a process, it, it, some other event, it]

>> Named Entities are: 
[]


============================ Sentence 210 =============================

Implementation: 


>> Tokens are: 
[Implementation, :] 

>> PoS Tags are: 
[('Implementation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Implementation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Implementation, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Implementation]

>> Named Entities are: 
[]


============================ Sentence 211 =============================

This strategy can also be implemented by using sorted FIFO queue. 


>> Tokens are: 
[strategy, implemented, sorted, FIFO, queue, .] 

>> PoS Tags are: 
[('strategy', 'NOUN'), ('implemented', 'VERB'), ('sorted', 'ADJ'), ('FIFO', 'PROPN'), ('queue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('strategy', 'nsubjpass'), ('implemented', 'ROOT'), ('sorted', 'amod'), ('FIFO', 'compound'), ('queue', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[strategy, implemented], [implemented, sorted], [sorted, FIFO], [FIFO, queue], [queue, .]]

>> Trigrams: 
[[strategy, implemented, sorted], [implemented, sorted, FIFO], [sorted, FIFO, queue], [FIFO, queue, .]]

>> Noun Phrases are: 
[This strategy, sorted FIFO queue]

>> Named Entities are: 
[('FIFO', 'ORG')]


============================ Sentence 212 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 213 =============================

All processes in a queue are sorted based on their priority with highest priority process at front end. 


>> Tokens are: 
[processes, queue, sorted, based, priority, highest, priority, process, end, .] 

>> PoS Tags are: 
[('processes', 'NOUN'), ('queue', 'NOUN'), ('sorted', 'VERB'), ('based', 'VERB'), ('priority', 'NOUN'), ('highest', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('end', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('processes', 'nsubjpass'), ('queue', 'pobj'), ('sorted', 'ROOT'), ('based', 'prep'), ('priority', 'pobj'), ('highest', 'amod'), ('priority', 'compound'), ('process', 'pobj'), ('end', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[processes, queue], [queue, sorted], [sorted, based], [based, priority], [priority, highest], [highest, priority], [priority, process], [process, end], [end, .]]

>> Trigrams: 
[[processes, queue, sorted], [queue, sorted, based], [sorted, based, priority], [based, priority, highest], [priority, highest, priority], [highest, priority, process], [priority, process, end], [process, end, .]]

>> Noun Phrases are: 
[All processes, a queue, their priority, highest priority process, front end]

>> Named Entities are: 
[]


============================ Sentence 214 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 215 =============================

When CPU becomes free, a process from the first position in a queue is selected to run. 


>> Tokens are: 
[CPU, free, ,, process, position, queue, selected, run, .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('free', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('position', 'NOUN'), ('queue', 'NOUN'), ('selected', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'nsubj'), ('free', 'acomp'), (',', 'punct'), ('process', 'nsubjpass'), ('position', 'pobj'), ('queue', 'pobj'), ('selected', 'ROOT'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CPU, free], [free, ,], [,, process], [process, position], [position, queue], [queue, selected], [selected, run], [run, .]]

>> Trigrams: 
[[CPU, free, ,], [free, ,, process], [,, process, position], [process, position, queue], [position, queue, selected], [queue, selected, run], [selected, run, .]]

>> Noun Phrases are: 
[CPU, a process, the first position, a queue]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 216 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 217 =============================

Head Tail P1 (8) P2 (6) P3 (7)   


>> Tokens are: 
[Head, Tail, P1, (, 8), P2, (, 6, ), P3, (, 7, ),  ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('(', 'PUNCT'), ('8)', 'NUM'), ('P2', 'PROPN'), ('(', 'PUNCT'), ('6', 'NUM'), (')', 'PUNCT'), ('P3', 'PROPN'), ('(', 'PUNCT'), ('7', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'ROOT'), ('(', 'punct'), ('8)', 'compound'), ('P2', 'appos'), ('(', 'punct'), ('6', 'appos'), (')', 'punct'), ('P3', 'appos'), ('(', 'punct'), ('7', 'appos'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, (], [(, 8)], [8), P2], [P2, (], [(, 6], [6, )], [), P3], [P3, (], [(, 7], [7, )], [),  ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, (], [P1, (, 8)], [(, 8), P2], [8), P2, (], [P2, (, 6], [(, 6, )], [6, ), P3], [), P3, (], [P3, (, 7], [(, 7, )], [7, ),  ]]

>> Noun Phrases are: 
[Head Tail P1, 8) P2, P3]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 218 =============================

Ready queue P0 (2)     


>> Tokens are: 
[Ready, queue, P0, (, 2, ),    ] 

>> PoS Tags are: 
[('Ready', 'ADJ'), ('queue', 'NOUN'), ('P0', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), (')', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Ready', 'amod'), ('queue', 'compound'), ('P0', 'ROOT'), ('(', 'punct'), ('2', 'appos'), (')', 'punct'), ('   ', 'appos')]

>> Bigrams: 
[[Ready, queue], [queue, P0], [P0, (], [(, 2], [2, )], [),    ]]

>> Trigrams: 
[[Ready, queue, P0], [queue, P0, (], [P0, (, 2], [(, 2, )], [2, ),    ]]

>> Noun Phrases are: 
[Ready queue P0]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 219 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 220 =============================

Non-Preemptive Priority        Gantt Chart (small values for priority means higher priority of a process)   


>> Tokens are: 
[Non, -, Preemptive, Priority,        , Gantt, Chart, (, small, values, priority, means, higher, priority, process, ),  ] 

>> PoS Tags are: 
[('Non', 'PROPN'), ('-', 'PROPN'), ('Preemptive', 'ADJ'), ('Priority', 'PROPN'), ('       ', 'SPACE'), ('Gantt', 'PROPN'), ('Chart', 'PROPN'), ('(', 'PUNCT'), ('small', 'ADJ'), ('values', 'NOUN'), ('priority', 'NOUN'), ('means', 'VERB'), ('higher', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Non', 'nmod'), ('-', 'compound'), ('Preemptive', 'amod'), ('Priority', 'dobj'), ('       ', 'compound'), ('Gantt', 'compound'), ('Chart', 'nsubj'), ('(', 'punct'), ('small', 'amod'), ('values', 'appos'), ('priority', 'pobj'), ('means', 'ROOT'), ('higher', 'amod'), ('priority', 'dobj'), ('process', 'pobj'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Non, -], [-, Preemptive], [Preemptive, Priority], [Priority,        ], [       , Gantt], [Gantt, Chart], [Chart, (], [(, small], [small, values], [values, priority], [priority, means], [means, higher], [higher, priority], [priority, process], [process, )], [),  ]]

>> Trigrams: 
[[Non, -, Preemptive], [-, Preemptive, Priority], [Preemptive, Priority,        ], [Priority,        , Gantt], [       , Gantt, Chart], [Gantt, Chart, (], [Chart, (, small], [(, small, values], [small, values, priority], [values, priority, means], [priority, means, higher], [means, higher, priority], [higher, priority, process], [priority, process, )], [process, ),  ]]

>> Noun Phrases are: 
[-Preemptive Priority, small values, priority, higher priority, a process]

>> Named Entities are: 
[('Non-Preemptive Priority', 'ORG')]


============================ Sentence 221 =============================

Avg. 


>> Tokens are: 
[Avg, .] 

>> PoS Tags are: 
[('Avg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Avg', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Avg, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Avg]

>> Named Entities are: 
[]


============================ Sentence 222 =============================

Turnaround Time:  13.25 ms 


>> Tokens are: 
[Turnaround, Time, :,  , 13.25, ms] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE'), ('13.25', 'NUM'), ('ms', 'NOUN')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('Time', 'ROOT'), (':', 'punct'), (' ', 'appos'), ('13.25', 'nummod'), ('ms', 'appos')]

>> Bigrams: 
[[Turnaround, Time], [Time, :], [:,  ], [ , 13.25], [13.25, ms]]

>> Trigrams: 
[[Turnaround, Time, :], [Time, :,  ], [:,  , 13.25], [ , 13.25, ms]]

>> Noun Phrases are: 
[Turnaround Time, 13.25 ms]

>> Named Entities are: 
[('Turnaround Time', 'PERSON'), ('13.25', 'CARDINAL')]


============================ Sentence 223 =============================

Avg. 


>> Tokens are: 
[Avg, .] 

>> PoS Tags are: 
[('Avg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Avg', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Avg, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Avg]

>> Named Entities are: 
[('Avg', 'GPE')]


============================ Sentence 224 =============================

Waiting Time:         7.75 ms 	Process	Arrival Time (T0) 


>> Tokens are: 
[Waiting, Time, :,         , 7.75, ms, 	, Process, 	, Arrival, Time, (, T0, )] 

>> PoS Tags are: 
[('Waiting', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('        ', 'SPACE'), ('7.75', 'NUM'), ('ms', 'NOUN'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Waiting', 'compound'), ('Time', 'ROOT'), (':', 'punct'), ('        ', 'compound'), ('7.75', 'nummod'), ('ms', 'compound'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Arrival', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('T0', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Waiting, Time], [Time, :], [:,         ], [        , 7.75], [7.75, ms], [ms, 	], [	, Process], [Process, 	], [	, Arrival], [Arrival, Time], [Time, (], [(, T0], [T0, )]]

>> Trigrams: 
[[Waiting, Time, :], [Time, :,         ], [:,         , 7.75], [        , 7.75, ms], [7.75, ms, 	], [ms, 	, Process], [	, Process, 	], [Process, 	, Arrival], [	, Arrival, Time], [Arrival, Time, (], [Time, (, T0], [(, T0, )]]

>> Noun Phrases are: 
[Waiting Time,         7.75 ms 	Process	Arrival Time, (T0]

>> Named Entities are: 
[('7.75', 'CARDINAL')]


============================ Sentence 225 =============================

	Burst Time (ΔT) 


>> Tokens are: 
[	, Burst, Time, (, ΔT, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Burst', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Burst], [Burst, Time], [Time, (], [(, ΔT], [ΔT, )]]

>> Trigrams: 
[[	, Burst, Time], [Burst, Time, (], [Time, (, ΔT], [(, ΔT, )]]

>> Noun Phrases are: 
[	Burst Time, (ΔT]

>> Named Entities are: 
[]


============================ Sentence 226 =============================

	Priority 	P0	0 


>> Tokens are: 
[	, Priority, 	, P0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P0', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, Priority], [Priority, 	], [	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[	, Priority, 	], [Priority, 	, P0], [	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 227 =============================

	10	5 	P1	1	6	4 	P2	3	2	2 	P3	5	4	0  	Finish Time (T1)  	Turnaround Time 


>> Tokens are: 
[	, 10, 	, 5, 	, P1, 	, 1, 	, 6, 	, 4, 	, P2, 	, 3, 	, 2, 	, 2, 	, P3, 	, 5, 	, 4, 	, 0,  	, Finish, Time, (, T1, ),  	, Turnaround, Time] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('10', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' \t', 'SPACE'), ('Finish', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T1', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Turnaround', 'PROPN'), ('Time', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('10', 'nummod'), ('\t', 'compound'), ('5', 'nummod'), ('\t', 'nmod'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'appos'), ('P2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'compound'), ('2', 'appos'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'dobj'), ('5', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'conj'), ('0', 'punct'), (' \t', 'compound'), ('Finish', 'compound'), ('Time', 'conj'), ('(', 'punct'), ('T1', 'appos'), (')', 'punct'), (' \t', 'nummod'), ('Turnaround', 'compound'), ('Time', 'attr')]

>> Bigrams: 
[[	, 10], [10, 	], [	, 5], [5, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, 4], [4, 	], [	, P2], [P2, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 5], [5, 	], [	, 4], [4, 	], [	, 0], [0,  	], [ 	, Finish], [Finish, Time], [Time, (], [(, T1], [T1, )], [),  	], [ 	, Turnaround], [Turnaround, Time]]

>> Trigrams: 
[[	, 10, 	], [10, 	, 5], [	, 5, 	], [5, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, 4], [	, 4, 	], [4, 	, P2], [	, P2, 	], [P2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4, 	], [4, 	, 0], [	, 0,  	], [0,  	, Finish], [ 	, Finish, Time], [Finish, Time, (], [Time, (, T1], [(, T1, )], [T1, ),  	], [),  	, Turnaround], [ 	, Turnaround, Time]]

>> Noun Phrases are: 
[	10	5 	P1	1	6	4 	P2	3	2	2 	P3,  	Finish Time, (T1,  	Turnaround Time]

>> Named Entities are: 
[('Finish', 'NORP'), ('T1', 'CARDINAL'), ('Turnaround Time', 'PERSON')]


============================ Sentence 228 =============================

(TAT = T1 - T0)  	Waiting Time (WT = TAT - ΔT)  	10  	22  	16  	14  	10  	21  	13  	9  	0  	15  	11  	5   


>> Tokens are: 
[(, TAT, =, T1, -, T0, ),  	, Waiting, Time, (, WT, =, TAT, -, ΔT, ),  	, 10,  	, 22,  	, 16,  	, 14,  	, 10,  	, 21,  	, 13,  	, 9,  	, 0,  	, 15,  	, 11,  	, 5,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TAT', 'PROPN'), ('=', 'SYM'), ('T1', 'PROPN'), ('-', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('WT', 'PROPN'), ('=', 'SYM'), ('TAT', 'PROPN'), ('-', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('10', 'NUM'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('16', 'NUM'), (' \t', 'SPACE'), ('14', 'NUM'), (' \t', 'SPACE'), ('10', 'NUM'), (' \t', 'SPACE'), ('21', 'NUM'), (' \t', 'SPACE'), ('13', 'NUM'), (' \t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('0', 'NUM'), (' \t', 'SPACE'), ('15', 'NUM'), (' \t', 'SPACE'), ('11', 'NUM'), (' \t', 'SPACE'), ('5', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TAT', 'nmod'), ('=', 'punct'), ('T1', 'compound'), ('-', 'punct'), ('T0', 'ROOT'), (')', 'punct'), (' \t', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('WT', 'nmod'), ('=', 'punct'), ('TAT', 'compound'), ('-', 'punct'), ('ΔT', 'appos'), (')', 'punct'), (' \t', 'nmod'), ('10', 'nummod'), (' \t', 'nmod'), ('22', 'nummod'), (' \t', 'nmod'), ('16', 'nummod'), (' \t', 'nmod'), ('14', 'nummod'), (' \t', 'nmod'), ('10', 'nummod'), (' \t', 'nmod'), ('21', 'nummod'), (' \t', 'nmod'), ('13', 'nummod'), (' \t', 'nmod'), ('9', 'nummod'), (' \t', 'appos'), ('0', 'appos'), (' \t', 'nmod'), ('15', 'nummod'), (' \t', 'nmod'), ('11', 'nummod'), (' \t', 'compound'), ('5', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[(, TAT], [TAT, =], [=, T1], [T1, -], [-, T0], [T0, )], [),  	], [ 	, Waiting], [Waiting, Time], [Time, (], [(, WT], [WT, =], [=, TAT], [TAT, -], [-, ΔT], [ΔT, )], [),  	], [ 	, 10], [10,  	], [ 	, 22], [22,  	], [ 	, 16], [16,  	], [ 	, 14], [14,  	], [ 	, 10], [10,  	], [ 	, 21], [21,  	], [ 	, 13], [13,  	], [ 	, 9], [9,  	], [ 	, 0], [0,  	], [ 	, 15], [15,  	], [ 	, 11], [11,  	], [ 	, 5], [5,  ]]

>> Trigrams: 
[[(, TAT, =], [TAT, =, T1], [=, T1, -], [T1, -, T0], [-, T0, )], [T0, ),  	], [),  	, Waiting], [ 	, Waiting, Time], [Waiting, Time, (], [Time, (, WT], [(, WT, =], [WT, =, TAT], [=, TAT, -], [TAT, -, ΔT], [-, ΔT, )], [ΔT, ),  	], [),  	, 10], [ 	, 10,  	], [10,  	, 22], [ 	, 22,  	], [22,  	, 16], [ 	, 16,  	], [16,  	, 14], [ 	, 14,  	], [14,  	, 10], [ 	, 10,  	], [10,  	, 21], [ 	, 21,  	], [21,  	, 13], [ 	, 13,  	], [13,  	, 9], [ 	, 9,  	], [9,  	, 0], [ 	, 0,  	], [0,  	, 15], [ 	, 15,  	], [15,  	, 11], [ 	, 11,  	], [11,  	, 5], [ 	, 5,  ]]

>> Noun Phrases are: 
[(TAT = T1 - T0,  	Waiting Time, (WT = TAT - ΔT]

>> Named Entities are: 
[('TAT', 'ORG'), ('T1', 'CARDINAL'), ('Waiting Time', 'PERSON'), ('TAT - ΔT', 'ORG'), ('10', 'CARDINAL'), ('22', 'CARDINAL'), ('16', 'CARDINAL'), ('14', 'CARDINAL'), ('10', 'CARDINAL'), ('21', 'CARDINAL'), ('13', 'CARDINAL'), ('9', 'CARDINAL'), ('0', 'CARDINAL'), ('15', 'CARDINAL'), ('11', 'CARDINAL'), ('5', 'CARDINAL')]


============================ Sentence 229 =============================

P0 P1 P2 P3 0 10 14 16 22     


>> Tokens are: 
[P0, P1, P2, P3, 0, 10, 14, 16, 22,    ] 

>> PoS Tags are: 
[('P0', 'PROPN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('P3', 'PROPN'), ('0', 'NUM'), ('10', 'NUM'), ('14', 'NUM'), ('16', 'NUM'), ('22', 'NUM'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('P0', 'compound'), ('P1', 'compound'), ('P2', 'nsubj'), ('P3', 'ROOT'), ('0', 'nummod'), ('10', 'compound'), ('14', 'quantmod'), ('16', 'quantmod'), ('22', 'compound'), ('   ', 'punct')]

>> Bigrams: 
[[P0, P1], [P1, P2], [P2, P3], [P3, 0], [0, 10], [10, 14], [14, 16], [16, 22], [22,    ]]

>> Trigrams: 
[[P0, P1, P2], [P1, P2, P3], [P2, P3, 0], [P3, 0, 10], [0, 10, 14], [10, 14, 16], [14, 16, 22], [16, 22,    ]]

>> Noun Phrases are: 
[P0 P1 P2]

>> Named Entities are: 
[('P0 P1 P2 P3', 'PRODUCT')]


============================ Sentence 230 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 231 =============================

Non-Preemptive Priority Advantages Priority is considered so critical processes can get even better response time. 


>> Tokens are: 
[Non, -, Preemptive, Priority, Advantages, Priority, considered, critical, processes, better, response, time, .] 

>> PoS Tags are: 
[('Non', 'PROPN'), ('-', 'PROPN'), ('Preemptive', 'ADJ'), ('Priority', 'PROPN'), ('Advantages', 'PROPN'), ('Priority', 'PROPN'), ('considered', 'VERB'), ('critical', 'ADJ'), ('processes', 'NOUN'), ('better', 'ADJ'), ('response', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Non', 'compound'), ('-', 'compound'), ('Preemptive', 'compound'), ('Priority', 'compound'), ('Advantages', 'compound'), ('Priority', 'nsubjpass'), ('considered', 'ROOT'), ('critical', 'amod'), ('processes', 'nsubj'), ('better', 'amod'), ('response', 'compound'), ('time', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Non, -], [-, Preemptive], [Preemptive, Priority], [Priority, Advantages], [Advantages, Priority], [Priority, considered], [considered, critical], [critical, processes], [processes, better], [better, response], [response, time], [time, .]]

>> Trigrams: 
[[Non, -, Preemptive], [-, Preemptive, Priority], [Preemptive, Priority, Advantages], [Priority, Advantages, Priority], [Advantages, Priority, considered], [Priority, considered, critical], [considered, critical, processes], [critical, processes, better], [processes, better, response], [better, response, time], [response, time, .]]

>> Noun Phrases are: 
[Non-Preemptive Priority Advantages Priority, so critical processes, even better response time]

>> Named Entities are: 
[('Non-Preemptive Priority Advantages Priority', 'ORG')]


============================ Sentence 232 =============================

Disadvantages  Starvation is possible for low priority processes. 


>> Tokens are: 
[Disadvantages,  , Starvation, possible, low, priority, processes, .] 

>> PoS Tags are: 
[('Disadvantages', 'NOUN'), (' ', 'SPACE'), ('Starvation', 'PROPN'), ('possible', 'ADJ'), ('low', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Disadvantages', 'nmod'), (' ', 'nummod'), ('Starvation', 'nsubj'), ('possible', 'acomp'), ('low', 'amod'), ('priority', 'compound'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Disadvantages,  ], [ , Starvation], [Starvation, possible], [possible, low], [low, priority], [priority, processes], [processes, .]]

>> Trigrams: 
[[Disadvantages,  , Starvation], [ , Starvation, possible], [Starvation, possible, low], [possible, low, priority], [low, priority, processes], [priority, processes, .]]

>> Noun Phrases are: 
[Disadvantages  Starvation, low priority processes]

>> Named Entities are: 
[]


============================ Sentence 233 =============================

It can be overcome by using technique called ‘Aging’. 


>> Tokens are: 
[overcome, technique, called, ‘, Aging, ’, .] 

>> PoS Tags are: 
[('overcome', 'VERB'), ('technique', 'NOUN'), ('called', 'VERB'), ('‘', 'PUNCT'), ('Aging', 'NOUN'), ('’', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('overcome', 'ROOT'), ('technique', 'dobj'), ('called', 'acl'), ('‘', 'punct'), ('Aging', 'oprd'), ('’', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[overcome, technique], [technique, called], [called, ‘], [‘, Aging], [Aging, ’], [’, .]]

>> Trigrams: 
[[overcome, technique, called], [technique, called, ‘], [called, ‘, Aging], [‘, Aging, ’], [Aging, ’, .]]

>> Noun Phrases are: 
[It, technique, ‘Aging]

>> Named Entities are: 
[]


============================ Sentence 234 =============================

Aging: gradually increases the priority of processes that wait in the system for a long time. 


>> Tokens are: 
[Aging, :, gradually, increases, priority, processes, wait, system, long, time, .] 

>> PoS Tags are: 
[('Aging', 'NOUN'), (':', 'PUNCT'), ('gradually', 'ADV'), ('increases', 'VERB'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('wait', 'VERB'), ('system', 'NOUN'), ('long', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Aging', 'nsubj'), (':', 'punct'), ('gradually', 'advmod'), ('increases', 'ROOT'), ('priority', 'dobj'), ('processes', 'pobj'), ('wait', 'relcl'), ('system', 'pobj'), ('long', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Aging, :], [:, gradually], [gradually, increases], [increases, priority], [priority, processes], [processes, wait], [wait, system], [system, long], [long, time], [time, .]]

>> Trigrams: 
[[Aging, :, gradually], [:, gradually, increases], [gradually, increases, priority], [increases, priority, processes], [priority, processes, wait], [processes, wait, system], [wait, system, long], [system, long, time], [long, time, .]]

>> Noun Phrases are: 
[Aging, the priority, processes, the system, a long time]

>> Named Entities are: 
[]


============================ Sentence 235 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 236 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 237 =============================

Priority  (Preemptive Priority) Section – 4.5.2      Preemptive Priority Selection criteria: The process, that has highest priority, is served first. 


>> Tokens are: 
[Priority,  , (, Preemptive, Priority, ), Section, –, 4.5.2,      , Preemptive, Priority, Selection, criteria, :, process, ,, highest, priority, ,, served, .] 

>> PoS Tags are: 
[('Priority', 'PROPN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('Preemptive', 'PROPN'), ('Priority', 'PROPN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('4.5.2', 'NUM'), ('     ', 'SPACE'), ('Preemptive', 'PROPN'), ('Priority', 'PROPN'), ('Selection', 'PROPN'), ('criteria', 'NOUN'), (':', 'PUNCT'), ('process', 'NOUN'), (',', 'PUNCT'), ('highest', 'ADJ'), ('priority', 'NOUN'), (',', 'PUNCT'), ('served', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Priority', 'nmod'), (' ', 'nummod'), ('(', 'punct'), ('Preemptive', 'nmod'), ('Priority', 'nmod'), (')', 'punct'), ('Section', 'dep'), ('–', 'punct'), ('4.5.2', 'nummod'), ('     ', 'compound'), ('Preemptive', 'compound'), ('Priority', 'compound'), ('Selection', 'compound'), ('criteria', 'appos'), (':', 'punct'), ('process', 'nsubjpass'), (',', 'punct'), ('highest', 'amod'), ('priority', 'dobj'), (',', 'punct'), ('served', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Priority,  ], [ , (], [(, Preemptive], [Preemptive, Priority], [Priority, )], [), Section], [Section, –], [–, 4.5.2], [4.5.2,      ], [     , Preemptive], [Preemptive, Priority], [Priority, Selection], [Selection, criteria], [criteria, :], [:, process], [process, ,], [,, highest], [highest, priority], [priority, ,], [,, served], [served, .]]

>> Trigrams: 
[[Priority,  , (], [ , (, Preemptive], [(, Preemptive, Priority], [Preemptive, Priority, )], [Priority, ), Section], [), Section, –], [Section, –, 4.5.2], [–, 4.5.2,      ], [4.5.2,      , Preemptive], [     , Preemptive, Priority], [Preemptive, Priority, Selection], [Priority, Selection, criteria], [Selection, criteria, :], [criteria, :, process], [:, process, ,], [process, ,, highest], [,, highest, priority], [highest, priority, ,], [priority, ,, served], [,, served, .]]

>> Noun Phrases are: 
[4.5.2      Preemptive Priority Selection criteria, The process, highest priority]

>> Named Entities are: 
[('4.5.2', 'CARDINAL'), ('first', 'ORDINAL')]


============================ Sentence 238 =============================

    Decision Mode: Preemptive: When a new process arrives, its priority is compared with current process priority. 


>> Tokens are: 
[    , Decision, Mode, :, Preemptive, :, new, process, arrives, ,, priority, compared, current, process, priority, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Decision', 'NOUN'), ('Mode', 'PROPN'), (':', 'PUNCT'), ('Preemptive', 'ADJ'), (':', 'PUNCT'), ('new', 'ADJ'), ('process', 'NOUN'), ('arrives', 'VERB'), (',', 'PUNCT'), ('priority', 'NOUN'), ('compared', 'VERB'), ('current', 'ADJ'), ('process', 'NOUN'), ('priority', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Decision', 'compound'), ('Mode', 'nsubjpass'), (':', 'punct'), ('Preemptive', 'appos'), (':', 'punct'), ('new', 'amod'), ('process', 'nsubj'), ('arrives', 'advcl'), (',', 'punct'), ('priority', 'nsubjpass'), ('compared', 'ROOT'), ('current', 'amod'), ('process', 'compound'), ('priority', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[    , Decision], [Decision, Mode], [Mode, :], [:, Preemptive], [Preemptive, :], [:, new], [new, process], [process, arrives], [arrives, ,], [,, priority], [priority, compared], [compared, current], [current, process], [process, priority], [priority, .]]

>> Trigrams: 
[[    , Decision, Mode], [Decision, Mode, :], [Mode, :, Preemptive], [:, Preemptive, :], [Preemptive, :, new], [:, new, process], [new, process, arrives], [process, arrives, ,], [arrives, ,, priority], [,, priority, compared], [priority, compared, current], [compared, current, process], [current, process, priority], [process, priority, .]]

>> Noun Phrases are: 
[    Decision Mode, a new process, its priority, current process priority]

>> Named Entities are: 
[]


============================ Sentence 239 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 240 =============================

If the new process has higher priority than the current, the current process is suspended and new job is started. 


>> Tokens are: 
[new, process, higher, priority, current, ,, current, process, suspended, new, job, started, .] 

>> PoS Tags are: 
[('new', 'ADJ'), ('process', 'NOUN'), ('higher', 'ADJ'), ('priority', 'NOUN'), ('current', 'NOUN'), (',', 'PUNCT'), ('current', 'ADJ'), ('process', 'NOUN'), ('suspended', 'VERB'), ('new', 'ADJ'), ('job', 'NOUN'), ('started', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('new', 'amod'), ('process', 'nsubj'), ('higher', 'amod'), ('priority', 'dobj'), ('current', 'pobj'), (',', 'punct'), ('current', 'amod'), ('process', 'nsubjpass'), ('suspended', 'ROOT'), ('new', 'amod'), ('job', 'nsubjpass'), ('started', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[new, process], [process, higher], [higher, priority], [priority, current], [current, ,], [,, current], [current, process], [process, suspended], [suspended, new], [new, job], [job, started], [started, .]]

>> Trigrams: 
[[new, process, higher], [process, higher, priority], [higher, priority, current], [priority, current, ,], [current, ,, current], [,, current, process], [current, process, suspended], [process, suspended, new], [suspended, new, job], [new, job, started], [job, started, .]]

>> Noun Phrases are: 
[the new process, higher priority, the current, the current process, new job]

>> Named Entities are: 
[]


============================ Sentence 241 =============================

Implementation: 


>> Tokens are: 
[Implementation, :] 

>> PoS Tags are: 
[('Implementation', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Implementation', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Implementation, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Implementation]

>> Named Entities are: 
[]


============================ Sentence 242 =============================

This strategy can also be implemented by using sorted FIFO queue. 


>> Tokens are: 
[strategy, implemented, sorted, FIFO, queue, .] 

>> PoS Tags are: 
[('strategy', 'NOUN'), ('implemented', 'VERB'), ('sorted', 'ADJ'), ('FIFO', 'PROPN'), ('queue', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('strategy', 'nsubjpass'), ('implemented', 'ROOT'), ('sorted', 'amod'), ('FIFO', 'compound'), ('queue', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[strategy, implemented], [implemented, sorted], [sorted, FIFO], [FIFO, queue], [queue, .]]

>> Trigrams: 
[[strategy, implemented, sorted], [implemented, sorted, FIFO], [sorted, FIFO, queue], [FIFO, queue, .]]

>> Noun Phrases are: 
[This strategy, sorted FIFO queue]

>> Named Entities are: 
[('FIFO', 'ORG')]


============================ Sentence 243 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 244 =============================

All processes in a queue are sorted based on their priority with highest priority process at front end. 


>> Tokens are: 
[processes, queue, sorted, based, priority, highest, priority, process, end, .] 

>> PoS Tags are: 
[('processes', 'NOUN'), ('queue', 'NOUN'), ('sorted', 'VERB'), ('based', 'VERB'), ('priority', 'NOUN'), ('highest', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('end', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('processes', 'nsubjpass'), ('queue', 'pobj'), ('sorted', 'ROOT'), ('based', 'prep'), ('priority', 'pobj'), ('highest', 'amod'), ('priority', 'compound'), ('process', 'pobj'), ('end', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[processes, queue], [queue, sorted], [sorted, based], [based, priority], [priority, highest], [highest, priority], [priority, process], [process, end], [end, .]]

>> Trigrams: 
[[processes, queue, sorted], [queue, sorted, based], [sorted, based, priority], [based, priority, highest], [priority, highest, priority], [highest, priority, process], [priority, process, end], [process, end, .]]

>> Noun Phrases are: 
[All processes, a queue, their priority, highest priority process, front end]

>> Named Entities are: 
[]


============================ Sentence 245 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 246 =============================

When CPU becomes free, a process from the first position in a queue is selected to run. 


>> Tokens are: 
[CPU, free, ,, process, position, queue, selected, run, .] 

>> PoS Tags are: 
[('CPU', 'NOUN'), ('free', 'ADJ'), (',', 'PUNCT'), ('process', 'NOUN'), ('position', 'NOUN'), ('queue', 'NOUN'), ('selected', 'VERB'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CPU', 'nsubj'), ('free', 'acomp'), (',', 'punct'), ('process', 'nsubjpass'), ('position', 'pobj'), ('queue', 'pobj'), ('selected', 'ROOT'), ('run', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CPU, free], [free, ,], [,, process], [process, position], [position, queue], [queue, selected], [selected, run], [run, .]]

>> Trigrams: 
[[CPU, free, ,], [free, ,, process], [,, process, position], [process, position, queue], [position, queue, selected], [queue, selected, run], [selected, run, .]]

>> Noun Phrases are: 
[CPU, a process, the first position, a queue]

>> Named Entities are: 
[('first', 'ORDINAL')]


============================ Sentence 247 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 248 =============================

Head Tail P1 (5) P2 (4) P3 (8)  Ready queue P0 (7)     


>> Tokens are: 
[Head, Tail, P1, (, 5, ), P2, (, 4, ), P3, (, 8),  , Ready, queue, P0, (, 7, ),    ] 

>> PoS Tags are: 
[('Head', 'PROPN'), ('Tail', 'PROPN'), ('P1', 'PROPN'), ('(', 'PUNCT'), ('5', 'NUM'), (')', 'PUNCT'), ('P2', 'PROPN'), ('(', 'PUNCT'), ('4', 'NUM'), (')', 'PUNCT'), ('P3', 'PROPN'), ('(', 'PUNCT'), ('8)', 'NUM'), (' ', 'SPACE'), ('Ready', 'PROPN'), ('queue', 'NOUN'), ('P0', 'PROPN'), ('(', 'PUNCT'), ('7', 'NUM'), (')', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Head', 'compound'), ('Tail', 'compound'), ('P1', 'ROOT'), ('(', 'punct'), ('5', 'appos'), (')', 'punct'), ('P2', 'appos'), ('(', 'punct'), ('4', 'appos'), (')', 'punct'), ('P3', 'appos'), ('(', 'punct'), ('8)', 'nmod'), (' ', 'compound'), ('Ready', 'amod'), ('queue', 'compound'), ('P0', 'appos'), ('(', 'punct'), ('7', 'appos'), (')', 'punct'), ('   ', 'punct')]

>> Bigrams: 
[[Head, Tail], [Tail, P1], [P1, (], [(, 5], [5, )], [), P2], [P2, (], [(, 4], [4, )], [), P3], [P3, (], [(, 8)], [8),  ], [ , Ready], [Ready, queue], [queue, P0], [P0, (], [(, 7], [7, )], [),    ]]

>> Trigrams: 
[[Head, Tail, P1], [Tail, P1, (], [P1, (, 5], [(, 5, )], [5, ), P2], [), P2, (], [P2, (, 4], [(, 4, )], [4, ), P3], [), P3, (], [P3, (, 8)], [(, 8),  ], [8),  , Ready], [ , Ready, queue], [Ready, queue, P0], [queue, P0, (], [P0, (, 7], [(, 7, )], [7, ),    ]]

>> Noun Phrases are: 
[Head Tail P1, P2, P3, 8)  Ready queue P0]

>> Named Entities are: 
[('5', 'CARDINAL'), ('4', 'CARDINAL'), ('7', 'CARDINAL')]


============================ Sentence 249 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 250 =============================

Preemptive Priority        Gantt Chart  small values means higher priority Avg. 


>> Tokens are: 
[Preemptive, Priority,        , Gantt, Chart,  , small, values, means, higher, priority, Avg, .] 

>> PoS Tags are: 
[('Preemptive', 'PROPN'), ('Priority', 'PROPN'), ('       ', 'SPACE'), ('Gantt', 'PROPN'), ('Chart', 'PROPN'), (' ', 'SPACE'), ('small', 'ADJ'), ('values', 'NOUN'), ('means', 'VERB'), ('higher', 'ADJ'), ('priority', 'NOUN'), ('Avg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Preemptive', 'compound'), ('Priority', 'nmod'), ('       ', 'nummod'), ('Gantt', 'compound'), ('Chart', 'nmod'), (' ', 'appos'), ('small', 'amod'), ('values', 'nsubj'), ('means', 'ROOT'), ('higher', 'amod'), ('priority', 'compound'), ('Avg', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Preemptive, Priority], [Priority,        ], [       , Gantt], [Gantt, Chart], [Chart,  ], [ , small], [small, values], [values, means], [means, higher], [higher, priority], [priority, Avg], [Avg, .]]

>> Trigrams: 
[[Preemptive, Priority,        ], [Priority,        , Gantt], [       , Gantt, Chart], [Gantt, Chart,  ], [Chart,  , small], [ , small, values], [small, values, means], [values, means, higher], [means, higher, priority], [higher, priority, Avg], [priority, Avg, .]]

>> Noun Phrases are: 
[Preemptive Priority        Gantt Chart  small values, higher priority Avg]

>> Named Entities are: 
[('Avg', 'PERSON')]


============================ Sentence 251 =============================

Turnaround Time:  10 ms Avg. 


>> Tokens are: 
[Turnaround, Time, :,  , 10, ms, Avg, .] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE'), ('10', 'NUM'), ('ms', 'NOUN'), ('Avg', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('Time', 'ROOT'), (':', 'punct'), (' ', 'appos'), ('10', 'nummod'), ('ms', 'compound'), ('Avg', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Turnaround, Time], [Time, :], [:,  ], [ , 10], [10, ms], [ms, Avg], [Avg, .]]

>> Trigrams: 
[[Turnaround, Time, :], [Time, :,  ], [:,  , 10], [ , 10, ms], [10, ms, Avg], [ms, Avg, .]]

>> Noun Phrases are: 
[Turnaround Time, 10 ms Avg]

>> Named Entities are: 
[('Turnaround Time', 'PERSON'), ('10', 'CARDINAL')]


============================ Sentence 252 =============================

Waiting Time:         4.5 ms 	Process	Arrival Time (T0) 


>> Tokens are: 
[Waiting, Time, :,         , 4.5, ms, 	, Process, 	, Arrival, Time, (, T0, )] 

>> PoS Tags are: 
[('Waiting', 'PROPN'), ('Time', 'PROPN'), (':', 'PUNCT'), ('        ', 'SPACE'), ('4.5', 'NUM'), ('ms', 'NOUN'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Waiting', 'compound'), ('Time', 'ROOT'), (':', 'punct'), ('        ', 'compound'), ('4.5', 'nummod'), ('ms', 'compound'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Arrival', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('T0', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Waiting, Time], [Time, :], [:,         ], [        , 4.5], [4.5, ms], [ms, 	], [	, Process], [Process, 	], [	, Arrival], [Arrival, Time], [Time, (], [(, T0], [T0, )]]

>> Trigrams: 
[[Waiting, Time, :], [Time, :,         ], [:,         , 4.5], [        , 4.5, ms], [4.5, ms, 	], [ms, 	, Process], [	, Process, 	], [Process, 	, Arrival], [	, Arrival, Time], [Arrival, Time, (], [Time, (, T0], [(, T0, )]]

>> Noun Phrases are: 
[Waiting Time,         4.5 ms 	Process	Arrival Time, (T0]

>> Named Entities are: 
[]


============================ Sentence 253 =============================

	Burst Time (ΔT) 


>> Tokens are: 
[	, Burst, Time, (, ΔT, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Burst', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ΔT', 'appos'), (')', 'punct')]

>> Bigrams: 
[[	, Burst], [Burst, Time], [Time, (], [(, ΔT], [ΔT, )]]

>> Trigrams: 
[[	, Burst, Time], [Burst, Time, (], [Time, (, ΔT], [(, ΔT, )]]

>> Noun Phrases are: 
[	Burst Time, (ΔT]

>> Named Entities are: 
[]


============================ Sentence 254 =============================

	Priority 	P0	0 


>> Tokens are: 
[	, Priority, 	, P0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P0', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, Priority], [Priority, 	], [	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[	, Priority, 	], [Priority, 	, P0], [	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 255 =============================

	10	5 	P1	1	6	4 	P2	3	2	2 	P3	5	4	0  	Finish Time (T1)  	Turnaround Time 


>> Tokens are: 
[	, 10, 	, 5, 	, P1, 	, 1, 	, 6, 	, 4, 	, P2, 	, 3, 	, 2, 	, 2, 	, P3, 	, 5, 	, 4, 	, 0,  	, Finish, Time, (, T1, ),  	, Turnaround, Time] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('10', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' \t', 'SPACE'), ('Finish', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('T1', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Turnaround', 'PROPN'), ('Time', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('10', 'nummod'), ('\t', 'compound'), ('5', 'nummod'), ('\t', 'nmod'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'appos'), ('P2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'compound'), ('2', 'appos'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'dobj'), ('5', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'conj'), ('0', 'punct'), (' \t', 'compound'), ('Finish', 'compound'), ('Time', 'conj'), ('(', 'punct'), ('T1', 'appos'), (')', 'punct'), (' \t', 'nummod'), ('Turnaround', 'compound'), ('Time', 'attr')]

>> Bigrams: 
[[	, 10], [10, 	], [	, 5], [5, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, 4], [4, 	], [	, P2], [P2, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 5], [5, 	], [	, 4], [4, 	], [	, 0], [0,  	], [ 	, Finish], [Finish, Time], [Time, (], [(, T1], [T1, )], [),  	], [ 	, Turnaround], [Turnaround, Time]]

>> Trigrams: 
[[	, 10, 	], [10, 	, 5], [	, 5, 	], [5, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, 4], [	, 4, 	], [4, 	, P2], [	, P2, 	], [P2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4, 	], [4, 	, 0], [	, 0,  	], [0,  	, Finish], [ 	, Finish, Time], [Finish, Time, (], [Time, (, T1], [(, T1, )], [T1, ),  	], [),  	, Turnaround], [ 	, Turnaround, Time]]

>> Noun Phrases are: 
[	10	5 	P1	1	6	4 	P2	3	2	2 	P3,  	Finish Time, (T1,  	Turnaround Time]

>> Named Entities are: 
[('Finish', 'NORP'), ('T1', 'CARDINAL'), ('Turnaround Time', 'PERSON')]


============================ Sentence 256 =============================

(TAT = T1 - T0)  	Waiting Time (WT = TAT - ΔT)  	22  	13  	5  	9  	22  	12  	2  	4  	12  	6  	0  	0   


>> Tokens are: 
[(, TAT, =, T1, -, T0, ),  	, Waiting, Time, (, WT, =, TAT, -, ΔT, ),  	, 22,  	, 13,  	, 5,  	, 9,  	, 22,  	, 12,  	, 2,  	, 4,  	, 12,  	, 6,  	, 0,  	, 0,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('TAT', 'PROPN'), ('=', 'SYM'), ('T1', 'PROPN'), ('-', 'PUNCT'), ('T0', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Waiting', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('WT', 'PROPN'), ('=', 'SYM'), ('TAT', 'PROPN'), ('-', 'PUNCT'), ('ΔT', 'PROPN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('13', 'NUM'), (' \t', 'SPACE'), ('5', 'NUM'), (' \t', 'SPACE'), ('9', 'NUM'), (' \t', 'SPACE'), ('22', 'NUM'), (' \t', 'SPACE'), ('12', 'NUM'), (' \t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('12', 'NUM'), (' \t', 'SPACE'), ('6', 'NUM'), (' \t', 'SPACE'), ('0', 'NUM'), (' \t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('TAT', 'nmod'), ('=', 'punct'), ('T1', 'compound'), ('-', 'punct'), ('T0', 'ROOT'), (')', 'punct'), (' \t', 'compound'), ('Waiting', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('WT', 'nmod'), ('=', 'punct'), ('TAT', 'compound'), ('-', 'punct'), ('ΔT', 'appos'), (')', 'punct'), (' \t', 'nmod'), ('22', 'nummod'), (' \t', 'nmod'), ('13', 'nummod'), (' \t', 'nmod'), ('5', 'nummod'), (' \t', 'nmod'), ('9', 'nummod'), (' \t', 'nmod'), ('22', 'nummod'), (' \t', 'nmod'), ('12', 'nummod'), (' \t', 'nmod'), ('2', 'nummod'), (' \t', 'nmod'), ('4', 'nummod'), (' \t', 'nmod'), ('12', 'nummod'), (' \t', 'nmod'), ('6', 'nummod'), (' \t', 'appos'), ('0', 'punct'), (' \t', 'appos'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[(, TAT], [TAT, =], [=, T1], [T1, -], [-, T0], [T0, )], [),  	], [ 	, Waiting], [Waiting, Time], [Time, (], [(, WT], [WT, =], [=, TAT], [TAT, -], [-, ΔT], [ΔT, )], [),  	], [ 	, 22], [22,  	], [ 	, 13], [13,  	], [ 	, 5], [5,  	], [ 	, 9], [9,  	], [ 	, 22], [22,  	], [ 	, 12], [12,  	], [ 	, 2], [2,  	], [ 	, 4], [4,  	], [ 	, 12], [12,  	], [ 	, 6], [6,  	], [ 	, 0], [0,  	], [ 	, 0], [0,  ]]

>> Trigrams: 
[[(, TAT, =], [TAT, =, T1], [=, T1, -], [T1, -, T0], [-, T0, )], [T0, ),  	], [),  	, Waiting], [ 	, Waiting, Time], [Waiting, Time, (], [Time, (, WT], [(, WT, =], [WT, =, TAT], [=, TAT, -], [TAT, -, ΔT], [-, ΔT, )], [ΔT, ),  	], [),  	, 22], [ 	, 22,  	], [22,  	, 13], [ 	, 13,  	], [13,  	, 5], [ 	, 5,  	], [5,  	, 9], [ 	, 9,  	], [9,  	, 22], [ 	, 22,  	], [22,  	, 12], [ 	, 12,  	], [12,  	, 2], [ 	, 2,  	], [2,  	, 4], [ 	, 4,  	], [4,  	, 12], [ 	, 12,  	], [12,  	, 6], [ 	, 6,  	], [6,  	, 0], [ 	, 0,  	], [0,  	, 0], [ 	, 0,  ]]

>> Noun Phrases are: 
[(TAT = T1 - T0,  	Waiting Time, (WT = TAT - ΔT]

>> Named Entities are: 
[('TAT', 'ORG'), ('T1', 'CARDINAL'), ('Waiting Time', 'PERSON'), ('TAT - ΔT', 'ORG'), ('22', 'CARDINAL'), ('13', 'CARDINAL'), ('5', 'CARDINAL'), ('9', 'CARDINAL'), ('22', 'CARDINAL'), ('12', 'CARDINAL'), ('2', 'CARDINAL'), ('4', 'CARDINAL'), ('12', 'CARDINAL'), ('6', 'CARDINAL'), ('0', 'CARDINAL'), ('0', 'CARDINAL')]


============================ Sentence 257 =============================

P0 P3 0 5 9 13 22 P0 P1 P2 P1 3 1 	Process	Priority 	P1	4 	P0	5  	Process	Priority 	P0	5 	P2	2 	P1	4  	Process	Priority 	P0	5 	P1	4 	P3	0  	Process	Priority 	P0	5 	P1	4  	Process	Priority 	P0	5     Prof. 


>> Tokens are: 
[P0, P3, 0, 5, 9, 13, 22, P0, P1, P2, P1, 3, 1, 	, Process, 	, Priority, 	, P1, 	, 4, 	, P0, 	, 5,  	, Process, 	, Priority, 	, P0, 	, 5, 	, P2, 	, 2, 	, P1, 	, 4,  	, Process, 	, Priority, 	, P0, 	, 5, 	, P1, 	, 4, 	, P3, 	, 0,  	, Process, 	, Priority, 	, P0, 	, 5, 	, P1, 	, 4,  	, Process, 	, Priority, 	, P0, 	, 5,     , Prof.] 

>> PoS Tags are: 
[('P0', 'PROPN'), ('P3', 'PROPN'), ('0', 'NUM'), ('5', 'NUM'), ('9', 'NUM'), ('13', 'NUM'), ('22', 'NUM'), ('P0', 'PROPN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('P1', 'PROPN'), ('3', 'NUM'), ('1', 'NUM'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'PROPN'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Priority', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('    ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('P0', 'nsubj'), ('P3', 'ROOT'), ('0', 'nummod'), ('5', 'quantmod'), ('9', 'nummod'), ('13', 'nummod'), ('22', 'advmod'), ('P0', 'compound'), ('P1', 'compound'), ('P2', 'compound'), ('P1', 'npadvmod'), ('3', 'nummod'), ('1', 'nummod'), ('\t', 'compound'), ('Process', 'nmod'), ('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P1', 'nmod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('P0', 'nmod'), ('\t', 'nmod'), ('5', 'nummod'), (' \t', 'compound'), ('Process', 'nmod'), ('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P0', 'appos'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('P2', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('P1', 'nmod'), ('\t', 'conj'), ('4', 'nummod'), (' \t', 'compound'), ('Process', 'nmod'), ('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P0', 'appos'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'appos'), ('0', 'punct'), (' \t', 'compound'), ('Process', 'appos'), ('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P0', 'appos'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('4', 'nummod'), (' \t', 'compound'), ('Process', 'nmod'), ('\t', 'compound'), ('Priority', 'compound'), ('\t', 'compound'), ('P0', 'appos'), ('\t', 'npadvmod'), ('5', 'nummod'), ('    ', 'nummod'), ('Prof.', 'appos')]

>> Bigrams: 
[[P0, P3], [P3, 0], [0, 5], [5, 9], [9, 13], [13, 22], [22, P0], [P0, P1], [P1, P2], [P2, P1], [P1, 3], [3, 1], [1, 	], [	, Process], [Process, 	], [	, Priority], [Priority, 	], [	, P1], [P1, 	], [	, 4], [4, 	], [	, P0], [P0, 	], [	, 5], [5,  	], [ 	, Process], [Process, 	], [	, Priority], [Priority, 	], [	, P0], [P0, 	], [	, 5], [5, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, P1], [P1, 	], [	, 4], [4,  	], [ 	, Process], [Process, 	], [	, Priority], [Priority, 	], [	, P0], [P0, 	], [	, 5], [5, 	], [	, P1], [P1, 	], [	, 4], [4, 	], [	, P3], [P3, 	], [	, 0], [0,  	], [ 	, Process], [Process, 	], [	, Priority], [Priority, 	], [	, P0], [P0, 	], [	, 5], [5, 	], [	, P1], [P1, 	], [	, 4], [4,  	], [ 	, Process], [Process, 	], [	, Priority], [Priority, 	], [	, P0], [P0, 	], [	, 5], [5,     ], [    , Prof.]]

>> Trigrams: 
[[P0, P3, 0], [P3, 0, 5], [0, 5, 9], [5, 9, 13], [9, 13, 22], [13, 22, P0], [22, P0, P1], [P0, P1, P2], [P1, P2, P1], [P2, P1, 3], [P1, 3, 1], [3, 1, 	], [1, 	, Process], [	, Process, 	], [Process, 	, Priority], [	, Priority, 	], [Priority, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4, 	], [4, 	, P0], [	, P0, 	], [P0, 	, 5], [	, 5,  	], [5,  	, Process], [ 	, Process, 	], [Process, 	, Priority], [	, Priority, 	], [Priority, 	, P0], [	, P0, 	], [P0, 	, 5], [	, 5, 	], [5, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4,  	], [4,  	, Process], [ 	, Process, 	], [Process, 	, Priority], [	, Priority, 	], [Priority, 	, P0], [	, P0, 	], [P0, 	, 5], [	, 5, 	], [5, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4, 	], [4, 	, P3], [	, P3, 	], [P3, 	, 0], [	, 0,  	], [0,  	, Process], [ 	, Process, 	], [Process, 	, Priority], [	, Priority, 	], [Priority, 	, P0], [	, P0, 	], [P0, 	, 5], [	, 5, 	], [5, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4,  	], [4,  	, Process], [ 	, Process, 	], [Process, 	, Priority], [	, Priority, 	], [Priority, 	, P0], [	, P0, 	], [P0, 	, 5], [	, 5,     ], [5,     , Prof.]]

>> Noun Phrases are: 
[P0, 	Process	Priority 	P1	4 	P0	5  	Process	Priority 	P0,  	Process	Priority 	P0, P1	4 	P3,  	Process, 	Priority 	P0, 	Priority 	P0, Prof.]

>> Named Entities are: 
[('P0', 'CARDINAL'), ('P3', 'CARDINAL'), ('P1 P2 P1 3 1 \tProcess\tPriority \tP1\t4 \tP0\t5  \tProcess\tPriority \tP0\t5 \tP2\t2 \tP1\t4', 'PRODUCT'), ('5', 'CARDINAL')]


============================ Sentence 258 =============================

Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'nsubj'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 259 =============================

Preemptive Priority Advantages Priority is considered so critical processes can get even better response time. 


>> Tokens are: 
[Preemptive, Priority, Advantages, Priority, considered, critical, processes, better, response, time, .] 

>> PoS Tags are: 
[('Preemptive', 'PROPN'), ('Priority', 'PROPN'), ('Advantages', 'PROPN'), ('Priority', 'PROPN'), ('considered', 'VERB'), ('critical', 'ADJ'), ('processes', 'NOUN'), ('better', 'ADJ'), ('response', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Preemptive', 'compound'), ('Priority', 'compound'), ('Advantages', 'compound'), ('Priority', 'nsubjpass'), ('considered', 'ROOT'), ('critical', 'amod'), ('processes', 'nsubj'), ('better', 'amod'), ('response', 'compound'), ('time', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Preemptive, Priority], [Priority, Advantages], [Advantages, Priority], [Priority, considered], [considered, critical], [critical, processes], [processes, better], [better, response], [response, time], [time, .]]

>> Trigrams: 
[[Preemptive, Priority, Advantages], [Priority, Advantages, Priority], [Advantages, Priority, considered], [Priority, considered, critical], [considered, critical, processes], [critical, processes, better], [processes, better, response], [better, response, time], [response, time, .]]

>> Noun Phrases are: 
[Preemptive Priority Advantages Priority, so critical processes, even better response time]

>> Named Entities are: 
[('Preemptive Priority Advantages Priority', 'ORG')]


============================ Sentence 260 =============================

Disadvantages  Starvation is possible for low priority processes. 


>> Tokens are: 
[Disadvantages,  , Starvation, possible, low, priority, processes, .] 

>> PoS Tags are: 
[('Disadvantages', 'NOUN'), (' ', 'SPACE'), ('Starvation', 'PROPN'), ('possible', 'ADJ'), ('low', 'ADJ'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Disadvantages', 'nmod'), (' ', 'nummod'), ('Starvation', 'nsubj'), ('possible', 'acomp'), ('low', 'amod'), ('priority', 'compound'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Disadvantages,  ], [ , Starvation], [Starvation, possible], [possible, low], [low, priority], [priority, processes], [processes, .]]

>> Trigrams: 
[[Disadvantages,  , Starvation], [ , Starvation, possible], [Starvation, possible, low], [possible, low, priority], [low, priority, processes], [priority, processes, .]]

>> Noun Phrases are: 
[Disadvantages  Starvation, low priority processes]

>> Named Entities are: 
[]


============================ Sentence 261 =============================

It can be overcome by using technique called ‘Aging’. 


>> Tokens are: 
[overcome, technique, called, ‘, Aging, ’, .] 

>> PoS Tags are: 
[('overcome', 'VERB'), ('technique', 'NOUN'), ('called', 'VERB'), ('‘', 'PUNCT'), ('Aging', 'NOUN'), ('’', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('overcome', 'ROOT'), ('technique', 'dobj'), ('called', 'acl'), ('‘', 'punct'), ('Aging', 'oprd'), ('’', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[overcome, technique], [technique, called], [called, ‘], [‘, Aging], [Aging, ’], [’, .]]

>> Trigrams: 
[[overcome, technique, called], [technique, called, ‘], [called, ‘, Aging], [‘, Aging, ’], [Aging, ’, .]]

>> Noun Phrases are: 
[It, technique, ‘Aging]

>> Named Entities are: 
[]


============================ Sentence 262 =============================

Aging: gradually increases the priority of processes that wait in the system for a long time. 


>> Tokens are: 
[Aging, :, gradually, increases, priority, processes, wait, system, long, time, .] 

>> PoS Tags are: 
[('Aging', 'NOUN'), (':', 'PUNCT'), ('gradually', 'ADV'), ('increases', 'VERB'), ('priority', 'NOUN'), ('processes', 'NOUN'), ('wait', 'VERB'), ('system', 'NOUN'), ('long', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Aging', 'nsubj'), (':', 'punct'), ('gradually', 'advmod'), ('increases', 'ROOT'), ('priority', 'dobj'), ('processes', 'pobj'), ('wait', 'relcl'), ('system', 'pobj'), ('long', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Aging, :], [:, gradually], [gradually, increases], [increases, priority], [priority, processes], [processes, wait], [wait, system], [system, long], [long, time], [time, .]]

>> Trigrams: 
[[Aging, :, gradually], [:, gradually, increases], [gradually, increases, priority], [increases, priority, processes], [priority, processes, wait], [processes, wait, system], [wait, system, long], [system, long, time], [long, time, .]]

>> Noun Phrases are: 
[Aging, the priority, processes, the system, a long time]

>> Named Entities are: 
[]


============================ Sentence 263 =============================

Context switch overhead is there. 


>> Tokens are: 
[Context, switch, overhead, .] 

>> PoS Tags are: 
[('Context', 'PROPN'), ('switch', 'NOUN'), ('overhead', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Context', 'compound'), ('switch', 'nsubj'), ('overhead', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Context, switch], [switch, overhead], [overhead, .]]

>> Trigrams: 
[[Context, switch, overhead], [switch, overhead, .]]

>> Noun Phrases are: 
[Context switch]

>> Named Entities are: 
[]


============================ Sentence 264 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 265 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 266 =============================

Real Time Operating System Section – 5      Real Time Operating System 


>> Tokens are: 
[Real, Time, Operating, System, Section, –, 5,      , Real, Time, Operating, System] 

>> PoS Tags are: 
[('Real', 'PROPN'), ('Time', 'PROPN'), ('Operating', 'PROPN'), ('System', 'PROPN'), ('Section', 'NOUN'), ('–', 'PUNCT'), ('5', 'NUM'), ('     ', 'SPACE'), ('Real', 'PROPN'), ('Time', 'PROPN'), ('Operating', 'NOUN'), ('System', 'PROPN')] 

>> Dependency Tags are: 
[('Real', 'compound'), ('Time', 'compound'), ('Operating', 'compound'), ('System', 'compound'), ('Section', 'ROOT'), ('–', 'punct'), ('5', 'nummod'), ('     ', 'compound'), ('Real', 'compound'), ('Time', 'compound'), ('Operating', 'compound'), ('System', 'appos')]

>> Bigrams: 
[[Real, Time], [Time, Operating], [Operating, System], [System, Section], [Section, –], [–, 5], [5,      ], [     , Real], [Real, Time], [Time, Operating], [Operating, System]]

>> Trigrams: 
[[Real, Time, Operating], [Time, Operating, System], [Operating, System, Section], [System, Section, –], [Section, –, 5], [–, 5,      ], [5,      , Real], [     , Real, Time], [Real, Time, Operating], [Time, Operating, System]]

>> Noun Phrases are: 
[Real Time Operating System Section, 5      Real Time Operating System]

>> Named Entities are: 
[]


============================ Sentence 267 =============================

A real-time system is one in which time plays an essential role. 


>> Tokens are: 
[real, -, time, system, time, plays, essential, role, .] 

>> PoS Tags are: 
[('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('system', 'NOUN'), ('time', 'NOUN'), ('plays', 'VERB'), ('essential', 'ADJ'), ('role', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('real', 'amod'), ('-', 'punct'), ('time', 'compound'), ('system', 'nsubj'), ('time', 'nsubj'), ('plays', 'relcl'), ('essential', 'amod'), ('role', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[real, -], [-, time], [time, system], [system, time], [time, plays], [plays, essential], [essential, role], [role, .]]

>> Trigrams: 
[[real, -, time], [-, time, system], [time, system, time], [system, time, plays], [time, plays, essential], [plays, essential, role], [essential, role, .]]

>> Noun Phrases are: 
[A real-time system, which time, an essential role]

>> Named Entities are: 
[]


============================ Sentence 268 =============================

Real time computing may be defined as that type of computing in which the correctness of the system depends not only on the logical result of the computation but also on the time at which the results are produced. 


>> Tokens are: 
[Real, time, computing, defined, type, computing, correctness, system, depends, logical, result, computation, time, results, produced, .] 

>> PoS Tags are: 
[('Real', 'ADJ'), ('time', 'NOUN'), ('computing', 'NOUN'), ('defined', 'VERB'), ('type', 'NOUN'), ('computing', 'NOUN'), ('correctness', 'NOUN'), ('system', 'NOUN'), ('depends', 'VERB'), ('logical', 'ADJ'), ('result', 'NOUN'), ('computation', 'NOUN'), ('time', 'NOUN'), ('results', 'NOUN'), ('produced', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Real', 'amod'), ('time', 'compound'), ('computing', 'nsubjpass'), ('defined', 'ROOT'), ('type', 'pobj'), ('computing', 'pobj'), ('correctness', 'nsubj'), ('system', 'pobj'), ('depends', 'relcl'), ('logical', 'amod'), ('result', 'pobj'), ('computation', 'pobj'), ('time', 'pobj'), ('results', 'nsubjpass'), ('produced', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[Real, time], [time, computing], [computing, defined], [defined, type], [type, computing], [computing, correctness], [correctness, system], [system, depends], [depends, logical], [logical, result], [result, computation], [computation, time], [time, results], [results, produced], [produced, .]]

>> Trigrams: 
[[Real, time, computing], [time, computing, defined], [computing, defined, type], [defined, type, computing], [type, computing, correctness], [computing, correctness, system], [correctness, system, depends], [system, depends, logical], [depends, logical, result], [logical, result, computation], [result, computation, time], [computation, time, results], [time, results, produced], [results, produced, .]]

>> Noun Phrases are: 
[Real time computing, that type, computing, the correctness, the system, the logical result, the computation, the time, the results]

>> Named Entities are: 
[]


============================ Sentence 269 =============================

Some of the real-time systems are patient monitoring in a hospital intensive-care unit, the autopilot in an aircraft and robot control in an automated factory.   


>> Tokens are: 
[real, -, time, systems, patient, monitoring, hospital, intensive, -, care, unit, ,, autopilot, aircraft, robot, control, automated, factory, .,  ] 

>> PoS Tags are: 
[('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('systems', 'NOUN'), ('patient', 'ADJ'), ('monitoring', 'NOUN'), ('hospital', 'NOUN'), ('intensive', 'ADJ'), ('-', 'PUNCT'), ('care', 'NOUN'), ('unit', 'NOUN'), (',', 'PUNCT'), ('autopilot', 'NOUN'), ('aircraft', 'NOUN'), ('robot', 'NOUN'), ('control', 'NOUN'), ('automated', 'VERB'), ('factory', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('real', 'amod'), ('-', 'punct'), ('time', 'compound'), ('systems', 'pobj'), ('patient', 'amod'), ('monitoring', 'attr'), ('hospital', 'nmod'), ('intensive', 'amod'), ('-', 'punct'), ('care', 'compound'), ('unit', 'pobj'), (',', 'punct'), ('autopilot', 'npadvmod'), ('aircraft', 'nmod'), ('robot', 'conj'), ('control', 'pobj'), ('automated', 'amod'), ('factory', 'pobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[real, -], [-, time], [time, systems], [systems, patient], [patient, monitoring], [monitoring, hospital], [hospital, intensive], [intensive, -], [-, care], [care, unit], [unit, ,], [,, autopilot], [autopilot, aircraft], [aircraft, robot], [robot, control], [control, automated], [automated, factory], [factory, .], [.,  ]]

>> Trigrams: 
[[real, -, time], [-, time, systems], [time, systems, patient], [systems, patient, monitoring], [patient, monitoring, hospital], [monitoring, hospital, intensive], [hospital, intensive, -], [intensive, -, care], [-, care, unit], [care, unit, ,], [unit, ,, autopilot], [,, autopilot, aircraft], [autopilot, aircraft, robot], [aircraft, robot, control], [robot, control, automated], [control, automated, factory], [automated, factory, .], [factory, .,  ]]

>> Noun Phrases are: 
[the real-time systems, patient monitoring, a hospital intensive-care unit, an aircraft and robot control, an automated factory]

>> Named Entities are: 
[]


============================ Sentence 270 =============================

In all these cases, having the right answer but having it too late is often just as bad as not having it at all. 


>> Tokens are: 
[cases, ,, having, right, answer, having, late, bad, having, .] 

>> PoS Tags are: 
[('cases', 'NOUN'), (',', 'PUNCT'), ('having', 'VERB'), ('right', 'ADJ'), ('answer', 'NOUN'), ('having', 'VERB'), ('late', 'ADV'), ('bad', 'ADJ'), ('having', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('cases', 'pobj'), (',', 'punct'), ('having', 'csubj'), ('right', 'amod'), ('answer', 'dobj'), ('having', 'conj'), ('late', 'advmod'), ('bad', 'acomp'), ('having', 'pcomp'), ('.', 'punct')]

>> Bigrams: 
[[cases, ,], [,, having], [having, right], [right, answer], [answer, having], [having, late], [late, bad], [bad, having], [having, .]]

>> Trigrams: 
[[cases, ,, having], [,, having, right], [having, right, answer], [right, answer, having], [answer, having, late], [having, late, bad], [late, bad, having], [bad, having, .]]

>> Noun Phrases are: 
[all these cases, the right answer, it, it]

>> Named Entities are: 
[]


============================ Sentence 271 =============================

Real time task may be classified as hard and soft. 


>> Tokens are: 
[Real, time, task, classified, hard, soft, .] 

>> PoS Tags are: 
[('Real', 'ADJ'), ('time', 'NOUN'), ('task', 'NOUN'), ('classified', 'VERB'), ('hard', 'ADJ'), ('soft', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Real', 'amod'), ('time', 'compound'), ('task', 'nsubjpass'), ('classified', 'ROOT'), ('hard', 'amod'), ('soft', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Real, time], [time, task], [task, classified], [classified, hard], [hard, soft], [soft, .]]

>> Trigrams: 
[[Real, time, task], [time, task, classified], [task, classified, hard], [classified, hard, soft], [hard, soft, .]]

>> Noun Phrases are: 
[Real time task]

>> Named Entities are: 
[]


============================ Sentence 272 =============================

A hard real time task is one that must meet its deadline; otherwise it will cause unacceptable damage or a fatal error to the system. 


>> Tokens are: 
[hard, real, time, task, meet, deadline, ;, cause, unacceptable, damage, fatal, error, system, .] 

>> PoS Tags are: 
[('hard', 'ADJ'), ('real', 'ADJ'), ('time', 'NOUN'), ('task', 'NOUN'), ('meet', 'VERB'), ('deadline', 'NOUN'), (';', 'PUNCT'), ('cause', 'VERB'), ('unacceptable', 'ADJ'), ('damage', 'NOUN'), ('fatal', 'ADJ'), ('error', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('hard', 'amod'), ('real', 'amod'), ('time', 'compound'), ('task', 'nsubj'), ('meet', 'relcl'), ('deadline', 'dobj'), (';', 'punct'), ('cause', 'ROOT'), ('unacceptable', 'amod'), ('damage', 'dobj'), ('fatal', 'amod'), ('error', 'conj'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[hard, real], [real, time], [time, task], [task, meet], [meet, deadline], [deadline, ;], [;, cause], [cause, unacceptable], [unacceptable, damage], [damage, fatal], [fatal, error], [error, system], [system, .]]

>> Trigrams: 
[[hard, real, time], [real, time, task], [time, task, meet], [task, meet, deadline], [meet, deadline, ;], [deadline, ;, cause], [;, cause, unacceptable], [cause, unacceptable, damage], [unacceptable, damage, fatal], [damage, fatal, error], [fatal, error, system], [error, system, .]]

>> Noun Phrases are: 
[A hard real time task, its deadline, it, unacceptable damage, a fatal error, the system]

>> Named Entities are: 
[]


============================ Sentence 273 =============================

  A soft real time task has an associated deadline that is desirable but not mandatory; it will not cause unacceptable damage or a fatal error on missing deadline. 


>> Tokens are: 
[  , soft, real, time, task, associated, deadline, desirable, mandatory, ;, cause, unacceptable, damage, fatal, error, missing, deadline, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('soft', 'ADJ'), ('real', 'ADJ'), ('time', 'NOUN'), ('task', 'NOUN'), ('associated', 'ADJ'), ('deadline', 'NOUN'), ('desirable', 'ADJ'), ('mandatory', 'ADJ'), (';', 'PUNCT'), ('cause', 'VERB'), ('unacceptable', 'ADJ'), ('damage', 'NOUN'), ('fatal', 'ADJ'), ('error', 'NOUN'), ('missing', 'VERB'), ('deadline', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'dep'), ('soft', 'amod'), ('real', 'amod'), ('time', 'compound'), ('task', 'nsubj'), ('associated', 'amod'), ('deadline', 'dobj'), ('desirable', 'acomp'), ('mandatory', 'conj'), (';', 'punct'), ('cause', 'ROOT'), ('unacceptable', 'amod'), ('damage', 'dobj'), ('fatal', 'amod'), ('error', 'conj'), ('missing', 'amod'), ('deadline', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , soft], [soft, real], [real, time], [time, task], [task, associated], [associated, deadline], [deadline, desirable], [desirable, mandatory], [mandatory, ;], [;, cause], [cause, unacceptable], [unacceptable, damage], [damage, fatal], [fatal, error], [error, missing], [missing, deadline], [deadline, .]]

>> Trigrams: 
[[  , soft, real], [soft, real, time], [real, time, task], [time, task, associated], [task, associated, deadline], [associated, deadline, desirable], [deadline, desirable, mandatory], [desirable, mandatory, ;], [mandatory, ;, cause], [;, cause, unacceptable], [cause, unacceptable, damage], [unacceptable, damage, fatal], [damage, fatal, error], [fatal, error, missing], [error, missing, deadline], [missing, deadline, .]]

>> Noun Phrases are: 
[A soft real time task, an associated deadline, it, unacceptable damage, a fatal error, missing deadline]

>> Named Entities are: 
[]


============================ Sentence 274 =============================

    Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'dobj'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[    Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 275 =============================

Real Time Operating System The events that a real-time system may have to respond to can be further categorized as periodic (occurring at regular intervals) or aperiodic (occurring unpredictably). 


>> Tokens are: 
[Real, Time, Operating, System, events, real, -, time, system, respond, categorized, periodic, (, occurring, regular, intervals, ), aperiodic, (, occurring, unpredictably, ), .] 

>> PoS Tags are: 
[('Real', 'PROPN'), ('Time', 'PROPN'), ('Operating', 'NOUN'), ('System', 'PROPN'), ('events', 'NOUN'), ('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('system', 'NOUN'), ('respond', 'VERB'), ('categorized', 'VERB'), ('periodic', 'ADJ'), ('(', 'PUNCT'), ('occurring', 'VERB'), ('regular', 'ADJ'), ('intervals', 'NOUN'), (')', 'PUNCT'), ('aperiodic', 'NOUN'), ('(', 'PUNCT'), ('occurring', 'VERB'), ('unpredictably', 'ADV'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Real', 'compound'), ('Time', 'compound'), ('Operating', 'compound'), ('System', 'dep'), ('events', 'appos'), ('real', 'amod'), ('-', 'punct'), ('time', 'compound'), ('system', 'nsubj'), ('respond', 'xcomp'), ('categorized', 'ROOT'), ('periodic', 'amod'), ('(', 'punct'), ('occurring', 'advcl'), ('regular', 'amod'), ('intervals', 'pobj'), (')', 'punct'), ('aperiodic', 'conj'), ('(', 'punct'), ('occurring', 'conj'), ('unpredictably', 'advmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Real, Time], [Time, Operating], [Operating, System], [System, events], [events, real], [real, -], [-, time], [time, system], [system, respond], [respond, categorized], [categorized, periodic], [periodic, (], [(, occurring], [occurring, regular], [regular, intervals], [intervals, )], [), aperiodic], [aperiodic, (], [(, occurring], [occurring, unpredictably], [unpredictably, )], [), .]]

>> Trigrams: 
[[Real, Time, Operating], [Time, Operating, System], [Operating, System, events], [System, events, real], [events, real, -], [real, -, time], [-, time, system], [time, system, respond], [system, respond, categorized], [respond, categorized, periodic], [categorized, periodic, (], [periodic, (, occurring], [(, occurring, regular], [occurring, regular, intervals], [regular, intervals, )], [intervals, ), aperiodic], [), aperiodic, (], [aperiodic, (, occurring], [(, occurring, unpredictably], [occurring, unpredictably, )], [unpredictably, ), .]]

>> Noun Phrases are: 
[The events, a real-time system, regular intervals]

>> Named Entities are: 
[]


============================ Sentence 276 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 277 =============================

A system may have to respond to multiple periodic event streams. 


>> Tokens are: 
[system, respond, multiple, periodic, event, streams, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('respond', 'VERB'), ('multiple', 'ADJ'), ('periodic', 'ADJ'), ('event', 'NOUN'), ('streams', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('respond', 'xcomp'), ('multiple', 'amod'), ('periodic', 'amod'), ('event', 'pobj'), ('streams', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[system, respond], [respond, multiple], [multiple, periodic], [periodic, event], [event, streams], [streams, .]]

>> Trigrams: 
[[system, respond, multiple], [respond, multiple, periodic], [multiple, periodic, event], [periodic, event, streams], [event, streams, .]]

>> Noun Phrases are: 
[A system, multiple periodic event]

>> Named Entities are: 
[]


============================ Sentence 278 =============================

Depending on how much time each event requires for processing, it may not even be possible to handle them all. 


>> Tokens are: 
[Depending, time, event, requires, processing, ,, possible, handle, .] 

>> PoS Tags are: 
[('Depending', 'VERB'), ('time', 'NOUN'), ('event', 'NOUN'), ('requires', 'VERB'), ('processing', 'NOUN'), (',', 'PUNCT'), ('possible', 'ADJ'), ('handle', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Depending', 'prep'), ('time', 'pobj'), ('event', 'nsubj'), ('requires', 'relcl'), ('processing', 'pobj'), (',', 'punct'), ('possible', 'acomp'), ('handle', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[Depending, time], [time, event], [event, requires], [requires, processing], [processing, ,], [,, possible], [possible, handle], [handle, .]]

>> Trigrams: 
[[Depending, time, event], [time, event, requires], [event, requires, processing], [requires, processing, ,], [processing, ,, possible], [,, possible, handle], [possible, handle, .]]

>> Noun Phrases are: 
[how much time, each event, processing, it, them]

>> Named Entities are: 
[]


============================ Sentence 279 =============================

Real-time scheduling algorithms can be static or dynamic. 


>> Tokens are: 
[Real, -, time, scheduling, algorithms, static, dynamic, .] 

>> PoS Tags are: 
[('Real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('scheduling', 'NOUN'), ('algorithms', 'NOUN'), ('static', 'ADJ'), ('dynamic', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Real', 'amod'), ('-', 'punct'), ('time', 'compound'), ('scheduling', 'compound'), ('algorithms', 'nsubj'), ('static', 'acomp'), ('dynamic', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Real, -], [-, time], [time, scheduling], [scheduling, algorithms], [algorithms, static], [static, dynamic], [dynamic, .]]

>> Trigrams: 
[[Real, -, time], [-, time, scheduling], [time, scheduling, algorithms], [scheduling, algorithms, static], [algorithms, static, dynamic], [static, dynamic, .]]

>> Noun Phrases are: 
[Real-time scheduling algorithms]

>> Named Entities are: 
[]


============================ Sentence 280 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 281 =============================

Static: 


>> Tokens are: 
[Static, :] 

>> PoS Tags are: 
[('Static', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Static', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Static, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Static]

>> Named Entities are: 
[]


============================ Sentence 282 =============================

The former make their scheduling decisions before the system starts running. 


>> Tokens are: 
[scheduling, decisions, system, starts, running, .] 

>> PoS Tags are: 
[('scheduling', 'NOUN'), ('decisions', 'NOUN'), ('system', 'NOUN'), ('starts', 'VERB'), ('running', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('scheduling', 'compound'), ('decisions', 'dobj'), ('system', 'nsubj'), ('starts', 'advcl'), ('running', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[scheduling, decisions], [decisions, system], [system, starts], [starts, running], [running, .]]

>> Trigrams: 
[[scheduling, decisions, system], [decisions, system, starts], [system, starts, running], [starts, running, .]]

>> Noun Phrases are: 
[their scheduling decisions, the system]

>> Named Entities are: 
[]


============================ Sentence 283 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 284 =============================

Dynamic: 


>> Tokens are: 
[Dynamic, :] 

>> PoS Tags are: 
[('Dynamic', 'ADJ'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Dynamic', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Dynamic, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 285 =============================

The latter make their scheduling decisions at run time. 


>> Tokens are: 
[scheduling, decisions, run, time, .] 

>> PoS Tags are: 
[('scheduling', 'NOUN'), ('decisions', 'NOUN'), ('run', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('scheduling', 'compound'), ('decisions', 'dobj'), ('run', 'compound'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[scheduling, decisions], [decisions, run], [run, time], [time, .]]

>> Trigrams: 
[[scheduling, decisions, run], [decisions, run, time], [run, time, .]]

>> Noun Phrases are: 
[their scheduling decisions, run time]

>> Named Entities are: 
[]


============================ Sentence 286 =============================

 Static scheduling only works when there is per­fect information available in advance about the work to be done and the deadlines that have to be met. 


>> Tokens are: 
[ , Static, scheduling, works, per­fect, information, available, advance, work, deadlines, met, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Static', 'ADJ'), ('scheduling', 'NOUN'), ('works', 'VERB'), ('per\xadfect', 'PROPN'), ('information', 'NOUN'), ('available', 'ADJ'), ('advance', 'NOUN'), ('work', 'NOUN'), ('deadlines', 'NOUN'), ('met', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Static', 'amod'), ('scheduling', 'nsubj'), ('works', 'ROOT'), ('per\xadfect', 'compound'), ('information', 'attr'), ('available', 'amod'), ('advance', 'pobj'), ('work', 'pobj'), ('deadlines', 'conj'), ('met', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[ , Static], [Static, scheduling], [scheduling, works], [works, per­fect], [per­fect, information], [information, available], [available, advance], [advance, work], [work, deadlines], [deadlines, met], [met, .]]

>> Trigrams: 
[[ , Static, scheduling], [Static, scheduling, works], [scheduling, works, per­fect], [works, per­fect, information], [per­fect, information, available], [information, available, advance], [available, advance, work], [advance, work, deadlines], [work, deadlines, met], [deadlines, met, .]]

>> Noun Phrases are: 
[ Static scheduling, per­fect information, advance, the work, the deadlines]

>> Named Entities are: 
[('Static', 'NORP')]


============================ Sentence 287 =============================

 Dynamic scheduling algorithms do not have these restrictions. 


>> Tokens are: 
[ , Dynamic, scheduling, algorithms, restrictions, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Dynamic', 'ADJ'), ('scheduling', 'NOUN'), ('algorithms', 'NOUN'), ('restrictions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Dynamic', 'amod'), ('scheduling', 'compound'), ('algorithms', 'nsubj'), ('restrictions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , Dynamic], [Dynamic, scheduling], [scheduling, algorithms], [algorithms, restrictions], [restrictions, .]]

>> Trigrams: 
[[ , Dynamic, scheduling], [Dynamic, scheduling, algorithms], [scheduling, algorithms, restrictions], [algorithms, restrictions, .]]

>> Noun Phrases are: 
[ Dynamic scheduling algorithms, these restrictions]

>> Named Entities are: 
[('Dynamic', 'NORP')]


============================ Sentence 288 =============================

   Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[   , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[   Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 289 =============================

Exercise Five batch jobs A to E arrive at same time. 


>> Tokens are: 
[Exercise, batch, jobs, E, arrive, time, .] 

>> PoS Tags are: 
[('Exercise', 'PROPN'), ('batch', 'NOUN'), ('jobs', 'NOUN'), ('E', 'PROPN'), ('arrive', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Exercise', 'compound'), ('batch', 'compound'), ('jobs', 'nsubj'), ('E', 'pobj'), ('arrive', 'ROOT'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Exercise, batch], [batch, jobs], [jobs, E], [E, arrive], [arrive, time], [time, .]]

>> Trigrams: 
[[Exercise, batch, jobs], [batch, jobs, E], [jobs, E, arrive], [E, arrive, time], [arrive, time, .]]

>> Noun Phrases are: 
[Exercise Five batch jobs, A, E, same time]

>> Named Entities are: 
[('Exercise Five', 'PRODUCT')]


============================ Sentence 290 =============================

They have estimated running times 10,6,2,4 and 8 minutes. 


>> Tokens are: 
[estimated, running, times, 10,6,2,4, 8, minutes, .] 

>> PoS Tags are: 
[('estimated', 'VERB'), ('running', 'VERB'), ('times', 'NOUN'), ('10,6,2,4', 'NOUN'), ('8', 'NUM'), ('minutes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('estimated', 'ROOT'), ('running', 'compound'), ('times', 'npadvmod'), ('10,6,2,4', 'appos'), ('8', 'nummod'), ('minutes', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[estimated, running], [running, times], [times, 10,6,2,4], [10,6,2,4, 8], [8, minutes], [minutes, .]]

>> Trigrams: 
[[estimated, running, times], [running, times, 10,6,2,4], [times, 10,6,2,4, 8], [10,6,2,4, 8, minutes], [8, minutes, .]]

>> Noun Phrases are: 
[They, 10,6,2,4, 8 minutes]

>> Named Entities are: 
[('10,6,2,4', 'CARDINAL'), ('8 minutes', 'TIME')]


============================ Sentence 291 =============================

Their priorities are 3,5,2,1 and 4 respectively with 5 being highest priority. 


>> Tokens are: 
[priorities, 3,5,2,1, 4, respectively, 5, highest, priority, .] 

>> PoS Tags are: 
[('priorities', 'NOUN'), ('3,5,2,1', 'NUM'), ('4', 'NUM'), ('respectively', 'ADV'), ('5', 'NUM'), ('highest', 'ADJ'), ('priority', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('priorities', 'nsubj'), ('3,5,2,1', 'attr'), ('4', 'conj'), ('respectively', 'advmod'), ('5', 'nsubj'), ('highest', 'amod'), ('priority', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[priorities, 3,5,2,1], [3,5,2,1, 4], [4, respectively], [respectively, 5], [5, highest], [highest, priority], [priority, .]]

>> Trigrams: 
[[priorities, 3,5,2,1, 4], [3,5,2,1, 4, respectively], [4, respectively, 5], [respectively, 5, highest], [5, highest, priority], [highest, priority, .]]

>> Noun Phrases are: 
[Their priorities, highest priority]

>> Named Entities are: 
[('4', 'CARDINAL'), ('5', 'CARDINAL')]


============================ Sentence 292 =============================

For each of the following algorithm determine mean process turnaround time. 


>> Tokens are: 
[following, algorithm, determine, mean, process, turnaround, time, .] 

>> PoS Tags are: 
[('following', 'VERB'), ('algorithm', 'NOUN'), ('determine', 'NOUN'), ('mean', 'ADJ'), ('process', 'NOUN'), ('turnaround', 'NOUN'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('following', 'amod'), ('algorithm', 'pobj'), ('determine', 'ROOT'), ('mean', 'amod'), ('process', 'compound'), ('turnaround', 'compound'), ('time', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[following, algorithm], [algorithm, determine], [determine, mean], [mean, process], [process, turnaround], [turnaround, time], [time, .]]

>> Trigrams: 
[[following, algorithm, determine], [algorithm, determine, mean], [determine, mean, process], [mean, process, turnaround], [process, turnaround, time], [turnaround, time, .]]

>> Noun Phrases are: 
[the following algorithm, mean process turnaround time]

>> Named Entities are: 
[]


============================ Sentence 293 =============================

Ignore process swapping overhead. 


>> Tokens are: 
[Ignore, process, swapping, overhead, .] 

>> PoS Tags are: 
[('Ignore', 'NOUN'), ('process', 'NOUN'), ('swapping', 'VERB'), ('overhead', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ignore', 'compound'), ('process', 'nsubj'), ('swapping', 'ROOT'), ('overhead', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Ignore, process], [process, swapping], [swapping, overhead], [overhead, .]]

>> Trigrams: 
[[Ignore, process, swapping], [process, swapping, overhead], [swapping, overhead, .]]

>> Noun Phrases are: 
[Ignore process]

>> Named Entities are: 
[]


============================ Sentence 294 =============================

Quantum time is 2 minute. 


>> Tokens are: 
[Quantum, time, 2, minute, .] 

>> PoS Tags are: 
[('Quantum', 'PROPN'), ('time', 'NOUN'), ('2', 'NUM'), ('minute', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Quantum', 'compound'), ('time', 'nsubj'), ('2', 'nummod'), ('minute', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Quantum, time], [time, 2], [2, minute], [minute, .]]

>> Trigrams: 
[[Quantum, time, 2], [time, 2, minute], [2, minute, .]]

>> Noun Phrases are: 
[Quantum time, 2 minute]

>> Named Entities are: 
[('Quantum', 'ORG'), ('2 minute', 'TIME')]


============================ Sentence 295 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 296 =============================

Round Robin, Priority Scheduling, FCFS, SJF. 


>> Tokens are: 
[Round, Robin, ,, Priority, Scheduling, ,, FCFS, ,, SJF, .] 

>> PoS Tags are: 
[('Round', 'PROPN'), ('Robin', 'PROPN'), (',', 'PUNCT'), ('Priority', 'PROPN'), ('Scheduling', 'PROPN'), (',', 'PUNCT'), ('FCFS', 'PROPN'), (',', 'PUNCT'), ('SJF', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Round', 'compound'), ('Robin', 'ROOT'), (',', 'punct'), ('Priority', 'compound'), ('Scheduling', 'conj'), (',', 'punct'), ('FCFS', 'conj'), (',', 'punct'), ('SJF', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Round, Robin], [Robin, ,], [,, Priority], [Priority, Scheduling], [Scheduling, ,], [,, FCFS], [FCFS, ,], [,, SJF], [SJF, .]]

>> Trigrams: 
[[Round, Robin, ,], [Robin, ,, Priority], [,, Priority, Scheduling], [Priority, Scheduling, ,], [Scheduling, ,, FCFS], [,, FCFS, ,], [FCFS, ,, SJF], [,, SJF, .]]

>> Noun Phrases are: 
[Round Robin, Priority Scheduling, FCFS, SJF]

>> Named Entities are: 
[('Round Robin', 'PERSON'), ('Priority Scheduling', 'PERSON'), ('FCFS', 'ORG'), ('SJF', 'ORG')]


============================ Sentence 297 =============================

 Suppose that the following processes arrive for the execution at the times indicated. 


>> Tokens are: 
[ , Suppose, following, processes, arrive, execution, times, indicated, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Suppose', 'VERB'), ('following', 'VERB'), ('processes', 'NOUN'), ('arrive', 'VERB'), ('execution', 'NOUN'), ('times', 'NOUN'), ('indicated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('Suppose', 'ROOT'), ('following', 'amod'), ('processes', 'nsubj'), ('arrive', 'ccomp'), ('execution', 'pobj'), ('times', 'pobj'), ('indicated', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[ , Suppose], [Suppose, following], [following, processes], [processes, arrive], [arrive, execution], [execution, times], [times, indicated], [indicated, .]]

>> Trigrams: 
[[ , Suppose, following], [Suppose, following, processes], [following, processes, arrive], [processes, arrive, execution], [arrive, execution, times], [execution, times, indicated], [times, indicated, .]]

>> Noun Phrases are: 
[the following processes, the execution, the times]

>> Named Entities are: 
[]


============================ Sentence 298 =============================

Each process will run the listed amount of time. 


>> Tokens are: 
[process, run, listed, time, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('run', 'VERB'), ('listed', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('run', 'ROOT'), ('listed', 'amod'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[process, run], [run, listed], [listed, time], [time, .]]

>> Trigrams: 
[[process, run, listed], [run, listed, time], [listed, time, .]]

>> Noun Phrases are: 
[Each process, the listed amount, time]

>> Named Entities are: 
[]


============================ Sentence 299 =============================

Assume preemptive scheduling. 


>> Tokens are: 
[Assume, preemptive, scheduling, .] 

>> PoS Tags are: 
[('Assume', 'VERB'), ('preemptive', 'ADJ'), ('scheduling', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Assume', 'ROOT'), ('preemptive', 'amod'), ('scheduling', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Assume, preemptive], [preemptive, scheduling], [scheduling, .]]

>> Trigrams: 
[[Assume, preemptive, scheduling], [preemptive, scheduling, .]]

>> Noun Phrases are: 
[preemptive scheduling]

>> Named Entities are: 
[]


============================ Sentence 300 =============================

Process         Arrival Time (ms) 


>> Tokens are: 
[Process,         , Arrival, Time, (, ms, )] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('        ', 'SPACE'), ('Arrival', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ms', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'compound'), ('        ', 'compound'), ('Arrival', 'compound'), ('Time', 'ROOT'), ('(', 'punct'), ('ms', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Process,         ], [        , Arrival], [Arrival, Time], [Time, (], [(, ms], [ms, )]]

>> Trigrams: 
[[Process,         , Arrival], [        , Arrival, Time], [Arrival, Time, (], [Time, (, ms], [(, ms, )]]

>> Noun Phrases are: 
[Process         Arrival Time, (ms]

>> Named Entities are: 
[('Process         Arrival Time', 'PRODUCT')]


============================ Sentence 301 =============================

          Burst Time (ms) 


>> Tokens are: 
[          , Burst, Time, (, ms, )] 

>> PoS Tags are: 
[('          ', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('(', 'PUNCT'), ('ms', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('          ', 'ROOT'), ('Burst', 'compound'), ('Time', 'appos'), ('(', 'punct'), ('ms', 'appos'), (')', 'punct')]

>> Bigrams: 
[[          , Burst], [Burst, Time], [Time, (], [(, ms], [ms, )]]

>> Trigrams: 
[[          , Burst, Time], [Burst, Time, (], [Time, (, ms], [(, ms, )]]

>> Noun Phrases are: 
[Burst Time, (ms]

>> Named Entities are: 
[]


============================ Sentence 302 =============================

    P1                          0.0                                    8     P2                          0.4                                    4     P3                          1.0                                    1 What is the turnaround time for these processes with Shortest Job First scheduling algorithm? 


>> Tokens are: 
[    , P1,                          , 0.0,                                    , 8,     , P2,                          , 0.4,                                    , 4,     , P3,                          , 1.0,                                    , 1, turnaround, time, processes, Shortest, Job, scheduling, algorithm, ?] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('P1', 'ADJ'), ('                         ', 'SPACE'), ('0.0', 'NUM'), ('                                   ', 'SPACE'), ('8', 'NUM'), ('    ', 'SPACE'), ('P2', 'PROPN'), ('                         ', 'SPACE'), ('0.4', 'NUM'), ('                                   ', 'SPACE'), ('4', 'NUM'), ('    ', 'SPACE'), ('P3', 'VERB'), ('                         ', 'SPACE'), ('1.0', 'NUM'), ('                                   ', 'SPACE'), ('1', 'NUM'), ('turnaround', 'NOUN'), ('time', 'NOUN'), ('processes', 'NOUN'), ('Shortest', 'PROPN'), ('Job', 'PROPN'), ('scheduling', 'NOUN'), ('algorithm', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'dep'), ('P1', 'appos'), ('                         ', 'appos'), ('0.0', 'nummod'), ('                                   ', 'appos'), ('8', 'nummod'), ('    ', 'appos'), ('P2', 'npadvmod'), ('                         ', 'appos'), ('0.4', 'nummod'), ('                                   ', 'appos'), ('4', 'nummod'), ('    ', 'nsubj'), ('P3', 'ROOT'), ('                         ', 'dobj'), ('1.0', 'nummod'), ('                                   ', 'npadvmod'), ('1', 'nummod'), ('turnaround', 'compound'), ('time', 'attr'), ('processes', 'pobj'), ('Shortest', 'compound'), ('Job', 'compound'), ('scheduling', 'compound'), ('algorithm', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[    , P1], [P1,                          ], [                         , 0.0], [0.0,                                    ], [                                   , 8], [8,     ], [    , P2], [P2,                          ], [                         , 0.4], [0.4,                                    ], [                                   , 4], [4,     ], [    , P3], [P3,                          ], [                         , 1.0], [1.0,                                    ], [                                   , 1], [1, turnaround], [turnaround, time], [time, processes], [processes, Shortest], [Shortest, Job], [Job, scheduling], [scheduling, algorithm], [algorithm, ?]]

>> Trigrams: 
[[    , P1,                          ], [P1,                          , 0.0], [                         , 0.0,                                    ], [0.0,                                    , 8], [                                   , 8,     ], [8,     , P2], [    , P2,                          ], [P2,                          , 0.4], [                         , 0.4,                                    ], [0.4,                                    , 4], [                                   , 4,     ], [4,     , P3], [    , P3,                          ], [P3,                          , 1.0], [                         , 1.0,                                    ], [1.0,                                    , 1], [                                   , 1, turnaround], [1, turnaround, time], [turnaround, time, processes], [time, processes, Shortest], [processes, Shortest, Job], [Shortest, Job, scheduling], [Job, scheduling, algorithm], [scheduling, algorithm, ?]]

>> Noun Phrases are: 
[What, the turnaround time, these processes, Shortest Job First scheduling algorithm]

>> Named Entities are: 
[('0.0                                    8     ', 'CARDINAL'), ('First', 'ORDINAL')]


============================ Sentence 303 =============================

    Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'nsubj'), ('Firoz', 'npadvmod'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[    Prof., A Sherasiya, #3140702 (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 304 =============================

Exercise Consider the following set of processes with length of CPU burst time given in milliseconds. 


>> Tokens are: 
[Exercise, Consider, following, set, processes, length, CPU, burst, time, given, milliseconds, .] 

>> PoS Tags are: 
[('Exercise', 'PROPN'), ('Consider', 'VERB'), ('following', 'ADJ'), ('set', 'NOUN'), ('processes', 'NOUN'), ('length', 'NOUN'), ('CPU', 'NOUN'), ('burst', 'VERB'), ('time', 'NOUN'), ('given', 'VERB'), ('milliseconds', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Exercise', 'nsubj'), ('Consider', 'ROOT'), ('following', 'amod'), ('set', 'dobj'), ('processes', 'pobj'), ('length', 'pobj'), ('CPU', 'nmod'), ('burst', 'amod'), ('time', 'pobj'), ('given', 'acl'), ('milliseconds', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Exercise, Consider], [Consider, following], [following, set], [set, processes], [processes, length], [length, CPU], [CPU, burst], [burst, time], [time, given], [given, milliseconds], [milliseconds, .]]

>> Trigrams: 
[[Exercise, Consider, following], [Consider, following, set], [following, set, processes], [set, processes, length], [processes, length, CPU], [length, CPU, burst], [CPU, burst, time], [burst, time, given], [time, given, milliseconds], [given, milliseconds, .]]

>> Noun Phrases are: 
[Exercise, the following set, processes, length, CPU burst time, milliseconds]

>> Named Entities are: 
[]


============================ Sentence 305 =============================

Process         Burst Time      Priority     P1                   10                        3     P2                    1       	   1     P3                    2                         3 


>> Tokens are: 
[Process,         , Burst, Time,      , Priority,     , P1,                   , 10,                        , 3,     , P2,                    , 1,       	   , 1,     , P3,                    , 2,                         , 3] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('        ', 'SPACE'), ('Burst', 'PROPN'), ('Time', 'PROPN'), ('     ', 'SPACE'), ('Priority', 'PROPN'), ('    ', 'SPACE'), ('P1', 'PROPN'), ('                  ', 'SPACE'), ('10', 'NUM'), ('                       ', 'SPACE'), ('3', 'NUM'), ('    ', 'SPACE'), ('P2', 'PROPN'), ('                   ', 'SPACE'), ('1', 'NUM'), ('      \t   ', 'SPACE'), ('1', 'NUM'), ('    ', 'SPACE'), ('P3', 'VERB'), ('                   ', 'SPACE'), ('2', 'NUM'), ('                        ', 'SPACE'), ('3', 'NUM')] 

>> Dependency Tags are: 
[('Process', 'compound'), ('        ', 'compound'), ('Burst', 'compound'), ('Time', 'compound'), ('     ', 'compound'), ('Priority', 'compound'), ('    ', 'nmod'), ('P1', 'nmod'), ('                  ', 'nummod'), ('10', 'nummod'), ('                       ', 'appos'), ('3', 'nummod'), ('    ', 'nsubj'), ('P2', 'ROOT'), ('                   ', 'nummod'), ('1', 'quantmod'), ('      \t   ', 'compound'), ('1', 'nummod'), ('    ', 'nsubj'), ('P3', 'conj'), ('                   ', 'compound'), ('2', 'nummod'), ('                        ', 'dobj'), ('3', 'nummod')]

>> Bigrams: 
[[Process,         ], [        , Burst], [Burst, Time], [Time,      ], [     , Priority], [Priority,     ], [    , P1], [P1,                   ], [                  , 10], [10,                        ], [                       , 3], [3,     ], [    , P2], [P2,                    ], [                   , 1], [1,       	   ], [      	   , 1], [1,     ], [    , P3], [P3,                    ], [                   , 2], [2,                         ], [                        , 3]]

>> Trigrams: 
[[Process,         , Burst], [        , Burst, Time], [Burst, Time,      ], [Time,      , Priority], [     , Priority,     ], [Priority,     , P1], [    , P1,                   ], [P1,                   , 10], [                  , 10,                        ], [10,                        , 3], [                       , 3,     ], [3,     , P2], [    , P2,                    ], [P2,                    , 1], [                   , 1,       	   ], [1,       	   , 1], [      	   , 1,     ], [1,     , P3], [    , P3,                    ], [P3,                    , 2], [                   , 2,                         ], [2,                         , 3]]

>> Noun Phrases are: 
[Process         Burst Time      Priority     P1                   10                        3     P2]

>> Named Entities are: 
[]


============================ Sentence 306 =============================

    P4                    1                         4     P5                    5                         2 Assume arrival order is: P1, P2, P3, P4, P5 all at time 0 and a smaller priority number implies a higher priority. 


>> Tokens are: 
[    , P4,                    , 1,                         , 4,     , P5,                    , 5,                         , 2, Assume, arrival, order, :, P1, ,, P2, ,, P3, ,, P4, ,, P5, time, 0, smaller, priority, number, implies, higher, priority, .] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('P4', 'PROPN'), ('                   ', 'SPACE'), ('1', 'NUM'), ('                        ', 'SPACE'), ('4', 'NUM'), ('    ', 'SPACE'), ('P5', 'PROPN'), ('                   ', 'SPACE'), ('5', 'NUM'), ('                        ', 'SPACE'), ('2', 'NUM'), ('Assume', 'PROPN'), ('arrival', 'NOUN'), ('order', 'NOUN'), (':', 'PUNCT'), ('P1', 'PROPN'), (',', 'PUNCT'), ('P2', 'PROPN'), (',', 'PUNCT'), ('P3', 'PROPN'), (',', 'PUNCT'), ('P4', 'PROPN'), (',', 'PUNCT'), ('P5', 'PROPN'), ('time', 'NOUN'), ('0', 'NUM'), ('smaller', 'ADJ'), ('priority', 'NOUN'), ('number', 'NOUN'), ('implies', 'VERB'), ('higher', 'ADJ'), ('priority', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('P4', 'nmod'), ('                   ', 'appos'), ('1', 'nummod'), ('                        ', 'nmod'), ('4', 'nummod'), ('    ', 'appos'), ('P5', 'appos'), ('                   ', 'appos'), ('5', 'quantmod'), ('                        ', 'compound'), ('2', 'nummod'), ('Assume', 'compound'), ('arrival', 'compound'), ('order', 'nsubj'), (':', 'punct'), ('P1', 'nsubj'), (',', 'punct'), ('P2', 'conj'), (',', 'punct'), ('P3', 'conj'), (',', 'punct'), ('P4', 'conj'), (',', 'punct'), ('P5', 'conj'), ('time', 'pobj'), ('0', 'nummod'), ('smaller', 'amod'), ('priority', 'compound'), ('number', 'nsubj'), ('implies', 'ccomp'), ('higher', 'amod'), ('priority', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[    , P4], [P4,                    ], [                   , 1], [1,                         ], [                        , 4], [4,     ], [    , P5], [P5,                    ], [                   , 5], [5,                         ], [                        , 2], [2, Assume], [Assume, arrival], [arrival, order], [order, :], [:, P1], [P1, ,], [,, P2], [P2, ,], [,, P3], [P3, ,], [,, P4], [P4, ,], [,, P5], [P5, time], [time, 0], [0, smaller], [smaller, priority], [priority, number], [number, implies], [implies, higher], [higher, priority], [priority, .]]

>> Trigrams: 
[[    , P4,                    ], [P4,                    , 1], [                   , 1,                         ], [1,                         , 4], [                        , 4,     ], [4,     , P5], [    , P5,                    ], [P5,                    , 5], [                   , 5,                         ], [5,                         , 2], [                        , 2, Assume], [2, Assume, arrival], [Assume, arrival, order], [arrival, order, :], [order, :, P1], [:, P1, ,], [P1, ,, P2], [,, P2, ,], [P2, ,, P3], [,, P3, ,], [P3, ,, P4], [,, P4, ,], [P4, ,, P5], [,, P5, time], [P5, time, 0], [time, 0, smaller], [0, smaller, priority], [smaller, priority, number], [priority, number, implies], [number, implies, higher], [implies, higher, priority], [higher, priority, .]]

>> Noun Phrases are: 
[P5, P1, P2, P3, P4, P5, time, a smaller priority number, a higher priority]

>> Named Entities are: 
[('0', 'CARDINAL')]


============================ Sentence 307 =============================

Draw the Gantt charts illustrating the execution of these processes using preemptive priority scheduling. 


>> Tokens are: 
[Draw, Gantt, charts, illustrating, execution, processes, preemptive, priority, scheduling, .] 

>> PoS Tags are: 
[('Draw', 'VERB'), ('Gantt', 'PROPN'), ('charts', 'NOUN'), ('illustrating', 'VERB'), ('execution', 'NOUN'), ('processes', 'NOUN'), ('preemptive', 'ADJ'), ('priority', 'NOUN'), ('scheduling', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Draw', 'ROOT'), ('Gantt', 'compound'), ('charts', 'dobj'), ('illustrating', 'acl'), ('execution', 'dobj'), ('processes', 'pobj'), ('preemptive', 'amod'), ('priority', 'compound'), ('scheduling', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Draw, Gantt], [Gantt, charts], [charts, illustrating], [illustrating, execution], [execution, processes], [processes, preemptive], [preemptive, priority], [priority, scheduling], [scheduling, .]]

>> Trigrams: 
[[Draw, Gantt, charts], [Gantt, charts, illustrating], [charts, illustrating, execution], [illustrating, execution, processes], [execution, processes, preemptive], [processes, preemptive, priority], [preemptive, priority, scheduling], [priority, scheduling, .]]

>> Noun Phrases are: 
[the Gantt charts, the execution, these processes, preemptive priority scheduling]

>> Named Entities are: 
[('Gantt', 'PERSON')]


============================ Sentence 308 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 309 =============================

Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 310 =============================

Questions asked in GTU Define term Scheduler, Scheduling and Scheduling Algorithm with example. 


>> Tokens are: 
[Questions, asked, GTU, Define, term, Scheduler, ,, Scheduling, Scheduling, Algorithm, example, .] 

>> PoS Tags are: 
[('Questions', 'NOUN'), ('asked', 'VERB'), ('GTU', 'PROPN'), ('Define', 'PROPN'), ('term', 'NOUN'), ('Scheduler', 'PROPN'), (',', 'PUNCT'), ('Scheduling', 'PROPN'), ('Scheduling', 'PROPN'), ('Algorithm', 'PROPN'), ('example', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Questions', 'nsubj'), ('asked', 'ROOT'), ('GTU', 'compound'), ('Define', 'compound'), ('term', 'nmod'), ('Scheduler', 'pobj'), (',', 'punct'), ('Scheduling', 'conj'), ('Scheduling', 'conj'), ('Algorithm', 'dobj'), ('example', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Questions, asked], [asked, GTU], [GTU, Define], [Define, term], [term, Scheduler], [Scheduler, ,], [,, Scheduling], [Scheduling, Scheduling], [Scheduling, Algorithm], [Algorithm, example], [example, .]]

>> Trigrams: 
[[Questions, asked, GTU], [asked, GTU, Define], [GTU, Define, term], [Define, term, Scheduler], [term, Scheduler, ,], [Scheduler, ,, Scheduling], [,, Scheduling, Scheduling], [Scheduling, Scheduling, Algorithm], [Scheduling, Algorithm, example], [Algorithm, example, .]]

>> Noun Phrases are: 
[Questions, GTU Define term Scheduler, Scheduling, Scheduling, Algorithm, example]

>> Named Entities are: 
[('Scheduler', 'PERSON')]


============================ Sentence 311 =============================

Define terms. 


>> Tokens are: 
[Define, terms, .] 

>> PoS Tags are: 
[('Define', 'VERB'), ('terms', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Define', 'compound'), ('terms', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Define, terms], [terms, .]]

>> Trigrams: 
[[Define, terms, .]]

>> Noun Phrases are: 
[Define terms]

>> Named Entities are: 
[]


============================ Sentence 312 =============================

1) Throughput 2) 


>> Tokens are: 
[1, ), Throughput, 2, )] 

>> PoS Tags are: 
[('1', 'X'), (')', 'PUNCT'), ('Throughput', 'PROPN'), ('2', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'meta'), (')', 'punct'), ('Throughput', 'ROOT'), ('2', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[1, )], [), Throughput], [Throughput, 2], [2, )]]

>> Trigrams: 
[[1, ), Throughput], [), Throughput, 2], [Throughput, 2, )]]

>> Noun Phrases are: 
[1) Throughput]

>> Named Entities are: 
[('1', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 313 =============================

Waiting Time 3) 


>> Tokens are: 
[Waiting, Time, 3, )] 

>> PoS Tags are: 
[('Waiting', 'PROPN'), ('Time', 'PROPN'), ('3', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Waiting', 'compound'), ('Time', 'ROOT'), ('3', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[Waiting, Time], [Time, 3], [3, )]]

>> Trigrams: 
[[Waiting, Time, 3], [Time, 3, )]]

>> Noun Phrases are: 
[Waiting Time]

>> Named Entities are: 
[]


============================ Sentence 314 =============================

Turnaround Time 4) 


>> Tokens are: 
[Turnaround, Time, 4, )] 

>> PoS Tags are: 
[('Turnaround', 'PROPN'), ('Time', 'PROPN'), ('4', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Turnaround', 'compound'), ('Time', 'ROOT'), ('4', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[Turnaround, Time], [Time, 4], [4, )]]

>> Trigrams: 
[[Turnaround, Time, 4], [Time, 4, )]]

>> Noun Phrases are: 
[Turnaround Time]

>> Named Entities are: 
[]


============================ Sentence 315 =============================

Response Time               5) Granularity 6) 


>> Tokens are: 
[Response, Time,               , 5, ), Granularity, 6, )] 

>> PoS Tags are: 
[('Response', 'PROPN'), ('Time', 'PROPN'), ('              ', 'SPACE'), ('5', 'NUM'), (')', 'PUNCT'), ('Granularity', 'NOUN'), ('6', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Response', 'compound'), ('Time', 'ROOT'), ('              ', 'nummod'), ('5', 'nummod'), (')', 'punct'), ('Granularity', 'appos'), ('6', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[Response, Time], [Time,               ], [              , 5], [5, )], [), Granularity], [Granularity, 6], [6, )]]

>> Trigrams: 
[[Response, Time,               ], [Time,               , 5], [              , 5, )], [5, ), Granularity], [), Granularity, 6], [Granularity, 6, )]]

>> Noun Phrases are: 
[Response Time, Granularity]

>> Named Entities are: 
[('Response Time', 'PERSON')]


============================ Sentence 316 =============================

Short Term Scheduler 7) CPU Utilization 


>> Tokens are: 
[Short, Term, Scheduler, 7, ), CPU, Utilization] 

>> PoS Tags are: 
[('Short', 'PROPN'), ('Term', 'PROPN'), ('Scheduler', 'PROPN'), ('7', 'NUM'), (')', 'PUNCT'), ('CPU', 'NOUN'), ('Utilization', 'PROPN')] 

>> Dependency Tags are: 
[('Short', 'compound'), ('Term', 'compound'), ('Scheduler', 'ROOT'), ('7', 'nummod'), (')', 'punct'), ('CPU', 'compound'), ('Utilization', 'appos')]

>> Bigrams: 
[[Short, Term], [Term, Scheduler], [Scheduler, 7], [7, )], [), CPU], [CPU, Utilization]]

>> Trigrams: 
[[Short, Term, Scheduler], [Term, Scheduler, 7], [Scheduler, 7, )], [7, ), CPU], [), CPU, Utilization]]

>> Noun Phrases are: 
[Short Term Scheduler, CPU Utilization]

>> Named Entities are: 
[]


============================ Sentence 317 =============================

What is scheduler? 


>> Tokens are: 
[scheduler, ?] 

>> PoS Tags are: 
[('scheduler', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('scheduler', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[scheduler, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[What]

>> Named Entities are: 
[]


============================ Sentence 318 =============================

Explain queuing diagram representation of process scheduler with figure. 


>> Tokens are: 
[Explain, queuing, diagram, representation, process, scheduler, figure, .] 

>> PoS Tags are: 
[('Explain', 'VERB'), ('queuing', 'VERB'), ('diagram', 'NOUN'), ('representation', 'NOUN'), ('process', 'NOUN'), ('scheduler', 'NOUN'), ('figure', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Explain', 'ROOT'), ('queuing', 'xcomp'), ('diagram', 'compound'), ('representation', 'dobj'), ('process', 'pobj'), ('scheduler', 'ccomp'), ('figure', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Explain, queuing], [queuing, diagram], [diagram, representation], [representation, process], [process, scheduler], [scheduler, figure], [figure, .]]

>> Trigrams: 
[[Explain, queuing, diagram], [queuing, diagram, representation], [diagram, representation, process], [representation, process, scheduler], [process, scheduler, figure], [scheduler, figure, .]]

>> Noun Phrases are: 
[diagram representation, process, figure]

>> Named Entities are: 
[]


============================ Sentence 319 =============================

Write various scheduling criteria. 


>> Tokens are: 
[Write, scheduling, criteria, .] 

>> PoS Tags are: 
[('Write', 'VERB'), ('scheduling', 'NOUN'), ('criteria', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Write', 'ROOT'), ('scheduling', 'compound'), ('criteria', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Write, scheduling], [scheduling, criteria], [criteria, .]]

>> Trigrams: 
[[Write, scheduling, criteria], [scheduling, criteria, .]]

>> Noun Phrases are: 
[various scheduling criteria]

>> Named Entities are: 
[]


============================ Sentence 320 =============================

Consider Five Processes P1 to P5 arrived at same time. 


>> Tokens are: 
[Consider, Processes, P1, P5, arrived, time, .] 

>> PoS Tags are: 
[('Consider', 'VERB'), ('Processes', 'PROPN'), ('P1', 'PROPN'), ('P5', 'PROPN'), ('arrived', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consider', 'ROOT'), ('Processes', 'dobj'), ('P1', 'appos'), ('P5', 'pobj'), ('arrived', 'ccomp'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Consider, Processes], [Processes, P1], [P1, P5], [P5, arrived], [arrived, time], [time, .]]

>> Trigrams: 
[[Consider, Processes, P1], [Processes, P1, P5], [P1, P5, arrived], [P5, arrived, time], [arrived, time, .]]

>> Noun Phrases are: 
[Five Processes, P1, P5, same time]

>> Named Entities are: 
[('Five', 'CARDINAL'), ('P5', 'ORG')]


============================ Sentence 321 =============================

They have estimated running time 10, 2, 6, 8 and 4 seconds, respectively. 


>> Tokens are: 
[estimated, running, time, 10, ,, 2, ,, 6, ,, 8, 4, seconds, ,, respectively, .] 

>> PoS Tags are: 
[('estimated', 'VERB'), ('running', 'VERB'), ('time', 'NOUN'), ('10', 'NUM'), (',', 'PUNCT'), ('2', 'NUM'), (',', 'PUNCT'), ('6', 'NUM'), (',', 'PUNCT'), ('8', 'NUM'), ('4', 'NUM'), ('seconds', 'NOUN'), (',', 'PUNCT'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('estimated', 'ROOT'), ('running', 'compound'), ('time', 'npadvmod'), ('10', 'nummod'), (',', 'punct'), ('2', 'nummod'), (',', 'punct'), ('6', 'appos'), (',', 'punct'), ('8', 'nummod'), ('4', 'nummod'), ('seconds', 'conj'), (',', 'punct'), ('respectively', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[estimated, running], [running, time], [time, 10], [10, ,], [,, 2], [2, ,], [,, 6], [6, ,], [,, 8], [8, 4], [4, seconds], [seconds, ,], [,, respectively], [respectively, .]]

>> Trigrams: 
[[estimated, running, time], [running, time, 10], [time, 10, ,], [10, ,, 2], [,, 2, ,], [2, ,, 6], [,, 6, ,], [6, ,, 8], [,, 8, 4], [8, 4, seconds], [4, seconds, ,], [seconds, ,, respectively], [,, respectively, .]]

>> Noun Phrases are: 
[They]

>> Named Entities are: 
[('10', 'CARDINAL'), ('6', 'DATE'), ('8 and 4 seconds', 'TIME')]


============================ Sentence 322 =============================

Their Priorities are 3, 2, 5, 4 and 1, respectively with 5 being highest Priority. 


>> Tokens are: 
[Priorities, 3, ,, 2, ,, 5, ,, 4, 1, ,, respectively, 5, highest, Priority, .] 

>> PoS Tags are: 
[('Priorities', 'NOUN'), ('3', 'NUM'), (',', 'PUNCT'), ('2', 'NUM'), (',', 'PUNCT'), ('5', 'NUM'), (',', 'PUNCT'), ('4', 'NUM'), ('1', 'NUM'), (',', 'PUNCT'), ('respectively', 'ADV'), ('5', 'NUM'), ('highest', 'ADJ'), ('Priority', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Priorities', 'nsubj'), ('3', 'attr'), (',', 'punct'), ('2', 'nummod'), (',', 'punct'), ('5', 'nummod'), (',', 'punct'), ('4', 'conj'), ('1', 'conj'), (',', 'punct'), ('respectively', 'advmod'), ('5', 'nsubj'), ('highest', 'amod'), ('Priority', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Priorities, 3], [3, ,], [,, 2], [2, ,], [,, 5], [5, ,], [,, 4], [4, 1], [1, ,], [,, respectively], [respectively, 5], [5, highest], [highest, Priority], [Priority, .]]

>> Trigrams: 
[[Priorities, 3, ,], [3, ,, 2], [,, 2, ,], [2, ,, 5], [,, 5, ,], [5, ,, 4], [,, 4, 1], [4, 1, ,], [1, ,, respectively], [,, respectively, 5], [respectively, 5, highest], [5, highest, Priority], [highest, Priority, .]]

>> Noun Phrases are: 
[Their Priorities, highest Priority]

>> Named Entities are: 
[('3', 'CARDINAL'), ('5', 'DATE'), ('4', 'DATE'), ('1', 'CARDINAL'), ('5', 'CARDINAL')]


============================ Sentence 323 =============================

Find the average turnaround time and average waiting time for Round Robin (quantum time=3) and Priority Scheduling algorithm. 


>> Tokens are: 
[Find, average, turnaround, time, average, waiting, time, Round, Robin, (, quantum, time=3, ), Priority, Scheduling, algorithm, .] 

>> PoS Tags are: 
[('Find', 'VERB'), ('average', 'ADJ'), ('turnaround', 'NOUN'), ('time', 'NOUN'), ('average', 'ADJ'), ('waiting', 'VERB'), ('time', 'NOUN'), ('Round', 'PROPN'), ('Robin', 'PROPN'), ('(', 'PUNCT'), ('quantum', 'NOUN'), ('time=3', 'PROPN'), (')', 'PUNCT'), ('Priority', 'PROPN'), ('Scheduling', 'PROPN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Find', 'ROOT'), ('average', 'amod'), ('turnaround', 'compound'), ('time', 'dobj'), ('average', 'amod'), ('waiting', 'amod'), ('time', 'conj'), ('Round', 'compound'), ('Robin', 'pobj'), ('(', 'punct'), ('quantum', 'compound'), ('time=3', 'appos'), (')', 'punct'), ('Priority', 'compound'), ('Scheduling', 'compound'), ('algorithm', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Find, average], [average, turnaround], [turnaround, time], [time, average], [average, waiting], [waiting, time], [time, Round], [Round, Robin], [Robin, (], [(, quantum], [quantum, time=3], [time=3, )], [), Priority], [Priority, Scheduling], [Scheduling, algorithm], [algorithm, .]]

>> Trigrams: 
[[Find, average, turnaround], [average, turnaround, time], [turnaround, time, average], [time, average, waiting], [average, waiting, time], [waiting, time, Round], [time, Round, Robin], [Round, Robin, (], [Robin, (, quantum], [(, quantum, time=3], [quantum, time=3, )], [time=3, ), Priority], [), Priority, Scheduling], [Priority, Scheduling, algorithm], [Scheduling, algorithm, .]]

>> Noun Phrases are: 
[the average turnaround time, average waiting time, Round Robin, (quantum time=3, Priority Scheduling algorithm]

>> Named Entities are: 
[('Round Robin', 'PERSON')]


============================ Sentence 324 =============================

Consider the processes P1, P2, P3, P4 with burst time is 21, 3, 6 and 2 respectively, arrives for execution in the same order, with arrival time 0, draw GANTT chart and find the average waiting time using the FCFS and SJF scheduling algorithm. 


>> Tokens are: 
[Consider, processes, P1, ,, P2, ,, P3, ,, P4, burst, time, 21, ,, 3, ,, 6, 2, respectively, ,, arrives, execution, order, ,, arrival, time, 0, ,, draw, GANTT, chart, find, average, waiting, time, FCFS, SJF, scheduling, algorithm, .] 

>> PoS Tags are: 
[('Consider', 'VERB'), ('processes', 'NOUN'), ('P1', 'PROPN'), (',', 'PUNCT'), ('P2', 'PROPN'), (',', 'PUNCT'), ('P3', 'PROPN'), (',', 'PUNCT'), ('P4', 'PROPN'), ('burst', 'ADJ'), ('time', 'NOUN'), ('21', 'NUM'), (',', 'PUNCT'), ('3', 'NUM'), (',', 'PUNCT'), ('6', 'NUM'), ('2', 'NUM'), ('respectively', 'ADV'), (',', 'PUNCT'), ('arrives', 'VERB'), ('execution', 'NOUN'), ('order', 'NOUN'), (',', 'PUNCT'), ('arrival', 'NOUN'), ('time', 'NOUN'), ('0', 'NUM'), (',', 'PUNCT'), ('draw', 'VERB'), ('GANTT', 'PROPN'), ('chart', 'NOUN'), ('find', 'VERB'), ('average', 'ADJ'), ('waiting', 'VERB'), ('time', 'NOUN'), ('FCFS', 'PROPN'), ('SJF', 'PROPN'), ('scheduling', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consider', 'csubj'), ('processes', 'dobj'), ('P1', 'appos'), (',', 'punct'), ('P2', 'conj'), (',', 'punct'), ('P3', 'conj'), (',', 'punct'), ('P4', 'appos'), ('burst', 'amod'), ('time', 'pobj'), ('21', 'attr'), (',', 'punct'), ('3', 'appos'), (',', 'punct'), ('6', 'conj'), ('2', 'conj'), ('respectively', 'advmod'), (',', 'punct'), ('arrives', 'conj'), ('execution', 'pobj'), ('order', 'pobj'), (',', 'punct'), ('arrival', 'compound'), ('time', 'pobj'), ('0', 'nummod'), (',', 'punct'), ('draw', 'conj'), ('GANTT', 'compound'), ('chart', 'dobj'), ('find', 'conj'), ('average', 'amod'), ('waiting', 'amod'), ('time', 'dobj'), ('FCFS', 'nmod'), ('SJF', 'compound'), ('scheduling', 'conj'), ('algorithm', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Consider, processes], [processes, P1], [P1, ,], [,, P2], [P2, ,], [,, P3], [P3, ,], [,, P4], [P4, burst], [burst, time], [time, 21], [21, ,], [,, 3], [3, ,], [,, 6], [6, 2], [2, respectively], [respectively, ,], [,, arrives], [arrives, execution], [execution, order], [order, ,], [,, arrival], [arrival, time], [time, 0], [0, ,], [,, draw], [draw, GANTT], [GANTT, chart], [chart, find], [find, average], [average, waiting], [waiting, time], [time, FCFS], [FCFS, SJF], [SJF, scheduling], [scheduling, algorithm], [algorithm, .]]

>> Trigrams: 
[[Consider, processes, P1], [processes, P1, ,], [P1, ,, P2], [,, P2, ,], [P2, ,, P3], [,, P3, ,], [P3, ,, P4], [,, P4, burst], [P4, burst, time], [burst, time, 21], [time, 21, ,], [21, ,, 3], [,, 3, ,], [3, ,, 6], [,, 6, 2], [6, 2, respectively], [2, respectively, ,], [respectively, ,, arrives], [,, arrives, execution], [arrives, execution, order], [execution, order, ,], [order, ,, arrival], [,, arrival, time], [arrival, time, 0], [time, 0, ,], [0, ,, draw], [,, draw, GANTT], [draw, GANTT, chart], [GANTT, chart, find], [chart, find, average], [find, average, waiting], [average, waiting, time], [waiting, time, FCFS], [time, FCFS, SJF], [FCFS, SJF, scheduling], [SJF, scheduling, algorithm], [scheduling, algorithm, .]]

>> Noun Phrases are: 
[the processes, P1, P2, P3, P4, burst time, execution, the same order, arrival time, GANTT chart, the average waiting time, the FCFS and SJF scheduling algorithm]

>> Named Entities are: 
[('21', 'DATE'), ('3', 'DATE'), ('6', 'DATE'), ('2', 'CARDINAL'), ('0', 'CARDINAL'), ('GANTT', 'ORG'), ('FCFS', 'ORG'), ('SJF', 'ORG')]


============================ Sentence 325 =============================

   Prof. Firoz A Sherasiya #3140702 (OS)      Unit 2 – Process and Threads Management ‹#›   


>> Tokens are: 
[   , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , ,   , Unit, 2, –, Process, Threads, Management, ‹#›,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'VERB'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('2', 'NUM'), ('–', 'PUNCT'), ('Process', 'PROPN'), ('Threads', 'PROPN'), ('Management', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'ccomp'), ('  ', 'punct'), ('Unit', 'appos'), ('2', 'nummod'), ('–', 'punct'), ('Process', 'nsubj'), ('Threads', 'compound'), ('Management', 'conj'), ('‹#›', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [,   ], [  , Unit], [Unit, 2], [2, –], [–, Process], [Process, Threads], [Threads, Management], [Management, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , ,   ], [,   , Unit], [  , Unit, 2], [Unit, 2, –], [2, –, Process], [–, Process, Threads], [Process, Threads, Management], [Threads, Management, ‹#›], [Management, ‹#›,  ]]

>> Noun Phrases are: 
[   Prof. Firoz, A Sherasiya, (OS, Unit, Process, Threads Management]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 326 =============================

Database Management Systems (DBMS) GTU # 3130703 firoz.sherasiya@darshan.ac.in 9879879861 


>> Tokens are: 
[Database, Management, Systems, (, DBMS, ), GTU, #, 3130703, firoz.sherasiya@darshan.ac.in, 9879879861] 

>> PoS Tags are: 
[('Database', 'PROPN'), ('Management', 'PROPN'), ('Systems', 'PROPN'), ('(', 'PUNCT'), ('DBMS', 'PROPN'), (')', 'PUNCT'), ('GTU', 'NOUN'), ('#', 'SYM'), ('3130703', 'NUM'), ('firoz.sherasiya@darshan.ac.in', 'NUM'), ('9879879861', 'NUM')] 

>> Dependency Tags are: 
[('Database', 'compound'), ('Management', 'compound'), ('Systems', 'nmod'), ('(', 'punct'), ('DBMS', 'appos'), (')', 'punct'), ('GTU', 'ROOT'), ('#', 'appos'), ('3130703', 'nummod'), ('firoz.sherasiya@darshan.ac.in', 'appos'), ('9879879861', 'punct')]

>> Bigrams: 
[[Database, Management], [Management, Systems], [Systems, (], [(, DBMS], [DBMS, )], [), GTU], [GTU, #], [#, 3130703], [3130703, firoz.sherasiya@darshan.ac.in], [firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Trigrams: 
[[Database, Management, Systems], [Management, Systems, (], [Systems, (, DBMS], [(, DBMS, )], [DBMS, ), GTU], [), GTU, #], [GTU, #, 3130703], [#, 3130703, firoz.sherasiya@darshan.ac.in], [3130703, firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Noun Phrases are: 
[DBMS]

>> Named Entities are: 
[('DBMS', 'ORG')]


============================ Sentence 327 =============================

Computer Engineering Department Prof. Firoz A Sherasiya   Darshan Institute of Engineering & Technology, Rajkot    Thank You                                  /docProps/thumbnail.jpeg 


>> Tokens are: 
[Computer, Engineering, Department, Prof., Firoz, Sherasiya,   , Darshan, Institute, Engineering, &, Technology, ,, Rajkot,    , Thank,                                  , /docProps, /, thumbnail.jpeg] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('  ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('   ', 'SPACE'), ('Thank', 'VERB'), ('                                 ', 'SPACE'), ('/docProps', 'X'), ('/', 'SYM'), ('thumbnail.jpeg', 'NOUN')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Engineering', 'compound'), ('Department', 'compound'), ('Prof.', 'compound'), ('Firoz', 'compound'), ('Sherasiya', 'nsubj'), ('  ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), (',', 'punct'), ('Rajkot', 'appos'), ('   ', 'nummod'), ('Thank', 'ROOT'), ('                                 ', 'npadvmod'), ('/docProps', 'punct'), ('/', 'punct'), ('thumbnail.jpeg', 'npadvmod')]

>> Bigrams: 
[[Computer, Engineering], [Engineering, Department], [Department, Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya,   ], [  , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ,], [,, Rajkot], [Rajkot,    ], [   , Thank], [Thank,                                  ], [                                 , /docProps], [/docProps, /], [/, thumbnail.jpeg]]

>> Trigrams: 
[[Computer, Engineering, Department], [Engineering, Department, Prof.], [Department, Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya,   ], [Sherasiya,   , Darshan], [  , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ,], [Technology, ,, Rajkot], [,, Rajkot,    ], [Rajkot,    , Thank], [   , Thank,                                  ], [Thank,                                  , /docProps], [                                 , /docProps, /], [/docProps, /, thumbnail.jpeg]]

>> Noun Phrases are: 
[Computer Engineering Department Prof. Firoz A Sherasiya, Darshan Institute, Engineering, Technology, Rajkot, You]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Darshan Institute of Engineering & Technology', 'ORG')]
