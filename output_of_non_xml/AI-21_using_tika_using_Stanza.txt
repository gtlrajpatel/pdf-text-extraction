

========================== Sentence 1 ===========================

 Django   1. What is Django? 

Tokens are: 
>> ['Django', '1', '.', 'What', 'is', 'Django', '?'] 

 UPOS tags are: 
>> [('Django', 'PROPN'), ('1', 'NUM'), ('.', 'PUNCT'), ('What', 'PRON'), ('is', 'AUX'), ('Django', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Django', 'NNP'), ('1', 'LS'), ('.', '.'), ('What', 'WP'), ('is', 'VBZ'), ('Django', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('Django', 'Django'), ('1', '1'), ('.', '.'), ('What', 'what'), ('is', 'be'), ('Django', 'Django'), ('?', '?')] 

 Dependency tags are: 
>> [(('Django', 'What'), 'vocative'), (('1', 'What'), 'nummod'), (('.', '1'), 'punct'), (('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('Django', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('Django', 'PERSON')]

========================== Sentence 2 ===========================

 · Django  is a free and open source web application framework written in Python. 

Tokens are: 
>> ['·', 'Django', 'is', 'a', 'free', 'and', 'open', 'source', 'web', 'application', 'framework', 'written', 'in', 'Python', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Django', 'PROPN'), ('is', 'AUX'), ('a', 'DET'), ('free', 'ADJ'), ('and', 'CCONJ'), ('open', 'ADJ'), ('source', 'NOUN'), ('web', 'NOUN'), ('application', 'NOUN'), ('framework', 'NOUN'), ('written', 'VERB'), ('in', 'ADP'), ('Python', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Django', 'NNP'), ('is', 'VBZ'), ('a', 'DT'), ('free', 'JJ'), ('and', 'CC'), ('open', 'JJ'), ('source', 'NN'), ('web', 'NN'), ('application', 'NN'), ('framework', 'NN'), ('written', 'VBN'), ('in', 'IN'), ('Python', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Django', 'Django'), ('is', 'be'), ('a', 'a'), ('free', 'free'), ('and', 'and'), ('open', 'open'), ('source', 'source'), ('web', 'web'), ('application', 'application'), ('framework', 'framework'), ('written', 'write'), ('in', 'in'), ('Python', 'python'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'framework'), 'punct'), (('Django', 'framework'), 'nsubj'), (('is', 'framework'), 'cop'), (('a', 'framework'), 'det'), (('free', 'framework'), 'amod'), (('and', 'open'), 'cc'), (('open', 'free'), 'conj'), (('source', 'framework'), 'compound'), (('web', 'application'), 'compound'), (('application', 'framework'), 'compound'), (('framework', 'root'), 'root'), (('written', 'framework'), 'acl'), (('in', 'Python'), 'case'), (('Python', 'written'), 'obl'), (('.', 'framework'), 'punct')]

 Named Entities are: 
>> [('Python', 'WORK_OF_ART')]

========================== Sentence 3 ===========================

 2. What is Web Framework? 

Tokens are: 
>> ['2', '.', 'What', 'is', 'Web', 'Framework', '?'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('.', 'PUNCT'), ('What', 'PRON'), ('is', 'AUX'), ('Web', 'PROPN'), ('Framework', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'LS'), ('.', '.'), ('What', 'WP'), ('is', 'VBZ'), ('Web', 'NNP'), ('Framework', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('2', '2'), ('.', '.'), ('What', 'what'), ('is', 'be'), ('Web', 'Web'), ('Framework', 'Framework'), ('?', '?')] 

 Dependency tags are: 
>> [(('2', 'What'), 'nummod'), (('.', '2'), 'punct'), (('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('Web', 'Framework'), 'compound'), (('Framework', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 4 ===========================

 · A web framework is a set of components that helps you to develop websites faster and easier. 

Tokens are: 
>> ['·', 'A', 'web', 'framework', 'is', 'a', 'set', 'of', 'components', 'that', 'helps', 'you', 'to', 'develop', 'websites', 'faster', 'and', 'easier', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('A', 'DET'), ('web', 'NOUN'), ('framework', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('components', 'NOUN'), ('that', 'PRON'), ('helps', 'VERB'), ('you', 'PRON'), ('to', 'PART'), ('develop', 'VERB'), ('websites', 'NOUN'), ('faster', 'ADV'), ('and', 'CCONJ'), ('easier', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('A', 'DT'), ('web', 'NN'), ('framework', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('components', 'NNS'), ('that', 'WDT'), ('helps', 'VBZ'), ('you', 'PRP'), ('to', 'TO'), ('develop', 'VB'), ('websites', 'NNS'), ('faster', 'RBR'), ('and', 'CC'), ('easier', 'JJR'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('A', 'a'), ('web', 'web'), ('framework', 'framework'), ('is', 'be'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('components', 'component'), ('that', 'that'), ('helps', 'help'), ('you', 'you'), ('to', 'to'), ('develop', 'develop'), ('websites', 'website'), ('faster', 'fast'), ('and', 'and'), ('easier', 'easy'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'set'), 'punct'), (('A', 'framework'), 'det'), (('web', 'framework'), 'compound'), (('framework', 'set'), 'nsubj'), (('is', 'set'), 'cop'), (('a', 'set'), 'det'), (('set', 'root'), 'root'), (('of', 'components'), 'case'), (('components', 'set'), 'nmod'), (('that', 'helps'), 'nsubj'), (('helps', 'components'), 'acl:relcl'), (('you', 'helps'), 'obj'), (('to', 'develop'), 'mark'), (('develop', 'helps'), 'xcomp'), (('websites', 'develop'), 'obj'), (('faster', 'develop'), 'advmod'), (('and', 'easier'), 'cc'), (('easier', 'faster'), 'conj'), (('.', 'set'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 When you're building a website, you always need a similar set of components: a way to handle user authentication (signing up, signing in, signing out), a management panel for your website, forms, a way to upload files, etc.  · Luckily, Developers build web frameworks that give you ready made components. 

Tokens are: 
>> ['When', 'you', "'re", 'building', 'a', 'website', ',', 'you', 'always', 'need', 'a', 'similar', 'set', 'of', 'components', ':', 'a', 'way', 'to', 'handle', 'user', 'authentication', '(', 'signing', 'up', ',', 'signing', 'in', ',', 'signing', 'out', ')', ',', 'a', 'management', 'panel', 'for', 'your', 'website', ',', 'forms', ',', 'a', 'way', 'to', 'upload', 'files', ',', 'etc.', '·', 'Luckily', ',', 'Developers', 'build', 'web', 'frameworks', 'that', 'give', 'you', 'ready', 'made', 'components', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('you', 'PRON'), ("'re", 'AUX'), ('building', 'VERB'), ('a', 'DET'), ('website', 'NOUN'), (',', 'PUNCT'), ('you', 'PRON'), ('always', 'ADV'), ('need', 'VERB'), ('a', 'DET'), ('similar', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('components', 'NOUN'), (':', 'PUNCT'), ('a', 'DET'), ('way', 'NOUN'), ('to', 'PART'), ('handle', 'VERB'), ('user', 'NOUN'), ('authentication', 'NOUN'), ('(', 'PUNCT'), ('signing', 'VERB'), ('up', 'ADP'), (',', 'PUNCT'), ('signing', 'VERB'), ('in', 'ADP'), (',', 'PUNCT'), ('signing', 'VERB'), ('out', 'ADP'), (')', 'PUNCT'), (',', 'PUNCT'), ('a', 'DET'), ('management', 'NOUN'), ('panel', 'NOUN'), ('for', 'ADP'), ('your', 'PRON'), ('website', 'NOUN'), (',', 'PUNCT'), ('forms', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('way', 'NOUN'), ('to', 'PART'), ('upload', 'VERB'), ('files', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X'), ('·', 'PUNCT'), ('Luckily', 'ADV'), (',', 'PUNCT'), ('Developers', 'NOUN'), ('build', 'VERB'), ('web', 'NOUN'), ('frameworks', 'NOUN'), ('that', 'PRON'), ('give', 'VERB'), ('you', 'PRON'), ('ready', 'ADJ'), ('made', 'VERB'), ('components', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('you', 'PRP'), ("'re", 'VBP'), ('building', 'VBG'), ('a', 'DT'), ('website', 'NN'), (',', ','), ('you', 'PRP'), ('always', 'RB'), ('need', 'VBP'), ('a', 'DT'), ('similar', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('components', 'NNS'), (':', ':'), ('a', 'DT'), ('way', 'NN'), ('to', 'TO'), ('handle', 'VB'), ('user', 'NN'), ('authentication', 'NN'), ('(', '-LRB-'), ('signing', 'VBG'), ('up', 'RP'), (',', ','), ('signing', 'VBG'), ('in', 'RP'), (',', ','), ('signing', 'VBG'), ('out', 'RP'), (')', '-RRB-'), (',', ','), ('a', 'DT'), ('management', 'NN'), ('panel', 'NN'), ('for', 'IN'), ('your', 'PRP$'), ('website', 'NN'), (',', ','), ('forms', 'NNS'), (',', ','), ('a', 'DT'), ('way', 'NN'), ('to', 'TO'), ('upload', 'VB'), ('files', 'NNS'), (',', ','), ('etc.', 'FW'), ('·', 'NFP'), ('Luckily', 'RB'), (',', ','), ('Developers', 'NNS'), ('build', 'VBP'), ('web', 'NN'), ('frameworks', 'NNS'), ('that', 'WDT'), ('give', 'VBP'), ('you', 'PRP'), ('ready', 'JJ'), ('made', 'VBN'), ('components', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('you', 'you'), ("'re", 'be'), ('building', 'build'), ('a', 'a'), ('website', 'website'), (',', ','), ('you', 'you'), ('always', 'always'), ('need', 'need'), ('a', 'a'), ('similar', 'similar'), ('set', 'set'), ('of', 'of'), ('components', 'component'), (':', ':'), ('a', 'a'), ('way', 'way'), ('to', 'to'), ('handle', 'handle'), ('user', 'user'), ('authentication', 'authentication'), ('(', '('), ('signing', 'sign'), ('up', 'up'), (',', ','), ('signing', 'sign'), ('in', 'in'), (',', ','), ('signing', 'sign'), ('out', 'out'), (')', ')'), (',', ','), ('a', 'a'), ('management', 'management'), ('panel', 'panel'), ('for', 'for'), ('your', 'you'), ('website', 'website'), (',', ','), ('forms', 'form'), (',', ','), ('a', 'a'), ('way', 'way'), ('to', 'to'), ('upload', 'upload'), ('files', 'file'), (',', ','), ('etc.', 'etc.'), ('·', '·'), ('Luckily', 'luckily'), (',', ','), ('Developers', 'developer'), ('build', 'build'), ('web', 'web'), ('frameworks', 'framework'), ('that', 'that'), ('give', 'give'), ('you', 'you'), ('ready', 'ready'), ('made', 'make'), ('components', 'component'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'building'), 'mark'), (('you', 'building'), 'nsubj'), (("'re", 'building'), 'aux'), (('building', 'need'), 'advcl'), (('a', 'website'), 'det'), (('website', 'building'), 'obj'), ((',', 'building'), 'punct'), (('you', 'need'), 'nsubj'), (('always', 'need'), 'advmod'), (('need', 'root'), 'root'), (('a', 'set'), 'det'), (('similar', 'set'), 'amod'), (('set', 'need'), 'obj'), (('of', 'components'), 'case'), (('components', 'set'), 'nmod'), ((':', 'way'), 'punct'), (('a', 'way'), 'det'), (('way', 'set'), 'appos'), (('to', 'handle'), 'mark'), (('handle', 'way'), 'acl'), (('user', 'authentication'), 'compound'), (('authentication', 'handle'), 'obj'), (('(', 'signing'), 'punct'), (('signing', 'way'), 'acl'), (('up', 'signing'), 'compound:prt'), ((',', 'signing'), 'punct'), (('signing', 'signing'), 'conj'), (('in', 'signing'), 'advmod'), ((',', 'signing'), 'punct'), (('signing', 'signing'), 'conj'), (('out', 'signing'), 'compound:prt'), ((')', 'signing'), 'punct'), ((',', 'panel'), 'punct'), (('a', 'panel'), 'det'), (('management', 'panel'), 'compound'), (('panel', 'set'), 'conj'), (('for', 'website'), 'case'), (('your', 'website'), 'nmod:poss'), (('website', 'panel'), 'nmod'), ((',', 'forms'), 'punct'), (('forms', 'website'), 'conj'), ((',', 'way'), 'punct'), (('a', 'way'), 'det'), (('way', 'website'), 'conj'), (('to', 'upload'), 'mark'), (('upload', 'way'), 'acl'), (('files', 'upload'), 'obj'), ((',', 'etc.'), 'punct'), (('etc.', 'files'), 'conj'), (('·', 'build'), 'punct'), (('Luckily', 'build'), 'advmod'), ((',', 'build'), 'punct'), (('Developers', 'build'), 'nsubj'), (('build', 'need'), 'parataxis'), (('web', 'frameworks'), 'compound'), (('frameworks', 'build'), 'obj'), (('that', 'give'), 'nsubj'), (('give', 'frameworks'), 'acl:relcl'), (('you', 'give'), 'iobj'), (('ready', 'components'), 'amod'), (('made', 'components'), 'amod'), (('components', 'give'), 'obj'), (('.', 'need'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 · Frameworks exist to save you from having to reinvent the wheel and to help alleviate some of the overhead when you’re building a new site. 

Tokens are: 
>> ['·', 'Frameworks', 'exist', 'to', 'save', 'you', 'from', 'having', 'to', 'reinvent', 'the', 'wheel', 'and', 'to', 'help', 'alleviate', 'some', 'of', 'the', 'overhead', 'when', 'you', '’re', 'building', 'a', 'new', 'site', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Frameworks', 'NOUN'), ('exist', 'VERB'), ('to', 'PART'), ('save', 'VERB'), ('you', 'PRON'), ('from', 'SCONJ'), ('having', 'VERB'), ('to', 'PART'), ('reinvent', 'VERB'), ('the', 'DET'), ('wheel', 'NOUN'), ('and', 'CCONJ'), ('to', 'PART'), ('help', 'VERB'), ('alleviate', 'VERB'), ('some', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('overhead', 'NOUN'), ('when', 'SCONJ'), ('you', 'PRON'), ('’re', 'AUX'), ('building', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('site', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Frameworks', 'NNS'), ('exist', 'VBP'), ('to', 'TO'), ('save', 'VB'), ('you', 'PRP'), ('from', 'IN'), ('having', 'VBG'), ('to', 'TO'), ('reinvent', 'VB'), ('the', 'DT'), ('wheel', 'NN'), ('and', 'CC'), ('to', 'TO'), ('help', 'VB'), ('alleviate', 'VB'), ('some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('overhead', 'NN'), ('when', 'WRB'), ('you', 'PRP'), ('’re', 'VBP'), ('building', 'VBG'), ('a', 'DT'), ('new', 'JJ'), ('site', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Frameworks', 'framework'), ('exist', 'exist'), ('to', 'to'), ('save', 'save'), ('you', 'you'), ('from', 'from'), ('having', 'have'), ('to', 'to'), ('reinvent', 'reinvent'), ('the', 'the'), ('wheel', 'wheel'), ('and', 'and'), ('to', 'to'), ('help', 'help'), ('alleviate', 'alleviate'), ('some', 'some'), ('of', 'of'), ('the', 'the'), ('overhead', 'overhead'), ('when', 'when'), ('you', 'you'), ('’re', 'be'), ('building', 'build'), ('a', 'a'), ('new', 'new'), ('site', 'site'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'exist'), 'punct'), (('Frameworks', 'exist'), 'nsubj'), (('exist', 'root'), 'root'), (('to', 'save'), 'mark'), (('save', 'exist'), 'xcomp'), (('you', 'save'), 'obj'), (('from', 'having'), 'mark'), (('having', 'save'), 'advcl'), (('to', 'reinvent'), 'mark'), (('reinvent', 'having'), 'xcomp'), (('the', 'wheel'), 'det'), (('wheel', 'reinvent'), 'obj'), (('and', 'help'), 'cc'), (('to', 'help'), 'mark'), (('help', 'reinvent'), 'conj'), (('alleviate', 'help'), 'xcomp'), (('some', 'alleviate'), 'obj'), (('of', 'overhead'), 'case'), (('the', 'overhead'), 'det'), (('overhead', 'some'), 'nmod'), (('when', 'building'), 'mark'), (('you', 'building'), 'nsubj'), (('’re', 'building'), 'aux'), (('building', 'alleviate'), 'advcl'), (('a', 'site'), 'det'), (('new', 'site'), 'amod'), (('site', 'building'), 'obj'), (('.', 'exist'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 3. Why Django? 

Tokens are: 
>> ['3', '.', 'Why', 'Django', '?'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('.', 'PUNCT'), ('Why', 'ADV'), ('Django', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'LS'), ('.', '.'), ('Why', 'WRB'), ('Django', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('3', '3'), ('.', '.'), ('Why', 'why'), ('Django', 'Django'), ('?', '?')] 

 Dependency tags are: 
>> [(('3', 'Django'), 'nummod'), (('.', '3'), 'punct'), (('Why', 'Django'), 'advmod'), (('Django', 'root'), 'root'), (('?', 'Django'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 9 ===========================

 · With Django, you can take Web applications from concept to launch in a matter of hours. 

Tokens are: 
>> ['·', 'With', 'Django', ',', 'you', 'can', 'take', 'Web', 'applications', 'from', 'concept', 'to', 'launch', 'in', 'a', 'matter', 'of', 'hours', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('With', 'ADP'), ('Django', 'PROPN'), (',', 'PUNCT'), ('you', 'PRON'), ('can', 'AUX'), ('take', 'VERB'), ('Web', 'NOUN'), ('applications', 'NOUN'), ('from', 'ADP'), ('concept', 'NOUN'), ('to', 'PART'), ('launch', 'VERB'), ('in', 'ADP'), ('a', 'DET'), ('matter', 'NOUN'), ('of', 'ADP'), ('hours', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('With', 'IN'), ('Django', 'NNP'), (',', ','), ('you', 'PRP'), ('can', 'MD'), ('take', 'VB'), ('Web', 'NN'), ('applications', 'NNS'), ('from', 'IN'), ('concept', 'NN'), ('to', 'TO'), ('launch', 'VB'), ('in', 'IN'), ('a', 'DT'), ('matter', 'NN'), ('of', 'IN'), ('hours', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('With', 'with'), ('Django', 'Django'), (',', ','), ('you', 'you'), ('can', 'can'), ('take', 'take'), ('Web', 'web'), ('applications', 'application'), ('from', 'from'), ('concept', 'concept'), ('to', 'to'), ('launch', 'launch'), ('in', 'in'), ('a', 'a'), ('matter', 'matter'), ('of', 'of'), ('hours', 'hour'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'take'), 'punct'), (('With', 'Django'), 'case'), (('Django', 'take'), 'obl'), ((',', 'take'), 'punct'), (('you', 'take'), 'nsubj'), (('can', 'take'), 'aux'), (('take', 'root'), 'root'), (('Web', 'applications'), 'compound'), (('applications', 'take'), 'obj'), (('from', 'concept'), 'case'), (('concept', 'take'), 'obl'), (('to', 'launch'), 'mark'), (('launch', 'take'), 'advcl'), (('in', 'matter'), 'case'), (('a', 'matter'), 'det'), (('matter', 'launch'), 'obl'), (('of', 'hours'), 'case'), (('hours', 'matter'), 'nmod'), (('.', 'take'), 'punct')]

 Named Entities are: 
>> [('Django', 'PERSON'), ('a matter of hours', 'TIME')]

========================== Sentence 10 ===========================

 Django takes care of much of the hassle of Web development, so you can focus on writing your app without needing to reinvent the wheel. 

Tokens are: 
>> ['Django', 'takes', 'care', 'of', 'much', 'of', 'the', 'hassle', 'of', 'Web', 'development', ',', 'so', 'you', 'can', 'focus', 'on', 'writing', 'your', 'app', 'without', 'needing', 'to', 'reinvent', 'the', 'wheel', '.'] 

 UPOS tags are: 
>> [('Django', 'PROPN'), ('takes', 'VERB'), ('care', 'NOUN'), ('of', 'ADP'), ('much', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('hassle', 'NOUN'), ('of', 'ADP'), ('Web', 'NOUN'), ('development', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('you', 'PRON'), ('can', 'AUX'), ('focus', 'VERB'), ('on', 'SCONJ'), ('writing', 'VERB'), ('your', 'PRON'), ('app', 'NOUN'), ('without', 'SCONJ'), ('needing', 'VERB'), ('to', 'PART'), ('reinvent', 'VERB'), ('the', 'DET'), ('wheel', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Django', 'NNP'), ('takes', 'VBZ'), ('care', 'NN'), ('of', 'IN'), ('much', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('hassle', 'NN'), ('of', 'IN'), ('Web', 'NN'), ('development', 'NN'), (',', ','), ('so', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('focus', 'VB'), ('on', 'IN'), ('writing', 'VBG'), ('your', 'PRP$'), ('app', 'NN'), ('without', 'IN'), ('needing', 'VBG'), ('to', 'TO'), ('reinvent', 'VB'), ('the', 'DT'), ('wheel', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Django', 'Django'), ('takes', 'take'), ('care', 'care'), ('of', 'of'), ('much', 'much'), ('of', 'of'), ('the', 'the'), ('hassle', 'hassle'), ('of', 'of'), ('Web', 'web'), ('development', 'development'), (',', ','), ('so', 'so'), ('you', 'you'), ('can', 'can'), ('focus', 'focus'), ('on', 'on'), ('writing', 'write'), ('your', 'you'), ('app', 'app'), ('without', 'without'), ('needing', 'need'), ('to', 'to'), ('reinvent', 'reinvent'), ('the', 'the'), ('wheel', 'wheel'), ('.', '.')] 

 Dependency tags are: 
>> [(('Django', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('care', 'takes'), 'obj'), (('of', 'much'), 'case'), (('much', 'takes'), 'obl'), (('of', 'hassle'), 'case'), (('the', 'hassle'), 'det'), (('hassle', 'much'), 'obl'), (('of', 'development'), 'case'), (('Web', 'development'), 'compound'), (('development', 'hassle'), 'nmod'), ((',', 'focus'), 'punct'), (('so', 'focus'), 'advmod'), (('you', 'focus'), 'nsubj'), (('can', 'focus'), 'aux'), (('focus', 'takes'), 'advcl'), (('on', 'writing'), 'mark'), (('writing', 'focus'), 'advcl'), (('your', 'app'), 'nmod:poss'), (('app', 'writing'), 'obj'), (('without', 'needing'), 'mark'), (('needing', 'writing'), 'advcl'), (('to', 'reinvent'), 'mark'), (('reinvent', 'needing'), 'xcomp'), (('the', 'wheel'), 'det'), (('wheel', 'reinvent'), 'obj'), (('.', 'takes'), 'punct')]

 Named Entities are: 
>> [('Django', 'PERSON')]

========================== Sentence 11 ===========================

 It’s free and open source. 

Tokens are: 
>> ['It', '’s', 'free', 'and', 'open', 'source', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('’s', 'AUX'), ('free', 'ADJ'), ('and', 'CCONJ'), ('open', 'ADJ'), ('source', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('’s', 'VBZ'), ('free', 'JJ'), ('and', 'CC'), ('open', 'JJ'), ('source', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('’s', 'be'), ('free', 'free'), ('and', 'and'), ('open', 'open'), ('source', 'source'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'free'), 'nsubj'), (('’s', 'free'), 'cop'), (('free', 'root'), 'root'), (('and', 'source'), 'cc'), (('open', 'source'), 'amod'), (('source', 'free'), 'conj'), (('.', 'free'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 · Ridiculously Fast: Django was designed to help developers to take applications from  concept to completion as quickly as possible. 

Tokens are: 
>> ['·', 'Ridiculously', 'Fast', ':', 'Django', 'was', 'designed', 'to', 'help', 'developers', 'to', 'take', 'applications', 'from', 'concept', 'to', 'completion', 'as', 'quickly', 'as', 'possible', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Ridiculously', 'ADV'), ('Fast', 'ADJ'), (':', 'PUNCT'), ('Django', 'PROPN'), ('was', 'AUX'), ('designed', 'VERB'), ('to', 'PART'), ('help', 'VERB'), ('developers', 'NOUN'), ('to', 'PART'), ('take', 'VERB'), ('applications', 'NOUN'), ('from', 'ADP'), ('concept', 'NOUN'), ('to', 'ADP'), ('completion', 'NOUN'), ('as', 'ADV'), ('quickly', 'ADV'), ('as', 'SCONJ'), ('possible', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Ridiculously', 'RB'), ('Fast', 'JJ'), (':', ':'), ('Django', 'NNP'), ('was', 'VBD'), ('designed', 'VBN'), ('to', 'TO'), ('help', 'VB'), ('developers', 'NNS'), ('to', 'TO'), ('take', 'VB'), ('applications', 'NNS'), ('from', 'IN'), ('concept', 'NN'), ('to', 'IN'), ('completion', 'NN'), ('as', 'RB'), ('quickly', 'RB'), ('as', 'IN'), ('possible', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Ridiculously', 'ridiculously'), ('Fast', 'fast'), (':', ':'), ('Django', 'Django'), ('was', 'be'), ('designed', 'design'), ('to', 'to'), ('help', 'help'), ('developers', 'developer'), ('to', 'to'), ('take', 'take'), ('applications', 'application'), ('from', 'from'), ('concept', 'concept'), ('to', 'to'), ('completion', 'completion'), ('as', 'as'), ('quickly', 'quickly'), ('as', 'as'), ('possible', 'possible'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Fast'), 'punct'), (('Ridiculously', 'Fast'), 'advmod'), (('Fast', 'root'), 'root'), ((':', 'Fast'), 'punct'), (('Django', 'designed'), 'nsubj:pass'), (('was', 'designed'), 'aux:pass'), (('designed', 'Fast'), 'parataxis'), (('to', 'help'), 'mark'), (('help', 'designed'), 'xcomp'), (('developers', 'help'), 'obj'), (('to', 'take'), 'mark'), (('take', 'help'), 'xcomp'), (('applications', 'take'), 'obj'), (('from', 'concept'), 'case'), (('concept', 'take'), 'obl'), (('to', 'completion'), 'case'), (('completion', 'concept'), 'nmod'), (('as', 'quickly'), 'advmod'), (('quickly', 'take'), 'advmod'), (('as', 'possible'), 'mark'), (('possible', 'quickly'), 'advcl'), (('.', 'Fast'), 'punct')]

 Named Entities are: 
>> [('Django', 'GPE')]

========================== Sentence 13 ===========================

 · Fully Loaded: Django includes dozens of extra features you can use to handle  common Web development tasks. 

Tokens are: 
>> ['·', 'Fully', 'Loaded', ':', 'Django', 'includes', 'dozens', 'of', 'extra', 'features', 'you', 'can', 'use', 'to', 'handle', 'common', 'Web', 'development', 'tasks', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Fully', 'ADV'), ('Loaded', 'VERB'), (':', 'PUNCT'), ('Django', 'PROPN'), ('includes', 'VERB'), ('dozens', 'NOUN'), ('of', 'ADP'), ('extra', 'ADJ'), ('features', 'NOUN'), ('you', 'PRON'), ('can', 'AUX'), ('use', 'VERB'), ('to', 'PART'), ('handle', 'VERB'), ('common', 'ADJ'), ('Web', 'NOUN'), ('development', 'NOUN'), ('tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Fully', 'RB'), ('Loaded', 'VBN'), (':', ':'), ('Django', 'NNP'), ('includes', 'VBZ'), ('dozens', 'NNS'), ('of', 'IN'), ('extra', 'JJ'), ('features', 'NNS'), ('you', 'PRP'), ('can', 'MD'), ('use', 'VB'), ('to', 'TO'), ('handle', 'VB'), ('common', 'JJ'), ('Web', 'NN'), ('development', 'NN'), ('tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Fully', 'fully'), ('Loaded', 'load'), (':', ':'), ('Django', 'Django'), ('includes', 'include'), ('dozens', 'dozen'), ('of', 'of'), ('extra', 'extra'), ('features', 'feature'), ('you', 'you'), ('can', 'can'), ('use', 'use'), ('to', 'to'), ('handle', 'handle'), ('common', 'common'), ('Web', 'web'), ('development', 'development'), ('tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Loaded'), 'punct'), (('Fully', 'Loaded'), 'advmod'), (('Loaded', 'root'), 'root'), ((':', 'Loaded'), 'punct'), (('Django', 'includes'), 'nsubj'), (('includes', 'Loaded'), 'parataxis'), (('dozens', 'includes'), 'obj'), (('of', 'features'), 'case'), (('extra', 'features'), 'amod'), (('features', 'dozens'), 'nmod'), (('you', 'use'), 'nsubj'), (('can', 'use'), 'aux'), (('use', 'features'), 'acl:relcl'), (('to', 'handle'), 'mark'), (('handle', 'use'), 'xcomp'), (('common', 'tasks'), 'amod'), (('Web', 'development'), 'compound'), (('development', 'tasks'), 'compound'), (('tasks', 'handle'), 'obj'), (('.', 'Loaded'), 'punct')]

 Named Entities are: 
>> [('Django', 'ORG'), ('dozens', 'CARDINAL')]

========================== Sentence 14 ===========================

 Django takes care of user  authentication, content administration, site maps, RSS feeds, and many  more tasks — right out of the box. 

Tokens are: 
>> ['Django', 'takes', 'care', 'of', 'user', 'authentication', ',', 'content', 'administration', ',', 'site', 'maps', ',', 'RSS', 'feeds', ',', 'and', 'many', 'more', 'tasks', '—', 'right', 'out', 'of', 'the', 'box', '.'] 

 UPOS tags are: 
>> [('Django', 'PROPN'), ('takes', 'VERB'), ('care', 'NOUN'), ('of', 'ADP'), ('user', 'NOUN'), ('authentication', 'NOUN'), (',', 'PUNCT'), ('content', 'NOUN'), ('administration', 'NOUN'), (',', 'PUNCT'), ('site', 'NOUN'), ('maps', 'NOUN'), (',', 'PUNCT'), ('RSS', 'NOUN'), ('feeds', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('many', 'ADJ'), ('more', 'ADJ'), ('tasks', 'NOUN'), ('—', 'PUNCT'), ('right', 'ADV'), ('out', 'ADP'), ('of', 'ADP'), ('the', 'DET'), ('box', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Django', 'NNP'), ('takes', 'VBZ'), ('care', 'NN'), ('of', 'IN'), ('user', 'NN'), ('authentication', 'NN'), (',', ','), ('content', 'NN'), ('administration', 'NN'), (',', ','), ('site', 'NN'), ('maps', 'NNS'), (',', ','), ('RSS', 'NN'), ('feeds', 'NNS'), (',', ','), ('and', 'CC'), ('many', 'JJ'), ('more', 'JJR'), ('tasks', 'NNS'), ('—', ':'), ('right', 'RB'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('box', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Django', 'Django'), ('takes', 'take'), ('care', 'care'), ('of', 'of'), ('user', 'user'), ('authentication', 'authentication'), (',', ','), ('content', 'content'), ('administration', 'administration'), (',', ','), ('site', 'site'), ('maps', 'map'), (',', ','), ('RSS', 'RSS'), ('feeds', 'feed'), (',', ','), ('and', 'and'), ('many', 'many'), ('more', 'more'), ('tasks', 'task'), ('—', '—'), ('right', 'right'), ('out', 'out'), ('of', 'of'), ('the', 'the'), ('box', 'box'), ('.', '.')] 

 Dependency tags are: 
>> [(('Django', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('care', 'takes'), 'obj'), (('of', 'authentication'), 'case'), (('user', 'authentication'), 'compound'), (('authentication', 'takes'), 'obl'), ((',', 'administration'), 'punct'), (('content', 'administration'), 'compound'), (('administration', 'authentication'), 'conj'), ((',', 'maps'), 'punct'), (('site', 'maps'), 'compound'), (('maps', 'authentication'), 'conj'), ((',', 'feeds'), 'punct'), (('RSS', 'feeds'), 'compound'), (('feeds', 'authentication'), 'conj'), ((',', 'tasks'), 'punct'), (('and', 'tasks'), 'cc'), (('many', 'tasks'), 'amod'), (('more', 'tasks'), 'amod'), (('tasks', 'authentication'), 'conj'), (('—', 'box'), 'punct'), (('right', 'box'), 'advmod'), (('out', 'box'), 'case'), (('of', 'box'), 'case'), (('the', 'box'), 'det'), (('box', 'tasks'), 'nmod'), (('.', 'takes'), 'punct')]

 Named Entities are: 
>> [('Django', 'ORG')]

========================== Sentence 15 ===========================

 · Reassuringly secure: Django takes security seriously and helps developers to avoid many common security mistakes, such as SQL injection, cross-site scripting, cross-site request forgery and clickjacking. 

Tokens are: 
>> ['·', 'Reassuringly', 'secure', ':', 'Django', 'takes', 'security', 'seriously', 'and', 'helps', 'developers', 'to', 'avoid', 'many', 'common', 'security', 'mistakes', ',', 'such', 'as', 'SQL', 'injection', ',', 'cross', '-', 'site', 'scripting', ',', 'cross', '-', 'site', 'request', 'forgery', 'and', 'clickjacking', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Reassuringly', 'ADV'), ('secure', 'ADJ'), (':', 'PUNCT'), ('Django', 'PROPN'), ('takes', 'VERB'), ('security', 'NOUN'), ('seriously', 'ADV'), ('and', 'CCONJ'), ('helps', 'VERB'), ('developers', 'NOUN'), ('to', 'PART'), ('avoid', 'VERB'), ('many', 'ADJ'), ('common', 'ADJ'), ('security', 'NOUN'), ('mistakes', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('SQL', 'PROPN'), ('injection', 'NOUN'), (',', 'PUNCT'), ('cross', 'NOUN'), ('-', 'PUNCT'), ('site', 'NOUN'), ('scripting', 'NOUN'), (',', 'PUNCT'), ('cross', 'NOUN'), ('-', 'PUNCT'), ('site', 'NOUN'), ('request', 'NOUN'), ('forgery', 'NOUN'), ('and', 'CCONJ'), ('clickjacking', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Reassuringly', 'RB'), ('secure', 'JJ'), (':', ':'), ('Django', 'NNP'), ('takes', 'VBZ'), ('security', 'NN'), ('seriously', 'RB'), ('and', 'CC'), ('helps', 'VBZ'), ('developers', 'NNS'), ('to', 'TO'), ('avoid', 'VB'), ('many', 'JJ'), ('common', 'JJ'), ('security', 'NN'), ('mistakes', 'NNS'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('SQL', 'NNP'), ('injection', 'NN'), (',', ','), ('cross', 'NN'), ('-', 'HYPH'), ('site', 'NN'), ('scripting', 'NN'), (',', ','), ('cross', 'NN'), ('-', 'HYPH'), ('site', 'NN'), ('request', 'NN'), ('forgery', 'NN'), ('and', 'CC'), ('clickjacking', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Reassuringly', 'reassuringly'), ('secure', 'secure'), (':', ':'), ('Django', 'Django'), ('takes', 'take'), ('security', 'security'), ('seriously', 'seriously'), ('and', 'and'), ('helps', 'help'), ('developers', 'developer'), ('to', 'to'), ('avoid', 'avoid'), ('many', 'many'), ('common', 'common'), ('security', 'security'), ('mistakes', 'mistake'), (',', ','), ('such', 'such'), ('as', 'as'), ('SQL', 'sql'), ('injection', 'injection'), (',', ','), ('cross', 'cross'), ('-', '-'), ('site', 'site'), ('scripting', 'scripting'), (',', ','), ('cross', 'cross'), ('-', '-'), ('site', 'site'), ('request', 'request'), ('forgery', 'forgery'), ('and', 'and'), ('clickjacking', 'clickjacking'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'secure'), 'punct'), (('Reassuringly', 'secure'), 'advmod'), (('secure', 'root'), 'root'), ((':', 'secure'), 'punct'), (('Django', 'takes'), 'nsubj'), (('takes', 'secure'), 'parataxis'), (('security', 'takes'), 'obj'), (('seriously', 'takes'), 'advmod'), (('and', 'helps'), 'cc'), (('helps', 'takes'), 'conj'), (('developers', 'helps'), 'obj'), (('to', 'avoid'), 'mark'), (('avoid', 'helps'), 'xcomp'), (('many', 'mistakes'), 'amod'), (('common', 'mistakes'), 'amod'), (('security', 'mistakes'), 'compound'), (('mistakes', 'avoid'), 'obj'), ((',', 'injection'), 'punct'), (('such', 'injection'), 'case'), (('as', 'such'), 'fixed'), (('SQL', 'injection'), 'compound'), (('injection', 'mistakes'), 'nmod'), ((',', 'scripting'), 'punct'), (('cross', 'site'), 'compound'), (('-', 'site'), 'punct'), (('site', 'scripting'), 'compound'), (('scripting', 'injection'), 'conj'), ((',', 'forgery'), 'punct'), (('cross', 'site'), 'compound'), (('-', 'site'), 'punct'), (('site', 'request'), 'compound'), (('request', 'forgery'), 'compound'), (('forgery', 'injection'), 'conj'), (('and', 'clickjacking'), 'cc'), (('clickjacking', 'forgery'), 'conj'), (('.', 'secure'), 'punct')]

 Named Entities are: 
>> [('Django', 'ORG')]

========================== Sentence 16 ===========================

 Its user authentication system provides a secure way to manage user accounts and passwords. 

Tokens are: 
>> ['Its', 'user', 'authentication', 'system', 'provides', 'a', 'secure', 'way', 'to', 'manage', 'user', 'accounts', 'and', 'passwords', '.'] 

 UPOS tags are: 
>> [('Its', 'PRON'), ('user', 'NOUN'), ('authentication', 'NOUN'), ('system', 'NOUN'), ('provides', 'VERB'), ('a', 'DET'), ('secure', 'ADJ'), ('way', 'NOUN'), ('to', 'PART'), ('manage', 'VERB'), ('user', 'NOUN'), ('accounts', 'NOUN'), ('and', 'CCONJ'), ('passwords', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Its', 'PRP$'), ('user', 'NN'), ('authentication', 'NN'), ('system', 'NN'), ('provides', 'VBZ'), ('a', 'DT'), ('secure', 'JJ'), ('way', 'NN'), ('to', 'TO'), ('manage', 'VB'), ('user', 'NN'), ('accounts', 'NNS'), ('and', 'CC'), ('passwords', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Its', 'its'), ('user', 'user'), ('authentication', 'authentication'), ('system', 'system'), ('provides', 'provide'), ('a', 'a'), ('secure', 'secure'), ('way', 'way'), ('to', 'to'), ('manage', 'manage'), ('user', 'user'), ('accounts', 'account'), ('and', 'and'), ('passwords', 'password'), ('.', '.')] 

 Dependency tags are: 
>> [(('Its', 'system'), 'nmod:poss'), (('user', 'authentication'), 'compound'), (('authentication', 'system'), 'compound'), (('system', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('a', 'way'), 'det'), (('secure', 'way'), 'amod'), (('way', 'provides'), 'obj'), (('to', 'manage'), 'mark'), (('manage', 'way'), 'acl'), (('user', 'accounts'), 'compound'), (('accounts', 'manage'), 'obj'), (('and', 'passwords'), 'cc'), (('passwords', 'accounts'), 'conj'), (('.', 'provides'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 · Exceedingly scalable: Some of the busiest sites on the planet use Django’s ability to quickly and flexibly scale to meet the heaviest traffic demands. 

Tokens are: 
>> ['·', 'Exceedingly', 'scalable', ':', 'Some', 'of', 'the', 'busiest', 'sites', 'on', 'the', 'planet', 'use', 'Django', '’s', 'ability', 'to', 'quickly', 'and', 'flexibly', 'scale', 'to', 'meet', 'the', 'heaviest', 'traffic', 'demands', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Exceedingly', 'ADV'), ('scalable', 'ADJ'), (':', 'PUNCT'), ('Some', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('busiest', 'ADJ'), ('sites', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('planet', 'NOUN'), ('use', 'VERB'), ('Django', 'PROPN'), ('’s', 'PART'), ('ability', 'NOUN'), ('to', 'ADP'), ('quickly', 'ADV'), ('and', 'CCONJ'), ('flexibly', 'ADV'), ('scale', 'VERB'), ('to', 'PART'), ('meet', 'VERB'), ('the', 'DET'), ('heaviest', 'ADJ'), ('traffic', 'NOUN'), ('demands', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Exceedingly', 'RB'), ('scalable', 'JJ'), (':', ':'), ('Some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('busiest', 'JJS'), ('sites', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('planet', 'NN'), ('use', 'VBP'), ('Django', 'NNP'), ('’s', 'POS'), ('ability', 'NN'), ('to', 'IN'), ('quickly', 'RB'), ('and', 'CC'), ('flexibly', 'RB'), ('scale', 'VB'), ('to', 'TO'), ('meet', 'VB'), ('the', 'DT'), ('heaviest', 'JJS'), ('traffic', 'NN'), ('demands', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Exceedingly', 'exceedingly'), ('scalable', 'scalable'), (':', ':'), ('Some', 'some'), ('of', 'of'), ('the', 'the'), ('busiest', 'busy'), ('sites', 'site'), ('on', 'on'), ('the', 'the'), ('planet', 'planet'), ('use', 'use'), ('Django', 'Django'), ('’s', "'s"), ('ability', 'ability'), ('to', 'to'), ('quickly', 'quickly'), ('and', 'and'), ('flexibly', 'flexibly'), ('scale', 'scale'), ('to', 'to'), ('meet', 'meet'), ('the', 'the'), ('heaviest', 'heavy'), ('traffic', 'traffic'), ('demands', 'demand'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'scalable'), 'punct'), (('Exceedingly', 'scalable'), 'advmod'), (('scalable', 'root'), 'root'), ((':', 'scalable'), 'punct'), (('Some', 'use'), 'nsubj'), (('of', 'sites'), 'case'), (('the', 'sites'), 'det'), (('busiest', 'sites'), 'amod'), (('sites', 'Some'), 'nmod'), (('on', 'planet'), 'case'), (('the', 'planet'), 'det'), (('planet', 'sites'), 'nmod'), (('use', 'scalable'), 'parataxis'), (('Django', 'ability'), 'nmod:poss'), (('’s', 'Django'), 'case'), (('ability', 'use'), 'obj'), (('to', 'quickly'), 'case'), (('quickly', 'ability'), 'nmod'), (('and', 'flexibly'), 'cc'), (('flexibly', 'quickly'), 'conj'), (('scale', 'use'), 'conj'), (('to', 'meet'), 'mark'), (('meet', 'scale'), 'xcomp'), (('the', 'demands'), 'det'), (('heaviest', 'demands'), 'amod'), (('traffic', 'demands'), 'compound'), (('demands', 'meet'), 'obj'), (('.', 'scalable'), 'punct')]

 Named Entities are: 
>> [('Django', 'LOC')]

========================== Sentence 18 ===========================

 · Incredibly versatile: Companies, organizations and governments have used Django to build all sorts of things — from content management systems to social networks to scientific computing platforms. 

Tokens are: 
>> ['·', 'Incredibly', 'versatile', ':', 'Companies', ',', 'organizations', 'and', 'governments', 'have', 'used', 'Django', 'to', 'build', 'all', 'sorts', 'of', 'things', '—', 'from', 'content', 'management', 'systems', 'to', 'social', 'networks', 'to', 'scientific', 'computing', 'platforms', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Incredibly', 'ADV'), ('versatile', 'ADJ'), (':', 'PUNCT'), ('Companies', 'NOUN'), (',', 'PUNCT'), ('organizations', 'NOUN'), ('and', 'CCONJ'), ('governments', 'NOUN'), ('have', 'AUX'), ('used', 'VERB'), ('Django', 'PROPN'), ('to', 'PART'), ('build', 'VERB'), ('all', 'DET'), ('sorts', 'NOUN'), ('of', 'ADP'), ('things', 'NOUN'), ('—', 'PUNCT'), ('from', 'ADP'), ('content', 'NOUN'), ('management', 'NOUN'), ('systems', 'NOUN'), ('to', 'ADP'), ('social', 'ADJ'), ('networks', 'NOUN'), ('to', 'ADP'), ('scientific', 'ADJ'), ('computing', 'NOUN'), ('platforms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Incredibly', 'RB'), ('versatile', 'JJ'), (':', ':'), ('Companies', 'NNS'), (',', ','), ('organizations', 'NNS'), ('and', 'CC'), ('governments', 'NNS'), ('have', 'VBP'), ('used', 'VBN'), ('Django', 'NNP'), ('to', 'TO'), ('build', 'VB'), ('all', 'DT'), ('sorts', 'NNS'), ('of', 'IN'), ('things', 'NNS'), ('—', ':'), ('from', 'IN'), ('content', 'NN'), ('management', 'NN'), ('systems', 'NNS'), ('to', 'IN'), ('social', 'JJ'), ('networks', 'NNS'), ('to', 'IN'), ('scientific', 'JJ'), ('computing', 'NN'), ('platforms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Incredibly', 'incredibly'), ('versatile', 'versatile'), (':', ':'), ('Companies', 'company'), (',', ','), ('organizations', 'organization'), ('and', 'and'), ('governments', 'government'), ('have', 'have'), ('used', 'use'), ('Django', 'Django'), ('to', 'to'), ('build', 'build'), ('all', 'all'), ('sorts', 'sort'), ('of', 'of'), ('things', 'thing'), ('—', '—'), ('from', 'from'), ('content', 'content'), ('management', 'management'), ('systems', 'system'), ('to', 'to'), ('social', 'social'), ('networks', 'network'), ('to', 'to'), ('scientific', 'scientific'), ('computing', 'computing'), ('platforms', 'platform'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'versatile'), 'punct'), (('Incredibly', 'versatile'), 'advmod'), (('versatile', 'root'), 'root'), ((':', 'versatile'), 'punct'), (('Companies', 'used'), 'nsubj'), ((',', 'organizations'), 'punct'), (('organizations', 'Companies'), 'conj'), (('and', 'governments'), 'cc'), (('governments', 'Companies'), 'conj'), (('have', 'used'), 'aux'), (('used', 'versatile'), 'parataxis'), (('Django', 'used'), 'obj'), (('to', 'build'), 'mark'), (('build', 'used'), 'xcomp'), (('all', 'sorts'), 'det'), (('sorts', 'build'), 'obj'), (('of', 'things'), 'case'), (('things', 'sorts'), 'nmod'), (('—', 'systems'), 'punct'), (('from', 'systems'), 'case'), (('content', 'management'), 'compound'), (('management', 'systems'), 'compound'), (('systems', 'build'), 'obl'), (('to', 'networks'), 'case'), (('social', 'networks'), 'amod'), (('networks', 'systems'), 'nmod'), (('to', 'platforms'), 'case'), (('scientific', 'platforms'), 'amod'), (('computing', 'platforms'), 'compound'), (('platforms', 'networks'), 'nmod'), (('.', 'versatile'), 'punct')]

 Named Entities are: 
>> [('Django', 'ORG')]

========================== Sentence 19 ===========================

 Reference: https://www.djangoproject.com/start/overview/   · Django framework design principles:  Don’t repeat yourself (DRY) Principle:  	Reference: https://www.webforefront.com/django/designprinciples.html    · Django Custom User Model: · https://testdriven.io/blog/django-custom-user-model/ · https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html 

Tokens are: 
>> ['Reference', ':', 'https://www.djangoproject.com/start/overview/', '·', 'Django', 'framework', 'design', 'principles', ':', 'Do', 'n’t', 'repeat', 'yourself', '(', 'DRY', ')', 'Principle', ':', 'Reference', ':', 'https://www.webforefront.com/django/designprinciples.html', '·', 'Django', 'Custom', 'User', 'Model', ':', '·', 'https://testdriven.io/blog/django-custom-user-model/', '·', 'https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html'] 

 UPOS tags are: 
>> [('Reference', 'NOUN'), (':', 'PUNCT'), ('https://www.djangoproject.com/start/overview/', 'X'), ('·', 'PUNCT'), ('Django', 'NOUN'), ('framework', 'NOUN'), ('design', 'NOUN'), ('principles', 'NOUN'), (':', 'PUNCT'), ('Do', 'AUX'), ('n’t', 'PART'), ('repeat', 'VERB'), ('yourself', 'PRON'), ('(', 'PUNCT'), ('DRY', 'ADJ'), (')', 'PUNCT'), ('Principle', 'NOUN'), (':', 'PUNCT'), ('Reference', 'NOUN'), (':', 'PUNCT'), ('https://www.webforefront.com/django/designprinciples.html', 'X'), ('·', 'PUNCT'), ('Django', 'NOUN'), ('Custom', 'NOUN'), ('User', 'NOUN'), ('Model', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('https://testdriven.io/blog/django-custom-user-model/', 'X'), ('·', 'PUNCT'), ('https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html', 'X')] 

 XPOS tags are: 
>> [('Reference', 'NN'), (':', ':'), ('https://www.djangoproject.com/start/overview/', 'ADD'), ('·', 'NFP'), ('Django', 'NN'), ('framework', 'NN'), ('design', 'NN'), ('principles', 'NNS'), (':', ':'), ('Do', 'VB'), ('n’t', 'RB'), ('repeat', 'VB'), ('yourself', 'PRP'), ('(', '-LRB-'), ('DRY', 'JJ'), (')', '-RRB-'), ('Principle', 'NN'), (':', ':'), ('Reference', 'NN'), (':', ':'), ('https://www.webforefront.com/django/designprinciples.html', 'ADD'), ('·', 'NFP'), ('Django', 'NN'), ('Custom', 'NN'), ('User', 'NN'), ('Model', 'NN'), (':', ':'), ('·', 'NFP'), ('https://testdriven.io/blog/django-custom-user-model/', 'ADD'), ('·', 'NFP'), ('https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html', 'ADD')] 

 Lemmas are: 
>> [('Reference', 'reference'), (':', ':'), ('https://www.djangoproject.com/start/overview/', 'https://www.djangoproject.com/start/overview/'), ('·', '·'), ('Django', 'django'), ('framework', 'framework'), ('design', 'design'), ('principles', 'principle'), (':', ':'), ('Do', 'do'), ('n’t', 'not'), ('repeat', 'repeat'), ('yourself', 'yourself'), ('(', '('), ('DRY', 'dry'), (')', ')'), ('Principle', 'principle'), (':', ':'), ('Reference', 'reference'), (':', ':'), ('https://www.webforefront.com/django/designprinciples.html', 'https://www.webforefront.com/django/designprinciples.html'), ('·', '·'), ('Django', 'django'), ('Custom', 'custom'), ('User', 'user'), ('Model', 'model'), (':', ':'), ('·', '·'), ('https://testdriven.io/blog/django-custom-user-model/', 'https://testdriven.io/blog/django-custom-user-model/'), ('·', '·'), ('https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html', 'https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html')] 

 Dependency tags are: 
>> [(('Reference', 'root'), 'root'), ((':', 'Reference'), 'punct'), (('https://www.djangoproject.com/start/overview/', 'Reference'), 'appos'), (('·', 'Reference'), 'punct'), (('Django', 'framework'), 'compound'), (('framework', 'principles'), 'compound'), (('design', 'principles'), 'compound'), (('principles', 'Reference'), 'appos'), ((':', 'repeat'), 'punct'), (('Do', 'repeat'), 'aux'), (('n’t', 'repeat'), 'advmod'), (('repeat', 'Reference'), 'parataxis'), (('yourself', 'repeat'), 'obj'), (('(', 'DRY'), 'punct'), (('DRY', 'Principle'), 'amod'), ((')', 'DRY'), 'punct'), (('Principle', 'repeat'), 'obj'), ((':', 'Reference'), 'punct'), (('Reference', 'Principle'), 'appos'), ((':', 'Reference'), 'punct'), (('https://www.webforefront.com/django/designprinciples.html', 'Reference'), 'appos'), (('·', 'Reference'), 'punct'), (('Django', 'Custom'), 'compound'), (('Custom', 'Model'), 'compound'), (('User', 'Model'), 'compound'), (('Model', 'Reference'), 'appos'), ((':', 'Model'), 'punct'), (('·', 'https://testdriven.io/blog/django-custom-user-model/'), 'punct'), (('https://testdriven.io/blog/django-custom-user-model/', 'Model'), 'appos'), (('·', 'https://testdriven.io/blog/django-custom-user-model/'), 'punct'), (('https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html', 'https://testdriven.io/blog/django-custom-user-model/'), 'list')]

 Named Entities are: 
>> []