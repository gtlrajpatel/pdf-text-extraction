				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

AI-20 Here is the list of frequently used terms in the domain of AI − 	Sr. 


>> Tokens are: 
[AI-20, list, frequently, terms, domain, AI, −, 	, Sr, .] 

>> PoS Tags are: 
[('AI-20', 'VERB'), ('list', 'NOUN'), ('frequently', 'ADV'), ('terms', 'NOUN'), ('domain', 'NOUN'), ('AI', 'PROPN'), ('−', 'PROPN'), ('\t', 'SPACE'), ('Sr', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('AI-20', 'intj'), ('list', 'nsubj'), ('frequently', 'advmod'), ('terms', 'pobj'), ('domain', 'pobj'), ('AI', 'compound'), ('−', 'compound'), ('\t', 'compound'), ('Sr', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[AI-20, list], [list, frequently], [frequently, terms], [terms, domain], [domain, AI], [AI, −], [−, 	], [	, Sr], [Sr, .]]

>> Trigrams: 
[[AI-20, list, frequently], [list, frequently, terms], [frequently, terms, domain], [terms, domain, AI], [domain, AI, −], [AI, −, 	], [−, 	, Sr], [	, Sr, .]]

>> Noun Phrases are: 
[the list, frequently used terms, the domain, AI − 	Sr]

>> Named Entities are: 
[('AI-20 Here', 'PRODUCT')]


============================ Sentence 2 =============================

No 	Term & Meaning  	1 	Agent Agents are systems or software programs capable of autonomous, purposeful and reasoning directed towards one or more goals. 


>> Tokens are: 
[	, Term, &, Meaning,  	, 1, 	, Agent, Agents, systems, software, programs, capable, autonomous, ,, purposeful, reasoning, directed, goals, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Term', 'PROPN'), ('&', 'CCONJ'), ('Meaning', 'VERB'), (' \t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('Agent', 'PROPN'), ('Agents', 'NOUN'), ('systems', 'NOUN'), ('software', 'NOUN'), ('programs', 'NOUN'), ('capable', 'ADJ'), ('autonomous', 'ADJ'), (',', 'PUNCT'), ('purposeful', 'ADJ'), ('reasoning', 'VERB'), ('directed', 'VERB'), ('goals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Term', 'nsubj'), ('&', 'cc'), ('Meaning', 'conj'), (' \t', 'nummod'), ('1', 'nummod'), ('\t', 'compound'), ('Agent', 'compound'), ('Agents', 'conj'), ('systems', 'attr'), ('software', 'compound'), ('programs', 'conj'), ('capable', 'amod'), ('autonomous', 'amod'), (',', 'punct'), ('purposeful', 'conj'), ('reasoning', 'conj'), ('directed', 'pcomp'), ('goals', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Term], [Term, &], [&, Meaning], [Meaning,  	], [ 	, 1], [1, 	], [	, Agent], [Agent, Agents], [Agents, systems], [systems, software], [software, programs], [programs, capable], [capable, autonomous], [autonomous, ,], [,, purposeful], [purposeful, reasoning], [reasoning, directed], [directed, goals], [goals, .]]

>> Trigrams: 
[[	, Term, &], [Term, &, Meaning], [&, Meaning,  	], [Meaning,  	, 1], [ 	, 1, 	], [1, 	, Agent], [	, Agent, Agents], [Agent, Agents, systems], [Agents, systems, software], [systems, software, programs], [software, programs, capable], [programs, capable, autonomous], [capable, autonomous, ,], [autonomous, ,, purposeful], [,, purposeful, reasoning], [purposeful, reasoning, directed], [reasoning, directed, goals], [directed, goals, .]]

>> Noun Phrases are: 
[No 	Term,  	1 	Agent Agents, systems, software programs, one or more goals]

>> Named Entities are: 
[('1', 'CARDINAL'), ('one', 'CARDINAL')]


============================ Sentence 3 =============================

They are also called assistants, brokers, bots, droids, intelligent agents, and software agents. 


>> Tokens are: 
[called, assistants, ,, brokers, ,, bots, ,, droids, ,, intelligent, agents, ,, software, agents, .] 

>> PoS Tags are: 
[('called', 'VERB'), ('assistants', 'NOUN'), (',', 'PUNCT'), ('brokers', 'NOUN'), (',', 'PUNCT'), ('bots', 'NOUN'), (',', 'PUNCT'), ('droids', 'NOUN'), (',', 'PUNCT'), ('intelligent', 'ADJ'), ('agents', 'NOUN'), (',', 'PUNCT'), ('software', 'NOUN'), ('agents', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('called', 'ROOT'), ('assistants', 'oprd'), (',', 'punct'), ('brokers', 'conj'), (',', 'punct'), ('bots', 'conj'), (',', 'punct'), ('droids', 'conj'), (',', 'punct'), ('intelligent', 'amod'), ('agents', 'conj'), (',', 'punct'), ('software', 'compound'), ('agents', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[called, assistants], [assistants, ,], [,, brokers], [brokers, ,], [,, bots], [bots, ,], [,, droids], [droids, ,], [,, intelligent], [intelligent, agents], [agents, ,], [,, software], [software, agents], [agents, .]]

>> Trigrams: 
[[called, assistants, ,], [assistants, ,, brokers], [,, brokers, ,], [brokers, ,, bots], [,, bots, ,], [bots, ,, droids], [,, droids, ,], [droids, ,, intelligent], [,, intelligent, agents], [intelligent, agents, ,], [agents, ,, software], [,, software, agents], [software, agents, .]]

>> Noun Phrases are: 
[They, assistants, brokers, bots, droids, intelligent agents, software agents]

>> Named Entities are: 
[]


============================ Sentence 4 =============================

 	2 	Autonomous Robot Robot free from external control or influence and able to control itself independently. 


>> Tokens are: 
[ 	, 2, 	, Autonomous, Robot, Robot, free, external, control, influence, able, control, independently, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('Autonomous', 'PROPN'), ('Robot', 'PROPN'), ('Robot', 'PROPN'), ('free', 'ADJ'), ('external', 'ADJ'), ('control', 'NOUN'), ('influence', 'NOUN'), ('able', 'ADJ'), ('control', 'VERB'), ('independently', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('Autonomous', 'compound'), ('Robot', 'compound'), ('Robot', 'nsubj'), ('free', 'ROOT'), ('external', 'amod'), ('control', 'pobj'), ('influence', 'conj'), ('able', 'conj'), ('control', 'xcomp'), ('independently', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 2], [2, 	], [	, Autonomous], [Autonomous, Robot], [Robot, Robot], [Robot, free], [free, external], [external, control], [control, influence], [influence, able], [able, control], [control, independently], [independently, .]]

>> Trigrams: 
[[ 	, 2, 	], [2, 	, Autonomous], [	, Autonomous, Robot], [Autonomous, Robot, Robot], [Robot, Robot, free], [Robot, free, external], [free, external, control], [external, control, influence], [control, influence, able], [influence, able, control], [able, control, independently], [control, independently, .]]

>> Noun Phrases are: 
[ 	2 	Autonomous Robot Robot, external control, influence, itself]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 5 =============================

 	3 	Backward Chaining Strategy of working backward for Reason/Cause of a problem. 


>> Tokens are: 
[ 	, 3, 	, Backward, Chaining, Strategy, working, backward, Reason, /, Cause, problem, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('Backward', 'PROPN'), ('Chaining', 'PROPN'), ('Strategy', 'PROPN'), ('working', 'VERB'), ('backward', 'ADV'), ('Reason', 'PROPN'), ('/', 'SYM'), ('Cause', 'NOUN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('3', 'nummod'), ('\t', 'compound'), ('Backward', 'compound'), ('Chaining', 'compound'), ('Strategy', 'ROOT'), ('working', 'pcomp'), ('backward', 'advmod'), ('Reason', 'nmod'), ('/', 'punct'), ('Cause', 'pobj'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 3], [3, 	], [	, Backward], [Backward, Chaining], [Chaining, Strategy], [Strategy, working], [working, backward], [backward, Reason], [Reason, /], [/, Cause], [Cause, problem], [problem, .]]

>> Trigrams: 
[[ 	, 3, 	], [3, 	, Backward], [	, Backward, Chaining], [Backward, Chaining, Strategy], [Chaining, Strategy, working], [Strategy, working, backward], [working, backward, Reason], [backward, Reason, /], [Reason, /, Cause], [/, Cause, problem], [Cause, problem, .]]

>> Noun Phrases are: 
[ 	3 	Backward Chaining Strategy, Reason/Cause, a problem]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Reason/Cause', 'ORG')]


============================ Sentence 6 =============================

 	4 	Blackboard It is the memory inside computer, which is used for communication between the cooperating expert systems. 


>> Tokens are: 
[ 	, 4, 	, Blackboard, memory, inside, computer, ,, communication, cooperating, expert, systems, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('Blackboard', 'PROPN'), ('memory', 'NOUN'), ('inside', 'ADP'), ('computer', 'NOUN'), (',', 'PUNCT'), ('communication', 'NOUN'), ('cooperating', 'VERB'), ('expert', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('4', 'nummod'), ('\t', 'compound'), ('Blackboard', 'npadvmod'), ('memory', 'attr'), ('inside', 'prep'), ('computer', 'pobj'), (',', 'punct'), ('communication', 'pobj'), ('cooperating', 'amod'), ('expert', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 4], [4, 	], [	, Blackboard], [Blackboard, memory], [memory, inside], [inside, computer], [computer, ,], [,, communication], [communication, cooperating], [cooperating, expert], [expert, systems], [systems, .]]

>> Trigrams: 
[[ 	, 4, 	], [4, 	, Blackboard], [	, Blackboard, memory], [Blackboard, memory, inside], [memory, inside, computer], [inside, computer, ,], [computer, ,, communication], [,, communication, cooperating], [communication, cooperating, expert], [cooperating, expert, systems], [expert, systems, .]]

>> Noun Phrases are: 
[It, the memory, computer, communication, the cooperating expert systems]

>> Named Entities are: 
[('4', 'CARDINAL'), ('Blackboard', 'PERSON')]


============================ Sentence 7 =============================

 	5 	Environment It is the part of real or computational world inhabited by the agent. 


>> Tokens are: 
[ 	, 5, 	, Environment, real, computational, world, inhabited, agent, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('Environment', 'PROPN'), ('real', 'ADJ'), ('computational', 'ADJ'), ('world', 'NOUN'), ('inhabited', 'VERB'), ('agent', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('5', 'nummod'), ('\t', 'compound'), ('Environment', 'npadvmod'), ('real', 'amod'), ('computational', 'conj'), ('world', 'pobj'), ('inhabited', 'acl'), ('agent', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 5], [5, 	], [	, Environment], [Environment, real], [real, computational], [computational, world], [world, inhabited], [inhabited, agent], [agent, .]]

>> Trigrams: 
[[ 	, 5, 	], [5, 	, Environment], [	, Environment, real], [Environment, real, computational], [real, computational, world], [computational, world, inhabited], [world, inhabited, agent], [inhabited, agent, .]]

>> Noun Phrases are: 
[It, the part, real or computational world, the agent]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 8 =============================

 	6 	Forward Chaining Strategy of working forward for conclusion/solution of a problem. 


>> Tokens are: 
[ 	, 6, 	, Forward, Chaining, Strategy, working, forward, conclusion, /, solution, problem, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('Forward', 'PROPN'), ('Chaining', 'PROPN'), ('Strategy', 'PROPN'), ('working', 'VERB'), ('forward', 'ADV'), ('conclusion', 'NOUN'), ('/', 'SYM'), ('solution', 'NOUN'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('6', 'nummod'), ('\t', 'compound'), ('Forward', 'compound'), ('Chaining', 'compound'), ('Strategy', 'ROOT'), ('working', 'pcomp'), ('forward', 'advmod'), ('conclusion', 'nmod'), ('/', 'punct'), ('solution', 'pobj'), ('problem', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 6], [6, 	], [	, Forward], [Forward, Chaining], [Chaining, Strategy], [Strategy, working], [working, forward], [forward, conclusion], [conclusion, /], [/, solution], [solution, problem], [problem, .]]

>> Trigrams: 
[[ 	, 6, 	], [6, 	, Forward], [	, Forward, Chaining], [Forward, Chaining, Strategy], [Chaining, Strategy, working], [Strategy, working, forward], [working, forward, conclusion], [forward, conclusion, /], [conclusion, /, solution], [/, solution, problem], [solution, problem, .]]

>> Noun Phrases are: 
[ 	6 	Forward Chaining Strategy, conclusion/solution, a problem]

>> Named Entities are: 
[('6', 'CARDINAL')]


============================ Sentence 9 =============================

 	7 	Heuristics It is the knowledge based on Trial-and-error, evaluations, and experimentation. 


>> Tokens are: 
[ 	, 7, 	, Heuristics, knowledge, based, Trial, -, -, error, ,, evaluations, ,, experimentation, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('7', 'PROPN'), ('\t', 'SPACE'), ('Heuristics', 'NOUN'), ('knowledge', 'NOUN'), ('based', 'VERB'), ('Trial', 'PROPN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('error', 'NOUN'), (',', 'PUNCT'), ('evaluations', 'NOUN'), (',', 'PUNCT'), ('experimentation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('7', 'nummod'), ('\t', 'compound'), ('Heuristics', 'attr'), ('knowledge', 'attr'), ('based', 'acl'), ('Trial', 'pobj'), ('-', 'punct'), ('-', 'punct'), ('error', 'conj'), (',', 'punct'), ('evaluations', 'conj'), (',', 'punct'), ('experimentation', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 7], [7, 	], [	, Heuristics], [Heuristics, knowledge], [knowledge, based], [based, Trial], [Trial, -], [-, -], [-, error], [error, ,], [,, evaluations], [evaluations, ,], [,, experimentation], [experimentation, .]]

>> Trigrams: 
[[ 	, 7, 	], [7, 	, Heuristics], [	, Heuristics, knowledge], [Heuristics, knowledge, based], [knowledge, based, Trial], [based, Trial, -], [Trial, -, -], [-, -, error], [-, error, ,], [error, ,, evaluations], [,, evaluations, ,], [evaluations, ,, experimentation], [,, experimentation, .]]

>> Noun Phrases are: 
[ 	7 	Heuristics, It, the knowledge, Trial, -error, evaluations, experimentation]

>> Named Entities are: 
[('7', 'CARDINAL')]


============================ Sentence 10 =============================

 	8 	Knowledge Engineering Acquiring knowledge from human experts and other resources. 


>> Tokens are: 
[ 	, 8, 	, Knowledge, Engineering, Acquiring, knowledge, human, experts, resources, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('8', 'NUM'), ('\t', 'SPACE'), ('Knowledge', 'PROPN'), ('Engineering', 'PROPN'), ('Acquiring', 'VERB'), ('knowledge', 'NOUN'), ('human', 'ADJ'), ('experts', 'NOUN'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'dep'), ('8', 'nummod'), ('\t', 'compound'), ('Knowledge', 'compound'), ('Engineering', 'compound'), ('Acquiring', 'ROOT'), ('knowledge', 'dobj'), ('human', 'amod'), ('experts', 'pobj'), ('resources', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 8], [8, 	], [	, Knowledge], [Knowledge, Engineering], [Engineering, Acquiring], [Acquiring, knowledge], [knowledge, human], [human, experts], [experts, resources], [resources, .]]

>> Trigrams: 
[[ 	, 8, 	], [8, 	, Knowledge], [	, Knowledge, Engineering], [Knowledge, Engineering, Acquiring], [Engineering, Acquiring, knowledge], [Acquiring, knowledge, human], [knowledge, human, experts], [human, experts, resources], [experts, resources, .]]

>> Noun Phrases are: 
[knowledge, human experts, other resources]

>> Named Entities are: 
[('8', 'CARDINAL')]


============================ Sentence 11 =============================

 	9 	Percepts It is the format in which the agent obtains information about the environment. 


>> Tokens are: 
[ 	, 9, 	, Percepts, format, agent, obtains, information, environment, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('Percepts', 'PROPN'), ('format', 'NOUN'), ('agent', 'NOUN'), ('obtains', 'VERB'), ('information', 'NOUN'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('9', 'nummod'), ('\t', 'compound'), ('Percepts', 'attr'), ('format', 'attr'), ('agent', 'nsubj'), ('obtains', 'relcl'), ('information', 'dobj'), ('environment', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 9], [9, 	], [	, Percepts], [Percepts, format], [format, agent], [agent, obtains], [obtains, information], [information, environment], [environment, .]]

>> Trigrams: 
[[ 	, 9, 	], [9, 	, Percepts], [	, Percepts, format], [Percepts, format, agent], [format, agent, obtains], [agent, obtains, information], [obtains, information, environment], [information, environment, .]]

>> Noun Phrases are: 
[ 	9 	Percepts, It, the format, the agent, information, the environment]

>> Named Entities are: 
[('9', 'CARDINAL')]


============================ Sentence 12 =============================

 	10 


>> Tokens are: 
[ 	, 10] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('10', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('10', 'nummod')]

>> Bigrams: 
[[ 	, 10]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 13 =============================

	Pruning Overriding unnecessary and irrelevant considerations in AI systems. 


>> Tokens are: 
[	, Pruning, Overriding, unnecessary, irrelevant, considerations, AI, systems, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Pruning', 'PROPN'), ('Overriding', 'VERB'), ('unnecessary', 'ADJ'), ('irrelevant', 'ADJ'), ('considerations', 'NOUN'), ('AI', 'PROPN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Pruning', 'nmod'), ('Overriding', 'nmod'), ('unnecessary', 'amod'), ('irrelevant', 'conj'), ('considerations', 'ROOT'), ('AI', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Pruning], [Pruning, Overriding], [Overriding, unnecessary], [unnecessary, irrelevant], [irrelevant, considerations], [considerations, AI], [AI, systems], [systems, .]]

>> Trigrams: 
[[	, Pruning, Overriding], [Pruning, Overriding, unnecessary], [Overriding, unnecessary, irrelevant], [unnecessary, irrelevant, considerations], [irrelevant, considerations, AI], [considerations, AI, systems], [AI, systems, .]]

>> Noun Phrases are: 
[	Pruning Overriding unnecessary and irrelevant considerations, AI systems]

>> Named Entities are: 
[('AI', 'ORG')]


============================ Sentence 14 =============================

 	11 


>> Tokens are: 
[ 	, 11] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('11', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('11', 'nummod')]

>> Bigrams: 
[[ 	, 11]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('11', 'CARDINAL')]


============================ Sentence 15 =============================

	Rule It is a format of representing knowledge base in Expert System. 


>> Tokens are: 
[	, Rule, format, representing, knowledge, base, Expert, System, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Rule', 'NOUN'), ('format', 'NOUN'), ('representing', 'VERB'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('Expert', 'PROPN'), ('System', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Rule', 'npadvmod'), ('format', 'attr'), ('representing', 'pcomp'), ('knowledge', 'compound'), ('base', 'dobj'), ('Expert', 'compound'), ('System', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Rule], [Rule, format], [format, representing], [representing, knowledge], [knowledge, base], [base, Expert], [Expert, System], [System, .]]

>> Trigrams: 
[[	, Rule, format], [Rule, format, representing], [format, representing, knowledge], [representing, knowledge, base], [knowledge, base, Expert], [base, Expert, System], [Expert, System, .]]

>> Noun Phrases are: 
[It, a format, knowledge base, Expert System]

>> Named Entities are: 
[('Expert System', 'FAC')]


============================ Sentence 16 =============================

It is in the form of IF-THEN-ELSE. 


>> Tokens are: 
[form, -, -, .] 

>> PoS Tags are: 
[('form', 'NOUN'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('form', 'pobj'), ('-', 'punct'), ('-', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[form, -], [-, -], [-, .]]

>> Trigrams: 
[[form, -, -], [-, -, .]]

>> Noun Phrases are: 
[It, the form, IF-THEN-ELSE]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

 	12 	Shell A shell is a software that helps in designing inference engine, knowledge base, and user interface of an expert system. 


>> Tokens are: 
[ 	, 12, 	, Shell, shell, software, helps, designing, inference, engine, ,, knowledge, base, ,, user, interface, expert, system, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('12', 'NUM'), ('\t', 'SPACE'), ('Shell', 'PROPN'), ('shell', 'NOUN'), ('software', 'NOUN'), ('helps', 'VERB'), ('designing', 'VERB'), ('inference', 'NOUN'), ('engine', 'NOUN'), (',', 'PUNCT'), ('knowledge', 'NOUN'), ('base', 'NOUN'), (',', 'PUNCT'), ('user', 'NOUN'), ('interface', 'NOUN'), ('expert', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('12', 'nummod'), ('\t', 'compound'), ('Shell', 'nsubj'), ('shell', 'nsubj'), ('software', 'attr'), ('helps', 'relcl'), ('designing', 'amod'), ('inference', 'compound'), ('engine', 'pobj'), (',', 'punct'), ('knowledge', 'compound'), ('base', 'conj'), (',', 'punct'), ('user', 'compound'), ('interface', 'conj'), ('expert', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 12], [12, 	], [	, Shell], [Shell, shell], [shell, software], [software, helps], [helps, designing], [designing, inference], [inference, engine], [engine, ,], [,, knowledge], [knowledge, base], [base, ,], [,, user], [user, interface], [interface, expert], [expert, system], [system, .]]

>> Trigrams: 
[[ 	, 12, 	], [12, 	, Shell], [	, Shell, shell], [Shell, shell, software], [shell, software, helps], [software, helps, designing], [helps, designing, inference], [designing, inference, engine], [inference, engine, ,], [engine, ,, knowledge], [,, knowledge, base], [knowledge, base, ,], [base, ,, user], [,, user, interface], [user, interface, expert], [interface, expert, system], [expert, system, .]]

>> Noun Phrases are: 
[ 	12 	Shell, A shell, a software, designing inference engine, knowledge base, user interface, an expert system]

>> Named Entities are: 
[('12', 'CARDINAL'), ('Shell A', 'ORG')]


============================ Sentence 18 =============================

 	13 	Task It is the goal the agent is tries to accomplish. 


>> Tokens are: 
[ 	, 13, 	, Task, goal, agent, tries, accomplish, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('13', 'NUM'), ('\t', 'SPACE'), ('Task', 'PROPN'), ('goal', 'NOUN'), ('agent', 'NOUN'), ('tries', 'NOUN'), ('accomplish', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('13', 'nummod'), ('\t', 'compound'), ('Task', 'npadvmod'), ('goal', 'attr'), ('agent', 'nsubj'), ('tries', 'attr'), ('accomplish', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 13], [13, 	], [	, Task], [Task, goal], [goal, agent], [agent, tries], [tries, accomplish], [accomplish, .]]

>> Trigrams: 
[[ 	, 13, 	], [13, 	, Task], [	, Task, goal], [Task, goal, agent], [goal, agent, tries], [agent, tries, accomplish], [tries, accomplish, .]]

>> Noun Phrases are: 
[It, the goal, the agent, tries]

>> Named Entities are: 
[('13', 'CARDINAL')]


============================ Sentence 19 =============================

 	14 


>> Tokens are: 
[ 	, 14] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('14', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('14', 'nummod')]

>> Bigrams: 
[[ 	, 14]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('14', 'CARDINAL')]


============================ Sentence 20 =============================

	Turing Test A test developed by Allan Turing to test the intelligence of a machine as compared to human intelligence. 


>> Tokens are: 
[	, Turing, Test, test, developed, Allan, Turing, test, intelligence, machine, compared, human, intelligence, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Turing', 'PROPN'), ('Test', 'PROPN'), ('test', 'NOUN'), ('developed', 'VERB'), ('Allan', 'PROPN'), ('Turing', 'PROPN'), ('test', 'VERB'), ('intelligence', 'NOUN'), ('machine', 'NOUN'), ('compared', 'VERB'), ('human', 'ADJ'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Turing', 'compound'), ('Test', 'dep'), ('test', 'ROOT'), ('developed', 'acl'), ('Allan', 'compound'), ('Turing', 'pobj'), ('test', 'advcl'), ('intelligence', 'dobj'), ('machine', 'pobj'), ('compared', 'advcl'), ('human', 'amod'), ('intelligence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Turing], [Turing, Test], [Test, test], [test, developed], [developed, Allan], [Allan, Turing], [Turing, test], [test, intelligence], [intelligence, machine], [machine, compared], [compared, human], [human, intelligence], [intelligence, .]]

>> Trigrams: 
[[	, Turing, Test], [Turing, Test, test], [Test, test, developed], [test, developed, Allan], [developed, Allan, Turing], [Allan, Turing, test], [Turing, test, intelligence], [test, intelligence, machine], [intelligence, machine, compared], [machine, compared, human], [compared, human, intelligence], [human, intelligence, .]]

>> Noun Phrases are: 
[	Turing Test A test, Allan Turing, the intelligence, a machine, human intelligence]

>> Named Entities are: 
[('Allan Turing', 'PERSON')]
