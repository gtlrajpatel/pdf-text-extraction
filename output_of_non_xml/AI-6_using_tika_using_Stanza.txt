

========================== Sentence 1 ===========================

 AI-6 

Tokens are: 
>> ['AI-6'] 

 UPOS tags are: 
>> [('AI-6', 'PROPN')] 

 XPOS tags are: 
>> [('AI-6', 'NNP')] 

 Lemmas are: 
>> [('AI-6', 'AI-6')] 

 Dependency tags are: 
>> [(('AI-6', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 An AI system is composed of an agent and its environment. 

Tokens are: 
>> ['An', 'AI', 'system', 'is', 'composed', 'of', 'an', 'agent', 'and', 'its', 'environment', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('AI', 'NOUN'), ('system', 'NOUN'), ('is', 'AUX'), ('composed', 'VERB'), ('of', 'ADP'), ('an', 'DET'), ('agent', 'NOUN'), ('and', 'CCONJ'), ('its', 'PRON'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('AI', 'NN'), ('system', 'NN'), ('is', 'VBZ'), ('composed', 'VBN'), ('of', 'IN'), ('an', 'DT'), ('agent', 'NN'), ('and', 'CC'), ('its', 'PRP$'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('AI', 'ai'), ('system', 'system'), ('is', 'be'), ('composed', 'compose'), ('of', 'of'), ('an', 'a'), ('agent', 'agent'), ('and', 'and'), ('its', 'its'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'system'), 'det'), (('AI', 'system'), 'compound'), (('system', 'composed'), 'nsubj:pass'), (('is', 'composed'), 'aux:pass'), (('composed', 'root'), 'root'), (('of', 'agent'), 'case'), (('an', 'agent'), 'det'), (('agent', 'composed'), 'obl'), (('and', 'environment'), 'cc'), (('its', 'environment'), 'nmod:poss'), (('environment', 'agent'), 'conj'), (('.', 'composed'), 'punct')]

 Named Entities are: 
>> [('AI', 'ORG')]

========================== Sentence 3 ===========================

 The agents act in their environment. 

Tokens are: 
>> ['The', 'agents', 'act', 'in', 'their', 'environment', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('agents', 'NOUN'), ('act', 'VERB'), ('in', 'ADP'), ('their', 'PRON'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('agents', 'NNS'), ('act', 'VBP'), ('in', 'IN'), ('their', 'PRP$'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('agents', 'agent'), ('act', 'act'), ('in', 'in'), ('their', 'they'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'agents'), 'det'), (('agents', 'act'), 'nsubj'), (('act', 'root'), 'root'), (('in', 'environment'), 'case'), (('their', 'environment'), 'nmod:poss'), (('environment', 'act'), 'obl'), (('.', 'act'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 4 ===========================

 The environment may contain other agents. 

Tokens are: 
>> ['The', 'environment', 'may', 'contain', 'other', 'agents', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('environment', 'NOUN'), ('may', 'AUX'), ('contain', 'VERB'), ('other', 'ADJ'), ('agents', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('environment', 'NN'), ('may', 'MD'), ('contain', 'VB'), ('other', 'JJ'), ('agents', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('environment', 'environment'), ('may', 'may'), ('contain', 'contain'), ('other', 'other'), ('agents', 'agent'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'environment'), 'det'), (('environment', 'contain'), 'nsubj'), (('may', 'contain'), 'aux'), (('contain', 'root'), 'root'), (('other', 'agents'), 'amod'), (('agents', 'contain'), 'obj'), (('.', 'contain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 What are Agent and Environment? 

Tokens are: 
>> ['What', 'are', 'Agent', 'and', 'Environment', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('are', 'AUX'), ('Agent', 'NOUN'), ('and', 'CCONJ'), ('Environment', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('are', 'VBP'), ('Agent', 'NN'), ('and', 'CC'), ('Environment', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('are', 'be'), ('Agent', 'Agent'), ('and', 'and'), ('Environment', 'environment'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('are', 'What'), 'cop'), (('Agent', 'What'), 'nsubj'), (('and', 'Environment'), 'cc'), (('Environment', 'Agent'), 'conj'), (('?', 'What'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 An agent is anything that can perceive its environment through sensors and acts upon that environment through effectors. 

Tokens are: 
>> ['An', 'agent', 'is', 'anything', 'that', 'can', 'perceive', 'its', 'environment', 'through', 'sensors', 'and', 'acts', 'upon', 'that', 'environment', 'through', 'effectors', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('agent', 'NOUN'), ('is', 'AUX'), ('anything', 'PRON'), ('that', 'PRON'), ('can', 'AUX'), ('perceive', 'VERB'), ('its', 'PRON'), ('environment', 'NOUN'), ('through', 'ADP'), ('sensors', 'NOUN'), ('and', 'CCONJ'), ('acts', 'NOUN'), ('upon', 'ADP'), ('that', 'DET'), ('environment', 'NOUN'), ('through', 'ADP'), ('effectors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('agent', 'NN'), ('is', 'VBZ'), ('anything', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('perceive', 'VB'), ('its', 'PRP$'), ('environment', 'NN'), ('through', 'IN'), ('sensors', 'NNS'), ('and', 'CC'), ('acts', 'NNS'), ('upon', 'IN'), ('that', 'DT'), ('environment', 'NN'), ('through', 'IN'), ('effectors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('agent', 'agent'), ('is', 'be'), ('anything', 'anything'), ('that', 'that'), ('can', 'can'), ('perceive', 'perceive'), ('its', 'its'), ('environment', 'environment'), ('through', 'through'), ('sensors', 'sensor'), ('and', 'and'), ('acts', 'act'), ('upon', 'upon'), ('that', 'that'), ('environment', 'environment'), ('through', 'through'), ('effectors', 'effector'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'agent'), 'det'), (('agent', 'anything'), 'nsubj'), (('is', 'anything'), 'cop'), (('anything', 'root'), 'root'), (('that', 'perceive'), 'nsubj'), (('can', 'perceive'), 'aux'), (('perceive', 'anything'), 'acl:relcl'), (('its', 'environment'), 'nmod:poss'), (('environment', 'perceive'), 'obj'), (('through', 'sensors'), 'case'), (('sensors', 'perceive'), 'obl'), (('and', 'acts'), 'cc'), (('acts', 'sensors'), 'conj'), (('upon', 'environment'), 'case'), (('that', 'environment'), 'det'), (('environment', 'perceive'), 'obl'), (('through', 'effectors'), 'case'), (('effectors', 'environment'), 'nmod'), (('.', 'anything'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 · A human agent has sensory organs such as eyes, ears, nose, tongue and skin parallel to the sensors, and other organs such as hands, legs, mouth, for effectors. 

Tokens are: 
>> ['·', 'A', 'human', 'agent', 'has', 'sensory', 'organs', 'such', 'as', 'eyes', ',', 'ears', ',', 'nose', ',', 'tongue', 'and', 'skin', 'parallel', 'to', 'the', 'sensors', ',', 'and', 'other', 'organs', 'such', 'as', 'hands', ',', 'legs', ',', 'mouth', ',', 'for', 'effectors', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('A', 'DET'), ('human', 'ADJ'), ('agent', 'NOUN'), ('has', 'VERB'), ('sensory', 'ADJ'), ('organs', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('eyes', 'NOUN'), (',', 'PUNCT'), ('ears', 'NOUN'), (',', 'PUNCT'), ('nose', 'NOUN'), (',', 'PUNCT'), ('tongue', 'NOUN'), ('and', 'CCONJ'), ('skin', 'NOUN'), ('parallel', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('sensors', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('other', 'ADJ'), ('organs', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('hands', 'NOUN'), (',', 'PUNCT'), ('legs', 'NOUN'), (',', 'PUNCT'), ('mouth', 'NOUN'), (',', 'PUNCT'), ('for', 'ADP'), ('effectors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('A', 'DT'), ('human', 'JJ'), ('agent', 'NN'), ('has', 'VBZ'), ('sensory', 'JJ'), ('organs', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('eyes', 'NNS'), (',', ','), ('ears', 'NNS'), (',', ','), ('nose', 'NN'), (',', ','), ('tongue', 'NN'), ('and', 'CC'), ('skin', 'NN'), ('parallel', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('sensors', 'NNS'), (',', ','), ('and', 'CC'), ('other', 'JJ'), ('organs', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('hands', 'NNS'), (',', ','), ('legs', 'NNS'), (',', ','), ('mouth', 'NN'), (',', ','), ('for', 'IN'), ('effectors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('A', 'a'), ('human', 'human'), ('agent', 'agent'), ('has', 'have'), ('sensory', 'sensory'), ('organs', 'organ'), ('such', 'such'), ('as', 'as'), ('eyes', 'eye'), (',', ','), ('ears', 'ear'), (',', ','), ('nose', 'nose'), (',', ','), ('tongue', 'tongue'), ('and', 'and'), ('skin', 'skin'), ('parallel', 'parallel'), ('to', 'to'), ('the', 'the'), ('sensors', 'sensor'), (',', ','), ('and', 'and'), ('other', 'other'), ('organs', 'organ'), ('such', 'such'), ('as', 'as'), ('hands', 'hand'), (',', ','), ('legs', 'leg'), (',', ','), ('mouth', 'mouth'), (',', ','), ('for', 'for'), ('effectors', 'effector'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'has'), 'punct'), (('A', 'agent'), 'det'), (('human', 'agent'), 'amod'), (('agent', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('sensory', 'organs'), 'amod'), (('organs', 'has'), 'obj'), (('such', 'eyes'), 'case'), (('as', 'such'), 'fixed'), (('eyes', 'organs'), 'nmod'), ((',', 'ears'), 'punct'), (('ears', 'eyes'), 'conj'), ((',', 'nose'), 'punct'), (('nose', 'eyes'), 'conj'), ((',', 'tongue'), 'punct'), (('tongue', 'eyes'), 'conj'), (('and', 'skin'), 'cc'), (('skin', 'eyes'), 'conj'), (('parallel', 'eyes'), 'amod'), (('to', 'sensors'), 'case'), (('the', 'sensors'), 'det'), (('sensors', 'parallel'), 'obl'), ((',', 'organs'), 'punct'), (('and', 'organs'), 'cc'), (('other', 'organs'), 'amod'), (('organs', 'eyes'), 'conj'), (('such', 'hands'), 'case'), (('as', 'such'), 'fixed'), (('hands', 'organs'), 'nmod'), ((',', 'legs'), 'punct'), (('legs', 'hands'), 'conj'), ((',', 'mouth'), 'punct'), (('mouth', 'hands'), 'conj'), ((',', 'effectors'), 'punct'), (('for', 'effectors'), 'case'), (('effectors', 'hands'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 · A robotic agent replaces cameras and infrared range finders for the sensors, and various motors and actuators for effectors. 

Tokens are: 
>> ['·', 'A', 'robotic', 'agent', 'replaces', 'cameras', 'and', 'infrared', 'range', 'finders', 'for', 'the', 'sensors', ',', 'and', 'various', 'motors', 'and', 'actuators', 'for', 'effectors', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('A', 'DET'), ('robotic', 'ADJ'), ('agent', 'NOUN'), ('replaces', 'VERB'), ('cameras', 'NOUN'), ('and', 'CCONJ'), ('infrared', 'ADJ'), ('range', 'NOUN'), ('finders', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('sensors', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('various', 'ADJ'), ('motors', 'NOUN'), ('and', 'CCONJ'), ('actuators', 'NOUN'), ('for', 'ADP'), ('effectors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('A', 'DT'), ('robotic', 'JJ'), ('agent', 'NN'), ('replaces', 'VBZ'), ('cameras', 'NNS'), ('and', 'CC'), ('infrared', 'JJ'), ('range', 'NN'), ('finders', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('sensors', 'NNS'), (',', ','), ('and', 'CC'), ('various', 'JJ'), ('motors', 'NNS'), ('and', 'CC'), ('actuators', 'NNS'), ('for', 'IN'), ('effectors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('A', 'a'), ('robotic', 'robotic'), ('agent', 'agent'), ('replaces', 'replace'), ('cameras', 'camera'), ('and', 'and'), ('infrared', 'infrared'), ('range', 'range'), ('finders', 'finder'), ('for', 'for'), ('the', 'the'), ('sensors', 'sensor'), (',', ','), ('and', 'and'), ('various', 'various'), ('motors', 'motor'), ('and', 'and'), ('actuators', 'actuator'), ('for', 'for'), ('effectors', 'effector'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'replaces'), 'punct'), (('A', 'agent'), 'det'), (('robotic', 'agent'), 'amod'), (('agent', 'replaces'), 'nsubj'), (('replaces', 'root'), 'root'), (('cameras', 'replaces'), 'obj'), (('and', 'finders'), 'cc'), (('infrared', 'range'), 'amod'), (('range', 'finders'), 'compound'), (('finders', 'cameras'), 'conj'), (('for', 'sensors'), 'case'), (('the', 'sensors'), 'det'), (('sensors', 'replaces'), 'obl'), ((',', 'motors'), 'punct'), (('and', 'motors'), 'cc'), (('various', 'motors'), 'amod'), (('motors', 'cameras'), 'conj'), (('and', 'actuators'), 'cc'), (('actuators', 'motors'), 'conj'), (('for', 'effectors'), 'case'), (('effectors', 'motors'), 'nmod'), (('.', 'replaces'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 · A software agent has encoded bit strings as its programs and actions. 

Tokens are: 
>> ['·', 'A', 'software', 'agent', 'has', 'encoded', 'bit', 'strings', 'as', 'its', 'programs', 'and', 'actions', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('A', 'DET'), ('software', 'NOUN'), ('agent', 'NOUN'), ('has', 'AUX'), ('encoded', 'VERB'), ('bit', 'NOUN'), ('strings', 'NOUN'), ('as', 'ADP'), ('its', 'PRON'), ('programs', 'NOUN'), ('and', 'CCONJ'), ('actions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('A', 'DT'), ('software', 'NN'), ('agent', 'NN'), ('has', 'VBZ'), ('encoded', 'VBN'), ('bit', 'NN'), ('strings', 'NNS'), ('as', 'IN'), ('its', 'PRP$'), ('programs', 'NNS'), ('and', 'CC'), ('actions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('A', 'a'), ('software', 'software'), ('agent', 'agent'), ('has', 'have'), ('encoded', 'encode'), ('bit', 'bit'), ('strings', 'string'), ('as', 'as'), ('its', 'its'), ('programs', 'program'), ('and', 'and'), ('actions', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'encoded'), 'punct'), (('A', 'agent'), 'det'), (('software', 'agent'), 'compound'), (('agent', 'encoded'), 'nsubj'), (('has', 'encoded'), 'aux'), (('encoded', 'root'), 'root'), (('bit', 'strings'), 'compound'), (('strings', 'encoded'), 'obj'), (('as', 'programs'), 'case'), (('its', 'programs'), 'nmod:poss'), (('programs', 'encoded'), 'obl'), (('and', 'actions'), 'cc'), (('actions', 'programs'), 'conj'), (('.', 'encoded'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 Agent Terminology · Performance Measure of Agent − 

Tokens are: 
>> ['Agent', 'Terminology', '·', 'Performance', 'Measure', 'of', 'Agent', '−'] 

 UPOS tags are: 
>> [('Agent', 'NOUN'), ('Terminology', 'NOUN'), ('·', 'PUNCT'), ('Performance', 'NOUN'), ('Measure', 'NOUN'), ('of', 'ADP'), ('Agent', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Agent', 'NN'), ('Terminology', 'NN'), ('·', 'NFP'), ('Performance', 'NN'), ('Measure', 'NN'), ('of', 'IN'), ('Agent', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('Agent', 'Agent'), ('Terminology', 'terminology'), ('·', '·'), ('Performance', 'performance'), ('Measure', 'measure'), ('of', 'of'), ('Agent', 'Agent'), ('−', "''")] 

 Dependency tags are: 
>> [(('Agent', 'Terminology'), 'compound'), (('Terminology', 'root'), 'root'), (('·', 'Terminology'), 'punct'), (('Performance', 'Measure'), 'compound'), (('Measure', 'Terminology'), 'parataxis'), (('of', 'Agent'), 'case'), (('Agent', 'Measure'), 'nmod'), (('−', 'Terminology'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 It is the criteria, which determines how successful an agent is. 

Tokens are: 
>> ['It', 'is', 'the', 'criteria', ',', 'which', 'determines', 'how', 'successful', 'an', 'agent', 'is', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('criteria', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('determines', 'VERB'), ('how', 'SCONJ'), ('successful', 'ADJ'), ('an', 'DET'), ('agent', 'NOUN'), ('is', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('criteria', 'NN'), (',', ','), ('which', 'WDT'), ('determines', 'VBZ'), ('how', 'WRB'), ('successful', 'JJ'), ('an', 'DT'), ('agent', 'NN'), ('is', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('criteria', 'criterion'), (',', ','), ('which', 'which'), ('determines', 'determine'), ('how', 'how'), ('successful', 'successful'), ('an', 'a'), ('agent', 'agent'), ('is', 'be'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'criteria'), 'nsubj'), (('is', 'criteria'), 'cop'), (('the', 'criteria'), 'det'), (('criteria', 'root'), 'root'), ((',', 'determines'), 'punct'), (('which', 'determines'), 'nsubj'), (('determines', 'criteria'), 'acl:relcl'), (('how', 'successful'), 'mark'), (('successful', 'determines'), 'ccomp'), (('an', 'agent'), 'det'), (('agent', 'successful'), 'nsubj'), (('is', 'successful'), 'cop'), (('.', 'criteria'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 · Behavior of Agent − 

Tokens are: 
>> ['·', 'Behavior', 'of', 'Agent', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Behavior', 'NOUN'), ('of', 'ADP'), ('Agent', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Behavior', 'NN'), ('of', 'IN'), ('Agent', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Behavior', 'behavior'), ('of', 'of'), ('Agent', 'Agent'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Behavior'), 'punct'), (('Behavior', 'root'), 'root'), (('of', 'Agent'), 'case'), (('Agent', 'Behavior'), 'nmod'), (('−', 'Behavior'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 It is the action that agent performs after any given sequence of percepts. 

Tokens are: 
>> ['It', 'is', 'the', 'action', 'that', 'agent', 'performs', 'after', 'any', 'given', 'sequence', 'of', 'percepts', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('action', 'NOUN'), ('that', 'DET'), ('agent', 'NOUN'), ('performs', 'VERB'), ('after', 'ADP'), ('any', 'DET'), ('given', 'VERB'), ('sequence', 'NOUN'), ('of', 'ADP'), ('percepts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('action', 'NN'), ('that', 'DT'), ('agent', 'NN'), ('performs', 'VBZ'), ('after', 'IN'), ('any', 'DT'), ('given', 'VBN'), ('sequence', 'NN'), ('of', 'IN'), ('percepts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('action', 'action'), ('that', 'that'), ('agent', 'agent'), ('performs', 'perform'), ('after', 'after'), ('any', 'any'), ('given', 'give'), ('sequence', 'sequence'), ('of', 'of'), ('percepts', 'percept'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'action'), 'nsubj'), (('is', 'action'), 'cop'), (('the', 'action'), 'det'), (('action', 'root'), 'root'), (('that', 'agent'), 'det'), (('agent', 'performs'), 'nsubj'), (('performs', 'action'), 'acl:relcl'), (('after', 'sequence'), 'case'), (('any', 'sequence'), 'det'), (('given', 'sequence'), 'amod'), (('sequence', 'performs'), 'obl'), (('of', 'percepts'), 'case'), (('percepts', 'sequence'), 'nmod'), (('.', 'action'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 · Percept − 

Tokens are: 
>> ['·', 'Percept', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Percept', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Percept', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Percept', 'percept'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Percept'), 'punct'), (('Percept', 'root'), 'root'), (('−', 'Percept'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 15 ===========================

 It is agent’s perceptual inputs at a given instance. 

Tokens are: 
>> ['It', 'is', 'agent', '’s', 'perceptual', 'inputs', 'at', 'a', 'given', 'instance', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('agent', 'NOUN'), ('’s', 'PART'), ('perceptual', 'ADJ'), ('inputs', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('given', 'VERB'), ('instance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('agent', 'NN'), ('’s', 'POS'), ('perceptual', 'JJ'), ('inputs', 'NNS'), ('at', 'IN'), ('a', 'DT'), ('given', 'VBN'), ('instance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('agent', 'agent'), ('’s', "'s"), ('perceptual', 'perceptual'), ('inputs', 'input'), ('at', 'at'), ('a', 'a'), ('given', 'give'), ('instance', 'instance'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'inputs'), 'nsubj'), (('is', 'inputs'), 'cop'), (('agent', 'inputs'), 'nmod:poss'), (('’s', 'agent'), 'case'), (('perceptual', 'inputs'), 'amod'), (('inputs', 'root'), 'root'), (('at', 'instance'), 'case'), (('a', 'instance'), 'det'), (('given', 'instance'), 'amod'), (('instance', 'inputs'), 'nmod'), (('.', 'inputs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 · Percept Sequence − 

Tokens are: 
>> ['·', 'Percept', 'Sequence', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Percept', 'NOUN'), ('Sequence', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Percept', 'NN'), ('Sequence', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Percept', 'percept'), ('Sequence', 'sequence'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Sequence'), 'punct'), (('Percept', 'Sequence'), 'compound'), (('Sequence', 'root'), 'root'), (('−', 'Sequence'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 It is the history of all that an agent has perceived till date. 

Tokens are: 
>> ['It', 'is', 'the', 'history', 'of', 'all', 'that', 'an', 'agent', 'has', 'perceived', 'till', 'date', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('history', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('that', 'SCONJ'), ('an', 'DET'), ('agent', 'NOUN'), ('has', 'AUX'), ('perceived', 'VERB'), ('till', 'ADP'), ('date', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('history', 'NN'), ('of', 'IN'), ('all', 'DT'), ('that', 'IN'), ('an', 'DT'), ('agent', 'NN'), ('has', 'VBZ'), ('perceived', 'VBN'), ('till', 'IN'), ('date', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('history', 'history'), ('of', 'of'), ('all', 'all'), ('that', 'that'), ('an', 'a'), ('agent', 'agent'), ('has', 'have'), ('perceived', 'perceive'), ('till', 'till'), ('date', 'date'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'history'), 'nsubj'), (('is', 'history'), 'cop'), (('the', 'history'), 'det'), (('history', 'root'), 'root'), (('of', 'all'), 'case'), (('all', 'history'), 'nmod'), (('that', 'perceived'), 'mark'), (('an', 'agent'), 'det'), (('agent', 'perceived'), 'nsubj'), (('has', 'perceived'), 'aux'), (('perceived', 'all'), 'acl:relcl'), (('till', 'date'), 'case'), (('date', 'perceived'), 'obl'), (('.', 'history'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 · Agent Function − 

Tokens are: 
>> ['·', 'Agent', 'Function', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Agent', 'NOUN'), ('Function', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Agent', 'NN'), ('Function', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Agent', 'Agent'), ('Function', 'function'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Function'), 'punct'), (('Agent', 'Function'), 'compound'), (('Function', 'root'), 'root'), (('−', 'Function'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 It is a map from the precept sequence to an action. 

Tokens are: 
>> ['It', 'is', 'a', 'map', 'from', 'the', 'precept', 'sequence', 'to', 'an', 'action', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('map', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('precept', 'NOUN'), ('sequence', 'NOUN'), ('to', 'ADP'), ('an', 'DET'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('map', 'NN'), ('from', 'IN'), ('the', 'DT'), ('precept', 'NN'), ('sequence', 'NN'), ('to', 'IN'), ('an', 'DT'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('a', 'a'), ('map', 'map'), ('from', 'from'), ('the', 'the'), ('precept', 'precept'), ('sequence', 'sequence'), ('to', 'to'), ('an', 'a'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'map'), 'nsubj'), (('is', 'map'), 'cop'), (('a', 'map'), 'det'), (('map', 'root'), 'root'), (('from', 'sequence'), 'case'), (('the', 'sequence'), 'det'), (('precept', 'sequence'), 'compound'), (('sequence', 'map'), 'nmod'), (('to', 'action'), 'case'), (('an', 'action'), 'det'), (('action', 'sequence'), 'nmod'), (('.', 'map'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 Rationality Rationality is nothing but status of being reasonable, sensible, and having good sense of judgment. 

Tokens are: 
>> ['Rationality', 'Rationality', 'is', 'nothing', 'but', 'status', 'of', 'being', 'reasonable', ',', 'sensible', ',', 'and', 'having', 'good', 'sense', 'of', 'judgment', '.'] 

 UPOS tags are: 
>> [('Rationality', 'NOUN'), ('Rationality', 'NOUN'), ('is', 'AUX'), ('nothing', 'PRON'), ('but', 'ADP'), ('status', 'NOUN'), ('of', 'SCONJ'), ('being', 'AUX'), ('reasonable', 'ADJ'), (',', 'PUNCT'), ('sensible', 'ADJ'), (',', 'PUNCT'), ('and', 'CCONJ'), ('having', 'VERB'), ('good', 'ADJ'), ('sense', 'NOUN'), ('of', 'ADP'), ('judgment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Rationality', 'NN'), ('Rationality', 'NN'), ('is', 'VBZ'), ('nothing', 'NN'), ('but', 'IN'), ('status', 'NN'), ('of', 'IN'), ('being', 'VBG'), ('reasonable', 'JJ'), (',', ','), ('sensible', 'JJ'), (',', ','), ('and', 'CC'), ('having', 'VBG'), ('good', 'JJ'), ('sense', 'NN'), ('of', 'IN'), ('judgment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Rationality', 'rationality'), ('Rationality', 'rationality'), ('is', 'be'), ('nothing', 'nothing'), ('but', 'but'), ('status', 'status'), ('of', 'of'), ('being', 'be'), ('reasonable', 'reasonable'), (',', ','), ('sensible', 'sensible'), (',', ','), ('and', 'and'), ('having', 'have'), ('good', 'good'), ('sense', 'sense'), ('of', 'of'), ('judgment', 'judgment'), ('.', '.')] 

 Dependency tags are: 
>> [(('Rationality', 'Rationality'), 'compound'), (('Rationality', 'nothing'), 'nsubj'), (('is', 'nothing'), 'cop'), (('nothing', 'root'), 'root'), (('but', 'status'), 'case'), (('status', 'nothing'), 'nmod'), (('of', 'reasonable'), 'mark'), (('being', 'reasonable'), 'cop'), (('reasonable', 'status'), 'acl'), ((',', 'sensible'), 'punct'), (('sensible', 'reasonable'), 'conj'), ((',', 'having'), 'punct'), (('and', 'having'), 'cc'), (('having', 'reasonable'), 'conj'), (('good', 'sense'), 'amod'), (('sense', 'having'), 'obj'), (('of', 'judgment'), 'case'), (('judgment', 'sense'), 'nmod'), (('.', 'nothing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 Rationality is concerned with expected actions and results depending upon what the agent has perceived. 

Tokens are: 
>> ['Rationality', 'is', 'concerned', 'with', 'expected', 'actions', 'and', 'results', 'depending', 'upon', 'what', 'the', 'agent', 'has', 'perceived', '.'] 

 UPOS tags are: 
>> [('Rationality', 'NOUN'), ('is', 'AUX'), ('concerned', 'ADJ'), ('with', 'ADP'), ('expected', 'VERB'), ('actions', 'NOUN'), ('and', 'CCONJ'), ('results', 'NOUN'), ('depending', 'VERB'), ('upon', 'ADP'), ('what', 'PRON'), ('the', 'DET'), ('agent', 'NOUN'), ('has', 'AUX'), ('perceived', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Rationality', 'NN'), ('is', 'VBZ'), ('concerned', 'JJ'), ('with', 'IN'), ('expected', 'VBN'), ('actions', 'NNS'), ('and', 'CC'), ('results', 'NNS'), ('depending', 'VBG'), ('upon', 'IN'), ('what', 'WP'), ('the', 'DT'), ('agent', 'NN'), ('has', 'VBZ'), ('perceived', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Rationality', 'rationality'), ('is', 'be'), ('concerned', 'concerned'), ('with', 'with'), ('expected', 'expect'), ('actions', 'action'), ('and', 'and'), ('results', 'result'), ('depending', 'depend'), ('upon', 'upon'), ('what', 'what'), ('the', 'the'), ('agent', 'agent'), ('has', 'have'), ('perceived', 'perceive'), ('.', '.')] 

 Dependency tags are: 
>> [(('Rationality', 'concerned'), 'nsubj'), (('is', 'concerned'), 'cop'), (('concerned', 'root'), 'root'), (('with', 'actions'), 'case'), (('expected', 'actions'), 'amod'), (('actions', 'concerned'), 'obl'), (('and', 'results'), 'cc'), (('results', 'actions'), 'conj'), (('depending', 'what'), 'case'), (('upon', 'depending'), 'fixed'), (('what', 'concerned'), 'obl'), (('the', 'agent'), 'det'), (('agent', 'perceived'), 'nsubj'), (('has', 'perceived'), 'aux'), (('perceived', 'what'), 'acl:relcl'), (('.', 'concerned'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 Performing actions with the aim of obtaining useful information is an important part of rationality. 

Tokens are: 
>> ['Performing', 'actions', 'with', 'the', 'aim', 'of', 'obtaining', 'useful', 'information', 'is', 'an', 'important', 'part', 'of', 'rationality', '.'] 

 UPOS tags are: 
>> [('Performing', 'VERB'), ('actions', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('aim', 'NOUN'), ('of', 'SCONJ'), ('obtaining', 'VERB'), ('useful', 'ADJ'), ('information', 'NOUN'), ('is', 'AUX'), ('an', 'DET'), ('important', 'ADJ'), ('part', 'NOUN'), ('of', 'ADP'), ('rationality', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Performing', 'VBG'), ('actions', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('aim', 'NN'), ('of', 'IN'), ('obtaining', 'VBG'), ('useful', 'JJ'), ('information', 'NN'), ('is', 'VBZ'), ('an', 'DT'), ('important', 'JJ'), ('part', 'NN'), ('of', 'IN'), ('rationality', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Performing', 'perform'), ('actions', 'action'), ('with', 'with'), ('the', 'the'), ('aim', 'aim'), ('of', 'of'), ('obtaining', 'obtain'), ('useful', 'useful'), ('information', 'information'), ('is', 'be'), ('an', 'a'), ('important', 'important'), ('part', 'part'), ('of', 'of'), ('rationality', 'rationality'), ('.', '.')] 

 Dependency tags are: 
>> [(('Performing', 'part'), 'csubj'), (('actions', 'Performing'), 'obj'), (('with', 'aim'), 'case'), (('the', 'aim'), 'det'), (('aim', 'Performing'), 'obl'), (('of', 'obtaining'), 'mark'), (('obtaining', 'aim'), 'acl'), (('useful', 'information'), 'amod'), (('information', 'obtaining'), 'obj'), (('is', 'part'), 'cop'), (('an', 'part'), 'det'), (('important', 'part'), 'amod'), (('part', 'root'), 'root'), (('of', 'rationality'), 'case'), (('rationality', 'part'), 'nmod'), (('.', 'part'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 23 ===========================

 What is Ideal Rational Agent? 

Tokens are: 
>> ['What', 'is', 'Ideal', 'Rational', 'Agent', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('Ideal', 'ADJ'), ('Rational', 'ADJ'), ('Agent', 'PROPN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('Ideal', 'NNP'), ('Rational', 'NNP'), ('Agent', 'NNP'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('Ideal', 'ideal'), ('Rational', 'Rational'), ('Agent', 'Agent'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('Ideal', 'Agent'), 'amod'), (('Rational', 'Agent'), 'amod'), (('Agent', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 24 ===========================

 An ideal rational agent is the one, which is capable of doing expected actions to maximize its performance measure, on the basis of − · Its percept sequence · Its built-in knowledge base Rationality of an agent depends on the following − · 

Tokens are: 
>> ['An', 'ideal', 'rational', 'agent', 'is', 'the', 'one', ',', 'which', 'is', 'capable', 'of', 'doing', 'expected', 'actions', 'to', 'maximize', 'its', 'performance', 'measure', ',', 'on', 'the', 'basis', 'of', '−', '·', 'Its', 'percept', 'sequence', '·', 'Its', 'built', '-', 'in', 'knowledge', 'base', 'Rationality', 'of', 'an', 'agent', 'depends', 'on', 'the', 'following', '−', '·'] 

 UPOS tags are: 
>> [('An', 'DET'), ('ideal', 'ADJ'), ('rational', 'ADJ'), ('agent', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('one', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('doing', 'VERB'), ('expected', 'VERB'), ('actions', 'NOUN'), ('to', 'PART'), ('maximize', 'VERB'), ('its', 'PRON'), ('performance', 'NOUN'), ('measure', 'NOUN'), (',', 'PUNCT'), ('on', 'ADP'), ('the', 'DET'), ('basis', 'NOUN'), ('of', 'ADP'), ('−', 'NOUN'), ('·', 'PUNCT'), ('Its', 'PRON'), ('percept', 'NOUN'), ('sequence', 'NOUN'), ('·', 'PUNCT'), ('Its', 'PRON'), ('built', 'VERB'), ('-', 'PUNCT'), ('in', 'ADP'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('Rationality', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('agent', 'NOUN'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('following', 'VERB'), ('−', 'PUNCT'), ('·', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('ideal', 'JJ'), ('rational', 'JJ'), ('agent', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('one', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('capable', 'JJ'), ('of', 'IN'), ('doing', 'VBG'), ('expected', 'VBN'), ('actions', 'NNS'), ('to', 'TO'), ('maximize', 'VB'), ('its', 'PRP$'), ('performance', 'NN'), ('measure', 'NN'), (',', ','), ('on', 'IN'), ('the', 'DT'), ('basis', 'NN'), ('of', 'IN'), ('−', 'NN'), ('·', 'NFP'), ('Its', 'PRP$'), ('percept', 'NN'), ('sequence', 'NN'), ('·', 'NFP'), ('Its', 'PRP$'), ('built', 'VBN'), ('-', 'HYPH'), ('in', 'IN'), ('knowledge', 'NN'), ('base', 'NN'), ('Rationality', 'NN'), ('of', 'IN'), ('an', 'DT'), ('agent', 'NN'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('following', 'VBG'), ('−', '.'), ('·', 'NFP')] 

 Lemmas are: 
>> [('An', 'a'), ('ideal', 'ideal'), ('rational', 'rational'), ('agent', 'agent'), ('is', 'be'), ('the', 'the'), ('one', 'one'), (',', ','), ('which', 'which'), ('is', 'be'), ('capable', 'capable'), ('of', 'of'), ('doing', 'do'), ('expected', 'expect'), ('actions', 'action'), ('to', 'to'), ('maximize', 'maximize'), ('its', 'its'), ('performance', 'performance'), ('measure', 'measure'), (',', ','), ('on', 'on'), ('the', 'the'), ('basis', 'basis'), ('of', 'of'), ('−', '−'), ('·', '·'), ('Its', 'its'), ('percept', 'percept'), ('sequence', 'sequence'), ('·', '·'), ('Its', 'its'), ('built', 'build'), ('-', '-'), ('in', 'in'), ('knowledge', 'knowledge'), ('base', 'base'), ('Rationality', 'rationality'), ('of', 'of'), ('an', 'a'), ('agent', 'agent'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('following', 'follow'), ('−', "''"), ('·', '·')] 

 Dependency tags are: 
>> [(('An', 'agent'), 'det'), (('ideal', 'agent'), 'amod'), (('rational', 'agent'), 'amod'), (('agent', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('the', 'one'), 'det'), (('one', 'root'), 'root'), ((',', 'one'), 'punct'), (('which', 'capable'), 'nsubj'), (('is', 'capable'), 'cop'), (('capable', 'one'), 'acl:relcl'), (('of', 'doing'), 'mark'), (('doing', 'capable'), 'advcl'), (('expected', 'actions'), 'amod'), (('actions', 'doing'), 'obj'), (('to', 'maximize'), 'mark'), (('maximize', 'actions'), 'acl'), (('its', 'measure'), 'nmod:poss'), (('performance', 'measure'), 'compound'), (('measure', 'maximize'), 'obj'), ((',', 'basis'), 'punct'), (('on', 'basis'), 'case'), (('the', 'basis'), 'det'), (('basis', 'maximize'), 'obl'), (('of', '−'), 'case'), (('−', 'basis'), 'nmod'), (('·', 'sequence'), 'punct'), (('Its', 'sequence'), 'nmod:poss'), (('percept', 'sequence'), 'compound'), (('sequence', 'basis'), 'appos'), (('·', 'depends'), 'punct'), (('Its', 'Rationality'), 'nmod:poss'), (('built', 'Rationality'), 'amod'), (('-', 'built'), 'punct'), (('in', 'knowledge'), 'case'), (('knowledge', 'Rationality'), 'compound'), (('base', 'Rationality'), 'compound'), (('Rationality', 'depends'), 'nsubj'), (('of', 'agent'), 'case'), (('an', 'agent'), 'det'), (('agent', 'Rationality'), 'nmod'), (('depends', 'sequence'), 'acl:relcl'), (('on', 'the'), 'case'), (('the', 'depends'), 'obl'), (('following', 'the'), 'amod'), (('−', 'depends'), 'punct'), (('·', 'one'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 The performance measures, which determine the degree of success. 

Tokens are: 
>> ['The', 'performance', 'measures', ',', 'which', 'determine', 'the', 'degree', 'of', 'success', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('performance', 'NOUN'), ('measures', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('determine', 'VERB'), ('the', 'DET'), ('degree', 'NOUN'), ('of', 'ADP'), ('success', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('performance', 'NN'), ('measures', 'NNS'), (',', ','), ('which', 'WDT'), ('determine', 'VBP'), ('the', 'DT'), ('degree', 'NN'), ('of', 'IN'), ('success', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('performance', 'performance'), ('measures', 'measure'), (',', ','), ('which', 'which'), ('determine', 'determine'), ('the', 'the'), ('degree', 'degree'), ('of', 'of'), ('success', 'success'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'measures'), 'det'), (('performance', 'measures'), 'compound'), (('measures', 'root'), 'root'), ((',', 'measures'), 'punct'), (('which', 'determine'), 'nsubj'), (('determine', 'measures'), 'acl:relcl'), (('the', 'degree'), 'det'), (('degree', 'determine'), 'obj'), (('of', 'success'), 'case'), (('success', 'degree'), 'nmod'), (('.', 'measures'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 · Agent’s Percept Sequence till now. 

Tokens are: 
>> ['·', 'Agent', '’s', 'Percept', 'Sequence', 'till', 'now', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Agent', 'PROPN'), ('’s', 'PART'), ('Percept', 'NOUN'), ('Sequence', 'NOUN'), ('till', 'ADP'), ('now', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Agent', 'NNP'), ('’s', 'POS'), ('Percept', 'NN'), ('Sequence', 'NN'), ('till', 'IN'), ('now', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Agent', 'Agent'), ('’s', "'s"), ('Percept', 'percept'), ('Sequence', 'sequence'), ('till', 'till'), ('now', 'now'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Sequence'), 'punct'), (('Agent', 'Sequence'), 'nmod:poss'), (('’s', 'Agent'), 'case'), (('Percept', 'Sequence'), 'compound'), (('Sequence', 'root'), 'root'), (('till', 'now'), 'case'), (('now', 'Sequence'), 'nmod'), (('.', 'Sequence'), 'punct')]

 Named Entities are: 
>> [('Percept Sequence', 'PERSON')]

========================== Sentence 27 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 The agent’s prior knowledge about the environment. 

Tokens are: 
>> ['The', 'agent', '’s', 'prior', 'knowledge', 'about', 'the', 'environment', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('agent', 'NOUN'), ('’s', 'PART'), ('prior', 'ADJ'), ('knowledge', 'NOUN'), ('about', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('agent', 'NN'), ('’s', 'POS'), ('prior', 'JJ'), ('knowledge', 'NN'), ('about', 'IN'), ('the', 'DT'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('agent', 'agent'), ('’s', "'s"), ('prior', 'prior'), ('knowledge', 'knowledge'), ('about', 'about'), ('the', 'the'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'agent'), 'det'), (('agent', 'knowledge'), 'nmod:poss'), (('’s', 'agent'), 'case'), (('prior', 'knowledge'), 'amod'), (('knowledge', 'root'), 'root'), (('about', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'knowledge'), 'nmod'), (('.', 'knowledge'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 29 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 The actions that the agent can carry out. 

Tokens are: 
>> ['The', 'actions', 'that', 'the', 'agent', 'can', 'carry', 'out', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('actions', 'NOUN'), ('that', 'PRON'), ('the', 'DET'), ('agent', 'NOUN'), ('can', 'AUX'), ('carry', 'VERB'), ('out', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('actions', 'NNS'), ('that', 'WDT'), ('the', 'DT'), ('agent', 'NN'), ('can', 'MD'), ('carry', 'VB'), ('out', 'RP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('actions', 'action'), ('that', 'that'), ('the', 'the'), ('agent', 'agent'), ('can', 'can'), ('carry', 'carry'), ('out', 'out'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'actions'), 'det'), (('actions', 'root'), 'root'), (('that', 'carry'), 'obj'), (('the', 'agent'), 'det'), (('agent', 'carry'), 'nsubj'), (('can', 'carry'), 'aux'), (('carry', 'actions'), 'acl:relcl'), (('out', 'carry'), 'compound:prt'), (('.', 'actions'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 31 ===========================

 A rational agent always performs right action, where the right action means the action that causes the agent to be most successful in the given percept sequence. 

Tokens are: 
>> ['A', 'rational', 'agent', 'always', 'performs', 'right', 'action', ',', 'where', 'the', 'right', 'action', 'means', 'the', 'action', 'that', 'causes', 'the', 'agent', 'to', 'be', 'most', 'successful', 'in', 'the', 'given', 'percept', 'sequence', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('rational', 'ADJ'), ('agent', 'NOUN'), ('always', 'ADV'), ('performs', 'VERB'), ('right', 'ADJ'), ('action', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('the', 'DET'), ('right', 'ADJ'), ('action', 'NOUN'), ('means', 'VERB'), ('the', 'DET'), ('action', 'NOUN'), ('that', 'PRON'), ('causes', 'VERB'), ('the', 'DET'), ('agent', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('most', 'ADV'), ('successful', 'ADJ'), ('in', 'ADP'), ('the', 'DET'), ('given', 'VERB'), ('percept', 'NOUN'), ('sequence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('rational', 'JJ'), ('agent', 'NN'), ('always', 'RB'), ('performs', 'VBZ'), ('right', 'JJ'), ('action', 'NN'), (',', ','), ('where', 'WRB'), ('the', 'DT'), ('right', 'JJ'), ('action', 'NN'), ('means', 'VBZ'), ('the', 'DT'), ('action', 'NN'), ('that', 'WDT'), ('causes', 'VBZ'), ('the', 'DT'), ('agent', 'NN'), ('to', 'TO'), ('be', 'VB'), ('most', 'RBS'), ('successful', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('given', 'VBN'), ('percept', 'NN'), ('sequence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('rational', 'rational'), ('agent', 'agent'), ('always', 'always'), ('performs', 'perform'), ('right', 'right'), ('action', 'action'), (',', ','), ('where', 'where'), ('the', 'the'), ('right', 'right'), ('action', 'action'), ('means', 'mean'), ('the', 'the'), ('action', 'action'), ('that', 'that'), ('causes', 'cause'), ('the', 'the'), ('agent', 'agent'), ('to', 'to'), ('be', 'be'), ('most', 'most'), ('successful', 'successful'), ('in', 'in'), ('the', 'the'), ('given', 'give'), ('percept', 'percept'), ('sequence', 'sequence'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'agent'), 'det'), (('rational', 'agent'), 'amod'), (('agent', 'performs'), 'nsubj'), (('always', 'performs'), 'advmod'), (('performs', 'root'), 'root'), (('right', 'action'), 'amod'), (('action', 'performs'), 'obj'), ((',', 'action'), 'punct'), (('where', 'means'), 'mark'), (('the', 'action'), 'det'), (('right', 'action'), 'amod'), (('action', 'means'), 'nsubj'), (('means', 'action'), 'acl:relcl'), (('the', 'action'), 'det'), (('action', 'means'), 'obj'), (('that', 'causes'), 'nsubj'), (('causes', 'action'), 'acl:relcl'), (('the', 'agent'), 'det'), (('agent', 'causes'), 'obj'), (('to', 'successful'), 'mark'), (('be', 'successful'), 'cop'), (('most', 'successful'), 'advmod'), (('successful', 'causes'), 'xcomp'), (('in', 'sequence'), 'case'), (('the', 'sequence'), 'det'), (('given', 'sequence'), 'amod'), (('percept', 'sequence'), 'compound'), (('sequence', 'successful'), 'obl'), (('.', 'performs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 The problem the agent solves is characterized by Performance Measure, Environment, Actuators, and Sensors (PEAS). 

Tokens are: 
>> ['The', 'problem', 'the', 'agent', 'solves', 'is', 'characterized', 'by', 'Performance', 'Measure', ',', 'Environment', ',', 'Actuators', ',', 'and', 'Sensors', '(', 'PEAS', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('problem', 'NOUN'), ('the', 'DET'), ('agent', 'NOUN'), ('solves', 'VERB'), ('is', 'AUX'), ('characterized', 'VERB'), ('by', 'ADP'), ('Performance', 'NOUN'), ('Measure', 'NOUN'), (',', 'PUNCT'), ('Environment', 'NOUN'), (',', 'PUNCT'), ('Actuators', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Sensors', 'NOUN'), ('(', 'PUNCT'), ('PEAS', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('problem', 'NN'), ('the', 'DT'), ('agent', 'NN'), ('solves', 'VBZ'), ('is', 'VBZ'), ('characterized', 'VBN'), ('by', 'IN'), ('Performance', 'NN'), ('Measure', 'NN'), (',', ','), ('Environment', 'NN'), (',', ','), ('Actuators', 'NNS'), (',', ','), ('and', 'CC'), ('Sensors', 'NNS'), ('(', '-LRB-'), ('PEAS', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('problem', 'problem'), ('the', 'the'), ('agent', 'agent'), ('solves', 'solve'), ('is', 'be'), ('characterized', 'characterize'), ('by', 'by'), ('Performance', 'performance'), ('Measure', 'measure'), (',', ','), ('Environment', 'environment'), (',', ','), ('Actuators', 'actuator'), (',', ','), ('and', 'and'), ('Sensors', 'sensor'), ('(', '('), ('PEAS', 'peas'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'problem'), 'det'), (('problem', 'characterized'), 'nsubj:pass'), (('the', 'agent'), 'det'), (('agent', 'solves'), 'nsubj'), (('solves', 'problem'), 'acl:relcl'), (('is', 'characterized'), 'aux:pass'), (('characterized', 'root'), 'root'), (('by', 'Measure'), 'case'), (('Performance', 'Measure'), 'compound'), (('Measure', 'characterized'), 'obl'), ((',', 'Environment'), 'punct'), (('Environment', 'Measure'), 'conj'), ((',', 'Actuators'), 'punct'), (('Actuators', 'Measure'), 'conj'), ((',', 'Sensors'), 'punct'), (('and', 'Sensors'), 'cc'), (('Sensors', 'Measure'), 'conj'), (('(', 'PEAS'), 'punct'), (('PEAS', 'Measure'), 'appos'), ((')', 'PEAS'), 'punct'), (('.', 'characterized'), 'punct')]

 Named Entities are: 
>> [('Performance Measure', 'ORG'), ('Actuators', 'ORG'), ('PEAS', 'ORG')]

========================== Sentence 33 ===========================

 The Structure of Intelligent Agents Agent’s structure can be viewed as − · Agent = Architecture + Agent Program · Architecture = the machinery that an agent executes on. 

Tokens are: 
>> ['The', 'Structure', 'of', 'Intelligent', 'Agents', 'Agent', '’s', 'structure', 'can', 'be', 'viewed', 'as', '−', '·', 'Agent', '=', 'Architecture', '+', 'Agent', 'Program', '·', 'Architecture', '=', 'the', 'machinery', 'that', 'an', 'agent', 'executes', 'on', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Structure', 'PROPN'), ('of', 'ADP'), ('Intelligent', 'ADJ'), ('Agents', 'PROPN'), ('Agent', 'PROPN'), ('’s', 'PART'), ('structure', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('viewed', 'VERB'), ('as', 'ADP'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Agent', 'NOUN'), ('=', 'PUNCT'), ('Architecture', 'NOUN'), ('+', 'SYM'), ('Agent', 'NOUN'), ('Program', 'NOUN'), ('·', 'PUNCT'), ('Architecture', 'NOUN'), ('=', 'PUNCT'), ('the', 'DET'), ('machinery', 'NOUN'), ('that', 'PRON'), ('an', 'DET'), ('agent', 'NOUN'), ('executes', 'VERB'), ('on', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Structure', 'NNP'), ('of', 'IN'), ('Intelligent', 'NNP'), ('Agents', 'NNPS'), ('Agent', 'NNP'), ('’s', 'POS'), ('structure', 'NN'), ('can', 'MD'), ('be', 'VB'), ('viewed', 'VBN'), ('as', 'IN'), ('−', 'NFP'), ('·', 'NFP'), ('Agent', 'NN'), ('=', ','), ('Architecture', 'NN'), ('+', 'SYM'), ('Agent', 'NN'), ('Program', 'NN'), ('·', 'NFP'), ('Architecture', 'NN'), ('=', ':'), ('the', 'DT'), ('machinery', 'NN'), ('that', 'WDT'), ('an', 'DT'), ('agent', 'NN'), ('executes', 'VBZ'), ('on', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('Structure', 'Structure'), ('of', 'of'), ('Intelligent', 'intelligent'), ('Agents', 'Agent'), ('Agent', 'Agent'), ('’s', "'s"), ('structure', 'structure'), ('can', 'can'), ('be', 'be'), ('viewed', 'view'), ('as', 'as'), ('−', "''"), ('·', '·'), ('Agent', 'Agent'), ('=', '='), ('Architecture', 'Architecture'), ('+', '+'), ('Agent', 'Agent'), ('Program', 'program'), ('·', '·'), ('Architecture', 'Architecture'), ('=', '='), ('the', 'the'), ('machinery', 'machinery'), ('that', 'that'), ('an', 'a'), ('agent', 'agent'), ('executes', 'execute'), ('on', 'on'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'Structure'), 'det'), (('Structure', 'viewed'), 'nsubj:pass'), (('of', 'structure'), 'case'), (('Intelligent', 'Agent'), 'amod'), (('Agents', 'Agent'), 'compound'), (('Agent', 'structure'), 'nmod:poss'), (('’s', 'Agent'), 'case'), (('structure', 'Structure'), 'nmod'), (('can', 'viewed'), 'aux'), (('be', 'viewed'), 'aux:pass'), (('viewed', 'root'), 'root'), (('as', 'Agent'), 'case'), (('−', 'Agent'), 'punct'), (('·', 'Agent'), 'punct'), (('Agent', 'viewed'), 'obl'), (('=', 'Agent'), 'punct'), (('Architecture', 'Agent'), 'appos'), (('+', 'Program'), 'cc'), (('Agent', 'Program'), 'compound'), (('Program', 'Agent'), 'conj'), (('·', 'Architecture'), 'punct'), (('Architecture', 'Agent'), 'appos'), (('=', 'machinery'), 'punct'), (('the', 'machinery'), 'det'), (('machinery', 'Agent'), 'appos'), (('that', 'executes'), 'obl'), (('an', 'agent'), 'det'), (('agent', 'executes'), 'nsubj'), (('executes', 'machinery'), 'acl:relcl'), (('on', 'that'), 'case'), (('.', 'viewed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 34 ===========================

 · Agent Program = an implementation of an agent function. 

Tokens are: 
>> ['·', 'Agent', 'Program', '=', 'an', 'implementation', 'of', 'an', 'agent', 'function', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Agent', 'NOUN'), ('Program', 'NOUN'), ('=', 'PUNCT'), ('an', 'DET'), ('implementation', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('agent', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Agent', 'NN'), ('Program', 'NN'), ('=', ','), ('an', 'DT'), ('implementation', 'NN'), ('of', 'IN'), ('an', 'DT'), ('agent', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Agent', 'Agent'), ('Program', 'program'), ('=', '='), ('an', 'a'), ('implementation', 'implementation'), ('of', 'of'), ('an', 'a'), ('agent', 'agent'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Program'), 'punct'), (('Agent', 'Program'), 'compound'), (('Program', 'root'), 'root'), (('=', 'Program'), 'punct'), (('an', 'implementation'), 'det'), (('implementation', 'Program'), 'appos'), (('of', 'function'), 'case'), (('an', 'function'), 'det'), (('agent', 'function'), 'compound'), (('function', 'implementation'), 'nmod'), (('.', 'Program'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 Simple Reflex Agents · 

Tokens are: 
>> ['Simple', 'Reflex', 'Agents', '·'] 

 UPOS tags are: 
>> [('Simple', 'ADJ'), ('Reflex', 'NOUN'), ('Agents', 'NOUN'), ('·', 'PUNCT')] 

 XPOS tags are: 
>> [('Simple', 'JJ'), ('Reflex', 'NN'), ('Agents', 'NNS'), ('·', ',')] 

 Lemmas are: 
>> [('Simple', 'simple'), ('Reflex', 'reflex'), ('Agents', 'agent'), ('·', '·')] 

 Dependency tags are: 
>> [(('Simple', 'Agents'), 'amod'), (('Reflex', 'Agents'), 'compound'), (('Agents', 'root'), 'root'), (('·', 'Agents'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 They choose actions only based on the current percept. 

Tokens are: 
>> ['They', 'choose', 'actions', 'only', 'based', 'on', 'the', 'current', 'percept', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('choose', 'VERB'), ('actions', 'NOUN'), ('only', 'ADV'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('current', 'ADJ'), ('percept', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('choose', 'VBP'), ('actions', 'NNS'), ('only', 'RB'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('current', 'JJ'), ('percept', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('choose', 'choose'), ('actions', 'action'), ('only', 'only'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('current', 'current'), ('percept', 'percept'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'choose'), 'nsubj'), (('choose', 'root'), 'root'), (('actions', 'choose'), 'obj'), (('only', 'based'), 'advmod'), (('based', 'choose'), 'advcl'), (('on', 'percept'), 'case'), (('the', 'percept'), 'det'), (('current', 'percept'), 'amod'), (('percept', 'based'), 'obl'), (('.', 'choose'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 37 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 38 ===========================

 They are rational only if a correct decision is made only on the basis of current precept. 

Tokens are: 
>> ['They', 'are', 'rational', 'only', 'if', 'a', 'correct', 'decision', 'is', 'made', 'only', 'on', 'the', 'basis', 'of', 'current', 'precept', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('are', 'AUX'), ('rational', 'ADJ'), ('only', 'ADV'), ('if', 'SCONJ'), ('a', 'DET'), ('correct', 'ADJ'), ('decision', 'NOUN'), ('is', 'AUX'), ('made', 'VERB'), ('only', 'ADV'), ('on', 'ADP'), ('the', 'DET'), ('basis', 'NOUN'), ('of', 'ADP'), ('current', 'ADJ'), ('precept', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('are', 'VBP'), ('rational', 'JJ'), ('only', 'RB'), ('if', 'IN'), ('a', 'DT'), ('correct', 'JJ'), ('decision', 'NN'), ('is', 'VBZ'), ('made', 'VBN'), ('only', 'RB'), ('on', 'IN'), ('the', 'DT'), ('basis', 'NN'), ('of', 'IN'), ('current', 'JJ'), ('precept', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('are', 'be'), ('rational', 'rational'), ('only', 'only'), ('if', 'if'), ('a', 'a'), ('correct', 'correct'), ('decision', 'decision'), ('is', 'be'), ('made', 'make'), ('only', 'only'), ('on', 'on'), ('the', 'the'), ('basis', 'basis'), ('of', 'of'), ('current', 'current'), ('precept', 'precept'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'rational'), 'nsubj'), (('are', 'rational'), 'cop'), (('rational', 'root'), 'root'), (('only', 'made'), 'advmod'), (('if', 'made'), 'mark'), (('a', 'decision'), 'det'), (('correct', 'decision'), 'amod'), (('decision', 'made'), 'nsubj:pass'), (('is', 'made'), 'aux:pass'), (('made', 'rational'), 'advcl'), (('only', 'basis'), 'advmod'), (('on', 'basis'), 'case'), (('the', 'basis'), 'det'), (('basis', 'made'), 'obl'), (('of', 'precept'), 'case'), (('current', 'precept'), 'amod'), (('precept', 'basis'), 'nmod'), (('.', 'rational'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 39 ===========================

 · Their environment is completely observable. 

Tokens are: 
>> ['·', 'Their', 'environment', 'is', 'completely', 'observable', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Their', 'PRON'), ('environment', 'NOUN'), ('is', 'AUX'), ('completely', 'ADV'), ('observable', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Their', 'PRP$'), ('environment', 'NN'), ('is', 'VBZ'), ('completely', 'RB'), ('observable', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Their', 'they'), ('environment', 'environment'), ('is', 'be'), ('completely', 'completely'), ('observable', 'observable'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'observable'), 'punct'), (('Their', 'environment'), 'nmod:poss'), (('environment', 'observable'), 'nsubj'), (('is', 'observable'), 'cop'), (('completely', 'observable'), 'advmod'), (('observable', 'root'), 'root'), (('.', 'observable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 Condition-Action Rule − 

Tokens are: 
>> ['Condition', '-', 'Action', 'Rule', '−'] 

 UPOS tags are: 
>> [('Condition', 'NOUN'), ('-', 'PUNCT'), ('Action', 'NOUN'), ('Rule', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Condition', 'NN'), ('-', 'HYPH'), ('Action', 'NN'), ('Rule', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('Condition', 'condition'), ('-', '-'), ('Action', 'action'), ('Rule', 'rule'), ('−', "''")] 

 Dependency tags are: 
>> [(('Condition', 'Action'), 'compound'), (('-', 'Action'), 'punct'), (('Action', 'Rule'), 'compound'), (('Rule', 'root'), 'root'), (('−', 'Rule'), 'punct')]

 Named Entities are: 
>> [('Condition-Action Rule', 'LAW')]

========================== Sentence 41 ===========================

 It is a rule that maps a state (condition) to an action. 

Tokens are: 
>> ['It', 'is', 'a', 'rule', 'that', 'maps', 'a', 'state', '(', 'condition', ')', 'to', 'an', 'action', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('rule', 'NOUN'), ('that', 'PRON'), ('maps', 'VERB'), ('a', 'DET'), ('state', 'NOUN'), ('(', 'PUNCT'), ('condition', 'NOUN'), (')', 'PUNCT'), ('to', 'ADP'), ('an', 'DET'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('rule', 'NN'), ('that', 'WDT'), ('maps', 'VBZ'), ('a', 'DT'), ('state', 'NN'), ('(', '-LRB-'), ('condition', 'NN'), (')', '-RRB-'), ('to', 'IN'), ('an', 'DT'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('a', 'a'), ('rule', 'rule'), ('that', 'that'), ('maps', 'map'), ('a', 'a'), ('state', 'state'), ('(', '('), ('condition', 'condition'), (')', ')'), ('to', 'to'), ('an', 'a'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'rule'), 'nsubj'), (('is', 'rule'), 'cop'), (('a', 'rule'), 'det'), (('rule', 'root'), 'root'), (('that', 'maps'), 'nsubj'), (('maps', 'rule'), 'acl:relcl'), (('a', 'state'), 'det'), (('state', 'maps'), 'obj'), (('(', 'condition'), 'punct'), (('condition', 'state'), 'appos'), ((')', 'condition'), 'punct'), (('to', 'action'), 'case'), (('an', 'action'), 'det'), (('action', 'maps'), 'obl'), (('.', 'rule'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 42 ===========================

 Model Based Reflex Agents 

Tokens are: 
>> ['Model', 'Based', 'Reflex', 'Agents'] 

 UPOS tags are: 
>> [('Model', 'NOUN'), ('Based', 'VERB'), ('Reflex', 'NOUN'), ('Agents', 'NOUN')] 

 XPOS tags are: 
>> [('Model', 'NN'), ('Based', 'VBN'), ('Reflex', 'NN'), ('Agents', 'NNS')] 

 Lemmas are: 
>> [('Model', 'model'), ('Based', 'base'), ('Reflex', 'reflex'), ('Agents', 'agent')] 

 Dependency tags are: 
>> [(('Model', 'Based'), 'compound'), (('Based', 'Agents'), 'amod'), (('Reflex', 'Agents'), 'compound'), (('Agents', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 43 ===========================

 They use a model of the world to choose their actions. 

Tokens are: 
>> ['They', 'use', 'a', 'model', 'of', 'the', 'world', 'to', 'choose', 'their', 'actions', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('use', 'VERB'), ('a', 'DET'), ('model', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('world', 'NOUN'), ('to', 'PART'), ('choose', 'VERB'), ('their', 'PRON'), ('actions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('use', 'VBP'), ('a', 'DT'), ('model', 'NN'), ('of', 'IN'), ('the', 'DT'), ('world', 'NN'), ('to', 'TO'), ('choose', 'VB'), ('their', 'PRP$'), ('actions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('use', 'use'), ('a', 'a'), ('model', 'model'), ('of', 'of'), ('the', 'the'), ('world', 'world'), ('to', 'to'), ('choose', 'choose'), ('their', 'they'), ('actions', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'use'), 'nsubj'), (('use', 'root'), 'root'), (('a', 'model'), 'det'), (('model', 'use'), 'obj'), (('of', 'world'), 'case'), (('the', 'world'), 'det'), (('world', 'model'), 'nmod'), (('to', 'choose'), 'mark'), (('choose', 'use'), 'advcl'), (('their', 'actions'), 'nmod:poss'), (('actions', 'choose'), 'obj'), (('.', 'use'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 44 ===========================

 They maintain an internal state. 

Tokens are: 
>> ['They', 'maintain', 'an', 'internal', 'state', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('maintain', 'VERB'), ('an', 'DET'), ('internal', 'ADJ'), ('state', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('maintain', 'VBP'), ('an', 'DT'), ('internal', 'JJ'), ('state', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('maintain', 'maintain'), ('an', 'a'), ('internal', 'internal'), ('state', 'state'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'maintain'), 'nsubj'), (('maintain', 'root'), 'root'), (('an', 'state'), 'det'), (('internal', 'state'), 'amod'), (('state', 'maintain'), 'obj'), (('.', 'maintain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 Model − knowledge about “how the things happen in the world”. 

Tokens are: 
>> ['Model', '−', 'knowledge', 'about', '“', 'how', 'the', 'things', 'happen', 'in', 'the', 'world', '”', '.'] 

 UPOS tags are: 
>> [('Model', 'NOUN'), ('−', 'PUNCT'), ('knowledge', 'NOUN'), ('about', 'ADP'), ('“', 'PUNCT'), ('how', 'SCONJ'), ('the', 'DET'), ('things', 'NOUN'), ('happen', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('world', 'NOUN'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Model', 'NN'), ('−', ','), ('knowledge', 'NN'), ('about', 'IN'), ('“', '``'), ('how', 'WRB'), ('the', 'DT'), ('things', 'NNS'), ('happen', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('world', 'NN'), ('”', "''"), ('.', '.')] 

 Lemmas are: 
>> [('Model', 'model'), ('−', "''"), ('knowledge', 'knowledge'), ('about', 'about'), ('“', "''"), ('how', 'how'), ('the', 'the'), ('things', 'thing'), ('happen', 'happen'), ('in', 'in'), ('the', 'the'), ('world', 'world'), ('”', "''"), ('.', '.')] 

 Dependency tags are: 
>> [(('Model', 'knowledge'), 'compound'), (('−', 'Model'), 'punct'), (('knowledge', 'root'), 'root'), (('about', 'happen'), 'mark'), (('“', 'happen'), 'punct'), (('how', 'happen'), 'mark'), (('the', 'things'), 'det'), (('things', 'happen'), 'nsubj'), (('happen', 'knowledge'), 'acl'), (('in', 'world'), 'case'), (('the', 'world'), 'det'), (('world', 'happen'), 'obl'), (('”', 'happen'), 'punct'), (('.', 'knowledge'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 46 ===========================

 Internal State − 

Tokens are: 
>> ['Internal', 'State', '−'] 

 UPOS tags are: 
>> [('Internal', 'ADJ'), ('State', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Internal', 'JJ'), ('State', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('Internal', 'Internal'), ('State', 'state'), ('−', "''")] 

 Dependency tags are: 
>> [(('Internal', 'State'), 'amod'), (('State', 'root'), 'root'), (('−', 'State'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 It is a representation of unobserved aspects of current state depending on percept history. 

Tokens are: 
>> ['It', 'is', 'a', 'representation', 'of', 'unobserved', 'aspects', 'of', 'current', 'state', 'depending', 'on', 'percept', 'history', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('representation', 'NOUN'), ('of', 'ADP'), ('unobserved', 'ADJ'), ('aspects', 'NOUN'), ('of', 'ADP'), ('current', 'ADJ'), ('state', 'NOUN'), ('depending', 'VERB'), ('on', 'ADP'), ('percept', 'NOUN'), ('history', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('representation', 'NN'), ('of', 'IN'), ('unobserved', 'JJ'), ('aspects', 'NNS'), ('of', 'IN'), ('current', 'JJ'), ('state', 'NN'), ('depending', 'VBG'), ('on', 'IN'), ('percept', 'NN'), ('history', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('a', 'a'), ('representation', 'representation'), ('of', 'of'), ('unobserved', 'unobserved'), ('aspects', 'aspect'), ('of', 'of'), ('current', 'current'), ('state', 'state'), ('depending', 'depend'), ('on', 'on'), ('percept', 'percept'), ('history', 'history'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'representation'), 'nsubj'), (('is', 'representation'), 'cop'), (('a', 'representation'), 'det'), (('representation', 'root'), 'root'), (('of', 'aspects'), 'case'), (('unobserved', 'aspects'), 'amod'), (('aspects', 'representation'), 'nmod'), (('of', 'state'), 'case'), (('current', 'state'), 'amod'), (('state', 'aspects'), 'nmod'), (('depending', 'history'), 'case'), (('on', 'depending'), 'fixed'), (('percept', 'history'), 'compound'), (('history', 'representation'), 'nmod'), (('.', 'representation'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 48 ===========================

 Updating the state requires the information about − · How the world evolves. 

Tokens are: 
>> ['Updating', 'the', 'state', 'requires', 'the', 'information', 'about', '−', '·', 'How', 'the', 'world', 'evolves', '.'] 

 UPOS tags are: 
>> [('Updating', 'VERB'), ('the', 'DET'), ('state', 'NOUN'), ('requires', 'VERB'), ('the', 'DET'), ('information', 'NOUN'), ('about', 'ADP'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('How', 'SCONJ'), ('the', 'DET'), ('world', 'NOUN'), ('evolves', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Updating', 'VBG'), ('the', 'DT'), ('state', 'NN'), ('requires', 'VBZ'), ('the', 'DT'), ('information', 'NN'), ('about', 'IN'), ('−', ','), ('·', 'NFP'), ('How', 'WRB'), ('the', 'DT'), ('world', 'NN'), ('evolves', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('Updating', 'update'), ('the', 'the'), ('state', 'state'), ('requires', 'require'), ('the', 'the'), ('information', 'information'), ('about', 'about'), ('−', "''"), ('·', '·'), ('How', 'how'), ('the', 'the'), ('world', 'world'), ('evolves', 'evolve'), ('.', '.')] 

 Dependency tags are: 
>> [(('Updating', 'requires'), 'csubj'), (('the', 'state'), 'det'), (('state', 'Updating'), 'obj'), (('requires', 'root'), 'root'), (('the', 'information'), 'det'), (('information', 'requires'), 'obj'), (('about', 'How'), 'case'), (('−', 'How'), 'punct'), (('·', 'evolves'), 'punct'), (('How', 'evolves'), 'mark'), (('the', 'world'), 'det'), (('world', 'evolves'), 'nsubj'), (('evolves', 'information'), 'acl'), (('.', 'requires'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 49 ===========================

 · How the agent’s actions affect the world. 

Tokens are: 
>> ['·', 'How', 'the', 'agent', '’s', 'actions', 'affect', 'the', 'world', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('How', 'SCONJ'), ('the', 'DET'), ('agent', 'NOUN'), ('’s', 'PART'), ('actions', 'NOUN'), ('affect', 'VERB'), ('the', 'DET'), ('world', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('How', 'WRB'), ('the', 'DT'), ('agent', 'NN'), ('’s', 'POS'), ('actions', 'NNS'), ('affect', 'VBP'), ('the', 'DT'), ('world', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('How', 'how'), ('the', 'the'), ('agent', 'agent'), ('’s', "'s"), ('actions', 'action'), ('affect', 'affect'), ('the', 'the'), ('world', 'world'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'How'), 'punct'), (('How', 'affect'), 'mark'), (('the', 'agent'), 'det'), (('agent', 'actions'), 'nmod:poss'), (('’s', 'agent'), 'case'), (('actions', 'affect'), 'nsubj'), (('affect', 'root'), 'root'), (('the', 'world'), 'det'), (('world', 'affect'), 'obj'), (('.', 'How'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 50 ===========================

 Goal Based Agents 

Tokens are: 
>> ['Goal', 'Based', 'Agents'] 

 UPOS tags are: 
>> [('Goal', 'NOUN'), ('Based', 'VERB'), ('Agents', 'NOUN')] 

 XPOS tags are: 
>> [('Goal', 'NN'), ('Based', 'VBN'), ('Agents', 'NNS')] 

 Lemmas are: 
>> [('Goal', 'goal'), ('Based', 'base'), ('Agents', 'agent')] 

 Dependency tags are: 
>> [(('Goal', 'Based'), 'obl:npmod'), (('Based', 'Agents'), 'amod'), (('Agents', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 51 ===========================

 They choose their actions in order to achieve goals. 

Tokens are: 
>> ['They', 'choose', 'their', 'actions', 'in', 'order', 'to', 'achieve', 'goals', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('choose', 'VERB'), ('their', 'PRON'), ('actions', 'NOUN'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('achieve', 'VERB'), ('goals', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('choose', 'VBP'), ('their', 'PRP$'), ('actions', 'NNS'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('achieve', 'VB'), ('goals', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('choose', 'choose'), ('their', 'they'), ('actions', 'action'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('achieve', 'achieve'), ('goals', 'goal'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'choose'), 'nsubj'), (('choose', 'root'), 'root'), (('their', 'actions'), 'nmod:poss'), (('actions', 'choose'), 'obj'), (('in', 'achieve'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'achieve'), 'mark'), (('achieve', 'choose'), 'advcl'), (('goals', 'achieve'), 'obj'), (('.', 'choose'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 Goal-based approach is more flexible than reflex agent since the knowledge supporting a decision is explicitly modeled, thereby allowing for modifications. 

Tokens are: 
>> ['Goal', '-', 'based', 'approach', 'is', 'more', 'flexible', 'than', 'reflex', 'agent', 'since', 'the', 'knowledge', 'supporting', 'a', 'decision', 'is', 'explicitly', 'modeled', ',', 'thereby', 'allowing', 'for', 'modifications', '.'] 

 UPOS tags are: 
>> [('Goal', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('approach', 'NOUN'), ('is', 'AUX'), ('more', 'ADV'), ('flexible', 'ADJ'), ('than', 'ADP'), ('reflex', 'NOUN'), ('agent', 'NOUN'), ('since', 'SCONJ'), ('the', 'DET'), ('knowledge', 'NOUN'), ('supporting', 'VERB'), ('a', 'DET'), ('decision', 'NOUN'), ('is', 'AUX'), ('explicitly', 'ADV'), ('modeled', 'VERB'), (',', 'PUNCT'), ('thereby', 'ADV'), ('allowing', 'VERB'), ('for', 'ADP'), ('modifications', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Goal', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('approach', 'NN'), ('is', 'VBZ'), ('more', 'RBR'), ('flexible', 'JJ'), ('than', 'IN'), ('reflex', 'NN'), ('agent', 'NN'), ('since', 'IN'), ('the', 'DT'), ('knowledge', 'NN'), ('supporting', 'VBG'), ('a', 'DT'), ('decision', 'NN'), ('is', 'VBZ'), ('explicitly', 'RB'), ('modeled', 'VBN'), (',', ','), ('thereby', 'RB'), ('allowing', 'VBG'), ('for', 'IN'), ('modifications', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Goal', 'goal'), ('-', '-'), ('based', 'base'), ('approach', 'approach'), ('is', 'be'), ('more', 'more'), ('flexible', 'flexible'), ('than', 'than'), ('reflex', 'reflex'), ('agent', 'agent'), ('since', 'since'), ('the', 'the'), ('knowledge', 'knowledge'), ('supporting', 'support'), ('a', 'a'), ('decision', 'decision'), ('is', 'be'), ('explicitly', 'explicitly'), ('modeled', 'model'), (',', ','), ('thereby', 'thereby'), ('allowing', 'allow'), ('for', 'for'), ('modifications', 'modification'), ('.', '.')] 

 Dependency tags are: 
>> [(('Goal', 'based'), 'obl:npmod'), (('-', 'based'), 'punct'), (('based', 'approach'), 'amod'), (('approach', 'flexible'), 'nsubj'), (('is', 'flexible'), 'cop'), (('more', 'flexible'), 'advmod'), (('flexible', 'root'), 'root'), (('than', 'agent'), 'case'), (('reflex', 'agent'), 'compound'), (('agent', 'flexible'), 'obl'), (('since', 'modeled'), 'mark'), (('the', 'knowledge'), 'det'), (('knowledge', 'modeled'), 'nsubj:pass'), (('supporting', 'knowledge'), 'acl'), (('a', 'decision'), 'det'), (('decision', 'supporting'), 'obj'), (('is', 'modeled'), 'aux:pass'), (('explicitly', 'modeled'), 'advmod'), (('modeled', 'flexible'), 'advcl'), ((',', 'allowing'), 'punct'), (('thereby', 'allowing'), 'advmod'), (('allowing', 'modeled'), 'advcl'), (('for', 'modifications'), 'case'), (('modifications', 'allowing'), 'obl'), (('.', 'flexible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 Goal − 

Tokens are: 
>> ['Goal', '−'] 

 UPOS tags are: 
>> [('Goal', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Goal', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('Goal', 'goal'), ('−', "''")] 

 Dependency tags are: 
>> [(('Goal', 'root'), 'root'), (('−', 'Goal'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 It is the description of desirable situations. 

Tokens are: 
>> ['It', 'is', 'the', 'description', 'of', 'desirable', 'situations', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('description', 'NOUN'), ('of', 'ADP'), ('desirable', 'ADJ'), ('situations', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('description', 'NN'), ('of', 'IN'), ('desirable', 'JJ'), ('situations', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('description', 'description'), ('of', 'of'), ('desirable', 'desirable'), ('situations', 'situation'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'description'), 'nsubj'), (('is', 'description'), 'cop'), (('the', 'description'), 'det'), (('description', 'root'), 'root'), (('of', 'situations'), 'case'), (('desirable', 'situations'), 'amod'), (('situations', 'description'), 'nmod'), (('.', 'description'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 55 ===========================

 Utility Based Agents 

Tokens are: 
>> ['Utility', 'Based', 'Agents'] 

 UPOS tags are: 
>> [('Utility', 'NOUN'), ('Based', 'VERB'), ('Agents', 'NOUN')] 

 XPOS tags are: 
>> [('Utility', 'NN'), ('Based', 'VBN'), ('Agents', 'NNS')] 

 Lemmas are: 
>> [('Utility', 'Utility'), ('Based', 'base'), ('Agents', 'agent')] 

 Dependency tags are: 
>> [(('Utility', 'Based'), 'obl:npmod'), (('Based', 'Agents'), 'amod'), (('Agents', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 56 ===========================

 They choose actions based on a preference (utility) for each state. 

Tokens are: 
>> ['They', 'choose', 'actions', 'based', 'on', 'a', 'preference', '(', 'utility', ')', 'for', 'each', 'state', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('choose', 'VERB'), ('actions', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('preference', 'NOUN'), ('(', 'PUNCT'), ('utility', 'NOUN'), (')', 'PUNCT'), ('for', 'ADP'), ('each', 'DET'), ('state', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('choose', 'VBP'), ('actions', 'NNS'), ('based', 'VBN'), ('on', 'IN'), ('a', 'DT'), ('preference', 'NN'), ('(', '-LRB-'), ('utility', 'NN'), (')', '-RRB-'), ('for', 'IN'), ('each', 'DT'), ('state', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('choose', 'choose'), ('actions', 'action'), ('based', 'base'), ('on', 'on'), ('a', 'a'), ('preference', 'preference'), ('(', '('), ('utility', 'utility'), (')', ')'), ('for', 'for'), ('each', 'each'), ('state', 'state'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'choose'), 'nsubj'), (('choose', 'root'), 'root'), (('actions', 'choose'), 'obj'), (('based', 'actions'), 'acl'), (('on', 'preference'), 'case'), (('a', 'preference'), 'det'), (('preference', 'based'), 'obl'), (('(', 'utility'), 'punct'), (('utility', 'preference'), 'appos'), ((')', 'utility'), 'punct'), (('for', 'state'), 'case'), (('each', 'state'), 'det'), (('state', 'based'), 'obl'), (('.', 'choose'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 Goals are inadequate when − · There are conflicting goals, out of which only few can be achieved. 

Tokens are: 
>> ['Goals', 'are', 'inadequate', 'when', '−', '·', 'There', 'are', 'conflicting', 'goals', ',', 'out', 'of', 'which', 'only', 'few', 'can', 'be', 'achieved', '.'] 

 UPOS tags are: 
>> [('Goals', 'NOUN'), ('are', 'AUX'), ('inadequate', 'ADJ'), ('when', 'SCONJ'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('There', 'PRON'), ('are', 'VERB'), ('conflicting', 'VERB'), ('goals', 'NOUN'), (',', 'PUNCT'), ('out', 'ADP'), ('of', 'ADP'), ('which', 'DET'), ('only', 'ADJ'), ('few', 'ADJ'), ('can', 'AUX'), ('be', 'AUX'), ('achieved', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Goals', 'NNS'), ('are', 'VBP'), ('inadequate', 'JJ'), ('when', 'WRB'), ('−', ','), ('·', 'NFP'), ('There', 'EX'), ('are', 'VBP'), ('conflicting', 'VBG'), ('goals', 'NNS'), (',', ','), ('out', 'IN'), ('of', 'IN'), ('which', 'WDT'), ('only', 'JJ'), ('few', 'JJ'), ('can', 'MD'), ('be', 'VB'), ('achieved', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Goals', 'Goal'), ('are', 'be'), ('inadequate', 'inadequate'), ('when', 'when'), ('−', "''"), ('·', '·'), ('There', 'there'), ('are', 'be'), ('conflicting', 'conflict'), ('goals', 'goal'), (',', ','), ('out', 'out'), ('of', 'of'), ('which', 'which'), ('only', 'only'), ('few', 'few'), ('can', 'can'), ('be', 'be'), ('achieved', 'achieve'), ('.', '.')] 

 Dependency tags are: 
>> [(('Goals', 'inadequate'), 'nsubj'), (('are', 'inadequate'), 'cop'), (('inadequate', 'root'), 'root'), (('when', 'are'), 'mark'), (('−', 'inadequate'), 'punct'), (('·', 'inadequate'), 'punct'), (('There', 'are'), 'expl'), (('are', 'inadequate'), 'parataxis'), (('conflicting', 'goals'), 'amod'), (('goals', 'are'), 'nsubj'), ((',', 'achieved'), 'punct'), (('out', 'which'), 'case'), (('of', 'out'), 'fixed'), (('which', 'few'), 'det'), (('only', 'few'), 'amod'), (('few', 'achieved'), 'nsubj:pass'), (('can', 'achieved'), 'aux'), (('be', 'achieved'), 'aux:pass'), (('achieved', 'goals'), 'acl:relcl'), (('.', 'inadequate'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 · Goals have some uncertainty of being achieved and you need to weigh likelihood of success against the importance of a goal. 

Tokens are: 
>> ['·', 'Goals', 'have', 'some', 'uncertainty', 'of', 'being', 'achieved', 'and', 'you', 'need', 'to', 'weigh', 'likelihood', 'of', 'success', 'against', 'the', 'importance', 'of', 'a', 'goal', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Goals', 'NOUN'), ('have', 'VERB'), ('some', 'DET'), ('uncertainty', 'NOUN'), ('of', 'SCONJ'), ('being', 'AUX'), ('achieved', 'VERB'), ('and', 'CCONJ'), ('you', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('weigh', 'VERB'), ('likelihood', 'NOUN'), ('of', 'ADP'), ('success', 'NOUN'), ('against', 'ADP'), ('the', 'DET'), ('importance', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('goal', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Goals', 'NNS'), ('have', 'VBP'), ('some', 'DT'), ('uncertainty', 'NN'), ('of', 'IN'), ('being', 'VBG'), ('achieved', 'VBN'), ('and', 'CC'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('weigh', 'VB'), ('likelihood', 'NN'), ('of', 'IN'), ('success', 'NN'), ('against', 'IN'), ('the', 'DT'), ('importance', 'NN'), ('of', 'IN'), ('a', 'DT'), ('goal', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Goals', 'Goal'), ('have', 'have'), ('some', 'some'), ('uncertainty', 'uncertainty'), ('of', 'of'), ('being', 'be'), ('achieved', 'achieve'), ('and', 'and'), ('you', 'you'), ('need', 'need'), ('to', 'to'), ('weigh', 'weigh'), ('likelihood', 'likelihood'), ('of', 'of'), ('success', 'success'), ('against', 'against'), ('the', 'the'), ('importance', 'importance'), ('of', 'of'), ('a', 'a'), ('goal', 'goal'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'have'), 'punct'), (('Goals', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('some', 'uncertainty'), 'det'), (('uncertainty', 'have'), 'obj'), (('of', 'achieved'), 'mark'), (('being', 'achieved'), 'aux:pass'), (('achieved', 'uncertainty'), 'acl'), (('and', 'need'), 'cc'), (('you', 'need'), 'nsubj'), (('need', 'have'), 'conj'), (('to', 'weigh'), 'mark'), (('weigh', 'need'), 'xcomp'), (('likelihood', 'weigh'), 'obj'), (('of', 'success'), 'case'), (('success', 'likelihood'), 'nmod'), (('against', 'importance'), 'case'), (('the', 'importance'), 'det'), (('importance', 'success'), 'nmod'), (('of', 'goal'), 'case'), (('a', 'goal'), 'det'), (('goal', 'importance'), 'nmod'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 The Nature of Environments 

Tokens are: 
>> ['The', 'Nature', 'of', 'Environments'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Nature', 'NOUN'), ('of', 'ADP'), ('Environments', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Nature', 'NN'), ('of', 'IN'), ('Environments', 'NNS')] 

 Lemmas are: 
>> [('The', 'the'), ('Nature', 'nature'), ('of', 'of'), ('Environments', 'environment')] 

 Dependency tags are: 
>> [(('The', 'Nature'), 'det'), (('Nature', 'root'), 'root'), (('of', 'Environments'), 'case'), (('Environments', 'Nature'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 Some programs operate in the entirely artificial environment confined to keyboard input, database, computer file systems and character output on a screen. 

Tokens are: 
>> ['Some', 'programs', 'operate', 'in', 'the', 'entirely', 'artificial', 'environment', 'confined', 'to', 'keyboard', 'input', ',', 'database', ',', 'computer', 'file', 'systems', 'and', 'character', 'output', 'on', 'a', 'screen', '.'] 

 UPOS tags are: 
>> [('Some', 'DET'), ('programs', 'NOUN'), ('operate', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('entirely', 'ADV'), ('artificial', 'ADJ'), ('environment', 'NOUN'), ('confined', 'VERB'), ('to', 'ADP'), ('keyboard', 'NOUN'), ('input', 'NOUN'), (',', 'PUNCT'), ('database', 'NOUN'), (',', 'PUNCT'), ('computer', 'NOUN'), ('file', 'NOUN'), ('systems', 'NOUN'), ('and', 'CCONJ'), ('character', 'NOUN'), ('output', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('screen', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Some', 'DT'), ('programs', 'NNS'), ('operate', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('entirely', 'RB'), ('artificial', 'JJ'), ('environment', 'NN'), ('confined', 'VBN'), ('to', 'IN'), ('keyboard', 'NN'), ('input', 'NN'), (',', ','), ('database', 'NN'), (',', ','), ('computer', 'NN'), ('file', 'NN'), ('systems', 'NNS'), ('and', 'CC'), ('character', 'NN'), ('output', 'NN'), ('on', 'IN'), ('a', 'DT'), ('screen', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Some', 'some'), ('programs', 'program'), ('operate', 'operate'), ('in', 'in'), ('the', 'the'), ('entirely', 'entirely'), ('artificial', 'artificial'), ('environment', 'environment'), ('confined', 'confine'), ('to', 'to'), ('keyboard', 'keyboard'), ('input', 'input'), (',', ','), ('database', 'database'), (',', ','), ('computer', 'computer'), ('file', 'file'), ('systems', 'system'), ('and', 'and'), ('character', 'character'), ('output', 'output'), ('on', 'on'), ('a', 'a'), ('screen', 'screen'), ('.', '.')] 

 Dependency tags are: 
>> [(('Some', 'programs'), 'det'), (('programs', 'operate'), 'nsubj'), (('operate', 'root'), 'root'), (('in', 'environment'), 'case'), (('the', 'environment'), 'det'), (('entirely', 'artificial'), 'advmod'), (('artificial', 'environment'), 'amod'), (('environment', 'operate'), 'obl'), (('confined', 'environment'), 'acl'), (('to', 'input'), 'case'), (('keyboard', 'input'), 'compound'), (('input', 'confined'), 'obl'), ((',', 'database'), 'punct'), (('database', 'input'), 'conj'), ((',', 'systems'), 'punct'), (('computer', 'systems'), 'compound'), (('file', 'systems'), 'compound'), (('systems', 'input'), 'conj'), (('and', 'output'), 'cc'), (('character', 'output'), 'compound'), (('output', 'input'), 'conj'), (('on', 'screen'), 'case'), (('a', 'screen'), 'det'), (('screen', 'output'), 'nmod'), (('.', 'operate'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 61 ===========================

 In contrast, some software agents (software robots or softbots) exist in rich, unlimited softbots domains. 

Tokens are: 
>> ['In', 'contrast', ',', 'some', 'software', 'agents', '(', 'software', 'robots', 'or', 'softbots', ')', 'exist', 'in', 'rich', ',', 'unlimited', 'softbots', 'domains', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('contrast', 'NOUN'), (',', 'PUNCT'), ('some', 'DET'), ('software', 'NOUN'), ('agents', 'NOUN'), ('(', 'PUNCT'), ('software', 'NOUN'), ('robots', 'NOUN'), ('or', 'CCONJ'), ('softbots', 'NOUN'), (')', 'PUNCT'), ('exist', 'VERB'), ('in', 'ADP'), ('rich', 'ADJ'), (',', 'PUNCT'), ('unlimited', 'ADJ'), ('softbots', 'NOUN'), ('domains', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('contrast', 'NN'), (',', ','), ('some', 'DT'), ('software', 'NN'), ('agents', 'NNS'), ('(', '-LRB-'), ('software', 'NN'), ('robots', 'NNS'), ('or', 'CC'), ('softbots', 'NNS'), (')', '-RRB-'), ('exist', 'VBP'), ('in', 'IN'), ('rich', 'JJ'), (',', ','), ('unlimited', 'JJ'), ('softbots', 'NNS'), ('domains', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('contrast', 'contrast'), (',', ','), ('some', 'some'), ('software', 'software'), ('agents', 'agent'), ('(', '('), ('software', 'software'), ('robots', 'robot'), ('or', 'or'), ('softbots', 'softbot'), (')', ')'), ('exist', 'exist'), ('in', 'in'), ('rich', 'rich'), (',', ','), ('unlimited', 'unlimited'), ('softbots', 'softbot'), ('domains', 'domain'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'contrast'), 'case'), (('contrast', 'exist'), 'obl'), ((',', 'exist'), 'punct'), (('some', 'agents'), 'det'), (('software', 'agents'), 'compound'), (('agents', 'exist'), 'nsubj'), (('(', 'robots'), 'punct'), (('software', 'robots'), 'compound'), (('robots', 'agents'), 'appos'), (('or', 'softbots'), 'cc'), (('softbots', 'robots'), 'conj'), ((')', 'robots'), 'punct'), (('exist', 'root'), 'root'), (('in', 'domains'), 'case'), (('rich', 'domains'), 'amod'), ((',', 'domains'), 'punct'), (('unlimited', 'domains'), 'amod'), (('softbots', 'domains'), 'compound'), (('domains', 'exist'), 'obl'), (('.', 'exist'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 62 ===========================

 The simulator has a very detailed, complex environment. 

Tokens are: 
>> ['The', 'simulator', 'has', 'a', 'very', 'detailed', ',', 'complex', 'environment', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('simulator', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('very', 'ADV'), ('detailed', 'ADJ'), (',', 'PUNCT'), ('complex', 'ADJ'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('simulator', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('very', 'RB'), ('detailed', 'JJ'), (',', ','), ('complex', 'JJ'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('simulator', 'simulator'), ('has', 'have'), ('a', 'a'), ('very', 'very'), ('detailed', 'detailed'), (',', ','), ('complex', 'complex'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'simulator'), 'det'), (('simulator', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('a', 'environment'), 'det'), (('very', 'detailed'), 'advmod'), (('detailed', 'environment'), 'amod'), ((',', 'environment'), 'punct'), (('complex', 'environment'), 'amod'), (('environment', 'has'), 'obj'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 The software agent needs to choose from a long array of actions in real time. 

Tokens are: 
>> ['The', 'software', 'agent', 'needs', 'to', 'choose', 'from', 'a', 'long', 'array', 'of', 'actions', 'in', 'real', 'time', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('software', 'NOUN'), ('agent', 'NOUN'), ('needs', 'VERB'), ('to', 'PART'), ('choose', 'VERB'), ('from', 'ADP'), ('a', 'DET'), ('long', 'ADJ'), ('array', 'NOUN'), ('of', 'ADP'), ('actions', 'NOUN'), ('in', 'ADP'), ('real', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('software', 'NN'), ('agent', 'NN'), ('needs', 'VBZ'), ('to', 'TO'), ('choose', 'VB'), ('from', 'IN'), ('a', 'DT'), ('long', 'JJ'), ('array', 'NN'), ('of', 'IN'), ('actions', 'NNS'), ('in', 'IN'), ('real', 'JJ'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('software', 'software'), ('agent', 'agent'), ('needs', 'need'), ('to', 'to'), ('choose', 'choose'), ('from', 'from'), ('a', 'a'), ('long', 'long'), ('array', 'array'), ('of', 'of'), ('actions', 'action'), ('in', 'in'), ('real', 'real'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'agent'), 'det'), (('software', 'agent'), 'compound'), (('agent', 'needs'), 'nsubj'), (('needs', 'root'), 'root'), (('to', 'choose'), 'mark'), (('choose', 'needs'), 'xcomp'), (('from', 'array'), 'case'), (('a', 'array'), 'det'), (('long', 'array'), 'amod'), (('array', 'choose'), 'obl'), (('of', 'actions'), 'case'), (('actions', 'array'), 'nmod'), (('in', 'time'), 'case'), (('real', 'time'), 'amod'), (('time', 'choose'), 'obl'), (('.', 'needs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 64 ===========================

 A softbot designed to scan the online preferences of the customer and show interesting items to the customer works in the real as well as an artificial environment. 

Tokens are: 
>> ['A', 'softbot', 'designed', 'to', 'scan', 'the', 'online', 'preferences', 'of', 'the', 'customer', 'and', 'show', 'interesting', 'items', 'to', 'the', 'customer', 'works', 'in', 'the', 'real', 'as', 'well', 'as', 'an', 'artificial', 'environment', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('softbot', 'NOUN'), ('designed', 'VERB'), ('to', 'PART'), ('scan', 'VERB'), ('the', 'DET'), ('online', 'ADJ'), ('preferences', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('customer', 'NOUN'), ('and', 'CCONJ'), ('show', 'VERB'), ('interesting', 'ADJ'), ('items', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('customer', 'NOUN'), ('works', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('real', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('an', 'DET'), ('artificial', 'ADJ'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('softbot', 'NN'), ('designed', 'VBN'), ('to', 'TO'), ('scan', 'VB'), ('the', 'DT'), ('online', 'JJ'), ('preferences', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('customer', 'NN'), ('and', 'CC'), ('show', 'VB'), ('interesting', 'JJ'), ('items', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('customer', 'NN'), ('works', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('real', 'NN'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('an', 'DT'), ('artificial', 'JJ'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('softbot', 'softbot'), ('designed', 'design'), ('to', 'to'), ('scan', 'scan'), ('the', 'the'), ('online', 'online'), ('preferences', 'preference'), ('of', 'of'), ('the', 'the'), ('customer', 'customer'), ('and', 'and'), ('show', 'show'), ('interesting', 'interesting'), ('items', 'item'), ('to', 'to'), ('the', 'the'), ('customer', 'customer'), ('works', 'work'), ('in', 'in'), ('the', 'the'), ('real', 'real'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('an', 'a'), ('artificial', 'artificial'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'softbot'), 'det'), (('softbot', 'root'), 'root'), (('designed', 'softbot'), 'acl'), (('to', 'scan'), 'mark'), (('scan', 'designed'), 'xcomp'), (('the', 'preferences'), 'det'), (('online', 'preferences'), 'amod'), (('preferences', 'scan'), 'obj'), (('of', 'customer'), 'case'), (('the', 'customer'), 'det'), (('customer', 'preferences'), 'nmod'), (('and', 'show'), 'cc'), (('show', 'scan'), 'conj'), (('interesting', 'items'), 'amod'), (('items', 'show'), 'obj'), (('to', 'works'), 'case'), (('the', 'works'), 'det'), (('customer', 'works'), 'compound'), (('works', 'items'), 'nmod'), (('in', 'real'), 'case'), (('the', 'real'), 'det'), (('real', 'works'), 'nmod'), (('as', 'environment'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('an', 'environment'), 'det'), (('artificial', 'environment'), 'amod'), (('environment', 'works'), 'conj'), (('.', 'softbot'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 65 ===========================

 The most famous artificial environment is the Turing Test environment, in which one real and other artificial agents are tested on equal ground. 

Tokens are: 
>> ['The', 'most', 'famous', 'artificial', 'environment', 'is', 'the', 'Turing', 'Test', 'environment', ',', 'in', 'which', 'one', 'real', 'and', 'other', 'artificial', 'agents', 'are', 'tested', 'on', 'equal', 'ground', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('most', 'ADV'), ('famous', 'ADJ'), ('artificial', 'ADJ'), ('environment', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('Turing', 'PROPN'), ('Test', 'PROPN'), ('environment', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('which', 'PRON'), ('one', 'NUM'), ('real', 'ADJ'), ('and', 'CCONJ'), ('other', 'ADJ'), ('artificial', 'ADJ'), ('agents', 'NOUN'), ('are', 'AUX'), ('tested', 'VERB'), ('on', 'ADP'), ('equal', 'ADJ'), ('ground', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('most', 'RBS'), ('famous', 'JJ'), ('artificial', 'JJ'), ('environment', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('Turing', 'NNP'), ('Test', 'NNP'), ('environment', 'NN'), (',', ','), ('in', 'IN'), ('which', 'WDT'), ('one', 'CD'), ('real', 'JJ'), ('and', 'CC'), ('other', 'JJ'), ('artificial', 'JJ'), ('agents', 'NNS'), ('are', 'VBP'), ('tested', 'VBN'), ('on', 'IN'), ('equal', 'JJ'), ('ground', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('most', 'most'), ('famous', 'famous'), ('artificial', 'artificial'), ('environment', 'environment'), ('is', 'be'), ('the', 'the'), ('Turing', 'Turing'), ('Test', 'Test'), ('environment', 'environment'), (',', ','), ('in', 'in'), ('which', 'which'), ('one', 'one'), ('real', 'real'), ('and', 'and'), ('other', 'other'), ('artificial', 'artificial'), ('agents', 'agent'), ('are', 'be'), ('tested', 'test'), ('on', 'on'), ('equal', 'equal'), ('ground', 'ground'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'environment'), 'det'), (('most', 'famous'), 'advmod'), (('famous', 'environment'), 'amod'), (('artificial', 'environment'), 'amod'), (('environment', 'environment'), 'nsubj'), (('is', 'environment'), 'cop'), (('the', 'environment'), 'det'), (('Turing', 'environment'), 'compound'), (('Test', 'environment'), 'compound'), (('environment', 'root'), 'root'), ((',', 'environment'), 'punct'), (('in', 'which'), 'case'), (('which', 'tested'), 'obl'), (('one', 'agents'), 'nummod'), (('real', 'agents'), 'amod'), (('and', 'other'), 'cc'), (('other', 'real'), 'conj'), (('artificial', 'agents'), 'amod'), (('agents', 'tested'), 'nsubj:pass'), (('are', 'tested'), 'aux:pass'), (('tested', 'environment'), 'acl:relcl'), (('on', 'ground'), 'case'), (('equal', 'ground'), 'amod'), (('ground', 'tested'), 'obl'), (('.', 'environment'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 66 ===========================

 This is a very challenging environment as it is highly difficult for a software agent to perform as well as a human. 

Tokens are: 
>> ['This', 'is', 'a', 'very', 'challenging', 'environment', 'as', 'it', 'is', 'highly', 'difficult', 'for', 'a', 'software', 'agent', 'to', 'perform', 'as', 'well', 'as', 'a', 'human', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('very', 'ADV'), ('challenging', 'ADJ'), ('environment', 'NOUN'), ('as', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('highly', 'ADV'), ('difficult', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('software', 'NOUN'), ('agent', 'NOUN'), ('to', 'PART'), ('perform', 'VERB'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('a', 'DET'), ('human', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('a', 'DT'), ('very', 'RB'), ('challenging', 'JJ'), ('environment', 'NN'), ('as', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('highly', 'RB'), ('difficult', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('software', 'NN'), ('agent', 'NN'), ('to', 'TO'), ('perform', 'VB'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('a', 'DT'), ('human', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('a', 'a'), ('very', 'very'), ('challenging', 'challenging'), ('environment', 'environment'), ('as', 'as'), ('it', 'it'), ('is', 'be'), ('highly', 'highly'), ('difficult', 'difficult'), ('for', 'for'), ('a', 'a'), ('software', 'software'), ('agent', 'agent'), ('to', 'to'), ('perform', 'perform'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('a', 'a'), ('human', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'environment'), 'nsubj'), (('is', 'environment'), 'cop'), (('a', 'environment'), 'det'), (('very', 'challenging'), 'advmod'), (('challenging', 'environment'), 'amod'), (('environment', 'root'), 'root'), (('as', 'difficult'), 'mark'), (('it', 'difficult'), 'nsubj'), (('is', 'difficult'), 'cop'), (('highly', 'difficult'), 'advmod'), (('difficult', 'environment'), 'advcl'), (('for', 'agent'), 'case'), (('a', 'agent'), 'det'), (('software', 'agent'), 'compound'), (('agent', 'difficult'), 'obl'), (('to', 'perform'), 'mark'), (('perform', 'difficult'), 'csubj'), (('as', 'human'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('a', 'human'), 'det'), (('human', 'perform'), 'conj'), (('.', 'environment'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 67 ===========================

 Turing Test 

Tokens are: 
>> ['Turing', 'Test'] 

 UPOS tags are: 
>> [('Turing', 'NOUN'), ('Test', 'NOUN')] 

 XPOS tags are: 
>> [('Turing', 'NN'), ('Test', 'NN')] 

 Lemmas are: 
>> [('Turing', 'turing'), ('Test', 'test')] 

 Dependency tags are: 
>> [(('Turing', 'Test'), 'compound'), (('Test', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 68 ===========================

 The success of an intelligent behavior of a system can be measured with Turing Test. 

Tokens are: 
>> ['The', 'success', 'of', 'an', 'intelligent', 'behavior', 'of', 'a', 'system', 'can', 'be', 'measured', 'with', 'Turing', 'Test', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('success', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('intelligent', 'ADJ'), ('behavior', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('system', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('measured', 'VERB'), ('with', 'ADP'), ('Turing', 'PROPN'), ('Test', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('success', 'NN'), ('of', 'IN'), ('an', 'DT'), ('intelligent', 'JJ'), ('behavior', 'NN'), ('of', 'IN'), ('a', 'DT'), ('system', 'NN'), ('can', 'MD'), ('be', 'VB'), ('measured', 'VBN'), ('with', 'IN'), ('Turing', 'NNP'), ('Test', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('success', 'success'), ('of', 'of'), ('an', 'a'), ('intelligent', 'intelligent'), ('behavior', 'behavior'), ('of', 'of'), ('a', 'a'), ('system', 'system'), ('can', 'can'), ('be', 'be'), ('measured', 'measure'), ('with', 'with'), ('Turing', 'Turing'), ('Test', 'test'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'success'), 'det'), (('success', 'measured'), 'nsubj:pass'), (('of', 'behavior'), 'case'), (('an', 'behavior'), 'det'), (('intelligent', 'behavior'), 'amod'), (('behavior', 'success'), 'nmod'), (('of', 'system'), 'case'), (('a', 'system'), 'det'), (('system', 'behavior'), 'nmod'), (('can', 'measured'), 'aux'), (('be', 'measured'), 'aux:pass'), (('measured', 'root'), 'root'), (('with', 'Test'), 'case'), (('Turing', 'Test'), 'compound'), (('Test', 'measured'), 'obl'), (('.', 'measured'), 'punct')]

 Named Entities are: 
>> [('Turing Test', 'WORK_OF_ART')]

========================== Sentence 69 ===========================

 Two persons and a machine to be evaluated participate in the test. 

Tokens are: 
>> ['Two', 'persons', 'and', 'a', 'machine', 'to', 'be', 'evaluated', 'participate', 'in', 'the', 'test', '.'] 

 UPOS tags are: 
>> [('Two', 'NUM'), ('persons', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('machine', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('evaluated', 'VERB'), ('participate', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('test', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Two', 'CD'), ('persons', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('machine', 'NN'), ('to', 'TO'), ('be', 'VB'), ('evaluated', 'VBN'), ('participate', 'VB'), ('in', 'IN'), ('the', 'DT'), ('test', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Two', 'two'), ('persons', 'person'), ('and', 'and'), ('a', 'a'), ('machine', 'machine'), ('to', 'to'), ('be', 'be'), ('evaluated', 'evaluate'), ('participate', 'participate'), ('in', 'in'), ('the', 'the'), ('test', 'test'), ('.', '.')] 

 Dependency tags are: 
>> [(('Two', 'persons'), 'nummod'), (('persons', 'root'), 'root'), (('and', 'machine'), 'cc'), (('a', 'machine'), 'det'), (('machine', 'persons'), 'conj'), (('to', 'evaluated'), 'mark'), (('be', 'evaluated'), 'aux:pass'), (('evaluated', 'machine'), 'acl'), (('participate', 'evaluated'), 'xcomp'), (('in', 'test'), 'case'), (('the', 'test'), 'det'), (('test', 'participate'), 'obl'), (('.', 'participate'), 'punct')]

 Named Entities are: 
>> [('Two', 'CARDINAL')]

========================== Sentence 70 ===========================

 Out of the two persons, one plays the role of the tester. 

Tokens are: 
>> ['Out', 'of', 'the', 'two', 'persons', ',', 'one', 'plays', 'the', 'role', 'of', 'the', 'tester', '.'] 

 UPOS tags are: 
>> [('Out', 'ADP'), ('of', 'ADP'), ('the', 'DET'), ('two', 'NUM'), ('persons', 'NOUN'), (',', 'PUNCT'), ('one', 'PRON'), ('plays', 'VERB'), ('the', 'DET'), ('role', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('tester', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('two', 'CD'), ('persons', 'NNS'), (',', ','), ('one', 'PRP'), ('plays', 'VBZ'), ('the', 'DT'), ('role', 'NN'), ('of', 'IN'), ('the', 'DT'), ('tester', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Out', 'out'), ('of', 'of'), ('the', 'the'), ('two', 'two'), ('persons', 'person'), (',', ','), ('one', 'one'), ('plays', 'play'), ('the', 'the'), ('role', 'role'), ('of', 'of'), ('the', 'the'), ('tester', 'tester'), ('.', '.')] 

 Dependency tags are: 
>> [(('Out', 'persons'), 'case'), (('of', 'persons'), 'case'), (('the', 'persons'), 'det'), (('two', 'persons'), 'nummod'), (('persons', 'plays'), 'obl'), ((',', 'plays'), 'punct'), (('one', 'plays'), 'nsubj'), (('plays', 'root'), 'root'), (('the', 'role'), 'det'), (('role', 'plays'), 'obj'), (('of', 'tester'), 'case'), (('the', 'tester'), 'det'), (('tester', 'role'), 'nmod'), (('.', 'plays'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('one', 'CARDINAL')]

========================== Sentence 71 ===========================

 Each of them sits in different rooms. 

Tokens are: 
>> ['Each', 'of', 'them', 'sits', 'in', 'different', 'rooms', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('of', 'ADP'), ('them', 'PRON'), ('sits', 'VERB'), ('in', 'ADP'), ('different', 'ADJ'), ('rooms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('of', 'IN'), ('them', 'PRP'), ('sits', 'VBZ'), ('in', 'IN'), ('different', 'JJ'), ('rooms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('of', 'of'), ('them', 'they'), ('sits', 'sit'), ('in', 'in'), ('different', 'different'), ('rooms', 'room'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'sits'), 'nsubj'), (('of', 'them'), 'case'), (('them', 'Each'), 'nmod'), (('sits', 'root'), 'root'), (('in', 'rooms'), 'case'), (('different', 'rooms'), 'amod'), (('rooms', 'sits'), 'obl'), (('.', 'sits'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 72 ===========================

 The tester is unaware of who is machine and who is a human. 

Tokens are: 
>> ['The', 'tester', 'is', 'unaware', 'of', 'who', 'is', 'machine', 'and', 'who', 'is', 'a', 'human', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('tester', 'NOUN'), ('is', 'AUX'), ('unaware', 'ADJ'), ('of', 'ADP'), ('who', 'PRON'), ('is', 'AUX'), ('machine', 'NOUN'), ('and', 'CCONJ'), ('who', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('human', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('tester', 'NN'), ('is', 'VBZ'), ('unaware', 'JJ'), ('of', 'IN'), ('who', 'WP'), ('is', 'VBZ'), ('machine', 'NN'), ('and', 'CC'), ('who', 'WP'), ('is', 'VBZ'), ('a', 'DT'), ('human', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('tester', 'tester'), ('is', 'be'), ('unaware', 'unaware'), ('of', 'of'), ('who', 'who'), ('is', 'be'), ('machine', 'machine'), ('and', 'and'), ('who', 'who'), ('is', 'be'), ('a', 'a'), ('human', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'tester'), 'det'), (('tester', 'unaware'), 'nsubj'), (('is', 'unaware'), 'cop'), (('unaware', 'root'), 'root'), (('of', 'who'), 'case'), (('who', 'unaware'), 'obl'), (('is', 'machine'), 'cop'), (('machine', 'who'), 'acl:relcl'), (('and', 'human'), 'cc'), (('who', 'human'), 'nsubj'), (('is', 'human'), 'cop'), (('a', 'human'), 'det'), (('human', 'machine'), 'conj'), (('.', 'unaware'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 73 ===========================

 He interrogates the questions by typing and sending them to both intelligences, to which he receives typed responses. 

Tokens are: 
>> ['He', 'interrogates', 'the', 'questions', 'by', 'typing', 'and', 'sending', 'them', 'to', 'both', 'intelligences', ',', 'to', 'which', 'he', 'receives', 'typed', 'responses', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('interrogates', 'VERB'), ('the', 'DET'), ('questions', 'NOUN'), ('by', 'SCONJ'), ('typing', 'VERB'), ('and', 'CCONJ'), ('sending', 'VERB'), ('them', 'PRON'), ('to', 'ADP'), ('both', 'DET'), ('intelligences', 'NOUN'), (',', 'PUNCT'), ('to', 'ADP'), ('which', 'PRON'), ('he', 'PRON'), ('receives', 'VERB'), ('typed', 'VERB'), ('responses', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('interrogates', 'VBZ'), ('the', 'DT'), ('questions', 'NNS'), ('by', 'IN'), ('typing', 'VBG'), ('and', 'CC'), ('sending', 'VBG'), ('them', 'PRP'), ('to', 'IN'), ('both', 'DT'), ('intelligences', 'NNS'), (',', ','), ('to', 'IN'), ('which', 'WDT'), ('he', 'PRP'), ('receives', 'VBZ'), ('typed', 'VBN'), ('responses', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('interrogates', 'interrogate'), ('the', 'the'), ('questions', 'question'), ('by', 'by'), ('typing', 'type'), ('and', 'and'), ('sending', 'send'), ('them', 'they'), ('to', 'to'), ('both', 'both'), ('intelligences', 'intelligence'), (',', ','), ('to', 'to'), ('which', 'which'), ('he', 'he'), ('receives', 'receive'), ('typed', 'type'), ('responses', 'response'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'interrogates'), 'nsubj'), (('interrogates', 'root'), 'root'), (('the', 'questions'), 'det'), (('questions', 'interrogates'), 'obj'), (('by', 'typing'), 'mark'), (('typing', 'interrogates'), 'advcl'), (('and', 'sending'), 'cc'), (('sending', 'typing'), 'conj'), (('them', 'sending'), 'obj'), (('to', 'intelligences'), 'case'), (('both', 'intelligences'), 'det'), (('intelligences', 'sending'), 'obl'), ((',', 'receives'), 'punct'), (('to', 'which'), 'case'), (('which', 'receives'), 'obl'), (('he', 'receives'), 'nsubj'), (('receives', 'intelligences'), 'acl:relcl'), (('typed', 'responses'), 'amod'), (('responses', 'receives'), 'obj'), (('.', 'interrogates'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 This test aims at fooling the tester. 

Tokens are: 
>> ['This', 'test', 'aims', 'at', 'fooling', 'the', 'tester', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('test', 'NOUN'), ('aims', 'VERB'), ('at', 'SCONJ'), ('fooling', 'VERB'), ('the', 'DET'), ('tester', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('test', 'NN'), ('aims', 'VBZ'), ('at', 'IN'), ('fooling', 'VBG'), ('the', 'DT'), ('tester', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('test', 'test'), ('aims', 'aim'), ('at', 'at'), ('fooling', 'fool'), ('the', 'the'), ('tester', 'tester'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'test'), 'det'), (('test', 'aims'), 'nsubj'), (('aims', 'root'), 'root'), (('at', 'fooling'), 'mark'), (('fooling', 'aims'), 'advcl'), (('the', 'tester'), 'det'), (('tester', 'fooling'), 'obj'), (('.', 'aims'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 75 ===========================

 If the tester fails to determine machine’s response from the human response, then the machine is said to be intelligent. 

Tokens are: 
>> ['If', 'the', 'tester', 'fails', 'to', 'determine', 'machine', '’s', 'response', 'from', 'the', 'human', 'response', ',', 'then', 'the', 'machine', 'is', 'said', 'to', 'be', 'intelligent', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('tester', 'NOUN'), ('fails', 'VERB'), ('to', 'PART'), ('determine', 'VERB'), ('machine', 'NOUN'), ('’s', 'PART'), ('response', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('human', 'ADJ'), ('response', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('the', 'DET'), ('machine', 'NOUN'), ('is', 'AUX'), ('said', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('intelligent', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('tester', 'NN'), ('fails', 'VBZ'), ('to', 'TO'), ('determine', 'VB'), ('machine', 'NN'), ('’s', 'POS'), ('response', 'NN'), ('from', 'IN'), ('the', 'DT'), ('human', 'JJ'), ('response', 'NN'), (',', ','), ('then', 'RB'), ('the', 'DT'), ('machine', 'NN'), ('is', 'VBZ'), ('said', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('intelligent', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('tester', 'tester'), ('fails', 'fail'), ('to', 'to'), ('determine', 'determine'), ('machine', 'machine'), ('’s', "'s"), ('response', 'response'), ('from', 'from'), ('the', 'the'), ('human', 'human'), ('response', 'response'), (',', ','), ('then', 'then'), ('the', 'the'), ('machine', 'machine'), ('is', 'be'), ('said', 'say'), ('to', 'to'), ('be', 'be'), ('intelligent', 'intelligent'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'fails'), 'mark'), (('the', 'tester'), 'det'), (('tester', 'fails'), 'nsubj'), (('fails', 'said'), 'advcl'), (('to', 'determine'), 'mark'), (('determine', 'fails'), 'xcomp'), (('machine', 'response'), 'nmod:poss'), (('’s', 'machine'), 'case'), (('response', 'determine'), 'obj'), (('from', 'response'), 'case'), (('the', 'response'), 'det'), (('human', 'response'), 'amod'), (('response', 'response'), 'nmod'), ((',', 'said'), 'punct'), (('then', 'said'), 'advmod'), (('the', 'machine'), 'det'), (('machine', 'said'), 'nsubj:pass'), (('is', 'said'), 'aux:pass'), (('said', 'root'), 'root'), (('to', 'intelligent'), 'mark'), (('be', 'intelligent'), 'cop'), (('intelligent', 'said'), 'xcomp'), (('.', 'said'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 76 ===========================

 Properties of Environment 

Tokens are: 
>> ['Properties', 'of', 'Environment'] 

 UPOS tags are: 
>> [('Properties', 'NOUN'), ('of', 'ADP'), ('Environment', 'NOUN')] 

 XPOS tags are: 
>> [('Properties', 'NNS'), ('of', 'IN'), ('Environment', 'NN')] 

 Lemmas are: 
>> [('Properties', 'property'), ('of', 'of'), ('Environment', 'environment')] 

 Dependency tags are: 
>> [(('Properties', 'root'), 'root'), (('of', 'Environment'), 'case'), (('Environment', 'Properties'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 77 ===========================

 The environment has multifold properties − · Discrete / Continuous − 

Tokens are: 
>> ['The', 'environment', 'has', 'multifold', 'properties', '−', '·', 'Discrete', '/', 'Continuous', '−'] 

 UPOS tags are: 
>> [('The', 'DET'), ('environment', 'NOUN'), ('has', 'VERB'), ('multifold', 'ADJ'), ('properties', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Discrete', 'ADJ'), ('/', 'SYM'), ('Continuous', 'ADJ'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('environment', 'NN'), ('has', 'VBZ'), ('multifold', 'JJ'), ('properties', 'NNS'), ('−', ','), ('·', 'NFP'), ('Discrete', 'JJ'), ('/', ','), ('Continuous', 'JJ'), ('−', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('environment', 'environment'), ('has', 'have'), ('multifold', 'multifold'), ('properties', 'property'), ('−', "''"), ('·', '·'), ('Discrete', 'Discrete'), ('/', '/'), ('Continuous', 'continuous'), ('−', "''")] 

 Dependency tags are: 
>> [(('The', 'environment'), 'det'), (('environment', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('multifold', 'properties'), 'amod'), (('properties', 'has'), 'obj'), (('−', 'properties'), 'punct'), (('·', 'Discrete'), 'punct'), (('Discrete', 'has'), 'parataxis'), (('/', 'Continuous'), 'cc'), (('Continuous', 'Discrete'), 'conj'), (('−', 'has'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 78 ===========================

 If there are a limited number of distinct, clearly defined, states of the environment, the environment is discrete (For example, chess); otherwise it is continuous (For example, driving). 

Tokens are: 
>> ['If', 'there', 'are', 'a', 'limited', 'number', 'of', 'distinct', ',', 'clearly', 'defined', ',', 'states', 'of', 'the', 'environment', ',', 'the', 'environment', 'is', 'discrete', '(', 'For', 'example', ',', 'chess', ')', ';', 'otherwise', 'it', 'is', 'continuous', '(', 'For', 'example', ',', 'driving', ')', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('a', 'DET'), ('limited', 'VERB'), ('number', 'NOUN'), ('of', 'ADP'), ('distinct', 'ADJ'), (',', 'PUNCT'), ('clearly', 'ADV'), ('defined', 'VERB'), (',', 'PUNCT'), ('states', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('environment', 'NOUN'), ('is', 'AUX'), ('discrete', 'ADJ'), ('(', 'PUNCT'), ('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('chess', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), ('otherwise', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('continuous', 'ADJ'), ('(', 'PUNCT'), ('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('driving', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('there', 'EX'), ('are', 'VBP'), ('a', 'DT'), ('limited', 'VBN'), ('number', 'NN'), ('of', 'IN'), ('distinct', 'JJ'), (',', ','), ('clearly', 'RB'), ('defined', 'VBN'), (',', ','), ('states', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('environment', 'NN'), (',', ','), ('the', 'DT'), ('environment', 'NN'), ('is', 'VBZ'), ('discrete', 'JJ'), ('(', '-LRB-'), ('For', 'IN'), ('example', 'NN'), (',', ','), ('chess', 'NN'), (')', '-RRB-'), (';', ':'), ('otherwise', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('continuous', 'JJ'), ('(', '-LRB-'), ('For', 'IN'), ('example', 'NN'), (',', ','), ('driving', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('there', 'there'), ('are', 'be'), ('a', 'a'), ('limited', 'limit'), ('number', 'number'), ('of', 'of'), ('distinct', 'distinct'), (',', ','), ('clearly', 'clearly'), ('defined', 'define'), (',', ','), ('states', 'state'), ('of', 'of'), ('the', 'the'), ('environment', 'environment'), (',', ','), ('the', 'the'), ('environment', 'environment'), ('is', 'be'), ('discrete', 'discrete'), ('(', '('), ('For', 'for'), ('example', 'example'), (',', ','), ('chess', 'chess'), (')', ')'), (';', ';'), ('otherwise', 'otherwise'), ('it', 'it'), ('is', 'be'), ('continuous', 'continuous'), ('(', '('), ('For', 'for'), ('example', 'example'), (',', ','), ('driving', 'driving'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'discrete'), 'advcl'), (('a', 'number'), 'det'), (('limited', 'number'), 'amod'), (('number', 'are'), 'nsubj'), (('of', 'states'), 'case'), (('distinct', 'states'), 'amod'), ((',', 'defined'), 'punct'), (('clearly', 'defined'), 'advmod'), (('defined', 'states'), 'amod'), ((',', 'states'), 'punct'), (('states', 'number'), 'nmod'), (('of', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'states'), 'nmod'), ((',', 'discrete'), 'punct'), (('the', 'environment'), 'det'), (('environment', 'discrete'), 'nsubj'), (('is', 'discrete'), 'cop'), (('discrete', 'root'), 'root'), (('(', 'chess'), 'punct'), (('For', 'example'), 'case'), (('example', 'discrete'), 'obl'), ((',', 'chess'), 'punct'), (('chess', 'example'), 'appos'), ((')', 'chess'), 'punct'), ((';', 'continuous'), 'punct'), (('otherwise', 'continuous'), 'advmod'), (('it', 'continuous'), 'nsubj'), (('is', 'continuous'), 'cop'), (('continuous', 'discrete'), 'parataxis'), (('(', 'driving'), 'punct'), (('For', 'example'), 'case'), (('example', 'continuous'), 'obl'), ((',', 'driving'), 'punct'), (('driving', 'continuous'), 'advcl'), ((')', 'driving'), 'punct'), (('.', 'discrete'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 79 ===========================

 · Observable / Partially Observable − 

Tokens are: 
>> ['·', 'Observable', '/', 'Partially', 'Observable', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Observable', 'ADJ'), ('/', 'SYM'), ('Partially', 'ADV'), ('Observable', 'ADJ'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Observable', 'JJ'), ('/', ','), ('Partially', 'RB'), ('Observable', 'JJ'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Observable', 'observable'), ('/', '/'), ('Partially', 'partially'), ('Observable', 'observable'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Observable'), 'punct'), (('Observable', 'root'), 'root'), (('/', 'Observable'), 'cc'), (('Partially', 'Observable'), 'advmod'), (('Observable', 'Observable'), 'conj'), (('−', 'Observable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 80 ===========================

 If it is possible to determine the complete state of the environment at each time point from the percepts it is observable; otherwise it is only partially observable. 

Tokens are: 
>> ['If', 'it', 'is', 'possible', 'to', 'determine', 'the', 'complete', 'state', 'of', 'the', 'environment', 'at', 'each', 'time', 'point', 'from', 'the', 'percepts', 'it', 'is', 'observable', ';', 'otherwise', 'it', 'is', 'only', 'partially', 'observable', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('possible', 'ADJ'), ('to', 'PART'), ('determine', 'VERB'), ('the', 'DET'), ('complete', 'ADJ'), ('state', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), ('at', 'ADP'), ('each', 'DET'), ('time', 'NOUN'), ('point', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('percepts', 'NOUN'), ('it', 'PRON'), ('is', 'AUX'), ('observable', 'ADJ'), (';', 'PUNCT'), ('otherwise', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('only', 'ADV'), ('partially', 'ADV'), ('observable', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('possible', 'JJ'), ('to', 'TO'), ('determine', 'VB'), ('the', 'DT'), ('complete', 'JJ'), ('state', 'NN'), ('of', 'IN'), ('the', 'DT'), ('environment', 'NN'), ('at', 'IN'), ('each', 'DT'), ('time', 'NN'), ('point', 'NN'), ('from', 'IN'), ('the', 'DT'), ('percepts', 'NNS'), ('it', 'PRP'), ('is', 'VBZ'), ('observable', 'JJ'), (';', ','), ('otherwise', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('only', 'RB'), ('partially', 'RB'), ('observable', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('it', 'it'), ('is', 'be'), ('possible', 'possible'), ('to', 'to'), ('determine', 'determine'), ('the', 'the'), ('complete', 'complete'), ('state', 'state'), ('of', 'of'), ('the', 'the'), ('environment', 'environment'), ('at', 'at'), ('each', 'each'), ('time', 'time'), ('point', 'point'), ('from', 'from'), ('the', 'the'), ('percepts', 'percept'), ('it', 'it'), ('is', 'be'), ('observable', 'observable'), (';', ';'), ('otherwise', 'otherwise'), ('it', 'it'), ('is', 'be'), ('only', 'only'), ('partially', 'partially'), ('observable', 'observable'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'possible'), 'mark'), (('it', 'possible'), 'expl'), (('is', 'possible'), 'cop'), (('possible', 'observable'), 'advcl'), (('to', 'determine'), 'mark'), (('determine', 'possible'), 'csubj'), (('the', 'state'), 'det'), (('complete', 'state'), 'amod'), (('state', 'determine'), 'obj'), (('of', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'state'), 'nmod'), (('at', 'point'), 'case'), (('each', 'point'), 'det'), (('time', 'point'), 'compound'), (('point', 'determine'), 'obl'), (('from', 'percepts'), 'case'), (('the', 'percepts'), 'det'), (('percepts', 'point'), 'nmod'), (('it', 'observable'), 'nsubj'), (('is', 'observable'), 'cop'), (('observable', 'root'), 'root'), ((';', 'observable'), 'punct'), (('otherwise', 'observable'), 'advmod'), (('it', 'observable'), 'nsubj'), (('is', 'observable'), 'cop'), (('only', 'observable'), 'advmod'), (('partially', 'observable'), 'advmod'), (('observable', 'observable'), 'parataxis'), (('.', 'observable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 81 ===========================

 · Static / Dynamic − 

Tokens are: 
>> ['·', 'Static', '/', 'Dynamic', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Static', 'NOUN'), ('/', 'PUNCT'), ('Dynamic', 'ADJ'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Static', 'NN'), ('/', ','), ('Dynamic', 'JJ'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Static', 'static'), ('/', '/'), ('Dynamic', 'Dynamic'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Static'), 'punct'), (('Static', 'root'), 'root'), (('/', 'Dynamic'), 'cc'), (('Dynamic', 'Static'), 'conj'), (('−', 'Static'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 If the environment does not change while an agent is acting, then it is static; otherwise it is dynamic. 

Tokens are: 
>> ['If', 'the', 'environment', 'does', 'not', 'change', 'while', 'an', 'agent', 'is', 'acting', ',', 'then', 'it', 'is', 'static', ';', 'otherwise', 'it', 'is', 'dynamic', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('environment', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('change', 'VERB'), ('while', 'SCONJ'), ('an', 'DET'), ('agent', 'NOUN'), ('is', 'AUX'), ('acting', 'VERB'), (',', 'PUNCT'), ('then', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('static', 'ADJ'), (';', 'PUNCT'), ('otherwise', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('dynamic', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('environment', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('change', 'VB'), ('while', 'IN'), ('an', 'DT'), ('agent', 'NN'), ('is', 'VBZ'), ('acting', 'VBG'), (',', ','), ('then', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('static', 'JJ'), (';', ','), ('otherwise', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('dynamic', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('environment', 'environment'), ('does', 'do'), ('not', 'not'), ('change', 'change'), ('while', 'while'), ('an', 'a'), ('agent', 'agent'), ('is', 'be'), ('acting', 'act'), (',', ','), ('then', 'then'), ('it', 'it'), ('is', 'be'), ('static', 'static'), (';', ';'), ('otherwise', 'otherwise'), ('it', 'it'), ('is', 'be'), ('dynamic', 'dynamic'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'change'), 'mark'), (('the', 'environment'), 'det'), (('environment', 'change'), 'nsubj'), (('does', 'change'), 'aux'), (('not', 'change'), 'advmod'), (('change', 'static'), 'advcl'), (('while', 'acting'), 'mark'), (('an', 'agent'), 'det'), (('agent', 'acting'), 'nsubj'), (('is', 'acting'), 'aux'), (('acting', 'change'), 'advcl'), ((',', 'static'), 'punct'), (('then', 'static'), 'advmod'), (('it', 'static'), 'nsubj'), (('is', 'static'), 'cop'), (('static', 'root'), 'root'), ((';', 'static'), 'punct'), (('otherwise', 'dynamic'), 'advmod'), (('it', 'dynamic'), 'nsubj'), (('is', 'dynamic'), 'cop'), (('dynamic', 'static'), 'parataxis'), (('.', 'static'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 83 ===========================

 · Single agent / Multiple agents − 

Tokens are: 
>> ['·', 'Single', 'agent', '/', 'Multiple', 'agents', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Single', 'ADJ'), ('agent', 'NOUN'), ('/', 'SYM'), ('Multiple', 'ADJ'), ('agents', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Single', 'JJ'), ('agent', 'NN'), ('/', ','), ('Multiple', 'JJ'), ('agents', 'NNS'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Single', 'single'), ('agent', 'agent'), ('/', '/'), ('Multiple', 'multiple'), ('agents', 'agent'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'agents'), 'punct'), (('Single', 'agent'), 'amod'), (('agent', 'root'), 'root'), (('/', 'agents'), 'cc'), (('Multiple', 'agents'), 'amod'), (('agents', 'agent'), 'conj'), (('−', 'agents'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 84 ===========================

 The environment may contain other agents which may be of the same or different kind as that of the agent. 

Tokens are: 
>> ['The', 'environment', 'may', 'contain', 'other', 'agents', 'which', 'may', 'be', 'of', 'the', 'same', 'or', 'different', 'kind', 'as', 'that', 'of', 'the', 'agent', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('environment', 'NOUN'), ('may', 'AUX'), ('contain', 'VERB'), ('other', 'ADJ'), ('agents', 'NOUN'), ('which', 'PRON'), ('may', 'AUX'), ('be', 'AUX'), ('of', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('or', 'CCONJ'), ('different', 'ADJ'), ('kind', 'NOUN'), ('as', 'ADP'), ('that', 'PRON'), ('of', 'ADP'), ('the', 'DET'), ('agent', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('environment', 'NN'), ('may', 'MD'), ('contain', 'VB'), ('other', 'JJ'), ('agents', 'NNS'), ('which', 'WDT'), ('may', 'MD'), ('be', 'VB'), ('of', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('or', 'CC'), ('different', 'JJ'), ('kind', 'NN'), ('as', 'IN'), ('that', 'DT'), ('of', 'IN'), ('the', 'DT'), ('agent', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('environment', 'environment'), ('may', 'may'), ('contain', 'contain'), ('other', 'other'), ('agents', 'agent'), ('which', 'which'), ('may', 'may'), ('be', 'be'), ('of', 'of'), ('the', 'the'), ('same', 'same'), ('or', 'or'), ('different', 'different'), ('kind', 'kind'), ('as', 'as'), ('that', 'that'), ('of', 'of'), ('the', 'the'), ('agent', 'agent'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'environment'), 'det'), (('environment', 'contain'), 'nsubj'), (('may', 'contain'), 'aux'), (('contain', 'root'), 'root'), (('other', 'agents'), 'amod'), (('agents', 'contain'), 'obj'), (('which', 'same'), 'nsubj'), (('may', 'same'), 'aux'), (('be', 'same'), 'cop'), (('of', 'same'), 'case'), (('the', 'same'), 'det'), (('same', 'agents'), 'acl:relcl'), (('or', 'kind'), 'cc'), (('different', 'kind'), 'amod'), (('kind', 'same'), 'conj'), (('as', 'that'), 'case'), (('that', 'kind'), 'nmod'), (('of', 'agent'), 'case'), (('the', 'agent'), 'det'), (('agent', 'that'), 'nmod'), (('.', 'contain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 85 ===========================

 · Accessible / Inaccessible − 

Tokens are: 
>> ['·', 'Accessible', '/', 'Inaccessible', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Accessible', 'ADJ'), ('/', 'SYM'), ('Inaccessible', 'ADJ'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Accessible', 'JJ'), ('/', ','), ('Inaccessible', 'JJ'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Accessible', 'accessible'), ('/', '/'), ('Inaccessible', 'inaccessible'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Accessible'), 'punct'), (('Accessible', 'root'), 'root'), (('/', 'Inaccessible'), 'cc'), (('Inaccessible', 'Accessible'), 'conj'), (('−', 'Accessible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 86 ===========================

 If the agent’s sensory apparatus can have access to the complete state of the environment, then the environment is accessible to that agent. 

Tokens are: 
>> ['If', 'the', 'agent', '’s', 'sensory', 'apparatus', 'can', 'have', 'access', 'to', 'the', 'complete', 'state', 'of', 'the', 'environment', ',', 'then', 'the', 'environment', 'is', 'accessible', 'to', 'that', 'agent', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('agent', 'NOUN'), ('’s', 'PART'), ('sensory', 'ADJ'), ('apparatus', 'NOUN'), ('can', 'AUX'), ('have', 'VERB'), ('access', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('complete', 'ADJ'), ('state', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('the', 'DET'), ('environment', 'NOUN'), ('is', 'AUX'), ('accessible', 'ADJ'), ('to', 'ADP'), ('that', 'DET'), ('agent', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('agent', 'NN'), ('’s', 'POS'), ('sensory', 'JJ'), ('apparatus', 'NN'), ('can', 'MD'), ('have', 'VB'), ('access', 'NN'), ('to', 'IN'), ('the', 'DT'), ('complete', 'JJ'), ('state', 'NN'), ('of', 'IN'), ('the', 'DT'), ('environment', 'NN'), (',', ','), ('then', 'RB'), ('the', 'DT'), ('environment', 'NN'), ('is', 'VBZ'), ('accessible', 'JJ'), ('to', 'IN'), ('that', 'DT'), ('agent', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('agent', 'agent'), ('’s', "'s"), ('sensory', 'sensory'), ('apparatus', 'apparatus'), ('can', 'can'), ('have', 'have'), ('access', 'access'), ('to', 'to'), ('the', 'the'), ('complete', 'complete'), ('state', 'state'), ('of', 'of'), ('the', 'the'), ('environment', 'environment'), (',', ','), ('then', 'then'), ('the', 'the'), ('environment', 'environment'), ('is', 'be'), ('accessible', 'accessible'), ('to', 'to'), ('that', 'that'), ('agent', 'agent'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'have'), 'mark'), (('the', 'agent'), 'det'), (('agent', 'apparatus'), 'nmod:poss'), (('’s', 'agent'), 'case'), (('sensory', 'apparatus'), 'amod'), (('apparatus', 'have'), 'nsubj'), (('can', 'have'), 'aux'), (('have', 'accessible'), 'advcl'), (('access', 'have'), 'obj'), (('to', 'state'), 'case'), (('the', 'state'), 'det'), (('complete', 'state'), 'amod'), (('state', 'access'), 'nmod'), (('of', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'state'), 'nmod'), ((',', 'accessible'), 'punct'), (('then', 'accessible'), 'advmod'), (('the', 'environment'), 'det'), (('environment', 'accessible'), 'nsubj'), (('is', 'accessible'), 'cop'), (('accessible', 'root'), 'root'), (('to', 'agent'), 'case'), (('that', 'agent'), 'det'), (('agent', 'accessible'), 'obl'), (('.', 'accessible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 87 ===========================

 · Deterministic / Non-deterministic − 

Tokens are: 
>> ['·', 'Deterministic', '/', 'Non-deterministic', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Deterministic', 'ADJ'), ('/', 'SYM'), ('Non-deterministic', 'ADJ'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Deterministic', 'JJ'), ('/', ','), ('Non-deterministic', 'JJ'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Deterministic', 'Deterministic'), ('/', '/'), ('Non-deterministic', 'Non-deterministic'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Deterministic'), 'punct'), (('Deterministic', 'root'), 'root'), (('/', 'Non-deterministic'), 'cc'), (('Non-deterministic', 'Deterministic'), 'conj'), (('−', 'Non-deterministic'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 88 ===========================

 If the next state of the environment is completely determined by the current state and the actions of the agent, then the environment is deterministic; otherwise it is non-deterministic. 

Tokens are: 
>> ['If', 'the', 'next', 'state', 'of', 'the', 'environment', 'is', 'completely', 'determined', 'by', 'the', 'current', 'state', 'and', 'the', 'actions', 'of', 'the', 'agent', ',', 'then', 'the', 'environment', 'is', 'deterministic', ';', 'otherwise', 'it', 'is', 'non-deterministic', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('next', 'ADJ'), ('state', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), ('is', 'AUX'), ('completely', 'ADV'), ('determined', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('current', 'ADJ'), ('state', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('actions', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('agent', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('the', 'DET'), ('environment', 'NOUN'), ('is', 'AUX'), ('deterministic', 'ADJ'), (';', 'PUNCT'), ('otherwise', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('non-deterministic', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('state', 'NN'), ('of', 'IN'), ('the', 'DT'), ('environment', 'NN'), ('is', 'VBZ'), ('completely', 'RB'), ('determined', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('current', 'JJ'), ('state', 'NN'), ('and', 'CC'), ('the', 'DT'), ('actions', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('agent', 'NN'), (',', ','), ('then', 'RB'), ('the', 'DT'), ('environment', 'NN'), ('is', 'VBZ'), ('deterministic', 'JJ'), (';', ','), ('otherwise', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('non-deterministic', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('next', 'next'), ('state', 'state'), ('of', 'of'), ('the', 'the'), ('environment', 'environment'), ('is', 'be'), ('completely', 'completely'), ('determined', 'determine'), ('by', 'by'), ('the', 'the'), ('current', 'current'), ('state', 'state'), ('and', 'and'), ('the', 'the'), ('actions', 'action'), ('of', 'of'), ('the', 'the'), ('agent', 'agent'), (',', ','), ('then', 'then'), ('the', 'the'), ('environment', 'environment'), ('is', 'be'), ('deterministic', 'deterministic'), (';', ';'), ('otherwise', 'otherwise'), ('it', 'it'), ('is', 'be'), ('non-deterministic', 'non-deterministic'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'determined'), 'mark'), (('the', 'state'), 'det'), (('next', 'state'), 'amod'), (('state', 'determined'), 'nsubj:pass'), (('of', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'state'), 'nmod'), (('is', 'determined'), 'aux:pass'), (('completely', 'determined'), 'advmod'), (('determined', 'deterministic'), 'advcl'), (('by', 'state'), 'case'), (('the', 'state'), 'det'), (('current', 'state'), 'amod'), (('state', 'determined'), 'obl'), (('and', 'actions'), 'cc'), (('the', 'actions'), 'det'), (('actions', 'state'), 'conj'), (('of', 'agent'), 'case'), (('the', 'agent'), 'det'), (('agent', 'actions'), 'nmod'), ((',', 'deterministic'), 'punct'), (('then', 'deterministic'), 'advmod'), (('the', 'environment'), 'det'), (('environment', 'deterministic'), 'nsubj'), (('is', 'deterministic'), 'cop'), (('deterministic', 'root'), 'root'), ((';', 'deterministic'), 'punct'), (('otherwise', 'non-deterministic'), 'advmod'), (('it', 'non-deterministic'), 'nsubj'), (('is', 'non-deterministic'), 'cop'), (('non-deterministic', 'deterministic'), 'parataxis'), (('.', 'deterministic'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 89 ===========================

 · Episodic / Non-episodic − 

Tokens are: 
>> ['·', 'Episodic', '/', 'Non-episodic', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Episodic', 'ADJ'), ('/', 'PUNCT'), ('Non-episodic', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Episodic', 'JJ'), ('/', ','), ('Non-episodic', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Episodic', 'Episodic'), ('/', '/'), ('Non-episodic', 'non-episodic'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Non-episodic'), 'punct'), (('Episodic', 'Non-episodic'), 'amod'), (('/', 'Non-episodic'), 'cc'), (('Non-episodic', 'root'), 'root'), (('−', 'Non-episodic'), 'punct')]

 Named Entities are: 
>> [('Episodic / Non-episodic', 'ORG')]

========================== Sentence 90 ===========================

 In an episodic environment, each episode consists of the agent perceiving and then acting. 

Tokens are: 
>> ['In', 'an', 'episodic', 'environment', ',', 'each', 'episode', 'consists', 'of', 'the', 'agent', 'perceiving', 'and', 'then', 'acting', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('an', 'DET'), ('episodic', 'ADJ'), ('environment', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('episode', 'NOUN'), ('consists', 'VERB'), ('of', 'ADP'), ('the', 'DET'), ('agent', 'NOUN'), ('perceiving', 'VERB'), ('and', 'CCONJ'), ('then', 'ADV'), ('acting', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('an', 'DT'), ('episodic', 'JJ'), ('environment', 'NN'), (',', ','), ('each', 'DT'), ('episode', 'NN'), ('consists', 'VBZ'), ('of', 'IN'), ('the', 'DT'), ('agent', 'NN'), ('perceiving', 'VBG'), ('and', 'CC'), ('then', 'RB'), ('acting', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('an', 'a'), ('episodic', 'episodic'), ('environment', 'environment'), (',', ','), ('each', 'each'), ('episode', 'episode'), ('consists', 'consist'), ('of', 'of'), ('the', 'the'), ('agent', 'agent'), ('perceiving', 'perceive'), ('and', 'and'), ('then', 'then'), ('acting', 'act'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'environment'), 'case'), (('an', 'environment'), 'det'), (('episodic', 'environment'), 'amod'), (('environment', 'consists'), 'obl'), ((',', 'consists'), 'punct'), (('each', 'episode'), 'det'), (('episode', 'consists'), 'nsubj'), (('consists', 'root'), 'root'), (('of', 'agent'), 'case'), (('the', 'agent'), 'det'), (('agent', 'consists'), 'obl'), (('perceiving', 'agent'), 'acl'), (('and', 'acting'), 'cc'), (('then', 'acting'), 'advmod'), (('acting', 'perceiving'), 'conj'), (('.', 'consists'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 91 ===========================

 The quality of its action depends just on the episode itself. 

Tokens are: 
>> ['The', 'quality', 'of', 'its', 'action', 'depends', 'just', 'on', 'the', 'episode', 'itself', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('quality', 'NOUN'), ('of', 'ADP'), ('its', 'PRON'), ('action', 'NOUN'), ('depends', 'VERB'), ('just', 'ADV'), ('on', 'ADP'), ('the', 'DET'), ('episode', 'NOUN'), ('itself', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('quality', 'NN'), ('of', 'IN'), ('its', 'PRP$'), ('action', 'NN'), ('depends', 'VBZ'), ('just', 'RB'), ('on', 'IN'), ('the', 'DT'), ('episode', 'NN'), ('itself', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('quality', 'quality'), ('of', 'of'), ('its', 'its'), ('action', 'action'), ('depends', 'depend'), ('just', 'just'), ('on', 'on'), ('the', 'the'), ('episode', 'episode'), ('itself', 'itself'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'quality'), 'det'), (('quality', 'depends'), 'nsubj'), (('of', 'action'), 'case'), (('its', 'action'), 'nmod:poss'), (('action', 'quality'), 'nmod'), (('depends', 'root'), 'root'), (('just', 'episode'), 'advmod'), (('on', 'episode'), 'case'), (('the', 'episode'), 'det'), (('episode', 'depends'), 'obl'), (('itself', 'episode'), 'nmod:npmod'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 92 ===========================

 Subsequent episodes do not depend on the actions in the previous episodes. 

Tokens are: 
>> ['Subsequent', 'episodes', 'do', 'not', 'depend', 'on', 'the', 'actions', 'in', 'the', 'previous', 'episodes', '.'] 

 UPOS tags are: 
>> [('Subsequent', 'ADJ'), ('episodes', 'NOUN'), ('do', 'AUX'), ('not', 'PART'), ('depend', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('actions', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('previous', 'ADJ'), ('episodes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Subsequent', 'JJ'), ('episodes', 'NNS'), ('do', 'VBP'), ('not', 'RB'), ('depend', 'VB'), ('on', 'IN'), ('the', 'DT'), ('actions', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('previous', 'JJ'), ('episodes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Subsequent', 'subsequent'), ('episodes', 'episode'), ('do', 'do'), ('not', 'not'), ('depend', 'depend'), ('on', 'on'), ('the', 'the'), ('actions', 'action'), ('in', 'in'), ('the', 'the'), ('previous', 'previous'), ('episodes', 'episode'), ('.', '.')] 

 Dependency tags are: 
>> [(('Subsequent', 'episodes'), 'amod'), (('episodes', 'depend'), 'nsubj'), (('do', 'depend'), 'aux'), (('not', 'depend'), 'advmod'), (('depend', 'root'), 'root'), (('on', 'actions'), 'case'), (('the', 'actions'), 'det'), (('actions', 'depend'), 'obl'), (('in', 'episodes'), 'case'), (('the', 'episodes'), 'det'), (('previous', 'episodes'), 'amod'), (('episodes', 'actions'), 'nmod'), (('.', 'depend'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 93 ===========================

 Episodic environments are much simpler because the agent does not need to think ahead. 

Tokens are: 
>> ['Episodic', 'environments', 'are', 'much', 'simpler', 'because', 'the', 'agent', 'does', 'not', 'need', 'to', 'think', 'ahead', '.'] 

 UPOS tags are: 
>> [('Episodic', 'ADJ'), ('environments', 'NOUN'), ('are', 'AUX'), ('much', 'ADV'), ('simpler', 'ADJ'), ('because', 'SCONJ'), ('the', 'DET'), ('agent', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('need', 'VERB'), ('to', 'PART'), ('think', 'VERB'), ('ahead', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Episodic', 'JJ'), ('environments', 'NNS'), ('are', 'VBP'), ('much', 'RB'), ('simpler', 'JJR'), ('because', 'IN'), ('the', 'DT'), ('agent', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('need', 'VB'), ('to', 'TO'), ('think', 'VB'), ('ahead', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Episodic', 'Episodic'), ('environments', 'environment'), ('are', 'be'), ('much', 'much'), ('simpler', 'simple'), ('because', 'because'), ('the', 'the'), ('agent', 'agent'), ('does', 'do'), ('not', 'not'), ('need', 'need'), ('to', 'to'), ('think', 'think'), ('ahead', 'ahead'), ('.', '.')] 

 Dependency tags are: 
>> [(('Episodic', 'environments'), 'amod'), (('environments', 'simpler'), 'nsubj'), (('are', 'simpler'), 'cop'), (('much', 'simpler'), 'advmod'), (('simpler', 'root'), 'root'), (('because', 'need'), 'mark'), (('the', 'agent'), 'det'), (('agent', 'need'), 'nsubj'), (('does', 'need'), 'aux'), (('not', 'need'), 'advmod'), (('need', 'simpler'), 'advcl'), (('to', 'think'), 'mark'), (('think', 'need'), 'xcomp'), (('ahead', 'think'), 'advmod'), (('.', 'simpler'), 'punct')]

 Named Entities are: 
>> []