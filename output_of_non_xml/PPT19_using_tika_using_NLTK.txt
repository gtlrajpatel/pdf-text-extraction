				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-7 Digital Signature      1  Outline Digital Signature Digital Signature properties Requirements and security  Various digital signature schemes (Elgamal and Schnorr) Digital Signature algorithm / Digital Signature Standard   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 2   Symmetric-key  ciphers: Block ciphers Stream ciphers  Public-key ciphers Cryptographic Goals Cryptographic goals Confidentiality Data integrity Authentication Non-repudiation           Message authentication    Entity authentication Arbitrary length hash functions  Message  Authentication  codes (MACs)  Digital signatures Authentication  primitives Digital signatures MACs Digital       signatures  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  3 Проверить правильность схемы  Digital Signature A digital signature is an authentication mechanism that enables the creator of a message to attach a code that acts as a signature. 


>> Tokens are: 
 ['OOPC++', 'UNIT-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav', '@', 'darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', 'UNIT-7', 'Digital', 'Signature', '1', 'Outline', 'Digital', 'Signature', 'Digital', 'Signature', 'properties', 'Requirements', 'security', 'Various', 'digital', 'signature', 'schemes', '(', 'Elgamal', 'Schnorr', ')', 'Digital', 'Signature', 'algorithm', '/', 'Digital', 'Signature', 'Standard', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'X.800', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')', '2', 'Symmetric-key', 'ciphers', ':', 'Block', 'ciphers', 'Stream', 'ciphers', 'Public-key', 'ciphers', 'Cryptographic', 'Goals', 'Cryptographic', 'goals', 'Confidentiality', 'Data', 'integrity', 'Authentication', 'Non-repudiation', 'Message', 'authentication', 'Entity', 'authentication', 'Arbitrary', 'length', 'hash', 'functions', 'Message', 'Authentication', 'codes', '(', 'MACs', ')', 'Digital', 'signatures', 'Authentication', 'primitives', 'Digital', 'signatures', 'MACs', 'Digital', 'signatures', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '3', 'Проверить', 'правильность', 'схемы', 'Digital', 'Signature', 'A', 'digital', 'signature', 'authentication', 'mechanism', 'enables', 'creator', 'message', 'attach', 'code', 'acts', 'signature', '.']

>> Bigrams are: 
 [('OOPC++', 'UNIT-1'), ('UNIT-1', 'Prof.'), ('Prof.', 'Rupesh'), ('Rupesh', 'G.'), ('G.', 'Vaishnav'), ('Vaishnav', 'rupesh.vaishnav'), ('rupesh.vaishnav', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '94280-37452'), ('94280-37452', 'Information'), ('Information', '&'), ('&', 'Network'), ('Network', 'Security'), ('Security', '('), ('(', '2170709'), ('2170709', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', 'UNIT-7'), ('UNIT-7', 'Digital'), ('Digital', 'Signature'), ('Signature', '1'), ('1', 'Outline'), ('Outline', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Digital'), ('Digital', 'Signature'), ('Signature', 'properties'), ('properties', 'Requirements'), ('Requirements', 'security'), ('security', 'Various'), ('Various', 'digital'), ('digital', 'signature'), ('signature', 'schemes'), ('schemes', '('), ('(', 'Elgamal'), ('Elgamal', 'Schnorr'), ('Schnorr', ')'), (')', 'Digital'), ('Digital', 'Signature'), ('Signature', 'algorithm'), ('algorithm', '/'), ('/', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Standard'), ('Standard', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'X.800'), ('X.800', 'RFC'), ('RFC', '2828'), ('2828', 'International'), ('International', 'Telecommunication'), ('Telecommunication', 'Union'), ('Union', '('), ('(', 'ITU'), ('ITU', ')'), (')', '2'), ('2', 'Symmetric-key'), ('Symmetric-key', 'ciphers'), ('ciphers', ':'), (':', 'Block'), ('Block', 'ciphers'), ('ciphers', 'Stream'), ('Stream', 'ciphers'), ('ciphers', 'Public-key'), ('Public-key', 'ciphers'), ('ciphers', 'Cryptographic'), ('Cryptographic', 'Goals'), ('Goals', 'Cryptographic'), ('Cryptographic', 'goals'), ('goals', 'Confidentiality'), ('Confidentiality', 'Data'), ('Data', 'integrity'), ('integrity', 'Authentication'), ('Authentication', 'Non-repudiation'), ('Non-repudiation', 'Message'), ('Message', 'authentication'), ('authentication', 'Entity'), ('Entity', 'authentication'), ('authentication', 'Arbitrary'), ('Arbitrary', 'length'), ('length', 'hash'), ('hash', 'functions'), ('functions', 'Message'), ('Message', 'Authentication'), ('Authentication', 'codes'), ('codes', '('), ('(', 'MACs'), ('MACs', ')'), (')', 'Digital'), ('Digital', 'signatures'), ('signatures', 'Authentication'), ('Authentication', 'primitives'), ('primitives', 'Digital'), ('Digital', 'signatures'), ('signatures', 'MACs'), ('MACs', 'Digital'), ('Digital', 'signatures'), ('signatures', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '3'), ('3', 'Проверить'), ('Проверить', 'правильность'), ('правильность', 'схемы'), ('схемы', 'Digital'), ('Digital', 'Signature'), ('Signature', 'A'), ('A', 'digital'), ('digital', 'signature'), ('signature', 'authentication'), ('authentication', 'mechanism'), ('mechanism', 'enables'), ('enables', 'creator'), ('creator', 'message'), ('message', 'attach'), ('attach', 'code'), ('code', 'acts'), ('acts', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('OOPC++', 'UNIT-1', 'Prof.'), ('UNIT-1', 'Prof.', 'Rupesh'), ('Prof.', 'Rupesh', 'G.'), ('Rupesh', 'G.', 'Vaishnav'), ('G.', 'Vaishnav', 'rupesh.vaishnav'), ('Vaishnav', 'rupesh.vaishnav', '@'), ('rupesh.vaishnav', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '94280-37452'), ('darshan.ac.in', '94280-37452', 'Information'), ('94280-37452', 'Information', '&'), ('Information', '&', 'Network'), ('&', 'Network', 'Security'), ('Network', 'Security', '('), ('Security', '(', '2170709'), ('(', '2170709', ')'), ('2170709', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', 'UNIT-7'), ('Technology', 'UNIT-7', 'Digital'), ('UNIT-7', 'Digital', 'Signature'), ('Digital', 'Signature', '1'), ('Signature', '1', 'Outline'), ('1', 'Outline', 'Digital'), ('Outline', 'Digital', 'Signature'), ('Digital', 'Signature', 'Digital'), ('Signature', 'Digital', 'Signature'), ('Digital', 'Signature', 'properties'), ('Signature', 'properties', 'Requirements'), ('properties', 'Requirements', 'security'), ('Requirements', 'security', 'Various'), ('security', 'Various', 'digital'), ('Various', 'digital', 'signature'), ('digital', 'signature', 'schemes'), ('signature', 'schemes', '('), ('schemes', '(', 'Elgamal'), ('(', 'Elgamal', 'Schnorr'), ('Elgamal', 'Schnorr', ')'), ('Schnorr', ')', 'Digital'), (')', 'Digital', 'Signature'), ('Digital', 'Signature', 'algorithm'), ('Signature', 'algorithm', '/'), ('algorithm', '/', 'Digital'), ('/', 'Digital', 'Signature'), ('Digital', 'Signature', 'Standard'), ('Signature', 'Standard', 'Unit-7'), ('Standard', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'X.800'), ('›', 'X.800', 'RFC'), ('X.800', 'RFC', '2828'), ('RFC', '2828', 'International'), ('2828', 'International', 'Telecommunication'), ('International', 'Telecommunication', 'Union'), ('Telecommunication', 'Union', '('), ('Union', '(', 'ITU'), ('(', 'ITU', ')'), ('ITU', ')', '2'), (')', '2', 'Symmetric-key'), ('2', 'Symmetric-key', 'ciphers'), ('Symmetric-key', 'ciphers', ':'), ('ciphers', ':', 'Block'), (':', 'Block', 'ciphers'), ('Block', 'ciphers', 'Stream'), ('ciphers', 'Stream', 'ciphers'), ('Stream', 'ciphers', 'Public-key'), ('ciphers', 'Public-key', 'ciphers'), ('Public-key', 'ciphers', 'Cryptographic'), ('ciphers', 'Cryptographic', 'Goals'), ('Cryptographic', 'Goals', 'Cryptographic'), ('Goals', 'Cryptographic', 'goals'), ('Cryptographic', 'goals', 'Confidentiality'), ('goals', 'Confidentiality', 'Data'), ('Confidentiality', 'Data', 'integrity'), ('Data', 'integrity', 'Authentication'), ('integrity', 'Authentication', 'Non-repudiation'), ('Authentication', 'Non-repudiation', 'Message'), ('Non-repudiation', 'Message', 'authentication'), ('Message', 'authentication', 'Entity'), ('authentication', 'Entity', 'authentication'), ('Entity', 'authentication', 'Arbitrary'), ('authentication', 'Arbitrary', 'length'), ('Arbitrary', 'length', 'hash'), ('length', 'hash', 'functions'), ('hash', 'functions', 'Message'), ('functions', 'Message', 'Authentication'), ('Message', 'Authentication', 'codes'), ('Authentication', 'codes', '('), ('codes', '(', 'MACs'), ('(', 'MACs', ')'), ('MACs', ')', 'Digital'), (')', 'Digital', 'signatures'), ('Digital', 'signatures', 'Authentication'), ('signatures', 'Authentication', 'primitives'), ('Authentication', 'primitives', 'Digital'), ('primitives', 'Digital', 'signatures'), ('Digital', 'signatures', 'MACs'), ('signatures', 'MACs', 'Digital'), ('MACs', 'Digital', 'signatures'), ('Digital', 'signatures', 'Unit-7'), ('signatures', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '3'), ('›', '3', 'Проверить'), ('3', 'Проверить', 'правильность'), ('Проверить', 'правильность', 'схемы'), ('правильность', 'схемы', 'Digital'), ('схемы', 'Digital', 'Signature'), ('Digital', 'Signature', 'A'), ('Signature', 'A', 'digital'), ('A', 'digital', 'signature'), ('digital', 'signature', 'authentication'), ('signature', 'authentication', 'mechanism'), ('authentication', 'mechanism', 'enables'), ('mechanism', 'enables', 'creator'), ('enables', 'creator', 'message'), ('creator', 'message', 'attach'), ('message', 'attach', 'code'), ('attach', 'code', 'acts'), ('code', 'acts', 'signature'), ('acts', 'signature', '.')]

>> POS Tags are: 
 [('OOPC++', 'NNP'), ('UNIT-1', 'NNP'), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav', 'NN'), ('@', 'NNP'), ('darshan.ac.in', 'VBZ'), ('94280-37452', 'CD'), ('Information', 'NNP'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NNP'), ('(', '('), ('2170709', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('UNIT-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('1', 'CD'), ('Outline', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('properties', 'NNS'), ('Requirements', 'NNP'), ('security', 'NN'), ('Various', 'NNP'), ('digital', 'JJ'), ('signature', 'NN'), ('schemes', 'NNS'), ('(', '('), ('Elgamal', 'NNP'), ('Schnorr', 'NNP'), (')', ')'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('algorithm', 'VBZ'), ('/', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Standard', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('X.800', 'NNP'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '('), ('ITU', 'NNP'), (')', ')'), ('2', 'CD'), ('Symmetric-key', 'JJ'), ('ciphers', 'NNS'), (':', ':'), ('Block', 'NNP'), ('ciphers', 'NNS'), ('Stream', 'NNP'), ('ciphers', 'NNS'), ('Public-key', 'NNP'), ('ciphers', 'NNS'), ('Cryptographic', 'NNP'), ('Goals', 'NNP'), ('Cryptographic', 'NNP'), ('goals', 'NNS'), ('Confidentiality', 'NNP'), ('Data', 'NNP'), ('integrity', 'NN'), ('Authentication', 'NNP'), ('Non-repudiation', 'NNP'), ('Message', 'NNP'), ('authentication', 'NN'), ('Entity', 'NNP'), ('authentication', 'NN'), ('Arbitrary', 'NNP'), ('length', 'NN'), ('hash', 'NN'), ('functions', 'NNS'), ('Message', 'NNP'), ('Authentication', 'NNP'), ('codes', 'NNS'), ('(', '('), ('MACs', 'NNP'), (')', ')'), ('Digital', 'NNP'), ('signatures', 'VBZ'), ('Authentication', 'NNP'), ('primitives', 'NNS'), ('Digital', 'NNP'), ('signatures', 'VBZ'), ('MACs', 'NNP'), ('Digital', 'NNP'), ('signatures', 'VBZ'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('3', 'CD'), ('Проверить', 'NNP'), ('правильность', 'NNP'), ('схемы', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('A', 'NNP'), ('digital', 'JJ'), ('signature', 'NN'), ('authentication', 'NN'), ('mechanism', 'NN'), ('enables', 'VBZ'), ('creator', 'JJ'), ('message', 'NN'), ('attach', 'NN'), ('code', 'NN'), ('acts', 'VBZ'), ('signature', 'NN'), ('.', '.')]

 (S
  (NP
    OOPC++/NNP
    UNIT-1/NNP
    Prof./NNP
    Rupesh/NNP
    G./NNP
    Vaishnav/NNP
    rupesh.vaishnav/NN
    @/NNP)
  darshan.ac.in/VBZ
  94280-37452/CD
  (NP Information/NNP)
  &/CC
  (NP Network/NNP Security/NNP)
  (/(
  2170709/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP UNIT-7/NNP Digital/NNP Signature/NNP)
  1/CD
  (NP
    Outline/NNP
    Digital/NNP
    Signature/NNP
    Digital/NNP
    Signature/NNP
    properties/NNS
    Requirements/NNP
    security/NN
    Various/NNP)
  (NP digital/JJ signature/NN schemes/NNS)
  (/(
  (NP Elgamal/NNP Schnorr/NNP)
  )/)
  (NP Digital/NNP Signature/NNP)
  algorithm/VBZ
  (NP
    //JJ
    Digital/NNP
    Signature/NNP
    Standard/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP X.800/NNP RFC/NNP)
  2828/CD
  (NP International/NNP Telecommunication/NNP Union/NNP)
  (/(
  (NP ITU/NNP)
  )/)
  2/CD
  (NP Symmetric-key/JJ ciphers/NNS)
  :/:
  (NP
    Block/NNP
    ciphers/NNS
    Stream/NNP
    ciphers/NNS
    Public-key/NNP
    ciphers/NNS
    Cryptographic/NNP
    Goals/NNP
    Cryptographic/NNP
    goals/NNS
    Confidentiality/NNP
    Data/NNP
    integrity/NN
    Authentication/NNP
    Non-repudiation/NNP
    Message/NNP
    authentication/NN
    Entity/NNP
    authentication/NN
    Arbitrary/NNP
    length/NN
    hash/NN
    functions/NNS
    Message/NNP
    Authentication/NNP
    codes/NNS)
  (/(
  (NP MACs/NNP)
  )/)
  (NP Digital/NNP)
  signatures/VBZ
  (NP Authentication/NNP primitives/NNS Digital/NNP)
  signatures/VBZ
  (NP MACs/NNP Digital/NNP)
  signatures/VBZ
  (NP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  3/CD
  (NP
    Проверить/NNP
    правильность/NNP
    схемы/NNP
    Digital/NNP
    Signature/NNP
    A/NNP)
  (NP digital/JJ signature/NN authentication/NN mechanism/NN)
  enables/VBZ
  (NP creator/JJ message/NN attach/NN code/NN)
  acts/VBZ
  (NP signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['OOPC++ UNIT-1 Prof. Rupesh G. Vaishnav rupesh.vaishnav @', 'Information', 'Network Security', 'Darshan Institute Engineering', 'Technology UNIT-7 Digital Signature', 'Outline Digital Signature Digital Signature properties Requirements security Various', 'digital signature schemes', 'Elgamal Schnorr', 'Digital Signature', '/ Digital Signature Standard Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› X.800 RFC', 'International Telecommunication Union', 'ITU', 'Symmetric-key ciphers', 'Block ciphers Stream ciphers Public-key ciphers Cryptographic Goals Cryptographic goals Confidentiality Data integrity Authentication Non-repudiation Message authentication Entity authentication Arbitrary length hash functions Message Authentication codes', 'MACs', 'Digital', 'Authentication primitives Digital', 'MACs Digital', 'Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'Проверить правильность схемы Digital Signature A', 'digital signature authentication mechanism', 'creator message attach code', 'signature']

>> Named Entities are: 
 [('PERSON', 'Rupesh G. Vaishnav'), ('PERSON', 'Network Security'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital'), ('ORGANIZATION', 'Digital Signature'), ('ORGANIZATION', 'Digital'), ('PERSON', 'Various'), ('ORGANIZATION', 'Elgamal Schnorr'), ('ORGANIZATION', 'Digital Signature'), ('ORGANIZATION', 'Digital Signature Standard'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'International Telecommunication Union'), ('ORGANIZATION', 'ITU'), ('PERSON', 'Cryptographic Goals Cryptographic'), ('ORGANIZATION', 'Confidentiality Data'), ('PERSON', 'Authentication'), ('PERSON', 'Message'), ('ORGANIZATION', 'MACs'), ('ORGANIZATION', 'Digital'), ('ORGANIZATION', 'Digital'), ('ORGANIZATION', 'MACs Digital'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital')] 

>> Stemming using Porter Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('1', '1'), ('Outline', 'outlin'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Digital', 'digit'), ('Signature', 'signatur'), ('properties', 'properti'), ('Requirements', 'requir'), ('security', 'secur'), ('Various', 'variou'), ('digital', 'digit'), ('signature', 'signatur'), ('schemes', 'scheme'), ('(', '('), ('Elgamal', 'elgam'), ('Schnorr', 'schnorr'), (')', ')'), ('Digital', 'digit'), ('Signature', 'signatur'), ('algorithm', 'algorithm'), ('/', '/'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Standard', 'standard'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Symmetric-key', 'symmetric-key'), ('ciphers', 'cipher'), (':', ':'), ('Block', 'block'), ('ciphers', 'cipher'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('Public-key', 'public-key'), ('ciphers', 'cipher'), ('Cryptographic', 'cryptograph'), ('Goals', 'goal'), ('Cryptographic', 'cryptograph'), ('goals', 'goal'), ('Confidentiality', 'confidenti'), ('Data', 'data'), ('integrity', 'integr'), ('Authentication', 'authent'), ('Non-repudiation', 'non-repudi'), ('Message', 'messag'), ('authentication', 'authent'), ('Entity', 'entiti'), ('authentication', 'authent'), ('Arbitrary', 'arbitrari'), ('length', 'length'), ('hash', 'hash'), ('functions', 'function'), ('Message', 'messag'), ('Authentication', 'authent'), ('codes', 'code'), ('(', '('), ('MACs', 'mac'), (')', ')'), ('Digital', 'digit'), ('signatures', 'signatur'), ('Authentication', 'authent'), ('primitives', 'primit'), ('Digital', 'digit'), ('signatures', 'signatur'), ('MACs', 'mac'), ('Digital', 'digit'), ('signatures', 'signatur'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('3', '3'), ('Проверить', 'проверить'), ('правильность', 'правильность'), ('схемы', 'схемы'), ('Digital', 'digit'), ('Signature', 'signatur'), ('A', 'a'), ('digital', 'digit'), ('signature', 'signatur'), ('authentication', 'authent'), ('mechanism', 'mechan'), ('enables', 'enabl'), ('creator', 'creator'), ('message', 'messag'), ('attach', 'attach'), ('code', 'code'), ('acts', 'act'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('1', '1'), ('Outline', 'outlin'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Digital', 'digit'), ('Signature', 'signatur'), ('properties', 'properti'), ('Requirements', 'requir'), ('security', 'secur'), ('Various', 'various'), ('digital', 'digit'), ('signature', 'signatur'), ('schemes', 'scheme'), ('(', '('), ('Elgamal', 'elgam'), ('Schnorr', 'schnorr'), (')', ')'), ('Digital', 'digit'), ('Signature', 'signatur'), ('algorithm', 'algorithm'), ('/', '/'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Standard', 'standard'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Symmetric-key', 'symmetric-key'), ('ciphers', 'cipher'), (':', ':'), ('Block', 'block'), ('ciphers', 'cipher'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('Public-key', 'public-key'), ('ciphers', 'cipher'), ('Cryptographic', 'cryptograph'), ('Goals', 'goal'), ('Cryptographic', 'cryptograph'), ('goals', 'goal'), ('Confidentiality', 'confidenti'), ('Data', 'data'), ('integrity', 'integr'), ('Authentication', 'authent'), ('Non-repudiation', 'non-repudi'), ('Message', 'messag'), ('authentication', 'authent'), ('Entity', 'entiti'), ('authentication', 'authent'), ('Arbitrary', 'arbitrari'), ('length', 'length'), ('hash', 'hash'), ('functions', 'function'), ('Message', 'messag'), ('Authentication', 'authent'), ('codes', 'code'), ('(', '('), ('MACs', 'mac'), (')', ')'), ('Digital', 'digit'), ('signatures', 'signatur'), ('Authentication', 'authent'), ('primitives', 'primit'), ('Digital', 'digit'), ('signatures', 'signatur'), ('MACs', 'mac'), ('Digital', 'digit'), ('signatures', 'signatur'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('3', '3'), ('Проверить', 'проверить'), ('правильность', 'правильность'), ('схемы', 'схемы'), ('Digital', 'digit'), ('Signature', 'signatur'), ('A', 'a'), ('digital', 'digit'), ('signature', 'signatur'), ('authentication', 'authent'), ('mechanism', 'mechan'), ('enables', 'enabl'), ('creator', 'creator'), ('message', 'messag'), ('attach', 'attach'), ('code', 'code'), ('acts', 'act'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('OOPC++', 'OOPC++'), ('UNIT-1', 'UNIT-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'Information'), ('&', '&'), ('Network', 'Network'), ('Security', 'Security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('UNIT-7', 'UNIT-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('1', '1'), ('Outline', 'Outline'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('properties', 'property'), ('Requirements', 'Requirements'), ('security', 'security'), ('Various', 'Various'), ('digital', 'digital'), ('signature', 'signature'), ('schemes', 'scheme'), ('(', '('), ('Elgamal', 'Elgamal'), ('Schnorr', 'Schnorr'), (')', ')'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('algorithm', 'algorithm'), ('/', '/'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Standard', 'Standard'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'X.800'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')'), ('2', '2'), ('Symmetric-key', 'Symmetric-key'), ('ciphers', 'cipher'), (':', ':'), ('Block', 'Block'), ('ciphers', 'cipher'), ('Stream', 'Stream'), ('ciphers', 'cipher'), ('Public-key', 'Public-key'), ('ciphers', 'cipher'), ('Cryptographic', 'Cryptographic'), ('Goals', 'Goals'), ('Cryptographic', 'Cryptographic'), ('goals', 'goal'), ('Confidentiality', 'Confidentiality'), ('Data', 'Data'), ('integrity', 'integrity'), ('Authentication', 'Authentication'), ('Non-repudiation', 'Non-repudiation'), ('Message', 'Message'), ('authentication', 'authentication'), ('Entity', 'Entity'), ('authentication', 'authentication'), ('Arbitrary', 'Arbitrary'), ('length', 'length'), ('hash', 'hash'), ('functions', 'function'), ('Message', 'Message'), ('Authentication', 'Authentication'), ('codes', 'code'), ('(', '('), ('MACs', 'MACs'), (')', ')'), ('Digital', 'Digital'), ('signatures', 'signature'), ('Authentication', 'Authentication'), ('primitives', 'primitive'), ('Digital', 'Digital'), ('signatures', 'signature'), ('MACs', 'MACs'), ('Digital', 'Digital'), ('signatures', 'signature'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('3', '3'), ('Проверить', 'Проверить'), ('правильность', 'правильность'), ('схемы', 'схемы'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('A', 'A'), ('digital', 'digital'), ('signature', 'signature'), ('authentication', 'authentication'), ('mechanism', 'mechanism'), ('enables', 'enables'), ('creator', 'creator'), ('message', 'message'), ('attach', 'attach'), ('code', 'code'), ('acts', 'act'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 2 =============================

Typically the signature is formed by taking the hash of the message and encrypting the message with the creator’s private key. 


>> Tokens are: 
 ['Typically', 'signature', 'formed', 'taking', 'hash', 'message', 'encrypting', 'message', 'creator', '’', 'private', 'key', '.']

>> Bigrams are: 
 [('Typically', 'signature'), ('signature', 'formed'), ('formed', 'taking'), ('taking', 'hash'), ('hash', 'message'), ('message', 'encrypting'), ('encrypting', 'message'), ('message', 'creator'), ('creator', '’'), ('’', 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Typically', 'signature', 'formed'), ('signature', 'formed', 'taking'), ('formed', 'taking', 'hash'), ('taking', 'hash', 'message'), ('hash', 'message', 'encrypting'), ('message', 'encrypting', 'message'), ('encrypting', 'message', 'creator'), ('message', 'creator', '’'), ('creator', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('Typically', 'RB'), ('signature', 'NN'), ('formed', 'VBD'), ('taking', 'VBG'), ('hash', 'JJ'), ('message', 'NN'), ('encrypting', 'VBG'), ('message', 'NN'), ('creator', 'NN'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  Typically/RB
  (NP signature/NN)
  formed/VBD
  taking/VBG
  (NP hash/JJ message/NN)
  encrypting/VBG
  (NP message/NN creator/NN ’/NNP)
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['signature', 'hash message', 'message creator ’', 'private key']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Typically', 'typic'), ('signature', 'signatur'), ('formed', 'form'), ('taking', 'take'), ('hash', 'hash'), ('message', 'messag'), ('encrypting', 'encrypt'), ('message', 'messag'), ('creator', 'creator'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Typically', 'typic'), ('signature', 'signatur'), ('formed', 'form'), ('taking', 'take'), ('hash', 'hash'), ('message', 'messag'), ('encrypting', 'encrypt'), ('message', 'messag'), ('creator', 'creator'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Typically', 'Typically'), ('signature', 'signature'), ('formed', 'formed'), ('taking', 'taking'), ('hash', 'hash'), ('message', 'message'), ('encrypting', 'encrypting'), ('message', 'message'), ('creator', 'creator'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 3 =============================

The signature guarantees the source and integrity of the message. 


>> Tokens are: 
 ['The', 'signature', 'guarantees', 'source', 'integrity', 'message', '.']

>> Bigrams are: 
 [('The', 'signature'), ('signature', 'guarantees'), ('guarantees', 'source'), ('source', 'integrity'), ('integrity', 'message'), ('message', '.')]

>> Trigrams are: 
 [('The', 'signature', 'guarantees'), ('signature', 'guarantees', 'source'), ('guarantees', 'source', 'integrity'), ('source', 'integrity', 'message'), ('integrity', 'message', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('signature', 'NN'), ('guarantees', 'VBZ'), ('source', 'NN'), ('integrity', 'NN'), ('message', 'NN'), ('.', '.')]

 (S
  (NP The/DT signature/NN)
  guarantees/VBZ
  (NP source/NN integrity/NN message/NN)
  ./.) 


>> Noun Phrases are: 
 ['The signature', 'source integrity message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('guarantees', 'guarante'), ('source', 'sourc'), ('integrity', 'integr'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('guarantees', 'guarante'), ('source', 'sourc'), ('integrity', 'integr'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('signature', 'signature'), ('guarantees', 'guarantee'), ('source', 'source'), ('integrity', 'integrity'), ('message', 'message'), ('.', '.')]



============================ Sentence 4 =============================

The digital signature standard (DSS) is an NIST standard that uses the secure hash algorithm (SHA). 


>> Tokens are: 
 ['The', 'digital', 'signature', 'standard', '(', 'DSS', ')', 'NIST', 'standard', 'uses', 'secure', 'hash', 'algorithm', '(', 'SHA', ')', '.']

>> Bigrams are: 
 [('The', 'digital'), ('digital', 'signature'), ('signature', 'standard'), ('standard', '('), ('(', 'DSS'), ('DSS', ')'), (')', 'NIST'), ('NIST', 'standard'), ('standard', 'uses'), ('uses', 'secure'), ('secure', 'hash'), ('hash', 'algorithm'), ('algorithm', '('), ('(', 'SHA'), ('SHA', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'digital', 'signature'), ('digital', 'signature', 'standard'), ('signature', 'standard', '('), ('standard', '(', 'DSS'), ('(', 'DSS', ')'), ('DSS', ')', 'NIST'), (')', 'NIST', 'standard'), ('NIST', 'standard', 'uses'), ('standard', 'uses', 'secure'), ('uses', 'secure', 'hash'), ('secure', 'hash', 'algorithm'), ('hash', 'algorithm', '('), ('algorithm', '(', 'SHA'), ('(', 'SHA', ')'), ('SHA', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('standard', 'NN'), ('(', '('), ('DSS', 'NNP'), (')', ')'), ('NIST', 'NNP'), ('standard', 'JJ'), ('uses', 'VBZ'), ('secure', 'JJ'), ('hash', 'NN'), ('algorithm', 'NN'), ('(', '('), ('SHA', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT digital/JJ signature/NN standard/NN)
  (/(
  (NP DSS/NNP)
  )/)
  (NP NIST/NNP)
  standard/JJ
  uses/VBZ
  (NP secure/JJ hash/NN algorithm/NN)
  (/(
  (NP SHA/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The digital signature standard', 'DSS', 'NIST', 'secure hash algorithm', 'SHA']

>> Named Entities are: 
 [('ORGANIZATION', 'DSS'), ('ORGANIZATION', 'NIST'), ('ORGANIZATION', 'SHA')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('digital', 'digit'), ('signature', 'signatur'), ('standard', 'standard'), ('(', '('), ('DSS', 'dss'), (')', ')'), ('NIST', 'nist'), ('standard', 'standard'), ('uses', 'use'), ('secure', 'secur'), ('hash', 'hash'), ('algorithm', 'algorithm'), ('(', '('), ('SHA', 'sha'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('digital', 'digit'), ('signature', 'signatur'), ('standard', 'standard'), ('(', '('), ('DSS', 'dss'), (')', ')'), ('NIST', 'nist'), ('standard', 'standard'), ('uses', 'use'), ('secure', 'secur'), ('hash', 'hash'), ('algorithm', 'algorithm'), ('(', '('), ('SHA', 'sha'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('digital', 'digital'), ('signature', 'signature'), ('standard', 'standard'), ('(', '('), ('DSS', 'DSS'), (')', ')'), ('NIST', 'NIST'), ('standard', 'standard'), ('uses', 'us'), ('secure', 'secure'), ('hash', 'hash'), ('algorithm', 'algorithm'), ('(', '('), ('SHA', 'SHA'), (')', ')'), ('.', '.')]



============================ Sentence 5 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›      Hash code, MAC and Digital Signature Hash Code A hash of the message, if appended to the message itself, only protects against accidental changes to the message, as an attacker who modifies the message can simply calculate a new hash and use it instead of the original one. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Hash', 'code', ',', 'MAC', 'Digital', 'Signature', 'Hash', 'Code', 'A', 'hash', 'message', ',', 'appended', 'message', ',', 'protects', 'accidental', 'changes', 'message', ',', 'attacker', 'modifies', 'message', 'simply', 'calculate', 'new', 'hash', 'use', 'instead', 'original', 'one', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Hash'), ('Hash', 'code'), ('code', ','), (',', 'MAC'), ('MAC', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Hash'), ('Hash', 'Code'), ('Code', 'A'), ('A', 'hash'), ('hash', 'message'), ('message', ','), (',', 'appended'), ('appended', 'message'), ('message', ','), (',', 'protects'), ('protects', 'accidental'), ('accidental', 'changes'), ('changes', 'message'), ('message', ','), (',', 'attacker'), ('attacker', 'modifies'), ('modifies', 'message'), ('message', 'simply'), ('simply', 'calculate'), ('calculate', 'new'), ('new', 'hash'), ('hash', 'use'), ('use', 'instead'), ('instead', 'original'), ('original', 'one'), ('one', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Hash'), ('›', 'Hash', 'code'), ('Hash', 'code', ','), ('code', ',', 'MAC'), (',', 'MAC', 'Digital'), ('MAC', 'Digital', 'Signature'), ('Digital', 'Signature', 'Hash'), ('Signature', 'Hash', 'Code'), ('Hash', 'Code', 'A'), ('Code', 'A', 'hash'), ('A', 'hash', 'message'), ('hash', 'message', ','), ('message', ',', 'appended'), (',', 'appended', 'message'), ('appended', 'message', ','), ('message', ',', 'protects'), (',', 'protects', 'accidental'), ('protects', 'accidental', 'changes'), ('accidental', 'changes', 'message'), ('changes', 'message', ','), ('message', ',', 'attacker'), (',', 'attacker', 'modifies'), ('attacker', 'modifies', 'message'), ('modifies', 'message', 'simply'), ('message', 'simply', 'calculate'), ('simply', 'calculate', 'new'), ('calculate', 'new', 'hash'), ('new', 'hash', 'use'), ('hash', 'use', 'instead'), ('use', 'instead', 'original'), ('instead', 'original', 'one'), ('original', 'one', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Hash', 'NNP'), ('code', 'NN'), (',', ','), ('MAC', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Hash', 'NNP'), ('Code', 'NNP'), ('A', 'NNP'), ('hash', 'NN'), ('message', 'NN'), (',', ','), ('appended', 'JJ'), ('message', 'NN'), (',', ','), ('protects', 'VBZ'), ('accidental', 'JJ'), ('changes', 'NNS'), ('message', 'NN'), (',', ','), ('attacker', 'NN'), ('modifies', 'NNS'), ('message', 'VBP'), ('simply', 'RB'), ('calculate', 'JJ'), ('new', 'JJ'), ('hash', 'NN'), ('use', 'NN'), ('instead', 'RB'), ('original', 'JJ'), ('one', 'CD'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Hash/NNP code/NN)
  ,/,
  (NP
    MAC/NNP
    Digital/NNP
    Signature/NNP
    Hash/NNP
    Code/NNP
    A/NNP
    hash/NN
    message/NN)
  ,/,
  (NP appended/JJ message/NN)
  ,/,
  protects/VBZ
  (NP accidental/JJ changes/NNS message/NN)
  ,/,
  (NP attacker/NN modifies/NNS)
  message/VBP
  simply/RB
  (NP calculate/JJ new/JJ hash/NN use/NN)
  instead/RB
  original/JJ
  one/CD
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Hash code', 'MAC Digital Signature Hash Code A hash message', 'appended message', 'accidental changes message', 'attacker modifies', 'calculate new hash use']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'MAC Digital')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hash', 'hash'), ('code', 'code'), (',', ','), ('MAC', 'mac'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Hash', 'hash'), ('Code', 'code'), ('A', 'a'), ('hash', 'hash'), ('message', 'messag'), (',', ','), ('appended', 'append'), ('message', 'messag'), (',', ','), ('protects', 'protect'), ('accidental', 'accident'), ('changes', 'chang'), ('message', 'messag'), (',', ','), ('attacker', 'attack'), ('modifies', 'modifi'), ('message', 'messag'), ('simply', 'simpli'), ('calculate', 'calcul'), ('new', 'new'), ('hash', 'hash'), ('use', 'use'), ('instead', 'instead'), ('original', 'origin'), ('one', 'one'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hash', 'hash'), ('code', 'code'), (',', ','), ('MAC', 'mac'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Hash', 'hash'), ('Code', 'code'), ('A', 'a'), ('hash', 'hash'), ('message', 'messag'), (',', ','), ('appended', 'append'), ('message', 'messag'), (',', ','), ('protects', 'protect'), ('accidental', 'accident'), ('changes', 'chang'), ('message', 'messag'), (',', ','), ('attacker', 'attack'), ('modifies', 'modifi'), ('message', 'messag'), ('simply', 'simpli'), ('calculate', 'calcul'), ('new', 'new'), ('hash', 'hash'), ('use', 'use'), ('instead', 'instead'), ('original', 'origin'), ('one', 'one'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hash', 'Hash'), ('code', 'code'), (',', ','), ('MAC', 'MAC'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Hash', 'Hash'), ('Code', 'Code'), ('A', 'A'), ('hash', 'hash'), ('message', 'message'), (',', ','), ('appended', 'appended'), ('message', 'message'), (',', ','), ('protects', 'protects'), ('accidental', 'accidental'), ('changes', 'change'), ('message', 'message'), (',', ','), ('attacker', 'attacker'), ('modifies', 'modifies'), ('message', 'message'), ('simply', 'simply'), ('calculate', 'calculate'), ('new', 'new'), ('hash', 'hash'), ('use', 'use'), ('instead', 'instead'), ('original', 'original'), ('one', 'one'), ('.', '.')]



============================ Sentence 6 =============================

So this only gives integrity. 


>> Tokens are: 
 ['So', 'gives', 'integrity', '.']

>> Bigrams are: 
 [('So', 'gives'), ('gives', 'integrity'), ('integrity', '.')]

>> Trigrams are: 
 [('So', 'gives', 'integrity'), ('gives', 'integrity', '.')]

>> POS Tags are: 
 [('So', 'RB'), ('gives', 'VBZ'), ('integrity', 'NN'), ('.', '.')]

 (S So/RB gives/VBZ (NP integrity/NN) ./.) 


>> Noun Phrases are: 
 ['integrity']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('So', 'so'), ('gives', 'give'), ('integrity', 'integr'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('So', 'so'), ('gives', 'give'), ('integrity', 'integr'), ('.', '.')]

>> Lemmatization: 
 [('So', 'So'), ('gives', 'give'), ('integrity', 'integrity'), ('.', '.')]



============================ Sentence 7 =============================

MAC A message authentication code (MAC) (sometimes also known as keyed hash) protects against message forgery by anyone who doesn't know the secret. 


>> Tokens are: 
 ['MAC', 'A', 'message', 'authentication', 'code', '(', 'MAC', ')', '(', 'sometimes', 'also', 'known', 'keyed', 'hash', ')', 'protects', 'message', 'forgery', 'anyone', "n't", 'know', 'secret', '.']

>> Bigrams are: 
 [('MAC', 'A'), ('A', 'message'), ('message', 'authentication'), ('authentication', 'code'), ('code', '('), ('(', 'MAC'), ('MAC', ')'), (')', '('), ('(', 'sometimes'), ('sometimes', 'also'), ('also', 'known'), ('known', 'keyed'), ('keyed', 'hash'), ('hash', ')'), (')', 'protects'), ('protects', 'message'), ('message', 'forgery'), ('forgery', 'anyone'), ('anyone', "n't"), ("n't", 'know'), ('know', 'secret'), ('secret', '.')]

>> Trigrams are: 
 [('MAC', 'A', 'message'), ('A', 'message', 'authentication'), ('message', 'authentication', 'code'), ('authentication', 'code', '('), ('code', '(', 'MAC'), ('(', 'MAC', ')'), ('MAC', ')', '('), (')', '(', 'sometimes'), ('(', 'sometimes', 'also'), ('sometimes', 'also', 'known'), ('also', 'known', 'keyed'), ('known', 'keyed', 'hash'), ('keyed', 'hash', ')'), ('hash', ')', 'protects'), (')', 'protects', 'message'), ('protects', 'message', 'forgery'), ('message', 'forgery', 'anyone'), ('forgery', 'anyone', "n't"), ('anyone', "n't", 'know'), ("n't", 'know', 'secret'), ('know', 'secret', '.')]

>> POS Tags are: 
 [('MAC', 'NNP'), ('A', 'NNP'), ('message', 'NN'), ('authentication', 'NN'), ('code', 'NN'), ('(', '('), ('MAC', 'NNP'), (')', ')'), ('(', '('), ('sometimes', 'RB'), ('also', 'RB'), ('known', 'VBN'), ('keyed', 'JJ'), ('hash', 'NN'), (')', ')'), ('protects', 'VBZ'), ('message', 'JJ'), ('forgery', 'NN'), ('anyone', 'NN'), ("n't", 'RB'), ('know', 'VBD'), ('secret', 'JJ'), ('.', '.')]

 (S
  (NP MAC/NNP A/NNP message/NN authentication/NN code/NN)
  (/(
  (NP MAC/NNP)
  )/)
  (/(
  sometimes/RB
  also/RB
  known/VBN
  (NP keyed/JJ hash/NN)
  )/)
  protects/VBZ
  (NP message/JJ forgery/NN anyone/NN)
  n't/RB
  know/VBD
  secret/JJ
  ./.) 


>> Noun Phrases are: 
 ['MAC A message authentication code', 'MAC', 'keyed hash', 'message forgery anyone']

>> Named Entities are: 
 [('ORGANIZATION', 'MAC'), ('ORGANIZATION', 'MAC')] 

>> Stemming using Porter Stemmer: 
 [('MAC', 'mac'), ('A', 'a'), ('message', 'messag'), ('authentication', 'authent'), ('code', 'code'), ('(', '('), ('MAC', 'mac'), (')', ')'), ('(', '('), ('sometimes', 'sometim'), ('also', 'also'), ('known', 'known'), ('keyed', 'key'), ('hash', 'hash'), (')', ')'), ('protects', 'protect'), ('message', 'messag'), ('forgery', 'forgeri'), ('anyone', 'anyon'), ("n't", "n't"), ('know', 'know'), ('secret', 'secret'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('MAC', 'mac'), ('A', 'a'), ('message', 'messag'), ('authentication', 'authent'), ('code', 'code'), ('(', '('), ('MAC', 'mac'), (')', ')'), ('(', '('), ('sometimes', 'sometim'), ('also', 'also'), ('known', 'known'), ('keyed', 'key'), ('hash', 'hash'), (')', ')'), ('protects', 'protect'), ('message', 'messag'), ('forgery', 'forgeri'), ('anyone', 'anyon'), ("n't", "n't"), ('know', 'know'), ('secret', 'secret'), ('.', '.')]

>> Lemmatization: 
 [('MAC', 'MAC'), ('A', 'A'), ('message', 'message'), ('authentication', 'authentication'), ('code', 'code'), ('(', '('), ('MAC', 'MAC'), (')', ')'), ('(', '('), ('sometimes', 'sometimes'), ('also', 'also'), ('known', 'known'), ('keyed', 'keyed'), ('hash', 'hash'), (')', ')'), ('protects', 'protects'), ('message', 'message'), ('forgery', 'forgery'), ('anyone', 'anyone'), ("n't", "n't"), ('know', 'know'), ('secret', 'secret'), ('.', '.')]



============================ Sentence 8 =============================

This means that the receiver can forge any message – thus we have both integrity and authentication (as long as the receiver doesn't have a split personality), but not non-repudiation. 


>> Tokens are: 
 ['This', 'means', 'receiver', 'forge', 'message', '–', 'thus', 'integrity', 'authentication', '(', 'long', 'receiver', "n't", 'split', 'personality', ')', ',', 'non-repudiation', '.']

>> Bigrams are: 
 [('This', 'means'), ('means', 'receiver'), ('receiver', 'forge'), ('forge', 'message'), ('message', '–'), ('–', 'thus'), ('thus', 'integrity'), ('integrity', 'authentication'), ('authentication', '('), ('(', 'long'), ('long', 'receiver'), ('receiver', "n't"), ("n't", 'split'), ('split', 'personality'), ('personality', ')'), (')', ','), (',', 'non-repudiation'), ('non-repudiation', '.')]

>> Trigrams are: 
 [('This', 'means', 'receiver'), ('means', 'receiver', 'forge'), ('receiver', 'forge', 'message'), ('forge', 'message', '–'), ('message', '–', 'thus'), ('–', 'thus', 'integrity'), ('thus', 'integrity', 'authentication'), ('integrity', 'authentication', '('), ('authentication', '(', 'long'), ('(', 'long', 'receiver'), ('long', 'receiver', "n't"), ('receiver', "n't", 'split'), ("n't", 'split', 'personality'), ('split', 'personality', ')'), ('personality', ')', ','), (')', ',', 'non-repudiation'), (',', 'non-repudiation', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('means', 'VBZ'), ('receiver', 'JJ'), ('forge', 'NN'), ('message', 'NN'), ('–', 'NNP'), ('thus', 'RB'), ('integrity', 'NN'), ('authentication', 'NN'), ('(', '('), ('long', 'JJ'), ('receiver', 'VBP'), ("n't", 'RB'), ('split', 'VB'), ('personality', 'NN'), (')', ')'), (',', ','), ('non-repudiation', 'NN'), ('.', '.')]

 (S
  This/DT
  means/VBZ
  (NP receiver/JJ forge/NN message/NN –/NNP)
  thus/RB
  (NP integrity/NN authentication/NN)
  (/(
  long/JJ
  receiver/VBP
  n't/RB
  split/VB
  (NP personality/NN)
  )/)
  ,/,
  (NP non-repudiation/NN)
  ./.) 


>> Noun Phrases are: 
 ['receiver forge message –', 'integrity authentication', 'personality', 'non-repudiation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('means', 'mean'), ('receiver', 'receiv'), ('forge', 'forg'), ('message', 'messag'), ('–', '–'), ('thus', 'thu'), ('integrity', 'integr'), ('authentication', 'authent'), ('(', '('), ('long', 'long'), ('receiver', 'receiv'), ("n't", "n't"), ('split', 'split'), ('personality', 'person'), (')', ')'), (',', ','), ('non-repudiation', 'non-repudi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('means', 'mean'), ('receiver', 'receiv'), ('forge', 'forg'), ('message', 'messag'), ('–', '–'), ('thus', 'thus'), ('integrity', 'integr'), ('authentication', 'authent'), ('(', '('), ('long', 'long'), ('receiver', 'receiv'), ("n't", "n't"), ('split', 'split'), ('personality', 'person'), (')', ')'), (',', ','), ('non-repudiation', 'non-repudi'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('means', 'mean'), ('receiver', 'receiver'), ('forge', 'forge'), ('message', 'message'), ('–', '–'), ('thus', 'thus'), ('integrity', 'integrity'), ('authentication', 'authentication'), ('(', '('), ('long', 'long'), ('receiver', 'receiver'), ("n't", "n't"), ('split', 'split'), ('personality', 'personality'), (')', ')'), (',', ','), ('non-repudiation', 'non-repudiation'), ('.', '.')]



============================ Sentence 9 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Hash code, MAC and Digital Signature Digital Signature A digital signature is created with a private key, and verified with the corresponding public key of an asymmetric key-pair. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Hash', 'code', ',', 'MAC', 'Digital', 'Signature', 'Digital', 'Signature', 'A', 'digital', 'signature', 'created', 'private', 'key', ',', 'verified', 'corresponding', 'public', 'key', 'asymmetric', 'key-pair', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Hash'), ('Hash', 'code'), ('code', ','), (',', 'MAC'), ('MAC', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Digital'), ('Digital', 'Signature'), ('Signature', 'A'), ('A', 'digital'), ('digital', 'signature'), ('signature', 'created'), ('created', 'private'), ('private', 'key'), ('key', ','), (',', 'verified'), ('verified', 'corresponding'), ('corresponding', 'public'), ('public', 'key'), ('key', 'asymmetric'), ('asymmetric', 'key-pair'), ('key-pair', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Hash'), ('›', 'Hash', 'code'), ('Hash', 'code', ','), ('code', ',', 'MAC'), (',', 'MAC', 'Digital'), ('MAC', 'Digital', 'Signature'), ('Digital', 'Signature', 'Digital'), ('Signature', 'Digital', 'Signature'), ('Digital', 'Signature', 'A'), ('Signature', 'A', 'digital'), ('A', 'digital', 'signature'), ('digital', 'signature', 'created'), ('signature', 'created', 'private'), ('created', 'private', 'key'), ('private', 'key', ','), ('key', ',', 'verified'), (',', 'verified', 'corresponding'), ('verified', 'corresponding', 'public'), ('corresponding', 'public', 'key'), ('public', 'key', 'asymmetric'), ('key', 'asymmetric', 'key-pair'), ('asymmetric', 'key-pair', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Hash', 'NNP'), ('code', 'NN'), (',', ','), ('MAC', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('A', 'NNP'), ('digital', 'JJ'), ('signature', 'NN'), ('created', 'VBD'), ('private', 'JJ'), ('key', 'NN'), (',', ','), ('verified', 'VBD'), ('corresponding', 'VBG'), ('public', 'JJ'), ('key', 'JJ'), ('asymmetric', 'JJ'), ('key-pair', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Hash/NNP code/NN)
  ,/,
  (NP
    MAC/NNP
    Digital/NNP
    Signature/NNP
    Digital/NNP
    Signature/NNP
    A/NNP)
  (NP digital/JJ signature/NN)
  created/VBD
  (NP private/JJ key/NN)
  ,/,
  verified/VBD
  corresponding/VBG
  (NP public/JJ key/JJ asymmetric/JJ key-pair/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Hash code', 'MAC Digital Signature Digital Signature A', 'digital signature', 'private key', 'public key asymmetric key-pair']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'MAC Digital'), ('ORGANIZATION', 'Digital')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hash', 'hash'), ('code', 'code'), (',', ','), ('MAC', 'mac'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Digital', 'digit'), ('Signature', 'signatur'), ('A', 'a'), ('digital', 'digit'), ('signature', 'signatur'), ('created', 'creat'), ('private', 'privat'), ('key', 'key'), (',', ','), ('verified', 'verifi'), ('corresponding', 'correspond'), ('public', 'public'), ('key', 'key'), ('asymmetric', 'asymmetr'), ('key-pair', 'key-pair'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hash', 'hash'), ('code', 'code'), (',', ','), ('MAC', 'mac'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Digital', 'digit'), ('Signature', 'signatur'), ('A', 'a'), ('digital', 'digit'), ('signature', 'signatur'), ('created', 'creat'), ('private', 'privat'), ('key', 'key'), (',', ','), ('verified', 'verifi'), ('corresponding', 'correspond'), ('public', 'public'), ('key', 'key'), ('asymmetric', 'asymmetr'), ('key-pair', 'key-pair'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hash', 'Hash'), ('code', 'code'), (',', ','), ('MAC', 'MAC'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('A', 'A'), ('digital', 'digital'), ('signature', 'signature'), ('created', 'created'), ('private', 'private'), ('key', 'key'), (',', ','), ('verified', 'verified'), ('corresponding', 'corresponding'), ('public', 'public'), ('key', 'key'), ('asymmetric', 'asymmetric'), ('key-pair', 'key-pair'), ('.', '.')]



============================ Sentence 10 =============================

Only the holder of the private key can create this signature, and normally anyone knowing the public key can verify it. 


>> Tokens are: 
 ['Only', 'holder', 'private', 'key', 'create', 'signature', ',', 'normally', 'anyone', 'knowing', 'public', 'key', 'verify', '.']

>> Bigrams are: 
 [('Only', 'holder'), ('holder', 'private'), ('private', 'key'), ('key', 'create'), ('create', 'signature'), ('signature', ','), (',', 'normally'), ('normally', 'anyone'), ('anyone', 'knowing'), ('knowing', 'public'), ('public', 'key'), ('key', 'verify'), ('verify', '.')]

>> Trigrams are: 
 [('Only', 'holder', 'private'), ('holder', 'private', 'key'), ('private', 'key', 'create'), ('key', 'create', 'signature'), ('create', 'signature', ','), ('signature', ',', 'normally'), (',', 'normally', 'anyone'), ('normally', 'anyone', 'knowing'), ('anyone', 'knowing', 'public'), ('knowing', 'public', 'key'), ('public', 'key', 'verify'), ('key', 'verify', '.')]

>> POS Tags are: 
 [('Only', 'RB'), ('holder', 'NN'), ('private', 'JJ'), ('key', 'JJ'), ('create', 'NN'), ('signature', 'NN'), (',', ','), ('normally', 'RB'), ('anyone', 'NN'), ('knowing', 'VBG'), ('public', 'JJ'), ('key', 'JJ'), ('verify', 'NN'), ('.', '.')]

 (S
  Only/RB
  (NP holder/NN)
  (NP private/JJ key/JJ create/NN signature/NN)
  ,/,
  normally/RB
  (NP anyone/NN)
  knowing/VBG
  (NP public/JJ key/JJ verify/NN)
  ./.) 


>> Noun Phrases are: 
 ['holder', 'private key create signature', 'anyone', 'public key verify']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Only', 'onli'), ('holder', 'holder'), ('private', 'privat'), ('key', 'key'), ('create', 'creat'), ('signature', 'signatur'), (',', ','), ('normally', 'normal'), ('anyone', 'anyon'), ('knowing', 'know'), ('public', 'public'), ('key', 'key'), ('verify', 'verifi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Only', 'onli'), ('holder', 'holder'), ('private', 'privat'), ('key', 'key'), ('create', 'creat'), ('signature', 'signatur'), (',', ','), ('normally', 'normal'), ('anyone', 'anyon'), ('knowing', 'know'), ('public', 'public'), ('key', 'key'), ('verify', 'verifi'), ('.', '.')]

>> Lemmatization: 
 [('Only', 'Only'), ('holder', 'holder'), ('private', 'private'), ('key', 'key'), ('create', 'create'), ('signature', 'signature'), (',', ','), ('normally', 'normally'), ('anyone', 'anyone'), ('knowing', 'knowing'), ('public', 'public'), ('key', 'key'), ('verify', 'verify'), ('.', '.')]



============================ Sentence 11 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Attacks and Forgeries Key-only attack: C only knows A’s public key. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Attacks', 'Forgeries', 'Key-only', 'attack', ':', 'C', 'knows', 'A', '’', 'public', 'key', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Attacks'), ('Attacks', 'Forgeries'), ('Forgeries', 'Key-only'), ('Key-only', 'attack'), ('attack', ':'), (':', 'C'), ('C', 'knows'), ('knows', 'A'), ('A', '’'), ('’', 'public'), ('public', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Attacks'), ('›', 'Attacks', 'Forgeries'), ('Attacks', 'Forgeries', 'Key-only'), ('Forgeries', 'Key-only', 'attack'), ('Key-only', 'attack', ':'), ('attack', ':', 'C'), (':', 'C', 'knows'), ('C', 'knows', 'A'), ('knows', 'A', '’'), ('A', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN'), ('Attacks', 'NNP'), ('Forgeries', 'NNP'), ('Key-only', 'NNP'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('knows', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN Attacks/NNP Forgeries/NNP Key-only/NNP attack/NN)
  :/:
  (NP C/NNP)
  knows/VBZ
  (NP A/NNP ’/NNP)
  (NP public/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Attacks Forgeries Key-only attack', 'C', 'A ’', 'public key']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Attacks Forgeries')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Attacks', 'attack'), ('Forgeries', 'forgeri'), ('Key-only', 'key-onli'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('knows', 'know'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Attacks', 'attack'), ('Forgeries', 'forgeri'), ('Key-only', 'key-on'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('knows', 'know'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Attacks', 'Attacks'), ('Forgeries', 'Forgeries'), ('Key-only', 'Key-only'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('knows', 'know'), ('A', 'A'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]



============================ Sentence 12 =============================

Known message attack: C is given access to a set of messages and their signatures. 


>> Tokens are: 
 ['Known', 'message', 'attack', ':', 'C', 'given', 'access', 'set', 'messages', 'signatures', '.']

>> Bigrams are: 
 [('Known', 'message'), ('message', 'attack'), ('attack', ':'), (':', 'C'), ('C', 'given'), ('given', 'access'), ('access', 'set'), ('set', 'messages'), ('messages', 'signatures'), ('signatures', '.')]

>> Trigrams are: 
 [('Known', 'message', 'attack'), ('message', 'attack', ':'), ('attack', ':', 'C'), (':', 'C', 'given'), ('C', 'given', 'access'), ('given', 'access', 'set'), ('access', 'set', 'messages'), ('set', 'messages', 'signatures'), ('messages', 'signatures', '.')]

>> POS Tags are: 
 [('Known', 'VBN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('given', 'VBN'), ('access', 'NN'), ('set', 'VBN'), ('messages', 'NNS'), ('signatures', 'NNS'), ('.', '.')]

 (S
  Known/VBN
  (NP message/NN attack/NN)
  :/:
  (NP C/NNP)
  given/VBN
  (NP access/NN)
  set/VBN
  (NP messages/NNS signatures/NNS)
  ./.) 


>> Noun Phrases are: 
 ['message attack', 'C', 'access', 'messages signatures']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Known', 'known'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('given', 'given'), ('access', 'access'), ('set', 'set'), ('messages', 'messag'), ('signatures', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Known', 'known'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('given', 'given'), ('access', 'access'), ('set', 'set'), ('messages', 'messag'), ('signatures', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('Known', 'Known'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('given', 'given'), ('access', 'access'), ('set', 'set'), ('messages', 'message'), ('signatures', 'signature'), ('.', '.')]



============================ Sentence 13 =============================

Generic chosen message attack: C chooses a list of messages before attempting to breaks A’s signature scheme, independent of A’s public key. 


>> Tokens are: 
 ['Generic', 'chosen', 'message', 'attack', ':', 'C', 'chooses', 'list', 'messages', 'attempting', 'breaks', 'A', '’', 'signature', 'scheme', ',', 'independent', 'A', '’', 'public', 'key', '.']

>> Bigrams are: 
 [('Generic', 'chosen'), ('chosen', 'message'), ('message', 'attack'), ('attack', ':'), (':', 'C'), ('C', 'chooses'), ('chooses', 'list'), ('list', 'messages'), ('messages', 'attempting'), ('attempting', 'breaks'), ('breaks', 'A'), ('A', '’'), ('’', 'signature'), ('signature', 'scheme'), ('scheme', ','), (',', 'independent'), ('independent', 'A'), ('A', '’'), ('’', 'public'), ('public', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Generic', 'chosen', 'message'), ('chosen', 'message', 'attack'), ('message', 'attack', ':'), ('attack', ':', 'C'), (':', 'C', 'chooses'), ('C', 'chooses', 'list'), ('chooses', 'list', 'messages'), ('list', 'messages', 'attempting'), ('messages', 'attempting', 'breaks'), ('attempting', 'breaks', 'A'), ('breaks', 'A', '’'), ('A', '’', 'signature'), ('’', 'signature', 'scheme'), ('signature', 'scheme', ','), ('scheme', ',', 'independent'), (',', 'independent', 'A'), ('independent', 'A', '’'), ('A', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', '.')]

>> POS Tags are: 
 [('Generic', 'NNP'), ('chosen', 'NN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('chooses', 'VBZ'), ('list', 'JJ'), ('messages', 'NNS'), ('attempting', 'VBG'), ('breaks', 'NNS'), ('A', 'NNP'), ('’', 'JJ'), ('signature', 'NN'), ('scheme', 'NN'), (',', ','), ('independent', 'JJ'), ('A', 'NNP'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP Generic/NNP chosen/NN message/NN attack/NN)
  :/:
  (NP C/NNP)
  chooses/VBZ
  (NP list/JJ messages/NNS)
  attempting/VBG
  (NP breaks/NNS A/NNP)
  (NP ’/JJ signature/NN scheme/NN)
  ,/,
  (NP independent/JJ A/NNP ’/NNP)
  (NP public/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Generic chosen message attack', 'C', 'list messages', 'breaks A', '’ signature scheme', 'independent A ’', 'public key']

>> Named Entities are: 
 [('GPE', 'Generic')] 

>> Stemming using Porter Stemmer: 
 [('Generic', 'gener'), ('chosen', 'chosen'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('chooses', 'choos'), ('list', 'list'), ('messages', 'messag'), ('attempting', 'attempt'), ('breaks', 'break'), ('A', 'a'), ('’', '’'), ('signature', 'signatur'), ('scheme', 'scheme'), (',', ','), ('independent', 'independ'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Generic', 'generic'), ('chosen', 'chosen'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('chooses', 'choos'), ('list', 'list'), ('messages', 'messag'), ('attempting', 'attempt'), ('breaks', 'break'), ('A', 'a'), ('’', '’'), ('signature', 'signatur'), ('scheme', 'scheme'), (',', ','), ('independent', 'independ'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Generic', 'Generic'), ('chosen', 'chosen'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('chooses', 'chooses'), ('list', 'list'), ('messages', 'message'), ('attempting', 'attempting'), ('breaks', 'break'), ('A', 'A'), ('’', '’'), ('signature', 'signature'), ('scheme', 'scheme'), (',', ','), ('independent', 'independent'), ('A', 'A'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]



============================ Sentence 14 =============================

C then obtains from A valid signatures for the chosen messages. 


>> Tokens are: 
 ['C', 'obtains', 'A', 'valid', 'signatures', 'chosen', 'messages', '.']

>> Bigrams are: 
 [('C', 'obtains'), ('obtains', 'A'), ('A', 'valid'), ('valid', 'signatures'), ('signatures', 'chosen'), ('chosen', 'messages'), ('messages', '.')]

>> Trigrams are: 
 [('C', 'obtains', 'A'), ('obtains', 'A', 'valid'), ('A', 'valid', 'signatures'), ('valid', 'signatures', 'chosen'), ('signatures', 'chosen', 'messages'), ('chosen', 'messages', '.')]

>> POS Tags are: 
 [('C', 'NNP'), ('obtains', 'VBZ'), ('A', 'NNP'), ('valid', 'JJ'), ('signatures', 'NNS'), ('chosen', 'VBN'), ('messages', 'NNS'), ('.', '.')]

 (S
  (NP C/NNP)
  obtains/VBZ
  (NP A/NNP)
  (NP valid/JJ signatures/NNS)
  chosen/VBN
  (NP messages/NNS)
  ./.) 


>> Noun Phrases are: 
 ['C', 'A', 'valid signatures', 'messages']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('C', 'c'), ('obtains', 'obtain'), ('A', 'a'), ('valid', 'valid'), ('signatures', 'signatur'), ('chosen', 'chosen'), ('messages', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('C', 'c'), ('obtains', 'obtain'), ('A', 'a'), ('valid', 'valid'), ('signatures', 'signatur'), ('chosen', 'chosen'), ('messages', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('C', 'C'), ('obtains', 'obtains'), ('A', 'A'), ('valid', 'valid'), ('signatures', 'signature'), ('chosen', 'chosen'), ('messages', 'message'), ('.', '.')]



============================ Sentence 15 =============================

The attack is generic, because it does not depend on A’s public key; the same attack is used against everyone. 


>> Tokens are: 
 ['The', 'attack', 'generic', ',', 'depend', 'A', '’', 'public', 'key', ';', 'attack', 'used', 'everyone', '.']

>> Bigrams are: 
 [('The', 'attack'), ('attack', 'generic'), ('generic', ','), (',', 'depend'), ('depend', 'A'), ('A', '’'), ('’', 'public'), ('public', 'key'), ('key', ';'), (';', 'attack'), ('attack', 'used'), ('used', 'everyone'), ('everyone', '.')]

>> Trigrams are: 
 [('The', 'attack', 'generic'), ('attack', 'generic', ','), ('generic', ',', 'depend'), (',', 'depend', 'A'), ('depend', 'A', '’'), ('A', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', ';'), ('key', ';', 'attack'), (';', 'attack', 'used'), ('attack', 'used', 'everyone'), ('used', 'everyone', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('attack', 'NN'), ('generic', 'NN'), (',', ','), ('depend', 'VBP'), ('A', 'DT'), ('’', 'JJ'), ('public', 'JJ'), ('key', 'NN'), (';', ':'), ('attack', 'NN'), ('used', 'VBD'), ('everyone', 'NN'), ('.', '.')]

 (S
  (NP The/DT attack/NN generic/NN)
  ,/,
  depend/VBP
  (NP A/DT ’/JJ public/JJ key/NN)
  ;/:
  (NP attack/NN)
  used/VBD
  (NP everyone/NN)
  ./.) 


>> Noun Phrases are: 
 ['The attack generic', 'A ’ public key', 'attack', 'everyone']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('attack', 'attack'), ('generic', 'gener'), (',', ','), ('depend', 'depend'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), (';', ';'), ('attack', 'attack'), ('used', 'use'), ('everyone', 'everyon'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('attack', 'attack'), ('generic', 'generic'), (',', ','), ('depend', 'depend'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), (';', ';'), ('attack', 'attack'), ('used', 'use'), ('everyone', 'everyon'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('attack', 'attack'), ('generic', 'generic'), (',', ','), ('depend', 'depend'), ('A', 'A'), ('’', '’'), ('public', 'public'), ('key', 'key'), (';', ';'), ('attack', 'attack'), ('used', 'used'), ('everyone', 'everyone'), ('.', '.')]



============================ Sentence 16 =============================

Directed chosen message attack: Similar to the generic attack, except that the list of messages to be signed is chosen after C knows A’s public key but before any signatures are seen. 


>> Tokens are: 
 ['Directed', 'chosen', 'message', 'attack', ':', 'Similar', 'generic', 'attack', ',', 'except', 'list', 'messages', 'signed', 'chosen', 'C', 'knows', 'A', '’', 'public', 'key', 'signatures', 'seen', '.']

>> Bigrams are: 
 [('Directed', 'chosen'), ('chosen', 'message'), ('message', 'attack'), ('attack', ':'), (':', 'Similar'), ('Similar', 'generic'), ('generic', 'attack'), ('attack', ','), (',', 'except'), ('except', 'list'), ('list', 'messages'), ('messages', 'signed'), ('signed', 'chosen'), ('chosen', 'C'), ('C', 'knows'), ('knows', 'A'), ('A', '’'), ('’', 'public'), ('public', 'key'), ('key', 'signatures'), ('signatures', 'seen'), ('seen', '.')]

>> Trigrams are: 
 [('Directed', 'chosen', 'message'), ('chosen', 'message', 'attack'), ('message', 'attack', ':'), ('attack', ':', 'Similar'), (':', 'Similar', 'generic'), ('Similar', 'generic', 'attack'), ('generic', 'attack', ','), ('attack', ',', 'except'), (',', 'except', 'list'), ('except', 'list', 'messages'), ('list', 'messages', 'signed'), ('messages', 'signed', 'chosen'), ('signed', 'chosen', 'C'), ('chosen', 'C', 'knows'), ('C', 'knows', 'A'), ('knows', 'A', '’'), ('A', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', 'signatures'), ('key', 'signatures', 'seen'), ('signatures', 'seen', '.')]

>> POS Tags are: 
 [('Directed', 'VBN'), ('chosen', 'JJ'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('Similar', 'JJ'), ('generic', 'JJ'), ('attack', 'NN'), (',', ','), ('except', 'IN'), ('list', 'NN'), ('messages', 'NNS'), ('signed', 'VBD'), ('chosen', 'VBN'), ('C', 'NNP'), ('knows', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('signatures', 'NNS'), ('seen', 'VBN'), ('.', '.')]

 (S
  Directed/VBN
  (NP chosen/JJ message/NN attack/NN)
  :/:
  (NP Similar/JJ generic/JJ attack/NN)
  ,/,
  except/IN
  (NP list/NN messages/NNS)
  signed/VBD
  chosen/VBN
  (NP C/NNP)
  knows/VBZ
  (NP A/NNP ’/NNP)
  (NP public/JJ key/NN signatures/NNS)
  seen/VBN
  ./.) 


>> Noun Phrases are: 
 ['chosen message attack', 'Similar generic attack', 'list messages', 'C', 'A ’', 'public key signatures']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Directed', 'direct'), ('chosen', 'chosen'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('Similar', 'similar'), ('generic', 'gener'), ('attack', 'attack'), (',', ','), ('except', 'except'), ('list', 'list'), ('messages', 'messag'), ('signed', 'sign'), ('chosen', 'chosen'), ('C', 'c'), ('knows', 'know'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('signatures', 'signatur'), ('seen', 'seen'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Directed', 'direct'), ('chosen', 'chosen'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('Similar', 'similar'), ('generic', 'generic'), ('attack', 'attack'), (',', ','), ('except', 'except'), ('list', 'list'), ('messages', 'messag'), ('signed', 'sign'), ('chosen', 'chosen'), ('C', 'c'), ('knows', 'know'), ('A', 'a'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('signatures', 'signatur'), ('seen', 'seen'), ('.', '.')]

>> Lemmatization: 
 [('Directed', 'Directed'), ('chosen', 'chosen'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('Similar', 'Similar'), ('generic', 'generic'), ('attack', 'attack'), (',', ','), ('except', 'except'), ('list', 'list'), ('messages', 'message'), ('signed', 'signed'), ('chosen', 'chosen'), ('C', 'C'), ('knows', 'know'), ('A', 'A'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('signatures', 'signature'), ('seen', 'seen'), ('.', '.')]



============================ Sentence 17 =============================

Adaptive chosen message attack: C is allowed to use A as an “oracle.” This means the A may request signatures of messages that depend on previously obtained message–signature pairs. 


>> Tokens are: 
 ['Adaptive', 'chosen', 'message', 'attack', ':', 'C', 'allowed', 'use', 'A', '“', 'oracle.', '”', 'This', 'means', 'A', 'may', 'request', 'signatures', 'messages', 'depend', 'previously', 'obtained', 'message–signature', 'pairs', '.']

>> Bigrams are: 
 [('Adaptive', 'chosen'), ('chosen', 'message'), ('message', 'attack'), ('attack', ':'), (':', 'C'), ('C', 'allowed'), ('allowed', 'use'), ('use', 'A'), ('A', '“'), ('“', 'oracle.'), ('oracle.', '”'), ('”', 'This'), ('This', 'means'), ('means', 'A'), ('A', 'may'), ('may', 'request'), ('request', 'signatures'), ('signatures', 'messages'), ('messages', 'depend'), ('depend', 'previously'), ('previously', 'obtained'), ('obtained', 'message–signature'), ('message–signature', 'pairs'), ('pairs', '.')]

>> Trigrams are: 
 [('Adaptive', 'chosen', 'message'), ('chosen', 'message', 'attack'), ('message', 'attack', ':'), ('attack', ':', 'C'), (':', 'C', 'allowed'), ('C', 'allowed', 'use'), ('allowed', 'use', 'A'), ('use', 'A', '“'), ('A', '“', 'oracle.'), ('“', 'oracle.', '”'), ('oracle.', '”', 'This'), ('”', 'This', 'means'), ('This', 'means', 'A'), ('means', 'A', 'may'), ('A', 'may', 'request'), ('may', 'request', 'signatures'), ('request', 'signatures', 'messages'), ('signatures', 'messages', 'depend'), ('messages', 'depend', 'previously'), ('depend', 'previously', 'obtained'), ('previously', 'obtained', 'message–signature'), ('obtained', 'message–signature', 'pairs'), ('message–signature', 'pairs', '.')]

>> POS Tags are: 
 [('Adaptive', 'JJ'), ('chosen', 'VBN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('C', 'NN'), ('allowed', 'VBN'), ('use', 'IN'), ('A', 'NNP'), ('“', 'NNP'), ('oracle.', 'NN'), ('”', 'NN'), ('This', 'DT'), ('means', 'VBZ'), ('A', 'DT'), ('may', 'MD'), ('request', 'VB'), ('signatures', 'NNS'), ('messages', 'NNS'), ('depend', 'VBP'), ('previously', 'RB'), ('obtained', 'VBN'), ('message–signature', 'NN'), ('pairs', 'NNS'), ('.', '.')]

 (S
  Adaptive/JJ
  chosen/VBN
  (NP message/NN attack/NN)
  :/:
  (NP C/NN)
  allowed/VBN
  use/IN
  (NP A/NNP “/NNP oracle./NN ”/NN)
  This/DT
  means/VBZ
  A/DT
  may/MD
  request/VB
  (NP signatures/NNS messages/NNS)
  depend/VBP
  previously/RB
  obtained/VBN
  (NP message–signature/NN pairs/NNS)
  ./.) 


>> Noun Phrases are: 
 ['message attack', 'C', 'A “ oracle. ”', 'signatures messages', 'message–signature pairs']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Adaptive', 'adapt'), ('chosen', 'chosen'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('allowed', 'allow'), ('use', 'use'), ('A', 'a'), ('“', '“'), ('oracle.', 'oracle.'), ('”', '”'), ('This', 'thi'), ('means', 'mean'), ('A', 'a'), ('may', 'may'), ('request', 'request'), ('signatures', 'signatur'), ('messages', 'messag'), ('depend', 'depend'), ('previously', 'previous'), ('obtained', 'obtain'), ('message–signature', 'message–signatur'), ('pairs', 'pair'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Adaptive', 'adapt'), ('chosen', 'chosen'), ('message', 'messag'), ('attack', 'attack'), (':', ':'), ('C', 'c'), ('allowed', 'allow'), ('use', 'use'), ('A', 'a'), ('“', '“'), ('oracle.', 'oracle.'), ('”', '”'), ('This', 'this'), ('means', 'mean'), ('A', 'a'), ('may', 'may'), ('request', 'request'), ('signatures', 'signatur'), ('messages', 'messag'), ('depend', 'depend'), ('previously', 'previous'), ('obtained', 'obtain'), ('message–signature', 'message–signatur'), ('pairs', 'pair'), ('.', '.')]

>> Lemmatization: 
 [('Adaptive', 'Adaptive'), ('chosen', 'chosen'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('allowed', 'allowed'), ('use', 'use'), ('A', 'A'), ('“', '“'), ('oracle.', 'oracle.'), ('”', '”'), ('This', 'This'), ('means', 'mean'), ('A', 'A'), ('may', 'may'), ('request', 'request'), ('signatures', 'signature'), ('messages', 'message'), ('depend', 'depend'), ('previously', 'previously'), ('obtained', 'obtained'), ('message–signature', 'message–signature'), ('pairs', 'pair'), ('.', '.')]



============================ Sentence 18 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Attacks and Forgeries Total break: C determines A’s private key. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Attacks', 'Forgeries', 'Total', 'break', ':', 'C', 'determines', 'A', '’', 'private', 'key', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Attacks'), ('Attacks', 'Forgeries'), ('Forgeries', 'Total'), ('Total', 'break'), ('break', ':'), (':', 'C'), ('C', 'determines'), ('determines', 'A'), ('A', '’'), ('’', 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Attacks'), ('›', 'Attacks', 'Forgeries'), ('Attacks', 'Forgeries', 'Total'), ('Forgeries', 'Total', 'break'), ('Total', 'break', ':'), ('break', ':', 'C'), (':', 'C', 'determines'), ('C', 'determines', 'A'), ('determines', 'A', '’'), ('A', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN'), ('Attacks', 'NNP'), ('Forgeries', 'NNP'), ('Total', 'NNP'), ('break', 'NN'), (':', ':'), ('C', 'NNP'), ('determines', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN Attacks/NNP Forgeries/NNP Total/NNP break/NN)
  :/:
  (NP C/NNP)
  determines/VBZ
  (NP A/NNP ’/NNP)
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Attacks Forgeries Total break', 'C', 'A ’', 'private key']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Attacks Forgeries Total')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Attacks', 'attack'), ('Forgeries', 'forgeri'), ('Total', 'total'), ('break', 'break'), (':', ':'), ('C', 'c'), ('determines', 'determin'), ('A', 'a'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Attacks', 'attack'), ('Forgeries', 'forgeri'), ('Total', 'total'), ('break', 'break'), (':', ':'), ('C', 'c'), ('determines', 'determin'), ('A', 'a'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Attacks', 'Attacks'), ('Forgeries', 'Forgeries'), ('Total', 'Total'), ('break', 'break'), (':', ':'), ('C', 'C'), ('determines', 'determines'), ('A', 'A'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 19 =============================

Universal forgery: C finds an efficient signing algorithm that provides an equivalent way of constructing signatures on arbitrary messages. 


>> Tokens are: 
 ['Universal', 'forgery', ':', 'C', 'finds', 'efficient', 'signing', 'algorithm', 'provides', 'equivalent', 'way', 'constructing', 'signatures', 'arbitrary', 'messages', '.']

>> Bigrams are: 
 [('Universal', 'forgery'), ('forgery', ':'), (':', 'C'), ('C', 'finds'), ('finds', 'efficient'), ('efficient', 'signing'), ('signing', 'algorithm'), ('algorithm', 'provides'), ('provides', 'equivalent'), ('equivalent', 'way'), ('way', 'constructing'), ('constructing', 'signatures'), ('signatures', 'arbitrary'), ('arbitrary', 'messages'), ('messages', '.')]

>> Trigrams are: 
 [('Universal', 'forgery', ':'), ('forgery', ':', 'C'), (':', 'C', 'finds'), ('C', 'finds', 'efficient'), ('finds', 'efficient', 'signing'), ('efficient', 'signing', 'algorithm'), ('signing', 'algorithm', 'provides'), ('algorithm', 'provides', 'equivalent'), ('provides', 'equivalent', 'way'), ('equivalent', 'way', 'constructing'), ('way', 'constructing', 'signatures'), ('constructing', 'signatures', 'arbitrary'), ('signatures', 'arbitrary', 'messages'), ('arbitrary', 'messages', '.')]

>> POS Tags are: 
 [('Universal', 'JJ'), ('forgery', 'NN'), (':', ':'), ('C', 'NNP'), ('finds', 'VBZ'), ('efficient', 'JJ'), ('signing', 'VBG'), ('algorithm', 'NN'), ('provides', 'VBZ'), ('equivalent', 'JJ'), ('way', 'NN'), ('constructing', 'VBG'), ('signatures', 'NNS'), ('arbitrary', 'JJ'), ('messages', 'NNS'), ('.', '.')]

 (S
  (NP Universal/JJ forgery/NN)
  :/:
  (NP C/NNP)
  finds/VBZ
  efficient/JJ
  signing/VBG
  (NP algorithm/NN)
  provides/VBZ
  (NP equivalent/JJ way/NN)
  constructing/VBG
  (NP signatures/NNS)
  (NP arbitrary/JJ messages/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Universal forgery', 'C', 'algorithm', 'equivalent way', 'signatures', 'arbitrary messages']

>> Named Entities are: 
 [('GPE', 'Universal')] 

>> Stemming using Porter Stemmer: 
 [('Universal', 'univers'), ('forgery', 'forgeri'), (':', ':'), ('C', 'c'), ('finds', 'find'), ('efficient', 'effici'), ('signing', 'sign'), ('algorithm', 'algorithm'), ('provides', 'provid'), ('equivalent', 'equival'), ('way', 'way'), ('constructing', 'construct'), ('signatures', 'signatur'), ('arbitrary', 'arbitrari'), ('messages', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Universal', 'univers'), ('forgery', 'forgeri'), (':', ':'), ('C', 'c'), ('finds', 'find'), ('efficient', 'effici'), ('signing', 'sign'), ('algorithm', 'algorithm'), ('provides', 'provid'), ('equivalent', 'equival'), ('way', 'way'), ('constructing', 'construct'), ('signatures', 'signatur'), ('arbitrary', 'arbitrari'), ('messages', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('Universal', 'Universal'), ('forgery', 'forgery'), (':', ':'), ('C', 'C'), ('finds', 'find'), ('efficient', 'efficient'), ('signing', 'signing'), ('algorithm', 'algorithm'), ('provides', 'provides'), ('equivalent', 'equivalent'), ('way', 'way'), ('constructing', 'constructing'), ('signatures', 'signature'), ('arbitrary', 'arbitrary'), ('messages', 'message'), ('.', '.')]



============================ Sentence 20 =============================

Selective forgery: C forges a signature for a particular message chosen by C. Existential forgery: C forges a signature for at least one message. 


>> Tokens are: 
 ['Selective', 'forgery', ':', 'C', 'forges', 'signature', 'particular', 'message', 'chosen', 'C.', 'Existential', 'forgery', ':', 'C', 'forges', 'signature', 'least', 'one', 'message', '.']

>> Bigrams are: 
 [('Selective', 'forgery'), ('forgery', ':'), (':', 'C'), ('C', 'forges'), ('forges', 'signature'), ('signature', 'particular'), ('particular', 'message'), ('message', 'chosen'), ('chosen', 'C.'), ('C.', 'Existential'), ('Existential', 'forgery'), ('forgery', ':'), (':', 'C'), ('C', 'forges'), ('forges', 'signature'), ('signature', 'least'), ('least', 'one'), ('one', 'message'), ('message', '.')]

>> Trigrams are: 
 [('Selective', 'forgery', ':'), ('forgery', ':', 'C'), (':', 'C', 'forges'), ('C', 'forges', 'signature'), ('forges', 'signature', 'particular'), ('signature', 'particular', 'message'), ('particular', 'message', 'chosen'), ('message', 'chosen', 'C.'), ('chosen', 'C.', 'Existential'), ('C.', 'Existential', 'forgery'), ('Existential', 'forgery', ':'), ('forgery', ':', 'C'), (':', 'C', 'forges'), ('C', 'forges', 'signature'), ('forges', 'signature', 'least'), ('signature', 'least', 'one'), ('least', 'one', 'message'), ('one', 'message', '.')]

>> POS Tags are: 
 [('Selective', 'JJ'), ('forgery', 'NN'), (':', ':'), ('C', 'NNP'), ('forges', 'VBZ'), ('signature', 'NN'), ('particular', 'JJ'), ('message', 'NN'), ('chosen', 'VBN'), ('C.', 'NNP'), ('Existential', 'JJ'), ('forgery', 'NN'), (':', ':'), ('C', 'NNP'), ('forges', 'VBZ'), ('signature', 'NN'), ('least', 'JJS'), ('one', 'CD'), ('message', 'NN'), ('.', '.')]

 (S
  (NP Selective/JJ forgery/NN)
  :/:
  (NP C/NNP)
  forges/VBZ
  (NP signature/NN)
  (NP particular/JJ message/NN)
  chosen/VBN
  (NP C./NNP)
  (NP Existential/JJ forgery/NN)
  :/:
  (NP C/NNP)
  forges/VBZ
  (NP signature/NN)
  least/JJS
  one/CD
  (NP message/NN)
  ./.) 


>> Noun Phrases are: 
 ['Selective forgery', 'C', 'signature', 'particular message', 'C.', 'Existential forgery', 'C', 'signature', 'message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Selective', 'select'), ('forgery', 'forgeri'), (':', ':'), ('C', 'c'), ('forges', 'forg'), ('signature', 'signatur'), ('particular', 'particular'), ('message', 'messag'), ('chosen', 'chosen'), ('C.', 'c.'), ('Existential', 'existenti'), ('forgery', 'forgeri'), (':', ':'), ('C', 'c'), ('forges', 'forg'), ('signature', 'signatur'), ('least', 'least'), ('one', 'one'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Selective', 'select'), ('forgery', 'forgeri'), (':', ':'), ('C', 'c'), ('forges', 'forg'), ('signature', 'signatur'), ('particular', 'particular'), ('message', 'messag'), ('chosen', 'chosen'), ('C.', 'c.'), ('Existential', 'existenti'), ('forgery', 'forgeri'), (':', ':'), ('C', 'c'), ('forges', 'forg'), ('signature', 'signatur'), ('least', 'least'), ('one', 'one'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('Selective', 'Selective'), ('forgery', 'forgery'), (':', ':'), ('C', 'C'), ('forges', 'forge'), ('signature', 'signature'), ('particular', 'particular'), ('message', 'message'), ('chosen', 'chosen'), ('C.', 'C.'), ('Existential', 'Existential'), ('forgery', 'forgery'), (':', ':'), ('C', 'C'), ('forges', 'forge'), ('signature', 'signature'), ('least', 'least'), ('one', 'one'), ('message', 'message'), ('.', '.')]



============================ Sentence 21 =============================

C has no control over the message. 


>> Tokens are: 
 ['C', 'control', 'message', '.']

>> Bigrams are: 
 [('C', 'control'), ('control', 'message'), ('message', '.')]

>> Trigrams are: 
 [('C', 'control', 'message'), ('control', 'message', '.')]

>> POS Tags are: 
 [('C', 'NNP'), ('control', 'NN'), ('message', 'NN'), ('.', '.')]

 (S (NP C/NNP control/NN message/NN) ./.) 


>> Noun Phrases are: 
 ['C control message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('C', 'c'), ('control', 'control'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('C', 'c'), ('control', 'control'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('C', 'C'), ('control', 'control'), ('message', 'message'), ('.', '.')]



============================ Sentence 22 =============================

Consequently, this forgery may only be a minor nuisance to A.  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Requirements The signature must be a bit pattern that depends on the message being signed. 


>> Tokens are: 
 ['Consequently', ',', 'forgery', 'may', 'minor', 'nuisance', 'A.', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'Requirements', 'The', 'signature', 'must', 'bit', 'pattern', 'depends', 'message', 'signed', '.']

>> Bigrams are: 
 [('Consequently', ','), (',', 'forgery'), ('forgery', 'may'), ('may', 'minor'), ('minor', 'nuisance'), ('nuisance', 'A.'), ('A.', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Requirements'), ('Requirements', 'The'), ('The', 'signature'), ('signature', 'must'), ('must', 'bit'), ('bit', 'pattern'), ('pattern', 'depends'), ('depends', 'message'), ('message', 'signed'), ('signed', '.')]

>> Trigrams are: 
 [('Consequently', ',', 'forgery'), (',', 'forgery', 'may'), ('forgery', 'may', 'minor'), ('may', 'minor', 'nuisance'), ('minor', 'nuisance', 'A.'), ('nuisance', 'A.', 'Unit-7'), ('A.', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'Requirements'), ('Signature', 'Requirements', 'The'), ('Requirements', 'The', 'signature'), ('The', 'signature', 'must'), ('signature', 'must', 'bit'), ('must', 'bit', 'pattern'), ('bit', 'pattern', 'depends'), ('pattern', 'depends', 'message'), ('depends', 'message', 'signed'), ('message', 'signed', '.')]

>> POS Tags are: 
 [('Consequently', 'RB'), (',', ','), ('forgery', 'NN'), ('may', 'MD'), ('minor', 'VB'), ('nuisance', 'NN'), ('A.', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NN'), ('Requirements', 'VBZ'), ('The', 'DT'), ('signature', 'NN'), ('must', 'MD'), ('bit', 'VB'), ('pattern', 'JJ'), ('depends', 'NNS'), ('message', 'NN'), ('signed', 'VBN'), ('.', '.')]

 (S
  Consequently/RB
  ,/,
  (NP forgery/NN)
  may/MD
  minor/VB
  (NP
    nuisance/NN
    A./NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Digital/NNP Signature/NN)
  Requirements/VBZ
  (NP The/DT signature/NN)
  must/MD
  bit/VB
  (NP pattern/JJ depends/NNS message/NN)
  signed/VBN
  ./.) 


>> Noun Phrases are: 
 ['forgery', 'nuisance A. Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Digital Signature', 'The signature', 'pattern depends message']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature')] 

>> Stemming using Porter Stemmer: 
 [('Consequently', 'consequ'), (',', ','), ('forgery', 'forgeri'), ('may', 'may'), ('minor', 'minor'), ('nuisance', 'nuisanc'), ('A.', 'a.'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Requirements', 'requir'), ('The', 'the'), ('signature', 'signatur'), ('must', 'must'), ('bit', 'bit'), ('pattern', 'pattern'), ('depends', 'depend'), ('message', 'messag'), ('signed', 'sign'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Consequently', 'consequ'), (',', ','), ('forgery', 'forgeri'), ('may', 'may'), ('minor', 'minor'), ('nuisance', 'nuisanc'), ('A.', 'a.'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Requirements', 'requir'), ('The', 'the'), ('signature', 'signatur'), ('must', 'must'), ('bit', 'bit'), ('pattern', 'pattern'), ('depends', 'depend'), ('message', 'messag'), ('signed', 'sign'), ('.', '.')]

>> Lemmatization: 
 [('Consequently', 'Consequently'), (',', ','), ('forgery', 'forgery'), ('may', 'may'), ('minor', 'minor'), ('nuisance', 'nuisance'), ('A.', 'A.'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Requirements', 'Requirements'), ('The', 'The'), ('signature', 'signature'), ('must', 'must'), ('bit', 'bit'), ('pattern', 'pattern'), ('depends', 'depends'), ('message', 'message'), ('signed', 'signed'), ('.', '.')]



============================ Sentence 23 =============================

The signature must use some information unique to the sender to prevent both forgery and denial. 


>> Tokens are: 
 ['The', 'signature', 'must', 'use', 'information', 'unique', 'sender', 'prevent', 'forgery', 'denial', '.']

>> Bigrams are: 
 [('The', 'signature'), ('signature', 'must'), ('must', 'use'), ('use', 'information'), ('information', 'unique'), ('unique', 'sender'), ('sender', 'prevent'), ('prevent', 'forgery'), ('forgery', 'denial'), ('denial', '.')]

>> Trigrams are: 
 [('The', 'signature', 'must'), ('signature', 'must', 'use'), ('must', 'use', 'information'), ('use', 'information', 'unique'), ('information', 'unique', 'sender'), ('unique', 'sender', 'prevent'), ('sender', 'prevent', 'forgery'), ('prevent', 'forgery', 'denial'), ('forgery', 'denial', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('signature', 'NN'), ('must', 'MD'), ('use', 'VB'), ('information', 'NN'), ('unique', 'NN'), ('sender', 'NN'), ('prevent', 'NN'), ('forgery', 'NN'), ('denial', 'NN'), ('.', '.')]

 (S
  (NP The/DT signature/NN)
  must/MD
  use/VB
  (NP
    information/NN
    unique/NN
    sender/NN
    prevent/NN
    forgery/NN
    denial/NN)
  ./.) 


>> Noun Phrases are: 
 ['The signature', 'information unique sender prevent forgery denial']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('must', 'must'), ('use', 'use'), ('information', 'inform'), ('unique', 'uniqu'), ('sender', 'sender'), ('prevent', 'prevent'), ('forgery', 'forgeri'), ('denial', 'denial'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('must', 'must'), ('use', 'use'), ('information', 'inform'), ('unique', 'uniqu'), ('sender', 'sender'), ('prevent', 'prevent'), ('forgery', 'forgeri'), ('denial', 'denial'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('signature', 'signature'), ('must', 'must'), ('use', 'use'), ('information', 'information'), ('unique', 'unique'), ('sender', 'sender'), ('prevent', 'prevent'), ('forgery', 'forgery'), ('denial', 'denial'), ('.', '.')]



============================ Sentence 24 =============================

It must be relatively easy to produce the digital signature. 


>> Tokens are: 
 ['It', 'must', 'relatively', 'easy', 'produce', 'digital', 'signature', '.']

>> Bigrams are: 
 [('It', 'must'), ('must', 'relatively'), ('relatively', 'easy'), ('easy', 'produce'), ('produce', 'digital'), ('digital', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('It', 'must', 'relatively'), ('must', 'relatively', 'easy'), ('relatively', 'easy', 'produce'), ('easy', 'produce', 'digital'), ('produce', 'digital', 'signature'), ('digital', 'signature', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('must', 'MD'), ('relatively', 'RB'), ('easy', 'JJ'), ('produce', 'VBP'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  It/PRP
  must/MD
  relatively/RB
  easy/JJ
  produce/VBP
  (NP digital/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['digital signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('must', 'must'), ('relatively', 'rel'), ('easy', 'easi'), ('produce', 'produc'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('must', 'must'), ('relatively', 'relat'), ('easy', 'easi'), ('produce', 'produc'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('must', 'must'), ('relatively', 'relatively'), ('easy', 'easy'), ('produce', 'produce'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 25 =============================

It must be relatively easy to recognize and verify the digital signature. 


>> Tokens are: 
 ['It', 'must', 'relatively', 'easy', 'recognize', 'verify', 'digital', 'signature', '.']

>> Bigrams are: 
 [('It', 'must'), ('must', 'relatively'), ('relatively', 'easy'), ('easy', 'recognize'), ('recognize', 'verify'), ('verify', 'digital'), ('digital', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('It', 'must', 'relatively'), ('must', 'relatively', 'easy'), ('relatively', 'easy', 'recognize'), ('easy', 'recognize', 'verify'), ('recognize', 'verify', 'digital'), ('verify', 'digital', 'signature'), ('digital', 'signature', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('must', 'MD'), ('relatively', 'RB'), ('easy', 'JJ'), ('recognize', 'VB'), ('verify', 'JJ'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  It/PRP
  must/MD
  relatively/RB
  easy/JJ
  recognize/VB
  (NP verify/JJ digital/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['verify digital signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('must', 'must'), ('relatively', 'rel'), ('easy', 'easi'), ('recognize', 'recogn'), ('verify', 'verifi'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('must', 'must'), ('relatively', 'relat'), ('easy', 'easi'), ('recognize', 'recogn'), ('verify', 'verifi'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('must', 'must'), ('relatively', 'relatively'), ('easy', 'easy'), ('recognize', 'recognize'), ('verify', 'verify'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 26 =============================

It must be computationally infeasible to forge a digital signature, either by constructing a new message for an existing digital signature or by constructing a fraudulent digital signature for a given message. 


>> Tokens are: 
 ['It', 'must', 'computationally', 'infeasible', 'forge', 'digital', 'signature', ',', 'either', 'constructing', 'new', 'message', 'existing', 'digital', 'signature', 'constructing', 'fraudulent', 'digital', 'signature', 'given', 'message', '.']

>> Bigrams are: 
 [('It', 'must'), ('must', 'computationally'), ('computationally', 'infeasible'), ('infeasible', 'forge'), ('forge', 'digital'), ('digital', 'signature'), ('signature', ','), (',', 'either'), ('either', 'constructing'), ('constructing', 'new'), ('new', 'message'), ('message', 'existing'), ('existing', 'digital'), ('digital', 'signature'), ('signature', 'constructing'), ('constructing', 'fraudulent'), ('fraudulent', 'digital'), ('digital', 'signature'), ('signature', 'given'), ('given', 'message'), ('message', '.')]

>> Trigrams are: 
 [('It', 'must', 'computationally'), ('must', 'computationally', 'infeasible'), ('computationally', 'infeasible', 'forge'), ('infeasible', 'forge', 'digital'), ('forge', 'digital', 'signature'), ('digital', 'signature', ','), ('signature', ',', 'either'), (',', 'either', 'constructing'), ('either', 'constructing', 'new'), ('constructing', 'new', 'message'), ('new', 'message', 'existing'), ('message', 'existing', 'digital'), ('existing', 'digital', 'signature'), ('digital', 'signature', 'constructing'), ('signature', 'constructing', 'fraudulent'), ('constructing', 'fraudulent', 'digital'), ('fraudulent', 'digital', 'signature'), ('digital', 'signature', 'given'), ('signature', 'given', 'message'), ('given', 'message', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('must', 'MD'), ('computationally', 'RB'), ('infeasible', 'JJ'), ('forge', 'NN'), ('digital', 'JJ'), ('signature', 'NN'), (',', ','), ('either', 'RB'), ('constructing', 'VBG'), ('new', 'JJ'), ('message', 'NN'), ('existing', 'VBG'), ('digital', 'JJ'), ('signature', 'NN'), ('constructing', 'VBG'), ('fraudulent', 'JJ'), ('digital', 'JJ'), ('signature', 'NN'), ('given', 'VBN'), ('message', 'NN'), ('.', '.')]

 (S
  It/PRP
  must/MD
  computationally/RB
  (NP infeasible/JJ forge/NN)
  (NP digital/JJ signature/NN)
  ,/,
  either/RB
  constructing/VBG
  (NP new/JJ message/NN)
  existing/VBG
  (NP digital/JJ signature/NN)
  constructing/VBG
  (NP fraudulent/JJ digital/JJ signature/NN)
  given/VBN
  (NP message/NN)
  ./.) 


>> Noun Phrases are: 
 ['infeasible forge', 'digital signature', 'new message', 'digital signature', 'fraudulent digital signature', 'message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('must', 'must'), ('computationally', 'comput'), ('infeasible', 'infeas'), ('forge', 'forg'), ('digital', 'digit'), ('signature', 'signatur'), (',', ','), ('either', 'either'), ('constructing', 'construct'), ('new', 'new'), ('message', 'messag'), ('existing', 'exist'), ('digital', 'digit'), ('signature', 'signatur'), ('constructing', 'construct'), ('fraudulent', 'fraudul'), ('digital', 'digit'), ('signature', 'signatur'), ('given', 'given'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('must', 'must'), ('computationally', 'comput'), ('infeasible', 'infeas'), ('forge', 'forg'), ('digital', 'digit'), ('signature', 'signatur'), (',', ','), ('either', 'either'), ('constructing', 'construct'), ('new', 'new'), ('message', 'messag'), ('existing', 'exist'), ('digital', 'digit'), ('signature', 'signatur'), ('constructing', 'construct'), ('fraudulent', 'fraudul'), ('digital', 'digit'), ('signature', 'signatur'), ('given', 'given'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('must', 'must'), ('computationally', 'computationally'), ('infeasible', 'infeasible'), ('forge', 'forge'), ('digital', 'digital'), ('signature', 'signature'), (',', ','), ('either', 'either'), ('constructing', 'constructing'), ('new', 'new'), ('message', 'message'), ('existing', 'existing'), ('digital', 'digital'), ('signature', 'signature'), ('constructing', 'constructing'), ('fraudulent', 'fraudulent'), ('digital', 'digital'), ('signature', 'signature'), ('given', 'given'), ('message', 'message'), ('.', '.')]



============================ Sentence 27 =============================

It must be practical to retain a copy of the digital signature in storage. 


>> Tokens are: 
 ['It', 'must', 'practical', 'retain', 'copy', 'digital', 'signature', 'storage', '.']

>> Bigrams are: 
 [('It', 'must'), ('must', 'practical'), ('practical', 'retain'), ('retain', 'copy'), ('copy', 'digital'), ('digital', 'signature'), ('signature', 'storage'), ('storage', '.')]

>> Trigrams are: 
 [('It', 'must', 'practical'), ('must', 'practical', 'retain'), ('practical', 'retain', 'copy'), ('retain', 'copy', 'digital'), ('copy', 'digital', 'signature'), ('digital', 'signature', 'storage'), ('signature', 'storage', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('must', 'MD'), ('practical', 'VB'), ('retain', 'NN'), ('copy', 'NN'), ('digital', 'JJ'), ('signature', 'NN'), ('storage', 'NN'), ('.', '.')]

 (S
  It/PRP
  must/MD
  practical/VB
  (NP retain/NN copy/NN)
  (NP digital/JJ signature/NN storage/NN)
  ./.) 


>> Noun Phrases are: 
 ['retain copy', 'digital signature storage']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('must', 'must'), ('practical', 'practic'), ('retain', 'retain'), ('copy', 'copi'), ('digital', 'digit'), ('signature', 'signatur'), ('storage', 'storag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('must', 'must'), ('practical', 'practic'), ('retain', 'retain'), ('copy', 'copi'), ('digital', 'digit'), ('signature', 'signatur'), ('storage', 'storag'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('must', 'must'), ('practical', 'practical'), ('retain', 'retain'), ('copy', 'copy'), ('digital', 'digital'), ('signature', 'signature'), ('storage', 'storage'), ('.', '.')]



============================ Sentence 28 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Standard / DSA The DSS uses an algorithm that is designed to provide only the digital signature function. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'Standard', '/', 'DSA', 'The', 'DSS', 'uses', 'algorithm', 'designed', 'provide', 'digital', 'signature', 'function', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Standard'), ('Standard', '/'), ('/', 'DSA'), ('DSA', 'The'), ('The', 'DSS'), ('DSS', 'uses'), ('uses', 'algorithm'), ('algorithm', 'designed'), ('designed', 'provide'), ('provide', 'digital'), ('digital', 'signature'), ('signature', 'function'), ('function', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'Standard'), ('Signature', 'Standard', '/'), ('Standard', '/', 'DSA'), ('/', 'DSA', 'The'), ('DSA', 'The', 'DSS'), ('The', 'DSS', 'uses'), ('DSS', 'uses', 'algorithm'), ('uses', 'algorithm', 'designed'), ('algorithm', 'designed', 'provide'), ('designed', 'provide', 'digital'), ('provide', 'digital', 'signature'), ('digital', 'signature', 'function'), ('signature', 'function', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Standard', 'NNP'), ('/', 'NNP'), ('DSA', 'NNP'), ('The', 'DT'), ('DSS', 'NNP'), ('uses', 'VBZ'), ('algorithm', 'RB'), ('designed', 'VBN'), ('provide', 'IN'), ('digital', 'JJ'), ('signature', 'NN'), ('function', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Digital/NNP Signature/NNP Standard/NNP //NNP DSA/NNP)
  (NP The/DT DSS/NNP)
  uses/VBZ
  algorithm/RB
  designed/VBN
  provide/IN
  (NP digital/JJ signature/NN function/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Digital Signature Standard / DSA', 'The DSS', 'digital signature function']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature Standard'), ('ORGANIZATION', 'DSS')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Standard', 'standard'), ('/', '/'), ('DSA', 'dsa'), ('The', 'the'), ('DSS', 'dss'), ('uses', 'use'), ('algorithm', 'algorithm'), ('designed', 'design'), ('provide', 'provid'), ('digital', 'digit'), ('signature', 'signatur'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Standard', 'standard'), ('/', '/'), ('DSA', 'dsa'), ('The', 'the'), ('DSS', 'dss'), ('uses', 'use'), ('algorithm', 'algorithm'), ('designed', 'design'), ('provide', 'provid'), ('digital', 'digit'), ('signature', 'signatur'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Standard', 'Standard'), ('/', '/'), ('DSA', 'DSA'), ('The', 'The'), ('DSS', 'DSS'), ('uses', 'us'), ('algorithm', 'algorithm'), ('designed', 'designed'), ('provide', 'provide'), ('digital', 'digital'), ('signature', 'signature'), ('function', 'function'), ('.', '.')]



============================ Sentence 29 =============================

Unlike RSA, it cannot be used for encryption or key exchange. 


>> Tokens are: 
 ['Unlike', 'RSA', ',', 'used', 'encryption', 'key', 'exchange', '.']

>> Bigrams are: 
 [('Unlike', 'RSA'), ('RSA', ','), (',', 'used'), ('used', 'encryption'), ('encryption', 'key'), ('key', 'exchange'), ('exchange', '.')]

>> Trigrams are: 
 [('Unlike', 'RSA', ','), ('RSA', ',', 'used'), (',', 'used', 'encryption'), ('used', 'encryption', 'key'), ('encryption', 'key', 'exchange'), ('key', 'exchange', '.')]

>> POS Tags are: 
 [('Unlike', 'IN'), ('RSA', 'NNP'), (',', ','), ('used', 'VBD'), ('encryption', 'NN'), ('key', 'JJ'), ('exchange', 'NN'), ('.', '.')]

 (S
  Unlike/IN
  (NP RSA/NNP)
  ,/,
  used/VBD
  (NP encryption/NN)
  (NP key/JJ exchange/NN)
  ./.) 


>> Noun Phrases are: 
 ['RSA', 'encryption', 'key exchange']

>> Named Entities are: 
 [('ORGANIZATION', 'RSA')] 

>> Stemming using Porter Stemmer: 
 [('Unlike', 'unlik'), ('RSA', 'rsa'), (',', ','), ('used', 'use'), ('encryption', 'encrypt'), ('key', 'key'), ('exchange', 'exchang'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unlike', 'unlik'), ('RSA', 'rsa'), (',', ','), ('used', 'use'), ('encryption', 'encrypt'), ('key', 'key'), ('exchange', 'exchang'), ('.', '.')]

>> Lemmatization: 
 [('Unlike', 'Unlike'), ('RSA', 'RSA'), (',', ','), ('used', 'used'), ('encryption', 'encryption'), ('key', 'key'), ('exchange', 'exchange'), ('.', '.')]



============================ Sentence 30 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  RSA Approach In the RSA approach, the message to be signed is input to a hash function that produces a secure hash code of fixed length. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'RSA', 'Approach', 'In', 'RSA', 'approach', ',', 'message', 'signed', 'input', 'hash', 'function', 'produces', 'secure', 'hash', 'code', 'fixed', 'length', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'RSA'), ('RSA', 'Approach'), ('Approach', 'In'), ('In', 'RSA'), ('RSA', 'approach'), ('approach', ','), (',', 'message'), ('message', 'signed'), ('signed', 'input'), ('input', 'hash'), ('hash', 'function'), ('function', 'produces'), ('produces', 'secure'), ('secure', 'hash'), ('hash', 'code'), ('code', 'fixed'), ('fixed', 'length'), ('length', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'RSA'), ('›', 'RSA', 'Approach'), ('RSA', 'Approach', 'In'), ('Approach', 'In', 'RSA'), ('In', 'RSA', 'approach'), ('RSA', 'approach', ','), ('approach', ',', 'message'), (',', 'message', 'signed'), ('message', 'signed', 'input'), ('signed', 'input', 'hash'), ('input', 'hash', 'function'), ('hash', 'function', 'produces'), ('function', 'produces', 'secure'), ('produces', 'secure', 'hash'), ('secure', 'hash', 'code'), ('hash', 'code', 'fixed'), ('code', 'fixed', 'length'), ('fixed', 'length', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('RSA', 'NNP'), ('Approach', 'NNP'), ('In', 'IN'), ('RSA', 'NNP'), ('approach', 'NN'), (',', ','), ('message', 'NN'), ('signed', 'VBD'), ('input', 'NN'), ('hash', 'NN'), ('function', 'NN'), ('produces', 'VBZ'), ('secure', 'JJ'), ('hash', 'NN'), ('code', 'NN'), ('fixed', 'VBN'), ('length', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP RSA/NNP Approach/NNP)
  In/IN
  (NP RSA/NNP approach/NN)
  ,/,
  (NP message/NN)
  signed/VBD
  (NP input/NN hash/NN function/NN)
  produces/VBZ
  (NP secure/JJ hash/NN code/NN)
  fixed/VBN
  (NP length/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› RSA Approach', 'RSA approach', 'message', 'input hash function', 'secure hash code', 'length']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'RSA')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Approach', 'approach'), ('In', 'in'), ('RSA', 'rsa'), ('approach', 'approach'), (',', ','), ('message', 'messag'), ('signed', 'sign'), ('input', 'input'), ('hash', 'hash'), ('function', 'function'), ('produces', 'produc'), ('secure', 'secur'), ('hash', 'hash'), ('code', 'code'), ('fixed', 'fix'), ('length', 'length'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Approach', 'approach'), ('In', 'in'), ('RSA', 'rsa'), ('approach', 'approach'), (',', ','), ('message', 'messag'), ('signed', 'sign'), ('input', 'input'), ('hash', 'hash'), ('function', 'function'), ('produces', 'produc'), ('secure', 'secur'), ('hash', 'hash'), ('code', 'code'), ('fixed', 'fix'), ('length', 'length'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'RSA'), ('Approach', 'Approach'), ('In', 'In'), ('RSA', 'RSA'), ('approach', 'approach'), (',', ','), ('message', 'message'), ('signed', 'signed'), ('input', 'input'), ('hash', 'hash'), ('function', 'function'), ('produces', 'produce'), ('secure', 'secure'), ('hash', 'hash'), ('code', 'code'), ('fixed', 'fixed'), ('length', 'length'), ('.', '.')]



============================ Sentence 31 =============================

This hash code is then encrypted using the sender’s private key to form the signature. 


>> Tokens are: 
 ['This', 'hash', 'code', 'encrypted', 'using', 'sender', '’', 'private', 'key', 'form', 'signature', '.']

>> Bigrams are: 
 [('This', 'hash'), ('hash', 'code'), ('code', 'encrypted'), ('encrypted', 'using'), ('using', 'sender'), ('sender', '’'), ('’', 'private'), ('private', 'key'), ('key', 'form'), ('form', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('This', 'hash', 'code'), ('hash', 'code', 'encrypted'), ('code', 'encrypted', 'using'), ('encrypted', 'using', 'sender'), ('using', 'sender', '’'), ('sender', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', 'form'), ('key', 'form', 'signature'), ('form', 'signature', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('encrypted', 'VBD'), ('using', 'VBG'), ('sender', 'NN'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'JJ'), ('form', 'NN'), ('signature', 'NN'), ('.', '.')]

 (S
  (NP This/DT hash/NN code/NN)
  encrypted/VBD
  using/VBG
  (NP sender/NN ’/NNP)
  (NP private/JJ key/JJ form/NN signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['This hash code', 'sender ’', 'private key form signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), ('using', 'use'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('form', 'form'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypt'), ('using', 'use'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('form', 'form'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('hash', 'hash'), ('code', 'code'), ('encrypted', 'encrypted'), ('using', 'using'), ('sender', 'sender'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('form', 'form'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 32 =============================

Both the message and the signature are then transmitted. 


>> Tokens are: 
 ['Both', 'message', 'signature', 'transmitted', '.']

>> Bigrams are: 
 [('Both', 'message'), ('message', 'signature'), ('signature', 'transmitted'), ('transmitted', '.')]

>> Trigrams are: 
 [('Both', 'message', 'signature'), ('message', 'signature', 'transmitted'), ('signature', 'transmitted', '.')]

>> POS Tags are: 
 [('Both', 'DT'), ('message', 'NN'), ('signature', 'NN'), ('transmitted', 'VBN'), ('.', '.')]

 (S (NP Both/DT message/NN signature/NN) transmitted/VBN ./.) 


>> Noun Phrases are: 
 ['Both message signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Both', 'both'), ('message', 'messag'), ('signature', 'signatur'), ('transmitted', 'transmit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Both', 'both'), ('message', 'messag'), ('signature', 'signatur'), ('transmitted', 'transmit'), ('.', '.')]

>> Lemmatization: 
 [('Both', 'Both'), ('message', 'message'), ('signature', 'signature'), ('transmitted', 'transmitted'), ('.', '.')]



============================ Sentence 33 =============================

The recipient takes the message and  produces a hash code. 


>> Tokens are: 
 ['The', 'recipient', 'takes', 'message', 'produces', 'hash', 'code', '.']

>> Bigrams are: 
 [('The', 'recipient'), ('recipient', 'takes'), ('takes', 'message'), ('message', 'produces'), ('produces', 'hash'), ('hash', 'code'), ('code', '.')]

>> Trigrams are: 
 [('The', 'recipient', 'takes'), ('recipient', 'takes', 'message'), ('takes', 'message', 'produces'), ('message', 'produces', 'hash'), ('produces', 'hash', 'code'), ('hash', 'code', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('recipient', 'NN'), ('takes', 'VBZ'), ('message', 'NN'), ('produces', 'VBZ'), ('hash', 'JJ'), ('code', 'NN'), ('.', '.')]

 (S
  (NP The/DT recipient/NN)
  takes/VBZ
  (NP message/NN)
  produces/VBZ
  (NP hash/JJ code/NN)
  ./.) 


>> Noun Phrases are: 
 ['The recipient', 'message', 'hash code']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('recipient', 'recipi'), ('takes', 'take'), ('message', 'messag'), ('produces', 'produc'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('recipient', 'recipi'), ('takes', 'take'), ('message', 'messag'), ('produces', 'produc'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('recipient', 'recipient'), ('takes', 'take'), ('message', 'message'), ('produces', 'produce'), ('hash', 'hash'), ('code', 'code'), ('.', '.')]



============================ Sentence 34 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  RSA Approach The recipient also decrypts the signature using the sender’s public key. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'RSA', 'Approach', 'The', 'recipient', 'also', 'decrypts', 'signature', 'using', 'sender', '’', 'public', 'key', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'RSA'), ('RSA', 'Approach'), ('Approach', 'The'), ('The', 'recipient'), ('recipient', 'also'), ('also', 'decrypts'), ('decrypts', 'signature'), ('signature', 'using'), ('using', 'sender'), ('sender', '’'), ('’', 'public'), ('public', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'RSA'), ('›', 'RSA', 'Approach'), ('RSA', 'Approach', 'The'), ('Approach', 'The', 'recipient'), ('The', 'recipient', 'also'), ('recipient', 'also', 'decrypts'), ('also', 'decrypts', 'signature'), ('decrypts', 'signature', 'using'), ('signature', 'using', 'sender'), ('using', 'sender', '’'), ('sender', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('RSA', 'NNP'), ('Approach', 'NNP'), ('The', 'DT'), ('recipient', 'NN'), ('also', 'RB'), ('decrypts', 'VBZ'), ('signature', 'NN'), ('using', 'VBG'), ('sender', 'JJR'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP RSA/NNP Approach/NNP)
  (NP The/DT recipient/NN)
  also/RB
  decrypts/VBZ
  (NP signature/NN)
  using/VBG
  sender/JJR
  (NP ’/NNP)
  (NP public/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› RSA Approach', 'The recipient', 'signature', '’', 'public key']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Approach', 'approach'), ('The', 'the'), ('recipient', 'recipi'), ('also', 'also'), ('decrypts', 'decrypt'), ('signature', 'signatur'), ('using', 'use'), ('sender', 'sender'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Approach', 'approach'), ('The', 'the'), ('recipient', 'recipi'), ('also', 'also'), ('decrypts', 'decrypt'), ('signature', 'signatur'), ('using', 'use'), ('sender', 'sender'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'RSA'), ('Approach', 'Approach'), ('The', 'The'), ('recipient', 'recipient'), ('also', 'also'), ('decrypts', 'decrypts'), ('signature', 'signature'), ('using', 'using'), ('sender', 'sender'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]



============================ Sentence 35 =============================

If the calculated hash code matches the decrypted signature, the signature is accepted as valid. 


>> Tokens are: 
 ['If', 'calculated', 'hash', 'code', 'matches', 'decrypted', 'signature', ',', 'signature', 'accepted', 'valid', '.']

>> Bigrams are: 
 [('If', 'calculated'), ('calculated', 'hash'), ('hash', 'code'), ('code', 'matches'), ('matches', 'decrypted'), ('decrypted', 'signature'), ('signature', ','), (',', 'signature'), ('signature', 'accepted'), ('accepted', 'valid'), ('valid', '.')]

>> Trigrams are: 
 [('If', 'calculated', 'hash'), ('calculated', 'hash', 'code'), ('hash', 'code', 'matches'), ('code', 'matches', 'decrypted'), ('matches', 'decrypted', 'signature'), ('decrypted', 'signature', ','), ('signature', ',', 'signature'), (',', 'signature', 'accepted'), ('signature', 'accepted', 'valid'), ('accepted', 'valid', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('calculated', 'VBN'), ('hash', 'NN'), ('code', 'NN'), ('matches', 'NNS'), ('decrypted', 'VBD'), ('signature', 'NN'), (',', ','), ('signature', 'NN'), ('accepted', 'VBD'), ('valid', 'JJ'), ('.', '.')]

 (S
  If/IN
  calculated/VBN
  (NP hash/NN code/NN matches/NNS)
  decrypted/VBD
  (NP signature/NN)
  ,/,
  (NP signature/NN)
  accepted/VBD
  valid/JJ
  ./.) 


>> Noun Phrases are: 
 ['hash code matches', 'signature', 'signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('calculated', 'calcul'), ('hash', 'hash'), ('code', 'code'), ('matches', 'match'), ('decrypted', 'decrypt'), ('signature', 'signatur'), (',', ','), ('signature', 'signatur'), ('accepted', 'accept'), ('valid', 'valid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('calculated', 'calcul'), ('hash', 'hash'), ('code', 'code'), ('matches', 'match'), ('decrypted', 'decrypt'), ('signature', 'signatur'), (',', ','), ('signature', 'signatur'), ('accepted', 'accept'), ('valid', 'valid'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('calculated', 'calculated'), ('hash', 'hash'), ('code', 'code'), ('matches', 'match'), ('decrypted', 'decrypted'), ('signature', 'signature'), (',', ','), ('signature', 'signature'), ('accepted', 'accepted'), ('valid', 'valid'), ('.', '.')]



============================ Sentence 36 =============================

Because only the sender knows the private key, only the sender could have produced a valid signature. 


>> Tokens are: 
 ['Because', 'sender', 'knows', 'private', 'key', ',', 'sender', 'could', 'produced', 'valid', 'signature', '.']

>> Bigrams are: 
 [('Because', 'sender'), ('sender', 'knows'), ('knows', 'private'), ('private', 'key'), ('key', ','), (',', 'sender'), ('sender', 'could'), ('could', 'produced'), ('produced', 'valid'), ('valid', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('Because', 'sender', 'knows'), ('sender', 'knows', 'private'), ('knows', 'private', 'key'), ('private', 'key', ','), ('key', ',', 'sender'), (',', 'sender', 'could'), ('sender', 'could', 'produced'), ('could', 'produced', 'valid'), ('produced', 'valid', 'signature'), ('valid', 'signature', '.')]

>> POS Tags are: 
 [('Because', 'IN'), ('sender', 'JJR'), ('knows', 'NNS'), ('private', 'JJ'), ('key', 'NN'), (',', ','), ('sender', 'NN'), ('could', 'MD'), ('produced', 'VB'), ('valid', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  Because/IN
  sender/JJR
  (NP knows/NNS)
  (NP private/JJ key/NN)
  ,/,
  (NP sender/NN)
  could/MD
  produced/VB
  (NP valid/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['knows', 'private key', 'sender', 'valid signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Because', 'becaus'), ('sender', 'sender'), ('knows', 'know'), ('private', 'privat'), ('key', 'key'), (',', ','), ('sender', 'sender'), ('could', 'could'), ('produced', 'produc'), ('valid', 'valid'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Because', 'becaus'), ('sender', 'sender'), ('knows', 'know'), ('private', 'privat'), ('key', 'key'), (',', ','), ('sender', 'sender'), ('could', 'could'), ('produced', 'produc'), ('valid', 'valid'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('Because', 'Because'), ('sender', 'sender'), ('knows', 'know'), ('private', 'private'), ('key', 'key'), (',', ','), ('sender', 'sender'), ('could', 'could'), ('produced', 'produced'), ('valid', 'valid'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 37 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  DSA Approach The hash code is provided as input to a signature function along with a random number k generated  for this particular signature. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'DSA', 'Approach', 'The', 'hash', 'code', 'provided', 'input', 'signature', 'function', 'along', 'random', 'number', 'k', 'generated', 'particular', 'signature', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'DSA'), ('DSA', 'Approach'), ('Approach', 'The'), ('The', 'hash'), ('hash', 'code'), ('code', 'provided'), ('provided', 'input'), ('input', 'signature'), ('signature', 'function'), ('function', 'along'), ('along', 'random'), ('random', 'number'), ('number', 'k'), ('k', 'generated'), ('generated', 'particular'), ('particular', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'DSA'), ('›', 'DSA', 'Approach'), ('DSA', 'Approach', 'The'), ('Approach', 'The', 'hash'), ('The', 'hash', 'code'), ('hash', 'code', 'provided'), ('code', 'provided', 'input'), ('provided', 'input', 'signature'), ('input', 'signature', 'function'), ('signature', 'function', 'along'), ('function', 'along', 'random'), ('along', 'random', 'number'), ('random', 'number', 'k'), ('number', 'k', 'generated'), ('k', 'generated', 'particular'), ('generated', 'particular', 'signature'), ('particular', 'signature', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('DSA', 'NNP'), ('Approach', 'NNP'), ('The', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('provided', 'VBD'), ('input', 'JJ'), ('signature', 'NN'), ('function', 'NN'), ('along', 'IN'), ('random', 'JJ'), ('number', 'NN'), ('k', 'NN'), ('generated', 'VBD'), ('particular', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP DSA/NNP Approach/NNP)
  (NP The/DT hash/NN code/NN)
  provided/VBD
  (NP input/JJ signature/NN function/NN)
  along/IN
  (NP random/JJ number/NN k/NN)
  generated/VBD
  (NP particular/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› DSA Approach', 'The hash code', 'input signature function', 'random number k', 'particular signature']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'dsa'), ('Approach', 'approach'), ('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('provided', 'provid'), ('input', 'input'), ('signature', 'signatur'), ('function', 'function'), ('along', 'along'), ('random', 'random'), ('number', 'number'), ('k', 'k'), ('generated', 'gener'), ('particular', 'particular'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'dsa'), ('Approach', 'approach'), ('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('provided', 'provid'), ('input', 'input'), ('signature', 'signatur'), ('function', 'function'), ('along', 'along'), ('random', 'random'), ('number', 'number'), ('k', 'k'), ('generated', 'generat'), ('particular', 'particular'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'DSA'), ('Approach', 'Approach'), ('The', 'The'), ('hash', 'hash'), ('code', 'code'), ('provided', 'provided'), ('input', 'input'), ('signature', 'signature'), ('function', 'function'), ('along', 'along'), ('random', 'random'), ('number', 'number'), ('k', 'k'), ('generated', 'generated'), ('particular', 'particular'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 38 =============================

The signature function also depends on the sender’s private key (PRa) and a set of parameters known to a group of communicating principals. 


>> Tokens are: 
 ['The', 'signature', 'function', 'also', 'depends', 'sender', '’', 'private', 'key', '(', 'PRa', ')', 'set', 'parameters', 'known', 'group', 'communicating', 'principals', '.']

>> Bigrams are: 
 [('The', 'signature'), ('signature', 'function'), ('function', 'also'), ('also', 'depends'), ('depends', 'sender'), ('sender', '’'), ('’', 'private'), ('private', 'key'), ('key', '('), ('(', 'PRa'), ('PRa', ')'), (')', 'set'), ('set', 'parameters'), ('parameters', 'known'), ('known', 'group'), ('group', 'communicating'), ('communicating', 'principals'), ('principals', '.')]

>> Trigrams are: 
 [('The', 'signature', 'function'), ('signature', 'function', 'also'), ('function', 'also', 'depends'), ('also', 'depends', 'sender'), ('depends', 'sender', '’'), ('sender', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', '('), ('key', '(', 'PRa'), ('(', 'PRa', ')'), ('PRa', ')', 'set'), (')', 'set', 'parameters'), ('set', 'parameters', 'known'), ('parameters', 'known', 'group'), ('known', 'group', 'communicating'), ('group', 'communicating', 'principals'), ('communicating', 'principals', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('signature', 'NN'), ('function', 'NN'), ('also', 'RB'), ('depends', 'VBZ'), ('sender', 'JJ'), ('’', 'JJ'), ('private', 'JJ'), ('key', 'NN'), ('(', '('), ('PRa', 'NNP'), (')', ')'), ('set', 'VBD'), ('parameters', 'NNS'), ('known', 'VBN'), ('group', 'NN'), ('communicating', 'VBG'), ('principals', 'NNS'), ('.', '.')]

 (S
  (NP The/DT signature/NN function/NN)
  also/RB
  depends/VBZ
  (NP sender/JJ ’/JJ private/JJ key/NN)
  (/(
  (NP PRa/NNP)
  )/)
  set/VBD
  (NP parameters/NNS)
  known/VBN
  (NP group/NN)
  communicating/VBG
  (NP principals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The signature function', 'sender ’ private key', 'PRa', 'parameters', 'group', 'principals']

>> Named Entities are: 
 [('ORGANIZATION', 'PRa')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('function', 'function'), ('also', 'also'), ('depends', 'depend'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('(', '('), ('PRa', 'pra'), (')', ')'), ('set', 'set'), ('parameters', 'paramet'), ('known', 'known'), ('group', 'group'), ('communicating', 'commun'), ('principals', 'princip'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('function', 'function'), ('also', 'also'), ('depends', 'depend'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('(', '('), ('PRa', 'pra'), (')', ')'), ('set', 'set'), ('parameters', 'paramet'), ('known', 'known'), ('group', 'group'), ('communicating', 'communic'), ('principals', 'princip'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('signature', 'signature'), ('function', 'function'), ('also', 'also'), ('depends', 'depends'), ('sender', 'sender'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('(', '('), ('PRa', 'PRa'), (')', ')'), ('set', 'set'), ('parameters', 'parameter'), ('known', 'known'), ('group', 'group'), ('communicating', 'communicating'), ('principals', 'principal'), ('.', '.')]



============================ Sentence 39 =============================

We can consider this set to constitute a global public key (PU) The result is a signature consisting of two components, labelled s  and r.   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  DSA Approach At the receiving end, the hash code of the incoming message is generated. 


>> Tokens are: 
 ['We', 'consider', 'set', 'constitute', 'global', 'public', 'key', '(', 'PU', ')', 'The', 'result', 'signature', 'consisting', 'two', 'components', ',', 'labelled', 'r.', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'DSA', 'Approach', 'At', 'receiving', 'end', ',', 'hash', 'code', 'incoming', 'message', 'generated', '.']

>> Bigrams are: 
 [('We', 'consider'), ('consider', 'set'), ('set', 'constitute'), ('constitute', 'global'), ('global', 'public'), ('public', 'key'), ('key', '('), ('(', 'PU'), ('PU', ')'), (')', 'The'), ('The', 'result'), ('result', 'signature'), ('signature', 'consisting'), ('consisting', 'two'), ('two', 'components'), ('components', ','), (',', 'labelled'), ('labelled', 'r.'), ('r.', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'DSA'), ('DSA', 'Approach'), ('Approach', 'At'), ('At', 'receiving'), ('receiving', 'end'), ('end', ','), (',', 'hash'), ('hash', 'code'), ('code', 'incoming'), ('incoming', 'message'), ('message', 'generated'), ('generated', '.')]

>> Trigrams are: 
 [('We', 'consider', 'set'), ('consider', 'set', 'constitute'), ('set', 'constitute', 'global'), ('constitute', 'global', 'public'), ('global', 'public', 'key'), ('public', 'key', '('), ('key', '(', 'PU'), ('(', 'PU', ')'), ('PU', ')', 'The'), (')', 'The', 'result'), ('The', 'result', 'signature'), ('result', 'signature', 'consisting'), ('signature', 'consisting', 'two'), ('consisting', 'two', 'components'), ('two', 'components', ','), ('components', ',', 'labelled'), (',', 'labelled', 'r.'), ('labelled', 'r.', 'Unit-7'), ('r.', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'DSA'), ('›', 'DSA', 'Approach'), ('DSA', 'Approach', 'At'), ('Approach', 'At', 'receiving'), ('At', 'receiving', 'end'), ('receiving', 'end', ','), ('end', ',', 'hash'), (',', 'hash', 'code'), ('hash', 'code', 'incoming'), ('code', 'incoming', 'message'), ('incoming', 'message', 'generated'), ('message', 'generated', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('consider', 'VBP'), ('set', 'VBN'), ('constitute', 'NN'), ('global', 'JJ'), ('public', 'JJ'), ('key', 'NN'), ('(', '('), ('PU', 'NNP'), (')', ')'), ('The', 'DT'), ('result', 'NN'), ('signature', 'NN'), ('consisting', 'VBG'), ('two', 'CD'), ('components', 'NNS'), (',', ','), ('labelled', 'VBD'), ('r.', 'JJ'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('DSA', 'NNP'), ('Approach', 'NNP'), ('At', 'IN'), ('receiving', 'VBG'), ('end', 'NN'), (',', ','), ('hash', 'JJ'), ('code', 'NN'), ('incoming', 'VBG'), ('message', 'NN'), ('generated', 'VBD'), ('.', '.')]

 (S
  We/PRP
  consider/VBP
  set/VBN
  (NP constitute/NN)
  (NP global/JJ public/JJ key/NN)
  (/(
  (NP PU/NNP)
  )/)
  (NP The/DT result/NN signature/NN)
  consisting/VBG
  two/CD
  (NP components/NNS)
  ,/,
  labelled/VBD
  (NP
    r./JJ
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP DSA/NNP Approach/NNP)
  At/IN
  receiving/VBG
  (NP end/NN)
  ,/,
  (NP hash/JJ code/NN)
  incoming/VBG
  (NP message/NN)
  generated/VBD
  ./.) 


>> Noun Phrases are: 
 ['constitute', 'global public key', 'PU', 'The result signature', 'components', 'r. Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› DSA Approach', 'end', 'hash code', 'message']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('consider', 'consid'), ('set', 'set'), ('constitute', 'constitut'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PU', 'pu'), (')', ')'), ('The', 'the'), ('result', 'result'), ('signature', 'signatur'), ('consisting', 'consist'), ('two', 'two'), ('components', 'compon'), (',', ','), ('labelled', 'label'), ('r.', 'r.'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'dsa'), ('Approach', 'approach'), ('At', 'at'), ('receiving', 'receiv'), ('end', 'end'), (',', ','), ('hash', 'hash'), ('code', 'code'), ('incoming', 'incom'), ('message', 'messag'), ('generated', 'gener'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('consider', 'consid'), ('set', 'set'), ('constitute', 'constitut'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PU', 'pu'), (')', ')'), ('The', 'the'), ('result', 'result'), ('signature', 'signatur'), ('consisting', 'consist'), ('two', 'two'), ('components', 'compon'), (',', ','), ('labelled', 'label'), ('r.', 'r.'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'dsa'), ('Approach', 'approach'), ('At', 'at'), ('receiving', 'receiv'), ('end', 'end'), (',', ','), ('hash', 'hash'), ('code', 'code'), ('incoming', 'incom'), ('message', 'messag'), ('generated', 'generat'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('consider', 'consider'), ('set', 'set'), ('constitute', 'constitute'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PU', 'PU'), (')', ')'), ('The', 'The'), ('result', 'result'), ('signature', 'signature'), ('consisting', 'consisting'), ('two', 'two'), ('components', 'component'), (',', ','), ('labelled', 'labelled'), ('r.', 'r.'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'DSA'), ('Approach', 'Approach'), ('At', 'At'), ('receiving', 'receiving'), ('end', 'end'), (',', ','), ('hash', 'hash'), ('code', 'code'), ('incoming', 'incoming'), ('message', 'message'), ('generated', 'generated'), ('.', '.')]



============================ Sentence 40 =============================

This plus the signature is input to a verification function. 


>> Tokens are: 
 ['This', 'plus', 'signature', 'input', 'verification', 'function', '.']

>> Bigrams are: 
 [('This', 'plus'), ('plus', 'signature'), ('signature', 'input'), ('input', 'verification'), ('verification', 'function'), ('function', '.')]

>> Trigrams are: 
 [('This', 'plus', 'signature'), ('plus', 'signature', 'input'), ('signature', 'input', 'verification'), ('input', 'verification', 'function'), ('verification', 'function', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('plus', 'JJ'), ('signature', 'NN'), ('input', 'NN'), ('verification', 'NN'), ('function', 'NN'), ('.', '.')]

 (S
  (NP
    This/DT
    plus/JJ
    signature/NN
    input/NN
    verification/NN
    function/NN)
  ./.) 


>> Noun Phrases are: 
 ['This plus signature input verification function']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('plus', 'plu'), ('signature', 'signatur'), ('input', 'input'), ('verification', 'verif'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('plus', 'plus'), ('signature', 'signatur'), ('input', 'input'), ('verification', 'verif'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('plus', 'plus'), ('signature', 'signature'), ('input', 'input'), ('verification', 'verification'), ('function', 'function'), ('.', '.')]



============================ Sentence 41 =============================

The verification function also depends on the global public key as well as the sender’s public key (PUa), which is paired with the sender’s private key. 


>> Tokens are: 
 ['The', 'verification', 'function', 'also', 'depends', 'global', 'public', 'key', 'well', 'sender', '’', 'public', 'key', '(', 'PUa', ')', ',', 'paired', 'sender', '’', 'private', 'key', '.']

>> Bigrams are: 
 [('The', 'verification'), ('verification', 'function'), ('function', 'also'), ('also', 'depends'), ('depends', 'global'), ('global', 'public'), ('public', 'key'), ('key', 'well'), ('well', 'sender'), ('sender', '’'), ('’', 'public'), ('public', 'key'), ('key', '('), ('(', 'PUa'), ('PUa', ')'), (')', ','), (',', 'paired'), ('paired', 'sender'), ('sender', '’'), ('’', 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('The', 'verification', 'function'), ('verification', 'function', 'also'), ('function', 'also', 'depends'), ('also', 'depends', 'global'), ('depends', 'global', 'public'), ('global', 'public', 'key'), ('public', 'key', 'well'), ('key', 'well', 'sender'), ('well', 'sender', '’'), ('sender', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', '('), ('key', '(', 'PUa'), ('(', 'PUa', ')'), ('PUa', ')', ','), (')', ',', 'paired'), (',', 'paired', 'sender'), ('paired', 'sender', '’'), ('sender', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('verification', 'NN'), ('function', 'NN'), ('also', 'RB'), ('depends', 'VBZ'), ('global', 'JJ'), ('public', 'JJ'), ('key', 'NN'), ('well', 'RB'), ('sender', 'VB'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('(', '('), ('PUa', 'NNP'), (')', ')'), (',', ','), ('paired', 'VBN'), ('sender', 'NN'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP The/DT verification/NN function/NN)
  also/RB
  depends/VBZ
  (NP global/JJ public/JJ key/NN)
  well/RB
  sender/VB
  (NP ’/NNP)
  (NP public/JJ key/NN)
  (/(
  (NP PUa/NNP)
  )/)
  ,/,
  paired/VBN
  (NP sender/NN ’/NNP)
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['The verification function', 'global public key', '’', 'public key', 'PUa', 'sender ’', 'private key']

>> Named Entities are: 
 [('ORGANIZATION', 'PUa')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('verification', 'verif'), ('function', 'function'), ('also', 'also'), ('depends', 'depend'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('well', 'well'), ('sender', 'sender'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PUa', 'pua'), (')', ')'), (',', ','), ('paired', 'pair'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('verification', 'verif'), ('function', 'function'), ('also', 'also'), ('depends', 'depend'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('well', 'well'), ('sender', 'sender'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PUa', 'pua'), (')', ')'), (',', ','), ('paired', 'pair'), ('sender', 'sender'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('verification', 'verification'), ('function', 'function'), ('also', 'also'), ('depends', 'depends'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('well', 'well'), ('sender', 'sender'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PUa', 'PUa'), (')', ')'), (',', ','), ('paired', 'paired'), ('sender', 'sender'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 42 =============================

The output of the verification function is a value that is equal to the signature component r if the signature is valid. 


>> Tokens are: 
 ['The', 'output', 'verification', 'function', 'value', 'equal', 'signature', 'component', 'r', 'signature', 'valid', '.']

>> Bigrams are: 
 [('The', 'output'), ('output', 'verification'), ('verification', 'function'), ('function', 'value'), ('value', 'equal'), ('equal', 'signature'), ('signature', 'component'), ('component', 'r'), ('r', 'signature'), ('signature', 'valid'), ('valid', '.')]

>> Trigrams are: 
 [('The', 'output', 'verification'), ('output', 'verification', 'function'), ('verification', 'function', 'value'), ('function', 'value', 'equal'), ('value', 'equal', 'signature'), ('equal', 'signature', 'component'), ('signature', 'component', 'r'), ('component', 'r', 'signature'), ('r', 'signature', 'valid'), ('signature', 'valid', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('output', 'NN'), ('verification', 'NN'), ('function', 'NN'), ('value', 'NN'), ('equal', 'JJ'), ('signature', 'NN'), ('component', 'NN'), ('r', 'NN'), ('signature', 'NN'), ('valid', 'JJ'), ('.', '.')]

 (S
  (NP The/DT output/NN verification/NN function/NN value/NN)
  (NP equal/JJ signature/NN component/NN r/NN signature/NN)
  valid/JJ
  ./.) 


>> Noun Phrases are: 
 ['The output verification function value', 'equal signature component r signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('output', 'output'), ('verification', 'verif'), ('function', 'function'), ('value', 'valu'), ('equal', 'equal'), ('signature', 'signatur'), ('component', 'compon'), ('r', 'r'), ('signature', 'signatur'), ('valid', 'valid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('output', 'output'), ('verification', 'verif'), ('function', 'function'), ('value', 'valu'), ('equal', 'equal'), ('signature', 'signatur'), ('component', 'compon'), ('r', 'r'), ('signature', 'signatur'), ('valid', 'valid'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('output', 'output'), ('verification', 'verification'), ('function', 'function'), ('value', 'value'), ('equal', 'equal'), ('signature', 'signature'), ('component', 'component'), ('r', 'r'), ('signature', 'signature'), ('valid', 'valid'), ('.', '.')]



============================ Sentence 43 =============================

The signature function is such that only the sender, with knowledge of the private key, could have produced the valid signature. 


>> Tokens are: 
 ['The', 'signature', 'function', 'sender', ',', 'knowledge', 'private', 'key', ',', 'could', 'produced', 'valid', 'signature', '.']

>> Bigrams are: 
 [('The', 'signature'), ('signature', 'function'), ('function', 'sender'), ('sender', ','), (',', 'knowledge'), ('knowledge', 'private'), ('private', 'key'), ('key', ','), (',', 'could'), ('could', 'produced'), ('produced', 'valid'), ('valid', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('The', 'signature', 'function'), ('signature', 'function', 'sender'), ('function', 'sender', ','), ('sender', ',', 'knowledge'), (',', 'knowledge', 'private'), ('knowledge', 'private', 'key'), ('private', 'key', ','), ('key', ',', 'could'), (',', 'could', 'produced'), ('could', 'produced', 'valid'), ('produced', 'valid', 'signature'), ('valid', 'signature', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('signature', 'NN'), ('function', 'NN'), ('sender', 'NN'), (',', ','), ('knowledge', 'VB'), ('private', 'JJ'), ('key', 'NN'), (',', ','), ('could', 'MD'), ('produced', 'VB'), ('valid', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  (NP The/DT signature/NN function/NN sender/NN)
  ,/,
  knowledge/VB
  (NP private/JJ key/NN)
  ,/,
  could/MD
  produced/VB
  (NP valid/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['The signature function sender', 'private key', 'valid signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('function', 'function'), ('sender', 'sender'), (',', ','), ('knowledge', 'knowledg'), ('private', 'privat'), ('key', 'key'), (',', ','), ('could', 'could'), ('produced', 'produc'), ('valid', 'valid'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('function', 'function'), ('sender', 'sender'), (',', ','), ('knowledge', 'knowledg'), ('private', 'privat'), ('key', 'key'), (',', ','), ('could', 'could'), ('produced', 'produc'), ('valid', 'valid'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('signature', 'signature'), ('function', 'function'), ('sender', 'sender'), (',', ','), ('knowledge', 'knowledge'), ('private', 'private'), ('key', 'key'), (',', ','), ('could', 'could'), ('produced', 'produced'), ('valid', 'valid'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 44 =============================

Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm      DSA Signing    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  DSA Verifying    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  ElGamal Digital Signatures Uses private key for encryption (signing) Uses public key for decryption (verification) Each user (e.g.-.- A) generates their key chooses a secret key (number): 1 < xA < q-1  compute their public key: yA = axA mod q   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  22 Recall from Chapter 10, that in 1984, T. Elgamal announced a public-key scheme based on discrete logarithms, closely related to the Diffie-Hellman technique [ELGA84, ELGA85]. 


>> Tokens are: 
 ['Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'Algorithm', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'Algorithm', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'Algorithm', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Digital', 'Signature', 'Algorithm', 'DSA', 'Signing', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'DSA', 'Verifying', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'ElGamal', 'Digital', 'Signatures', 'Uses', 'private', 'key', 'encryption', '(', 'signing', ')', 'Uses', 'public', 'key', 'decryption', '(', 'verification', ')', 'Each', 'user', '(', 'e.g.-.-', 'A', ')', 'generates', 'key', 'chooses', 'secret', 'key', '(', 'number', ')', ':', '1', '<', 'xA', '<', 'q-1', 'compute', 'public', 'key', ':', 'yA', '=', 'axA', 'mod', 'q', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '22', 'Recall', 'Chapter', '10', ',', '1984', ',', 'T.', 'Elgamal', 'announced', 'public-key', 'scheme', 'based', 'discrete', 'logarithms', ',', 'closely', 'related', 'Diffie-Hellman', 'technique', '[', 'ELGA84', ',', 'ELGA85', ']', '.']

>> Bigrams are: 
 [('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Algorithm'), ('Algorithm', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Algorithm'), ('Algorithm', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Algorithm'), ('Algorithm', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Algorithm'), ('Algorithm', 'DSA'), ('DSA', 'Signing'), ('Signing', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'DSA'), ('DSA', 'Verifying'), ('Verifying', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'ElGamal'), ('ElGamal', 'Digital'), ('Digital', 'Signatures'), ('Signatures', 'Uses'), ('Uses', 'private'), ('private', 'key'), ('key', 'encryption'), ('encryption', '('), ('(', 'signing'), ('signing', ')'), (')', 'Uses'), ('Uses', 'public'), ('public', 'key'), ('key', 'decryption'), ('decryption', '('), ('(', 'verification'), ('verification', ')'), (')', 'Each'), ('Each', 'user'), ('user', '('), ('(', 'e.g.-.-'), ('e.g.-.-', 'A'), ('A', ')'), (')', 'generates'), ('generates', 'key'), ('key', 'chooses'), ('chooses', 'secret'), ('secret', 'key'), ('key', '('), ('(', 'number'), ('number', ')'), (')', ':'), (':', '1'), ('1', '<'), ('<', 'xA'), ('xA', '<'), ('<', 'q-1'), ('q-1', 'compute'), ('compute', 'public'), ('public', 'key'), ('key', ':'), (':', 'yA'), ('yA', '='), ('=', 'axA'), ('axA', 'mod'), ('mod', 'q'), ('q', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '22'), ('22', 'Recall'), ('Recall', 'Chapter'), ('Chapter', '10'), ('10', ','), (',', '1984'), ('1984', ','), (',', 'T.'), ('T.', 'Elgamal'), ('Elgamal', 'announced'), ('announced', 'public-key'), ('public-key', 'scheme'), ('scheme', 'based'), ('based', 'discrete'), ('discrete', 'logarithms'), ('logarithms', ','), (',', 'closely'), ('closely', 'related'), ('related', 'Diffie-Hellman'), ('Diffie-Hellman', 'technique'), ('technique', '['), ('[', 'ELGA84'), ('ELGA84', ','), (',', 'ELGA85'), ('ELGA85', ']'), (']', '.')]

>> Trigrams are: 
 [('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'Algorithm'), ('Signature', 'Algorithm', 'Unit-7'), ('Algorithm', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'Algorithm'), ('Signature', 'Algorithm', 'Unit-7'), ('Algorithm', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'Algorithm'), ('Signature', 'Algorithm', 'Unit-7'), ('Algorithm', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Digital'), ('›', 'Digital', 'Signature'), ('Digital', 'Signature', 'Algorithm'), ('Signature', 'Algorithm', 'DSA'), ('Algorithm', 'DSA', 'Signing'), ('DSA', 'Signing', 'Unit-7'), ('Signing', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'DSA'), ('›', 'DSA', 'Verifying'), ('DSA', 'Verifying', 'Unit-7'), ('Verifying', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'ElGamal'), ('›', 'ElGamal', 'Digital'), ('ElGamal', 'Digital', 'Signatures'), ('Digital', 'Signatures', 'Uses'), ('Signatures', 'Uses', 'private'), ('Uses', 'private', 'key'), ('private', 'key', 'encryption'), ('key', 'encryption', '('), ('encryption', '(', 'signing'), ('(', 'signing', ')'), ('signing', ')', 'Uses'), (')', 'Uses', 'public'), ('Uses', 'public', 'key'), ('public', 'key', 'decryption'), ('key', 'decryption', '('), ('decryption', '(', 'verification'), ('(', 'verification', ')'), ('verification', ')', 'Each'), (')', 'Each', 'user'), ('Each', 'user', '('), ('user', '(', 'e.g.-.-'), ('(', 'e.g.-.-', 'A'), ('e.g.-.-', 'A', ')'), ('A', ')', 'generates'), (')', 'generates', 'key'), ('generates', 'key', 'chooses'), ('key', 'chooses', 'secret'), ('chooses', 'secret', 'key'), ('secret', 'key', '('), ('key', '(', 'number'), ('(', 'number', ')'), ('number', ')', ':'), (')', ':', '1'), (':', '1', '<'), ('1', '<', 'xA'), ('<', 'xA', '<'), ('xA', '<', 'q-1'), ('<', 'q-1', 'compute'), ('q-1', 'compute', 'public'), ('compute', 'public', 'key'), ('public', 'key', ':'), ('key', ':', 'yA'), (':', 'yA', '='), ('yA', '=', 'axA'), ('=', 'axA', 'mod'), ('axA', 'mod', 'q'), ('mod', 'q', 'Unit-7'), ('q', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '22'), ('›', '22', 'Recall'), ('22', 'Recall', 'Chapter'), ('Recall', 'Chapter', '10'), ('Chapter', '10', ','), ('10', ',', '1984'), (',', '1984', ','), ('1984', ',', 'T.'), (',', 'T.', 'Elgamal'), ('T.', 'Elgamal', 'announced'), ('Elgamal', 'announced', 'public-key'), ('announced', 'public-key', 'scheme'), ('public-key', 'scheme', 'based'), ('scheme', 'based', 'discrete'), ('based', 'discrete', 'logarithms'), ('discrete', 'logarithms', ','), ('logarithms', ',', 'closely'), (',', 'closely', 'related'), ('closely', 'related', 'Diffie-Hellman'), ('related', 'Diffie-Hellman', 'technique'), ('Diffie-Hellman', 'technique', '['), ('technique', '[', 'ELGA84'), ('[', 'ELGA84', ','), ('ELGA84', ',', 'ELGA85'), (',', 'ELGA85', ']'), ('ELGA85', ']', '.')]

>> POS Tags are: 
 [('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Algorithm', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Algorithm', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Algorithm', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Algorithm', 'NNP'), ('DSA', 'NNP'), ('Signing', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('DSA', 'NNP'), ('Verifying', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('ElGamal', 'NNP'), ('Digital', 'NNP'), ('Signatures', 'NNP'), ('Uses', 'NNP'), ('private', 'JJ'), ('key', 'JJ'), ('encryption', 'NN'), ('(', '('), ('signing', 'VBG'), (')', ')'), ('Uses', 'VBZ'), ('public', 'JJ'), ('key', 'JJ'), ('decryption', 'NN'), ('(', '('), ('verification', 'NN'), (')', ')'), ('Each', 'DT'), ('user', 'NN'), ('(', '('), ('e.g.-.-', 'VB'), ('A', 'DT'), (')', ')'), ('generates', 'VBZ'), ('key', 'JJ'), ('chooses', 'NNS'), ('secret', 'JJ'), ('key', 'NN'), ('(', '('), ('number', 'NN'), (')', ')'), (':', ':'), ('1', 'CD'), ('<', 'NN'), ('xA', 'NNP'), ('<', 'NNP'), ('q-1', 'JJ'), ('compute', 'NN'), ('public', 'JJ'), ('key', 'NN'), (':', ':'), ('yA', 'NN'), ('=', 'NNP'), ('axA', 'VBZ'), ('mod', 'JJ'), ('q', 'JJ'), ('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('22', 'CD'), ('Recall', 'NNP'), ('Chapter', 'NNP'), ('10', 'CD'), (',', ','), ('1984', 'CD'), (',', ','), ('T.', 'NNP'), ('Elgamal', 'NNP'), ('announced', 'VBD'), ('public-key', 'JJ'), ('scheme', 'NN'), ('based', 'VBN'), ('discrete', 'JJ'), ('logarithms', 'NN'), (',', ','), ('closely', 'RB'), ('related', 'JJ'), ('Diffie-Hellman', 'NNP'), ('technique', 'NN'), ('[', 'NNP'), ('ELGA84', 'NNP'), (',', ','), ('ELGA85', 'NNP'), (']', 'NNP'), ('.', '.')]

 (S
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Digital/NNP
    Signature/NNP
    Algorithm/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Digital/NNP
    Signature/NNP
    Algorithm/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Digital/NNP
    Signature/NNP
    Algorithm/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Digital/NNP
    Signature/NNP
    Algorithm/NNP
    DSA/NNP
    Signing/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    DSA/NNP
    Verifying/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP ElGamal/NNP Digital/NNP Signatures/NNP Uses/NNP)
  (NP private/JJ key/JJ encryption/NN)
  (/(
  signing/VBG
  )/)
  Uses/VBZ
  (NP public/JJ key/JJ decryption/NN)
  (/(
  (NP verification/NN)
  )/)
  (NP Each/DT user/NN)
  (/(
  e.g.-.-/VB
  A/DT
  )/)
  generates/VBZ
  (NP key/JJ chooses/NNS)
  (NP secret/JJ key/NN)
  (/(
  (NP number/NN)
  )/)
  :/:
  1/CD
  (NP </NN xA/NNP </NNP)
  (NP q-1/JJ compute/NN)
  (NP public/JJ key/NN)
  :/:
  (NP yA/NN =/NNP)
  axA/VBZ
  (NP
    mod/JJ
    q/JJ
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  22/CD
  (NP Recall/NNP Chapter/NNP)
  10/CD
  ,/,
  1984/CD
  ,/,
  (NP T./NNP Elgamal/NNP)
  announced/VBD
  (NP public-key/JJ scheme/NN)
  based/VBN
  (NP discrete/JJ logarithms/NN)
  ,/,
  closely/RB
  (NP related/JJ Diffie-Hellman/NNP technique/NN [/NNP ELGA84/NNP)
  ,/,
  (NP ELGA85/NNP ]/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Digital Signature Algorithm Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Digital Signature Algorithm Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Digital Signature Algorithm Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› Digital Signature Algorithm DSA Signing Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› DSA Verifying Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', '› ElGamal Digital Signatures Uses', 'private key encryption', 'public key decryption', 'verification', 'Each user', 'key chooses', 'secret key', 'number', '< xA <', 'q-1 compute', 'public key', 'yA =', 'mod q Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'Recall Chapter', 'T. Elgamal', 'public-key scheme', 'discrete logarithms', 'related Diffie-Hellman technique [ ELGA84', 'ELGA85 ]']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature Algorithm'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature Algorithm'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature Algorithm'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature Algorithm'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Digital Signatures Uses'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Elgamal'), ('ORGANIZATION', 'ELGA85')] 

>> Stemming using Porter Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('DSA', 'dsa'), ('Signing', 'sign'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'dsa'), ('Verifying', 'verifi'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('ElGamal', 'elgam'), ('Digital', 'digit'), ('Signatures', 'signatur'), ('Uses', 'use'), ('private', 'privat'), ('key', 'key'), ('encryption', 'encrypt'), ('(', '('), ('signing', 'sign'), (')', ')'), ('Uses', 'use'), ('public', 'public'), ('key', 'key'), ('decryption', 'decrypt'), ('(', '('), ('verification', 'verif'), (')', ')'), ('Each', 'each'), ('user', 'user'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('A', 'a'), (')', ')'), ('generates', 'gener'), ('key', 'key'), ('chooses', 'choos'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':'), ('1', '1'), ('<', '<'), ('xA', 'xa'), ('<', '<'), ('q-1', 'q-1'), ('compute', 'comput'), ('public', 'public'), ('key', 'key'), (':', ':'), ('yA', 'ya'), ('=', '='), ('axA', 'axa'), ('mod', 'mod'), ('q', 'q'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('22', '22'), ('Recall', 'recal'), ('Chapter', 'chapter'), ('10', '10'), (',', ','), ('1984', '1984'), (',', ','), ('T.', 't.'), ('Elgamal', 'elgam'), ('announced', 'announc'), ('public-key', 'public-key'), ('scheme', 'scheme'), ('based', 'base'), ('discrete', 'discret'), ('logarithms', 'logarithm'), (',', ','), ('closely', 'close'), ('related', 'relat'), ('Diffie-Hellman', 'diffie-hellman'), ('technique', 'techniqu'), ('[', '['), ('ELGA84', 'elga84'), (',', ','), ('ELGA85', 'elga85'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Algorithm', 'algorithm'), ('DSA', 'dsa'), ('Signing', 'sign'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'dsa'), ('Verifying', 'verifi'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('ElGamal', 'elgam'), ('Digital', 'digit'), ('Signatures', 'signatur'), ('Uses', 'use'), ('private', 'privat'), ('key', 'key'), ('encryption', 'encrypt'), ('(', '('), ('signing', 'sign'), (')', ')'), ('Uses', 'use'), ('public', 'public'), ('key', 'key'), ('decryption', 'decrypt'), ('(', '('), ('verification', 'verif'), (')', ')'), ('Each', 'each'), ('user', 'user'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('A', 'a'), (')', ')'), ('generates', 'generat'), ('key', 'key'), ('chooses', 'choos'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':'), ('1', '1'), ('<', '<'), ('xA', 'xa'), ('<', '<'), ('q-1', 'q-1'), ('compute', 'comput'), ('public', 'public'), ('key', 'key'), (':', ':'), ('yA', 'ya'), ('=', '='), ('axA', 'axa'), ('mod', 'mod'), ('q', 'q'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('22', '22'), ('Recall', 'recal'), ('Chapter', 'chapter'), ('10', '10'), (',', ','), ('1984', '1984'), (',', ','), ('T.', 't.'), ('Elgamal', 'elgam'), ('announced', 'announc'), ('public-key', 'public-key'), ('scheme', 'scheme'), ('based', 'base'), ('discrete', 'discret'), ('logarithms', 'logarithm'), (',', ','), ('closely', 'close'), ('related', 'relat'), ('Diffie-Hellman', 'diffie-hellman'), ('technique', 'techniqu'), ('[', '['), ('ELGA84', 'elga84'), (',', ','), ('ELGA85', 'elga85'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Algorithm', 'Algorithm'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Algorithm', 'Algorithm'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Algorithm', 'Algorithm'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Algorithm', 'Algorithm'), ('DSA', 'DSA'), ('Signing', 'Signing'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('DSA', 'DSA'), ('Verifying', 'Verifying'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('ElGamal', 'ElGamal'), ('Digital', 'Digital'), ('Signatures', 'Signatures'), ('Uses', 'Uses'), ('private', 'private'), ('key', 'key'), ('encryption', 'encryption'), ('(', '('), ('signing', 'signing'), (')', ')'), ('Uses', 'Uses'), ('public', 'public'), ('key', 'key'), ('decryption', 'decryption'), ('(', '('), ('verification', 'verification'), (')', ')'), ('Each', 'Each'), ('user', 'user'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('A', 'A'), (')', ')'), ('generates', 'generates'), ('key', 'key'), ('chooses', 'chooses'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':'), ('1', '1'), ('<', '<'), ('xA', 'xA'), ('<', '<'), ('q-1', 'q-1'), ('compute', 'compute'), ('public', 'public'), ('key', 'key'), (':', ':'), ('yA', 'yA'), ('=', '='), ('axA', 'axA'), ('mod', 'mod'), ('q', 'q'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('22', '22'), ('Recall', 'Recall'), ('Chapter', 'Chapter'), ('10', '10'), (',', ','), ('1984', '1984'), (',', ','), ('T.', 'T.'), ('Elgamal', 'Elgamal'), ('announced', 'announced'), ('public-key', 'public-key'), ('scheme', 'scheme'), ('based', 'based'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), (',', ','), ('closely', 'closely'), ('related', 'related'), ('Diffie-Hellman', 'Diffie-Hellman'), ('technique', 'technique'), ('[', '['), ('ELGA84', 'ELGA84'), (',', ','), ('ELGA85', 'ELGA85'), (']', ']'), ('.', '.')]



============================ Sentence 45 =============================

The ElGamal encryption scheme is designed to enable encryption by a user's public key with decryption by the user's private key. 


>> Tokens are: 
 ['The', 'ElGamal', 'encryption', 'scheme', 'designed', 'enable', 'encryption', 'user', "'s", 'public', 'key', 'decryption', 'user', "'s", 'private', 'key', '.']

>> Bigrams are: 
 [('The', 'ElGamal'), ('ElGamal', 'encryption'), ('encryption', 'scheme'), ('scheme', 'designed'), ('designed', 'enable'), ('enable', 'encryption'), ('encryption', 'user'), ('user', "'s"), ("'s", 'public'), ('public', 'key'), ('key', 'decryption'), ('decryption', 'user'), ('user', "'s"), ("'s", 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('The', 'ElGamal', 'encryption'), ('ElGamal', 'encryption', 'scheme'), ('encryption', 'scheme', 'designed'), ('scheme', 'designed', 'enable'), ('designed', 'enable', 'encryption'), ('enable', 'encryption', 'user'), ('encryption', 'user', "'s"), ('user', "'s", 'public'), ("'s", 'public', 'key'), ('public', 'key', 'decryption'), ('key', 'decryption', 'user'), ('decryption', 'user', "'s"), ('user', "'s", 'private'), ("'s", 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ElGamal', 'NNP'), ('encryption', 'NN'), ('scheme', 'NN'), ('designed', 'VBN'), ('enable', 'JJ'), ('encryption', 'NN'), ('user', 'NN'), ("'s", 'POS'), ('public', 'JJ'), ('key', 'JJ'), ('decryption', 'NN'), ('user', 'NN'), ("'s", 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP The/DT ElGamal/NNP encryption/NN scheme/NN)
  designed/VBN
  (NP enable/JJ encryption/NN user/NN)
  's/POS
  (NP public/JJ key/JJ decryption/NN user/NN)
  's/POS
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['The ElGamal encryption scheme', 'enable encryption user', 'public key decryption user', 'private key']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ElGamal', 'elgam'), ('encryption', 'encrypt'), ('scheme', 'scheme'), ('designed', 'design'), ('enable', 'enabl'), ('encryption', 'encrypt'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('decryption', 'decrypt'), ('user', 'user'), ("'s", "'s"), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ElGamal', 'elgam'), ('encryption', 'encrypt'), ('scheme', 'scheme'), ('designed', 'design'), ('enable', 'enabl'), ('encryption', 'encrypt'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('decryption', 'decrypt'), ('user', 'user'), ("'s", "'s"), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ElGamal', 'ElGamal'), ('encryption', 'encryption'), ('scheme', 'scheme'), ('designed', 'designed'), ('enable', 'enable'), ('encryption', 'encryption'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('decryption', 'decryption'), ('user', 'user'), ("'s", "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 46 =============================

The ElGamal signature scheme involves the use of the private key for encryption and the public key for decryption. 


>> Tokens are: 
 ['The', 'ElGamal', 'signature', 'scheme', 'involves', 'use', 'private', 'key', 'encryption', 'public', 'key', 'decryption', '.']

>> Bigrams are: 
 [('The', 'ElGamal'), ('ElGamal', 'signature'), ('signature', 'scheme'), ('scheme', 'involves'), ('involves', 'use'), ('use', 'private'), ('private', 'key'), ('key', 'encryption'), ('encryption', 'public'), ('public', 'key'), ('key', 'decryption'), ('decryption', '.')]

>> Trigrams are: 
 [('The', 'ElGamal', 'signature'), ('ElGamal', 'signature', 'scheme'), ('signature', 'scheme', 'involves'), ('scheme', 'involves', 'use'), ('involves', 'use', 'private'), ('use', 'private', 'key'), ('private', 'key', 'encryption'), ('key', 'encryption', 'public'), ('encryption', 'public', 'key'), ('public', 'key', 'decryption'), ('key', 'decryption', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ElGamal', 'NNP'), ('signature', 'NN'), ('scheme', 'NN'), ('involves', 'VBZ'), ('use', 'VBP'), ('private', 'JJ'), ('key', 'JJ'), ('encryption', 'NN'), ('public', 'JJ'), ('key', 'JJ'), ('decryption', 'NN'), ('.', '.')]

 (S
  (NP The/DT ElGamal/NNP signature/NN scheme/NN)
  involves/VBZ
  use/VBP
  (NP private/JJ key/JJ encryption/NN)
  (NP public/JJ key/JJ decryption/NN)
  ./.) 


>> Noun Phrases are: 
 ['The ElGamal signature scheme', 'private key encryption', 'public key decryption']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ElGamal', 'elgam'), ('signature', 'signatur'), ('scheme', 'scheme'), ('involves', 'involv'), ('use', 'use'), ('private', 'privat'), ('key', 'key'), ('encryption', 'encrypt'), ('public', 'public'), ('key', 'key'), ('decryption', 'decrypt'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ElGamal', 'elgam'), ('signature', 'signatur'), ('scheme', 'scheme'), ('involves', 'involv'), ('use', 'use'), ('private', 'privat'), ('key', 'key'), ('encryption', 'encrypt'), ('public', 'public'), ('key', 'key'), ('decryption', 'decrypt'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ElGamal', 'ElGamal'), ('signature', 'signature'), ('scheme', 'scheme'), ('involves', 'involves'), ('use', 'use'), ('private', 'private'), ('key', 'key'), ('encryption', 'encryption'), ('public', 'public'), ('key', 'key'), ('decryption', 'decryption'), ('.', '.')]



============================ Sentence 47 =============================

The ElGamal cryptosystem is used in some form in a number of standards including the digital signature standard (DSS) and the S/MIME email standard. 


>> Tokens are: 
 ['The', 'ElGamal', 'cryptosystem', 'used', 'form', 'number', 'standards', 'including', 'digital', 'signature', 'standard', '(', 'DSS', ')', 'S/MIME', 'email', 'standard', '.']

>> Bigrams are: 
 [('The', 'ElGamal'), ('ElGamal', 'cryptosystem'), ('cryptosystem', 'used'), ('used', 'form'), ('form', 'number'), ('number', 'standards'), ('standards', 'including'), ('including', 'digital'), ('digital', 'signature'), ('signature', 'standard'), ('standard', '('), ('(', 'DSS'), ('DSS', ')'), (')', 'S/MIME'), ('S/MIME', 'email'), ('email', 'standard'), ('standard', '.')]

>> Trigrams are: 
 [('The', 'ElGamal', 'cryptosystem'), ('ElGamal', 'cryptosystem', 'used'), ('cryptosystem', 'used', 'form'), ('used', 'form', 'number'), ('form', 'number', 'standards'), ('number', 'standards', 'including'), ('standards', 'including', 'digital'), ('including', 'digital', 'signature'), ('digital', 'signature', 'standard'), ('signature', 'standard', '('), ('standard', '(', 'DSS'), ('(', 'DSS', ')'), ('DSS', ')', 'S/MIME'), (')', 'S/MIME', 'email'), ('S/MIME', 'email', 'standard'), ('email', 'standard', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('ElGamal', 'NNP'), ('cryptosystem', 'NN'), ('used', 'VBN'), ('form', 'NN'), ('number', 'NN'), ('standards', 'NNS'), ('including', 'VBG'), ('digital', 'JJ'), ('signature', 'NN'), ('standard', 'NN'), ('(', '('), ('DSS', 'NNP'), (')', ')'), ('S/MIME', 'NNP'), ('email', 'JJ'), ('standard', 'NN'), ('.', '.')]

 (S
  (NP The/DT ElGamal/NNP cryptosystem/NN)
  used/VBN
  (NP form/NN number/NN standards/NNS)
  including/VBG
  (NP digital/JJ signature/NN standard/NN)
  (/(
  (NP DSS/NNP)
  )/)
  (NP S/MIME/NNP)
  (NP email/JJ standard/NN)
  ./.) 


>> Noun Phrases are: 
 ['The ElGamal cryptosystem', 'form number standards', 'digital signature standard', 'DSS', 'S/MIME', 'email standard']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal'), ('ORGANIZATION', 'DSS')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('ElGamal', 'elgam'), ('cryptosystem', 'cryptosystem'), ('used', 'use'), ('form', 'form'), ('number', 'number'), ('standards', 'standard'), ('including', 'includ'), ('digital', 'digit'), ('signature', 'signatur'), ('standard', 'standard'), ('(', '('), ('DSS', 'dss'), (')', ')'), ('S/MIME', 's/mime'), ('email', 'email'), ('standard', 'standard'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('ElGamal', 'elgam'), ('cryptosystem', 'cryptosystem'), ('used', 'use'), ('form', 'form'), ('number', 'number'), ('standards', 'standard'), ('including', 'includ'), ('digital', 'digit'), ('signature', 'signatur'), ('standard', 'standard'), ('(', '('), ('DSS', 'dss'), (')', ')'), ('S/MIME', 's/mime'), ('email', 'email'), ('standard', 'standard'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('ElGamal', 'ElGamal'), ('cryptosystem', 'cryptosystem'), ('used', 'used'), ('form', 'form'), ('number', 'number'), ('standards', 'standard'), ('including', 'including'), ('digital', 'digital'), ('signature', 'signature'), ('standard', 'standard'), ('(', '('), ('DSS', 'DSS'), (')', ')'), ('S/MIME', 'S/MIME'), ('email', 'email'), ('standard', 'standard'), ('.', '.')]



============================ Sentence 48 =============================

As with Diffie-Hellman, the global elements of ElGamal are a prime number q and a, which is a primitive root of q. 


>> Tokens are: 
 ['As', 'Diffie-Hellman', ',', 'global', 'elements', 'ElGamal', 'prime', 'number', 'q', ',', 'primitive', 'root', 'q', '.']

>> Bigrams are: 
 [('As', 'Diffie-Hellman'), ('Diffie-Hellman', ','), (',', 'global'), ('global', 'elements'), ('elements', 'ElGamal'), ('ElGamal', 'prime'), ('prime', 'number'), ('number', 'q'), ('q', ','), (',', 'primitive'), ('primitive', 'root'), ('root', 'q'), ('q', '.')]

>> Trigrams are: 
 [('As', 'Diffie-Hellman', ','), ('Diffie-Hellman', ',', 'global'), (',', 'global', 'elements'), ('global', 'elements', 'ElGamal'), ('elements', 'ElGamal', 'prime'), ('ElGamal', 'prime', 'number'), ('prime', 'number', 'q'), ('number', 'q', ','), ('q', ',', 'primitive'), (',', 'primitive', 'root'), ('primitive', 'root', 'q'), ('root', 'q', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('Diffie-Hellman', 'NNP'), (',', ','), ('global', 'JJ'), ('elements', 'NNS'), ('ElGamal', 'JJ'), ('prime', 'JJ'), ('number', 'NN'), ('q', 'NN'), (',', ','), ('primitive', 'JJ'), ('root', 'NN'), ('q', 'NN'), ('.', '.')]

 (S
  As/IN
  (NP Diffie-Hellman/NNP)
  ,/,
  (NP global/JJ elements/NNS)
  (NP ElGamal/JJ prime/JJ number/NN q/NN)
  ,/,
  (NP primitive/JJ root/NN q/NN)
  ./.) 


>> Noun Phrases are: 
 ['Diffie-Hellman', 'global elements', 'ElGamal prime number q', 'primitive root q']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal')] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('Diffie-Hellman', 'diffie-hellman'), (',', ','), ('global', 'global'), ('elements', 'element'), ('ElGamal', 'elgam'), ('prime', 'prime'), ('number', 'number'), ('q', 'q'), (',', ','), ('primitive', 'primit'), ('root', 'root'), ('q', 'q'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('Diffie-Hellman', 'diffie-hellman'), (',', ','), ('global', 'global'), ('elements', 'element'), ('ElGamal', 'elgam'), ('prime', 'prime'), ('number', 'number'), ('q', 'q'), (',', ','), ('primitive', 'primit'), ('root', 'root'), ('q', 'q'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('Diffie-Hellman', 'Diffie-Hellman'), (',', ','), ('global', 'global'), ('elements', 'element'), ('ElGamal', 'ElGamal'), ('prime', 'prime'), ('number', 'number'), ('q', 'q'), (',', ','), ('primitive', 'primitive'), ('root', 'root'), ('q', 'q'), ('.', '.')]



============================ Sentence 49 =============================

User A generates a private/public key pair as shown. 


>> Tokens are: 
 ['User', 'A', 'generates', 'private/public', 'key', 'pair', 'shown', '.']

>> Bigrams are: 
 [('User', 'A'), ('A', 'generates'), ('generates', 'private/public'), ('private/public', 'key'), ('key', 'pair'), ('pair', 'shown'), ('shown', '.')]

>> Trigrams are: 
 [('User', 'A', 'generates'), ('A', 'generates', 'private/public'), ('generates', 'private/public', 'key'), ('private/public', 'key', 'pair'), ('key', 'pair', 'shown'), ('pair', 'shown', '.')]

>> POS Tags are: 
 [('User', 'IN'), ('A', 'NNP'), ('generates', 'VBZ'), ('private/public', 'JJ'), ('key', 'JJ'), ('pair', 'NN'), ('shown', 'VBN'), ('.', '.')]

 (S
  User/IN
  (NP A/NNP)
  generates/VBZ
  (NP private/public/JJ key/JJ pair/NN)
  shown/VBN
  ./.) 


>> Noun Phrases are: 
 ['A', 'private/public key pair']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('User', 'user'), ('A', 'a'), ('generates', 'gener'), ('private/public', 'private/publ'), ('key', 'key'), ('pair', 'pair'), ('shown', 'shown'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('User', 'user'), ('A', 'a'), ('generates', 'generat'), ('private/public', 'private/publ'), ('key', 'key'), ('pair', 'pair'), ('shown', 'shown'), ('.', '.')]

>> Lemmatization: 
 [('User', 'User'), ('A', 'A'), ('generates', 'generates'), ('private/public', 'private/public'), ('key', 'key'), ('pair', 'pair'), ('shown', 'shown'), ('.', '.')]



============================ Sentence 50 =============================

The security of ElGamal is based on the difficulty of computing discrete logarithms, to recover either x given y, or k given K (next slide). 


>> Tokens are: 
 ['The', 'security', 'ElGamal', 'based', 'difficulty', 'computing', 'discrete', 'logarithms', ',', 'recover', 'either', 'x', 'given', ',', 'k', 'given', 'K', '(', 'next', 'slide', ')', '.']

>> Bigrams are: 
 [('The', 'security'), ('security', 'ElGamal'), ('ElGamal', 'based'), ('based', 'difficulty'), ('difficulty', 'computing'), ('computing', 'discrete'), ('discrete', 'logarithms'), ('logarithms', ','), (',', 'recover'), ('recover', 'either'), ('either', 'x'), ('x', 'given'), ('given', ','), (',', 'k'), ('k', 'given'), ('given', 'K'), ('K', '('), ('(', 'next'), ('next', 'slide'), ('slide', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'security', 'ElGamal'), ('security', 'ElGamal', 'based'), ('ElGamal', 'based', 'difficulty'), ('based', 'difficulty', 'computing'), ('difficulty', 'computing', 'discrete'), ('computing', 'discrete', 'logarithms'), ('discrete', 'logarithms', ','), ('logarithms', ',', 'recover'), (',', 'recover', 'either'), ('recover', 'either', 'x'), ('either', 'x', 'given'), ('x', 'given', ','), ('given', ',', 'k'), (',', 'k', 'given'), ('k', 'given', 'K'), ('given', 'K', '('), ('K', '(', 'next'), ('(', 'next', 'slide'), ('next', 'slide', ')'), ('slide', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('security', 'NN'), ('ElGamal', 'NNP'), ('based', 'VBN'), ('difficulty', 'NN'), ('computing', 'VBG'), ('discrete', 'JJ'), ('logarithms', 'NN'), (',', ','), ('recover', 'VB'), ('either', 'DT'), ('x', 'NN'), ('given', 'VBN'), (',', ','), ('k', 'VB'), ('given', 'VBN'), ('K', 'NNP'), ('(', '('), ('next', 'JJ'), ('slide', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT security/NN ElGamal/NNP)
  based/VBN
  (NP difficulty/NN)
  computing/VBG
  (NP discrete/JJ logarithms/NN)
  ,/,
  recover/VB
  (NP either/DT x/NN)
  given/VBN
  ,/,
  k/VB
  given/VBN
  (NP K/NNP)
  (/(
  (NP next/JJ slide/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The security ElGamal', 'difficulty', 'discrete logarithms', 'either x', 'K', 'next slide']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('security', 'secur'), ('ElGamal', 'elgam'), ('based', 'base'), ('difficulty', 'difficulti'), ('computing', 'comput'), ('discrete', 'discret'), ('logarithms', 'logarithm'), (',', ','), ('recover', 'recov'), ('either', 'either'), ('x', 'x'), ('given', 'given'), (',', ','), ('k', 'k'), ('given', 'given'), ('K', 'k'), ('(', '('), ('next', 'next'), ('slide', 'slide'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('security', 'secur'), ('ElGamal', 'elgam'), ('based', 'base'), ('difficulty', 'difficulti'), ('computing', 'comput'), ('discrete', 'discret'), ('logarithms', 'logarithm'), (',', ','), ('recover', 'recov'), ('either', 'either'), ('x', 'x'), ('given', 'given'), (',', ','), ('k', 'k'), ('given', 'given'), ('K', 'k'), ('(', '('), ('next', 'next'), ('slide', 'slide'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('security', 'security'), ('ElGamal', 'ElGamal'), ('based', 'based'), ('difficulty', 'difficulty'), ('computing', 'computing'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), (',', ','), ('recover', 'recover'), ('either', 'either'), ('x', 'x'), ('given', 'given'), (',', ','), ('k', 'k'), ('given', 'given'), ('K', 'K'), ('(', '('), ('next', 'next'), ('slide', 'slide'), (')', ')'), ('.', '.')]



============================ Sentence 51 =============================

ElGamal Digital Signature Alice signs a message M to Bob by computing the hash m = H(M), 0 <= m <= (q-1) chose random integer K with 1 <= K <= (q-1) and gcd(K,q-1)=1 compute temporary key:  S1 = ak mod q compute K-1 the inverse of K mod (q-1) compute the value:  S2 = K-1(m-xAS1) mod (q-1) signature is:(S1,S2) Any user B can verify the signature by computing V1 = am mod q V2 = yAS1 S1S2 mod q Signature is valid if V1 = V2  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  23 To sign a message M, user A first computes the hash m = H(M), such that m is an integer in the range 0 <= m <= q – 1. 


>> Tokens are: 
 ['ElGamal', 'Digital', 'Signature', 'Alice', 'signs', 'message', 'M', 'Bob', 'computing', 'hash', '=', 'H', '(', 'M', ')', ',', '0', '<', '=', '<', '=', '(', 'q-1', ')', 'chose', 'random', 'integer', 'K', '1', '<', '=', 'K', '<', '=', '(', 'q-1', ')', 'gcd', '(', 'K', ',', 'q-1', ')', '=1', 'compute', 'temporary', 'key', ':', 'S1', '=', 'ak', 'mod', 'q', 'compute', 'K-1', 'inverse', 'K', 'mod', '(', 'q-1', ')', 'compute', 'value', ':', 'S2', '=', 'K-1', '(', 'm-xAS1', ')', 'mod', '(', 'q-1', ')', 'signature', ':', '(', 'S1', ',', 'S2', ')', 'Any', 'user', 'B', 'verify', 'signature', 'computing', 'V1', '=', 'mod', 'q', 'V2', '=', 'yAS1', 'S1S2', 'mod', 'q', 'Signature', 'valid', 'V1', '=', 'V2', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '23', 'To', 'sign', 'message', 'M', ',', 'user', 'A', 'first', 'computes', 'hash', '=', 'H', '(', 'M', ')', ',', 'integer', 'range', '0', '<', '=', '<', '=', 'q', '–', '1', '.']

>> Bigrams are: 
 [('ElGamal', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Alice'), ('Alice', 'signs'), ('signs', 'message'), ('message', 'M'), ('M', 'Bob'), ('Bob', 'computing'), ('computing', 'hash'), ('hash', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ','), (',', '0'), ('0', '<'), ('<', '='), ('=', '<'), ('<', '='), ('=', '('), ('(', 'q-1'), ('q-1', ')'), (')', 'chose'), ('chose', 'random'), ('random', 'integer'), ('integer', 'K'), ('K', '1'), ('1', '<'), ('<', '='), ('=', 'K'), ('K', '<'), ('<', '='), ('=', '('), ('(', 'q-1'), ('q-1', ')'), (')', 'gcd'), ('gcd', '('), ('(', 'K'), ('K', ','), (',', 'q-1'), ('q-1', ')'), (')', '=1'), ('=1', 'compute'), ('compute', 'temporary'), ('temporary', 'key'), ('key', ':'), (':', 'S1'), ('S1', '='), ('=', 'ak'), ('ak', 'mod'), ('mod', 'q'), ('q', 'compute'), ('compute', 'K-1'), ('K-1', 'inverse'), ('inverse', 'K'), ('K', 'mod'), ('mod', '('), ('(', 'q-1'), ('q-1', ')'), (')', 'compute'), ('compute', 'value'), ('value', ':'), (':', 'S2'), ('S2', '='), ('=', 'K-1'), ('K-1', '('), ('(', 'm-xAS1'), ('m-xAS1', ')'), (')', 'mod'), ('mod', '('), ('(', 'q-1'), ('q-1', ')'), (')', 'signature'), ('signature', ':'), (':', '('), ('(', 'S1'), ('S1', ','), (',', 'S2'), ('S2', ')'), (')', 'Any'), ('Any', 'user'), ('user', 'B'), ('B', 'verify'), ('verify', 'signature'), ('signature', 'computing'), ('computing', 'V1'), ('V1', '='), ('=', 'mod'), ('mod', 'q'), ('q', 'V2'), ('V2', '='), ('=', 'yAS1'), ('yAS1', 'S1S2'), ('S1S2', 'mod'), ('mod', 'q'), ('q', 'Signature'), ('Signature', 'valid'), ('valid', 'V1'), ('V1', '='), ('=', 'V2'), ('V2', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '23'), ('23', 'To'), ('To', 'sign'), ('sign', 'message'), ('message', 'M'), ('M', ','), (',', 'user'), ('user', 'A'), ('A', 'first'), ('first', 'computes'), ('computes', 'hash'), ('hash', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', ')'), (')', ','), (',', 'integer'), ('integer', 'range'), ('range', '0'), ('0', '<'), ('<', '='), ('=', '<'), ('<', '='), ('=', 'q'), ('q', '–'), ('–', '1'), ('1', '.')]

>> Trigrams are: 
 [('ElGamal', 'Digital', 'Signature'), ('Digital', 'Signature', 'Alice'), ('Signature', 'Alice', 'signs'), ('Alice', 'signs', 'message'), ('signs', 'message', 'M'), ('message', 'M', 'Bob'), ('M', 'Bob', 'computing'), ('Bob', 'computing', 'hash'), ('computing', 'hash', '='), ('hash', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ','), (')', ',', '0'), (',', '0', '<'), ('0', '<', '='), ('<', '=', '<'), ('=', '<', '='), ('<', '=', '('), ('=', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', 'chose'), (')', 'chose', 'random'), ('chose', 'random', 'integer'), ('random', 'integer', 'K'), ('integer', 'K', '1'), ('K', '1', '<'), ('1', '<', '='), ('<', '=', 'K'), ('=', 'K', '<'), ('K', '<', '='), ('<', '=', '('), ('=', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', 'gcd'), (')', 'gcd', '('), ('gcd', '(', 'K'), ('(', 'K', ','), ('K', ',', 'q-1'), (',', 'q-1', ')'), ('q-1', ')', '=1'), (')', '=1', 'compute'), ('=1', 'compute', 'temporary'), ('compute', 'temporary', 'key'), ('temporary', 'key', ':'), ('key', ':', 'S1'), (':', 'S1', '='), ('S1', '=', 'ak'), ('=', 'ak', 'mod'), ('ak', 'mod', 'q'), ('mod', 'q', 'compute'), ('q', 'compute', 'K-1'), ('compute', 'K-1', 'inverse'), ('K-1', 'inverse', 'K'), ('inverse', 'K', 'mod'), ('K', 'mod', '('), ('mod', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', 'compute'), (')', 'compute', 'value'), ('compute', 'value', ':'), ('value', ':', 'S2'), (':', 'S2', '='), ('S2', '=', 'K-1'), ('=', 'K-1', '('), ('K-1', '(', 'm-xAS1'), ('(', 'm-xAS1', ')'), ('m-xAS1', ')', 'mod'), (')', 'mod', '('), ('mod', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', 'signature'), (')', 'signature', ':'), ('signature', ':', '('), (':', '(', 'S1'), ('(', 'S1', ','), ('S1', ',', 'S2'), (',', 'S2', ')'), ('S2', ')', 'Any'), (')', 'Any', 'user'), ('Any', 'user', 'B'), ('user', 'B', 'verify'), ('B', 'verify', 'signature'), ('verify', 'signature', 'computing'), ('signature', 'computing', 'V1'), ('computing', 'V1', '='), ('V1', '=', 'mod'), ('=', 'mod', 'q'), ('mod', 'q', 'V2'), ('q', 'V2', '='), ('V2', '=', 'yAS1'), ('=', 'yAS1', 'S1S2'), ('yAS1', 'S1S2', 'mod'), ('S1S2', 'mod', 'q'), ('mod', 'q', 'Signature'), ('q', 'Signature', 'valid'), ('Signature', 'valid', 'V1'), ('valid', 'V1', '='), ('V1', '=', 'V2'), ('=', 'V2', 'Unit-7'), ('V2', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '23'), ('›', '23', 'To'), ('23', 'To', 'sign'), ('To', 'sign', 'message'), ('sign', 'message', 'M'), ('message', 'M', ','), ('M', ',', 'user'), (',', 'user', 'A'), ('user', 'A', 'first'), ('A', 'first', 'computes'), ('first', 'computes', 'hash'), ('computes', 'hash', '='), ('hash', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', ')'), ('M', ')', ','), (')', ',', 'integer'), (',', 'integer', 'range'), ('integer', 'range', '0'), ('range', '0', '<'), ('0', '<', '='), ('<', '=', '<'), ('=', '<', '='), ('<', '=', 'q'), ('=', 'q', '–'), ('q', '–', '1'), ('–', '1', '.')]

>> POS Tags are: 
 [('ElGamal', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Alice', 'NNP'), ('signs', 'NNS'), ('message', 'NN'), ('M', 'NNP'), ('Bob', 'NNP'), ('computing', 'VBG'), ('hash', 'NN'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (',', ','), ('0', 'CD'), ('<', 'NN'), ('=', 'NNP'), ('<', 'NNP'), ('=', 'NNP'), ('(', '('), ('q-1', 'NN'), (')', ')'), ('chose', 'VBD'), ('random', 'JJ'), ('integer', 'NN'), ('K', 'NNP'), ('1', 'CD'), ('<', 'NNP'), ('=', 'NNP'), ('K', 'NNP'), ('<', 'NNP'), ('=', 'NNP'), ('(', '('), ('q-1', 'JJ'), (')', ')'), ('gcd', 'NN'), ('(', '('), ('K', 'NNP'), (',', ','), ('q-1', 'NN'), (')', ')'), ('=1', 'FW'), ('compute', 'NN'), ('temporary', 'JJ'), ('key', 'NN'), (':', ':'), ('S1', 'NNP'), ('=', 'NNP'), ('ak', 'VBZ'), ('mod', 'FW'), ('q', 'JJ'), ('compute', 'NN'), ('K-1', 'NNP'), ('inverse', 'NN'), ('K', 'NNP'), ('mod', 'NNP'), ('(', '('), ('q-1', 'JJ'), (')', ')'), ('compute', 'NN'), ('value', 'NN'), (':', ':'), ('S2', 'NNP'), ('=', 'VBZ'), ('K-1', 'NNP'), ('(', '('), ('m-xAS1', 'NN'), (')', ')'), ('mod', 'NN'), ('(', '('), ('q-1', 'JJ'), (')', ')'), ('signature', 'NN'), (':', ':'), ('(', '('), ('S1', 'NNP'), (',', ','), ('S2', 'NNP'), (')', ')'), ('Any', 'NNP'), ('user', 'NN'), ('B', 'NNP'), ('verify', 'NN'), ('signature', 'NN'), ('computing', 'VBG'), ('V1', 'NNP'), ('=', 'NNP'), ('mod', 'NN'), ('q', 'NN'), ('V2', 'NNP'), ('=', 'NNP'), ('yAS1', 'NNP'), ('S1S2', 'NNP'), ('mod', 'NN'), ('q', 'NN'), ('Signature', 'NNP'), ('valid', 'JJ'), ('V1', 'NNP'), ('=', 'NNP'), ('V2', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('23', 'CD'), ('To', 'TO'), ('sign', 'VB'), ('message', 'NN'), ('M', 'NNP'), (',', ','), ('user', 'VBD'), ('A', 'NNP'), ('first', 'JJ'), ('computes', 'VBZ'), ('hash', 'JJ'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), (')', ')'), (',', ','), ('integer', 'JJ'), ('range', 'NN'), ('0', 'CD'), ('<', 'NN'), ('=', 'NNP'), ('<', 'NNP'), ('=', 'NNP'), ('q', 'VBD'), ('–', 'JJ'), ('1', 'CD'), ('.', '.')]

 (S
  (NP
    ElGamal/JJ
    Digital/NNP
    Signature/NNP
    Alice/NNP
    signs/NNS
    message/NN
    M/NNP
    Bob/NNP)
  computing/VBG
  (NP hash/NN =/NN H/NNP)
  (/(
  (NP M/NNP)
  )/)
  ,/,
  0/CD
  (NP </NN =/NNP </NNP =/NNP)
  (/(
  (NP q-1/NN)
  )/)
  chose/VBD
  (NP random/JJ integer/NN K/NNP)
  1/CD
  (NP </NNP =/NNP K/NNP </NNP =/NNP)
  (/(
  q-1/JJ
  )/)
  (NP gcd/NN)
  (/(
  (NP K/NNP)
  ,/,
  (NP q-1/NN)
  )/)
  =1/FW
  (NP compute/NN)
  (NP temporary/JJ key/NN)
  :/:
  (NP S1/NNP =/NNP)
  ak/VBZ
  mod/FW
  (NP q/JJ compute/NN K-1/NNP inverse/NN K/NNP mod/NNP)
  (/(
  q-1/JJ
  )/)
  (NP compute/NN value/NN)
  :/:
  (NP S2/NNP)
  =/VBZ
  (NP K-1/NNP)
  (/(
  (NP m-xAS1/NN)
  )/)
  (NP mod/NN)
  (/(
  q-1/JJ
  )/)
  (NP signature/NN)
  :/:
  (/(
  (NP S1/NNP)
  ,/,
  (NP S2/NNP)
  )/)
  (NP Any/NNP user/NN B/NNP verify/NN signature/NN)
  computing/VBG
  (NP
    V1/NNP
    =/NNP
    mod/NN
    q/NN
    V2/NNP
    =/NNP
    yAS1/NNP
    S1S2/NNP
    mod/NN
    q/NN
    Signature/NNP)
  (NP
    valid/JJ
    V1/NNP
    =/NNP
    V2/NNP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  23/CD
  To/TO
  sign/VB
  (NP message/NN M/NNP)
  ,/,
  user/VBD
  (NP A/NNP)
  first/JJ
  computes/VBZ
  (NP hash/JJ =/NN H/NNP)
  (/(
  (NP M/NNP)
  )/)
  ,/,
  (NP integer/JJ range/NN)
  0/CD
  (NP </NN =/NNP </NNP =/NNP)
  q/VBD
  –/JJ
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['ElGamal Digital Signature Alice signs message M Bob', 'hash = H', 'M', '< = < =', 'q-1', 'random integer K', '< = K < =', 'gcd', 'K', 'q-1', 'compute', 'temporary key', 'S1 =', 'q compute K-1 inverse K mod', 'compute value', 'S2', 'K-1', 'm-xAS1', 'mod', 'signature', 'S1', 'S2', 'Any user B verify signature', 'V1 = mod q V2 = yAS1 S1S2 mod q Signature', 'valid V1 = V2 Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'message M', 'A', 'hash = H', 'M', 'integer range', '< = < =']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal'), ('ORGANIZATION', 'Digital Signature'), ('GPE', 'S2'), ('PERSON', 'V1'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('ElGamal', 'elgam'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Alice', 'alic'), ('signs', 'sign'), ('message', 'messag'), ('M', 'm'), ('Bob', 'bob'), ('computing', 'comput'), ('hash', 'hash'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (',', ','), ('0', '0'), ('<', '<'), ('=', '='), ('<', '<'), ('=', '='), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('chose', 'chose'), ('random', 'random'), ('integer', 'integ'), ('K', 'k'), ('1', '1'), ('<', '<'), ('=', '='), ('K', 'k'), ('<', '<'), ('=', '='), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('gcd', 'gcd'), ('(', '('), ('K', 'k'), (',', ','), ('q-1', 'q-1'), (')', ')'), ('=1', '=1'), ('compute', 'comput'), ('temporary', 'temporari'), ('key', 'key'), (':', ':'), ('S1', 's1'), ('=', '='), ('ak', 'ak'), ('mod', 'mod'), ('q', 'q'), ('compute', 'comput'), ('K-1', 'k-1'), ('inverse', 'invers'), ('K', 'k'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('compute', 'comput'), ('value', 'valu'), (':', ':'), ('S2', 's2'), ('=', '='), ('K-1', 'k-1'), ('(', '('), ('m-xAS1', 'm-xas1'), (')', ')'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('signature', 'signatur'), (':', ':'), ('(', '('), ('S1', 's1'), (',', ','), ('S2', 's2'), (')', ')'), ('Any', 'ani'), ('user', 'user'), ('B', 'b'), ('verify', 'verifi'), ('signature', 'signatur'), ('computing', 'comput'), ('V1', 'v1'), ('=', '='), ('mod', 'mod'), ('q', 'q'), ('V2', 'v2'), ('=', '='), ('yAS1', 'yas1'), ('S1S2', 's1s2'), ('mod', 'mod'), ('q', 'q'), ('Signature', 'signatur'), ('valid', 'valid'), ('V1', 'v1'), ('=', '='), ('V2', 'v2'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('23', '23'), ('To', 'to'), ('sign', 'sign'), ('message', 'messag'), ('M', 'm'), (',', ','), ('user', 'user'), ('A', 'a'), ('first', 'first'), ('computes', 'comput'), ('hash', 'hash'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (',', ','), ('integer', 'integ'), ('range', 'rang'), ('0', '0'), ('<', '<'), ('=', '='), ('<', '<'), ('=', '='), ('q', 'q'), ('–', '–'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('ElGamal', 'elgam'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Alice', 'alic'), ('signs', 'sign'), ('message', 'messag'), ('M', 'm'), ('Bob', 'bob'), ('computing', 'comput'), ('hash', 'hash'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (',', ','), ('0', '0'), ('<', '<'), ('=', '='), ('<', '<'), ('=', '='), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('chose', 'chose'), ('random', 'random'), ('integer', 'integ'), ('K', 'k'), ('1', '1'), ('<', '<'), ('=', '='), ('K', 'k'), ('<', '<'), ('=', '='), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('gcd', 'gcd'), ('(', '('), ('K', 'k'), (',', ','), ('q-1', 'q-1'), (')', ')'), ('=1', '=1'), ('compute', 'comput'), ('temporary', 'temporari'), ('key', 'key'), (':', ':'), ('S1', 's1'), ('=', '='), ('ak', 'ak'), ('mod', 'mod'), ('q', 'q'), ('compute', 'comput'), ('K-1', 'k-1'), ('inverse', 'invers'), ('K', 'k'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('compute', 'comput'), ('value', 'valu'), (':', ':'), ('S2', 's2'), ('=', '='), ('K-1', 'k-1'), ('(', '('), ('m-xAS1', 'm-xas1'), (')', ')'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('signature', 'signatur'), (':', ':'), ('(', '('), ('S1', 's1'), (',', ','), ('S2', 's2'), (')', ')'), ('Any', 'ani'), ('user', 'user'), ('B', 'b'), ('verify', 'verifi'), ('signature', 'signatur'), ('computing', 'comput'), ('V1', 'v1'), ('=', '='), ('mod', 'mod'), ('q', 'q'), ('V2', 'v2'), ('=', '='), ('yAS1', 'yas1'), ('S1S2', 's1s2'), ('mod', 'mod'), ('q', 'q'), ('Signature', 'signatur'), ('valid', 'valid'), ('V1', 'v1'), ('=', '='), ('V2', 'v2'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('23', '23'), ('To', 'to'), ('sign', 'sign'), ('message', 'messag'), ('M', 'm'), (',', ','), ('user', 'user'), ('A', 'a'), ('first', 'first'), ('computes', 'comput'), ('hash', 'hash'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (',', ','), ('integer', 'integ'), ('range', 'rang'), ('0', '0'), ('<', '<'), ('=', '='), ('<', '<'), ('=', '='), ('q', 'q'), ('–', '–'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('ElGamal', 'ElGamal'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Alice', 'Alice'), ('signs', 'sign'), ('message', 'message'), ('M', 'M'), ('Bob', 'Bob'), ('computing', 'computing'), ('hash', 'hash'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (',', ','), ('0', '0'), ('<', '<'), ('=', '='), ('<', '<'), ('=', '='), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('chose', 'chose'), ('random', 'random'), ('integer', 'integer'), ('K', 'K'), ('1', '1'), ('<', '<'), ('=', '='), ('K', 'K'), ('<', '<'), ('=', '='), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('gcd', 'gcd'), ('(', '('), ('K', 'K'), (',', ','), ('q-1', 'q-1'), (')', ')'), ('=1', '=1'), ('compute', 'compute'), ('temporary', 'temporary'), ('key', 'key'), (':', ':'), ('S1', 'S1'), ('=', '='), ('ak', 'ak'), ('mod', 'mod'), ('q', 'q'), ('compute', 'compute'), ('K-1', 'K-1'), ('inverse', 'inverse'), ('K', 'K'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('compute', 'compute'), ('value', 'value'), (':', ':'), ('S2', 'S2'), ('=', '='), ('K-1', 'K-1'), ('(', '('), ('m-xAS1', 'm-xAS1'), (')', ')'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('signature', 'signature'), (':', ':'), ('(', '('), ('S1', 'S1'), (',', ','), ('S2', 'S2'), (')', ')'), ('Any', 'Any'), ('user', 'user'), ('B', 'B'), ('verify', 'verify'), ('signature', 'signature'), ('computing', 'computing'), ('V1', 'V1'), ('=', '='), ('mod', 'mod'), ('q', 'q'), ('V2', 'V2'), ('=', '='), ('yAS1', 'yAS1'), ('S1S2', 'S1S2'), ('mod', 'mod'), ('q', 'q'), ('Signature', 'Signature'), ('valid', 'valid'), ('V1', 'V1'), ('=', '='), ('V2', 'V2'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('23', '23'), ('To', 'To'), ('sign', 'sign'), ('message', 'message'), ('M', 'M'), (',', ','), ('user', 'user'), ('A', 'A'), ('first', 'first'), ('computes', 'computes'), ('hash', 'hash'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), (')', ')'), (',', ','), ('integer', 'integer'), ('range', 'range'), ('0', '0'), ('<', '<'), ('=', '='), ('<', '<'), ('=', '='), ('q', 'q'), ('–', '–'), ('1', '1'), ('.', '.')]



============================ Sentence 52 =============================

A then forms a digital signature as shown. 


>> Tokens are: 
 ['A', 'forms', 'digital', 'signature', 'shown', '.']

>> Bigrams are: 
 [('A', 'forms'), ('forms', 'digital'), ('digital', 'signature'), ('signature', 'shown'), ('shown', '.')]

>> Trigrams are: 
 [('A', 'forms', 'digital'), ('forms', 'digital', 'signature'), ('digital', 'signature', 'shown'), ('signature', 'shown', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('forms', 'JJ'), ('digital', 'JJ'), ('signature', 'NN'), ('shown', 'VBN'), ('.', '.')]

 (S (NP A/DT forms/JJ digital/JJ signature/NN) shown/VBN ./.) 


>> Noun Phrases are: 
 ['A forms digital signature']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('forms', 'form'), ('digital', 'digit'), ('signature', 'signatur'), ('shown', 'shown'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('forms', 'form'), ('digital', 'digit'), ('signature', 'signatur'), ('shown', 'shown'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('forms', 'form'), ('digital', 'digital'), ('signature', 'signature'), ('shown', 'shown'), ('.', '.')]



============================ Sentence 53 =============================

The basic idea with El Gamal signatures is to again choose a temporary random signing  key, protect it, then use it solve the specified equation on the hash of the message to create the signature (in 2 pieces). 


>> Tokens are: 
 ['The', 'basic', 'idea', 'El', 'Gamal', 'signatures', 'choose', 'temporary', 'random', 'signing', 'key', ',', 'protect', ',', 'use', 'solve', 'specified', 'equation', 'hash', 'message', 'create', 'signature', '(', '2', 'pieces', ')', '.']

>> Bigrams are: 
 [('The', 'basic'), ('basic', 'idea'), ('idea', 'El'), ('El', 'Gamal'), ('Gamal', 'signatures'), ('signatures', 'choose'), ('choose', 'temporary'), ('temporary', 'random'), ('random', 'signing'), ('signing', 'key'), ('key', ','), (',', 'protect'), ('protect', ','), (',', 'use'), ('use', 'solve'), ('solve', 'specified'), ('specified', 'equation'), ('equation', 'hash'), ('hash', 'message'), ('message', 'create'), ('create', 'signature'), ('signature', '('), ('(', '2'), ('2', 'pieces'), ('pieces', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'basic', 'idea'), ('basic', 'idea', 'El'), ('idea', 'El', 'Gamal'), ('El', 'Gamal', 'signatures'), ('Gamal', 'signatures', 'choose'), ('signatures', 'choose', 'temporary'), ('choose', 'temporary', 'random'), ('temporary', 'random', 'signing'), ('random', 'signing', 'key'), ('signing', 'key', ','), ('key', ',', 'protect'), (',', 'protect', ','), ('protect', ',', 'use'), (',', 'use', 'solve'), ('use', 'solve', 'specified'), ('solve', 'specified', 'equation'), ('specified', 'equation', 'hash'), ('equation', 'hash', 'message'), ('hash', 'message', 'create'), ('message', 'create', 'signature'), ('create', 'signature', '('), ('signature', '(', '2'), ('(', '2', 'pieces'), ('2', 'pieces', ')'), ('pieces', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('basic', 'JJ'), ('idea', 'NN'), ('El', 'NNP'), ('Gamal', 'NNP'), ('signatures', 'NNS'), ('choose', 'VBP'), ('temporary', 'JJ'), ('random', 'NN'), ('signing', 'NN'), ('key', 'NN'), (',', ','), ('protect', 'NN'), (',', ','), ('use', 'NN'), ('solve', 'NN'), ('specified', 'VBN'), ('equation', 'NN'), ('hash', 'NN'), ('message', 'NN'), ('create', 'NN'), ('signature', 'NN'), ('(', '('), ('2', 'CD'), ('pieces', 'NNS'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT basic/JJ idea/NN El/NNP Gamal/NNP signatures/NNS)
  choose/VBP
  (NP temporary/JJ random/NN signing/NN key/NN)
  ,/,
  (NP protect/NN)
  ,/,
  (NP use/NN solve/NN)
  specified/VBN
  (NP equation/NN hash/NN message/NN create/NN signature/NN)
  (/(
  2/CD
  (NP pieces/NNS)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The basic idea El Gamal signatures', 'temporary random signing key', 'protect', 'use solve', 'equation hash message create signature', 'pieces']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('idea', 'idea'), ('El', 'el'), ('Gamal', 'gamal'), ('signatures', 'signatur'), ('choose', 'choos'), ('temporary', 'temporari'), ('random', 'random'), ('signing', 'sign'), ('key', 'key'), (',', ','), ('protect', 'protect'), (',', ','), ('use', 'use'), ('solve', 'solv'), ('specified', 'specifi'), ('equation', 'equat'), ('hash', 'hash'), ('message', 'messag'), ('create', 'creat'), ('signature', 'signatur'), ('(', '('), ('2', '2'), ('pieces', 'piec'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('idea', 'idea'), ('El', 'el'), ('Gamal', 'gamal'), ('signatures', 'signatur'), ('choose', 'choos'), ('temporary', 'temporari'), ('random', 'random'), ('signing', 'sign'), ('key', 'key'), (',', ','), ('protect', 'protect'), (',', ','), ('use', 'use'), ('solve', 'solv'), ('specified', 'specifi'), ('equation', 'equat'), ('hash', 'hash'), ('message', 'messag'), ('create', 'creat'), ('signature', 'signatur'), ('(', '('), ('2', '2'), ('pieces', 'piec'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('basic', 'basic'), ('idea', 'idea'), ('El', 'El'), ('Gamal', 'Gamal'), ('signatures', 'signature'), ('choose', 'choose'), ('temporary', 'temporary'), ('random', 'random'), ('signing', 'signing'), ('key', 'key'), (',', ','), ('protect', 'protect'), (',', ','), ('use', 'use'), ('solve', 'solve'), ('specified', 'specified'), ('equation', 'equation'), ('hash', 'hash'), ('message', 'message'), ('create', 'create'), ('signature', 'signature'), ('(', '('), ('2', '2'), ('pieces', 'piece'), (')', ')'), ('.', '.')]



============================ Sentence 54 =============================

Verification consists of confirming the validation equation that relates the signature to the (hash of the) message (see text for proof). 


>> Tokens are: 
 ['Verification', 'consists', 'confirming', 'validation', 'equation', 'relates', 'signature', '(', 'hash', ')', 'message', '(', 'see', 'text', 'proof', ')', '.']

>> Bigrams are: 
 [('Verification', 'consists'), ('consists', 'confirming'), ('confirming', 'validation'), ('validation', 'equation'), ('equation', 'relates'), ('relates', 'signature'), ('signature', '('), ('(', 'hash'), ('hash', ')'), (')', 'message'), ('message', '('), ('(', 'see'), ('see', 'text'), ('text', 'proof'), ('proof', ')'), (')', '.')]

>> Trigrams are: 
 [('Verification', 'consists', 'confirming'), ('consists', 'confirming', 'validation'), ('confirming', 'validation', 'equation'), ('validation', 'equation', 'relates'), ('equation', 'relates', 'signature'), ('relates', 'signature', '('), ('signature', '(', 'hash'), ('(', 'hash', ')'), ('hash', ')', 'message'), (')', 'message', '('), ('message', '(', 'see'), ('(', 'see', 'text'), ('see', 'text', 'proof'), ('text', 'proof', ')'), ('proof', ')', '.')]

>> POS Tags are: 
 [('Verification', 'NN'), ('consists', 'VBZ'), ('confirming', 'VBG'), ('validation', 'NN'), ('equation', 'NN'), ('relates', 'VBZ'), ('signature', 'NN'), ('(', '('), ('hash', 'NN'), (')', ')'), ('message', 'NN'), ('(', '('), ('see', 'VB'), ('text', 'RB'), ('proof', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP Verification/NN)
  consists/VBZ
  confirming/VBG
  (NP validation/NN equation/NN)
  relates/VBZ
  (NP signature/NN)
  (/(
  (NP hash/NN)
  )/)
  (NP message/NN)
  (/(
  see/VB
  text/RB
  (NP proof/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Verification', 'validation equation', 'signature', 'hash', 'message', 'proof']

>> Named Entities are: 
 [('GPE', 'Verification')] 

>> Stemming using Porter Stemmer: 
 [('Verification', 'verif'), ('consists', 'consist'), ('confirming', 'confirm'), ('validation', 'valid'), ('equation', 'equat'), ('relates', 'relat'), ('signature', 'signatur'), ('(', '('), ('hash', 'hash'), (')', ')'), ('message', 'messag'), ('(', '('), ('see', 'see'), ('text', 'text'), ('proof', 'proof'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Verification', 'verif'), ('consists', 'consist'), ('confirming', 'confirm'), ('validation', 'valid'), ('equation', 'equat'), ('relates', 'relat'), ('signature', 'signatur'), ('(', '('), ('hash', 'hash'), (')', ')'), ('message', 'messag'), ('(', '('), ('see', 'see'), ('text', 'text'), ('proof', 'proof'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Verification', 'Verification'), ('consists', 'consists'), ('confirming', 'confirming'), ('validation', 'validation'), ('equation', 'equation'), ('relates', 'relates'), ('signature', 'signature'), ('(', '('), ('hash', 'hash'), (')', ')'), ('message', 'message'), ('(', '('), ('see', 'see'), ('text', 'text'), ('proof', 'proof'), (')', ')'), ('.', '.')]



============================ Sentence 55 =============================

Again note that El Gamal encryption involves 1 modulo exponentiation and multiplications (vs 1 exponentiation for RSA). 


>> Tokens are: 
 ['Again', 'note', 'El', 'Gamal', 'encryption', 'involves', '1', 'modulo', 'exponentiation', 'multiplications', '(', 'vs', '1', 'exponentiation', 'RSA', ')', '.']

>> Bigrams are: 
 [('Again', 'note'), ('note', 'El'), ('El', 'Gamal'), ('Gamal', 'encryption'), ('encryption', 'involves'), ('involves', '1'), ('1', 'modulo'), ('modulo', 'exponentiation'), ('exponentiation', 'multiplications'), ('multiplications', '('), ('(', 'vs'), ('vs', '1'), ('1', 'exponentiation'), ('exponentiation', 'RSA'), ('RSA', ')'), (')', '.')]

>> Trigrams are: 
 [('Again', 'note', 'El'), ('note', 'El', 'Gamal'), ('El', 'Gamal', 'encryption'), ('Gamal', 'encryption', 'involves'), ('encryption', 'involves', '1'), ('involves', '1', 'modulo'), ('1', 'modulo', 'exponentiation'), ('modulo', 'exponentiation', 'multiplications'), ('exponentiation', 'multiplications', '('), ('multiplications', '(', 'vs'), ('(', 'vs', '1'), ('vs', '1', 'exponentiation'), ('1', 'exponentiation', 'RSA'), ('exponentiation', 'RSA', ')'), ('RSA', ')', '.')]

>> POS Tags are: 
 [('Again', 'NNP'), ('note', 'VBP'), ('El', 'NNP'), ('Gamal', 'NNP'), ('encryption', 'NN'), ('involves', 'VBZ'), ('1', 'CD'), ('modulo', 'NN'), ('exponentiation', 'NN'), ('multiplications', 'NNS'), ('(', '('), ('vs', 'JJ'), ('1', 'CD'), ('exponentiation', 'NN'), ('RSA', 'NNP'), (')', ')'), ('.', '.')]

 (S
  (NP Again/NNP)
  note/VBP
  (NP El/NNP Gamal/NNP encryption/NN)
  involves/VBZ
  1/CD
  (NP modulo/NN exponentiation/NN multiplications/NNS)
  (/(
  vs/JJ
  1/CD
  (NP exponentiation/NN RSA/NNP)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Again', 'El Gamal encryption', 'modulo exponentiation multiplications', 'exponentiation RSA']

>> Named Entities are: 
 [('GPE', 'Again'), ('PERSON', 'El Gamal')] 

>> Stemming using Porter Stemmer: 
 [('Again', 'again'), ('note', 'note'), ('El', 'el'), ('Gamal', 'gamal'), ('encryption', 'encrypt'), ('involves', 'involv'), ('1', '1'), ('modulo', 'modulo'), ('exponentiation', 'exponenti'), ('multiplications', 'multipl'), ('(', '('), ('vs', 'vs'), ('1', '1'), ('exponentiation', 'exponenti'), ('RSA', 'rsa'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Again', 'again'), ('note', 'note'), ('El', 'el'), ('Gamal', 'gamal'), ('encryption', 'encrypt'), ('involves', 'involv'), ('1', '1'), ('modulo', 'modulo'), ('exponentiation', 'exponenti'), ('multiplications', 'multipl'), ('(', '('), ('vs', 'vs'), ('1', '1'), ('exponentiation', 'exponenti'), ('RSA', 'rsa'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Again', 'Again'), ('note', 'note'), ('El', 'El'), ('Gamal', 'Gamal'), ('encryption', 'encryption'), ('involves', 'involves'), ('1', '1'), ('modulo', 'modulo'), ('exponentiation', 'exponentiation'), ('multiplications', 'multiplication'), ('(', '('), ('vs', 'v'), ('1', '1'), ('exponentiation', 'exponentiation'), ('RSA', 'RSA'), (')', ')'), ('.', '.')]



============================ Sentence 56 =============================

ElGamal Signature Example  Use field GF(19) q=19 and a=10 Alice computes her key: A chooses xA=16 & computes yA=1016 mod 19 = 4 Alice signs message with hash m=14 as (3,4): choosing random K=5 which has gcd(18,5)=1 computing S1 = 105 mod 19 = 3 finding K-1 mod (q-1) = 5-1 mod 18 = 11 computing S2 = 11(14-16.3) mod 18 = 4 Any user B can verify the signature by computing V1 = 1014 mod 19 = 16 V2 = 43.34 = 5184 = 16 mod 19 since 16 = 16 signature is valid   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  24 Here is an example of creating and verifying an ElGamal signature from the text using the prime field GF(19); that is, q = 19. 


>> Tokens are: 
 ['ElGamal', 'Signature', 'Example', 'Use', 'field', 'GF', '(', '19', ')', 'q=19', 'a=10', 'Alice', 'computes', 'key', ':', 'A', 'chooses', 'xA=16', '&', 'computes', 'yA=1016', 'mod', '19', '=', '4', 'Alice', 'signs', 'message', 'hash', 'm=14', '(', '3,4', ')', ':', 'choosing', 'random', 'K=5', 'gcd', '(', '18,5', ')', '=1', 'computing', 'S1', '=', '105', 'mod', '19', '=', '3', 'finding', 'K-1', 'mod', '(', 'q-1', ')', '=', '5-1', 'mod', '18', '=', '11', 'computing', 'S2', '=', '11', '(', '14-16.3', ')', 'mod', '18', '=', '4', 'Any', 'user', 'B', 'verify', 'signature', 'computing', 'V1', '=', '1014', 'mod', '19', '=', '16', 'V2', '=', '43.34', '=', '5184', '=', '16', 'mod', '19', 'since', '16', '=', '16', 'signature', 'valid', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '24', 'Here', 'example', 'creating', 'verifying', 'ElGamal', 'signature', 'text', 'using', 'prime', 'field', 'GF', '(', '19', ')', ';', ',', 'q', '=', '19', '.']

>> Bigrams are: 
 [('ElGamal', 'Signature'), ('Signature', 'Example'), ('Example', 'Use'), ('Use', 'field'), ('field', 'GF'), ('GF', '('), ('(', '19'), ('19', ')'), (')', 'q=19'), ('q=19', 'a=10'), ('a=10', 'Alice'), ('Alice', 'computes'), ('computes', 'key'), ('key', ':'), (':', 'A'), ('A', 'chooses'), ('chooses', 'xA=16'), ('xA=16', '&'), ('&', 'computes'), ('computes', 'yA=1016'), ('yA=1016', 'mod'), ('mod', '19'), ('19', '='), ('=', '4'), ('4', 'Alice'), ('Alice', 'signs'), ('signs', 'message'), ('message', 'hash'), ('hash', 'm=14'), ('m=14', '('), ('(', '3,4'), ('3,4', ')'), (')', ':'), (':', 'choosing'), ('choosing', 'random'), ('random', 'K=5'), ('K=5', 'gcd'), ('gcd', '('), ('(', '18,5'), ('18,5', ')'), (')', '=1'), ('=1', 'computing'), ('computing', 'S1'), ('S1', '='), ('=', '105'), ('105', 'mod'), ('mod', '19'), ('19', '='), ('=', '3'), ('3', 'finding'), ('finding', 'K-1'), ('K-1', 'mod'), ('mod', '('), ('(', 'q-1'), ('q-1', ')'), (')', '='), ('=', '5-1'), ('5-1', 'mod'), ('mod', '18'), ('18', '='), ('=', '11'), ('11', 'computing'), ('computing', 'S2'), ('S2', '='), ('=', '11'), ('11', '('), ('(', '14-16.3'), ('14-16.3', ')'), (')', 'mod'), ('mod', '18'), ('18', '='), ('=', '4'), ('4', 'Any'), ('Any', 'user'), ('user', 'B'), ('B', 'verify'), ('verify', 'signature'), ('signature', 'computing'), ('computing', 'V1'), ('V1', '='), ('=', '1014'), ('1014', 'mod'), ('mod', '19'), ('19', '='), ('=', '16'), ('16', 'V2'), ('V2', '='), ('=', '43.34'), ('43.34', '='), ('=', '5184'), ('5184', '='), ('=', '16'), ('16', 'mod'), ('mod', '19'), ('19', 'since'), ('since', '16'), ('16', '='), ('=', '16'), ('16', 'signature'), ('signature', 'valid'), ('valid', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '24'), ('24', 'Here'), ('Here', 'example'), ('example', 'creating'), ('creating', 'verifying'), ('verifying', 'ElGamal'), ('ElGamal', 'signature'), ('signature', 'text'), ('text', 'using'), ('using', 'prime'), ('prime', 'field'), ('field', 'GF'), ('GF', '('), ('(', '19'), ('19', ')'), (')', ';'), (';', ','), (',', 'q'), ('q', '='), ('=', '19'), ('19', '.')]

>> Trigrams are: 
 [('ElGamal', 'Signature', 'Example'), ('Signature', 'Example', 'Use'), ('Example', 'Use', 'field'), ('Use', 'field', 'GF'), ('field', 'GF', '('), ('GF', '(', '19'), ('(', '19', ')'), ('19', ')', 'q=19'), (')', 'q=19', 'a=10'), ('q=19', 'a=10', 'Alice'), ('a=10', 'Alice', 'computes'), ('Alice', 'computes', 'key'), ('computes', 'key', ':'), ('key', ':', 'A'), (':', 'A', 'chooses'), ('A', 'chooses', 'xA=16'), ('chooses', 'xA=16', '&'), ('xA=16', '&', 'computes'), ('&', 'computes', 'yA=1016'), ('computes', 'yA=1016', 'mod'), ('yA=1016', 'mod', '19'), ('mod', '19', '='), ('19', '=', '4'), ('=', '4', 'Alice'), ('4', 'Alice', 'signs'), ('Alice', 'signs', 'message'), ('signs', 'message', 'hash'), ('message', 'hash', 'm=14'), ('hash', 'm=14', '('), ('m=14', '(', '3,4'), ('(', '3,4', ')'), ('3,4', ')', ':'), (')', ':', 'choosing'), (':', 'choosing', 'random'), ('choosing', 'random', 'K=5'), ('random', 'K=5', 'gcd'), ('K=5', 'gcd', '('), ('gcd', '(', '18,5'), ('(', '18,5', ')'), ('18,5', ')', '=1'), (')', '=1', 'computing'), ('=1', 'computing', 'S1'), ('computing', 'S1', '='), ('S1', '=', '105'), ('=', '105', 'mod'), ('105', 'mod', '19'), ('mod', '19', '='), ('19', '=', '3'), ('=', '3', 'finding'), ('3', 'finding', 'K-1'), ('finding', 'K-1', 'mod'), ('K-1', 'mod', '('), ('mod', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', '='), (')', '=', '5-1'), ('=', '5-1', 'mod'), ('5-1', 'mod', '18'), ('mod', '18', '='), ('18', '=', '11'), ('=', '11', 'computing'), ('11', 'computing', 'S2'), ('computing', 'S2', '='), ('S2', '=', '11'), ('=', '11', '('), ('11', '(', '14-16.3'), ('(', '14-16.3', ')'), ('14-16.3', ')', 'mod'), (')', 'mod', '18'), ('mod', '18', '='), ('18', '=', '4'), ('=', '4', 'Any'), ('4', 'Any', 'user'), ('Any', 'user', 'B'), ('user', 'B', 'verify'), ('B', 'verify', 'signature'), ('verify', 'signature', 'computing'), ('signature', 'computing', 'V1'), ('computing', 'V1', '='), ('V1', '=', '1014'), ('=', '1014', 'mod'), ('1014', 'mod', '19'), ('mod', '19', '='), ('19', '=', '16'), ('=', '16', 'V2'), ('16', 'V2', '='), ('V2', '=', '43.34'), ('=', '43.34', '='), ('43.34', '=', '5184'), ('=', '5184', '='), ('5184', '=', '16'), ('=', '16', 'mod'), ('16', 'mod', '19'), ('mod', '19', 'since'), ('19', 'since', '16'), ('since', '16', '='), ('16', '=', '16'), ('=', '16', 'signature'), ('16', 'signature', 'valid'), ('signature', 'valid', 'Unit-7'), ('valid', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '24'), ('›', '24', 'Here'), ('24', 'Here', 'example'), ('Here', 'example', 'creating'), ('example', 'creating', 'verifying'), ('creating', 'verifying', 'ElGamal'), ('verifying', 'ElGamal', 'signature'), ('ElGamal', 'signature', 'text'), ('signature', 'text', 'using'), ('text', 'using', 'prime'), ('using', 'prime', 'field'), ('prime', 'field', 'GF'), ('field', 'GF', '('), ('GF', '(', '19'), ('(', '19', ')'), ('19', ')', ';'), (')', ';', ','), (';', ',', 'q'), (',', 'q', '='), ('q', '=', '19'), ('=', '19', '.')]

>> POS Tags are: 
 [('ElGamal', 'JJ'), ('Signature', 'NNP'), ('Example', 'NNP'), ('Use', 'NNP'), ('field', 'NN'), ('GF', 'NNP'), ('(', '('), ('19', 'CD'), (')', ')'), ('q=19', 'NN'), ('a=10', 'JJ'), ('Alice', 'NNP'), ('computes', 'NNS'), ('key', 'JJ'), (':', ':'), ('A', 'DT'), ('chooses', 'NNS'), ('xA=16', 'NNP'), ('&', 'CC'), ('computes', 'NNS'), ('yA=1016', 'VBP'), ('mod', '$'), ('19', 'CD'), ('=', '$'), ('4', 'CD'), ('Alice', 'NNP'), ('signs', 'NNS'), ('message', 'NN'), ('hash', 'NN'), ('m=14', 'NN'), ('(', '('), ('3,4', 'CD'), (')', ')'), (':', ':'), ('choosing', 'VBG'), ('random', 'NN'), ('K=5', 'NNP'), ('gcd', 'NN'), ('(', '('), ('18,5', 'CD'), (')', ')'), ('=1', 'NN'), ('computing', 'VBG'), ('S1', 'NNP'), ('=', '$'), ('105', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('=', 'NN'), ('3', 'CD'), ('finding', 'VBG'), ('K-1', 'NNP'), ('mod', 'NN'), ('(', '('), ('q-1', 'JJ'), (')', ')'), ('=', 'VBZ'), ('5-1', 'JJ'), ('mod', 'NN'), ('18', 'CD'), ('=', 'JJ'), ('11', 'CD'), ('computing', 'VBG'), ('S2', 'NNP'), ('=', '$'), ('11', 'CD'), ('(', '('), ('14-16.3', 'JJ'), (')', ')'), ('mod', 'VBZ'), ('18', 'CD'), ('=', 'JJ'), ('4', 'CD'), ('Any', 'NNP'), ('user', 'NN'), ('B', 'NNP'), ('verify', 'NN'), ('signature', 'NN'), ('computing', 'VBG'), ('V1', 'NNP'), ('=', 'NN'), ('1014', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('=', 'NN'), ('16', 'CD'), ('V2', 'NNP'), ('=', 'VBD'), ('43.34', 'CD'), ('=', 'NN'), ('5184', 'CD'), ('=', 'NN'), ('16', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('since', 'IN'), ('16', 'CD'), ('=', '$'), ('16', 'CD'), ('signature', 'NN'), ('valid', 'JJ'), ('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'VBD'), ('24', 'CD'), ('Here', 'RB'), ('example', 'NN'), ('creating', 'VBG'), ('verifying', 'VBG'), ('ElGamal', 'JJ'), ('signature', 'NN'), ('text', 'NN'), ('using', 'VBG'), ('prime', 'JJ'), ('field', 'NN'), ('GF', 'NNP'), ('(', '('), ('19', 'CD'), (')', ')'), (';', ':'), (',', ','), ('q', 'VBZ'), ('=', 'JJ'), ('19', 'CD'), ('.', '.')]

 (S
  (NP ElGamal/JJ Signature/NNP Example/NNP Use/NNP field/NN GF/NNP)
  (/(
  19/CD
  )/)
  (NP q=19/NN)
  (NP a=10/JJ Alice/NNP computes/NNS)
  key/JJ
  :/:
  (NP A/DT chooses/NNS xA=16/NNP)
  &/CC
  (NP computes/NNS)
  yA=1016/VBP
  mod/$
  19/CD
  =/$
  4/CD
  (NP Alice/NNP signs/NNS message/NN hash/NN m=14/NN)
  (/(
  3,4/CD
  )/)
  :/:
  choosing/VBG
  (NP random/NN K=5/NNP gcd/NN)
  (/(
  18,5/CD
  )/)
  (NP =1/NN)
  computing/VBG
  (NP S1/NNP)
  =/$
  105/CD
  (NP mod/NN)
  19/CD
  (NP =/NN)
  3/CD
  finding/VBG
  (NP K-1/NNP mod/NN)
  (/(
  q-1/JJ
  )/)
  =/VBZ
  (NP 5-1/JJ mod/NN)
  18/CD
  =/JJ
  11/CD
  computing/VBG
  (NP S2/NNP)
  =/$
  11/CD
  (/(
  14-16.3/JJ
  )/)
  mod/VBZ
  18/CD
  =/JJ
  4/CD
  (NP Any/NNP user/NN B/NNP verify/NN signature/NN)
  computing/VBG
  (NP V1/NNP =/NN)
  1014/CD
  (NP mod/NN)
  19/CD
  (NP =/NN)
  16/CD
  (NP V2/NNP)
  =/VBD
  43.34/CD
  (NP =/NN)
  5184/CD
  (NP =/NN)
  16/CD
  (NP mod/NN)
  19/CD
  since/IN
  16/CD
  =/$
  16/CD
  (NP signature/NN)
  (NP
    valid/JJ
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/VBD
  24/CD
  Here/RB
  (NP example/NN)
  creating/VBG
  verifying/VBG
  (NP ElGamal/JJ signature/NN text/NN)
  using/VBG
  (NP prime/JJ field/NN GF/NNP)
  (/(
  19/CD
  )/)
  ;/:
  ,/,
  q/VBZ
  =/JJ
  19/CD
  ./.) 


>> Noun Phrases are: 
 ['ElGamal Signature Example Use field GF', 'q=19', 'a=10 Alice computes', 'A chooses xA=16', 'computes', 'Alice signs message hash m=14', 'random K=5 gcd', '=1', 'S1', 'mod', '=', 'K-1 mod', '5-1 mod', 'S2', 'Any user B verify signature', 'V1 =', 'mod', '=', 'V2', '=', '=', 'mod', 'signature', 'valid Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'example', 'ElGamal signature text', 'prime field GF']

>> Named Entities are: 
 [('ORGANIZATION', 'ElGamal'), ('ORGANIZATION', 'Signature Example Use'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'ElGamal')] 

>> Stemming using Porter Stemmer: 
 [('ElGamal', 'elgam'), ('Signature', 'signatur'), ('Example', 'exampl'), ('Use', 'use'), ('field', 'field'), ('GF', 'gf'), ('(', '('), ('19', '19'), (')', ')'), ('q=19', 'q=19'), ('a=10', 'a=10'), ('Alice', 'alic'), ('computes', 'comput'), ('key', 'key'), (':', ':'), ('A', 'a'), ('chooses', 'choos'), ('xA=16', 'xa=16'), ('&', '&'), ('computes', 'comput'), ('yA=1016', 'ya=1016'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('4', '4'), ('Alice', 'alic'), ('signs', 'sign'), ('message', 'messag'), ('hash', 'hash'), ('m=14', 'm=14'), ('(', '('), ('3,4', '3,4'), (')', ')'), (':', ':'), ('choosing', 'choos'), ('random', 'random'), ('K=5', 'k=5'), ('gcd', 'gcd'), ('(', '('), ('18,5', '18,5'), (')', ')'), ('=1', '=1'), ('computing', 'comput'), ('S1', 's1'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('3', '3'), ('finding', 'find'), ('K-1', 'k-1'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('=', '='), ('5-1', '5-1'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('11', '11'), ('computing', 'comput'), ('S2', 's2'), ('=', '='), ('11', '11'), ('(', '('), ('14-16.3', '14-16.3'), (')', ')'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('4', '4'), ('Any', 'ani'), ('user', 'user'), ('B', 'b'), ('verify', 'verifi'), ('signature', 'signatur'), ('computing', 'comput'), ('V1', 'v1'), ('=', '='), ('1014', '1014'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('16', '16'), ('V2', 'v2'), ('=', '='), ('43.34', '43.34'), ('=', '='), ('5184', '5184'), ('=', '='), ('16', '16'), ('mod', 'mod'), ('19', '19'), ('since', 'sinc'), ('16', '16'), ('=', '='), ('16', '16'), ('signature', 'signatur'), ('valid', 'valid'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('24', '24'), ('Here', 'here'), ('example', 'exampl'), ('creating', 'creat'), ('verifying', 'verifi'), ('ElGamal', 'elgam'), ('signature', 'signatur'), ('text', 'text'), ('using', 'use'), ('prime', 'prime'), ('field', 'field'), ('GF', 'gf'), ('(', '('), ('19', '19'), (')', ')'), (';', ';'), (',', ','), ('q', 'q'), ('=', '='), ('19', '19'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('ElGamal', 'elgam'), ('Signature', 'signatur'), ('Example', 'exampl'), ('Use', 'use'), ('field', 'field'), ('GF', 'gf'), ('(', '('), ('19', '19'), (')', ')'), ('q=19', 'q=19'), ('a=10', 'a=10'), ('Alice', 'alic'), ('computes', 'comput'), ('key', 'key'), (':', ':'), ('A', 'a'), ('chooses', 'choos'), ('xA=16', 'xa=16'), ('&', '&'), ('computes', 'comput'), ('yA=1016', 'ya=1016'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('4', '4'), ('Alice', 'alic'), ('signs', 'sign'), ('message', 'messag'), ('hash', 'hash'), ('m=14', 'm=14'), ('(', '('), ('3,4', '3,4'), (')', ')'), (':', ':'), ('choosing', 'choos'), ('random', 'random'), ('K=5', 'k=5'), ('gcd', 'gcd'), ('(', '('), ('18,5', '18,5'), (')', ')'), ('=1', '=1'), ('computing', 'comput'), ('S1', 's1'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('3', '3'), ('finding', 'find'), ('K-1', 'k-1'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('=', '='), ('5-1', '5-1'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('11', '11'), ('computing', 'comput'), ('S2', 's2'), ('=', '='), ('11', '11'), ('(', '('), ('14-16.3', '14-16.3'), (')', ')'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('4', '4'), ('Any', 'ani'), ('user', 'user'), ('B', 'b'), ('verify', 'verifi'), ('signature', 'signatur'), ('computing', 'comput'), ('V1', 'v1'), ('=', '='), ('1014', '1014'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('16', '16'), ('V2', 'v2'), ('=', '='), ('43.34', '43.34'), ('=', '='), ('5184', '5184'), ('=', '='), ('16', '16'), ('mod', 'mod'), ('19', '19'), ('since', 'sinc'), ('16', '16'), ('=', '='), ('16', '16'), ('signature', 'signatur'), ('valid', 'valid'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('24', '24'), ('Here', 'here'), ('example', 'exampl'), ('creating', 'creat'), ('verifying', 'verifi'), ('ElGamal', 'elgam'), ('signature', 'signatur'), ('text', 'text'), ('using', 'use'), ('prime', 'prime'), ('field', 'field'), ('GF', 'gf'), ('(', '('), ('19', '19'), (')', ')'), (';', ';'), (',', ','), ('q', 'q'), ('=', '='), ('19', '19'), ('.', '.')]

>> Lemmatization: 
 [('ElGamal', 'ElGamal'), ('Signature', 'Signature'), ('Example', 'Example'), ('Use', 'Use'), ('field', 'field'), ('GF', 'GF'), ('(', '('), ('19', '19'), (')', ')'), ('q=19', 'q=19'), ('a=10', 'a=10'), ('Alice', 'Alice'), ('computes', 'computes'), ('key', 'key'), (':', ':'), ('A', 'A'), ('chooses', 'chooses'), ('xA=16', 'xA=16'), ('&', '&'), ('computes', 'computes'), ('yA=1016', 'yA=1016'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('4', '4'), ('Alice', 'Alice'), ('signs', 'sign'), ('message', 'message'), ('hash', 'hash'), ('m=14', 'm=14'), ('(', '('), ('3,4', '3,4'), (')', ')'), (':', ':'), ('choosing', 'choosing'), ('random', 'random'), ('K=5', 'K=5'), ('gcd', 'gcd'), ('(', '('), ('18,5', '18,5'), (')', ')'), ('=1', '=1'), ('computing', 'computing'), ('S1', 'S1'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('3', '3'), ('finding', 'finding'), ('K-1', 'K-1'), ('mod', 'mod'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('=', '='), ('5-1', '5-1'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('11', '11'), ('computing', 'computing'), ('S2', 'S2'), ('=', '='), ('11', '11'), ('(', '('), ('14-16.3', '14-16.3'), (')', ')'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('4', '4'), ('Any', 'Any'), ('user', 'user'), ('B', 'B'), ('verify', 'verify'), ('signature', 'signature'), ('computing', 'computing'), ('V1', 'V1'), ('=', '='), ('1014', '1014'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('16', '16'), ('V2', 'V2'), ('=', '='), ('43.34', '43.34'), ('=', '='), ('5184', '5184'), ('=', '='), ('16', '16'), ('mod', 'mod'), ('19', '19'), ('since', 'since'), ('16', '16'), ('=', '='), ('16', '16'), ('signature', 'signature'), ('valid', 'valid'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('24', '24'), ('Here', 'Here'), ('example', 'example'), ('creating', 'creating'), ('verifying', 'verifying'), ('ElGamal', 'ElGamal'), ('signature', 'signature'), ('text', 'text'), ('using', 'using'), ('prime', 'prime'), ('field', 'field'), ('GF', 'GF'), ('(', '('), ('19', '19'), (')', ')'), (';', ';'), (',', ','), ('q', 'q'), ('=', '='), ('19', '19'), ('.', '.')]



============================ Sentence 57 =============================

It has primitive roots {2, 3, 10, 13, 14, 15}, as shown in Table 8.3. 


>> Tokens are: 
 ['It', 'primitive', 'roots', '{', '2', ',', '3', ',', '10', ',', '13', ',', '14', ',', '15', '}', ',', 'shown', 'Table', '8.3', '.']

>> Bigrams are: 
 [('It', 'primitive'), ('primitive', 'roots'), ('roots', '{'), ('{', '2'), ('2', ','), (',', '3'), ('3', ','), (',', '10'), ('10', ','), (',', '13'), ('13', ','), (',', '14'), ('14', ','), (',', '15'), ('15', '}'), ('}', ','), (',', 'shown'), ('shown', 'Table'), ('Table', '8.3'), ('8.3', '.')]

>> Trigrams are: 
 [('It', 'primitive', 'roots'), ('primitive', 'roots', '{'), ('roots', '{', '2'), ('{', '2', ','), ('2', ',', '3'), (',', '3', ','), ('3', ',', '10'), (',', '10', ','), ('10', ',', '13'), (',', '13', ','), ('13', ',', '14'), (',', '14', ','), ('14', ',', '15'), (',', '15', '}'), ('15', '}', ','), ('}', ',', 'shown'), (',', 'shown', 'Table'), ('shown', 'Table', '8.3'), ('Table', '8.3', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('primitive', 'JJ'), ('roots', 'NNS'), ('{', '('), ('2', 'CD'), (',', ','), ('3', 'CD'), (',', ','), ('10', 'CD'), (',', ','), ('13', 'CD'), (',', ','), ('14', 'CD'), (',', ','), ('15', 'CD'), ('}', ')'), (',', ','), ('shown', 'VBN'), ('Table', 'JJ'), ('8.3', 'CD'), ('.', '.')]

 (S
  It/PRP
  (NP primitive/JJ roots/NNS)
  {/(
  2/CD
  ,/,
  3/CD
  ,/,
  10/CD
  ,/,
  13/CD
  ,/,
  14/CD
  ,/,
  15/CD
  }/)
  ,/,
  shown/VBN
  Table/JJ
  8.3/CD
  ./.) 


>> Noun Phrases are: 
 ['primitive roots']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('primitive', 'primit'), ('roots', 'root'), ('{', '{'), ('2', '2'), (',', ','), ('3', '3'), (',', ','), ('10', '10'), (',', ','), ('13', '13'), (',', ','), ('14', '14'), (',', ','), ('15', '15'), ('}', '}'), (',', ','), ('shown', 'shown'), ('Table', 'tabl'), ('8.3', '8.3'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('primitive', 'primit'), ('roots', 'root'), ('{', '{'), ('2', '2'), (',', ','), ('3', '3'), (',', ','), ('10', '10'), (',', ','), ('13', '13'), (',', ','), ('14', '14'), (',', ','), ('15', '15'), ('}', '}'), (',', ','), ('shown', 'shown'), ('Table', 'tabl'), ('8.3', '8.3'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('primitive', 'primitive'), ('roots', 'root'), ('{', '{'), ('2', '2'), (',', ','), ('3', '3'), (',', ','), ('10', '10'), (',', ','), ('13', '13'), (',', ','), ('14', '14'), (',', ','), ('15', '15'), ('}', '}'), (',', ','), ('shown', 'shown'), ('Table', 'Table'), ('8.3', '8.3'), ('.', '.')]



============================ Sentence 58 =============================

We choose a = 10. 


>> Tokens are: 
 ['We', 'choose', '=', '10', '.']

>> Bigrams are: 
 [('We', 'choose'), ('choose', '='), ('=', '10'), ('10', '.')]

>> Trigrams are: 
 [('We', 'choose', '='), ('choose', '=', '10'), ('=', '10', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('choose', 'VBP'), ('=', 'JJ'), ('10', 'CD'), ('.', '.')]

 (S We/PRP choose/VBP =/JJ 10/CD ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('choose', 'choos'), ('=', '='), ('10', '10'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('choose', 'choos'), ('=', '='), ('10', '10'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('choose', 'choose'), ('=', '='), ('10', '10'), ('.', '.')]



============================ Sentence 59 =============================

Alice generates a key pair as shown, which is = {19, 10, 4}. 


>> Tokens are: 
 ['Alice', 'generates', 'key', 'pair', 'shown', ',', '=', '{', '19', ',', '10', ',', '4', '}', '.']

>> Bigrams are: 
 [('Alice', 'generates'), ('generates', 'key'), ('key', 'pair'), ('pair', 'shown'), ('shown', ','), (',', '='), ('=', '{'), ('{', '19'), ('19', ','), (',', '10'), ('10', ','), (',', '4'), ('4', '}'), ('}', '.')]

>> Trigrams are: 
 [('Alice', 'generates', 'key'), ('generates', 'key', 'pair'), ('key', 'pair', 'shown'), ('pair', 'shown', ','), ('shown', ',', '='), (',', '=', '{'), ('=', '{', '19'), ('{', '19', ','), ('19', ',', '10'), (',', '10', ','), ('10', ',', '4'), (',', '4', '}'), ('4', '}', '.')]

>> POS Tags are: 
 [('Alice', 'NNP'), ('generates', 'VBZ'), ('key', 'JJ'), ('pair', 'NN'), ('shown', 'VBN'), (',', ','), ('=', 'NNP'), ('{', '('), ('19', 'CD'), (',', ','), ('10', 'CD'), (',', ','), ('4', 'CD'), ('}', ')'), ('.', '.')]

 (S
  (NP Alice/NNP)
  generates/VBZ
  (NP key/JJ pair/NN)
  shown/VBN
  ,/,
  (NP =/NNP)
  {/(
  19/CD
  ,/,
  10/CD
  ,/,
  4/CD
  }/)
  ./.) 


>> Noun Phrases are: 
 ['Alice', 'key pair', '=']

>> Named Entities are: 
 [('GPE', 'Alice')] 

>> Stemming using Porter Stemmer: 
 [('Alice', 'alic'), ('generates', 'gener'), ('key', 'key'), ('pair', 'pair'), ('shown', 'shown'), (',', ','), ('=', '='), ('{', '{'), ('19', '19'), (',', ','), ('10', '10'), (',', ','), ('4', '4'), ('}', '}'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Alice', 'alic'), ('generates', 'generat'), ('key', 'key'), ('pair', 'pair'), ('shown', 'shown'), (',', ','), ('=', '='), ('{', '{'), ('19', '19'), (',', ','), ('10', '10'), (',', ','), ('4', '4'), ('}', '}'), ('.', '.')]

>> Lemmatization: 
 [('Alice', 'Alice'), ('generates', 'generates'), ('key', 'key'), ('pair', 'pair'), ('shown', 'shown'), (',', ','), ('=', '='), ('{', '{'), ('19', '19'), (',', ','), ('10', '10'), (',', ','), ('4', '4'), ('}', '}'), ('.', '.')]



============================ Sentence 60 =============================

Alice can sign a message with hash m = 14 as shown to compute the signature pair (3,4). 


>> Tokens are: 
 ['Alice', 'sign', 'message', 'hash', '=', '14', 'shown', 'compute', 'signature', 'pair', '(', '3,4', ')', '.']

>> Bigrams are: 
 [('Alice', 'sign'), ('sign', 'message'), ('message', 'hash'), ('hash', '='), ('=', '14'), ('14', 'shown'), ('shown', 'compute'), ('compute', 'signature'), ('signature', 'pair'), ('pair', '('), ('(', '3,4'), ('3,4', ')'), (')', '.')]

>> Trigrams are: 
 [('Alice', 'sign', 'message'), ('sign', 'message', 'hash'), ('message', 'hash', '='), ('hash', '=', '14'), ('=', '14', 'shown'), ('14', 'shown', 'compute'), ('shown', 'compute', 'signature'), ('compute', 'signature', 'pair'), ('signature', 'pair', '('), ('pair', '(', '3,4'), ('(', '3,4', ')'), ('3,4', ')', '.')]

>> POS Tags are: 
 [('Alice', 'NNP'), ('sign', 'NN'), ('message', 'NN'), ('hash', 'NN'), ('=', 'VBD'), ('14', 'CD'), ('shown', 'VBN'), ('compute', 'JJ'), ('signature', 'NN'), ('pair', 'NN'), ('(', '('), ('3,4', 'CD'), (')', ')'), ('.', '.')]

 (S
  (NP Alice/NNP sign/NN message/NN hash/NN)
  =/VBD
  14/CD
  shown/VBN
  (NP compute/JJ signature/NN pair/NN)
  (/(
  3,4/CD
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Alice sign message hash', 'compute signature pair']

>> Named Entities are: 
 [('GPE', 'Alice')] 

>> Stemming using Porter Stemmer: 
 [('Alice', 'alic'), ('sign', 'sign'), ('message', 'messag'), ('hash', 'hash'), ('=', '='), ('14', '14'), ('shown', 'shown'), ('compute', 'comput'), ('signature', 'signatur'), ('pair', 'pair'), ('(', '('), ('3,4', '3,4'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Alice', 'alic'), ('sign', 'sign'), ('message', 'messag'), ('hash', 'hash'), ('=', '='), ('14', '14'), ('shown', 'shown'), ('compute', 'comput'), ('signature', 'signatur'), ('pair', 'pair'), ('(', '('), ('3,4', '3,4'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Alice', 'Alice'), ('sign', 'sign'), ('message', 'message'), ('hash', 'hash'), ('=', '='), ('14', '14'), ('shown', 'shown'), ('compute', 'compute'), ('signature', 'signature'), ('pair', 'pair'), ('(', '('), ('3,4', '3,4'), (')', ')'), ('.', '.')]



============================ Sentence 61 =============================

Any user B can verify the signature by computing confirming the validation equation as shown. 


>> Tokens are: 
 ['Any', 'user', 'B', 'verify', 'signature', 'computing', 'confirming', 'validation', 'equation', 'shown', '.']

>> Bigrams are: 
 [('Any', 'user'), ('user', 'B'), ('B', 'verify'), ('verify', 'signature'), ('signature', 'computing'), ('computing', 'confirming'), ('confirming', 'validation'), ('validation', 'equation'), ('equation', 'shown'), ('shown', '.')]

>> Trigrams are: 
 [('Any', 'user', 'B'), ('user', 'B', 'verify'), ('B', 'verify', 'signature'), ('verify', 'signature', 'computing'), ('signature', 'computing', 'confirming'), ('computing', 'confirming', 'validation'), ('confirming', 'validation', 'equation'), ('validation', 'equation', 'shown'), ('equation', 'shown', '.')]

>> POS Tags are: 
 [('Any', 'DT'), ('user', 'NN'), ('B', 'NNP'), ('verify', 'NN'), ('signature', 'NN'), ('computing', 'VBG'), ('confirming', 'VBG'), ('validation', 'NN'), ('equation', 'NN'), ('shown', 'VBN'), ('.', '.')]

 (S
  (NP Any/DT user/NN B/NNP verify/NN signature/NN)
  computing/VBG
  confirming/VBG
  (NP validation/NN equation/NN)
  shown/VBN
  ./.) 


>> Noun Phrases are: 
 ['Any user B verify signature', 'validation equation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Any', 'ani'), ('user', 'user'), ('B', 'b'), ('verify', 'verifi'), ('signature', 'signatur'), ('computing', 'comput'), ('confirming', 'confirm'), ('validation', 'valid'), ('equation', 'equat'), ('shown', 'shown'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Any', 'ani'), ('user', 'user'), ('B', 'b'), ('verify', 'verifi'), ('signature', 'signatur'), ('computing', 'comput'), ('confirming', 'confirm'), ('validation', 'valid'), ('equation', 'equat'), ('shown', 'shown'), ('.', '.')]

>> Lemmatization: 
 [('Any', 'Any'), ('user', 'user'), ('B', 'B'), ('verify', 'verify'), ('signature', 'signature'), ('computing', 'computing'), ('confirming', 'confirming'), ('validation', 'validation'), ('equation', 'equation'), ('shown', 'shown'), ('.', '.')]



============================ Sentence 62 =============================

Schnorr Digital Signatures Also uses exponentiation in a finite (Galois) security based on discrete logarithms Minimizes message dependent computation multiplying a 2n-bit integer with an n-bit integer Main work can be done in idle time Have using a prime modulus p  p–1 has a prime factor q of appropriate size typically p 1024-bit and q 160-bit numbers  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  25 As with the ElGamal digital signature scheme, the Schnorr signature scheme is based on discrete logarithms [SCHN89, SCHN91]. 


>> Tokens are: 
 ['Schnorr', 'Digital', 'Signatures', 'Also', 'uses', 'exponentiation', 'finite', '(', 'Galois', ')', 'security', 'based', 'discrete', 'logarithms', 'Minimizes', 'message', 'dependent', 'computation', 'multiplying', '2n-bit', 'integer', 'n-bit', 'integer', 'Main', 'work', 'done', 'idle', 'time', 'Have', 'using', 'prime', 'modulus', 'p', 'p–1', 'prime', 'factor', 'q', 'appropriate', 'size', 'typically', 'p', '1024-bit', 'q', '160-bit', 'numbers', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '25', 'As', 'ElGamal', 'digital', 'signature', 'scheme', ',', 'Schnorr', 'signature', 'scheme', 'based', 'discrete', 'logarithms', '[', 'SCHN89', ',', 'SCHN91', ']', '.']

>> Bigrams are: 
 [('Schnorr', 'Digital'), ('Digital', 'Signatures'), ('Signatures', 'Also'), ('Also', 'uses'), ('uses', 'exponentiation'), ('exponentiation', 'finite'), ('finite', '('), ('(', 'Galois'), ('Galois', ')'), (')', 'security'), ('security', 'based'), ('based', 'discrete'), ('discrete', 'logarithms'), ('logarithms', 'Minimizes'), ('Minimizes', 'message'), ('message', 'dependent'), ('dependent', 'computation'), ('computation', 'multiplying'), ('multiplying', '2n-bit'), ('2n-bit', 'integer'), ('integer', 'n-bit'), ('n-bit', 'integer'), ('integer', 'Main'), ('Main', 'work'), ('work', 'done'), ('done', 'idle'), ('idle', 'time'), ('time', 'Have'), ('Have', 'using'), ('using', 'prime'), ('prime', 'modulus'), ('modulus', 'p'), ('p', 'p–1'), ('p–1', 'prime'), ('prime', 'factor'), ('factor', 'q'), ('q', 'appropriate'), ('appropriate', 'size'), ('size', 'typically'), ('typically', 'p'), ('p', '1024-bit'), ('1024-bit', 'q'), ('q', '160-bit'), ('160-bit', 'numbers'), ('numbers', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '25'), ('25', 'As'), ('As', 'ElGamal'), ('ElGamal', 'digital'), ('digital', 'signature'), ('signature', 'scheme'), ('scheme', ','), (',', 'Schnorr'), ('Schnorr', 'signature'), ('signature', 'scheme'), ('scheme', 'based'), ('based', 'discrete'), ('discrete', 'logarithms'), ('logarithms', '['), ('[', 'SCHN89'), ('SCHN89', ','), (',', 'SCHN91'), ('SCHN91', ']'), (']', '.')]

>> Trigrams are: 
 [('Schnorr', 'Digital', 'Signatures'), ('Digital', 'Signatures', 'Also'), ('Signatures', 'Also', 'uses'), ('Also', 'uses', 'exponentiation'), ('uses', 'exponentiation', 'finite'), ('exponentiation', 'finite', '('), ('finite', '(', 'Galois'), ('(', 'Galois', ')'), ('Galois', ')', 'security'), (')', 'security', 'based'), ('security', 'based', 'discrete'), ('based', 'discrete', 'logarithms'), ('discrete', 'logarithms', 'Minimizes'), ('logarithms', 'Minimizes', 'message'), ('Minimizes', 'message', 'dependent'), ('message', 'dependent', 'computation'), ('dependent', 'computation', 'multiplying'), ('computation', 'multiplying', '2n-bit'), ('multiplying', '2n-bit', 'integer'), ('2n-bit', 'integer', 'n-bit'), ('integer', 'n-bit', 'integer'), ('n-bit', 'integer', 'Main'), ('integer', 'Main', 'work'), ('Main', 'work', 'done'), ('work', 'done', 'idle'), ('done', 'idle', 'time'), ('idle', 'time', 'Have'), ('time', 'Have', 'using'), ('Have', 'using', 'prime'), ('using', 'prime', 'modulus'), ('prime', 'modulus', 'p'), ('modulus', 'p', 'p–1'), ('p', 'p–1', 'prime'), ('p–1', 'prime', 'factor'), ('prime', 'factor', 'q'), ('factor', 'q', 'appropriate'), ('q', 'appropriate', 'size'), ('appropriate', 'size', 'typically'), ('size', 'typically', 'p'), ('typically', 'p', '1024-bit'), ('p', '1024-bit', 'q'), ('1024-bit', 'q', '160-bit'), ('q', '160-bit', 'numbers'), ('160-bit', 'numbers', 'Unit-7'), ('numbers', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '25'), ('›', '25', 'As'), ('25', 'As', 'ElGamal'), ('As', 'ElGamal', 'digital'), ('ElGamal', 'digital', 'signature'), ('digital', 'signature', 'scheme'), ('signature', 'scheme', ','), ('scheme', ',', 'Schnorr'), (',', 'Schnorr', 'signature'), ('Schnorr', 'signature', 'scheme'), ('signature', 'scheme', 'based'), ('scheme', 'based', 'discrete'), ('based', 'discrete', 'logarithms'), ('discrete', 'logarithms', '['), ('logarithms', '[', 'SCHN89'), ('[', 'SCHN89', ','), ('SCHN89', ',', 'SCHN91'), (',', 'SCHN91', ']'), ('SCHN91', ']', '.')]

>> POS Tags are: 
 [('Schnorr', 'NNP'), ('Digital', 'NNP'), ('Signatures', 'NNP'), ('Also', 'RB'), ('uses', 'VBZ'), ('exponentiation', 'NN'), ('finite', 'NN'), ('(', '('), ('Galois', 'NNP'), (')', ')'), ('security', 'NN'), ('based', 'VBN'), ('discrete', 'JJ'), ('logarithms', 'NN'), ('Minimizes', 'NNP'), ('message', 'NN'), ('dependent', 'JJ'), ('computation', 'NN'), ('multiplying', 'VBG'), ('2n-bit', 'JJ'), ('integer', 'NN'), ('n-bit', 'JJ'), ('integer', 'NN'), ('Main', 'NNP'), ('work', 'NN'), ('done', 'VBN'), ('idle', 'JJ'), ('time', 'NN'), ('Have', 'VBP'), ('using', 'VBG'), ('prime', 'JJ'), ('modulus', 'CC'), ('p', 'JJ'), ('p–1', 'NN'), ('prime', 'JJ'), ('factor', 'NN'), ('q', 'NN'), ('appropriate', 'JJ'), ('size', 'NN'), ('typically', 'RB'), ('p', 'JJ'), ('1024-bit', 'JJ'), ('q', 'NN'), ('160-bit', 'JJ'), ('numbers', 'NNS'), ('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'RB'), ('25', 'CD'), ('As', 'IN'), ('ElGamal', 'JJ'), ('digital', 'JJ'), ('signature', 'NN'), ('scheme', 'NN'), (',', ','), ('Schnorr', 'NNP'), ('signature', 'NN'), ('scheme', 'NN'), ('based', 'VBN'), ('discrete', 'JJ'), ('logarithms', 'NN'), ('[', 'NNP'), ('SCHN89', 'NNP'), (',', ','), ('SCHN91', 'NNP'), (']', 'NNP'), ('.', '.')]

 (S
  (NP Schnorr/NNP Digital/NNP Signatures/NNP)
  Also/RB
  uses/VBZ
  (NP exponentiation/NN finite/NN)
  (/(
  (NP Galois/NNP)
  )/)
  (NP security/NN)
  based/VBN
  (NP discrete/JJ logarithms/NN Minimizes/NNP message/NN)
  (NP dependent/JJ computation/NN)
  multiplying/VBG
  (NP 2n-bit/JJ integer/NN)
  (NP n-bit/JJ integer/NN Main/NNP work/NN)
  done/VBN
  (NP idle/JJ time/NN)
  Have/VBP
  using/VBG
  prime/JJ
  modulus/CC
  (NP p/JJ p–1/NN)
  (NP prime/JJ factor/NN q/NN)
  (NP appropriate/JJ size/NN)
  typically/RB
  (NP p/JJ 1024-bit/JJ q/NN)
  (NP 160-bit/JJ numbers/NNS)
  (NP
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/RB
  25/CD
  As/IN
  (NP ElGamal/JJ digital/JJ signature/NN scheme/NN)
  ,/,
  (NP Schnorr/NNP signature/NN scheme/NN)
  based/VBN
  (NP discrete/JJ logarithms/NN [/NNP SCHN89/NNP)
  ,/,
  (NP SCHN91/NNP ]/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Schnorr Digital Signatures', 'exponentiation finite', 'Galois', 'security', 'discrete logarithms Minimizes message', 'dependent computation', '2n-bit integer', 'n-bit integer Main work', 'idle time', 'p p–1', 'prime factor q', 'appropriate size', 'p 1024-bit q', '160-bit numbers', 'Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'ElGamal digital signature scheme', 'Schnorr signature scheme', 'discrete logarithms [ SCHN89', 'SCHN91 ]']

>> Named Entities are: 
 [('PERSON', 'Schnorr'), ('ORGANIZATION', 'Digital Signatures Also'), ('GPE', 'Galois'), ('GPE', 'Main'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'ElGamal'), ('PERSON', 'Schnorr'), ('ORGANIZATION', 'SCHN91')] 

>> Stemming using Porter Stemmer: 
 [('Schnorr', 'schnorr'), ('Digital', 'digit'), ('Signatures', 'signatur'), ('Also', 'also'), ('uses', 'use'), ('exponentiation', 'exponenti'), ('finite', 'finit'), ('(', '('), ('Galois', 'galoi'), (')', ')'), ('security', 'secur'), ('based', 'base'), ('discrete', 'discret'), ('logarithms', 'logarithm'), ('Minimizes', 'minim'), ('message', 'messag'), ('dependent', 'depend'), ('computation', 'comput'), ('multiplying', 'multipli'), ('2n-bit', '2n-bit'), ('integer', 'integ'), ('n-bit', 'n-bit'), ('integer', 'integ'), ('Main', 'main'), ('work', 'work'), ('done', 'done'), ('idle', 'idl'), ('time', 'time'), ('Have', 'have'), ('using', 'use'), ('prime', 'prime'), ('modulus', 'modulu'), ('p', 'p'), ('p–1', 'p–1'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('appropriate', 'appropri'), ('size', 'size'), ('typically', 'typic'), ('p', 'p'), ('1024-bit', '1024-bit'), ('q', 'q'), ('160-bit', '160-bit'), ('numbers', 'number'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('25', '25'), ('As', 'as'), ('ElGamal', 'elgam'), ('digital', 'digit'), ('signature', 'signatur'), ('scheme', 'scheme'), (',', ','), ('Schnorr', 'schnorr'), ('signature', 'signatur'), ('scheme', 'scheme'), ('based', 'base'), ('discrete', 'discret'), ('logarithms', 'logarithm'), ('[', '['), ('SCHN89', 'schn89'), (',', ','), ('SCHN91', 'schn91'), (']', ']'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Schnorr', 'schnorr'), ('Digital', 'digit'), ('Signatures', 'signatur'), ('Also', 'also'), ('uses', 'use'), ('exponentiation', 'exponenti'), ('finite', 'finit'), ('(', '('), ('Galois', 'galoi'), (')', ')'), ('security', 'secur'), ('based', 'base'), ('discrete', 'discret'), ('logarithms', 'logarithm'), ('Minimizes', 'minim'), ('message', 'messag'), ('dependent', 'depend'), ('computation', 'comput'), ('multiplying', 'multipli'), ('2n-bit', '2n-bit'), ('integer', 'integ'), ('n-bit', 'n-bit'), ('integer', 'integ'), ('Main', 'main'), ('work', 'work'), ('done', 'done'), ('idle', 'idl'), ('time', 'time'), ('Have', 'have'), ('using', 'use'), ('prime', 'prime'), ('modulus', 'modulus'), ('p', 'p'), ('p–1', 'p–1'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('appropriate', 'appropri'), ('size', 'size'), ('typically', 'typic'), ('p', 'p'), ('1024-bit', '1024-bit'), ('q', 'q'), ('160-bit', '160-bit'), ('numbers', 'number'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('25', '25'), ('As', 'as'), ('ElGamal', 'elgam'), ('digital', 'digit'), ('signature', 'signatur'), ('scheme', 'scheme'), (',', ','), ('Schnorr', 'schnorr'), ('signature', 'signatur'), ('scheme', 'scheme'), ('based', 'base'), ('discrete', 'discret'), ('logarithms', 'logarithm'), ('[', '['), ('SCHN89', 'schn89'), (',', ','), ('SCHN91', 'schn91'), (']', ']'), ('.', '.')]

>> Lemmatization: 
 [('Schnorr', 'Schnorr'), ('Digital', 'Digital'), ('Signatures', 'Signatures'), ('Also', 'Also'), ('uses', 'us'), ('exponentiation', 'exponentiation'), ('finite', 'finite'), ('(', '('), ('Galois', 'Galois'), (')', ')'), ('security', 'security'), ('based', 'based'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), ('Minimizes', 'Minimizes'), ('message', 'message'), ('dependent', 'dependent'), ('computation', 'computation'), ('multiplying', 'multiplying'), ('2n-bit', '2n-bit'), ('integer', 'integer'), ('n-bit', 'n-bit'), ('integer', 'integer'), ('Main', 'Main'), ('work', 'work'), ('done', 'done'), ('idle', 'idle'), ('time', 'time'), ('Have', 'Have'), ('using', 'using'), ('prime', 'prime'), ('modulus', 'modulus'), ('p', 'p'), ('p–1', 'p–1'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('appropriate', 'appropriate'), ('size', 'size'), ('typically', 'typically'), ('p', 'p'), ('1024-bit', '1024-bit'), ('q', 'q'), ('160-bit', '160-bit'), ('numbers', 'number'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('25', '25'), ('As', 'As'), ('ElGamal', 'ElGamal'), ('digital', 'digital'), ('signature', 'signature'), ('scheme', 'scheme'), (',', ','), ('Schnorr', 'Schnorr'), ('signature', 'signature'), ('scheme', 'scheme'), ('based', 'based'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), ('[', '['), ('SCHN89', 'SCHN89'), (',', ','), ('SCHN91', 'SCHN91'), (']', ']'), ('.', '.')]



============================ Sentence 63 =============================

The Schnorr scheme minimizes the message dependent amount of computation required to generate a signature. 


>> Tokens are: 
 ['The', 'Schnorr', 'scheme', 'minimizes', 'message', 'dependent', 'amount', 'computation', 'required', 'generate', 'signature', '.']

>> Bigrams are: 
 [('The', 'Schnorr'), ('Schnorr', 'scheme'), ('scheme', 'minimizes'), ('minimizes', 'message'), ('message', 'dependent'), ('dependent', 'amount'), ('amount', 'computation'), ('computation', 'required'), ('required', 'generate'), ('generate', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('The', 'Schnorr', 'scheme'), ('Schnorr', 'scheme', 'minimizes'), ('scheme', 'minimizes', 'message'), ('minimizes', 'message', 'dependent'), ('message', 'dependent', 'amount'), ('dependent', 'amount', 'computation'), ('amount', 'computation', 'required'), ('computation', 'required', 'generate'), ('required', 'generate', 'signature'), ('generate', 'signature', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('Schnorr', 'NNP'), ('scheme', 'NN'), ('minimizes', 'VBZ'), ('message', 'NN'), ('dependent', 'JJ'), ('amount', 'NN'), ('computation', 'NN'), ('required', 'VBN'), ('generate', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  (NP The/DT Schnorr/NNP scheme/NN)
  minimizes/VBZ
  (NP message/NN)
  (NP dependent/JJ amount/NN computation/NN)
  required/VBN
  (NP generate/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['The Schnorr scheme', 'message', 'dependent amount computation', 'generate signature']

>> Named Entities are: 
 [('ORGANIZATION', 'Schnorr')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('Schnorr', 'schnorr'), ('scheme', 'scheme'), ('minimizes', 'minim'), ('message', 'messag'), ('dependent', 'depend'), ('amount', 'amount'), ('computation', 'comput'), ('required', 'requir'), ('generate', 'gener'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('Schnorr', 'schnorr'), ('scheme', 'scheme'), ('minimizes', 'minim'), ('message', 'messag'), ('dependent', 'depend'), ('amount', 'amount'), ('computation', 'comput'), ('required', 'requir'), ('generate', 'generat'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('Schnorr', 'Schnorr'), ('scheme', 'scheme'), ('minimizes', 'minimizes'), ('message', 'message'), ('dependent', 'dependent'), ('amount', 'amount'), ('computation', 'computation'), ('required', 'required'), ('generate', 'generate'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 64 =============================

The main work for signature generation does not depend on the message and can be done during the idle time of the processor. 


>> Tokens are: 
 ['The', 'main', 'work', 'signature', 'generation', 'depend', 'message', 'done', 'idle', 'time', 'processor', '.']

>> Bigrams are: 
 [('The', 'main'), ('main', 'work'), ('work', 'signature'), ('signature', 'generation'), ('generation', 'depend'), ('depend', 'message'), ('message', 'done'), ('done', 'idle'), ('idle', 'time'), ('time', 'processor'), ('processor', '.')]

>> Trigrams are: 
 [('The', 'main', 'work'), ('main', 'work', 'signature'), ('work', 'signature', 'generation'), ('signature', 'generation', 'depend'), ('generation', 'depend', 'message'), ('depend', 'message', 'done'), ('message', 'done', 'idle'), ('done', 'idle', 'time'), ('idle', 'time', 'processor'), ('time', 'processor', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('main', 'JJ'), ('work', 'NN'), ('signature', 'NN'), ('generation', 'NN'), ('depend', 'VBP'), ('message', 'NN'), ('done', 'VBN'), ('idle', 'JJ'), ('time', 'NN'), ('processor', 'NN'), ('.', '.')]

 (S
  (NP The/DT main/JJ work/NN signature/NN generation/NN)
  depend/VBP
  (NP message/NN)
  done/VBN
  (NP idle/JJ time/NN processor/NN)
  ./.) 


>> Noun Phrases are: 
 ['The main work signature generation', 'message', 'idle time processor']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('main', 'main'), ('work', 'work'), ('signature', 'signatur'), ('generation', 'gener'), ('depend', 'depend'), ('message', 'messag'), ('done', 'done'), ('idle', 'idl'), ('time', 'time'), ('processor', 'processor'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('main', 'main'), ('work', 'work'), ('signature', 'signatur'), ('generation', 'generat'), ('depend', 'depend'), ('message', 'messag'), ('done', 'done'), ('idle', 'idl'), ('time', 'time'), ('processor', 'processor'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('main', 'main'), ('work', 'work'), ('signature', 'signature'), ('generation', 'generation'), ('depend', 'depend'), ('message', 'message'), ('done', 'done'), ('idle', 'idle'), ('time', 'time'), ('processor', 'processor'), ('.', '.')]



============================ Sentence 65 =============================

The message dependent part of the signature generation requires multiplying a 2n-bit integer with an n-bit integer. 


>> Tokens are: 
 ['The', 'message', 'dependent', 'part', 'signature', 'generation', 'requires', 'multiplying', '2n-bit', 'integer', 'n-bit', 'integer', '.']

>> Bigrams are: 
 [('The', 'message'), ('message', 'dependent'), ('dependent', 'part'), ('part', 'signature'), ('signature', 'generation'), ('generation', 'requires'), ('requires', 'multiplying'), ('multiplying', '2n-bit'), ('2n-bit', 'integer'), ('integer', 'n-bit'), ('n-bit', 'integer'), ('integer', '.')]

>> Trigrams are: 
 [('The', 'message', 'dependent'), ('message', 'dependent', 'part'), ('dependent', 'part', 'signature'), ('part', 'signature', 'generation'), ('signature', 'generation', 'requires'), ('generation', 'requires', 'multiplying'), ('requires', 'multiplying', '2n-bit'), ('multiplying', '2n-bit', 'integer'), ('2n-bit', 'integer', 'n-bit'), ('integer', 'n-bit', 'integer'), ('n-bit', 'integer', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('message', 'NN'), ('dependent', 'JJ'), ('part', 'NN'), ('signature', 'NN'), ('generation', 'NN'), ('requires', 'VBZ'), ('multiplying', 'VBG'), ('2n-bit', 'JJ'), ('integer', 'NN'), ('n-bit', 'JJ'), ('integer', 'NN'), ('.', '.')]

 (S
  (NP The/DT message/NN)
  (NP dependent/JJ part/NN signature/NN generation/NN)
  requires/VBZ
  multiplying/VBG
  (NP 2n-bit/JJ integer/NN)
  (NP n-bit/JJ integer/NN)
  ./.) 


>> Noun Phrases are: 
 ['The message', 'dependent part signature generation', '2n-bit integer', 'n-bit integer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('message', 'messag'), ('dependent', 'depend'), ('part', 'part'), ('signature', 'signatur'), ('generation', 'gener'), ('requires', 'requir'), ('multiplying', 'multipli'), ('2n-bit', '2n-bit'), ('integer', 'integ'), ('n-bit', 'n-bit'), ('integer', 'integ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('message', 'messag'), ('dependent', 'depend'), ('part', 'part'), ('signature', 'signatur'), ('generation', 'generat'), ('requires', 'requir'), ('multiplying', 'multipli'), ('2n-bit', '2n-bit'), ('integer', 'integ'), ('n-bit', 'n-bit'), ('integer', 'integ'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('message', 'message'), ('dependent', 'dependent'), ('part', 'part'), ('signature', 'signature'), ('generation', 'generation'), ('requires', 'requires'), ('multiplying', 'multiplying'), ('2n-bit', '2n-bit'), ('integer', 'integer'), ('n-bit', 'n-bit'), ('integer', 'integer'), ('.', '.')]



============================ Sentence 66 =============================

The scheme is based on using a prime modulus p, with p – 1 having a prime factor q of appropriate size; that is p – 1 = 1 (mod q). 


>> Tokens are: 
 ['The', 'scheme', 'based', 'using', 'prime', 'modulus', 'p', ',', 'p', '–', '1', 'prime', 'factor', 'q', 'appropriate', 'size', ';', 'p', '–', '1', '=', '1', '(', 'mod', 'q', ')', '.']

>> Bigrams are: 
 [('The', 'scheme'), ('scheme', 'based'), ('based', 'using'), ('using', 'prime'), ('prime', 'modulus'), ('modulus', 'p'), ('p', ','), (',', 'p'), ('p', '–'), ('–', '1'), ('1', 'prime'), ('prime', 'factor'), ('factor', 'q'), ('q', 'appropriate'), ('appropriate', 'size'), ('size', ';'), (';', 'p'), ('p', '–'), ('–', '1'), ('1', '='), ('=', '1'), ('1', '('), ('(', 'mod'), ('mod', 'q'), ('q', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'scheme', 'based'), ('scheme', 'based', 'using'), ('based', 'using', 'prime'), ('using', 'prime', 'modulus'), ('prime', 'modulus', 'p'), ('modulus', 'p', ','), ('p', ',', 'p'), (',', 'p', '–'), ('p', '–', '1'), ('–', '1', 'prime'), ('1', 'prime', 'factor'), ('prime', 'factor', 'q'), ('factor', 'q', 'appropriate'), ('q', 'appropriate', 'size'), ('appropriate', 'size', ';'), ('size', ';', 'p'), (';', 'p', '–'), ('p', '–', '1'), ('–', '1', '='), ('1', '=', '1'), ('=', '1', '('), ('1', '(', 'mod'), ('(', 'mod', 'q'), ('mod', 'q', ')'), ('q', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('scheme', 'NN'), ('based', 'VBN'), ('using', 'VBG'), ('prime', 'JJ'), ('modulus', 'NN'), ('p', 'NN'), (',', ','), ('p', 'NN'), ('–', 'VBD'), ('1', 'CD'), ('prime', 'JJ'), ('factor', 'NN'), ('q', 'NN'), ('appropriate', 'JJ'), ('size', 'NN'), (';', ':'), ('p', 'CC'), ('–', '$'), ('1', 'CD'), ('=', '$'), ('1', 'CD'), ('(', '('), ('mod', 'FW'), ('q', 'NN'), (')', ')'), ('.', '.')]

 (S
  (NP The/DT scheme/NN)
  based/VBN
  using/VBG
  (NP prime/JJ modulus/NN p/NN)
  ,/,
  (NP p/NN)
  –/VBD
  1/CD
  (NP prime/JJ factor/NN q/NN)
  (NP appropriate/JJ size/NN)
  ;/:
  p/CC
  –/$
  1/CD
  =/$
  1/CD
  (/(
  mod/FW
  (NP q/NN)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The scheme', 'prime modulus p', 'p', 'prime factor q', 'appropriate size', 'q']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('scheme', 'scheme'), ('based', 'base'), ('using', 'use'), ('prime', 'prime'), ('modulus', 'modulu'), ('p', 'p'), (',', ','), ('p', 'p'), ('–', '–'), ('1', '1'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('appropriate', 'appropri'), ('size', 'size'), (';', ';'), ('p', 'p'), ('–', '–'), ('1', '1'), ('=', '='), ('1', '1'), ('(', '('), ('mod', 'mod'), ('q', 'q'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('scheme', 'scheme'), ('based', 'base'), ('using', 'use'), ('prime', 'prime'), ('modulus', 'modulus'), ('p', 'p'), (',', ','), ('p', 'p'), ('–', '–'), ('1', '1'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('appropriate', 'appropri'), ('size', 'size'), (';', ';'), ('p', 'p'), ('–', '–'), ('1', '1'), ('=', '='), ('1', '1'), ('(', '('), ('mod', 'mod'), ('q', 'q'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('scheme', 'scheme'), ('based', 'based'), ('using', 'using'), ('prime', 'prime'), ('modulus', 'modulus'), ('p', 'p'), (',', ','), ('p', 'p'), ('–', '–'), ('1', '1'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('appropriate', 'appropriate'), ('size', 'size'), (';', ';'), ('p', 'p'), ('–', '–'), ('1', '1'), ('=', '='), ('1', '1'), ('(', '('), ('mod', 'mod'), ('q', 'q'), (')', ')'), ('.', '.')]



============================ Sentence 67 =============================

Typically, we use p approx 21024 and q approx 2160. 


>> Tokens are: 
 ['Typically', ',', 'use', 'p', 'approx', '21024', 'q', 'approx', '2160', '.']

>> Bigrams are: 
 [('Typically', ','), (',', 'use'), ('use', 'p'), ('p', 'approx'), ('approx', '21024'), ('21024', 'q'), ('q', 'approx'), ('approx', '2160'), ('2160', '.')]

>> Trigrams are: 
 [('Typically', ',', 'use'), (',', 'use', 'p'), ('use', 'p', 'approx'), ('p', 'approx', '21024'), ('approx', '21024', 'q'), ('21024', 'q', 'approx'), ('q', 'approx', '2160'), ('approx', '2160', '.')]

>> POS Tags are: 
 [('Typically', 'RB'), (',', ','), ('use', 'NN'), ('p', 'NN'), ('approx', 'VBD'), ('21024', 'CD'), ('q', 'NN'), ('approx', 'NN'), ('2160', 'CD'), ('.', '.')]

 (S
  Typically/RB
  ,/,
  (NP use/NN p/NN)
  approx/VBD
  21024/CD
  (NP q/NN approx/NN)
  2160/CD
  ./.) 


>> Noun Phrases are: 
 ['use p', 'q approx']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Typically', 'typic'), (',', ','), ('use', 'use'), ('p', 'p'), ('approx', 'approx'), ('21024', '21024'), ('q', 'q'), ('approx', 'approx'), ('2160', '2160'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Typically', 'typic'), (',', ','), ('use', 'use'), ('p', 'p'), ('approx', 'approx'), ('21024', '21024'), ('q', 'q'), ('approx', 'approx'), ('2160', '2160'), ('.', '.')]

>> Lemmatization: 
 [('Typically', 'Typically'), (',', ','), ('use', 'use'), ('p', 'p'), ('approx', 'approx'), ('21024', '21024'), ('q', 'q'), ('approx', 'approx'), ('2160', '2160'), ('.', '.')]



============================ Sentence 68 =============================

Thus, p  is a 1024-bit number and q  is a 160-bit number, which is also the length of the SHA-1 hash value. 


>> Tokens are: 
 ['Thus', ',', 'p', '1024-bit', 'number', 'q', '160-bit', 'number', ',', 'also', 'length', 'SHA-1', 'hash', 'value', '.']

>> Bigrams are: 
 [('Thus', ','), (',', 'p'), ('p', '1024-bit'), ('1024-bit', 'number'), ('number', 'q'), ('q', '160-bit'), ('160-bit', 'number'), ('number', ','), (',', 'also'), ('also', 'length'), ('length', 'SHA-1'), ('SHA-1', 'hash'), ('hash', 'value'), ('value', '.')]

>> Trigrams are: 
 [('Thus', ',', 'p'), (',', 'p', '1024-bit'), ('p', '1024-bit', 'number'), ('1024-bit', 'number', 'q'), ('number', 'q', '160-bit'), ('q', '160-bit', 'number'), ('160-bit', 'number', ','), ('number', ',', 'also'), (',', 'also', 'length'), ('also', 'length', 'SHA-1'), ('length', 'SHA-1', 'hash'), ('SHA-1', 'hash', 'value'), ('hash', 'value', '.')]

>> POS Tags are: 
 [('Thus', 'RB'), (',', ','), ('p', 'JJ'), ('1024-bit', 'JJ'), ('number', 'NN'), ('q', 'JJ'), ('160-bit', 'JJ'), ('number', 'NN'), (',', ','), ('also', 'RB'), ('length', 'VBZ'), ('SHA-1', 'NNP'), ('hash', 'NN'), ('value', 'NN'), ('.', '.')]

 (S
  Thus/RB
  ,/,
  (NP p/JJ 1024-bit/JJ number/NN)
  (NP q/JJ 160-bit/JJ number/NN)
  ,/,
  also/RB
  length/VBZ
  (NP SHA-1/NNP hash/NN value/NN)
  ./.) 


>> Noun Phrases are: 
 ['p 1024-bit number', 'q 160-bit number', 'SHA-1 hash value']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Thus', 'thu'), (',', ','), ('p', 'p'), ('1024-bit', '1024-bit'), ('number', 'number'), ('q', 'q'), ('160-bit', '160-bit'), ('number', 'number'), (',', ','), ('also', 'also'), ('length', 'length'), ('SHA-1', 'sha-1'), ('hash', 'hash'), ('value', 'valu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Thus', 'thus'), (',', ','), ('p', 'p'), ('1024-bit', '1024-bit'), ('number', 'number'), ('q', 'q'), ('160-bit', '160-bit'), ('number', 'number'), (',', ','), ('also', 'also'), ('length', 'length'), ('SHA-1', 'sha-1'), ('hash', 'hash'), ('value', 'valu'), ('.', '.')]

>> Lemmatization: 
 [('Thus', 'Thus'), (',', ','), ('p', 'p'), ('1024-bit', '1024-bit'), ('number', 'number'), ('q', 'q'), ('160-bit', '160-bit'), ('number', 'number'), (',', ','), ('also', 'also'), ('length', 'length'), ('SHA-1', 'SHA-1'), ('hash', 'hash'), ('value', 'value'), ('.', '.')]



============================ Sentence 69 =============================

Schnorr Key Setup choose suitable primes p , q choose a  such that aq = 1 mod p (a,p,q) are global parameters for all each user (e.g.-.- A) generates a key chooses a secret key (number): 0 < sA < q  compute their public key: vA = a-sA mod q   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  26 The first part of this scheme is the generation of a private/public key pair, which consists of the following steps:    Choose primes p and q, such that q is a prime factor of p – 1. 


>> Tokens are: 
 ['Schnorr', 'Key', 'Setup', 'choose', 'suitable', 'primes', 'p', ',', 'q', 'choose', 'aq', '=', '1', 'mod', 'p', '(', ',', 'p', ',', 'q', ')', 'global', 'parameters', 'user', '(', 'e.g.-.-', 'A', ')', 'generates', 'key', 'chooses', 'secret', 'key', '(', 'number', ')', ':', '0', '<', 'sA', '<', 'q', 'compute', 'public', 'key', ':', 'vA', '=', 'a-sA', 'mod', 'q', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '26', 'The', 'first', 'part', 'scheme', 'generation', 'private/public', 'key', 'pair', ',', 'consists', 'following', 'steps', ':', 'Choose', 'primes', 'p', 'q', ',', 'q', 'prime', 'factor', 'p', '–', '1', '.']

>> Bigrams are: 
 [('Schnorr', 'Key'), ('Key', 'Setup'), ('Setup', 'choose'), ('choose', 'suitable'), ('suitable', 'primes'), ('primes', 'p'), ('p', ','), (',', 'q'), ('q', 'choose'), ('choose', 'aq'), ('aq', '='), ('=', '1'), ('1', 'mod'), ('mod', 'p'), ('p', '('), ('(', ','), (',', 'p'), ('p', ','), (',', 'q'), ('q', ')'), (')', 'global'), ('global', 'parameters'), ('parameters', 'user'), ('user', '('), ('(', 'e.g.-.-'), ('e.g.-.-', 'A'), ('A', ')'), (')', 'generates'), ('generates', 'key'), ('key', 'chooses'), ('chooses', 'secret'), ('secret', 'key'), ('key', '('), ('(', 'number'), ('number', ')'), (')', ':'), (':', '0'), ('0', '<'), ('<', 'sA'), ('sA', '<'), ('<', 'q'), ('q', 'compute'), ('compute', 'public'), ('public', 'key'), ('key', ':'), (':', 'vA'), ('vA', '='), ('=', 'a-sA'), ('a-sA', 'mod'), ('mod', 'q'), ('q', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '26'), ('26', 'The'), ('The', 'first'), ('first', 'part'), ('part', 'scheme'), ('scheme', 'generation'), ('generation', 'private/public'), ('private/public', 'key'), ('key', 'pair'), ('pair', ','), (',', 'consists'), ('consists', 'following'), ('following', 'steps'), ('steps', ':'), (':', 'Choose'), ('Choose', 'primes'), ('primes', 'p'), ('p', 'q'), ('q', ','), (',', 'q'), ('q', 'prime'), ('prime', 'factor'), ('factor', 'p'), ('p', '–'), ('–', '1'), ('1', '.')]

>> Trigrams are: 
 [('Schnorr', 'Key', 'Setup'), ('Key', 'Setup', 'choose'), ('Setup', 'choose', 'suitable'), ('choose', 'suitable', 'primes'), ('suitable', 'primes', 'p'), ('primes', 'p', ','), ('p', ',', 'q'), (',', 'q', 'choose'), ('q', 'choose', 'aq'), ('choose', 'aq', '='), ('aq', '=', '1'), ('=', '1', 'mod'), ('1', 'mod', 'p'), ('mod', 'p', '('), ('p', '(', ','), ('(', ',', 'p'), (',', 'p', ','), ('p', ',', 'q'), (',', 'q', ')'), ('q', ')', 'global'), (')', 'global', 'parameters'), ('global', 'parameters', 'user'), ('parameters', 'user', '('), ('user', '(', 'e.g.-.-'), ('(', 'e.g.-.-', 'A'), ('e.g.-.-', 'A', ')'), ('A', ')', 'generates'), (')', 'generates', 'key'), ('generates', 'key', 'chooses'), ('key', 'chooses', 'secret'), ('chooses', 'secret', 'key'), ('secret', 'key', '('), ('key', '(', 'number'), ('(', 'number', ')'), ('number', ')', ':'), (')', ':', '0'), (':', '0', '<'), ('0', '<', 'sA'), ('<', 'sA', '<'), ('sA', '<', 'q'), ('<', 'q', 'compute'), ('q', 'compute', 'public'), ('compute', 'public', 'key'), ('public', 'key', ':'), ('key', ':', 'vA'), (':', 'vA', '='), ('vA', '=', 'a-sA'), ('=', 'a-sA', 'mod'), ('a-sA', 'mod', 'q'), ('mod', 'q', 'Unit-7'), ('q', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '26'), ('›', '26', 'The'), ('26', 'The', 'first'), ('The', 'first', 'part'), ('first', 'part', 'scheme'), ('part', 'scheme', 'generation'), ('scheme', 'generation', 'private/public'), ('generation', 'private/public', 'key'), ('private/public', 'key', 'pair'), ('key', 'pair', ','), ('pair', ',', 'consists'), (',', 'consists', 'following'), ('consists', 'following', 'steps'), ('following', 'steps', ':'), ('steps', ':', 'Choose'), (':', 'Choose', 'primes'), ('Choose', 'primes', 'p'), ('primes', 'p', 'q'), ('p', 'q', ','), ('q', ',', 'q'), (',', 'q', 'prime'), ('q', 'prime', 'factor'), ('prime', 'factor', 'p'), ('factor', 'p', '–'), ('p', '–', '1'), ('–', '1', '.')]

>> POS Tags are: 
 [('Schnorr', 'NNP'), ('Key', 'NNP'), ('Setup', 'NNP'), ('choose', 'VBP'), ('suitable', 'JJ'), ('primes', 'NNS'), ('p', 'VBP'), (',', ','), ('q', 'VBP'), ('choose', 'JJ'), ('aq', 'NNS'), ('=', 'VBP'), ('1', 'CD'), ('mod', 'NN'), ('p', 'NN'), ('(', '('), (',', ','), ('p', 'NN'), (',', ','), ('q', 'NN'), (')', ')'), ('global', 'JJ'), ('parameters', 'NNS'), ('user', 'VBP'), ('(', '('), ('e.g.-.-', 'VB'), ('A', 'DT'), (')', ')'), ('generates', 'VBZ'), ('key', 'JJ'), ('chooses', 'NNS'), ('secret', 'JJ'), ('key', 'NN'), ('(', '('), ('number', 'NN'), (')', ')'), (':', ':'), ('0', 'CD'), ('<', 'NN'), ('sA', 'NN'), ('<', 'NNP'), ('q', 'NNP'), ('compute', 'VBZ'), ('public', 'JJ'), ('key', 'NN'), (':', ':'), ('vA', 'JJ'), ('=', 'JJ'), ('a-sA', 'JJ'), ('mod', 'NN'), ('q', 'JJ'), ('Unit-7', 'JJ'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('26', 'CD'), ('The', 'DT'), ('first', 'JJ'), ('part', 'NN'), ('scheme', 'NN'), ('generation', 'NN'), ('private/public', 'JJ'), ('key', 'JJ'), ('pair', 'NN'), (',', ','), ('consists', 'VBZ'), ('following', 'VBG'), ('steps', 'NNS'), (':', ':'), ('Choose', 'NNP'), ('primes', 'NNS'), ('p', 'VBP'), ('q', 'NN'), (',', ','), ('q', 'JJ'), ('prime', 'JJ'), ('factor', 'NN'), ('p', 'NN'), ('–', 'VBD'), ('1', 'CD'), ('.', '.')]

 (S
  (NP Schnorr/NNP Key/NNP Setup/NNP)
  choose/VBP
  (NP suitable/JJ primes/NNS)
  p/VBP
  ,/,
  q/VBP
  (NP choose/JJ aq/NNS)
  =/VBP
  1/CD
  (NP mod/NN p/NN)
  (/(
  ,/,
  (NP p/NN)
  ,/,
  (NP q/NN)
  )/)
  (NP global/JJ parameters/NNS)
  user/VBP
  (/(
  e.g.-.-/VB
  A/DT
  )/)
  generates/VBZ
  (NP key/JJ chooses/NNS)
  (NP secret/JJ key/NN)
  (/(
  (NP number/NN)
  )/)
  :/:
  0/CD
  (NP </NN sA/NN </NNP q/NNP)
  compute/VBZ
  (NP public/JJ key/NN)
  :/:
  (NP vA/JJ =/JJ a-sA/JJ mod/NN)
  (NP
    q/JJ
    Unit-7/JJ
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  26/CD
  (NP The/DT first/JJ part/NN scheme/NN generation/NN)
  (NP private/public/JJ key/JJ pair/NN)
  ,/,
  consists/VBZ
  following/VBG
  (NP steps/NNS)
  :/:
  (NP Choose/NNP primes/NNS)
  p/VBP
  (NP q/NN)
  ,/,
  (NP q/JJ prime/JJ factor/NN p/NN)
  –/VBD
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['Schnorr Key Setup', 'suitable primes', 'choose aq', 'mod p', 'p', 'q', 'global parameters', 'key chooses', 'secret key', 'number', '< sA < q', 'public key', 'vA = a-sA mod', 'q Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'The first part scheme generation', 'private/public key pair', 'steps', 'Choose primes', 'q', 'q prime factor p']

>> Named Entities are: 
 [('PERSON', 'Schnorr'), ('ORGANIZATION', 'Key Setup'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Schnorr', 'schnorr'), ('Key', 'key'), ('Setup', 'setup'), ('choose', 'choos'), ('suitable', 'suitabl'), ('primes', 'prime'), ('p', 'p'), (',', ','), ('q', 'q'), ('choose', 'choos'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p', 'p'), ('(', '('), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), (')', ')'), ('global', 'global'), ('parameters', 'paramet'), ('user', 'user'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('A', 'a'), (')', ')'), ('generates', 'gener'), ('key', 'key'), ('chooses', 'choos'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':'), ('0', '0'), ('<', '<'), ('sA', 'sa'), ('<', '<'), ('q', 'q'), ('compute', 'comput'), ('public', 'public'), ('key', 'key'), (':', ':'), ('vA', 'va'), ('=', '='), ('a-sA', 'a-sa'), ('mod', 'mod'), ('q', 'q'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('26', '26'), ('The', 'the'), ('first', 'first'), ('part', 'part'), ('scheme', 'scheme'), ('generation', 'gener'), ('private/public', 'private/publ'), ('key', 'key'), ('pair', 'pair'), (',', ','), ('consists', 'consist'), ('following', 'follow'), ('steps', 'step'), (':', ':'), ('Choose', 'choos'), ('primes', 'prime'), ('p', 'p'), ('q', 'q'), (',', ','), ('q', 'q'), ('prime', 'prime'), ('factor', 'factor'), ('p', 'p'), ('–', '–'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Schnorr', 'schnorr'), ('Key', 'key'), ('Setup', 'setup'), ('choose', 'choos'), ('suitable', 'suitabl'), ('primes', 'prime'), ('p', 'p'), (',', ','), ('q', 'q'), ('choose', 'choos'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p', 'p'), ('(', '('), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), (')', ')'), ('global', 'global'), ('parameters', 'paramet'), ('user', 'user'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('A', 'a'), (')', ')'), ('generates', 'generat'), ('key', 'key'), ('chooses', 'choos'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':'), ('0', '0'), ('<', '<'), ('sA', 'sa'), ('<', '<'), ('q', 'q'), ('compute', 'comput'), ('public', 'public'), ('key', 'key'), (':', ':'), ('vA', 'va'), ('=', '='), ('a-sA', 'a-sa'), ('mod', 'mod'), ('q', 'q'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('26', '26'), ('The', 'the'), ('first', 'first'), ('part', 'part'), ('scheme', 'scheme'), ('generation', 'generat'), ('private/public', 'private/publ'), ('key', 'key'), ('pair', 'pair'), (',', ','), ('consists', 'consist'), ('following', 'follow'), ('steps', 'step'), (':', ':'), ('Choose', 'choos'), ('primes', 'prime'), ('p', 'p'), ('q', 'q'), (',', ','), ('q', 'q'), ('prime', 'prime'), ('factor', 'factor'), ('p', 'p'), ('–', '–'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Schnorr', 'Schnorr'), ('Key', 'Key'), ('Setup', 'Setup'), ('choose', 'choose'), ('suitable', 'suitable'), ('primes', 'prime'), ('p', 'p'), (',', ','), ('q', 'q'), ('choose', 'choose'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p', 'p'), ('(', '('), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), (')', ')'), ('global', 'global'), ('parameters', 'parameter'), ('user', 'user'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('A', 'A'), (')', ')'), ('generates', 'generates'), ('key', 'key'), ('chooses', 'chooses'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':'), ('0', '0'), ('<', '<'), ('sA', 'sA'), ('<', '<'), ('q', 'q'), ('compute', 'compute'), ('public', 'public'), ('key', 'key'), (':', ':'), ('vA', 'vA'), ('=', '='), ('a-sA', 'a-sA'), ('mod', 'mod'), ('q', 'q'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('26', '26'), ('The', 'The'), ('first', 'first'), ('part', 'part'), ('scheme', 'scheme'), ('generation', 'generation'), ('private/public', 'private/public'), ('key', 'key'), ('pair', 'pair'), (',', ','), ('consists', 'consists'), ('following', 'following'), ('steps', 'step'), (':', ':'), ('Choose', 'Choose'), ('primes', 'prime'), ('p', 'p'), ('q', 'q'), (',', ','), ('q', 'q'), ('prime', 'prime'), ('factor', 'factor'), ('p', 'p'), ('–', '–'), ('1', '1'), ('.', '.')]



============================ Sentence 70 =============================

Choose an integer a such that aq = 1 mod p. The values a, p, and q comprise a global public key that can be common to a group of users. 


>> Tokens are: 
 ['Choose', 'integer', 'aq', '=', '1', 'mod', 'p.', 'The', 'values', ',', 'p', ',', 'q', 'comprise', 'global', 'public', 'key', 'common', 'group', 'users', '.']

>> Bigrams are: 
 [('Choose', 'integer'), ('integer', 'aq'), ('aq', '='), ('=', '1'), ('1', 'mod'), ('mod', 'p.'), ('p.', 'The'), ('The', 'values'), ('values', ','), (',', 'p'), ('p', ','), (',', 'q'), ('q', 'comprise'), ('comprise', 'global'), ('global', 'public'), ('public', 'key'), ('key', 'common'), ('common', 'group'), ('group', 'users'), ('users', '.')]

>> Trigrams are: 
 [('Choose', 'integer', 'aq'), ('integer', 'aq', '='), ('aq', '=', '1'), ('=', '1', 'mod'), ('1', 'mod', 'p.'), ('mod', 'p.', 'The'), ('p.', 'The', 'values'), ('The', 'values', ','), ('values', ',', 'p'), (',', 'p', ','), ('p', ',', 'q'), (',', 'q', 'comprise'), ('q', 'comprise', 'global'), ('comprise', 'global', 'public'), ('global', 'public', 'key'), ('public', 'key', 'common'), ('key', 'common', 'group'), ('common', 'group', 'users'), ('group', 'users', '.')]

>> POS Tags are: 
 [('Choose', 'NNP'), ('integer', 'NN'), ('aq', 'NN'), ('=', 'VBD'), ('1', 'CD'), ('mod', 'NN'), ('p.', 'VBD'), ('The', 'DT'), ('values', 'NNS'), (',', ','), ('p', 'NN'), (',', ','), ('q', 'JJ'), ('comprise', 'NN'), ('global', 'JJ'), ('public', 'JJ'), ('key', 'JJ'), ('common', 'JJ'), ('group', 'NN'), ('users', 'NNS'), ('.', '.')]

 (S
  (NP Choose/NNP integer/NN aq/NN)
  =/VBD
  1/CD
  (NP mod/NN)
  p./VBD
  (NP The/DT values/NNS)
  ,/,
  (NP p/NN)
  ,/,
  (NP q/JJ comprise/NN)
  (NP global/JJ public/JJ key/JJ common/JJ group/NN users/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Choose integer aq', 'mod', 'The values', 'p', 'q comprise', 'global public key common group users']

>> Named Entities are: 
 [('GPE', 'Choose')] 

>> Stemming using Porter Stemmer: 
 [('Choose', 'choos'), ('integer', 'integ'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p.', 'p.'), ('The', 'the'), ('values', 'valu'), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), ('comprise', 'compris'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('common', 'common'), ('group', 'group'), ('users', 'user'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Choose', 'choos'), ('integer', 'integ'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p.', 'p.'), ('The', 'the'), ('values', 'valu'), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), ('comprise', 'compris'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('common', 'common'), ('group', 'group'), ('users', 'user'), ('.', '.')]

>> Lemmatization: 
 [('Choose', 'Choose'), ('integer', 'integer'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p.', 'p.'), ('The', 'The'), ('values', 'value'), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), ('comprise', 'comprise'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('common', 'common'), ('group', 'group'), ('users', 'user'), ('.', '.')]



============================ Sentence 71 =============================

Choose a random integer s with 0 < s < q. 


>> Tokens are: 
 ['Choose', 'random', 'integer', '0', '<', '<', 'q', '.']

>> Bigrams are: 
 [('Choose', 'random'), ('random', 'integer'), ('integer', '0'), ('0', '<'), ('<', '<'), ('<', 'q'), ('q', '.')]

>> Trigrams are: 
 [('Choose', 'random', 'integer'), ('random', 'integer', '0'), ('integer', '0', '<'), ('0', '<', '<'), ('<', '<', 'q'), ('<', 'q', '.')]

>> POS Tags are: 
 [('Choose', 'NNP'), ('random', 'NN'), ('integer', 'NN'), ('0', 'CD'), ('<', 'NN'), ('<', 'NNP'), ('q', 'NN'), ('.', '.')]

 (S
  (NP Choose/NNP random/NN integer/NN)
  0/CD
  (NP </NN </NNP q/NN)
  ./.) 


>> Noun Phrases are: 
 ['Choose random integer', '< < q']

>> Named Entities are: 
 [('GPE', 'Choose')] 

>> Stemming using Porter Stemmer: 
 [('Choose', 'choos'), ('random', 'random'), ('integer', 'integ'), ('0', '0'), ('<', '<'), ('<', '<'), ('q', 'q'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Choose', 'choos'), ('random', 'random'), ('integer', 'integ'), ('0', '0'), ('<', '<'), ('<', '<'), ('q', 'q'), ('.', '.')]

>> Lemmatization: 
 [('Choose', 'Choose'), ('random', 'random'), ('integer', 'integer'), ('0', '0'), ('<', '<'), ('<', '<'), ('q', 'q'), ('.', '.')]



============================ Sentence 72 =============================

This is the user's private key. 


>> Tokens are: 
 ['This', 'user', "'s", 'private', 'key', '.']

>> Bigrams are: 
 [('This', 'user'), ('user', "'s"), ("'s", 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('This', 'user', "'s"), ('user', "'s", 'private'), ("'s", 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('user', 'NN'), ("'s", 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S (NP This/DT user/NN) 's/POS (NP private/JJ key/NN) ./.) 


>> Noun Phrases are: 
 ['This user', 'private key']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('user', 'user'), ("'s", "'s"), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('user', 'user'), ("'s", "'s"), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('user', 'user'), ("'s", "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 73 =============================

Calculate v = a–s mod p. This is the user's public key. 


>> Tokens are: 
 ['Calculate', 'v', '=', 'a–s', 'mod', 'p.', 'This', 'user', "'s", 'public', 'key', '.']

>> Bigrams are: 
 [('Calculate', 'v'), ('v', '='), ('=', 'a–s'), ('a–s', 'mod'), ('mod', 'p.'), ('p.', 'This'), ('This', 'user'), ('user', "'s"), ("'s", 'public'), ('public', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Calculate', 'v', '='), ('v', '=', 'a–s'), ('=', 'a–s', 'mod'), ('a–s', 'mod', 'p.'), ('mod', 'p.', 'This'), ('p.', 'This', 'user'), ('This', 'user', "'s"), ('user', "'s", 'public'), ("'s", 'public', 'key'), ('public', 'key', '.')]

>> POS Tags are: 
 [('Calculate', 'NNP'), ('v', 'NN'), ('=', 'NNP'), ('a–s', 'NN'), ('mod', 'NN'), ('p.', 'NN'), ('This', 'DT'), ('user', 'NN'), ("'s", 'POS'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP Calculate/NNP v/NN =/NNP a–s/NN mod/NN p./NN)
  (NP This/DT user/NN)
  's/POS
  (NP public/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Calculate v = a–s mod p.', 'This user', 'public key']

>> Named Entities are: 
 [('GPE', 'Calculate')] 

>> Stemming using Porter Stemmer: 
 [('Calculate', 'calcul'), ('v', 'v'), ('=', '='), ('a–s', 'a–'), ('mod', 'mod'), ('p.', 'p.'), ('This', 'thi'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Calculate', 'calcul'), ('v', 'v'), ('=', '='), ('a–s', 'a–'), ('mod', 'mod'), ('p.', 'p.'), ('This', 'this'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Calculate', 'Calculate'), ('v', 'v'), ('=', '='), ('a–s', 'a–s'), ('mod', 'mod'), ('p.', 'p.'), ('This', 'This'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')]



============================ Sentence 74 =============================

Schnorr Signature User signs message by choosing random r with 0<r<q and computing x = ar mod p concatenate message with x and hash result to computing: e = H(M || x)    computing: y = (r + se) mod q  signature is pair (e, y) Any other user can verify the signature as follows:    computing: x' = ayve mod p    verifying that: e = H(M || x’)     Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  27 A user with public key s and private key v generates a signature as follows:    Choose a random integer r with 0 < r < q and compute x = ar mod p. This is independent of any message M, hence can be pre-computed. 


>> Tokens are: 
 ['Schnorr', 'Signature', 'User', 'signs', 'message', 'choosing', 'random', 'r', '0', '<', 'r', '<', 'q', 'computing', 'x', '=', 'ar', 'mod', 'p', 'concatenate', 'message', 'x', 'hash', 'result', 'computing', ':', 'e', '=', 'H', '(', 'M', '||', 'x', ')', 'computing', ':', '=', '(', 'r', '+', 'se', ')', 'mod', 'q', 'signature', 'pair', '(', 'e', ',', ')', 'Any', 'user', 'verify', 'signature', 'follows', ':', 'computing', ':', 'x', "'", '=', 'ayve', 'mod', 'p', 'verifying', ':', 'e', '=', 'H', '(', 'M', '||', 'x', '’', ')', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '27', 'A', 'user', 'public', 'key', 'private', 'key', 'v', 'generates', 'signature', 'follows', ':', 'Choose', 'random', 'integer', 'r', '0', '<', 'r', '<', 'q', 'compute', 'x', '=', 'ar', 'mod', 'p.', 'This', 'independent', 'message', 'M', ',', 'hence', 'pre-computed', '.']

>> Bigrams are: 
 [('Schnorr', 'Signature'), ('Signature', 'User'), ('User', 'signs'), ('signs', 'message'), ('message', 'choosing'), ('choosing', 'random'), ('random', 'r'), ('r', '0'), ('0', '<'), ('<', 'r'), ('r', '<'), ('<', 'q'), ('q', 'computing'), ('computing', 'x'), ('x', '='), ('=', 'ar'), ('ar', 'mod'), ('mod', 'p'), ('p', 'concatenate'), ('concatenate', 'message'), ('message', 'x'), ('x', 'hash'), ('hash', 'result'), ('result', 'computing'), ('computing', ':'), (':', 'e'), ('e', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'x'), ('x', ')'), (')', 'computing'), ('computing', ':'), (':', '='), ('=', '('), ('(', 'r'), ('r', '+'), ('+', 'se'), ('se', ')'), (')', 'mod'), ('mod', 'q'), ('q', 'signature'), ('signature', 'pair'), ('pair', '('), ('(', 'e'), ('e', ','), (',', ')'), (')', 'Any'), ('Any', 'user'), ('user', 'verify'), ('verify', 'signature'), ('signature', 'follows'), ('follows', ':'), (':', 'computing'), ('computing', ':'), (':', 'x'), ('x', "'"), ("'", '='), ('=', 'ayve'), ('ayve', 'mod'), ('mod', 'p'), ('p', 'verifying'), ('verifying', ':'), (':', 'e'), ('e', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'x'), ('x', '’'), ('’', ')'), (')', 'Unit-7'), ('Unit-7', 'Digital'), ('Digital', 'Signature'), ('Signature', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '27'), ('27', 'A'), ('A', 'user'), ('user', 'public'), ('public', 'key'), ('key', 'private'), ('private', 'key'), ('key', 'v'), ('v', 'generates'), ('generates', 'signature'), ('signature', 'follows'), ('follows', ':'), (':', 'Choose'), ('Choose', 'random'), ('random', 'integer'), ('integer', 'r'), ('r', '0'), ('0', '<'), ('<', 'r'), ('r', '<'), ('<', 'q'), ('q', 'compute'), ('compute', 'x'), ('x', '='), ('=', 'ar'), ('ar', 'mod'), ('mod', 'p.'), ('p.', 'This'), ('This', 'independent'), ('independent', 'message'), ('message', 'M'), ('M', ','), (',', 'hence'), ('hence', 'pre-computed'), ('pre-computed', '.')]

>> Trigrams are: 
 [('Schnorr', 'Signature', 'User'), ('Signature', 'User', 'signs'), ('User', 'signs', 'message'), ('signs', 'message', 'choosing'), ('message', 'choosing', 'random'), ('choosing', 'random', 'r'), ('random', 'r', '0'), ('r', '0', '<'), ('0', '<', 'r'), ('<', 'r', '<'), ('r', '<', 'q'), ('<', 'q', 'computing'), ('q', 'computing', 'x'), ('computing', 'x', '='), ('x', '=', 'ar'), ('=', 'ar', 'mod'), ('ar', 'mod', 'p'), ('mod', 'p', 'concatenate'), ('p', 'concatenate', 'message'), ('concatenate', 'message', 'x'), ('message', 'x', 'hash'), ('x', 'hash', 'result'), ('hash', 'result', 'computing'), ('result', 'computing', ':'), ('computing', ':', 'e'), (':', 'e', '='), ('e', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'x'), ('||', 'x', ')'), ('x', ')', 'computing'), (')', 'computing', ':'), ('computing', ':', '='), (':', '=', '('), ('=', '(', 'r'), ('(', 'r', '+'), ('r', '+', 'se'), ('+', 'se', ')'), ('se', ')', 'mod'), (')', 'mod', 'q'), ('mod', 'q', 'signature'), ('q', 'signature', 'pair'), ('signature', 'pair', '('), ('pair', '(', 'e'), ('(', 'e', ','), ('e', ',', ')'), (',', ')', 'Any'), (')', 'Any', 'user'), ('Any', 'user', 'verify'), ('user', 'verify', 'signature'), ('verify', 'signature', 'follows'), ('signature', 'follows', ':'), ('follows', ':', 'computing'), (':', 'computing', ':'), ('computing', ':', 'x'), (':', 'x', "'"), ('x', "'", '='), ("'", '=', 'ayve'), ('=', 'ayve', 'mod'), ('ayve', 'mod', 'p'), ('mod', 'p', 'verifying'), ('p', 'verifying', ':'), ('verifying', ':', 'e'), (':', 'e', '='), ('e', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'x'), ('||', 'x', '’'), ('x', '’', ')'), ('’', ')', 'Unit-7'), (')', 'Unit-7', 'Digital'), ('Unit-7', 'Digital', 'Signature'), ('Digital', 'Signature', 'Darshan'), ('Signature', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '27'), ('›', '27', 'A'), ('27', 'A', 'user'), ('A', 'user', 'public'), ('user', 'public', 'key'), ('public', 'key', 'private'), ('key', 'private', 'key'), ('private', 'key', 'v'), ('key', 'v', 'generates'), ('v', 'generates', 'signature'), ('generates', 'signature', 'follows'), ('signature', 'follows', ':'), ('follows', ':', 'Choose'), (':', 'Choose', 'random'), ('Choose', 'random', 'integer'), ('random', 'integer', 'r'), ('integer', 'r', '0'), ('r', '0', '<'), ('0', '<', 'r'), ('<', 'r', '<'), ('r', '<', 'q'), ('<', 'q', 'compute'), ('q', 'compute', 'x'), ('compute', 'x', '='), ('x', '=', 'ar'), ('=', 'ar', 'mod'), ('ar', 'mod', 'p.'), ('mod', 'p.', 'This'), ('p.', 'This', 'independent'), ('This', 'independent', 'message'), ('independent', 'message', 'M'), ('message', 'M', ','), ('M', ',', 'hence'), (',', 'hence', 'pre-computed'), ('hence', 'pre-computed', '.')]

>> POS Tags are: 
 [('Schnorr', 'NNP'), ('Signature', 'NNP'), ('User', 'NNP'), ('signs', 'NNS'), ('message', 'NN'), ('choosing', 'VBG'), ('random', 'JJ'), ('r', 'NN'), ('0', 'CD'), ('<', 'NN'), ('r', 'NN'), ('<', 'NNP'), ('q', 'NN'), ('computing', 'VBG'), ('x', 'NNP'), ('=', 'NNP'), ('ar', 'VBZ'), ('mod', 'FW'), ('p', 'NN'), ('concatenate', 'NN'), ('message', 'NN'), ('x', 'NNP'), ('hash', 'NN'), ('result', 'NN'), ('computing', 'NN'), (':', ':'), ('e', 'NN'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('x', 'NNP'), (')', ')'), ('computing', 'NN'), (':', ':'), ('=', 'NN'), ('(', '('), ('r', 'JJ'), ('+', 'NNP'), ('se', 'NN'), (')', ')'), ('mod', 'NN'), ('q', 'JJ'), ('signature', 'NN'), ('pair', 'NN'), ('(', '('), ('e', 'UH'), (',', ','), (')', ')'), ('Any', 'NNP'), ('user', 'JJ'), ('verify', 'NN'), ('signature', 'NN'), ('follows', 'VBZ'), (':', ':'), ('computing', 'NN'), (':', ':'), ('x', 'NN'), ("'", "''"), ('=', 'JJ'), ('ayve', 'NN'), ('mod', 'NN'), ('p', 'NN'), ('verifying', 'NN'), (':', ':'), ('e', 'NN'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('x', 'NNP'), ('’', 'NNP'), (')', ')'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('27', 'CD'), ('A', 'NNP'), ('user', 'JJ'), ('public', 'JJ'), ('key', 'NN'), ('private', 'JJ'), ('key', 'JJ'), ('v', 'NN'), ('generates', 'NNS'), ('signature', 'NN'), ('follows', 'VBZ'), (':', ':'), ('Choose', 'JJ'), ('random', 'NN'), ('integer', 'NN'), ('r', 'NN'), ('0', 'CD'), ('<', 'NN'), ('r', 'NN'), ('<', 'NNP'), ('q', 'NNP'), ('compute', 'NN'), ('x', 'NNP'), ('=', 'NNP'), ('ar', 'VBZ'), ('mod', 'FW'), ('p.', 'NN'), ('This', 'DT'), ('independent', 'JJ'), ('message', 'NN'), ('M', 'NNP'), (',', ','), ('hence', 'RB'), ('pre-computed', 'JJ'), ('.', '.')]

 (S
  (NP Schnorr/NNP Signature/NNP User/NNP signs/NNS message/NN)
  choosing/VBG
  (NP random/JJ r/NN)
  0/CD
  (NP </NN r/NN </NNP q/NN)
  computing/VBG
  (NP x/NNP =/NNP)
  ar/VBZ
  mod/FW
  (NP
    p/NN
    concatenate/NN
    message/NN
    x/NNP
    hash/NN
    result/NN
    computing/NN)
  :/:
  (NP e/NN =/NN H/NNP)
  (/(
  (NP M/NNP ||/NNP x/NNP)
  )/)
  (NP computing/NN)
  :/:
  (NP =/NN)
  (/(
  (NP r/JJ +/NNP se/NN)
  )/)
  (NP mod/NN)
  (NP q/JJ signature/NN pair/NN)
  (/(
  e/UH
  ,/,
  )/)
  (NP Any/NNP)
  (NP user/JJ verify/NN signature/NN)
  follows/VBZ
  :/:
  (NP computing/NN)
  :/:
  (NP x/NN)
  '/''
  (NP =/JJ ayve/NN mod/NN p/NN verifying/NN)
  :/:
  (NP e/NN =/NN H/NNP)
  (/(
  (NP M/NNP ||/NNP x/NNP ’/NNP)
  )/)
  (NP
    Unit-7/NNP
    Digital/NNP
    Signature/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  27/CD
  (NP A/NNP)
  (NP user/JJ public/JJ key/NN)
  (NP private/JJ key/JJ v/NN generates/NNS signature/NN)
  follows/VBZ
  :/:
  (NP Choose/JJ random/NN integer/NN r/NN)
  0/CD
  (NP </NN r/NN </NNP q/NNP compute/NN x/NNP =/NNP)
  ar/VBZ
  mod/FW
  (NP p./NN)
  (NP This/DT independent/JJ message/NN M/NNP)
  ,/,
  hence/RB
  pre-computed/JJ
  ./.) 


>> Noun Phrases are: 
 ['Schnorr Signature User signs message', 'random r', '< r < q', 'x =', 'p concatenate message x hash result computing', 'e = H', 'M || x', 'computing', '=', 'r + se', 'mod', 'q signature pair', 'Any', 'user verify signature', 'computing', 'x', '= ayve mod p verifying', 'e = H', 'M || x ’', 'Unit-7 Digital Signature Darshan Institute Engineering', 'Technology ‹', 'A', 'user public key', 'private key v generates signature', 'Choose random integer r', '< r < q compute x =', 'p.', 'This independent message M']

>> Named Entities are: 
 [('PERSON', 'Schnorr'), ('PERSON', 'Signature User'), ('ORGANIZATION', 'Digital Signature Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Schnorr', 'schnorr'), ('Signature', 'signatur'), ('User', 'user'), ('signs', 'sign'), ('message', 'messag'), ('choosing', 'choos'), ('random', 'random'), ('r', 'r'), ('0', '0'), ('<', '<'), ('r', 'r'), ('<', '<'), ('q', 'q'), ('computing', 'comput'), ('x', 'x'), ('=', '='), ('ar', 'ar'), ('mod', 'mod'), ('p', 'p'), ('concatenate', 'concaten'), ('message', 'messag'), ('x', 'x'), ('hash', 'hash'), ('result', 'result'), ('computing', 'comput'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), (')', ')'), ('computing', 'comput'), (':', ':'), ('=', '='), ('(', '('), ('r', 'r'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('signature', 'signatur'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), (')', ')'), ('Any', 'ani'), ('user', 'user'), ('verify', 'verifi'), ('signature', 'signatur'), ('follows', 'follow'), (':', ':'), ('computing', 'comput'), (':', ':'), ('x', 'x'), ("'", "'"), ('=', '='), ('ayve', 'ayv'), ('mod', 'mod'), ('p', 'p'), ('verifying', 'verifi'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), ('’', '’'), (')', ')'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('27', '27'), ('A', 'a'), ('user', 'user'), ('public', 'public'), ('key', 'key'), ('private', 'privat'), ('key', 'key'), ('v', 'v'), ('generates', 'gener'), ('signature', 'signatur'), ('follows', 'follow'), (':', ':'), ('Choose', 'choos'), ('random', 'random'), ('integer', 'integ'), ('r', 'r'), ('0', '0'), ('<', '<'), ('r', 'r'), ('<', '<'), ('q', 'q'), ('compute', 'comput'), ('x', 'x'), ('=', '='), ('ar', 'ar'), ('mod', 'mod'), ('p.', 'p.'), ('This', 'thi'), ('independent', 'independ'), ('message', 'messag'), ('M', 'm'), (',', ','), ('hence', 'henc'), ('pre-computed', 'pre-comput'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Schnorr', 'schnorr'), ('Signature', 'signatur'), ('User', 'user'), ('signs', 'sign'), ('message', 'messag'), ('choosing', 'choos'), ('random', 'random'), ('r', 'r'), ('0', '0'), ('<', '<'), ('r', 'r'), ('<', '<'), ('q', 'q'), ('computing', 'comput'), ('x', 'x'), ('=', '='), ('ar', 'ar'), ('mod', 'mod'), ('p', 'p'), ('concatenate', 'concaten'), ('message', 'messag'), ('x', 'x'), ('hash', 'hash'), ('result', 'result'), ('computing', 'comput'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), (')', ')'), ('computing', 'comput'), (':', ':'), ('=', '='), ('(', '('), ('r', 'r'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('signature', 'signatur'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), (')', ')'), ('Any', 'ani'), ('user', 'user'), ('verify', 'verifi'), ('signature', 'signatur'), ('follows', 'follow'), (':', ':'), ('computing', 'comput'), (':', ':'), ('x', 'x'), ("'", "'"), ('=', '='), ('ayve', 'ayv'), ('mod', 'mod'), ('p', 'p'), ('verifying', 'verifi'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), ('’', '’'), (')', ')'), ('Unit-7', 'unit-7'), ('Digital', 'digit'), ('Signature', 'signatur'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('27', '27'), ('A', 'a'), ('user', 'user'), ('public', 'public'), ('key', 'key'), ('private', 'privat'), ('key', 'key'), ('v', 'v'), ('generates', 'generat'), ('signature', 'signatur'), ('follows', 'follow'), (':', ':'), ('Choose', 'choos'), ('random', 'random'), ('integer', 'integ'), ('r', 'r'), ('0', '0'), ('<', '<'), ('r', 'r'), ('<', '<'), ('q', 'q'), ('compute', 'comput'), ('x', 'x'), ('=', '='), ('ar', 'ar'), ('mod', 'mod'), ('p.', 'p.'), ('This', 'this'), ('independent', 'independ'), ('message', 'messag'), ('M', 'm'), (',', ','), ('hence', 'henc'), ('pre-computed', 'pre-comput'), ('.', '.')]

>> Lemmatization: 
 [('Schnorr', 'Schnorr'), ('Signature', 'Signature'), ('User', 'User'), ('signs', 'sign'), ('message', 'message'), ('choosing', 'choosing'), ('random', 'random'), ('r', 'r'), ('0', '0'), ('<', '<'), ('r', 'r'), ('<', '<'), ('q', 'q'), ('computing', 'computing'), ('x', 'x'), ('=', '='), ('ar', 'ar'), ('mod', 'mod'), ('p', 'p'), ('concatenate', 'concatenate'), ('message', 'message'), ('x', 'x'), ('hash', 'hash'), ('result', 'result'), ('computing', 'computing'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('x', 'x'), (')', ')'), ('computing', 'computing'), (':', ':'), ('=', '='), ('(', '('), ('r', 'r'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('signature', 'signature'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), (')', ')'), ('Any', 'Any'), ('user', 'user'), ('verify', 'verify'), ('signature', 'signature'), ('follows', 'follows'), (':', ':'), ('computing', 'computing'), (':', ':'), ('x', 'x'), ("'", "'"), ('=', '='), ('ayve', 'ayve'), ('mod', 'mod'), ('p', 'p'), ('verifying', 'verifying'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('x', 'x'), ('’', '’'), (')', ')'), ('Unit-7', 'Unit-7'), ('Digital', 'Digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('27', '27'), ('A', 'A'), ('user', 'user'), ('public', 'public'), ('key', 'key'), ('private', 'private'), ('key', 'key'), ('v', 'v'), ('generates', 'generates'), ('signature', 'signature'), ('follows', 'follows'), (':', ':'), ('Choose', 'Choose'), ('random', 'random'), ('integer', 'integer'), ('r', 'r'), ('0', '0'), ('<', '<'), ('r', 'r'), ('<', '<'), ('q', 'q'), ('compute', 'compute'), ('x', 'x'), ('=', '='), ('ar', 'ar'), ('mod', 'mod'), ('p.', 'p.'), ('This', 'This'), ('independent', 'independent'), ('message', 'message'), ('M', 'M'), (',', ','), ('hence', 'hence'), ('pre-computed', 'pre-computed'), ('.', '.')]



============================ Sentence 75 =============================

Concatenate message with x and hash result to compute: e = H(M || x)    Compute y = (r + se) mod q. 


>> Tokens are: 
 ['Concatenate', 'message', 'x', 'hash', 'result', 'compute', ':', 'e', '=', 'H', '(', 'M', '||', 'x', ')', 'Compute', '=', '(', 'r', '+', 'se', ')', 'mod', 'q', '.']

>> Bigrams are: 
 [('Concatenate', 'message'), ('message', 'x'), ('x', 'hash'), ('hash', 'result'), ('result', 'compute'), ('compute', ':'), (':', 'e'), ('e', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'x'), ('x', ')'), (')', 'Compute'), ('Compute', '='), ('=', '('), ('(', 'r'), ('r', '+'), ('+', 'se'), ('se', ')'), (')', 'mod'), ('mod', 'q'), ('q', '.')]

>> Trigrams are: 
 [('Concatenate', 'message', 'x'), ('message', 'x', 'hash'), ('x', 'hash', 'result'), ('hash', 'result', 'compute'), ('result', 'compute', ':'), ('compute', ':', 'e'), (':', 'e', '='), ('e', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'x'), ('||', 'x', ')'), ('x', ')', 'Compute'), (')', 'Compute', '='), ('Compute', '=', '('), ('=', '(', 'r'), ('(', 'r', '+'), ('r', '+', 'se'), ('+', 'se', ')'), ('se', ')', 'mod'), (')', 'mod', 'q'), ('mod', 'q', '.')]

>> POS Tags are: 
 [('Concatenate', 'NNP'), ('message', 'NN'), ('x', 'NNP'), ('hash', 'NN'), ('result', 'NN'), ('compute', 'NN'), (':', ':'), ('e', 'NN'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('x', 'NNP'), (')', ')'), ('Compute', 'NNP'), ('=', 'NNP'), ('(', '('), ('r', 'NN'), ('+', 'NNP'), ('se', 'NN'), (')', ')'), ('mod', 'NN'), ('q', 'NN'), ('.', '.')]

 (S
  (NP Concatenate/NNP message/NN x/NNP hash/NN result/NN compute/NN)
  :/:
  (NP e/NN =/NN H/NNP)
  (/(
  (NP M/NNP ||/NNP x/NNP)
  )/)
  (NP Compute/NNP =/NNP)
  (/(
  (NP r/NN +/NNP se/NN)
  )/)
  (NP mod/NN q/NN)
  ./.) 


>> Noun Phrases are: 
 ['Concatenate message x hash result compute', 'e = H', 'M || x', 'Compute =', 'r + se', 'mod q']

>> Named Entities are: 
 [('GSP', 'Concatenate'), ('ORGANIZATION', 'Compute')] 

>> Stemming using Porter Stemmer: 
 [('Concatenate', 'concaten'), ('message', 'messag'), ('x', 'x'), ('hash', 'hash'), ('result', 'result'), ('compute', 'comput'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), (')', ')'), ('Compute', 'comput'), ('=', '='), ('(', '('), ('r', 'r'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Concatenate', 'concaten'), ('message', 'messag'), ('x', 'x'), ('hash', 'hash'), ('result', 'result'), ('compute', 'comput'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), (')', ')'), ('Compute', 'comput'), ('=', '='), ('(', '('), ('r', 'r'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]

>> Lemmatization: 
 [('Concatenate', 'Concatenate'), ('message', 'message'), ('x', 'x'), ('hash', 'hash'), ('result', 'result'), ('compute', 'compute'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('x', 'x'), (')', ')'), ('Compute', 'Compute'), ('=', '='), ('(', '('), ('r', 'r'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]



============================ Sentence 76 =============================

The signature consists of the pair (e, y). 


>> Tokens are: 
 ['The', 'signature', 'consists', 'pair', '(', 'e', ',', ')', '.']

>> Bigrams are: 
 [('The', 'signature'), ('signature', 'consists'), ('consists', 'pair'), ('pair', '('), ('(', 'e'), ('e', ','), (',', ')'), (')', '.')]

>> Trigrams are: 
 [('The', 'signature', 'consists'), ('signature', 'consists', 'pair'), ('consists', 'pair', '('), ('pair', '(', 'e'), ('(', 'e', ','), ('e', ',', ')'), (',', ')', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('signature', 'NN'), ('consists', 'VBZ'), ('pair', 'NN'), ('(', '('), ('e', 'UH'), (',', ','), (')', ')'), ('.', '.')]

 (S
  (NP The/DT signature/NN)
  consists/VBZ
  (NP pair/NN)
  (/(
  e/UH
  ,/,
  )/)
  ./.) 


>> Noun Phrases are: 
 ['The signature', 'pair']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('consists', 'consist'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('signature', 'signatur'), ('consists', 'consist'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('signature', 'signature'), ('consists', 'consists'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), (')', ')'), ('.', '.')]



============================ Sentence 77 =============================

Any other user can verify the signature as follows:    Compute x' = ayve mod p.    Verify that e = H(M || x'). 


>> Tokens are: 
 ['Any', 'user', 'verify', 'signature', 'follows', ':', 'Compute', 'x', "'", '=', 'ayve', 'mod', 'p.', 'Verify', 'e', '=', 'H', '(', 'M', '||', 'x', "'", ')', '.']

>> Bigrams are: 
 [('Any', 'user'), ('user', 'verify'), ('verify', 'signature'), ('signature', 'follows'), ('follows', ':'), (':', 'Compute'), ('Compute', 'x'), ('x', "'"), ("'", '='), ('=', 'ayve'), ('ayve', 'mod'), ('mod', 'p.'), ('p.', 'Verify'), ('Verify', 'e'), ('e', '='), ('=', 'H'), ('H', '('), ('(', 'M'), ('M', '||'), ('||', 'x'), ('x', "'"), ("'", ')'), (')', '.')]

>> Trigrams are: 
 [('Any', 'user', 'verify'), ('user', 'verify', 'signature'), ('verify', 'signature', 'follows'), ('signature', 'follows', ':'), ('follows', ':', 'Compute'), (':', 'Compute', 'x'), ('Compute', 'x', "'"), ('x', "'", '='), ("'", '=', 'ayve'), ('=', 'ayve', 'mod'), ('ayve', 'mod', 'p.'), ('mod', 'p.', 'Verify'), ('p.', 'Verify', 'e'), ('Verify', 'e', '='), ('e', '=', 'H'), ('=', 'H', '('), ('H', '(', 'M'), ('(', 'M', '||'), ('M', '||', 'x'), ('||', 'x', "'"), ('x', "'", ')'), ("'", ')', '.')]

>> POS Tags are: 
 [('Any', 'DT'), ('user', 'JJ'), ('verify', 'NN'), ('signature', 'NN'), ('follows', 'VBZ'), (':', ':'), ('Compute', 'NNP'), ('x', 'NNP'), ("'", 'POS'), ('=', 'JJ'), ('ayve', 'NNS'), ('mod', 'VBP'), ('p.', 'JJ'), ('Verify', 'NNP'), ('e', 'NN'), ('=', 'NN'), ('H', 'NNP'), ('(', '('), ('M', 'NNP'), ('||', 'NNP'), ('x', 'NNP'), ("'", 'POS'), (')', ')'), ('.', '.')]

 (S
  (NP Any/DT user/JJ verify/NN signature/NN)
  follows/VBZ
  :/:
  (NP Compute/NNP x/NNP)
  '/POS
  (NP =/JJ ayve/NNS)
  mod/VBP
  (NP p./JJ Verify/NNP e/NN =/NN H/NNP)
  (/(
  (NP M/NNP ||/NNP x/NNP)
  '/POS
  )/)
  ./.) 


>> Noun Phrases are: 
 ['Any user verify signature', 'Compute x', '= ayve', 'p. Verify e = H', 'M || x']

>> Named Entities are: 
 [('ORGANIZATION', 'Compute')] 

>> Stemming using Porter Stemmer: 
 [('Any', 'ani'), ('user', 'user'), ('verify', 'verifi'), ('signature', 'signatur'), ('follows', 'follow'), (':', ':'), ('Compute', 'comput'), ('x', 'x'), ("'", "'"), ('=', '='), ('ayve', 'ayv'), ('mod', 'mod'), ('p.', 'p.'), ('Verify', 'verifi'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), ("'", "'"), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Any', 'ani'), ('user', 'user'), ('verify', 'verifi'), ('signature', 'signatur'), ('follows', 'follow'), (':', ':'), ('Compute', 'comput'), ('x', 'x'), ("'", "'"), ('=', '='), ('ayve', 'ayv'), ('mod', 'mod'), ('p.', 'p.'), ('Verify', 'verifi'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), ("'", "'"), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Any', 'Any'), ('user', 'user'), ('verify', 'verify'), ('signature', 'signature'), ('follows', 'follows'), (':', ':'), ('Compute', 'Compute'), ('x', 'x'), ("'", "'"), ('=', '='), ('ayve', 'ayve'), ('mod', 'mod'), ('p.', 'p.'), ('Verify', 'Verify'), ('e', 'e'), ('=', '='), ('H', 'H'), ('(', '('), ('M', 'M'), ('||', '||'), ('x', 'x'), ("'", "'"), (')', ')'), ('.', '.')]



============================ Sentence 78 =============================

See text for details of why the verification works. 


>> Tokens are: 
 ['See', 'text', 'details', 'verification', 'works', '.']

>> Bigrams are: 
 [('See', 'text'), ('text', 'details'), ('details', 'verification'), ('verification', 'works'), ('works', '.')]

>> Trigrams are: 
 [('See', 'text', 'details'), ('text', 'details', 'verification'), ('details', 'verification', 'works'), ('verification', 'works', '.')]

>> POS Tags are: 
 [('See', 'VB'), ('text', 'NN'), ('details', 'NNS'), ('verification', 'NN'), ('works', 'NNS'), ('.', '.')]

 (S See/VB (NP text/NN details/NNS verification/NN works/NNS) ./.) 


>> Noun Phrases are: 
 ['text details verification works']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('See', 'see'), ('text', 'text'), ('details', 'detail'), ('verification', 'verif'), ('works', 'work'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('See', 'see'), ('text', 'text'), ('details', 'detail'), ('verification', 'verif'), ('works', 'work'), ('.', '.')]

>> Lemmatization: 
 [('See', 'See'), ('text', 'text'), ('details', 'detail'), ('verification', 'verification'), ('works', 'work'), ('.', '.')]

