

========================== Sentence 1 ===========================

 AI-25 Applications of Machine learning Machine learning is a buzzword for today's technology, and it is growing very rapidly day by day. 

Tokens are: 
>> ['AI', '-', '25', 'Applications', 'of', 'Machine', 'learning', 'Machine', 'learning', 'is', 'a', 'buzzword', 'for', 'today', "'s", 'technology', ',', 'and', 'it', 'is', 'growing', 'very', 'rapidly', 'day', 'by', 'day', '.'] 

 UPOS tags are: 
>> [('AI', 'NOUN'), ('-', 'PUNCT'), ('25', 'NUM'), ('Applications', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('buzzword', 'NOUN'), ('for', 'ADP'), ('today', 'NOUN'), ("'s", 'PART'), ('technology', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('growing', 'VERB'), ('very', 'ADV'), ('rapidly', 'ADV'), ('day', 'NOUN'), ('by', 'ADP'), ('day', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'NN'), ('-', ','), ('25', 'CD'), ('Applications', 'NNS'), ('of', 'IN'), ('Machine', 'NN'), ('learning', 'NN'), ('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('buzzword', 'NN'), ('for', 'IN'), ('today', 'NN'), ("'s", 'POS'), ('technology', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('is', 'VBZ'), ('growing', 'VBG'), ('very', 'RB'), ('rapidly', 'RB'), ('day', 'NN'), ('by', 'IN'), ('day', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'ai'), ('-', '-'), ('25', '25'), ('Applications', 'application'), ('of', 'of'), ('Machine', 'Machine'), ('learning', 'learning'), ('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('buzzword', 'buzzword'), ('for', 'for'), ('today', 'today'), ("'s", "'s"), ('technology', 'technology'), (',', ','), ('and', 'and'), ('it', 'it'), ('is', 'be'), ('growing', 'grow'), ('very', 'very'), ('rapidly', 'rapidly'), ('day', 'day'), ('by', 'by'), ('day', 'day'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), (('-', 'AI'), 'punct'), (('25', 'Applications'), 'nummod'), (('Applications', 'buzzword'), 'nsubj'), (('of', 'learning'), 'case'), (('Machine', 'learning'), 'compound'), (('learning', 'Machine'), 'compound'), (('Machine', 'learning'), 'compound'), (('learning', 'Applications'), 'nmod'), (('is', 'buzzword'), 'cop'), (('a', 'buzzword'), 'det'), (('buzzword', 'AI'), 'appos'), (('for', 'technology'), 'case'), (('today', 'technology'), 'nmod:poss'), (("'s", 'today'), 'case'), (('technology', 'buzzword'), 'nmod'), ((',', 'growing'), 'punct'), (('and', 'growing'), 'cc'), (('it', 'growing'), 'nsubj'), (('is', 'growing'), 'aux'), (('growing', 'buzzword'), 'conj'), (('very', 'rapidly'), 'advmod'), (('rapidly', 'day'), 'advmod'), (('day', 'growing'), 'obl:tmod'), (('by', 'day'), 'case'), (('day', 'growing'), 'obl'), (('.', 'AI'), 'punct')]

 Named Entities are: 
>> [('today', 'DATE')]

========================== Sentence 2 ===========================

 We are using machine learning in our daily life even without knowing it such as Google Maps, Google assistant, Alexa, etc. 

Tokens are: 
>> ['We', 'are', 'using', 'machine', 'learning', 'in', 'our', 'daily', 'life', 'even', 'without', 'knowing', 'it', 'such', 'as', 'Google', 'Maps', ',', 'Google', 'assistant', ',', 'Alexa', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('are', 'AUX'), ('using', 'VERB'), ('machine', 'NOUN'), ('learning', 'VERB'), ('in', 'ADP'), ('our', 'PRON'), ('daily', 'ADJ'), ('life', 'NOUN'), ('even', 'ADV'), ('without', 'SCONJ'), ('knowing', 'VERB'), ('it', 'PRON'), ('such', 'ADJ'), ('as', 'ADP'), ('Google', 'PROPN'), ('Maps', 'PROPN'), (',', 'PUNCT'), ('Google', 'PROPN'), ('assistant', 'NOUN'), (',', 'PUNCT'), ('Alexa', 'PROPN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('are', 'VBP'), ('using', 'VBG'), ('machine', 'NN'), ('learning', 'VBG'), ('in', 'IN'), ('our', 'PRP$'), ('daily', 'JJ'), ('life', 'NN'), ('even', 'RB'), ('without', 'IN'), ('knowing', 'VBG'), ('it', 'PRP'), ('such', 'JJ'), ('as', 'IN'), ('Google', 'NNP'), ('Maps', 'NNP'), (',', ','), ('Google', 'NNP'), ('assistant', 'NN'), (',', ','), ('Alexa', 'NNP'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('are', 'be'), ('using', 'use'), ('machine', 'machine'), ('learning', 'learn'), ('in', 'in'), ('our', 'we'), ('daily', 'daily'), ('life', 'life'), ('even', 'even'), ('without', 'without'), ('knowing', 'know'), ('it', 'it'), ('such', 'such'), ('as', 'as'), ('Google', 'Google'), ('Maps', 'Maps'), (',', ','), ('Google', 'Google'), ('assistant', 'assistant'), (',', ','), ('Alexa', 'Alexa'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'using'), 'nsubj'), (('are', 'using'), 'aux'), (('using', 'root'), 'root'), (('machine', 'using'), 'obj'), (('learning', 'using'), 'xcomp'), (('in', 'life'), 'case'), (('our', 'life'), 'nmod:poss'), (('daily', 'life'), 'amod'), (('life', 'learning'), 'obl'), (('even', 'knowing'), 'advmod'), (('without', 'knowing'), 'mark'), (('knowing', 'learning'), 'advcl'), (('it', 'knowing'), 'obj'), (('such', 'Google'), 'case'), (('as', 'such'), 'fixed'), (('Google', 'knowing'), 'obl'), (('Maps', 'Google'), 'flat'), ((',', 'assistant'), 'punct'), (('Google', 'Google'), 'conj'), (('assistant', 'Google'), 'conj'), ((',', 'Alexa'), 'punct'), (('Alexa', 'Google'), 'conj'), ((',', 'etc'), 'punct'), (('etc', 'Google'), 'conj'), (('.', 'using'), 'punct')]

 Named Entities are: 
>> [('Google', 'ORG'), ('Alexa', 'PERSON')]

========================== Sentence 3 ===========================

 Below are some most trending real-world applications of Machine Learning:  1. Image Recognition: Image recognition is one of the most common applications of machine learning. 

Tokens are: 
>> ['Below', 'are', 'some', 'most', 'trending', 'real', '-', 'world', 'applications', 'of', 'Machine', 'Learning', ':', '1', '.', 'Image', 'Recognition', ':', 'Image', 'recognition', 'is', 'one', 'of', 'the', 'most', 'common', 'applications', 'of', 'machine', 'learning', '.'] 

 UPOS tags are: 
>> [('Below', 'ADV'), ('are', 'AUX'), ('some', 'DET'), ('most', 'ADV'), ('trending', 'VERB'), ('real', 'ADJ'), ('-', 'PUNCT'), ('world', 'NOUN'), ('applications', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), (':', 'PUNCT'), ('1', 'NUM'), ('.', 'PUNCT'), ('Image', 'NOUN'), ('Recognition', 'NOUN'), (':', 'PUNCT'), ('Image', 'NOUN'), ('recognition', 'NOUN'), ('is', 'AUX'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('most', 'ADV'), ('common', 'ADJ'), ('applications', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Below', 'RB'), ('are', 'VBP'), ('some', 'DT'), ('most', 'RBS'), ('trending', 'VBG'), ('real', 'JJ'), ('-', 'HYPH'), ('world', 'NN'), ('applications', 'NNS'), ('of', 'IN'), ('Machine', 'NN'), ('Learning', 'NN'), (':', ':'), ('1', 'LS'), ('.', '.'), ('Image', 'NN'), ('Recognition', 'NN'), (':', ':'), ('Image', 'NN'), ('recognition', 'NN'), ('is', 'VBZ'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('most', 'RBS'), ('common', 'JJ'), ('applications', 'NNS'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Below', 'below'), ('are', 'be'), ('some', 'some'), ('most', 'most'), ('trending', 'trend'), ('real', 'real'), ('-', '-'), ('world', 'world'), ('applications', 'application'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning'), (':', ':'), ('1', '1'), ('.', '.'), ('Image', 'image'), ('Recognition', 'recognition'), (':', ':'), ('Image', 'image'), ('recognition', 'recognition'), ('is', 'be'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('most', 'most'), ('common', 'common'), ('applications', 'application'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Below', 'root'), 'root'), (('are', 'Below'), 'cop'), (('some', 'applications'), 'det'), (('most', 'trending'), 'advmod'), (('trending', 'applications'), 'amod'), (('real', 'world'), 'amod'), (('-', 'world'), 'punct'), (('world', 'applications'), 'compound'), (('applications', 'Below'), 'nsubj'), (('of', 'Learning'), 'case'), (('Machine', 'Learning'), 'compound'), (('Learning', 'applications'), 'nmod'), ((':', 'applications'), 'punct'), (('1', 'Recognition'), 'nummod'), (('.', '1'), 'punct'), (('Image', 'Recognition'), 'compound'), (('Recognition', 'Below'), 'parataxis'), ((':', 'Recognition'), 'punct'), (('Image', 'recognition'), 'compound'), (('recognition', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'Below'), 'parataxis'), (('of', 'applications'), 'case'), (('the', 'applications'), 'det'), (('most', 'common'), 'advmod'), (('common', 'applications'), 'amod'), (('applications', 'one'), 'nmod'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'applications'), 'nmod'), (('.', 'Below'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL')]

========================== Sentence 4 ===========================

 It is used to identify objects, persons, places, digital images, etc. 

Tokens are: 
>> ['It', 'is', 'used', 'to', 'identify', 'objects', ',', 'persons', ',', 'places', ',', 'digital', 'images', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('objects', 'NOUN'), (',', 'PUNCT'), ('persons', 'NOUN'), (',', 'PUNCT'), ('places', 'NOUN'), (',', 'PUNCT'), ('digital', 'ADJ'), ('images', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('used', 'VBN'), ('to', 'TO'), ('identify', 'VB'), ('objects', 'NNS'), (',', ','), ('persons', 'NNS'), (',', ','), ('places', 'NNS'), (',', ','), ('digital', 'JJ'), ('images', 'NNS'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('used', 'use'), ('to', 'to'), ('identify', 'identify'), ('objects', 'object'), (',', ','), ('persons', 'person'), (',', ','), ('places', 'place'), (',', ','), ('digital', 'digital'), ('images', 'image'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'identify'), 'mark'), (('identify', 'used'), 'xcomp'), (('objects', 'identify'), 'obj'), ((',', 'persons'), 'punct'), (('persons', 'objects'), 'conj'), ((',', 'places'), 'punct'), (('places', 'objects'), 'conj'), ((',', 'images'), 'punct'), (('digital', 'images'), 'amod'), (('images', 'objects'), 'conj'), ((',', 'etc'), 'punct'), (('etc', 'objects'), 'conj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 The popular use case of image recognition and face detection is, Automatic friend tagging suggestion: Facebook provides us a feature of auto friend tagging suggestion. 

Tokens are: 
>> ['The', 'popular', 'use', 'case', 'of', 'image', 'recognition', 'and', 'face', 'detection', 'is', ',', 'Automatic', 'friend', 'tagging', 'suggestion', ':', 'Facebook', 'provides', 'us', 'a', 'feature', 'of', 'auto', 'friend', 'tagging', 'suggestion', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('popular', 'ADJ'), ('use', 'NOUN'), ('case', 'NOUN'), ('of', 'ADP'), ('image', 'NOUN'), ('recognition', 'NOUN'), ('and', 'CCONJ'), ('face', 'NOUN'), ('detection', 'NOUN'), ('is', 'AUX'), (',', 'PUNCT'), ('Automatic', 'ADJ'), ('friend', 'NOUN'), ('tagging', 'NOUN'), ('suggestion', 'NOUN'), (':', 'PUNCT'), ('Facebook', 'PROPN'), ('provides', 'VERB'), ('us', 'PRON'), ('a', 'DET'), ('feature', 'NOUN'), ('of', 'ADP'), ('auto', 'NOUN'), ('friend', 'NOUN'), ('tagging', 'NOUN'), ('suggestion', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('popular', 'JJ'), ('use', 'NN'), ('case', 'NN'), ('of', 'IN'), ('image', 'NN'), ('recognition', 'NN'), ('and', 'CC'), ('face', 'NN'), ('detection', 'NN'), ('is', 'VBZ'), (',', ','), ('Automatic', 'JJ'), ('friend', 'NN'), ('tagging', 'NN'), ('suggestion', 'NN'), (':', ':'), ('Facebook', 'NNP'), ('provides', 'VBZ'), ('us', 'PRP'), ('a', 'DT'), ('feature', 'NN'), ('of', 'IN'), ('auto', 'NN'), ('friend', 'NN'), ('tagging', 'NN'), ('suggestion', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('popular', 'popular'), ('use', 'use'), ('case', 'case'), ('of', 'of'), ('image', 'image'), ('recognition', 'recognition'), ('and', 'and'), ('face', 'face'), ('detection', 'detection'), ('is', 'be'), (',', ','), ('Automatic', 'automatic'), ('friend', 'friend'), ('tagging', 'tagging'), ('suggestion', 'suggestion'), (':', ':'), ('Facebook', 'Facebook'), ('provides', 'provide'), ('us', 'we'), ('a', 'a'), ('feature', 'feature'), ('of', 'of'), ('auto', 'auto'), ('friend', 'friend'), ('tagging', 'tagging'), ('suggestion', 'suggestion'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'case'), 'det'), (('popular', 'case'), 'amod'), (('use', 'case'), 'compound'), (('case', 'suggestion'), 'nsubj'), (('of', 'recognition'), 'case'), (('image', 'recognition'), 'compound'), (('recognition', 'case'), 'nmod'), (('and', 'detection'), 'cc'), (('face', 'detection'), 'compound'), (('detection', 'recognition'), 'conj'), (('is', 'suggestion'), 'cop'), ((',', 'suggestion'), 'punct'), (('Automatic', 'suggestion'), 'amod'), (('friend', 'suggestion'), 'compound'), (('tagging', 'suggestion'), 'compound'), (('suggestion', 'root'), 'root'), ((':', 'suggestion'), 'punct'), (('Facebook', 'provides'), 'nsubj'), (('provides', 'suggestion'), 'parataxis'), (('us', 'provides'), 'iobj'), (('a', 'feature'), 'det'), (('feature', 'provides'), 'obj'), (('of', 'suggestion'), 'case'), (('auto', 'friend'), 'compound'), (('friend', 'suggestion'), 'compound'), (('tagging', 'suggestion'), 'compound'), (('suggestion', 'feature'), 'nmod'), (('.', 'suggestion'), 'punct')]

 Named Entities are: 
>> [('Facebook', 'ORG')]

========================== Sentence 6 ===========================

 Whenever we upload a photo with our Facebook friends, then we automatically get a tagging suggestion with name, and the technology behind this is machine learning's face detection and recognition algorithm. 

Tokens are: 
>> ['Whenever', 'we', 'upload', 'a', 'photo', 'with', 'our', 'Facebook', 'friends', ',', 'then', 'we', 'automatically', 'get', 'a', 'tagging', 'suggestion', 'with', 'name', ',', 'and', 'the', 'technology', 'behind', 'this', 'is', 'machine', 'learning', "'s", 'face', 'detection', 'and', 'recognition', 'algorithm', '.'] 

 UPOS tags are: 
>> [('Whenever', 'SCONJ'), ('we', 'PRON'), ('upload', 'VERB'), ('a', 'DET'), ('photo', 'NOUN'), ('with', 'ADP'), ('our', 'PRON'), ('Facebook', 'PROPN'), ('friends', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('we', 'PRON'), ('automatically', 'ADV'), ('get', 'VERB'), ('a', 'DET'), ('tagging', 'NOUN'), ('suggestion', 'NOUN'), ('with', 'ADP'), ('name', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('technology', 'NOUN'), ('behind', 'ADP'), ('this', 'PRON'), ('is', 'AUX'), ('machine', 'NOUN'), ('learning', 'NOUN'), ("'s", 'PART'), ('face', 'NOUN'), ('detection', 'NOUN'), ('and', 'CCONJ'), ('recognition', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Whenever', 'WRB'), ('we', 'PRP'), ('upload', 'VBP'), ('a', 'DT'), ('photo', 'NN'), ('with', 'IN'), ('our', 'PRP$'), ('Facebook', 'NNP'), ('friends', 'NNS'), (',', ','), ('then', 'RB'), ('we', 'PRP'), ('automatically', 'RB'), ('get', 'VBP'), ('a', 'DT'), ('tagging', 'NN'), ('suggestion', 'NN'), ('with', 'IN'), ('name', 'NN'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('technology', 'NN'), ('behind', 'IN'), ('this', 'DT'), ('is', 'VBZ'), ('machine', 'NN'), ('learning', 'NN'), ("'s", 'POS'), ('face', 'NN'), ('detection', 'NN'), ('and', 'CC'), ('recognition', 'NN'), ('algorithm', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Whenever', 'whenever'), ('we', 'we'), ('upload', 'upload'), ('a', 'a'), ('photo', 'photo'), ('with', 'with'), ('our', 'we'), ('Facebook', 'Facebook'), ('friends', 'friend'), (',', ','), ('then', 'then'), ('we', 'we'), ('automatically', 'automatically'), ('get', 'get'), ('a', 'a'), ('tagging', 'tagging'), ('suggestion', 'suggestion'), ('with', 'with'), ('name', 'name'), (',', ','), ('and', 'and'), ('the', 'the'), ('technology', 'technology'), ('behind', 'behind'), ('this', 'this'), ('is', 'be'), ('machine', 'machine'), ('learning', 'learning'), ("'s", "'s"), ('face', 'face'), ('detection', 'detection'), ('and', 'and'), ('recognition', 'recognition'), ('algorithm', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('Whenever', 'upload'), 'mark'), (('we', 'upload'), 'nsubj'), (('upload', 'get'), 'advcl'), (('a', 'photo'), 'det'), (('photo', 'upload'), 'obj'), (('with', 'friends'), 'case'), (('our', 'friends'), 'nmod:poss'), (('Facebook', 'friends'), 'compound'), (('friends', 'photo'), 'nmod'), ((',', 'get'), 'punct'), (('then', 'get'), 'advmod'), (('we', 'get'), 'nsubj'), (('automatically', 'get'), 'advmod'), (('get', 'root'), 'root'), (('a', 'suggestion'), 'det'), (('tagging', 'suggestion'), 'compound'), (('suggestion', 'get'), 'obj'), (('with', 'name'), 'case'), (('name', 'get'), 'obl'), ((',', 'algorithm'), 'punct'), (('and', 'algorithm'), 'cc'), (('the', 'technology'), 'det'), (('technology', 'algorithm'), 'nsubj'), (('behind', 'this'), 'case'), (('this', 'technology'), 'nmod'), (('is', 'algorithm'), 'cop'), (('machine', 'learning'), 'compound'), (('learning', 'algorithm'), 'nmod:poss'), (("'s", 'learning'), 'case'), (('face', 'algorithm'), 'compound'), (('detection', 'algorithm'), 'compound'), (('and', 'recognition'), 'cc'), (('recognition', 'detection'), 'conj'), (('algorithm', 'get'), 'conj'), (('.', 'get'), 'punct')]

 Named Entities are: 
>> [('Facebook', 'ORG')]

========================== Sentence 7 ===========================

 It is based on the Facebook project named "Deep Face," which is responsible for face recognition and person identification in the picture. 

Tokens are: 
>> ['It', 'is', 'based', 'on', 'the', 'Facebook', 'project', 'named', '"', 'Deep', 'Face', ',', '"', 'which', 'is', 'responsible', 'for', 'face', 'recognition', 'and', 'person', 'identification', 'in', 'the', 'picture', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('Facebook', 'PROPN'), ('project', 'NOUN'), ('named', 'VERB'), ('"', 'PUNCT'), ('Deep', 'ADJ'), ('Face', 'PROPN'), (',', 'PUNCT'), ('"', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('responsible', 'ADJ'), ('for', 'ADP'), ('face', 'NOUN'), ('recognition', 'NOUN'), ('and', 'CCONJ'), ('person', 'NOUN'), ('identification', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('picture', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('Facebook', 'NNP'), ('project', 'NN'), ('named', 'VBN'), ('"', '``'), ('Deep', 'NNP'), ('Face', 'NNP'), (',', ','), ('"', "''"), ('which', 'WDT'), ('is', 'VBZ'), ('responsible', 'JJ'), ('for', 'IN'), ('face', 'NN'), ('recognition', 'NN'), ('and', 'CC'), ('person', 'NN'), ('identification', 'NN'), ('in', 'IN'), ('the', 'DT'), ('picture', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('Facebook', 'Facebook'), ('project', 'project'), ('named', 'name'), ('"', '"'), ('Deep', 'deep'), ('Face', 'Face'), (',', ','), ('"', '"'), ('which', 'which'), ('is', 'be'), ('responsible', 'responsible'), ('for', 'for'), ('face', 'face'), ('recognition', 'recognition'), ('and', 'and'), ('person', 'person'), ('identification', 'identification'), ('in', 'in'), ('the', 'the'), ('picture', 'picture'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'based'), 'nsubj:pass'), (('is', 'based'), 'aux:pass'), (('based', 'root'), 'root'), (('on', 'project'), 'case'), (('the', 'project'), 'det'), (('Facebook', 'project'), 'compound'), (('project', 'based'), 'obl'), (('named', 'project'), 'acl'), (('"', 'Face'), 'punct'), (('Deep', 'Face'), 'amod'), (('Face', 'named'), 'xcomp'), ((',', 'Face'), 'punct'), (('"', 'Face'), 'punct'), (('which', 'responsible'), 'nsubj'), (('is', 'responsible'), 'cop'), (('responsible', 'Face'), 'acl:relcl'), (('for', 'recognition'), 'case'), (('face', 'recognition'), 'compound'), (('recognition', 'responsible'), 'obl'), (('and', 'identification'), 'cc'), (('person', 'identification'), 'compound'), (('identification', 'recognition'), 'conj'), (('in', 'picture'), 'case'), (('the', 'picture'), 'det'), (('picture', 'recognition'), 'nmod'), (('.', 'based'), 'punct')]

 Named Entities are: 
>> [('Facebook', 'ORG'), ('"Deep Face', 'WORK_OF_ART')]

========================== Sentence 8 ===========================

 2. Speech Recognition 

Tokens are: 
>> ['2', '.', 'Speech', 'Recognition'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('.', 'PUNCT'), ('Speech', 'NOUN'), ('Recognition', 'NOUN')] 

 XPOS tags are: 
>> [('2', 'LS'), ('.', '.'), ('Speech', 'NN'), ('Recognition', 'NN')] 

 Lemmas are: 
>> [('2', '2'), ('.', '.'), ('Speech', 'speech'), ('Recognition', 'recognition')] 

 Dependency tags are: 
>> [(('2', 'Recognition'), 'nummod'), (('.', '2'), 'punct'), (('Speech', 'Recognition'), 'compound'), (('Recognition', 'root'), 'root')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 9 ===========================

 While using Google, we get an option of "Search by voice," it comes under speech recognition, and it's a popular application of machine learning. 

Tokens are: 
>> ['While', 'using', 'Google', ',', 'we', 'get', 'an', 'option', 'of', '"', 'Search', 'by', 'voice', ',', '"', 'it', 'comes', 'under', 'speech', 'recognition', ',', 'and', 'it', "'s", 'a', 'popular', 'application', 'of', 'machine', 'learning', '.'] 

 UPOS tags are: 
>> [('While', 'SCONJ'), ('using', 'VERB'), ('Google', 'PROPN'), (',', 'PUNCT'), ('we', 'PRON'), ('get', 'VERB'), ('an', 'DET'), ('option', 'NOUN'), ('of', 'ADP'), ('"', 'PUNCT'), ('Search', 'NOUN'), ('by', 'ADP'), ('voice', 'NOUN'), (',', 'PUNCT'), ('"', 'PUNCT'), ('it', 'PRON'), ('comes', 'VERB'), ('under', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ("'s", 'AUX'), ('a', 'DET'), ('popular', 'ADJ'), ('application', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('While', 'IN'), ('using', 'VBG'), ('Google', 'NNP'), (',', ','), ('we', 'PRP'), ('get', 'VBP'), ('an', 'DT'), ('option', 'NN'), ('of', 'IN'), ('"', '``'), ('Search', 'NN'), ('by', 'IN'), ('voice', 'NN'), (',', ','), ('"', "''"), ('it', 'PRP'), ('comes', 'VBZ'), ('under', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ("'s", 'VBZ'), ('a', 'DT'), ('popular', 'JJ'), ('application', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('While', 'while'), ('using', 'use'), ('Google', 'Google'), (',', ','), ('we', 'we'), ('get', 'get'), ('an', 'a'), ('option', 'option'), ('of', 'of'), ('"', '"'), ('Search', 'search'), ('by', 'by'), ('voice', 'voice'), (',', ','), ('"', '"'), ('it', 'it'), ('comes', 'come'), ('under', 'under'), ('speech', 'speech'), ('recognition', 'recognition'), (',', ','), ('and', 'and'), ('it', 'it'), ("'s", 'be'), ('a', 'a'), ('popular', 'popular'), ('application', 'application'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('While', 'using'), 'mark'), (('using', 'get'), 'advcl'), (('Google', 'using'), 'obj'), ((',', 'using'), 'punct'), (('we', 'get'), 'nsubj'), (('get', 'root'), 'root'), (('an', 'option'), 'det'), (('option', 'get'), 'obj'), (('of', 'Search'), 'case'), (('"', 'Search'), 'punct'), (('Search', 'option'), 'nmod'), (('by', 'voice'), 'case'), (('voice', 'Search'), 'nmod'), ((',', 'comes'), 'punct'), (('"', 'comes'), 'punct'), (('it', 'comes'), 'nsubj'), (('comes', 'get'), 'parataxis'), (('under', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'comes'), 'obl'), ((',', 'application'), 'punct'), (('and', 'application'), 'cc'), (('it', 'application'), 'nsubj'), (("'s", 'application'), 'cop'), (('a', 'application'), 'det'), (('popular', 'application'), 'amod'), (('application', 'comes'), 'conj'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'application'), 'nmod'), (('.', 'get'), 'punct')]

 Named Entities are: 
>> [('Google', 'ORG')]

========================== Sentence 10 ===========================

 Speech recognition is a process of converting voice instructions into text, and it is also known as "Speech to text", or "Computer speech recognition." 

Tokens are: 
>> ['Speech', 'recognition', 'is', 'a', 'process', 'of', 'converting', 'voice', 'instructions', 'into', 'text', ',', 'and', 'it', 'is', 'also', 'known', 'as', '"', 'Speech', 'to', 'text', '"', ',', 'or', '"', 'Computer', 'speech', 'recognition', '.', '"'] 

 UPOS tags are: 
>> [('Speech', 'NOUN'), ('recognition', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('process', 'NOUN'), ('of', 'SCONJ'), ('converting', 'VERB'), ('voice', 'NOUN'), ('instructions', 'NOUN'), ('into', 'ADP'), ('text', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('also', 'ADV'), ('known', 'VERB'), ('as', 'ADP'), ('"', 'PUNCT'), ('Speech', 'PROPN'), ('to', 'ADP'), ('text', 'NOUN'), ('"', 'PUNCT'), (',', 'PUNCT'), ('or', 'CCONJ'), ('"', 'PUNCT'), ('Computer', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT'), ('"', 'PUNCT')] 

 XPOS tags are: 
>> [('Speech', 'NN'), ('recognition', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('process', 'NN'), ('of', 'IN'), ('converting', 'VBG'), ('voice', 'NN'), ('instructions', 'NNS'), ('into', 'IN'), ('text', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('is', 'VBZ'), ('also', 'RB'), ('known', 'VBN'), ('as', 'IN'), ('"', '``'), ('Speech', 'NNP'), ('to', 'IN'), ('text', 'NN'), ('"', "''"), (',', ','), ('or', 'CC'), ('"', '``'), ('Computer', 'NN'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.'), ('"', "''")] 

 Lemmas are: 
>> [('Speech', 'speech'), ('recognition', 'recognition'), ('is', 'be'), ('a', 'a'), ('process', 'process'), ('of', 'of'), ('converting', 'convert'), ('voice', 'voice'), ('instructions', 'instruction'), ('into', 'into'), ('text', 'text'), (',', ','), ('and', 'and'), ('it', 'it'), ('is', 'be'), ('also', 'also'), ('known', 'know'), ('as', 'as'), ('"', '"'), ('Speech', 'Speech'), ('to', 'to'), ('text', 'text'), ('"', '"'), (',', ','), ('or', 'or'), ('"', '"'), ('Computer', 'Computer'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.'), ('"', '"')] 

 Dependency tags are: 
>> [(('Speech', 'recognition'), 'compound'), (('recognition', 'process'), 'nsubj'), (('is', 'process'), 'cop'), (('a', 'process'), 'det'), (('process', 'root'), 'root'), (('of', 'converting'), 'mark'), (('converting', 'process'), 'acl'), (('voice', 'instructions'), 'compound'), (('instructions', 'converting'), 'obj'), (('into', 'text'), 'case'), (('text', 'converting'), 'obl'), ((',', 'known'), 'punct'), (('and', 'known'), 'cc'), (('it', 'known'), 'nsubj:pass'), (('is', 'known'), 'aux:pass'), (('also', 'known'), 'advmod'), (('known', 'process'), 'conj'), (('as', 'Speech'), 'case'), (('"', 'Speech'), 'punct'), (('Speech', 'known'), 'obl'), (('to', 'text'), 'case'), (('text', 'Speech'), 'nmod'), (('"', 'Speech'), 'punct'), ((',', 'recognition'), 'punct'), (('or', 'recognition'), 'cc'), (('"', 'recognition'), 'punct'), (('Computer', 'speech'), 'compound'), (('speech', 'recognition'), 'compound'), (('recognition', 'Speech'), 'conj'), (('.', 'process'), 'punct'), (('"', 'process'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 At present, machine learning algorithms are widely used by various applications of speech recognition. 

Tokens are: 
>> ['At', 'present', ',', 'machine', 'learning', 'algorithms', 'are', 'widely', 'used', 'by', 'various', 'applications', 'of', 'speech', 'recognition', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('present', 'ADJ'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('are', 'AUX'), ('widely', 'ADV'), ('used', 'VERB'), ('by', 'ADP'), ('various', 'ADJ'), ('applications', 'NOUN'), ('of', 'ADP'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('present', 'JJ'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'NNS'), ('are', 'VBP'), ('widely', 'RB'), ('used', 'VBN'), ('by', 'IN'), ('various', 'JJ'), ('applications', 'NNS'), ('of', 'IN'), ('speech', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('present', 'present'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('are', 'be'), ('widely', 'widely'), ('used', 'use'), ('by', 'by'), ('various', 'various'), ('applications', 'application'), ('of', 'of'), ('speech', 'speech'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'present'), 'case'), (('present', 'used'), 'obl'), ((',', 'used'), 'punct'), (('machine', 'algorithms'), 'compound'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('widely', 'used'), 'advmod'), (('used', 'root'), 'root'), (('by', 'applications'), 'case'), (('various', 'applications'), 'amod'), (('applications', 'used'), 'obl'), (('of', 'recognition'), 'case'), (('speech', 'recognition'), 'compound'), (('recognition', 'applications'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 Google assistant, Siri, Cortana, and Alexa are using speech recognition technology to follow the voice instructions. 

Tokens are: 
>> ['Google', 'assistant', ',', 'Siri', ',', 'Cortana', ',', 'and', 'Alexa', 'are', 'using', 'speech', 'recognition', 'technology', 'to', 'follow', 'the', 'voice', 'instructions', '.'] 

 UPOS tags are: 
>> [('Google', 'PROPN'), ('assistant', 'NOUN'), (',', 'PUNCT'), ('Siri', 'PROPN'), (',', 'PUNCT'), ('Cortana', 'PROPN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Alexa', 'PROPN'), ('are', 'AUX'), ('using', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('technology', 'NOUN'), ('to', 'PART'), ('follow', 'VERB'), ('the', 'DET'), ('voice', 'NOUN'), ('instructions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Google', 'NNP'), ('assistant', 'NN'), (',', ','), ('Siri', 'NNP'), (',', ','), ('Cortana', 'NNP'), (',', ','), ('and', 'CC'), ('Alexa', 'NNP'), ('are', 'VBP'), ('using', 'VBG'), ('speech', 'NN'), ('recognition', 'NN'), ('technology', 'NN'), ('to', 'TO'), ('follow', 'VB'), ('the', 'DT'), ('voice', 'NN'), ('instructions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Google', 'Google'), ('assistant', 'assistant'), (',', ','), ('Siri', 'Siri'), (',', ','), ('Cortana', 'Cortana'), (',', ','), ('and', 'and'), ('Alexa', 'Alexa'), ('are', 'be'), ('using', 'use'), ('speech', 'speech'), ('recognition', 'recognition'), ('technology', 'technology'), ('to', 'to'), ('follow', 'follow'), ('the', 'the'), ('voice', 'voice'), ('instructions', 'instruction'), ('.', '.')] 

 Dependency tags are: 
>> [(('Google', 'assistant'), 'compound'), (('assistant', 'using'), 'nsubj'), ((',', 'Siri'), 'punct'), (('Siri', 'assistant'), 'conj'), ((',', 'Cortana'), 'punct'), (('Cortana', 'assistant'), 'conj'), ((',', 'Alexa'), 'punct'), (('and', 'Alexa'), 'cc'), (('Alexa', 'assistant'), 'conj'), (('are', 'using'), 'aux'), (('using', 'root'), 'root'), (('speech', 'technology'), 'compound'), (('recognition', 'technology'), 'compound'), (('technology', 'using'), 'obj'), (('to', 'follow'), 'mark'), (('follow', 'using'), 'advcl'), (('the', 'instructions'), 'det'), (('voice', 'instructions'), 'compound'), (('instructions', 'follow'), 'obj'), (('.', 'using'), 'punct')]

 Named Entities are: 
>> [('Google', 'ORG'), ('Siri', 'ORG'), ('Cortana', 'PRODUCT'), ('Alexa', 'ORG')]

========================== Sentence 13 ===========================

 C++ vs Java 3. Traffic prediction: 

Tokens are: 
>> ['C', '++', 'vs', 'Java', '3', '.', 'Traffic', 'prediction', ':'] 

 UPOS tags are: 
>> [('C', 'PROPN'), ('++', 'NUM'), ('vs', 'ADP'), ('Java', 'PROPN'), ('3', 'NUM'), ('.', 'PUNCT'), ('Traffic', 'NOUN'), ('prediction', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('C', 'NNP'), ('++', 'CD'), ('vs', 'IN'), ('Java', 'NNP'), ('3', 'CD'), ('.', '.'), ('Traffic', 'NN'), ('prediction', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('C', 'C'), ('++', '++'), ('vs', 'versus'), ('Java', 'Java'), ('3', '3'), ('.', '.'), ('Traffic', 'traffic'), ('prediction', 'prediction'), (':', ':')] 

 Dependency tags are: 
>> [(('C', 'root'), 'root'), (('++', 'C'), 'dep'), (('vs', 'Java'), 'case'), (('Java', 'C'), 'nmod'), (('3', 'Java'), 'nummod'), (('.', 'C'), 'punct'), (('Traffic', 'prediction'), 'compound'), (('prediction', 'C'), 'appos'), ((':', 'C'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 14 ===========================

 If we want to visit a new place, we take help of Google Maps, which shows us the correct path with the shortest route and predicts the traffic conditions. 

Tokens are: 
>> ['If', 'we', 'want', 'to', 'visit', 'a', 'new', 'place', ',', 'we', 'take', 'help', 'of', 'Google', 'Maps', ',', 'which', 'shows', 'us', 'the', 'correct', 'path', 'with', 'the', 'shortest', 'route', 'and', 'predicts', 'the', 'traffic', 'conditions', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('we', 'PRON'), ('want', 'VERB'), ('to', 'PART'), ('visit', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('place', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('take', 'VERB'), ('help', 'NOUN'), ('of', 'ADP'), ('Google', 'PROPN'), ('Maps', 'PROPN'), (',', 'PUNCT'), ('which', 'PRON'), ('shows', 'VERB'), ('us', 'PRON'), ('the', 'DET'), ('correct', 'ADJ'), ('path', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('shortest', 'ADJ'), ('route', 'NOUN'), ('and', 'CCONJ'), ('predicts', 'VERB'), ('the', 'DET'), ('traffic', 'NOUN'), ('conditions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('we', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('visit', 'VB'), ('a', 'DT'), ('new', 'JJ'), ('place', 'NN'), (',', ','), ('we', 'PRP'), ('take', 'VBP'), ('help', 'NN'), ('of', 'IN'), ('Google', 'NNP'), ('Maps', 'NNP'), (',', ','), ('which', 'WDT'), ('shows', 'VBZ'), ('us', 'PRP'), ('the', 'DT'), ('correct', 'JJ'), ('path', 'NN'), ('with', 'IN'), ('the', 'DT'), ('shortest', 'JJS'), ('route', 'NN'), ('and', 'CC'), ('predicts', 'VBZ'), ('the', 'DT'), ('traffic', 'NN'), ('conditions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('we', 'we'), ('want', 'want'), ('to', 'to'), ('visit', 'visit'), ('a', 'a'), ('new', 'new'), ('place', 'place'), (',', ','), ('we', 'we'), ('take', 'take'), ('help', 'help'), ('of', 'of'), ('Google', 'Google'), ('Maps', 'Maps'), (',', ','), ('which', 'which'), ('shows', 'show'), ('us', 'we'), ('the', 'the'), ('correct', 'correct'), ('path', 'path'), ('with', 'with'), ('the', 'the'), ('shortest', 'short'), ('route', 'route'), ('and', 'and'), ('predicts', 'predict'), ('the', 'the'), ('traffic', 'traffic'), ('conditions', 'condition'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'want'), 'mark'), (('we', 'want'), 'nsubj'), (('want', 'take'), 'advcl'), (('to', 'visit'), 'mark'), (('visit', 'want'), 'xcomp'), (('a', 'place'), 'det'), (('new', 'place'), 'amod'), (('place', 'visit'), 'obj'), ((',', 'take'), 'punct'), (('we', 'take'), 'nsubj'), (('take', 'root'), 'root'), (('help', 'take'), 'obj'), (('of', 'Maps'), 'case'), (('Google', 'Maps'), 'compound'), (('Maps', 'help'), 'nmod'), ((',', 'shows'), 'punct'), (('which', 'shows'), 'nsubj'), (('shows', 'Maps'), 'acl:relcl'), (('us', 'shows'), 'iobj'), (('the', 'path'), 'det'), (('correct', 'path'), 'amod'), (('path', 'shows'), 'obj'), (('with', 'route'), 'case'), (('the', 'route'), 'det'), (('shortest', 'route'), 'amod'), (('route', 'path'), 'nmod'), (('and', 'predicts'), 'cc'), (('predicts', 'shows'), 'conj'), (('the', 'conditions'), 'det'), (('traffic', 'conditions'), 'compound'), (('conditions', 'predicts'), 'obj'), (('.', 'take'), 'punct')]

 Named Entities are: 
>> [('Google Maps', 'ORG')]

========================== Sentence 15 ===========================

 It predicts the traffic conditions such as whether traffic is cleared, slow-moving, or heavily congested with the help of two ways: · Real Time location of the vehicle form Google Map app and sensors · Average time has taken on past days at the same time. 

Tokens are: 
>> ['It', 'predicts', 'the', 'traffic', 'conditions', 'such', 'as', 'whether', 'traffic', 'is', 'cleared', ',', 'slow', '-', 'moving', ',', 'or', 'heavily', 'congested', 'with', 'the', 'help', 'of', 'two', 'ways', ':', '·', 'Real', 'Time', 'location', 'of', 'the', 'vehicle', 'form', 'Google', 'Map', 'app', 'and', 'sensors', '·', 'Average', 'time', 'has', 'taken', 'on', 'past', 'days', 'at', 'the', 'same', 'time', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('predicts', 'VERB'), ('the', 'DET'), ('traffic', 'NOUN'), ('conditions', 'NOUN'), ('such', 'ADJ'), ('as', 'SCONJ'), ('whether', 'SCONJ'), ('traffic', 'NOUN'), ('is', 'AUX'), ('cleared', 'VERB'), (',', 'PUNCT'), ('slow', 'ADJ'), ('-', 'PUNCT'), ('moving', 'VERB'), (',', 'PUNCT'), ('or', 'CCONJ'), ('heavily', 'ADV'), ('congested', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('help', 'NOUN'), ('of', 'ADP'), ('two', 'NUM'), ('ways', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('Real', 'ADJ'), ('Time', 'NOUN'), ('location', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('vehicle', 'NOUN'), ('form', 'NOUN'), ('Google', 'PROPN'), ('Map', 'PROPN'), ('app', 'NOUN'), ('and', 'CCONJ'), ('sensors', 'NOUN'), ('·', 'PUNCT'), ('Average', 'ADJ'), ('time', 'NOUN'), ('has', 'AUX'), ('taken', 'VERB'), ('on', 'ADP'), ('past', 'ADJ'), ('days', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('predicts', 'VBZ'), ('the', 'DT'), ('traffic', 'NN'), ('conditions', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('whether', 'IN'), ('traffic', 'NN'), ('is', 'VBZ'), ('cleared', 'VBN'), (',', ','), ('slow', 'JJ'), ('-', 'HYPH'), ('moving', 'VBG'), (',', ','), ('or', 'CC'), ('heavily', 'RB'), ('congested', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('help', 'NN'), ('of', 'IN'), ('two', 'CD'), ('ways', 'NNS'), (':', ':'), ('·', 'NFP'), ('Real', 'JJ'), ('Time', 'NN'), ('location', 'NN'), ('of', 'IN'), ('the', 'DT'), ('vehicle', 'NN'), ('form', 'NN'), ('Google', 'NNP'), ('Map', 'NNP'), ('app', 'NN'), ('and', 'CC'), ('sensors', 'NNS'), ('·', 'NFP'), ('Average', 'JJ'), ('time', 'NN'), ('has', 'VBZ'), ('taken', 'VBN'), ('on', 'IN'), ('past', 'JJ'), ('days', 'NNS'), ('at', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('predicts', 'predict'), ('the', 'the'), ('traffic', 'traffic'), ('conditions', 'condition'), ('such', 'such'), ('as', 'as'), ('whether', 'whether'), ('traffic', 'traffic'), ('is', 'be'), ('cleared', 'clear'), (',', ','), ('slow', 'slow'), ('-', '-'), ('moving', 'move'), (',', ','), ('or', 'or'), ('heavily', 'heavily'), ('congested', 'congest'), ('with', 'with'), ('the', 'the'), ('help', 'help'), ('of', 'of'), ('two', 'two'), ('ways', 'way'), (':', ':'), ('·', '·'), ('Real', 'real'), ('Time', 'time'), ('location', 'location'), ('of', 'of'), ('the', 'the'), ('vehicle', 'vehicle'), ('form', 'form'), ('Google', 'Google'), ('Map', 'map'), ('app', 'app'), ('and', 'and'), ('sensors', 'sensor'), ('·', '·'), ('Average', 'average'), ('time', 'time'), ('has', 'have'), ('taken', 'take'), ('on', 'on'), ('past', 'past'), ('days', 'day'), ('at', 'at'), ('the', 'the'), ('same', 'same'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'predicts'), 'nsubj'), (('predicts', 'root'), 'root'), (('the', 'conditions'), 'det'), (('traffic', 'conditions'), 'compound'), (('conditions', 'predicts'), 'obj'), (('such', 'cleared'), 'mark'), (('as', 'such'), 'fixed'), (('whether', 'cleared'), 'mark'), (('traffic', 'cleared'), 'nsubj:pass'), (('is', 'cleared'), 'aux:pass'), (('cleared', 'conditions'), 'acl'), ((',', 'moving'), 'punct'), (('slow', 'moving'), 'amod'), (('-', 'moving'), 'punct'), (('moving', 'cleared'), 'conj'), ((',', 'congested'), 'punct'), (('or', 'congested'), 'cc'), (('heavily', 'congested'), 'advmod'), (('congested', 'cleared'), 'conj'), (('with', 'help'), 'case'), (('the', 'help'), 'det'), (('help', 'congested'), 'obl'), (('of', 'ways'), 'case'), (('two', 'ways'), 'nummod'), (('ways', 'help'), 'nmod'), ((':', 'location'), 'punct'), (('·', 'location'), 'punct'), (('Real', 'location'), 'amod'), (('Time', 'location'), 'compound'), (('location', 'taken'), 'nsubj'), (('of', 'form'), 'case'), (('the', 'form'), 'det'), (('vehicle', 'form'), 'compound'), (('form', 'location'), 'nmod'), (('Google', 'app'), 'compound'), (('Map', 'app'), 'compound'), (('app', 'location'), 'nmod'), (('and', 'sensors'), 'cc'), (('sensors', 'app'), 'conj'), (('·', 'taken'), 'punct'), (('Average', 'time'), 'amod'), (('time', 'taken'), 'nsubj'), (('has', 'taken'), 'aux'), (('taken', 'predicts'), 'parataxis'), (('on', 'taken'), 'compound:prt'), (('past', 'days'), 'amod'), (('days', 'taken'), 'obl'), (('at', 'time'), 'case'), (('the', 'time'), 'det'), (('same', 'time'), 'amod'), (('time', 'taken'), 'obl'), (('.', 'predicts'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('Google Map', 'PRODUCT'), ('past days', 'DATE')]

========================== Sentence 16 ===========================

 Everyone who is using Google Map is helping this app to make it better. 

Tokens are: 
>> ['Everyone', 'who', 'is', 'using', 'Google', 'Map', 'is', 'helping', 'this', 'app', 'to', 'make', 'it', 'better', '.'] 

 UPOS tags are: 
>> [('Everyone', 'PRON'), ('who', 'PRON'), ('is', 'AUX'), ('using', 'VERB'), ('Google', 'PROPN'), ('Map', 'PROPN'), ('is', 'AUX'), ('helping', 'VERB'), ('this', 'DET'), ('app', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('it', 'PRON'), ('better', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Everyone', 'NN'), ('who', 'WP'), ('is', 'VBZ'), ('using', 'VBG'), ('Google', 'NNP'), ('Map', 'NNP'), ('is', 'VBZ'), ('helping', 'VBG'), ('this', 'DT'), ('app', 'NN'), ('to', 'TO'), ('make', 'VB'), ('it', 'PRP'), ('better', 'JJR'), ('.', '.')] 

 Lemmas are: 
>> [('Everyone', 'everyone'), ('who', 'who'), ('is', 'be'), ('using', 'use'), ('Google', 'Google'), ('Map', 'map'), ('is', 'be'), ('helping', 'help'), ('this', 'this'), ('app', 'app'), ('to', 'to'), ('make', 'make'), ('it', 'it'), ('better', 'good'), ('.', '.')] 

 Dependency tags are: 
>> [(('Everyone', 'helping'), 'nsubj'), (('who', 'using'), 'nsubj'), (('is', 'using'), 'aux'), (('using', 'Everyone'), 'acl:relcl'), (('Google', 'using'), 'obj'), (('Map', 'Google'), 'flat'), (('is', 'helping'), 'aux'), (('helping', 'root'), 'root'), (('this', 'app'), 'det'), (('app', 'helping'), 'obj'), (('to', 'make'), 'mark'), (('make', 'helping'), 'advcl'), (('it', 'make'), 'obj'), (('better', 'make'), 'xcomp'), (('.', 'helping'), 'punct')]

 Named Entities are: 
>> [('Google Map', 'ORG')]

========================== Sentence 17 ===========================

 It takes information from the user and sends back to its database to improve the performance. 

Tokens are: 
>> ['It', 'takes', 'information', 'from', 'the', 'user', 'and', 'sends', 'back', 'to', 'its', 'database', 'to', 'improve', 'the', 'performance', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('takes', 'VERB'), ('information', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('user', 'NOUN'), ('and', 'CCONJ'), ('sends', 'VERB'), ('back', 'ADV'), ('to', 'ADP'), ('its', 'PRON'), ('database', 'NOUN'), ('to', 'PART'), ('improve', 'VERB'), ('the', 'DET'), ('performance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('takes', 'VBZ'), ('information', 'NN'), ('from', 'IN'), ('the', 'DT'), ('user', 'NN'), ('and', 'CC'), ('sends', 'VBZ'), ('back', 'RB'), ('to', 'IN'), ('its', 'PRP$'), ('database', 'NN'), ('to', 'TO'), ('improve', 'VB'), ('the', 'DT'), ('performance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('takes', 'take'), ('information', 'information'), ('from', 'from'), ('the', 'the'), ('user', 'user'), ('and', 'and'), ('sends', 'send'), ('back', 'back'), ('to', 'to'), ('its', 'its'), ('database', 'database'), ('to', 'to'), ('improve', 'improve'), ('the', 'the'), ('performance', 'performance'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('information', 'takes'), 'obj'), (('from', 'user'), 'case'), (('the', 'user'), 'det'), (('user', 'takes'), 'obl'), (('and', 'sends'), 'cc'), (('sends', 'takes'), 'conj'), (('back', 'sends'), 'advmod'), (('to', 'database'), 'case'), (('its', 'database'), 'nmod:poss'), (('database', 'sends'), 'obl'), (('to', 'improve'), 'mark'), (('improve', 'sends'), 'advcl'), (('the', 'performance'), 'det'), (('performance', 'improve'), 'obj'), (('.', 'takes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 4. Product recommendations: Machine learning is widely used by various e-commerce and entertainment companies such as Amazon, Netflix, etc., for product recommendation to the user. 

Tokens are: 
>> ['4', '.', 'Product', 'recommendations', ':', 'Machine', 'learning', 'is', 'widely', 'used', 'by', 'various', 'e-commerce', 'and', 'entertainment', 'companies', 'such', 'as', 'Amazon', ',', 'Netflix', ',', 'etc.', ',', 'for', 'product', 'recommendation', 'to', 'the', 'user', '.'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('.', 'PUNCT'), ('Product', 'NOUN'), ('recommendations', 'NOUN'), (':', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('widely', 'ADV'), ('used', 'VERB'), ('by', 'ADP'), ('various', 'ADJ'), ('e-commerce', 'NOUN'), ('and', 'CCONJ'), ('entertainment', 'NOUN'), ('companies', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Amazon', 'PROPN'), (',', 'PUNCT'), ('Netflix', 'PROPN'), (',', 'PUNCT'), ('etc.', 'X'), (',', 'PUNCT'), ('for', 'ADP'), ('product', 'NOUN'), ('recommendation', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('user', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('4', 'LS'), ('.', '.'), ('Product', 'NN'), ('recommendations', 'NNS'), (':', ':'), ('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('widely', 'RB'), ('used', 'VBN'), ('by', 'IN'), ('various', 'JJ'), ('e-commerce', 'NN'), ('and', 'CC'), ('entertainment', 'NN'), ('companies', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Amazon', 'NNP'), (',', ','), ('Netflix', 'NNP'), (',', ','), ('etc.', 'FW'), (',', ','), ('for', 'IN'), ('product', 'NN'), ('recommendation', 'NN'), ('to', 'IN'), ('the', 'DT'), ('user', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('4', '4'), ('.', '.'), ('Product', 'product'), ('recommendations', 'recommendation'), (':', ':'), ('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('widely', 'widely'), ('used', 'use'), ('by', 'by'), ('various', 'various'), ('e-commerce', 'e-commerce'), ('and', 'and'), ('entertainment', 'entertainment'), ('companies', 'company'), ('such', 'such'), ('as', 'as'), ('Amazon', 'Amazon'), (',', ','), ('Netflix', 'Netflix'), (',', ','), ('etc.', 'etc.'), (',', ','), ('for', 'for'), ('product', 'product'), ('recommendation', 'recommendation'), ('to', 'to'), ('the', 'the'), ('user', 'user'), ('.', '.')] 

 Dependency tags are: 
>> [(('4', 'recommendations'), 'nummod'), (('.', '4'), 'punct'), (('Product', 'recommendations'), 'compound'), (('recommendations', 'root'), 'root'), ((':', 'recommendations'), 'punct'), (('Machine', 'learning'), 'compound'), (('learning', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('widely', 'used'), 'advmod'), (('used', 'recommendations'), 'parataxis'), (('by', 'companies'), 'case'), (('various', 'companies'), 'amod'), (('e-commerce', 'used'), 'obl'), (('and', 'entertainment'), 'cc'), (('entertainment', 'e-commerce'), 'conj'), (('companies', 'e-commerce'), 'conj'), (('such', 'Amazon'), 'case'), (('as', 'such'), 'fixed'), (('Amazon', 'companies'), 'nmod'), ((',', 'Netflix'), 'punct'), (('Netflix', 'Amazon'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'Amazon'), 'conj'), ((',', 'recommendation'), 'punct'), (('for', 'recommendation'), 'case'), (('product', 'recommendation'), 'compound'), (('recommendation', 'Amazon'), 'nmod'), (('to', 'user'), 'case'), (('the', 'user'), 'det'), (('user', 'recommendation'), 'nmod'), (('.', 'recommendations'), 'punct')]

 Named Entities are: 
>> [('4', 'CARDINAL'), ('Amazon', 'ORG'), ('Netflix', 'ORG')]

========================== Sentence 19 ===========================

 Whenever we search for some product on Amazon, then we started getting an advertisement for the same product while internet surfing on the same browser and this is because of machine learning. 

Tokens are: 
>> ['Whenever', 'we', 'search', 'for', 'some', 'product', 'on', 'Amazon', ',', 'then', 'we', 'started', 'getting', 'an', 'advertisement', 'for', 'the', 'same', 'product', 'while', 'internet', 'surfing', 'on', 'the', 'same', 'browser', 'and', 'this', 'is', 'because', 'of', 'machine', 'learning', '.'] 

 UPOS tags are: 
>> [('Whenever', 'SCONJ'), ('we', 'PRON'), ('search', 'VERB'), ('for', 'ADP'), ('some', 'DET'), ('product', 'NOUN'), ('on', 'ADP'), ('Amazon', 'PROPN'), (',', 'PUNCT'), ('then', 'ADV'), ('we', 'PRON'), ('started', 'VERB'), ('getting', 'VERB'), ('an', 'DET'), ('advertisement', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('product', 'NOUN'), ('while', 'SCONJ'), ('internet', 'NOUN'), ('surfing', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('browser', 'NOUN'), ('and', 'CCONJ'), ('this', 'PRON'), ('is', 'AUX'), ('because', 'ADP'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Whenever', 'WRB'), ('we', 'PRP'), ('search', 'VBP'), ('for', 'IN'), ('some', 'DT'), ('product', 'NN'), ('on', 'IN'), ('Amazon', 'NNP'), (',', ','), ('then', 'RB'), ('we', 'PRP'), ('started', 'VBD'), ('getting', 'VBG'), ('an', 'DT'), ('advertisement', 'NN'), ('for', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('product', 'NN'), ('while', 'IN'), ('internet', 'NN'), ('surfing', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('browser', 'NN'), ('and', 'CC'), ('this', 'DT'), ('is', 'VBZ'), ('because', 'IN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Whenever', 'whenever'), ('we', 'we'), ('search', 'search'), ('for', 'for'), ('some', 'some'), ('product', 'product'), ('on', 'on'), ('Amazon', 'Amazon'), (',', ','), ('then', 'then'), ('we', 'we'), ('started', 'start'), ('getting', 'get'), ('an', 'a'), ('advertisement', 'advertisement'), ('for', 'for'), ('the', 'the'), ('same', 'same'), ('product', 'product'), ('while', 'while'), ('internet', 'internet'), ('surfing', 'surfing'), ('on', 'on'), ('the', 'the'), ('same', 'same'), ('browser', 'browser'), ('and', 'and'), ('this', 'this'), ('is', 'be'), ('because', 'because'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('Whenever', 'search'), 'mark'), (('we', 'search'), 'nsubj'), (('search', 'started'), 'advcl'), (('for', 'product'), 'case'), (('some', 'product'), 'det'), (('product', 'search'), 'obl'), (('on', 'Amazon'), 'case'), (('Amazon', 'product'), 'nmod'), ((',', 'started'), 'punct'), (('then', 'started'), 'advmod'), (('we', 'started'), 'nsubj'), (('started', 'root'), 'root'), (('getting', 'started'), 'xcomp'), (('an', 'advertisement'), 'det'), (('advertisement', 'getting'), 'obj'), (('for', 'product'), 'case'), (('the', 'product'), 'det'), (('same', 'product'), 'amod'), (('product', 'getting'), 'obl'), (('while', 'surfing'), 'mark'), (('internet', 'surfing'), 'nsubj'), (('surfing', 'getting'), 'advcl'), (('on', 'browser'), 'case'), (('the', 'browser'), 'det'), (('same', 'browser'), 'amod'), (('browser', 'surfing'), 'obl'), (('and', 'learning'), 'cc'), (('this', 'learning'), 'nsubj'), (('is', 'learning'), 'cop'), (('because', 'learning'), 'case'), (('of', 'because'), 'fixed'), (('machine', 'learning'), 'compound'), (('learning', 'started'), 'conj'), (('.', 'started'), 'punct')]

 Named Entities are: 
>> [('Amazon', 'ORG')]

========================== Sentence 20 ===========================

 Google understands the user interest using various machine learning algorithms and suggests the product as per customer interest. 

Tokens are: 
>> ['Google', 'understands', 'the', 'user', 'interest', 'using', 'various', 'machine', 'learning', 'algorithms', 'and', 'suggests', 'the', 'product', 'as', 'per', 'customer', 'interest', '.'] 

 UPOS tags are: 
>> [('Google', 'PROPN'), ('understands', 'VERB'), ('the', 'DET'), ('user', 'NOUN'), ('interest', 'NOUN'), ('using', 'VERB'), ('various', 'ADJ'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('and', 'CCONJ'), ('suggests', 'VERB'), ('the', 'DET'), ('product', 'NOUN'), ('as', 'ADP'), ('per', 'ADP'), ('customer', 'NOUN'), ('interest', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Google', 'NNP'), ('understands', 'VBZ'), ('the', 'DT'), ('user', 'NN'), ('interest', 'NN'), ('using', 'VBG'), ('various', 'JJ'), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'NNS'), ('and', 'CC'), ('suggests', 'VBZ'), ('the', 'DT'), ('product', 'NN'), ('as', 'IN'), ('per', 'IN'), ('customer', 'NN'), ('interest', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Google', 'Google'), ('understands', 'understand'), ('the', 'the'), ('user', 'user'), ('interest', 'interest'), ('using', 'use'), ('various', 'various'), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('and', 'and'), ('suggests', 'suggest'), ('the', 'the'), ('product', 'product'), ('as', 'as'), ('per', 'per'), ('customer', 'customer'), ('interest', 'interest'), ('.', '.')] 

 Dependency tags are: 
>> [(('Google', 'understands'), 'nsubj'), (('understands', 'root'), 'root'), (('the', 'interest'), 'det'), (('user', 'interest'), 'compound'), (('interest', 'understands'), 'obj'), (('using', 'interest'), 'acl'), (('various', 'algorithms'), 'amod'), (('machine', 'algorithms'), 'compound'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'using'), 'obj'), (('and', 'suggests'), 'cc'), (('suggests', 'understands'), 'conj'), (('the', 'product'), 'det'), (('product', 'suggests'), 'obj'), (('as', 'interest'), 'case'), (('per', 'interest'), 'case'), (('customer', 'interest'), 'compound'), (('interest', 'suggests'), 'obl'), (('.', 'understands'), 'punct')]

 Named Entities are: 
>> [('Google', 'ORG')]

========================== Sentence 21 ===========================

 As similar, when we use Netflix, we find some recommendations for entertainment series, movies, etc., and this is also done with the help of machine learning. 

Tokens are: 
>> ['As', 'similar', ',', 'when', 'we', 'use', 'Netflix', ',', 'we', 'find', 'some', 'recommendations', 'for', 'entertainment', 'series', ',', 'movies', ',', 'etc.', ',', 'and', 'this', 'is', 'also', 'done', 'with', 'the', 'help', 'of', 'machine', 'learning', '.'] 

 UPOS tags are: 
>> [('As', 'ADV'), ('similar', 'ADJ'), (',', 'PUNCT'), ('when', 'SCONJ'), ('we', 'PRON'), ('use', 'VERB'), ('Netflix', 'PROPN'), (',', 'PUNCT'), ('we', 'PRON'), ('find', 'VERB'), ('some', 'DET'), ('recommendations', 'NOUN'), ('for', 'ADP'), ('entertainment', 'NOUN'), ('series', 'NOUN'), (',', 'PUNCT'), ('movies', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X'), (',', 'PUNCT'), ('and', 'CCONJ'), ('this', 'PRON'), ('is', 'AUX'), ('also', 'ADV'), ('done', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('help', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'RB'), ('similar', 'JJ'), (',', ','), ('when', 'WRB'), ('we', 'PRP'), ('use', 'VBP'), ('Netflix', 'NNP'), (',', ','), ('we', 'PRP'), ('find', 'VBP'), ('some', 'DT'), ('recommendations', 'NNS'), ('for', 'IN'), ('entertainment', 'NN'), ('series', 'NN'), (',', ','), ('movies', 'NNS'), (',', ','), ('etc.', 'FW'), (',', ','), ('and', 'CC'), ('this', 'DT'), ('is', 'VBZ'), ('also', 'RB'), ('done', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('help', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('similar', 'similar'), (',', ','), ('when', 'when'), ('we', 'we'), ('use', 'use'), ('Netflix', 'Netflix'), (',', ','), ('we', 'we'), ('find', 'find'), ('some', 'some'), ('recommendations', 'recommendation'), ('for', 'for'), ('entertainment', 'entertainment'), ('series', 'series'), (',', ','), ('movies', 'movie'), (',', ','), ('etc.', 'etc.'), (',', ','), ('and', 'and'), ('this', 'this'), ('is', 'be'), ('also', 'also'), ('done', 'do'), ('with', 'with'), ('the', 'the'), ('help', 'help'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'similar'), 'advmod'), (('similar', 'find'), 'advmod'), ((',', 'find'), 'punct'), (('when', 'use'), 'mark'), (('we', 'use'), 'nsubj'), (('use', 'find'), 'advcl'), (('Netflix', 'use'), 'obj'), ((',', 'find'), 'punct'), (('we', 'find'), 'nsubj'), (('find', 'root'), 'root'), (('some', 'recommendations'), 'det'), (('recommendations', 'find'), 'obj'), (('for', 'series'), 'case'), (('entertainment', 'series'), 'compound'), (('series', 'recommendations'), 'nmod'), ((',', 'movies'), 'punct'), (('movies', 'series'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'series'), 'conj'), ((',', 'done'), 'punct'), (('and', 'done'), 'cc'), (('this', 'done'), 'nsubj:pass'), (('is', 'done'), 'aux:pass'), (('also', 'done'), 'advmod'), (('done', 'find'), 'conj'), (('with', 'help'), 'case'), (('the', 'help'), 'det'), (('help', 'done'), 'obl'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'help'), 'nmod'), (('.', 'find'), 'punct')]

 Named Entities are: 
>> [('Netflix', 'ORG')]

========================== Sentence 22 ===========================

 5. Self-driving cars: 

Tokens are: 
>> ['5', '.', 'Self-driving', 'cars', ':'] 

 UPOS tags are: 
>> [('5', 'NUM'), ('.', 'PUNCT'), ('Self-driving', 'VERB'), ('cars', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('5', 'LS'), ('.', '.'), ('Self-driving', 'VBG'), ('cars', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('5', '5'), ('.', '.'), ('Self-driving', 'self-drive'), ('cars', 'car'), (':', ':')] 

 Dependency tags are: 
>> [(('5', 'Self-driving'), 'nummod'), (('.', '5'), 'punct'), (('Self-driving', 'root'), 'root'), (('cars', 'Self-driving'), 'obj'), ((':', 'Self-driving'), 'punct')]

 Named Entities are: 
>> [('5', 'CARDINAL')]

========================== Sentence 23 ===========================

 One of the most exciting applications of machine learning is self-driving cars. 

Tokens are: 
>> ['One', 'of', 'the', 'most', 'exciting', 'applications', 'of', 'machine', 'learning', 'is', 'self-driving', 'cars', '.'] 

 UPOS tags are: 
>> [('One', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('most', 'ADV'), ('exciting', 'ADJ'), ('applications', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('self-driving', 'VERB'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('One', 'CD'), ('of', 'IN'), ('the', 'DT'), ('most', 'RBS'), ('exciting', 'JJ'), ('applications', 'NNS'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('self-driving', 'VBG'), ('cars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('One', 'one'), ('of', 'of'), ('the', 'the'), ('most', 'most'), ('exciting', 'exciting'), ('applications', 'application'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('self-driving', 'self-drive'), ('cars', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('One', 'self-driving'), 'nsubj'), (('of', 'applications'), 'case'), (('the', 'applications'), 'det'), (('most', 'exciting'), 'advmod'), (('exciting', 'applications'), 'amod'), (('applications', 'One'), 'nmod'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'applications'), 'nmod'), (('is', 'self-driving'), 'aux'), (('self-driving', 'root'), 'root'), (('cars', 'self-driving'), 'obj'), (('.', 'self-driving'), 'punct')]

 Named Entities are: 
>> [('One', 'CARDINAL')]

========================== Sentence 24 ===========================

 Machine learning plays a significant role in self-driving cars. 

Tokens are: 
>> ['Machine', 'learning', 'plays', 'a', 'significant', 'role', 'in', 'self-driving', 'cars', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('plays', 'VERB'), ('a', 'DET'), ('significant', 'ADJ'), ('role', 'NOUN'), ('in', 'SCONJ'), ('self-driving', 'VERB'), ('cars', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('plays', 'VBZ'), ('a', 'DT'), ('significant', 'JJ'), ('role', 'NN'), ('in', 'IN'), ('self-driving', 'VBG'), ('cars', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('plays', 'play'), ('a', 'a'), ('significant', 'significant'), ('role', 'role'), ('in', 'in'), ('self-driving', 'self-drive'), ('cars', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'plays'), 'nsubj'), (('plays', 'root'), 'root'), (('a', 'role'), 'det'), (('significant', 'role'), 'amod'), (('role', 'plays'), 'obj'), (('in', 'self-driving'), 'mark'), (('self-driving', 'role'), 'acl'), (('cars', 'self-driving'), 'obj'), (('.', 'plays'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 Tesla, the most popular car manufacturing company is working on self-driving car. 

Tokens are: 
>> ['Tesla', ',', 'the', 'most', 'popular', 'car', 'manufacturing', 'company', 'is', 'working', 'on', 'self-driving', 'car', '.'] 

 UPOS tags are: 
>> [('Tesla', 'PROPN'), (',', 'PUNCT'), ('the', 'DET'), ('most', 'ADV'), ('popular', 'ADJ'), ('car', 'NOUN'), ('manufacturing', 'NOUN'), ('company', 'NOUN'), ('is', 'AUX'), ('working', 'VERB'), ('on', 'ADP'), ('self-driving', 'VERB'), ('car', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Tesla', 'NNP'), (',', ','), ('the', 'DT'), ('most', 'RBS'), ('popular', 'JJ'), ('car', 'NN'), ('manufacturing', 'NN'), ('company', 'NN'), ('is', 'VBZ'), ('working', 'VBG'), ('on', 'IN'), ('self-driving', 'VBG'), ('car', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Tesla', 'Tesla'), (',', ','), ('the', 'the'), ('most', 'most'), ('popular', 'popular'), ('car', 'car'), ('manufacturing', 'manufacturing'), ('company', 'company'), ('is', 'be'), ('working', 'work'), ('on', 'on'), ('self-driving', 'self-drive'), ('car', 'car'), ('.', '.')] 

 Dependency tags are: 
>> [(('Tesla', 'working'), 'nsubj'), ((',', 'working'), 'punct'), (('the', 'company'), 'det'), (('most', 'popular'), 'advmod'), (('popular', 'company'), 'amod'), (('car', 'company'), 'compound'), (('manufacturing', 'company'), 'compound'), (('company', 'working'), 'nsubj'), (('is', 'working'), 'aux'), (('working', 'root'), 'root'), (('on', 'car'), 'case'), (('self-driving', 'car'), 'amod'), (('car', 'working'), 'obl'), (('.', 'working'), 'punct')]

 Named Entities are: 
>> [('Tesla', 'ORG')]

========================== Sentence 26 ===========================

 It is using unsupervised learning method to train the car models to detect people and objects while driving. 

Tokens are: 
>> ['It', 'is', 'using', 'unsupervised', 'learning', 'method', 'to', 'train', 'the', 'car', 'models', 'to', 'detect', 'people', 'and', 'objects', 'while', 'driving', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('using', 'VERB'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('method', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('the', 'DET'), ('car', 'NOUN'), ('models', 'NOUN'), ('to', 'PART'), ('detect', 'VERB'), ('people', 'NOUN'), ('and', 'CCONJ'), ('objects', 'NOUN'), ('while', 'SCONJ'), ('driving', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('using', 'VBG'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('method', 'NN'), ('to', 'TO'), ('train', 'VB'), ('the', 'DT'), ('car', 'NN'), ('models', 'NNS'), ('to', 'TO'), ('detect', 'VB'), ('people', 'NNS'), ('and', 'CC'), ('objects', 'NNS'), ('while', 'IN'), ('driving', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('using', 'use'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('method', 'method'), ('to', 'to'), ('train', 'train'), ('the', 'the'), ('car', 'car'), ('models', 'model'), ('to', 'to'), ('detect', 'detect'), ('people', 'people'), ('and', 'and'), ('objects', 'object'), ('while', 'while'), ('driving', 'drive'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'using'), 'nsubj'), (('is', 'using'), 'aux'), (('using', 'root'), 'root'), (('unsupervised', 'method'), 'amod'), (('learning', 'method'), 'compound'), (('method', 'using'), 'obj'), (('to', 'train'), 'mark'), (('train', 'method'), 'acl'), (('the', 'models'), 'det'), (('car', 'models'), 'compound'), (('models', 'train'), 'obj'), (('to', 'detect'), 'mark'), (('detect', 'train'), 'advcl'), (('people', 'detect'), 'obj'), (('and', 'objects'), 'cc'), (('objects', 'people'), 'conj'), (('while', 'driving'), 'mark'), (('driving', 'detect'), 'advcl'), (('.', 'using'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 27 ===========================

 6. Email Spam and Malware Filtering: Whenever we receive a new email, it is filtered automatically as important, normal, and spam. 

Tokens are: 
>> ['6', '.', 'Email', 'Spam', 'and', 'Malware', 'Filtering', ':', 'Whenever', 'we', 'receive', 'a', 'new', 'email', ',', 'it', 'is', 'filtered', 'automatically', 'as', 'important', ',', 'normal', ',', 'and', 'spam', '.'] 

 UPOS tags are: 
>> [('6', 'NUM'), ('.', 'PUNCT'), ('Email', 'NOUN'), ('Spam', 'NOUN'), ('and', 'CCONJ'), ('Malware', 'NOUN'), ('Filtering', 'NOUN'), (':', 'PUNCT'), ('Whenever', 'SCONJ'), ('we', 'PRON'), ('receive', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('email', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('is', 'AUX'), ('filtered', 'VERB'), ('automatically', 'ADV'), ('as', 'ADP'), ('important', 'ADJ'), (',', 'PUNCT'), ('normal', 'ADJ'), (',', 'PUNCT'), ('and', 'CCONJ'), ('spam', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('6', 'LS'), ('.', '.'), ('Email', 'NN'), ('Spam', 'NN'), ('and', 'CC'), ('Malware', 'NN'), ('Filtering', 'NN'), (':', ':'), ('Whenever', 'WRB'), ('we', 'PRP'), ('receive', 'VBP'), ('a', 'DT'), ('new', 'JJ'), ('email', 'NN'), (',', ','), ('it', 'PRP'), ('is', 'VBZ'), ('filtered', 'VBN'), ('automatically', 'RB'), ('as', 'IN'), ('important', 'JJ'), (',', ','), ('normal', 'JJ'), (',', ','), ('and', 'CC'), ('spam', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('6', '6'), ('.', '.'), ('Email', 'email'), ('Spam', 'spam'), ('and', 'and'), ('Malware', 'malware'), ('Filtering', 'filtering'), (':', ':'), ('Whenever', 'whenever'), ('we', 'we'), ('receive', 'receive'), ('a', 'a'), ('new', 'new'), ('email', 'email'), (',', ','), ('it', 'it'), ('is', 'be'), ('filtered', 'filter'), ('automatically', 'automatically'), ('as', 'as'), ('important', 'important'), (',', ','), ('normal', 'normal'), (',', ','), ('and', 'and'), ('spam', 'spam'), ('.', '.')] 

 Dependency tags are: 
>> [(('6', 'filtered'), 'nummod'), (('.', '6'), 'punct'), (('Email', 'Spam'), 'compound'), (('Spam', 'root'), 'root'), (('and', 'Filtering'), 'cc'), (('Malware', 'Filtering'), 'compound'), (('Filtering', 'Spam'), 'conj'), ((':', 'Spam'), 'punct'), (('Whenever', 'receive'), 'mark'), (('we', 'receive'), 'nsubj'), (('receive', 'filtered'), 'advcl'), (('a', 'email'), 'det'), (('new', 'email'), 'amod'), (('email', 'receive'), 'obj'), ((',', 'filtered'), 'punct'), (('it', 'filtered'), 'nsubj:pass'), (('is', 'filtered'), 'aux:pass'), (('filtered', 'Spam'), 'parataxis'), (('automatically', 'filtered'), 'advmod'), (('as', 'important'), 'case'), (('important', 'filtered'), 'obl'), ((',', 'normal'), 'punct'), (('normal', 'important'), 'conj'), ((',', 'spam'), 'punct'), (('and', 'spam'), 'cc'), (('spam', 'important'), 'conj'), (('.', 'filtered'), 'punct')]

 Named Entities are: 
>> [('6', 'CARDINAL')]

========================== Sentence 28 ===========================

 We always receive an important mail in our inbox with the important symbol and spam emails in our spam box, and the technology behind this is Machine learning. 

Tokens are: 
>> ['We', 'always', 'receive', 'an', 'important', 'mail', 'in', 'our', 'inbox', 'with', 'the', 'important', 'symbol', 'and', 'spam', 'emails', 'in', 'our', 'spam', 'box', ',', 'and', 'the', 'technology', 'behind', 'this', 'is', 'Machine', 'learning', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('always', 'ADV'), ('receive', 'VERB'), ('an', 'DET'), ('important', 'ADJ'), ('mail', 'NOUN'), ('in', 'ADP'), ('our', 'PRON'), ('inbox', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('important', 'ADJ'), ('symbol', 'NOUN'), ('and', 'CCONJ'), ('spam', 'NOUN'), ('emails', 'NOUN'), ('in', 'ADP'), ('our', 'PRON'), ('spam', 'NOUN'), ('box', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('technology', 'NOUN'), ('behind', 'ADP'), ('this', 'PRON'), ('is', 'AUX'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('always', 'RB'), ('receive', 'VBP'), ('an', 'DT'), ('important', 'JJ'), ('mail', 'NN'), ('in', 'IN'), ('our', 'PRP$'), ('inbox', 'NN'), ('with', 'IN'), ('the', 'DT'), ('important', 'JJ'), ('symbol', 'NN'), ('and', 'CC'), ('spam', 'NN'), ('emails', 'NNS'), ('in', 'IN'), ('our', 'PRP$'), ('spam', 'NN'), ('box', 'NN'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('technology', 'NN'), ('behind', 'IN'), ('this', 'DT'), ('is', 'VBZ'), ('Machine', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('always', 'always'), ('receive', 'receive'), ('an', 'a'), ('important', 'important'), ('mail', 'mail'), ('in', 'in'), ('our', 'we'), ('inbox', 'inbox'), ('with', 'with'), ('the', 'the'), ('important', 'important'), ('symbol', 'symbol'), ('and', 'and'), ('spam', 'spam'), ('emails', 'email'), ('in', 'in'), ('our', 'we'), ('spam', 'spam'), ('box', 'box'), (',', ','), ('and', 'and'), ('the', 'the'), ('technology', 'technology'), ('behind', 'behind'), ('this', 'this'), ('is', 'be'), ('Machine', 'Machine'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'receive'), 'nsubj'), (('always', 'receive'), 'advmod'), (('receive', 'root'), 'root'), (('an', 'mail'), 'det'), (('important', 'mail'), 'amod'), (('mail', 'receive'), 'obj'), (('in', 'inbox'), 'case'), (('our', 'inbox'), 'nmod:poss'), (('inbox', 'receive'), 'obl'), (('with', 'symbol'), 'case'), (('the', 'symbol'), 'det'), (('important', 'symbol'), 'amod'), (('symbol', 'receive'), 'obl'), (('and', 'emails'), 'cc'), (('spam', 'emails'), 'compound'), (('emails', 'symbol'), 'conj'), (('in', 'box'), 'case'), (('our', 'box'), 'nmod:poss'), (('spam', 'box'), 'compound'), (('box', 'symbol'), 'nmod'), ((',', 'learning'), 'punct'), (('and', 'learning'), 'cc'), (('the', 'technology'), 'det'), (('technology', 'learning'), 'nsubj'), (('behind', 'this'), 'case'), (('this', 'technology'), 'nmod'), (('is', 'learning'), 'cop'), (('Machine', 'learning'), 'compound'), (('learning', 'receive'), 'conj'), (('.', 'receive'), 'punct')]

 Named Entities are: 
>> [('Machine', 'PRODUCT')]

========================== Sentence 29 ===========================

 Below are some spam filters used by Gmail: · Content Filter · Header filter · General blacklists filter · Rules-based filters · Permission filters Some machine learning algorithms such as Multi-Layer Perceptron, Decision tree, and Naïve Bayes classifier are used for email spam filtering and malware detection. 

Tokens are: 
>> ['Below', 'are', 'some', 'spam', 'filters', 'used', 'by', 'Gmail', ':', '·', 'Content', 'Filter', '·', 'Header', 'filter', '·', 'General', 'blacklists', 'filter', '·', 'Rules', '-', 'based', 'filters', '·', 'Permission', 'filters', 'Some', 'machine', 'learning', 'algorithms', 'such', 'as', 'Multi-Layer', 'Perceptron', ',', 'Decision', 'tree', ',', 'and', 'Naïve', 'Bayes', 'classifier', 'are', 'used', 'for', 'email', 'spam', 'filtering', 'and', 'malware', 'detection', '.'] 

 UPOS tags are: 
>> [('Below', 'ADV'), ('are', 'VERB'), ('some', 'DET'), ('spam', 'NOUN'), ('filters', 'NOUN'), ('used', 'VERB'), ('by', 'ADP'), ('Gmail', 'PROPN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('Content', 'NOUN'), ('Filter', 'NOUN'), ('·', 'PUNCT'), ('Header', 'NOUN'), ('filter', 'NOUN'), ('·', 'PUNCT'), ('General', 'ADJ'), ('blacklists', 'NOUN'), ('filter', 'NOUN'), ('·', 'PUNCT'), ('Rules', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('filters', 'NOUN'), ('·', 'PUNCT'), ('Permission', 'NOUN'), ('filters', 'NOUN'), ('Some', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Multi-Layer', 'ADJ'), ('Perceptron', 'PROPN'), (',', 'PUNCT'), ('Decision', 'NOUN'), ('tree', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Naïve', 'ADJ'), ('Bayes', 'PROPN'), ('classifier', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('email', 'NOUN'), ('spam', 'NOUN'), ('filtering', 'NOUN'), ('and', 'CCONJ'), ('malware', 'NOUN'), ('detection', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Below', 'RB'), ('are', 'VBP'), ('some', 'DT'), ('spam', 'NN'), ('filters', 'NNS'), ('used', 'VBN'), ('by', 'IN'), ('Gmail', 'NNP'), (':', ':'), ('·', 'NFP'), ('Content', 'NN'), ('Filter', 'NN'), ('·', 'NFP'), ('Header', 'NN'), ('filter', 'NN'), ('·', 'NFP'), ('General', 'JJ'), ('blacklists', 'NNS'), ('filter', 'NN'), ('·', 'NFP'), ('Rules', 'NNS'), ('-', 'HYPH'), ('based', 'VBN'), ('filters', 'NNS'), ('·', 'NFP'), ('Permission', 'NN'), ('filters', 'NNS'), ('Some', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Multi-Layer', 'NNP'), ('Perceptron', 'NNP'), (',', ','), ('Decision', 'NN'), ('tree', 'NN'), (',', ','), ('and', 'CC'), ('Naïve', 'JJ'), ('Bayes', 'NNPS'), ('classifier', 'NN'), ('are', 'VBP'), ('used', 'VBN'), ('for', 'IN'), ('email', 'NN'), ('spam', 'NN'), ('filtering', 'NN'), ('and', 'CC'), ('malware', 'NN'), ('detection', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Below', 'below'), ('are', 'be'), ('some', 'some'), ('spam', 'spam'), ('filters', 'filter'), ('used', 'use'), ('by', 'by'), ('Gmail', 'Gmail'), (':', ':'), ('·', '·'), ('Content', 'Content'), ('Filter', 'filter'), ('·', '·'), ('Header', 'header'), ('filter', 'filter'), ('·', '·'), ('General', 'General'), ('blacklists', 'blacklist'), ('filter', 'filter'), ('·', '·'), ('Rules', 'rule'), ('-', '-'), ('based', 'base'), ('filters', 'filter'), ('·', '·'), ('Permission', 'permission'), ('filters', 'filter'), ('Some', 'some'), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('such', 'such'), ('as', 'as'), ('Multi-Layer', 'Multi-Layer'), ('Perceptron', 'Perceptron'), (',', ','), ('Decision', 'decision'), ('tree', 'tree'), (',', ','), ('and', 'and'), ('Naïve', 'naïve'), ('Bayes', 'Bayes'), ('classifier', 'classifier'), ('are', 'be'), ('used', 'use'), ('for', 'for'), ('email', 'email'), ('spam', 'spam'), ('filtering', 'filter'), ('and', 'and'), ('malware', 'malware'), ('detection', 'detection'), ('.', '.')] 

 Dependency tags are: 
>> [(('Below', 'are'), 'advmod'), (('are', 'root'), 'root'), (('some', 'filters'), 'det'), (('spam', 'filters'), 'compound'), (('filters', 'are'), 'nsubj'), (('used', 'filters'), 'acl'), (('by', 'Gmail'), 'case'), (('Gmail', 'used'), 'obl'), ((':', 'Filter'), 'punct'), (('·', 'Filter'), 'punct'), (('Content', 'Filter'), 'compound'), (('Filter', 'filters'), 'appos'), (('·', 'Filter'), 'punct'), (('Header', 'filter'), 'compound'), (('filter', 'Filter'), 'appos'), (('·', 'Filter'), 'punct'), (('General', 'filter'), 'amod'), (('blacklists', 'filter'), 'compound'), (('filter', 'Filter'), 'conj'), (('·', 'filter'), 'punct'), (('Rules', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'filters'), 'amod'), (('filters', 'Filter'), 'conj'), (('·', 'Filter'), 'punct'), (('Permission', 'filters'), 'compound'), (('filters', 'Filter'), 'conj'), (('Some', 'algorithms'), 'det'), (('machine', 'algorithms'), 'compound'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'Filter'), 'conj'), (('such', 'Perceptron'), 'case'), (('as', 'such'), 'fixed'), (('Multi-Layer', 'Perceptron'), 'amod'), (('Perceptron', 'algorithms'), 'nmod'), ((',', 'tree'), 'punct'), (('Decision', 'tree'), 'compound'), (('tree', 'Perceptron'), 'conj'), ((',', 'classifier'), 'punct'), (('and', 'classifier'), 'cc'), (('Naïve', 'classifier'), 'amod'), (('Bayes', 'classifier'), 'compound'), (('classifier', 'Perceptron'), 'conj'), (('are', 'used'), 'aux:pass'), (('used', 'are'), 'parataxis'), (('for', 'filtering'), 'case'), (('email', 'filtering'), 'compound'), (('spam', 'filtering'), 'compound'), (('filtering', 'used'), 'obl'), (('and', 'detection'), 'cc'), (('malware', 'detection'), 'compound'), (('detection', 'filtering'), 'conj'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> [('Gmail', 'PRODUCT'), ('Multi-Layer Perceptron', 'PRODUCT'), ('Naïve Bayes', 'PRODUCT')]

========================== Sentence 30 ===========================

 7. Virtual Personal Assistant: 

Tokens are: 
>> ['7', '.', 'Virtual', 'Personal', 'Assistant', ':'] 

 UPOS tags are: 
>> [('7', 'NUM'), ('.', 'PUNCT'), ('Virtual', 'ADJ'), ('Personal', 'ADJ'), ('Assistant', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('7', 'LS'), ('.', '.'), ('Virtual', 'JJ'), ('Personal', 'JJ'), ('Assistant', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('7', '7'), ('.', '.'), ('Virtual', 'virtual'), ('Personal', 'personal'), ('Assistant', 'assistant'), (':', ':')] 

 Dependency tags are: 
>> [(('7', 'Assistant'), 'nummod'), (('.', '7'), 'punct'), (('Virtual', 'Assistant'), 'amod'), (('Personal', 'Assistant'), 'amod'), (('Assistant', 'root'), 'root'), ((':', 'Assistant'), 'punct')]

 Named Entities are: 
>> [('7', 'CARDINAL')]

========================== Sentence 31 ===========================

 We have various virtual personal assistants such as Google assistant, Alexa, Cortana, Siri. 

Tokens are: 
>> ['We', 'have', 'various', 'virtual', 'personal', 'assistants', 'such', 'as', 'Google', 'assistant', ',', 'Alexa', ',', 'Cortana', ',', 'Siri', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('have', 'VERB'), ('various', 'ADJ'), ('virtual', 'ADJ'), ('personal', 'ADJ'), ('assistants', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Google', 'PROPN'), ('assistant', 'NOUN'), (',', 'PUNCT'), ('Alexa', 'PROPN'), (',', 'PUNCT'), ('Cortana', 'PROPN'), (',', 'PUNCT'), ('Siri', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('have', 'VBP'), ('various', 'JJ'), ('virtual', 'JJ'), ('personal', 'JJ'), ('assistants', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Google', 'NNP'), ('assistant', 'NN'), (',', ','), ('Alexa', 'NNP'), (',', ','), ('Cortana', 'NNP'), (',', ','), ('Siri', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('have', 'have'), ('various', 'various'), ('virtual', 'virtual'), ('personal', 'personal'), ('assistants', 'assistant'), ('such', 'such'), ('as', 'as'), ('Google', 'Google'), ('assistant', 'assistant'), (',', ','), ('Alexa', 'Alexa'), (',', ','), ('Cortana', 'Cortana'), (',', ','), ('Siri', 'Siri'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('various', 'assistants'), 'amod'), (('virtual', 'assistants'), 'amod'), (('personal', 'assistants'), 'amod'), (('assistants', 'have'), 'obj'), (('such', 'Google'), 'case'), (('as', 'such'), 'fixed'), (('Google', 'assistants'), 'nmod'), (('assistant', 'Google'), 'flat'), ((',', 'Alexa'), 'punct'), (('Alexa', 'Google'), 'conj'), ((',', 'Cortana'), 'punct'), (('Cortana', 'Google'), 'conj'), ((',', 'Siri'), 'punct'), (('Siri', 'Google'), 'conj'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> [('Google', 'ORG'), ('Alexa', 'PERSON'), ('Cortana', 'PERSON'), ('Siri', 'PERSON')]

========================== Sentence 32 ===========================

 As the name suggests, they help us in finding the information using our voice instruction. 

Tokens are: 
>> ['As', 'the', 'name', 'suggests', ',', 'they', 'help', 'us', 'in', 'finding', 'the', 'information', 'using', 'our', 'voice', 'instruction', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('the', 'DET'), ('name', 'NOUN'), ('suggests', 'VERB'), (',', 'PUNCT'), ('they', 'PRON'), ('help', 'VERB'), ('us', 'PRON'), ('in', 'SCONJ'), ('finding', 'VERB'), ('the', 'DET'), ('information', 'NOUN'), ('using', 'VERB'), ('our', 'PRON'), ('voice', 'NOUN'), ('instruction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('the', 'DT'), ('name', 'NN'), ('suggests', 'VBZ'), (',', ','), ('they', 'PRP'), ('help', 'VBP'), ('us', 'PRP'), ('in', 'IN'), ('finding', 'VBG'), ('the', 'DT'), ('information', 'NN'), ('using', 'VBG'), ('our', 'PRP$'), ('voice', 'NN'), ('instruction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('the', 'the'), ('name', 'name'), ('suggests', 'suggest'), (',', ','), ('they', 'they'), ('help', 'help'), ('us', 'we'), ('in', 'in'), ('finding', 'find'), ('the', 'the'), ('information', 'information'), ('using', 'use'), ('our', 'we'), ('voice', 'voice'), ('instruction', 'instruction'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'suggests'), 'mark'), (('the', 'name'), 'det'), (('name', 'suggests'), 'nsubj'), (('suggests', 'help'), 'advcl'), ((',', 'help'), 'punct'), (('they', 'help'), 'nsubj'), (('help', 'root'), 'root'), (('us', 'help'), 'obj'), (('in', 'finding'), 'mark'), (('finding', 'help'), 'advcl'), (('the', 'information'), 'det'), (('information', 'finding'), 'obj'), (('using', 'information'), 'acl'), (('our', 'instruction'), 'nmod:poss'), (('voice', 'instruction'), 'compound'), (('instruction', 'using'), 'obj'), (('.', 'help'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 These assistants can help us in various ways just by our voice instructions such as Play music, call someone, Open an email, Scheduling an appointment, etc. 

Tokens are: 
>> ['These', 'assistants', 'can', 'help', 'us', 'in', 'various', 'ways', 'just', 'by', 'our', 'voice', 'instructions', 'such', 'as', 'Play', 'music', ',', 'call', 'someone', ',', 'Open', 'an', 'email', ',', 'Scheduling', 'an', 'appointment', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('assistants', 'NOUN'), ('can', 'AUX'), ('help', 'VERB'), ('us', 'PRON'), ('in', 'ADP'), ('various', 'ADJ'), ('ways', 'NOUN'), ('just', 'ADV'), ('by', 'ADP'), ('our', 'PRON'), ('voice', 'NOUN'), ('instructions', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Play', 'NOUN'), ('music', 'NOUN'), (',', 'PUNCT'), ('call', 'VERB'), ('someone', 'PRON'), (',', 'PUNCT'), ('Open', 'VERB'), ('an', 'DET'), ('email', 'NOUN'), (',', 'PUNCT'), ('Scheduling', 'VERB'), ('an', 'DET'), ('appointment', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('assistants', 'NNS'), ('can', 'MD'), ('help', 'VB'), ('us', 'PRP'), ('in', 'IN'), ('various', 'JJ'), ('ways', 'NNS'), ('just', 'RB'), ('by', 'IN'), ('our', 'PRP$'), ('voice', 'NN'), ('instructions', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Play', 'NN'), ('music', 'NN'), (',', ','), ('call', 'VB'), ('someone', 'NN'), (',', ','), ('Open', 'VB'), ('an', 'DT'), ('email', 'NN'), (',', ','), ('Scheduling', 'VBG'), ('an', 'DT'), ('appointment', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('assistants', 'assistant'), ('can', 'can'), ('help', 'help'), ('us', 'we'), ('in', 'in'), ('various', 'various'), ('ways', 'way'), ('just', 'just'), ('by', 'by'), ('our', 'we'), ('voice', 'voice'), ('instructions', 'instruction'), ('such', 'such'), ('as', 'as'), ('Play', 'play'), ('music', 'music'), (',', ','), ('call', 'call'), ('someone', 'someone'), (',', ','), ('Open', 'open'), ('an', 'a'), ('email', 'email'), (',', ','), ('Scheduling', 'schedule'), ('an', 'a'), ('appointment', 'appointment'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'assistants'), 'det'), (('assistants', 'help'), 'nsubj'), (('can', 'help'), 'aux'), (('help', 'root'), 'root'), (('us', 'help'), 'obj'), (('in', 'ways'), 'case'), (('various', 'ways'), 'amod'), (('ways', 'help'), 'obl'), (('just', 'instructions'), 'advmod'), (('by', 'instructions'), 'case'), (('our', 'instructions'), 'nmod:poss'), (('voice', 'instructions'), 'compound'), (('instructions', 'help'), 'obl'), (('such', 'music'), 'case'), (('as', 'such'), 'fixed'), (('Play', 'music'), 'compound'), (('music', 'instructions'), 'nmod'), ((',', 'call'), 'punct'), (('call', 'help'), 'conj'), (('someone', 'call'), 'obj'), ((',', 'Open'), 'punct'), (('Open', 'call'), 'conj'), (('an', 'email'), 'det'), (('email', 'Open'), 'obj'), ((',', 'Scheduling'), 'punct'), (('Scheduling', 'call'), 'advcl'), (('an', 'appointment'), 'det'), (('appointment', 'Scheduling'), 'obj'), ((',', 'etc'), 'punct'), (('etc', 'appointment'), 'conj'), (('.', 'help'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 34 ===========================

 These virtual assistants use machine learning algorithms as an important part. 

Tokens are: 
>> ['These', 'virtual', 'assistants', 'use', 'machine', 'learning', 'algorithms', 'as', 'an', 'important', 'part', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('virtual', 'ADJ'), ('assistants', 'NOUN'), ('use', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('as', 'ADP'), ('an', 'DET'), ('important', 'ADJ'), ('part', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('virtual', 'JJ'), ('assistants', 'NNS'), ('use', 'VBP'), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'NNS'), ('as', 'IN'), ('an', 'DT'), ('important', 'JJ'), ('part', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('virtual', 'virtual'), ('assistants', 'assistant'), ('use', 'use'), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('as', 'as'), ('an', 'a'), ('important', 'important'), ('part', 'part'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'assistants'), 'det'), (('virtual', 'assistants'), 'amod'), (('assistants', 'use'), 'nsubj'), (('use', 'root'), 'root'), (('machine', 'algorithms'), 'compound'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'use'), 'obj'), (('as', 'part'), 'case'), (('an', 'part'), 'det'), (('important', 'part'), 'amod'), (('part', 'use'), 'obl'), (('.', 'use'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 These assistant record our voice instructions, send it over the server on a cloud, and decode it using ML algorithms and act accordingly. 

Tokens are: 
>> ['These', 'assistant', 'record', 'our', 'voice', 'instructions', ',', 'send', 'it', 'over', 'the', 'server', 'on', 'a', 'cloud', ',', 'and', 'decode', 'it', 'using', 'ML', 'algorithms', 'and', 'act', 'accordingly', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('assistant', 'NOUN'), ('record', 'VERB'), ('our', 'PRON'), ('voice', 'NOUN'), ('instructions', 'NOUN'), (',', 'PUNCT'), ('send', 'VERB'), ('it', 'PRON'), ('over', 'ADP'), ('the', 'DET'), ('server', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('cloud', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('decode', 'VERB'), ('it', 'PRON'), ('using', 'VERB'), ('ML', 'NOUN'), ('algorithms', 'NOUN'), ('and', 'CCONJ'), ('act', 'VERB'), ('accordingly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('assistant', 'NN'), ('record', 'VBP'), ('our', 'PRP$'), ('voice', 'NN'), ('instructions', 'NNS'), (',', ','), ('send', 'VB'), ('it', 'PRP'), ('over', 'IN'), ('the', 'DT'), ('server', 'NN'), ('on', 'IN'), ('a', 'DT'), ('cloud', 'NN'), (',', ','), ('and', 'CC'), ('decode', 'VB'), ('it', 'PRP'), ('using', 'VBG'), ('ML', 'NN'), ('algorithms', 'NNS'), ('and', 'CC'), ('act', 'VB'), ('accordingly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('assistant', 'assistant'), ('record', 'record'), ('our', 'we'), ('voice', 'voice'), ('instructions', 'instruction'), (',', ','), ('send', 'send'), ('it', 'it'), ('over', 'over'), ('the', 'the'), ('server', 'server'), ('on', 'on'), ('a', 'a'), ('cloud', 'cloud'), (',', ','), ('and', 'and'), ('decode', 'decode'), ('it', 'it'), ('using', 'use'), ('ML', 'ml'), ('algorithms', 'algorithm'), ('and', 'and'), ('act', 'act'), ('accordingly', 'accordingly'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'assistant'), 'det'), (('assistant', 'record'), 'nsubj'), (('record', 'root'), 'root'), (('our', 'instructions'), 'nmod:poss'), (('voice', 'instructions'), 'compound'), (('instructions', 'record'), 'obj'), ((',', 'send'), 'punct'), (('send', 'record'), 'conj'), (('it', 'send'), 'obj'), (('over', 'server'), 'case'), (('the', 'server'), 'det'), (('server', 'send'), 'obl'), (('on', 'cloud'), 'case'), (('a', 'cloud'), 'det'), (('cloud', 'server'), 'nmod'), ((',', 'decode'), 'punct'), (('and', 'decode'), 'cc'), (('decode', 'record'), 'conj'), (('it', 'decode'), 'obj'), (('using', 'decode'), 'advcl'), (('ML', 'algorithms'), 'compound'), (('algorithms', 'using'), 'obj'), (('and', 'act'), 'cc'), (('act', 'using'), 'conj'), (('accordingly', 'act'), 'advmod'), (('.', 'record'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 8. Online Fraud Detection: Machine learning is making our online transaction safe and secure by detecting fraud transaction. 

Tokens are: 
>> ['8', '.', 'Online', 'Fraud', 'Detection', ':', 'Machine', 'learning', 'is', 'making', 'our', 'online', 'transaction', 'safe', 'and', 'secure', 'by', 'detecting', 'fraud', 'transaction', '.'] 

 UPOS tags are: 
>> [('8', 'NUM'), ('.', 'PUNCT'), ('Online', 'ADJ'), ('Fraud', 'NOUN'), ('Detection', 'NOUN'), (':', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('making', 'VERB'), ('our', 'PRON'), ('online', 'ADJ'), ('transaction', 'NOUN'), ('safe', 'ADJ'), ('and', 'CCONJ'), ('secure', 'ADJ'), ('by', 'SCONJ'), ('detecting', 'VERB'), ('fraud', 'NOUN'), ('transaction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('8', 'LS'), ('.', '.'), ('Online', 'JJ'), ('Fraud', 'NN'), ('Detection', 'NN'), (':', ':'), ('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('making', 'VBG'), ('our', 'PRP$'), ('online', 'JJ'), ('transaction', 'NN'), ('safe', 'JJ'), ('and', 'CC'), ('secure', 'JJ'), ('by', 'IN'), ('detecting', 'VBG'), ('fraud', 'NN'), ('transaction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('8', '8'), ('.', '.'), ('Online', 'Online'), ('Fraud', 'fraud'), ('Detection', 'detection'), (':', ':'), ('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('making', 'make'), ('our', 'we'), ('online', 'online'), ('transaction', 'transaction'), ('safe', 'safe'), ('and', 'and'), ('secure', 'secure'), ('by', 'by'), ('detecting', 'detect'), ('fraud', 'fraud'), ('transaction', 'transaction'), ('.', '.')] 

 Dependency tags are: 
>> [(('8', 'Detection'), 'nummod'), (('.', '8'), 'punct'), (('Online', 'Detection'), 'amod'), (('Fraud', 'Detection'), 'compound'), (('Detection', 'root'), 'root'), ((':', 'Detection'), 'punct'), (('Machine', 'learning'), 'compound'), (('learning', 'making'), 'nsubj'), (('is', 'making'), 'aux'), (('making', 'Detection'), 'parataxis'), (('our', 'transaction'), 'nmod:poss'), (('online', 'transaction'), 'amod'), (('transaction', 'making'), 'obj'), (('safe', 'making'), 'xcomp'), (('and', 'secure'), 'cc'), (('secure', 'safe'), 'conj'), (('by', 'detecting'), 'mark'), (('detecting', 'safe'), 'advcl'), (('fraud', 'transaction'), 'compound'), (('transaction', 'detecting'), 'obj'), (('.', 'Detection'), 'punct')]

 Named Entities are: 
>> [('8', 'CARDINAL')]

========================== Sentence 37 ===========================

 Whenever we perform some online transaction, there may be various ways that a fraudulent transaction can take place such as fake accounts, fake ids, and steal money in the middle of a transaction. 

Tokens are: 
>> ['Whenever', 'we', 'perform', 'some', 'online', 'transaction', ',', 'there', 'may', 'be', 'various', 'ways', 'that', 'a', 'fraudulent', 'transaction', 'can', 'take', 'place', 'such', 'as', 'fake', 'accounts', ',', 'fake', 'ids', ',', 'and', 'steal', 'money', 'in', 'the', 'middle', 'of', 'a', 'transaction', '.'] 

 UPOS tags are: 
>> [('Whenever', 'SCONJ'), ('we', 'PRON'), ('perform', 'VERB'), ('some', 'DET'), ('online', 'ADJ'), ('transaction', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('may', 'AUX'), ('be', 'VERB'), ('various', 'ADJ'), ('ways', 'NOUN'), ('that', 'PRON'), ('a', 'DET'), ('fraudulent', 'ADJ'), ('transaction', 'NOUN'), ('can', 'AUX'), ('take', 'VERB'), ('place', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('fake', 'ADJ'), ('accounts', 'NOUN'), (',', 'PUNCT'), ('fake', 'ADJ'), ('ids', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('steal', 'VERB'), ('money', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('middle', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('transaction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Whenever', 'WRB'), ('we', 'PRP'), ('perform', 'VBP'), ('some', 'DT'), ('online', 'JJ'), ('transaction', 'NN'), (',', ','), ('there', 'EX'), ('may', 'MD'), ('be', 'VB'), ('various', 'JJ'), ('ways', 'NNS'), ('that', 'WDT'), ('a', 'DT'), ('fraudulent', 'JJ'), ('transaction', 'NN'), ('can', 'MD'), ('take', 'VB'), ('place', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('fake', 'JJ'), ('accounts', 'NNS'), (',', ','), ('fake', 'JJ'), ('ids', 'NNS'), (',', ','), ('and', 'CC'), ('steal', 'VB'), ('money', 'NN'), ('in', 'IN'), ('the', 'DT'), ('middle', 'NN'), ('of', 'IN'), ('a', 'DT'), ('transaction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Whenever', 'whenever'), ('we', 'we'), ('perform', 'perform'), ('some', 'some'), ('online', 'online'), ('transaction', 'transaction'), (',', ','), ('there', 'there'), ('may', 'may'), ('be', 'be'), ('various', 'various'), ('ways', 'way'), ('that', 'that'), ('a', 'a'), ('fraudulent', 'fraudulent'), ('transaction', 'transaction'), ('can', 'can'), ('take', 'take'), ('place', 'place'), ('such', 'such'), ('as', 'as'), ('fake', 'fake'), ('accounts', 'account'), (',', ','), ('fake', 'fake'), ('ids', 'id'), (',', ','), ('and', 'and'), ('steal', 'steal'), ('money', 'money'), ('in', 'in'), ('the', 'the'), ('middle', 'middle'), ('of', 'of'), ('a', 'a'), ('transaction', 'transaction'), ('.', '.')] 

 Dependency tags are: 
>> [(('Whenever', 'perform'), 'mark'), (('we', 'perform'), 'nsubj'), (('perform', 'be'), 'advcl'), (('some', 'transaction'), 'det'), (('online', 'transaction'), 'amod'), (('transaction', 'perform'), 'obj'), ((',', 'be'), 'punct'), (('there', 'be'), 'expl'), (('may', 'be'), 'aux'), (('be', 'root'), 'root'), (('various', 'ways'), 'amod'), (('ways', 'be'), 'nsubj'), (('that', 'take'), 'mark'), (('a', 'transaction'), 'det'), (('fraudulent', 'transaction'), 'amod'), (('transaction', 'take'), 'nsubj'), (('can', 'take'), 'aux'), (('take', 'ways'), 'acl:relcl'), (('place', 'take'), 'obj'), (('such', 'accounts'), 'case'), (('as', 'such'), 'fixed'), (('fake', 'accounts'), 'amod'), (('accounts', 'place'), 'nmod'), ((',', 'ids'), 'punct'), (('fake', 'ids'), 'amod'), (('ids', 'accounts'), 'conj'), ((',', 'steal'), 'punct'), (('and', 'steal'), 'cc'), (('steal', 'take'), 'conj'), (('money', 'steal'), 'obj'), (('in', 'middle'), 'case'), (('the', 'middle'), 'det'), (('middle', 'steal'), 'obl'), (('of', 'transaction'), 'case'), (('a', 'transaction'), 'det'), (('transaction', 'middle'), 'nmod'), (('.', 'be'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 38 ===========================

 So to detect this, Feed Forward Neural network helps us by checking whether it is a genuine transaction or a fraud transaction. 

Tokens are: 
>> ['So', 'to', 'detect', 'this', ',', 'Feed', 'Forward', 'Neural', 'network', 'helps', 'us', 'by', 'checking', 'whether', 'it', 'is', 'a', 'genuine', 'transaction', 'or', 'a', 'fraud', 'transaction', '.'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('to', 'PART'), ('detect', 'VERB'), ('this', 'PRON'), (',', 'PUNCT'), ('Feed', 'VERB'), ('Forward', 'ADJ'), ('Neural', 'ADJ'), ('network', 'NOUN'), ('helps', 'VERB'), ('us', 'PRON'), ('by', 'SCONJ'), ('checking', 'VERB'), ('whether', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('genuine', 'ADJ'), ('transaction', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('fraud', 'NOUN'), ('transaction', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('to', 'TO'), ('detect', 'VB'), ('this', 'DT'), (',', ','), ('Feed', 'VB'), ('Forward', 'JJ'), ('Neural', 'JJ'), ('network', 'NN'), ('helps', 'VBZ'), ('us', 'PRP'), ('by', 'IN'), ('checking', 'VBG'), ('whether', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('genuine', 'JJ'), ('transaction', 'NN'), ('or', 'CC'), ('a', 'DT'), ('fraud', 'NN'), ('transaction', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('to', 'to'), ('detect', 'detect'), ('this', 'this'), (',', ','), ('Feed', 'feed'), ('Forward', 'forward'), ('Neural', 'neural'), ('network', 'network'), ('helps', 'help'), ('us', 'we'), ('by', 'by'), ('checking', 'check'), ('whether', 'whether'), ('it', 'it'), ('is', 'be'), ('a', 'a'), ('genuine', 'genuine'), ('transaction', 'transaction'), ('or', 'or'), ('a', 'a'), ('fraud', 'fraud'), ('transaction', 'transaction'), ('.', '.')] 

 Dependency tags are: 
>> [(('So', 'Feed'), 'advmod'), (('to', 'detect'), 'mark'), (('detect', 'Feed'), 'advcl'), (('this', 'detect'), 'obj'), ((',', 'detect'), 'punct'), (('Feed', 'root'), 'root'), (('Forward', 'network'), 'amod'), (('Neural', 'network'), 'amod'), (('network', 'Feed'), 'obj'), (('helps', 'Feed'), 'ccomp'), (('us', 'helps'), 'obj'), (('by', 'checking'), 'mark'), (('checking', 'helps'), 'advcl'), (('whether', 'transaction'), 'mark'), (('it', 'transaction'), 'nsubj'), (('is', 'transaction'), 'cop'), (('a', 'transaction'), 'det'), (('genuine', 'transaction'), 'amod'), (('transaction', 'checking'), 'ccomp'), (('or', 'transaction'), 'cc'), (('a', 'transaction'), 'det'), (('fraud', 'transaction'), 'compound'), (('transaction', 'transaction'), 'conj'), (('.', 'Feed'), 'punct')]

 Named Entities are: 
>> [('Feed Forward Neural', 'ORG')]

========================== Sentence 39 ===========================

 For each genuine transaction, the output is converted into some hash values, and these values become the input for the next round. 

Tokens are: 
>> ['For', 'each', 'genuine', 'transaction', ',', 'the', 'output', 'is', 'converted', 'into', 'some', 'hash', 'values', ',', 'and', 'these', 'values', 'become', 'the', 'input', 'for', 'the', 'next', 'round', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('genuine', 'ADJ'), ('transaction', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('output', 'NOUN'), ('is', 'AUX'), ('converted', 'VERB'), ('into', 'ADP'), ('some', 'DET'), ('hash', 'NOUN'), ('values', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('these', 'DET'), ('values', 'NOUN'), ('become', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('next', 'ADJ'), ('round', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('genuine', 'JJ'), ('transaction', 'NN'), (',', ','), ('the', 'DT'), ('output', 'NN'), ('is', 'VBZ'), ('converted', 'VBN'), ('into', 'IN'), ('some', 'DT'), ('hash', 'NN'), ('values', 'NNS'), (',', ','), ('and', 'CC'), ('these', 'DT'), ('values', 'NNS'), ('become', 'VBP'), ('the', 'DT'), ('input', 'NN'), ('for', 'IN'), ('the', 'DT'), ('next', 'JJ'), ('round', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('genuine', 'genuine'), ('transaction', 'transaction'), (',', ','), ('the', 'the'), ('output', 'output'), ('is', 'be'), ('converted', 'convert'), ('into', 'into'), ('some', 'some'), ('hash', 'hash'), ('values', 'value'), (',', ','), ('and', 'and'), ('these', 'this'), ('values', 'value'), ('become', 'become'), ('the', 'the'), ('input', 'input'), ('for', 'for'), ('the', 'the'), ('next', 'next'), ('round', 'round'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'transaction'), 'case'), (('each', 'transaction'), 'det'), (('genuine', 'transaction'), 'amod'), (('transaction', 'converted'), 'obl'), ((',', 'converted'), 'punct'), (('the', 'output'), 'det'), (('output', 'converted'), 'nsubj:pass'), (('is', 'converted'), 'aux:pass'), (('converted', 'root'), 'root'), (('into', 'values'), 'case'), (('some', 'values'), 'det'), (('hash', 'values'), 'compound'), (('values', 'converted'), 'obl'), ((',', 'become'), 'punct'), (('and', 'become'), 'cc'), (('these', 'values'), 'det'), (('values', 'become'), 'nsubj'), (('become', 'converted'), 'conj'), (('the', 'input'), 'det'), (('input', 'become'), 'xcomp'), (('for', 'round'), 'case'), (('the', 'round'), 'det'), (('next', 'round'), 'amod'), (('round', 'input'), 'nmod'), (('.', 'converted'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 For each genuine transaction, there is a specific pattern which gets change for the fraud transaction hence, it detects it and makes our online transactions more secure. 

Tokens are: 
>> ['For', 'each', 'genuine', 'transaction', ',', 'there', 'is', 'a', 'specific', 'pattern', 'which', 'gets', 'change', 'for', 'the', 'fraud', 'transaction', 'hence', ',', 'it', 'detects', 'it', 'and', 'makes', 'our', 'online', 'transactions', 'more', 'secure', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('genuine', 'ADJ'), ('transaction', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('specific', 'ADJ'), ('pattern', 'NOUN'), ('which', 'PRON'), ('gets', 'VERB'), ('change', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('fraud', 'NOUN'), ('transaction', 'NOUN'), ('hence', 'ADV'), (',', 'PUNCT'), ('it', 'PRON'), ('detects', 'VERB'), ('it', 'PRON'), ('and', 'CCONJ'), ('makes', 'VERB'), ('our', 'PRON'), ('online', 'ADJ'), ('transactions', 'NOUN'), ('more', 'ADV'), ('secure', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('genuine', 'JJ'), ('transaction', 'NN'), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('specific', 'JJ'), ('pattern', 'NN'), ('which', 'WDT'), ('gets', 'VBZ'), ('change', 'NN'), ('for', 'IN'), ('the', 'DT'), ('fraud', 'NN'), ('transaction', 'NN'), ('hence', 'RB'), (',', ','), ('it', 'PRP'), ('detects', 'VBZ'), ('it', 'PRP'), ('and', 'CC'), ('makes', 'VBZ'), ('our', 'PRP$'), ('online', 'JJ'), ('transactions', 'NNS'), ('more', 'RBR'), ('secure', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('genuine', 'genuine'), ('transaction', 'transaction'), (',', ','), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('specific', 'specific'), ('pattern', 'pattern'), ('which', 'which'), ('gets', 'get'), ('change', 'change'), ('for', 'for'), ('the', 'the'), ('fraud', 'fraud'), ('transaction', 'transaction'), ('hence', 'hence'), (',', ','), ('it', 'it'), ('detects', 'detect'), ('it', 'it'), ('and', 'and'), ('makes', 'make'), ('our', 'we'), ('online', 'online'), ('transactions', 'transaction'), ('more', 'more'), ('secure', 'secure'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'transaction'), 'case'), (('each', 'transaction'), 'det'), (('genuine', 'transaction'), 'amod'), (('transaction', 'is'), 'obl'), ((',', 'is'), 'punct'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('a', 'pattern'), 'det'), (('specific', 'pattern'), 'amod'), (('pattern', 'is'), 'nsubj'), (('which', 'gets'), 'nsubj'), (('gets', 'pattern'), 'acl:relcl'), (('change', 'gets'), 'obj'), (('for', 'transaction'), 'case'), (('the', 'transaction'), 'det'), (('fraud', 'transaction'), 'compound'), (('transaction', 'gets'), 'obl'), (('hence', 'detects'), 'advmod'), ((',', 'detects'), 'punct'), (('it', 'detects'), 'nsubj'), (('detects', 'is'), 'parataxis'), (('it', 'detects'), 'obj'), (('and', 'makes'), 'cc'), (('makes', 'detects'), 'conj'), (('our', 'transactions'), 'nmod:poss'), (('online', 'transactions'), 'amod'), (('transactions', 'makes'), 'obj'), (('more', 'secure'), 'advmod'), (('secure', 'makes'), 'xcomp'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 41 ===========================

 9. Stock Market trading: Machine learning is widely used in stock market trading. 

Tokens are: 
>> ['9', '.', 'Stock', 'Market', 'trading', ':', 'Machine', 'learning', 'is', 'widely', 'used', 'in', 'stock', 'market', 'trading', '.'] 

 UPOS tags are: 
>> [('9', 'NUM'), ('.', 'PUNCT'), ('Stock', 'NOUN'), ('Market', 'NOUN'), ('trading', 'NOUN'), (':', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('widely', 'ADV'), ('used', 'VERB'), ('in', 'ADP'), ('stock', 'NOUN'), ('market', 'NOUN'), ('trading', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('9', 'LS'), ('.', '.'), ('Stock', 'NN'), ('Market', 'NN'), ('trading', 'NN'), (':', ':'), ('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('widely', 'RB'), ('used', 'VBN'), ('in', 'IN'), ('stock', 'NN'), ('market', 'NN'), ('trading', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('9', '9'), ('.', '.'), ('Stock', 'stock'), ('Market', 'market'), ('trading', 'trading'), (':', ':'), ('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('widely', 'widely'), ('used', 'use'), ('in', 'in'), ('stock', 'stock'), ('market', 'market'), ('trading', 'trading'), ('.', '.')] 

 Dependency tags are: 
>> [(('9', 'trading'), 'nummod'), (('.', '9'), 'punct'), (('Stock', 'Market'), 'compound'), (('Market', 'trading'), 'compound'), (('trading', 'root'), 'root'), ((':', 'trading'), 'punct'), (('Machine', 'learning'), 'compound'), (('learning', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('widely', 'used'), 'advmod'), (('used', 'trading'), 'parataxis'), (('in', 'trading'), 'case'), (('stock', 'trading'), 'compound'), (('market', 'trading'), 'compound'), (('trading', 'used'), 'obl'), (('.', 'trading'), 'punct')]

 Named Entities are: 
>> [('9', 'CARDINAL')]

========================== Sentence 42 ===========================

 In the stock market, there is always a risk of up and downs in shares, so for this machine learning's long short term memory neural network is used for the prediction of stock market trends. 

Tokens are: 
>> ['In', 'the', 'stock', 'market', ',', 'there', 'is', 'always', 'a', 'risk', 'of', 'up', 'and', 'downs', 'in', 'shares', ',', 'so', 'for', 'this', 'machine', 'learning', "'s", 'long', 'short', 'term', 'memory', 'neural', 'network', 'is', 'used', 'for', 'the', 'prediction', 'of', 'stock', 'market', 'trends', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('stock', 'NOUN'), ('market', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('always', 'ADV'), ('a', 'DET'), ('risk', 'NOUN'), ('of', 'ADP'), ('up', 'NOUN'), ('and', 'CCONJ'), ('downs', 'NOUN'), ('in', 'ADP'), ('shares', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('for', 'ADP'), ('this', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ("'s", 'PART'), ('long', 'ADJ'), ('short', 'ADJ'), ('term', 'NOUN'), ('memory', 'NOUN'), ('neural', 'ADJ'), ('network', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('the', 'DET'), ('prediction', 'NOUN'), ('of', 'ADP'), ('stock', 'NOUN'), ('market', 'NOUN'), ('trends', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('stock', 'NN'), ('market', 'NN'), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('always', 'RB'), ('a', 'DT'), ('risk', 'NN'), ('of', 'IN'), ('up', 'NN'), ('and', 'CC'), ('downs', 'NNS'), ('in', 'IN'), ('shares', 'NNS'), (',', ','), ('so', 'RB'), ('for', 'IN'), ('this', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ("'s", 'POS'), ('long', 'JJ'), ('short', 'JJ'), ('term', 'NN'), ('memory', 'NN'), ('neural', 'JJ'), ('network', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('for', 'IN'), ('the', 'DT'), ('prediction', 'NN'), ('of', 'IN'), ('stock', 'NN'), ('market', 'NN'), ('trends', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('stock', 'stock'), ('market', 'market'), (',', ','), ('there', 'there'), ('is', 'be'), ('always', 'always'), ('a', 'a'), ('risk', 'risk'), ('of', 'of'), ('up', 'up'), ('and', 'and'), ('downs', 'downs'), ('in', 'in'), ('shares', 'share'), (',', ','), ('so', 'so'), ('for', 'for'), ('this', 'this'), ('machine', 'machine'), ('learning', 'learning'), ("'s", "'s"), ('long', 'long'), ('short', 'short'), ('term', 'term'), ('memory', 'memory'), ('neural', 'neural'), ('network', 'network'), ('is', 'be'), ('used', 'use'), ('for', 'for'), ('the', 'the'), ('prediction', 'prediction'), ('of', 'of'), ('stock', 'stock'), ('market', 'market'), ('trends', 'trend'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'market'), 'case'), (('the', 'market'), 'det'), (('stock', 'market'), 'compound'), (('market', 'is'), 'obl'), ((',', 'is'), 'punct'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('always', 'is'), 'advmod'), (('a', 'risk'), 'det'), (('risk', 'is'), 'nsubj'), (('of', 'up'), 'case'), (('up', 'risk'), 'nmod'), (('and', 'downs'), 'cc'), (('downs', 'up'), 'conj'), (('in', 'shares'), 'case'), (('shares', 'risk'), 'nmod'), ((',', 'used'), 'punct'), (('so', 'used'), 'advmod'), (('for', 'machine'), 'case'), (('this', 'learning'), 'det'), (('machine', 'learning'), 'compound'), (('learning', 'memory'), 'nmod:poss'), (("'s", 'learning'), 'case'), (('long', 'term'), 'amod'), (('short', 'term'), 'amod'), (('term', 'memory'), 'compound'), (('memory', 'used'), 'nsubj:pass'), (('neural', 'network'), 'amod'), (('network', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'is'), 'advcl'), (('for', 'prediction'), 'case'), (('the', 'prediction'), 'det'), (('prediction', 'used'), 'obl'), (('of', 'trends'), 'case'), (('stock', 'market'), 'compound'), (('market', 'trends'), 'compound'), (('trends', 'prediction'), 'nmod'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 43 ===========================

 10. Medical Diagnosis: 

Tokens are: 
>> ['10', '.', 'Medical', 'Diagnosis', ':'] 

 UPOS tags are: 
>> [('10', 'NUM'), ('.', 'PUNCT'), ('Medical', 'ADJ'), ('Diagnosis', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('10', 'LS'), ('.', '.'), ('Medical', 'JJ'), ('Diagnosis', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('10', '10'), ('.', '.'), ('Medical', 'Medical'), ('Diagnosis', 'diagnosis'), (':', ':')] 

 Dependency tags are: 
>> [(('10', 'Diagnosis'), 'nummod'), (('.', '10'), 'punct'), (('Medical', 'Diagnosis'), 'amod'), (('Diagnosis', 'root'), 'root'), ((':', 'Diagnosis'), 'punct')]

 Named Entities are: 
>> [('10', 'CARDINAL')]

========================== Sentence 44 ===========================

 In medical science, machine learning is used for diseases diagnoses. 

Tokens are: 
>> ['In', 'medical', 'science', ',', 'machine', 'learning', 'is', 'used', 'for', 'diseases', 'diagnoses', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('medical', 'ADJ'), ('science', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('diseases', 'NOUN'), ('diagnoses', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('medical', 'JJ'), ('science', 'NN'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('for', 'IN'), ('diseases', 'NNS'), ('diagnoses', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('medical', 'medical'), ('science', 'science'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('used', 'use'), ('for', 'for'), ('diseases', 'disease'), ('diagnoses', 'diagnose'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'science'), 'case'), (('medical', 'science'), 'amod'), (('science', 'used'), 'obl'), ((',', 'used'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('for', 'diagnoses'), 'case'), (('diseases', 'diagnoses'), 'compound'), (('diagnoses', 'used'), 'obl'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 With this, medical technology is growing very fast and able to build 3D models that can predict the exact position of lesions in the brain. 

Tokens are: 
>> ['With', 'this', ',', 'medical', 'technology', 'is', 'growing', 'very', 'fast', 'and', 'able', 'to', 'build', '3', 'D', 'models', 'that', 'can', 'predict', 'the', 'exact', 'position', 'of', 'lesions', 'in', 'the', 'brain', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('this', 'PRON'), (',', 'PUNCT'), ('medical', 'ADJ'), ('technology', 'NOUN'), ('is', 'AUX'), ('growing', 'VERB'), ('very', 'ADV'), ('fast', 'ADJ'), ('and', 'CCONJ'), ('able', 'ADJ'), ('to', 'PART'), ('build', 'VERB'), ('3', 'NUM'), ('D', 'NOUN'), ('models', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('predict', 'VERB'), ('the', 'DET'), ('exact', 'ADJ'), ('position', 'NOUN'), ('of', 'ADP'), ('lesions', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('brain', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('this', 'DT'), (',', ','), ('medical', 'JJ'), ('technology', 'NN'), ('is', 'VBZ'), ('growing', 'VBG'), ('very', 'RB'), ('fast', 'JJ'), ('and', 'CC'), ('able', 'JJ'), ('to', 'TO'), ('build', 'VB'), ('3', 'CD'), ('D', 'NN'), ('models', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('predict', 'VB'), ('the', 'DT'), ('exact', 'JJ'), ('position', 'NN'), ('of', 'IN'), ('lesions', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('brain', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('this', 'this'), (',', ','), ('medical', 'medical'), ('technology', 'technology'), ('is', 'be'), ('growing', 'grow'), ('very', 'very'), ('fast', 'fast'), ('and', 'and'), ('able', 'able'), ('to', 'to'), ('build', 'build'), ('3', '3'), ('D', 'd'), ('models', 'model'), ('that', 'that'), ('can', 'can'), ('predict', 'predict'), ('the', 'the'), ('exact', 'exact'), ('position', 'position'), ('of', 'of'), ('lesions', 'lesion'), ('in', 'in'), ('the', 'the'), ('brain', 'brain'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'this'), 'case'), (('this', 'growing'), 'obl'), ((',', 'growing'), 'punct'), (('medical', 'technology'), 'amod'), (('technology', 'growing'), 'nsubj'), (('is', 'growing'), 'aux'), (('growing', 'root'), 'root'), (('very', 'fast'), 'advmod'), (('fast', 'growing'), 'xcomp'), (('and', 'able'), 'cc'), (('able', 'growing'), 'conj'), (('to', 'build'), 'mark'), (('build', 'able'), 'xcomp'), (('3', 'models'), 'nummod'), (('D', 'models'), 'compound'), (('models', 'build'), 'obj'), (('that', 'predict'), 'nsubj'), (('can', 'predict'), 'aux'), (('predict', 'models'), 'acl:relcl'), (('the', 'position'), 'det'), (('exact', 'position'), 'amod'), (('position', 'predict'), 'obj'), (('of', 'lesions'), 'case'), (('lesions', 'position'), 'nmod'), (('in', 'brain'), 'case'), (('the', 'brain'), 'det'), (('brain', 'lesions'), 'nmod'), (('.', 'growing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 46 ===========================

 It helps in finding brain tumors and other brain-related diseases easily. 

Tokens are: 
>> ['It', 'helps', 'in', 'finding', 'brain', 'tumors', 'and', 'other', 'brain-', 'related', 'diseases', 'easily', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('helps', 'VERB'), ('in', 'SCONJ'), ('finding', 'VERB'), ('brain', 'NOUN'), ('tumors', 'NOUN'), ('and', 'CCONJ'), ('other', 'ADJ'), ('brain-', 'NOUN'), ('related', 'ADJ'), ('diseases', 'NOUN'), ('easily', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('helps', 'VBZ'), ('in', 'IN'), ('finding', 'VBG'), ('brain', 'NN'), ('tumors', 'NNS'), ('and', 'CC'), ('other', 'JJ'), ('brain-', 'NN'), ('related', 'JJ'), ('diseases', 'NNS'), ('easily', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('helps', 'help'), ('in', 'in'), ('finding', 'find'), ('brain', 'brain'), ('tumors', 'tumor'), ('and', 'and'), ('other', 'other'), ('brain-', 'brain-'), ('related', 'related'), ('diseases', 'disease'), ('easily', 'easily'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'helps'), 'nsubj'), (('helps', 'root'), 'root'), (('in', 'finding'), 'mark'), (('finding', 'helps'), 'advcl'), (('brain', 'tumors'), 'compound'), (('tumors', 'finding'), 'obj'), (('and', 'diseases'), 'cc'), (('other', 'diseases'), 'amod'), (('brain-', 'diseases'), 'compound'), (('related', 'diseases'), 'amod'), (('diseases', 'tumors'), 'conj'), (('easily', 'finding'), 'advmod'), (('.', 'helps'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 11. Automatic Language Translation: Nowadays, if we visit a new place and we are not aware of the language then it is not a problem at all, as for this also machine learning helps us by converting the text into our known languages. 

Tokens are: 
>> ['11', '.', 'Automatic', 'Language', 'Translation', ':', 'Nowadays', ',', 'if', 'we', 'visit', 'a', 'new', 'place', 'and', 'we', 'are', 'not', 'aware', 'of', 'the', 'language', 'then', 'it', 'is', 'not', 'a', 'problem', 'at', 'all', ',', 'as', 'for', 'this', 'also', 'machine', 'learning', 'helps', 'us', 'by', 'converting', 'the', 'text', 'into', 'our', 'known', 'languages', '.'] 

 UPOS tags are: 
>> [('11', 'NUM'), ('.', 'PUNCT'), ('Automatic', 'ADJ'), ('Language', 'NOUN'), ('Translation', 'NOUN'), (':', 'PUNCT'), ('Nowadays', 'ADV'), (',', 'PUNCT'), ('if', 'SCONJ'), ('we', 'PRON'), ('visit', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('place', 'NOUN'), ('and', 'CCONJ'), ('we', 'PRON'), ('are', 'AUX'), ('not', 'PART'), ('aware', 'ADJ'), ('of', 'ADP'), ('the', 'DET'), ('language', 'NOUN'), ('then', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('a', 'DET'), ('problem', 'NOUN'), ('at', 'ADP'), ('all', 'DET'), (',', 'PUNCT'), ('as', 'SCONJ'), ('for', 'ADP'), ('this', 'DET'), ('also', 'ADV'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('helps', 'VERB'), ('us', 'PRON'), ('by', 'SCONJ'), ('converting', 'VERB'), ('the', 'DET'), ('text', 'NOUN'), ('into', 'ADP'), ('our', 'PRON'), ('known', 'VERB'), ('languages', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('11', 'LS'), ('.', '.'), ('Automatic', 'JJ'), ('Language', 'NN'), ('Translation', 'NN'), (':', ':'), ('Nowadays', 'RB'), (',', ','), ('if', 'IN'), ('we', 'PRP'), ('visit', 'VBP'), ('a', 'DT'), ('new', 'JJ'), ('place', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('are', 'VBP'), ('not', 'RB'), ('aware', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('language', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('problem', 'NN'), ('at', 'IN'), ('all', 'DT'), (',', ','), ('as', 'IN'), ('for', 'IN'), ('this', 'DT'), ('also', 'RB'), ('machine', 'NN'), ('learning', 'NN'), ('helps', 'VBZ'), ('us', 'PRP'), ('by', 'IN'), ('converting', 'VBG'), ('the', 'DT'), ('text', 'NN'), ('into', 'IN'), ('our', 'PRP$'), ('known', 'VBN'), ('languages', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('11', '11'), ('.', '.'), ('Automatic', 'automatic'), ('Language', 'language'), ('Translation', 'Translation'), (':', ':'), ('Nowadays', 'nowadays'), (',', ','), ('if', 'if'), ('we', 'we'), ('visit', 'visit'), ('a', 'a'), ('new', 'new'), ('place', 'place'), ('and', 'and'), ('we', 'we'), ('are', 'be'), ('not', 'not'), ('aware', 'aware'), ('of', 'of'), ('the', 'the'), ('language', 'language'), ('then', 'then'), ('it', 'it'), ('is', 'be'), ('not', 'not'), ('a', 'a'), ('problem', 'problem'), ('at', 'at'), ('all', 'all'), (',', ','), ('as', 'as'), ('for', 'for'), ('this', 'this'), ('also', 'also'), ('machine', 'machine'), ('learning', 'learning'), ('helps', 'help'), ('us', 'we'), ('by', 'by'), ('converting', 'convert'), ('the', 'the'), ('text', 'text'), ('into', 'into'), ('our', 'we'), ('known', 'know'), ('languages', 'language'), ('.', '.')] 

 Dependency tags are: 
>> [(('11', 'problem'), 'nummod'), (('.', '11'), 'punct'), (('Automatic', 'Translation'), 'amod'), (('Language', 'Translation'), 'compound'), (('Translation', 'problem'), 'nsubj'), ((':', 'Translation'), 'punct'), (('Nowadays', 'problem'), 'advmod'), ((',', 'Nowadays'), 'punct'), (('if', 'visit'), 'mark'), (('we', 'visit'), 'nsubj'), (('visit', 'problem'), 'advcl'), (('a', 'place'), 'det'), (('new', 'place'), 'amod'), (('place', 'visit'), 'obj'), (('and', 'aware'), 'cc'), (('we', 'aware'), 'nsubj'), (('are', 'aware'), 'cop'), (('not', 'aware'), 'advmod'), (('aware', 'visit'), 'conj'), (('of', 'language'), 'case'), (('the', 'language'), 'det'), (('language', 'aware'), 'obl'), (('then', 'problem'), 'advmod'), (('it', 'problem'), 'nsubj'), (('is', 'problem'), 'cop'), (('not', 'problem'), 'advmod'), (('a', 'problem'), 'det'), (('problem', 'root'), 'root'), (('at', 'all'), 'case'), (('all', 'problem'), 'nmod'), ((',', 'helps'), 'punct'), (('as', 'helps'), 'mark'), (('for', 'learning'), 'case'), (('this', 'learning'), 'det'), (('also', 'helps'), 'advmod'), (('machine', 'learning'), 'compound'), (('learning', 'helps'), 'nsubj'), (('helps', 'problem'), 'advcl'), (('us', 'helps'), 'obj'), (('by', 'converting'), 'mark'), (('converting', 'helps'), 'advcl'), (('the', 'text'), 'det'), (('text', 'converting'), 'obj'), (('into', 'languages'), 'case'), (('our', 'languages'), 'nmod:poss'), (('known', 'languages'), 'amod'), (('languages', 'converting'), 'obl'), (('.', 'problem'), 'punct')]

 Named Entities are: 
>> [('11', 'CARDINAL')]

========================== Sentence 48 ===========================

 Google's GNMT (Google Neural Machine Translation) provide this feature, which is a Neural Machine Learning that translates the text into our familiar language, and it called as automatic translation. 

Tokens are: 
>> ['Google', "'s", 'GNMT', '(', 'Google', 'Neural', 'Machine', 'Translation', ')', 'provide', 'this', 'feature', ',', 'which', 'is', 'a', 'Neural', 'Machine', 'Learning', 'that', 'translates', 'the', 'text', 'into', 'our', 'familiar', 'language', ',', 'and', 'it', 'called', 'as', 'automatic', 'translation', '.'] 

 UPOS tags are: 
>> [('Google', 'PROPN'), ("'s", 'PART'), ('GNMT', 'PROPN'), ('(', 'PUNCT'), ('Google', 'PROPN'), ('Neural', 'ADJ'), ('Machine', 'PROPN'), ('Translation', 'PROPN'), (')', 'PUNCT'), ('provide', 'VERB'), ('this', 'DET'), ('feature', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('Neural', 'ADJ'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), ('that', 'PRON'), ('translates', 'VERB'), ('the', 'DET'), ('text', 'NOUN'), ('into', 'ADP'), ('our', 'PRON'), ('familiar', 'ADJ'), ('language', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('called', 'VERB'), ('as', 'ADP'), ('automatic', 'ADJ'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Google', 'NNP'), ("'s", 'POS'), ('GNMT', 'NNP'), ('(', '-LRB-'), ('Google', 'NNP'), ('Neural', 'NNP'), ('Machine', 'NNP'), ('Translation', 'NNP'), (')', '-RRB-'), ('provide', 'VBP'), ('this', 'DT'), ('feature', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('a', 'DT'), ('Neural', 'JJ'), ('Machine', 'NN'), ('Learning', 'NN'), ('that', 'WDT'), ('translates', 'VBZ'), ('the', 'DT'), ('text', 'NN'), ('into', 'IN'), ('our', 'PRP$'), ('familiar', 'JJ'), ('language', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('called', 'VBN'), ('as', 'IN'), ('automatic', 'JJ'), ('translation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Google', 'Google'), ("'s", "'s"), ('GNMT', 'GNMT'), ('(', '('), ('Google', 'Google'), ('Neural', 'neural'), ('Machine', 'Machine'), ('Translation', 'Translation'), (')', ')'), ('provide', 'provide'), ('this', 'this'), ('feature', 'feature'), (',', ','), ('which', 'which'), ('is', 'be'), ('a', 'a'), ('Neural', 'neural'), ('Machine', 'Machine'), ('Learning', 'learning'), ('that', 'that'), ('translates', 'translate'), ('the', 'the'), ('text', 'text'), ('into', 'into'), ('our', 'we'), ('familiar', 'familiar'), ('language', 'language'), (',', ','), ('and', 'and'), ('it', 'it'), ('called', 'call'), ('as', 'as'), ('automatic', 'automatic'), ('translation', 'translation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Google', 'GNMT'), 'nmod:poss'), (("'s", 'Google'), 'case'), (('GNMT', 'provide'), 'nsubj'), (('(', 'Translation'), 'punct'), (('Google', 'Translation'), 'compound'), (('Neural', 'Translation'), 'amod'), (('Machine', 'Translation'), 'compound'), (('Translation', 'GNMT'), 'appos'), ((')', 'Translation'), 'punct'), (('provide', 'root'), 'root'), (('this', 'feature'), 'det'), (('feature', 'provide'), 'obj'), ((',', 'feature'), 'punct'), (('which', 'Learning'), 'nsubj'), (('is', 'Learning'), 'cop'), (('a', 'Learning'), 'det'), (('Neural', 'Learning'), 'amod'), (('Machine', 'Learning'), 'compound'), (('Learning', 'feature'), 'acl:relcl'), (('that', 'translates'), 'nsubj'), (('translates', 'Learning'), 'acl:relcl'), (('the', 'text'), 'det'), (('text', 'translates'), 'obj'), (('into', 'language'), 'case'), (('our', 'language'), 'nmod:poss'), (('familiar', 'language'), 'amod'), (('language', 'translates'), 'obl'), ((',', 'called'), 'punct'), (('and', 'called'), 'cc'), (('it', 'called'), 'nsubj:pass'), (('called', 'translates'), 'conj'), (('as', 'translation'), 'case'), (('automatic', 'translation'), 'amod'), (('translation', 'called'), 'obl'), (('.', 'provide'), 'punct')]

 Named Entities are: 
>> [('Google', 'ORG'), ('GNMT', 'PRODUCT'), ('Google Neural Machine Translation', 'PRODUCT')]

========================== Sentence 49 ===========================

 The technology behind the automatic translation is a sequence to sequence learning algorithm, which is used with image recognition and translates the text from one language to another language. 

Tokens are: 
>> ['The', 'technology', 'behind', 'the', 'automatic', 'translation', 'is', 'a', 'sequence', 'to', 'sequence', 'learning', 'algorithm', ',', 'which', 'is', 'used', 'with', 'image', 'recognition', 'and', 'translates', 'the', 'text', 'from', 'one', 'language', 'to', 'another', 'language', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('technology', 'NOUN'), ('behind', 'ADP'), ('the', 'DET'), ('automatic', 'ADJ'), ('translation', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('sequence', 'NOUN'), ('to', 'ADP'), ('sequence', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('used', 'VERB'), ('with', 'ADP'), ('image', 'NOUN'), ('recognition', 'NOUN'), ('and', 'CCONJ'), ('translates', 'VERB'), ('the', 'DET'), ('text', 'NOUN'), ('from', 'ADP'), ('one', 'NUM'), ('language', 'NOUN'), ('to', 'ADP'), ('another', 'DET'), ('language', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('technology', 'NN'), ('behind', 'IN'), ('the', 'DT'), ('automatic', 'JJ'), ('translation', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('sequence', 'NN'), ('to', 'IN'), ('sequence', 'NN'), ('learning', 'NN'), ('algorithm', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('used', 'VBN'), ('with', 'IN'), ('image', 'NN'), ('recognition', 'NN'), ('and', 'CC'), ('translates', 'VBZ'), ('the', 'DT'), ('text', 'NN'), ('from', 'IN'), ('one', 'CD'), ('language', 'NN'), ('to', 'IN'), ('another', 'DT'), ('language', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('technology', 'technology'), ('behind', 'behind'), ('the', 'the'), ('automatic', 'automatic'), ('translation', 'translation'), ('is', 'be'), ('a', 'a'), ('sequence', 'sequence'), ('to', 'to'), ('sequence', 'sequence'), ('learning', 'learning'), ('algorithm', 'algorithm'), (',', ','), ('which', 'which'), ('is', 'be'), ('used', 'use'), ('with', 'with'), ('image', 'image'), ('recognition', 'recognition'), ('and', 'and'), ('translates', 'translate'), ('the', 'the'), ('text', 'text'), ('from', 'from'), ('one', 'one'), ('language', 'language'), ('to', 'to'), ('another', 'another'), ('language', 'language'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'technology'), 'det'), (('technology', 'sequence'), 'nsubj'), (('behind', 'translation'), 'case'), (('the', 'translation'), 'det'), (('automatic', 'translation'), 'amod'), (('translation', 'technology'), 'nmod'), (('is', 'sequence'), 'cop'), (('a', 'sequence'), 'det'), (('sequence', 'root'), 'root'), (('to', 'algorithm'), 'case'), (('sequence', 'algorithm'), 'compound'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'sequence'), 'nmod'), ((',', 'algorithm'), 'punct'), (('which', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'algorithm'), 'acl:relcl'), (('with', 'recognition'), 'case'), (('image', 'recognition'), 'compound'), (('recognition', 'used'), 'obl'), (('and', 'translates'), 'cc'), (('translates', 'used'), 'conj'), (('the', 'text'), 'det'), (('text', 'translates'), 'obj'), (('from', 'language'), 'case'), (('one', 'language'), 'nummod'), (('language', 'translates'), 'obl'), (('to', 'language'), 'case'), (('another', 'language'), 'det'), (('language', 'language'), 'nmod'), (('.', 'sequence'), 'punct')]

 Named Entities are: 
>> []