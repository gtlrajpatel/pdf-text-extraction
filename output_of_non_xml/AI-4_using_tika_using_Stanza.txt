

========================== Sentence 1 ===========================

 AI-4 Difference between Human and Machine Intelligence · Humans perceive by patterns whereas the machines perceive by set of rules and data. 

Tokens are: 
>> ['AI', '-4', 'Difference', 'between', 'Human', 'and', 'Machine', 'Intelligence', '·', 'Humans', 'perceive', 'by', 'patterns', 'whereas', 'the', 'machines', 'perceive', 'by', 'set', 'of', 'rules', 'and', 'data', '.'] 

 UPOS tags are: 
>> [('AI', 'VERB'), ('-4', 'NUM'), ('Difference', 'NOUN'), ('between', 'ADP'), ('Human', 'ADJ'), ('and', 'CCONJ'), ('Machine', 'PROPN'), ('Intelligence', 'PROPN'), ('·', 'PUNCT'), ('Humans', 'PROPN'), ('perceive', 'VERB'), ('by', 'ADP'), ('patterns', 'NOUN'), ('whereas', 'SCONJ'), ('the', 'DET'), ('machines', 'NOUN'), ('perceive', 'VERB'), ('by', 'ADP'), ('set', 'NOUN'), ('of', 'ADP'), ('rules', 'NOUN'), ('and', 'CCONJ'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('AI', 'VB'), ('-4', 'CD'), ('Difference', 'NN'), ('between', 'IN'), ('Human', 'JJ'), ('and', 'CC'), ('Machine', 'NNP'), ('Intelligence', 'NNP'), ('·', ','), ('Humans', 'NNPS'), ('perceive', 'VBP'), ('by', 'IN'), ('patterns', 'NNS'), ('whereas', 'IN'), ('the', 'DT'), ('machines', 'NNS'), ('perceive', 'VBP'), ('by', 'IN'), ('set', 'NN'), ('of', 'IN'), ('rules', 'NNS'), ('and', 'CC'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('AI', 'be'), ('-4', '-4'), ('Difference', 'difference'), ('between', 'between'), ('Human', 'human'), ('and', 'and'), ('Machine', 'Machine'), ('Intelligence', 'Intelligence'), ('·', '·'), ('Humans', 'human'), ('perceive', 'perceive'), ('by', 'by'), ('patterns', 'pattern'), ('whereas', 'whereas'), ('the', 'the'), ('machines', 'machine'), ('perceive', 'perceive'), ('by', 'by'), ('set', 'set'), ('of', 'of'), ('rules', 'rule'), ('and', 'and'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), (('-4', 'Difference'), 'nummod'), (('Difference', 'AI'), 'nsubj'), (('between', 'Intelligence'), 'case'), (('Human', 'Intelligence'), 'amod'), (('and', 'Machine'), 'cc'), (('Machine', 'Human'), 'conj'), (('Intelligence', 'Difference'), 'nmod'), (('·', 'AI'), 'punct'), (('Humans', 'perceive'), 'nsubj'), (('perceive', 'AI'), 'parataxis'), (('by', 'patterns'), 'case'), (('patterns', 'perceive'), 'obl'), (('whereas', 'perceive'), 'mark'), (('the', 'machines'), 'det'), (('machines', 'perceive'), 'nsubj'), (('perceive', 'perceive'), 'advcl'), (('by', 'set'), 'case'), (('set', 'perceive'), 'obl'), (('of', 'rules'), 'case'), (('rules', 'set'), 'nmod'), (('and', 'data'), 'cc'), (('data', 'rules'), 'conj'), (('.', 'AI'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 · Humans store and recall information by patterns, machines do it by searching algorithms. 

Tokens are: 
>> ['·', 'Humans', 'store', 'and', 'recall', 'information', 'by', 'patterns', ',', 'machines', 'do', 'it', 'by', 'searching', 'algorithms', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Humans', 'NOUN'), ('store', 'VERB'), ('and', 'CCONJ'), ('recall', 'VERB'), ('information', 'NOUN'), ('by', 'ADP'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('machines', 'NOUN'), ('do', 'VERB'), ('it', 'PRON'), ('by', 'SCONJ'), ('searching', 'VERB'), ('algorithms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Humans', 'NNS'), ('store', 'VBP'), ('and', 'CC'), ('recall', 'VBP'), ('information', 'NN'), ('by', 'IN'), ('patterns', 'NNS'), (',', ','), ('machines', 'NNS'), ('do', 'VBP'), ('it', 'PRP'), ('by', 'IN'), ('searching', 'VBG'), ('algorithms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Humans', 'human'), ('store', 'store'), ('and', 'and'), ('recall', 'recall'), ('information', 'information'), ('by', 'by'), ('patterns', 'pattern'), (',', ','), ('machines', 'machine'), ('do', 'do'), ('it', 'it'), ('by', 'by'), ('searching', 'search'), ('algorithms', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'store'), 'punct'), (('Humans', 'store'), 'nsubj'), (('store', 'root'), 'root'), (('and', 'recall'), 'cc'), (('recall', 'store'), 'conj'), (('information', 'recall'), 'obj'), (('by', 'patterns'), 'case'), (('patterns', 'recall'), 'obl'), ((',', 'do'), 'punct'), (('machines', 'do'), 'nsubj'), (('do', 'store'), 'parataxis'), (('it', 'do'), 'obj'), (('by', 'searching'), 'mark'), (('searching', 'do'), 'advcl'), (('algorithms', 'searching'), 'obj'), (('.', 'store'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 3 ===========================

 For example, the number 40404040 is easy to remember, store, and recall as its pattern is simple. 

Tokens are: 
>> ['For', 'example', ',', 'the', 'number', '40404040', 'is', 'easy', 'to', 'remember', ',', 'store', ',', 'and', 'recall', 'as', 'its', 'pattern', 'is', 'simple', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('number', 'NOUN'), ('40404040', 'NUM'), ('is', 'AUX'), ('easy', 'ADJ'), ('to', 'PART'), ('remember', 'VERB'), (',', 'PUNCT'), ('store', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('recall', 'VERB'), ('as', 'SCONJ'), ('its', 'PRON'), ('pattern', 'NOUN'), ('is', 'AUX'), ('simple', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('number', 'NN'), ('40404040', 'CD'), ('is', 'VBZ'), ('easy', 'JJ'), ('to', 'TO'), ('remember', 'VB'), (',', ','), ('store', 'NN'), (',', ','), ('and', 'CC'), ('recall', 'VB'), ('as', 'IN'), ('its', 'PRP$'), ('pattern', 'NN'), ('is', 'VBZ'), ('simple', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('number', 'number'), ('40404040', '40404040'), ('is', 'be'), ('easy', 'easy'), ('to', 'to'), ('remember', 'remember'), (',', ','), ('store', 'store'), (',', ','), ('and', 'and'), ('recall', 'recall'), ('as', 'as'), ('its', 'its'), ('pattern', 'pattern'), ('is', 'be'), ('simple', 'simple'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'easy'), 'obl'), ((',', 'easy'), 'punct'), (('the', 'number'), 'det'), (('number', 'easy'), 'nsubj'), (('40404040', 'number'), 'nummod'), (('is', 'easy'), 'cop'), (('easy', 'root'), 'root'), (('to', 'remember'), 'mark'), (('remember', 'easy'), 'ccomp'), ((',', 'store'), 'punct'), (('store', 'remember'), 'obj'), ((',', 'recall'), 'punct'), (('and', 'recall'), 'cc'), (('recall', 'remember'), 'conj'), (('as', 'simple'), 'mark'), (('its', 'pattern'), 'nmod:poss'), (('pattern', 'simple'), 'nsubj'), (('is', 'simple'), 'cop'), (('simple', 'recall'), 'advcl'), (('.', 'easy'), 'punct')]

 Named Entities are: 
>> [('40404040', 'CARDINAL')]

========================== Sentence 4 ===========================

 · Humans can figure out the complete object even if some part of it is missing or distorted; whereas the machines cannot do it correctly. 

Tokens are: 
>> ['·', 'Humans', 'can', 'figure', 'out', 'the', 'complete', 'object', 'even', 'if', 'some', 'part', 'of', 'it', 'is', 'missing', 'or', 'distorted', ';', 'whereas', 'the', 'machines', 'cannot', 'do', 'it', 'correctly', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Humans', 'NOUN'), ('can', 'AUX'), ('figure', 'VERB'), ('out', 'ADP'), ('the', 'DET'), ('complete', 'ADJ'), ('object', 'NOUN'), ('even', 'ADV'), ('if', 'SCONJ'), ('some', 'DET'), ('part', 'NOUN'), ('of', 'ADP'), ('it', 'PRON'), ('is', 'AUX'), ('missing', 'VERB'), ('or', 'CCONJ'), ('distorted', 'VERB'), (';', 'PUNCT'), ('whereas', 'SCONJ'), ('the', 'DET'), ('machines', 'NOUN'), ('cannot', 'AUX'), ('do', 'VERB'), ('it', 'PRON'), ('correctly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Humans', 'NNS'), ('can', 'MD'), ('figure', 'VB'), ('out', 'RP'), ('the', 'DT'), ('complete', 'JJ'), ('object', 'NN'), ('even', 'RB'), ('if', 'IN'), ('some', 'DT'), ('part', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('missing', 'VBG'), ('or', 'CC'), ('distorted', 'VBN'), (';', ','), ('whereas', 'IN'), ('the', 'DT'), ('machines', 'NNS'), ('cannot', 'MD'), ('do', 'VB'), ('it', 'PRP'), ('correctly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Humans', 'human'), ('can', 'can'), ('figure', 'figure'), ('out', 'out'), ('the', 'the'), ('complete', 'complete'), ('object', 'object'), ('even', 'even'), ('if', 'if'), ('some', 'some'), ('part', 'part'), ('of', 'of'), ('it', 'it'), ('is', 'be'), ('missing', 'miss'), ('or', 'or'), ('distorted', 'distort'), (';', ';'), ('whereas', 'whereas'), ('the', 'the'), ('machines', 'machine'), ('cannot', 'cannot'), ('do', 'do'), ('it', 'it'), ('correctly', 'correctly'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'figure'), 'punct'), (('Humans', 'figure'), 'nsubj'), (('can', 'figure'), 'aux'), (('figure', 'root'), 'root'), (('out', 'figure'), 'compound:prt'), (('the', 'object'), 'det'), (('complete', 'object'), 'amod'), (('object', 'figure'), 'obj'), (('even', 'missing'), 'advmod'), (('if', 'missing'), 'mark'), (('some', 'part'), 'det'), (('part', 'missing'), 'nsubj'), (('of', 'it'), 'case'), (('it', 'part'), 'nmod'), (('is', 'missing'), 'aux'), (('missing', 'figure'), 'advcl'), (('or', 'distorted'), 'cc'), (('distorted', 'missing'), 'conj'), ((';', 'figure'), 'punct'), (('whereas', 'do'), 'mark'), (('the', 'machines'), 'det'), (('machines', 'do'), 'nsubj'), (('cannot', 'do'), 'aux'), (('do', 'figure'), 'advcl'), (('it', 'do'), 'obj'), (('correctly', 'do'), 'advmod'), (('.', 'figure'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 Speech and Voice Recognition 

Tokens are: 
>> ['Speech', 'and', 'Voice', 'Recognition'] 

 UPOS tags are: 
>> [('Speech', 'NOUN'), ('and', 'CCONJ'), ('Voice', 'NOUN'), ('Recognition', 'NOUN')] 

 XPOS tags are: 
>> [('Speech', 'NN'), ('and', 'CC'), ('Voice', 'NN'), ('Recognition', 'NN')] 

 Lemmas are: 
>> [('Speech', 'speech'), ('and', 'and'), ('Voice', 'Voice'), ('Recognition', 'recognition')] 

 Dependency tags are: 
>> [(('Speech', 'root'), 'root'), (('and', 'Recognition'), 'cc'), (('Voice', 'Recognition'), 'compound'), (('Recognition', 'Speech'), 'conj')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 These both terms are common in robotics, expert systems and natural language processing. 

Tokens are: 
>> ['These', 'both', 'terms', 'are', 'common', 'in', 'robotics', ',', 'expert', 'systems', 'and', 'natural', 'language', 'processing', '.'] 

 UPOS tags are: 
>> [('These', 'DET'), ('both', 'DET'), ('terms', 'NOUN'), ('are', 'AUX'), ('common', 'ADJ'), ('in', 'ADP'), ('robotics', 'NOUN'), (',', 'PUNCT'), ('expert', 'NOUN'), ('systems', 'NOUN'), ('and', 'CCONJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('both', 'DT'), ('terms', 'NNS'), ('are', 'VBP'), ('common', 'JJ'), ('in', 'IN'), ('robotics', 'NNS'), (',', ','), ('expert', 'NN'), ('systems', 'NNS'), ('and', 'CC'), ('natural', 'JJ'), ('language', 'NN'), ('processing', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('both', 'both'), ('terms', 'term'), ('are', 'be'), ('common', 'common'), ('in', 'in'), ('robotics', 'robotic'), (',', ','), ('expert', 'expert'), ('systems', 'system'), ('and', 'and'), ('natural', 'natural'), ('language', 'language'), ('processing', 'processing'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'terms'), 'det'), (('both', 'terms'), 'det'), (('terms', 'common'), 'nsubj'), (('are', 'common'), 'cop'), (('common', 'root'), 'root'), (('in', 'robotics'), 'case'), (('robotics', 'common'), 'obl'), ((',', 'systems'), 'punct'), (('expert', 'systems'), 'compound'), (('systems', 'robotics'), 'conj'), (('and', 'processing'), 'cc'), (('natural', 'processing'), 'amod'), (('language', 'processing'), 'compound'), (('processing', 'robotics'), 'conj'), (('.', 'common'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 Though these terms are used interchangeably, their objectives are different. 

Tokens are: 
>> ['Though', 'these', 'terms', 'are', 'used', 'interchangeably', ',', 'their', 'objectives', 'are', 'different', '.'] 

 UPOS tags are: 
>> [('Though', 'SCONJ'), ('these', 'DET'), ('terms', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('interchangeably', 'ADV'), (',', 'PUNCT'), ('their', 'PRON'), ('objectives', 'NOUN'), ('are', 'AUX'), ('different', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Though', 'IN'), ('these', 'DT'), ('terms', 'NNS'), ('are', 'VBP'), ('used', 'VBN'), ('interchangeably', 'RB'), (',', ','), ('their', 'PRP$'), ('objectives', 'NNS'), ('are', 'VBP'), ('different', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Though', 'though'), ('these', 'this'), ('terms', 'term'), ('are', 'be'), ('used', 'use'), ('interchangeably', 'interchangeably'), (',', ','), ('their', 'they'), ('objectives', 'objective'), ('are', 'be'), ('different', 'different'), ('.', '.')] 

 Dependency tags are: 
>> [(('Though', 'used'), 'mark'), (('these', 'terms'), 'det'), (('terms', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'different'), 'advcl'), (('interchangeably', 'used'), 'advmod'), ((',', 'different'), 'punct'), (('their', 'objectives'), 'nmod:poss'), (('objectives', 'different'), 'nsubj'), (('are', 'different'), 'cop'), (('different', 'root'), 'root'), (('.', 'different'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 Speech Recognition 	Voice Recognition 

Tokens are: 
>> ['Speech', 'Recognition', 'Voice', 'Recognition'] 

 UPOS tags are: 
>> [('Speech', 'NOUN'), ('Recognition', 'NOUN'), ('Voice', 'NOUN'), ('Recognition', 'NOUN')] 

 XPOS tags are: 
>> [('Speech', 'NN'), ('Recognition', 'NN'), ('Voice', 'NN'), ('Recognition', 'NN')] 

 Lemmas are: 
>> [('Speech', 'speech'), ('Recognition', 'recognition'), ('Voice', 'Voice'), ('Recognition', 'recognition')] 

 Dependency tags are: 
>> [(('Speech', 'Recognition'), 'compound'), (('Recognition', 'Recognition'), 'compound'), (('Voice', 'Recognition'), 'compound'), (('Recognition', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 The speech recognition aims at understanding and comprehending WHAT was spoken. 

Tokens are: 
>> ['The', 'speech', 'recognition', 'aims', 'at', 'understanding', 'and', 'comprehending', 'WHAT', 'was', 'spoken', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('aims', 'VERB'), ('at', 'SCONJ'), ('understanding', 'NOUN'), ('and', 'CCONJ'), ('comprehending', 'VERB'), ('WHAT', 'PRON'), ('was', 'AUX'), ('spoken', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('speech', 'NN'), ('recognition', 'NN'), ('aims', 'VBZ'), ('at', 'IN'), ('understanding', 'NN'), ('and', 'CC'), ('comprehending', 'VBG'), ('WHAT', 'WP'), ('was', 'VBD'), ('spoken', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('speech', 'speech'), ('recognition', 'recognition'), ('aims', 'aim'), ('at', 'at'), ('understanding', 'understanding'), ('and', 'and'), ('comprehending', 'comprehend'), ('WHAT', 'what'), ('was', 'be'), ('spoken', 'speak'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'recognition'), 'det'), (('speech', 'recognition'), 'compound'), (('recognition', 'aims'), 'nsubj'), (('aims', 'root'), 'root'), (('at', 'understanding'), 'case'), (('understanding', 'aims'), 'obl'), (('and', 'comprehending'), 'cc'), (('comprehending', 'understanding'), 'conj'), (('WHAT', 'spoken'), 'nsubj:pass'), (('was', 'spoken'), 'aux:pass'), (('spoken', 'comprehending'), 'ccomp'), (('.', 'aims'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 The objective of voice recognition is to recognize WHO is speaking. 

Tokens are: 
>> ['The', 'objective', 'of', 'voice', 'recognition', 'is', 'to', 'recognize', 'WHO', 'is', 'speaking', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('objective', 'NOUN'), ('of', 'ADP'), ('voice', 'NOUN'), ('recognition', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('recognize', 'VERB'), ('WHO', 'PRON'), ('is', 'AUX'), ('speaking', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('objective', 'NN'), ('of', 'IN'), ('voice', 'NN'), ('recognition', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('recognize', 'VB'), ('WHO', 'WP'), ('is', 'VBZ'), ('speaking', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('objective', 'objective'), ('of', 'of'), ('voice', 'voice'), ('recognition', 'recognition'), ('is', 'be'), ('to', 'to'), ('recognize', 'recognize'), ('WHO', 'who'), ('is', 'be'), ('speaking', 'speak'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'objective'), 'det'), (('objective', 'recognize'), 'nsubj'), (('of', 'recognition'), 'case'), (('voice', 'recognition'), 'compound'), (('recognition', 'objective'), 'nmod'), (('is', 'recognize'), 'cop'), (('to', 'recognize'), 'mark'), (('recognize', 'root'), 'root'), (('WHO', 'speaking'), 'nsubj'), (('is', 'speaking'), 'aux'), (('speaking', 'recognize'), 'ccomp'), (('.', 'recognize'), 'punct')]

 Named Entities are: 
>> [('WHO', 'ORG')]

========================== Sentence 11 ===========================

 It is used in hand-free computing, map, or menu navigation. 

Tokens are: 
>> ['It', 'is', 'used', 'in', 'hand', '-', 'free', 'computing', ',', 'map', ',', 'or', 'menu', 'navigation', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('used', 'VERB'), ('in', 'ADP'), ('hand', 'NOUN'), ('-', 'PUNCT'), ('free', 'ADJ'), ('computing', 'NOUN'), (',', 'PUNCT'), ('map', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('menu', 'NOUN'), ('navigation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('used', 'VBN'), ('in', 'IN'), ('hand', 'NN'), ('-', 'HYPH'), ('free', 'JJ'), ('computing', 'NN'), (',', ','), ('map', 'NN'), (',', ','), ('or', 'CC'), ('menu', 'NN'), ('navigation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('used', 'use'), ('in', 'in'), ('hand', 'hand'), ('-', '-'), ('free', 'free'), ('computing', 'computing'), (',', ','), ('map', 'map'), (',', ','), ('or', 'or'), ('menu', 'menu'), ('navigation', 'navigation'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('in', 'navigation'), 'case'), (('hand', 'free'), 'obl:npmod'), (('-', 'free'), 'punct'), (('free', 'navigation'), 'amod'), (('computing', 'navigation'), 'compound'), ((',', 'map'), 'punct'), (('map', 'computing'), 'conj'), ((',', 'menu'), 'punct'), (('or', 'menu'), 'cc'), (('menu', 'computing'), 'conj'), (('navigation', 'used'), 'obl'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 It is used to identify a person by analysing its tone, voice pitch, and accent, etc. 

Tokens are: 
>> ['It', 'is', 'used', 'to', 'identify', 'a', 'person', 'by', 'analysing', 'its', 'tone', ',', 'voice', 'pitch', ',', 'and', 'accent', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('identify', 'VERB'), ('a', 'DET'), ('person', 'NOUN'), ('by', 'SCONJ'), ('analysing', 'VERB'), ('its', 'PRON'), ('tone', 'NOUN'), (',', 'PUNCT'), ('voice', 'NOUN'), ('pitch', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('accent', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('used', 'VBN'), ('to', 'TO'), ('identify', 'VB'), ('a', 'DT'), ('person', 'NN'), ('by', 'IN'), ('analysing', 'VBG'), ('its', 'PRP$'), ('tone', 'NN'), (',', ','), ('voice', 'NN'), ('pitch', 'NN'), (',', ','), ('and', 'CC'), ('accent', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('used', 'use'), ('to', 'to'), ('identify', 'identify'), ('a', 'a'), ('person', 'person'), ('by', 'by'), ('analysing', 'analyse'), ('its', 'its'), ('tone', 'tone'), (',', ','), ('voice', 'voice'), ('pitch', 'pitch'), (',', ','), ('and', 'and'), ('accent', 'accent'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'identify'), 'mark'), (('identify', 'used'), 'xcomp'), (('a', 'person'), 'det'), (('person', 'identify'), 'obj'), (('by', 'analysing'), 'mark'), (('analysing', 'identify'), 'advcl'), (('its', 'tone'), 'nmod:poss'), (('tone', 'analysing'), 'obj'), ((',', 'pitch'), 'punct'), (('voice', 'pitch'), 'compound'), (('pitch', 'tone'), 'conj'), ((',', 'accent'), 'punct'), (('and', 'accent'), 'cc'), (('accent', 'tone'), 'conj'), ((',', 'etc'), 'punct'), (('etc', 'tone'), 'conj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 Machine does not need training for Speech Recognition as it is not speaker dependent. 

Tokens are: 
>> ['Machine', 'does', 'not', 'need', 'training', 'for', 'Speech', 'Recognition', 'as', 'it', 'is', 'not', 'speaker', 'dependent', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('need', 'VERB'), ('training', 'NOUN'), ('for', 'ADP'), ('Speech', 'NOUN'), ('Recognition', 'NOUN'), ('as', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('not', 'PART'), ('speaker', 'NOUN'), ('dependent', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('need', 'VB'), ('training', 'NN'), ('for', 'IN'), ('Speech', 'NN'), ('Recognition', 'NN'), ('as', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('speaker', 'NN'), ('dependent', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('does', 'do'), ('not', 'not'), ('need', 'need'), ('training', 'training'), ('for', 'for'), ('Speech', 'speech'), ('Recognition', 'recognition'), ('as', 'as'), ('it', 'it'), ('is', 'be'), ('not', 'not'), ('speaker', 'speaker'), ('dependent', 'dependent'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'need'), 'nsubj'), (('does', 'need'), 'aux'), (('not', 'need'), 'advmod'), (('need', 'root'), 'root'), (('training', 'need'), 'obj'), (('for', 'Recognition'), 'case'), (('Speech', 'Recognition'), 'compound'), (('Recognition', 'training'), 'nmod'), (('as', 'speaker'), 'mark'), (('it', 'speaker'), 'nsubj'), (('is', 'speaker'), 'cop'), (('not', 'speaker'), 'advmod'), (('speaker', 'need'), 'advcl'), (('dependent', 'speaker'), 'amod'), (('.', 'need'), 'punct')]

 Named Entities are: 
>> [('Speech Recognition', 'ORG')]

========================== Sentence 14 ===========================

 This recognition system needs training as it is person oriented. 

Tokens are: 
>> ['This', 'recognition', 'system', 'needs', 'training', 'as', 'it', 'is', 'person', 'oriented', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('needs', 'VERB'), ('training', 'NOUN'), ('as', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('person', 'NOUN'), ('oriented', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('recognition', 'NN'), ('system', 'NN'), ('needs', 'VBZ'), ('training', 'NN'), ('as', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('person', 'NN'), ('oriented', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('recognition', 'recognition'), ('system', 'system'), ('needs', 'need'), ('training', 'training'), ('as', 'as'), ('it', 'it'), ('is', 'be'), ('person', 'person'), ('oriented', 'orient'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'system'), 'det'), (('recognition', 'system'), 'compound'), (('system', 'needs'), 'nsubj'), (('needs', 'root'), 'root'), (('training', 'needs'), 'obj'), (('as', 'person'), 'mark'), (('it', 'person'), 'nsubj'), (('is', 'person'), 'cop'), (('person', 'needs'), 'advcl'), (('oriented', 'person'), 'amod'), (('.', 'needs'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 15 ===========================

 Speaker independent Speech Recognition systems are difficult to develop. 

Tokens are: 
>> ['Speaker', 'independent', 'Speech', 'Recognition', 'systems', 'are', 'difficult', 'to', 'develop', '.'] 

 UPOS tags are: 
>> [('Speaker', 'ADJ'), ('independent', 'ADJ'), ('Speech', 'NOUN'), ('Recognition', 'NOUN'), ('systems', 'NOUN'), ('are', 'AUX'), ('difficult', 'ADJ'), ('to', 'PART'), ('develop', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Speaker', 'JJ'), ('independent', 'JJ'), ('Speech', 'NN'), ('Recognition', 'NN'), ('systems', 'NNS'), ('are', 'VBP'), ('difficult', 'JJ'), ('to', 'TO'), ('develop', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Speaker', 'Speaker'), ('independent', 'independent'), ('Speech', 'speech'), ('Recognition', 'recognition'), ('systems', 'system'), ('are', 'be'), ('difficult', 'difficult'), ('to', 'to'), ('develop', 'develop'), ('.', '.')] 

 Dependency tags are: 
>> [(('Speaker', 'systems'), 'amod'), (('independent', 'systems'), 'amod'), (('Speech', 'Recognition'), 'compound'), (('Recognition', 'systems'), 'compound'), (('systems', 'difficult'), 'nsubj'), (('are', 'difficult'), 'cop'), (('difficult', 'root'), 'root'), (('to', 'develop'), 'mark'), (('develop', 'difficult'), 'xcomp'), (('.', 'difficult'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 Speaker dependent Speech Recognition systems are comparatively easy to develop. 

Tokens are: 
>> ['Speaker', 'dependent', 'Speech', 'Recognition', 'systems', 'are', 'comparatively', 'easy', 'to', 'develop', '.'] 

 UPOS tags are: 
>> [('Speaker', 'PROPN'), ('dependent', 'ADJ'), ('Speech', 'NOUN'), ('Recognition', 'NOUN'), ('systems', 'NOUN'), ('are', 'AUX'), ('comparatively', 'ADV'), ('easy', 'ADJ'), ('to', 'PART'), ('develop', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Speaker', 'NNP'), ('dependent', 'JJ'), ('Speech', 'NN'), ('Recognition', 'NN'), ('systems', 'NNS'), ('are', 'VBP'), ('comparatively', 'RB'), ('easy', 'JJ'), ('to', 'TO'), ('develop', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Speaker', 'Speaker'), ('dependent', 'dependent'), ('Speech', 'speech'), ('Recognition', 'recognition'), ('systems', 'system'), ('are', 'be'), ('comparatively', 'comparatively'), ('easy', 'easy'), ('to', 'to'), ('develop', 'develop'), ('.', '.')] 

 Dependency tags are: 
>> [(('Speaker', 'systems'), 'compound'), (('dependent', 'systems'), 'amod'), (('Speech', 'Recognition'), 'compound'), (('Recognition', 'systems'), 'compound'), (('systems', 'easy'), 'nsubj'), (('are', 'easy'), 'cop'), (('comparatively', 'easy'), 'advmod'), (('easy', 'root'), 'root'), (('to', 'develop'), 'mark'), (('develop', 'easy'), 'ccomp'), (('.', 'easy'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 Working of Speech and Voice Recognition Systems 

Tokens are: 
>> ['Working', 'of', 'Speech', 'and', 'Voice', 'Recognition', 'Systems'] 

 UPOS tags are: 
>> [('Working', 'VERB'), ('of', 'ADP'), ('Speech', 'NOUN'), ('and', 'CCONJ'), ('Voice', 'NOUN'), ('Recognition', 'NOUN'), ('Systems', 'NOUN')] 

 XPOS tags are: 
>> [('Working', 'VBG'), ('of', 'IN'), ('Speech', 'NN'), ('and', 'CC'), ('Voice', 'NN'), ('Recognition', 'NN'), ('Systems', 'NNS')] 

 Lemmas are: 
>> [('Working', 'work'), ('of', 'of'), ('Speech', 'speech'), ('and', 'and'), ('Voice', 'Voice'), ('Recognition', 'recognition'), ('Systems', 'system')] 

 Dependency tags are: 
>> [(('Working', 'root'), 'root'), (('of', 'Systems'), 'case'), (('Speech', 'Systems'), 'compound'), (('and', 'Recognition'), 'cc'), (('Voice', 'Recognition'), 'compound'), (('Recognition', 'Systems'), 'compound'), (('Systems', 'Working'), 'obl')]

 Named Entities are: 
>> [('Voice Recognition Systems', 'ORG')]

========================== Sentence 18 ===========================

 The user input spoken at a microphone goes to sound card of the system. 

Tokens are: 
>> ['The', 'user', 'input', 'spoken', 'at', 'a', 'microphone', 'goes', 'to', 'sound', 'card', 'of', 'the', 'system', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('user', 'NOUN'), ('input', 'NOUN'), ('spoken', 'VERB'), ('at', 'ADP'), ('a', 'DET'), ('microphone', 'NOUN'), ('goes', 'VERB'), ('to', 'ADP'), ('sound', 'NOUN'), ('card', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('user', 'NN'), ('input', 'NN'), ('spoken', 'VBN'), ('at', 'IN'), ('a', 'DT'), ('microphone', 'NN'), ('goes', 'VBZ'), ('to', 'IN'), ('sound', 'NN'), ('card', 'NN'), ('of', 'IN'), ('the', 'DT'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('user', 'user'), ('input', 'input'), ('spoken', 'speak'), ('at', 'at'), ('a', 'a'), ('microphone', 'microphone'), ('goes', 'go'), ('to', 'to'), ('sound', 'sound'), ('card', 'card'), ('of', 'of'), ('the', 'the'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'input'), 'det'), (('user', 'input'), 'compound'), (('input', 'goes'), 'nsubj'), (('spoken', 'input'), 'acl'), (('at', 'microphone'), 'case'), (('a', 'microphone'), 'det'), (('microphone', 'spoken'), 'obl'), (('goes', 'root'), 'root'), (('to', 'card'), 'case'), (('sound', 'card'), 'compound'), (('card', 'goes'), 'obl'), (('of', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'card'), 'nmod'), (('.', 'goes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 The converter turns the analog signal into equivalent digital signal for the speech processing. 

Tokens are: 
>> ['The', 'converter', 'turns', 'the', 'analog', 'signal', 'into', 'equivalent', 'digital', 'signal', 'for', 'the', 'speech', 'processing', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('converter', 'NOUN'), ('turns', 'VERB'), ('the', 'DET'), ('analog', 'NOUN'), ('signal', 'NOUN'), ('into', 'ADP'), ('equivalent', 'ADJ'), ('digital', 'ADJ'), ('signal', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('speech', 'NOUN'), ('processing', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('converter', 'NN'), ('turns', 'VBZ'), ('the', 'DT'), ('analog', 'NN'), ('signal', 'NN'), ('into', 'IN'), ('equivalent', 'JJ'), ('digital', 'JJ'), ('signal', 'NN'), ('for', 'IN'), ('the', 'DT'), ('speech', 'NN'), ('processing', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('converter', 'converter'), ('turns', 'turn'), ('the', 'the'), ('analog', 'analog'), ('signal', 'signal'), ('into', 'into'), ('equivalent', 'equivalent'), ('digital', 'digital'), ('signal', 'signal'), ('for', 'for'), ('the', 'the'), ('speech', 'speech'), ('processing', 'processing'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'converter'), 'det'), (('converter', 'turns'), 'nsubj'), (('turns', 'root'), 'root'), (('the', 'signal'), 'det'), (('analog', 'signal'), 'compound'), (('signal', 'turns'), 'obj'), (('into', 'signal'), 'case'), (('equivalent', 'signal'), 'amod'), (('digital', 'signal'), 'amod'), (('signal', 'turns'), 'obl'), (('for', 'processing'), 'case'), (('the', 'processing'), 'det'), (('speech', 'processing'), 'compound'), (('processing', 'signal'), 'nmod'), (('.', 'turns'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 The database is used to compare the sound patterns to recognize the words. 

Tokens are: 
>> ['The', 'database', 'is', 'used', 'to', 'compare', 'the', 'sound', 'patterns', 'to', 'recognize', 'the', 'words', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('database', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('compare', 'VERB'), ('the', 'DET'), ('sound', 'NOUN'), ('patterns', 'NOUN'), ('to', 'PART'), ('recognize', 'VERB'), ('the', 'DET'), ('words', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('database', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('to', 'TO'), ('compare', 'VB'), ('the', 'DT'), ('sound', 'NN'), ('patterns', 'NNS'), ('to', 'TO'), ('recognize', 'VB'), ('the', 'DT'), ('words', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('database', 'database'), ('is', 'be'), ('used', 'use'), ('to', 'to'), ('compare', 'compare'), ('the', 'the'), ('sound', 'sound'), ('patterns', 'pattern'), ('to', 'to'), ('recognize', 'recognize'), ('the', 'the'), ('words', 'word'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'database'), 'det'), (('database', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'compare'), 'mark'), (('compare', 'used'), 'xcomp'), (('the', 'patterns'), 'det'), (('sound', 'patterns'), 'compound'), (('patterns', 'compare'), 'obj'), (('to', 'recognize'), 'mark'), (('recognize', 'compare'), 'advcl'), (('the', 'words'), 'det'), (('words', 'recognize'), 'obj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 Finally, a reverse feedback is given to the database. 

Tokens are: 
>> ['Finally', ',', 'a', 'reverse', 'feedback', 'is', 'given', 'to', 'the', 'database', '.'] 

 UPOS tags are: 
>> [('Finally', 'ADV'), (',', 'PUNCT'), ('a', 'DET'), ('reverse', 'ADJ'), ('feedback', 'NOUN'), ('is', 'AUX'), ('given', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('database', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Finally', 'RB'), (',', ','), ('a', 'DT'), ('reverse', 'JJ'), ('feedback', 'NN'), ('is', 'VBZ'), ('given', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('database', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Finally', 'finally'), (',', ','), ('a', 'a'), ('reverse', 'reverse'), ('feedback', 'feedback'), ('is', 'be'), ('given', 'give'), ('to', 'to'), ('the', 'the'), ('database', 'database'), ('.', '.')] 

 Dependency tags are: 
>> [(('Finally', 'given'), 'advmod'), ((',', 'given'), 'punct'), (('a', 'feedback'), 'det'), (('reverse', 'feedback'), 'amod'), (('feedback', 'given'), 'nsubj:pass'), (('is', 'given'), 'aux:pass'), (('given', 'root'), 'root'), (('to', 'database'), 'case'), (('the', 'database'), 'det'), (('database', 'given'), 'obl'), (('.', 'given'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 This source-language text becomes input to the Translation Engine, which converts it to the target language text. 

Tokens are: 
>> ['This', 'source', '-', 'language', 'text', 'becomes', 'input', 'to', 'the', 'Translation', 'Engine', ',', 'which', 'converts', 'it', 'to', 'the', 'target', 'language', 'text', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('source', 'NOUN'), ('-', 'PUNCT'), ('language', 'NOUN'), ('text', 'NOUN'), ('becomes', 'VERB'), ('input', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('Translation', 'PROPN'), ('Engine', 'PROPN'), (',', 'PUNCT'), ('which', 'PRON'), ('converts', 'VERB'), ('it', 'PRON'), ('to', 'ADP'), ('the', 'DET'), ('target', 'NOUN'), ('language', 'NOUN'), ('text', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('source', 'NN'), ('-', 'HYPH'), ('language', 'NN'), ('text', 'NN'), ('becomes', 'VBZ'), ('input', 'NN'), ('to', 'IN'), ('the', 'DT'), ('Translation', 'NNP'), ('Engine', 'NNP'), (',', ','), ('which', 'WDT'), ('converts', 'VBZ'), ('it', 'PRP'), ('to', 'IN'), ('the', 'DT'), ('target', 'NN'), ('language', 'NN'), ('text', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('source', 'source'), ('-', '-'), ('language', 'language'), ('text', 'text'), ('becomes', 'become'), ('input', 'input'), ('to', 'to'), ('the', 'the'), ('Translation', 'Translation'), ('Engine', 'engine'), (',', ','), ('which', 'which'), ('converts', 'convert'), ('it', 'it'), ('to', 'to'), ('the', 'the'), ('target', 'target'), ('language', 'language'), ('text', 'text'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'text'), 'det'), (('source', 'language'), 'compound'), (('-', 'language'), 'punct'), (('language', 'text'), 'compound'), (('text', 'becomes'), 'nsubj'), (('becomes', 'root'), 'root'), (('input', 'becomes'), 'xcomp'), (('to', 'Engine'), 'case'), (('the', 'Engine'), 'det'), (('Translation', 'Engine'), 'compound'), (('Engine', 'input'), 'nmod'), ((',', 'Engine'), 'punct'), (('which', 'converts'), 'nsubj'), (('converts', 'Engine'), 'acl:relcl'), (('it', 'converts'), 'obj'), (('to', 'text'), 'case'), (('the', 'text'), 'det'), (('target', 'text'), 'compound'), (('language', 'text'), 'compound'), (('text', 'converts'), 'obl'), (('.', 'becomes'), 'punct')]

 Named Entities are: 
>> [('the Translation Engine', 'WORK_OF_ART')]

========================== Sentence 23 ===========================

 They are supported with interactive GUI, large database of vocabulary, etc. Real Life Applications of Research Areas 

Tokens are: 
>> ['They', 'are', 'supported', 'with', 'interactive', 'GUI', ',', 'large', 'database', 'of', 'vocabulary', ',', 'etc.', 'Real', 'Life', 'Applications', 'of', 'Research', 'Areas'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('are', 'AUX'), ('supported', 'VERB'), ('with', 'ADP'), ('interactive', 'ADJ'), ('GUI', 'NOUN'), (',', 'PUNCT'), ('large', 'ADJ'), ('database', 'NOUN'), ('of', 'ADP'), ('vocabulary', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X'), ('Real', 'ADJ'), ('Life', 'NOUN'), ('Applications', 'NOUN'), ('of', 'ADP'), ('Research', 'NOUN'), ('Areas', 'NOUN')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('are', 'VBP'), ('supported', 'VBN'), ('with', 'IN'), ('interactive', 'JJ'), ('GUI', 'NN'), (',', ','), ('large', 'JJ'), ('database', 'NN'), ('of', 'IN'), ('vocabulary', 'NN'), (',', ','), ('etc.', 'FW'), ('Real', 'JJ'), ('Life', 'NN'), ('Applications', 'NNS'), ('of', 'IN'), ('Research', 'NN'), ('Areas', 'NNS')] 

 Lemmas are: 
>> [('They', 'they'), ('are', 'be'), ('supported', 'support'), ('with', 'with'), ('interactive', 'interactive'), ('GUI', 'GUI'), (',', ','), ('large', 'large'), ('database', 'database'), ('of', 'of'), ('vocabulary', 'vocabulary'), (',', ','), ('etc.', 'etc.'), ('Real', 'real'), ('Life', 'life'), ('Applications', 'application'), ('of', 'of'), ('Research', 'research'), ('Areas', 'area')] 

 Dependency tags are: 
>> [(('They', 'supported'), 'nsubj:pass'), (('are', 'supported'), 'aux:pass'), (('supported', 'root'), 'root'), (('with', 'GUI'), 'case'), (('interactive', 'GUI'), 'amod'), (('GUI', 'supported'), 'obl'), ((',', 'database'), 'punct'), (('large', 'database'), 'amod'), (('database', 'GUI'), 'conj'), (('of', 'vocabulary'), 'case'), (('vocabulary', 'database'), 'nmod'), ((',', 'etc.'), 'punct'), (('etc.', 'GUI'), 'conj'), (('Real', 'Applications'), 'amod'), (('Life', 'Applications'), 'compound'), (('Applications', 'GUI'), 'conj'), (('of', 'Areas'), 'case'), (('Research', 'Areas'), 'compound'), (('Areas', 'Applications'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 24 ===========================

 There is a large array of applications where AI is serving common people in their day-to-day lives − 	Sr.No. 

Tokens are: 
>> ['There', 'is', 'a', 'large', 'array', 'of', 'applications', 'where', 'AI', 'is', 'serving', 'common', 'people', 'in', 'their', 'day-', 'to', '-', 'day', 'lives', '−', 'Sr.No', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('large', 'ADJ'), ('array', 'NOUN'), ('of', 'ADP'), ('applications', 'NOUN'), ('where', 'SCONJ'), ('AI', 'NOUN'), ('is', 'AUX'), ('serving', 'VERB'), ('common', 'ADJ'), ('people', 'NOUN'), ('in', 'ADP'), ('their', 'PRON'), ('day-', 'ADJ'), ('to', 'ADP'), ('-', 'PUNCT'), ('day', 'NOUN'), ('lives', 'NOUN'), ('−', 'PUNCT'), ('Sr.No', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('large', 'JJ'), ('array', 'NN'), ('of', 'IN'), ('applications', 'NNS'), ('where', 'WRB'), ('AI', 'NN'), ('is', 'VBZ'), ('serving', 'VBG'), ('common', 'JJ'), ('people', 'NNS'), ('in', 'IN'), ('their', 'PRP$'), ('day-', 'JJ'), ('to', 'IN'), ('-', 'HYPH'), ('day', 'NN'), ('lives', 'NNS'), ('−', ','), ('Sr.No', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('is', 'be'), ('a', 'a'), ('large', 'large'), ('array', 'array'), ('of', 'of'), ('applications', 'application'), ('where', 'where'), ('AI', 'ai'), ('is', 'be'), ('serving', 'serve'), ('common', 'common'), ('people', 'people'), ('in', 'in'), ('their', 'they'), ('day-', 'day-'), ('to', 'to'), ('-', '-'), ('day', 'day'), ('lives', 'life'), ('−', "''"), ('Sr.No', 'Sr.No'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'is'), 'expl'), (('is', 'root'), 'root'), (('a', 'array'), 'det'), (('large', 'array'), 'amod'), (('array', 'is'), 'nsubj'), (('of', 'applications'), 'case'), (('applications', 'array'), 'nmod'), (('where', 'serving'), 'mark'), (('AI', 'serving'), 'nsubj'), (('is', 'serving'), 'aux'), (('serving', 'applications'), 'acl:relcl'), (('common', 'people'), 'amod'), (('people', 'serving'), 'obj'), (('in', 'lives'), 'case'), (('their', 'lives'), 'nmod:poss'), (('day-', 'lives'), 'amod'), (('to', 'day'), 'case'), (('-', 'day'), 'punct'), (('day', 'lives'), 'compound'), (('lives', 'serving'), 'obl'), (('−', 'lives'), 'punct'), (('Sr.No', 'lives'), 'appos'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> [('AI', 'ORG')]

========================== Sentence 25 ===========================

 Research Areas 	Real Life Application  	1 	Expert Systems Examples − Flight-tracking systems, Clinical systems. 

Tokens are: 
>> ['Research', 'Areas', 'Real', 'Life', 'Application', '1', 'Expert', 'Systems', 'Examples', '−', 'Flight-tracking', 'systems', ',', 'Clinical', 'systems', '.'] 

 UPOS tags are: 
>> [('Research', 'NOUN'), ('Areas', 'NOUN'), ('Real', 'ADJ'), ('Life', 'NOUN'), ('Application', 'NOUN'), ('1', 'NUM'), ('Expert', 'NOUN'), ('Systems', 'NOUN'), ('Examples', 'NOUN'), ('−', 'PUNCT'), ('Flight-tracking', 'ADJ'), ('systems', 'NOUN'), (',', 'PUNCT'), ('Clinical', 'ADJ'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Research', 'NN'), ('Areas', 'NNS'), ('Real', 'JJ'), ('Life', 'NN'), ('Application', 'NN'), ('1', 'CD'), ('Expert', 'NN'), ('Systems', 'NNS'), ('Examples', 'NNS'), ('−', ','), ('Flight-tracking', 'JJ'), ('systems', 'NNS'), (',', ','), ('Clinical', 'JJ'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Research', 'research'), ('Areas', 'area'), ('Real', 'real'), ('Life', 'life'), ('Application', 'application'), ('1', '1'), ('Expert', 'expert'), ('Systems', 'system'), ('Examples', 'example'), ('−', "''"), ('Flight-tracking', 'Flight-tracking'), ('systems', 'system'), (',', ','), ('Clinical', 'clinical'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Research', 'Areas'), 'compound'), (('Areas', 'root'), 'root'), (('Real', 'Application'), 'amod'), (('Life', 'Application'), 'compound'), (('Application', 'Areas'), 'list'), (('1', 'Examples'), 'nummod'), (('Expert', 'Systems'), 'compound'), (('Systems', 'Examples'), 'compound'), (('Examples', 'Areas'), 'list'), (('−', 'systems'), 'punct'), (('Flight-tracking', 'systems'), 'amod'), (('systems', 'Areas'), 'list'), ((',', 'systems'), 'punct'), (('Clinical', 'systems'), 'amod'), (('systems', 'Areas'), 'list'), (('.', 'Areas'), 'punct')]

 Named Entities are: 
>> [('Research Areas \tReal Life Application  \t1 \tExpert Systems', 'ORG')]

========================== Sentence 26 ===========================

 2 	Natural Language Processing Examples: Google 

Tokens are: 
>> ['2', 'Natural', 'Language', 'Processing', 'Examples', ':', 'Google'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Processing', 'NOUN'), ('Examples', 'NOUN'), (':', 'PUNCT'), ('Google', 'PROPN')] 

 XPOS tags are: 
>> [('2', 'CD'), ('Natural', 'JJ'), ('Language', 'NN'), ('Processing', 'NN'), ('Examples', 'NNS'), (':', ':'), ('Google', 'NNP')] 

 Lemmas are: 
>> [('2', '2'), ('Natural', 'Natural'), ('Language', 'language'), ('Processing', 'processing'), ('Examples', 'example'), (':', ':'), ('Google', 'Google')] 

 Dependency tags are: 
>> [(('2', 'Examples'), 'nummod'), (('Natural', 'Language'), 'amod'), (('Language', 'Examples'), 'compound'), (('Processing', 'Examples'), 'compound'), (('Examples', 'root'), 'root'), ((':', 'Examples'), 'punct'), (('Google', 'Examples'), 'appos')]

 Named Entities are: 
>> [('2', 'CARDINAL'), ('Google', 'ORG')]

========================== Sentence 27 ===========================

 Now feature, speech recognition, Automatic voice output. 

Tokens are: 
>> ['Now', 'feature', ',', 'speech', 'recognition', ',', 'Automatic', 'voice', 'output', '.'] 

 UPOS tags are: 
>> [('Now', 'ADV'), ('feature', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('Automatic', 'ADJ'), ('voice', 'NOUN'), ('output', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Now', 'RB'), ('feature', 'NN'), (',', ','), ('speech', 'NN'), ('recognition', 'NN'), (',', ','), ('Automatic', 'JJ'), ('voice', 'NN'), ('output', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Now', 'now'), ('feature', 'feature'), (',', ','), ('speech', 'speech'), ('recognition', 'recognition'), (',', ','), ('Automatic', 'automatic'), ('voice', 'voice'), ('output', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('Now', 'feature'), 'advmod'), (('feature', 'root'), 'root'), ((',', 'feature'), 'punct'), (('speech', 'recognition'), 'compound'), (('recognition', 'feature'), 'conj'), ((',', 'feature'), 'punct'), (('Automatic', 'output'), 'amod'), (('voice', 'output'), 'compound'), (('output', 'feature'), 'list'), (('.', 'feature'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 3 	Neural Networks Examples − Pattern recognition systems such as face recognition, character recognition, handwriting recognition. 

Tokens are: 
>> ['3', 'Neural', 'Networks', 'Examples', '−', 'Pattern', 'recognition', 'systems', 'such', 'as', 'face', 'recognition', ',', 'character', 'recognition', ',', 'handwriting', 'recognition', '.'] 

 UPOS tags are: 
>> [('3', 'NUM'), ('Neural', 'ADJ'), ('Networks', 'NOUN'), ('Examples', 'NOUN'), ('−', 'PUNCT'), ('Pattern', 'NOUN'), ('recognition', 'NOUN'), ('systems', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('face', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('character', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('handwriting', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('3', 'CD'), ('Neural', 'JJ'), ('Networks', 'NNS'), ('Examples', 'NNS'), ('−', ','), ('Pattern', 'NN'), ('recognition', 'NN'), ('systems', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('face', 'NN'), ('recognition', 'NN'), (',', ','), ('character', 'NN'), ('recognition', 'NN'), (',', ','), ('handwriting', 'NN'), ('recognition', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('3', '3'), ('Neural', 'neural'), ('Networks', 'network'), ('Examples', 'example'), ('−', "''"), ('Pattern', 'pattern'), ('recognition', 'recognition'), ('systems', 'system'), ('such', 'such'), ('as', 'as'), ('face', 'face'), ('recognition', 'recognition'), (',', ','), ('character', 'character'), ('recognition', 'recognition'), (',', ','), ('handwriting', 'handwriting'), ('recognition', 'recognition'), ('.', '.')] 

 Dependency tags are: 
>> [(('3', 'Examples'), 'nummod'), (('Neural', 'Networks'), 'amod'), (('Networks', 'Examples'), 'compound'), (('Examples', 'root'), 'root'), (('−', 'Examples'), 'punct'), (('Pattern', 'recognition'), 'compound'), (('recognition', 'systems'), 'compound'), (('systems', 'Examples'), 'appos'), (('such', 'recognition'), 'case'), (('as', 'such'), 'fixed'), (('face', 'recognition'), 'compound'), (('recognition', 'systems'), 'nmod'), ((',', 'recognition'), 'punct'), (('character', 'recognition'), 'compound'), (('recognition', 'recognition'), 'conj'), ((',', 'recognition'), 'punct'), (('handwriting', 'recognition'), 'compound'), (('recognition', 'recognition'), 'conj'), (('.', 'Examples'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 29 ===========================

 4 	Robotics Examples − Industrial robots for moving, spraying, painting, precision checking, drilling, cleaning, coating, carving, etc. 	  	5 	Fuzzy Logic Systems Examples − Consumer electronics, automobiles, etc. 

Tokens are: 
>> ['4', 'Robotics', 'Examples', '−', 'Industrial', 'robots', 'for', 'moving', ',', 'spraying', ',', 'painting', ',', 'precision', 'checking', ',', 'drilling', ',', 'cleaning', ',', 'coating', ',', 'carving', ',', 'etc.', '5', 'Fuzzy', 'Logic', 'Systems', 'Examples', '−', 'Consumer', 'electronics', ',', 'automobiles', ',', 'etc.'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('Robotics', 'NOUN'), ('Examples', 'NOUN'), ('−', 'PUNCT'), ('Industrial', 'ADJ'), ('robots', 'NOUN'), ('for', 'ADP'), ('moving', 'VERB'), (',', 'PUNCT'), ('spraying', 'NOUN'), (',', 'PUNCT'), ('painting', 'NOUN'), (',', 'PUNCT'), ('precision', 'NOUN'), ('checking', 'NOUN'), (',', 'PUNCT'), ('drilling', 'NOUN'), (',', 'PUNCT'), ('cleaning', 'NOUN'), (',', 'PUNCT'), ('coating', 'NOUN'), (',', 'PUNCT'), ('carving', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X'), ('5', 'NUM'), ('Fuzzy', 'ADJ'), ('Logic', 'NOUN'), ('Systems', 'NOUN'), ('Examples', 'NOUN'), ('−', 'PUNCT'), ('Consumer', 'NOUN'), ('electronics', 'NOUN'), (',', 'PUNCT'), ('automobiles', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X')] 

 XPOS tags are: 
>> [('4', 'CD'), ('Robotics', 'NNS'), ('Examples', 'NNS'), ('−', ','), ('Industrial', 'JJ'), ('robots', 'NNS'), ('for', 'IN'), ('moving', 'VBG'), (',', ','), ('spraying', 'NN'), (',', ','), ('painting', 'NN'), (',', ','), ('precision', 'NN'), ('checking', 'NN'), (',', ','), ('drilling', 'NN'), (',', ','), ('cleaning', 'NN'), (',', ','), ('coating', 'NN'), (',', ','), ('carving', 'NN'), (',', ','), ('etc.', 'FW'), ('5', 'CD'), ('Fuzzy', 'JJ'), ('Logic', 'NN'), ('Systems', 'NNS'), ('Examples', 'NNS'), ('−', ','), ('Consumer', 'NN'), ('electronics', 'NNS'), (',', ','), ('automobiles', 'NNS'), (',', ','), ('etc.', 'FW')] 

 Lemmas are: 
>> [('4', '4'), ('Robotics', 'robotic'), ('Examples', 'example'), ('−', "''"), ('Industrial', 'Industrial'), ('robots', 'robot'), ('for', 'for'), ('moving', 'move'), (',', ','), ('spraying', 'spraying'), (',', ','), ('painting', 'painting'), (',', ','), ('precision', 'precision'), ('checking', 'check'), (',', ','), ('drilling', 'drilling'), (',', ','), ('cleaning', 'cleaning'), (',', ','), ('coating', 'coating'), (',', ','), ('carving', 'carving'), (',', ','), ('etc.', 'etc.'), ('5', '5'), ('Fuzzy', 'fuzzy'), ('Logic', 'logic'), ('Systems', 'system'), ('Examples', 'example'), ('−', "''"), ('Consumer', 'consumer'), ('electronics', 'electronics'), (',', ','), ('automobiles', 'automobile'), (',', ','), ('etc.', 'etc.')] 

 Dependency tags are: 
>> [(('4', 'Examples'), 'nummod'), (('Robotics', 'Examples'), 'compound'), (('Examples', 'root'), 'root'), (('−', 'Examples'), 'punct'), (('Industrial', 'robots'), 'amod'), (('robots', 'Examples'), 'appos'), (('for', 'moving'), 'mark'), (('moving', 'robots'), 'nmod'), ((',', 'spraying'), 'punct'), (('spraying', 'moving'), 'conj'), ((',', 'painting'), 'punct'), (('painting', 'moving'), 'conj'), ((',', 'checking'), 'punct'), (('precision', 'checking'), 'compound'), (('checking', 'moving'), 'conj'), ((',', 'drilling'), 'punct'), (('drilling', 'moving'), 'conj'), ((',', 'cleaning'), 'punct'), (('cleaning', 'moving'), 'conj'), ((',', 'coating'), 'punct'), (('coating', 'moving'), 'conj'), ((',', 'carving'), 'punct'), (('carving', 'moving'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'moving'), 'conj'), (('5', 'Examples'), 'nummod'), (('Fuzzy', 'Examples'), 'amod'), (('Logic', 'Systems'), 'compound'), (('Systems', 'Examples'), 'compound'), (('Examples', 'Examples'), 'list'), (('−', 'electronics'), 'punct'), (('Consumer', 'electronics'), 'compound'), (('electronics', 'Examples'), 'list'), ((',', 'automobiles'), 'punct'), (('automobiles', 'electronics'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'electronics'), 'conj')]

 Named Entities are: 
>> [('4', 'CARDINAL')]