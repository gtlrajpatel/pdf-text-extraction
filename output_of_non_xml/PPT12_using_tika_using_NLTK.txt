				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

PowerPoint Presentation  Unit – 3 Parsing Theory (II) dixita.kagathara@darshan.ac.in +91 - 97277 47317 (CE Department) Computer Engineering Department Prof. Dixita B. Kagathara Compiler Design (CD) GTU # 2170701   Darshan Institute of Engineering & Technology, Rajkot     Looping Topics to be covered  Syntax directed definitions Synthesized attributes Inherited attribute Dependency graph Evaluation order Construction of syntax tree  Bottom up evaluation of S-attributed definitions L-Attributed definitions Translation scheme              Syntax directed definitions        Syntax directed definitions Syntax directed definition is a generalization of context free grammar in which each grammar symbol has an associated set of attributes. 


>> Tokens are: 
 ['PowerPoint', 'Presentation', 'Unit', '–', '3', 'Parsing', 'Theory', '(', 'II', ')', 'dixita.kagathara', '@', 'darshan.ac.in', '+91', '-', '97277', '47317', '(', 'CE', 'Department', ')', 'Computer', 'Engineering', 'Department', 'Prof.', 'Dixita', 'B.', 'Kagathara', 'Compiler', 'Design', '(', 'CD', ')', 'GTU', '#', '2170701', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', ',', 'Rajkot', '\uf050', 'Looping', 'Topics', 'covered', 'Syntax', 'directed', 'definitions', 'Synthesized', 'attributes', 'Inherited', 'attribute', 'Dependency', 'graph', 'Evaluation', 'order', 'Construction', 'syntax', 'tree', 'Bottom', 'evaluation', 'S-attributed', 'definitions', 'L-Attributed', 'definitions', 'Translation', 'scheme', 'Syntax', 'directed', 'definitions', 'Syntax', 'directed', 'definitions', 'Syntax', 'directed', 'definition', 'generalization', 'context', 'free', 'grammar', 'grammar', 'symbol', 'associated', 'set', 'attributes', '.']

>> Bigrams are: 
 [('PowerPoint', 'Presentation'), ('Presentation', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', 'dixita.kagathara'), ('dixita.kagathara', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '+91'), ('+91', '-'), ('-', '97277'), ('97277', '47317'), ('47317', '('), ('(', 'CE'), ('CE', 'Department'), ('Department', ')'), (')', 'Computer'), ('Computer', 'Engineering'), ('Engineering', 'Department'), ('Department', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B.'), ('B.', 'Kagathara'), ('Kagathara', 'Compiler'), ('Compiler', 'Design'), ('Design', '('), ('(', 'CD'), ('CD', ')'), (')', 'GTU'), ('GTU', '#'), ('#', '2170701'), ('2170701', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', ','), (',', 'Rajkot'), ('Rajkot', '\uf050'), ('\uf050', 'Looping'), ('Looping', 'Topics'), ('Topics', 'covered'), ('covered', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definitions'), ('definitions', 'Synthesized'), ('Synthesized', 'attributes'), ('attributes', 'Inherited'), ('Inherited', 'attribute'), ('attribute', 'Dependency'), ('Dependency', 'graph'), ('graph', 'Evaluation'), ('Evaluation', 'order'), ('order', 'Construction'), ('Construction', 'syntax'), ('syntax', 'tree'), ('tree', 'Bottom'), ('Bottom', 'evaluation'), ('evaluation', 'S-attributed'), ('S-attributed', 'definitions'), ('definitions', 'L-Attributed'), ('L-Attributed', 'definitions'), ('definitions', 'Translation'), ('Translation', 'scheme'), ('scheme', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definitions'), ('definitions', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definitions'), ('definitions', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definition'), ('definition', 'generalization'), ('generalization', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', 'grammar'), ('grammar', 'symbol'), ('symbol', 'associated'), ('associated', 'set'), ('set', 'attributes'), ('attributes', '.')]

>> Trigrams are: 
 [('PowerPoint', 'Presentation', 'Unit'), ('Presentation', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', 'Parsing'), ('3', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', 'dixita.kagathara'), (')', 'dixita.kagathara', '@'), ('dixita.kagathara', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '+91'), ('darshan.ac.in', '+91', '-'), ('+91', '-', '97277'), ('-', '97277', '47317'), ('97277', '47317', '('), ('47317', '(', 'CE'), ('(', 'CE', 'Department'), ('CE', 'Department', ')'), ('Department', ')', 'Computer'), (')', 'Computer', 'Engineering'), ('Computer', 'Engineering', 'Department'), ('Engineering', 'Department', 'Prof.'), ('Department', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B.'), ('Dixita', 'B.', 'Kagathara'), ('B.', 'Kagathara', 'Compiler'), ('Kagathara', 'Compiler', 'Design'), ('Compiler', 'Design', '('), ('Design', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', 'GTU'), (')', 'GTU', '#'), ('GTU', '#', '2170701'), ('#', '2170701', 'Darshan'), ('2170701', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', ','), ('Technology', ',', 'Rajkot'), (',', 'Rajkot', '\uf050'), ('Rajkot', '\uf050', 'Looping'), ('\uf050', 'Looping', 'Topics'), ('Looping', 'Topics', 'covered'), ('Topics', 'covered', 'Syntax'), ('covered', 'Syntax', 'directed'), ('Syntax', 'directed', 'definitions'), ('directed', 'definitions', 'Synthesized'), ('definitions', 'Synthesized', 'attributes'), ('Synthesized', 'attributes', 'Inherited'), ('attributes', 'Inherited', 'attribute'), ('Inherited', 'attribute', 'Dependency'), ('attribute', 'Dependency', 'graph'), ('Dependency', 'graph', 'Evaluation'), ('graph', 'Evaluation', 'order'), ('Evaluation', 'order', 'Construction'), ('order', 'Construction', 'syntax'), ('Construction', 'syntax', 'tree'), ('syntax', 'tree', 'Bottom'), ('tree', 'Bottom', 'evaluation'), ('Bottom', 'evaluation', 'S-attributed'), ('evaluation', 'S-attributed', 'definitions'), ('S-attributed', 'definitions', 'L-Attributed'), ('definitions', 'L-Attributed', 'definitions'), ('L-Attributed', 'definitions', 'Translation'), ('definitions', 'Translation', 'scheme'), ('Translation', 'scheme', 'Syntax'), ('scheme', 'Syntax', 'directed'), ('Syntax', 'directed', 'definitions'), ('directed', 'definitions', 'Syntax'), ('definitions', 'Syntax', 'directed'), ('Syntax', 'directed', 'definitions'), ('directed', 'definitions', 'Syntax'), ('definitions', 'Syntax', 'directed'), ('Syntax', 'directed', 'definition'), ('directed', 'definition', 'generalization'), ('definition', 'generalization', 'context'), ('generalization', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', 'grammar'), ('grammar', 'grammar', 'symbol'), ('grammar', 'symbol', 'associated'), ('symbol', 'associated', 'set'), ('associated', 'set', 'attributes'), ('set', 'attributes', '.')]

>> POS Tags are: 
 [('PowerPoint', 'NNP'), ('Presentation', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('dixita.kagathara', 'NN'), ('@', 'NNP'), ('darshan.ac.in', 'NN'), ('+91', 'NNP'), ('-', ':'), ('97277', 'CD'), ('47317', 'CD'), ('(', '('), ('CE', 'NNP'), ('Department', 'NNP'), (')', ')'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B.', 'NNP'), ('Kagathara', 'NNP'), ('Compiler', 'NNP'), ('Design', 'NNP'), ('(', '('), ('CD', 'NN'), (')', ')'), ('GTU', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('\uf050', 'NNP'), ('Looping', 'NNP'), ('Topics', 'NNP'), ('covered', 'VBD'), ('Syntax', 'NNP'), ('directed', 'VBD'), ('definitions', 'NNS'), ('Synthesized', 'NNP'), ('attributes', 'VBZ'), ('Inherited', 'NNP'), ('attribute', 'NN'), ('Dependency', 'NNP'), ('graph', 'NN'), ('Evaluation', 'NNP'), ('order', 'NN'), ('Construction', 'NNP'), ('syntax', 'NN'), ('tree', 'NN'), ('Bottom', 'NNP'), ('evaluation', 'NN'), ('S-attributed', 'JJ'), ('definitions', 'NNS'), ('L-Attributed', 'JJ'), ('definitions', 'NNS'), ('Translation', 'NNP'), ('scheme', 'NN'), ('Syntax', 'NNP'), ('directed', 'VBD'), ('definitions', 'NNS'), ('Syntax', 'NNP'), ('directed', 'VBD'), ('definitions', 'NNS'), ('Syntax', 'NNP'), ('directed', 'VBD'), ('definition', 'NN'), ('generalization', 'NN'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('grammar', 'NN'), ('symbol', 'NN'), ('associated', 'VBN'), ('set', 'VBN'), ('attributes', 'NNS'), ('.', '.')]

 (S
  (NP PowerPoint/NNP Presentation/NNP Unit/NNP)
  –/VBD
  3/CD
  (NP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  (NP dixita.kagathara/NN @/NNP darshan.ac.in/NN +91/NNP)
  -/:
  97277/CD
  47317/CD
  (/(
  (NP CE/NNP Department/NNP)
  )/)
  (NP
    Computer/NNP
    Engineering/NNP
    Department/NNP
    Prof./NNP
    Dixita/NNP
    B./NNP
    Kagathara/NNP
    Compiler/NNP
    Design/NNP)
  (/(
  (NP CD/NN)
  )/)
  (NP GTU/NNP)
  #/#
  2170701/CD
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP)
  ,/,
  (NP Rajkot/NNP /NNP Looping/NNP Topics/NNP)
  covered/VBD
  (NP Syntax/NNP)
  directed/VBD
  (NP definitions/NNS Synthesized/NNP)
  attributes/VBZ
  (NP
    Inherited/NNP
    attribute/NN
    Dependency/NNP
    graph/NN
    Evaluation/NNP
    order/NN
    Construction/NNP
    syntax/NN
    tree/NN
    Bottom/NNP
    evaluation/NN)
  (NP S-attributed/JJ definitions/NNS)
  (NP
    L-Attributed/JJ
    definitions/NNS
    Translation/NNP
    scheme/NN
    Syntax/NNP)
  directed/VBD
  (NP definitions/NNS Syntax/NNP)
  directed/VBD
  (NP definitions/NNS Syntax/NNP)
  directed/VBD
  (NP definition/NN generalization/NN context/NN)
  (NP free/JJ grammar/NN grammar/NN symbol/NN)
  associated/VBN
  set/VBN
  (NP attributes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['PowerPoint Presentation Unit', 'Parsing Theory', 'II', 'dixita.kagathara @ darshan.ac.in +91', 'CE Department', 'Computer Engineering Department Prof. Dixita B. Kagathara Compiler Design', 'CD', 'GTU', 'Darshan Institute Engineering', 'Technology', 'Rajkot \uf050 Looping Topics', 'Syntax', 'definitions Synthesized', 'Inherited attribute Dependency graph Evaluation order Construction syntax tree Bottom evaluation', 'S-attributed definitions', 'L-Attributed definitions Translation scheme Syntax', 'definitions Syntax', 'definitions Syntax', 'definition generalization context', 'free grammar grammar symbol', 'attributes']

>> Named Entities are: 
 [('ORGANIZATION', 'PowerPoint'), ('PERSON', 'Unit'), ('ORGANIZATION', 'CE Department'), ('ORGANIZATION', 'Computer Engineering Department'), ('PERSON', 'Dixita B. Kagathara Compiler'), ('ORGANIZATION', 'GTU'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Rajkot'), ('PERSON', 'Topics'), ('PERSON', 'Syntax'), ('ORGANIZATION', 'Synthesized'), ('GPE', 'Inherited'), ('PERSON', 'Bottom'), ('PERSON', 'Syntax'), ('PERSON', 'Syntax'), ('PERSON', 'Syntax')] 

>> Stemming using Porter Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'ce'), ('Department', 'depart'), (')', ')'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B.', 'b.'), ('Kagathara', 'kagathara'), ('Compiler', 'compil'), ('Design', 'design'), ('(', '('), ('CD', 'cd'), (')', ')'), ('GTU', 'gtu'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Topics', 'topic'), ('covered', 'cover'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definitions', 'definit'), ('Synthesized', 'synthes'), ('attributes', 'attribut'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('Dependency', 'depend'), ('graph', 'graph'), ('Evaluation', 'evalu'), ('order', 'order'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('L-Attributed', 'l-attribut'), ('definitions', 'definit'), ('Translation', 'translat'), ('scheme', 'scheme'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definitions', 'definit'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definitions', 'definit'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('generalization', 'gener'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('associated', 'associ'), ('set', 'set'), ('attributes', 'attribut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'ce'), ('Department', 'depart'), (')', ')'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B.', 'b.'), ('Kagathara', 'kagathara'), ('Compiler', 'compil'), ('Design', 'design'), ('(', '('), ('CD', 'cd'), (')', ')'), ('GTU', 'gtu'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Topics', 'topic'), ('covered', 'cover'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definitions', 'definit'), ('Synthesized', 'synthes'), ('attributes', 'attribut'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('Dependency', 'depend'), ('graph', 'graph'), ('Evaluation', 'evalu'), ('order', 'order'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('L-Attributed', 'l-attribut'), ('definitions', 'definit'), ('Translation', 'translat'), ('scheme', 'scheme'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definitions', 'definit'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definitions', 'definit'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('generalization', 'general'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('associated', 'associ'), ('set', 'set'), ('attributes', 'attribut'), ('.', '.')]

>> Lemmatization: 
 [('PowerPoint', 'PowerPoint'), ('Presentation', 'Presentation'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'CE'), ('Department', 'Department'), (')', ')'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B.', 'B.'), ('Kagathara', 'Kagathara'), ('Compiler', 'Compiler'), ('Design', 'Design'), ('(', '('), ('CD', 'CD'), (')', ')'), ('GTU', 'GTU'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('\uf050', '\uf050'), ('Looping', 'Looping'), ('Topics', 'Topics'), ('covered', 'covered'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definitions', 'definition'), ('Synthesized', 'Synthesized'), ('attributes', 'attribute'), ('Inherited', 'Inherited'), ('attribute', 'attribute'), ('Dependency', 'Dependency'), ('graph', 'graph'), ('Evaluation', 'Evaluation'), ('order', 'order'), ('Construction', 'Construction'), ('syntax', 'syntax'), ('tree', 'tree'), ('Bottom', 'Bottom'), ('evaluation', 'evaluation'), ('S-attributed', 'S-attributed'), ('definitions', 'definition'), ('L-Attributed', 'L-Attributed'), ('definitions', 'definition'), ('Translation', 'Translation'), ('scheme', 'scheme'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definitions', 'definition'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definitions', 'definition'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definition', 'definition'), ('generalization', 'generalization'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('associated', 'associated'), ('set', 'set'), ('attributes', 'attribute'), ('.', '.')]



============================ Sentence 2 =============================

The attributes can be a number, type, memory location, return type etc…. 


>> Tokens are: 
 ['The', 'attributes', 'number', ',', 'type', ',', 'memory', 'location', ',', 'return', 'type', 'etc…', '.']

>> Bigrams are: 
 [('The', 'attributes'), ('attributes', 'number'), ('number', ','), (',', 'type'), ('type', ','), (',', 'memory'), ('memory', 'location'), ('location', ','), (',', 'return'), ('return', 'type'), ('type', 'etc…'), ('etc…', '.')]

>> Trigrams are: 
 [('The', 'attributes', 'number'), ('attributes', 'number', ','), ('number', ',', 'type'), (',', 'type', ','), ('type', ',', 'memory'), (',', 'memory', 'location'), ('memory', 'location', ','), ('location', ',', 'return'), (',', 'return', 'type'), ('return', 'type', 'etc…'), ('type', 'etc…', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('attributes', 'NNS'), ('number', 'NN'), (',', ','), ('type', 'NN'), (',', ','), ('memory', 'NN'), ('location', 'NN'), (',', ','), ('return', 'NN'), ('type', 'NN'), ('etc…', 'NN'), ('.', '.')]

 (S
  (NP The/DT attributes/NNS number/NN)
  ,/,
  (NP type/NN)
  ,/,
  (NP memory/NN location/NN)
  ,/,
  (NP return/NN type/NN etc…/NN)
  ./.) 


>> Noun Phrases are: 
 ['The attributes number', 'type', 'memory location', 'return type etc…']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('attributes', 'attribut'), ('number', 'number'), (',', ','), ('type', 'type'), (',', ','), ('memory', 'memori'), ('location', 'locat'), (',', ','), ('return', 'return'), ('type', 'type'), ('etc…', 'etc…'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('attributes', 'attribut'), ('number', 'number'), (',', ','), ('type', 'type'), (',', ','), ('memory', 'memori'), ('location', 'locat'), (',', ','), ('return', 'return'), ('type', 'type'), ('etc…', 'etc…'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('attributes', 'attribute'), ('number', 'number'), (',', ','), ('type', 'type'), (',', ','), ('memory', 'memory'), ('location', 'location'), (',', ','), ('return', 'return'), ('type', 'type'), ('etc…', 'etc…'), ('.', '.')]



============================ Sentence 3 =============================

Types of attributes are:  Synthesized attribute  Inherited attribute  E. Value Type Memory location Return Type    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Synthesized attributes  Value of synthesized attribute at a node can be computed from the value of attributes at the children of that node in the parse tree. 


>> Tokens are: 
 ['Types', 'attributes', ':', 'Synthesized', 'attribute', 'Inherited', 'attribute', 'E.', 'Value', 'Type', 'Memory', 'location', 'Return', 'Type', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Synthesized', 'attributes', 'Value', 'synthesized', 'attribute', 'node', 'computed', 'value', 'attributes', 'children', 'node', 'parse', 'tree', '.']

>> Bigrams are: 
 [('Types', 'attributes'), ('attributes', ':'), (':', 'Synthesized'), ('Synthesized', 'attribute'), ('attribute', 'Inherited'), ('Inherited', 'attribute'), ('attribute', 'E.'), ('E.', 'Value'), ('Value', 'Type'), ('Type', 'Memory'), ('Memory', 'location'), ('location', 'Return'), ('Return', 'Type'), ('Type', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Synthesized'), ('Synthesized', 'attributes'), ('attributes', 'Value'), ('Value', 'synthesized'), ('synthesized', 'attribute'), ('attribute', 'node'), ('node', 'computed'), ('computed', 'value'), ('value', 'attributes'), ('attributes', 'children'), ('children', 'node'), ('node', 'parse'), ('parse', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('Types', 'attributes', ':'), ('attributes', ':', 'Synthesized'), (':', 'Synthesized', 'attribute'), ('Synthesized', 'attribute', 'Inherited'), ('attribute', 'Inherited', 'attribute'), ('Inherited', 'attribute', 'E.'), ('attribute', 'E.', 'Value'), ('E.', 'Value', 'Type'), ('Value', 'Type', 'Memory'), ('Type', 'Memory', 'location'), ('Memory', 'location', 'Return'), ('location', 'Return', 'Type'), ('Return', 'Type', 'Prof.'), ('Type', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Synthesized'), ('›', 'Synthesized', 'attributes'), ('Synthesized', 'attributes', 'Value'), ('attributes', 'Value', 'synthesized'), ('Value', 'synthesized', 'attribute'), ('synthesized', 'attribute', 'node'), ('attribute', 'node', 'computed'), ('node', 'computed', 'value'), ('computed', 'value', 'attributes'), ('value', 'attributes', 'children'), ('attributes', 'children', 'node'), ('children', 'node', 'parse'), ('node', 'parse', 'tree'), ('parse', 'tree', '.')]

>> POS Tags are: 
 [('Types', 'NNS'), ('attributes', 'NNS'), (':', ':'), ('Synthesized', 'NNP'), ('attribute', 'NN'), ('Inherited', 'NNP'), ('attribute', 'NN'), ('E.', 'NNP'), ('Value', 'NNP'), ('Type', 'NNP'), ('Memory', 'NNP'), ('location', 'NN'), ('Return', 'NNP'), ('Type', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Synthesized', 'NNP'), ('attributes', 'VBZ'), ('Value', 'NNP'), ('synthesized', 'VBD'), ('attribute', 'JJ'), ('node', 'NN'), ('computed', 'VBD'), ('value', 'NN'), ('attributes', 'VBZ'), ('children', 'NNS'), ('node', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP Types/NNS attributes/NNS)
  :/:
  (NP
    Synthesized/NNP
    attribute/NN
    Inherited/NNP
    attribute/NN
    E./NNP
    Value/NNP
    Type/NNP
    Memory/NNP
    location/NN
    Return/NNP
    Type/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Synthesized/NNP)
  attributes/VBZ
  (NP Value/NNP)
  synthesized/VBD
  (NP attribute/JJ node/NN)
  computed/VBD
  (NP value/NN)
  attributes/VBZ
  (NP children/NNS)
  (NP node/JJ parse/NN tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['Types attributes', 'Synthesized attribute Inherited attribute E. Value Type Memory location Return Type Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Synthesized', 'Value', 'attribute node', 'value', 'children', 'node parse tree']

>> Named Entities are: 
 [('PERSON', 'Return Type'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Value')] 

>> Stemming using Porter Stemmer: 
 [('Types', 'type'), ('attributes', 'attribut'), (':', ':'), ('Synthesized', 'synthes'), ('attribute', 'attribut'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('E.', 'e.'), ('Value', 'valu'), ('Type', 'type'), ('Memory', 'memori'), ('location', 'locat'), ('Return', 'return'), ('Type', 'type'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Synthesized', 'synthes'), ('attributes', 'attribut'), ('Value', 'valu'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('node', 'node'), ('computed', 'comput'), ('value', 'valu'), ('attributes', 'attribut'), ('children', 'children'), ('node', 'node'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Types', 'type'), ('attributes', 'attribut'), (':', ':'), ('Synthesized', 'synthes'), ('attribute', 'attribut'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('E.', 'e.'), ('Value', 'valu'), ('Type', 'type'), ('Memory', 'memori'), ('location', 'locat'), ('Return', 'return'), ('Type', 'type'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Synthesized', 'synthes'), ('attributes', 'attribut'), ('Value', 'valu'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('node', 'node'), ('computed', 'comput'), ('value', 'valu'), ('attributes', 'attribut'), ('children', 'children'), ('node', 'node'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('Types', 'Types'), ('attributes', 'attribute'), (':', ':'), ('Synthesized', 'Synthesized'), ('attribute', 'attribute'), ('Inherited', 'Inherited'), ('attribute', 'attribute'), ('E.', 'E.'), ('Value', 'Value'), ('Type', 'Type'), ('Memory', 'Memory'), ('location', 'location'), ('Return', 'Return'), ('Type', 'Type'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Synthesized', 'Synthesized'), ('attributes', 'attribute'), ('Value', 'Value'), ('synthesized', 'synthesized'), ('attribute', 'attribute'), ('node', 'node'), ('computed', 'computed'), ('value', 'value'), ('attributes', 'attribute'), ('children', 'child'), ('node', 'node'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 4 =============================

A syntax directed definition that uses synthesized attribute exclusively is said to be S-attribute definition. 


>> Tokens are: 
 ['A', 'syntax', 'directed', 'definition', 'uses', 'synthesized', 'attribute', 'exclusively', 'said', 'S-attribute', 'definition', '.']

>> Bigrams are: 
 [('A', 'syntax'), ('syntax', 'directed'), ('directed', 'definition'), ('definition', 'uses'), ('uses', 'synthesized'), ('synthesized', 'attribute'), ('attribute', 'exclusively'), ('exclusively', 'said'), ('said', 'S-attribute'), ('S-attribute', 'definition'), ('definition', '.')]

>> Trigrams are: 
 [('A', 'syntax', 'directed'), ('syntax', 'directed', 'definition'), ('directed', 'definition', 'uses'), ('definition', 'uses', 'synthesized'), ('uses', 'synthesized', 'attribute'), ('synthesized', 'attribute', 'exclusively'), ('attribute', 'exclusively', 'said'), ('exclusively', 'said', 'S-attribute'), ('said', 'S-attribute', 'definition'), ('S-attribute', 'definition', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('syntax', 'NN'), ('directed', 'VBN'), ('definition', 'NN'), ('uses', 'VBZ'), ('synthesized', 'VBN'), ('attribute', 'NN'), ('exclusively', 'RB'), ('said', 'VBD'), ('S-attribute', 'JJ'), ('definition', 'NN'), ('.', '.')]

 (S
  (NP A/DT syntax/NN)
  directed/VBN
  (NP definition/NN)
  uses/VBZ
  synthesized/VBN
  (NP attribute/NN)
  exclusively/RB
  said/VBD
  (NP S-attribute/JJ definition/NN)
  ./.) 


>> Noun Phrases are: 
 ['A syntax', 'definition', 'attribute', 'S-attribute definition']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('uses', 'use'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('exclusively', 'exclus'), ('said', 'said'), ('S-attribute', 's-attribut'), ('definition', 'definit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('uses', 'use'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('exclusively', 'exclus'), ('said', 'said'), ('S-attribute', 's-attribut'), ('definition', 'definit'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('syntax', 'syntax'), ('directed', 'directed'), ('definition', 'definition'), ('uses', 'us'), ('synthesized', 'synthesized'), ('attribute', 'attribute'), ('exclusively', 'exclusively'), ('said', 'said'), ('S-attribute', 'S-attribute'), ('definition', 'definition'), ('.', '.')]



============================ Sentence 5 =============================

Example: Syntax directed definition of simple desk calculator   	Production 	Semantic rules 	L  En	Print (E.val) 	E  E1+T	E.val = E1.val + T.val 	E  T	E.val = T.val 	T  T1*F	T.val = T1.val * F.val 	T  F	T.val = F.val 	F  (E)	F.val = E.val 	F  digit	F.val = digit.lexval            Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Example: Synthesized attributes  L E.val=19  n + T.val=15  E.val=15  * F.val=3 T.val=3 digit.lexval=3 F.val=4 T.val=4 digit.lexval=4 F.val=5  digit.lexval=5  	Production 	Semantic rules  	L  En	Print (E.val) 	E  E1+T	E.Val = E1.val + T.val 	E  T	E.Val = T.val 	T  T1*F	T.Val = T1.val * F.val 	T  F	T.Val = F.val 	F  (E)	F.Val = E.val 	F  digit	F.Val = digit . 


>> Tokens are: 
 ['Example', ':', 'Syntax', 'directed', 'definition', 'simple', 'desk', 'calculator', 'Production', 'Semantic', 'rules', 'L', '\uf0e0', 'En', 'Print', '(', 'E.val', ')', 'E', '\uf0e0', 'E1+T', 'E.val', '=', 'E1.val', '+', 'T.val', 'E', '\uf0e0', 'T', 'E.val', '=', 'T.val', 'T', '\uf0e0', 'T1', '*', 'F', 'T.val', '=', 'T1.val', '*', 'F.val', 'T', '\uf0e0', 'F', 'T.val', '=', 'F.val', 'F', '\uf0e0', '(', 'E', ')', 'F.val', '=', 'E.val', 'F', '\uf0e0', 'digit', 'F.val', '=', 'digit.lexval', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Example', ':', 'Synthesized', 'attributes', 'L', 'E.val=19', 'n', '+', 'T.val=15', 'E.val=15', '*', 'F.val=3', 'T.val=3', 'digit.lexval=3', 'F.val=4', 'T.val=4', 'digit.lexval=4', 'F.val=5', 'digit.lexval=5', 'Production', 'Semantic', 'rules', 'L', '\uf0e0', 'En', 'Print', '(', 'E.val', ')', 'E', '\uf0e0', 'E1+T', 'E.Val', '=', 'E1.val', '+', 'T.val', 'E', '\uf0e0', 'T', 'E.Val', '=', 'T.val', 'T', '\uf0e0', 'T1', '*', 'F', 'T.Val', '=', 'T1.val', '*', 'F.val', 'T', '\uf0e0', 'F', 'T.Val', '=', 'F.val', 'F', '\uf0e0', '(', 'E', ')', 'F.Val', '=', 'E.val', 'F', '\uf0e0', 'digit', 'F.Val', '=', 'digit', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definition'), ('definition', 'simple'), ('simple', 'desk'), ('desk', 'calculator'), ('calculator', 'Production'), ('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'L'), ('L', '\uf0e0'), ('\uf0e0', 'En'), ('En', 'Print'), ('Print', '('), ('(', 'E.val'), ('E.val', ')'), (')', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'E1+T'), ('E1+T', 'E.val'), ('E.val', '='), ('=', 'E1.val'), ('E1.val', '+'), ('+', 'T.val'), ('T.val', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'E.val'), ('E.val', '='), ('=', 'T.val'), ('T.val', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'T1'), ('T1', '*'), ('*', 'F'), ('F', 'T.val'), ('T.val', '='), ('=', 'T1.val'), ('T1.val', '*'), ('*', 'F.val'), ('F.val', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'T.val'), ('T.val', '='), ('=', 'F.val'), ('F.val', 'F'), ('F', '\uf0e0'), ('\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'F.val'), ('F.val', '='), ('=', 'E.val'), ('E.val', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'digit'), ('digit', 'F.val'), ('F.val', '='), ('=', 'digit.lexval'), ('digit.lexval', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Synthesized'), ('Synthesized', 'attributes'), ('attributes', 'L'), ('L', 'E.val=19'), ('E.val=19', 'n'), ('n', '+'), ('+', 'T.val=15'), ('T.val=15', 'E.val=15'), ('E.val=15', '*'), ('*', 'F.val=3'), ('F.val=3', 'T.val=3'), ('T.val=3', 'digit.lexval=3'), ('digit.lexval=3', 'F.val=4'), ('F.val=4', 'T.val=4'), ('T.val=4', 'digit.lexval=4'), ('digit.lexval=4', 'F.val=5'), ('F.val=5', 'digit.lexval=5'), ('digit.lexval=5', 'Production'), ('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'L'), ('L', '\uf0e0'), ('\uf0e0', 'En'), ('En', 'Print'), ('Print', '('), ('(', 'E.val'), ('E.val', ')'), (')', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'E1+T'), ('E1+T', 'E.Val'), ('E.Val', '='), ('=', 'E1.val'), ('E1.val', '+'), ('+', 'T.val'), ('T.val', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'E.Val'), ('E.Val', '='), ('=', 'T.val'), ('T.val', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'T1'), ('T1', '*'), ('*', 'F'), ('F', 'T.Val'), ('T.Val', '='), ('=', 'T1.val'), ('T1.val', '*'), ('*', 'F.val'), ('F.val', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'T.Val'), ('T.Val', '='), ('=', 'F.val'), ('F.val', 'F'), ('F', '\uf0e0'), ('\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'F.Val'), ('F.Val', '='), ('=', 'E.val'), ('E.val', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'digit'), ('digit', 'F.Val'), ('F.Val', '='), ('=', 'digit'), ('digit', '.')]

>> Trigrams are: 
 [('Example', ':', 'Syntax'), (':', 'Syntax', 'directed'), ('Syntax', 'directed', 'definition'), ('directed', 'definition', 'simple'), ('definition', 'simple', 'desk'), ('simple', 'desk', 'calculator'), ('desk', 'calculator', 'Production'), ('calculator', 'Production', 'Semantic'), ('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'L'), ('rules', 'L', '\uf0e0'), ('L', '\uf0e0', 'En'), ('\uf0e0', 'En', 'Print'), ('En', 'Print', '('), ('Print', '(', 'E.val'), ('(', 'E.val', ')'), ('E.val', ')', 'E'), (')', 'E', '\uf0e0'), ('E', '\uf0e0', 'E1+T'), ('\uf0e0', 'E1+T', 'E.val'), ('E1+T', 'E.val', '='), ('E.val', '=', 'E1.val'), ('=', 'E1.val', '+'), ('E1.val', '+', 'T.val'), ('+', 'T.val', 'E'), ('T.val', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'E.val'), ('T', 'E.val', '='), ('E.val', '=', 'T.val'), ('=', 'T.val', 'T'), ('T.val', 'T', '\uf0e0'), ('T', '\uf0e0', 'T1'), ('\uf0e0', 'T1', '*'), ('T1', '*', 'F'), ('*', 'F', 'T.val'), ('F', 'T.val', '='), ('T.val', '=', 'T1.val'), ('=', 'T1.val', '*'), ('T1.val', '*', 'F.val'), ('*', 'F.val', 'T'), ('F.val', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'T.val'), ('F', 'T.val', '='), ('T.val', '=', 'F.val'), ('=', 'F.val', 'F'), ('F.val', 'F', '\uf0e0'), ('F', '\uf0e0', '('), ('\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'F.val'), (')', 'F.val', '='), ('F.val', '=', 'E.val'), ('=', 'E.val', 'F'), ('E.val', 'F', '\uf0e0'), ('F', '\uf0e0', 'digit'), ('\uf0e0', 'digit', 'F.val'), ('digit', 'F.val', '='), ('F.val', '=', 'digit.lexval'), ('=', 'digit.lexval', 'Prof.'), ('digit.lexval', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Synthesized'), (':', 'Synthesized', 'attributes'), ('Synthesized', 'attributes', 'L'), ('attributes', 'L', 'E.val=19'), ('L', 'E.val=19', 'n'), ('E.val=19', 'n', '+'), ('n', '+', 'T.val=15'), ('+', 'T.val=15', 'E.val=15'), ('T.val=15', 'E.val=15', '*'), ('E.val=15', '*', 'F.val=3'), ('*', 'F.val=3', 'T.val=3'), ('F.val=3', 'T.val=3', 'digit.lexval=3'), ('T.val=3', 'digit.lexval=3', 'F.val=4'), ('digit.lexval=3', 'F.val=4', 'T.val=4'), ('F.val=4', 'T.val=4', 'digit.lexval=4'), ('T.val=4', 'digit.lexval=4', 'F.val=5'), ('digit.lexval=4', 'F.val=5', 'digit.lexval=5'), ('F.val=5', 'digit.lexval=5', 'Production'), ('digit.lexval=5', 'Production', 'Semantic'), ('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'L'), ('rules', 'L', '\uf0e0'), ('L', '\uf0e0', 'En'), ('\uf0e0', 'En', 'Print'), ('En', 'Print', '('), ('Print', '(', 'E.val'), ('(', 'E.val', ')'), ('E.val', ')', 'E'), (')', 'E', '\uf0e0'), ('E', '\uf0e0', 'E1+T'), ('\uf0e0', 'E1+T', 'E.Val'), ('E1+T', 'E.Val', '='), ('E.Val', '=', 'E1.val'), ('=', 'E1.val', '+'), ('E1.val', '+', 'T.val'), ('+', 'T.val', 'E'), ('T.val', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'E.Val'), ('T', 'E.Val', '='), ('E.Val', '=', 'T.val'), ('=', 'T.val', 'T'), ('T.val', 'T', '\uf0e0'), ('T', '\uf0e0', 'T1'), ('\uf0e0', 'T1', '*'), ('T1', '*', 'F'), ('*', 'F', 'T.Val'), ('F', 'T.Val', '='), ('T.Val', '=', 'T1.val'), ('=', 'T1.val', '*'), ('T1.val', '*', 'F.val'), ('*', 'F.val', 'T'), ('F.val', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'T.Val'), ('F', 'T.Val', '='), ('T.Val', '=', 'F.val'), ('=', 'F.val', 'F'), ('F.val', 'F', '\uf0e0'), ('F', '\uf0e0', '('), ('\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'F.Val'), (')', 'F.Val', '='), ('F.Val', '=', 'E.val'), ('=', 'E.val', 'F'), ('E.val', 'F', '\uf0e0'), ('F', '\uf0e0', 'digit'), ('\uf0e0', 'digit', 'F.Val'), ('digit', 'F.Val', '='), ('F.Val', '=', 'digit'), ('=', 'digit', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('Syntax', 'NNP'), ('directed', 'VBD'), ('definition', 'NN'), ('simple', 'NN'), ('desk', 'NN'), ('calculator', 'NN'), ('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('L', 'NNP'), ('\uf0e0', 'NNP'), ('En', 'NNP'), ('Print', 'NNP'), ('(', '('), ('E.val', 'NNP'), (')', ')'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('E1+T', 'NNP'), ('E.val', 'NNP'), ('=', 'NNP'), ('E1.val', 'NNP'), ('+', 'NNP'), ('T.val', 'NNP'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('E.val', 'NNP'), ('=', 'NNP'), ('T.val', 'NNP'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('T1', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T.val', 'NNP'), ('=', 'NNP'), ('T1.val', 'NNP'), ('*', 'NNP'), ('F.val', 'NNP'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('T.val', 'NNP'), ('=', 'NNP'), ('F.val', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('F.val', 'NNP'), ('=', 'NNP'), ('E.val', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('digit', 'VBZ'), ('F.val', 'NNP'), ('=', 'NNP'), ('digit.lexval', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Synthesized', 'VBN'), ('attributes', 'NNS'), ('L', 'NNP'), ('E.val=19', 'NNP'), ('n', 'MD'), ('+', 'VB'), ('T.val=15', 'NNP'), ('E.val=15', 'NNP'), ('*', 'NNP'), ('F.val=3', 'NNP'), ('T.val=3', 'NNP'), ('digit.lexval=3', 'NN'), ('F.val=4', 'NNP'), ('T.val=4', 'NNP'), ('digit.lexval=4', 'NN'), ('F.val=5', 'NNP'), ('digit.lexval=5', 'NN'), ('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('L', 'NNP'), ('\uf0e0', 'NNP'), ('En', 'NNP'), ('Print', 'NNP'), ('(', '('), ('E.val', 'NNP'), (')', ')'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('E1+T', 'NNP'), ('E.Val', 'NNP'), ('=', 'NNP'), ('E1.val', 'NNP'), ('+', 'NNP'), ('T.val', 'NNP'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('E.Val', 'NNP'), ('=', 'NNP'), ('T.val', 'NNP'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('T1', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T.Val', 'NNP'), ('=', 'NNP'), ('T1.val', 'NNP'), ('*', 'NNP'), ('F.val', 'NNP'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('T.Val', 'NNP'), ('=', 'NNP'), ('F.val', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('F.Val', 'NNP'), ('=', 'NNP'), ('E.val', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('digit', 'VBZ'), ('F.Val', 'NNP'), ('=', 'NNP'), ('digit', 'NN'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP Syntax/NNP)
  directed/VBD
  (NP
    definition/NN
    simple/NN
    desk/NN
    calculator/NN
    Production/NNP
    Semantic/NNP
    rules/NNS
    L/NNP
    /NNP
    En/NNP
    Print/NNP)
  (/(
  (NP E.val/NNP)
  )/)
  (NP
    E/NNP
    /NNP
    E1+T/NNP
    E.val/NNP
    =/NNP
    E1.val/NNP
    +/NNP
    T.val/NNP
    E/NNP
    /NNP
    T/NNP
    E.val/NNP
    =/NNP
    T.val/NNP
    T/NNP
    /NNP
    T1/NNP
    */NNP
    F/NNP
    T.val/NNP
    =/NNP
    T1.val/NNP
    */NNP
    F.val/NNP
    T/NNP
    /NNP
    F/NNP
    T.val/NNP
    =/NNP
    F.val/NNP
    F/NNP
    /NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP F.val/NNP =/NNP E.val/NNP F/NNP /NNP)
  digit/VBZ
  (NP
    F.val/NNP
    =/NNP
    digit.lexval/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  Synthesized/VBN
  (NP attributes/NNS L/NNP E.val=19/NNP)
  n/MD
  +/VB
  (NP
    T.val=15/NNP
    E.val=15/NNP
    */NNP
    F.val=3/NNP
    T.val=3/NNP
    digit.lexval=3/NN
    F.val=4/NNP
    T.val=4/NNP
    digit.lexval=4/NN
    F.val=5/NNP
    digit.lexval=5/NN
    Production/NNP
    Semantic/NNP
    rules/NNS
    L/NNP
    /NNP
    En/NNP
    Print/NNP)
  (/(
  (NP E.val/NNP)
  )/)
  (NP
    E/NNP
    /NNP
    E1+T/NNP
    E.Val/NNP
    =/NNP
    E1.val/NNP
    +/NNP
    T.val/NNP
    E/NNP
    /NNP
    T/NNP
    E.Val/NNP
    =/NNP
    T.val/NNP
    T/NNP
    /NNP
    T1/NNP
    */NNP
    F/NNP
    T.Val/NNP
    =/NNP
    T1.val/NNP
    */NNP
    F.val/NNP
    T/NNP
    /NNP
    F/NNP
    T.Val/NNP
    =/NNP
    F.val/NNP
    F/NNP
    /NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP F.Val/NNP =/NNP E.val/NNP F/NNP /NNP)
  digit/VBZ
  (NP F.Val/NNP =/NNP digit/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'Syntax', 'definition simple desk calculator Production Semantic rules L \uf0e0 En Print', 'E.val', 'E \uf0e0 E1+T E.val = E1.val + T.val E \uf0e0 T E.val = T.val T \uf0e0 T1 * F T.val = T1.val * F.val T \uf0e0 F T.val = F.val F \uf0e0', 'E', 'F.val = E.val F \uf0e0', 'F.val = digit.lexval Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Example', 'attributes L E.val=19', 'T.val=15 E.val=15 * F.val=3 T.val=3 digit.lexval=3 F.val=4 T.val=4 digit.lexval=4 F.val=5 digit.lexval=5 Production Semantic rules L \uf0e0 En Print', 'E.val', 'E \uf0e0 E1+T E.Val = E1.val + T.val E \uf0e0 T E.Val = T.val T \uf0e0 T1 * F T.Val = T1.val * F.val T \uf0e0 F T.Val = F.val F \uf0e0', 'E', 'F.Val = E.val F \uf0e0', 'F.Val = digit']

>> Named Entities are: 
 [('GPE', 'Example'), ('PERSON', 'Syntax'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('simple', 'simpl'), ('desk', 'desk'), ('calculator', 'calcul'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Print', 'print'), ('(', '('), ('E.val', 'e.val'), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E1+T', 'e1+t'), ('E.val', 'e.val'), ('=', '='), ('E1.val', 'e1.val'), ('+', '+'), ('T.val', 't.val'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E.val', 'e.val'), ('=', '='), ('T.val', 't.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('T1', 't1'), ('*', '*'), ('F', 'f'), ('T.val', 't.val'), ('=', '='), ('T1.val', 't1.val'), ('*', '*'), ('F.val', 'f.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T.val', 't.val'), ('=', '='), ('F.val', 'f.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('F.val', 'f.val'), ('=', '='), ('E.val', 'e.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('F.val', 'f.val'), ('=', '='), ('digit.lexval', 'digit.lexv'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Synthesized', 'synthes'), ('attributes', 'attribut'), ('L', 'l'), ('E.val=19', 'e.val=19'), ('n', 'n'), ('+', '+'), ('T.val=15', 't.val=15'), ('E.val=15', 'e.val=15'), ('*', '*'), ('F.val=3', 'f.val=3'), ('T.val=3', 't.val=3'), ('digit.lexval=3', 'digit.lexval=3'), ('F.val=4', 'f.val=4'), ('T.val=4', 't.val=4'), ('digit.lexval=4', 'digit.lexval=4'), ('F.val=5', 'f.val=5'), ('digit.lexval=5', 'digit.lexval=5'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Print', 'print'), ('(', '('), ('E.val', 'e.val'), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E1+T', 'e1+t'), ('E.Val', 'e.val'), ('=', '='), ('E1.val', 'e1.val'), ('+', '+'), ('T.val', 't.val'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E.Val', 'e.val'), ('=', '='), ('T.val', 't.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('T1', 't1'), ('*', '*'), ('F', 'f'), ('T.Val', 't.val'), ('=', '='), ('T1.val', 't1.val'), ('*', '*'), ('F.val', 'f.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T.Val', 't.val'), ('=', '='), ('F.val', 'f.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('F.Val', 'f.val'), ('=', '='), ('E.val', 'e.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('F.Val', 'f.val'), ('=', '='), ('digit', 'digit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('simple', 'simpl'), ('desk', 'desk'), ('calculator', 'calcul'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Print', 'print'), ('(', '('), ('E.val', 'e.val'), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E1+T', 'e1+t'), ('E.val', 'e.val'), ('=', '='), ('E1.val', 'e1.val'), ('+', '+'), ('T.val', 't.val'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E.val', 'e.val'), ('=', '='), ('T.val', 't.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('T1', 't1'), ('*', '*'), ('F', 'f'), ('T.val', 't.val'), ('=', '='), ('T1.val', 't1.val'), ('*', '*'), ('F.val', 'f.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T.val', 't.val'), ('=', '='), ('F.val', 'f.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('F.val', 'f.val'), ('=', '='), ('E.val', 'e.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('F.val', 'f.val'), ('=', '='), ('digit.lexval', 'digit.lexv'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Synthesized', 'synthes'), ('attributes', 'attribut'), ('L', 'l'), ('E.val=19', 'e.val=19'), ('n', 'n'), ('+', '+'), ('T.val=15', 't.val=15'), ('E.val=15', 'e.val=15'), ('*', '*'), ('F.val=3', 'f.val=3'), ('T.val=3', 't.val=3'), ('digit.lexval=3', 'digit.lexval=3'), ('F.val=4', 'f.val=4'), ('T.val=4', 't.val=4'), ('digit.lexval=4', 'digit.lexval=4'), ('F.val=5', 'f.val=5'), ('digit.lexval=5', 'digit.lexval=5'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Print', 'print'), ('(', '('), ('E.val', 'e.val'), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E1+T', 'e1+t'), ('E.Val', 'e.val'), ('=', '='), ('E1.val', 'e1.val'), ('+', '+'), ('T.val', 't.val'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E.Val', 'e.val'), ('=', '='), ('T.val', 't.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('T1', 't1'), ('*', '*'), ('F', 'f'), ('T.Val', 't.val'), ('=', '='), ('T1.val', 't1.val'), ('*', '*'), ('F.val', 'f.val'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T.Val', 't.val'), ('=', '='), ('F.val', 'f.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('F.Val', 'f.val'), ('=', '='), ('E.val', 'e.val'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('F.Val', 'f.val'), ('=', '='), ('digit', 'digit'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definition', 'definition'), ('simple', 'simple'), ('desk', 'desk'), ('calculator', 'calculator'), ('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('L', 'L'), ('\uf0e0', '\uf0e0'), ('En', 'En'), ('Print', 'Print'), ('(', '('), ('E.val', 'E.val'), (')', ')'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('E1+T', 'E1+T'), ('E.val', 'E.val'), ('=', '='), ('E1.val', 'E1.val'), ('+', '+'), ('T.val', 'T.val'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E.val', 'E.val'), ('=', '='), ('T.val', 'T.val'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('T1', 'T1'), ('*', '*'), ('F', 'F'), ('T.val', 'T.val'), ('=', '='), ('T1.val', 'T1.val'), ('*', '*'), ('F.val', 'F.val'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T.val', 'T.val'), ('=', '='), ('F.val', 'F.val'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('F.val', 'F.val'), ('=', '='), ('E.val', 'E.val'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('F.val', 'F.val'), ('=', '='), ('digit.lexval', 'digit.lexval'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Synthesized', 'Synthesized'), ('attributes', 'attribute'), ('L', 'L'), ('E.val=19', 'E.val=19'), ('n', 'n'), ('+', '+'), ('T.val=15', 'T.val=15'), ('E.val=15', 'E.val=15'), ('*', '*'), ('F.val=3', 'F.val=3'), ('T.val=3', 'T.val=3'), ('digit.lexval=3', 'digit.lexval=3'), ('F.val=4', 'F.val=4'), ('T.val=4', 'T.val=4'), ('digit.lexval=4', 'digit.lexval=4'), ('F.val=5', 'F.val=5'), ('digit.lexval=5', 'digit.lexval=5'), ('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('L', 'L'), ('\uf0e0', '\uf0e0'), ('En', 'En'), ('Print', 'Print'), ('(', '('), ('E.val', 'E.val'), (')', ')'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('E1+T', 'E1+T'), ('E.Val', 'E.Val'), ('=', '='), ('E1.val', 'E1.val'), ('+', '+'), ('T.val', 'T.val'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E.Val', 'E.Val'), ('=', '='), ('T.val', 'T.val'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('T1', 'T1'), ('*', '*'), ('F', 'F'), ('T.Val', 'T.Val'), ('=', '='), ('T1.val', 'T1.val'), ('*', '*'), ('F.val', 'F.val'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T.Val', 'T.Val'), ('=', '='), ('F.val', 'F.val'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('F.Val', 'F.Val'), ('=', '='), ('E.val', 'E.val'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('F.Val', 'F.Val'), ('=', '='), ('digit', 'digit'), ('.', '.')]



============================ Sentence 6 =============================

lexval  Annotated parse tree for 3*5+4n parse tree showing the value of the attributes at each node is called Annotated parse tree  The process of computing the attribute values at the node is called annotating or decorating the parse tree String: 3*5+4n;    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Exercise Draw Annotated Parse tree for following: 7+3*2n (3+4)*(5+6)n     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Syntax directed definition to translates arithmetic expressions from infix to prefix notation  	Production 	Semantic rules 	LE	Print(E.val) 	EE+T	E.val=’+’ E.val T.val 	EE-T	E.val=’-‘ E.val T.val 	ET	E.val= T.val 	TT*F	T.val=’*’ T.val F.val 	TT/F	T.val=’/’ T.val F.val 	TF	T.val= F.val 	FF^P	F.val=’^’ F.val P.val 	FP	F.val= P.val 	P(E)	P.val= E.val 	Pdigit	P.val=digit.lexval                Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Inherited attribute An inherited value at a node in a parse tree is computed from the value of attributes at the parent and/or siblings of the node. 


>> Tokens are: 
 ['lexval', 'Annotated', 'parse', 'tree', '3', '*', '5+4n', 'parse', 'tree', 'showing', 'value', 'attributes', 'node', 'called', 'Annotated', 'parse', 'tree', 'The', 'process', 'computing', 'attribute', 'values', 'node', 'called', 'annotating', 'decorating', 'parse', 'tree', 'String', ':', '3', '*', '5+4n', ';', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Exercise', 'Draw', 'Annotated', 'Parse', 'tree', 'following', ':', '7+3', '*', '2n', '(', '3+4', ')', '*', '(', '5+6', ')', 'n', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Syntax', 'directed', 'definition', 'translates', 'arithmetic', 'expressions', 'infix', 'prefix', 'notation', 'Production', 'Semantic', 'rules', 'L\uf0e0E', 'Print', '(', 'E.val', ')', 'E\uf0e0E+T', 'E.val=', '’', '+', '’', 'E.val', 'T.val', 'E\uf0e0E-T', 'E.val=', '’', '-', '‘', 'E.val', 'T.val', 'E\uf0e0T', 'E.val=', 'T.val', 'T\uf0e0T', '*', 'F', 'T.val=', '’', '*', '’', 'T.val', 'F.val', 'T\uf0e0T/F', 'T.val=', '’', '/', '’', 'T.val', 'F.val', 'T\uf0e0F', 'T.val=', 'F.val', 'F\uf0e0F^P', 'F.val=', '’', '^', '’', 'F.val', 'P.val', 'F\uf0e0P', 'F.val=', 'P.val', 'P\uf0e0', '(', 'E', ')', 'P.val=', 'E.val', 'P\uf0e0digit', 'P.val=digit.lexval', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Inherited', 'attribute', 'An', 'inherited', 'value', 'node', 'parse', 'tree', 'computed', 'value', 'attributes', 'parent', 'and/or', 'siblings', 'node', '.']

>> Bigrams are: 
 [('lexval', 'Annotated'), ('Annotated', 'parse'), ('parse', 'tree'), ('tree', '3'), ('3', '*'), ('*', '5+4n'), ('5+4n', 'parse'), ('parse', 'tree'), ('tree', 'showing'), ('showing', 'value'), ('value', 'attributes'), ('attributes', 'node'), ('node', 'called'), ('called', 'Annotated'), ('Annotated', 'parse'), ('parse', 'tree'), ('tree', 'The'), ('The', 'process'), ('process', 'computing'), ('computing', 'attribute'), ('attribute', 'values'), ('values', 'node'), ('node', 'called'), ('called', 'annotating'), ('annotating', 'decorating'), ('decorating', 'parse'), ('parse', 'tree'), ('tree', 'String'), ('String', ':'), (':', '3'), ('3', '*'), ('*', '5+4n'), ('5+4n', ';'), (';', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', 'Draw'), ('Draw', 'Annotated'), ('Annotated', 'Parse'), ('Parse', 'tree'), ('tree', 'following'), ('following', ':'), (':', '7+3'), ('7+3', '*'), ('*', '2n'), ('2n', '('), ('(', '3+4'), ('3+4', ')'), (')', '*'), ('*', '('), ('(', '5+6'), ('5+6', ')'), (')', 'n'), ('n', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definition'), ('definition', 'translates'), ('translates', 'arithmetic'), ('arithmetic', 'expressions'), ('expressions', 'infix'), ('infix', 'prefix'), ('prefix', 'notation'), ('notation', 'Production'), ('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'L\uf0e0E'), ('L\uf0e0E', 'Print'), ('Print', '('), ('(', 'E.val'), ('E.val', ')'), (')', 'E\uf0e0E+T'), ('E\uf0e0E+T', 'E.val='), ('E.val=', '’'), ('’', '+'), ('+', '’'), ('’', 'E.val'), ('E.val', 'T.val'), ('T.val', 'E\uf0e0E-T'), ('E\uf0e0E-T', 'E.val='), ('E.val=', '’'), ('’', '-'), ('-', '‘'), ('‘', 'E.val'), ('E.val', 'T.val'), ('T.val', 'E\uf0e0T'), ('E\uf0e0T', 'E.val='), ('E.val=', 'T.val'), ('T.val', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F'), ('F', 'T.val='), ('T.val=', '’'), ('’', '*'), ('*', '’'), ('’', 'T.val'), ('T.val', 'F.val'), ('F.val', 'T\uf0e0T/F'), ('T\uf0e0T/F', 'T.val='), ('T.val=', '’'), ('’', '/'), ('/', '’'), ('’', 'T.val'), ('T.val', 'F.val'), ('F.val', 'T\uf0e0F'), ('T\uf0e0F', 'T.val='), ('T.val=', 'F.val'), ('F.val', 'F\uf0e0F^P'), ('F\uf0e0F^P', 'F.val='), ('F.val=', '’'), ('’', '^'), ('^', '’'), ('’', 'F.val'), ('F.val', 'P.val'), ('P.val', 'F\uf0e0P'), ('F\uf0e0P', 'F.val='), ('F.val=', 'P.val'), ('P.val', 'P\uf0e0'), ('P\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'P.val='), ('P.val=', 'E.val'), ('E.val', 'P\uf0e0digit'), ('P\uf0e0digit', 'P.val=digit.lexval'), ('P.val=digit.lexval', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Inherited'), ('Inherited', 'attribute'), ('attribute', 'An'), ('An', 'inherited'), ('inherited', 'value'), ('value', 'node'), ('node', 'parse'), ('parse', 'tree'), ('tree', 'computed'), ('computed', 'value'), ('value', 'attributes'), ('attributes', 'parent'), ('parent', 'and/or'), ('and/or', 'siblings'), ('siblings', 'node'), ('node', '.')]

>> Trigrams are: 
 [('lexval', 'Annotated', 'parse'), ('Annotated', 'parse', 'tree'), ('parse', 'tree', '3'), ('tree', '3', '*'), ('3', '*', '5+4n'), ('*', '5+4n', 'parse'), ('5+4n', 'parse', 'tree'), ('parse', 'tree', 'showing'), ('tree', 'showing', 'value'), ('showing', 'value', 'attributes'), ('value', 'attributes', 'node'), ('attributes', 'node', 'called'), ('node', 'called', 'Annotated'), ('called', 'Annotated', 'parse'), ('Annotated', 'parse', 'tree'), ('parse', 'tree', 'The'), ('tree', 'The', 'process'), ('The', 'process', 'computing'), ('process', 'computing', 'attribute'), ('computing', 'attribute', 'values'), ('attribute', 'values', 'node'), ('values', 'node', 'called'), ('node', 'called', 'annotating'), ('called', 'annotating', 'decorating'), ('annotating', 'decorating', 'parse'), ('decorating', 'parse', 'tree'), ('parse', 'tree', 'String'), ('tree', 'String', ':'), ('String', ':', '3'), (':', '3', '*'), ('3', '*', '5+4n'), ('*', '5+4n', ';'), ('5+4n', ';', 'Prof.'), (';', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', 'Draw'), ('Exercise', 'Draw', 'Annotated'), ('Draw', 'Annotated', 'Parse'), ('Annotated', 'Parse', 'tree'), ('Parse', 'tree', 'following'), ('tree', 'following', ':'), ('following', ':', '7+3'), (':', '7+3', '*'), ('7+3', '*', '2n'), ('*', '2n', '('), ('2n', '(', '3+4'), ('(', '3+4', ')'), ('3+4', ')', '*'), (')', '*', '('), ('*', '(', '5+6'), ('(', '5+6', ')'), ('5+6', ')', 'n'), (')', 'n', 'Prof.'), ('n', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Syntax'), ('›', 'Syntax', 'directed'), ('Syntax', 'directed', 'definition'), ('directed', 'definition', 'translates'), ('definition', 'translates', 'arithmetic'), ('translates', 'arithmetic', 'expressions'), ('arithmetic', 'expressions', 'infix'), ('expressions', 'infix', 'prefix'), ('infix', 'prefix', 'notation'), ('prefix', 'notation', 'Production'), ('notation', 'Production', 'Semantic'), ('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'L\uf0e0E'), ('rules', 'L\uf0e0E', 'Print'), ('L\uf0e0E', 'Print', '('), ('Print', '(', 'E.val'), ('(', 'E.val', ')'), ('E.val', ')', 'E\uf0e0E+T'), (')', 'E\uf0e0E+T', 'E.val='), ('E\uf0e0E+T', 'E.val=', '’'), ('E.val=', '’', '+'), ('’', '+', '’'), ('+', '’', 'E.val'), ('’', 'E.val', 'T.val'), ('E.val', 'T.val', 'E\uf0e0E-T'), ('T.val', 'E\uf0e0E-T', 'E.val='), ('E\uf0e0E-T', 'E.val=', '’'), ('E.val=', '’', '-'), ('’', '-', '‘'), ('-', '‘', 'E.val'), ('‘', 'E.val', 'T.val'), ('E.val', 'T.val', 'E\uf0e0T'), ('T.val', 'E\uf0e0T', 'E.val='), ('E\uf0e0T', 'E.val=', 'T.val'), ('E.val=', 'T.val', 'T\uf0e0T'), ('T.val', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F'), ('*', 'F', 'T.val='), ('F', 'T.val=', '’'), ('T.val=', '’', '*'), ('’', '*', '’'), ('*', '’', 'T.val'), ('’', 'T.val', 'F.val'), ('T.val', 'F.val', 'T\uf0e0T/F'), ('F.val', 'T\uf0e0T/F', 'T.val='), ('T\uf0e0T/F', 'T.val=', '’'), ('T.val=', '’', '/'), ('’', '/', '’'), ('/', '’', 'T.val'), ('’', 'T.val', 'F.val'), ('T.val', 'F.val', 'T\uf0e0F'), ('F.val', 'T\uf0e0F', 'T.val='), ('T\uf0e0F', 'T.val=', 'F.val'), ('T.val=', 'F.val', 'F\uf0e0F^P'), ('F.val', 'F\uf0e0F^P', 'F.val='), ('F\uf0e0F^P', 'F.val=', '’'), ('F.val=', '’', '^'), ('’', '^', '’'), ('^', '’', 'F.val'), ('’', 'F.val', 'P.val'), ('F.val', 'P.val', 'F\uf0e0P'), ('P.val', 'F\uf0e0P', 'F.val='), ('F\uf0e0P', 'F.val=', 'P.val'), ('F.val=', 'P.val', 'P\uf0e0'), ('P.val', 'P\uf0e0', '('), ('P\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'P.val='), (')', 'P.val=', 'E.val'), ('P.val=', 'E.val', 'P\uf0e0digit'), ('E.val', 'P\uf0e0digit', 'P.val=digit.lexval'), ('P\uf0e0digit', 'P.val=digit.lexval', 'Prof.'), ('P.val=digit.lexval', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Inherited'), ('›', 'Inherited', 'attribute'), ('Inherited', 'attribute', 'An'), ('attribute', 'An', 'inherited'), ('An', 'inherited', 'value'), ('inherited', 'value', 'node'), ('value', 'node', 'parse'), ('node', 'parse', 'tree'), ('parse', 'tree', 'computed'), ('tree', 'computed', 'value'), ('computed', 'value', 'attributes'), ('value', 'attributes', 'parent'), ('attributes', 'parent', 'and/or'), ('parent', 'and/or', 'siblings'), ('and/or', 'siblings', 'node'), ('siblings', 'node', '.')]

>> POS Tags are: 
 [('lexval', 'NN'), ('Annotated', 'NNP'), ('parse', 'NN'), ('tree', 'NN'), ('3', 'CD'), ('*', 'NN'), ('5+4n', 'CD'), ('parse', 'NN'), ('tree', 'NN'), ('showing', 'VBG'), ('value', 'NN'), ('attributes', 'VBZ'), ('node', 'RB'), ('called', 'VBN'), ('Annotated', 'NNP'), ('parse', 'NN'), ('tree', 'VBD'), ('The', 'DT'), ('process', 'NN'), ('computing', 'VBG'), ('attribute', 'NN'), ('values', 'NNS'), ('node', 'RB'), ('called', 'VBD'), ('annotating', 'VBG'), ('decorating', 'VBG'), ('parse', 'JJ'), ('tree', 'JJ'), ('String', 'NN'), (':', ':'), ('3', 'CD'), ('*', '$'), ('5+4n', 'CD'), (';', ':'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Exercise', 'NNP'), ('Draw', 'NNP'), ('Annotated', 'NNP'), ('Parse', 'NNP'), ('tree', 'NN'), ('following', 'VBG'), (':', ':'), ('7+3', 'CD'), ('*', '$'), ('2n', 'CD'), ('(', '('), ('3+4', 'CD'), (')', ')'), ('*', 'NN'), ('(', '('), ('5+6', 'CD'), (')', ')'), ('n', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Syntax', 'NNP'), ('directed', 'VBD'), ('definition', 'NN'), ('translates', 'NNS'), ('arithmetic', 'JJ'), ('expressions', 'NNS'), ('infix', 'VBP'), ('prefix', 'JJ'), ('notation', 'NN'), ('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('L\uf0e0E', 'NNP'), ('Print', 'NNP'), ('(', '('), ('E.val', 'NNP'), (')', ')'), ('E\uf0e0E+T', 'NNP'), ('E.val=', 'NNP'), ('’', 'NNP'), ('+', 'NNP'), ('’', 'NNP'), ('E.val', 'NNP'), ('T.val', 'NNP'), ('E\uf0e0E-T', 'NNP'), ('E.val=', 'NNP'), ('’', 'NNP'), ('-', ':'), ('‘', 'NN'), ('E.val', 'NNP'), ('T.val', 'NNP'), ('E\uf0e0T', 'NNP'), ('E.val=', 'NNP'), ('T.val', 'NNP'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T.val=', 'NNP'), ('’', 'NNP'), ('*', 'NNP'), ('’', 'NNP'), ('T.val', 'NNP'), ('F.val', 'NNP'), ('T\uf0e0T/F', 'NNP'), ('T.val=', 'NNP'), ('’', 'NNP'), ('/', 'NNP'), ('’', 'NNP'), ('T.val', 'NNP'), ('F.val', 'NNP'), ('T\uf0e0F', 'NNP'), ('T.val=', 'NNP'), ('F.val', 'NNP'), ('F\uf0e0F^P', 'NNP'), ('F.val=', 'NNP'), ('’', 'NNP'), ('^', 'NNP'), ('’', 'NNP'), ('F.val', 'NNP'), ('P.val', 'NNP'), ('F\uf0e0P', 'NNP'), ('F.val=', 'NNP'), ('P.val', 'NNP'), ('P\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('P.val=', 'NNP'), ('E.val', 'NNP'), ('P\uf0e0digit', 'NNP'), ('P.val=digit.lexval', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Inherited', 'NNP'), ('attribute', 'VBD'), ('An', 'DT'), ('inherited', 'JJ'), ('value', 'NN'), ('node', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('computed', 'VBD'), ('value', 'NN'), ('attributes', 'VBZ'), ('parent', 'JJ'), ('and/or', 'JJ'), ('siblings', 'NNS'), ('node', 'NN'), ('.', '.')]

 (S
  (NP lexval/NN Annotated/NNP parse/NN tree/NN)
  3/CD
  (NP */NN)
  5+4n/CD
  (NP parse/NN tree/NN)
  showing/VBG
  (NP value/NN)
  attributes/VBZ
  node/RB
  called/VBN
  (NP Annotated/NNP parse/NN)
  tree/VBD
  (NP The/DT process/NN)
  computing/VBG
  (NP attribute/NN values/NNS)
  node/RB
  called/VBD
  annotating/VBG
  decorating/VBG
  (NP parse/JJ tree/JJ String/NN)
  :/:
  3/CD
  */$
  5+4n/CD
  ;/:
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Exercise/NNP Draw/NNP Annotated/NNP Parse/NNP tree/NN)
  following/VBG
  :/:
  7+3/CD
  */$
  2n/CD
  (/(
  3+4/CD
  )/)
  (NP */NN)
  (/(
  5+6/CD
  )/)
  (NP n/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Syntax/NNP)
  directed/VBD
  (NP definition/NN translates/NNS)
  (NP arithmetic/JJ expressions/NNS)
  infix/VBP
  (NP
    prefix/JJ
    notation/NN
    Production/NNP
    Semantic/NNP
    rules/NNS
    LE/NNP
    Print/NNP)
  (/(
  (NP E.val/NNP)
  )/)
  (NP
    EE+T/NNP
    E.val=/NNP
    ’/NNP
    +/NNP
    ’/NNP
    E.val/NNP
    T.val/NNP
    EE-T/NNP
    E.val=/NNP
    ’/NNP)
  -/:
  (NP
    ‘/NN
    E.val/NNP
    T.val/NNP
    ET/NNP
    E.val=/NNP
    T.val/NNP
    TT/NNP
    */NNP
    F/NNP
    T.val=/NNP
    ’/NNP
    */NNP
    ’/NNP
    T.val/NNP
    F.val/NNP
    TT/F/NNP
    T.val=/NNP
    ’/NNP
    //NNP
    ’/NNP
    T.val/NNP
    F.val/NNP
    TF/NNP
    T.val=/NNP
    F.val/NNP
    FF^P/NNP
    F.val=/NNP
    ’/NNP
    ^/NNP
    ’/NNP
    F.val/NNP
    P.val/NNP
    FP/NNP
    F.val=/NNP
    P.val/NNP
    P/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP
    P.val=/NNP
    E.val/NNP
    Pdigit/NNP
    P.val=digit.lexval/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Inherited/NNP)
  attribute/VBD
  (NP An/DT inherited/JJ value/NN)
  (NP node/JJ parse/NN tree/NN)
  computed/VBD
  (NP value/NN)
  attributes/VBZ
  (NP parent/JJ and/or/JJ siblings/NNS node/NN)
  ./.) 


>> Noun Phrases are: 
 ['lexval Annotated parse tree', '*', 'parse tree', 'value', 'Annotated parse', 'The process', 'attribute values', 'parse tree String', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Exercise Draw Annotated Parse tree', '*', 'n Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Syntax', 'definition translates', 'arithmetic expressions', 'prefix notation Production Semantic rules L\uf0e0E Print', 'E.val', 'E\uf0e0E+T E.val= ’ + ’ E.val T.val E\uf0e0E-T E.val= ’', '‘ E.val T.val E\uf0e0T E.val= T.val T\uf0e0T * F T.val= ’ * ’ T.val F.val T\uf0e0T/F T.val= ’ / ’ T.val F.val T\uf0e0F T.val= F.val F\uf0e0F^P F.val= ’ ^ ’ F.val P.val F\uf0e0P F.val= P.val P\uf0e0', 'E', 'P.val= E.val P\uf0e0digit P.val=digit.lexval Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Inherited', 'An inherited value', 'node parse tree', 'value', 'parent and/or siblings node']

>> Named Entities are: 
 [('PERSON', 'Annotated'), ('PERSON', 'Annotated'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Annotated Parse'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Syntax'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('lexval', 'lexval'), ('Annotated', 'annot'), ('parse', 'pars'), ('tree', 'tree'), ('3', '3'), ('*', '*'), ('5+4n', '5+4n'), ('parse', 'pars'), ('tree', 'tree'), ('showing', 'show'), ('value', 'valu'), ('attributes', 'attribut'), ('node', 'node'), ('called', 'call'), ('Annotated', 'annot'), ('parse', 'pars'), ('tree', 'tree'), ('The', 'the'), ('process', 'process'), ('computing', 'comput'), ('attribute', 'attribut'), ('values', 'valu'), ('node', 'node'), ('called', 'call'), ('annotating', 'annot'), ('decorating', 'decor'), ('parse', 'pars'), ('tree', 'tree'), ('String', 'string'), (':', ':'), ('3', '3'), ('*', '*'), ('5+4n', '5+4n'), (';', ';'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), ('Draw', 'draw'), ('Annotated', 'annot'), ('Parse', 'pars'), ('tree', 'tree'), ('following', 'follow'), (':', ':'), ('7+3', '7+3'), ('*', '*'), ('2n', '2n'), ('(', '('), ('3+4', '3+4'), (')', ')'), ('*', '*'), ('(', '('), ('5+6', '5+6'), (')', ')'), ('n', 'n'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('translates', 'translat'), ('arithmetic', 'arithmet'), ('expressions', 'express'), ('infix', 'infix'), ('prefix', 'prefix'), ('notation', 'notat'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L\uf0e0E', 'l\uf0e0e'), ('Print', 'print'), ('(', '('), ('E.val', 'e.val'), (')', ')'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('E.val=', 'e.val='), ('’', '’'), ('+', '+'), ('’', '’'), ('E.val', 'e.val'), ('T.val', 't.val'), ('E\uf0e0E-T', 'e\uf0e0e-t'), ('E.val=', 'e.val='), ('’', '’'), ('-', '-'), ('‘', '‘'), ('E.val', 'e.val'), ('T.val', 't.val'), ('E\uf0e0T', 'e\uf0e0t'), ('E.val=', 'e.val='), ('T.val', 't.val'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('T.val=', 't.val='), ('’', '’'), ('*', '*'), ('’', '’'), ('T.val', 't.val'), ('F.val', 'f.val'), ('T\uf0e0T/F', 't\uf0e0t/f'), ('T.val=', 't.val='), ('’', '’'), ('/', '/'), ('’', '’'), ('T.val', 't.val'), ('F.val', 'f.val'), ('T\uf0e0F', 't\uf0e0f'), ('T.val=', 't.val='), ('F.val', 'f.val'), ('F\uf0e0F^P', 'f\uf0e0f^p'), ('F.val=', 'f.val='), ('’', '’'), ('^', '^'), ('’', '’'), ('F.val', 'f.val'), ('P.val', 'p.val'), ('F\uf0e0P', 'f\uf0e0p'), ('F.val=', 'f.val='), ('P.val', 'p.val'), ('P\uf0e0', 'p\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('P.val=', 'p.val='), ('E.val', 'e.val'), ('P\uf0e0digit', 'p\uf0e0digit'), ('P.val=digit.lexval', 'p.val=digit.lexv'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('An', 'an'), ('inherited', 'inherit'), ('value', 'valu'), ('node', 'node'), ('parse', 'pars'), ('tree', 'tree'), ('computed', 'comput'), ('value', 'valu'), ('attributes', 'attribut'), ('parent', 'parent'), ('and/or', 'and/or'), ('siblings', 'sibl'), ('node', 'node'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('lexval', 'lexval'), ('Annotated', 'annot'), ('parse', 'pars'), ('tree', 'tree'), ('3', '3'), ('*', '*'), ('5+4n', '5+4n'), ('parse', 'pars'), ('tree', 'tree'), ('showing', 'show'), ('value', 'valu'), ('attributes', 'attribut'), ('node', 'node'), ('called', 'call'), ('Annotated', 'annot'), ('parse', 'pars'), ('tree', 'tree'), ('The', 'the'), ('process', 'process'), ('computing', 'comput'), ('attribute', 'attribut'), ('values', 'valu'), ('node', 'node'), ('called', 'call'), ('annotating', 'annot'), ('decorating', 'decor'), ('parse', 'pars'), ('tree', 'tree'), ('String', 'string'), (':', ':'), ('3', '3'), ('*', '*'), ('5+4n', '5+4n'), (';', ';'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), ('Draw', 'draw'), ('Annotated', 'annot'), ('Parse', 'pars'), ('tree', 'tree'), ('following', 'follow'), (':', ':'), ('7+3', '7+3'), ('*', '*'), ('2n', '2n'), ('(', '('), ('3+4', '3+4'), (')', ')'), ('*', '*'), ('(', '('), ('5+6', '5+6'), (')', ')'), ('n', 'n'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('translates', 'translat'), ('arithmetic', 'arithmet'), ('expressions', 'express'), ('infix', 'infix'), ('prefix', 'prefix'), ('notation', 'notat'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L\uf0e0E', 'l\uf0e0e'), ('Print', 'print'), ('(', '('), ('E.val', 'e.val'), (')', ')'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('E.val=', 'e.val='), ('’', '’'), ('+', '+'), ('’', '’'), ('E.val', 'e.val'), ('T.val', 't.val'), ('E\uf0e0E-T', 'e\uf0e0e-t'), ('E.val=', 'e.val='), ('’', '’'), ('-', '-'), ('‘', '‘'), ('E.val', 'e.val'), ('T.val', 't.val'), ('E\uf0e0T', 'e\uf0e0t'), ('E.val=', 'e.val='), ('T.val', 't.val'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('T.val=', 't.val='), ('’', '’'), ('*', '*'), ('’', '’'), ('T.val', 't.val'), ('F.val', 'f.val'), ('T\uf0e0T/F', 't\uf0e0t/f'), ('T.val=', 't.val='), ('’', '’'), ('/', '/'), ('’', '’'), ('T.val', 't.val'), ('F.val', 'f.val'), ('T\uf0e0F', 't\uf0e0f'), ('T.val=', 't.val='), ('F.val', 'f.val'), ('F\uf0e0F^P', 'f\uf0e0f^p'), ('F.val=', 'f.val='), ('’', '’'), ('^', '^'), ('’', '’'), ('F.val', 'f.val'), ('P.val', 'p.val'), ('F\uf0e0P', 'f\uf0e0p'), ('F.val=', 'f.val='), ('P.val', 'p.val'), ('P\uf0e0', 'p\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('P.val=', 'p.val='), ('E.val', 'e.val'), ('P\uf0e0digit', 'p\uf0e0digit'), ('P.val=digit.lexval', 'p.val=digit.lexv'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('An', 'an'), ('inherited', 'inherit'), ('value', 'valu'), ('node', 'node'), ('parse', 'pars'), ('tree', 'tree'), ('computed', 'comput'), ('value', 'valu'), ('attributes', 'attribut'), ('parent', 'parent'), ('and/or', 'and/or'), ('siblings', 'sibl'), ('node', 'node'), ('.', '.')]

>> Lemmatization: 
 [('lexval', 'lexval'), ('Annotated', 'Annotated'), ('parse', 'parse'), ('tree', 'tree'), ('3', '3'), ('*', '*'), ('5+4n', '5+4n'), ('parse', 'parse'), ('tree', 'tree'), ('showing', 'showing'), ('value', 'value'), ('attributes', 'attribute'), ('node', 'node'), ('called', 'called'), ('Annotated', 'Annotated'), ('parse', 'parse'), ('tree', 'tree'), ('The', 'The'), ('process', 'process'), ('computing', 'computing'), ('attribute', 'attribute'), ('values', 'value'), ('node', 'node'), ('called', 'called'), ('annotating', 'annotating'), ('decorating', 'decorating'), ('parse', 'parse'), ('tree', 'tree'), ('String', 'String'), (':', ':'), ('3', '3'), ('*', '*'), ('5+4n', '5+4n'), (';', ';'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), ('Draw', 'Draw'), ('Annotated', 'Annotated'), ('Parse', 'Parse'), ('tree', 'tree'), ('following', 'following'), (':', ':'), ('7+3', '7+3'), ('*', '*'), ('2n', '2n'), ('(', '('), ('3+4', '3+4'), (')', ')'), ('*', '*'), ('(', '('), ('5+6', '5+6'), (')', ')'), ('n', 'n'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definition', 'definition'), ('translates', 'translates'), ('arithmetic', 'arithmetic'), ('expressions', 'expression'), ('infix', 'infix'), ('prefix', 'prefix'), ('notation', 'notation'), ('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('L\uf0e0E', 'L\uf0e0E'), ('Print', 'Print'), ('(', '('), ('E.val', 'E.val'), (')', ')'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('E.val=', 'E.val='), ('’', '’'), ('+', '+'), ('’', '’'), ('E.val', 'E.val'), ('T.val', 'T.val'), ('E\uf0e0E-T', 'E\uf0e0E-T'), ('E.val=', 'E.val='), ('’', '’'), ('-', '-'), ('‘', '‘'), ('E.val', 'E.val'), ('T.val', 'T.val'), ('E\uf0e0T', 'E\uf0e0T'), ('E.val=', 'E.val='), ('T.val', 'T.val'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F', 'F'), ('T.val=', 'T.val='), ('’', '’'), ('*', '*'), ('’', '’'), ('T.val', 'T.val'), ('F.val', 'F.val'), ('T\uf0e0T/F', 'T\uf0e0T/F'), ('T.val=', 'T.val='), ('’', '’'), ('/', '/'), ('’', '’'), ('T.val', 'T.val'), ('F.val', 'F.val'), ('T\uf0e0F', 'T\uf0e0F'), ('T.val=', 'T.val='), ('F.val', 'F.val'), ('F\uf0e0F^P', 'F\uf0e0F^P'), ('F.val=', 'F.val='), ('’', '’'), ('^', '^'), ('’', '’'), ('F.val', 'F.val'), ('P.val', 'P.val'), ('F\uf0e0P', 'F\uf0e0P'), ('F.val=', 'F.val='), ('P.val', 'P.val'), ('P\uf0e0', 'P\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('P.val=', 'P.val='), ('E.val', 'E.val'), ('P\uf0e0digit', 'P\uf0e0digit'), ('P.val=digit.lexval', 'P.val=digit.lexval'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Inherited', 'Inherited'), ('attribute', 'attribute'), ('An', 'An'), ('inherited', 'inherited'), ('value', 'value'), ('node', 'node'), ('parse', 'parse'), ('tree', 'tree'), ('computed', 'computed'), ('value', 'value'), ('attributes', 'attribute'), ('parent', 'parent'), ('and/or', 'and/or'), ('siblings', 'sibling'), ('node', 'node'), ('.', '.')]



============================ Sentence 7 =============================

Symbol T is associated with a synthesized attribute type. 


>> Tokens are: 
 ['Symbol', 'T', 'associated', 'synthesized', 'attribute', 'type', '.']

>> Bigrams are: 
 [('Symbol', 'T'), ('T', 'associated'), ('associated', 'synthesized'), ('synthesized', 'attribute'), ('attribute', 'type'), ('type', '.')]

>> Trigrams are: 
 [('Symbol', 'T', 'associated'), ('T', 'associated', 'synthesized'), ('associated', 'synthesized', 'attribute'), ('synthesized', 'attribute', 'type'), ('attribute', 'type', '.')]

>> POS Tags are: 
 [('Symbol', 'NN'), ('T', 'NNP'), ('associated', 'VBD'), ('synthesized', 'JJ'), ('attribute', 'NN'), ('type', 'NN'), ('.', '.')]

 (S
  (NP Symbol/NN T/NNP)
  associated/VBD
  (NP synthesized/JJ attribute/NN type/NN)
  ./.) 


>> Noun Phrases are: 
 ['Symbol T', 'synthesized attribute type']

>> Named Entities are: 
 [('PERSON', 'Symbol T')] 

>> Stemming using Porter Stemmer: 
 [('Symbol', 'symbol'), ('T', 't'), ('associated', 'associ'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('type', 'type'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Symbol', 'symbol'), ('T', 't'), ('associated', 'associ'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('type', 'type'), ('.', '.')]

>> Lemmatization: 
 [('Symbol', 'Symbol'), ('T', 'T'), ('associated', 'associated'), ('synthesized', 'synthesized'), ('attribute', 'attribute'), ('type', 'type'), ('.', '.')]



============================ Sentence 8 =============================

Symbol L is associated with an inherited attribute in. 


>> Tokens are: 
 ['Symbol', 'L', 'associated', 'inherited', 'attribute', '.']

>> Bigrams are: 
 [('Symbol', 'L'), ('L', 'associated'), ('associated', 'inherited'), ('inherited', 'attribute'), ('attribute', '.')]

>> Trigrams are: 
 [('Symbol', 'L', 'associated'), ('L', 'associated', 'inherited'), ('associated', 'inherited', 'attribute'), ('inherited', 'attribute', '.')]

>> POS Tags are: 
 [('Symbol', 'NN'), ('L', 'NNP'), ('associated', 'VBD'), ('inherited', 'JJ'), ('attribute', 'NN'), ('.', '.')]

 (S
  (NP Symbol/NN L/NNP)
  associated/VBD
  (NP inherited/JJ attribute/NN)
  ./.) 


>> Noun Phrases are: 
 ['Symbol L', 'inherited attribute']

>> Named Entities are: 
 [('PERSON', 'Symbol L')] 

>> Stemming using Porter Stemmer: 
 [('Symbol', 'symbol'), ('L', 'l'), ('associated', 'associ'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Symbol', 'symbol'), ('L', 'l'), ('associated', 'associ'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('.', '.')]

>> Lemmatization: 
 [('Symbol', 'Symbol'), ('L', 'L'), ('associated', 'associated'), ('inherited', 'inherited'), ('attribute', 'attribute'), ('.', '.')]



============================ Sentence 9 =============================

Production	Semantic rules 	D → T L	L.in = T.type 	T → int		T.type = integer 	T → real		T.type = real 	L → L1 , id	L1.in = L.in,   addtype(id.entry,L.in) 	L → id	addtype(id.entry,L.in)       Syntax directed definition with inherited attribute L.in    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Example: Inherited attribute Example: Pass data types to all identifier real id1,id2,id3  	Production	Semantic rules 	D → T L	L.in = T.type 	T → int		T.type = integer 	T → real		T.type = real 	L → L1 , id	L1.in = L.in,   addtype(id.entry,L.in) 	L → id	addtype(id.entry,L.in)  D  T.type=real  L real  T  L.in=real ,  L1 L.in=real id ,  L1 L.in=real id id  id3 id2 id1 DTL L → L1 , id L →  id    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Dependency graph        Dependency graph The directed graph that represents the interdependencies between synthesized and inherited attribute at nodes in the parse tree is called dependency graph. 


>> Tokens are: 
 ['Production', 'Semantic', 'rules', 'D', '→', 'T', 'L', 'L.in', '=', 'T.type', 'T', '→', 'int', 'T.type', '=', 'integer', 'T', '→', 'real', 'T.type', '=', 'real', 'L', '→', 'L1', ',', 'id', 'L1.in', '=', 'L.in', ',', 'addtype', '(', 'id.entry', ',', 'L.in', ')', 'L', '→', 'id', 'addtype', '(', 'id.entry', ',', 'L.in', ')', 'Syntax', 'directed', 'definition', 'inherited', 'attribute', 'L.in', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Example', ':', 'Inherited', 'attribute', 'Example', ':', 'Pass', 'data', 'types', 'identifier', 'real', 'id1', ',', 'id2', ',', 'id3', 'Production', 'Semantic', 'rules', 'D', '→', 'T', 'L', 'L.in', '=', 'T.type', 'T', '→', 'int', 'T.type', '=', 'integer', 'T', '→', 'real', 'T.type', '=', 'real', 'L', '→', 'L1', ',', 'id', 'L1.in', '=', 'L.in', ',', 'addtype', '(', 'id.entry', ',', 'L.in', ')', 'L', '→', 'id', 'addtype', '(', 'id.entry', ',', 'L.in', ')', 'D', 'T.type=real', 'L', 'real', 'T', 'L.in=real', ',', 'L1', 'L.in=real', 'id', ',', 'L1', 'L.in=real', 'id', 'id', 'id3', 'id2', 'id1', 'D\uf0e0TL', 'L', '→', 'L1', ',', 'id', 'L', '→', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Dependency', 'graph', 'Dependency', 'graph', 'The', 'directed', 'graph', 'represents', 'interdependencies', 'synthesized', 'inherited', 'attribute', 'nodes', 'parse', 'tree', 'called', 'dependency', 'graph', '.']

>> Bigrams are: 
 [('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'D'), ('D', '→'), ('→', 'T'), ('T', 'L'), ('L', 'L.in'), ('L.in', '='), ('=', 'T.type'), ('T.type', 'T'), ('T', '→'), ('→', 'int'), ('int', 'T.type'), ('T.type', '='), ('=', 'integer'), ('integer', 'T'), ('T', '→'), ('→', 'real'), ('real', 'T.type'), ('T.type', '='), ('=', 'real'), ('real', 'L'), ('L', '→'), ('→', 'L1'), ('L1', ','), (',', 'id'), ('id', 'L1.in'), ('L1.in', '='), ('=', 'L.in'), ('L.in', ','), (',', 'addtype'), ('addtype', '('), ('(', 'id.entry'), ('id.entry', ','), (',', 'L.in'), ('L.in', ')'), (')', 'L'), ('L', '→'), ('→', 'id'), ('id', 'addtype'), ('addtype', '('), ('(', 'id.entry'), ('id.entry', ','), (',', 'L.in'), ('L.in', ')'), (')', 'Syntax'), ('Syntax', 'directed'), ('directed', 'definition'), ('definition', 'inherited'), ('inherited', 'attribute'), ('attribute', 'L.in'), ('L.in', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Inherited'), ('Inherited', 'attribute'), ('attribute', 'Example'), ('Example', ':'), (':', 'Pass'), ('Pass', 'data'), ('data', 'types'), ('types', 'identifier'), ('identifier', 'real'), ('real', 'id1'), ('id1', ','), (',', 'id2'), ('id2', ','), (',', 'id3'), ('id3', 'Production'), ('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'D'), ('D', '→'), ('→', 'T'), ('T', 'L'), ('L', 'L.in'), ('L.in', '='), ('=', 'T.type'), ('T.type', 'T'), ('T', '→'), ('→', 'int'), ('int', 'T.type'), ('T.type', '='), ('=', 'integer'), ('integer', 'T'), ('T', '→'), ('→', 'real'), ('real', 'T.type'), ('T.type', '='), ('=', 'real'), ('real', 'L'), ('L', '→'), ('→', 'L1'), ('L1', ','), (',', 'id'), ('id', 'L1.in'), ('L1.in', '='), ('=', 'L.in'), ('L.in', ','), (',', 'addtype'), ('addtype', '('), ('(', 'id.entry'), ('id.entry', ','), (',', 'L.in'), ('L.in', ')'), (')', 'L'), ('L', '→'), ('→', 'id'), ('id', 'addtype'), ('addtype', '('), ('(', 'id.entry'), ('id.entry', ','), (',', 'L.in'), ('L.in', ')'), (')', 'D'), ('D', 'T.type=real'), ('T.type=real', 'L'), ('L', 'real'), ('real', 'T'), ('T', 'L.in=real'), ('L.in=real', ','), (',', 'L1'), ('L1', 'L.in=real'), ('L.in=real', 'id'), ('id', ','), (',', 'L1'), ('L1', 'L.in=real'), ('L.in=real', 'id'), ('id', 'id'), ('id', 'id3'), ('id3', 'id2'), ('id2', 'id1'), ('id1', 'D\uf0e0TL'), ('D\uf0e0TL', 'L'), ('L', '→'), ('→', 'L1'), ('L1', ','), (',', 'id'), ('id', 'L'), ('L', '→'), ('→', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Dependency'), ('Dependency', 'graph'), ('graph', 'Dependency'), ('Dependency', 'graph'), ('graph', 'The'), ('The', 'directed'), ('directed', 'graph'), ('graph', 'represents'), ('represents', 'interdependencies'), ('interdependencies', 'synthesized'), ('synthesized', 'inherited'), ('inherited', 'attribute'), ('attribute', 'nodes'), ('nodes', 'parse'), ('parse', 'tree'), ('tree', 'called'), ('called', 'dependency'), ('dependency', 'graph'), ('graph', '.')]

>> Trigrams are: 
 [('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'D'), ('rules', 'D', '→'), ('D', '→', 'T'), ('→', 'T', 'L'), ('T', 'L', 'L.in'), ('L', 'L.in', '='), ('L.in', '=', 'T.type'), ('=', 'T.type', 'T'), ('T.type', 'T', '→'), ('T', '→', 'int'), ('→', 'int', 'T.type'), ('int', 'T.type', '='), ('T.type', '=', 'integer'), ('=', 'integer', 'T'), ('integer', 'T', '→'), ('T', '→', 'real'), ('→', 'real', 'T.type'), ('real', 'T.type', '='), ('T.type', '=', 'real'), ('=', 'real', 'L'), ('real', 'L', '→'), ('L', '→', 'L1'), ('→', 'L1', ','), ('L1', ',', 'id'), (',', 'id', 'L1.in'), ('id', 'L1.in', '='), ('L1.in', '=', 'L.in'), ('=', 'L.in', ','), ('L.in', ',', 'addtype'), (',', 'addtype', '('), ('addtype', '(', 'id.entry'), ('(', 'id.entry', ','), ('id.entry', ',', 'L.in'), (',', 'L.in', ')'), ('L.in', ')', 'L'), (')', 'L', '→'), ('L', '→', 'id'), ('→', 'id', 'addtype'), ('id', 'addtype', '('), ('addtype', '(', 'id.entry'), ('(', 'id.entry', ','), ('id.entry', ',', 'L.in'), (',', 'L.in', ')'), ('L.in', ')', 'Syntax'), (')', 'Syntax', 'directed'), ('Syntax', 'directed', 'definition'), ('directed', 'definition', 'inherited'), ('definition', 'inherited', 'attribute'), ('inherited', 'attribute', 'L.in'), ('attribute', 'L.in', 'Prof.'), ('L.in', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Inherited'), (':', 'Inherited', 'attribute'), ('Inherited', 'attribute', 'Example'), ('attribute', 'Example', ':'), ('Example', ':', 'Pass'), (':', 'Pass', 'data'), ('Pass', 'data', 'types'), ('data', 'types', 'identifier'), ('types', 'identifier', 'real'), ('identifier', 'real', 'id1'), ('real', 'id1', ','), ('id1', ',', 'id2'), (',', 'id2', ','), ('id2', ',', 'id3'), (',', 'id3', 'Production'), ('id3', 'Production', 'Semantic'), ('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'D'), ('rules', 'D', '→'), ('D', '→', 'T'), ('→', 'T', 'L'), ('T', 'L', 'L.in'), ('L', 'L.in', '='), ('L.in', '=', 'T.type'), ('=', 'T.type', 'T'), ('T.type', 'T', '→'), ('T', '→', 'int'), ('→', 'int', 'T.type'), ('int', 'T.type', '='), ('T.type', '=', 'integer'), ('=', 'integer', 'T'), ('integer', 'T', '→'), ('T', '→', 'real'), ('→', 'real', 'T.type'), ('real', 'T.type', '='), ('T.type', '=', 'real'), ('=', 'real', 'L'), ('real', 'L', '→'), ('L', '→', 'L1'), ('→', 'L1', ','), ('L1', ',', 'id'), (',', 'id', 'L1.in'), ('id', 'L1.in', '='), ('L1.in', '=', 'L.in'), ('=', 'L.in', ','), ('L.in', ',', 'addtype'), (',', 'addtype', '('), ('addtype', '(', 'id.entry'), ('(', 'id.entry', ','), ('id.entry', ',', 'L.in'), (',', 'L.in', ')'), ('L.in', ')', 'L'), (')', 'L', '→'), ('L', '→', 'id'), ('→', 'id', 'addtype'), ('id', 'addtype', '('), ('addtype', '(', 'id.entry'), ('(', 'id.entry', ','), ('id.entry', ',', 'L.in'), (',', 'L.in', ')'), ('L.in', ')', 'D'), (')', 'D', 'T.type=real'), ('D', 'T.type=real', 'L'), ('T.type=real', 'L', 'real'), ('L', 'real', 'T'), ('real', 'T', 'L.in=real'), ('T', 'L.in=real', ','), ('L.in=real', ',', 'L1'), (',', 'L1', 'L.in=real'), ('L1', 'L.in=real', 'id'), ('L.in=real', 'id', ','), ('id', ',', 'L1'), (',', 'L1', 'L.in=real'), ('L1', 'L.in=real', 'id'), ('L.in=real', 'id', 'id'), ('id', 'id', 'id3'), ('id', 'id3', 'id2'), ('id3', 'id2', 'id1'), ('id2', 'id1', 'D\uf0e0TL'), ('id1', 'D\uf0e0TL', 'L'), ('D\uf0e0TL', 'L', '→'), ('L', '→', 'L1'), ('→', 'L1', ','), ('L1', ',', 'id'), (',', 'id', 'L'), ('id', 'L', '→'), ('L', '→', 'id'), ('→', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Dependency'), ('›', 'Dependency', 'graph'), ('Dependency', 'graph', 'Dependency'), ('graph', 'Dependency', 'graph'), ('Dependency', 'graph', 'The'), ('graph', 'The', 'directed'), ('The', 'directed', 'graph'), ('directed', 'graph', 'represents'), ('graph', 'represents', 'interdependencies'), ('represents', 'interdependencies', 'synthesized'), ('interdependencies', 'synthesized', 'inherited'), ('synthesized', 'inherited', 'attribute'), ('inherited', 'attribute', 'nodes'), ('attribute', 'nodes', 'parse'), ('nodes', 'parse', 'tree'), ('parse', 'tree', 'called'), ('tree', 'called', 'dependency'), ('called', 'dependency', 'graph'), ('dependency', 'graph', '.')]

>> POS Tags are: 
 [('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('D', 'NNP'), ('→', 'NNP'), ('T', 'NNP'), ('L', 'NNP'), ('L.in', 'NNP'), ('=', 'NNP'), ('T.type', 'NNP'), ('T', 'NNP'), ('→', 'NNP'), ('int', 'NN'), ('T.type', 'NNP'), ('=', 'NNP'), ('integer', 'NN'), ('T', 'NNP'), ('→', 'NNP'), ('real', 'JJ'), ('T.type', 'NNP'), ('=', 'NNP'), ('real', 'JJ'), ('L', 'NNP'), ('→', 'NNP'), ('L1', 'NNP'), (',', ','), ('id', 'NN'), ('L1.in', 'NNP'), ('=', 'NNP'), ('L.in', 'NNP'), (',', ','), ('addtype', 'NN'), ('(', '('), ('id.entry', 'NN'), (',', ','), ('L.in', 'NNP'), (')', ')'), ('L', 'NNP'), ('→', 'NNP'), ('id', 'NN'), ('addtype', 'NN'), ('(', '('), ('id.entry', 'NN'), (',', ','), ('L.in', 'NNP'), (')', ')'), ('Syntax', 'NNP'), ('directed', 'VBN'), ('definition', 'NN'), ('inherited', 'VBN'), ('attribute', 'JJ'), ('L.in', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Inherited', 'VBN'), ('attribute', 'JJ'), ('Example', 'NN'), (':', ':'), ('Pass', 'NNP'), ('data', 'NNS'), ('types', 'NNS'), ('identifier', 'JJ'), ('real', 'JJ'), ('id1', 'NN'), (',', ','), ('id2', 'NN'), (',', ','), ('id3', 'JJ'), ('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('D', 'NNP'), ('→', 'NNP'), ('T', 'NNP'), ('L', 'NNP'), ('L.in', 'NNP'), ('=', 'NNP'), ('T.type', 'NNP'), ('T', 'NNP'), ('→', 'NNP'), ('int', 'NN'), ('T.type', 'NNP'), ('=', 'NNP'), ('integer', 'NN'), ('T', 'NNP'), ('→', 'NNP'), ('real', 'JJ'), ('T.type', 'NNP'), ('=', 'NNP'), ('real', 'JJ'), ('L', 'NNP'), ('→', 'NNP'), ('L1', 'NNP'), (',', ','), ('id', 'NN'), ('L1.in', 'NNP'), ('=', 'NNP'), ('L.in', 'NNP'), (',', ','), ('addtype', 'NN'), ('(', '('), ('id.entry', 'NN'), (',', ','), ('L.in', 'NNP'), (')', ')'), ('L', 'NNP'), ('→', 'NNP'), ('id', 'NN'), ('addtype', 'NN'), ('(', '('), ('id.entry', 'NN'), (',', ','), ('L.in', 'NNP'), (')', ')'), ('D', 'NNP'), ('T.type=real', 'NNP'), ('L', 'NNP'), ('real', 'JJ'), ('T', 'NNP'), ('L.in=real', 'NNP'), (',', ','), ('L1', 'NNP'), ('L.in=real', 'NNP'), ('id', 'NN'), (',', ','), ('L1', 'NNP'), ('L.in=real', 'NNP'), ('id', 'NN'), ('id', 'NN'), ('id3', 'NN'), ('id2', 'NN'), ('id1', 'NN'), ('D\uf0e0TL', 'NNP'), ('L', 'NNP'), ('→', 'NNP'), ('L1', 'NNP'), (',', ','), ('id', 'NN'), ('L', 'NNP'), ('→', 'NNP'), ('id', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Dependency', 'NNP'), ('graph', 'NN'), ('Dependency', 'NNP'), ('graph', 'VBD'), ('The', 'DT'), ('directed', 'JJ'), ('graph', 'NN'), ('represents', 'VBZ'), ('interdependencies', 'NNS'), ('synthesized', 'VBN'), ('inherited', 'JJ'), ('attribute', 'NN'), ('nodes', 'NNS'), ('parse', 'VBP'), ('tree', 'NN'), ('called', 'VBN'), ('dependency', 'NN'), ('graph', 'NN'), ('.', '.')]

 (S
  (NP
    Production/NNP
    Semantic/NNP
    rules/NNS
    D/NNP
    →/NNP
    T/NNP
    L/NNP
    L.in/NNP
    =/NNP
    T.type/NNP
    T/NNP
    →/NNP
    int/NN
    T.type/NNP
    =/NNP
    integer/NN
    T/NNP
    →/NNP)
  (NP real/JJ T.type/NNP =/NNP)
  (NP real/JJ L/NNP →/NNP L1/NNP)
  ,/,
  (NP id/NN L1.in/NNP =/NNP L.in/NNP)
  ,/,
  (NP addtype/NN)
  (/(
  (NP id.entry/NN)
  ,/,
  (NP L.in/NNP)
  )/)
  (NP L/NNP →/NNP id/NN addtype/NN)
  (/(
  (NP id.entry/NN)
  ,/,
  (NP L.in/NNP)
  )/)
  (NP Syntax/NNP)
  directed/VBN
  (NP definition/NN)
  inherited/VBN
  (NP attribute/JJ L.in/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  Inherited/VBN
  (NP attribute/JJ Example/NN)
  :/:
  (NP Pass/NNP data/NNS types/NNS)
  (NP identifier/JJ real/JJ id1/NN)
  ,/,
  (NP id2/NN)
  ,/,
  (NP
    id3/JJ
    Production/NNP
    Semantic/NNP
    rules/NNS
    D/NNP
    →/NNP
    T/NNP
    L/NNP
    L.in/NNP
    =/NNP
    T.type/NNP
    T/NNP
    →/NNP
    int/NN
    T.type/NNP
    =/NNP
    integer/NN
    T/NNP
    →/NNP)
  (NP real/JJ T.type/NNP =/NNP)
  (NP real/JJ L/NNP →/NNP L1/NNP)
  ,/,
  (NP id/NN L1.in/NNP =/NNP L.in/NNP)
  ,/,
  (NP addtype/NN)
  (/(
  (NP id.entry/NN)
  ,/,
  (NP L.in/NNP)
  )/)
  (NP L/NNP →/NNP id/NN addtype/NN)
  (/(
  (NP id.entry/NN)
  ,/,
  (NP L.in/NNP)
  )/)
  (NP D/NNP T.type=real/NNP L/NNP)
  (NP real/JJ T/NNP L.in=real/NNP)
  ,/,
  (NP L1/NNP L.in=real/NNP id/NN)
  ,/,
  (NP
    L1/NNP
    L.in=real/NNP
    id/NN
    id/NN
    id3/NN
    id2/NN
    id1/NN
    DTL/NNP
    L/NNP
    →/NNP
    L1/NNP)
  ,/,
  (NP id/NN L/NNP →/NNP id/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Dependency/NNP graph/NN Dependency/NNP)
  graph/VBD
  (NP The/DT directed/JJ graph/NN)
  represents/VBZ
  (NP interdependencies/NNS)
  synthesized/VBN
  (NP inherited/JJ attribute/NN nodes/NNS)
  parse/VBP
  (NP tree/NN)
  called/VBN
  (NP dependency/NN graph/NN)
  ./.) 


>> Noun Phrases are: 
 ['Production Semantic rules D → T L L.in = T.type T → int T.type = integer T →', 'real T.type =', 'real L → L1', 'id L1.in = L.in', 'addtype', 'id.entry', 'L.in', 'L → id addtype', 'id.entry', 'L.in', 'Syntax', 'definition', 'attribute L.in Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Example', 'attribute Example', 'Pass data types', 'identifier real id1', 'id2', 'id3 Production Semantic rules D → T L L.in = T.type T → int T.type = integer T →', 'real T.type =', 'real L → L1', 'id L1.in = L.in', 'addtype', 'id.entry', 'L.in', 'L → id addtype', 'id.entry', 'L.in', 'D T.type=real L', 'real T L.in=real', 'L1 L.in=real id', 'L1 L.in=real id id id3 id2 id1 D\uf0e0TL L → L1', 'id L → id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Dependency graph Dependency', 'The directed graph', 'interdependencies', 'inherited attribute nodes', 'tree', 'dependency graph']

>> Named Entities are: 
 [('PERSON', 'D'), ('PERSON', 'Syntax'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'D'), ('PERSON', 'L1'), ('PERSON', 'L1'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Dependency')] 

>> Stemming using Porter Stemmer: 
 [('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('D', 'd'), ('→', '→'), ('T', 't'), ('L', 'l'), ('L.in', 'l.in'), ('=', '='), ('T.type', 't.type'), ('T', 't'), ('→', '→'), ('int', 'int'), ('T.type', 't.type'), ('=', '='), ('integer', 'integ'), ('T', 't'), ('→', '→'), ('real', 'real'), ('T.type', 't.type'), ('=', '='), ('real', 'real'), ('L', 'l'), ('→', '→'), ('L1', 'l1'), (',', ','), ('id', 'id'), ('L1.in', 'l1.in'), ('=', '='), ('L.in', 'l.in'), (',', ','), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('L', 'l'), ('→', '→'), ('id', 'id'), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('L.in', 'l.in'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('Example', 'exampl'), (':', ':'), ('Pass', 'pass'), ('data', 'data'), ('types', 'type'), ('identifier', 'identifi'), ('real', 'real'), ('id1', 'id1'), (',', ','), ('id2', 'id2'), (',', ','), ('id3', 'id3'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('D', 'd'), ('→', '→'), ('T', 't'), ('L', 'l'), ('L.in', 'l.in'), ('=', '='), ('T.type', 't.type'), ('T', 't'), ('→', '→'), ('int', 'int'), ('T.type', 't.type'), ('=', '='), ('integer', 'integ'), ('T', 't'), ('→', '→'), ('real', 'real'), ('T.type', 't.type'), ('=', '='), ('real', 'real'), ('L', 'l'), ('→', '→'), ('L1', 'l1'), (',', ','), ('id', 'id'), ('L1.in', 'l1.in'), ('=', '='), ('L.in', 'l.in'), (',', ','), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('L', 'l'), ('→', '→'), ('id', 'id'), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('D', 'd'), ('T.type=real', 't.type=r'), ('L', 'l'), ('real', 'real'), ('T', 't'), ('L.in=real', 'l.in=real'), (',', ','), ('L1', 'l1'), ('L.in=real', 'l.in=real'), ('id', 'id'), (',', ','), ('L1', 'l1'), ('L.in=real', 'l.in=real'), ('id', 'id'), ('id', 'id'), ('id3', 'id3'), ('id2', 'id2'), ('id1', 'id1'), ('D\uf0e0TL', 'd\uf0e0tl'), ('L', 'l'), ('→', '→'), ('L1', 'l1'), (',', ','), ('id', 'id'), ('L', 'l'), ('→', '→'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Dependency', 'depend'), ('graph', 'graph'), ('Dependency', 'depend'), ('graph', 'graph'), ('The', 'the'), ('directed', 'direct'), ('graph', 'graph'), ('represents', 'repres'), ('interdependencies', 'interdepend'), ('synthesized', 'synthes'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('nodes', 'node'), ('parse', 'pars'), ('tree', 'tree'), ('called', 'call'), ('dependency', 'depend'), ('graph', 'graph'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('D', 'd'), ('→', '→'), ('T', 't'), ('L', 'l'), ('L.in', 'l.in'), ('=', '='), ('T.type', 't.type'), ('T', 't'), ('→', '→'), ('int', 'int'), ('T.type', 't.type'), ('=', '='), ('integer', 'integ'), ('T', 't'), ('→', '→'), ('real', 'real'), ('T.type', 't.type'), ('=', '='), ('real', 'real'), ('L', 'l'), ('→', '→'), ('L1', 'l1'), (',', ','), ('id', 'id'), ('L1.in', 'l1.in'), ('=', '='), ('L.in', 'l.in'), (',', ','), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('L', 'l'), ('→', '→'), ('id', 'id'), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('Syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('L.in', 'l.in'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Inherited', 'inherit'), ('attribute', 'attribut'), ('Example', 'exampl'), (':', ':'), ('Pass', 'pass'), ('data', 'data'), ('types', 'type'), ('identifier', 'identifi'), ('real', 'real'), ('id1', 'id1'), (',', ','), ('id2', 'id2'), (',', ','), ('id3', 'id3'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('D', 'd'), ('→', '→'), ('T', 't'), ('L', 'l'), ('L.in', 'l.in'), ('=', '='), ('T.type', 't.type'), ('T', 't'), ('→', '→'), ('int', 'int'), ('T.type', 't.type'), ('=', '='), ('integer', 'integ'), ('T', 't'), ('→', '→'), ('real', 'real'), ('T.type', 't.type'), ('=', '='), ('real', 'real'), ('L', 'l'), ('→', '→'), ('L1', 'l1'), (',', ','), ('id', 'id'), ('L1.in', 'l1.in'), ('=', '='), ('L.in', 'l.in'), (',', ','), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('L', 'l'), ('→', '→'), ('id', 'id'), ('addtype', 'addtyp'), ('(', '('), ('id.entry', 'id.entri'), (',', ','), ('L.in', 'l.in'), (')', ')'), ('D', 'd'), ('T.type=real', 't.type=r'), ('L', 'l'), ('real', 'real'), ('T', 't'), ('L.in=real', 'l.in=real'), (',', ','), ('L1', 'l1'), ('L.in=real', 'l.in=real'), ('id', 'id'), (',', ','), ('L1', 'l1'), ('L.in=real', 'l.in=real'), ('id', 'id'), ('id', 'id'), ('id3', 'id3'), ('id2', 'id2'), ('id1', 'id1'), ('D\uf0e0TL', 'd\uf0e0tl'), ('L', 'l'), ('→', '→'), ('L1', 'l1'), (',', ','), ('id', 'id'), ('L', 'l'), ('→', '→'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Dependency', 'depend'), ('graph', 'graph'), ('Dependency', 'depend'), ('graph', 'graph'), ('The', 'the'), ('directed', 'direct'), ('graph', 'graph'), ('represents', 'repres'), ('interdependencies', 'interdepend'), ('synthesized', 'synthes'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('nodes', 'node'), ('parse', 'pars'), ('tree', 'tree'), ('called', 'call'), ('dependency', 'depend'), ('graph', 'graph'), ('.', '.')]

>> Lemmatization: 
 [('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('D', 'D'), ('→', '→'), ('T', 'T'), ('L', 'L'), ('L.in', 'L.in'), ('=', '='), ('T.type', 'T.type'), ('T', 'T'), ('→', '→'), ('int', 'int'), ('T.type', 'T.type'), ('=', '='), ('integer', 'integer'), ('T', 'T'), ('→', '→'), ('real', 'real'), ('T.type', 'T.type'), ('=', '='), ('real', 'real'), ('L', 'L'), ('→', '→'), ('L1', 'L1'), (',', ','), ('id', 'id'), ('L1.in', 'L1.in'), ('=', '='), ('L.in', 'L.in'), (',', ','), ('addtype', 'addtype'), ('(', '('), ('id.entry', 'id.entry'), (',', ','), ('L.in', 'L.in'), (')', ')'), ('L', 'L'), ('→', '→'), ('id', 'id'), ('addtype', 'addtype'), ('(', '('), ('id.entry', 'id.entry'), (',', ','), ('L.in', 'L.in'), (')', ')'), ('Syntax', 'Syntax'), ('directed', 'directed'), ('definition', 'definition'), ('inherited', 'inherited'), ('attribute', 'attribute'), ('L.in', 'L.in'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Inherited', 'Inherited'), ('attribute', 'attribute'), ('Example', 'Example'), (':', ':'), ('Pass', 'Pass'), ('data', 'data'), ('types', 'type'), ('identifier', 'identifier'), ('real', 'real'), ('id1', 'id1'), (',', ','), ('id2', 'id2'), (',', ','), ('id3', 'id3'), ('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('D', 'D'), ('→', '→'), ('T', 'T'), ('L', 'L'), ('L.in', 'L.in'), ('=', '='), ('T.type', 'T.type'), ('T', 'T'), ('→', '→'), ('int', 'int'), ('T.type', 'T.type'), ('=', '='), ('integer', 'integer'), ('T', 'T'), ('→', '→'), ('real', 'real'), ('T.type', 'T.type'), ('=', '='), ('real', 'real'), ('L', 'L'), ('→', '→'), ('L1', 'L1'), (',', ','), ('id', 'id'), ('L1.in', 'L1.in'), ('=', '='), ('L.in', 'L.in'), (',', ','), ('addtype', 'addtype'), ('(', '('), ('id.entry', 'id.entry'), (',', ','), ('L.in', 'L.in'), (')', ')'), ('L', 'L'), ('→', '→'), ('id', 'id'), ('addtype', 'addtype'), ('(', '('), ('id.entry', 'id.entry'), (',', ','), ('L.in', 'L.in'), (')', ')'), ('D', 'D'), ('T.type=real', 'T.type=real'), ('L', 'L'), ('real', 'real'), ('T', 'T'), ('L.in=real', 'L.in=real'), (',', ','), ('L1', 'L1'), ('L.in=real', 'L.in=real'), ('id', 'id'), (',', ','), ('L1', 'L1'), ('L.in=real', 'L.in=real'), ('id', 'id'), ('id', 'id'), ('id3', 'id3'), ('id2', 'id2'), ('id1', 'id1'), ('D\uf0e0TL', 'D\uf0e0TL'), ('L', 'L'), ('→', '→'), ('L1', 'L1'), (',', ','), ('id', 'id'), ('L', 'L'), ('→', '→'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Dependency', 'Dependency'), ('graph', 'graph'), ('Dependency', 'Dependency'), ('graph', 'graph'), ('The', 'The'), ('directed', 'directed'), ('graph', 'graph'), ('represents', 'represents'), ('interdependencies', 'interdependency'), ('synthesized', 'synthesized'), ('inherited', 'inherited'), ('attribute', 'attribute'), ('nodes', 'node'), ('parse', 'parse'), ('tree', 'tree'), ('called', 'called'), ('dependency', 'dependency'), ('graph', 'graph'), ('.', '.')]



============================ Sentence 10 =============================

For the rule XYZ the semantic action is given by X.x=f(Y.y, Z.z) then synthesized attribute X.x depends on attributes Y.y and Z.z. 


>> Tokens are: 
 ['For', 'rule', 'X\uf0e0YZ', 'semantic', 'action', 'given', 'X.x=f', '(', 'Y.y', ',', 'Z.z', ')', 'synthesized', 'attribute', 'X.x', 'depends', 'attributes', 'Y.y', 'Z.z', '.']

>> Bigrams are: 
 [('For', 'rule'), ('rule', 'X\uf0e0YZ'), ('X\uf0e0YZ', 'semantic'), ('semantic', 'action'), ('action', 'given'), ('given', 'X.x=f'), ('X.x=f', '('), ('(', 'Y.y'), ('Y.y', ','), (',', 'Z.z'), ('Z.z', ')'), (')', 'synthesized'), ('synthesized', 'attribute'), ('attribute', 'X.x'), ('X.x', 'depends'), ('depends', 'attributes'), ('attributes', 'Y.y'), ('Y.y', 'Z.z'), ('Z.z', '.')]

>> Trigrams are: 
 [('For', 'rule', 'X\uf0e0YZ'), ('rule', 'X\uf0e0YZ', 'semantic'), ('X\uf0e0YZ', 'semantic', 'action'), ('semantic', 'action', 'given'), ('action', 'given', 'X.x=f'), ('given', 'X.x=f', '('), ('X.x=f', '(', 'Y.y'), ('(', 'Y.y', ','), ('Y.y', ',', 'Z.z'), (',', 'Z.z', ')'), ('Z.z', ')', 'synthesized'), (')', 'synthesized', 'attribute'), ('synthesized', 'attribute', 'X.x'), ('attribute', 'X.x', 'depends'), ('X.x', 'depends', 'attributes'), ('depends', 'attributes', 'Y.y'), ('attributes', 'Y.y', 'Z.z'), ('Y.y', 'Z.z', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('rule', 'NN'), ('X\uf0e0YZ', 'NNP'), ('semantic', 'JJ'), ('action', 'NN'), ('given', 'VBN'), ('X.x=f', 'NNP'), ('(', '('), ('Y.y', 'NNP'), (',', ','), ('Z.z', 'NNP'), (')', ')'), ('synthesized', 'VBD'), ('attribute', 'JJ'), ('X.x', 'NNP'), ('depends', 'VBZ'), ('attributes', 'VBZ'), ('Y.y', 'NNP'), ('Z.z', 'NNP'), ('.', '.')]

 (S
  For/IN
  (NP rule/NN XYZ/NNP)
  (NP semantic/JJ action/NN)
  given/VBN
  (NP X.x=f/NNP)
  (/(
  (NP Y.y/NNP)
  ,/,
  (NP Z.z/NNP)
  )/)
  synthesized/VBD
  (NP attribute/JJ X.x/NNP)
  depends/VBZ
  attributes/VBZ
  (NP Y.y/NNP Z.z/NNP)
  ./.) 


>> Noun Phrases are: 
 ['rule X\uf0e0YZ', 'semantic action', 'X.x=f', 'Y.y', 'Z.z', 'attribute X.x', 'Y.y Z.z']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('rule', 'rule'), ('X\uf0e0YZ', 'x\uf0e0yz'), ('semantic', 'semant'), ('action', 'action'), ('given', 'given'), ('X.x=f', 'x.x=f'), ('(', '('), ('Y.y', 'y.i'), (',', ','), ('Z.z', 'z.z'), (')', ')'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('X.x', 'x.x'), ('depends', 'depend'), ('attributes', 'attribut'), ('Y.y', 'y.i'), ('Z.z', 'z.z'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('rule', 'rule'), ('X\uf0e0YZ', 'x\uf0e0yz'), ('semantic', 'semant'), ('action', 'action'), ('given', 'given'), ('X.x=f', 'x.x=f'), ('(', '('), ('Y.y', 'y.i'), (',', ','), ('Z.z', 'z.z'), (')', ')'), ('synthesized', 'synthes'), ('attribute', 'attribut'), ('X.x', 'x.x'), ('depends', 'depend'), ('attributes', 'attribut'), ('Y.y', 'y.i'), ('Z.z', 'z.z'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('rule', 'rule'), ('X\uf0e0YZ', 'X\uf0e0YZ'), ('semantic', 'semantic'), ('action', 'action'), ('given', 'given'), ('X.x=f', 'X.x=f'), ('(', '('), ('Y.y', 'Y.y'), (',', ','), ('Z.z', 'Z.z'), (')', ')'), ('synthesized', 'synthesized'), ('attribute', 'attribute'), ('X.x', 'X.x'), ('depends', 'depends'), ('attributes', 'attribute'), ('Y.y', 'Y.y'), ('Z.z', 'Z.z'), ('.', '.')]



============================ Sentence 11 =============================

The basic idea behind dependency graphs is for a compiler to look for various kinds of dependency among statements to prevent their execution in wrong order. 


>> Tokens are: 
 ['The', 'basic', 'idea', 'behind', 'dependency', 'graphs', 'compiler', 'look', 'various', 'kinds', 'dependency', 'among', 'statements', 'prevent', 'execution', 'wrong', 'order', '.']

>> Bigrams are: 
 [('The', 'basic'), ('basic', 'idea'), ('idea', 'behind'), ('behind', 'dependency'), ('dependency', 'graphs'), ('graphs', 'compiler'), ('compiler', 'look'), ('look', 'various'), ('various', 'kinds'), ('kinds', 'dependency'), ('dependency', 'among'), ('among', 'statements'), ('statements', 'prevent'), ('prevent', 'execution'), ('execution', 'wrong'), ('wrong', 'order'), ('order', '.')]

>> Trigrams are: 
 [('The', 'basic', 'idea'), ('basic', 'idea', 'behind'), ('idea', 'behind', 'dependency'), ('behind', 'dependency', 'graphs'), ('dependency', 'graphs', 'compiler'), ('graphs', 'compiler', 'look'), ('compiler', 'look', 'various'), ('look', 'various', 'kinds'), ('various', 'kinds', 'dependency'), ('kinds', 'dependency', 'among'), ('dependency', 'among', 'statements'), ('among', 'statements', 'prevent'), ('statements', 'prevent', 'execution'), ('prevent', 'execution', 'wrong'), ('execution', 'wrong', 'order'), ('wrong', 'order', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('basic', 'JJ'), ('idea', 'NN'), ('behind', 'IN'), ('dependency', 'NN'), ('graphs', 'NNS'), ('compiler', 'VBP'), ('look', 'VBP'), ('various', 'JJ'), ('kinds', 'NNS'), ('dependency', 'NN'), ('among', 'IN'), ('statements', 'NNS'), ('prevent', 'JJ'), ('execution', 'NN'), ('wrong', 'JJ'), ('order', 'NN'), ('.', '.')]

 (S
  (NP The/DT basic/JJ idea/NN)
  behind/IN
  (NP dependency/NN graphs/NNS)
  compiler/VBP
  look/VBP
  (NP various/JJ kinds/NNS dependency/NN)
  among/IN
  (NP statements/NNS)
  (NP prevent/JJ execution/NN)
  (NP wrong/JJ order/NN)
  ./.) 


>> Noun Phrases are: 
 ['The basic idea', 'dependency graphs', 'various kinds dependency', 'statements', 'prevent execution', 'wrong order']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('idea', 'idea'), ('behind', 'behind'), ('dependency', 'depend'), ('graphs', 'graph'), ('compiler', 'compil'), ('look', 'look'), ('various', 'variou'), ('kinds', 'kind'), ('dependency', 'depend'), ('among', 'among'), ('statements', 'statement'), ('prevent', 'prevent'), ('execution', 'execut'), ('wrong', 'wrong'), ('order', 'order'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('idea', 'idea'), ('behind', 'behind'), ('dependency', 'depend'), ('graphs', 'graph'), ('compiler', 'compil'), ('look', 'look'), ('various', 'various'), ('kinds', 'kind'), ('dependency', 'depend'), ('among', 'among'), ('statements', 'statement'), ('prevent', 'prevent'), ('execution', 'execut'), ('wrong', 'wrong'), ('order', 'order'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('basic', 'basic'), ('idea', 'idea'), ('behind', 'behind'), ('dependency', 'dependency'), ('graphs', 'graph'), ('compiler', 'compiler'), ('look', 'look'), ('various', 'various'), ('kinds', 'kind'), ('dependency', 'dependency'), ('among', 'among'), ('statements', 'statement'), ('prevent', 'prevent'), ('execution', 'execution'), ('wrong', 'wrong'), ('order', 'order'), ('.', '.')]



============================ Sentence 12 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Algorithm : Dependency graph for each node n in the parse tree do 	for each attribute a of the grammar symbol at n do 		Construct a node in the dependency graph for a; for each node n in the parse tree do 	for each semantic rule b=f(c1,c2,…..,ck) 		associated with the production used at n do 	for i=1 to k do 		construct an edge from the node for Ci to the node for b;      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Example: Dependency graph Example: EE1+E2  	Production 	Semantic rules  	EE1+E2	E.val = E1.val+E2.val 		     val val val E E1 E2 +  is synthesized from  and  Parse tree Dependency graph The edges to E.val from E1.val and E2.val shows that E.val is depends on E1.val and E2.val    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Evaluation order A topological sort of a directed acyclic graph is any ordering of the nodes of the graph such that edges go from nodes earlier in the ordering to later nodes. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Algorithm', ':', 'Dependency', 'graph', 'node', 'n', 'parse', 'tree', 'attribute', 'grammar', 'symbol', 'n', 'Construct', 'node', 'dependency', 'graph', ';', 'node', 'n', 'parse', 'tree', 'semantic', 'rule', 'b=f', '(', 'c1', ',', 'c2', ',', '…', '..', ',', 'ck', ')', 'associated', 'production', 'used', 'n', 'i=1', 'k', 'construct', 'edge', 'node', 'Ci', 'node', 'b', ';', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Example', ':', 'Dependency', 'graph', 'Example', ':', 'E\uf0e0E1+E2', 'Production', 'Semantic', 'rules', 'E\uf0e0E1+E2', 'E.val', '=', 'E1.val+E2.val', 'val', 'val', 'val', 'E', 'E1', 'E2', '+', 'synthesized', 'Parse', 'tree', 'Dependency', 'graph', 'The', 'edges', 'E.val', 'E1.val', 'E2.val', 'shows', 'E.val', 'depends', 'E1.val', 'E2.val', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Evaluation', 'order', 'A', 'topological', 'sort', 'directed', 'acyclic', 'graph', 'ordering', 'nodes', 'graph', 'edges', 'go', 'nodes', 'earlier', 'ordering', 'later', 'nodes', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Algorithm'), ('Algorithm', ':'), (':', 'Dependency'), ('Dependency', 'graph'), ('graph', 'node'), ('node', 'n'), ('n', 'parse'), ('parse', 'tree'), ('tree', 'attribute'), ('attribute', 'grammar'), ('grammar', 'symbol'), ('symbol', 'n'), ('n', 'Construct'), ('Construct', 'node'), ('node', 'dependency'), ('dependency', 'graph'), ('graph', ';'), (';', 'node'), ('node', 'n'), ('n', 'parse'), ('parse', 'tree'), ('tree', 'semantic'), ('semantic', 'rule'), ('rule', 'b=f'), ('b=f', '('), ('(', 'c1'), ('c1', ','), (',', 'c2'), ('c2', ','), (',', '…'), ('…', '..'), ('..', ','), (',', 'ck'), ('ck', ')'), (')', 'associated'), ('associated', 'production'), ('production', 'used'), ('used', 'n'), ('n', 'i=1'), ('i=1', 'k'), ('k', 'construct'), ('construct', 'edge'), ('edge', 'node'), ('node', 'Ci'), ('Ci', 'node'), ('node', 'b'), ('b', ';'), (';', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Dependency'), ('Dependency', 'graph'), ('graph', 'Example'), ('Example', ':'), (':', 'E\uf0e0E1+E2'), ('E\uf0e0E1+E2', 'Production'), ('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'E\uf0e0E1+E2'), ('E\uf0e0E1+E2', 'E.val'), ('E.val', '='), ('=', 'E1.val+E2.val'), ('E1.val+E2.val', 'val'), ('val', 'val'), ('val', 'val'), ('val', 'E'), ('E', 'E1'), ('E1', 'E2'), ('E2', '+'), ('+', 'synthesized'), ('synthesized', 'Parse'), ('Parse', 'tree'), ('tree', 'Dependency'), ('Dependency', 'graph'), ('graph', 'The'), ('The', 'edges'), ('edges', 'E.val'), ('E.val', 'E1.val'), ('E1.val', 'E2.val'), ('E2.val', 'shows'), ('shows', 'E.val'), ('E.val', 'depends'), ('depends', 'E1.val'), ('E1.val', 'E2.val'), ('E2.val', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Evaluation'), ('Evaluation', 'order'), ('order', 'A'), ('A', 'topological'), ('topological', 'sort'), ('sort', 'directed'), ('directed', 'acyclic'), ('acyclic', 'graph'), ('graph', 'ordering'), ('ordering', 'nodes'), ('nodes', 'graph'), ('graph', 'edges'), ('edges', 'go'), ('go', 'nodes'), ('nodes', 'earlier'), ('earlier', 'ordering'), ('ordering', 'later'), ('later', 'nodes'), ('nodes', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Algorithm'), ('›', 'Algorithm', ':'), ('Algorithm', ':', 'Dependency'), (':', 'Dependency', 'graph'), ('Dependency', 'graph', 'node'), ('graph', 'node', 'n'), ('node', 'n', 'parse'), ('n', 'parse', 'tree'), ('parse', 'tree', 'attribute'), ('tree', 'attribute', 'grammar'), ('attribute', 'grammar', 'symbol'), ('grammar', 'symbol', 'n'), ('symbol', 'n', 'Construct'), ('n', 'Construct', 'node'), ('Construct', 'node', 'dependency'), ('node', 'dependency', 'graph'), ('dependency', 'graph', ';'), ('graph', ';', 'node'), (';', 'node', 'n'), ('node', 'n', 'parse'), ('n', 'parse', 'tree'), ('parse', 'tree', 'semantic'), ('tree', 'semantic', 'rule'), ('semantic', 'rule', 'b=f'), ('rule', 'b=f', '('), ('b=f', '(', 'c1'), ('(', 'c1', ','), ('c1', ',', 'c2'), (',', 'c2', ','), ('c2', ',', '…'), (',', '…', '..'), ('…', '..', ','), ('..', ',', 'ck'), (',', 'ck', ')'), ('ck', ')', 'associated'), (')', 'associated', 'production'), ('associated', 'production', 'used'), ('production', 'used', 'n'), ('used', 'n', 'i=1'), ('n', 'i=1', 'k'), ('i=1', 'k', 'construct'), ('k', 'construct', 'edge'), ('construct', 'edge', 'node'), ('edge', 'node', 'Ci'), ('node', 'Ci', 'node'), ('Ci', 'node', 'b'), ('node', 'b', ';'), ('b', ';', 'Prof.'), (';', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Dependency'), (':', 'Dependency', 'graph'), ('Dependency', 'graph', 'Example'), ('graph', 'Example', ':'), ('Example', ':', 'E\uf0e0E1+E2'), (':', 'E\uf0e0E1+E2', 'Production'), ('E\uf0e0E1+E2', 'Production', 'Semantic'), ('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'E\uf0e0E1+E2'), ('rules', 'E\uf0e0E1+E2', 'E.val'), ('E\uf0e0E1+E2', 'E.val', '='), ('E.val', '=', 'E1.val+E2.val'), ('=', 'E1.val+E2.val', 'val'), ('E1.val+E2.val', 'val', 'val'), ('val', 'val', 'val'), ('val', 'val', 'E'), ('val', 'E', 'E1'), ('E', 'E1', 'E2'), ('E1', 'E2', '+'), ('E2', '+', 'synthesized'), ('+', 'synthesized', 'Parse'), ('synthesized', 'Parse', 'tree'), ('Parse', 'tree', 'Dependency'), ('tree', 'Dependency', 'graph'), ('Dependency', 'graph', 'The'), ('graph', 'The', 'edges'), ('The', 'edges', 'E.val'), ('edges', 'E.val', 'E1.val'), ('E.val', 'E1.val', 'E2.val'), ('E1.val', 'E2.val', 'shows'), ('E2.val', 'shows', 'E.val'), ('shows', 'E.val', 'depends'), ('E.val', 'depends', 'E1.val'), ('depends', 'E1.val', 'E2.val'), ('E1.val', 'E2.val', 'Prof.'), ('E2.val', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Evaluation'), ('›', 'Evaluation', 'order'), ('Evaluation', 'order', 'A'), ('order', 'A', 'topological'), ('A', 'topological', 'sort'), ('topological', 'sort', 'directed'), ('sort', 'directed', 'acyclic'), ('directed', 'acyclic', 'graph'), ('acyclic', 'graph', 'ordering'), ('graph', 'ordering', 'nodes'), ('ordering', 'nodes', 'graph'), ('nodes', 'graph', 'edges'), ('graph', 'edges', 'go'), ('edges', 'go', 'nodes'), ('go', 'nodes', 'earlier'), ('nodes', 'earlier', 'ordering'), ('earlier', 'ordering', 'later'), ('ordering', 'later', 'nodes'), ('later', 'nodes', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Algorithm', 'NNP'), (':', ':'), ('Dependency', 'NNP'), ('graph', 'NN'), ('node', 'NN'), ('n', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('attribute', 'NN'), ('grammar', 'NN'), ('symbol', 'NN'), ('n', 'JJ'), ('Construct', 'NNP'), ('node', 'NN'), ('dependency', 'NN'), ('graph', 'NN'), (';', ':'), ('node', 'CC'), ('n', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('semantic', 'JJ'), ('rule', 'NN'), ('b=f', 'NN'), ('(', '('), ('c1', 'NN'), (',', ','), ('c2', 'NN'), (',', ','), ('…', 'NNP'), ('..', 'NNP'), (',', ','), ('ck', 'NN'), (')', ')'), ('associated', 'VBN'), ('production', 'NN'), ('used', 'VBN'), ('n', 'JJ'), ('i=1', 'JJ'), ('k', 'NN'), ('construct', 'NN'), ('edge', 'NN'), ('node', 'NN'), ('Ci', 'NNP'), ('node', 'NN'), ('b', 'NN'), (';', ':'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Dependency', 'NNP'), ('graph', 'VBZ'), ('Example', 'NNP'), (':', ':'), ('E\uf0e0E1+E2', 'NNP'), ('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('E\uf0e0E1+E2', 'NNP'), ('E.val', 'NNP'), ('=', 'NNP'), ('E1.val+E2.val', 'NNP'), ('val', 'NN'), ('val', 'NN'), ('val', 'NN'), ('E', 'NNP'), ('E1', 'NNP'), ('E2', 'NNP'), ('+', 'NNP'), ('synthesized', 'VBD'), ('Parse', 'NNP'), ('tree', 'NN'), ('Dependency', 'NNP'), ('graph', 'VBD'), ('The', 'DT'), ('edges', 'NNS'), ('E.val', 'NNP'), ('E1.val', 'NNP'), ('E2.val', 'NNP'), ('shows', 'VBZ'), ('E.val', 'NNP'), ('depends', 'VBZ'), ('E1.val', 'NNP'), ('E2.val', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Evaluation', 'NNP'), ('order', 'NN'), ('A', 'NNP'), ('topological', 'JJ'), ('sort', 'NN'), ('directed', 'VBD'), ('acyclic', 'JJ'), ('graph', 'NN'), ('ordering', 'VBG'), ('nodes', 'NNS'), ('graph', 'NN'), ('edges', 'NNS'), ('go', 'VBP'), ('nodes', 'RB'), ('earlier', 'RB'), ('ordering', 'VBG'), ('later', 'RBR'), ('nodes', 'NNS'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Algorithm/NNP)
  :/:
  (NP Dependency/NNP graph/NN node/NN)
  (NP n/JJ parse/NN tree/NN attribute/NN grammar/NN symbol/NN)
  (NP n/JJ Construct/NNP node/NN dependency/NN graph/NN)
  ;/:
  node/CC
  (NP n/JJ parse/NN tree/NN)
  (NP semantic/JJ rule/NN b=f/NN)
  (/(
  (NP c1/NN)
  ,/,
  (NP c2/NN)
  ,/,
  (NP …/NNP ../NNP)
  ,/,
  (NP ck/NN)
  )/)
  associated/VBN
  (NP production/NN)
  used/VBN
  (NP
    n/JJ
    i=1/JJ
    k/NN
    construct/NN
    edge/NN
    node/NN
    Ci/NNP
    node/NN
    b/NN)
  ;/:
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Dependency/NNP)
  graph/VBZ
  (NP Example/NNP)
  :/:
  (NP
    EE1+E2/NNP
    Production/NNP
    Semantic/NNP
    rules/NNS
    EE1+E2/NNP
    E.val/NNP
    =/NNP
    E1.val+E2.val/NNP
    val/NN
    val/NN
    val/NN
    E/NNP
    E1/NNP
    E2/NNP
    +/NNP)
  synthesized/VBD
  (NP Parse/NNP tree/NN Dependency/NNP)
  graph/VBD
  (NP The/DT edges/NNS E.val/NNP E1.val/NNP E2.val/NNP)
  shows/VBZ
  (NP E.val/NNP)
  depends/VBZ
  (NP E1.val/NNP E2.val/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Evaluation/NNP order/NN A/NNP)
  (NP topological/JJ sort/NN)
  directed/VBD
  (NP acyclic/JJ graph/NN)
  ordering/VBG
  (NP nodes/NNS graph/NN edges/NNS)
  go/VBP
  nodes/RB
  earlier/RB
  ordering/VBG
  later/RBR
  (NP nodes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Algorithm', 'Dependency graph node', 'n parse tree attribute grammar symbol', 'n Construct node dependency graph', 'n parse tree', 'semantic rule b=f', 'c1', 'c2', '… ..', 'ck', 'production', 'n i=1 k construct edge node Ci node b', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Example', 'Dependency', 'Example', 'E\uf0e0E1+E2 Production Semantic rules E\uf0e0E1+E2 E.val = E1.val+E2.val val val val E E1 E2 +', 'Parse tree Dependency', 'The edges E.val E1.val E2.val', 'E.val', 'E1.val E2.val Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Evaluation order A', 'topological sort', 'acyclic graph', 'nodes graph edges', 'nodes']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Example'), ('PERSON', 'Parse'), ('PERSON', 'Dependency'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Algorithm', 'algorithm'), (':', ':'), ('Dependency', 'depend'), ('graph', 'graph'), ('node', 'node'), ('n', 'n'), ('parse', 'pars'), ('tree', 'tree'), ('attribute', 'attribut'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('n', 'n'), ('Construct', 'construct'), ('node', 'node'), ('dependency', 'depend'), ('graph', 'graph'), (';', ';'), ('node', 'node'), ('n', 'n'), ('parse', 'pars'), ('tree', 'tree'), ('semantic', 'semant'), ('rule', 'rule'), ('b=f', 'b=f'), ('(', '('), ('c1', 'c1'), (',', ','), ('c2', 'c2'), (',', ','), ('…', '…'), ('..', '..'), (',', ','), ('ck', 'ck'), (')', ')'), ('associated', 'associ'), ('production', 'product'), ('used', 'use'), ('n', 'n'), ('i=1', 'i=1'), ('k', 'k'), ('construct', 'construct'), ('edge', 'edg'), ('node', 'node'), ('Ci', 'ci'), ('node', 'node'), ('b', 'b'), (';', ';'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Dependency', 'depend'), ('graph', 'graph'), ('Example', 'exampl'), (':', ':'), ('E\uf0e0E1+E2', 'e\uf0e0e1+e2'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('E\uf0e0E1+E2', 'e\uf0e0e1+e2'), ('E.val', 'e.val'), ('=', '='), ('E1.val+E2.val', 'e1.val+e2.v'), ('val', 'val'), ('val', 'val'), ('val', 'val'), ('E', 'e'), ('E1', 'e1'), ('E2', 'e2'), ('+', '+'), ('synthesized', 'synthes'), ('Parse', 'pars'), ('tree', 'tree'), ('Dependency', 'depend'), ('graph', 'graph'), ('The', 'the'), ('edges', 'edg'), ('E.val', 'e.val'), ('E1.val', 'e1.val'), ('E2.val', 'e2.val'), ('shows', 'show'), ('E.val', 'e.val'), ('depends', 'depend'), ('E1.val', 'e1.val'), ('E2.val', 'e2.val'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Evaluation', 'evalu'), ('order', 'order'), ('A', 'a'), ('topological', 'topolog'), ('sort', 'sort'), ('directed', 'direct'), ('acyclic', 'acycl'), ('graph', 'graph'), ('ordering', 'order'), ('nodes', 'node'), ('graph', 'graph'), ('edges', 'edg'), ('go', 'go'), ('nodes', 'node'), ('earlier', 'earlier'), ('ordering', 'order'), ('later', 'later'), ('nodes', 'node'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Algorithm', 'algorithm'), (':', ':'), ('Dependency', 'depend'), ('graph', 'graph'), ('node', 'node'), ('n', 'n'), ('parse', 'pars'), ('tree', 'tree'), ('attribute', 'attribut'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('n', 'n'), ('Construct', 'construct'), ('node', 'node'), ('dependency', 'depend'), ('graph', 'graph'), (';', ';'), ('node', 'node'), ('n', 'n'), ('parse', 'pars'), ('tree', 'tree'), ('semantic', 'semant'), ('rule', 'rule'), ('b=f', 'b=f'), ('(', '('), ('c1', 'c1'), (',', ','), ('c2', 'c2'), (',', ','), ('…', '…'), ('..', '..'), (',', ','), ('ck', 'ck'), (')', ')'), ('associated', 'associ'), ('production', 'product'), ('used', 'use'), ('n', 'n'), ('i=1', 'i=1'), ('k', 'k'), ('construct', 'construct'), ('edge', 'edg'), ('node', 'node'), ('Ci', 'ci'), ('node', 'node'), ('b', 'b'), (';', ';'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Dependency', 'depend'), ('graph', 'graph'), ('Example', 'exampl'), (':', ':'), ('E\uf0e0E1+E2', 'e\uf0e0e1+e2'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('E\uf0e0E1+E2', 'e\uf0e0e1+e2'), ('E.val', 'e.val'), ('=', '='), ('E1.val+E2.val', 'e1.val+e2.v'), ('val', 'val'), ('val', 'val'), ('val', 'val'), ('E', 'e'), ('E1', 'e1'), ('E2', 'e2'), ('+', '+'), ('synthesized', 'synthes'), ('Parse', 'pars'), ('tree', 'tree'), ('Dependency', 'depend'), ('graph', 'graph'), ('The', 'the'), ('edges', 'edg'), ('E.val', 'e.val'), ('E1.val', 'e1.val'), ('E2.val', 'e2.val'), ('shows', 'show'), ('E.val', 'e.val'), ('depends', 'depend'), ('E1.val', 'e1.val'), ('E2.val', 'e2.val'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Evaluation', 'evalu'), ('order', 'order'), ('A', 'a'), ('topological', 'topolog'), ('sort', 'sort'), ('directed', 'direct'), ('acyclic', 'acycl'), ('graph', 'graph'), ('ordering', 'order'), ('nodes', 'node'), ('graph', 'graph'), ('edges', 'edg'), ('go', 'go'), ('nodes', 'node'), ('earlier', 'earlier'), ('ordering', 'order'), ('later', 'later'), ('nodes', 'node'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Algorithm', 'Algorithm'), (':', ':'), ('Dependency', 'Dependency'), ('graph', 'graph'), ('node', 'node'), ('n', 'n'), ('parse', 'parse'), ('tree', 'tree'), ('attribute', 'attribute'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('n', 'n'), ('Construct', 'Construct'), ('node', 'node'), ('dependency', 'dependency'), ('graph', 'graph'), (';', ';'), ('node', 'node'), ('n', 'n'), ('parse', 'parse'), ('tree', 'tree'), ('semantic', 'semantic'), ('rule', 'rule'), ('b=f', 'b=f'), ('(', '('), ('c1', 'c1'), (',', ','), ('c2', 'c2'), (',', ','), ('…', '…'), ('..', '..'), (',', ','), ('ck', 'ck'), (')', ')'), ('associated', 'associated'), ('production', 'production'), ('used', 'used'), ('n', 'n'), ('i=1', 'i=1'), ('k', 'k'), ('construct', 'construct'), ('edge', 'edge'), ('node', 'node'), ('Ci', 'Ci'), ('node', 'node'), ('b', 'b'), (';', ';'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Dependency', 'Dependency'), ('graph', 'graph'), ('Example', 'Example'), (':', ':'), ('E\uf0e0E1+E2', 'E\uf0e0E1+E2'), ('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('E\uf0e0E1+E2', 'E\uf0e0E1+E2'), ('E.val', 'E.val'), ('=', '='), ('E1.val+E2.val', 'E1.val+E2.val'), ('val', 'val'), ('val', 'val'), ('val', 'val'), ('E', 'E'), ('E1', 'E1'), ('E2', 'E2'), ('+', '+'), ('synthesized', 'synthesized'), ('Parse', 'Parse'), ('tree', 'tree'), ('Dependency', 'Dependency'), ('graph', 'graph'), ('The', 'The'), ('edges', 'edge'), ('E.val', 'E.val'), ('E1.val', 'E1.val'), ('E2.val', 'E2.val'), ('shows', 'show'), ('E.val', 'E.val'), ('depends', 'depends'), ('E1.val', 'E1.val'), ('E2.val', 'E2.val'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Evaluation', 'Evaluation'), ('order', 'order'), ('A', 'A'), ('topological', 'topological'), ('sort', 'sort'), ('directed', 'directed'), ('acyclic', 'acyclic'), ('graph', 'graph'), ('ordering', 'ordering'), ('nodes', 'node'), ('graph', 'graph'), ('edges', 'edge'), ('go', 'go'), ('nodes', 'node'), ('earlier', 'earlier'), ('ordering', 'ordering'), ('later', 'later'), ('nodes', 'node'), ('.', '.')]



============================ Sentence 13 =============================

If is an edge from  to  then   appears before  in the ordering. 


>> Tokens are: 
 ['If', 'edge', 'appears', 'ordering', '.']

>> Bigrams are: 
 [('If', 'edge'), ('edge', 'appears'), ('appears', 'ordering'), ('ordering', '.')]

>> Trigrams are: 
 [('If', 'edge', 'appears'), ('edge', 'appears', 'ordering'), ('appears', 'ordering', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('edge', 'NN'), ('appears', 'VBZ'), ('ordering', 'VBG'), ('.', '.')]

 (S If/IN (NP edge/NN) appears/VBZ ordering/VBG ./.) 


>> Noun Phrases are: 
 ['edge']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('edge', 'edg'), ('appears', 'appear'), ('ordering', 'order'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('edge', 'edg'), ('appears', 'appear'), ('ordering', 'order'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('edge', 'edge'), ('appears', 'appears'), ('ordering', 'ordering'), ('.', '.')]



============================ Sentence 14 =============================

D  T.type=real  real  L.in=real ,  L.in=real L.in=real id3 id2 id1 ,  1 2 3 4 5 6 7    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Construction of syntax tree        Construction of syntax tree Following functions are used to create the nodes of the syntax tree. 


>> Tokens are: 
 ['D', 'T.type=real', 'real', 'L.in=real', ',', 'L.in=real', 'L.in=real', 'id3', 'id2', 'id1', ',', '1', '2', '3', '4', '5', '6', '7', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Construction', 'syntax', 'tree', 'Construction', 'syntax', 'tree', 'Following', 'functions', 'used', 'create', 'nodes', 'syntax', 'tree', '.']

>> Bigrams are: 
 [('D', 'T.type=real'), ('T.type=real', 'real'), ('real', 'L.in=real'), ('L.in=real', ','), (',', 'L.in=real'), ('L.in=real', 'L.in=real'), ('L.in=real', 'id3'), ('id3', 'id2'), ('id2', 'id1'), ('id1', ','), (',', '1'), ('1', '2'), ('2', '3'), ('3', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('7', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Construction'), ('Construction', 'syntax'), ('syntax', 'tree'), ('tree', 'Construction'), ('Construction', 'syntax'), ('syntax', 'tree'), ('tree', 'Following'), ('Following', 'functions'), ('functions', 'used'), ('used', 'create'), ('create', 'nodes'), ('nodes', 'syntax'), ('syntax', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('D', 'T.type=real', 'real'), ('T.type=real', 'real', 'L.in=real'), ('real', 'L.in=real', ','), ('L.in=real', ',', 'L.in=real'), (',', 'L.in=real', 'L.in=real'), ('L.in=real', 'L.in=real', 'id3'), ('L.in=real', 'id3', 'id2'), ('id3', 'id2', 'id1'), ('id2', 'id1', ','), ('id1', ',', '1'), (',', '1', '2'), ('1', '2', '3'), ('2', '3', '4'), ('3', '4', '5'), ('4', '5', '6'), ('5', '6', '7'), ('6', '7', 'Prof.'), ('7', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Construction'), ('›', 'Construction', 'syntax'), ('Construction', 'syntax', 'tree'), ('syntax', 'tree', 'Construction'), ('tree', 'Construction', 'syntax'), ('Construction', 'syntax', 'tree'), ('syntax', 'tree', 'Following'), ('tree', 'Following', 'functions'), ('Following', 'functions', 'used'), ('functions', 'used', 'create'), ('used', 'create', 'nodes'), ('create', 'nodes', 'syntax'), ('nodes', 'syntax', 'tree'), ('syntax', 'tree', '.')]

>> POS Tags are: 
 [('D', 'NNP'), ('T.type=real', 'NNP'), ('real', 'JJ'), ('L.in=real', 'NNP'), (',', ','), ('L.in=real', 'NNP'), ('L.in=real', 'NNP'), ('id3', 'NN'), ('id2', 'NN'), ('id1', 'NN'), (',', ','), ('1', 'CD'), ('2', 'CD'), ('3', 'CD'), ('4', 'CD'), ('5', 'CD'), ('6', 'CD'), ('7', 'CD'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Construction', 'NNP'), ('syntax', 'NN'), ('tree', 'NN'), ('Construction', 'NNP'), ('syntax', 'NN'), ('tree', 'NN'), ('Following', 'VBG'), ('functions', 'NNS'), ('used', 'VBN'), ('create', 'NN'), ('nodes', 'NNS'), ('syntax', 'VBP'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP D/NNP T.type=real/NNP)
  (NP real/JJ L.in=real/NNP)
  ,/,
  (NP L.in=real/NNP L.in=real/NNP id3/NN id2/NN id1/NN)
  ,/,
  1/CD
  2/CD
  3/CD
  4/CD
  5/CD
  6/CD
  7/CD
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP
    ›/JJ
    Construction/NNP
    syntax/NN
    tree/NN
    Construction/NNP
    syntax/NN
    tree/NN)
  Following/VBG
  (NP functions/NNS)
  used/VBN
  (NP create/NN nodes/NNS)
  syntax/VBP
  (NP tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['D T.type=real', 'real L.in=real', 'L.in=real L.in=real id3 id2 id1', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Construction syntax tree Construction syntax tree', 'functions', 'create nodes', 'tree']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('D', 'd'), ('T.type=real', 't.type=r'), ('real', 'real'), ('L.in=real', 'l.in=real'), (',', ','), ('L.in=real', 'l.in=real'), ('L.in=real', 'l.in=real'), ('id3', 'id3'), ('id2', 'id2'), ('id1', 'id1'), (',', ','), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('Following', 'follow'), ('functions', 'function'), ('used', 'use'), ('create', 'creat'), ('nodes', 'node'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('D', 'd'), ('T.type=real', 't.type=r'), ('real', 'real'), ('L.in=real', 'l.in=real'), (',', ','), ('L.in=real', 'l.in=real'), ('L.in=real', 'l.in=real'), ('id3', 'id3'), ('id2', 'id2'), ('id1', 'id1'), (',', ','), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('Following', 'follow'), ('functions', 'function'), ('used', 'use'), ('create', 'creat'), ('nodes', 'node'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('D', 'D'), ('T.type=real', 'T.type=real'), ('real', 'real'), ('L.in=real', 'L.in=real'), (',', ','), ('L.in=real', 'L.in=real'), ('L.in=real', 'L.in=real'), ('id3', 'id3'), ('id2', 'id2'), ('id1', 'id1'), (',', ','), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Construction', 'Construction'), ('syntax', 'syntax'), ('tree', 'tree'), ('Construction', 'Construction'), ('syntax', 'syntax'), ('tree', 'tree'), ('Following', 'Following'), ('functions', 'function'), ('used', 'used'), ('create', 'create'), ('nodes', 'node'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 15 =============================

Mknode (op,left,right): creates an operator node with label op and two fields containing pointers to left and right. 


>> Tokens are: 
 ['Mknode', '(', 'op', ',', 'left', ',', 'right', ')', ':', 'creates', 'operator', 'node', 'label', 'op', 'two', 'fields', 'containing', 'pointers', 'left', 'right', '.']

>> Bigrams are: 
 [('Mknode', '('), ('(', 'op'), ('op', ','), (',', 'left'), ('left', ','), (',', 'right'), ('right', ')'), (')', ':'), (':', 'creates'), ('creates', 'operator'), ('operator', 'node'), ('node', 'label'), ('label', 'op'), ('op', 'two'), ('two', 'fields'), ('fields', 'containing'), ('containing', 'pointers'), ('pointers', 'left'), ('left', 'right'), ('right', '.')]

>> Trigrams are: 
 [('Mknode', '(', 'op'), ('(', 'op', ','), ('op', ',', 'left'), (',', 'left', ','), ('left', ',', 'right'), (',', 'right', ')'), ('right', ')', ':'), (')', ':', 'creates'), (':', 'creates', 'operator'), ('creates', 'operator', 'node'), ('operator', 'node', 'label'), ('node', 'label', 'op'), ('label', 'op', 'two'), ('op', 'two', 'fields'), ('two', 'fields', 'containing'), ('fields', 'containing', 'pointers'), ('containing', 'pointers', 'left'), ('pointers', 'left', 'right'), ('left', 'right', '.')]

>> POS Tags are: 
 [('Mknode', 'NNP'), ('(', '('), ('op', 'UH'), (',', ','), ('left', 'VBD'), (',', ','), ('right', 'JJ'), (')', ')'), (':', ':'), ('creates', 'NNS'), ('operator', 'VBP'), ('node', 'JJ'), ('label', 'NN'), ('op', 'NN'), ('two', 'CD'), ('fields', 'NNS'), ('containing', 'VBG'), ('pointers', 'NNS'), ('left', 'VBD'), ('right', 'JJ'), ('.', '.')]

 (S
  (NP Mknode/NNP)
  (/(
  op/UH
  ,/,
  left/VBD
  ,/,
  right/JJ
  )/)
  :/:
  (NP creates/NNS)
  operator/VBP
  (NP node/JJ label/NN op/NN)
  two/CD
  (NP fields/NNS)
  containing/VBG
  (NP pointers/NNS)
  left/VBD
  right/JJ
  ./.) 


>> Noun Phrases are: 
 ['Mknode', 'creates', 'node label op', 'fields', 'pointers']

>> Named Entities are: 
 [('GPE', 'Mknode')] 

>> Stemming using Porter Stemmer: 
 [('Mknode', 'mknode'), ('(', '('), ('op', 'op'), (',', ','), ('left', 'left'), (',', ','), ('right', 'right'), (')', ')'), (':', ':'), ('creates', 'creat'), ('operator', 'oper'), ('node', 'node'), ('label', 'label'), ('op', 'op'), ('two', 'two'), ('fields', 'field'), ('containing', 'contain'), ('pointers', 'pointer'), ('left', 'left'), ('right', 'right'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Mknode', 'mknode'), ('(', '('), ('op', 'op'), (',', ','), ('left', 'left'), (',', ','), ('right', 'right'), (')', ')'), (':', ':'), ('creates', 'creat'), ('operator', 'oper'), ('node', 'node'), ('label', 'label'), ('op', 'op'), ('two', 'two'), ('fields', 'field'), ('containing', 'contain'), ('pointers', 'pointer'), ('left', 'left'), ('right', 'right'), ('.', '.')]

>> Lemmatization: 
 [('Mknode', 'Mknode'), ('(', '('), ('op', 'op'), (',', ','), ('left', 'left'), (',', ','), ('right', 'right'), (')', ')'), (':', ':'), ('creates', 'creates'), ('operator', 'operator'), ('node', 'node'), ('label', 'label'), ('op', 'op'), ('two', 'two'), ('fields', 'field'), ('containing', 'containing'), ('pointers', 'pointer'), ('left', 'left'), ('right', 'right'), ('.', '.')]



============================ Sentence 16 =============================

Mkleaf (id, entry): creates an identifier node with label id and a field containing entry, a pointer to the symbol table entry for the identifier. 


>> Tokens are: 
 ['Mkleaf', '(', 'id', ',', 'entry', ')', ':', 'creates', 'identifier', 'node', 'label', 'id', 'field', 'containing', 'entry', ',', 'pointer', 'symbol', 'table', 'entry', 'identifier', '.']

>> Bigrams are: 
 [('Mkleaf', '('), ('(', 'id'), ('id', ','), (',', 'entry'), ('entry', ')'), (')', ':'), (':', 'creates'), ('creates', 'identifier'), ('identifier', 'node'), ('node', 'label'), ('label', 'id'), ('id', 'field'), ('field', 'containing'), ('containing', 'entry'), ('entry', ','), (',', 'pointer'), ('pointer', 'symbol'), ('symbol', 'table'), ('table', 'entry'), ('entry', 'identifier'), ('identifier', '.')]

>> Trigrams are: 
 [('Mkleaf', '(', 'id'), ('(', 'id', ','), ('id', ',', 'entry'), (',', 'entry', ')'), ('entry', ')', ':'), (')', ':', 'creates'), (':', 'creates', 'identifier'), ('creates', 'identifier', 'node'), ('identifier', 'node', 'label'), ('node', 'label', 'id'), ('label', 'id', 'field'), ('id', 'field', 'containing'), ('field', 'containing', 'entry'), ('containing', 'entry', ','), ('entry', ',', 'pointer'), (',', 'pointer', 'symbol'), ('pointer', 'symbol', 'table'), ('symbol', 'table', 'entry'), ('table', 'entry', 'identifier'), ('entry', 'identifier', '.')]

>> POS Tags are: 
 [('Mkleaf', 'NNP'), ('(', '('), ('id', 'NN'), (',', ','), ('entry', 'NN'), (')', ')'), (':', ':'), ('creates', 'NNS'), ('identifier', 'VBP'), ('node', 'JJ'), ('label', 'NN'), ('id', 'NN'), ('field', 'NN'), ('containing', 'VBG'), ('entry', 'NN'), (',', ','), ('pointer', 'NN'), ('symbol', 'NN'), ('table', 'JJ'), ('entry', 'NN'), ('identifier', 'NN'), ('.', '.')]

 (S
  (NP Mkleaf/NNP)
  (/(
  (NP id/NN)
  ,/,
  (NP entry/NN)
  )/)
  :/:
  (NP creates/NNS)
  identifier/VBP
  (NP node/JJ label/NN id/NN field/NN)
  containing/VBG
  (NP entry/NN)
  ,/,
  (NP pointer/NN symbol/NN)
  (NP table/JJ entry/NN identifier/NN)
  ./.) 


>> Noun Phrases are: 
 ['Mkleaf', 'id', 'entry', 'creates', 'node label id field', 'entry', 'pointer symbol', 'table entry identifier']

>> Named Entities are: 
 [('GPE', 'Mkleaf')] 

>> Stemming using Porter Stemmer: 
 [('Mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entri'), (')', ')'), (':', ':'), ('creates', 'creat'), ('identifier', 'identifi'), ('node', 'node'), ('label', 'label'), ('id', 'id'), ('field', 'field'), ('containing', 'contain'), ('entry', 'entri'), (',', ','), ('pointer', 'pointer'), ('symbol', 'symbol'), ('table', 'tabl'), ('entry', 'entri'), ('identifier', 'identifi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entri'), (')', ')'), (':', ':'), ('creates', 'creat'), ('identifier', 'identifi'), ('node', 'node'), ('label', 'label'), ('id', 'id'), ('field', 'field'), ('containing', 'contain'), ('entry', 'entri'), (',', ','), ('pointer', 'pointer'), ('symbol', 'symbol'), ('table', 'tabl'), ('entry', 'entri'), ('identifier', 'identifi'), ('.', '.')]

>> Lemmatization: 
 [('Mkleaf', 'Mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entry'), (')', ')'), (':', ':'), ('creates', 'creates'), ('identifier', 'identifier'), ('node', 'node'), ('label', 'label'), ('id', 'id'), ('field', 'field'), ('containing', 'containing'), ('entry', 'entry'), (',', ','), ('pointer', 'pointer'), ('symbol', 'symbol'), ('table', 'table'), ('entry', 'entry'), ('identifier', 'identifier'), ('.', '.')]



============================ Sentence 17 =============================

Mkleaf (num, val): creates a number node with label num and a field containing val, the value of the number. 


>> Tokens are: 
 ['Mkleaf', '(', 'num', ',', 'val', ')', ':', 'creates', 'number', 'node', 'label', 'num', 'field', 'containing', 'val', ',', 'value', 'number', '.']

>> Bigrams are: 
 [('Mkleaf', '('), ('(', 'num'), ('num', ','), (',', 'val'), ('val', ')'), (')', ':'), (':', 'creates'), ('creates', 'number'), ('number', 'node'), ('node', 'label'), ('label', 'num'), ('num', 'field'), ('field', 'containing'), ('containing', 'val'), ('val', ','), (',', 'value'), ('value', 'number'), ('number', '.')]

>> Trigrams are: 
 [('Mkleaf', '(', 'num'), ('(', 'num', ','), ('num', ',', 'val'), (',', 'val', ')'), ('val', ')', ':'), (')', ':', 'creates'), (':', 'creates', 'number'), ('creates', 'number', 'node'), ('number', 'node', 'label'), ('node', 'label', 'num'), ('label', 'num', 'field'), ('num', 'field', 'containing'), ('field', 'containing', 'val'), ('containing', 'val', ','), ('val', ',', 'value'), (',', 'value', 'number'), ('value', 'number', '.')]

>> POS Tags are: 
 [('Mkleaf', 'NNP'), ('(', '('), ('num', 'NN'), (',', ','), ('val', 'NN'), (')', ')'), (':', ':'), ('creates', 'VBZ'), ('number', 'NN'), ('node', 'JJ'), ('label', 'JJ'), ('num', 'NN'), ('field', 'NN'), ('containing', 'VBG'), ('val', 'NN'), (',', ','), ('value', 'NN'), ('number', 'NN'), ('.', '.')]

 (S
  (NP Mkleaf/NNP)
  (/(
  (NP num/NN)
  ,/,
  (NP val/NN)
  )/)
  :/:
  creates/VBZ
  (NP number/NN)
  (NP node/JJ label/JJ num/NN field/NN)
  containing/VBG
  (NP val/NN)
  ,/,
  (NP value/NN number/NN)
  ./.) 


>> Noun Phrases are: 
 ['Mkleaf', 'num', 'val', 'number', 'node label num field', 'val', 'value number']

>> Named Entities are: 
 [('GPE', 'Mkleaf')] 

>> Stemming using Porter Stemmer: 
 [('Mkleaf', 'mkleaf'), ('(', '('), ('num', 'num'), (',', ','), ('val', 'val'), (')', ')'), (':', ':'), ('creates', 'creat'), ('number', 'number'), ('node', 'node'), ('label', 'label'), ('num', 'num'), ('field', 'field'), ('containing', 'contain'), ('val', 'val'), (',', ','), ('value', 'valu'), ('number', 'number'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Mkleaf', 'mkleaf'), ('(', '('), ('num', 'num'), (',', ','), ('val', 'val'), (')', ')'), (':', ':'), ('creates', 'creat'), ('number', 'number'), ('node', 'node'), ('label', 'label'), ('num', 'num'), ('field', 'field'), ('containing', 'contain'), ('val', 'val'), (',', ','), ('value', 'valu'), ('number', 'number'), ('.', '.')]

>> Lemmatization: 
 [('Mkleaf', 'Mkleaf'), ('(', '('), ('num', 'num'), (',', ','), ('val', 'val'), (')', ')'), (':', ':'), ('creates', 'creates'), ('number', 'number'), ('node', 'node'), ('label', 'label'), ('num', 'num'), ('field', 'field'), ('containing', 'containing'), ('val', 'val'), (',', ','), ('value', 'value'), ('number', 'number'), ('.', '.')]



============================ Sentence 18 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Construction of syntax tree for expressions Example: construct syntax tree for a-4+c P1: mkleaf(id, entry for a); P2: mkleaf(num, 4); P3: mknode(‘-‘,p1,p2); P4: mkleaf(id, entry for c); P5: mknode(‘+’,p3,p4);  	id	  	Num 	4  	id	  	-		  P1 P2 P3 P4 P5 	+		  Entry for a Entry for c    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Bottom up evaluation of  S-attributed definitions        Bottom up evaluation of S-attributed definitions S-attributed definition is one such class of syntax directed definition with synthesized attributes only. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Construction', 'syntax', 'tree', 'expressions', 'Example', ':', 'construct', 'syntax', 'tree', 'a-4+c', 'P1', ':', 'mkleaf', '(', 'id', ',', 'entry', ')', ';', 'P2', ':', 'mkleaf', '(', 'num', ',', '4', ')', ';', 'P3', ':', 'mknode', '(', '‘', '-', '‘', ',', 'p1', ',', 'p2', ')', ';', 'P4', ':', 'mkleaf', '(', 'id', ',', 'entry', 'c', ')', ';', 'P5', ':', 'mknode', '(', '‘', '+', '’', ',', 'p3', ',', 'p4', ')', ';', 'id', 'Num', '4', 'id', '-', 'P1', 'P2', 'P3', 'P4', 'P5', '+', 'Entry', 'Entry', 'c', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Bottom', 'evaluation', 'S-attributed', 'definitions', 'Bottom', 'evaluation', 'S-attributed', 'definitions', 'S-attributed', 'definition', 'one', 'class', 'syntax', 'directed', 'definition', 'synthesized', 'attributes', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Construction'), ('Construction', 'syntax'), ('syntax', 'tree'), ('tree', 'expressions'), ('expressions', 'Example'), ('Example', ':'), (':', 'construct'), ('construct', 'syntax'), ('syntax', 'tree'), ('tree', 'a-4+c'), ('a-4+c', 'P1'), ('P1', ':'), (':', 'mkleaf'), ('mkleaf', '('), ('(', 'id'), ('id', ','), (',', 'entry'), ('entry', ')'), (')', ';'), (';', 'P2'), ('P2', ':'), (':', 'mkleaf'), ('mkleaf', '('), ('(', 'num'), ('num', ','), (',', '4'), ('4', ')'), (')', ';'), (';', 'P3'), ('P3', ':'), (':', 'mknode'), ('mknode', '('), ('(', '‘'), ('‘', '-'), ('-', '‘'), ('‘', ','), (',', 'p1'), ('p1', ','), (',', 'p2'), ('p2', ')'), (')', ';'), (';', 'P4'), ('P4', ':'), (':', 'mkleaf'), ('mkleaf', '('), ('(', 'id'), ('id', ','), (',', 'entry'), ('entry', 'c'), ('c', ')'), (')', ';'), (';', 'P5'), ('P5', ':'), (':', 'mknode'), ('mknode', '('), ('(', '‘'), ('‘', '+'), ('+', '’'), ('’', ','), (',', 'p3'), ('p3', ','), (',', 'p4'), ('p4', ')'), (')', ';'), (';', 'id'), ('id', 'Num'), ('Num', '4'), ('4', 'id'), ('id', '-'), ('-', 'P1'), ('P1', 'P2'), ('P2', 'P3'), ('P3', 'P4'), ('P4', 'P5'), ('P5', '+'), ('+', 'Entry'), ('Entry', 'Entry'), ('Entry', 'c'), ('c', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Bottom'), ('Bottom', 'evaluation'), ('evaluation', 'S-attributed'), ('S-attributed', 'definitions'), ('definitions', 'Bottom'), ('Bottom', 'evaluation'), ('evaluation', 'S-attributed'), ('S-attributed', 'definitions'), ('definitions', 'S-attributed'), ('S-attributed', 'definition'), ('definition', 'one'), ('one', 'class'), ('class', 'syntax'), ('syntax', 'directed'), ('directed', 'definition'), ('definition', 'synthesized'), ('synthesized', 'attributes'), ('attributes', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Construction'), ('›', 'Construction', 'syntax'), ('Construction', 'syntax', 'tree'), ('syntax', 'tree', 'expressions'), ('tree', 'expressions', 'Example'), ('expressions', 'Example', ':'), ('Example', ':', 'construct'), (':', 'construct', 'syntax'), ('construct', 'syntax', 'tree'), ('syntax', 'tree', 'a-4+c'), ('tree', 'a-4+c', 'P1'), ('a-4+c', 'P1', ':'), ('P1', ':', 'mkleaf'), (':', 'mkleaf', '('), ('mkleaf', '(', 'id'), ('(', 'id', ','), ('id', ',', 'entry'), (',', 'entry', ')'), ('entry', ')', ';'), (')', ';', 'P2'), (';', 'P2', ':'), ('P2', ':', 'mkleaf'), (':', 'mkleaf', '('), ('mkleaf', '(', 'num'), ('(', 'num', ','), ('num', ',', '4'), (',', '4', ')'), ('4', ')', ';'), (')', ';', 'P3'), (';', 'P3', ':'), ('P3', ':', 'mknode'), (':', 'mknode', '('), ('mknode', '(', '‘'), ('(', '‘', '-'), ('‘', '-', '‘'), ('-', '‘', ','), ('‘', ',', 'p1'), (',', 'p1', ','), ('p1', ',', 'p2'), (',', 'p2', ')'), ('p2', ')', ';'), (')', ';', 'P4'), (';', 'P4', ':'), ('P4', ':', 'mkleaf'), (':', 'mkleaf', '('), ('mkleaf', '(', 'id'), ('(', 'id', ','), ('id', ',', 'entry'), (',', 'entry', 'c'), ('entry', 'c', ')'), ('c', ')', ';'), (')', ';', 'P5'), (';', 'P5', ':'), ('P5', ':', 'mknode'), (':', 'mknode', '('), ('mknode', '(', '‘'), ('(', '‘', '+'), ('‘', '+', '’'), ('+', '’', ','), ('’', ',', 'p3'), (',', 'p3', ','), ('p3', ',', 'p4'), (',', 'p4', ')'), ('p4', ')', ';'), (')', ';', 'id'), (';', 'id', 'Num'), ('id', 'Num', '4'), ('Num', '4', 'id'), ('4', 'id', '-'), ('id', '-', 'P1'), ('-', 'P1', 'P2'), ('P1', 'P2', 'P3'), ('P2', 'P3', 'P4'), ('P3', 'P4', 'P5'), ('P4', 'P5', '+'), ('P5', '+', 'Entry'), ('+', 'Entry', 'Entry'), ('Entry', 'Entry', 'c'), ('Entry', 'c', 'Prof.'), ('c', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Bottom'), ('›', 'Bottom', 'evaluation'), ('Bottom', 'evaluation', 'S-attributed'), ('evaluation', 'S-attributed', 'definitions'), ('S-attributed', 'definitions', 'Bottom'), ('definitions', 'Bottom', 'evaluation'), ('Bottom', 'evaluation', 'S-attributed'), ('evaluation', 'S-attributed', 'definitions'), ('S-attributed', 'definitions', 'S-attributed'), ('definitions', 'S-attributed', 'definition'), ('S-attributed', 'definition', 'one'), ('definition', 'one', 'class'), ('one', 'class', 'syntax'), ('class', 'syntax', 'directed'), ('syntax', 'directed', 'definition'), ('directed', 'definition', 'synthesized'), ('definition', 'synthesized', 'attributes'), ('synthesized', 'attributes', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Construction', 'NNP'), ('syntax', 'NN'), ('tree', 'NN'), ('expressions', 'NNS'), ('Example', 'NNP'), (':', ':'), ('construct', 'NN'), ('syntax', 'NN'), ('tree', 'JJ'), ('a-4+c', 'JJ'), ('P1', 'NN'), (':', ':'), ('mkleaf', 'NN'), ('(', '('), ('id', 'NN'), (',', ','), ('entry', 'NN'), (')', ')'), (';', ':'), ('P2', 'NNP'), (':', ':'), ('mkleaf', 'NN'), ('(', '('), ('num', 'UH'), (',', ','), ('4', 'CD'), (')', ')'), (';', ':'), ('P3', 'NNP'), (':', ':'), ('mknode', 'NN'), ('(', '('), ('‘', 'JJ'), ('-', ':'), ('‘', 'NN'), (',', ','), ('p1', 'NN'), (',', ','), ('p2', 'NN'), (')', ')'), (';', ':'), ('P4', 'NNP'), (':', ':'), ('mkleaf', 'NN'), ('(', '('), ('id', 'NN'), (',', ','), ('entry', 'NN'), ('c', 'NN'), (')', ')'), (';', ':'), ('P5', 'NNP'), (':', ':'), ('mknode', 'NN'), ('(', '('), ('‘', 'JJ'), ('+', 'NNP'), ('’', 'NNP'), (',', ','), ('p3', 'NN'), (',', ','), ('p4', 'NN'), (')', ')'), (';', ':'), ('id', 'JJ'), ('Num', 'NNP'), ('4', 'CD'), ('id', 'NN'), ('-', ':'), ('P1', 'NNP'), ('P2', 'NNP'), ('P3', 'NNP'), ('P4', 'NNP'), ('P5', 'NNP'), ('+', 'NNP'), ('Entry', 'NNP'), ('Entry', 'NNP'), ('c', 'VBD'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Bottom', 'NNP'), ('evaluation', 'NN'), ('S-attributed', 'JJ'), ('definitions', 'NNS'), ('Bottom', 'NNP'), ('evaluation', 'NN'), ('S-attributed', 'JJ'), ('definitions', 'NNS'), ('S-attributed', 'JJ'), ('definition', 'NN'), ('one', 'CD'), ('class', 'NN'), ('syntax', 'NN'), ('directed', 'VBD'), ('definition', 'NN'), ('synthesized', 'VBN'), ('attributes', 'NNS'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP
    ›/JJ
    Construction/NNP
    syntax/NN
    tree/NN
    expressions/NNS
    Example/NNP)
  :/:
  (NP construct/NN syntax/NN)
  (NP tree/JJ a-4+c/JJ P1/NN)
  :/:
  (NP mkleaf/NN)
  (/(
  (NP id/NN)
  ,/,
  (NP entry/NN)
  )/)
  ;/:
  (NP P2/NNP)
  :/:
  (NP mkleaf/NN)
  (/(
  num/UH
  ,/,
  4/CD
  )/)
  ;/:
  (NP P3/NNP)
  :/:
  (NP mknode/NN)
  (/(
  ‘/JJ
  -/:
  (NP ‘/NN)
  ,/,
  (NP p1/NN)
  ,/,
  (NP p2/NN)
  )/)
  ;/:
  (NP P4/NNP)
  :/:
  (NP mkleaf/NN)
  (/(
  (NP id/NN)
  ,/,
  (NP entry/NN c/NN)
  )/)
  ;/:
  (NP P5/NNP)
  :/:
  (NP mknode/NN)
  (/(
  (NP ‘/JJ +/NNP ’/NNP)
  ,/,
  (NP p3/NN)
  ,/,
  (NP p4/NN)
  )/)
  ;/:
  (NP id/JJ Num/NNP)
  4/CD
  (NP id/NN)
  -/:
  (NP P1/NNP P2/NNP P3/NNP P4/NNP P5/NNP +/NNP Entry/NNP Entry/NNP)
  c/VBD
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Bottom/NNP evaluation/NN)
  (NP S-attributed/JJ definitions/NNS Bottom/NNP evaluation/NN)
  (NP S-attributed/JJ definitions/NNS)
  (NP S-attributed/JJ definition/NN)
  one/CD
  (NP class/NN syntax/NN)
  directed/VBD
  (NP definition/NN)
  synthesized/VBN
  (NP attributes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Construction syntax tree expressions Example', 'construct syntax', 'tree a-4+c P1', 'mkleaf', 'id', 'entry', 'P2', 'mkleaf', 'P3', 'mknode', '‘', 'p1', 'p2', 'P4', 'mkleaf', 'id', 'entry c', 'P5', 'mknode', '‘ + ’', 'p3', 'p4', 'id Num', 'id', 'P1 P2 P3 P4 P5 + Entry Entry', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Bottom evaluation', 'S-attributed definitions Bottom evaluation', 'S-attributed definitions', 'S-attributed definition', 'class syntax', 'definition', 'attributes']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Example'), ('PERSON', 'P1 P2 P3 P4 P5'), ('PERSON', 'Entry Entry'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Bottom')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('expressions', 'express'), ('Example', 'exampl'), (':', ':'), ('construct', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('a-4+c', 'a-4+c'), ('P1', 'p1'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entri'), (')', ')'), (';', ';'), ('P2', 'p2'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('num', 'num'), (',', ','), ('4', '4'), (')', ')'), (';', ';'), ('P3', 'p3'), (':', ':'), ('mknode', 'mknode'), ('(', '('), ('‘', '‘'), ('-', '-'), ('‘', '‘'), (',', ','), ('p1', 'p1'), (',', ','), ('p2', 'p2'), (')', ')'), (';', ';'), ('P4', 'p4'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entri'), ('c', 'c'), (')', ')'), (';', ';'), ('P5', 'p5'), (':', ':'), ('mknode', 'mknode'), ('(', '('), ('‘', '‘'), ('+', '+'), ('’', '’'), (',', ','), ('p3', 'p3'), (',', ','), ('p4', 'p4'), (')', ')'), (';', ';'), ('id', 'id'), ('Num', 'num'), ('4', '4'), ('id', 'id'), ('-', '-'), ('P1', 'p1'), ('P2', 'p2'), ('P3', 'p3'), ('P4', 'p4'), ('P5', 'p5'), ('+', '+'), ('Entry', 'entri'), ('Entry', 'entri'), ('c', 'c'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('S-attributed', 's-attribut'), ('definition', 'definit'), ('one', 'one'), ('class', 'class'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('synthesized', 'synthes'), ('attributes', 'attribut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Construction', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('expressions', 'express'), ('Example', 'exampl'), (':', ':'), ('construct', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('a-4+c', 'a-4+c'), ('P1', 'p1'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entri'), (')', ')'), (';', ';'), ('P2', 'p2'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('num', 'num'), (',', ','), ('4', '4'), (')', ')'), (';', ';'), ('P3', 'p3'), (':', ':'), ('mknode', 'mknode'), ('(', '('), ('‘', '‘'), ('-', '-'), ('‘', '‘'), (',', ','), ('p1', 'p1'), (',', ','), ('p2', 'p2'), (')', ')'), (';', ';'), ('P4', 'p4'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entri'), ('c', 'c'), (')', ')'), (';', ';'), ('P5', 'p5'), (':', ':'), ('mknode', 'mknode'), ('(', '('), ('‘', '‘'), ('+', '+'), ('’', '’'), (',', ','), ('p3', 'p3'), (',', ','), ('p4', 'p4'), (')', ')'), (';', ';'), ('id', 'id'), ('Num', 'num'), ('4', '4'), ('id', 'id'), ('-', '-'), ('P1', 'p1'), ('P2', 'p2'), ('P3', 'p3'), ('P4', 'p4'), ('P5', 'p5'), ('+', '+'), ('Entry', 'entri'), ('Entry', 'entri'), ('c', 'c'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('S-attributed', 's-attribut'), ('definition', 'definit'), ('one', 'one'), ('class', 'class'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('synthesized', 'synthes'), ('attributes', 'attribut'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Construction', 'Construction'), ('syntax', 'syntax'), ('tree', 'tree'), ('expressions', 'expression'), ('Example', 'Example'), (':', ':'), ('construct', 'construct'), ('syntax', 'syntax'), ('tree', 'tree'), ('a-4+c', 'a-4+c'), ('P1', 'P1'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entry'), (')', ')'), (';', ';'), ('P2', 'P2'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('num', 'num'), (',', ','), ('4', '4'), (')', ')'), (';', ';'), ('P3', 'P3'), (':', ':'), ('mknode', 'mknode'), ('(', '('), ('‘', '‘'), ('-', '-'), ('‘', '‘'), (',', ','), ('p1', 'p1'), (',', ','), ('p2', 'p2'), (')', ')'), (';', ';'), ('P4', 'P4'), (':', ':'), ('mkleaf', 'mkleaf'), ('(', '('), ('id', 'id'), (',', ','), ('entry', 'entry'), ('c', 'c'), (')', ')'), (';', ';'), ('P5', 'P5'), (':', ':'), ('mknode', 'mknode'), ('(', '('), ('‘', '‘'), ('+', '+'), ('’', '’'), (',', ','), ('p3', 'p3'), (',', ','), ('p4', 'p4'), (')', ')'), (';', ';'), ('id', 'id'), ('Num', 'Num'), ('4', '4'), ('id', 'id'), ('-', '-'), ('P1', 'P1'), ('P2', 'P2'), ('P3', 'P3'), ('P4', 'P4'), ('P5', 'P5'), ('+', '+'), ('Entry', 'Entry'), ('Entry', 'Entry'), ('c', 'c'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bottom', 'Bottom'), ('evaluation', 'evaluation'), ('S-attributed', 'S-attributed'), ('definitions', 'definition'), ('Bottom', 'Bottom'), ('evaluation', 'evaluation'), ('S-attributed', 'S-attributed'), ('definitions', 'definition'), ('S-attributed', 'S-attributed'), ('definition', 'definition'), ('one', 'one'), ('class', 'class'), ('syntax', 'syntax'), ('directed', 'directed'), ('definition', 'definition'), ('synthesized', 'synthesized'), ('attributes', 'attribute'), ('.', '.')]



============================ Sentence 19 =============================

Synthesized attributes can be evaluated using bottom up parser only. 


>> Tokens are: 
 ['Synthesized', 'attributes', 'evaluated', 'using', 'bottom', 'parser', '.']

>> Bigrams are: 
 [('Synthesized', 'attributes'), ('attributes', 'evaluated'), ('evaluated', 'using'), ('using', 'bottom'), ('bottom', 'parser'), ('parser', '.')]

>> Trigrams are: 
 [('Synthesized', 'attributes', 'evaluated'), ('attributes', 'evaluated', 'using'), ('evaluated', 'using', 'bottom'), ('using', 'bottom', 'parser'), ('bottom', 'parser', '.')]

>> POS Tags are: 
 [('Synthesized', 'VBN'), ('attributes', 'NNS'), ('evaluated', 'VBD'), ('using', 'VBG'), ('bottom', 'JJ'), ('parser', 'NN'), ('.', '.')]

 (S
  Synthesized/VBN
  (NP attributes/NNS)
  evaluated/VBD
  using/VBG
  (NP bottom/JJ parser/NN)
  ./.) 


>> Noun Phrases are: 
 ['attributes', 'bottom parser']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Synthesized', 'synthes'), ('attributes', 'attribut'), ('evaluated', 'evalu'), ('using', 'use'), ('bottom', 'bottom'), ('parser', 'parser'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Synthesized', 'synthes'), ('attributes', 'attribut'), ('evaluated', 'evalu'), ('using', 'use'), ('bottom', 'bottom'), ('parser', 'parser'), ('.', '.')]

>> Lemmatization: 
 [('Synthesized', 'Synthesized'), ('attributes', 'attribute'), ('evaluated', 'evaluated'), ('using', 'using'), ('bottom', 'bottom'), ('parser', 'parser'), ('.', '.')]



============================ Sentence 20 =============================

Synthesized attributes on the parser stack Consider the production AXYZ and associated semantic action is A.a=f(X.x, Y.y, Z.z)  	State 	Value  		 		 		  top Before reduction 	State 	Value  		 		 		  top After reduction top-1 top-2      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Bottom up evaluation of S-attributed definitions  	Production 	Semantic rules 	L  En	Print (val[top]) 	E  E1+T	val[top]=val[top-2] + val[top] 	E  T	 	T  T1*F	val[top]=val[top-2] * val[top] 	T  F	 	F  (E)	val[top]=val[top-2] - val[top] 	F  digit	  	Input	State	Val	Production Used  	3*5n	-	-	  	*5n	3	3	  	*5n	F	3	Fdigit  	*5n	T	3	TF  	5n	T*	3	  	n	T*5	3,5	  	n	T*F	3,5	Fdigit  	n	T	15	TT1*F  	n	E	15	ET  		En	15	  		L	15	L  En                                    Implementation of a desk calculator with bottom  up parser  Move made by translator    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  L-Attributed definitions        L-Attributed definitions A syntax directed definition is L-attributed if each inherited attribute of , , on the right side of depends only on: The attributes of the symbols j-1to the left of  in the production and The inherited attribute of A. 


>> Tokens are: 
 ['Synthesized', 'attributes', 'parser', 'stack', 'Consider', 'production', 'A\uf0e0XYZ', 'associated', 'semantic', 'action', 'A.a=f', '(', 'X.x', ',', 'Y.y', ',', 'Z.z', ')', 'State', 'Value', 'top', 'Before', 'reduction', 'State', 'Value', 'top', 'After', 'reduction', 'top-1', 'top-2', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Bottom', 'evaluation', 'S-attributed', 'definitions', 'Production', 'Semantic', 'rules', 'L', '\uf0e0', 'En', 'Print', '(', 'val', '[', 'top', ']', ')', 'E', '\uf0e0', 'E1+T', 'val', '[', 'top', ']', '=val', '[', 'top-2', ']', '+', 'val', '[', 'top', ']', 'E', '\uf0e0', 'T', 'T', '\uf0e0', 'T1', '*', 'F', 'val', '[', 'top', ']', '=val', '[', 'top-2', ']', '*', 'val', '[', 'top', ']', 'T', '\uf0e0', 'F', 'F', '\uf0e0', '(', 'E', ')', 'val', '[', 'top', ']', '=val', '[', 'top-2', ']', '-', 'val', '[', 'top', ']', 'F', '\uf0e0', 'digit', 'Input', 'State', 'Val', 'Production', 'Used', '3', '*', '5n', '-', '-', '*', '5n', '3', '3', '*', '5n', 'F', '3', 'F\uf0e0digit', '*', '5n', 'T', '3', 'T\uf0e0F', '5n', 'T', '*', '3', 'n', 'T', '*', '5', '3,5', 'n', 'T', '*', 'F', '3,5', 'F\uf0e0digit', 'n', 'T', '15', 'T\uf0e0T1', '*', 'F', 'n', 'E', '15', 'E\uf0e0T', 'En', '15', 'L', '15', 'L', '\uf0e0', 'En', 'Implementation', 'desk', 'calculator', 'bottom', 'parser', 'Move', 'made', 'translator', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'L-Attributed', 'definitions', 'L-Attributed', 'definitions', 'A', 'syntax', 'directed', 'definition', 'L-attributed', 'inherited', 'attribute', ',', ',', 'right', 'side', 'depends', ':', 'The', 'attributes', 'symbols', 'j-1to', 'left', 'production', 'The', 'inherited', 'attribute', 'A', '.']

>> Bigrams are: 
 [('Synthesized', 'attributes'), ('attributes', 'parser'), ('parser', 'stack'), ('stack', 'Consider'), ('Consider', 'production'), ('production', 'A\uf0e0XYZ'), ('A\uf0e0XYZ', 'associated'), ('associated', 'semantic'), ('semantic', 'action'), ('action', 'A.a=f'), ('A.a=f', '('), ('(', 'X.x'), ('X.x', ','), (',', 'Y.y'), ('Y.y', ','), (',', 'Z.z'), ('Z.z', ')'), (')', 'State'), ('State', 'Value'), ('Value', 'top'), ('top', 'Before'), ('Before', 'reduction'), ('reduction', 'State'), ('State', 'Value'), ('Value', 'top'), ('top', 'After'), ('After', 'reduction'), ('reduction', 'top-1'), ('top-1', 'top-2'), ('top-2', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Bottom'), ('Bottom', 'evaluation'), ('evaluation', 'S-attributed'), ('S-attributed', 'definitions'), ('definitions', 'Production'), ('Production', 'Semantic'), ('Semantic', 'rules'), ('rules', 'L'), ('L', '\uf0e0'), ('\uf0e0', 'En'), ('En', 'Print'), ('Print', '('), ('(', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', ')'), (')', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'E1+T'), ('E1+T', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', '=val'), ('=val', '['), ('[', 'top-2'), ('top-2', ']'), (']', '+'), ('+', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'T1'), ('T1', '*'), ('*', 'F'), ('F', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', '=val'), ('=val', '['), ('[', 'top-2'), ('top-2', ']'), (']', '*'), ('*', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'F'), ('F', '\uf0e0'), ('\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', '=val'), ('=val', '['), ('[', 'top-2'), ('top-2', ']'), (']', '-'), ('-', 'val'), ('val', '['), ('[', 'top'), ('top', ']'), (']', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'digit'), ('digit', 'Input'), ('Input', 'State'), ('State', 'Val'), ('Val', 'Production'), ('Production', 'Used'), ('Used', '3'), ('3', '*'), ('*', '5n'), ('5n', '-'), ('-', '-'), ('-', '*'), ('*', '5n'), ('5n', '3'), ('3', '3'), ('3', '*'), ('*', '5n'), ('5n', 'F'), ('F', '3'), ('3', 'F\uf0e0digit'), ('F\uf0e0digit', '*'), ('*', '5n'), ('5n', 'T'), ('T', '3'), ('3', 'T\uf0e0F'), ('T\uf0e0F', '5n'), ('5n', 'T'), ('T', '*'), ('*', '3'), ('3', 'n'), ('n', 'T'), ('T', '*'), ('*', '5'), ('5', '3,5'), ('3,5', 'n'), ('n', 'T'), ('T', '*'), ('*', 'F'), ('F', '3,5'), ('3,5', 'F\uf0e0digit'), ('F\uf0e0digit', 'n'), ('n', 'T'), ('T', '15'), ('15', 'T\uf0e0T1'), ('T\uf0e0T1', '*'), ('*', 'F'), ('F', 'n'), ('n', 'E'), ('E', '15'), ('15', 'E\uf0e0T'), ('E\uf0e0T', 'En'), ('En', '15'), ('15', 'L'), ('L', '15'), ('15', 'L'), ('L', '\uf0e0'), ('\uf0e0', 'En'), ('En', 'Implementation'), ('Implementation', 'desk'), ('desk', 'calculator'), ('calculator', 'bottom'), ('bottom', 'parser'), ('parser', 'Move'), ('Move', 'made'), ('made', 'translator'), ('translator', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'L-Attributed'), ('L-Attributed', 'definitions'), ('definitions', 'L-Attributed'), ('L-Attributed', 'definitions'), ('definitions', 'A'), ('A', 'syntax'), ('syntax', 'directed'), ('directed', 'definition'), ('definition', 'L-attributed'), ('L-attributed', 'inherited'), ('inherited', 'attribute'), ('attribute', ','), (',', ','), (',', 'right'), ('right', 'side'), ('side', 'depends'), ('depends', ':'), (':', 'The'), ('The', 'attributes'), ('attributes', 'symbols'), ('symbols', 'j-1to'), ('j-1to', 'left'), ('left', 'production'), ('production', 'The'), ('The', 'inherited'), ('inherited', 'attribute'), ('attribute', 'A'), ('A', '.')]

>> Trigrams are: 
 [('Synthesized', 'attributes', 'parser'), ('attributes', 'parser', 'stack'), ('parser', 'stack', 'Consider'), ('stack', 'Consider', 'production'), ('Consider', 'production', 'A\uf0e0XYZ'), ('production', 'A\uf0e0XYZ', 'associated'), ('A\uf0e0XYZ', 'associated', 'semantic'), ('associated', 'semantic', 'action'), ('semantic', 'action', 'A.a=f'), ('action', 'A.a=f', '('), ('A.a=f', '(', 'X.x'), ('(', 'X.x', ','), ('X.x', ',', 'Y.y'), (',', 'Y.y', ','), ('Y.y', ',', 'Z.z'), (',', 'Z.z', ')'), ('Z.z', ')', 'State'), (')', 'State', 'Value'), ('State', 'Value', 'top'), ('Value', 'top', 'Before'), ('top', 'Before', 'reduction'), ('Before', 'reduction', 'State'), ('reduction', 'State', 'Value'), ('State', 'Value', 'top'), ('Value', 'top', 'After'), ('top', 'After', 'reduction'), ('After', 'reduction', 'top-1'), ('reduction', 'top-1', 'top-2'), ('top-1', 'top-2', 'Prof.'), ('top-2', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Bottom'), ('›', 'Bottom', 'evaluation'), ('Bottom', 'evaluation', 'S-attributed'), ('evaluation', 'S-attributed', 'definitions'), ('S-attributed', 'definitions', 'Production'), ('definitions', 'Production', 'Semantic'), ('Production', 'Semantic', 'rules'), ('Semantic', 'rules', 'L'), ('rules', 'L', '\uf0e0'), ('L', '\uf0e0', 'En'), ('\uf0e0', 'En', 'Print'), ('En', 'Print', '('), ('Print', '(', 'val'), ('(', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', ')'), (']', ')', 'E'), (')', 'E', '\uf0e0'), ('E', '\uf0e0', 'E1+T'), ('\uf0e0', 'E1+T', 'val'), ('E1+T', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', '=val'), (']', '=val', '['), ('=val', '[', 'top-2'), ('[', 'top-2', ']'), ('top-2', ']', '+'), (']', '+', 'val'), ('+', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', 'E'), (']', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'T'), ('T', 'T', '\uf0e0'), ('T', '\uf0e0', 'T1'), ('\uf0e0', 'T1', '*'), ('T1', '*', 'F'), ('*', 'F', 'val'), ('F', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', '=val'), (']', '=val', '['), ('=val', '[', 'top-2'), ('[', 'top-2', ']'), ('top-2', ']', '*'), (']', '*', 'val'), ('*', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', 'T'), (']', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'F'), ('F', 'F', '\uf0e0'), ('F', '\uf0e0', '('), ('\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'val'), (')', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', '=val'), (']', '=val', '['), ('=val', '[', 'top-2'), ('[', 'top-2', ']'), ('top-2', ']', '-'), (']', '-', 'val'), ('-', 'val', '['), ('val', '[', 'top'), ('[', 'top', ']'), ('top', ']', 'F'), (']', 'F', '\uf0e0'), ('F', '\uf0e0', 'digit'), ('\uf0e0', 'digit', 'Input'), ('digit', 'Input', 'State'), ('Input', 'State', 'Val'), ('State', 'Val', 'Production'), ('Val', 'Production', 'Used'), ('Production', 'Used', '3'), ('Used', '3', '*'), ('3', '*', '5n'), ('*', '5n', '-'), ('5n', '-', '-'), ('-', '-', '*'), ('-', '*', '5n'), ('*', '5n', '3'), ('5n', '3', '3'), ('3', '3', '*'), ('3', '*', '5n'), ('*', '5n', 'F'), ('5n', 'F', '3'), ('F', '3', 'F\uf0e0digit'), ('3', 'F\uf0e0digit', '*'), ('F\uf0e0digit', '*', '5n'), ('*', '5n', 'T'), ('5n', 'T', '3'), ('T', '3', 'T\uf0e0F'), ('3', 'T\uf0e0F', '5n'), ('T\uf0e0F', '5n', 'T'), ('5n', 'T', '*'), ('T', '*', '3'), ('*', '3', 'n'), ('3', 'n', 'T'), ('n', 'T', '*'), ('T', '*', '5'), ('*', '5', '3,5'), ('5', '3,5', 'n'), ('3,5', 'n', 'T'), ('n', 'T', '*'), ('T', '*', 'F'), ('*', 'F', '3,5'), ('F', '3,5', 'F\uf0e0digit'), ('3,5', 'F\uf0e0digit', 'n'), ('F\uf0e0digit', 'n', 'T'), ('n', 'T', '15'), ('T', '15', 'T\uf0e0T1'), ('15', 'T\uf0e0T1', '*'), ('T\uf0e0T1', '*', 'F'), ('*', 'F', 'n'), ('F', 'n', 'E'), ('n', 'E', '15'), ('E', '15', 'E\uf0e0T'), ('15', 'E\uf0e0T', 'En'), ('E\uf0e0T', 'En', '15'), ('En', '15', 'L'), ('15', 'L', '15'), ('L', '15', 'L'), ('15', 'L', '\uf0e0'), ('L', '\uf0e0', 'En'), ('\uf0e0', 'En', 'Implementation'), ('En', 'Implementation', 'desk'), ('Implementation', 'desk', 'calculator'), ('desk', 'calculator', 'bottom'), ('calculator', 'bottom', 'parser'), ('bottom', 'parser', 'Move'), ('parser', 'Move', 'made'), ('Move', 'made', 'translator'), ('made', 'translator', 'Prof.'), ('translator', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'L-Attributed'), ('›', 'L-Attributed', 'definitions'), ('L-Attributed', 'definitions', 'L-Attributed'), ('definitions', 'L-Attributed', 'definitions'), ('L-Attributed', 'definitions', 'A'), ('definitions', 'A', 'syntax'), ('A', 'syntax', 'directed'), ('syntax', 'directed', 'definition'), ('directed', 'definition', 'L-attributed'), ('definition', 'L-attributed', 'inherited'), ('L-attributed', 'inherited', 'attribute'), ('inherited', 'attribute', ','), ('attribute', ',', ','), (',', ',', 'right'), (',', 'right', 'side'), ('right', 'side', 'depends'), ('side', 'depends', ':'), ('depends', ':', 'The'), (':', 'The', 'attributes'), ('The', 'attributes', 'symbols'), ('attributes', 'symbols', 'j-1to'), ('symbols', 'j-1to', 'left'), ('j-1to', 'left', 'production'), ('left', 'production', 'The'), ('production', 'The', 'inherited'), ('The', 'inherited', 'attribute'), ('inherited', 'attribute', 'A'), ('attribute', 'A', '.')]

>> POS Tags are: 
 [('Synthesized', 'VBN'), ('attributes', 'NNS'), ('parser', 'VBP'), ('stack', 'NN'), ('Consider', 'NNP'), ('production', 'NN'), ('A\uf0e0XYZ', 'NNP'), ('associated', 'VBN'), ('semantic', 'JJ'), ('action', 'NN'), ('A.a=f', 'NNP'), ('(', '('), ('X.x', 'NNP'), (',', ','), ('Y.y', 'NNP'), (',', ','), ('Z.z', 'NNP'), (')', ')'), ('State', 'NNP'), ('Value', 'NNP'), ('top', 'NN'), ('Before', 'IN'), ('reduction', 'NN'), ('State', 'NNP'), ('Value', 'NNP'), ('top', 'NN'), ('After', 'IN'), ('reduction', 'NN'), ('top-1', 'JJ'), ('top-2', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Bottom', 'NNP'), ('evaluation', 'NN'), ('S-attributed', 'JJ'), ('definitions', 'NNS'), ('Production', 'NNP'), ('Semantic', 'NNP'), ('rules', 'NNS'), ('L', 'NNP'), ('\uf0e0', 'NNP'), ('En', 'NNP'), ('Print', 'NNP'), ('(', '('), ('val', 'JJ'), ('[', 'NNP'), ('top', 'JJ'), (']', 'NN'), (')', ')'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('E1+T', 'NNP'), ('val', 'JJ'), ('[', 'NNP'), ('top', 'NN'), (']', 'NN'), ('=val', 'JJ'), ('[', 'JJ'), ('top-2', 'JJ'), (']', 'NN'), ('+', 'NNP'), ('val', 'NN'), ('[', 'NNP'), ('top', 'JJ'), (']', 'NNP'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('T1', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('val', 'JJ'), ('[', 'NNP'), ('top', 'NN'), (']', 'NN'), ('=val', 'JJ'), ('[', 'JJ'), ('top-2', 'JJ'), (']', 'NN'), ('*', 'NNP'), ('val', 'NN'), ('[', 'NNP'), ('top', 'JJ'), (']', 'NNP'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('val', 'NN'), ('[', 'NNP'), ('top', 'JJ'), (']', 'NNP'), ('=val', 'NNP'), ('[', 'NNP'), ('top-2', 'JJ'), (']', 'NNP'), ('-', ':'), ('val', 'NN'), ('[', 'JJ'), ('top', 'JJ'), (']', 'NN'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('digit', 'NN'), ('Input', 'NNP'), ('State', 'NNP'), ('Val', 'NNP'), ('Production', 'NNP'), ('Used', 'VBD'), ('3', 'CD'), ('*', 'JJ'), ('5n', 'CD'), ('-', ':'), ('-', ':'), ('*', 'NN'), ('5n', 'CD'), ('3', 'CD'), ('3', 'CD'), ('*', 'JJ'), ('5n', 'CD'), ('F', 'NNP'), ('3', 'CD'), ('F\uf0e0digit', 'NNP'), ('*', 'VBD'), ('5n', 'CD'), ('T', 'NNP'), ('3', 'CD'), ('T\uf0e0F', 'NNP'), ('5n', 'CD'), ('T', 'NNP'), ('*', 'VBD'), ('3', 'CD'), ('n', 'JJ'), ('T', 'NNP'), ('*', 'NNP'), ('5', 'CD'), ('3,5', 'CD'), ('n', 'JJ'), ('T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('3,5', 'CD'), ('F\uf0e0digit', 'NNP'), ('n', 'JJ'), ('T', 'NNP'), ('15', 'CD'), ('T\uf0e0T1', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('n', 'VBD'), ('E', 'NNP'), ('15', 'CD'), ('E\uf0e0T', 'NNP'), ('En', 'NNP'), ('15', 'CD'), ('L', 'NNP'), ('15', 'CD'), ('L', 'NNP'), ('\uf0e0', 'NNP'), ('En', 'NNP'), ('Implementation', 'NNP'), ('desk', 'NN'), ('calculator', 'NN'), ('bottom', 'NN'), ('parser', 'NN'), ('Move', 'NNP'), ('made', 'VBD'), ('translator', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('L-Attributed', 'JJ'), ('definitions', 'NNS'), ('L-Attributed', 'JJ'), ('definitions', 'NNS'), ('A', 'DT'), ('syntax', 'NN'), ('directed', 'VBN'), ('definition', 'NN'), ('L-attributed', 'NNP'), ('inherited', 'VBD'), ('attribute', 'NN'), (',', ','), (',', ','), ('right', 'JJ'), ('side', 'NN'), ('depends', 'VBZ'), (':', ':'), ('The', 'DT'), ('attributes', 'NNS'), ('symbols', 'VBP'), ('j-1to', 'JJ'), ('left', 'JJ'), ('production', 'NN'), ('The', 'DT'), ('inherited', 'VBN'), ('attribute', 'NN'), ('A', 'DT'), ('.', '.')]

 (S
  Synthesized/VBN
  (NP attributes/NNS)
  parser/VBP
  (NP stack/NN Consider/NNP production/NN AXYZ/NNP)
  associated/VBN
  (NP semantic/JJ action/NN A.a=f/NNP)
  (/(
  (NP X.x/NNP)
  ,/,
  (NP Y.y/NNP)
  ,/,
  (NP Z.z/NNP)
  )/)
  (NP State/NNP Value/NNP top/NN)
  Before/IN
  (NP reduction/NN State/NNP Value/NNP top/NN)
  After/IN
  (NP reduction/NN)
  (NP top-1/JJ top-2/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Bottom/NNP evaluation/NN)
  (NP
    S-attributed/JJ
    definitions/NNS
    Production/NNP
    Semantic/NNP
    rules/NNS
    L/NNP
    /NNP
    En/NNP
    Print/NNP)
  (/(
  (NP val/JJ [/NNP)
  (NP top/JJ ]/NN)
  )/)
  (NP E/NNP /NNP E1+T/NNP)
  (NP val/JJ [/NNP top/NN ]/NN)
  (NP =val/JJ [/JJ top-2/JJ ]/NN +/NNP val/NN [/NNP)
  (NP top/JJ ]/NNP E/NNP /NNP T/NNP T/NNP /NNP T1/NNP */NNP F/NNP)
  (NP val/JJ [/NNP top/NN ]/NN)
  (NP =val/JJ [/JJ top-2/JJ ]/NN */NNP val/NN [/NNP)
  (NP top/JJ ]/NNP T/NNP /NNP F/NNP F/NNP /NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP val/NN [/NNP)
  (NP top/JJ ]/NNP =val/NNP [/NNP)
  (NP top-2/JJ ]/NNP)
  -/:
  (NP val/NN)
  (NP
    [/JJ
    top/JJ
    ]/NN
    F/NNP
    /NNP
    digit/NN
    Input/NNP
    State/NNP
    Val/NNP
    Production/NNP)
  Used/VBD
  3/CD
  */JJ
  5n/CD
  -/:
  -/:
  (NP */NN)
  5n/CD
  3/CD
  3/CD
  */JJ
  5n/CD
  (NP F/NNP)
  3/CD
  (NP Fdigit/NNP)
  */VBD
  5n/CD
  (NP T/NNP)
  3/CD
  (NP TF/NNP)
  5n/CD
  (NP T/NNP)
  */VBD
  3/CD
  (NP n/JJ T/NNP */NNP)
  5/CD
  3,5/CD
  (NP n/JJ T/NNP */NNP F/NNP)
  3,5/CD
  (NP Fdigit/NNP)
  (NP n/JJ T/NNP)
  15/CD
  (NP TT1/NNP */NNP F/NNP)
  n/VBD
  (NP E/NNP)
  15/CD
  (NP ET/NNP En/NNP)
  15/CD
  (NP L/NNP)
  15/CD
  (NP
    L/NNP
    /NNP
    En/NNP
    Implementation/NNP
    desk/NN
    calculator/NN
    bottom/NN
    parser/NN
    Move/NNP)
  made/VBD
  (NP translator/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ L-Attributed/JJ definitions/NNS)
  (NP L-Attributed/JJ definitions/NNS)
  (NP A/DT syntax/NN)
  directed/VBN
  (NP definition/NN L-attributed/NNP)
  inherited/VBD
  (NP attribute/NN)
  ,/,
  ,/,
  (NP right/JJ side/NN)
  depends/VBZ
  :/:
  (NP The/DT attributes/NNS)
  symbols/VBP
  (NP j-1to/JJ left/JJ production/NN)
  The/DT
  inherited/VBN
  (NP attribute/NN)
  A/DT
  ./.) 


>> Noun Phrases are: 
 ['attributes', 'stack Consider production A\uf0e0XYZ', 'semantic action A.a=f', 'X.x', 'Y.y', 'Z.z', 'State Value top', 'reduction State Value top', 'reduction', 'top-1 top-2 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Bottom evaluation', 'S-attributed definitions Production Semantic rules L \uf0e0 En Print', 'val [', 'top ]', 'E \uf0e0 E1+T', 'val [ top ]', '=val [ top-2 ] + val [', 'top ] E \uf0e0 T T \uf0e0 T1 * F', 'val [ top ]', '=val [ top-2 ] * val [', 'top ] T \uf0e0 F F \uf0e0', 'E', 'val [', 'top ] =val [', 'top-2 ]', 'val', '[ top ] F \uf0e0 digit Input State Val Production', '*', 'F', 'F\uf0e0digit', 'T', 'T\uf0e0F', 'T', 'n T *', 'n T * F', 'F\uf0e0digit', 'n T', 'T\uf0e0T1 * F', 'E', 'E\uf0e0T En', 'L', 'L \uf0e0 En Implementation desk calculator bottom parser Move', 'translator Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› L-Attributed definitions', 'L-Attributed definitions', 'A syntax', 'definition L-attributed', 'attribute', 'right side', 'The attributes', 'j-1to left production', 'attribute']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Input State Val'), ('PERSON', 'Move'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Synthesized', 'synthes'), ('attributes', 'attribut'), ('parser', 'parser'), ('stack', 'stack'), ('Consider', 'consid'), ('production', 'product'), ('A\uf0e0XYZ', 'a\uf0e0xyz'), ('associated', 'associ'), ('semantic', 'semant'), ('action', 'action'), ('A.a=f', 'a.a=f'), ('(', '('), ('X.x', 'x.x'), (',', ','), ('Y.y', 'y.i'), (',', ','), ('Z.z', 'z.z'), (')', ')'), ('State', 'state'), ('Value', 'valu'), ('top', 'top'), ('Before', 'befor'), ('reduction', 'reduct'), ('State', 'state'), ('Value', 'valu'), ('top', 'top'), ('After', 'after'), ('reduction', 'reduct'), ('top-1', 'top-1'), ('top-2', 'top-2'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Print', 'print'), ('(', '('), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E1+T', 'e1+t'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('+', '+'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('T1', 't1'), ('*', '*'), ('F', 'f'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('*', '*'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('-', '-'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('Input', 'input'), ('State', 'state'), ('Val', 'val'), ('Production', 'product'), ('Used', 'use'), ('3', '3'), ('*', '*'), ('5n', '5n'), ('-', '-'), ('-', '-'), ('*', '*'), ('5n', '5n'), ('3', '3'), ('3', '3'), ('*', '*'), ('5n', '5n'), ('F', 'f'), ('3', '3'), ('F\uf0e0digit', 'f\uf0e0digit'), ('*', '*'), ('5n', '5n'), ('T', 't'), ('3', '3'), ('T\uf0e0F', 't\uf0e0f'), ('5n', '5n'), ('T', 't'), ('*', '*'), ('3', '3'), ('n', 'n'), ('T', 't'), ('*', '*'), ('5', '5'), ('3,5', '3,5'), ('n', 'n'), ('T', 't'), ('*', '*'), ('F', 'f'), ('3,5', '3,5'), ('F\uf0e0digit', 'f\uf0e0digit'), ('n', 'n'), ('T', 't'), ('15', '15'), ('T\uf0e0T1', 't\uf0e0t1'), ('*', '*'), ('F', 'f'), ('n', 'n'), ('E', 'e'), ('15', '15'), ('E\uf0e0T', 'e\uf0e0t'), ('En', 'en'), ('15', '15'), ('L', 'l'), ('15', '15'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Implementation', 'implement'), ('desk', 'desk'), ('calculator', 'calcul'), ('bottom', 'bottom'), ('parser', 'parser'), ('Move', 'move'), ('made', 'made'), ('translator', 'translat'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('L-Attributed', 'l-attribut'), ('definitions', 'definit'), ('L-Attributed', 'l-attribut'), ('definitions', 'definit'), ('A', 'a'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('L-attributed', 'l-attribut'), ('inherited', 'inherit'), ('attribute', 'attribut'), (',', ','), (',', ','), ('right', 'right'), ('side', 'side'), ('depends', 'depend'), (':', ':'), ('The', 'the'), ('attributes', 'attribut'), ('symbols', 'symbol'), ('j-1to', 'j-1to'), ('left', 'left'), ('production', 'product'), ('The', 'the'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('A', 'a'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Synthesized', 'synthes'), ('attributes', 'attribut'), ('parser', 'parser'), ('stack', 'stack'), ('Consider', 'consid'), ('production', 'product'), ('A\uf0e0XYZ', 'a\uf0e0xyz'), ('associated', 'associ'), ('semantic', 'semant'), ('action', 'action'), ('A.a=f', 'a.a=f'), ('(', '('), ('X.x', 'x.x'), (',', ','), ('Y.y', 'y.i'), (',', ','), ('Z.z', 'z.z'), (')', ')'), ('State', 'state'), ('Value', 'valu'), ('top', 'top'), ('Before', 'befor'), ('reduction', 'reduct'), ('State', 'state'), ('Value', 'valu'), ('top', 'top'), ('After', 'after'), ('reduction', 'reduct'), ('top-1', 'top-1'), ('top-2', 'top-2'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('Production', 'product'), ('Semantic', 'semant'), ('rules', 'rule'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Print', 'print'), ('(', '('), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E1+T', 'e1+t'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('+', '+'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('T1', 't1'), ('*', '*'), ('F', 'f'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('*', '*'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('-', '-'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('Input', 'input'), ('State', 'state'), ('Val', 'val'), ('Production', 'product'), ('Used', 'use'), ('3', '3'), ('*', '*'), ('5n', '5n'), ('-', '-'), ('-', '-'), ('*', '*'), ('5n', '5n'), ('3', '3'), ('3', '3'), ('*', '*'), ('5n', '5n'), ('F', 'f'), ('3', '3'), ('F\uf0e0digit', 'f\uf0e0digit'), ('*', '*'), ('5n', '5n'), ('T', 't'), ('3', '3'), ('T\uf0e0F', 't\uf0e0f'), ('5n', '5n'), ('T', 't'), ('*', '*'), ('3', '3'), ('n', 'n'), ('T', 't'), ('*', '*'), ('5', '5'), ('3,5', '3,5'), ('n', 'n'), ('T', 't'), ('*', '*'), ('F', 'f'), ('3,5', '3,5'), ('F\uf0e0digit', 'f\uf0e0digit'), ('n', 'n'), ('T', 't'), ('15', '15'), ('T\uf0e0T1', 't\uf0e0t1'), ('*', '*'), ('F', 'f'), ('n', 'n'), ('E', 'e'), ('15', '15'), ('E\uf0e0T', 'e\uf0e0t'), ('En', 'en'), ('15', '15'), ('L', 'l'), ('15', '15'), ('L', 'l'), ('\uf0e0', '\uf0e0'), ('En', 'en'), ('Implementation', 'implement'), ('desk', 'desk'), ('calculator', 'calcul'), ('bottom', 'bottom'), ('parser', 'parser'), ('Move', 'move'), ('made', 'made'), ('translator', 'translat'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('L-Attributed', 'l-attribut'), ('definitions', 'definit'), ('L-Attributed', 'l-attribut'), ('definitions', 'definit'), ('A', 'a'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('L-attributed', 'l-attribut'), ('inherited', 'inherit'), ('attribute', 'attribut'), (',', ','), (',', ','), ('right', 'right'), ('side', 'side'), ('depends', 'depend'), (':', ':'), ('The', 'the'), ('attributes', 'attribut'), ('symbols', 'symbol'), ('j-1to', 'j-1to'), ('left', 'left'), ('production', 'product'), ('The', 'the'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('A', 'a'), ('.', '.')]

>> Lemmatization: 
 [('Synthesized', 'Synthesized'), ('attributes', 'attribute'), ('parser', 'parser'), ('stack', 'stack'), ('Consider', 'Consider'), ('production', 'production'), ('A\uf0e0XYZ', 'A\uf0e0XYZ'), ('associated', 'associated'), ('semantic', 'semantic'), ('action', 'action'), ('A.a=f', 'A.a=f'), ('(', '('), ('X.x', 'X.x'), (',', ','), ('Y.y', 'Y.y'), (',', ','), ('Z.z', 'Z.z'), (')', ')'), ('State', 'State'), ('Value', 'Value'), ('top', 'top'), ('Before', 'Before'), ('reduction', 'reduction'), ('State', 'State'), ('Value', 'Value'), ('top', 'top'), ('After', 'After'), ('reduction', 'reduction'), ('top-1', 'top-1'), ('top-2', 'top-2'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Bottom', 'Bottom'), ('evaluation', 'evaluation'), ('S-attributed', 'S-attributed'), ('definitions', 'definition'), ('Production', 'Production'), ('Semantic', 'Semantic'), ('rules', 'rule'), ('L', 'L'), ('\uf0e0', '\uf0e0'), ('En', 'En'), ('Print', 'Print'), ('(', '('), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), (')', ')'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('E1+T', 'E1+T'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('+', '+'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('T1', 'T1'), ('*', '*'), ('F', 'F'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('*', '*'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('=val', '=val'), ('[', '['), ('top-2', 'top-2'), (']', ']'), ('-', '-'), ('val', 'val'), ('[', '['), ('top', 'top'), (']', ']'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('digit', 'digit'), ('Input', 'Input'), ('State', 'State'), ('Val', 'Val'), ('Production', 'Production'), ('Used', 'Used'), ('3', '3'), ('*', '*'), ('5n', '5n'), ('-', '-'), ('-', '-'), ('*', '*'), ('5n', '5n'), ('3', '3'), ('3', '3'), ('*', '*'), ('5n', '5n'), ('F', 'F'), ('3', '3'), ('F\uf0e0digit', 'F\uf0e0digit'), ('*', '*'), ('5n', '5n'), ('T', 'T'), ('3', '3'), ('T\uf0e0F', 'T\uf0e0F'), ('5n', '5n'), ('T', 'T'), ('*', '*'), ('3', '3'), ('n', 'n'), ('T', 'T'), ('*', '*'), ('5', '5'), ('3,5', '3,5'), ('n', 'n'), ('T', 'T'), ('*', '*'), ('F', 'F'), ('3,5', '3,5'), ('F\uf0e0digit', 'F\uf0e0digit'), ('n', 'n'), ('T', 'T'), ('15', '15'), ('T\uf0e0T1', 'T\uf0e0T1'), ('*', '*'), ('F', 'F'), ('n', 'n'), ('E', 'E'), ('15', '15'), ('E\uf0e0T', 'E\uf0e0T'), ('En', 'En'), ('15', '15'), ('L', 'L'), ('15', '15'), ('L', 'L'), ('\uf0e0', '\uf0e0'), ('En', 'En'), ('Implementation', 'Implementation'), ('desk', 'desk'), ('calculator', 'calculator'), ('bottom', 'bottom'), ('parser', 'parser'), ('Move', 'Move'), ('made', 'made'), ('translator', 'translator'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('L-Attributed', 'L-Attributed'), ('definitions', 'definition'), ('L-Attributed', 'L-Attributed'), ('definitions', 'definition'), ('A', 'A'), ('syntax', 'syntax'), ('directed', 'directed'), ('definition', 'definition'), ('L-attributed', 'L-attributed'), ('inherited', 'inherited'), ('attribute', 'attribute'), (',', ','), (',', ','), ('right', 'right'), ('side', 'side'), ('depends', 'depends'), (':', ':'), ('The', 'The'), ('attributes', 'attribute'), ('symbols', 'symbol'), ('j-1to', 'j-1to'), ('left', 'left'), ('production', 'production'), ('The', 'The'), ('inherited', 'inherited'), ('attribute', 'attribute'), ('A', 'A'), ('.', '.')]



============================ Sentence 21 =============================

Example:       Above syntax directed definition is not L-attributed because the inherited attribute Q.i of the grammar symbol Q depends on the attribute R.s of the grammar symbol to its right. 


>> Tokens are: 
 ['Example', ':', 'Above', 'syntax', 'directed', 'definition', 'L-attributed', 'inherited', 'attribute', 'Q.i', 'grammar', 'symbol', 'Q', 'depends', 'attribute', 'R.s', 'grammar', 'symbol', 'right', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'Above'), ('Above', 'syntax'), ('syntax', 'directed'), ('directed', 'definition'), ('definition', 'L-attributed'), ('L-attributed', 'inherited'), ('inherited', 'attribute'), ('attribute', 'Q.i'), ('Q.i', 'grammar'), ('grammar', 'symbol'), ('symbol', 'Q'), ('Q', 'depends'), ('depends', 'attribute'), ('attribute', 'R.s'), ('R.s', 'grammar'), ('grammar', 'symbol'), ('symbol', 'right'), ('right', '.')]

>> Trigrams are: 
 [('Example', ':', 'Above'), (':', 'Above', 'syntax'), ('Above', 'syntax', 'directed'), ('syntax', 'directed', 'definition'), ('directed', 'definition', 'L-attributed'), ('definition', 'L-attributed', 'inherited'), ('L-attributed', 'inherited', 'attribute'), ('inherited', 'attribute', 'Q.i'), ('attribute', 'Q.i', 'grammar'), ('Q.i', 'grammar', 'symbol'), ('grammar', 'symbol', 'Q'), ('symbol', 'Q', 'depends'), ('Q', 'depends', 'attribute'), ('depends', 'attribute', 'R.s'), ('attribute', 'R.s', 'grammar'), ('R.s', 'grammar', 'symbol'), ('grammar', 'symbol', 'right'), ('symbol', 'right', '.')]

>> POS Tags are: 
 [('Example', 'NNS'), (':', ':'), ('Above', 'IN'), ('syntax', 'NN'), ('directed', 'VBN'), ('definition', 'NN'), ('L-attributed', 'NNP'), ('inherited', 'VBD'), ('attribute', 'JJ'), ('Q.i', 'NNP'), ('grammar', 'NN'), ('symbol', 'NN'), ('Q', 'NNP'), ('depends', 'VBZ'), ('attribute', 'JJ'), ('R.s', 'NNP'), ('grammar', 'NN'), ('symbol', 'NN'), ('right', 'NN'), ('.', '.')]

 (S
  (NP Example/NNS)
  :/:
  Above/IN
  (NP syntax/NN)
  directed/VBN
  (NP definition/NN L-attributed/NNP)
  inherited/VBD
  (NP attribute/JJ Q.i/NNP grammar/NN symbol/NN Q/NNP)
  depends/VBZ
  (NP attribute/JJ R.s/NNP grammar/NN symbol/NN right/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'syntax', 'definition L-attributed', 'attribute Q.i grammar symbol Q', 'attribute R.s grammar symbol right']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('Above', 'abov'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('L-attributed', 'l-attribut'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('Q.i', 'q.i'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('Q', 'q'), ('depends', 'depend'), ('attribute', 'attribut'), ('R.s', 'r.'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('right', 'right'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('Above', 'abov'), ('syntax', 'syntax'), ('directed', 'direct'), ('definition', 'definit'), ('L-attributed', 'l-attribut'), ('inherited', 'inherit'), ('attribute', 'attribut'), ('Q.i', 'q.i'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('Q', 'q'), ('depends', 'depend'), ('attribute', 'attribut'), ('R.s', 'r.s'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('right', 'right'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('Above', 'Above'), ('syntax', 'syntax'), ('directed', 'directed'), ('definition', 'definition'), ('L-attributed', 'L-attributed'), ('inherited', 'inherited'), ('attribute', 'attribute'), ('Q.i', 'Q.i'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('Q', 'Q'), ('depends', 'depends'), ('attribute', 'attribute'), ('R.s', 'R.s'), ('grammar', 'grammar'), ('symbol', 'symbol'), ('right', 'right'), ('.', '.')]



============================ Sentence 22 =============================

Production	Semantic Rules 	A LM	L.i:=l(A.i) M.i=m(L.s) A.s=f(M.s) 	A QR  	R.i=r(A.i) Q.i=q(R.s)  A.s=f(Q.s)  L- Attributed  Not L- Attributed  AXYZ     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Translation scheme        Bottom up evaluation of S-attributed definitions Translation scheme is a context free grammar in which attributes are associated with the grammar symbols and semantic actions enclosed between braces { } are inserted within the right sides of productions. 


>> Tokens are: 
 ['Production', 'Semantic', 'Rules', 'A\uf0e0', 'LM', 'L.i', ':', '=l', '(', 'A.i', ')', 'M.i=m', '(', 'L.s', ')', 'A.s=f', '(', 'M.s', ')', 'A\uf0e0', 'QR', 'R.i=r', '(', 'A.i', ')', 'Q.i=q', '(', 'R.s', ')', 'A.s=f', '(', 'Q.s', ')', 'L-', 'Attributed\uf061', 'Not', 'L-', 'Attributed\uf072', 'A\uf0e0XYZ', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Translation', 'scheme', 'Bottom', 'evaluation', 'S-attributed', 'definitions', 'Translation', 'scheme', 'context', 'free', 'grammar', 'attributes', 'associated', 'grammar', 'symbols', 'semantic', 'actions', 'enclosed', 'braces', '{', '}', 'inserted', 'within', 'right', 'sides', 'productions', '.']

>> Bigrams are: 
 [('Production', 'Semantic'), ('Semantic', 'Rules'), ('Rules', 'A\uf0e0'), ('A\uf0e0', 'LM'), ('LM', 'L.i'), ('L.i', ':'), (':', '=l'), ('=l', '('), ('(', 'A.i'), ('A.i', ')'), (')', 'M.i=m'), ('M.i=m', '('), ('(', 'L.s'), ('L.s', ')'), (')', 'A.s=f'), ('A.s=f', '('), ('(', 'M.s'), ('M.s', ')'), (')', 'A\uf0e0'), ('A\uf0e0', 'QR'), ('QR', 'R.i=r'), ('R.i=r', '('), ('(', 'A.i'), ('A.i', ')'), (')', 'Q.i=q'), ('Q.i=q', '('), ('(', 'R.s'), ('R.s', ')'), (')', 'A.s=f'), ('A.s=f', '('), ('(', 'Q.s'), ('Q.s', ')'), (')', 'L-'), ('L-', 'Attributed\uf061'), ('Attributed\uf061', 'Not'), ('Not', 'L-'), ('L-', 'Attributed\uf072'), ('Attributed\uf072', 'A\uf0e0XYZ'), ('A\uf0e0XYZ', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Translation'), ('Translation', 'scheme'), ('scheme', 'Bottom'), ('Bottom', 'evaluation'), ('evaluation', 'S-attributed'), ('S-attributed', 'definitions'), ('definitions', 'Translation'), ('Translation', 'scheme'), ('scheme', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', 'attributes'), ('attributes', 'associated'), ('associated', 'grammar'), ('grammar', 'symbols'), ('symbols', 'semantic'), ('semantic', 'actions'), ('actions', 'enclosed'), ('enclosed', 'braces'), ('braces', '{'), ('{', '}'), ('}', 'inserted'), ('inserted', 'within'), ('within', 'right'), ('right', 'sides'), ('sides', 'productions'), ('productions', '.')]

>> Trigrams are: 
 [('Production', 'Semantic', 'Rules'), ('Semantic', 'Rules', 'A\uf0e0'), ('Rules', 'A\uf0e0', 'LM'), ('A\uf0e0', 'LM', 'L.i'), ('LM', 'L.i', ':'), ('L.i', ':', '=l'), (':', '=l', '('), ('=l', '(', 'A.i'), ('(', 'A.i', ')'), ('A.i', ')', 'M.i=m'), (')', 'M.i=m', '('), ('M.i=m', '(', 'L.s'), ('(', 'L.s', ')'), ('L.s', ')', 'A.s=f'), (')', 'A.s=f', '('), ('A.s=f', '(', 'M.s'), ('(', 'M.s', ')'), ('M.s', ')', 'A\uf0e0'), (')', 'A\uf0e0', 'QR'), ('A\uf0e0', 'QR', 'R.i=r'), ('QR', 'R.i=r', '('), ('R.i=r', '(', 'A.i'), ('(', 'A.i', ')'), ('A.i', ')', 'Q.i=q'), (')', 'Q.i=q', '('), ('Q.i=q', '(', 'R.s'), ('(', 'R.s', ')'), ('R.s', ')', 'A.s=f'), (')', 'A.s=f', '('), ('A.s=f', '(', 'Q.s'), ('(', 'Q.s', ')'), ('Q.s', ')', 'L-'), (')', 'L-', 'Attributed\uf061'), ('L-', 'Attributed\uf061', 'Not'), ('Attributed\uf061', 'Not', 'L-'), ('Not', 'L-', 'Attributed\uf072'), ('L-', 'Attributed\uf072', 'A\uf0e0XYZ'), ('Attributed\uf072', 'A\uf0e0XYZ', 'Prof.'), ('A\uf0e0XYZ', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Translation'), ('›', 'Translation', 'scheme'), ('Translation', 'scheme', 'Bottom'), ('scheme', 'Bottom', 'evaluation'), ('Bottom', 'evaluation', 'S-attributed'), ('evaluation', 'S-attributed', 'definitions'), ('S-attributed', 'definitions', 'Translation'), ('definitions', 'Translation', 'scheme'), ('Translation', 'scheme', 'context'), ('scheme', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', 'attributes'), ('grammar', 'attributes', 'associated'), ('attributes', 'associated', 'grammar'), ('associated', 'grammar', 'symbols'), ('grammar', 'symbols', 'semantic'), ('symbols', 'semantic', 'actions'), ('semantic', 'actions', 'enclosed'), ('actions', 'enclosed', 'braces'), ('enclosed', 'braces', '{'), ('braces', '{', '}'), ('{', '}', 'inserted'), ('}', 'inserted', 'within'), ('inserted', 'within', 'right'), ('within', 'right', 'sides'), ('right', 'sides', 'productions'), ('sides', 'productions', '.')]

>> POS Tags are: 
 [('Production', 'NNP'), ('Semantic', 'NNP'), ('Rules', 'NNP'), ('A\uf0e0', 'NNP'), ('LM', 'NNP'), ('L.i', 'NNP'), (':', ':'), ('=l', 'NN'), ('(', '('), ('A.i', 'NNP'), (')', ')'), ('M.i=m', 'NNP'), ('(', '('), ('L.s', 'NNP'), (')', ')'), ('A.s=f', 'NNP'), ('(', '('), ('M.s', 'NNP'), (')', ')'), ('A\uf0e0', 'NNP'), ('QR', 'NNP'), ('R.i=r', 'NNP'), ('(', '('), ('A.i', 'NNP'), (')', ')'), ('Q.i=q', 'NNP'), ('(', '('), ('R.s', 'NNP'), (')', ')'), ('A.s=f', 'NNP'), ('(', '('), ('Q.s', 'NNP'), (')', ')'), ('L-', 'NNP'), ('Attributed\uf061', 'NNP'), ('Not', 'RB'), ('L-', 'NNP'), ('Attributed\uf072', 'NNP'), ('A\uf0e0XYZ', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Translation', 'NNP'), ('scheme', 'NN'), ('Bottom', 'NNP'), ('evaluation', 'NN'), ('S-attributed', 'JJ'), ('definitions', 'NNS'), ('Translation', 'NNP'), ('scheme', 'NN'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('attributes', 'NNS'), ('associated', 'VBD'), ('grammar', 'NN'), ('symbols', 'NNS'), ('semantic', 'JJ'), ('actions', 'NNS'), ('enclosed', 'VBD'), ('braces', 'NNS'), ('{', '('), ('}', ')'), ('inserted', 'VBN'), ('within', 'IN'), ('right', 'JJ'), ('sides', 'NNS'), ('productions', 'NNS'), ('.', '.')]

 (S
  (NP Production/NNP Semantic/NNP Rules/NNP A/NNP LM/NNP L.i/NNP)
  :/:
  (NP =l/NN)
  (/(
  (NP A.i/NNP)
  )/)
  (NP M.i=m/NNP)
  (/(
  (NP L.s/NNP)
  )/)
  (NP A.s=f/NNP)
  (/(
  (NP M.s/NNP)
  )/)
  (NP A/NNP QR/NNP R.i=r/NNP)
  (/(
  (NP A.i/NNP)
  )/)
  (NP Q.i=q/NNP)
  (/(
  (NP R.s/NNP)
  )/)
  (NP A.s=f/NNP)
  (/(
  (NP Q.s/NNP)
  )/)
  (NP L-/NNP Attributed/NNP)
  Not/RB
  (NP
    L-/NNP
    Attributed/NNP
    AXYZ/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Translation/NNP scheme/NN Bottom/NNP evaluation/NN)
  (NP
    S-attributed/JJ
    definitions/NNS
    Translation/NNP
    scheme/NN
    context/NN)
  (NP free/JJ grammar/NN attributes/NNS)
  associated/VBD
  (NP grammar/NN symbols/NNS)
  (NP semantic/JJ actions/NNS)
  enclosed/VBD
  (NP braces/NNS)
  {/(
  }/)
  inserted/VBN
  within/IN
  (NP right/JJ sides/NNS productions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Production Semantic Rules A\uf0e0 LM L.i', '=l', 'A.i', 'M.i=m', 'L.s', 'A.s=f', 'M.s', 'A\uf0e0 QR R.i=r', 'A.i', 'Q.i=q', 'R.s', 'A.s=f', 'Q.s', 'L- Attributed\uf061', 'L- Attributed\uf072 A\uf0e0XYZ Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Translation scheme Bottom evaluation', 'S-attributed definitions Translation scheme context', 'free grammar attributes', 'grammar symbols', 'semantic actions', 'braces', 'right sides productions']

>> Named Entities are: 
 [('PERSON', 'Rules A\uf0e0 LM'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Bottom')] 

>> Stemming using Porter Stemmer: 
 [('Production', 'product'), ('Semantic', 'semant'), ('Rules', 'rule'), ('A\uf0e0', 'a\uf0e0'), ('LM', 'lm'), ('L.i', 'l.i'), (':', ':'), ('=l', '=l'), ('(', '('), ('A.i', 'a.i'), (')', ')'), ('M.i=m', 'm.i=m'), ('(', '('), ('L.s', 'l.'), (')', ')'), ('A.s=f', 'a.s=f'), ('(', '('), ('M.s', 'm.'), (')', ')'), ('A\uf0e0', 'a\uf0e0'), ('QR', 'qr'), ('R.i=r', 'r.i=r'), ('(', '('), ('A.i', 'a.i'), (')', ')'), ('Q.i=q', 'q.i=q'), ('(', '('), ('R.s', 'r.'), (')', ')'), ('A.s=f', 'a.s=f'), ('(', '('), ('Q.s', 'q.'), (')', ')'), ('L-', 'l-'), ('Attributed\uf061', 'attributed\uf061'), ('Not', 'not'), ('L-', 'l-'), ('Attributed\uf072', 'attributed\uf072'), ('A\uf0e0XYZ', 'a\uf0e0xyz'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Translation', 'translat'), ('scheme', 'scheme'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('Translation', 'translat'), ('scheme', 'scheme'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('attributes', 'attribut'), ('associated', 'associ'), ('grammar', 'grammar'), ('symbols', 'symbol'), ('semantic', 'semant'), ('actions', 'action'), ('enclosed', 'enclos'), ('braces', 'brace'), ('{', '{'), ('}', '}'), ('inserted', 'insert'), ('within', 'within'), ('right', 'right'), ('sides', 'side'), ('productions', 'product'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Production', 'product'), ('Semantic', 'semant'), ('Rules', 'rule'), ('A\uf0e0', 'a\uf0e0'), ('LM', 'lm'), ('L.i', 'l.i'), (':', ':'), ('=l', '=l'), ('(', '('), ('A.i', 'a.i'), (')', ')'), ('M.i=m', 'm.i=m'), ('(', '('), ('L.s', 'l.s'), (')', ')'), ('A.s=f', 'a.s=f'), ('(', '('), ('M.s', 'm.s'), (')', ')'), ('A\uf0e0', 'a\uf0e0'), ('QR', 'qr'), ('R.i=r', 'r.i=r'), ('(', '('), ('A.i', 'a.i'), (')', ')'), ('Q.i=q', 'q.i=q'), ('(', '('), ('R.s', 'r.s'), (')', ')'), ('A.s=f', 'a.s=f'), ('(', '('), ('Q.s', 'q.s'), (')', ')'), ('L-', 'l-'), ('Attributed\uf061', 'attributed\uf061'), ('Not', 'not'), ('L-', 'l-'), ('Attributed\uf072', 'attributed\uf072'), ('A\uf0e0XYZ', 'a\uf0e0xyz'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Translation', 'translat'), ('scheme', 'scheme'), ('Bottom', 'bottom'), ('evaluation', 'evalu'), ('S-attributed', 's-attribut'), ('definitions', 'definit'), ('Translation', 'translat'), ('scheme', 'scheme'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('attributes', 'attribut'), ('associated', 'associ'), ('grammar', 'grammar'), ('symbols', 'symbol'), ('semantic', 'semant'), ('actions', 'action'), ('enclosed', 'enclos'), ('braces', 'brace'), ('{', '{'), ('}', '}'), ('inserted', 'insert'), ('within', 'within'), ('right', 'right'), ('sides', 'side'), ('productions', 'product'), ('.', '.')]

>> Lemmatization: 
 [('Production', 'Production'), ('Semantic', 'Semantic'), ('Rules', 'Rules'), ('A\uf0e0', 'A\uf0e0'), ('LM', 'LM'), ('L.i', 'L.i'), (':', ':'), ('=l', '=l'), ('(', '('), ('A.i', 'A.i'), (')', ')'), ('M.i=m', 'M.i=m'), ('(', '('), ('L.s', 'L.s'), (')', ')'), ('A.s=f', 'A.s=f'), ('(', '('), ('M.s', 'M.s'), (')', ')'), ('A\uf0e0', 'A\uf0e0'), ('QR', 'QR'), ('R.i=r', 'R.i=r'), ('(', '('), ('A.i', 'A.i'), (')', ')'), ('Q.i=q', 'Q.i=q'), ('(', '('), ('R.s', 'R.s'), (')', ')'), ('A.s=f', 'A.s=f'), ('(', '('), ('Q.s', 'Q.s'), (')', ')'), ('L-', 'L-'), ('Attributed\uf061', 'Attributed\uf061'), ('Not', 'Not'), ('L-', 'L-'), ('Attributed\uf072', 'Attributed\uf072'), ('A\uf0e0XYZ', 'A\uf0e0XYZ'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Translation', 'Translation'), ('scheme', 'scheme'), ('Bottom', 'Bottom'), ('evaluation', 'evaluation'), ('S-attributed', 'S-attributed'), ('definitions', 'definition'), ('Translation', 'Translation'), ('scheme', 'scheme'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('attributes', 'attribute'), ('associated', 'associated'), ('grammar', 'grammar'), ('symbols', 'symbol'), ('semantic', 'semantic'), ('actions', 'action'), ('enclosed', 'enclosed'), ('braces', 'brace'), ('{', '{'), ('}', '}'), ('inserted', 'inserted'), ('within', 'within'), ('right', 'right'), ('sides', 'side'), ('productions', 'production'), ('.', '.')]



============================ Sentence 23 =============================

Attributes are used to evaluate the expression along the process of parsing. 


>> Tokens are: 
 ['Attributes', 'used', 'evaluate', 'expression', 'along', 'process', 'parsing', '.']

>> Bigrams are: 
 [('Attributes', 'used'), ('used', 'evaluate'), ('evaluate', 'expression'), ('expression', 'along'), ('along', 'process'), ('process', 'parsing'), ('parsing', '.')]

>> Trigrams are: 
 [('Attributes', 'used', 'evaluate'), ('used', 'evaluate', 'expression'), ('evaluate', 'expression', 'along'), ('expression', 'along', 'process'), ('along', 'process', 'parsing'), ('process', 'parsing', '.')]

>> POS Tags are: 
 [('Attributes', 'NNS'), ('used', 'VBD'), ('evaluate', 'JJ'), ('expression', 'NN'), ('along', 'IN'), ('process', 'NN'), ('parsing', 'NN'), ('.', '.')]

 (S
  (NP Attributes/NNS)
  used/VBD
  (NP evaluate/JJ expression/NN)
  along/IN
  (NP process/NN parsing/NN)
  ./.) 


>> Noun Phrases are: 
 ['Attributes', 'evaluate expression', 'process parsing']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Attributes', 'attribut'), ('used', 'use'), ('evaluate', 'evalu'), ('expression', 'express'), ('along', 'along'), ('process', 'process'), ('parsing', 'pars'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Attributes', 'attribut'), ('used', 'use'), ('evaluate', 'evalu'), ('expression', 'express'), ('along', 'along'), ('process', 'process'), ('parsing', 'pars'), ('.', '.')]

>> Lemmatization: 
 [('Attributes', 'Attributes'), ('used', 'used'), ('evaluate', 'evaluate'), ('expression', 'expression'), ('along', 'along'), ('process', 'process'), ('parsing', 'parsing'), ('.', '.')]



============================ Sentence 24 =============================

During the process of parsing the evaluation of attribute takes place by consulting the semantic action enclosed in { }. 


>> Tokens are: 
 ['During', 'process', 'parsing', 'evaluation', 'attribute', 'takes', 'place', 'consulting', 'semantic', 'action', 'enclosed', '{', '}', '.']

>> Bigrams are: 
 [('During', 'process'), ('process', 'parsing'), ('parsing', 'evaluation'), ('evaluation', 'attribute'), ('attribute', 'takes'), ('takes', 'place'), ('place', 'consulting'), ('consulting', 'semantic'), ('semantic', 'action'), ('action', 'enclosed'), ('enclosed', '{'), ('{', '}'), ('}', '.')]

>> Trigrams are: 
 [('During', 'process', 'parsing'), ('process', 'parsing', 'evaluation'), ('parsing', 'evaluation', 'attribute'), ('evaluation', 'attribute', 'takes'), ('attribute', 'takes', 'place'), ('takes', 'place', 'consulting'), ('place', 'consulting', 'semantic'), ('consulting', 'semantic', 'action'), ('semantic', 'action', 'enclosed'), ('action', 'enclosed', '{'), ('enclosed', '{', '}'), ('{', '}', '.')]

>> POS Tags are: 
 [('During', 'IN'), ('process', 'NN'), ('parsing', 'VBG'), ('evaluation', 'NN'), ('attribute', 'NN'), ('takes', 'VBZ'), ('place', 'NN'), ('consulting', 'VBG'), ('semantic', 'JJ'), ('action', 'NN'), ('enclosed', 'VBD'), ('{', '('), ('}', ')'), ('.', '.')]

 (S
  During/IN
  (NP process/NN)
  parsing/VBG
  (NP evaluation/NN attribute/NN)
  takes/VBZ
  (NP place/NN)
  consulting/VBG
  (NP semantic/JJ action/NN)
  enclosed/VBD
  {/(
  }/)
  ./.) 


>> Noun Phrases are: 
 ['process', 'evaluation attribute', 'place', 'semantic action']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('During', 'dure'), ('process', 'process'), ('parsing', 'pars'), ('evaluation', 'evalu'), ('attribute', 'attribut'), ('takes', 'take'), ('place', 'place'), ('consulting', 'consult'), ('semantic', 'semant'), ('action', 'action'), ('enclosed', 'enclos'), ('{', '{'), ('}', '}'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('During', 'dure'), ('process', 'process'), ('parsing', 'pars'), ('evaluation', 'evalu'), ('attribute', 'attribut'), ('takes', 'take'), ('place', 'place'), ('consulting', 'consult'), ('semantic', 'semant'), ('action', 'action'), ('enclosed', 'enclos'), ('{', '{'), ('}', '}'), ('.', '.')]

>> Lemmatization: 
 [('During', 'During'), ('process', 'process'), ('parsing', 'parsing'), ('evaluation', 'evaluation'), ('attribute', 'attribute'), ('takes', 'take'), ('place', 'place'), ('consulting', 'consulting'), ('semantic', 'semantic'), ('action', 'action'), ('enclosed', 'enclosed'), ('{', '{'), ('}', '}'), ('.', '.')]



============================ Sentence 25 =============================

A translation scheme generates the output by executing the semantic actions in an ordered manner. 


>> Tokens are: 
 ['A', 'translation', 'scheme', 'generates', 'output', 'executing', 'semantic', 'actions', 'ordered', 'manner', '.']

>> Bigrams are: 
 [('A', 'translation'), ('translation', 'scheme'), ('scheme', 'generates'), ('generates', 'output'), ('output', 'executing'), ('executing', 'semantic'), ('semantic', 'actions'), ('actions', 'ordered'), ('ordered', 'manner'), ('manner', '.')]

>> Trigrams are: 
 [('A', 'translation', 'scheme'), ('translation', 'scheme', 'generates'), ('scheme', 'generates', 'output'), ('generates', 'output', 'executing'), ('output', 'executing', 'semantic'), ('executing', 'semantic', 'actions'), ('semantic', 'actions', 'ordered'), ('actions', 'ordered', 'manner'), ('ordered', 'manner', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('translation', 'NN'), ('scheme', 'NN'), ('generates', 'VBZ'), ('output', 'NN'), ('executing', 'VBG'), ('semantic', 'JJ'), ('actions', 'NNS'), ('ordered', 'VBD'), ('manner', 'NN'), ('.', '.')]

 (S
  (NP A/DT translation/NN scheme/NN)
  generates/VBZ
  (NP output/NN)
  executing/VBG
  (NP semantic/JJ actions/NNS)
  ordered/VBD
  (NP manner/NN)
  ./.) 


>> Noun Phrases are: 
 ['A translation scheme', 'output', 'semantic actions', 'manner']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('translation', 'translat'), ('scheme', 'scheme'), ('generates', 'gener'), ('output', 'output'), ('executing', 'execut'), ('semantic', 'semant'), ('actions', 'action'), ('ordered', 'order'), ('manner', 'manner'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('translation', 'translat'), ('scheme', 'scheme'), ('generates', 'generat'), ('output', 'output'), ('executing', 'execut'), ('semantic', 'semant'), ('actions', 'action'), ('ordered', 'order'), ('manner', 'manner'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('translation', 'translation'), ('scheme', 'scheme'), ('generates', 'generates'), ('output', 'output'), ('executing', 'executing'), ('semantic', 'semantic'), ('actions', 'action'), ('ordered', 'ordered'), ('manner', 'manner'), ('.', '.')]



============================ Sentence 26 =============================

This process uses the depth first traversal. 


>> Tokens are: 
 ['This', 'process', 'uses', 'depth', 'first', 'traversal', '.']

>> Bigrams are: 
 [('This', 'process'), ('process', 'uses'), ('uses', 'depth'), ('depth', 'first'), ('first', 'traversal'), ('traversal', '.')]

>> Trigrams are: 
 [('This', 'process', 'uses'), ('process', 'uses', 'depth'), ('uses', 'depth', 'first'), ('depth', 'first', 'traversal'), ('first', 'traversal', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('process', 'NN'), ('uses', 'VBZ'), ('depth', 'NN'), ('first', 'RB'), ('traversal', 'NN'), ('.', '.')]

 (S
  (NP This/DT process/NN)
  uses/VBZ
  (NP depth/NN)
  first/RB
  (NP traversal/NN)
  ./.) 


>> Noun Phrases are: 
 ['This process', 'depth', 'traversal']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('process', 'process'), ('uses', 'use'), ('depth', 'depth'), ('first', 'first'), ('traversal', 'travers'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('process', 'process'), ('uses', 'use'), ('depth', 'depth'), ('first', 'first'), ('traversal', 'travers'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('process', 'process'), ('uses', 'us'), ('depth', 'depth'), ('first', 'first'), ('traversal', 'traversal'), ('.', '.')]



============================ Sentence 27 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Example: Translation scheme (Infix to postfix notation) ETR R addop R1 | 𝜖 T num    String: 9-5+2 E   T  R -  R 𝜖 9  {Print(9)}  T  {Print(-)}  5  {Print(5)}  +  R T  {Print(+)}  2  {Print(2)}  Postfix=95-2+ Now, Perform Depth first traversal    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (II) ‹#›  Thank You                                       /docProps/thumbnail.jpeg 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Example', ':', 'Translation', 'scheme', '(', 'Infix', 'postfix', 'notation', ')', 'E\uf0e0TR', 'R\uf0e0', 'addop', 'R1', '|', '𝜖', 'T\uf0e0', 'num', 'String', ':', '9-5+2', 'E', 'T', 'R', '-', 'R', '𝜖', '9', '{', 'Print', '(', '9', ')', '}', 'T', '{', 'Print', '(', '-', ')', '}', '5', '{', 'Print', '(', '5', ')', '}', '+', 'R', 'T', '{', 'Print', '(', '+', ')', '}', '2', '{', 'Print', '(', '2', ')', '}', 'Postfix=95-2+', 'Now', ',', 'Perform', 'Depth', 'first', 'traversal', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'II', ')', '‹', '#', '›', 'Thank', 'You', '/docProps/thumbnail.jpeg']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Translation'), ('Translation', 'scheme'), ('scheme', '('), ('(', 'Infix'), ('Infix', 'postfix'), ('postfix', 'notation'), ('notation', ')'), (')', 'E\uf0e0TR'), ('E\uf0e0TR', 'R\uf0e0'), ('R\uf0e0', 'addop'), ('addop', 'R1'), ('R1', '|'), ('|', '𝜖'), ('𝜖', 'T\uf0e0'), ('T\uf0e0', 'num'), ('num', 'String'), ('String', ':'), (':', '9-5+2'), ('9-5+2', 'E'), ('E', 'T'), ('T', 'R'), ('R', '-'), ('-', 'R'), ('R', '𝜖'), ('𝜖', '9'), ('9', '{'), ('{', 'Print'), ('Print', '('), ('(', '9'), ('9', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', 'Print'), ('Print', '('), ('(', '-'), ('-', ')'), (')', '}'), ('}', '5'), ('5', '{'), ('{', 'Print'), ('Print', '('), ('(', '5'), ('5', ')'), (')', '}'), ('}', '+'), ('+', 'R'), ('R', 'T'), ('T', '{'), ('{', 'Print'), ('Print', '('), ('(', '+'), ('+', ')'), (')', '}'), ('}', '2'), ('2', '{'), ('{', 'Print'), ('Print', '('), ('(', '2'), ('2', ')'), (')', '}'), ('}', 'Postfix=95-2+'), ('Postfix=95-2+', 'Now'), ('Now', ','), (',', 'Perform'), ('Perform', 'Depth'), ('Depth', 'first'), ('first', 'traversal'), ('traversal', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'II'), ('II', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Thank'), ('Thank', 'You'), ('You', '/docProps/thumbnail.jpeg')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Translation'), (':', 'Translation', 'scheme'), ('Translation', 'scheme', '('), ('scheme', '(', 'Infix'), ('(', 'Infix', 'postfix'), ('Infix', 'postfix', 'notation'), ('postfix', 'notation', ')'), ('notation', ')', 'E\uf0e0TR'), (')', 'E\uf0e0TR', 'R\uf0e0'), ('E\uf0e0TR', 'R\uf0e0', 'addop'), ('R\uf0e0', 'addop', 'R1'), ('addop', 'R1', '|'), ('R1', '|', '𝜖'), ('|', '𝜖', 'T\uf0e0'), ('𝜖', 'T\uf0e0', 'num'), ('T\uf0e0', 'num', 'String'), ('num', 'String', ':'), ('String', ':', '9-5+2'), (':', '9-5+2', 'E'), ('9-5+2', 'E', 'T'), ('E', 'T', 'R'), ('T', 'R', '-'), ('R', '-', 'R'), ('-', 'R', '𝜖'), ('R', '𝜖', '9'), ('𝜖', '9', '{'), ('9', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '9'), ('(', '9', ')'), ('9', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '-'), ('(', '-', ')'), ('-', ')', '}'), (')', '}', '5'), ('}', '5', '{'), ('5', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '5'), ('(', '5', ')'), ('5', ')', '}'), (')', '}', '+'), ('}', '+', 'R'), ('+', 'R', 'T'), ('R', 'T', '{'), ('T', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '+'), ('(', '+', ')'), ('+', ')', '}'), (')', '}', '2'), ('}', '2', '{'), ('2', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '2'), ('(', '2', ')'), ('2', ')', '}'), (')', '}', 'Postfix=95-2+'), ('}', 'Postfix=95-2+', 'Now'), ('Postfix=95-2+', 'Now', ','), ('Now', ',', 'Perform'), (',', 'Perform', 'Depth'), ('Perform', 'Depth', 'first'), ('Depth', 'first', 'traversal'), ('first', 'traversal', 'Prof.'), ('traversal', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'II'), ('(', 'II', ')'), ('II', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Thank'), ('›', 'Thank', 'You'), ('Thank', 'You', '/docProps/thumbnail.jpeg')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Translation', 'NN'), ('scheme', 'NN'), ('(', '('), ('Infix', 'NNP'), ('postfix', 'VBZ'), ('notation', 'NN'), (')', ')'), ('E\uf0e0TR', 'NNP'), ('R\uf0e0', 'NNP'), ('addop', 'VBZ'), ('R1', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('T\uf0e0', 'NNP'), ('num', 'NN'), ('String', 'NN'), (':', ':'), ('9-5+2', 'JJ'), ('E', 'NNP'), ('T', 'NNP'), ('R', 'NNP'), ('-', ':'), ('R', 'NNP'), ('𝜖', 'VBD'), ('9', 'CD'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('9', 'CD'), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('-', ':'), (')', ')'), ('}', ')'), ('5', 'CD'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('5', 'CD'), (')', ')'), ('}', ')'), ('+', '$'), ('R', 'NNP'), ('T', 'NNP'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('+', 'NNP'), (')', ')'), ('}', ')'), ('2', 'CD'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('2', 'CD'), (')', ')'), ('}', ')'), ('Postfix=95-2+', 'NNP'), ('Now', 'RB'), (',', ','), ('Perform', 'NNP'), ('Depth', 'NNP'), ('first', 'RB'), ('traversal', 'VBZ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('II', 'NNP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Thank', 'NNP'), ('You', 'PRP'), ('/docProps/thumbnail.jpeg', 'VBP')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Translation/NN scheme/NN)
  (/(
  (NP Infix/NNP)
  postfix/VBZ
  (NP notation/NN)
  )/)
  (NP ETR/NNP R/NNP)
  addop/VBZ
  (NP R1/NNP |/NNP 𝜖/NNP T/NNP num/NN String/NN)
  :/:
  (NP 9-5+2/JJ E/NNP T/NNP R/NNP)
  -/:
  (NP R/NNP)
  𝜖/VBD
  9/CD
  {/(
  (NP Print/NNP)
  (/(
  9/CD
  )/)
  }/)
  (NP T/NNP)
  {/(
  (NP Print/NNP)
  (/(
  -/:
  )/)
  }/)
  5/CD
  {/(
  (NP Print/NNP)
  (/(
  5/CD
  )/)
  }/)
  +/$
  (NP R/NNP T/NNP)
  {/(
  (NP Print/NNP)
  (/(
  (NP +/NNP)
  )/)
  }/)
  2/CD
  {/(
  (NP Print/NNP)
  (/(
  2/CD
  )/)
  }/)
  (NP Postfix=95-2+/NNP)
  Now/RB
  ,/,
  (NP Perform/NNP Depth/NNP)
  first/RB
  traversal/VBZ
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  (NP II/NNP)
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Thank/NNP)
  You/PRP
  /docProps/thumbnail.jpeg/VBP) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Example', 'Translation scheme', 'Infix', 'notation', 'E\uf0e0TR R\uf0e0', 'R1 | 𝜖 T\uf0e0 num String', '9-5+2 E T R', 'R', 'Print', 'T', 'Print', 'Print', 'R T', 'Print', '+', 'Print', 'Postfix=95-2+', 'Perform Depth', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'II', '› Thank']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Infix'), ('PERSON', 'R1'), ('PERSON', 'R'), ('ORGANIZATION', 'R'), ('PERSON', 'Perform Depth'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Translation', 'translat'), ('scheme', 'scheme'), ('(', '('), ('Infix', 'infix'), ('postfix', 'postfix'), ('notation', 'notat'), (')', ')'), ('E\uf0e0TR', 'e\uf0e0tr'), ('R\uf0e0', 'r\uf0e0'), ('addop', 'addop'), ('R1', 'r1'), ('|', '|'), ('𝜖', '𝜖'), ('T\uf0e0', 't\uf0e0'), ('num', 'num'), ('String', 'string'), (':', ':'), ('9-5+2', '9-5+2'), ('E', 'e'), ('T', 't'), ('R', 'r'), ('-', '-'), ('R', 'r'), ('𝜖', '𝜖'), ('9', '9'), ('{', '{'), ('Print', 'print'), ('(', '('), ('9', '9'), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('Print', 'print'), ('(', '('), ('-', '-'), (')', ')'), ('}', '}'), ('5', '5'), ('{', '{'), ('Print', 'print'), ('(', '('), ('5', '5'), (')', ')'), ('}', '}'), ('+', '+'), ('R', 'r'), ('T', 't'), ('{', '{'), ('Print', 'print'), ('(', '('), ('+', '+'), (')', ')'), ('}', '}'), ('2', '2'), ('{', '{'), ('Print', 'print'), ('(', '('), ('2', '2'), (')', ')'), ('}', '}'), ('Postfix=95-2+', 'postfix=95-2+'), ('Now', 'now'), (',', ','), ('Perform', 'perform'), ('Depth', 'depth'), ('first', 'first'), ('traversal', 'travers'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Thank', 'thank'), ('You', 'you'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Translation', 'translat'), ('scheme', 'scheme'), ('(', '('), ('Infix', 'infix'), ('postfix', 'postfix'), ('notation', 'notat'), (')', ')'), ('E\uf0e0TR', 'e\uf0e0tr'), ('R\uf0e0', 'r\uf0e0'), ('addop', 'addop'), ('R1', 'r1'), ('|', '|'), ('𝜖', '𝜖'), ('T\uf0e0', 't\uf0e0'), ('num', 'num'), ('String', 'string'), (':', ':'), ('9-5+2', '9-5+2'), ('E', 'e'), ('T', 't'), ('R', 'r'), ('-', '-'), ('R', 'r'), ('𝜖', '𝜖'), ('9', '9'), ('{', '{'), ('Print', 'print'), ('(', '('), ('9', '9'), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('Print', 'print'), ('(', '('), ('-', '-'), (')', ')'), ('}', '}'), ('5', '5'), ('{', '{'), ('Print', 'print'), ('(', '('), ('5', '5'), (')', ')'), ('}', '}'), ('+', '+'), ('R', 'r'), ('T', 't'), ('{', '{'), ('Print', 'print'), ('(', '('), ('+', '+'), (')', ')'), ('}', '}'), ('2', '2'), ('{', '{'), ('Print', 'print'), ('(', '('), ('2', '2'), (')', ')'), ('}', '}'), ('Postfix=95-2+', 'postfix=95-2+'), ('Now', 'now'), (',', ','), ('Perform', 'perform'), ('Depth', 'depth'), ('first', 'first'), ('traversal', 'travers'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('II', 'ii'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Thank', 'thank'), ('You', 'you'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Translation', 'Translation'), ('scheme', 'scheme'), ('(', '('), ('Infix', 'Infix'), ('postfix', 'postfix'), ('notation', 'notation'), (')', ')'), ('E\uf0e0TR', 'E\uf0e0TR'), ('R\uf0e0', 'R\uf0e0'), ('addop', 'addop'), ('R1', 'R1'), ('|', '|'), ('𝜖', '𝜖'), ('T\uf0e0', 'T\uf0e0'), ('num', 'num'), ('String', 'String'), (':', ':'), ('9-5+2', '9-5+2'), ('E', 'E'), ('T', 'T'), ('R', 'R'), ('-', '-'), ('R', 'R'), ('𝜖', '𝜖'), ('9', '9'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('9', '9'), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('-', '-'), (')', ')'), ('}', '}'), ('5', '5'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('5', '5'), (')', ')'), ('}', '}'), ('+', '+'), ('R', 'R'), ('T', 'T'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('+', '+'), (')', ')'), ('}', '}'), ('2', '2'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('2', '2'), (')', ')'), ('}', '}'), ('Postfix=95-2+', 'Postfix=95-2+'), ('Now', 'Now'), (',', ','), ('Perform', 'Perform'), ('Depth', 'Depth'), ('first', 'first'), ('traversal', 'traversal'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('II', 'II'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Thank', 'Thank'), ('You', 'You'), ('/docProps/thumbnail.jpeg', '/docProps/thumbnail.jpeg')]

