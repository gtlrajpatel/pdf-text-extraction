				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

W5 of Computer Engineering (Why, What, When, Where, How)   Prof. Dixita B. Kagathara        2160704 Theory of Computation  Unit-3 Context Free Grammar   Dixita.kagathara@darshan.ac.in   Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Topics to be covered Chomsky hierarchy Context free grammar Recursive definition FA to regular grammar Derivation Ambiguity & unambiguous grammar Simplified forms & normal forms CFG to CNF Union, Concatenation & Kleene’s of CFG  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Chomsky Hierarchy   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Chomsky hierarchy (Classification of grammar) Restricted grammar   Regular grammar(type 3)   Context free grammar(type 2)   Context sensitive grammar (type 1) Unrestricted grammar (type 0)   Grammar     Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 0 grammar (Phrase Structure Grammar) Their productions are of the form:  where both  and  can be strings of terminal and nonterminal symbols. 


>> Tokens are: 
 ['W5', 'Computer', 'Engineering', '(', 'Why', ',', 'What', ',', 'When', ',', 'Where', ',', 'How', ')', 'Prof.', 'Dixita', 'B.', 'Kagathara', '2160704', 'Theory', 'Computation', 'Unit-3', 'Context', 'Free', 'Grammar', 'Dixita.kagathara', '@', 'darshan.ac.in', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Topics', 'covered', 'Chomsky', 'hierarchy', 'Context', 'free', 'grammar', 'Recursive', 'definition', 'FA', 'regular', 'grammar', 'Derivation', 'Ambiguity', '&', 'unambiguous', 'grammar', 'Simplified', 'forms', '&', 'normal', 'forms', 'CFG', 'CNF', 'Union', ',', 'Concatenation', '&', 'Kleene', '’', 'CFG', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Chomsky', 'Hierarchy', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Chomsky', 'hierarchy', '(', 'Classification', 'grammar', ')', 'Restricted', 'grammar', 'Regular', 'grammar', '(', 'type', '3', ')', 'Context', 'free', 'grammar', '(', 'type', '2', ')', 'Context', 'sensitive', 'grammar', '(', 'type', '1', ')', 'Unrestricted', 'grammar', '(', 'type', '0', ')', 'Grammar', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Type', '0', 'grammar', '(', 'Phrase', 'Structure', 'Grammar', ')', 'Their', 'productions', 'form', ':', 'strings', 'terminal', 'nonterminal', 'symbols', '.']

>> Bigrams are: 
 [('W5', 'Computer'), ('Computer', 'Engineering'), ('Engineering', '('), ('(', 'Why'), ('Why', ','), (',', 'What'), ('What', ','), (',', 'When'), ('When', ','), (',', 'Where'), ('Where', ','), (',', 'How'), ('How', ')'), (')', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B.'), ('B.', 'Kagathara'), ('Kagathara', '2160704'), ('2160704', 'Theory'), ('Theory', 'Computation'), ('Computation', 'Unit-3'), ('Unit-3', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Dixita.kagathara'), ('Dixita.kagathara', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Topics'), ('Topics', 'covered'), ('covered', 'Chomsky'), ('Chomsky', 'hierarchy'), ('hierarchy', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'Recursive'), ('Recursive', 'definition'), ('definition', 'FA'), ('FA', 'regular'), ('regular', 'grammar'), ('grammar', 'Derivation'), ('Derivation', 'Ambiguity'), ('Ambiguity', '&'), ('&', 'unambiguous'), ('unambiguous', 'grammar'), ('grammar', 'Simplified'), ('Simplified', 'forms'), ('forms', '&'), ('&', 'normal'), ('normal', 'forms'), ('forms', 'CFG'), ('CFG', 'CNF'), ('CNF', 'Union'), ('Union', ','), (',', 'Concatenation'), ('Concatenation', '&'), ('&', 'Kleene'), ('Kleene', '’'), ('’', 'CFG'), ('CFG', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Chomsky'), ('Chomsky', 'Hierarchy'), ('Hierarchy', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Chomsky'), ('Chomsky', 'hierarchy'), ('hierarchy', '('), ('(', 'Classification'), ('Classification', 'grammar'), ('grammar', ')'), (')', 'Restricted'), ('Restricted', 'grammar'), ('grammar', 'Regular'), ('Regular', 'grammar'), ('grammar', '('), ('(', 'type'), ('type', '3'), ('3', ')'), (')', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', '('), ('(', 'type'), ('type', '2'), ('2', ')'), (')', 'Context'), ('Context', 'sensitive'), ('sensitive', 'grammar'), ('grammar', '('), ('(', 'type'), ('type', '1'), ('1', ')'), (')', 'Unrestricted'), ('Unrestricted', 'grammar'), ('grammar', '('), ('(', 'type'), ('type', '0'), ('0', ')'), (')', 'Grammar'), ('Grammar', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Type'), ('Type', '0'), ('0', 'grammar'), ('grammar', '('), ('(', 'Phrase'), ('Phrase', 'Structure'), ('Structure', 'Grammar'), ('Grammar', ')'), (')', 'Their'), ('Their', 'productions'), ('productions', 'form'), ('form', ':'), (':', 'strings'), ('strings', 'terminal'), ('terminal', 'nonterminal'), ('nonterminal', 'symbols'), ('symbols', '.')]

>> Trigrams are: 
 [('W5', 'Computer', 'Engineering'), ('Computer', 'Engineering', '('), ('Engineering', '(', 'Why'), ('(', 'Why', ','), ('Why', ',', 'What'), (',', 'What', ','), ('What', ',', 'When'), (',', 'When', ','), ('When', ',', 'Where'), (',', 'Where', ','), ('Where', ',', 'How'), (',', 'How', ')'), ('How', ')', 'Prof.'), (')', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B.'), ('Dixita', 'B.', 'Kagathara'), ('B.', 'Kagathara', '2160704'), ('Kagathara', '2160704', 'Theory'), ('2160704', 'Theory', 'Computation'), ('Theory', 'Computation', 'Unit-3'), ('Computation', 'Unit-3', 'Context'), ('Unit-3', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Dixita.kagathara'), ('Grammar', 'Dixita.kagathara', '@'), ('Dixita.kagathara', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', 'Theory'), ('darshan.ac.in', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Topics'), ('›', 'Topics', 'covered'), ('Topics', 'covered', 'Chomsky'), ('covered', 'Chomsky', 'hierarchy'), ('Chomsky', 'hierarchy', 'Context'), ('hierarchy', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'Recursive'), ('grammar', 'Recursive', 'definition'), ('Recursive', 'definition', 'FA'), ('definition', 'FA', 'regular'), ('FA', 'regular', 'grammar'), ('regular', 'grammar', 'Derivation'), ('grammar', 'Derivation', 'Ambiguity'), ('Derivation', 'Ambiguity', '&'), ('Ambiguity', '&', 'unambiguous'), ('&', 'unambiguous', 'grammar'), ('unambiguous', 'grammar', 'Simplified'), ('grammar', 'Simplified', 'forms'), ('Simplified', 'forms', '&'), ('forms', '&', 'normal'), ('&', 'normal', 'forms'), ('normal', 'forms', 'CFG'), ('forms', 'CFG', 'CNF'), ('CFG', 'CNF', 'Union'), ('CNF', 'Union', ','), ('Union', ',', 'Concatenation'), (',', 'Concatenation', '&'), ('Concatenation', '&', 'Kleene'), ('&', 'Kleene', '’'), ('Kleene', '’', 'CFG'), ('’', 'CFG', 'Unit'), ('CFG', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Chomsky'), ('›', 'Chomsky', 'Hierarchy'), ('Chomsky', 'Hierarchy', 'Unit'), ('Hierarchy', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Chomsky'), ('›', 'Chomsky', 'hierarchy'), ('Chomsky', 'hierarchy', '('), ('hierarchy', '(', 'Classification'), ('(', 'Classification', 'grammar'), ('Classification', 'grammar', ')'), ('grammar', ')', 'Restricted'), (')', 'Restricted', 'grammar'), ('Restricted', 'grammar', 'Regular'), ('grammar', 'Regular', 'grammar'), ('Regular', 'grammar', '('), ('grammar', '(', 'type'), ('(', 'type', '3'), ('type', '3', ')'), ('3', ')', 'Context'), (')', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', '('), ('grammar', '(', 'type'), ('(', 'type', '2'), ('type', '2', ')'), ('2', ')', 'Context'), (')', 'Context', 'sensitive'), ('Context', 'sensitive', 'grammar'), ('sensitive', 'grammar', '('), ('grammar', '(', 'type'), ('(', 'type', '1'), ('type', '1', ')'), ('1', ')', 'Unrestricted'), (')', 'Unrestricted', 'grammar'), ('Unrestricted', 'grammar', '('), ('grammar', '(', 'type'), ('(', 'type', '0'), ('type', '0', ')'), ('0', ')', 'Grammar'), (')', 'Grammar', 'Unit'), ('Grammar', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Type'), ('›', 'Type', '0'), ('Type', '0', 'grammar'), ('0', 'grammar', '('), ('grammar', '(', 'Phrase'), ('(', 'Phrase', 'Structure'), ('Phrase', 'Structure', 'Grammar'), ('Structure', 'Grammar', ')'), ('Grammar', ')', 'Their'), (')', 'Their', 'productions'), ('Their', 'productions', 'form'), ('productions', 'form', ':'), ('form', ':', 'strings'), (':', 'strings', 'terminal'), ('strings', 'terminal', 'nonterminal'), ('terminal', 'nonterminal', 'symbols'), ('nonterminal', 'symbols', '.')]

>> POS Tags are: 
 [('W5', 'NNP'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('(', '('), ('Why', 'WRB'), (',', ','), ('What', 'WP'), (',', ','), ('When', 'WRB'), (',', ','), ('Where', 'NNP'), (',', ','), ('How', 'NNP'), (')', ')'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B.', 'NNP'), ('Kagathara', 'NNP'), ('2160704', 'CD'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('Unit-3', 'NNP'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Dixita.kagathara', 'NNP'), ('@', 'NNP'), ('darshan.ac.in', 'NN'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Topics', 'NNPS'), ('covered', 'VBD'), ('Chomsky', 'NNP'), ('hierarchy', 'NN'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('Recursive', 'NNP'), ('definition', 'NN'), ('FA', 'NNP'), ('regular', 'JJ'), ('grammar', 'NN'), ('Derivation', 'NNP'), ('Ambiguity', 'NNP'), ('&', 'CC'), ('unambiguous', 'JJ'), ('grammar', 'NN'), ('Simplified', 'NNP'), ('forms', 'VBZ'), ('&', 'CC'), ('normal', 'JJ'), ('forms', 'NNS'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('Union', 'NNP'), (',', ','), ('Concatenation', 'NNP'), ('&', 'CC'), ('Kleene', 'NNP'), ('’', 'NNP'), ('CFG', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Chomsky', 'NNP'), ('Hierarchy', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Chomsky', 'NNP'), ('hierarchy', 'NN'), ('(', '('), ('Classification', 'NNP'), ('grammar', 'NN'), (')', ')'), ('Restricted', 'VBD'), ('grammar', 'NN'), ('Regular', 'JJ'), ('grammar', 'NN'), ('(', '('), ('type', 'JJ'), ('3', 'CD'), (')', ')'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '('), ('type', 'JJ'), ('2', 'CD'), (')', ')'), ('Context', 'NNP'), ('sensitive', 'JJ'), ('grammar', 'NN'), ('(', '('), ('type', 'JJ'), ('1', 'CD'), (')', ')'), ('Unrestricted', 'VBN'), ('grammar', 'NN'), ('(', '('), ('type', 'JJ'), ('0', 'CD'), (')', ')'), ('Grammar', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Type', 'NNP'), ('0', 'CD'), ('grammar', 'NN'), ('(', '('), ('Phrase', 'NNP'), ('Structure', 'NNP'), ('Grammar', 'NNP'), (')', ')'), ('Their', 'PRP$'), ('productions', 'NNS'), ('form', 'NN'), (':', ':'), ('strings', 'NNS'), ('terminal', 'JJ'), ('nonterminal', 'JJ'), ('symbols', 'NNS'), ('.', '.')]

 (S
  (NP W5/NNP Computer/NNP Engineering/NNP)
  (/(
  Why/WRB
  ,/,
  What/WP
  ,/,
  When/WRB
  ,/,
  (NP Where/NNP)
  ,/,
  (NP How/NNP)
  )/)
  (NP Prof./NNP Dixita/NNP B./NNP Kagathara/NNP)
  2160704/CD
  (NP
    Theory/NNP
    Computation/NNP
    Unit-3/NNP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Dixita.kagathara/NNP
    @/NNP
    darshan.ac.in/NN
    Theory/NNP
    Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  Topics/NNPS
  covered/VBD
  (NP Chomsky/NNP hierarchy/NN Context/NNP)
  (NP free/JJ grammar/NN Recursive/NNP definition/NN FA/NNP)
  (NP regular/JJ grammar/NN Derivation/NNP Ambiguity/NNP)
  &/CC
  (NP unambiguous/JJ grammar/NN Simplified/NNP)
  forms/VBZ
  &/CC
  (NP normal/JJ forms/NNS CFG/NNP CNF/NNP Union/NNP)
  ,/,
  (NP Concatenation/NNP)
  &/CC
  (NP Kleene/NNP ’/NNP CFG/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Chomsky/NNP Hierarchy/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Chomsky/NNP hierarchy/NN)
  (/(
  (NP Classification/NNP grammar/NN)
  )/)
  Restricted/VBD
  (NP grammar/NN)
  (NP Regular/JJ grammar/NN)
  (/(
  type/JJ
  3/CD
  )/)
  (NP Context/NNP)
  (NP free/JJ grammar/NN)
  (/(
  type/JJ
  2/CD
  )/)
  (NP Context/NNP)
  (NP sensitive/JJ grammar/NN)
  (/(
  type/JJ
  1/CD
  )/)
  Unrestricted/VBN
  (NP grammar/NN)
  (/(
  type/JJ
  0/CD
  )/)
  (NP Grammar/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Type/NNP)
  0/CD
  (NP grammar/NN)
  (/(
  (NP Phrase/NNP Structure/NNP Grammar/NNP)
  )/)
  Their/PRP$
  (NP productions/NNS form/NN)
  :/:
  (NP strings/NNS)
  (NP terminal/JJ nonterminal/JJ symbols/NNS)
  ./.) 


>> Noun Phrases are: 
 ['W5 Computer Engineering', 'Where', 'How', 'Prof. Dixita B. Kagathara', 'Theory Computation Unit-3 Context Free Grammar Dixita.kagathara @ darshan.ac.in Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '›', 'Chomsky hierarchy Context', 'free grammar Recursive definition FA', 'regular grammar Derivation Ambiguity', 'unambiguous grammar Simplified', 'normal forms CFG CNF Union', 'Concatenation', 'Kleene ’ CFG Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Chomsky Hierarchy Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Chomsky hierarchy', 'Classification grammar', 'grammar', 'Regular grammar', 'Context', 'free grammar', 'Context', 'sensitive grammar', 'grammar', 'Grammar Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Type', 'grammar', 'Phrase Structure Grammar', 'productions form', 'strings', 'terminal nonterminal symbols']

>> Named Entities are: 
 [('PERSON', 'Where'), ('GPE', 'How'), ('PERSON', 'Dixita B. Kagathara'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Chomsky'), ('PERSON', 'Derivation Ambiguity'), ('PERSON', 'Simplified'), ('ORGANIZATION', 'CFG'), ('ORGANIZATION', 'CNF Union'), ('ORGANIZATION', 'Concatenation'), ('PERSON', 'Kleene'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Chomsky Hierarchy Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Grammar Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Phrase Structure Grammar')] 

>> Stemming using Porter Stemmer: 
 [('W5', 'w5'), ('Computer', 'comput'), ('Engineering', 'engin'), ('(', '('), ('Why', 'whi'), (',', ','), ('What', 'what'), (',', ','), ('When', 'when'), (',', ','), ('Where', 'where'), (',', ','), ('How', 'how'), (')', ')'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B.', 'b.'), ('Kagathara', 'kagathara'), ('2160704', '2160704'), ('Theory', 'theori'), ('Computation', 'comput'), ('Unit-3', 'unit-3'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Topics', 'topic'), ('covered', 'cover'), ('Chomsky', 'chomski'), ('hierarchy', 'hierarchi'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Recursive', 'recurs'), ('definition', 'definit'), ('FA', 'fa'), ('regular', 'regular'), ('grammar', 'grammar'), ('Derivation', 'deriv'), ('Ambiguity', 'ambigu'), ('&', '&'), ('unambiguous', 'unambigu'), ('grammar', 'grammar'), ('Simplified', 'simplifi'), ('forms', 'form'), ('&', '&'), ('normal', 'normal'), ('forms', 'form'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Union', 'union'), (',', ','), ('Concatenation', 'concaten'), ('&', '&'), ('Kleene', 'kleen'), ('’', '’'), ('CFG', 'cfg'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'chomski'), ('Hierarchy', 'hierarchi'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'chomski'), ('hierarchy', 'hierarchi'), ('(', '('), ('Classification', 'classif'), ('grammar', 'grammar'), (')', ')'), ('Restricted', 'restrict'), ('grammar', 'grammar'), ('Regular', 'regular'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('3', '3'), (')', ')'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('2', '2'), (')', ')'), ('Context', 'context'), ('sensitive', 'sensit'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('1', '1'), (')', ')'), ('Unrestricted', 'unrestrict'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('0', '0'), (')', ')'), ('Grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('0', '0'), ('grammar', 'grammar'), ('(', '('), ('Phrase', 'phrase'), ('Structure', 'structur'), ('Grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('strings', 'string'), ('terminal', 'termin'), ('nonterminal', 'nontermin'), ('symbols', 'symbol'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('W5', 'w5'), ('Computer', 'comput'), ('Engineering', 'engin'), ('(', '('), ('Why', 'whi'), (',', ','), ('What', 'what'), (',', ','), ('When', 'when'), (',', ','), ('Where', 'where'), (',', ','), ('How', 'how'), (')', ')'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B.', 'b.'), ('Kagathara', 'kagathara'), ('2160704', '2160704'), ('Theory', 'theori'), ('Computation', 'comput'), ('Unit-3', 'unit-3'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Topics', 'topic'), ('covered', 'cover'), ('Chomsky', 'chomski'), ('hierarchy', 'hierarchi'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Recursive', 'recurs'), ('definition', 'definit'), ('FA', 'fa'), ('regular', 'regular'), ('grammar', 'grammar'), ('Derivation', 'deriv'), ('Ambiguity', 'ambigu'), ('&', '&'), ('unambiguous', 'unambigu'), ('grammar', 'grammar'), ('Simplified', 'simplifi'), ('forms', 'form'), ('&', '&'), ('normal', 'normal'), ('forms', 'form'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Union', 'union'), (',', ','), ('Concatenation', 'concaten'), ('&', '&'), ('Kleene', 'kleen'), ('’', '’'), ('CFG', 'cfg'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'chomski'), ('Hierarchy', 'hierarchi'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'chomski'), ('hierarchy', 'hierarchi'), ('(', '('), ('Classification', 'classif'), ('grammar', 'grammar'), (')', ')'), ('Restricted', 'restrict'), ('grammar', 'grammar'), ('Regular', 'regular'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('3', '3'), (')', ')'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('2', '2'), (')', ')'), ('Context', 'context'), ('sensitive', 'sensit'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('1', '1'), (')', ')'), ('Unrestricted', 'unrestrict'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('0', '0'), (')', ')'), ('Grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('0', '0'), ('grammar', 'grammar'), ('(', '('), ('Phrase', 'phrase'), ('Structure', 'structur'), ('Grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('strings', 'string'), ('terminal', 'termin'), ('nonterminal', 'nontermin'), ('symbols', 'symbol'), ('.', '.')]

>> Lemmatization: 
 [('W5', 'W5'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('(', '('), ('Why', 'Why'), (',', ','), ('What', 'What'), (',', ','), ('When', 'When'), (',', ','), ('Where', 'Where'), (',', ','), ('How', 'How'), (')', ')'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B.', 'B.'), ('Kagathara', 'Kagathara'), ('2160704', '2160704'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('Unit-3', 'Unit-3'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Dixita.kagathara', 'Dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Topics', 'Topics'), ('covered', 'covered'), ('Chomsky', 'Chomsky'), ('hierarchy', 'hierarchy'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('Recursive', 'Recursive'), ('definition', 'definition'), ('FA', 'FA'), ('regular', 'regular'), ('grammar', 'grammar'), ('Derivation', 'Derivation'), ('Ambiguity', 'Ambiguity'), ('&', '&'), ('unambiguous', 'unambiguous'), ('grammar', 'grammar'), ('Simplified', 'Simplified'), ('forms', 'form'), ('&', '&'), ('normal', 'normal'), ('forms', 'form'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('Union', 'Union'), (',', ','), ('Concatenation', 'Concatenation'), ('&', '&'), ('Kleene', 'Kleene'), ('’', '’'), ('CFG', 'CFG'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'Chomsky'), ('Hierarchy', 'Hierarchy'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'Chomsky'), ('hierarchy', 'hierarchy'), ('(', '('), ('Classification', 'Classification'), ('grammar', 'grammar'), (')', ')'), ('Restricted', 'Restricted'), ('grammar', 'grammar'), ('Regular', 'Regular'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('3', '3'), (')', ')'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('2', '2'), (')', ')'), ('Context', 'Context'), ('sensitive', 'sensitive'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('1', '1'), (')', ')'), ('Unrestricted', 'Unrestricted'), ('grammar', 'grammar'), ('(', '('), ('type', 'type'), ('0', '0'), (')', ')'), ('Grammar', 'Grammar'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'Type'), ('0', '0'), ('grammar', 'grammar'), ('(', '('), ('Phrase', 'Phrase'), ('Structure', 'Structure'), ('Grammar', 'Grammar'), (')', ')'), ('Their', 'Their'), ('productions', 'production'), ('form', 'form'), (':', ':'), ('strings', 'string'), ('terminal', 'terminal'), ('nonterminal', 'nonterminal'), ('symbols', 'symbol'), ('.', '.')]



============================ Sentence 2 =============================

Example: S → ACaB  Bc → acB  CB → DB  aD → Db   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 1 grammar (Context Sensitive Grammar) Their productions are of the form:  where A is non terminal and , ,  are strings of terminals and non terminals. 


>> Tokens are: 
 ['Example', ':', 'S', '→', 'ACaB', 'Bc', '→', 'acB', 'CB', '→', 'DB', 'aD', '→', 'Db', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Type', '1', 'grammar', '(', 'Context', 'Sensitive', 'Grammar', ')', 'Their', 'productions', 'form', ':', 'A', 'non', 'terminal', ',', ',', 'strings', 'terminals', 'non', 'terminals', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'S'), ('S', '→'), ('→', 'ACaB'), ('ACaB', 'Bc'), ('Bc', '→'), ('→', 'acB'), ('acB', 'CB'), ('CB', '→'), ('→', 'DB'), ('DB', 'aD'), ('aD', '→'), ('→', 'Db'), ('Db', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Type'), ('Type', '1'), ('1', 'grammar'), ('grammar', '('), ('(', 'Context'), ('Context', 'Sensitive'), ('Sensitive', 'Grammar'), ('Grammar', ')'), (')', 'Their'), ('Their', 'productions'), ('productions', 'form'), ('form', ':'), (':', 'A'), ('A', 'non'), ('non', 'terminal'), ('terminal', ','), (',', ','), (',', 'strings'), ('strings', 'terminals'), ('terminals', 'non'), ('non', 'terminals'), ('terminals', '.')]

>> Trigrams are: 
 [('Example', ':', 'S'), (':', 'S', '→'), ('S', '→', 'ACaB'), ('→', 'ACaB', 'Bc'), ('ACaB', 'Bc', '→'), ('Bc', '→', 'acB'), ('→', 'acB', 'CB'), ('acB', 'CB', '→'), ('CB', '→', 'DB'), ('→', 'DB', 'aD'), ('DB', 'aD', '→'), ('aD', '→', 'Db'), ('→', 'Db', 'Unit'), ('Db', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Type'), ('›', 'Type', '1'), ('Type', '1', 'grammar'), ('1', 'grammar', '('), ('grammar', '(', 'Context'), ('(', 'Context', 'Sensitive'), ('Context', 'Sensitive', 'Grammar'), ('Sensitive', 'Grammar', ')'), ('Grammar', ')', 'Their'), (')', 'Their', 'productions'), ('Their', 'productions', 'form'), ('productions', 'form', ':'), ('form', ':', 'A'), (':', 'A', 'non'), ('A', 'non', 'terminal'), ('non', 'terminal', ','), ('terminal', ',', ','), (',', ',', 'strings'), (',', 'strings', 'terminals'), ('strings', 'terminals', 'non'), ('terminals', 'non', 'terminals'), ('non', 'terminals', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('S', 'NNP'), ('→', 'NNP'), ('ACaB', 'NNP'), ('Bc', 'NNP'), ('→', 'NNP'), ('acB', 'VBZ'), ('CB', 'NNP'), ('→', 'NNP'), ('DB', 'NNP'), ('aD', 'NN'), ('→', 'NN'), ('Db', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Type', 'NNP'), ('1', 'CD'), ('grammar', 'NN'), ('(', '('), ('Context', 'NNP'), ('Sensitive', 'NNP'), ('Grammar', 'NNP'), (')', ')'), ('Their', 'PRP$'), ('productions', 'NNS'), ('form', 'NN'), (':', ':'), ('A', 'DT'), ('non', 'JJ'), ('terminal', 'NN'), (',', ','), (',', ','), ('strings', 'NNS'), ('terminals', 'NNS'), ('non', 'VBP'), ('terminals', 'NNS'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP S/NNP →/NNP ACaB/NNP Bc/NNP →/NNP)
  acB/VBZ
  (NP CB/NNP →/NNP DB/NNP aD/NN →/NN Db/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Type/NNP)
  1/CD
  (NP grammar/NN)
  (/(
  (NP Context/NNP Sensitive/NNP Grammar/NNP)
  )/)
  Their/PRP$
  (NP productions/NNS form/NN)
  :/:
  (NP A/DT non/JJ terminal/NN)
  ,/,
  ,/,
  (NP strings/NNS terminals/NNS)
  non/VBP
  (NP terminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'S → ACaB Bc →', 'CB → DB aD → Db Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Type', 'grammar', 'Context Sensitive Grammar', 'productions form', 'A non terminal', 'strings terminals', 'terminals']

>> Named Entities are: 
 [('GPE', 'Example'), ('ORGANIZATION', 'CB'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Context')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('S', 's'), ('→', '→'), ('ACaB', 'acab'), ('Bc', 'bc'), ('→', '→'), ('acB', 'acb'), ('CB', 'cb'), ('→', '→'), ('DB', 'db'), ('aD', 'ad'), ('→', '→'), ('Db', 'db'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('1', '1'), ('grammar', 'grammar'), ('(', '('), ('Context', 'context'), ('Sensitive', 'sensit'), ('Grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('A', 'a'), ('non', 'non'), ('terminal', 'termin'), (',', ','), (',', ','), ('strings', 'string'), ('terminals', 'termin'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('S', 's'), ('→', '→'), ('ACaB', 'acab'), ('Bc', 'bc'), ('→', '→'), ('acB', 'acb'), ('CB', 'cb'), ('→', '→'), ('DB', 'db'), ('aD', 'ad'), ('→', '→'), ('Db', 'db'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('1', '1'), ('grammar', 'grammar'), ('(', '('), ('Context', 'context'), ('Sensitive', 'sensit'), ('Grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('A', 'a'), ('non', 'non'), ('terminal', 'termin'), (',', ','), (',', ','), ('strings', 'string'), ('terminals', 'termin'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('S', 'S'), ('→', '→'), ('ACaB', 'ACaB'), ('Bc', 'Bc'), ('→', '→'), ('acB', 'acB'), ('CB', 'CB'), ('→', '→'), ('DB', 'DB'), ('aD', 'aD'), ('→', '→'), ('Db', 'Db'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'Type'), ('1', '1'), ('grammar', 'grammar'), ('(', '('), ('Context', 'Context'), ('Sensitive', 'Sensitive'), ('Grammar', 'Grammar'), (')', ')'), ('Their', 'Their'), ('productions', 'production'), ('form', 'form'), (':', ':'), ('A', 'A'), ('non', 'non'), ('terminal', 'terminal'), (',', ','), (',', ','), ('strings', 'string'), ('terminals', 'terminal'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')]



============================ Sentence 3 =============================

The strings  and may be empty, but  must be non-empty. 


>> Tokens are: 
 ['The', 'strings', 'may', 'empty', ',', 'must', 'non-empty', '.']

>> Bigrams are: 
 [('The', 'strings'), ('strings', 'may'), ('may', 'empty'), ('empty', ','), (',', 'must'), ('must', 'non-empty'), ('non-empty', '.')]

>> Trigrams are: 
 [('The', 'strings', 'may'), ('strings', 'may', 'empty'), ('may', 'empty', ','), ('empty', ',', 'must'), (',', 'must', 'non-empty'), ('must', 'non-empty', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('strings', 'NNS'), ('may', 'MD'), ('empty', 'VB'), (',', ','), ('must', 'MD'), ('non-empty', 'JJ'), ('.', '.')]

 (S
  (NP The/DT strings/NNS)
  may/MD
  empty/VB
  ,/,
  must/MD
  non-empty/JJ
  ./.) 


>> Noun Phrases are: 
 ['The strings']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('strings', 'string'), ('may', 'may'), ('empty', 'empti'), (',', ','), ('must', 'must'), ('non-empty', 'non-empti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('strings', 'string'), ('may', 'may'), ('empty', 'empti'), (',', ','), ('must', 'must'), ('non-empty', 'non-empti'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('strings', 'string'), ('may', 'may'), ('empty', 'empty'), (',', ','), ('must', 'must'), ('non-empty', 'non-empty'), ('.', '.')]



============================ Sentence 4 =============================

Here, a string  can be replaced by  (or vice versa) only when it is enclosed by the strings  and  in a sentential form. 


>> Tokens are: 
 ['Here', ',', 'string', 'replaced', '(', 'vice', 'versa', ')', 'enclosed', 'strings', 'sentential', 'form', '.']

>> Bigrams are: 
 [('Here', ','), (',', 'string'), ('string', 'replaced'), ('replaced', '('), ('(', 'vice'), ('vice', 'versa'), ('versa', ')'), (')', 'enclosed'), ('enclosed', 'strings'), ('strings', 'sentential'), ('sentential', 'form'), ('form', '.')]

>> Trigrams are: 
 [('Here', ',', 'string'), (',', 'string', 'replaced'), ('string', 'replaced', '('), ('replaced', '(', 'vice'), ('(', 'vice', 'versa'), ('vice', 'versa', ')'), ('versa', ')', 'enclosed'), (')', 'enclosed', 'strings'), ('enclosed', 'strings', 'sentential'), ('strings', 'sentential', 'form'), ('sentential', 'form', '.')]

>> POS Tags are: 
 [('Here', 'RB'), (',', ','), ('string', 'VBG'), ('replaced', 'VBN'), ('(', '('), ('vice', 'NN'), ('versa', 'NN'), (')', ')'), ('enclosed', 'VBD'), ('strings', 'NNS'), ('sentential', 'JJ'), ('form', 'NN'), ('.', '.')]

 (S
  Here/RB
  ,/,
  string/VBG
  replaced/VBN
  (/(
  (NP vice/NN versa/NN)
  )/)
  enclosed/VBD
  (NP strings/NNS)
  (NP sentential/JJ form/NN)
  ./.) 


>> Noun Phrases are: 
 ['vice versa', 'strings', 'sentential form']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Here', 'here'), (',', ','), ('string', 'string'), ('replaced', 'replac'), ('(', '('), ('vice', 'vice'), ('versa', 'versa'), (')', ')'), ('enclosed', 'enclos'), ('strings', 'string'), ('sentential', 'sententi'), ('form', 'form'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Here', 'here'), (',', ','), ('string', 'string'), ('replaced', 'replac'), ('(', '('), ('vice', 'vice'), ('versa', 'versa'), (')', ')'), ('enclosed', 'enclos'), ('strings', 'string'), ('sentential', 'sententi'), ('form', 'form'), ('.', '.')]

>> Lemmatization: 
 [('Here', 'Here'), (',', ','), ('string', 'string'), ('replaced', 'replaced'), ('(', '('), ('vice', 'vice'), ('versa', 'versa'), (')', ')'), ('enclosed', 'enclosed'), ('strings', 'string'), ('sentential', 'sentential'), ('form', 'form'), ('.', '.')]



============================ Sentence 5 =============================

Example: AB → AbBc  A → bcA  B → b   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 2 grammar (Context Free Grammar) Their productions are of the form:  Where  is non terminal and is string of terminals and non terminals. 


>> Tokens are: 
 ['Example', ':', 'AB', '→', 'AbBc', 'A', '→', 'bcA', 'B', '→', 'b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Type', '2', 'grammar', '(', 'Context', 'Free', 'Grammar', ')', 'Their', 'productions', 'form', ':', 'Where', 'non', 'terminal', 'string', 'terminals', 'non', 'terminals', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'AB'), ('AB', '→'), ('→', 'AbBc'), ('AbBc', 'A'), ('A', '→'), ('→', 'bcA'), ('bcA', 'B'), ('B', '→'), ('→', 'b'), ('b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Type'), ('Type', '2'), ('2', 'grammar'), ('grammar', '('), ('(', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', ')'), (')', 'Their'), ('Their', 'productions'), ('productions', 'form'), ('form', ':'), (':', 'Where'), ('Where', 'non'), ('non', 'terminal'), ('terminal', 'string'), ('string', 'terminals'), ('terminals', 'non'), ('non', 'terminals'), ('terminals', '.')]

>> Trigrams are: 
 [('Example', ':', 'AB'), (':', 'AB', '→'), ('AB', '→', 'AbBc'), ('→', 'AbBc', 'A'), ('AbBc', 'A', '→'), ('A', '→', 'bcA'), ('→', 'bcA', 'B'), ('bcA', 'B', '→'), ('B', '→', 'b'), ('→', 'b', 'Unit'), ('b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Type'), ('›', 'Type', '2'), ('Type', '2', 'grammar'), ('2', 'grammar', '('), ('grammar', '(', 'Context'), ('(', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', ')'), ('Grammar', ')', 'Their'), (')', 'Their', 'productions'), ('Their', 'productions', 'form'), ('productions', 'form', ':'), ('form', ':', 'Where'), (':', 'Where', 'non'), ('Where', 'non', 'terminal'), ('non', 'terminal', 'string'), ('terminal', 'string', 'terminals'), ('string', 'terminals', 'non'), ('terminals', 'non', 'terminals'), ('non', 'terminals', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('AB', 'NNP'), ('→', 'NNP'), ('AbBc', 'NNP'), ('A', 'NNP'), ('→', 'NNP'), ('bcA', 'NN'), ('B', 'NNP'), ('→', 'NNP'), ('b', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Type', 'NNP'), ('2', 'CD'), ('grammar', 'NN'), ('(', '('), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), (')', ')'), ('Their', 'PRP$'), ('productions', 'NNS'), ('form', 'NN'), (':', ':'), ('Where', 'WRB'), ('non', 'JJ'), ('terminal', 'JJ'), ('string', 'NN'), ('terminals', 'NNS'), ('non', 'JJ'), ('terminals', 'NNS'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP
    AB/NNP
    →/NNP
    AbBc/NNP
    A/NNP
    →/NNP
    bcA/NN
    B/NNP
    →/NNP
    b/NN
    Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Type/NNP)
  2/CD
  (NP grammar/NN)
  (/(
  (NP Context/NNP Free/NNP Grammar/NNP)
  )/)
  Their/PRP$
  (NP productions/NNS form/NN)
  :/:
  Where/WRB
  (NP non/JJ terminal/JJ string/NN terminals/NNS)
  (NP non/JJ terminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'AB → AbBc A → bcA B → b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Type', 'grammar', 'Context Free Grammar', 'productions form', 'non terminal string terminals', 'non terminals']

>> Named Entities are: 
 [('GPE', 'Example'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Context Free Grammar')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('AB', 'ab'), ('→', '→'), ('AbBc', 'abbc'), ('A', 'a'), ('→', '→'), ('bcA', 'bca'), ('B', 'b'), ('→', '→'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('2', '2'), ('grammar', 'grammar'), ('(', '('), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('Where', 'where'), ('non', 'non'), ('terminal', 'termin'), ('string', 'string'), ('terminals', 'termin'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('AB', 'ab'), ('→', '→'), ('AbBc', 'abbc'), ('A', 'a'), ('→', '→'), ('bcA', 'bca'), ('B', 'b'), ('→', '→'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('2', '2'), ('grammar', 'grammar'), ('(', '('), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('Where', 'where'), ('non', 'non'), ('terminal', 'termin'), ('string', 'string'), ('terminals', 'termin'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('AB', 'AB'), ('→', '→'), ('AbBc', 'AbBc'), ('A', 'A'), ('→', '→'), ('bcA', 'bcA'), ('B', 'B'), ('→', '→'), ('b', 'b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'Type'), ('2', '2'), ('grammar', 'grammar'), ('(', '('), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), (')', ')'), ('Their', 'Their'), ('productions', 'production'), ('form', 'form'), (':', ':'), ('Where', 'Where'), ('non', 'non'), ('terminal', 'terminal'), ('string', 'string'), ('terminals', 'terminal'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')]



============================ Sentence 6 =============================

Example: S → Xa  X → a  X → aX  X → abc  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 3 grammar (Linear or Regular grammar) Their productions are of the form: 	or	  Where are non terminals and  is terminal. 


>> Tokens are: 
 ['Example', ':', 'S', '→', 'Xa', 'X', '→', 'X', '→', 'aX', 'X', '→', 'abc', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Type', '3', 'grammar', '(', 'Linear', 'Regular', 'grammar', ')', 'Their', 'productions', 'form', ':', 'Where', 'non', 'terminals', 'terminal', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'S'), ('S', '→'), ('→', 'Xa'), ('Xa', 'X'), ('X', '→'), ('→', 'X'), ('X', '→'), ('→', 'aX'), ('aX', 'X'), ('X', '→'), ('→', 'abc'), ('abc', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Type'), ('Type', '3'), ('3', 'grammar'), ('grammar', '('), ('(', 'Linear'), ('Linear', 'Regular'), ('Regular', 'grammar'), ('grammar', ')'), (')', 'Their'), ('Their', 'productions'), ('productions', 'form'), ('form', ':'), (':', 'Where'), ('Where', 'non'), ('non', 'terminals'), ('terminals', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('Example', ':', 'S'), (':', 'S', '→'), ('S', '→', 'Xa'), ('→', 'Xa', 'X'), ('Xa', 'X', '→'), ('X', '→', 'X'), ('→', 'X', '→'), ('X', '→', 'aX'), ('→', 'aX', 'X'), ('aX', 'X', '→'), ('X', '→', 'abc'), ('→', 'abc', 'Unit'), ('abc', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Type'), ('›', 'Type', '3'), ('Type', '3', 'grammar'), ('3', 'grammar', '('), ('grammar', '(', 'Linear'), ('(', 'Linear', 'Regular'), ('Linear', 'Regular', 'grammar'), ('Regular', 'grammar', ')'), ('grammar', ')', 'Their'), (')', 'Their', 'productions'), ('Their', 'productions', 'form'), ('productions', 'form', ':'), ('form', ':', 'Where'), (':', 'Where', 'non'), ('Where', 'non', 'terminals'), ('non', 'terminals', 'terminal'), ('terminals', 'terminal', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('S', 'NNP'), ('→', 'NNP'), ('Xa', 'NNP'), ('X', 'NNP'), ('→', 'NNP'), ('X', 'NNP'), ('→', 'NNP'), ('aX', 'VBZ'), ('X', 'NNP'), ('→', 'NNP'), ('abc', 'JJ'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Type', 'NNP'), ('3', 'CD'), ('grammar', 'NN'), ('(', '('), ('Linear', 'JJ'), ('Regular', 'NNP'), ('grammar', 'NN'), (')', ')'), ('Their', 'PRP$'), ('productions', 'NNS'), ('form', 'NN'), (':', ':'), ('Where', 'WRB'), ('non', 'NN'), ('terminals', 'NNS'), ('terminal', 'NN'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP S/NNP →/NNP Xa/NNP X/NNP →/NNP X/NNP →/NNP)
  aX/VBZ
  (NP X/NNP →/NNP)
  (NP abc/JJ Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Type/NNP)
  3/CD
  (NP grammar/NN)
  (/(
  (NP Linear/JJ Regular/NNP grammar/NN)
  )/)
  Their/PRP$
  (NP productions/NNS form/NN)
  :/:
  Where/WRB
  (NP non/NN terminals/NNS terminal/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'S → Xa X → X →', 'X →', 'abc Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Type', 'grammar', 'Linear Regular grammar', 'productions form', 'non terminals terminal']

>> Named Entities are: 
 [('GPE', 'Example'), ('PERSON', 'X'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Linear Regular')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('S', 's'), ('→', '→'), ('Xa', 'xa'), ('X', 'x'), ('→', '→'), ('X', 'x'), ('→', '→'), ('aX', 'ax'), ('X', 'x'), ('→', '→'), ('abc', 'abc'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('3', '3'), ('grammar', 'grammar'), ('(', '('), ('Linear', 'linear'), ('Regular', 'regular'), ('grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('Where', 'where'), ('non', 'non'), ('terminals', 'termin'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('S', 's'), ('→', '→'), ('Xa', 'xa'), ('X', 'x'), ('→', '→'), ('X', 'x'), ('→', '→'), ('aX', 'ax'), ('X', 'x'), ('→', '→'), ('abc', 'abc'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'type'), ('3', '3'), ('grammar', 'grammar'), ('(', '('), ('Linear', 'linear'), ('Regular', 'regular'), ('grammar', 'grammar'), (')', ')'), ('Their', 'their'), ('productions', 'product'), ('form', 'form'), (':', ':'), ('Where', 'where'), ('non', 'non'), ('terminals', 'termin'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('S', 'S'), ('→', '→'), ('Xa', 'Xa'), ('X', 'X'), ('→', '→'), ('X', 'X'), ('→', '→'), ('aX', 'aX'), ('X', 'X'), ('→', '→'), ('abc', 'abc'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Type', 'Type'), ('3', '3'), ('grammar', 'grammar'), ('(', '('), ('Linear', 'Linear'), ('Regular', 'Regular'), ('grammar', 'grammar'), (')', ')'), ('Their', 'Their'), ('productions', 'production'), ('form', 'form'), (':', ':'), ('Where', 'Where'), ('non', 'non'), ('terminals', 'terminal'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 7 =============================

Example: X → a | aY Y → b  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Hierarchy of grammar    Type 3 (Regular) Type 0(Phrase structure) Type 1(Context sensitive) Type 2(Context free)  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Context free grammar   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Context Free Grammar A context free grammar (CFG) is a 4-tuple where,  	is finite set of non terminals,  	is disjoint finite set of terminals,  	is an element of  and it’s a start symbol,  	is a finite set of productions of the form  where  	and . 


>> Tokens are: 
 ['Example', ':', 'X', '→', '|', 'aY', 'Y', '→', 'b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Hierarchy', 'grammar', 'Type', '3', '(', 'Regular', ')', 'Type', '0', '(', 'Phrase', 'structure', ')', 'Type', '1', '(', 'Context', 'sensitive', ')', 'Type', '2', '(', 'Context', 'free', ')', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Context', 'free', 'grammar', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Context', 'Free', 'Grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', '4-tuple', ',', 'finite', 'set', 'non', 'terminals', ',', 'disjoint', 'finite', 'set', 'terminals', ',', 'element', '’', 'start', 'symbol', ',', 'finite', 'set', 'productions', 'form', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'X'), ('X', '→'), ('→', '|'), ('|', 'aY'), ('aY', 'Y'), ('Y', '→'), ('→', 'b'), ('b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Hierarchy'), ('Hierarchy', 'grammar'), ('grammar', 'Type'), ('Type', '3'), ('3', '('), ('(', 'Regular'), ('Regular', ')'), (')', 'Type'), ('Type', '0'), ('0', '('), ('(', 'Phrase'), ('Phrase', 'structure'), ('structure', ')'), (')', 'Type'), ('Type', '1'), ('1', '('), ('(', 'Context'), ('Context', 'sensitive'), ('sensitive', ')'), (')', 'Type'), ('Type', '2'), ('2', '('), ('(', 'Context'), ('Context', 'free'), ('free', ')'), (')', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'A'), ('A', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '('), ('(', 'CFG'), ('CFG', ')'), (')', '4-tuple'), ('4-tuple', ','), (',', 'finite'), ('finite', 'set'), ('set', 'non'), ('non', 'terminals'), ('terminals', ','), (',', 'disjoint'), ('disjoint', 'finite'), ('finite', 'set'), ('set', 'terminals'), ('terminals', ','), (',', 'element'), ('element', '’'), ('’', 'start'), ('start', 'symbol'), ('symbol', ','), (',', 'finite'), ('finite', 'set'), ('set', 'productions'), ('productions', 'form'), ('form', '.')]

>> Trigrams are: 
 [('Example', ':', 'X'), (':', 'X', '→'), ('X', '→', '|'), ('→', '|', 'aY'), ('|', 'aY', 'Y'), ('aY', 'Y', '→'), ('Y', '→', 'b'), ('→', 'b', 'Unit'), ('b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Hierarchy'), ('›', 'Hierarchy', 'grammar'), ('Hierarchy', 'grammar', 'Type'), ('grammar', 'Type', '3'), ('Type', '3', '('), ('3', '(', 'Regular'), ('(', 'Regular', ')'), ('Regular', ')', 'Type'), (')', 'Type', '0'), ('Type', '0', '('), ('0', '(', 'Phrase'), ('(', 'Phrase', 'structure'), ('Phrase', 'structure', ')'), ('structure', ')', 'Type'), (')', 'Type', '1'), ('Type', '1', '('), ('1', '(', 'Context'), ('(', 'Context', 'sensitive'), ('Context', 'sensitive', ')'), ('sensitive', ')', 'Type'), (')', 'Type', '2'), ('Type', '2', '('), ('2', '(', 'Context'), ('(', 'Context', 'free'), ('Context', 'free', ')'), ('free', ')', 'Unit'), (')', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Context'), ('›', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'Unit'), ('grammar', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Context'), ('›', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'A'), ('Grammar', 'A', 'context'), ('A', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '('), ('grammar', '(', 'CFG'), ('(', 'CFG', ')'), ('CFG', ')', '4-tuple'), (')', '4-tuple', ','), ('4-tuple', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'non'), ('set', 'non', 'terminals'), ('non', 'terminals', ','), ('terminals', ',', 'disjoint'), (',', 'disjoint', 'finite'), ('disjoint', 'finite', 'set'), ('finite', 'set', 'terminals'), ('set', 'terminals', ','), ('terminals', ',', 'element'), (',', 'element', '’'), ('element', '’', 'start'), ('’', 'start', 'symbol'), ('start', 'symbol', ','), ('symbol', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'productions'), ('set', 'productions', 'form'), ('productions', 'form', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('X', 'NN'), ('→', 'NNP'), ('|', 'NNP'), ('aY', 'VBZ'), ('Y', 'NNP'), ('→', 'NNP'), ('b', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Hierarchy', 'NNP'), ('grammar', 'NN'), ('Type', 'NNP'), ('3', 'CD'), ('(', '('), ('Regular', 'NNP'), (')', ')'), ('Type', 'VBP'), ('0', 'CD'), ('(', '('), ('Phrase', 'NNP'), ('structure', 'NN'), (')', ')'), ('Type', 'VBZ'), ('1', 'CD'), ('(', '('), ('Context', 'NNP'), ('sensitive', 'NN'), (')', ')'), ('Type', 'VBZ'), ('2', 'CD'), ('(', '('), ('Context', 'NNP'), ('free', 'RB'), (')', ')'), ('Unit', 'NNP'), ('–', '$'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('A', 'NNP'), ('context', 'JJ'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '('), ('CFG', 'NNP'), (')', ')'), ('4-tuple', 'JJ'), (',', ','), ('finite', 'JJ'), ('set', 'NN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('disjoint', 'NN'), ('finite', 'NN'), ('set', 'VBN'), ('terminals', 'NNS'), (',', ','), ('element', 'NN'), ('’', 'NNP'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('finite', 'JJ'), ('set', 'VBN'), ('productions', 'NNS'), ('form', 'NN'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP X/NN →/NNP |/NNP)
  aY/VBZ
  (NP Y/NNP →/NNP b/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Hierarchy/NNP grammar/NN Type/NNP)
  3/CD
  (/(
  (NP Regular/NNP)
  )/)
  Type/VBP
  0/CD
  (/(
  (NP Phrase/NNP structure/NN)
  )/)
  Type/VBZ
  1/CD
  (/(
  (NP Context/NNP sensitive/NN)
  )/)
  Type/VBZ
  2/CD
  (/(
  (NP Context/NNP)
  free/RB
  )/)
  (NP Unit/NNP)
  –/$
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Context/NNP)
  (NP free/JJ grammar/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Context/NNP Free/NNP Grammar/NNP A/NNP)
  (NP context/JJ free/JJ grammar/NN)
  (/(
  (NP CFG/NNP)
  )/)
  4-tuple/JJ
  ,/,
  (NP finite/JJ set/NN non/NN terminals/NNS)
  ,/,
  (NP disjoint/NN finite/NN)
  set/VBN
  (NP terminals/NNS)
  ,/,
  (NP element/NN ’/NNP start/NN symbol/NN)
  ,/,
  finite/JJ
  set/VBN
  (NP productions/NNS form/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'X → |', 'Y → b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Hierarchy grammar Type', 'Regular', 'Phrase structure', 'Context sensitive', 'Context', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Context', 'free grammar Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Context Free Grammar A', 'context free grammar', 'CFG', 'finite set non terminals', 'disjoint finite', 'terminals', 'element ’ start symbol', 'productions form']

>> Named Entities are: 
 [('GPE', 'Example'), ('PERSON', 'Y'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Phrase'), ('ORGANIZATION', 'Context'), ('ORGANIZATION', 'Context'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('X', 'x'), ('→', '→'), ('|', '|'), ('aY', 'ay'), ('Y', 'y'), ('→', '→'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hierarchy', 'hierarchi'), ('grammar', 'grammar'), ('Type', 'type'), ('3', '3'), ('(', '('), ('Regular', 'regular'), (')', ')'), ('Type', 'type'), ('0', '0'), ('(', '('), ('Phrase', 'phrase'), ('structure', 'structur'), (')', ')'), ('Type', 'type'), ('1', '1'), ('(', '('), ('Context', 'context'), ('sensitive', 'sensit'), (')', ')'), ('Type', 'type'), ('2', '2'), ('(', '('), ('Context', 'context'), ('free', 'free'), (')', ')'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('productions', 'product'), ('form', 'form'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('X', 'x'), ('→', '→'), ('|', '|'), ('aY', 'ay'), ('Y', 'y'), ('→', '→'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hierarchy', 'hierarchi'), ('grammar', 'grammar'), ('Type', 'type'), ('3', '3'), ('(', '('), ('Regular', 'regular'), (')', ')'), ('Type', 'type'), ('0', '0'), ('(', '('), ('Phrase', 'phrase'), ('structure', 'structur'), (')', ')'), ('Type', 'type'), ('1', '1'), ('(', '('), ('Context', 'context'), ('sensitive', 'sensit'), (')', ')'), ('Type', 'type'), ('2', '2'), ('(', '('), ('Context', 'context'), ('free', 'free'), (')', ')'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('productions', 'product'), ('form', 'form'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('X', 'X'), ('→', '→'), ('|', '|'), ('aY', 'aY'), ('Y', 'Y'), ('→', '→'), ('b', 'b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Hierarchy', 'Hierarchy'), ('grammar', 'grammar'), ('Type', 'Type'), ('3', '3'), ('(', '('), ('Regular', 'Regular'), (')', ')'), ('Type', 'Type'), ('0', '0'), ('(', '('), ('Phrase', 'Phrase'), ('structure', 'structure'), (')', ')'), ('Type', 'Type'), ('1', '1'), ('(', '('), ('Context', 'Context'), ('sensitive', 'sensitive'), (')', ')'), ('Type', 'Type'), ('2', '2'), ('(', '('), ('Context', 'Context'), ('free', 'free'), (')', ')'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('A', 'A'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('4-tuple', '4-tuple'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('terminals', 'terminal'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('productions', 'production'), ('form', 'form'), ('.', '.')]



============================ Sentence 8 =============================

Application of CFG: CFG are extensively used to specify the syntax of programming language. 


>> Tokens are: 
 ['Application', 'CFG', ':', 'CFG', 'extensively', 'used', 'specify', 'syntax', 'programming', 'language', '.']

>> Bigrams are: 
 [('Application', 'CFG'), ('CFG', ':'), (':', 'CFG'), ('CFG', 'extensively'), ('extensively', 'used'), ('used', 'specify'), ('specify', 'syntax'), ('syntax', 'programming'), ('programming', 'language'), ('language', '.')]

>> Trigrams are: 
 [('Application', 'CFG', ':'), ('CFG', ':', 'CFG'), (':', 'CFG', 'extensively'), ('CFG', 'extensively', 'used'), ('extensively', 'used', 'specify'), ('used', 'specify', 'syntax'), ('specify', 'syntax', 'programming'), ('syntax', 'programming', 'language'), ('programming', 'language', '.')]

>> POS Tags are: 
 [('Application', 'NN'), ('CFG', 'NNP'), (':', ':'), ('CFG', 'NNP'), ('extensively', 'RB'), ('used', 'VBD'), ('specify', 'JJ'), ('syntax', 'JJ'), ('programming', 'NN'), ('language', 'NN'), ('.', '.')]

 (S
  (NP Application/NN CFG/NNP)
  :/:
  (NP CFG/NNP)
  extensively/RB
  used/VBD
  (NP specify/JJ syntax/JJ programming/NN language/NN)
  ./.) 


>> Noun Phrases are: 
 ['Application CFG', 'CFG', 'specify syntax programming language']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Application', 'applic'), ('CFG', 'cfg'), (':', ':'), ('CFG', 'cfg'), ('extensively', 'extens'), ('used', 'use'), ('specify', 'specifi'), ('syntax', 'syntax'), ('programming', 'program'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Application', 'applic'), ('CFG', 'cfg'), (':', ':'), ('CFG', 'cfg'), ('extensively', 'extens'), ('used', 'use'), ('specify', 'specifi'), ('syntax', 'syntax'), ('programming', 'program'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('Application', 'Application'), ('CFG', 'CFG'), (':', ':'), ('CFG', 'CFG'), ('extensively', 'extensively'), ('used', 'used'), ('specify', 'specify'), ('syntax', 'syntax'), ('programming', 'programming'), ('language', 'language'), ('.', '.')]



============================ Sentence 9 =============================

CFG is used to develop a parser. 


>> Tokens are: 
 ['CFG', 'used', 'develop', 'parser', '.']

>> Bigrams are: 
 [('CFG', 'used'), ('used', 'develop'), ('develop', 'parser'), ('parser', '.')]

>> Trigrams are: 
 [('CFG', 'used', 'develop'), ('used', 'develop', 'parser'), ('develop', 'parser', '.')]

>> POS Tags are: 
 [('CFG', 'NNP'), ('used', 'VBD'), ('develop', 'VB'), ('parser', 'NN'), ('.', '.')]

 (S (NP CFG/NNP) used/VBD develop/VB (NP parser/NN) ./.) 


>> Noun Phrases are: 
 ['CFG', 'parser']

>> Named Entities are: 
 [('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('CFG', 'cfg'), ('used', 'use'), ('develop', 'develop'), ('parser', 'parser'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('CFG', 'cfg'), ('used', 'use'), ('develop', 'develop'), ('parser', 'parser'), ('.', '.')]

>> Lemmatization: 
 [('CFG', 'CFG'), ('used', 'used'), ('develop', 'develop'), ('parser', 'parser'), ('.', '.')]



============================ Sentence 10 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  11  Context Free Language Let  be a CFG. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '11', 'Context', 'Free', 'Language', 'Let', 'CFG', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '11'), ('11', 'Context'), ('Context', 'Free'), ('Free', 'Language'), ('Language', 'Let'), ('Let', 'CFG'), ('CFG', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '11'), ('›', '11', 'Context'), ('11', 'Context', 'Free'), ('Context', 'Free', 'Language'), ('Free', 'Language', 'Let'), ('Language', 'Let', 'CFG'), ('Let', 'CFG', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('11', 'CD'), ('Context', 'NNP'), ('Free', 'JJ'), ('Language', 'NNP'), ('Let', 'NNP'), ('CFG', 'NNP'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  11/CD
  (NP Context/NNP)
  (NP Free/JJ Language/NNP Let/NNP CFG/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', 'Context', 'Free Language Let CFG']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('11', '11'), ('Context', 'context'), ('Free', 'free'), ('Language', 'languag'), ('Let', 'let'), ('CFG', 'cfg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('11', '11'), ('Context', 'context'), ('Free', 'free'), ('Language', 'languag'), ('Let', 'let'), ('CFG', 'cfg'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('11', '11'), ('Context', 'Context'), ('Free', 'Free'), ('Language', 'Language'), ('Let', 'Let'), ('CFG', 'CFG'), ('.', '.')]



============================ Sentence 11 =============================

The language generated by  is   A language  is a context free Language (CFL) if there is a CFG  so that . 


>> Tokens are: 
 ['The', 'language', 'generated', 'A', 'language', 'context', 'free', 'Language', '(', 'CFL', ')', 'CFG', '.']

>> Bigrams are: 
 [('The', 'language'), ('language', 'generated'), ('generated', 'A'), ('A', 'language'), ('language', 'context'), ('context', 'free'), ('free', 'Language'), ('Language', '('), ('(', 'CFL'), ('CFL', ')'), (')', 'CFG'), ('CFG', '.')]

>> Trigrams are: 
 [('The', 'language', 'generated'), ('language', 'generated', 'A'), ('generated', 'A', 'language'), ('A', 'language', 'context'), ('language', 'context', 'free'), ('context', 'free', 'Language'), ('free', 'Language', '('), ('Language', '(', 'CFL'), ('(', 'CFL', ')'), ('CFL', ')', 'CFG'), (')', 'CFG', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('language', 'NN'), ('generated', 'VBD'), ('A', 'DT'), ('language', 'NN'), ('context', 'JJ'), ('free', 'JJ'), ('Language', 'NNP'), ('(', '('), ('CFL', 'NNP'), (')', ')'), ('CFG', 'NNP'), ('.', '.')]

 (S
  (NP The/DT language/NN)
  generated/VBD
  (NP A/DT language/NN)
  (NP context/JJ free/JJ Language/NNP)
  (/(
  (NP CFL/NNP)
  )/)
  (NP CFG/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The language', 'A language', 'context free Language', 'CFL', 'CFG']

>> Named Entities are: 
 [('ORGANIZATION', 'CFL'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('language', 'languag'), ('generated', 'gener'), ('A', 'a'), ('language', 'languag'), ('context', 'context'), ('free', 'free'), ('Language', 'languag'), ('(', '('), ('CFL', 'cfl'), (')', ')'), ('CFG', 'cfg'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('language', 'languag'), ('generated', 'generat'), ('A', 'a'), ('language', 'languag'), ('context', 'context'), ('free', 'free'), ('Language', 'languag'), ('(', '('), ('CFL', 'cfl'), (')', ')'), ('CFG', 'cfg'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('language', 'language'), ('generated', 'generated'), ('A', 'A'), ('language', 'language'), ('context', 'context'), ('free', 'free'), ('Language', 'Language'), ('(', '('), ('CFL', 'CFL'), (')', ')'), ('CFG', 'CFG'), ('.', '.')]



============================ Sentence 12 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for either a or b 	Sa | b Write CFG for a+ 	S aS | a Write CFG for a* 	S aS | ^ Write CFG for (ab)* 	SabS | ^ Write CFG for any string of a and b 	S aS | bS | a | b   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for ab* 	SaX 	X˄| bX Write CFG for a*b* 	SXY 	XaX|˄ 	YbY|˄ Write CFG for (a+b)* 	SaS | bS | ^ Write CFG for a(a+b)* 	SaX 	XaX | bX | ^  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for a* | b* 	SA | B 	A˄| aA 	B^ |bB Write CFG for (011+1)*(01)* 	SAB 	A011A | 1A | ^ 	B01B | ^ Write CFG for balanced parenthesis 	S [] | {} | [s] | {s} | ^   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG which contains at least three times 1. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'Write', 'CFG', 'either', 'b', 'S\uf0e0a', '|', 'b', 'Write', 'CFG', 'a+', 'S\uf0e0', 'aS', '|', 'Write', 'CFG', '*', 'S\uf0e0', 'aS', '|', '^', 'Write', 'CFG', '(', 'ab', ')', '*', 'S\uf0e0abS', '|', '^', 'Write', 'CFG', 'string', 'b', 'S\uf0e0', 'aS', '|', 'bS', '|', '|', 'b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'Write', 'CFG', 'ab', '*', 'S\uf0e0aX', 'X\uf0e0˄|', 'bX', 'Write', 'CFG', '*', 'b', '*', 'S\uf0e0XY', 'X\uf0e0aX|˄', 'Y\uf0e0bY|˄', 'Write', 'CFG', '(', 'a+b', ')', '*', 'S\uf0e0aS', '|', 'bS', '|', '^', 'Write', 'CFG', '(', 'a+b', ')', '*', 'S\uf0e0aX', 'X\uf0e0aX', '|', 'bX', '|', '^', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'Write', 'CFG', '*', '|', 'b', '*', 'S\uf0e0A', '|', 'B', 'A\uf0e0˄|', 'aA', 'B\uf0e0^', '|bB', 'Write', 'CFG', '(', '011+1', ')', '*', '(', '01', ')', '*', 'S\uf0e0AB', 'A\uf0e0011A', '|', '1A', '|', '^', 'B\uf0e001B', '|', '^', 'Write', 'CFG', 'balanced', 'parenthesis', 'S\uf0e0', '[', ']', '|', '{', '}', '|', '[', ']', '|', '{', '}', '|', '^', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'Write', 'CFG', 'contains', 'least', 'three', 'times', '1', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'Write'), ('Write', 'CFG'), ('CFG', 'either'), ('either', 'b'), ('b', 'S\uf0e0a'), ('S\uf0e0a', '|'), ('|', 'b'), ('b', 'Write'), ('Write', 'CFG'), ('CFG', 'a+'), ('a+', 'S\uf0e0'), ('S\uf0e0', 'aS'), ('aS', '|'), ('|', 'Write'), ('Write', 'CFG'), ('CFG', '*'), ('*', 'S\uf0e0'), ('S\uf0e0', 'aS'), ('aS', '|'), ('|', '^'), ('^', 'Write'), ('Write', 'CFG'), ('CFG', '('), ('(', 'ab'), ('ab', ')'), (')', '*'), ('*', 'S\uf0e0abS'), ('S\uf0e0abS', '|'), ('|', '^'), ('^', 'Write'), ('Write', 'CFG'), ('CFG', 'string'), ('string', 'b'), ('b', 'S\uf0e0'), ('S\uf0e0', 'aS'), ('aS', '|'), ('|', 'bS'), ('bS', '|'), ('|', '|'), ('|', 'b'), ('b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'Write'), ('Write', 'CFG'), ('CFG', 'ab'), ('ab', '*'), ('*', 'S\uf0e0aX'), ('S\uf0e0aX', 'X\uf0e0˄|'), ('X\uf0e0˄|', 'bX'), ('bX', 'Write'), ('Write', 'CFG'), ('CFG', '*'), ('*', 'b'), ('b', '*'), ('*', 'S\uf0e0XY'), ('S\uf0e0XY', 'X\uf0e0aX|˄'), ('X\uf0e0aX|˄', 'Y\uf0e0bY|˄'), ('Y\uf0e0bY|˄', 'Write'), ('Write', 'CFG'), ('CFG', '('), ('(', 'a+b'), ('a+b', ')'), (')', '*'), ('*', 'S\uf0e0aS'), ('S\uf0e0aS', '|'), ('|', 'bS'), ('bS', '|'), ('|', '^'), ('^', 'Write'), ('Write', 'CFG'), ('CFG', '('), ('(', 'a+b'), ('a+b', ')'), (')', '*'), ('*', 'S\uf0e0aX'), ('S\uf0e0aX', 'X\uf0e0aX'), ('X\uf0e0aX', '|'), ('|', 'bX'), ('bX', '|'), ('|', '^'), ('^', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'Write'), ('Write', 'CFG'), ('CFG', '*'), ('*', '|'), ('|', 'b'), ('b', '*'), ('*', 'S\uf0e0A'), ('S\uf0e0A', '|'), ('|', 'B'), ('B', 'A\uf0e0˄|'), ('A\uf0e0˄|', 'aA'), ('aA', 'B\uf0e0^'), ('B\uf0e0^', '|bB'), ('|bB', 'Write'), ('Write', 'CFG'), ('CFG', '('), ('(', '011+1'), ('011+1', ')'), (')', '*'), ('*', '('), ('(', '01'), ('01', ')'), (')', '*'), ('*', 'S\uf0e0AB'), ('S\uf0e0AB', 'A\uf0e0011A'), ('A\uf0e0011A', '|'), ('|', '1A'), ('1A', '|'), ('|', '^'), ('^', 'B\uf0e001B'), ('B\uf0e001B', '|'), ('|', '^'), ('^', 'Write'), ('Write', 'CFG'), ('CFG', 'balanced'), ('balanced', 'parenthesis'), ('parenthesis', 'S\uf0e0'), ('S\uf0e0', '['), ('[', ']'), (']', '|'), ('|', '{'), ('{', '}'), ('}', '|'), ('|', '['), ('[', ']'), (']', '|'), ('|', '{'), ('{', '}'), ('}', '|'), ('|', '^'), ('^', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'Write'), ('Write', 'CFG'), ('CFG', 'contains'), ('contains', 'least'), ('least', 'three'), ('three', 'times'), ('times', '1'), ('1', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'Write'), ('Examples', 'Write', 'CFG'), ('Write', 'CFG', 'either'), ('CFG', 'either', 'b'), ('either', 'b', 'S\uf0e0a'), ('b', 'S\uf0e0a', '|'), ('S\uf0e0a', '|', 'b'), ('|', 'b', 'Write'), ('b', 'Write', 'CFG'), ('Write', 'CFG', 'a+'), ('CFG', 'a+', 'S\uf0e0'), ('a+', 'S\uf0e0', 'aS'), ('S\uf0e0', 'aS', '|'), ('aS', '|', 'Write'), ('|', 'Write', 'CFG'), ('Write', 'CFG', '*'), ('CFG', '*', 'S\uf0e0'), ('*', 'S\uf0e0', 'aS'), ('S\uf0e0', 'aS', '|'), ('aS', '|', '^'), ('|', '^', 'Write'), ('^', 'Write', 'CFG'), ('Write', 'CFG', '('), ('CFG', '(', 'ab'), ('(', 'ab', ')'), ('ab', ')', '*'), (')', '*', 'S\uf0e0abS'), ('*', 'S\uf0e0abS', '|'), ('S\uf0e0abS', '|', '^'), ('|', '^', 'Write'), ('^', 'Write', 'CFG'), ('Write', 'CFG', 'string'), ('CFG', 'string', 'b'), ('string', 'b', 'S\uf0e0'), ('b', 'S\uf0e0', 'aS'), ('S\uf0e0', 'aS', '|'), ('aS', '|', 'bS'), ('|', 'bS', '|'), ('bS', '|', '|'), ('|', '|', 'b'), ('|', 'b', 'Unit'), ('b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'Write'), ('Examples', 'Write', 'CFG'), ('Write', 'CFG', 'ab'), ('CFG', 'ab', '*'), ('ab', '*', 'S\uf0e0aX'), ('*', 'S\uf0e0aX', 'X\uf0e0˄|'), ('S\uf0e0aX', 'X\uf0e0˄|', 'bX'), ('X\uf0e0˄|', 'bX', 'Write'), ('bX', 'Write', 'CFG'), ('Write', 'CFG', '*'), ('CFG', '*', 'b'), ('*', 'b', '*'), ('b', '*', 'S\uf0e0XY'), ('*', 'S\uf0e0XY', 'X\uf0e0aX|˄'), ('S\uf0e0XY', 'X\uf0e0aX|˄', 'Y\uf0e0bY|˄'), ('X\uf0e0aX|˄', 'Y\uf0e0bY|˄', 'Write'), ('Y\uf0e0bY|˄', 'Write', 'CFG'), ('Write', 'CFG', '('), ('CFG', '(', 'a+b'), ('(', 'a+b', ')'), ('a+b', ')', '*'), (')', '*', 'S\uf0e0aS'), ('*', 'S\uf0e0aS', '|'), ('S\uf0e0aS', '|', 'bS'), ('|', 'bS', '|'), ('bS', '|', '^'), ('|', '^', 'Write'), ('^', 'Write', 'CFG'), ('Write', 'CFG', '('), ('CFG', '(', 'a+b'), ('(', 'a+b', ')'), ('a+b', ')', '*'), (')', '*', 'S\uf0e0aX'), ('*', 'S\uf0e0aX', 'X\uf0e0aX'), ('S\uf0e0aX', 'X\uf0e0aX', '|'), ('X\uf0e0aX', '|', 'bX'), ('|', 'bX', '|'), ('bX', '|', '^'), ('|', '^', 'Unit'), ('^', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'Write'), ('Examples', 'Write', 'CFG'), ('Write', 'CFG', '*'), ('CFG', '*', '|'), ('*', '|', 'b'), ('|', 'b', '*'), ('b', '*', 'S\uf0e0A'), ('*', 'S\uf0e0A', '|'), ('S\uf0e0A', '|', 'B'), ('|', 'B', 'A\uf0e0˄|'), ('B', 'A\uf0e0˄|', 'aA'), ('A\uf0e0˄|', 'aA', 'B\uf0e0^'), ('aA', 'B\uf0e0^', '|bB'), ('B\uf0e0^', '|bB', 'Write'), ('|bB', 'Write', 'CFG'), ('Write', 'CFG', '('), ('CFG', '(', '011+1'), ('(', '011+1', ')'), ('011+1', ')', '*'), (')', '*', '('), ('*', '(', '01'), ('(', '01', ')'), ('01', ')', '*'), (')', '*', 'S\uf0e0AB'), ('*', 'S\uf0e0AB', 'A\uf0e0011A'), ('S\uf0e0AB', 'A\uf0e0011A', '|'), ('A\uf0e0011A', '|', '1A'), ('|', '1A', '|'), ('1A', '|', '^'), ('|', '^', 'B\uf0e001B'), ('^', 'B\uf0e001B', '|'), ('B\uf0e001B', '|', '^'), ('|', '^', 'Write'), ('^', 'Write', 'CFG'), ('Write', 'CFG', 'balanced'), ('CFG', 'balanced', 'parenthesis'), ('balanced', 'parenthesis', 'S\uf0e0'), ('parenthesis', 'S\uf0e0', '['), ('S\uf0e0', '[', ']'), ('[', ']', '|'), (']', '|', '{'), ('|', '{', '}'), ('{', '}', '|'), ('}', '|', '['), ('|', '[', ']'), ('[', ']', '|'), (']', '|', '{'), ('|', '{', '}'), ('{', '}', '|'), ('}', '|', '^'), ('|', '^', 'Unit'), ('^', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'Write'), ('Examples', 'Write', 'CFG'), ('Write', 'CFG', 'contains'), ('CFG', 'contains', 'least'), ('contains', 'least', 'three'), ('least', 'three', 'times'), ('three', 'times', '1'), ('times', '1', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('either', 'CC'), ('b', 'NN'), ('S\uf0e0a', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('Write', 'NNP'), ('CFG', 'NNP'), ('a+', 'RB'), ('S\uf0e0', 'NNP'), ('aS', 'IN'), ('|', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('*', 'NNP'), ('S\uf0e0', 'NNP'), ('aS', 'IN'), ('|', 'NNP'), ('^', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('(', '('), ('ab', 'NN'), (')', ')'), ('*', 'VBZ'), ('S\uf0e0abS', 'NNP'), ('|', 'NNP'), ('^', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('string', 'NN'), ('b', 'NN'), ('S\uf0e0', 'NNP'), ('aS', 'IN'), ('|', 'NNP'), ('bS', 'NN'), ('|', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('ab', 'VBZ'), ('*', 'NNP'), ('S\uf0e0aX', 'NNP'), ('X\uf0e0˄|', 'NNP'), ('bX', 'VBZ'), ('Write', 'NNP'), ('CFG', 'NNP'), ('*', 'NNP'), ('b', 'NN'), ('*', 'NNP'), ('S\uf0e0XY', 'NNP'), ('X\uf0e0aX|˄', 'NNP'), ('Y\uf0e0bY|˄', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('(', '('), ('a+b', 'NN'), (')', ')'), ('*', 'VBZ'), ('S\uf0e0aS', 'NNP'), ('|', 'NNP'), ('bS', 'NN'), ('|', 'NNP'), ('^', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('(', '('), ('a+b', 'NN'), (')', ')'), ('*', 'VBZ'), ('S\uf0e0aX', 'NNP'), ('X\uf0e0aX', 'NNP'), ('|', 'NNP'), ('bX', 'NN'), ('|', 'NNP'), ('^', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('*', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('*', 'NNP'), ('S\uf0e0A', 'NNP'), ('|', 'NNP'), ('B', 'NNP'), ('A\uf0e0˄|', 'NNP'), ('aA', 'NN'), ('B\uf0e0^', 'NNP'), ('|bB', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('(', '('), ('011+1', 'CD'), (')', ')'), ('*', 'NN'), ('(', '('), ('01', 'CD'), (')', ')'), ('*', 'NN'), ('S\uf0e0AB', 'NNP'), ('A\uf0e0011A', 'NNP'), ('|', 'VBD'), ('1A', 'CD'), ('|', 'NNP'), ('^', 'NNP'), ('B\uf0e001B', 'NNP'), ('|', 'NNP'), ('^', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('balanced', 'VBD'), ('parenthesis', 'NN'), ('S\uf0e0', 'NNP'), ('[', 'NNP'), (']', 'NNP'), ('|', 'NNP'), ('{', '('), ('}', ')'), ('|', 'NNP'), ('[', 'NNP'), (']', 'NNP'), ('|', 'NNP'), ('{', '('), ('}', ')'), ('|', 'VBP'), ('^', 'JJ'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('contains', 'VBZ'), ('least', 'JJS'), ('three', 'CD'), ('times', 'NNS'), ('1', 'CD'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP CFG/NNP Examples/NNP Write/NNP CFG/NNP)
  either/CC
  (NP b/NN Sa/NNP |/NNP b/NN Write/NNP CFG/NNP)
  a+/RB
  (NP S/NNP)
  aS/IN
  (NP |/NNP Write/NNP CFG/NNP */NNP S/NNP)
  aS/IN
  (NP |/NNP ^/NNP Write/NNP CFG/NNP)
  (/(
  (NP ab/NN)
  )/)
  */VBZ
  (NP SabS/NNP |/NNP ^/NNP Write/NNP CFG/NNP string/NN b/NN S/NNP)
  aS/IN
  (NP |/NNP bS/NN |/NNP |/NNP b/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP CFG/NNP Examples/NNP Write/NNP CFG/NNP)
  ab/VBZ
  (NP */NNP SaX/NNP X˄|/NNP)
  bX/VBZ
  (NP
    Write/NNP
    CFG/NNP
    */NNP
    b/NN
    */NNP
    SXY/NNP
    XaX|˄/NNP
    YbY|˄/NNP
    Write/NNP
    CFG/NNP)
  (/(
  (NP a+b/NN)
  )/)
  */VBZ
  (NP SaS/NNP |/NNP bS/NN |/NNP ^/NNP Write/NNP CFG/NNP)
  (/(
  (NP a+b/NN)
  )/)
  */VBZ
  (NP SaX/NNP XaX/NNP |/NNP bX/NN |/NNP ^/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    CFG/NNP
    Examples/NNP
    Write/NNP
    CFG/NNP
    */NNP
    |/NNP
    b/NN
    */NNP
    SA/NNP
    |/NNP
    B/NNP
    A˄|/NNP
    aA/NN
    B^/NNP
    |bB/NNP
    Write/NNP
    CFG/NNP)
  (/(
  011+1/CD
  )/)
  (NP */NN)
  (/(
  01/CD
  )/)
  (NP */NN SAB/NNP A011A/NNP)
  |/VBD
  1A/CD
  (NP |/NNP ^/NNP B01B/NNP |/NNP ^/NNP Write/NNP CFG/NNP)
  balanced/VBD
  (NP parenthesis/NN S/NNP [/NNP ]/NNP |/NNP)
  {/(
  }/)
  (NP |/NNP [/NNP ]/NNP |/NNP)
  {/(
  }/)
  |/VBP
  (NP ^/JJ Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP CFG/NNP Examples/NNP Write/NNP CFG/NNP)
  contains/VBZ
  least/JJS
  three/CD
  (NP times/NNS)
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples Write CFG', 'b S\uf0e0a | b Write CFG', 'S\uf0e0', '| Write CFG * S\uf0e0', '| ^ Write CFG', 'ab', 'S\uf0e0abS | ^ Write CFG string b S\uf0e0', '| bS | | b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples Write CFG', '* S\uf0e0aX X\uf0e0˄|', 'Write CFG * b * S\uf0e0XY X\uf0e0aX|˄ Y\uf0e0bY|˄ Write CFG', 'a+b', 'S\uf0e0aS | bS | ^ Write CFG', 'a+b', 'S\uf0e0aX X\uf0e0aX | bX | ^ Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples Write CFG * | b * S\uf0e0A | B A\uf0e0˄| aA B\uf0e0^ |bB Write CFG', '*', '* S\uf0e0AB A\uf0e0011A', '| ^ B\uf0e001B | ^ Write CFG', 'parenthesis S\uf0e0 [ ] |', '| [ ] |', '^ Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples Write CFG', 'times']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples Write'), ('PERSON', 'Write CFG'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples Write'), ('PERSON', 'Write CFG'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples Write'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples Write')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('either', 'either'), ('b', 'b'), ('S\uf0e0a', 's\uf0e0a'), ('|', '|'), ('b', 'b'), ('Write', 'write'), ('CFG', 'cfg'), ('a+', 'a+'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('Write', 'write'), ('CFG', 'cfg'), ('*', '*'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('ab', 'ab'), (')', ')'), ('*', '*'), ('S\uf0e0abS', 's\uf0e0ab'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('string', 'string'), ('b', 'b'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('bS', 'bs'), ('|', '|'), ('|', '|'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('ab', 'ab'), ('*', '*'), ('S\uf0e0aX', 's\uf0e0ax'), ('X\uf0e0˄|', 'x\uf0e0˄|'), ('bX', 'bx'), ('Write', 'write'), ('CFG', 'cfg'), ('*', '*'), ('b', 'b'), ('*', '*'), ('S\uf0e0XY', 's\uf0e0xi'), ('X\uf0e0aX|˄', 'x\uf0e0ax|˄'), ('Y\uf0e0bY|˄', 'y\uf0e0by|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0aS', 's\uf0e0a'), ('|', '|'), ('bS', 'bs'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0aX', 's\uf0e0ax'), ('X\uf0e0aX', 'x\uf0e0ax'), ('|', '|'), ('bX', 'bx'), ('|', '|'), ('^', '^'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('*', '*'), ('|', '|'), ('b', 'b'), ('*', '*'), ('S\uf0e0A', 's\uf0e0a'), ('|', '|'), ('B', 'b'), ('A\uf0e0˄|', 'a\uf0e0˄|'), ('aA', 'aa'), ('B\uf0e0^', 'b\uf0e0^'), ('|bB', '|bb'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('011+1', '011+1'), (')', ')'), ('*', '*'), ('(', '('), ('01', '01'), (')', ')'), ('*', '*'), ('S\uf0e0AB', 's\uf0e0ab'), ('A\uf0e0011A', 'a\uf0e0011a'), ('|', '|'), ('1A', '1a'), ('|', '|'), ('^', '^'), ('B\uf0e001B', 'b\uf0e001b'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('balanced', 'balanc'), ('parenthesis', 'parenthesi'), ('S\uf0e0', 's\uf0e0'), ('[', '['), (']', ']'), ('|', '|'), ('{', '{'), ('}', '}'), ('|', '|'), ('[', '['), (']', ']'), ('|', '|'), ('{', '{'), ('}', '}'), ('|', '|'), ('^', '^'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('contains', 'contain'), ('least', 'least'), ('three', 'three'), ('times', 'time'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('either', 'either'), ('b', 'b'), ('S\uf0e0a', 's\uf0e0a'), ('|', '|'), ('b', 'b'), ('Write', 'write'), ('CFG', 'cfg'), ('a+', 'a+'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('Write', 'write'), ('CFG', 'cfg'), ('*', '*'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('ab', 'ab'), (')', ')'), ('*', '*'), ('S\uf0e0abS', 's\uf0e0ab'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('string', 'string'), ('b', 'b'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('bS', 'bs'), ('|', '|'), ('|', '|'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('ab', 'ab'), ('*', '*'), ('S\uf0e0aX', 's\uf0e0ax'), ('X\uf0e0˄|', 'x\uf0e0˄|'), ('bX', 'bx'), ('Write', 'write'), ('CFG', 'cfg'), ('*', '*'), ('b', 'b'), ('*', '*'), ('S\uf0e0XY', 's\uf0e0xi'), ('X\uf0e0aX|˄', 'x\uf0e0ax|˄'), ('Y\uf0e0bY|˄', 'y\uf0e0by|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0aS', 's\uf0e0as'), ('|', '|'), ('bS', 'bs'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0aX', 's\uf0e0ax'), ('X\uf0e0aX', 'x\uf0e0ax'), ('|', '|'), ('bX', 'bx'), ('|', '|'), ('^', '^'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('*', '*'), ('|', '|'), ('b', 'b'), ('*', '*'), ('S\uf0e0A', 's\uf0e0a'), ('|', '|'), ('B', 'b'), ('A\uf0e0˄|', 'a\uf0e0˄|'), ('aA', 'aa'), ('B\uf0e0^', 'b\uf0e0^'), ('|bB', '|bb'), ('Write', 'write'), ('CFG', 'cfg'), ('(', '('), ('011+1', '011+1'), (')', ')'), ('*', '*'), ('(', '('), ('01', '01'), (')', ')'), ('*', '*'), ('S\uf0e0AB', 's\uf0e0ab'), ('A\uf0e0011A', 'a\uf0e0011a'), ('|', '|'), ('1A', '1a'), ('|', '|'), ('^', '^'), ('B\uf0e001B', 'b\uf0e001b'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('balanced', 'balanc'), ('parenthesis', 'parenthesi'), ('S\uf0e0', 's\uf0e0'), ('[', '['), (']', ']'), ('|', '|'), ('{', '{'), ('}', '}'), ('|', '|'), ('[', '['), (']', ']'), ('|', '|'), ('{', '{'), ('}', '}'), ('|', '|'), ('^', '^'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('contains', 'contain'), ('least', 'least'), ('three', 'three'), ('times', 'time'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('Write', 'Write'), ('CFG', 'CFG'), ('either', 'either'), ('b', 'b'), ('S\uf0e0a', 'S\uf0e0a'), ('|', '|'), ('b', 'b'), ('Write', 'Write'), ('CFG', 'CFG'), ('a+', 'a+'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'aS'), ('|', '|'), ('Write', 'Write'), ('CFG', 'CFG'), ('*', '*'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'aS'), ('|', '|'), ('^', '^'), ('Write', 'Write'), ('CFG', 'CFG'), ('(', '('), ('ab', 'ab'), (')', ')'), ('*', '*'), ('S\uf0e0abS', 'S\uf0e0abS'), ('|', '|'), ('^', '^'), ('Write', 'Write'), ('CFG', 'CFG'), ('string', 'string'), ('b', 'b'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'aS'), ('|', '|'), ('bS', 'bS'), ('|', '|'), ('|', '|'), ('b', 'b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('Write', 'Write'), ('CFG', 'CFG'), ('ab', 'ab'), ('*', '*'), ('S\uf0e0aX', 'S\uf0e0aX'), ('X\uf0e0˄|', 'X\uf0e0˄|'), ('bX', 'bX'), ('Write', 'Write'), ('CFG', 'CFG'), ('*', '*'), ('b', 'b'), ('*', '*'), ('S\uf0e0XY', 'S\uf0e0XY'), ('X\uf0e0aX|˄', 'X\uf0e0aX|˄'), ('Y\uf0e0bY|˄', 'Y\uf0e0bY|˄'), ('Write', 'Write'), ('CFG', 'CFG'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0aS', 'S\uf0e0aS'), ('|', '|'), ('bS', 'bS'), ('|', '|'), ('^', '^'), ('Write', 'Write'), ('CFG', 'CFG'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0aX', 'S\uf0e0aX'), ('X\uf0e0aX', 'X\uf0e0aX'), ('|', '|'), ('bX', 'bX'), ('|', '|'), ('^', '^'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('Write', 'Write'), ('CFG', 'CFG'), ('*', '*'), ('|', '|'), ('b', 'b'), ('*', '*'), ('S\uf0e0A', 'S\uf0e0A'), ('|', '|'), ('B', 'B'), ('A\uf0e0˄|', 'A\uf0e0˄|'), ('aA', 'aA'), ('B\uf0e0^', 'B\uf0e0^'), ('|bB', '|bB'), ('Write', 'Write'), ('CFG', 'CFG'), ('(', '('), ('011+1', '011+1'), (')', ')'), ('*', '*'), ('(', '('), ('01', '01'), (')', ')'), ('*', '*'), ('S\uf0e0AB', 'S\uf0e0AB'), ('A\uf0e0011A', 'A\uf0e0011A'), ('|', '|'), ('1A', '1A'), ('|', '|'), ('^', '^'), ('B\uf0e001B', 'B\uf0e001B'), ('|', '|'), ('^', '^'), ('Write', 'Write'), ('CFG', 'CFG'), ('balanced', 'balanced'), ('parenthesis', 'parenthesis'), ('S\uf0e0', 'S\uf0e0'), ('[', '['), (']', ']'), ('|', '|'), ('{', '{'), ('}', '}'), ('|', '|'), ('[', '['), (']', ']'), ('|', '|'), ('{', '{'), ('}', '}'), ('|', '|'), ('^', '^'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('Write', 'Write'), ('CFG', 'CFG'), ('contains', 'contains'), ('least', 'least'), ('three', 'three'), ('times', 'time'), ('1', '1'), ('.', '.')]



============================ Sentence 13 =============================

SA1A1A1A 	A0A | 1A | ^ Write CFG that must start and end with same symbol. 


>> Tokens are: 
 ['S\uf0e0A1A1A1A', 'A\uf0e00A', '|', '1A', '|', '^', 'Write', 'CFG', 'must', 'start', 'end', 'symbol', '.']

>> Bigrams are: 
 [('S\uf0e0A1A1A1A', 'A\uf0e00A'), ('A\uf0e00A', '|'), ('|', '1A'), ('1A', '|'), ('|', '^'), ('^', 'Write'), ('Write', 'CFG'), ('CFG', 'must'), ('must', 'start'), ('start', 'end'), ('end', 'symbol'), ('symbol', '.')]

>> Trigrams are: 
 [('S\uf0e0A1A1A1A', 'A\uf0e00A', '|'), ('A\uf0e00A', '|', '1A'), ('|', '1A', '|'), ('1A', '|', '^'), ('|', '^', 'Write'), ('^', 'Write', 'CFG'), ('Write', 'CFG', 'must'), ('CFG', 'must', 'start'), ('must', 'start', 'end'), ('start', 'end', 'symbol'), ('end', 'symbol', '.')]

>> POS Tags are: 
 [('S\uf0e0A1A1A1A', 'NNP'), ('A\uf0e00A', 'NNP'), ('|', 'VBD'), ('1A', 'CD'), ('|', 'NNP'), ('^', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('must', 'MD'), ('start', 'VB'), ('end', 'VB'), ('symbol', 'NN'), ('.', '.')]

 (S
  (NP SA1A1A1A/NNP A0A/NNP)
  |/VBD
  1A/CD
  (NP |/NNP ^/NNP Write/NNP CFG/NNP)
  must/MD
  start/VB
  end/VB
  (NP symbol/NN)
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e0A1A1A1A A\uf0e00A', '| ^ Write CFG', 'symbol']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e0A1A1A1A', 's\uf0e0a1a1a1a'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('1A', '1a'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('must', 'must'), ('start', 'start'), ('end', 'end'), ('symbol', 'symbol'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e0A1A1A1A', 's\uf0e0a1a1a1a'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('1A', '1a'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('must', 'must'), ('start', 'start'), ('end', 'end'), ('symbol', 'symbol'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e0A1A1A1A', 'S\uf0e0A1A1A1A'), ('A\uf0e00A', 'A\uf0e00A'), ('|', '|'), ('1A', '1A'), ('|', '|'), ('^', '^'), ('Write', 'Write'), ('CFG', 'CFG'), ('must', 'must'), ('start', 'start'), ('end', 'end'), ('symbol', 'symbol'), ('.', '.')]



============================ Sentence 14 =============================

S0A0 | 1A1  	A0A | 1A | ^ The language of even & odd length palindrome string over {a,b} 	SaSa|bSb|a|b|˄ No. 


>> Tokens are: 
 ['S\uf0e00A0', '|', '1A1', 'A\uf0e00A', '|', '1A', '|', '^', 'The', 'language', 'even', '&', 'odd', 'length', 'palindrome', 'string', '{', ',', 'b', '}', 'S\uf0e0aSa|bSb|a|b|˄', 'No', '.']

>> Bigrams are: 
 [('S\uf0e00A0', '|'), ('|', '1A1'), ('1A1', 'A\uf0e00A'), ('A\uf0e00A', '|'), ('|', '1A'), ('1A', '|'), ('|', '^'), ('^', 'The'), ('The', 'language'), ('language', 'even'), ('even', '&'), ('&', 'odd'), ('odd', 'length'), ('length', 'palindrome'), ('palindrome', 'string'), ('string', '{'), ('{', ','), (',', 'b'), ('b', '}'), ('}', 'S\uf0e0aSa|bSb|a|b|˄'), ('S\uf0e0aSa|bSb|a|b|˄', 'No'), ('No', '.')]

>> Trigrams are: 
 [('S\uf0e00A0', '|', '1A1'), ('|', '1A1', 'A\uf0e00A'), ('1A1', 'A\uf0e00A', '|'), ('A\uf0e00A', '|', '1A'), ('|', '1A', '|'), ('1A', '|', '^'), ('|', '^', 'The'), ('^', 'The', 'language'), ('The', 'language', 'even'), ('language', 'even', '&'), ('even', '&', 'odd'), ('&', 'odd', 'length'), ('odd', 'length', 'palindrome'), ('length', 'palindrome', 'string'), ('palindrome', 'string', '{'), ('string', '{', ','), ('{', ',', 'b'), (',', 'b', '}'), ('b', '}', 'S\uf0e0aSa|bSb|a|b|˄'), ('}', 'S\uf0e0aSa|bSb|a|b|˄', 'No'), ('S\uf0e0aSa|bSb|a|b|˄', 'No', '.')]

>> POS Tags are: 
 [('S\uf0e00A0', 'NNP'), ('|', 'VBD'), ('1A1', 'CD'), ('A\uf0e00A', 'NNP'), ('|', 'VBD'), ('1A', 'CD'), ('|', 'NNP'), ('^', 'VBD'), ('The', 'DT'), ('language', 'NN'), ('even', 'RB'), ('&', 'CC'), ('odd', 'JJ'), ('length', 'NN'), ('palindrome', 'NN'), ('string', 'VBG'), ('{', '('), (',', ','), ('b', 'VB'), ('}', ')'), ('S\uf0e0aSa|bSb|a|b|˄', 'NNP'), ('No', 'NNP'), ('.', '.')]

 (S
  (NP S0A0/NNP)
  |/VBD
  1A1/CD
  (NP A0A/NNP)
  |/VBD
  1A/CD
  (NP |/NNP)
  ^/VBD
  (NP The/DT language/NN)
  even/RB
  &/CC
  (NP odd/JJ length/NN palindrome/NN)
  string/VBG
  {/(
  ,/,
  b/VB
  }/)
  (NP SaSa|bSb|a|b|˄/NNP No/NNP)
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e00A0', 'A\uf0e00A', '|', 'The language', 'odd length palindrome', 'S\uf0e0aSa|bSb|a|b|˄ No']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e00A0', 's\uf0e00a0'), ('|', '|'), ('1A1', '1a1'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('1A', '1a'), ('|', '|'), ('^', '^'), ('The', 'the'), ('language', 'languag'), ('even', 'even'), ('&', '&'), ('odd', 'odd'), ('length', 'length'), ('palindrome', 'palindrom'), ('string', 'string'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('S\uf0e0aSa|bSb|a|b|˄', 's\uf0e0asa|bsb|a|b|˄'), ('No', 'no'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e00A0', 's\uf0e00a0'), ('|', '|'), ('1A1', '1a1'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('1A', '1a'), ('|', '|'), ('^', '^'), ('The', 'the'), ('language', 'languag'), ('even', 'even'), ('&', '&'), ('odd', 'odd'), ('length', 'length'), ('palindrome', 'palindrom'), ('string', 'string'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('S\uf0e0aSa|bSb|a|b|˄', 's\uf0e0asa|bsb|a|b|˄'), ('No', 'no'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e00A0', 'S\uf0e00A0'), ('|', '|'), ('1A1', '1A1'), ('A\uf0e00A', 'A\uf0e00A'), ('|', '|'), ('1A', '1A'), ('|', '|'), ('^', '^'), ('The', 'The'), ('language', 'language'), ('even', 'even'), ('&', '&'), ('odd', 'odd'), ('length', 'length'), ('palindrome', 'palindrome'), ('string', 'string'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('S\uf0e0aSa|bSb|a|b|˄', 'S\uf0e0aSa|bSb|a|b|˄'), ('No', 'No'), ('.', '.')]



============================ Sentence 15 =============================

of a and no. 


>> Tokens are: 
 ['.']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('.', '.')]

 (S ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.')]

>> Lemmatization: 
 [('.', '.')]



============================ Sentence 16 =============================

of b are same 	SaSb|bSa|˄ The language of {a, b} ends in a 	SaS | bS |a  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for regular expression (a+b)*a(a+b)*a(a+b)* 	SXaXaX 	XaX|bX|˄ Write CFG for number of 0’s and 1’s are same (n0(x)=n1(x)) 	S0S1 | 1S0 | ^ Write CFG for L={aibjck | i=j or j=k}  	For i=j				for j=k 	SAB				SCD 	AaAb | ab			CaC | a 	BcB | c			DbDc | bc  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for L={ aibjck | j>i+k}  	SABC 	AaAb |˄ 	BbB | b 	CbCc |˄ Write CFG for L={ 0i1j0k | j>i+k}  	SABC 	A0A1 |˄ 	B1B | 1 	C1C0 |˄ Write CFG for the language of Algebraic expressions 	SS+S | S*S | S-S | S/S | (S) | a  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples CFG for syntax of programming language <statement>  … | <if-statement> | <for-statement> | … <if-statement>  if ( <expression> ) <statement> <for-statement>  for ( <expression>; <expression>; <expression> ) <statement>  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Recursive Definitions    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Recursive Definitions  Recursive Definition of {a,b}* 	˄∈L. 


>> Tokens are: 
 ['b', 'S\uf0e0aSb|bSa|˄', 'The', 'language', '{', ',', 'b', '}', 'ends', 'S\uf0e0aS', '|', 'bS', '|a', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'Write', 'CFG', 'regular', 'expression', '(', 'a+b', ')', '*', '(', 'a+b', ')', '*', '(', 'a+b', ')', '*', 'S\uf0e0XaXaX', 'X\uf0e0aX|bX|˄', 'Write', 'CFG', 'number', '0', '’', '1', '’', '(', 'n0', '(', 'x', ')', '=n1', '(', 'x', ')', ')', 'S\uf0e00S1', '|', '1S0', '|', '^', 'Write', 'CFG', 'L=', '{', 'aibjck', '|', 'i=j', 'j=k', '}', 'For', 'i=j', 'j=k', 'S\uf0e0AB', 'S\uf0e0CD', 'A\uf0e0aAb', '|', 'ab', 'C\uf0e0aC', '|', 'B\uf0e0cB', '|', 'c', 'D\uf0e0bDc', '|', 'bc', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'Write', 'CFG', 'L=', '{', 'aibjck', '|', 'j', '>', 'i+k', '}', 'S\uf0e0ABC', 'A\uf0e0aAb', '|˄', 'B\uf0e0bB', '|', 'b', 'C\uf0e0bCc', '|˄', 'Write', 'CFG', 'L=', '{', '0i1j0k', '|', 'j', '>', 'i+k', '}', 'S\uf0e0ABC', 'A\uf0e00A1', '|˄', 'B\uf0e01B', '|', '1', 'C\uf0e01C0', '|˄', 'Write', 'CFG', 'language', 'Algebraic', 'expressions', 'S\uf0e0S+S', '|', 'S', '*', 'S', '|', 'S-S', '|', 'S/S', '|', '(', 'S', ')', '|', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'Examples', 'CFG', 'syntax', 'programming', 'language', '<', 'statement', '>', '…', '|', '<', 'if-statement', '>', '|', '<', 'for-statement', '>', '|', '…', '<', 'if-statement', '>', '(', '<', 'expression', '>', ')', '<', 'statement', '>', '<', 'for-statement', '>', '(', '<', 'expression', '>', ';', '<', 'expression', '>', ';', '<', 'expression', '>', ')', '<', 'statement', '>', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Recursive', 'Definitions', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Recursive', 'Definitions', 'Recursive', 'Definition', '{', ',', 'b', '}', '*', '˄∈L', '.']

>> Bigrams are: 
 [('b', 'S\uf0e0aSb|bSa|˄'), ('S\uf0e0aSb|bSa|˄', 'The'), ('The', 'language'), ('language', '{'), ('{', ','), (',', 'b'), ('b', '}'), ('}', 'ends'), ('ends', 'S\uf0e0aS'), ('S\uf0e0aS', '|'), ('|', 'bS'), ('bS', '|a'), ('|a', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'Write'), ('Write', 'CFG'), ('CFG', 'regular'), ('regular', 'expression'), ('expression', '('), ('(', 'a+b'), ('a+b', ')'), (')', '*'), ('*', '('), ('(', 'a+b'), ('a+b', ')'), (')', '*'), ('*', '('), ('(', 'a+b'), ('a+b', ')'), (')', '*'), ('*', 'S\uf0e0XaXaX'), ('S\uf0e0XaXaX', 'X\uf0e0aX|bX|˄'), ('X\uf0e0aX|bX|˄', 'Write'), ('Write', 'CFG'), ('CFG', 'number'), ('number', '0'), ('0', '’'), ('’', '1'), ('1', '’'), ('’', '('), ('(', 'n0'), ('n0', '('), ('(', 'x'), ('x', ')'), (')', '=n1'), ('=n1', '('), ('(', 'x'), ('x', ')'), (')', ')'), (')', 'S\uf0e00S1'), ('S\uf0e00S1', '|'), ('|', '1S0'), ('1S0', '|'), ('|', '^'), ('^', 'Write'), ('Write', 'CFG'), ('CFG', 'L='), ('L=', '{'), ('{', 'aibjck'), ('aibjck', '|'), ('|', 'i=j'), ('i=j', 'j=k'), ('j=k', '}'), ('}', 'For'), ('For', 'i=j'), ('i=j', 'j=k'), ('j=k', 'S\uf0e0AB'), ('S\uf0e0AB', 'S\uf0e0CD'), ('S\uf0e0CD', 'A\uf0e0aAb'), ('A\uf0e0aAb', '|'), ('|', 'ab'), ('ab', 'C\uf0e0aC'), ('C\uf0e0aC', '|'), ('|', 'B\uf0e0cB'), ('B\uf0e0cB', '|'), ('|', 'c'), ('c', 'D\uf0e0bDc'), ('D\uf0e0bDc', '|'), ('|', 'bc'), ('bc', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'Write'), ('Write', 'CFG'), ('CFG', 'L='), ('L=', '{'), ('{', 'aibjck'), ('aibjck', '|'), ('|', 'j'), ('j', '>'), ('>', 'i+k'), ('i+k', '}'), ('}', 'S\uf0e0ABC'), ('S\uf0e0ABC', 'A\uf0e0aAb'), ('A\uf0e0aAb', '|˄'), ('|˄', 'B\uf0e0bB'), ('B\uf0e0bB', '|'), ('|', 'b'), ('b', 'C\uf0e0bCc'), ('C\uf0e0bCc', '|˄'), ('|˄', 'Write'), ('Write', 'CFG'), ('CFG', 'L='), ('L=', '{'), ('{', '0i1j0k'), ('0i1j0k', '|'), ('|', 'j'), ('j', '>'), ('>', 'i+k'), ('i+k', '}'), ('}', 'S\uf0e0ABC'), ('S\uf0e0ABC', 'A\uf0e00A1'), ('A\uf0e00A1', '|˄'), ('|˄', 'B\uf0e01B'), ('B\uf0e01B', '|'), ('|', '1'), ('1', 'C\uf0e01C0'), ('C\uf0e01C0', '|˄'), ('|˄', 'Write'), ('Write', 'CFG'), ('CFG', 'language'), ('language', 'Algebraic'), ('Algebraic', 'expressions'), ('expressions', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', 'S-S'), ('S-S', '|'), ('|', 'S/S'), ('S/S', '|'), ('|', '('), ('(', 'S'), ('S', ')'), (')', '|'), ('|', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'Examples'), ('Examples', 'CFG'), ('CFG', 'syntax'), ('syntax', 'programming'), ('programming', 'language'), ('language', '<'), ('<', 'statement'), ('statement', '>'), ('>', '…'), ('…', '|'), ('|', '<'), ('<', 'if-statement'), ('if-statement', '>'), ('>', '|'), ('|', '<'), ('<', 'for-statement'), ('for-statement', '>'), ('>', '|'), ('|', '…'), ('…', '<'), ('<', 'if-statement'), ('if-statement', '>'), ('>', '('), ('(', '<'), ('<', 'expression'), ('expression', '>'), ('>', ')'), (')', '<'), ('<', 'statement'), ('statement', '>'), ('>', '<'), ('<', 'for-statement'), ('for-statement', '>'), ('>', '('), ('(', '<'), ('<', 'expression'), ('expression', '>'), ('>', ';'), (';', '<'), ('<', 'expression'), ('expression', '>'), ('>', ';'), (';', '<'), ('<', 'expression'), ('expression', '>'), ('>', ')'), (')', '<'), ('<', 'statement'), ('statement', '>'), ('>', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Recursive'), ('Recursive', 'Definitions'), ('Definitions', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Recursive'), ('Recursive', 'Definitions'), ('Definitions', 'Recursive'), ('Recursive', 'Definition'), ('Definition', '{'), ('{', ','), (',', 'b'), ('b', '}'), ('}', '*'), ('*', '˄∈L'), ('˄∈L', '.')]

>> Trigrams are: 
 [('b', 'S\uf0e0aSb|bSa|˄', 'The'), ('S\uf0e0aSb|bSa|˄', 'The', 'language'), ('The', 'language', '{'), ('language', '{', ','), ('{', ',', 'b'), (',', 'b', '}'), ('b', '}', 'ends'), ('}', 'ends', 'S\uf0e0aS'), ('ends', 'S\uf0e0aS', '|'), ('S\uf0e0aS', '|', 'bS'), ('|', 'bS', '|a'), ('bS', '|a', 'Unit'), ('|a', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'Write'), ('Examples', 'Write', 'CFG'), ('Write', 'CFG', 'regular'), ('CFG', 'regular', 'expression'), ('regular', 'expression', '('), ('expression', '(', 'a+b'), ('(', 'a+b', ')'), ('a+b', ')', '*'), (')', '*', '('), ('*', '(', 'a+b'), ('(', 'a+b', ')'), ('a+b', ')', '*'), (')', '*', '('), ('*', '(', 'a+b'), ('(', 'a+b', ')'), ('a+b', ')', '*'), (')', '*', 'S\uf0e0XaXaX'), ('*', 'S\uf0e0XaXaX', 'X\uf0e0aX|bX|˄'), ('S\uf0e0XaXaX', 'X\uf0e0aX|bX|˄', 'Write'), ('X\uf0e0aX|bX|˄', 'Write', 'CFG'), ('Write', 'CFG', 'number'), ('CFG', 'number', '0'), ('number', '0', '’'), ('0', '’', '1'), ('’', '1', '’'), ('1', '’', '('), ('’', '(', 'n0'), ('(', 'n0', '('), ('n0', '(', 'x'), ('(', 'x', ')'), ('x', ')', '=n1'), (')', '=n1', '('), ('=n1', '(', 'x'), ('(', 'x', ')'), ('x', ')', ')'), (')', ')', 'S\uf0e00S1'), (')', 'S\uf0e00S1', '|'), ('S\uf0e00S1', '|', '1S0'), ('|', '1S0', '|'), ('1S0', '|', '^'), ('|', '^', 'Write'), ('^', 'Write', 'CFG'), ('Write', 'CFG', 'L='), ('CFG', 'L=', '{'), ('L=', '{', 'aibjck'), ('{', 'aibjck', '|'), ('aibjck', '|', 'i=j'), ('|', 'i=j', 'j=k'), ('i=j', 'j=k', '}'), ('j=k', '}', 'For'), ('}', 'For', 'i=j'), ('For', 'i=j', 'j=k'), ('i=j', 'j=k', 'S\uf0e0AB'), ('j=k', 'S\uf0e0AB', 'S\uf0e0CD'), ('S\uf0e0AB', 'S\uf0e0CD', 'A\uf0e0aAb'), ('S\uf0e0CD', 'A\uf0e0aAb', '|'), ('A\uf0e0aAb', '|', 'ab'), ('|', 'ab', 'C\uf0e0aC'), ('ab', 'C\uf0e0aC', '|'), ('C\uf0e0aC', '|', 'B\uf0e0cB'), ('|', 'B\uf0e0cB', '|'), ('B\uf0e0cB', '|', 'c'), ('|', 'c', 'D\uf0e0bDc'), ('c', 'D\uf0e0bDc', '|'), ('D\uf0e0bDc', '|', 'bc'), ('|', 'bc', 'Unit'), ('bc', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'Write'), ('Examples', 'Write', 'CFG'), ('Write', 'CFG', 'L='), ('CFG', 'L=', '{'), ('L=', '{', 'aibjck'), ('{', 'aibjck', '|'), ('aibjck', '|', 'j'), ('|', 'j', '>'), ('j', '>', 'i+k'), ('>', 'i+k', '}'), ('i+k', '}', 'S\uf0e0ABC'), ('}', 'S\uf0e0ABC', 'A\uf0e0aAb'), ('S\uf0e0ABC', 'A\uf0e0aAb', '|˄'), ('A\uf0e0aAb', '|˄', 'B\uf0e0bB'), ('|˄', 'B\uf0e0bB', '|'), ('B\uf0e0bB', '|', 'b'), ('|', 'b', 'C\uf0e0bCc'), ('b', 'C\uf0e0bCc', '|˄'), ('C\uf0e0bCc', '|˄', 'Write'), ('|˄', 'Write', 'CFG'), ('Write', 'CFG', 'L='), ('CFG', 'L=', '{'), ('L=', '{', '0i1j0k'), ('{', '0i1j0k', '|'), ('0i1j0k', '|', 'j'), ('|', 'j', '>'), ('j', '>', 'i+k'), ('>', 'i+k', '}'), ('i+k', '}', 'S\uf0e0ABC'), ('}', 'S\uf0e0ABC', 'A\uf0e00A1'), ('S\uf0e0ABC', 'A\uf0e00A1', '|˄'), ('A\uf0e00A1', '|˄', 'B\uf0e01B'), ('|˄', 'B\uf0e01B', '|'), ('B\uf0e01B', '|', '1'), ('|', '1', 'C\uf0e01C0'), ('1', 'C\uf0e01C0', '|˄'), ('C\uf0e01C0', '|˄', 'Write'), ('|˄', 'Write', 'CFG'), ('Write', 'CFG', 'language'), ('CFG', 'language', 'Algebraic'), ('language', 'Algebraic', 'expressions'), ('Algebraic', 'expressions', 'S\uf0e0S+S'), ('expressions', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', 'S-S'), ('|', 'S-S', '|'), ('S-S', '|', 'S/S'), ('|', 'S/S', '|'), ('S/S', '|', '('), ('|', '(', 'S'), ('(', 'S', ')'), ('S', ')', '|'), (')', '|', 'Unit'), ('|', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'Examples'), ('CFG', 'Examples', 'CFG'), ('Examples', 'CFG', 'syntax'), ('CFG', 'syntax', 'programming'), ('syntax', 'programming', 'language'), ('programming', 'language', '<'), ('language', '<', 'statement'), ('<', 'statement', '>'), ('statement', '>', '…'), ('>', '…', '|'), ('…', '|', '<'), ('|', '<', 'if-statement'), ('<', 'if-statement', '>'), ('if-statement', '>', '|'), ('>', '|', '<'), ('|', '<', 'for-statement'), ('<', 'for-statement', '>'), ('for-statement', '>', '|'), ('>', '|', '…'), ('|', '…', '<'), ('…', '<', 'if-statement'), ('<', 'if-statement', '>'), ('if-statement', '>', '('), ('>', '(', '<'), ('(', '<', 'expression'), ('<', 'expression', '>'), ('expression', '>', ')'), ('>', ')', '<'), (')', '<', 'statement'), ('<', 'statement', '>'), ('statement', '>', '<'), ('>', '<', 'for-statement'), ('<', 'for-statement', '>'), ('for-statement', '>', '('), ('>', '(', '<'), ('(', '<', 'expression'), ('<', 'expression', '>'), ('expression', '>', ';'), ('>', ';', '<'), (';', '<', 'expression'), ('<', 'expression', '>'), ('expression', '>', ';'), ('>', ';', '<'), (';', '<', 'expression'), ('<', 'expression', '>'), ('expression', '>', ')'), ('>', ')', '<'), (')', '<', 'statement'), ('<', 'statement', '>'), ('statement', '>', 'Unit'), ('>', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Recursive'), ('›', 'Recursive', 'Definitions'), ('Recursive', 'Definitions', 'Unit'), ('Definitions', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Recursive'), ('›', 'Recursive', 'Definitions'), ('Recursive', 'Definitions', 'Recursive'), ('Definitions', 'Recursive', 'Definition'), ('Recursive', 'Definition', '{'), ('Definition', '{', ','), ('{', ',', 'b'), (',', 'b', '}'), ('b', '}', '*'), ('}', '*', '˄∈L'), ('*', '˄∈L', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('S\uf0e0aSb|bSa|˄', 'NNP'), ('The', 'DT'), ('language', 'NN'), ('{', '('), (',', ','), ('b', 'VB'), ('}', ')'), ('ends', 'VBZ'), ('S\uf0e0aS', 'NNP'), ('|', 'NNP'), ('bS', 'VBZ'), ('|a', 'JJ'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('regular', 'JJ'), ('expression', 'NN'), ('(', '('), ('a+b', 'NN'), (')', ')'), ('*', 'NN'), ('(', '('), ('a+b', 'NN'), (')', ')'), ('*', 'NN'), ('(', '('), ('a+b', 'NN'), (')', ')'), ('*', 'VBZ'), ('S\uf0e0XaXaX', 'NNP'), ('X\uf0e0aX|bX|˄', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('number', 'NN'), ('0', 'CD'), ('’', 'JJ'), ('1', 'CD'), ('’', 'NN'), ('(', '('), ('n0', 'JJ'), ('(', '('), ('x', 'NNP'), (')', ')'), ('=n1', 'NNP'), ('(', '('), ('x', 'NNP'), (')', ')'), (')', ')'), ('S\uf0e00S1', 'NNP'), ('|', '$'), ('1S0', 'CD'), ('|', 'NNP'), ('^', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('L=', 'NNP'), ('{', '('), ('aibjck', 'JJ'), ('|', 'NNP'), ('i=j', 'NN'), ('j=k', 'NN'), ('}', ')'), ('For', 'IN'), ('i=j', 'JJ'), ('j=k', 'NN'), ('S\uf0e0AB', 'NNP'), ('S\uf0e0CD', 'NNP'), ('A\uf0e0aAb', 'NNP'), ('|', 'NNP'), ('ab', 'VBZ'), ('C\uf0e0aC', 'NNP'), ('|', 'NNP'), ('B\uf0e0cB', 'NNP'), ('|', 'NNP'), ('c', 'VBZ'), ('D\uf0e0bDc', 'NNP'), ('|', 'NNP'), ('bc', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('L=', 'NNP'), ('{', '('), ('aibjck', 'JJ'), ('|', 'NNP'), ('j', 'NN'), ('>', 'NNP'), ('i+k', 'NN'), ('}', ')'), ('S\uf0e0ABC', 'NNP'), ('A\uf0e0aAb', 'NNP'), ('|˄', 'NNP'), ('B\uf0e0bB', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('C\uf0e0bCc', 'NNP'), ('|˄', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('L=', 'NNP'), ('{', '('), ('0i1j0k', 'CD'), ('|', 'NNP'), ('j', 'NN'), ('>', 'NNP'), ('i+k', 'NN'), ('}', ')'), ('S\uf0e0ABC', 'NNP'), ('A\uf0e00A1', 'NNP'), ('|˄', 'NNP'), ('B\uf0e01B', 'NNP'), ('|', 'VBD'), ('1', 'CD'), ('C\uf0e01C0', 'NNP'), ('|˄', 'NNP'), ('Write', 'NNP'), ('CFG', 'NNP'), ('language', 'NN'), ('Algebraic', 'NNP'), ('expressions', 'NNS'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('S-S', 'NNP'), ('|', 'NNP'), ('S/S', 'NNP'), ('|', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('|', 'VBP'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('Examples', 'NNP'), ('CFG', 'NNP'), ('syntax', 'NN'), ('programming', 'NN'), ('language', 'NN'), ('<', 'JJ'), ('statement', 'NN'), ('>', 'NNP'), ('…', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('if-statement', 'JJ'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('for-statement', 'JJ'), ('>', 'NNP'), ('|', 'NNP'), ('…', 'NNP'), ('<', 'NNP'), ('if-statement', 'JJ'), ('>', 'NNP'), ('(', '('), ('<', 'JJ'), ('expression', 'NN'), ('>', 'NN'), (')', ')'), ('<', 'FW'), ('statement', 'NN'), ('>', 'NN'), ('<', 'NNP'), ('for-statement', 'JJ'), ('>', 'NNP'), ('(', '('), ('<', 'JJ'), ('expression', 'NN'), ('>', 'NN'), (';', ':'), ('<', 'CC'), ('expression', 'NN'), ('>', 'NN'), (';', ':'), ('<', 'CC'), ('expression', 'NN'), ('>', 'NN'), (')', ')'), ('<', 'FW'), ('statement', 'NN'), ('>', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Recursive', 'NNP'), ('Definitions', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Recursive', 'NNP'), ('Definitions', 'NNP'), ('Recursive', 'NNP'), ('Definition', 'NNP'), ('{', '('), (',', ','), ('b', 'VB'), ('}', ')'), ('*', 'NNP'), ('˄∈L', 'NNP'), ('.', '.')]

 (S
  (NP b/NN SaSb|bSa|˄/NNP)
  (NP The/DT language/NN)
  {/(
  ,/,
  b/VB
  }/)
  ends/VBZ
  (NP SaS/NNP |/NNP)
  bS/VBZ
  (NP |a/JJ Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP CFG/NNP Examples/NNP Write/NNP CFG/NNP)
  (NP regular/JJ expression/NN)
  (/(
  (NP a+b/NN)
  )/)
  (NP */NN)
  (/(
  (NP a+b/NN)
  )/)
  (NP */NN)
  (/(
  (NP a+b/NN)
  )/)
  */VBZ
  (NP SXaXaX/NNP XaX|bX|˄/NNP Write/NNP CFG/NNP number/NN)
  0/CD
  ’/JJ
  1/CD
  (NP ’/NN)
  (/(
  n0/JJ
  (/(
  (NP x/NNP)
  )/)
  (NP =n1/NNP)
  (/(
  (NP x/NNP)
  )/)
  )/)
  (NP S0S1/NNP)
  |/$
  1S0/CD
  (NP |/NNP ^/NNP Write/NNP CFG/NNP L=/NNP)
  {/(
  (NP aibjck/JJ |/NNP i=j/NN j=k/NN)
  }/)
  For/IN
  (NP i=j/JJ j=k/NN SAB/NNP SCD/NNP AaAb/NNP |/NNP)
  ab/VBZ
  (NP CaC/NNP |/NNP BcB/NNP |/NNP)
  c/VBZ
  (NP DbDc/NNP |/NNP bc/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP CFG/NNP Examples/NNP Write/NNP CFG/NNP L=/NNP)
  {/(
  (NP aibjck/JJ |/NNP j/NN >/NNP i+k/NN)
  }/)
  (NP
    SABC/NNP
    AaAb/NNP
    |˄/NNP
    BbB/NNP
    |/NNP
    b/NN
    CbCc/NNP
    |˄/NNP
    Write/NNP
    CFG/NNP
    L=/NNP)
  {/(
  0i1j0k/CD
  (NP |/NNP j/NN >/NNP i+k/NN)
  }/)
  (NP SABC/NNP A0A1/NNP |˄/NNP B1B/NNP)
  |/VBD
  1/CD
  (NP
    C1C0/NNP
    |˄/NNP
    Write/NNP
    CFG/NNP
    language/NN
    Algebraic/NNP
    expressions/NNS
    SS+S/NNP
    |/NNP
    S/NNP
    */NNP
    S/NNP
    |/NNP
    S-S/NNP
    |/NNP
    S/S/NNP
    |/NNP)
  (/(
  (NP S/NNP)
  )/)
  |/VBP
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    CFG/NNP
    Examples/NNP
    CFG/NNP
    syntax/NN
    programming/NN
    language/NN)
  (NP </JJ statement/NN >/NNP …/NNP |/NNP </NNP)
  (NP if-statement/JJ >/NNP |/NNP </NNP)
  (NP for-statement/JJ >/NNP |/NNP …/NNP </NNP)
  (NP if-statement/JJ >/NNP)
  (/(
  (NP </JJ expression/NN >/NN)
  )/)
  </FW
  (NP statement/NN >/NN </NNP)
  (NP for-statement/JJ >/NNP)
  (/(
  (NP </JJ expression/NN >/NN)
  ;/:
  </CC
  (NP expression/NN >/NN)
  ;/:
  </CC
  (NP expression/NN >/NN)
  )/)
  </FW
  (NP statement/NN >/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Recursive/NNP Definitions/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Recursive/NNP
    Definitions/NNP
    Recursive/NNP
    Definition/NNP)
  {/(
  ,/,
  b/VB
  }/)
  (NP */NNP ˄∈L/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b S\uf0e0aSb|bSa|˄', 'The language', 'S\uf0e0aS |', '|a Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples Write CFG', 'regular expression', 'a+b', '*', 'a+b', '*', 'a+b', 'S\uf0e0XaXaX X\uf0e0aX|bX|˄ Write CFG number', '’', 'x', '=n1', 'x', 'S\uf0e00S1', '| ^ Write CFG L=', 'aibjck | i=j j=k', 'i=j j=k S\uf0e0AB S\uf0e0CD A\uf0e0aAb |', 'C\uf0e0aC | B\uf0e0cB |', 'D\uf0e0bDc | bc Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples Write CFG L=', 'aibjck | j > i+k', 'S\uf0e0ABC A\uf0e0aAb |˄ B\uf0e0bB | b C\uf0e0bCc |˄ Write CFG L=', '| j > i+k', 'S\uf0e0ABC A\uf0e00A1 |˄ B\uf0e01B', 'C\uf0e01C0 |˄ Write CFG language Algebraic expressions S\uf0e0S+S | S * S | S-S | S/S |', 'S', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG Examples CFG syntax programming language', '< statement > … | <', 'if-statement > | <', 'for-statement > | … <', 'if-statement >', '< expression >', 'statement > <', 'for-statement >', '< expression >', 'expression >', 'expression >', 'statement > Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Recursive Definitions Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Recursive Definitions Recursive Definition', '* ˄∈L']

>> Named Entities are: 
 [('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples Write'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples Write'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Examples CFG'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('S\uf0e0aSb|bSa|˄', 's\uf0e0asb|bsa|˄'), ('The', 'the'), ('language', 'languag'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('ends', 'end'), ('S\uf0e0aS', 's\uf0e0a'), ('|', '|'), ('bS', 'bs'), ('|a', '|a'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('regular', 'regular'), ('expression', 'express'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0XaXaX', 's\uf0e0xaxax'), ('X\uf0e0aX|bX|˄', 'x\uf0e0ax|bx|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('number', 'number'), ('0', '0'), ('’', '’'), ('1', '1'), ('’', '’'), ('(', '('), ('n0', 'n0'), ('(', '('), ('x', 'x'), (')', ')'), ('=n1', '=n1'), ('(', '('), ('x', 'x'), (')', ')'), (')', ')'), ('S\uf0e00S1', 's\uf0e00s1'), ('|', '|'), ('1S0', '1s0'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('L=', 'l='), ('{', '{'), ('aibjck', 'aibjck'), ('|', '|'), ('i=j', 'i=j'), ('j=k', 'j=k'), ('}', '}'), ('For', 'for'), ('i=j', 'i=j'), ('j=k', 'j=k'), ('S\uf0e0AB', 's\uf0e0ab'), ('S\uf0e0CD', 's\uf0e0cd'), ('A\uf0e0aAb', 'a\uf0e0aab'), ('|', '|'), ('ab', 'ab'), ('C\uf0e0aC', 'c\uf0e0ac'), ('|', '|'), ('B\uf0e0cB', 'b\uf0e0cb'), ('|', '|'), ('c', 'c'), ('D\uf0e0bDc', 'd\uf0e0bdc'), ('|', '|'), ('bc', 'bc'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('L=', 'l='), ('{', '{'), ('aibjck', 'aibjck'), ('|', '|'), ('j', 'j'), ('>', '>'), ('i+k', 'i+k'), ('}', '}'), ('S\uf0e0ABC', 's\uf0e0abc'), ('A\uf0e0aAb', 'a\uf0e0aab'), ('|˄', '|˄'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('b', 'b'), ('C\uf0e0bCc', 'c\uf0e0bcc'), ('|˄', '|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('L=', 'l='), ('{', '{'), ('0i1j0k', '0i1j0k'), ('|', '|'), ('j', 'j'), ('>', '>'), ('i+k', 'i+k'), ('}', '}'), ('S\uf0e0ABC', 's\uf0e0abc'), ('A\uf0e00A1', 'a\uf0e00a1'), ('|˄', '|˄'), ('B\uf0e01B', 'b\uf0e01b'), ('|', '|'), ('1', '1'), ('C\uf0e01C0', 'c\uf0e01c0'), ('|˄', '|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('language', 'languag'), ('Algebraic', 'algebra'), ('expressions', 'express'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S-S', 's-'), ('|', '|'), ('S/S', 's/'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('CFG', 'cfg'), ('syntax', 'syntax'), ('programming', 'program'), ('language', 'languag'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('…', '…'), ('|', '|'), ('<', '<'), ('if-statement', 'if-stat'), ('>', '>'), ('|', '|'), ('<', '<'), ('for-statement', 'for-stat'), ('>', '>'), ('|', '|'), ('…', '…'), ('<', '<'), ('if-statement', 'if-stat'), ('>', '>'), ('(', '('), ('<', '<'), ('expression', 'express'), ('>', '>'), (')', ')'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('<', '<'), ('for-statement', 'for-stat'), ('>', '>'), ('(', '('), ('<', '<'), ('expression', 'express'), ('>', '>'), (';', ';'), ('<', '<'), ('expression', 'express'), ('>', '>'), (';', ';'), ('<', '<'), ('expression', 'express'), ('>', '>'), (')', ')'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'recurs'), ('Definitions', 'definit'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'recurs'), ('Definitions', 'definit'), ('Recursive', 'recurs'), ('Definition', 'definit'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('*', '*'), ('˄∈L', '˄∈l'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('S\uf0e0aSb|bSa|˄', 's\uf0e0asb|bsa|˄'), ('The', 'the'), ('language', 'languag'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('ends', 'end'), ('S\uf0e0aS', 's\uf0e0as'), ('|', '|'), ('bS', 'bs'), ('|a', '|a'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('regular', 'regular'), ('expression', 'express'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0XaXaX', 's\uf0e0xaxax'), ('X\uf0e0aX|bX|˄', 'x\uf0e0ax|bx|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('number', 'number'), ('0', '0'), ('’', '’'), ('1', '1'), ('’', '’'), ('(', '('), ('n0', 'n0'), ('(', '('), ('x', 'x'), (')', ')'), ('=n1', '=n1'), ('(', '('), ('x', 'x'), (')', ')'), (')', ')'), ('S\uf0e00S1', 's\uf0e00s1'), ('|', '|'), ('1S0', '1s0'), ('|', '|'), ('^', '^'), ('Write', 'write'), ('CFG', 'cfg'), ('L=', 'l='), ('{', '{'), ('aibjck', 'aibjck'), ('|', '|'), ('i=j', 'i=j'), ('j=k', 'j=k'), ('}', '}'), ('For', 'for'), ('i=j', 'i=j'), ('j=k', 'j=k'), ('S\uf0e0AB', 's\uf0e0ab'), ('S\uf0e0CD', 's\uf0e0cd'), ('A\uf0e0aAb', 'a\uf0e0aab'), ('|', '|'), ('ab', 'ab'), ('C\uf0e0aC', 'c\uf0e0ac'), ('|', '|'), ('B\uf0e0cB', 'b\uf0e0cb'), ('|', '|'), ('c', 'c'), ('D\uf0e0bDc', 'd\uf0e0bdc'), ('|', '|'), ('bc', 'bc'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('Write', 'write'), ('CFG', 'cfg'), ('L=', 'l='), ('{', '{'), ('aibjck', 'aibjck'), ('|', '|'), ('j', 'j'), ('>', '>'), ('i+k', 'i+k'), ('}', '}'), ('S\uf0e0ABC', 's\uf0e0abc'), ('A\uf0e0aAb', 'a\uf0e0aab'), ('|˄', '|˄'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('b', 'b'), ('C\uf0e0bCc', 'c\uf0e0bcc'), ('|˄', '|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('L=', 'l='), ('{', '{'), ('0i1j0k', '0i1j0k'), ('|', '|'), ('j', 'j'), ('>', '>'), ('i+k', 'i+k'), ('}', '}'), ('S\uf0e0ABC', 's\uf0e0abc'), ('A\uf0e00A1', 'a\uf0e00a1'), ('|˄', '|˄'), ('B\uf0e01B', 'b\uf0e01b'), ('|', '|'), ('1', '1'), ('C\uf0e01C0', 'c\uf0e01c0'), ('|˄', '|˄'), ('Write', 'write'), ('CFG', 'cfg'), ('language', 'languag'), ('Algebraic', 'algebra'), ('expressions', 'express'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('Examples', 'exampl'), ('CFG', 'cfg'), ('syntax', 'syntax'), ('programming', 'program'), ('language', 'languag'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('…', '…'), ('|', '|'), ('<', '<'), ('if-statement', 'if-stat'), ('>', '>'), ('|', '|'), ('<', '<'), ('for-statement', 'for-stat'), ('>', '>'), ('|', '|'), ('…', '…'), ('<', '<'), ('if-statement', 'if-stat'), ('>', '>'), ('(', '('), ('<', '<'), ('expression', 'express'), ('>', '>'), (')', ')'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('<', '<'), ('for-statement', 'for-stat'), ('>', '>'), ('(', '('), ('<', '<'), ('expression', 'express'), ('>', '>'), (';', ';'), ('<', '<'), ('expression', 'express'), ('>', '>'), (';', ';'), ('<', '<'), ('expression', 'express'), ('>', '>'), (')', ')'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'recurs'), ('Definitions', 'definit'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'recurs'), ('Definitions', 'definit'), ('Recursive', 'recurs'), ('Definition', 'definit'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('*', '*'), ('˄∈L', '˄∈l'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('S\uf0e0aSb|bSa|˄', 'S\uf0e0aSb|bSa|˄'), ('The', 'The'), ('language', 'language'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('ends', 'end'), ('S\uf0e0aS', 'S\uf0e0aS'), ('|', '|'), ('bS', 'bS'), ('|a', '|a'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('Write', 'Write'), ('CFG', 'CFG'), ('regular', 'regular'), ('expression', 'expression'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('(', '('), ('a+b', 'a+b'), (')', ')'), ('*', '*'), ('S\uf0e0XaXaX', 'S\uf0e0XaXaX'), ('X\uf0e0aX|bX|˄', 'X\uf0e0aX|bX|˄'), ('Write', 'Write'), ('CFG', 'CFG'), ('number', 'number'), ('0', '0'), ('’', '’'), ('1', '1'), ('’', '’'), ('(', '('), ('n0', 'n0'), ('(', '('), ('x', 'x'), (')', ')'), ('=n1', '=n1'), ('(', '('), ('x', 'x'), (')', ')'), (')', ')'), ('S\uf0e00S1', 'S\uf0e00S1'), ('|', '|'), ('1S0', '1S0'), ('|', '|'), ('^', '^'), ('Write', 'Write'), ('CFG', 'CFG'), ('L=', 'L='), ('{', '{'), ('aibjck', 'aibjck'), ('|', '|'), ('i=j', 'i=j'), ('j=k', 'j=k'), ('}', '}'), ('For', 'For'), ('i=j', 'i=j'), ('j=k', 'j=k'), ('S\uf0e0AB', 'S\uf0e0AB'), ('S\uf0e0CD', 'S\uf0e0CD'), ('A\uf0e0aAb', 'A\uf0e0aAb'), ('|', '|'), ('ab', 'ab'), ('C\uf0e0aC', 'C\uf0e0aC'), ('|', '|'), ('B\uf0e0cB', 'B\uf0e0cB'), ('|', '|'), ('c', 'c'), ('D\uf0e0bDc', 'D\uf0e0bDc'), ('|', '|'), ('bc', 'bc'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('Write', 'Write'), ('CFG', 'CFG'), ('L=', 'L='), ('{', '{'), ('aibjck', 'aibjck'), ('|', '|'), ('j', 'j'), ('>', '>'), ('i+k', 'i+k'), ('}', '}'), ('S\uf0e0ABC', 'S\uf0e0ABC'), ('A\uf0e0aAb', 'A\uf0e0aAb'), ('|˄', '|˄'), ('B\uf0e0bB', 'B\uf0e0bB'), ('|', '|'), ('b', 'b'), ('C\uf0e0bCc', 'C\uf0e0bCc'), ('|˄', '|˄'), ('Write', 'Write'), ('CFG', 'CFG'), ('L=', 'L='), ('{', '{'), ('0i1j0k', '0i1j0k'), ('|', '|'), ('j', 'j'), ('>', '>'), ('i+k', 'i+k'), ('}', '}'), ('S\uf0e0ABC', 'S\uf0e0ABC'), ('A\uf0e00A1', 'A\uf0e00A1'), ('|˄', '|˄'), ('B\uf0e01B', 'B\uf0e01B'), ('|', '|'), ('1', '1'), ('C\uf0e01C0', 'C\uf0e01C0'), ('|˄', '|˄'), ('Write', 'Write'), ('CFG', 'CFG'), ('language', 'language'), ('Algebraic', 'Algebraic'), ('expressions', 'expression'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('S-S', 'S-S'), ('|', '|'), ('S/S', 'S/S'), ('|', '|'), ('(', '('), ('S', 'S'), (')', ')'), ('|', '|'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('Examples', 'Examples'), ('CFG', 'CFG'), ('syntax', 'syntax'), ('programming', 'programming'), ('language', 'language'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('…', '…'), ('|', '|'), ('<', '<'), ('if-statement', 'if-statement'), ('>', '>'), ('|', '|'), ('<', '<'), ('for-statement', 'for-statement'), ('>', '>'), ('|', '|'), ('…', '…'), ('<', '<'), ('if-statement', 'if-statement'), ('>', '>'), ('(', '('), ('<', '<'), ('expression', 'expression'), ('>', '>'), (')', ')'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('<', '<'), ('for-statement', 'for-statement'), ('>', '>'), ('(', '('), ('<', '<'), ('expression', 'expression'), ('>', '>'), (';', ';'), ('<', '<'), ('expression', 'expression'), ('>', '>'), (';', ';'), ('<', '<'), ('expression', 'expression'), ('>', '>'), (')', ')'), ('<', '<'), ('statement', 'statement'), ('>', '>'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'Recursive'), ('Definitions', 'Definitions'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'Recursive'), ('Definitions', 'Definitions'), ('Recursive', 'Recursive'), ('Definition', 'Definition'), ('{', '{'), (',', ','), ('b', 'b'), ('}', '}'), ('*', '*'), ('˄∈L', '˄∈L'), ('.', '.')]



============================ Sentence 17 =============================

For any S∈L, aS∈L. 


>> Tokens are: 
 ['For', 'S∈L', ',', 'aS∈L', '.']

>> Bigrams are: 
 [('For', 'S∈L'), ('S∈L', ','), (',', 'aS∈L'), ('aS∈L', '.')]

>> Trigrams are: 
 [('For', 'S∈L', ','), ('S∈L', ',', 'aS∈L'), (',', 'aS∈L', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('S∈L', 'NNP'), (',', ','), ('aS∈L', 'NN'), ('.', '.')]

 (S For/IN (NP S∈L/NNP) ,/, (NP aS∈L/NN) ./.) 


>> Noun Phrases are: 
 ['S∈L', 'aS∈L']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('S∈L', 's∈l'), (',', ','), ('aS∈L', 'as∈l'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('S∈L', 's∈l'), (',', ','), ('aS∈L', 'as∈l'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('S∈L', 'S∈L'), (',', ','), ('aS∈L', 'aS∈L'), ('.', '.')]



============================ Sentence 18 =============================

For any S∈L, bS∈L. 


>> Tokens are: 
 ['For', 'S∈L', ',', 'bS∈L', '.']

>> Bigrams are: 
 [('For', 'S∈L'), ('S∈L', ','), (',', 'bS∈L'), ('bS∈L', '.')]

>> Trigrams are: 
 [('For', 'S∈L', ','), ('S∈L', ',', 'bS∈L'), (',', 'bS∈L', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('S∈L', 'NNP'), (',', ','), ('bS∈L', 'NN'), ('.', '.')]

 (S For/IN (NP S∈L/NNP) ,/, (NP bS∈L/NN) ./.) 


>> Noun Phrases are: 
 ['S∈L', 'bS∈L']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('S∈L', 's∈l'), (',', ','), ('bS∈L', 'bs∈l'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('S∈L', 's∈l'), (',', ','), ('bS∈L', 'bs∈l'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('S∈L', 'S∈L'), (',', ','), ('bS∈L', 'bS∈L'), ('.', '.')]



============================ Sentence 19 =============================

No other strings are in L. Recursive Definition of Palindrome 	˄, a, b ∈ L  	For any S ∈ L , aSa ∈ L and bSb ∈ L  	No other string are in L  Recursive Definition of the language {anbn | n≥0} 	˄∈ L 	For every S ∈ L, aSb ∈L 	No other strings are in L CFG: S aS | bS | ^ CFG: S aSa | bSb | a | b | ˄ CFG: S aSb | ˄  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› FA to Regular Grammar   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› FA to Regular Grammar    1 0 1  0 0 1        At last, all the incoming transitions to the accepting states are designated by the production  Source State → input symbol  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Exercise: FA to Regular Grammar A C E  B a D a a a a b b b b b  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Derivation    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Derivation  Derivation is used to find whether the string belongs to a given grammar or not. 


>> Tokens are: 
 ['No', 'strings', 'L.', 'Recursive', 'Definition', 'Palindrome', '˄', ',', ',', 'b', '∈', 'L', 'For', 'S', '∈', 'L', ',', 'aSa', '∈', 'L', 'bSb', '∈', 'L', 'No', 'string', 'L', 'Recursive', 'Definition', 'language', '{', 'anbn', '|', 'n≥0', '}', '˄∈', 'L', 'For', 'every', 'S', '∈', 'L', ',', 'aSb', '∈L', 'No', 'strings', 'L', 'CFG', ':', 'S\uf0e0', 'aS', '|', 'bS', '|', '^', 'CFG', ':', 'S\uf0e0', 'aSa', '|', 'bSb', '|', '|', 'b', '|', '˄', 'CFG', ':', 'S\uf0e0', 'aSb', '|', '˄', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'FA', 'Regular', 'Grammar', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'FA', 'Regular', 'Grammar', '1', '0', '1', '0', '0', '1', 'At', 'last', ',', 'incoming', 'transitions', 'accepting', 'states', 'designated', 'production', 'Source', 'State', '→', 'input', 'symbol', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Exercise', ':', 'FA', 'Regular', 'Grammar', 'A', 'C', 'E', 'B', 'D', 'b', 'b', 'b', 'b', 'b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Derivation', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Derivation', 'Derivation', 'used', 'find', 'whether', 'string', 'belongs', 'given', 'grammar', '.']

>> Bigrams are: 
 [('No', 'strings'), ('strings', 'L.'), ('L.', 'Recursive'), ('Recursive', 'Definition'), ('Definition', 'Palindrome'), ('Palindrome', '˄'), ('˄', ','), (',', ','), (',', 'b'), ('b', '∈'), ('∈', 'L'), ('L', 'For'), ('For', 'S'), ('S', '∈'), ('∈', 'L'), ('L', ','), (',', 'aSa'), ('aSa', '∈'), ('∈', 'L'), ('L', 'bSb'), ('bSb', '∈'), ('∈', 'L'), ('L', 'No'), ('No', 'string'), ('string', 'L'), ('L', 'Recursive'), ('Recursive', 'Definition'), ('Definition', 'language'), ('language', '{'), ('{', 'anbn'), ('anbn', '|'), ('|', 'n≥0'), ('n≥0', '}'), ('}', '˄∈'), ('˄∈', 'L'), ('L', 'For'), ('For', 'every'), ('every', 'S'), ('S', '∈'), ('∈', 'L'), ('L', ','), (',', 'aSb'), ('aSb', '∈L'), ('∈L', 'No'), ('No', 'strings'), ('strings', 'L'), ('L', 'CFG'), ('CFG', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'aS'), ('aS', '|'), ('|', 'bS'), ('bS', '|'), ('|', '^'), ('^', 'CFG'), ('CFG', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'aSa'), ('aSa', '|'), ('|', 'bSb'), ('bSb', '|'), ('|', '|'), ('|', 'b'), ('b', '|'), ('|', '˄'), ('˄', 'CFG'), ('CFG', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'aSb'), ('aSb', '|'), ('|', '˄'), ('˄', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'FA'), ('FA', 'Regular'), ('Regular', 'Grammar'), ('Grammar', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'FA'), ('FA', 'Regular'), ('Regular', 'Grammar'), ('Grammar', '1'), ('1', '0'), ('0', '1'), ('1', '0'), ('0', '0'), ('0', '1'), ('1', 'At'), ('At', 'last'), ('last', ','), (',', 'incoming'), ('incoming', 'transitions'), ('transitions', 'accepting'), ('accepting', 'states'), ('states', 'designated'), ('designated', 'production'), ('production', 'Source'), ('Source', 'State'), ('State', '→'), ('→', 'input'), ('input', 'symbol'), ('symbol', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', ':'), (':', 'FA'), ('FA', 'Regular'), ('Regular', 'Grammar'), ('Grammar', 'A'), ('A', 'C'), ('C', 'E'), ('E', 'B'), ('B', 'D'), ('D', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Derivation'), ('Derivation', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Derivation'), ('Derivation', 'Derivation'), ('Derivation', 'used'), ('used', 'find'), ('find', 'whether'), ('whether', 'string'), ('string', 'belongs'), ('belongs', 'given'), ('given', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('No', 'strings', 'L.'), ('strings', 'L.', 'Recursive'), ('L.', 'Recursive', 'Definition'), ('Recursive', 'Definition', 'Palindrome'), ('Definition', 'Palindrome', '˄'), ('Palindrome', '˄', ','), ('˄', ',', ','), (',', ',', 'b'), (',', 'b', '∈'), ('b', '∈', 'L'), ('∈', 'L', 'For'), ('L', 'For', 'S'), ('For', 'S', '∈'), ('S', '∈', 'L'), ('∈', 'L', ','), ('L', ',', 'aSa'), (',', 'aSa', '∈'), ('aSa', '∈', 'L'), ('∈', 'L', 'bSb'), ('L', 'bSb', '∈'), ('bSb', '∈', 'L'), ('∈', 'L', 'No'), ('L', 'No', 'string'), ('No', 'string', 'L'), ('string', 'L', 'Recursive'), ('L', 'Recursive', 'Definition'), ('Recursive', 'Definition', 'language'), ('Definition', 'language', '{'), ('language', '{', 'anbn'), ('{', 'anbn', '|'), ('anbn', '|', 'n≥0'), ('|', 'n≥0', '}'), ('n≥0', '}', '˄∈'), ('}', '˄∈', 'L'), ('˄∈', 'L', 'For'), ('L', 'For', 'every'), ('For', 'every', 'S'), ('every', 'S', '∈'), ('S', '∈', 'L'), ('∈', 'L', ','), ('L', ',', 'aSb'), (',', 'aSb', '∈L'), ('aSb', '∈L', 'No'), ('∈L', 'No', 'strings'), ('No', 'strings', 'L'), ('strings', 'L', 'CFG'), ('L', 'CFG', ':'), ('CFG', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'aS'), ('S\uf0e0', 'aS', '|'), ('aS', '|', 'bS'), ('|', 'bS', '|'), ('bS', '|', '^'), ('|', '^', 'CFG'), ('^', 'CFG', ':'), ('CFG', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'aSa'), ('S\uf0e0', 'aSa', '|'), ('aSa', '|', 'bSb'), ('|', 'bSb', '|'), ('bSb', '|', '|'), ('|', '|', 'b'), ('|', 'b', '|'), ('b', '|', '˄'), ('|', '˄', 'CFG'), ('˄', 'CFG', ':'), ('CFG', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'aSb'), ('S\uf0e0', 'aSb', '|'), ('aSb', '|', '˄'), ('|', '˄', 'Unit'), ('˄', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'FA'), ('›', 'FA', 'Regular'), ('FA', 'Regular', 'Grammar'), ('Regular', 'Grammar', 'Unit'), ('Grammar', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'FA'), ('›', 'FA', 'Regular'), ('FA', 'Regular', 'Grammar'), ('Regular', 'Grammar', '1'), ('Grammar', '1', '0'), ('1', '0', '1'), ('0', '1', '0'), ('1', '0', '0'), ('0', '0', '1'), ('0', '1', 'At'), ('1', 'At', 'last'), ('At', 'last', ','), ('last', ',', 'incoming'), (',', 'incoming', 'transitions'), ('incoming', 'transitions', 'accepting'), ('transitions', 'accepting', 'states'), ('accepting', 'states', 'designated'), ('states', 'designated', 'production'), ('designated', 'production', 'Source'), ('production', 'Source', 'State'), ('Source', 'State', '→'), ('State', '→', 'input'), ('→', 'input', 'symbol'), ('input', 'symbol', 'Unit'), ('symbol', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', ':'), ('Exercise', ':', 'FA'), (':', 'FA', 'Regular'), ('FA', 'Regular', 'Grammar'), ('Regular', 'Grammar', 'A'), ('Grammar', 'A', 'C'), ('A', 'C', 'E'), ('C', 'E', 'B'), ('E', 'B', 'D'), ('B', 'D', 'b'), ('D', 'b', 'b'), ('b', 'b', 'b'), ('b', 'b', 'b'), ('b', 'b', 'b'), ('b', 'b', 'Unit'), ('b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Derivation'), ('›', 'Derivation', 'Unit'), ('Derivation', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Derivation'), ('›', 'Derivation', 'Derivation'), ('Derivation', 'Derivation', 'used'), ('Derivation', 'used', 'find'), ('used', 'find', 'whether'), ('find', 'whether', 'string'), ('whether', 'string', 'belongs'), ('string', 'belongs', 'given'), ('belongs', 'given', 'grammar'), ('given', 'grammar', '.')]

>> POS Tags are: 
 [('No', 'DT'), ('strings', 'NNS'), ('L.', 'NNP'), ('Recursive', 'NNP'), ('Definition', 'NNP'), ('Palindrome', 'NNP'), ('˄', 'NNP'), (',', ','), (',', ','), ('b', 'SYM'), ('∈', 'NN'), ('L', 'NNP'), ('For', 'IN'), ('S', 'NNP'), ('∈', 'NNP'), ('L', 'NNP'), (',', ','), ('aSa', 'NN'), ('∈', 'NNP'), ('L', 'NNP'), ('bSb', 'NN'), ('∈', 'NNP'), ('L', 'NNP'), ('No', 'NNP'), ('string', 'VBG'), ('L', 'NNP'), ('Recursive', 'NNP'), ('Definition', 'NNP'), ('language', 'NN'), ('{', '('), ('anbn', 'JJ'), ('|', 'NN'), ('n≥0', 'NN'), ('}', ')'), ('˄∈', 'NNP'), ('L', 'NNP'), ('For', 'IN'), ('every', 'DT'), ('S', 'NNP'), ('∈', 'NNP'), ('L', 'NNP'), (',', ','), ('aSb', 'RB'), ('∈L', 'VBZ'), ('No', 'NNP'), ('strings', 'NNS'), ('L', 'NNP'), ('CFG', 'NNP'), (':', ':'), ('S\uf0e0', 'NNP'), ('aS', 'IN'), ('|', 'NNP'), ('bS', 'NN'), ('|', 'NNP'), ('^', 'NNP'), ('CFG', 'NNP'), (':', ':'), ('S\uf0e0', 'NNP'), ('aSa', 'VBZ'), ('|', 'NNP'), ('bSb', 'NN'), ('|', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('|', 'NNP'), ('˄', 'NNP'), ('CFG', 'NNP'), (':', ':'), ('S\uf0e0', 'NNP'), ('aSb', 'VBZ'), ('|', 'NNP'), ('˄', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('FA', 'NNP'), ('Regular', 'NNP'), ('Grammar', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('FA', 'NNP'), ('Regular', 'NNP'), ('Grammar', 'NNP'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('At', 'IN'), ('last', 'JJ'), (',', ','), ('incoming', 'JJ'), ('transitions', 'NNS'), ('accepting', 'VBG'), ('states', 'NNS'), ('designated', 'VBN'), ('production', 'NN'), ('Source', 'NNP'), ('State', 'NNP'), ('→', 'NNP'), ('input', 'VBD'), ('symbol', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Exercise', 'NN'), (':', ':'), ('FA', 'NNP'), ('Regular', 'NNP'), ('Grammar', 'NNP'), ('A', 'NNP'), ('C', 'NNP'), ('E', 'NNP'), ('B', 'NNP'), ('D', 'NNP'), ('b', 'NN'), ('b', 'NN'), ('b', 'NN'), ('b', 'NN'), ('b', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Derivation', 'NNP'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Derivation', 'NNP'), ('Derivation', 'NNP'), ('used', 'VBD'), ('find', 'VB'), ('whether', 'IN'), ('string', 'VBG'), ('belongs', 'NNS'), ('given', 'VBN'), ('grammar', 'NN'), ('.', '.')]

 (S
  (NP
    No/DT
    strings/NNS
    L./NNP
    Recursive/NNP
    Definition/NNP
    Palindrome/NNP
    ˄/NNP)
  ,/,
  ,/,
  b/SYM
  (NP ∈/NN L/NNP)
  For/IN
  (NP S/NNP ∈/NNP L/NNP)
  ,/,
  (NP aSa/NN ∈/NNP L/NNP bSb/NN ∈/NNP L/NNP No/NNP)
  string/VBG
  (NP L/NNP Recursive/NNP Definition/NNP language/NN)
  {/(
  (NP anbn/JJ |/NN n≥0/NN)
  }/)
  (NP ˄∈/NNP L/NNP)
  For/IN
  (NP every/DT S/NNP ∈/NNP L/NNP)
  ,/,
  aSb/RB
  ∈L/VBZ
  (NP No/NNP strings/NNS L/NNP CFG/NNP)
  :/:
  (NP S/NNP)
  aS/IN
  (NP |/NNP bS/NN |/NNP ^/NNP CFG/NNP)
  :/:
  (NP S/NNP)
  aSa/VBZ
  (NP |/NNP bSb/NN |/NNP |/NNP b/NN |/NNP ˄/NNP CFG/NNP)
  :/:
  (NP S/NNP)
  aSb/VBZ
  (NP |/NNP ˄/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP FA/NNP Regular/NNP Grammar/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP FA/NNP Regular/NNP Grammar/NNP)
  1/CD
  0/CD
  1/CD
  0/CD
  0/CD
  1/CD
  At/IN
  last/JJ
  ,/,
  (NP incoming/JJ transitions/NNS)
  accepting/VBG
  (NP states/NNS)
  designated/VBN
  (NP production/NN Source/NNP State/NNP →/NNP)
  input/VBD
  (NP symbol/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Exercise/NN)
  :/:
  (NP
    FA/NNP
    Regular/NNP
    Grammar/NNP
    A/NNP
    C/NNP
    E/NNP
    B/NNP
    D/NNP
    b/NN
    b/NN
    b/NN
    b/NN
    b/NN
    Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Derivation/NNP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Derivation/NNP Derivation/NNP)
  used/VBD
  find/VB
  whether/IN
  string/VBG
  (NP belongs/NNS)
  given/VBN
  (NP grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['No strings L. Recursive Definition Palindrome ˄', '∈ L', 'S ∈ L', 'aSa ∈ L bSb ∈ L No', 'L Recursive Definition language', 'anbn | n≥0', '˄∈ L', 'every S ∈ L', 'No strings L CFG', 'S\uf0e0', '| bS | ^ CFG', 'S\uf0e0', '| bSb | | b | ˄ CFG', 'S\uf0e0', '| ˄ Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› FA Regular Grammar Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› FA Regular Grammar', 'incoming transitions', 'states', 'production Source State →', 'symbol Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Exercise', 'FA Regular Grammar A C E B D b b b b b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Derivation Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Derivation Derivation', 'belongs', 'grammar']

>> Named Entities are: 
 [('ORGANIZATION', 'aSa'), ('ORGANIZATION', 'No'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Grammar Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Source State'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('No', 'no'), ('strings', 'string'), ('L.', 'l.'), ('Recursive', 'recurs'), ('Definition', 'definit'), ('Palindrome', 'palindrom'), ('˄', '˄'), (',', ','), (',', ','), ('b', 'b'), ('∈', '∈'), ('L', 'l'), ('For', 'for'), ('S', 's'), ('∈', '∈'), ('L', 'l'), (',', ','), ('aSa', 'asa'), ('∈', '∈'), ('L', 'l'), ('bSb', 'bsb'), ('∈', '∈'), ('L', 'l'), ('No', 'no'), ('string', 'string'), ('L', 'l'), ('Recursive', 'recurs'), ('Definition', 'definit'), ('language', 'languag'), ('{', '{'), ('anbn', 'anbn'), ('|', '|'), ('n≥0', 'n≥0'), ('}', '}'), ('˄∈', '˄∈'), ('L', 'l'), ('For', 'for'), ('every', 'everi'), ('S', 's'), ('∈', '∈'), ('L', 'l'), (',', ','), ('aSb', 'asb'), ('∈L', '∈l'), ('No', 'no'), ('strings', 'string'), ('L', 'l'), ('CFG', 'cfg'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('bS', 'bs'), ('|', '|'), ('^', '^'), ('CFG', 'cfg'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aSa', 'asa'), ('|', '|'), ('bSb', 'bsb'), ('|', '|'), ('|', '|'), ('b', 'b'), ('|', '|'), ('˄', '˄'), ('CFG', 'cfg'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aSb', 'asb'), ('|', '|'), ('˄', '˄'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('FA', 'fa'), ('Regular', 'regular'), ('Grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('FA', 'fa'), ('Regular', 'regular'), ('Grammar', 'grammar'), ('1', '1'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('At', 'at'), ('last', 'last'), (',', ','), ('incoming', 'incom'), ('transitions', 'transit'), ('accepting', 'accept'), ('states', 'state'), ('designated', 'design'), ('production', 'product'), ('Source', 'sourc'), ('State', 'state'), ('→', '→'), ('input', 'input'), ('symbol', 'symbol'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('FA', 'fa'), ('Regular', 'regular'), ('Grammar', 'grammar'), ('A', 'a'), ('C', 'c'), ('E', 'e'), ('B', 'b'), ('D', 'd'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'deriv'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'deriv'), ('Derivation', 'deriv'), ('used', 'use'), ('find', 'find'), ('whether', 'whether'), ('string', 'string'), ('belongs', 'belong'), ('given', 'given'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('No', 'no'), ('strings', 'string'), ('L.', 'l.'), ('Recursive', 'recurs'), ('Definition', 'definit'), ('Palindrome', 'palindrom'), ('˄', '˄'), (',', ','), (',', ','), ('b', 'b'), ('∈', '∈'), ('L', 'l'), ('For', 'for'), ('S', 's'), ('∈', '∈'), ('L', 'l'), (',', ','), ('aSa', 'asa'), ('∈', '∈'), ('L', 'l'), ('bSb', 'bsb'), ('∈', '∈'), ('L', 'l'), ('No', 'no'), ('string', 'string'), ('L', 'l'), ('Recursive', 'recurs'), ('Definition', 'definit'), ('language', 'languag'), ('{', '{'), ('anbn', 'anbn'), ('|', '|'), ('n≥0', 'n≥0'), ('}', '}'), ('˄∈', '˄∈'), ('L', 'l'), ('For', 'for'), ('every', 'everi'), ('S', 's'), ('∈', '∈'), ('L', 'l'), (',', ','), ('aSb', 'asb'), ('∈L', '∈l'), ('No', 'no'), ('strings', 'string'), ('L', 'l'), ('CFG', 'cfg'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('bS', 'bs'), ('|', '|'), ('^', '^'), ('CFG', 'cfg'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aSa', 'asa'), ('|', '|'), ('bSb', 'bsb'), ('|', '|'), ('|', '|'), ('b', 'b'), ('|', '|'), ('˄', '˄'), ('CFG', 'cfg'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aSb', 'asb'), ('|', '|'), ('˄', '˄'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('FA', 'fa'), ('Regular', 'regular'), ('Grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('FA', 'fa'), ('Regular', 'regular'), ('Grammar', 'grammar'), ('1', '1'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('At', 'at'), ('last', 'last'), (',', ','), ('incoming', 'incom'), ('transitions', 'transit'), ('accepting', 'accept'), ('states', 'state'), ('designated', 'design'), ('production', 'product'), ('Source', 'sourc'), ('State', 'state'), ('→', '→'), ('input', 'input'), ('symbol', 'symbol'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('FA', 'fa'), ('Regular', 'regular'), ('Grammar', 'grammar'), ('A', 'a'), ('C', 'c'), ('E', 'e'), ('B', 'b'), ('D', 'd'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'deriv'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'deriv'), ('Derivation', 'deriv'), ('used', 'use'), ('find', 'find'), ('whether', 'whether'), ('string', 'string'), ('belongs', 'belong'), ('given', 'given'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('No', 'No'), ('strings', 'string'), ('L.', 'L.'), ('Recursive', 'Recursive'), ('Definition', 'Definition'), ('Palindrome', 'Palindrome'), ('˄', '˄'), (',', ','), (',', ','), ('b', 'b'), ('∈', '∈'), ('L', 'L'), ('For', 'For'), ('S', 'S'), ('∈', '∈'), ('L', 'L'), (',', ','), ('aSa', 'aSa'), ('∈', '∈'), ('L', 'L'), ('bSb', 'bSb'), ('∈', '∈'), ('L', 'L'), ('No', 'No'), ('string', 'string'), ('L', 'L'), ('Recursive', 'Recursive'), ('Definition', 'Definition'), ('language', 'language'), ('{', '{'), ('anbn', 'anbn'), ('|', '|'), ('n≥0', 'n≥0'), ('}', '}'), ('˄∈', '˄∈'), ('L', 'L'), ('For', 'For'), ('every', 'every'), ('S', 'S'), ('∈', '∈'), ('L', 'L'), (',', ','), ('aSb', 'aSb'), ('∈L', '∈L'), ('No', 'No'), ('strings', 'string'), ('L', 'L'), ('CFG', 'CFG'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'aS'), ('|', '|'), ('bS', 'bS'), ('|', '|'), ('^', '^'), ('CFG', 'CFG'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('aSa', 'aSa'), ('|', '|'), ('bSb', 'bSb'), ('|', '|'), ('|', '|'), ('b', 'b'), ('|', '|'), ('˄', '˄'), ('CFG', 'CFG'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('aSb', 'aSb'), ('|', '|'), ('˄', '˄'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('FA', 'FA'), ('Regular', 'Regular'), ('Grammar', 'Grammar'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('FA', 'FA'), ('Regular', 'Regular'), ('Grammar', 'Grammar'), ('1', '1'), ('0', '0'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('At', 'At'), ('last', 'last'), (',', ','), ('incoming', 'incoming'), ('transitions', 'transition'), ('accepting', 'accepting'), ('states', 'state'), ('designated', 'designated'), ('production', 'production'), ('Source', 'Source'), ('State', 'State'), ('→', '→'), ('input', 'input'), ('symbol', 'symbol'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), (':', ':'), ('FA', 'FA'), ('Regular', 'Regular'), ('Grammar', 'Grammar'), ('A', 'A'), ('C', 'C'), ('E', 'E'), ('B', 'B'), ('D', 'D'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('b', 'b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'Derivation'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'Derivation'), ('Derivation', 'Derivation'), ('used', 'used'), ('find', 'find'), ('whether', 'whether'), ('string', 'string'), ('belongs', 'belongs'), ('given', 'given'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 20 =============================

There are two types of derivation: Leftmost derivation Rightmost derivation  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  Leftmost derivation  A derivation of a string  in a grammar  is a left most derivation if at every step the left most non terminal is replaced. 


>> Tokens are: 
 ['There', 'two', 'types', 'derivation', ':', 'Leftmost', 'derivation', 'Rightmost', 'derivation', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Leftmost', 'derivation', 'A', 'derivation', 'string', 'grammar', 'left', 'derivation', 'every', 'step', 'left', 'non', 'terminal', 'replaced', '.']

>> Bigrams are: 
 [('There', 'two'), ('two', 'types'), ('types', 'derivation'), ('derivation', ':'), (':', 'Leftmost'), ('Leftmost', 'derivation'), ('derivation', 'Rightmost'), ('Rightmost', 'derivation'), ('derivation', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Leftmost'), ('Leftmost', 'derivation'), ('derivation', 'A'), ('A', 'derivation'), ('derivation', 'string'), ('string', 'grammar'), ('grammar', 'left'), ('left', 'derivation'), ('derivation', 'every'), ('every', 'step'), ('step', 'left'), ('left', 'non'), ('non', 'terminal'), ('terminal', 'replaced'), ('replaced', '.')]

>> Trigrams are: 
 [('There', 'two', 'types'), ('two', 'types', 'derivation'), ('types', 'derivation', ':'), ('derivation', ':', 'Leftmost'), (':', 'Leftmost', 'derivation'), ('Leftmost', 'derivation', 'Rightmost'), ('derivation', 'Rightmost', 'derivation'), ('Rightmost', 'derivation', 'Unit'), ('derivation', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Leftmost'), ('›', 'Leftmost', 'derivation'), ('Leftmost', 'derivation', 'A'), ('derivation', 'A', 'derivation'), ('A', 'derivation', 'string'), ('derivation', 'string', 'grammar'), ('string', 'grammar', 'left'), ('grammar', 'left', 'derivation'), ('left', 'derivation', 'every'), ('derivation', 'every', 'step'), ('every', 'step', 'left'), ('step', 'left', 'non'), ('left', 'non', 'terminal'), ('non', 'terminal', 'replaced'), ('terminal', 'replaced', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('two', 'CD'), ('types', 'NNS'), ('derivation', 'NN'), (':', ':'), ('Leftmost', 'NNP'), ('derivation', 'NN'), ('Rightmost', 'NNP'), ('derivation', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Leftmost', 'NNP'), ('derivation', 'NN'), ('A', 'NNP'), ('derivation', 'NN'), ('string', 'VBG'), ('grammar', 'NN'), ('left', 'VBD'), ('derivation', 'NN'), ('every', 'DT'), ('step', 'NN'), ('left', 'VBD'), ('non', 'JJ'), ('terminal', 'NN'), ('replaced', 'VBD'), ('.', '.')]

 (S
  There/EX
  two/CD
  (NP types/NNS derivation/NN)
  :/:
  (NP
    Leftmost/NNP
    derivation/NN
    Rightmost/NNP
    derivation/NN
    Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Leftmost/NNP derivation/NN A/NNP derivation/NN)
  string/VBG
  (NP grammar/NN)
  left/VBD
  (NP derivation/NN)
  (NP every/DT step/NN)
  left/VBD
  (NP non/JJ terminal/NN)
  replaced/VBD
  ./.) 


>> Noun Phrases are: 
 ['types derivation', 'Leftmost derivation Rightmost derivation Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Leftmost derivation A derivation', 'grammar', 'derivation', 'every step', 'non terminal']

>> Named Entities are: 
 [('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('two', 'two'), ('types', 'type'), ('derivation', 'deriv'), (':', ':'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('left', 'left'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('left', 'left'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('two', 'two'), ('types', 'type'), ('derivation', 'deriv'), (':', ':'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('left', 'left'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('left', 'left'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('two', 'two'), ('types', 'type'), ('derivation', 'derivation'), (':', ':'), ('Leftmost', 'Leftmost'), ('derivation', 'derivation'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leftmost', 'Leftmost'), ('derivation', 'derivation'), ('A', 'A'), ('derivation', 'derivation'), ('string', 'string'), ('grammar', 'grammar'), ('left', 'left'), ('derivation', 'derivation'), ('every', 'every'), ('step', 'step'), ('left', 'left'), ('non', 'non'), ('terminal', 'terminal'), ('replaced', 'replaced'), ('.', '.')]



============================ Sentence 21 =============================

Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a  		S 		S-S S*S-S 		a*S-S 		a*a-S 	a*a-a a S - S a a S * S Leftmost Derivation Parse tree S Parse tree represents the structure of derivation    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  27   Rightmost derivation  A derivation of a string  in a grammar  is a right most derivation if at every step the right most non terminal is replaced. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0S+S', '|', 'S-S', '|', 'S', '*', 'S', '|', 'S/S', '|', 'Output', 'string', ':', '*', 'a-a', 'S', '\uf0e0S-S', '\uf0e0S', '*', 'S-S', '\uf0e0a', '*', 'S-S', '\uf0e0a', '*', 'a-S', '\uf0e0a', '*', 'a-a', 'S', '-', 'S', 'S', '*', 'S', 'Leftmost', 'Derivation', 'Parse', 'tree', 'S', 'Parse', 'tree', 'represents', 'structure', 'derivation', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '27', 'Rightmost', 'derivation', 'A', 'derivation', 'string', 'grammar', 'right', 'derivation', 'every', 'step', 'right', 'non', 'terminal', 'replaced', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S-S'), ('S-S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', 'S/S'), ('S/S', '|'), ('|', 'Output'), ('Output', 'string'), ('string', ':'), (':', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '\uf0e0S-S'), ('\uf0e0S-S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S-S'), ('S-S', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'S-S'), ('S-S', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'a-S'), ('a-S', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '-'), ('-', 'S'), ('S', 'S'), ('S', '*'), ('*', 'S'), ('S', 'Leftmost'), ('Leftmost', 'Derivation'), ('Derivation', 'Parse'), ('Parse', 'tree'), ('tree', 'S'), ('S', 'Parse'), ('Parse', 'tree'), ('tree', 'represents'), ('represents', 'structure'), ('structure', 'derivation'), ('derivation', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '27'), ('27', 'Rightmost'), ('Rightmost', 'derivation'), ('derivation', 'A'), ('A', 'derivation'), ('derivation', 'string'), ('string', 'grammar'), ('grammar', 'right'), ('right', 'derivation'), ('derivation', 'every'), ('every', 'step'), ('step', 'right'), ('right', 'non'), ('non', 'terminal'), ('terminal', 'replaced'), ('replaced', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0S+S'), (':', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S-S'), ('|', 'S-S', '|'), ('S-S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', 'S/S'), ('|', 'S/S', '|'), ('S/S', '|', 'Output'), ('|', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '*'), (':', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '\uf0e0S-S'), ('S', '\uf0e0S-S', '\uf0e0S'), ('\uf0e0S-S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S-S'), ('*', 'S-S', '\uf0e0a'), ('S-S', '\uf0e0a', '*'), ('\uf0e0a', '*', 'S-S'), ('*', 'S-S', '\uf0e0a'), ('S-S', '\uf0e0a', '*'), ('\uf0e0a', '*', 'a-S'), ('*', 'a-S', '\uf0e0a'), ('a-S', '\uf0e0a', '*'), ('\uf0e0a', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '-'), ('S', '-', 'S'), ('-', 'S', 'S'), ('S', 'S', '*'), ('S', '*', 'S'), ('*', 'S', 'Leftmost'), ('S', 'Leftmost', 'Derivation'), ('Leftmost', 'Derivation', 'Parse'), ('Derivation', 'Parse', 'tree'), ('Parse', 'tree', 'S'), ('tree', 'S', 'Parse'), ('S', 'Parse', 'tree'), ('Parse', 'tree', 'represents'), ('tree', 'represents', 'structure'), ('represents', 'structure', 'derivation'), ('structure', 'derivation', 'Unit'), ('derivation', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '27'), ('›', '27', 'Rightmost'), ('27', 'Rightmost', 'derivation'), ('Rightmost', 'derivation', 'A'), ('derivation', 'A', 'derivation'), ('A', 'derivation', 'string'), ('derivation', 'string', 'grammar'), ('string', 'grammar', 'right'), ('grammar', 'right', 'derivation'), ('right', 'derivation', 'every'), ('derivation', 'every', 'step'), ('every', 'step', 'right'), ('step', 'right', 'non'), ('right', 'non', 'terminal'), ('non', 'terminal', 'replaced'), ('terminal', 'replaced', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S-S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('S/S', 'NNP'), ('|', 'NNP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('*', 'JJ'), ('a-a', 'JJ'), ('S', 'NNP'), ('\uf0e0S-S', 'JJ'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S-S', 'NNP'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('S-S', 'NNP'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('a-S', 'JJ'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('a-a', 'JJ'), ('S', 'NNP'), ('-', ':'), ('S', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('Leftmost', 'NNP'), ('Derivation', 'NNP'), ('Parse', 'NNP'), ('tree', 'NN'), ('S', 'NNP'), ('Parse', 'NNP'), ('tree', 'JJ'), ('represents', 'VBZ'), ('structure', 'NN'), ('derivation', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('27', 'CD'), ('Rightmost', 'NNP'), ('derivation', 'NN'), ('A', 'NNP'), ('derivation', 'NN'), ('string', 'VBG'), ('grammar', 'NN'), ('right', 'JJ'), ('derivation', 'NN'), ('every', 'DT'), ('step', 'NN'), ('right', 'RB'), ('non', 'JJ'), ('terminal', 'NN'), ('replaced', 'VBD'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP
    SS+S/NNP
    |/NNP
    S-S/NNP
    |/NNP
    S/NNP
    */NNP
    S/NNP
    |/NNP
    S/S/NNP
    |/NNP
    Output/NNP
    string/NN)
  :/:
  (NP */JJ a-a/JJ S/NNP)
  (NP S-S/JJ S/NNP */NNP S-S/NNP a/NNP */NNP S-S/NNP a/NNP */NNP)
  (NP a-S/JJ a/NNP */NNP)
  (NP a-a/JJ S/NNP)
  -/:
  (NP
    S/NNP
    S/NNP
    */NNP
    S/NNP
    Leftmost/NNP
    Derivation/NNP
    Parse/NNP
    tree/NN
    S/NNP
    Parse/NNP)
  tree/JJ
  represents/VBZ
  (NP structure/NN derivation/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  27/CD
  (NP Rightmost/NNP derivation/NN A/NNP derivation/NN)
  string/VBG
  (NP grammar/NN)
  (NP right/JJ derivation/NN)
  (NP every/DT step/NN)
  right/RB
  (NP non/JJ terminal/NN)
  replaced/VBD
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0S+S | S-S | S * S | S/S | Output string', '* a-a S', '\uf0e0S-S \uf0e0S * S-S \uf0e0a * S-S \uf0e0a *', 'a-S \uf0e0a *', 'a-a S', 'S S * S Leftmost Derivation Parse tree S Parse', 'structure derivation Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', 'Rightmost derivation A derivation', 'grammar', 'right derivation', 'every step', 'non terminal']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S-S', 's-'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S-S', '\uf0e0s-'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('S-S', 's-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-S', 'a-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('-', '-'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('Leftmost', 'leftmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('tree', 'tree'), ('S', 's'), ('Parse', 'pars'), ('tree', 'tree'), ('represents', 'repres'), ('structure', 'structur'), ('derivation', 'deriv'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('27', '27'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('right', 'right'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('right', 'right'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S-S', '\uf0e0s-s'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-s'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('S-S', 's-s'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-S', 'a-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('-', '-'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('Leftmost', 'leftmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('tree', 'tree'), ('S', 's'), ('Parse', 'pars'), ('tree', 'tree'), ('represents', 'repres'), ('structure', 'structur'), ('derivation', 'deriv'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('27', '27'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('right', 'right'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('right', 'right'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S-S', 'S-S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('S/S', 'S/S'), ('|', '|'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('\uf0e0S-S', '\uf0e0S-S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S-S', 'S-S'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('S-S', 'S-S'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-S', 'a-S'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('-', '-'), ('S', 'S'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('Leftmost', 'Leftmost'), ('Derivation', 'Derivation'), ('Parse', 'Parse'), ('tree', 'tree'), ('S', 'S'), ('Parse', 'Parse'), ('tree', 'tree'), ('represents', 'represents'), ('structure', 'structure'), ('derivation', 'derivation'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('27', '27'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('A', 'A'), ('derivation', 'derivation'), ('string', 'string'), ('grammar', 'grammar'), ('right', 'right'), ('derivation', 'derivation'), ('every', 'every'), ('step', 'step'), ('right', 'right'), ('non', 'non'), ('terminal', 'terminal'), ('replaced', 'replaced'), ('.', '.')]



============================ Sentence 22 =============================

It is all called canonical derivation. 


>> Tokens are: 
 ['It', 'called', 'canonical', 'derivation', '.']

>> Bigrams are: 
 [('It', 'called'), ('called', 'canonical'), ('canonical', 'derivation'), ('derivation', '.')]

>> Trigrams are: 
 [('It', 'called', 'canonical'), ('called', 'canonical', 'derivation'), ('canonical', 'derivation', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('called', 'VBD'), ('canonical', 'JJ'), ('derivation', 'NN'), ('.', '.')]

 (S It/PRP called/VBD (NP canonical/JJ derivation/NN) ./.) 


>> Noun Phrases are: 
 ['canonical derivation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('called', 'call'), ('canonical', 'canon'), ('derivation', 'deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('called', 'call'), ('canonical', 'canon'), ('derivation', 'deriv'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('called', 'called'), ('canonical', 'canonical'), ('derivation', 'derivation'), ('.', '.')]



============================ Sentence 23 =============================

Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a 		S 		S*S 		 S*S-S 		 S*S-a 		 S*a-a 		 a*a-a a S * S a a S - S Rightmost Derivation Parse Tree S  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  28  Example: Derivation  SA1B A0A | 𝜖 B0B | 1B | 𝜖 Perform leftmost & Rightmost derivation. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0S+S', '|', 'S-S', '|', 'S', '*', 'S', '|', 'S/S', '|', 'Output', 'string', ':', '*', 'a-a', 'S', '\uf0e0S', '*', 'S', '\uf0e0S', '*', 'S-S', '\uf0e0S', '*', 'S-a', '\uf0e0S', '*', 'a-a', '\uf0e0a', '*', 'a-a', 'S', '*', 'S', 'S', '-', 'S', 'Rightmost', 'Derivation', 'Parse', 'Tree', 'S', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '28', 'Example', ':', 'Derivation', 'S\uf0e0A1B', 'A\uf0e00A', '|', '𝜖', 'B\uf0e00B', '|', '1B', '|', '𝜖', 'Perform', 'leftmost', '&', 'Rightmost', 'derivation', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S-S'), ('S-S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', 'S/S'), ('S/S', '|'), ('|', 'Output'), ('Output', 'string'), ('string', ':'), (':', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S'), ('S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S-S'), ('S-S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S-a'), ('S-a', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'a-a'), ('a-a', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '*'), ('*', 'S'), ('S', 'S'), ('S', '-'), ('-', 'S'), ('S', 'Rightmost'), ('Rightmost', 'Derivation'), ('Derivation', 'Parse'), ('Parse', 'Tree'), ('Tree', 'S'), ('S', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '28'), ('28', 'Example'), ('Example', ':'), (':', 'Derivation'), ('Derivation', 'S\uf0e0A1B'), ('S\uf0e0A1B', 'A\uf0e00A'), ('A\uf0e00A', '|'), ('|', '𝜖'), ('𝜖', 'B\uf0e00B'), ('B\uf0e00B', '|'), ('|', '1B'), ('1B', '|'), ('|', '𝜖'), ('𝜖', 'Perform'), ('Perform', 'leftmost'), ('leftmost', '&'), ('&', 'Rightmost'), ('Rightmost', 'derivation'), ('derivation', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0S+S'), (':', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S-S'), ('|', 'S-S', '|'), ('S-S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', 'S/S'), ('|', 'S/S', '|'), ('S/S', '|', 'Output'), ('|', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '*'), (':', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '\uf0e0S'), ('S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S'), ('*', 'S', '\uf0e0S'), ('S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S-S'), ('*', 'S-S', '\uf0e0S'), ('S-S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S-a'), ('*', 'S-a', '\uf0e0S'), ('S-a', '\uf0e0S', '*'), ('\uf0e0S', '*', 'a-a'), ('*', 'a-a', '\uf0e0a'), ('a-a', '\uf0e0a', '*'), ('\uf0e0a', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '*'), ('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', '-'), ('S', '-', 'S'), ('-', 'S', 'Rightmost'), ('S', 'Rightmost', 'Derivation'), ('Rightmost', 'Derivation', 'Parse'), ('Derivation', 'Parse', 'Tree'), ('Parse', 'Tree', 'S'), ('Tree', 'S', 'Unit'), ('S', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '28'), ('›', '28', 'Example'), ('28', 'Example', ':'), ('Example', ':', 'Derivation'), (':', 'Derivation', 'S\uf0e0A1B'), ('Derivation', 'S\uf0e0A1B', 'A\uf0e00A'), ('S\uf0e0A1B', 'A\uf0e00A', '|'), ('A\uf0e00A', '|', '𝜖'), ('|', '𝜖', 'B\uf0e00B'), ('𝜖', 'B\uf0e00B', '|'), ('B\uf0e00B', '|', '1B'), ('|', '1B', '|'), ('1B', '|', '𝜖'), ('|', '𝜖', 'Perform'), ('𝜖', 'Perform', 'leftmost'), ('Perform', 'leftmost', '&'), ('leftmost', '&', 'Rightmost'), ('&', 'Rightmost', 'derivation'), ('Rightmost', 'derivation', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S-S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('S/S', 'NNP'), ('|', 'NNP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('*', 'JJ'), ('a-a', 'JJ'), ('S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S-S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S-a', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('a-a', 'JJ'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('a-a', 'JJ'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('-', ':'), ('S', 'NN'), ('Rightmost', 'NNP'), ('Derivation', 'NNP'), ('Parse', 'NNP'), ('Tree', 'NNP'), ('S', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('28', 'CD'), ('Example', 'NN'), (':', ':'), ('Derivation', 'NNP'), ('S\uf0e0A1B', 'NNP'), ('A\uf0e00A', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('B\uf0e00B', 'NNP'), ('|', 'VBD'), ('1B', 'CD'), ('|', 'NNP'), ('𝜖', 'NNP'), ('Perform', 'NNP'), ('leftmost', 'NN'), ('&', 'CC'), ('Rightmost', 'NNP'), ('derivation', 'NN'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP
    SS+S/NNP
    |/NNP
    S-S/NNP
    |/NNP
    S/NNP
    */NNP
    S/NNP
    |/NNP
    S/S/NNP
    |/NNP
    Output/NNP
    string/NN)
  :/:
  (NP
    */JJ
    a-a/JJ
    S/NNP
    S/NNP
    */NNP
    S/NNP
    S/NNP
    */NNP
    S-S/NNP
    S/NNP
    */NNP
    S-a/NNP
    S/NNP
    */NNP)
  (NP a-a/JJ a/NNP */NNP)
  (NP a-a/JJ S/NNP */NNP S/NNP S/NNP)
  -/:
  (NP
    S/NN
    Rightmost/NNP
    Derivation/NNP
    Parse/NNP
    Tree/NNP
    S/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  28/CD
  (NP Example/NN)
  :/:
  (NP Derivation/NNP SA1B/NNP A0A/NNP |/NNP 𝜖/NNP B0B/NNP)
  |/VBD
  1B/CD
  (NP |/NNP 𝜖/NNP Perform/NNP leftmost/NN)
  &/CC
  (NP Rightmost/NNP derivation/NN)
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0S+S | S-S | S * S | S/S | Output string', '* a-a S \uf0e0S * S \uf0e0S * S-S \uf0e0S * S-a \uf0e0S *', 'a-a \uf0e0a *', 'a-a S * S S', 'S Rightmost Derivation Parse Tree S Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', 'Example', 'Derivation S\uf0e0A1B A\uf0e00A | 𝜖 B\uf0e00B', '| 𝜖 Perform leftmost', 'Rightmost derivation']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Rightmost Derivation Parse Tree'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Rightmost')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S-S', 's-'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-a', 's-a'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('a-a', 'a-a'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('-', '-'), ('S', 's'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('Tree', 'tree'), ('S', 's'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('28', '28'), ('Example', 'exampl'), (':', ':'), ('Derivation', 'deriv'), ('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', '𝜖'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('&', '&'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-s'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-a', 's-a'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('a-a', 'a-a'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('-', '-'), ('S', 's'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('Tree', 'tree'), ('S', 's'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('28', '28'), ('Example', 'exampl'), (':', ':'), ('Derivation', 'deriv'), ('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', '𝜖'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('&', '&'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S-S', 'S-S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('S/S', 'S/S'), ('|', '|'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S', 'S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S-S', 'S-S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S-a', 'S-a'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('a-a', 'a-a'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('-', '-'), ('S', 'S'), ('Rightmost', 'Rightmost'), ('Derivation', 'Derivation'), ('Parse', 'Parse'), ('Tree', 'Tree'), ('S', 'S'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('28', '28'), ('Example', 'Example'), (':', ':'), ('Derivation', 'Derivation'), ('S\uf0e0A1B', 'S\uf0e0A1B'), ('A\uf0e00A', 'A\uf0e00A'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'B\uf0e00B'), ('|', '|'), ('1B', '1B'), ('|', '|'), ('𝜖', '𝜖'), ('Perform', 'Perform'), ('leftmost', 'leftmost'), ('&', '&'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('.', '.')]



============================ Sentence 24 =============================

(String: 00101)  Leftmost Derivation		 S 				 			 A1B 							 0A1B				 00A1B 001B 0010B 00101B 00101 Rightmost Derivation 	S 		  	A1B 	A10B 	A101B 	A101 	0A101 	00A101 	00101   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Exercise: Derivation  Perform leftmost derivation and draw parse tree. 


>> Tokens are: 
 ['(', 'String', ':', '00101', ')', 'Leftmost', 'Derivation', 'S', 'A1B', '0A1B', '00A1B', '001B', '0010B', '00101B', '00101', 'Rightmost', 'Derivation', 'S', 'A1B', 'A10B', 'A101B', 'A101', '0A101', '00A101', '00101', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Exercise', ':', 'Derivation', 'Perform', 'leftmost', 'derivation', 'draw', 'parse', 'tree', '.']

>> Bigrams are: 
 [('(', 'String'), ('String', ':'), (':', '00101'), ('00101', ')'), (')', 'Leftmost'), ('Leftmost', 'Derivation'), ('Derivation', 'S'), ('S', 'A1B'), ('A1B', '0A1B'), ('0A1B', '00A1B'), ('00A1B', '001B'), ('001B', '0010B'), ('0010B', '00101B'), ('00101B', '00101'), ('00101', 'Rightmost'), ('Rightmost', 'Derivation'), ('Derivation', 'S'), ('S', 'A1B'), ('A1B', 'A10B'), ('A10B', 'A101B'), ('A101B', 'A101'), ('A101', '0A101'), ('0A101', '00A101'), ('00A101', '00101'), ('00101', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', ':'), (':', 'Derivation'), ('Derivation', 'Perform'), ('Perform', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'draw'), ('draw', 'parse'), ('parse', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('(', 'String', ':'), ('String', ':', '00101'), (':', '00101', ')'), ('00101', ')', 'Leftmost'), (')', 'Leftmost', 'Derivation'), ('Leftmost', 'Derivation', 'S'), ('Derivation', 'S', 'A1B'), ('S', 'A1B', '0A1B'), ('A1B', '0A1B', '00A1B'), ('0A1B', '00A1B', '001B'), ('00A1B', '001B', '0010B'), ('001B', '0010B', '00101B'), ('0010B', '00101B', '00101'), ('00101B', '00101', 'Rightmost'), ('00101', 'Rightmost', 'Derivation'), ('Rightmost', 'Derivation', 'S'), ('Derivation', 'S', 'A1B'), ('S', 'A1B', 'A10B'), ('A1B', 'A10B', 'A101B'), ('A10B', 'A101B', 'A101'), ('A101B', 'A101', '0A101'), ('A101', '0A101', '00A101'), ('0A101', '00A101', '00101'), ('00A101', '00101', 'Unit'), ('00101', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', ':'), ('Exercise', ':', 'Derivation'), (':', 'Derivation', 'Perform'), ('Derivation', 'Perform', 'leftmost'), ('Perform', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'draw'), ('derivation', 'draw', 'parse'), ('draw', 'parse', 'tree'), ('parse', 'tree', '.')]

>> POS Tags are: 
 [('(', '('), ('String', 'VBG'), (':', ':'), ('00101', 'CD'), (')', ')'), ('Leftmost', 'FW'), ('Derivation', 'NNP'), ('S', 'NNP'), ('A1B', 'NNP'), ('0A1B', 'CD'), ('00A1B', 'CD'), ('001B', 'CD'), ('0010B', 'CD'), ('00101B', 'CD'), ('00101', 'CD'), ('Rightmost', 'NNP'), ('Derivation', 'NNP'), ('S', 'NNP'), ('A1B', 'NNP'), ('A10B', 'NNP'), ('A101B', 'NNP'), ('A101', 'NNP'), ('0A101', 'CD'), ('00A101', 'CD'), ('00101', 'CD'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Exercise', 'NN'), (':', ':'), ('Derivation', 'NN'), ('Perform', 'NNP'), ('leftmost', 'NN'), ('derivation', 'NN'), ('draw', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')]

 (S
  (/(
  String/VBG
  :/:
  00101/CD
  )/)
  Leftmost/FW
  (NP Derivation/NNP S/NNP A1B/NNP)
  0A1B/CD
  00A1B/CD
  001B/CD
  0010B/CD
  00101B/CD
  00101/CD
  (NP
    Rightmost/NNP
    Derivation/NNP
    S/NNP
    A1B/NNP
    A10B/NNP
    A101B/NNP
    A101/NNP)
  0A101/CD
  00A101/CD
  00101/CD
  (NP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Exercise/NN)
  :/:
  (NP Derivation/NN Perform/NNP leftmost/NN derivation/NN)
  (NP draw/JJ parse/NN tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['Derivation S A1B', 'Rightmost Derivation S A1B A10B A101B A101', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Exercise', 'Derivation Perform leftmost derivation', 'draw parse tree']

>> Named Entities are: 
 [('ORGANIZATION', 'Derivation'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Perform')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('String', 'string'), (':', ':'), ('00101', '00101'), (')', ')'), ('Leftmost', 'leftmost'), ('Derivation', 'deriv'), ('S', 's'), ('A1B', 'a1b'), ('0A1B', '0a1b'), ('00A1B', '00a1b'), ('001B', '001b'), ('0010B', '0010b'), ('00101B', '00101b'), ('00101', '00101'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('S', 's'), ('A1B', 'a1b'), ('A10B', 'a10b'), ('A101B', 'a101b'), ('A101', 'a101'), ('0A101', '0a101'), ('00A101', '00a101'), ('00101', '00101'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Derivation', 'deriv'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('String', 'string'), (':', ':'), ('00101', '00101'), (')', ')'), ('Leftmost', 'leftmost'), ('Derivation', 'deriv'), ('S', 's'), ('A1B', 'a1b'), ('0A1B', '0a1b'), ('00A1B', '00a1b'), ('001B', '001b'), ('0010B', '0010b'), ('00101B', '00101b'), ('00101', '00101'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('S', 's'), ('A1B', 'a1b'), ('A10B', 'a10b'), ('A101B', 'a101b'), ('A101', 'a101'), ('0A101', '0a101'), ('00A101', '00a101'), ('00101', '00101'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Derivation', 'deriv'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('String', 'String'), (':', ':'), ('00101', '00101'), (')', ')'), ('Leftmost', 'Leftmost'), ('Derivation', 'Derivation'), ('S', 'S'), ('A1B', 'A1B'), ('0A1B', '0A1B'), ('00A1B', '00A1B'), ('001B', '001B'), ('0010B', '0010B'), ('00101B', '00101B'), ('00101', '00101'), ('Rightmost', 'Rightmost'), ('Derivation', 'Derivation'), ('S', 'S'), ('A1B', 'A1B'), ('A10B', 'A10B'), ('A101B', 'A101B'), ('A101', 'A101'), ('0A101', '0A101'), ('00A101', '00A101'), ('00101', '00101'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), (':', ':'), ('Derivation', 'Derivation'), ('Perform', 'Perform'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 25 =============================

SA1B A0A | 𝜖 B0B | 1B | 𝜖  Output string: 1001. 


>> Tokens are: 
 ['S\uf0e0A1B', 'A\uf0e00A', '|', '𝜖', 'B\uf0e00B', '|', '1B', '|', '𝜖', 'Output', 'string', ':', '1001', '.']

>> Bigrams are: 
 [('S\uf0e0A1B', 'A\uf0e00A'), ('A\uf0e00A', '|'), ('|', '𝜖'), ('𝜖', 'B\uf0e00B'), ('B\uf0e00B', '|'), ('|', '1B'), ('1B', '|'), ('|', '𝜖'), ('𝜖', 'Output'), ('Output', 'string'), ('string', ':'), (':', '1001'), ('1001', '.')]

>> Trigrams are: 
 [('S\uf0e0A1B', 'A\uf0e00A', '|'), ('A\uf0e00A', '|', '𝜖'), ('|', '𝜖', 'B\uf0e00B'), ('𝜖', 'B\uf0e00B', '|'), ('B\uf0e00B', '|', '1B'), ('|', '1B', '|'), ('1B', '|', '𝜖'), ('|', '𝜖', 'Output'), ('𝜖', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '1001'), (':', '1001', '.')]

>> POS Tags are: 
 [('S\uf0e0A1B', 'NNP'), ('A\uf0e00A', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('B\uf0e00B', 'NNP'), ('|', 'VBD'), ('1B', 'CD'), ('|', 'NNP'), ('𝜖', 'NNP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('1001', 'CD'), ('.', '.')]

 (S
  (NP SA1B/NNP A0A/NNP |/NNP 𝜖/NNP B0B/NNP)
  |/VBD
  1B/CD
  (NP |/NNP 𝜖/NNP Output/NNP string/NN)
  :/:
  1001/CD
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e0A1B A\uf0e00A | 𝜖 B\uf0e00B', '| 𝜖 Output string']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', '𝜖'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', '𝜖'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e0A1B', 'S\uf0e0A1B'), ('A\uf0e00A', 'A\uf0e00A'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'B\uf0e00B'), ('|', '|'), ('1B', '1B'), ('|', '|'), ('𝜖', '𝜖'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('.', '.')]



============================ Sentence 26 =============================

Perform rightmost derivation and draw parse tree. 


>> Tokens are: 
 ['Perform', 'rightmost', 'derivation', 'draw', 'parse', 'tree', '.']

>> Bigrams are: 
 [('Perform', 'rightmost'), ('rightmost', 'derivation'), ('derivation', 'draw'), ('draw', 'parse'), ('parse', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('Perform', 'rightmost', 'derivation'), ('rightmost', 'derivation', 'draw'), ('derivation', 'draw', 'parse'), ('draw', 'parse', 'tree'), ('parse', 'tree', '.')]

>> POS Tags are: 
 [('Perform', 'NNP'), ('rightmost', 'NN'), ('derivation', 'NN'), ('draw', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP Perform/NNP rightmost/NN derivation/NN)
  (NP draw/JJ parse/NN tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['Perform rightmost derivation', 'draw parse tree']

>> Named Entities are: 
 [('GPE', 'Perform')] 

>> Stemming using Porter Stemmer: 
 [('Perform', 'perform'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Perform', 'perform'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('Perform', 'Perform'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 27 =============================

EE+E | E*E | id | (E) | -E Output string : id + id * id. 


>> Tokens are: 
 ['E\uf0e0E+E', '|', 'E', '*', 'E', '|', 'id', '|', '(', 'E', ')', '|', '-E', 'Output', 'string', ':', 'id', '+', 'id', '*', 'id', '.']

>> Bigrams are: 
 [('E\uf0e0E+E', '|'), ('|', 'E'), ('E', '*'), ('*', 'E'), ('E', '|'), ('|', 'id'), ('id', '|'), ('|', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', '-E'), ('-E', 'Output'), ('Output', 'string'), ('string', ':'), (':', 'id'), ('id', '+'), ('+', 'id'), ('id', '*'), ('*', 'id'), ('id', '.')]

>> Trigrams are: 
 [('E\uf0e0E+E', '|', 'E'), ('|', 'E', '*'), ('E', '*', 'E'), ('*', 'E', '|'), ('E', '|', 'id'), ('|', 'id', '|'), ('id', '|', '('), ('|', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', '-E'), ('|', '-E', 'Output'), ('-E', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', 'id'), (':', 'id', '+'), ('id', '+', 'id'), ('+', 'id', '*'), ('id', '*', 'id'), ('*', 'id', '.')]

>> POS Tags are: 
 [('E\uf0e0E+E', 'NNP'), ('|', 'NNP'), ('E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('|', 'NNP'), ('id', 'NN'), ('|', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('-E', 'JJ'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('id', 'JJ'), ('+', 'NNP'), ('id', 'NN'), ('*', 'NNP'), ('id', 'NN'), ('.', '.')]

 (S
  (NP EE+E/NNP |/NNP E/NNP */NNP E/NNP |/NNP id/NN |/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP -E/JJ Output/NNP string/NN)
  :/:
  (NP id/JJ +/NNP id/NN */NNP id/NN)
  ./.) 


>> Noun Phrases are: 
 ['E\uf0e0E+E | E * E | id |', 'E', '-E Output string', 'id + id * id']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('E\uf0e0E+E', 'e\uf0e0e+'), ('|', '|'), ('E', 'e'), ('*', '*'), ('E', 'e'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E\uf0e0E+E', 'e\uf0e0e+'), ('|', '|'), ('E', 'e'), ('*', '*'), ('E', 'e'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('.', '.')]

>> Lemmatization: 
 [('E\uf0e0E+E', 'E\uf0e0E+E'), ('|', '|'), ('E', 'E'), ('*', '*'), ('E', 'E'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('-E', '-E'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('.', '.')]



============================ Sentence 28 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Ambiguous grammar   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Ambiguous grammar Ambiguous grammar is one that produces more than one leftmost or more then one rightmost derivation for the same sentence. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Ambiguous', 'grammar', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Ambiguous', 'grammar', 'Ambiguous', 'grammar', 'one', 'produces', 'one', 'leftmost', 'one', 'rightmost', 'derivation', 'sentence', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'one'), ('one', 'produces'), ('produces', 'one'), ('one', 'leftmost'), ('leftmost', 'one'), ('one', 'rightmost'), ('rightmost', 'derivation'), ('derivation', 'sentence'), ('sentence', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Ambiguous'), ('›', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'Unit'), ('grammar', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Ambiguous'), ('›', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'Ambiguous'), ('grammar', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'one'), ('grammar', 'one', 'produces'), ('one', 'produces', 'one'), ('produces', 'one', 'leftmost'), ('one', 'leftmost', 'one'), ('leftmost', 'one', 'rightmost'), ('one', 'rightmost', 'derivation'), ('rightmost', 'derivation', 'sentence'), ('derivation', 'sentence', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Ambiguous', 'NNP'), ('grammar', 'NN'), ('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Ambiguous', 'NNP'), ('grammar', 'NN'), ('Ambiguous', 'NNP'), ('grammar', 'NN'), ('one', 'CD'), ('produces', 'VBZ'), ('one', 'CD'), ('leftmost', 'NN'), ('one', 'CD'), ('rightmost', 'NN'), ('derivation', 'NN'), ('sentence', 'NN'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Ambiguous/NNP grammar/NN Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Ambiguous/NNP grammar/NN Ambiguous/NNP grammar/NN)
  one/CD
  produces/VBZ
  one/CD
  (NP leftmost/NN)
  one/CD
  (NP rightmost/NN derivation/NN sentence/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Ambiguous grammar Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Ambiguous grammar Ambiguous grammar', 'leftmost', 'rightmost derivation sentence']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('one', 'one'), ('produces', 'produc'), ('one', 'one'), ('leftmost', 'leftmost'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('sentence', 'sentenc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('one', 'one'), ('produces', 'produc'), ('one', 'one'), ('leftmost', 'leftmost'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('sentence', 'sentenc'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('one', 'one'), ('produces', 'produce'), ('one', 'one'), ('leftmost', 'leftmost'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('sentence', 'sentence'), ('.', '.')]



============================ Sentence 29 =============================

Grammar: SS+S | S*S | (S) | a		Output string: a+a*a  S					S S*S					S+S S+S*S				a+S a+S*S				a+S*S a+a*S				a+a*S a+a*a				a+a*a Here, Two leftmost derivation for string a+a*a is possible hence, above grammar is ambiguous. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0S+S', '|', 'S', '*', 'S', '|', '(', 'S', ')', '|', 'Output', 'string', ':', 'a+a', '*', 'S', 'S', '\uf0e0S', '*', 'S', '\uf0e0S+S', '\uf0e0S+S', '*', 'S', '\uf0e0a+S', '\uf0e0a+S', '*', 'S', '\uf0e0a+S', '*', 'S', '\uf0e0a+a', '*', 'S', '\uf0e0a+a', '*', 'S', '\uf0e0a+a', '*', '\uf0e0a+a', '*', 'Here', ',', 'Two', 'leftmost', 'derivation', 'string', 'a+a', '*', 'possible', 'hence', ',', 'grammar', 'ambiguous', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', '('), ('(', 'S'), ('S', ')'), (')', '|'), ('|', 'Output'), ('Output', 'string'), ('string', ':'), (':', 'a+a'), ('a+a', '*'), ('*', 'S'), ('S', 'S'), ('S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S'), ('S', '\uf0e0S+S'), ('\uf0e0S+S', '\uf0e0S+S'), ('\uf0e0S+S', '*'), ('*', 'S'), ('S', '\uf0e0a+S'), ('\uf0e0a+S', '\uf0e0a+S'), ('\uf0e0a+S', '*'), ('*', 'S'), ('S', '\uf0e0a+S'), ('\uf0e0a+S', '*'), ('*', 'S'), ('S', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', 'S'), ('S', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', 'S'), ('S', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', 'Here'), ('Here', ','), (',', 'Two'), ('Two', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'string'), ('string', 'a+a'), ('a+a', '*'), ('*', 'possible'), ('possible', 'hence'), ('hence', ','), (',', 'grammar'), ('grammar', 'ambiguous'), ('ambiguous', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0S+S'), (':', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', '('), ('|', '(', 'S'), ('(', 'S', ')'), ('S', ')', '|'), (')', '|', 'Output'), ('|', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', 'a+a'), (':', 'a+a', '*'), ('a+a', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', '\uf0e0S'), ('S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S'), ('*', 'S', '\uf0e0S+S'), ('S', '\uf0e0S+S', '\uf0e0S+S'), ('\uf0e0S+S', '\uf0e0S+S', '*'), ('\uf0e0S+S', '*', 'S'), ('*', 'S', '\uf0e0a+S'), ('S', '\uf0e0a+S', '\uf0e0a+S'), ('\uf0e0a+S', '\uf0e0a+S', '*'), ('\uf0e0a+S', '*', 'S'), ('*', 'S', '\uf0e0a+S'), ('S', '\uf0e0a+S', '*'), ('\uf0e0a+S', '*', 'S'), ('*', 'S', '\uf0e0a+a'), ('S', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', 'S'), ('*', 'S', '\uf0e0a+a'), ('S', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', 'S'), ('*', 'S', '\uf0e0a+a'), ('S', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', '\uf0e0a+a'), ('*', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', 'Here'), ('*', 'Here', ','), ('Here', ',', 'Two'), (',', 'Two', 'leftmost'), ('Two', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'string'), ('derivation', 'string', 'a+a'), ('string', 'a+a', '*'), ('a+a', '*', 'possible'), ('*', 'possible', 'hence'), ('possible', 'hence', ','), ('hence', ',', 'grammar'), (',', 'grammar', 'ambiguous'), ('grammar', 'ambiguous', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('|', 'VBP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('a+a', 'JJ'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0S+S', 'NNP'), ('\uf0e0S+S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+S', 'NNP'), ('\uf0e0a+S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('Here', 'RB'), (',', ','), ('Two', 'CD'), ('leftmost', 'JJS'), ('derivation', 'NN'), ('string', 'VBG'), ('a+a', 'JJ'), ('*', 'NNP'), ('possible', 'JJ'), ('hence', 'NN'), (',', ','), ('grammar', 'NN'), ('ambiguous', 'JJ'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP SS+S/NNP |/NNP S/NNP */NNP S/NNP |/NNP)
  (/(
  (NP S/NNP)
  )/)
  |/VBP
  (NP Output/NNP string/NN)
  :/:
  (NP
    a+a/JJ
    */NNP
    S/NNP
    S/NNP
    S/NNP
    */NNP
    S/NNP
    S+S/NNP
    S+S/NNP
    */NNP
    S/NNP
    a+S/NNP
    a+S/NNP
    */NNP
    S/NNP
    a+S/NNP
    */NNP
    S/NNP
    a+a/NNP
    */NNP
    S/NNP
    a+a/NNP
    */NNP
    S/NNP
    a+a/NNP
    */NNP
    a+a/NNP
    */NNP)
  Here/RB
  ,/,
  Two/CD
  leftmost/JJS
  (NP derivation/NN)
  string/VBG
  (NP a+a/JJ */NNP)
  (NP possible/JJ hence/NN)
  ,/,
  (NP grammar/NN)
  ambiguous/JJ
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0S+S | S * S |', 'S', 'Output string', 'a+a * S S \uf0e0S * S \uf0e0S+S \uf0e0S+S * S \uf0e0a+S \uf0e0a+S * S \uf0e0a+S * S \uf0e0a+a * S \uf0e0a+a * S \uf0e0a+a * \uf0e0a+a *', 'derivation', 'a+a *', 'possible hence', 'grammar']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Output')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 's'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S+S', '\uf0e0s+'), ('\uf0e0S+S', '\uf0e0s+'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('Here', 'here'), (',', ','), ('Two', 'two'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('possible', 'possibl'), ('hence', 'henc'), (',', ','), ('grammar', 'grammar'), ('ambiguous', 'ambigu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 's'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S+S', '\uf0e0s+s'), ('\uf0e0S+S', '\uf0e0s+s'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('Here', 'here'), (',', ','), ('Two', 'two'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('possible', 'possibl'), ('hence', 'henc'), (',', ','), ('grammar', 'grammar'), ('ambiguous', 'ambigu'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('(', '('), ('S', 'S'), (')', ')'), ('|', '|'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S', 'S'), ('\uf0e0S+S', '\uf0e0S+S'), ('\uf0e0S+S', '\uf0e0S+S'), ('*', '*'), ('S', 'S'), ('\uf0e0a+S', '\uf0e0a+S'), ('\uf0e0a+S', '\uf0e0a+S'), ('*', '*'), ('S', 'S'), ('\uf0e0a+S', '\uf0e0a+S'), ('*', '*'), ('S', 'S'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 'S'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 'S'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('Here', 'Here'), (',', ','), ('Two', 'Two'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('possible', 'possible'), ('hence', 'hence'), (',', ','), ('grammar', 'grammar'), ('ambiguous', 'ambiguous'), ('.', '.')]



============================ Sentence 30 =============================

a S * S a a S S + S a S + S a a S * S S  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  32  Exercise: Ambiguous grammar Check whether following grammars are ambiguous or not: S aS | Sa | 𝜖  (string: aaaa) S aSbS | bSaS | 𝜖  (string: abab) SSS+ | SS* | a (string: aa+a*)  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Grammar: S S+S | S*S  | (S) | a   Equivalent unambiguous grammar is 	   	  S S + T | T T T * F | F F (S) | a   Equivalent  unambiguous  grammar  Here, two left most derivation is not possible for string a+a*a hence, grammar is unambiguous. 


>> Tokens are: 
 ['S', '*', 'S', 'S', 'S', '+', 'S', 'S', '+', 'S', 'S', '*', 'S', 'S', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '32', 'Exercise', ':', 'Ambiguous', 'grammar', 'Check', 'whether', 'following', 'grammars', 'ambiguous', ':', 'S\uf0e0', 'aS', '|', 'Sa', '|', '𝜖', '(', 'string', ':', 'aaaa', ')', 'S\uf0e0', 'aSbS', '|', 'bSaS', '|', '𝜖', '(', 'string', ':', 'abab', ')', 'S\uf0e0SS+', '|', 'SS', '*', '|', '(', 'string', ':', 'aa+a', '*', ')', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Grammar', ':', 'S\uf0e0', 'S+S', '|', 'S', '*', 'S', '|', '(', 'S', ')', '|', 'Equivalent', 'unambiguous', 'grammar', 'S\uf0e0', 'S', '+', 'T', '|', 'T', 'T\uf0e0', 'T', '*', 'F', '|', 'F', 'F\uf0e0', '(', 'S', ')', '|', 'Equivalent', 'unambiguous', 'grammar', 'Here', ',', 'two', 'left', 'derivation', 'possible', 'string', 'a+a', '*', 'hence', ',', 'grammar', 'unambiguous', '.']

>> Bigrams are: 
 [('S', '*'), ('*', 'S'), ('S', 'S'), ('S', 'S'), ('S', '+'), ('+', 'S'), ('S', 'S'), ('S', '+'), ('+', 'S'), ('S', 'S'), ('S', '*'), ('*', 'S'), ('S', 'S'), ('S', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '32'), ('32', 'Exercise'), ('Exercise', ':'), (':', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'Check'), ('Check', 'whether'), ('whether', 'following'), ('following', 'grammars'), ('grammars', 'ambiguous'), ('ambiguous', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'aS'), ('aS', '|'), ('|', 'Sa'), ('Sa', '|'), ('|', '𝜖'), ('𝜖', '('), ('(', 'string'), ('string', ':'), (':', 'aaaa'), ('aaaa', ')'), (')', 'S\uf0e0'), ('S\uf0e0', 'aSbS'), ('aSbS', '|'), ('|', 'bSaS'), ('bSaS', '|'), ('|', '𝜖'), ('𝜖', '('), ('(', 'string'), ('string', ':'), (':', 'abab'), ('abab', ')'), (')', 'S\uf0e0SS+'), ('S\uf0e0SS+', '|'), ('|', 'SS'), ('SS', '*'), ('*', '|'), ('|', '('), ('(', 'string'), ('string', ':'), (':', 'aa+a'), ('aa+a', '*'), ('*', ')'), (')', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Grammar'), ('Grammar', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'S+S'), ('S+S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', '('), ('(', 'S'), ('S', ')'), (')', '|'), ('|', 'Equivalent'), ('Equivalent', 'unambiguous'), ('unambiguous', 'grammar'), ('grammar', 'S\uf0e0'), ('S\uf0e0', 'S'), ('S', '+'), ('+', 'T'), ('T', '|'), ('|', 'T'), ('T', 'T\uf0e0'), ('T\uf0e0', 'T'), ('T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'S'), ('S', ')'), (')', '|'), ('|', 'Equivalent'), ('Equivalent', 'unambiguous'), ('unambiguous', 'grammar'), ('grammar', 'Here'), ('Here', ','), (',', 'two'), ('two', 'left'), ('left', 'derivation'), ('derivation', 'possible'), ('possible', 'string'), ('string', 'a+a'), ('a+a', '*'), ('*', 'hence'), ('hence', ','), (',', 'grammar'), ('grammar', 'unambiguous'), ('unambiguous', '.')]

>> Trigrams are: 
 [('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', 'S'), ('S', 'S', '+'), ('S', '+', 'S'), ('+', 'S', 'S'), ('S', 'S', '+'), ('S', '+', 'S'), ('+', 'S', 'S'), ('S', 'S', '*'), ('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', 'Unit'), ('S', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '32'), ('›', '32', 'Exercise'), ('32', 'Exercise', ':'), ('Exercise', ':', 'Ambiguous'), (':', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'Check'), ('grammar', 'Check', 'whether'), ('Check', 'whether', 'following'), ('whether', 'following', 'grammars'), ('following', 'grammars', 'ambiguous'), ('grammars', 'ambiguous', ':'), ('ambiguous', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'aS'), ('S\uf0e0', 'aS', '|'), ('aS', '|', 'Sa'), ('|', 'Sa', '|'), ('Sa', '|', '𝜖'), ('|', '𝜖', '('), ('𝜖', '(', 'string'), ('(', 'string', ':'), ('string', ':', 'aaaa'), (':', 'aaaa', ')'), ('aaaa', ')', 'S\uf0e0'), (')', 'S\uf0e0', 'aSbS'), ('S\uf0e0', 'aSbS', '|'), ('aSbS', '|', 'bSaS'), ('|', 'bSaS', '|'), ('bSaS', '|', '𝜖'), ('|', '𝜖', '('), ('𝜖', '(', 'string'), ('(', 'string', ':'), ('string', ':', 'abab'), (':', 'abab', ')'), ('abab', ')', 'S\uf0e0SS+'), (')', 'S\uf0e0SS+', '|'), ('S\uf0e0SS+', '|', 'SS'), ('|', 'SS', '*'), ('SS', '*', '|'), ('*', '|', '('), ('|', '(', 'string'), ('(', 'string', ':'), ('string', ':', 'aa+a'), (':', 'aa+a', '*'), ('aa+a', '*', ')'), ('*', ')', 'Unit'), (')', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Grammar'), ('›', 'Grammar', ':'), ('Grammar', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'S+S'), ('S\uf0e0', 'S+S', '|'), ('S+S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', '('), ('|', '(', 'S'), ('(', 'S', ')'), ('S', ')', '|'), (')', '|', 'Equivalent'), ('|', 'Equivalent', 'unambiguous'), ('Equivalent', 'unambiguous', 'grammar'), ('unambiguous', 'grammar', 'S\uf0e0'), ('grammar', 'S\uf0e0', 'S'), ('S\uf0e0', 'S', '+'), ('S', '+', 'T'), ('+', 'T', '|'), ('T', '|', 'T'), ('|', 'T', 'T\uf0e0'), ('T', 'T\uf0e0', 'T'), ('T\uf0e0', 'T', '*'), ('T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', '('), ('F\uf0e0', '(', 'S'), ('(', 'S', ')'), ('S', ')', '|'), (')', '|', 'Equivalent'), ('|', 'Equivalent', 'unambiguous'), ('Equivalent', 'unambiguous', 'grammar'), ('unambiguous', 'grammar', 'Here'), ('grammar', 'Here', ','), ('Here', ',', 'two'), (',', 'two', 'left'), ('two', 'left', 'derivation'), ('left', 'derivation', 'possible'), ('derivation', 'possible', 'string'), ('possible', 'string', 'a+a'), ('string', 'a+a', '*'), ('a+a', '*', 'hence'), ('*', 'hence', ','), ('hence', ',', 'grammar'), (',', 'grammar', 'unambiguous'), ('grammar', 'unambiguous', '.')]

>> POS Tags are: 
 [('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('+', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('+', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('32', 'CD'), ('Exercise', 'NN'), (':', ':'), ('Ambiguous', 'JJ'), ('grammar', 'NN'), ('Check', 'NNP'), ('whether', 'IN'), ('following', 'VBG'), ('grammars', 'NNS'), ('ambiguous', 'JJ'), (':', ':'), ('S\uf0e0', 'NN'), ('aS', 'IN'), ('|', 'JJ'), ('Sa', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('(', '('), ('string', 'NN'), (':', ':'), ('aaaa', 'NN'), (')', ')'), ('S\uf0e0', 'NNP'), ('aSbS', 'NN'), ('|', 'NNP'), ('bSaS', 'NN'), ('|', 'NNP'), ('𝜖', 'NNP'), ('(', '('), ('string', 'NN'), (':', ':'), ('abab', 'NN'), (')', ')'), ('S\uf0e0SS+', 'NNP'), ('|', 'NNP'), ('SS', 'NNP'), ('*', 'NNP'), ('|', 'NNP'), ('(', '('), ('string', 'NN'), (':', ':'), ('aa+a', 'JJ'), ('*', 'NN'), (')', ')'), ('Unit', 'NNP'), ('–', '$'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Grammar', 'NN'), (':', ':'), ('S\uf0e0', 'NNP'), ('S+S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('|', 'FW'), ('Equivalent', 'NNP'), ('unambiguous', 'JJ'), ('grammar', 'NN'), ('S\uf0e0', 'NNP'), ('S', 'NNP'), ('+', 'NNP'), ('T', 'NNP'), ('|', 'NNP'), ('T', 'NNP'), ('T\uf0e0', 'NNP'), ('T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('|', 'FW'), ('Equivalent', 'NNP'), ('unambiguous', 'JJ'), ('grammar', 'NN'), ('Here', 'RB'), (',', ','), ('two', 'CD'), ('left', 'VBD'), ('derivation', 'NN'), ('possible', 'JJ'), ('string', 'NN'), ('a+a', 'NN'), ('*', 'NNP'), ('hence', 'NN'), (',', ','), ('grammar', 'NN'), ('unambiguous', 'JJ'), ('.', '.')]

 (S
  (NP
    S/NNP
    */NNP
    S/NNP
    S/NNP
    S/NNP
    +/NNP
    S/NNP
    S/NNP
    +/NNP
    S/NNP
    S/NNP
    */NNP
    S/NNP
    S/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  32/CD
  (NP Exercise/NN)
  :/:
  (NP Ambiguous/JJ grammar/NN Check/NNP)
  whether/IN
  following/VBG
  (NP grammars/NNS)
  ambiguous/JJ
  :/:
  (NP S/NN)
  aS/IN
  (NP |/JJ Sa/NNP |/NNP 𝜖/NNP)
  (/(
  (NP string/NN)
  :/:
  (NP aaaa/NN)
  )/)
  (NP S/NNP aSbS/NN |/NNP bSaS/NN |/NNP 𝜖/NNP)
  (/(
  (NP string/NN)
  :/:
  (NP abab/NN)
  )/)
  (NP SSS+/NNP |/NNP SS/NNP */NNP |/NNP)
  (/(
  (NP string/NN)
  :/:
  (NP aa+a/JJ */NN)
  )/)
  (NP Unit/NNP)
  –/$
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Grammar/NN)
  :/:
  (NP S/NNP S+S/NNP |/NNP S/NNP */NNP S/NNP |/NNP)
  (/(
  (NP S/NNP)
  )/)
  |/FW
  (NP Equivalent/NNP)
  (NP
    unambiguous/JJ
    grammar/NN
    S/NNP
    S/NNP
    +/NNP
    T/NNP
    |/NNP
    T/NNP
    T/NNP
    T/NNP
    */NNP
    F/NNP
    |/NNP
    F/NNP
    F/NNP)
  (/(
  (NP S/NNP)
  )/)
  |/FW
  (NP Equivalent/NNP)
  (NP unambiguous/JJ grammar/NN)
  Here/RB
  ,/,
  two/CD
  left/VBD
  (NP derivation/NN)
  (NP possible/JJ string/NN a+a/NN */NNP hence/NN)
  ,/,
  (NP grammar/NN)
  unambiguous/JJ
  ./.) 


>> Noun Phrases are: 
 ['S * S S S + S S + S S * S S Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', 'Exercise', 'Ambiguous grammar Check', 'grammars', 'S\uf0e0', '| Sa | 𝜖', 'string', 'aaaa', 'S\uf0e0 aSbS | bSaS | 𝜖', 'string', 'abab', 'S\uf0e0SS+ | SS * |', 'string', 'aa+a *', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Grammar', 'S\uf0e0 S+S | S * S |', 'S', 'Equivalent', 'unambiguous grammar S\uf0e0 S + T | T T\uf0e0 T * F | F F\uf0e0', 'S', 'Equivalent', 'unambiguous grammar', 'derivation', 'possible string a+a * hence', 'grammar']

>> Named Entities are: 
 [('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Check'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('32', '32'), ('Exercise', 'exercis'), (':', ':'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Check', 'check'), ('whether', 'whether'), ('following', 'follow'), ('grammars', 'grammar'), ('ambiguous', 'ambigu'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('aSbS', 'asb'), ('|', '|'), ('bSaS', 'bsa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0SS+', 's\uf0e0ss+'), ('|', '|'), ('SS', 'ss'), ('*', '*'), ('|', '|'), ('(', '('), ('string', 'string'), (':', ':'), ('aa+a', 'aa+a'), ('*', '*'), (')', ')'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Grammar', 'grammar'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('S+S', 's+'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Equivalent', 'equival'), ('unambiguous', 'unambigu'), ('grammar', 'grammar'), ('S\uf0e0', 's\uf0e0'), ('S', 's'), ('+', '+'), ('T', 't'), ('|', '|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Equivalent', 'equival'), ('unambiguous', 'unambigu'), ('grammar', 'grammar'), ('Here', 'here'), (',', ','), ('two', 'two'), ('left', 'left'), ('derivation', 'deriv'), ('possible', 'possibl'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('hence', 'henc'), (',', ','), ('grammar', 'grammar'), ('unambiguous', 'unambigu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('32', '32'), ('Exercise', 'exercis'), (':', ':'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Check', 'check'), ('whether', 'whether'), ('following', 'follow'), ('grammars', 'grammar'), ('ambiguous', 'ambigu'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('aSbS', 'asb'), ('|', '|'), ('bSaS', 'bsas'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0SS+', 's\uf0e0ss+'), ('|', '|'), ('SS', 'ss'), ('*', '*'), ('|', '|'), ('(', '('), ('string', 'string'), (':', ':'), ('aa+a', 'aa+a'), ('*', '*'), (')', ')'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Grammar', 'grammar'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('S+S', 's+s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Equivalent', 'equival'), ('unambiguous', 'unambigu'), ('grammar', 'grammar'), ('S\uf0e0', 's\uf0e0'), ('S', 's'), ('+', '+'), ('T', 't'), ('|', '|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Equivalent', 'equival'), ('unambiguous', 'unambigu'), ('grammar', 'grammar'), ('Here', 'here'), (',', ','), ('two', 'two'), ('left', 'left'), ('derivation', 'deriv'), ('possible', 'possibl'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('hence', 'henc'), (',', ','), ('grammar', 'grammar'), ('unambiguous', 'unambigu'), ('.', '.')]

>> Lemmatization: 
 [('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('S', 'S'), ('+', '+'), ('S', 'S'), ('S', 'S'), ('+', '+'), ('S', 'S'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('32', '32'), ('Exercise', 'Exercise'), (':', ':'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('Check', 'Check'), ('whether', 'whether'), ('following', 'following'), ('grammars', 'grammar'), ('ambiguous', 'ambiguous'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'aS'), ('|', '|'), ('Sa', 'Sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')'), ('S\uf0e0', 'S\uf0e0'), ('aSbS', 'aSbS'), ('|', '|'), ('bSaS', 'bSaS'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0SS+', 'S\uf0e0SS+'), ('|', '|'), ('SS', 'SS'), ('*', '*'), ('|', '|'), ('(', '('), ('string', 'string'), (':', ':'), ('aa+a', 'aa+a'), ('*', '*'), (')', ')'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('S+S', 'S+S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('(', '('), ('S', 'S'), (')', ')'), ('|', '|'), ('Equivalent', 'Equivalent'), ('unambiguous', 'unambiguous'), ('grammar', 'grammar'), ('S\uf0e0', 'S\uf0e0'), ('S', 'S'), ('+', '+'), ('T', 'T'), ('|', '|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T', 'T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('S', 'S'), (')', ')'), ('|', '|'), ('Equivalent', 'Equivalent'), ('unambiguous', 'unambiguous'), ('grammar', 'grammar'), ('Here', 'Here'), (',', ','), ('two', 'two'), ('left', 'left'), ('derivation', 'derivation'), ('possible', 'possible'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('hence', 'hence'), (',', ','), ('grammar', 'grammar'), ('unambiguous', 'unambiguous'), ('.', '.')]



============================ Sentence 31 =============================

Unambiguous grammar Output string: a+a*a 	 S 	 S+T 	 T+T 	 F+T 	 a+T	 	 a+T*F 	 a+F*F 	 a+a*F 	 a+a*a		 Try for second leftmost derivation Not possible???? 


>> Tokens are: 
 ['Unambiguous', 'grammar', 'Output', 'string', ':', 'a+a', '*', 'S', '\uf0e0', 'S+T', '\uf0e0', 'T+T', '\uf0e0', 'F+T', '\uf0e0', 'a+T', '\uf0e0', 'a+T', '*', 'F', '\uf0e0', 'a+F', '*', 'F', '\uf0e0', 'a+a', '*', 'F', '\uf0e0', 'a+a', '*', 'Try', 'second', 'leftmost', 'derivation', 'Not', 'possible', '?', '?', '?', '?']

>> Bigrams are: 
 [('Unambiguous', 'grammar'), ('grammar', 'Output'), ('Output', 'string'), ('string', ':'), (':', 'a+a'), ('a+a', '*'), ('*', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'S+T'), ('S+T', '\uf0e0'), ('\uf0e0', 'T+T'), ('T+T', '\uf0e0'), ('\uf0e0', 'F+T'), ('F+T', '\uf0e0'), ('\uf0e0', 'a+T'), ('a+T', '\uf0e0'), ('\uf0e0', 'a+T'), ('a+T', '*'), ('*', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'a+F'), ('a+F', '*'), ('*', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'a+a'), ('a+a', '*'), ('*', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'a+a'), ('a+a', '*'), ('*', 'Try'), ('Try', 'second'), ('second', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'Not'), ('Not', 'possible'), ('possible', '?'), ('?', '?'), ('?', '?'), ('?', '?')]

>> Trigrams are: 
 [('Unambiguous', 'grammar', 'Output'), ('grammar', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', 'a+a'), (':', 'a+a', '*'), ('a+a', '*', 'S'), ('*', 'S', '\uf0e0'), ('S', '\uf0e0', 'S+T'), ('\uf0e0', 'S+T', '\uf0e0'), ('S+T', '\uf0e0', 'T+T'), ('\uf0e0', 'T+T', '\uf0e0'), ('T+T', '\uf0e0', 'F+T'), ('\uf0e0', 'F+T', '\uf0e0'), ('F+T', '\uf0e0', 'a+T'), ('\uf0e0', 'a+T', '\uf0e0'), ('a+T', '\uf0e0', 'a+T'), ('\uf0e0', 'a+T', '*'), ('a+T', '*', 'F'), ('*', 'F', '\uf0e0'), ('F', '\uf0e0', 'a+F'), ('\uf0e0', 'a+F', '*'), ('a+F', '*', 'F'), ('*', 'F', '\uf0e0'), ('F', '\uf0e0', 'a+a'), ('\uf0e0', 'a+a', '*'), ('a+a', '*', 'F'), ('*', 'F', '\uf0e0'), ('F', '\uf0e0', 'a+a'), ('\uf0e0', 'a+a', '*'), ('a+a', '*', 'Try'), ('*', 'Try', 'second'), ('Try', 'second', 'leftmost'), ('second', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'Not'), ('derivation', 'Not', 'possible'), ('Not', 'possible', '?'), ('possible', '?', '?'), ('?', '?', '?'), ('?', '?', '?')]

>> POS Tags are: 
 [('Unambiguous', 'JJ'), ('grammar', 'NN'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('a+a', 'JJ'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('S+T', 'NNP'), ('\uf0e0', 'NNP'), ('T+T', 'NNP'), ('\uf0e0', 'NNP'), ('F+T', 'NNP'), ('\uf0e0', 'NNP'), ('a+T', 'VBZ'), ('\uf0e0', 'NNP'), ('a+T', 'NN'), ('*', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('a+F', 'VBZ'), ('*', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('a+a', 'VBZ'), ('*', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('a+a', 'NN'), ('*', 'NNP'), ('Try', 'NNP'), ('second', 'VBD'), ('leftmost', 'JJS'), ('derivation', 'NN'), ('Not', 'RB'), ('possible', 'JJ'), ('?', '.'), ('?', '.'), ('?', '.'), ('?', '.')]

 (S
  (NP Unambiguous/JJ grammar/NN Output/NNP string/NN)
  :/:
  (NP
    a+a/JJ
    */NNP
    S/NNP
    /NNP
    S+T/NNP
    /NNP
    T+T/NNP
    /NNP
    F+T/NNP
    /NNP)
  a+T/VBZ
  (NP /NNP a+T/NN */NNP F/NNP /NNP)
  a+F/VBZ
  (NP */NNP F/NNP /NNP)
  a+a/VBZ
  (NP */NNP F/NNP /NNP a+a/NN */NNP Try/NNP)
  second/VBD
  leftmost/JJS
  (NP derivation/NN)
  Not/RB
  possible/JJ
  ?/.
  ?/.
  ?/.
  ?/.) 


>> Noun Phrases are: 
 ['Unambiguous grammar Output string', 'a+a * S \uf0e0 S+T \uf0e0 T+T \uf0e0 F+T \uf0e0', '\uf0e0 a+T * F \uf0e0', '* F \uf0e0', '* F \uf0e0 a+a * Try', 'derivation']

>> Named Entities are: 
 [('GPE', 'Unambiguous'), ('PERSON', 'Output')] 

>> Stemming using Porter Stemmer: 
 [('Unambiguous', 'unambigu'), ('grammar', 'grammar'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('S+T', 's+t'), ('\uf0e0', '\uf0e0'), ('T+T', 't+t'), ('\uf0e0', '\uf0e0'), ('F+T', 'f+t'), ('\uf0e0', '\uf0e0'), ('a+T', 'a+t'), ('\uf0e0', '\uf0e0'), ('a+T', 'a+t'), ('*', '*'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('a+F', 'a+f'), ('*', '*'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('a+a', 'a+a'), ('*', '*'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('a+a', 'a+a'), ('*', '*'), ('Try', 'tri'), ('second', 'second'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('Not', 'not'), ('possible', 'possibl'), ('?', '?'), ('?', '?'), ('?', '?'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Unambiguous', 'unambigu'), ('grammar', 'grammar'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('S+T', 's+t'), ('\uf0e0', '\uf0e0'), ('T+T', 't+t'), ('\uf0e0', '\uf0e0'), ('F+T', 'f+t'), ('\uf0e0', '\uf0e0'), ('a+T', 'a+t'), ('\uf0e0', '\uf0e0'), ('a+T', 'a+t'), ('*', '*'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('a+F', 'a+f'), ('*', '*'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('a+a', 'a+a'), ('*', '*'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('a+a', 'a+a'), ('*', '*'), ('Try', 'tri'), ('second', 'second'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('Not', 'not'), ('possible', 'possibl'), ('?', '?'), ('?', '?'), ('?', '?'), ('?', '?')]

>> Lemmatization: 
 [('Unambiguous', 'Unambiguous'), ('grammar', 'grammar'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('S+T', 'S+T'), ('\uf0e0', '\uf0e0'), ('T+T', 'T+T'), ('\uf0e0', '\uf0e0'), ('F+T', 'F+T'), ('\uf0e0', '\uf0e0'), ('a+T', 'a+T'), ('\uf0e0', '\uf0e0'), ('a+T', 'a+T'), ('*', '*'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('a+F', 'a+F'), ('*', '*'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('a+a', 'a+a'), ('*', '*'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('a+a', 'a+a'), ('*', '*'), ('Try', 'Try'), ('second', 'second'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('Not', 'Not'), ('possible', 'possible'), ('?', '?'), ('?', '?'), ('?', '?'), ('?', '?')]



============================ Sentence 32 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Simplified forms & Normal forms    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Nullable Variable A Nullable variable in a CFG,  is defined as follows: Any variable A for which P contains   is nullable. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Simplified', 'forms', '&', 'Normal', 'forms', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Nullable', 'Variable', 'A', 'Nullable', 'variable', 'CFG', ',', 'defined', 'follows', ':', 'Any', 'variable', 'A', 'P', 'contains', 'nullable', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Simplified'), ('Simplified', 'forms'), ('forms', '&'), ('&', 'Normal'), ('Normal', 'forms'), ('forms', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Nullable'), ('Nullable', 'Variable'), ('Variable', 'A'), ('A', 'Nullable'), ('Nullable', 'variable'), ('variable', 'CFG'), ('CFG', ','), (',', 'defined'), ('defined', 'follows'), ('follows', ':'), (':', 'Any'), ('Any', 'variable'), ('variable', 'A'), ('A', 'P'), ('P', 'contains'), ('contains', 'nullable'), ('nullable', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Simplified'), ('›', 'Simplified', 'forms'), ('Simplified', 'forms', '&'), ('forms', '&', 'Normal'), ('&', 'Normal', 'forms'), ('Normal', 'forms', 'Unit'), ('forms', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Nullable'), ('›', 'Nullable', 'Variable'), ('Nullable', 'Variable', 'A'), ('Variable', 'A', 'Nullable'), ('A', 'Nullable', 'variable'), ('Nullable', 'variable', 'CFG'), ('variable', 'CFG', ','), ('CFG', ',', 'defined'), (',', 'defined', 'follows'), ('defined', 'follows', ':'), ('follows', ':', 'Any'), (':', 'Any', 'variable'), ('Any', 'variable', 'A'), ('variable', 'A', 'P'), ('A', 'P', 'contains'), ('P', 'contains', 'nullable'), ('contains', 'nullable', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Simplified', 'NNP'), ('forms', 'VBZ'), ('&', 'CC'), ('Normal', 'NNP'), ('forms', 'NNS'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Nullable', 'NNP'), ('Variable', 'NNP'), ('A', 'NNP'), ('Nullable', 'NNP'), ('variable', 'JJ'), ('CFG', 'NNP'), (',', ','), ('defined', 'VBD'), ('follows', 'VBZ'), (':', ':'), ('Any', 'DT'), ('variable', 'JJ'), ('A', 'NNP'), ('P', 'NNP'), ('contains', 'VBZ'), ('nullable', 'JJ'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Simplified/NNP)
  forms/VBZ
  &/CC
  (NP Normal/NNP forms/NNS Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Nullable/NNP Variable/NNP A/NNP Nullable/NNP)
  (NP variable/JJ CFG/NNP)
  ,/,
  defined/VBD
  follows/VBZ
  :/:
  (NP Any/DT variable/JJ A/NNP P/NNP)
  contains/VBZ
  nullable/JJ
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Simplified', 'Normal forms Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Nullable Variable A Nullable', 'variable CFG', 'Any variable A P']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('GPE', 'Normal'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Simplified', 'simplifi'), ('forms', 'form'), ('&', '&'), ('Normal', 'normal'), ('forms', 'form'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Nullable', 'nullabl'), ('Variable', 'variabl'), ('A', 'a'), ('Nullable', 'nullabl'), ('variable', 'variabl'), ('CFG', 'cfg'), (',', ','), ('defined', 'defin'), ('follows', 'follow'), (':', ':'), ('Any', 'ani'), ('variable', 'variabl'), ('A', 'a'), ('P', 'p'), ('contains', 'contain'), ('nullable', 'nullabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Simplified', 'simplifi'), ('forms', 'form'), ('&', '&'), ('Normal', 'normal'), ('forms', 'form'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Nullable', 'nullabl'), ('Variable', 'variabl'), ('A', 'a'), ('Nullable', 'nullabl'), ('variable', 'variabl'), ('CFG', 'cfg'), (',', ','), ('defined', 'defin'), ('follows', 'follow'), (':', ':'), ('Any', 'ani'), ('variable', 'variabl'), ('A', 'a'), ('P', 'p'), ('contains', 'contain'), ('nullable', 'nullabl'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Simplified', 'Simplified'), ('forms', 'form'), ('&', '&'), ('Normal', 'Normal'), ('forms', 'form'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Nullable', 'Nullable'), ('Variable', 'Variable'), ('A', 'A'), ('Nullable', 'Nullable'), ('variable', 'variable'), ('CFG', 'CFG'), (',', ','), ('defined', 'defined'), ('follows', 'follows'), (':', ':'), ('Any', 'Any'), ('variable', 'variable'), ('A', 'A'), ('P', 'P'), ('contains', 'contains'), ('nullable', 'nullable'), ('.', '.')]



============================ Sentence 33 =============================

If P contains the production  are nullable variable, then A is nullable. 


>> Tokens are: 
 ['If', 'P', 'contains', 'production', 'nullable', 'variable', ',', 'A', 'nullable', '.']

>> Bigrams are: 
 [('If', 'P'), ('P', 'contains'), ('contains', 'production'), ('production', 'nullable'), ('nullable', 'variable'), ('variable', ','), (',', 'A'), ('A', 'nullable'), ('nullable', '.')]

>> Trigrams are: 
 [('If', 'P', 'contains'), ('P', 'contains', 'production'), ('contains', 'production', 'nullable'), ('production', 'nullable', 'variable'), ('nullable', 'variable', ','), ('variable', ',', 'A'), (',', 'A', 'nullable'), ('A', 'nullable', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('P', 'NNP'), ('contains', 'VBZ'), ('production', 'NN'), ('nullable', 'JJ'), ('variable', 'JJ'), (',', ','), ('A', 'DT'), ('nullable', 'JJ'), ('.', '.')]

 (S
  If/IN
  (NP P/NNP)
  contains/VBZ
  (NP production/NN)
  nullable/JJ
  variable/JJ
  ,/,
  A/DT
  nullable/JJ
  ./.) 


>> Noun Phrases are: 
 ['P', 'production']

>> Named Entities are: 
 [('PERSON', 'P')] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('P', 'p'), ('contains', 'contain'), ('production', 'product'), ('nullable', 'nullabl'), ('variable', 'variabl'), (',', ','), ('A', 'a'), ('nullable', 'nullabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('P', 'p'), ('contains', 'contain'), ('production', 'product'), ('nullable', 'nullabl'), ('variable', 'variabl'), (',', ','), ('A', 'a'), ('nullable', 'nullabl'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('P', 'P'), ('contains', 'contains'), ('production', 'production'), ('nullable', 'nullable'), ('variable', 'variable'), (',', ','), ('A', 'A'), ('nullable', 'nullable'), ('.', '.')]



============================ Sentence 34 =============================

No other variables in V are nullable. 


>> Tokens are: 
 ['No', 'variables', 'V', 'nullable', '.']

>> Bigrams are: 
 [('No', 'variables'), ('variables', 'V'), ('V', 'nullable'), ('nullable', '.')]

>> Trigrams are: 
 [('No', 'variables', 'V'), ('variables', 'V', 'nullable'), ('V', 'nullable', '.')]

>> POS Tags are: 
 [('No', 'DT'), ('variables', 'NNS'), ('V', 'NNP'), ('nullable', 'JJ'), ('.', '.')]

 (S (NP No/DT variables/NNS V/NNP) nullable/JJ ./.) 


>> Noun Phrases are: 
 ['No variables V']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('No', 'no'), ('variables', 'variabl'), ('V', 'v'), ('nullable', 'nullabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('No', 'no'), ('variables', 'variabl'), ('V', 'v'), ('nullable', 'nullabl'), ('.', '.')]

>> Lemmatization: 
 [('No', 'No'), ('variables', 'variable'), ('V', 'V'), ('nullable', 'nullable'), ('.', '.')]



============================ Sentence 35 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Eliminate ˄ production  Sa  X |Yb X ˄ | S  YbY|b SaX | Yb | a^ X^ | S YbY|b SaX|Yb|a XS YbY|b Nullable variable={X} Replacing X by ^ in all  productions containing X on RHS and rewriting the production again Removing ^ productions  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Exercise: Eliminate ^ production SAC AaAb|˄ CaC|a After elimination of ^ production: SAC | C AaAb| ab CaC|a  SXaX|bX|Y XXaX|XbX|˄ Yab After elimination of ^ production: S XaX | bX | Y | aX | Xa | a | b X XaX |XbX | aX | Xa | a | Xb | bX | b Yab   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› A-derivable A variable is called A-derivable , If  is a production, B is A-derivable. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Eliminate', '˄', 'production', 'S\uf0e0a', 'X', '|Yb', 'X\uf0e0', '˄', '|', 'S', 'Y\uf0e0bY|b', 'S\uf0e0aX', '|', 'Yb', '|', 'a^', 'X\uf0e0^', '|', 'S', 'Y\uf0e0bY|b', 'S\uf0e0aX|Yb|a', 'X\uf0e0S', 'Y\uf0e0bY|b', 'Nullable', 'variable=', '{', 'X', '}', 'Replacing', 'X', '^', 'productions', 'containing', 'X', 'RHS', 'rewriting', 'production', 'Removing', '^', 'productions', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Exercise', ':', 'Eliminate', '^', 'production', 'S\uf0e0AC', 'A\uf0e0aAb|˄', 'C\uf0e0aC|a', 'After', 'elimination', '^', 'production', ':', 'S\uf0e0AC', '|', 'C', 'A\uf0e0aAb|', 'ab', 'C\uf0e0aC|a', 'S\uf0e0XaX|bX|Y', 'X\uf0e0XaX|XbX|˄', 'Y\uf0e0ab', 'After', 'elimination', '^', 'production', ':', 'S\uf0e0', 'XaX', '|', 'bX', '|', 'Y', '|', 'aX', '|', 'Xa', '|', '|', 'b', 'X\uf0e0', 'XaX', '|XbX', '|', 'aX', '|', 'Xa', '|', '|', 'Xb', '|', 'bX', '|', 'b', 'Y\uf0e0ab', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'A-derivable', 'A', 'variable', 'called', 'A-derivable', ',', 'If', 'production', ',', 'B', 'A-derivable', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Eliminate'), ('Eliminate', '˄'), ('˄', 'production'), ('production', 'S\uf0e0a'), ('S\uf0e0a', 'X'), ('X', '|Yb'), ('|Yb', 'X\uf0e0'), ('X\uf0e0', '˄'), ('˄', '|'), ('|', 'S'), ('S', 'Y\uf0e0bY|b'), ('Y\uf0e0bY|b', 'S\uf0e0aX'), ('S\uf0e0aX', '|'), ('|', 'Yb'), ('Yb', '|'), ('|', 'a^'), ('a^', 'X\uf0e0^'), ('X\uf0e0^', '|'), ('|', 'S'), ('S', 'Y\uf0e0bY|b'), ('Y\uf0e0bY|b', 'S\uf0e0aX|Yb|a'), ('S\uf0e0aX|Yb|a', 'X\uf0e0S'), ('X\uf0e0S', 'Y\uf0e0bY|b'), ('Y\uf0e0bY|b', 'Nullable'), ('Nullable', 'variable='), ('variable=', '{'), ('{', 'X'), ('X', '}'), ('}', 'Replacing'), ('Replacing', 'X'), ('X', '^'), ('^', 'productions'), ('productions', 'containing'), ('containing', 'X'), ('X', 'RHS'), ('RHS', 'rewriting'), ('rewriting', 'production'), ('production', 'Removing'), ('Removing', '^'), ('^', 'productions'), ('productions', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', ':'), (':', 'Eliminate'), ('Eliminate', '^'), ('^', 'production'), ('production', 'S\uf0e0AC'), ('S\uf0e0AC', 'A\uf0e0aAb|˄'), ('A\uf0e0aAb|˄', 'C\uf0e0aC|a'), ('C\uf0e0aC|a', 'After'), ('After', 'elimination'), ('elimination', '^'), ('^', 'production'), ('production', ':'), (':', 'S\uf0e0AC'), ('S\uf0e0AC', '|'), ('|', 'C'), ('C', 'A\uf0e0aAb|'), ('A\uf0e0aAb|', 'ab'), ('ab', 'C\uf0e0aC|a'), ('C\uf0e0aC|a', 'S\uf0e0XaX|bX|Y'), ('S\uf0e0XaX|bX|Y', 'X\uf0e0XaX|XbX|˄'), ('X\uf0e0XaX|XbX|˄', 'Y\uf0e0ab'), ('Y\uf0e0ab', 'After'), ('After', 'elimination'), ('elimination', '^'), ('^', 'production'), ('production', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'XaX'), ('XaX', '|'), ('|', 'bX'), ('bX', '|'), ('|', 'Y'), ('Y', '|'), ('|', 'aX'), ('aX', '|'), ('|', 'Xa'), ('Xa', '|'), ('|', '|'), ('|', 'b'), ('b', 'X\uf0e0'), ('X\uf0e0', 'XaX'), ('XaX', '|XbX'), ('|XbX', '|'), ('|', 'aX'), ('aX', '|'), ('|', 'Xa'), ('Xa', '|'), ('|', '|'), ('|', 'Xb'), ('Xb', '|'), ('|', 'bX'), ('bX', '|'), ('|', 'b'), ('b', 'Y\uf0e0ab'), ('Y\uf0e0ab', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'A-derivable'), ('A-derivable', 'A'), ('A', 'variable'), ('variable', 'called'), ('called', 'A-derivable'), ('A-derivable', ','), (',', 'If'), ('If', 'production'), ('production', ','), (',', 'B'), ('B', 'A-derivable'), ('A-derivable', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Eliminate'), ('›', 'Eliminate', '˄'), ('Eliminate', '˄', 'production'), ('˄', 'production', 'S\uf0e0a'), ('production', 'S\uf0e0a', 'X'), ('S\uf0e0a', 'X', '|Yb'), ('X', '|Yb', 'X\uf0e0'), ('|Yb', 'X\uf0e0', '˄'), ('X\uf0e0', '˄', '|'), ('˄', '|', 'S'), ('|', 'S', 'Y\uf0e0bY|b'), ('S', 'Y\uf0e0bY|b', 'S\uf0e0aX'), ('Y\uf0e0bY|b', 'S\uf0e0aX', '|'), ('S\uf0e0aX', '|', 'Yb'), ('|', 'Yb', '|'), ('Yb', '|', 'a^'), ('|', 'a^', 'X\uf0e0^'), ('a^', 'X\uf0e0^', '|'), ('X\uf0e0^', '|', 'S'), ('|', 'S', 'Y\uf0e0bY|b'), ('S', 'Y\uf0e0bY|b', 'S\uf0e0aX|Yb|a'), ('Y\uf0e0bY|b', 'S\uf0e0aX|Yb|a', 'X\uf0e0S'), ('S\uf0e0aX|Yb|a', 'X\uf0e0S', 'Y\uf0e0bY|b'), ('X\uf0e0S', 'Y\uf0e0bY|b', 'Nullable'), ('Y\uf0e0bY|b', 'Nullable', 'variable='), ('Nullable', 'variable=', '{'), ('variable=', '{', 'X'), ('{', 'X', '}'), ('X', '}', 'Replacing'), ('}', 'Replacing', 'X'), ('Replacing', 'X', '^'), ('X', '^', 'productions'), ('^', 'productions', 'containing'), ('productions', 'containing', 'X'), ('containing', 'X', 'RHS'), ('X', 'RHS', 'rewriting'), ('RHS', 'rewriting', 'production'), ('rewriting', 'production', 'Removing'), ('production', 'Removing', '^'), ('Removing', '^', 'productions'), ('^', 'productions', 'Unit'), ('productions', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', ':'), ('Exercise', ':', 'Eliminate'), (':', 'Eliminate', '^'), ('Eliminate', '^', 'production'), ('^', 'production', 'S\uf0e0AC'), ('production', 'S\uf0e0AC', 'A\uf0e0aAb|˄'), ('S\uf0e0AC', 'A\uf0e0aAb|˄', 'C\uf0e0aC|a'), ('A\uf0e0aAb|˄', 'C\uf0e0aC|a', 'After'), ('C\uf0e0aC|a', 'After', 'elimination'), ('After', 'elimination', '^'), ('elimination', '^', 'production'), ('^', 'production', ':'), ('production', ':', 'S\uf0e0AC'), (':', 'S\uf0e0AC', '|'), ('S\uf0e0AC', '|', 'C'), ('|', 'C', 'A\uf0e0aAb|'), ('C', 'A\uf0e0aAb|', 'ab'), ('A\uf0e0aAb|', 'ab', 'C\uf0e0aC|a'), ('ab', 'C\uf0e0aC|a', 'S\uf0e0XaX|bX|Y'), ('C\uf0e0aC|a', 'S\uf0e0XaX|bX|Y', 'X\uf0e0XaX|XbX|˄'), ('S\uf0e0XaX|bX|Y', 'X\uf0e0XaX|XbX|˄', 'Y\uf0e0ab'), ('X\uf0e0XaX|XbX|˄', 'Y\uf0e0ab', 'After'), ('Y\uf0e0ab', 'After', 'elimination'), ('After', 'elimination', '^'), ('elimination', '^', 'production'), ('^', 'production', ':'), ('production', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'XaX'), ('S\uf0e0', 'XaX', '|'), ('XaX', '|', 'bX'), ('|', 'bX', '|'), ('bX', '|', 'Y'), ('|', 'Y', '|'), ('Y', '|', 'aX'), ('|', 'aX', '|'), ('aX', '|', 'Xa'), ('|', 'Xa', '|'), ('Xa', '|', '|'), ('|', '|', 'b'), ('|', 'b', 'X\uf0e0'), ('b', 'X\uf0e0', 'XaX'), ('X\uf0e0', 'XaX', '|XbX'), ('XaX', '|XbX', '|'), ('|XbX', '|', 'aX'), ('|', 'aX', '|'), ('aX', '|', 'Xa'), ('|', 'Xa', '|'), ('Xa', '|', '|'), ('|', '|', 'Xb'), ('|', 'Xb', '|'), ('Xb', '|', 'bX'), ('|', 'bX', '|'), ('bX', '|', 'b'), ('|', 'b', 'Y\uf0e0ab'), ('b', 'Y\uf0e0ab', 'Unit'), ('Y\uf0e0ab', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'A-derivable'), ('›', 'A-derivable', 'A'), ('A-derivable', 'A', 'variable'), ('A', 'variable', 'called'), ('variable', 'called', 'A-derivable'), ('called', 'A-derivable', ','), ('A-derivable', ',', 'If'), (',', 'If', 'production'), ('If', 'production', ','), ('production', ',', 'B'), (',', 'B', 'A-derivable'), ('B', 'A-derivable', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Eliminate', 'NNP'), ('˄', 'NNP'), ('production', 'NN'), ('S\uf0e0a', 'NNP'), ('X', 'NNP'), ('|Yb', 'NNP'), ('X\uf0e0', 'NNP'), ('˄', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('Y\uf0e0bY|b', 'NNP'), ('S\uf0e0aX', 'NNP'), ('|', 'NNP'), ('Yb', 'NNP'), ('|', 'NNP'), ('a^', 'VBZ'), ('X\uf0e0^', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('Y\uf0e0bY|b', 'NNP'), ('S\uf0e0aX|Yb|a', 'NNP'), ('X\uf0e0S', 'NNP'), ('Y\uf0e0bY|b', 'NNP'), ('Nullable', 'NNP'), ('variable=', 'NN'), ('{', '('), ('X', 'JJ'), ('}', ')'), ('Replacing', 'VBG'), ('X', 'NNP'), ('^', 'NNP'), ('productions', 'NNS'), ('containing', 'VBG'), ('X', 'NNP'), ('RHS', 'NNP'), ('rewriting', 'VBG'), ('production', 'NN'), ('Removing', 'NNP'), ('^', 'NNP'), ('productions', 'NNS'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Exercise', 'NN'), (':', ':'), ('Eliminate', 'NN'), ('^', 'NN'), ('production', 'NN'), ('S\uf0e0AC', 'NNP'), ('A\uf0e0aAb|˄', 'NNP'), ('C\uf0e0aC|a', 'NNP'), ('After', 'IN'), ('elimination', 'NN'), ('^', 'JJ'), ('production', 'NN'), (':', ':'), ('S\uf0e0AC', 'NNP'), ('|', 'NNP'), ('C', 'NNP'), ('A\uf0e0aAb|', 'NNP'), ('ab', 'VBZ'), ('C\uf0e0aC|a', 'NNP'), ('S\uf0e0XaX|bX|Y', 'NNP'), ('X\uf0e0XaX|XbX|˄', 'NNP'), ('Y\uf0e0ab', 'NNP'), ('After', 'IN'), ('elimination', 'NN'), ('^', 'JJ'), ('production', 'NN'), (':', ':'), ('S\uf0e0', 'NNP'), ('XaX', 'NNP'), ('|', 'NNP'), ('bX', 'NN'), ('|', 'NNP'), ('Y', 'NNP'), ('|', 'NNP'), ('aX', 'VBZ'), ('|', 'NNP'), ('Xa', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('X\uf0e0', 'NNP'), ('XaX', 'NNP'), ('|XbX', 'NNP'), ('|', 'NNP'), ('aX', 'VBZ'), ('|', 'NNP'), ('Xa', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('Xb', 'NNP'), ('|', 'NNP'), ('bX', 'NN'), ('|', 'NN'), ('b', 'NN'), ('Y\uf0e0ab', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('A-derivable', 'JJ'), ('A', 'NNP'), ('variable', 'NN'), ('called', 'VBN'), ('A-derivable', 'JJ'), (',', ','), ('If', 'IN'), ('production', 'NN'), (',', ','), ('B', 'NNP'), ('A-derivable', 'NNP'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Eliminate/NNP
    ˄/NNP
    production/NN
    Sa/NNP
    X/NNP
    |Yb/NNP
    X/NNP
    ˄/NNP
    |/NNP
    S/NNP
    YbY|b/NNP
    SaX/NNP
    |/NNP
    Yb/NNP
    |/NNP)
  a^/VBZ
  (NP
    X^/NNP
    |/NNP
    S/NNP
    YbY|b/NNP
    SaX|Yb|a/NNP
    XS/NNP
    YbY|b/NNP
    Nullable/NNP
    variable=/NN)
  {/(
  X/JJ
  }/)
  Replacing/VBG
  (NP X/NNP ^/NNP productions/NNS)
  containing/VBG
  (NP X/NNP RHS/NNP)
  rewriting/VBG
  (NP production/NN Removing/NNP ^/NNP productions/NNS Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Exercise/NN)
  :/:
  (NP
    Eliminate/NN
    ^/NN
    production/NN
    SAC/NNP
    AaAb|˄/NNP
    CaC|a/NNP)
  After/IN
  (NP elimination/NN)
  (NP ^/JJ production/NN)
  :/:
  (NP SAC/NNP |/NNP C/NNP AaAb|/NNP)
  ab/VBZ
  (NP CaC|a/NNP SXaX|bX|Y/NNP XXaX|XbX|˄/NNP Yab/NNP)
  After/IN
  (NP elimination/NN)
  (NP ^/JJ production/NN)
  :/:
  (NP S/NNP XaX/NNP |/NNP bX/NN |/NNP Y/NNP |/NNP)
  aX/VBZ
  (NP |/NNP Xa/NNP |/NNP |/NNP b/NN X/NNP XaX/NNP |XbX/NNP |/NNP)
  aX/VBZ
  (NP
    |/NNP
    Xa/NNP
    |/NNP
    |/NNP
    Xb/NNP
    |/NNP
    bX/NN
    |/NN
    b/NN
    Yab/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  (NP A-derivable/JJ A/NNP variable/NN)
  called/VBN
  A-derivable/JJ
  ,/,
  If/IN
  (NP production/NN)
  ,/,
  (NP B/NNP A-derivable/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Eliminate ˄ production S\uf0e0a X |Yb X\uf0e0 ˄ | S Y\uf0e0bY|b S\uf0e0aX | Yb |', 'X\uf0e0^ | S Y\uf0e0bY|b S\uf0e0aX|Yb|a X\uf0e0S Y\uf0e0bY|b Nullable variable=', 'X ^ productions', 'X RHS', 'production Removing ^ productions Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Exercise', 'Eliminate ^ production S\uf0e0AC A\uf0e0aAb|˄ C\uf0e0aC|a', 'elimination', '^ production', 'S\uf0e0AC | C A\uf0e0aAb|', 'C\uf0e0aC|a S\uf0e0XaX|bX|Y X\uf0e0XaX|XbX|˄ Y\uf0e0ab', 'elimination', '^ production', 'S\uf0e0 XaX | bX | Y |', '| Xa | | b X\uf0e0 XaX |XbX |', '| Xa | | Xb | bX | b Y\uf0e0ab Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '›', 'A-derivable A variable', 'production', 'B A-derivable']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'X'), ('PERSON', 'X RHS'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'B')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Eliminate', 'elimin'), ('˄', '˄'), ('production', 'product'), ('S\uf0e0a', 's\uf0e0a'), ('X', 'x'), ('|Yb', '|yb'), ('X\uf0e0', 'x\uf0e0'), ('˄', '˄'), ('|', '|'), ('S', 's'), ('Y\uf0e0bY|b', 'y\uf0e0by|b'), ('S\uf0e0aX', 's\uf0e0ax'), ('|', '|'), ('Yb', 'yb'), ('|', '|'), ('a^', 'a^'), ('X\uf0e0^', 'x\uf0e0^'), ('|', '|'), ('S', 's'), ('Y\uf0e0bY|b', 'y\uf0e0by|b'), ('S\uf0e0aX|Yb|a', 's\uf0e0ax|yb|a'), ('X\uf0e0S', 'x\uf0e0'), ('Y\uf0e0bY|b', 'y\uf0e0by|b'), ('Nullable', 'nullabl'), ('variable=', 'variable='), ('{', '{'), ('X', 'x'), ('}', '}'), ('Replacing', 'replac'), ('X', 'x'), ('^', '^'), ('productions', 'product'), ('containing', 'contain'), ('X', 'x'), ('RHS', 'rh'), ('rewriting', 'rewrit'), ('production', 'product'), ('Removing', 'remov'), ('^', '^'), ('productions', 'product'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Eliminate', 'elimin'), ('^', '^'), ('production', 'product'), ('S\uf0e0AC', 's\uf0e0ac'), ('A\uf0e0aAb|˄', 'a\uf0e0aab|˄'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('After', 'after'), ('elimination', 'elimin'), ('^', '^'), ('production', 'product'), (':', ':'), ('S\uf0e0AC', 's\uf0e0ac'), ('|', '|'), ('C', 'c'), ('A\uf0e0aAb|', 'a\uf0e0aab|'), ('ab', 'ab'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('S\uf0e0XaX|bX|Y', 's\uf0e0xax|bx|i'), ('X\uf0e0XaX|XbX|˄', 'x\uf0e0xax|xbx|˄'), ('Y\uf0e0ab', 'y\uf0e0ab'), ('After', 'after'), ('elimination', 'elimin'), ('^', '^'), ('production', 'product'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('XaX', 'xax'), ('|', '|'), ('bX', 'bx'), ('|', '|'), ('Y', 'y'), ('|', '|'), ('aX', 'ax'), ('|', '|'), ('Xa', 'xa'), ('|', '|'), ('|', '|'), ('b', 'b'), ('X\uf0e0', 'x\uf0e0'), ('XaX', 'xax'), ('|XbX', '|xbx'), ('|', '|'), ('aX', 'ax'), ('|', '|'), ('Xa', 'xa'), ('|', '|'), ('|', '|'), ('Xb', 'xb'), ('|', '|'), ('bX', 'bx'), ('|', '|'), ('b', 'b'), ('Y\uf0e0ab', 'y\uf0e0ab'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('A-derivable', 'a-deriv'), ('A', 'a'), ('variable', 'variabl'), ('called', 'call'), ('A-derivable', 'a-deriv'), (',', ','), ('If', 'if'), ('production', 'product'), (',', ','), ('B', 'b'), ('A-derivable', 'a-deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Eliminate', 'elimin'), ('˄', '˄'), ('production', 'product'), ('S\uf0e0a', 's\uf0e0a'), ('X', 'x'), ('|Yb', '|yb'), ('X\uf0e0', 'x\uf0e0'), ('˄', '˄'), ('|', '|'), ('S', 's'), ('Y\uf0e0bY|b', 'y\uf0e0by|b'), ('S\uf0e0aX', 's\uf0e0ax'), ('|', '|'), ('Yb', 'yb'), ('|', '|'), ('a^', 'a^'), ('X\uf0e0^', 'x\uf0e0^'), ('|', '|'), ('S', 's'), ('Y\uf0e0bY|b', 'y\uf0e0by|b'), ('S\uf0e0aX|Yb|a', 's\uf0e0ax|yb|a'), ('X\uf0e0S', 'x\uf0e0s'), ('Y\uf0e0bY|b', 'y\uf0e0by|b'), ('Nullable', 'nullabl'), ('variable=', 'variable='), ('{', '{'), ('X', 'x'), ('}', '}'), ('Replacing', 'replac'), ('X', 'x'), ('^', '^'), ('productions', 'product'), ('containing', 'contain'), ('X', 'x'), ('RHS', 'rhs'), ('rewriting', 'rewrit'), ('production', 'product'), ('Removing', 'remov'), ('^', '^'), ('productions', 'product'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Eliminate', 'elimin'), ('^', '^'), ('production', 'product'), ('S\uf0e0AC', 's\uf0e0ac'), ('A\uf0e0aAb|˄', 'a\uf0e0aab|˄'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('After', 'after'), ('elimination', 'elimin'), ('^', '^'), ('production', 'product'), (':', ':'), ('S\uf0e0AC', 's\uf0e0ac'), ('|', '|'), ('C', 'c'), ('A\uf0e0aAb|', 'a\uf0e0aab|'), ('ab', 'ab'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('S\uf0e0XaX|bX|Y', 's\uf0e0xax|bx|i'), ('X\uf0e0XaX|XbX|˄', 'x\uf0e0xax|xbx|˄'), ('Y\uf0e0ab', 'y\uf0e0ab'), ('After', 'after'), ('elimination', 'elimin'), ('^', '^'), ('production', 'product'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('XaX', 'xax'), ('|', '|'), ('bX', 'bx'), ('|', '|'), ('Y', 'y'), ('|', '|'), ('aX', 'ax'), ('|', '|'), ('Xa', 'xa'), ('|', '|'), ('|', '|'), ('b', 'b'), ('X\uf0e0', 'x\uf0e0'), ('XaX', 'xax'), ('|XbX', '|xbx'), ('|', '|'), ('aX', 'ax'), ('|', '|'), ('Xa', 'xa'), ('|', '|'), ('|', '|'), ('Xb', 'xb'), ('|', '|'), ('bX', 'bx'), ('|', '|'), ('b', 'b'), ('Y\uf0e0ab', 'y\uf0e0ab'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('A-derivable', 'a-deriv'), ('A', 'a'), ('variable', 'variabl'), ('called', 'call'), ('A-derivable', 'a-deriv'), (',', ','), ('If', 'if'), ('production', 'product'), (',', ','), ('B', 'b'), ('A-derivable', 'a-deriv'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Eliminate', 'Eliminate'), ('˄', '˄'), ('production', 'production'), ('S\uf0e0a', 'S\uf0e0a'), ('X', 'X'), ('|Yb', '|Yb'), ('X\uf0e0', 'X\uf0e0'), ('˄', '˄'), ('|', '|'), ('S', 'S'), ('Y\uf0e0bY|b', 'Y\uf0e0bY|b'), ('S\uf0e0aX', 'S\uf0e0aX'), ('|', '|'), ('Yb', 'Yb'), ('|', '|'), ('a^', 'a^'), ('X\uf0e0^', 'X\uf0e0^'), ('|', '|'), ('S', 'S'), ('Y\uf0e0bY|b', 'Y\uf0e0bY|b'), ('S\uf0e0aX|Yb|a', 'S\uf0e0aX|Yb|a'), ('X\uf0e0S', 'X\uf0e0S'), ('Y\uf0e0bY|b', 'Y\uf0e0bY|b'), ('Nullable', 'Nullable'), ('variable=', 'variable='), ('{', '{'), ('X', 'X'), ('}', '}'), ('Replacing', 'Replacing'), ('X', 'X'), ('^', '^'), ('productions', 'production'), ('containing', 'containing'), ('X', 'X'), ('RHS', 'RHS'), ('rewriting', 'rewriting'), ('production', 'production'), ('Removing', 'Removing'), ('^', '^'), ('productions', 'production'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), (':', ':'), ('Eliminate', 'Eliminate'), ('^', '^'), ('production', 'production'), ('S\uf0e0AC', 'S\uf0e0AC'), ('A\uf0e0aAb|˄', 'A\uf0e0aAb|˄'), ('C\uf0e0aC|a', 'C\uf0e0aC|a'), ('After', 'After'), ('elimination', 'elimination'), ('^', '^'), ('production', 'production'), (':', ':'), ('S\uf0e0AC', 'S\uf0e0AC'), ('|', '|'), ('C', 'C'), ('A\uf0e0aAb|', 'A\uf0e0aAb|'), ('ab', 'ab'), ('C\uf0e0aC|a', 'C\uf0e0aC|a'), ('S\uf0e0XaX|bX|Y', 'S\uf0e0XaX|bX|Y'), ('X\uf0e0XaX|XbX|˄', 'X\uf0e0XaX|XbX|˄'), ('Y\uf0e0ab', 'Y\uf0e0ab'), ('After', 'After'), ('elimination', 'elimination'), ('^', '^'), ('production', 'production'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('XaX', 'XaX'), ('|', '|'), ('bX', 'bX'), ('|', '|'), ('Y', 'Y'), ('|', '|'), ('aX', 'aX'), ('|', '|'), ('Xa', 'Xa'), ('|', '|'), ('|', '|'), ('b', 'b'), ('X\uf0e0', 'X\uf0e0'), ('XaX', 'XaX'), ('|XbX', '|XbX'), ('|', '|'), ('aX', 'aX'), ('|', '|'), ('Xa', 'Xa'), ('|', '|'), ('|', '|'), ('Xb', 'Xb'), ('|', '|'), ('bX', 'bX'), ('|', '|'), ('b', 'b'), ('Y\uf0e0ab', 'Y\uf0e0ab'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('A-derivable', 'A-derivable'), ('A', 'A'), ('variable', 'variable'), ('called', 'called'), ('A-derivable', 'A-derivable'), (',', ','), ('If', 'If'), ('production', 'production'), (',', ','), ('B', 'B'), ('A-derivable', 'A-derivable'), ('.', '.')]



============================ Sentence 36 =============================

If C is  A-derivable,   is a production, and  , then B is A-derivable. 


>> Tokens are: 
 ['If', 'C', 'A-derivable', ',', 'production', ',', ',', 'B', 'A-derivable', '.']

>> Bigrams are: 
 [('If', 'C'), ('C', 'A-derivable'), ('A-derivable', ','), (',', 'production'), ('production', ','), (',', ','), (',', 'B'), ('B', 'A-derivable'), ('A-derivable', '.')]

>> Trigrams are: 
 [('If', 'C', 'A-derivable'), ('C', 'A-derivable', ','), ('A-derivable', ',', 'production'), (',', 'production', ','), ('production', ',', ','), (',', ',', 'B'), (',', 'B', 'A-derivable'), ('B', 'A-derivable', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('C', 'NNP'), ('A-derivable', 'JJ'), (',', ','), ('production', 'NN'), (',', ','), (',', ','), ('B', 'NNP'), ('A-derivable', 'NNP'), ('.', '.')]

 (S
  If/IN
  (NP C/NNP)
  A-derivable/JJ
  ,/,
  (NP production/NN)
  ,/,
  ,/,
  (NP B/NNP A-derivable/NNP)
  ./.) 


>> Noun Phrases are: 
 ['C', 'production', 'B A-derivable']

>> Named Entities are: 
 [('PERSON', 'B')] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('C', 'c'), ('A-derivable', 'a-deriv'), (',', ','), ('production', 'product'), (',', ','), (',', ','), ('B', 'b'), ('A-derivable', 'a-deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('C', 'c'), ('A-derivable', 'a-deriv'), (',', ','), ('production', 'product'), (',', ','), (',', ','), ('B', 'b'), ('A-derivable', 'a-deriv'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('C', 'C'), ('A-derivable', 'A-derivable'), (',', ','), ('production', 'production'), (',', ','), (',', ','), ('B', 'B'), ('A-derivable', 'A-derivable'), ('.', '.')]



============================ Sentence 37 =============================

No other variables are A-derivable. 


>> Tokens are: 
 ['No', 'variables', 'A-derivable', '.']

>> Bigrams are: 
 [('No', 'variables'), ('variables', 'A-derivable'), ('A-derivable', '.')]

>> Trigrams are: 
 [('No', 'variables', 'A-derivable'), ('variables', 'A-derivable', '.')]

>> POS Tags are: 
 [('No', 'DT'), ('variables', 'NNS'), ('A-derivable', 'RB'), ('.', '.')]

 (S (NP No/DT variables/NNS) A-derivable/RB ./.) 


>> Noun Phrases are: 
 ['No variables']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('No', 'no'), ('variables', 'variabl'), ('A-derivable', 'a-deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('No', 'no'), ('variables', 'variabl'), ('A-derivable', 'a-deriv'), ('.', '.')]

>> Lemmatization: 
 [('No', 'No'), ('variables', 'variable'), ('A-derivable', 'A-derivable'), ('.', '.')]



============================ Sentence 38 =============================

SA SB S-derivable={A,B} SA AB S-derivable={A,B}  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Unit Production & Elimination of Unit productions  A production of the form AB is termed as unit production. 


>> Tokens are: 
 ['S\uf0e0A', 'S\uf0e0B', 'S-derivable=', '{', 'A', ',', 'B', '}', 'S\uf0e0A', 'A\uf0e0B', 'S-derivable=', '{', 'A', ',', 'B', '}', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Unit', 'Production', '&', 'Elimination', 'Unit', 'productions', 'A', 'production', 'form', 'A\uf0e0B', 'termed', 'unit', 'production', '.']

>> Bigrams are: 
 [('S\uf0e0A', 'S\uf0e0B'), ('S\uf0e0B', 'S-derivable='), ('S-derivable=', '{'), ('{', 'A'), ('A', ','), (',', 'B'), ('B', '}'), ('}', 'S\uf0e0A'), ('S\uf0e0A', 'A\uf0e0B'), ('A\uf0e0B', 'S-derivable='), ('S-derivable=', '{'), ('{', 'A'), ('A', ','), (',', 'B'), ('B', '}'), ('}', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Unit'), ('Unit', 'Production'), ('Production', '&'), ('&', 'Elimination'), ('Elimination', 'Unit'), ('Unit', 'productions'), ('productions', 'A'), ('A', 'production'), ('production', 'form'), ('form', 'A\uf0e0B'), ('A\uf0e0B', 'termed'), ('termed', 'unit'), ('unit', 'production'), ('production', '.')]

>> Trigrams are: 
 [('S\uf0e0A', 'S\uf0e0B', 'S-derivable='), ('S\uf0e0B', 'S-derivable=', '{'), ('S-derivable=', '{', 'A'), ('{', 'A', ','), ('A', ',', 'B'), (',', 'B', '}'), ('B', '}', 'S\uf0e0A'), ('}', 'S\uf0e0A', 'A\uf0e0B'), ('S\uf0e0A', 'A\uf0e0B', 'S-derivable='), ('A\uf0e0B', 'S-derivable=', '{'), ('S-derivable=', '{', 'A'), ('{', 'A', ','), ('A', ',', 'B'), (',', 'B', '}'), ('B', '}', 'Unit'), ('}', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Unit'), ('›', 'Unit', 'Production'), ('Unit', 'Production', '&'), ('Production', '&', 'Elimination'), ('&', 'Elimination', 'Unit'), ('Elimination', 'Unit', 'productions'), ('Unit', 'productions', 'A'), ('productions', 'A', 'production'), ('A', 'production', 'form'), ('production', 'form', 'A\uf0e0B'), ('form', 'A\uf0e0B', 'termed'), ('A\uf0e0B', 'termed', 'unit'), ('termed', 'unit', 'production'), ('unit', 'production', '.')]

>> POS Tags are: 
 [('S\uf0e0A', 'NNP'), ('S\uf0e0B', 'NNP'), ('S-derivable=', 'NNP'), ('{', '('), ('A', 'NNP'), (',', ','), ('B', 'NNP'), ('}', ')'), ('S\uf0e0A', 'NNP'), ('A\uf0e0B', 'NNP'), ('S-derivable=', 'NNP'), ('{', '('), ('A', 'NNP'), (',', ','), ('B', 'NNP'), ('}', ')'), ('Unit', 'NNP'), ('–', 'JJ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Unit', 'NNP'), ('Production', 'NNP'), ('&', 'CC'), ('Elimination', 'NNP'), ('Unit', 'NNP'), ('productions', 'VBZ'), ('A', 'DT'), ('production', 'NN'), ('form', 'NN'), ('A\uf0e0B', 'NNP'), ('termed', 'VBD'), ('unit', 'NN'), ('production', 'NN'), ('.', '.')]

 (S
  (NP SA/NNP SB/NNP S-derivable=/NNP)
  {/(
  (NP A/NNP)
  ,/,
  (NP B/NNP)
  }/)
  (NP SA/NNP AB/NNP S-derivable=/NNP)
  {/(
  (NP A/NNP)
  ,/,
  (NP B/NNP)
  }/)
  (NP Unit/NNP)
  –/JJ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Unit/NNP Production/NNP)
  &/CC
  (NP Elimination/NNP Unit/NNP)
  productions/VBZ
  (NP A/DT production/NN form/NN AB/NNP)
  termed/VBD
  (NP unit/NN production/NN)
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e0A S\uf0e0B S-derivable=', 'A', 'B', 'S\uf0e0A A\uf0e0B S-derivable=', 'A', 'B', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Unit Production', 'Elimination Unit', 'A production form A\uf0e0B', 'unit production']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Unit Production'), ('ORGANIZATION', 'Elimination Unit')] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e0A', 's\uf0e0a'), ('S\uf0e0B', 's\uf0e0b'), ('S-derivable=', 's-derivable='), ('{', '{'), ('A', 'a'), (',', ','), ('B', 'b'), ('}', '}'), ('S\uf0e0A', 's\uf0e0a'), ('A\uf0e0B', 'a\uf0e0b'), ('S-derivable=', 's-derivable='), ('{', '{'), ('A', 'a'), (',', ','), ('B', 'b'), ('}', '}'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Unit', 'unit'), ('Production', 'product'), ('&', '&'), ('Elimination', 'elimin'), ('Unit', 'unit'), ('productions', 'product'), ('A', 'a'), ('production', 'product'), ('form', 'form'), ('A\uf0e0B', 'a\uf0e0b'), ('termed', 'term'), ('unit', 'unit'), ('production', 'product'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e0A', 's\uf0e0a'), ('S\uf0e0B', 's\uf0e0b'), ('S-derivable=', 's-derivable='), ('{', '{'), ('A', 'a'), (',', ','), ('B', 'b'), ('}', '}'), ('S\uf0e0A', 's\uf0e0a'), ('A\uf0e0B', 'a\uf0e0b'), ('S-derivable=', 's-derivable='), ('{', '{'), ('A', 'a'), (',', ','), ('B', 'b'), ('}', '}'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Unit', 'unit'), ('Production', 'product'), ('&', '&'), ('Elimination', 'elimin'), ('Unit', 'unit'), ('productions', 'product'), ('A', 'a'), ('production', 'product'), ('form', 'form'), ('A\uf0e0B', 'a\uf0e0b'), ('termed', 'term'), ('unit', 'unit'), ('production', 'product'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e0A', 'S\uf0e0A'), ('S\uf0e0B', 'S\uf0e0B'), ('S-derivable=', 'S-derivable='), ('{', '{'), ('A', 'A'), (',', ','), ('B', 'B'), ('}', '}'), ('S\uf0e0A', 'S\uf0e0A'), ('A\uf0e0B', 'A\uf0e0B'), ('S-derivable=', 'S-derivable='), ('{', '{'), ('A', 'A'), (',', ','), ('B', 'B'), ('}', '}'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Unit', 'Unit'), ('Production', 'Production'), ('&', '&'), ('Elimination', 'Elimination'), ('Unit', 'Unit'), ('productions', 'production'), ('A', 'A'), ('production', 'production'), ('form', 'form'), ('A\uf0e0B', 'A\uf0e0B'), ('termed', 'termed'), ('unit', 'unit'), ('production', 'production'), ('.', '.')]



============================ Sentence 39 =============================

Where A & B are nonterminals. 


>> Tokens are: 
 ['Where', 'A', '&', 'B', 'nonterminals', '.']

>> Bigrams are: 
 [('Where', 'A'), ('A', '&'), ('&', 'B'), ('B', 'nonterminals'), ('nonterminals', '.')]

>> Trigrams are: 
 [('Where', 'A', '&'), ('A', '&', 'B'), ('&', 'B', 'nonterminals'), ('B', 'nonterminals', '.')]

>> POS Tags are: 
 [('Where', 'WRB'), ('A', 'NNP'), ('&', 'CC'), ('B', 'NNP'), ('nonterminals', 'NNS'), ('.', '.')]

 (S Where/WRB (NP A/NNP) &/CC (NP B/NNP nonterminals/NNS) ./.) 


>> Noun Phrases are: 
 ['A', 'B nonterminals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Where', 'where'), ('A', 'a'), ('&', '&'), ('B', 'b'), ('nonterminals', 'nontermin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Where', 'where'), ('A', 'a'), ('&', '&'), ('B', 'b'), ('nonterminals', 'nontermin'), ('.', '.')]

>> Lemmatization: 
 [('Where', 'Where'), ('A', 'A'), ('&', '&'), ('B', 'B'), ('nonterminals', 'nonterminals'), ('.', '.')]



============================ Sentence 40 =============================

Algorithm  Given a CFG  with no ^ productions, construct a CFG  having no unit production as follows. 


>> Tokens are: 
 ['Algorithm', 'Given', 'CFG', '^', 'productions', ',', 'construct', 'CFG', 'unit', 'production', 'follows', '.']

>> Bigrams are: 
 [('Algorithm', 'Given'), ('Given', 'CFG'), ('CFG', '^'), ('^', 'productions'), ('productions', ','), (',', 'construct'), ('construct', 'CFG'), ('CFG', 'unit'), ('unit', 'production'), ('production', 'follows'), ('follows', '.')]

>> Trigrams are: 
 [('Algorithm', 'Given', 'CFG'), ('Given', 'CFG', '^'), ('CFG', '^', 'productions'), ('^', 'productions', ','), ('productions', ',', 'construct'), (',', 'construct', 'CFG'), ('construct', 'CFG', 'unit'), ('CFG', 'unit', 'production'), ('unit', 'production', 'follows'), ('production', 'follows', '.')]

>> POS Tags are: 
 [('Algorithm', 'NNP'), ('Given', 'NNP'), ('CFG', 'NNP'), ('^', 'NNP'), ('productions', 'NNS'), (',', ','), ('construct', 'NN'), ('CFG', 'NNP'), ('unit', 'NN'), ('production', 'NN'), ('follows', 'VBZ'), ('.', '.')]

 (S
  (NP Algorithm/NNP Given/NNP CFG/NNP ^/NNP productions/NNS)
  ,/,
  (NP construct/NN CFG/NNP unit/NN production/NN)
  follows/VBZ
  ./.) 


>> Noun Phrases are: 
 ['Algorithm Given CFG ^ productions', 'construct CFG unit production']

>> Named Entities are: 
 [('PERSON', 'Algorithm'), ('PERSON', 'Given CFG'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('Algorithm', 'algorithm'), ('Given', 'given'), ('CFG', 'cfg'), ('^', '^'), ('productions', 'product'), (',', ','), ('construct', 'construct'), ('CFG', 'cfg'), ('unit', 'unit'), ('production', 'product'), ('follows', 'follow'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Algorithm', 'algorithm'), ('Given', 'given'), ('CFG', 'cfg'), ('^', '^'), ('productions', 'product'), (',', ','), ('construct', 'construct'), ('CFG', 'cfg'), ('unit', 'unit'), ('production', 'product'), ('follows', 'follow'), ('.', '.')]

>> Lemmatization: 
 [('Algorithm', 'Algorithm'), ('Given', 'Given'), ('CFG', 'CFG'), ('^', '^'), ('productions', 'production'), (',', ','), ('construct', 'construct'), ('CFG', 'CFG'), ('unit', 'unit'), ('production', 'production'), ('follows', 'follows'), ('.', '.')]



============================ Sentence 41 =============================

Initialize P1 to be P. For each A ∈ V ,finding the set of A derivable variable. 


>> Tokens are: 
 ['Initialize', 'P1', 'P.', 'For', 'A', '∈', 'V', ',', 'finding', 'set', 'A', 'derivable', 'variable', '.']

>> Bigrams are: 
 [('Initialize', 'P1'), ('P1', 'P.'), ('P.', 'For'), ('For', 'A'), ('A', '∈'), ('∈', 'V'), ('V', ','), (',', 'finding'), ('finding', 'set'), ('set', 'A'), ('A', 'derivable'), ('derivable', 'variable'), ('variable', '.')]

>> Trigrams are: 
 [('Initialize', 'P1', 'P.'), ('P1', 'P.', 'For'), ('P.', 'For', 'A'), ('For', 'A', '∈'), ('A', '∈', 'V'), ('∈', 'V', ','), ('V', ',', 'finding'), (',', 'finding', 'set'), ('finding', 'set', 'A'), ('set', 'A', 'derivable'), ('A', 'derivable', 'variable'), ('derivable', 'variable', '.')]

>> POS Tags are: 
 [('Initialize', 'NNP'), ('P1', 'NNP'), ('P.', 'NNP'), ('For', 'IN'), ('A', 'NNP'), ('∈', 'NNP'), ('V', 'NNP'), (',', ','), ('finding', 'VBG'), ('set', 'VBD'), ('A', 'NNP'), ('derivable', 'JJ'), ('variable', 'NN'), ('.', '.')]

 (S
  (NP Initialize/NNP P1/NNP P./NNP)
  For/IN
  (NP A/NNP ∈/NNP V/NNP)
  ,/,
  finding/VBG
  set/VBD
  (NP A/NNP)
  (NP derivable/JJ variable/NN)
  ./.) 


>> Noun Phrases are: 
 ['Initialize P1 P.', 'A ∈ V', 'A', 'derivable variable']

>> Named Entities are: 
 [('PERSON', 'Initialize P1')] 

>> Stemming using Porter Stemmer: 
 [('Initialize', 'initi'), ('P1', 'p1'), ('P.', 'p.'), ('For', 'for'), ('A', 'a'), ('∈', '∈'), ('V', 'v'), (',', ','), ('finding', 'find'), ('set', 'set'), ('A', 'a'), ('derivable', 'deriv'), ('variable', 'variabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Initialize', 'initi'), ('P1', 'p1'), ('P.', 'p.'), ('For', 'for'), ('A', 'a'), ('∈', '∈'), ('V', 'v'), (',', ','), ('finding', 'find'), ('set', 'set'), ('A', 'a'), ('derivable', 'deriv'), ('variable', 'variabl'), ('.', '.')]

>> Lemmatization: 
 [('Initialize', 'Initialize'), ('P1', 'P1'), ('P.', 'P.'), ('For', 'For'), ('A', 'A'), ('∈', '∈'), ('V', 'V'), (',', ','), ('finding', 'finding'), ('set', 'set'), ('A', 'A'), ('derivable', 'derivable'), ('variable', 'variable'), ('.', '.')]



============================ Sentence 42 =============================

For every pair (A, B) such that B is A- derivable and every non unit production Bα, add the production Aα to P1 if it is not already present in P1. 


>> Tokens are: 
 ['For', 'every', 'pair', '(', 'A', ',', 'B', ')', 'B', 'A-', 'derivable', 'every', 'non', 'unit', 'production', 'B\uf0e0α', ',', 'add', 'production', 'A\uf0e0α', 'P1', 'already', 'present', 'P1', '.']

>> Bigrams are: 
 [('For', 'every'), ('every', 'pair'), ('pair', '('), ('(', 'A'), ('A', ','), (',', 'B'), ('B', ')'), (')', 'B'), ('B', 'A-'), ('A-', 'derivable'), ('derivable', 'every'), ('every', 'non'), ('non', 'unit'), ('unit', 'production'), ('production', 'B\uf0e0α'), ('B\uf0e0α', ','), (',', 'add'), ('add', 'production'), ('production', 'A\uf0e0α'), ('A\uf0e0α', 'P1'), ('P1', 'already'), ('already', 'present'), ('present', 'P1'), ('P1', '.')]

>> Trigrams are: 
 [('For', 'every', 'pair'), ('every', 'pair', '('), ('pair', '(', 'A'), ('(', 'A', ','), ('A', ',', 'B'), (',', 'B', ')'), ('B', ')', 'B'), (')', 'B', 'A-'), ('B', 'A-', 'derivable'), ('A-', 'derivable', 'every'), ('derivable', 'every', 'non'), ('every', 'non', 'unit'), ('non', 'unit', 'production'), ('unit', 'production', 'B\uf0e0α'), ('production', 'B\uf0e0α', ','), ('B\uf0e0α', ',', 'add'), (',', 'add', 'production'), ('add', 'production', 'A\uf0e0α'), ('production', 'A\uf0e0α', 'P1'), ('A\uf0e0α', 'P1', 'already'), ('P1', 'already', 'present'), ('already', 'present', 'P1'), ('present', 'P1', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('every', 'DT'), ('pair', 'NN'), ('(', '('), ('A', 'NNP'), (',', ','), ('B', 'NNP'), (')', ')'), ('B', 'NNP'), ('A-', 'NNP'), ('derivable', 'JJ'), ('every', 'DT'), ('non', 'JJ'), ('unit', 'NN'), ('production', 'NN'), ('B\uf0e0α', 'NNP'), (',', ','), ('add', 'VB'), ('production', 'NN'), ('A\uf0e0α', 'NNP'), ('P1', 'NNP'), ('already', 'RB'), ('present', 'JJ'), ('P1', 'NNP'), ('.', '.')]

 (S
  For/IN
  (NP every/DT pair/NN)
  (/(
  (NP A/NNP)
  ,/,
  (NP B/NNP)
  )/)
  (NP B/NNP A-/NNP)
  derivable/JJ
  (NP every/DT non/JJ unit/NN production/NN Bα/NNP)
  ,/,
  add/VB
  (NP production/NN Aα/NNP P1/NNP)
  already/RB
  (NP present/JJ P1/NNP)
  ./.) 


>> Noun Phrases are: 
 ['every pair', 'A', 'B', 'B A-', 'every non unit production B\uf0e0α', 'production A\uf0e0α P1', 'present P1']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('every', 'everi'), ('pair', 'pair'), ('(', '('), ('A', 'a'), (',', ','), ('B', 'b'), (')', ')'), ('B', 'b'), ('A-', 'a-'), ('derivable', 'deriv'), ('every', 'everi'), ('non', 'non'), ('unit', 'unit'), ('production', 'product'), ('B\uf0e0α', 'b\uf0e0α'), (',', ','), ('add', 'add'), ('production', 'product'), ('A\uf0e0α', 'a\uf0e0α'), ('P1', 'p1'), ('already', 'alreadi'), ('present', 'present'), ('P1', 'p1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('every', 'everi'), ('pair', 'pair'), ('(', '('), ('A', 'a'), (',', ','), ('B', 'b'), (')', ')'), ('B', 'b'), ('A-', 'a-'), ('derivable', 'deriv'), ('every', 'everi'), ('non', 'non'), ('unit', 'unit'), ('production', 'product'), ('B\uf0e0α', 'b\uf0e0α'), (',', ','), ('add', 'add'), ('production', 'product'), ('A\uf0e0α', 'a\uf0e0α'), ('P1', 'p1'), ('already', 'alreadi'), ('present', 'present'), ('P1', 'p1'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('every', 'every'), ('pair', 'pair'), ('(', '('), ('A', 'A'), (',', ','), ('B', 'B'), (')', ')'), ('B', 'B'), ('A-', 'A-'), ('derivable', 'derivable'), ('every', 'every'), ('non', 'non'), ('unit', 'unit'), ('production', 'production'), ('B\uf0e0α', 'B\uf0e0α'), (',', ','), ('add', 'add'), ('production', 'production'), ('A\uf0e0α', 'A\uf0e0α'), ('P1', 'P1'), ('already', 'already'), ('present', 'present'), ('P1', 'P1'), ('.', '.')]



============================ Sentence 43 =============================

Delete all unit productions from P1. 


>> Tokens are: 
 ['Delete', 'unit', 'productions', 'P1', '.']

>> Bigrams are: 
 [('Delete', 'unit'), ('unit', 'productions'), ('productions', 'P1'), ('P1', '.')]

>> Trigrams are: 
 [('Delete', 'unit', 'productions'), ('unit', 'productions', 'P1'), ('productions', 'P1', '.')]

>> POS Tags are: 
 [('Delete', 'NNP'), ('unit', 'NN'), ('productions', 'NNS'), ('P1', 'NNP'), ('.', '.')]

 (S (NP Delete/NNP unit/NN productions/NNS P1/NNP) ./.) 


>> Noun Phrases are: 
 ['Delete unit productions P1']

>> Named Entities are: 
 [('GPE', 'Delete')] 

>> Stemming using Porter Stemmer: 
 [('Delete', 'delet'), ('unit', 'unit'), ('productions', 'product'), ('P1', 'p1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Delete', 'delet'), ('unit', 'unit'), ('productions', 'product'), ('P1', 'p1'), ('.', '.')]

>> Lemmatization: 
 [('Delete', 'Delete'), ('unit', 'unit'), ('productions', 'production'), ('P1', 'P1'), ('.', '.')]



============================ Sentence 44 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›   Elimination of unit production SABA|BA|AA|AB|A|B A aA|a B bB|b Unit Productions are SA and SB  AaA|a BbB|b Removing unit productions  SABA|BA|AA|AB |aA|a |bB|b  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG to CNF   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Chomsky Normal Form (CNF) A context free grammar is in Chomsky normal form (CNF) if every production is one of these two forms:   Where and  are nonterminal and  is terminal. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Elimination', 'unit', 'production', 'S\uf0e0ABA|BA|AA|AB|A|B', 'A\uf0e0', 'aA|a', 'B\uf0e0', 'bB|b', 'Unit', 'Productions', 'S\uf0e0A', 'S\uf0e0B', 'A\uf0e0aA|a', 'B\uf0e0bB|b', 'Removing', 'unit', 'productions', 'S\uf0e0ABA|BA|AA|AB', '|aA|a', '|bB|b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'CFG', 'CNF', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Chomsky', 'Normal', 'Form', '(', 'CNF', ')', 'A', 'context', 'free', 'grammar', 'Chomsky', 'normal', 'form', '(', 'CNF', ')', 'every', 'production', 'one', 'two', 'forms', ':', 'Where', 'nonterminal', 'terminal', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Elimination'), ('Elimination', 'unit'), ('unit', 'production'), ('production', 'S\uf0e0ABA|BA|AA|AB|A|B'), ('S\uf0e0ABA|BA|AA|AB|A|B', 'A\uf0e0'), ('A\uf0e0', 'aA|a'), ('aA|a', 'B\uf0e0'), ('B\uf0e0', 'bB|b'), ('bB|b', 'Unit'), ('Unit', 'Productions'), ('Productions', 'S\uf0e0A'), ('S\uf0e0A', 'S\uf0e0B'), ('S\uf0e0B', 'A\uf0e0aA|a'), ('A\uf0e0aA|a', 'B\uf0e0bB|b'), ('B\uf0e0bB|b', 'Removing'), ('Removing', 'unit'), ('unit', 'productions'), ('productions', 'S\uf0e0ABA|BA|AA|AB'), ('S\uf0e0ABA|BA|AA|AB', '|aA|a'), ('|aA|a', '|bB|b'), ('|bB|b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'CFG'), ('CFG', 'CNF'), ('CNF', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Chomsky'), ('Chomsky', 'Normal'), ('Normal', 'Form'), ('Form', '('), ('(', 'CNF'), ('CNF', ')'), (')', 'A'), ('A', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', 'Chomsky'), ('Chomsky', 'normal'), ('normal', 'form'), ('form', '('), ('(', 'CNF'), ('CNF', ')'), (')', 'every'), ('every', 'production'), ('production', 'one'), ('one', 'two'), ('two', 'forms'), ('forms', ':'), (':', 'Where'), ('Where', 'nonterminal'), ('nonterminal', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Elimination'), ('›', 'Elimination', 'unit'), ('Elimination', 'unit', 'production'), ('unit', 'production', 'S\uf0e0ABA|BA|AA|AB|A|B'), ('production', 'S\uf0e0ABA|BA|AA|AB|A|B', 'A\uf0e0'), ('S\uf0e0ABA|BA|AA|AB|A|B', 'A\uf0e0', 'aA|a'), ('A\uf0e0', 'aA|a', 'B\uf0e0'), ('aA|a', 'B\uf0e0', 'bB|b'), ('B\uf0e0', 'bB|b', 'Unit'), ('bB|b', 'Unit', 'Productions'), ('Unit', 'Productions', 'S\uf0e0A'), ('Productions', 'S\uf0e0A', 'S\uf0e0B'), ('S\uf0e0A', 'S\uf0e0B', 'A\uf0e0aA|a'), ('S\uf0e0B', 'A\uf0e0aA|a', 'B\uf0e0bB|b'), ('A\uf0e0aA|a', 'B\uf0e0bB|b', 'Removing'), ('B\uf0e0bB|b', 'Removing', 'unit'), ('Removing', 'unit', 'productions'), ('unit', 'productions', 'S\uf0e0ABA|BA|AA|AB'), ('productions', 'S\uf0e0ABA|BA|AA|AB', '|aA|a'), ('S\uf0e0ABA|BA|AA|AB', '|aA|a', '|bB|b'), ('|aA|a', '|bB|b', 'Unit'), ('|bB|b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'CFG'), ('›', 'CFG', 'CNF'), ('CFG', 'CNF', 'Unit'), ('CNF', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Chomsky'), ('›', 'Chomsky', 'Normal'), ('Chomsky', 'Normal', 'Form'), ('Normal', 'Form', '('), ('Form', '(', 'CNF'), ('(', 'CNF', ')'), ('CNF', ')', 'A'), (')', 'A', 'context'), ('A', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', 'Chomsky'), ('grammar', 'Chomsky', 'normal'), ('Chomsky', 'normal', 'form'), ('normal', 'form', '('), ('form', '(', 'CNF'), ('(', 'CNF', ')'), ('CNF', ')', 'every'), (')', 'every', 'production'), ('every', 'production', 'one'), ('production', 'one', 'two'), ('one', 'two', 'forms'), ('two', 'forms', ':'), ('forms', ':', 'Where'), (':', 'Where', 'nonterminal'), ('Where', 'nonterminal', 'terminal'), ('nonterminal', 'terminal', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Elimination', 'NNP'), ('unit', 'NN'), ('production', 'NN'), ('S\uf0e0ABA|BA|AA|AB|A|B', 'NNP'), ('A\uf0e0', 'NNP'), ('aA|a', 'VBZ'), ('B\uf0e0', 'NNP'), ('bB|b', 'NN'), ('Unit', 'NNP'), ('Productions', 'NNP'), ('S\uf0e0A', 'NNP'), ('S\uf0e0B', 'NNP'), ('A\uf0e0aA|a', 'NNP'), ('B\uf0e0bB|b', 'NNP'), ('Removing', 'NNP'), ('unit', 'NN'), ('productions', 'NNS'), ('S\uf0e0ABA|BA|AA|AB', 'NNP'), ('|aA|a', 'NNP'), ('|bB|b', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Chomsky', 'NNP'), ('Normal', 'NNP'), ('Form', 'NNP'), ('(', '('), ('CNF', 'NNP'), (')', ')'), ('A', 'NNP'), ('context', 'JJ'), ('free', 'JJ'), ('grammar', 'NN'), ('Chomsky', 'NNP'), ('normal', 'JJ'), ('form', 'NN'), ('(', '('), ('CNF', 'NNP'), (')', ')'), ('every', 'DT'), ('production', 'NN'), ('one', 'CD'), ('two', 'CD'), ('forms', 'NNS'), (':', ':'), ('Where', 'NNP'), ('nonterminal', 'JJ'), ('terminal', 'NN'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Elimination/NNP
    unit/NN
    production/NN
    SABA|BA|AA|AB|A|B/NNP
    A/NNP)
  aA|a/VBZ
  (NP
    B/NNP
    bB|b/NN
    Unit/NNP
    Productions/NNP
    SA/NNP
    SB/NNP
    AaA|a/NNP
    BbB|b/NNP
    Removing/NNP
    unit/NN
    productions/NNS
    SABA|BA|AA|AB/NNP
    |aA|a/NNP
    |bB|b/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP CFG/NNP CNF/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Chomsky/NNP Normal/NNP Form/NNP)
  (/(
  (NP CNF/NNP)
  )/)
  (NP A/NNP)
  (NP context/JJ free/JJ grammar/NN Chomsky/NNP)
  (NP normal/JJ form/NN)
  (/(
  (NP CNF/NNP)
  )/)
  (NP every/DT production/NN)
  one/CD
  two/CD
  (NP forms/NNS)
  :/:
  (NP Where/NNP)
  (NP nonterminal/JJ terminal/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Elimination unit production S\uf0e0ABA|BA|AA|AB|A|B A\uf0e0', 'B\uf0e0 bB|b Unit Productions S\uf0e0A S\uf0e0B A\uf0e0aA|a B\uf0e0bB|b Removing unit productions S\uf0e0ABA|BA|AA|AB |aA|a |bB|b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› CFG CNF Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Chomsky Normal Form', 'CNF', 'A', 'context free grammar Chomsky', 'normal form', 'CNF', 'every production', 'forms', 'Where', 'nonterminal terminal']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit Productions'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Chomsky Normal Form'), ('ORGANIZATION', 'CNF'), ('PERSON', 'Chomsky'), ('ORGANIZATION', 'CNF')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Elimination', 'elimin'), ('unit', 'unit'), ('production', 'product'), ('S\uf0e0ABA|BA|AA|AB|A|B', 's\uf0e0aba|ba|aa|ab|a|b'), ('A\uf0e0', 'a\uf0e0'), ('aA|a', 'aa|a'), ('B\uf0e0', 'b\uf0e0'), ('bB|b', 'bb|b'), ('Unit', 'unit'), ('Productions', 'product'), ('S\uf0e0A', 's\uf0e0a'), ('S\uf0e0B', 's\uf0e0b'), ('A\uf0e0aA|a', 'a\uf0e0aa|a'), ('B\uf0e0bB|b', 'b\uf0e0bb|b'), ('Removing', 'remov'), ('unit', 'unit'), ('productions', 'product'), ('S\uf0e0ABA|BA|AA|AB', 's\uf0e0aba|ba|aa|ab'), ('|aA|a', '|aa|a'), ('|bB|b', '|bb|b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'chomski'), ('Normal', 'normal'), ('Form', 'form'), ('(', '('), ('CNF', 'cnf'), (')', ')'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Chomsky', 'chomski'), ('normal', 'normal'), ('form', 'form'), ('(', '('), ('CNF', 'cnf'), (')', ')'), ('every', 'everi'), ('production', 'product'), ('one', 'one'), ('two', 'two'), ('forms', 'form'), (':', ':'), ('Where', 'where'), ('nonterminal', 'nontermin'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Elimination', 'elimin'), ('unit', 'unit'), ('production', 'product'), ('S\uf0e0ABA|BA|AA|AB|A|B', 's\uf0e0aba|ba|aa|ab|a|b'), ('A\uf0e0', 'a\uf0e0'), ('aA|a', 'aa|a'), ('B\uf0e0', 'b\uf0e0'), ('bB|b', 'bb|b'), ('Unit', 'unit'), ('Productions', 'product'), ('S\uf0e0A', 's\uf0e0a'), ('S\uf0e0B', 's\uf0e0b'), ('A\uf0e0aA|a', 'a\uf0e0aa|a'), ('B\uf0e0bB|b', 'b\uf0e0bb|b'), ('Removing', 'remov'), ('unit', 'unit'), ('productions', 'product'), ('S\uf0e0ABA|BA|AA|AB', 's\uf0e0aba|ba|aa|ab'), ('|aA|a', '|aa|a'), ('|bB|b', '|bb|b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'chomski'), ('Normal', 'normal'), ('Form', 'form'), ('(', '('), ('CNF', 'cnf'), (')', ')'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Chomsky', 'chomski'), ('normal', 'normal'), ('form', 'form'), ('(', '('), ('CNF', 'cnf'), (')', ')'), ('every', 'everi'), ('production', 'product'), ('one', 'one'), ('two', 'two'), ('forms', 'form'), (':', ':'), ('Where', 'where'), ('nonterminal', 'nontermin'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Elimination', 'Elimination'), ('unit', 'unit'), ('production', 'production'), ('S\uf0e0ABA|BA|AA|AB|A|B', 'S\uf0e0ABA|BA|AA|AB|A|B'), ('A\uf0e0', 'A\uf0e0'), ('aA|a', 'aA|a'), ('B\uf0e0', 'B\uf0e0'), ('bB|b', 'bB|b'), ('Unit', 'Unit'), ('Productions', 'Productions'), ('S\uf0e0A', 'S\uf0e0A'), ('S\uf0e0B', 'S\uf0e0B'), ('A\uf0e0aA|a', 'A\uf0e0aA|a'), ('B\uf0e0bB|b', 'B\uf0e0bB|b'), ('Removing', 'Removing'), ('unit', 'unit'), ('productions', 'production'), ('S\uf0e0ABA|BA|AA|AB', 'S\uf0e0ABA|BA|AA|AB'), ('|aA|a', '|aA|a'), ('|bB|b', '|bB|b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Chomsky', 'Chomsky'), ('Normal', 'Normal'), ('Form', 'Form'), ('(', '('), ('CNF', 'CNF'), (')', ')'), ('A', 'A'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Chomsky', 'Chomsky'), ('normal', 'normal'), ('form', 'form'), ('(', '('), ('CNF', 'CNF'), (')', ')'), ('every', 'every'), ('production', 'production'), ('one', 'one'), ('two', 'two'), ('forms', 'form'), (':', ':'), ('Where', 'Where'), ('nonterminal', 'nonterminal'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 45 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Converting CFG to CNF Steps to convert CFG to CNF Eliminate ˄-Productions. 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Converting', 'CFG', 'CNF', 'Steps', 'convert', 'CFG', 'CNF', 'Eliminate', '˄-Productions', '.']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Converting'), ('Converting', 'CFG'), ('CFG', 'CNF'), ('CNF', 'Steps'), ('Steps', 'convert'), ('convert', 'CFG'), ('CFG', 'CNF'), ('CNF', 'Eliminate'), ('Eliminate', '˄-Productions'), ('˄-Productions', '.')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Converting'), ('›', 'Converting', 'CFG'), ('Converting', 'CFG', 'CNF'), ('CFG', 'CNF', 'Steps'), ('CNF', 'Steps', 'convert'), ('Steps', 'convert', 'CFG'), ('convert', 'CFG', 'CNF'), ('CFG', 'CNF', 'Eliminate'), ('CNF', 'Eliminate', '˄-Productions'), ('Eliminate', '˄-Productions', '.')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Converting', 'NNP'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('Steps', 'NNP'), ('convert', 'NN'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('Eliminate', 'NNP'), ('˄-Productions', 'NNS'), ('.', '.')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Converting/NNP
    CFG/NNP
    CNF/NNP
    Steps/NNP
    convert/NN
    CFG/NNP
    CNF/NNP
    Eliminate/NNP
    ˄-Productions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Converting CFG CNF Steps convert CFG CNF Eliminate ˄-Productions']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Steps'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Converting', 'convert'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Steps', 'step'), ('convert', 'convert'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Eliminate', 'elimin'), ('˄-Productions', '˄-product'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Converting', 'convert'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Steps', 'step'), ('convert', 'convert'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('Eliminate', 'elimin'), ('˄-Productions', '˄-product'), ('.', '.')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Converting', 'Converting'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('Steps', 'Steps'), ('convert', 'convert'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('Eliminate', 'Eliminate'), ('˄-Productions', '˄-Productions'), ('.', '.')]



============================ Sentence 46 =============================

Eliminate Unit Productions. 


>> Tokens are: 
 ['Eliminate', 'Unit', 'Productions', '.']

>> Bigrams are: 
 [('Eliminate', 'Unit'), ('Unit', 'Productions'), ('Productions', '.')]

>> Trigrams are: 
 [('Eliminate', 'Unit', 'Productions'), ('Unit', 'Productions', '.')]

>> POS Tags are: 
 [('Eliminate', 'NNP'), ('Unit', 'NNP'), ('Productions', 'NNP'), ('.', '.')]

 (S (NP Eliminate/NNP Unit/NNP Productions/NNP) ./.) 


>> Noun Phrases are: 
 ['Eliminate Unit Productions']

>> Named Entities are: 
 [('ORGANIZATION', 'Eliminate Unit Productions')] 

>> Stemming using Porter Stemmer: 
 [('Eliminate', 'elimin'), ('Unit', 'unit'), ('Productions', 'product'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Eliminate', 'elimin'), ('Unit', 'unit'), ('Productions', 'product'), ('.', '.')]

>> Lemmatization: 
 [('Eliminate', 'Eliminate'), ('Unit', 'Unit'), ('Productions', 'Productions'), ('.', '.')]



============================ Sentence 47 =============================

Restricting the right side of productions to single terminal or string of two or more nonterminals. 


>> Tokens are: 
 ['Restricting', 'right', 'side', 'productions', 'single', 'terminal', 'string', 'two', 'nonterminals', '.']

>> Bigrams are: 
 [('Restricting', 'right'), ('right', 'side'), ('side', 'productions'), ('productions', 'single'), ('single', 'terminal'), ('terminal', 'string'), ('string', 'two'), ('two', 'nonterminals'), ('nonterminals', '.')]

>> Trigrams are: 
 [('Restricting', 'right', 'side'), ('right', 'side', 'productions'), ('side', 'productions', 'single'), ('productions', 'single', 'terminal'), ('single', 'terminal', 'string'), ('terminal', 'string', 'two'), ('string', 'two', 'nonterminals'), ('two', 'nonterminals', '.')]

>> POS Tags are: 
 [('Restricting', 'VBG'), ('right', 'JJ'), ('side', 'NN'), ('productions', 'NNS'), ('single', 'JJ'), ('terminal', 'JJ'), ('string', 'NN'), ('two', 'CD'), ('nonterminals', 'NNS'), ('.', '.')]

 (S
  Restricting/VBG
  (NP right/JJ side/NN productions/NNS)
  (NP single/JJ terminal/JJ string/NN)
  two/CD
  (NP nonterminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['right side productions', 'single terminal string', 'nonterminals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Restricting', 'restrict'), ('right', 'right'), ('side', 'side'), ('productions', 'product'), ('single', 'singl'), ('terminal', 'termin'), ('string', 'string'), ('two', 'two'), ('nonterminals', 'nontermin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Restricting', 'restrict'), ('right', 'right'), ('side', 'side'), ('productions', 'product'), ('single', 'singl'), ('terminal', 'termin'), ('string', 'string'), ('two', 'two'), ('nonterminals', 'nontermin'), ('.', '.')]

>> Lemmatization: 
 [('Restricting', 'Restricting'), ('right', 'right'), ('side', 'side'), ('productions', 'production'), ('single', 'single'), ('terminal', 'terminal'), ('string', 'string'), ('two', 'two'), ('nonterminals', 'nonterminals'), ('.', '.')]



============================ Sentence 48 =============================

Final step of CNF. 


>> Tokens are: 
 ['Final', 'step', 'CNF', '.']

>> Bigrams are: 
 [('Final', 'step'), ('step', 'CNF'), ('CNF', '.')]

>> Trigrams are: 
 [('Final', 'step', 'CNF'), ('step', 'CNF', '.')]

>> POS Tags are: 
 [('Final', 'JJ'), ('step', 'NN'), ('CNF', 'NNP'), ('.', '.')]

 (S (NP Final/JJ step/NN CNF/NNP) ./.) 


>> Noun Phrases are: 
 ['Final step CNF']

>> Named Entities are: 
 [('ORGANIZATION', 'CNF')] 

>> Stemming using Porter Stemmer: 
 [('Final', 'final'), ('step', 'step'), ('CNF', 'cnf'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Final', 'final'), ('step', 'step'), ('CNF', 'cnf'), ('.', '.')]

>> Lemmatization: 
 [('Final', 'Final'), ('step', 'step'), ('CNF', 'CNF'), ('.', '.')]



============================ Sentence 49 =============================

(shorten the string of NT to length 2)  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SAAC AaAb|˄ CaC|a Step 1: Elimination of ^ production     Step-2: Eliminate Unit Production    CaC|a   AC | C SAAC| AaAb| ab   Eliminate A^   aC|a C SAAC|AC| AaAb|ab CaC|a   Unit Production is SC  Step 3: Replace all mixed string with solid NT     Step-4: Shorten the string of NT to length 2 	SAX1		X1AC 	SAC|PC|a 	APY1		Y1AQ 	APQ 	CPC|a 	Pa 	Qb  SAAC|AC| aC |a Pa Qb PC A PAQ|PQ aAb|ab C  aC|a PC|a Chomsky Normal Form  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SaAbB AAb|b BBa|a Step 1 and 2 are not required as there is no ^ and unit productions Step-3: Replace all mixed string with solid NT SPAQB AAQ|b BBP|a Pa Qb Step-4 : final step of CNF SPT1 T1AT2		 T2QB AAQ|b BBP|a Pa Qb   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SAA AB|BB BabB|b|bb Step 1 is not required as there is no ^ productions Step-2: Eliminate Unit Production: SAA A abB|b|bb|BB BabB|b|bb Step-3:Replace all mixed string with solid NT: SAA A PQB|b|QQ|BB B PQB|b|QQ  Pa Qb  Step-4 : Shorten the string of NT to length 2 SAA A PT1|b|QQ|BB		T1QB B PV1|b|QQ 		V1QB Pa Qb   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SASB|^ AaAS|a BSbS|A|bb Step-1: Eliminate ˄-Production: SASB|AB AaAS|a|aA BSbS|A|bb|bS|Sb|b Step-2: Eliminate Unit Production: SASB|AB AaAS|a|aA BSbS|aAS|a|aA|bb|bS|Sb|b Step-3:Replace all mixed string with solid NT: SASB|AB APAS|a|PA BSQS|PAS|a|PA|QQ|QS|SQ|b Pa Qb Step-4 : Shorten the string of NT to length 2 SAB|AT1	T1SB Aa|PA|PU1	U1AS B SV1|PV2|a|PA|QQ|QS|SQ|b V1QS	V2AS Pa Qb   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Backus-Naur Form (BNF) BNF is one of the notation techniques for context free grammar. 


>> Tokens are: 
 ['(', 'shorten', 'string', 'NT', 'length', '2', ')', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Example', ':', 'CFG', 'CNF', 'S\uf0e0AAC', 'A\uf0e0aAb|˄', 'C\uf0e0aC|a', 'Step', '1', ':', 'Elimination', '^', 'production', 'Step-2', ':', 'Eliminate', 'Unit', 'Production', 'C\uf0e0aC|a', 'AC', '|', 'C', 'S\uf0e0AAC|', 'A\uf0e0aAb|', 'ab', 'Eliminate', 'A\uf0e0^', 'aC|a', 'C', 'S\uf0e0AAC|AC|', 'A\uf0e0aAb|ab', 'C\uf0e0aC|a', 'Unit', 'Production', 'S\uf0e0C', 'Step', '3', ':', 'Replace', 'mixed', 'string', 'solid', 'NT', 'Step-4', ':', 'Shorten', 'string', 'NT', 'length', '2', 'S\uf0e0AX1', 'X1\uf0e0AC', 'S\uf0e0AC|PC|a', 'A\uf0e0PY1', 'Y1\uf0e0AQ', 'A\uf0e0PQ', 'C\uf0e0PC|a', 'P\uf0e0a', 'Q\uf0e0b', 'S\uf0e0AAC|AC|', 'aC', '|a', 'P\uf0e0a', 'Q\uf0e0b', 'PC', 'A\uf0e0', 'PAQ|PQ', 'aAb|ab', 'C\uf0e0', 'aC|a', 'PC|a', 'Chomsky', 'Normal', 'Form', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Example', ':', 'CFG', 'CNF', 'S\uf0e0aAbB', 'A\uf0e0Ab|b', 'B\uf0e0Ba|a', 'Step', '1', '2', 'required', '^', 'unit', 'productions', 'Step-3', ':', 'Replace', 'mixed', 'string', 'solid', 'NT', 'S\uf0e0PAQB', 'A\uf0e0AQ|b', 'B\uf0e0BP|a', 'P\uf0e0a', 'Q\uf0e0b', 'Step-4', ':', 'final', 'step', 'CNF', 'S\uf0e0PT1', 'T1\uf0e0AT2', 'T2\uf0e0QB', 'A\uf0e0AQ|b', 'B\uf0e0BP|a', 'P\uf0e0a', 'Q\uf0e0b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Example', ':', 'CFG', 'CNF', 'S\uf0e0AA', 'A\uf0e0B|BB', 'B\uf0e0abB|b|bb', 'Step', '1', 'required', '^', 'productions', 'Step-2', ':', 'Eliminate', 'Unit', 'Production', ':', 'S\uf0e0AA', 'A\uf0e0', 'abB|b|bb|BB', 'B\uf0e0abB|b|bb', 'Step-3', ':', 'Replace', 'mixed', 'string', 'solid', 'NT', ':', 'S\uf0e0AA', 'A\uf0e0', 'PQB|b|QQ|BB', 'B\uf0e0', 'PQB|b|QQ', 'P\uf0e0a', 'Q\uf0e0b', 'Step-4', ':', 'Shorten', 'string', 'NT', 'length', '2', 'S\uf0e0AA', 'A\uf0e0', 'PT1|b|QQ|BB', 'T1\uf0e0QB', 'B\uf0e0', 'PV1|b|QQ', 'V1\uf0e0QB', 'P\uf0e0a', 'Q\uf0e0b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Example', ':', 'CFG', 'CNF', 'S\uf0e0ASB|^', 'A\uf0e0aAS|a', 'B\uf0e0SbS|A|bb', 'Step-1', ':', 'Eliminate', '˄-Production', ':', 'S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA', 'B\uf0e0SbS|A|bb|bS|Sb|b', 'Step-2', ':', 'Eliminate', 'Unit', 'Production', ':', 'S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA', 'B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'Step-3', ':', 'Replace', 'mixed', 'string', 'solid', 'NT', ':', 'S\uf0e0ASB|AB', 'A\uf0e0PAS|a|PA', 'B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'P\uf0e0a', 'Q\uf0e0b', 'Step-4', ':', 'Shorten', 'string', 'NT', 'length', '2', 'S\uf0e0AB|AT1', 'T1\uf0e0SB', 'A\uf0e0a|PA|PU1', 'U1\uf0e0AS', 'B\uf0e0', 'SV1|PV2|a|PA|QQ|QS|SQ|b', 'V1\uf0e0QS', 'V2\uf0e0AS', 'P\uf0e0a', 'Q\uf0e0b', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Backus-Naur', 'Form', '(', 'BNF', ')', 'BNF', 'one', 'notation', 'techniques', 'context', 'free', 'grammar', '.']

>> Bigrams are: 
 [('(', 'shorten'), ('shorten', 'string'), ('string', 'NT'), ('NT', 'length'), ('length', '2'), ('2', ')'), (')', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'CFG'), ('CFG', 'CNF'), ('CNF', 'S\uf0e0AAC'), ('S\uf0e0AAC', 'A\uf0e0aAb|˄'), ('A\uf0e0aAb|˄', 'C\uf0e0aC|a'), ('C\uf0e0aC|a', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Elimination'), ('Elimination', '^'), ('^', 'production'), ('production', 'Step-2'), ('Step-2', ':'), (':', 'Eliminate'), ('Eliminate', 'Unit'), ('Unit', 'Production'), ('Production', 'C\uf0e0aC|a'), ('C\uf0e0aC|a', 'AC'), ('AC', '|'), ('|', 'C'), ('C', 'S\uf0e0AAC|'), ('S\uf0e0AAC|', 'A\uf0e0aAb|'), ('A\uf0e0aAb|', 'ab'), ('ab', 'Eliminate'), ('Eliminate', 'A\uf0e0^'), ('A\uf0e0^', 'aC|a'), ('aC|a', 'C'), ('C', 'S\uf0e0AAC|AC|'), ('S\uf0e0AAC|AC|', 'A\uf0e0aAb|ab'), ('A\uf0e0aAb|ab', 'C\uf0e0aC|a'), ('C\uf0e0aC|a', 'Unit'), ('Unit', 'Production'), ('Production', 'S\uf0e0C'), ('S\uf0e0C', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Replace'), ('Replace', 'mixed'), ('mixed', 'string'), ('string', 'solid'), ('solid', 'NT'), ('NT', 'Step-4'), ('Step-4', ':'), (':', 'Shorten'), ('Shorten', 'string'), ('string', 'NT'), ('NT', 'length'), ('length', '2'), ('2', 'S\uf0e0AX1'), ('S\uf0e0AX1', 'X1\uf0e0AC'), ('X1\uf0e0AC', 'S\uf0e0AC|PC|a'), ('S\uf0e0AC|PC|a', 'A\uf0e0PY1'), ('A\uf0e0PY1', 'Y1\uf0e0AQ'), ('Y1\uf0e0AQ', 'A\uf0e0PQ'), ('A\uf0e0PQ', 'C\uf0e0PC|a'), ('C\uf0e0PC|a', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'S\uf0e0AAC|AC|'), ('S\uf0e0AAC|AC|', 'aC'), ('aC', '|a'), ('|a', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'PC'), ('PC', 'A\uf0e0'), ('A\uf0e0', 'PAQ|PQ'), ('PAQ|PQ', 'aAb|ab'), ('aAb|ab', 'C\uf0e0'), ('C\uf0e0', 'aC|a'), ('aC|a', 'PC|a'), ('PC|a', 'Chomsky'), ('Chomsky', 'Normal'), ('Normal', 'Form'), ('Form', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'CFG'), ('CFG', 'CNF'), ('CNF', 'S\uf0e0aAbB'), ('S\uf0e0aAbB', 'A\uf0e0Ab|b'), ('A\uf0e0Ab|b', 'B\uf0e0Ba|a'), ('B\uf0e0Ba|a', 'Step'), ('Step', '1'), ('1', '2'), ('2', 'required'), ('required', '^'), ('^', 'unit'), ('unit', 'productions'), ('productions', 'Step-3'), ('Step-3', ':'), (':', 'Replace'), ('Replace', 'mixed'), ('mixed', 'string'), ('string', 'solid'), ('solid', 'NT'), ('NT', 'S\uf0e0PAQB'), ('S\uf0e0PAQB', 'A\uf0e0AQ|b'), ('A\uf0e0AQ|b', 'B\uf0e0BP|a'), ('B\uf0e0BP|a', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'Step-4'), ('Step-4', ':'), (':', 'final'), ('final', 'step'), ('step', 'CNF'), ('CNF', 'S\uf0e0PT1'), ('S\uf0e0PT1', 'T1\uf0e0AT2'), ('T1\uf0e0AT2', 'T2\uf0e0QB'), ('T2\uf0e0QB', 'A\uf0e0AQ|b'), ('A\uf0e0AQ|b', 'B\uf0e0BP|a'), ('B\uf0e0BP|a', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'CFG'), ('CFG', 'CNF'), ('CNF', 'S\uf0e0AA'), ('S\uf0e0AA', 'A\uf0e0B|BB'), ('A\uf0e0B|BB', 'B\uf0e0abB|b|bb'), ('B\uf0e0abB|b|bb', 'Step'), ('Step', '1'), ('1', 'required'), ('required', '^'), ('^', 'productions'), ('productions', 'Step-2'), ('Step-2', ':'), (':', 'Eliminate'), ('Eliminate', 'Unit'), ('Unit', 'Production'), ('Production', ':'), (':', 'S\uf0e0AA'), ('S\uf0e0AA', 'A\uf0e0'), ('A\uf0e0', 'abB|b|bb|BB'), ('abB|b|bb|BB', 'B\uf0e0abB|b|bb'), ('B\uf0e0abB|b|bb', 'Step-3'), ('Step-3', ':'), (':', 'Replace'), ('Replace', 'mixed'), ('mixed', 'string'), ('string', 'solid'), ('solid', 'NT'), ('NT', ':'), (':', 'S\uf0e0AA'), ('S\uf0e0AA', 'A\uf0e0'), ('A\uf0e0', 'PQB|b|QQ|BB'), ('PQB|b|QQ|BB', 'B\uf0e0'), ('B\uf0e0', 'PQB|b|QQ'), ('PQB|b|QQ', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'Step-4'), ('Step-4', ':'), (':', 'Shorten'), ('Shorten', 'string'), ('string', 'NT'), ('NT', 'length'), ('length', '2'), ('2', 'S\uf0e0AA'), ('S\uf0e0AA', 'A\uf0e0'), ('A\uf0e0', 'PT1|b|QQ|BB'), ('PT1|b|QQ|BB', 'T1\uf0e0QB'), ('T1\uf0e0QB', 'B\uf0e0'), ('B\uf0e0', 'PV1|b|QQ'), ('PV1|b|QQ', 'V1\uf0e0QB'), ('V1\uf0e0QB', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'CFG'), ('CFG', 'CNF'), ('CNF', 'S\uf0e0ASB|^'), ('S\uf0e0ASB|^', 'A\uf0e0aAS|a'), ('A\uf0e0aAS|a', 'B\uf0e0SbS|A|bb'), ('B\uf0e0SbS|A|bb', 'Step-1'), ('Step-1', ':'), (':', 'Eliminate'), ('Eliminate', '˄-Production'), ('˄-Production', ':'), (':', 'S\uf0e0ASB|AB'), ('S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA'), ('A\uf0e0aAS|a|aA', 'B\uf0e0SbS|A|bb|bS|Sb|b'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'Step-2'), ('Step-2', ':'), (':', 'Eliminate'), ('Eliminate', 'Unit'), ('Unit', 'Production'), ('Production', ':'), (':', 'S\uf0e0ASB|AB'), ('S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA'), ('A\uf0e0aAS|a|aA', 'B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'Step-3'), ('Step-3', ':'), (':', 'Replace'), ('Replace', 'mixed'), ('mixed', 'string'), ('string', 'solid'), ('solid', 'NT'), ('NT', ':'), (':', 'S\uf0e0ASB|AB'), ('S\uf0e0ASB|AB', 'A\uf0e0PAS|a|PA'), ('A\uf0e0PAS|a|PA', 'B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'Step-4'), ('Step-4', ':'), (':', 'Shorten'), ('Shorten', 'string'), ('string', 'NT'), ('NT', 'length'), ('length', '2'), ('2', 'S\uf0e0AB|AT1'), ('S\uf0e0AB|AT1', 'T1\uf0e0SB'), ('T1\uf0e0SB', 'A\uf0e0a|PA|PU1'), ('A\uf0e0a|PA|PU1', 'U1\uf0e0AS'), ('U1\uf0e0AS', 'B\uf0e0'), ('B\uf0e0', 'SV1|PV2|a|PA|QQ|QS|SQ|b'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'V1\uf0e0QS'), ('V1\uf0e0QS', 'V2\uf0e0AS'), ('V2\uf0e0AS', 'P\uf0e0a'), ('P\uf0e0a', 'Q\uf0e0b'), ('Q\uf0e0b', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Backus-Naur'), ('Backus-Naur', 'Form'), ('Form', '('), ('(', 'BNF'), ('BNF', ')'), (')', 'BNF'), ('BNF', 'one'), ('one', 'notation'), ('notation', 'techniques'), ('techniques', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('(', 'shorten', 'string'), ('shorten', 'string', 'NT'), ('string', 'NT', 'length'), ('NT', 'length', '2'), ('length', '2', ')'), ('2', ')', 'Unit'), (')', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'CFG'), (':', 'CFG', 'CNF'), ('CFG', 'CNF', 'S\uf0e0AAC'), ('CNF', 'S\uf0e0AAC', 'A\uf0e0aAb|˄'), ('S\uf0e0AAC', 'A\uf0e0aAb|˄', 'C\uf0e0aC|a'), ('A\uf0e0aAb|˄', 'C\uf0e0aC|a', 'Step'), ('C\uf0e0aC|a', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Elimination'), (':', 'Elimination', '^'), ('Elimination', '^', 'production'), ('^', 'production', 'Step-2'), ('production', 'Step-2', ':'), ('Step-2', ':', 'Eliminate'), (':', 'Eliminate', 'Unit'), ('Eliminate', 'Unit', 'Production'), ('Unit', 'Production', 'C\uf0e0aC|a'), ('Production', 'C\uf0e0aC|a', 'AC'), ('C\uf0e0aC|a', 'AC', '|'), ('AC', '|', 'C'), ('|', 'C', 'S\uf0e0AAC|'), ('C', 'S\uf0e0AAC|', 'A\uf0e0aAb|'), ('S\uf0e0AAC|', 'A\uf0e0aAb|', 'ab'), ('A\uf0e0aAb|', 'ab', 'Eliminate'), ('ab', 'Eliminate', 'A\uf0e0^'), ('Eliminate', 'A\uf0e0^', 'aC|a'), ('A\uf0e0^', 'aC|a', 'C'), ('aC|a', 'C', 'S\uf0e0AAC|AC|'), ('C', 'S\uf0e0AAC|AC|', 'A\uf0e0aAb|ab'), ('S\uf0e0AAC|AC|', 'A\uf0e0aAb|ab', 'C\uf0e0aC|a'), ('A\uf0e0aAb|ab', 'C\uf0e0aC|a', 'Unit'), ('C\uf0e0aC|a', 'Unit', 'Production'), ('Unit', 'Production', 'S\uf0e0C'), ('Production', 'S\uf0e0C', 'Step'), ('S\uf0e0C', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Replace'), (':', 'Replace', 'mixed'), ('Replace', 'mixed', 'string'), ('mixed', 'string', 'solid'), ('string', 'solid', 'NT'), ('solid', 'NT', 'Step-4'), ('NT', 'Step-4', ':'), ('Step-4', ':', 'Shorten'), (':', 'Shorten', 'string'), ('Shorten', 'string', 'NT'), ('string', 'NT', 'length'), ('NT', 'length', '2'), ('length', '2', 'S\uf0e0AX1'), ('2', 'S\uf0e0AX1', 'X1\uf0e0AC'), ('S\uf0e0AX1', 'X1\uf0e0AC', 'S\uf0e0AC|PC|a'), ('X1\uf0e0AC', 'S\uf0e0AC|PC|a', 'A\uf0e0PY1'), ('S\uf0e0AC|PC|a', 'A\uf0e0PY1', 'Y1\uf0e0AQ'), ('A\uf0e0PY1', 'Y1\uf0e0AQ', 'A\uf0e0PQ'), ('Y1\uf0e0AQ', 'A\uf0e0PQ', 'C\uf0e0PC|a'), ('A\uf0e0PQ', 'C\uf0e0PC|a', 'P\uf0e0a'), ('C\uf0e0PC|a', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'S\uf0e0AAC|AC|'), ('Q\uf0e0b', 'S\uf0e0AAC|AC|', 'aC'), ('S\uf0e0AAC|AC|', 'aC', '|a'), ('aC', '|a', 'P\uf0e0a'), ('|a', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'PC'), ('Q\uf0e0b', 'PC', 'A\uf0e0'), ('PC', 'A\uf0e0', 'PAQ|PQ'), ('A\uf0e0', 'PAQ|PQ', 'aAb|ab'), ('PAQ|PQ', 'aAb|ab', 'C\uf0e0'), ('aAb|ab', 'C\uf0e0', 'aC|a'), ('C\uf0e0', 'aC|a', 'PC|a'), ('aC|a', 'PC|a', 'Chomsky'), ('PC|a', 'Chomsky', 'Normal'), ('Chomsky', 'Normal', 'Form'), ('Normal', 'Form', 'Unit'), ('Form', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'CFG'), (':', 'CFG', 'CNF'), ('CFG', 'CNF', 'S\uf0e0aAbB'), ('CNF', 'S\uf0e0aAbB', 'A\uf0e0Ab|b'), ('S\uf0e0aAbB', 'A\uf0e0Ab|b', 'B\uf0e0Ba|a'), ('A\uf0e0Ab|b', 'B\uf0e0Ba|a', 'Step'), ('B\uf0e0Ba|a', 'Step', '1'), ('Step', '1', '2'), ('1', '2', 'required'), ('2', 'required', '^'), ('required', '^', 'unit'), ('^', 'unit', 'productions'), ('unit', 'productions', 'Step-3'), ('productions', 'Step-3', ':'), ('Step-3', ':', 'Replace'), (':', 'Replace', 'mixed'), ('Replace', 'mixed', 'string'), ('mixed', 'string', 'solid'), ('string', 'solid', 'NT'), ('solid', 'NT', 'S\uf0e0PAQB'), ('NT', 'S\uf0e0PAQB', 'A\uf0e0AQ|b'), ('S\uf0e0PAQB', 'A\uf0e0AQ|b', 'B\uf0e0BP|a'), ('A\uf0e0AQ|b', 'B\uf0e0BP|a', 'P\uf0e0a'), ('B\uf0e0BP|a', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'Step-4'), ('Q\uf0e0b', 'Step-4', ':'), ('Step-4', ':', 'final'), (':', 'final', 'step'), ('final', 'step', 'CNF'), ('step', 'CNF', 'S\uf0e0PT1'), ('CNF', 'S\uf0e0PT1', 'T1\uf0e0AT2'), ('S\uf0e0PT1', 'T1\uf0e0AT2', 'T2\uf0e0QB'), ('T1\uf0e0AT2', 'T2\uf0e0QB', 'A\uf0e0AQ|b'), ('T2\uf0e0QB', 'A\uf0e0AQ|b', 'B\uf0e0BP|a'), ('A\uf0e0AQ|b', 'B\uf0e0BP|a', 'P\uf0e0a'), ('B\uf0e0BP|a', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'Unit'), ('Q\uf0e0b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'CFG'), (':', 'CFG', 'CNF'), ('CFG', 'CNF', 'S\uf0e0AA'), ('CNF', 'S\uf0e0AA', 'A\uf0e0B|BB'), ('S\uf0e0AA', 'A\uf0e0B|BB', 'B\uf0e0abB|b|bb'), ('A\uf0e0B|BB', 'B\uf0e0abB|b|bb', 'Step'), ('B\uf0e0abB|b|bb', 'Step', '1'), ('Step', '1', 'required'), ('1', 'required', '^'), ('required', '^', 'productions'), ('^', 'productions', 'Step-2'), ('productions', 'Step-2', ':'), ('Step-2', ':', 'Eliminate'), (':', 'Eliminate', 'Unit'), ('Eliminate', 'Unit', 'Production'), ('Unit', 'Production', ':'), ('Production', ':', 'S\uf0e0AA'), (':', 'S\uf0e0AA', 'A\uf0e0'), ('S\uf0e0AA', 'A\uf0e0', 'abB|b|bb|BB'), ('A\uf0e0', 'abB|b|bb|BB', 'B\uf0e0abB|b|bb'), ('abB|b|bb|BB', 'B\uf0e0abB|b|bb', 'Step-3'), ('B\uf0e0abB|b|bb', 'Step-3', ':'), ('Step-3', ':', 'Replace'), (':', 'Replace', 'mixed'), ('Replace', 'mixed', 'string'), ('mixed', 'string', 'solid'), ('string', 'solid', 'NT'), ('solid', 'NT', ':'), ('NT', ':', 'S\uf0e0AA'), (':', 'S\uf0e0AA', 'A\uf0e0'), ('S\uf0e0AA', 'A\uf0e0', 'PQB|b|QQ|BB'), ('A\uf0e0', 'PQB|b|QQ|BB', 'B\uf0e0'), ('PQB|b|QQ|BB', 'B\uf0e0', 'PQB|b|QQ'), ('B\uf0e0', 'PQB|b|QQ', 'P\uf0e0a'), ('PQB|b|QQ', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'Step-4'), ('Q\uf0e0b', 'Step-4', ':'), ('Step-4', ':', 'Shorten'), (':', 'Shorten', 'string'), ('Shorten', 'string', 'NT'), ('string', 'NT', 'length'), ('NT', 'length', '2'), ('length', '2', 'S\uf0e0AA'), ('2', 'S\uf0e0AA', 'A\uf0e0'), ('S\uf0e0AA', 'A\uf0e0', 'PT1|b|QQ|BB'), ('A\uf0e0', 'PT1|b|QQ|BB', 'T1\uf0e0QB'), ('PT1|b|QQ|BB', 'T1\uf0e0QB', 'B\uf0e0'), ('T1\uf0e0QB', 'B\uf0e0', 'PV1|b|QQ'), ('B\uf0e0', 'PV1|b|QQ', 'V1\uf0e0QB'), ('PV1|b|QQ', 'V1\uf0e0QB', 'P\uf0e0a'), ('V1\uf0e0QB', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'Unit'), ('Q\uf0e0b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'CFG'), (':', 'CFG', 'CNF'), ('CFG', 'CNF', 'S\uf0e0ASB|^'), ('CNF', 'S\uf0e0ASB|^', 'A\uf0e0aAS|a'), ('S\uf0e0ASB|^', 'A\uf0e0aAS|a', 'B\uf0e0SbS|A|bb'), ('A\uf0e0aAS|a', 'B\uf0e0SbS|A|bb', 'Step-1'), ('B\uf0e0SbS|A|bb', 'Step-1', ':'), ('Step-1', ':', 'Eliminate'), (':', 'Eliminate', '˄-Production'), ('Eliminate', '˄-Production', ':'), ('˄-Production', ':', 'S\uf0e0ASB|AB'), (':', 'S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA'), ('S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA', 'B\uf0e0SbS|A|bb|bS|Sb|b'), ('A\uf0e0aAS|a|aA', 'B\uf0e0SbS|A|bb|bS|Sb|b', 'Step-2'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'Step-2', ':'), ('Step-2', ':', 'Eliminate'), (':', 'Eliminate', 'Unit'), ('Eliminate', 'Unit', 'Production'), ('Unit', 'Production', ':'), ('Production', ':', 'S\uf0e0ASB|AB'), (':', 'S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA'), ('S\uf0e0ASB|AB', 'A\uf0e0aAS|a|aA', 'B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b'), ('A\uf0e0aAS|a|aA', 'B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'Step-3'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'Step-3', ':'), ('Step-3', ':', 'Replace'), (':', 'Replace', 'mixed'), ('Replace', 'mixed', 'string'), ('mixed', 'string', 'solid'), ('string', 'solid', 'NT'), ('solid', 'NT', ':'), ('NT', ':', 'S\uf0e0ASB|AB'), (':', 'S\uf0e0ASB|AB', 'A\uf0e0PAS|a|PA'), ('S\uf0e0ASB|AB', 'A\uf0e0PAS|a|PA', 'B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b'), ('A\uf0e0PAS|a|PA', 'B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'P\uf0e0a'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'Step-4'), ('Q\uf0e0b', 'Step-4', ':'), ('Step-4', ':', 'Shorten'), (':', 'Shorten', 'string'), ('Shorten', 'string', 'NT'), ('string', 'NT', 'length'), ('NT', 'length', '2'), ('length', '2', 'S\uf0e0AB|AT1'), ('2', 'S\uf0e0AB|AT1', 'T1\uf0e0SB'), ('S\uf0e0AB|AT1', 'T1\uf0e0SB', 'A\uf0e0a|PA|PU1'), ('T1\uf0e0SB', 'A\uf0e0a|PA|PU1', 'U1\uf0e0AS'), ('A\uf0e0a|PA|PU1', 'U1\uf0e0AS', 'B\uf0e0'), ('U1\uf0e0AS', 'B\uf0e0', 'SV1|PV2|a|PA|QQ|QS|SQ|b'), ('B\uf0e0', 'SV1|PV2|a|PA|QQ|QS|SQ|b', 'V1\uf0e0QS'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'V1\uf0e0QS', 'V2\uf0e0AS'), ('V1\uf0e0QS', 'V2\uf0e0AS', 'P\uf0e0a'), ('V2\uf0e0AS', 'P\uf0e0a', 'Q\uf0e0b'), ('P\uf0e0a', 'Q\uf0e0b', 'Unit'), ('Q\uf0e0b', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Backus-Naur'), ('›', 'Backus-Naur', 'Form'), ('Backus-Naur', 'Form', '('), ('Form', '(', 'BNF'), ('(', 'BNF', ')'), ('BNF', ')', 'BNF'), (')', 'BNF', 'one'), ('BNF', 'one', 'notation'), ('one', 'notation', 'techniques'), ('notation', 'techniques', 'context'), ('techniques', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '.')]

>> POS Tags are: 
 [('(', '('), ('shorten', 'VB'), ('string', 'VBG'), ('NT', 'NNP'), ('length', '$'), ('2', 'CD'), (')', ')'), ('Unit', 'NNP'), ('–', '$'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('S\uf0e0AAC', 'NNP'), ('A\uf0e0aAb|˄', 'NNP'), ('C\uf0e0aC|a', 'NNP'), ('Step', 'NNP'), ('1', 'CD'), (':', ':'), ('Elimination', 'NN'), ('^', 'IN'), ('production', 'NN'), ('Step-2', 'NN'), (':', ':'), ('Eliminate', 'NNP'), ('Unit', 'NNP'), ('Production', 'NNP'), ('C\uf0e0aC|a', 'NNP'), ('AC', 'NNP'), ('|', 'NNP'), ('C', 'NNP'), ('S\uf0e0AAC|', 'NNP'), ('A\uf0e0aAb|', 'NNP'), ('ab', 'NN'), ('Eliminate', 'NNP'), ('A\uf0e0^', 'NNP'), ('aC|a', 'VBZ'), ('C', 'NNP'), ('S\uf0e0AAC|AC|', 'NNP'), ('A\uf0e0aAb|ab', 'NNP'), ('C\uf0e0aC|a', 'NNP'), ('Unit', 'NNP'), ('Production', 'NNP'), ('S\uf0e0C', 'NNP'), ('Step', 'NNP'), ('3', 'CD'), (':', ':'), ('Replace', 'NN'), ('mixed', 'JJ'), ('string', 'NN'), ('solid', 'JJ'), ('NT', 'NNP'), ('Step-4', 'NN'), (':', ':'), ('Shorten', 'NNP'), ('string', 'VBG'), ('NT', 'NNP'), ('length', 'NN'), ('2', 'CD'), ('S\uf0e0AX1', 'NNP'), ('X1\uf0e0AC', 'NNP'), ('S\uf0e0AC|PC|a', 'NNP'), ('A\uf0e0PY1', 'NNP'), ('Y1\uf0e0AQ', 'NNP'), ('A\uf0e0PQ', 'NNP'), ('C\uf0e0PC|a', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('S\uf0e0AAC|AC|', 'NNP'), ('aC', 'VBZ'), ('|a', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('PC', 'NNP'), ('A\uf0e0', 'NNP'), ('PAQ|PQ', 'NNP'), ('aAb|ab', 'VBZ'), ('C\uf0e0', 'NNP'), ('aC|a', 'NN'), ('PC|a', 'NNP'), ('Chomsky', 'NNP'), ('Normal', 'NNP'), ('Form', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('S\uf0e0aAbB', 'NNP'), ('A\uf0e0Ab|b', 'NNP'), ('B\uf0e0Ba|a', 'NNP'), ('Step', 'NNP'), ('1', 'CD'), ('2', 'CD'), ('required', 'VBN'), ('^', 'JJ'), ('unit', 'NN'), ('productions', 'NNS'), ('Step-3', 'JJ'), (':', ':'), ('Replace', 'NN'), ('mixed', 'JJ'), ('string', 'NN'), ('solid', 'JJ'), ('NT', 'NNP'), ('S\uf0e0PAQB', 'NNP'), ('A\uf0e0AQ|b', 'NNP'), ('B\uf0e0BP|a', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('Step-4', 'NNP'), (':', ':'), ('final', 'JJ'), ('step', 'NN'), ('CNF', 'NNP'), ('S\uf0e0PT1', 'NNP'), ('T1\uf0e0AT2', 'NNP'), ('T2\uf0e0QB', 'NNP'), ('A\uf0e0AQ|b', 'NNP'), ('B\uf0e0BP|a', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('S\uf0e0AA', 'NNP'), ('A\uf0e0B|BB', 'NNP'), ('B\uf0e0abB|b|bb', 'NNP'), ('Step', 'NNP'), ('1', 'CD'), ('required', 'VBD'), ('^', 'JJ'), ('productions', 'NNS'), ('Step-2', 'JJ'), (':', ':'), ('Eliminate', 'VB'), ('Unit', 'NNP'), ('Production', 'NNP'), (':', ':'), ('S\uf0e0AA', 'NNP'), ('A\uf0e0', 'NNP'), ('abB|b|bb|BB', 'VBZ'), ('B\uf0e0abB|b|bb', 'NNP'), ('Step-3', 'NNP'), (':', ':'), ('Replace', 'NNP'), ('mixed', 'JJ'), ('string', 'NN'), ('solid', 'JJ'), ('NT', 'NNP'), (':', ':'), ('S\uf0e0AA', 'NNP'), ('A\uf0e0', 'NNP'), ('PQB|b|QQ|BB', 'NNP'), ('B\uf0e0', 'NNP'), ('PQB|b|QQ', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('Step-4', 'NNP'), (':', ':'), ('Shorten', 'NNP'), ('string', 'VBG'), ('NT', 'NNP'), ('length', 'NN'), ('2', 'CD'), ('S\uf0e0AA', 'NNP'), ('A\uf0e0', 'NNP'), ('PT1|b|QQ|BB', 'NNP'), ('T1\uf0e0QB', 'NNP'), ('B\uf0e0', 'NNP'), ('PV1|b|QQ', 'NNP'), ('V1\uf0e0QB', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('CFG', 'NNP'), ('CNF', 'NNP'), ('S\uf0e0ASB|^', 'NNP'), ('A\uf0e0aAS|a', 'NNP'), ('B\uf0e0SbS|A|bb', 'NNP'), ('Step-1', 'NNP'), (':', ':'), ('Eliminate', 'JJ'), ('˄-Production', 'NN'), (':', ':'), ('S\uf0e0ASB|AB', 'NNP'), ('A\uf0e0aAS|a|aA', 'NNP'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'NNP'), ('Step-2', 'NNP'), (':', ':'), ('Eliminate', 'NNP'), ('Unit', 'NNP'), ('Production', 'NNP'), (':', ':'), ('S\uf0e0ASB|AB', 'NNP'), ('A\uf0e0aAS|a|aA', 'NNP'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'NNP'), ('Step-3', 'NNP'), (':', ':'), ('Replace', 'NNP'), ('mixed', 'JJ'), ('string', 'NN'), ('solid', 'JJ'), ('NT', 'NNP'), (':', ':'), ('S\uf0e0ASB|AB', 'NNP'), ('A\uf0e0PAS|a|PA', 'NNP'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('Step-4', 'NNP'), (':', ':'), ('Shorten', 'NNP'), ('string', 'VBG'), ('NT', 'NNP'), ('length', 'NN'), ('2', 'CD'), ('S\uf0e0AB|AT1', 'NNP'), ('T1\uf0e0SB', 'NNP'), ('A\uf0e0a|PA|PU1', 'NNP'), ('U1\uf0e0AS', 'NNP'), ('B\uf0e0', 'NNP'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'NNP'), ('V1\uf0e0QS', 'NNP'), ('V2\uf0e0AS', 'NNP'), ('P\uf0e0a', 'NNP'), ('Q\uf0e0b', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Backus-Naur', 'JJ'), ('Form', 'NNP'), ('(', '('), ('BNF', 'NNP'), (')', ')'), ('BNF', 'NNP'), ('one', 'CD'), ('notation', 'NN'), ('techniques', 'NNS'), ('context', 'VBP'), ('free', 'JJ'), ('grammar', 'NN'), ('.', '.')]

 (S
  (/(
  shorten/VB
  string/VBG
  (NP NT/NNP)
  length/$
  2/CD
  )/)
  (NP Unit/NNP)
  –/$
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP CFG/NNP CNF/NNP SAAC/NNP AaAb|˄/NNP CaC|a/NNP Step/NNP)
  1/CD
  :/:
  (NP Elimination/NN)
  ^/IN
  (NP production/NN Step-2/NN)
  :/:
  (NP
    Eliminate/NNP
    Unit/NNP
    Production/NNP
    CaC|a/NNP
    AC/NNP
    |/NNP
    C/NNP
    SAAC|/NNP
    AaAb|/NNP
    ab/NN
    Eliminate/NNP
    A^/NNP)
  aC|a/VBZ
  (NP
    C/NNP
    SAAC|AC|/NNP
    AaAb|ab/NNP
    CaC|a/NNP
    Unit/NNP
    Production/NNP
    SC/NNP
    Step/NNP)
  3/CD
  :/:
  (NP Replace/NN)
  (NP mixed/JJ string/NN)
  (NP solid/JJ NT/NNP Step-4/NN)
  :/:
  (NP Shorten/NNP)
  string/VBG
  (NP NT/NNP length/NN)
  2/CD
  (NP
    SAX1/NNP
    X1AC/NNP
    SAC|PC|a/NNP
    APY1/NNP
    Y1AQ/NNP
    APQ/NNP
    CPC|a/NNP
    Pa/NNP
    Qb/NNP
    SAAC|AC|/NNP)
  aC/VBZ
  (NP |a/NNP Pa/NNP Qb/NNP PC/NNP A/NNP PAQ|PQ/NNP)
  aAb|ab/VBZ
  (NP
    C/NNP
    aC|a/NN
    PC|a/NNP
    Chomsky/NNP
    Normal/NNP
    Form/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP CFG/NNP CNF/NNP SaAbB/NNP AAb|b/NNP BBa|a/NNP Step/NNP)
  1/CD
  2/CD
  required/VBN
  (NP ^/JJ unit/NN productions/NNS)
  Step-3/JJ
  :/:
  (NP Replace/NN)
  (NP mixed/JJ string/NN)
  (NP
    solid/JJ
    NT/NNP
    SPAQB/NNP
    AAQ|b/NNP
    BBP|a/NNP
    Pa/NNP
    Qb/NNP
    Step-4/NNP)
  :/:
  (NP
    final/JJ
    step/NN
    CNF/NNP
    SPT1/NNP
    T1AT2/NNP
    T2QB/NNP
    AAQ|b/NNP
    BBP|a/NNP
    Pa/NNP
    Qb/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP CFG/NNP CNF/NNP SAA/NNP AB|BB/NNP BabB|b|bb/NNP Step/NNP)
  1/CD
  required/VBD
  (NP ^/JJ productions/NNS)
  Step-2/JJ
  :/:
  Eliminate/VB
  (NP Unit/NNP Production/NNP)
  :/:
  (NP SAA/NNP A/NNP)
  abB|b|bb|BB/VBZ
  (NP BabB|b|bb/NNP Step-3/NNP)
  :/:
  (NP Replace/NNP)
  (NP mixed/JJ string/NN)
  (NP solid/JJ NT/NNP)
  :/:
  (NP
    SAA/NNP
    A/NNP
    PQB|b|QQ|BB/NNP
    B/NNP
    PQB|b|QQ/NNP
    Pa/NNP
    Qb/NNP
    Step-4/NNP)
  :/:
  (NP Shorten/NNP)
  string/VBG
  (NP NT/NNP length/NN)
  2/CD
  (NP
    SAA/NNP
    A/NNP
    PT1|b|QQ|BB/NNP
    T1QB/NNP
    B/NNP
    PV1|b|QQ/NNP
    V1QB/NNP
    Pa/NNP
    Qb/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP
    CFG/NNP
    CNF/NNP
    SASB|^/NNP
    AaAS|a/NNP
    BSbS|A|bb/NNP
    Step-1/NNP)
  :/:
  (NP Eliminate/JJ ˄-Production/NN)
  :/:
  (NP SASB|AB/NNP AaAS|a|aA/NNP BSbS|A|bb|bS|Sb|b/NNP Step-2/NNP)
  :/:
  (NP Eliminate/NNP Unit/NNP Production/NNP)
  :/:
  (NP
    SASB|AB/NNP
    AaAS|a|aA/NNP
    BSbS|aAS|a|aA|bb|bS|Sb|b/NNP
    Step-3/NNP)
  :/:
  (NP Replace/NNP)
  (NP mixed/JJ string/NN)
  (NP solid/JJ NT/NNP)
  :/:
  (NP
    SASB|AB/NNP
    APAS|a|PA/NNP
    BSQS|PAS|a|PA|QQ|QS|SQ|b/NNP
    Pa/NNP
    Qb/NNP
    Step-4/NNP)
  :/:
  (NP Shorten/NNP)
  string/VBG
  (NP NT/NNP length/NN)
  2/CD
  (NP
    SAB|AT1/NNP
    T1SB/NNP
    Aa|PA|PU1/NNP
    U1AS/NNP
    B/NNP
    SV1|PV2|a|PA|QQ|QS|SQ|b/NNP
    V1QS/NNP
    V2AS/NNP
    Pa/NNP
    Qb/NNP
    Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Backus-Naur/JJ Form/NNP)
  (/(
  (NP BNF/NNP)
  )/)
  (NP BNF/NNP)
  one/CD
  (NP notation/NN techniques/NNS)
  context/VBP
  (NP free/JJ grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['NT', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Example', 'CFG CNF S\uf0e0AAC A\uf0e0aAb|˄ C\uf0e0aC|a Step', 'Elimination', 'production Step-2', 'Eliminate Unit Production C\uf0e0aC|a AC | C S\uf0e0AAC| A\uf0e0aAb| ab Eliminate A\uf0e0^', 'C S\uf0e0AAC|AC| A\uf0e0aAb|ab C\uf0e0aC|a Unit Production S\uf0e0C Step', 'Replace', 'mixed string', 'solid NT Step-4', 'Shorten', 'NT length', 'S\uf0e0AX1 X1\uf0e0AC S\uf0e0AC|PC|a A\uf0e0PY1 Y1\uf0e0AQ A\uf0e0PQ C\uf0e0PC|a P\uf0e0a Q\uf0e0b S\uf0e0AAC|AC|', '|a P\uf0e0a Q\uf0e0b PC A\uf0e0 PAQ|PQ', 'C\uf0e0 aC|a PC|a Chomsky Normal Form Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Example', 'CFG CNF S\uf0e0aAbB A\uf0e0Ab|b B\uf0e0Ba|a Step', '^ unit productions', 'Replace', 'mixed string', 'solid NT S\uf0e0PAQB A\uf0e0AQ|b B\uf0e0BP|a P\uf0e0a Q\uf0e0b Step-4', 'final step CNF S\uf0e0PT1 T1\uf0e0AT2 T2\uf0e0QB A\uf0e0AQ|b B\uf0e0BP|a P\uf0e0a Q\uf0e0b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Example', 'CFG CNF S\uf0e0AA A\uf0e0B|BB B\uf0e0abB|b|bb Step', '^ productions', 'Unit Production', 'S\uf0e0AA A\uf0e0', 'B\uf0e0abB|b|bb Step-3', 'Replace', 'mixed string', 'solid NT', 'S\uf0e0AA A\uf0e0 PQB|b|QQ|BB B\uf0e0 PQB|b|QQ P\uf0e0a Q\uf0e0b Step-4', 'Shorten', 'NT length', 'S\uf0e0AA A\uf0e0 PT1|b|QQ|BB T1\uf0e0QB B\uf0e0 PV1|b|QQ V1\uf0e0QB P\uf0e0a Q\uf0e0b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Example', 'CFG CNF S\uf0e0ASB|^ A\uf0e0aAS|a B\uf0e0SbS|A|bb Step-1', 'Eliminate ˄-Production', 'S\uf0e0ASB|AB A\uf0e0aAS|a|aA B\uf0e0SbS|A|bb|bS|Sb|b Step-2', 'Eliminate Unit Production', 'S\uf0e0ASB|AB A\uf0e0aAS|a|aA B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b Step-3', 'Replace', 'mixed string', 'solid NT', 'S\uf0e0ASB|AB A\uf0e0PAS|a|PA B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b P\uf0e0a Q\uf0e0b Step-4', 'Shorten', 'NT length', 'S\uf0e0AB|AT1 T1\uf0e0SB A\uf0e0a|PA|PU1 U1\uf0e0AS B\uf0e0 SV1|PV2|a|PA|QQ|QS|SQ|b V1\uf0e0QS V2\uf0e0AS P\uf0e0a Q\uf0e0b Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Backus-Naur Form', 'BNF', 'BNF', 'notation techniques', 'free grammar']

>> Named Entities are: 
 [('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'CFG'), ('ORGANIZATION', 'Eliminate Unit Production'), ('ORGANIZATION', 'Eliminate'), ('PERSON', 'Unit Production'), ('PERSON', 'Chomsky Normal Form Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'CFG'), ('ORGANIZATION', 'CNF'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'CFG'), ('PERSON', 'Unit'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'CFG'), ('ORGANIZATION', 'Eliminate Unit'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'BNF')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), (')', ')'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0AAC', 's\uf0e0aac'), ('A\uf0e0aAb|˄', 'a\uf0e0aab|˄'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Elimination', 'elimin'), ('^', '^'), ('production', 'product'), ('Step-2', 'step-2'), (':', ':'), ('Eliminate', 'elimin'), ('Unit', 'unit'), ('Production', 'product'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('AC', 'ac'), ('|', '|'), ('C', 'c'), ('S\uf0e0AAC|', 's\uf0e0aac|'), ('A\uf0e0aAb|', 'a\uf0e0aab|'), ('ab', 'ab'), ('Eliminate', 'elimin'), ('A\uf0e0^', 'a\uf0e0^'), ('aC|a', 'ac|a'), ('C', 'c'), ('S\uf0e0AAC|AC|', 's\uf0e0aac|ac|'), ('A\uf0e0aAb|ab', 'a\uf0e0aab|ab'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('Unit', 'unit'), ('Production', 'product'), ('S\uf0e0C', 's\uf0e0c'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), ('Step-4', 'step-4'), (':', ':'), ('Shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), ('S\uf0e0AX1', 's\uf0e0ax1'), ('X1\uf0e0AC', 'x1\uf0e0ac'), ('S\uf0e0AC|PC|a', 's\uf0e0ac|pc|a'), ('A\uf0e0PY1', 'a\uf0e0py1'), ('Y1\uf0e0AQ', 'y1\uf0e0aq'), ('A\uf0e0PQ', 'a\uf0e0pq'), ('C\uf0e0PC|a', 'c\uf0e0pc|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('S\uf0e0AAC|AC|', 's\uf0e0aac|ac|'), ('aC', 'ac'), ('|a', '|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('PC', 'pc'), ('A\uf0e0', 'a\uf0e0'), ('PAQ|PQ', 'paq|pq'), ('aAb|ab', 'aab|ab'), ('C\uf0e0', 'c\uf0e0'), ('aC|a', 'ac|a'), ('PC|a', 'pc|a'), ('Chomsky', 'chomski'), ('Normal', 'normal'), ('Form', 'form'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0aAbB', 's\uf0e0aabb'), ('A\uf0e0Ab|b', 'a\uf0e0ab|b'), ('B\uf0e0Ba|a', 'b\uf0e0ba|a'), ('Step', 'step'), ('1', '1'), ('2', '2'), ('required', 'requir'), ('^', '^'), ('unit', 'unit'), ('productions', 'product'), ('Step-3', 'step-3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), ('S\uf0e0PAQB', 's\uf0e0paqb'), ('A\uf0e0AQ|b', 'a\uf0e0aq|b'), ('B\uf0e0BP|a', 'b\uf0e0bp|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Step-4', 'step-4'), (':', ':'), ('final', 'final'), ('step', 'step'), ('CNF', 'cnf'), ('S\uf0e0PT1', 's\uf0e0pt1'), ('T1\uf0e0AT2', 't1\uf0e0at2'), ('T2\uf0e0QB', 't2\uf0e0qb'), ('A\uf0e0AQ|b', 'a\uf0e0aq|b'), ('B\uf0e0BP|a', 'b\uf0e0bp|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0B|BB', 'a\uf0e0b|bb'), ('B\uf0e0abB|b|bb', 'b\uf0e0abb|b|bb'), ('Step', 'step'), ('1', '1'), ('required', 'requir'), ('^', '^'), ('productions', 'product'), ('Step-2', 'step-2'), (':', ':'), ('Eliminate', 'elimin'), ('Unit', 'unit'), ('Production', 'product'), (':', ':'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0', 'a\uf0e0'), ('abB|b|bb|BB', 'abb|b|bb|bb'), ('B\uf0e0abB|b|bb', 'b\uf0e0abb|b|bb'), ('Step-3', 'step-3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), (':', ':'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0', 'a\uf0e0'), ('PQB|b|QQ|BB', 'pqb|b|qq|bb'), ('B\uf0e0', 'b\uf0e0'), ('PQB|b|QQ', 'pqb|b|qq'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Step-4', 'step-4'), (':', ':'), ('Shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0', 'a\uf0e0'), ('PT1|b|QQ|BB', 'pt1|b|qq|bb'), ('T1\uf0e0QB', 't1\uf0e0qb'), ('B\uf0e0', 'b\uf0e0'), ('PV1|b|QQ', 'pv1|b|qq'), ('V1\uf0e0QB', 'v1\uf0e0qb'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0ASB|^', 's\uf0e0asb|^'), ('A\uf0e0aAS|a', 'a\uf0e0aas|a'), ('B\uf0e0SbS|A|bb', 'b\uf0e0sbs|a|bb'), ('Step-1', 'step-1'), (':', ':'), ('Eliminate', 'elimin'), ('˄-Production', '˄-product'), (':', ':'), ('S\uf0e0ASB|AB', 's\uf0e0asb|ab'), ('A\uf0e0aAS|a|aA', 'a\uf0e0aas|a|aa'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'b\uf0e0sbs|a|bb|bs|sb|b'), ('Step-2', 'step-2'), (':', ':'), ('Eliminate', 'elimin'), ('Unit', 'unit'), ('Production', 'product'), (':', ':'), ('S\uf0e0ASB|AB', 's\uf0e0asb|ab'), ('A\uf0e0aAS|a|aA', 'a\uf0e0aas|a|aa'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'b\uf0e0sbs|aas|a|aa|bb|bs|sb|b'), ('Step-3', 'step-3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), (':', ':'), ('S\uf0e0ASB|AB', 's\uf0e0asb|ab'), ('A\uf0e0PAS|a|PA', 'a\uf0e0pas|a|pa'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'b\uf0e0sqs|pas|a|pa|qq|qs|sq|b'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Step-4', 'step-4'), (':', ':'), ('Shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), ('S\uf0e0AB|AT1', 's\uf0e0ab|at1'), ('T1\uf0e0SB', 't1\uf0e0sb'), ('A\uf0e0a|PA|PU1', 'a\uf0e0a|pa|pu1'), ('U1\uf0e0AS', 'u1\uf0e0a'), ('B\uf0e0', 'b\uf0e0'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'sv1|pv2|a|pa|qq|qs|sq|b'), ('V1\uf0e0QS', 'v1\uf0e0q'), ('V2\uf0e0AS', 'v2\uf0e0a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Backus-Naur', 'backus-naur'), ('Form', 'form'), ('(', '('), ('BNF', 'bnf'), (')', ')'), ('BNF', 'bnf'), ('one', 'one'), ('notation', 'notat'), ('techniques', 'techniqu'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), (')', ')'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0AAC', 's\uf0e0aac'), ('A\uf0e0aAb|˄', 'a\uf0e0aab|˄'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Elimination', 'elimin'), ('^', '^'), ('production', 'product'), ('Step-2', 'step-2'), (':', ':'), ('Eliminate', 'elimin'), ('Unit', 'unit'), ('Production', 'product'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('AC', 'ac'), ('|', '|'), ('C', 'c'), ('S\uf0e0AAC|', 's\uf0e0aac|'), ('A\uf0e0aAb|', 'a\uf0e0aab|'), ('ab', 'ab'), ('Eliminate', 'elimin'), ('A\uf0e0^', 'a\uf0e0^'), ('aC|a', 'ac|a'), ('C', 'c'), ('S\uf0e0AAC|AC|', 's\uf0e0aac|ac|'), ('A\uf0e0aAb|ab', 'a\uf0e0aab|ab'), ('C\uf0e0aC|a', 'c\uf0e0ac|a'), ('Unit', 'unit'), ('Production', 'product'), ('S\uf0e0C', 's\uf0e0c'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), ('Step-4', 'step-4'), (':', ':'), ('Shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), ('S\uf0e0AX1', 's\uf0e0ax1'), ('X1\uf0e0AC', 'x1\uf0e0ac'), ('S\uf0e0AC|PC|a', 's\uf0e0ac|pc|a'), ('A\uf0e0PY1', 'a\uf0e0py1'), ('Y1\uf0e0AQ', 'y1\uf0e0aq'), ('A\uf0e0PQ', 'a\uf0e0pq'), ('C\uf0e0PC|a', 'c\uf0e0pc|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('S\uf0e0AAC|AC|', 's\uf0e0aac|ac|'), ('aC', 'ac'), ('|a', '|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('PC', 'pc'), ('A\uf0e0', 'a\uf0e0'), ('PAQ|PQ', 'paq|pq'), ('aAb|ab', 'aab|ab'), ('C\uf0e0', 'c\uf0e0'), ('aC|a', 'ac|a'), ('PC|a', 'pc|a'), ('Chomsky', 'chomski'), ('Normal', 'normal'), ('Form', 'form'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0aAbB', 's\uf0e0aabb'), ('A\uf0e0Ab|b', 'a\uf0e0ab|b'), ('B\uf0e0Ba|a', 'b\uf0e0ba|a'), ('Step', 'step'), ('1', '1'), ('2', '2'), ('required', 'requir'), ('^', '^'), ('unit', 'unit'), ('productions', 'product'), ('Step-3', 'step-3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), ('S\uf0e0PAQB', 's\uf0e0paqb'), ('A\uf0e0AQ|b', 'a\uf0e0aq|b'), ('B\uf0e0BP|a', 'b\uf0e0bp|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Step-4', 'step-4'), (':', ':'), ('final', 'final'), ('step', 'step'), ('CNF', 'cnf'), ('S\uf0e0PT1', 's\uf0e0pt1'), ('T1\uf0e0AT2', 't1\uf0e0at2'), ('T2\uf0e0QB', 't2\uf0e0qb'), ('A\uf0e0AQ|b', 'a\uf0e0aq|b'), ('B\uf0e0BP|a', 'b\uf0e0bp|a'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0B|BB', 'a\uf0e0b|bb'), ('B\uf0e0abB|b|bb', 'b\uf0e0abb|b|bb'), ('Step', 'step'), ('1', '1'), ('required', 'requir'), ('^', '^'), ('productions', 'product'), ('Step-2', 'step-2'), (':', ':'), ('Eliminate', 'elimin'), ('Unit', 'unit'), ('Production', 'product'), (':', ':'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0', 'a\uf0e0'), ('abB|b|bb|BB', 'abb|b|bb|bb'), ('B\uf0e0abB|b|bb', 'b\uf0e0abb|b|bb'), ('Step-3', 'step-3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), (':', ':'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0', 'a\uf0e0'), ('PQB|b|QQ|BB', 'pqb|b|qq|bb'), ('B\uf0e0', 'b\uf0e0'), ('PQB|b|QQ', 'pqb|b|qq'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Step-4', 'step-4'), (':', ':'), ('Shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), ('S\uf0e0AA', 's\uf0e0aa'), ('A\uf0e0', 'a\uf0e0'), ('PT1|b|QQ|BB', 'pt1|b|qq|bb'), ('T1\uf0e0QB', 't1\uf0e0qb'), ('B\uf0e0', 'b\uf0e0'), ('PV1|b|QQ', 'pv1|b|qq'), ('V1\uf0e0QB', 'v1\uf0e0qb'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CFG', 'cfg'), ('CNF', 'cnf'), ('S\uf0e0ASB|^', 's\uf0e0asb|^'), ('A\uf0e0aAS|a', 'a\uf0e0aas|a'), ('B\uf0e0SbS|A|bb', 'b\uf0e0sbs|a|bb'), ('Step-1', 'step-1'), (':', ':'), ('Eliminate', 'elimin'), ('˄-Production', '˄-product'), (':', ':'), ('S\uf0e0ASB|AB', 's\uf0e0asb|ab'), ('A\uf0e0aAS|a|aA', 'a\uf0e0aas|a|aa'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'b\uf0e0sbs|a|bb|bs|sb|b'), ('Step-2', 'step-2'), (':', ':'), ('Eliminate', 'elimin'), ('Unit', 'unit'), ('Production', 'product'), (':', ':'), ('S\uf0e0ASB|AB', 's\uf0e0asb|ab'), ('A\uf0e0aAS|a|aA', 'a\uf0e0aas|a|aa'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'b\uf0e0sbs|aas|a|aa|bb|bs|sb|b'), ('Step-3', 'step-3'), (':', ':'), ('Replace', 'replac'), ('mixed', 'mix'), ('string', 'string'), ('solid', 'solid'), ('NT', 'nt'), (':', ':'), ('S\uf0e0ASB|AB', 's\uf0e0asb|ab'), ('A\uf0e0PAS|a|PA', 'a\uf0e0pas|a|pa'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'b\uf0e0sqs|pas|a|pa|qq|qs|sq|b'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Step-4', 'step-4'), (':', ':'), ('Shorten', 'shorten'), ('string', 'string'), ('NT', 'nt'), ('length', 'length'), ('2', '2'), ('S\uf0e0AB|AT1', 's\uf0e0ab|at1'), ('T1\uf0e0SB', 't1\uf0e0sb'), ('A\uf0e0a|PA|PU1', 'a\uf0e0a|pa|pu1'), ('U1\uf0e0AS', 'u1\uf0e0a'), ('B\uf0e0', 'b\uf0e0'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'sv1|pv2|a|pa|qq|qs|sq|b'), ('V1\uf0e0QS', 'v1\uf0e0qs'), ('V2\uf0e0AS', 'v2\uf0e0as'), ('P\uf0e0a', 'p\uf0e0a'), ('Q\uf0e0b', 'q\uf0e0b'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Backus-Naur', 'backus-naur'), ('Form', 'form'), ('(', '('), ('BNF', 'bnf'), (')', ')'), ('BNF', 'bnf'), ('one', 'one'), ('notation', 'notat'), ('techniques', 'techniqu'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('shorten', 'shorten'), ('string', 'string'), ('NT', 'NT'), ('length', 'length'), ('2', '2'), (')', ')'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('S\uf0e0AAC', 'S\uf0e0AAC'), ('A\uf0e0aAb|˄', 'A\uf0e0aAb|˄'), ('C\uf0e0aC|a', 'C\uf0e0aC|a'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Elimination', 'Elimination'), ('^', '^'), ('production', 'production'), ('Step-2', 'Step-2'), (':', ':'), ('Eliminate', 'Eliminate'), ('Unit', 'Unit'), ('Production', 'Production'), ('C\uf0e0aC|a', 'C\uf0e0aC|a'), ('AC', 'AC'), ('|', '|'), ('C', 'C'), ('S\uf0e0AAC|', 'S\uf0e0AAC|'), ('A\uf0e0aAb|', 'A\uf0e0aAb|'), ('ab', 'ab'), ('Eliminate', 'Eliminate'), ('A\uf0e0^', 'A\uf0e0^'), ('aC|a', 'aC|a'), ('C', 'C'), ('S\uf0e0AAC|AC|', 'S\uf0e0AAC|AC|'), ('A\uf0e0aAb|ab', 'A\uf0e0aAb|ab'), ('C\uf0e0aC|a', 'C\uf0e0aC|a'), ('Unit', 'Unit'), ('Production', 'Production'), ('S\uf0e0C', 'S\uf0e0C'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Replace', 'Replace'), ('mixed', 'mixed'), ('string', 'string'), ('solid', 'solid'), ('NT', 'NT'), ('Step-4', 'Step-4'), (':', ':'), ('Shorten', 'Shorten'), ('string', 'string'), ('NT', 'NT'), ('length', 'length'), ('2', '2'), ('S\uf0e0AX1', 'S\uf0e0AX1'), ('X1\uf0e0AC', 'X1\uf0e0AC'), ('S\uf0e0AC|PC|a', 'S\uf0e0AC|PC|a'), ('A\uf0e0PY1', 'A\uf0e0PY1'), ('Y1\uf0e0AQ', 'Y1\uf0e0AQ'), ('A\uf0e0PQ', 'A\uf0e0PQ'), ('C\uf0e0PC|a', 'C\uf0e0PC|a'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('S\uf0e0AAC|AC|', 'S\uf0e0AAC|AC|'), ('aC', 'aC'), ('|a', '|a'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('PC', 'PC'), ('A\uf0e0', 'A\uf0e0'), ('PAQ|PQ', 'PAQ|PQ'), ('aAb|ab', 'aAb|ab'), ('C\uf0e0', 'C\uf0e0'), ('aC|a', 'aC|a'), ('PC|a', 'PC|a'), ('Chomsky', 'Chomsky'), ('Normal', 'Normal'), ('Form', 'Form'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('S\uf0e0aAbB', 'S\uf0e0aAbB'), ('A\uf0e0Ab|b', 'A\uf0e0Ab|b'), ('B\uf0e0Ba|a', 'B\uf0e0Ba|a'), ('Step', 'Step'), ('1', '1'), ('2', '2'), ('required', 'required'), ('^', '^'), ('unit', 'unit'), ('productions', 'production'), ('Step-3', 'Step-3'), (':', ':'), ('Replace', 'Replace'), ('mixed', 'mixed'), ('string', 'string'), ('solid', 'solid'), ('NT', 'NT'), ('S\uf0e0PAQB', 'S\uf0e0PAQB'), ('A\uf0e0AQ|b', 'A\uf0e0AQ|b'), ('B\uf0e0BP|a', 'B\uf0e0BP|a'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('Step-4', 'Step-4'), (':', ':'), ('final', 'final'), ('step', 'step'), ('CNF', 'CNF'), ('S\uf0e0PT1', 'S\uf0e0PT1'), ('T1\uf0e0AT2', 'T1\uf0e0AT2'), ('T2\uf0e0QB', 'T2\uf0e0QB'), ('A\uf0e0AQ|b', 'A\uf0e0AQ|b'), ('B\uf0e0BP|a', 'B\uf0e0BP|a'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('S\uf0e0AA', 'S\uf0e0AA'), ('A\uf0e0B|BB', 'A\uf0e0B|BB'), ('B\uf0e0abB|b|bb', 'B\uf0e0abB|b|bb'), ('Step', 'Step'), ('1', '1'), ('required', 'required'), ('^', '^'), ('productions', 'production'), ('Step-2', 'Step-2'), (':', ':'), ('Eliminate', 'Eliminate'), ('Unit', 'Unit'), ('Production', 'Production'), (':', ':'), ('S\uf0e0AA', 'S\uf0e0AA'), ('A\uf0e0', 'A\uf0e0'), ('abB|b|bb|BB', 'abB|b|bb|BB'), ('B\uf0e0abB|b|bb', 'B\uf0e0abB|b|bb'), ('Step-3', 'Step-3'), (':', ':'), ('Replace', 'Replace'), ('mixed', 'mixed'), ('string', 'string'), ('solid', 'solid'), ('NT', 'NT'), (':', ':'), ('S\uf0e0AA', 'S\uf0e0AA'), ('A\uf0e0', 'A\uf0e0'), ('PQB|b|QQ|BB', 'PQB|b|QQ|BB'), ('B\uf0e0', 'B\uf0e0'), ('PQB|b|QQ', 'PQB|b|QQ'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('Step-4', 'Step-4'), (':', ':'), ('Shorten', 'Shorten'), ('string', 'string'), ('NT', 'NT'), ('length', 'length'), ('2', '2'), ('S\uf0e0AA', 'S\uf0e0AA'), ('A\uf0e0', 'A\uf0e0'), ('PT1|b|QQ|BB', 'PT1|b|QQ|BB'), ('T1\uf0e0QB', 'T1\uf0e0QB'), ('B\uf0e0', 'B\uf0e0'), ('PV1|b|QQ', 'PV1|b|QQ'), ('V1\uf0e0QB', 'V1\uf0e0QB'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('CFG', 'CFG'), ('CNF', 'CNF'), ('S\uf0e0ASB|^', 'S\uf0e0ASB|^'), ('A\uf0e0aAS|a', 'A\uf0e0aAS|a'), ('B\uf0e0SbS|A|bb', 'B\uf0e0SbS|A|bb'), ('Step-1', 'Step-1'), (':', ':'), ('Eliminate', 'Eliminate'), ('˄-Production', '˄-Production'), (':', ':'), ('S\uf0e0ASB|AB', 'S\uf0e0ASB|AB'), ('A\uf0e0aAS|a|aA', 'A\uf0e0aAS|a|aA'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'B\uf0e0SbS|A|bb|bS|Sb|b'), ('Step-2', 'Step-2'), (':', ':'), ('Eliminate', 'Eliminate'), ('Unit', 'Unit'), ('Production', 'Production'), (':', ':'), ('S\uf0e0ASB|AB', 'S\uf0e0ASB|AB'), ('A\uf0e0aAS|a|aA', 'A\uf0e0aAS|a|aA'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b'), ('Step-3', 'Step-3'), (':', ':'), ('Replace', 'Replace'), ('mixed', 'mixed'), ('string', 'string'), ('solid', 'solid'), ('NT', 'NT'), (':', ':'), ('S\uf0e0ASB|AB', 'S\uf0e0ASB|AB'), ('A\uf0e0PAS|a|PA', 'A\uf0e0PAS|a|PA'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('Step-4', 'Step-4'), (':', ':'), ('Shorten', 'Shorten'), ('string', 'string'), ('NT', 'NT'), ('length', 'length'), ('2', '2'), ('S\uf0e0AB|AT1', 'S\uf0e0AB|AT1'), ('T1\uf0e0SB', 'T1\uf0e0SB'), ('A\uf0e0a|PA|PU1', 'A\uf0e0a|PA|PU1'), ('U1\uf0e0AS', 'U1\uf0e0AS'), ('B\uf0e0', 'B\uf0e0'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'SV1|PV2|a|PA|QQ|QS|SQ|b'), ('V1\uf0e0QS', 'V1\uf0e0QS'), ('V2\uf0e0AS', 'V2\uf0e0AS'), ('P\uf0e0a', 'P\uf0e0a'), ('Q\uf0e0b', 'Q\uf0e0b'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Backus-Naur', 'Backus-Naur'), ('Form', 'Form'), ('(', '('), ('BNF', 'BNF'), (')', ')'), ('BNF', 'BNF'), ('one', 'one'), ('notation', 'notation'), ('techniques', 'technique'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 50 =============================

It is often used to describe syntax of the language used in computing. 


>> Tokens are: 
 ['It', 'often', 'used', 'describe', 'syntax', 'language', 'used', 'computing', '.']

>> Bigrams are: 
 [('It', 'often'), ('often', 'used'), ('used', 'describe'), ('describe', 'syntax'), ('syntax', 'language'), ('language', 'used'), ('used', 'computing'), ('computing', '.')]

>> Trigrams are: 
 [('It', 'often', 'used'), ('often', 'used', 'describe'), ('used', 'describe', 'syntax'), ('describe', 'syntax', 'language'), ('syntax', 'language', 'used'), ('language', 'used', 'computing'), ('used', 'computing', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('often', 'RB'), ('used', 'VBD'), ('describe', 'JJ'), ('syntax', 'JJ'), ('language', 'NN'), ('used', 'VBN'), ('computing', 'NN'), ('.', '.')]

 (S
  It/PRP
  often/RB
  used/VBD
  (NP describe/JJ syntax/JJ language/NN)
  used/VBN
  (NP computing/NN)
  ./.) 


>> Noun Phrases are: 
 ['describe syntax language', 'computing']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('often', 'often'), ('used', 'use'), ('describe', 'describ'), ('syntax', 'syntax'), ('language', 'languag'), ('used', 'use'), ('computing', 'comput'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('often', 'often'), ('used', 'use'), ('describe', 'describ'), ('syntax', 'syntax'), ('language', 'languag'), ('used', 'use'), ('computing', 'comput'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('often', 'often'), ('used', 'used'), ('describe', 'describe'), ('syntax', 'syntax'), ('language', 'language'), ('used', 'used'), ('computing', 'computing'), ('.', '.')]



============================ Sentence 51 =============================

Variables written between <..> are non terminals. 


>> Tokens are: 
 ['Variables', 'written', '<', '..', '>', 'non', 'terminals', '.']

>> Bigrams are: 
 [('Variables', 'written'), ('written', '<'), ('<', '..'), ('..', '>'), ('>', 'non'), ('non', 'terminals'), ('terminals', '.')]

>> Trigrams are: 
 [('Variables', 'written', '<'), ('written', '<', '..'), ('<', '..', '>'), ('..', '>', 'non'), ('>', 'non', 'terminals'), ('non', 'terminals', '.')]

>> POS Tags are: 
 [('Variables', 'NNS'), ('written', 'VBN'), ('<', 'NNP'), ('..', 'NNP'), ('>', 'NNP'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')]

 (S
  (NP Variables/NNS)
  written/VBN
  (NP </NNP ../NNP >/NNP non/NN terminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Variables', '< .. > non terminals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Variables', 'variabl'), ('written', 'written'), ('<', '<'), ('..', '..'), ('>', '>'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Variables', 'variabl'), ('written', 'written'), ('<', '<'), ('..', '..'), ('>', '>'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Variables', 'Variables'), ('written', 'written'), ('<', '<'), ('..', '..'), ('>', '>'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')]



============================ Sentence 52 =============================

Vertical bar ‘|’ indicating a alternate choice. 


>> Tokens are: 
 ['Vertical', 'bar', '‘', '|', '’', 'indicating', 'alternate', 'choice', '.']

>> Bigrams are: 
 [('Vertical', 'bar'), ('bar', '‘'), ('‘', '|'), ('|', '’'), ('’', 'indicating'), ('indicating', 'alternate'), ('alternate', 'choice'), ('choice', '.')]

>> Trigrams are: 
 [('Vertical', 'bar', '‘'), ('bar', '‘', '|'), ('‘', '|', '’'), ('|', '’', 'indicating'), ('’', 'indicating', 'alternate'), ('indicating', 'alternate', 'choice'), ('alternate', 'choice', '.')]

>> POS Tags are: 
 [('Vertical', 'JJ'), ('bar', 'NN'), ('‘', 'NNP'), ('|', 'NNP'), ('’', 'NNP'), ('indicating', 'VBG'), ('alternate', 'JJ'), ('choice', 'NN'), ('.', '.')]

 (S
  (NP Vertical/JJ bar/NN ‘/NNP |/NNP ’/NNP)
  indicating/VBG
  (NP alternate/JJ choice/NN)
  ./.) 


>> Noun Phrases are: 
 ['Vertical bar ‘ | ’', 'alternate choice']

>> Named Entities are: 
 [('GPE', 'Vertical')] 

>> Stemming using Porter Stemmer: 
 [('Vertical', 'vertic'), ('bar', 'bar'), ('‘', '‘'), ('|', '|'), ('’', '’'), ('indicating', 'indic'), ('alternate', 'altern'), ('choice', 'choic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Vertical', 'vertic'), ('bar', 'bar'), ('‘', '‘'), ('|', '|'), ('’', '’'), ('indicating', 'indic'), ('alternate', 'altern'), ('choice', 'choic'), ('.', '.')]

>> Lemmatization: 
 [('Vertical', 'Vertical'), ('bar', 'bar'), ('‘', '‘'), ('|', '|'), ('’', '’'), ('indicating', 'indicating'), ('alternate', 'alternate'), ('choice', 'choice'), ('.', '.')]



============================ Sentence 53 =============================

[…], which is used to enclosed an optional specification. 


>> Tokens are: 
 ['[', '…', ']', ',', 'used', 'enclosed', 'optional', 'specification', '.']

>> Bigrams are: 
 [('[', '…'), ('…', ']'), (']', ','), (',', 'used'), ('used', 'enclosed'), ('enclosed', 'optional'), ('optional', 'specification'), ('specification', '.')]

>> Trigrams are: 
 [('[', '…', ']'), ('…', ']', ','), (']', ',', 'used'), (',', 'used', 'enclosed'), ('used', 'enclosed', 'optional'), ('enclosed', 'optional', 'specification'), ('optional', 'specification', '.')]

>> POS Tags are: 
 [('[', 'JJ'), ('…', 'NNP'), (']', 'NNP'), (',', ','), ('used', 'VBD'), ('enclosed', 'VBN'), ('optional', 'JJ'), ('specification', 'NN'), ('.', '.')]

 (S
  (NP [/JJ …/NNP ]/NNP)
  ,/,
  used/VBD
  enclosed/VBN
  (NP optional/JJ specification/NN)
  ./.) 


>> Noun Phrases are: 
 ['[ … ]', 'optional specification']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('[', '['), ('…', '…'), (']', ']'), (',', ','), ('used', 'use'), ('enclosed', 'enclos'), ('optional', 'option'), ('specification', 'specif'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('[', '['), ('…', '…'), (']', ']'), (',', ','), ('used', 'use'), ('enclosed', 'enclos'), ('optional', 'option'), ('specification', 'specif'), ('.', '.')]

>> Lemmatization: 
 [('[', '['), ('…', '…'), (']', ']'), (',', ','), ('used', 'used'), ('enclosed', 'enclosed'), ('optional', 'optional'), ('specification', 'specification'), ('.', '.')]



============================ Sentence 54 =============================

Example: <exp>=<exp> + <term> | <term> <term>=<term> * <factor> | <factor> <factor>=<factor> ^ <primary> | <primary> <primary>=<id> | <const>  <id>=<letter> <const>=[+/-]<digit> <letter>=a | b | c |……| z <digit>=0 | 1 |………….| 9   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Union, Concatenation & Kleene’s of CFG   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Union, Concatenation & Kleene’s of CFG Theorem:- If L1 and L2 are context - free languages, then the languages L1 U L2, L1L2 , and L1* are also CFLs. 


>> Tokens are: 
 ['Example', ':', '<', 'exp', '>', '=', '<', 'exp', '>', '+', '<', 'term', '>', '|', '<', 'term', '>', '<', 'term', '>', '=', '<', 'term', '>', '*', '<', 'factor', '>', '|', '<', 'factor', '>', '<', 'factor', '>', '=', '<', 'factor', '>', '^', '<', 'primary', '>', '|', '<', 'primary', '>', '<', 'primary', '>', '=', '<', 'id', '>', '|', '<', 'const', '>', '<', 'id', '>', '=', '<', 'letter', '>', '<', 'const', '>', '=', '[', '+/-', ']', '<', 'digit', '>', '<', 'letter', '>', '=a', '|', 'b', '|', 'c', '|……|', 'z', '<', 'digit', '>', '=0', '|', '1', '|………….|', '9', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Union', ',', 'Concatenation', '&', 'Kleene', '’', 'CFG', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Union', ',', 'Concatenation', '&', 'Kleene', '’', 'CFG', 'Theorem', ':', '-', 'If', 'L1', 'L2', 'context', '-', 'free', 'languages', ',', 'languages', 'L1', 'U', 'L2', ',', 'L1L2', ',', 'L1', '*', 'also', 'CFLs', '.']

>> Bigrams are: 
 [('Example', ':'), (':', '<'), ('<', 'exp'), ('exp', '>'), ('>', '='), ('=', '<'), ('<', 'exp'), ('exp', '>'), ('>', '+'), ('+', '<'), ('<', 'term'), ('term', '>'), ('>', '|'), ('|', '<'), ('<', 'term'), ('term', '>'), ('>', '<'), ('<', 'term'), ('term', '>'), ('>', '='), ('=', '<'), ('<', 'term'), ('term', '>'), ('>', '*'), ('*', '<'), ('<', 'factor'), ('factor', '>'), ('>', '|'), ('|', '<'), ('<', 'factor'), ('factor', '>'), ('>', '<'), ('<', 'factor'), ('factor', '>'), ('>', '='), ('=', '<'), ('<', 'factor'), ('factor', '>'), ('>', '^'), ('^', '<'), ('<', 'primary'), ('primary', '>'), ('>', '|'), ('|', '<'), ('<', 'primary'), ('primary', '>'), ('>', '<'), ('<', 'primary'), ('primary', '>'), ('>', '='), ('=', '<'), ('<', 'id'), ('id', '>'), ('>', '|'), ('|', '<'), ('<', 'const'), ('const', '>'), ('>', '<'), ('<', 'id'), ('id', '>'), ('>', '='), ('=', '<'), ('<', 'letter'), ('letter', '>'), ('>', '<'), ('<', 'const'), ('const', '>'), ('>', '='), ('=', '['), ('[', '+/-'), ('+/-', ']'), (']', '<'), ('<', 'digit'), ('digit', '>'), ('>', '<'), ('<', 'letter'), ('letter', '>'), ('>', '=a'), ('=a', '|'), ('|', 'b'), ('b', '|'), ('|', 'c'), ('c', '|……|'), ('|……|', 'z'), ('z', '<'), ('<', 'digit'), ('digit', '>'), ('>', '=0'), ('=0', '|'), ('|', '1'), ('1', '|………….|'), ('|………….|', '9'), ('9', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Union'), ('Union', ','), (',', 'Concatenation'), ('Concatenation', '&'), ('&', 'Kleene'), ('Kleene', '’'), ('’', 'CFG'), ('CFG', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Union'), ('Union', ','), (',', 'Concatenation'), ('Concatenation', '&'), ('&', 'Kleene'), ('Kleene', '’'), ('’', 'CFG'), ('CFG', 'Theorem'), ('Theorem', ':'), (':', '-'), ('-', 'If'), ('If', 'L1'), ('L1', 'L2'), ('L2', 'context'), ('context', '-'), ('-', 'free'), ('free', 'languages'), ('languages', ','), (',', 'languages'), ('languages', 'L1'), ('L1', 'U'), ('U', 'L2'), ('L2', ','), (',', 'L1L2'), ('L1L2', ','), (',', 'L1'), ('L1', '*'), ('*', 'also'), ('also', 'CFLs'), ('CFLs', '.')]

>> Trigrams are: 
 [('Example', ':', '<'), (':', '<', 'exp'), ('<', 'exp', '>'), ('exp', '>', '='), ('>', '=', '<'), ('=', '<', 'exp'), ('<', 'exp', '>'), ('exp', '>', '+'), ('>', '+', '<'), ('+', '<', 'term'), ('<', 'term', '>'), ('term', '>', '|'), ('>', '|', '<'), ('|', '<', 'term'), ('<', 'term', '>'), ('term', '>', '<'), ('>', '<', 'term'), ('<', 'term', '>'), ('term', '>', '='), ('>', '=', '<'), ('=', '<', 'term'), ('<', 'term', '>'), ('term', '>', '*'), ('>', '*', '<'), ('*', '<', 'factor'), ('<', 'factor', '>'), ('factor', '>', '|'), ('>', '|', '<'), ('|', '<', 'factor'), ('<', 'factor', '>'), ('factor', '>', '<'), ('>', '<', 'factor'), ('<', 'factor', '>'), ('factor', '>', '='), ('>', '=', '<'), ('=', '<', 'factor'), ('<', 'factor', '>'), ('factor', '>', '^'), ('>', '^', '<'), ('^', '<', 'primary'), ('<', 'primary', '>'), ('primary', '>', '|'), ('>', '|', '<'), ('|', '<', 'primary'), ('<', 'primary', '>'), ('primary', '>', '<'), ('>', '<', 'primary'), ('<', 'primary', '>'), ('primary', '>', '='), ('>', '=', '<'), ('=', '<', 'id'), ('<', 'id', '>'), ('id', '>', '|'), ('>', '|', '<'), ('|', '<', 'const'), ('<', 'const', '>'), ('const', '>', '<'), ('>', '<', 'id'), ('<', 'id', '>'), ('id', '>', '='), ('>', '=', '<'), ('=', '<', 'letter'), ('<', 'letter', '>'), ('letter', '>', '<'), ('>', '<', 'const'), ('<', 'const', '>'), ('const', '>', '='), ('>', '=', '['), ('=', '[', '+/-'), ('[', '+/-', ']'), ('+/-', ']', '<'), (']', '<', 'digit'), ('<', 'digit', '>'), ('digit', '>', '<'), ('>', '<', 'letter'), ('<', 'letter', '>'), ('letter', '>', '=a'), ('>', '=a', '|'), ('=a', '|', 'b'), ('|', 'b', '|'), ('b', '|', 'c'), ('|', 'c', '|……|'), ('c', '|……|', 'z'), ('|……|', 'z', '<'), ('z', '<', 'digit'), ('<', 'digit', '>'), ('digit', '>', '=0'), ('>', '=0', '|'), ('=0', '|', '1'), ('|', '1', '|………….|'), ('1', '|………….|', '9'), ('|………….|', '9', 'Unit'), ('9', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Union'), ('›', 'Union', ','), ('Union', ',', 'Concatenation'), (',', 'Concatenation', '&'), ('Concatenation', '&', 'Kleene'), ('&', 'Kleene', '’'), ('Kleene', '’', 'CFG'), ('’', 'CFG', 'Unit'), ('CFG', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Union'), ('›', 'Union', ','), ('Union', ',', 'Concatenation'), (',', 'Concatenation', '&'), ('Concatenation', '&', 'Kleene'), ('&', 'Kleene', '’'), ('Kleene', '’', 'CFG'), ('’', 'CFG', 'Theorem'), ('CFG', 'Theorem', ':'), ('Theorem', ':', '-'), (':', '-', 'If'), ('-', 'If', 'L1'), ('If', 'L1', 'L2'), ('L1', 'L2', 'context'), ('L2', 'context', '-'), ('context', '-', 'free'), ('-', 'free', 'languages'), ('free', 'languages', ','), ('languages', ',', 'languages'), (',', 'languages', 'L1'), ('languages', 'L1', 'U'), ('L1', 'U', 'L2'), ('U', 'L2', ','), ('L2', ',', 'L1L2'), (',', 'L1L2', ','), ('L1L2', ',', 'L1'), (',', 'L1', '*'), ('L1', '*', 'also'), ('*', 'also', 'CFLs'), ('also', 'CFLs', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('<', 'NN'), ('exp', 'NN'), ('>', 'NNP'), ('=', 'NNP'), ('<', 'NNP'), ('exp', 'VBZ'), ('>', 'NNP'), ('+', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('=', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('*', 'NNP'), ('<', 'NNP'), ('factor', 'NN'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('factor', 'NN'), ('>', 'NNP'), ('<', 'NNP'), ('factor', 'NN'), ('>', 'NNP'), ('=', 'NNP'), ('<', 'NNP'), ('factor', 'NN'), ('>', 'NNP'), ('^', 'NNP'), ('<', 'NNP'), ('primary', 'JJ'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('primary', 'JJ'), ('>', 'NNP'), ('<', 'NNP'), ('primary', 'JJ'), ('>', 'NNP'), ('=', 'NNP'), ('<', 'NNP'), ('id', 'NN'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('const', 'NN'), ('>', 'NNP'), ('<', 'NNP'), ('id', 'NN'), ('>', 'NNP'), ('=', 'NNP'), ('<', 'NNP'), ('letter', 'NN'), ('>', 'NNP'), ('<', 'NNP'), ('const', 'NN'), ('>', 'NNP'), ('=', 'NNP'), ('[', 'NNP'), ('+/-', 'JJ'), (']', 'NNP'), ('<', 'NNP'), ('digit', 'VBZ'), ('>', 'NNP'), ('<', 'NNP'), ('letter', 'NN'), ('>', 'NNP'), ('=a', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('|', 'NNP'), ('c', 'NN'), ('|……|', 'NNP'), ('z', 'NNP'), ('<', 'NNP'), ('digit', 'VBZ'), ('>', 'NNP'), ('=0', 'NNP'), ('|', 'VBD'), ('1', 'CD'), ('|………….|', 'JJ'), ('9', 'CD'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Union', 'NNP'), (',', ','), ('Concatenation', 'NNP'), ('&', 'CC'), ('Kleene', 'NNP'), ('’', 'NNP'), ('CFG', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Union', 'NNP'), (',', ','), ('Concatenation', 'NNP'), ('&', 'CC'), ('Kleene', 'NNP'), ('’', 'NNP'), ('CFG', 'NNP'), ('Theorem', 'NNP'), (':', ':'), ('-', ':'), ('If', 'IN'), ('L1', 'NNP'), ('L2', 'NNP'), ('context', 'SYM'), ('-', ':'), ('free', 'JJ'), ('languages', 'NNS'), (',', ','), ('languages', 'NNS'), ('L1', 'NNP'), ('U', 'NNP'), ('L2', 'NNP'), (',', ','), ('L1L2', 'NNP'), (',', ','), ('L1', 'NNP'), ('*', 'NNP'), ('also', 'RB'), ('CFLs', 'NNP'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP </NN exp/NN >/NNP =/NNP </NNP)
  exp/VBZ
  (NP
    >/NNP
    +/NNP
    </NNP
    term/NN
    >/NNP
    |/NNP
    </NNP
    term/NN
    >/NNP
    </NNP
    term/NN
    >/NNP
    =/NNP
    </NNP
    term/NN
    >/NNP
    */NNP
    </NNP
    factor/NN
    >/NNP
    |/NNP
    </NNP
    factor/NN
    >/NNP
    </NNP
    factor/NN
    >/NNP
    =/NNP
    </NNP
    factor/NN
    >/NNP
    ^/NNP
    </NNP)
  (NP primary/JJ >/NNP |/NNP </NNP)
  (NP primary/JJ >/NNP </NNP)
  (NP
    primary/JJ
    >/NNP
    =/NNP
    </NNP
    id/NN
    >/NNP
    |/NNP
    </NNP
    const/NN
    >/NNP
    </NNP
    id/NN
    >/NNP
    =/NNP
    </NNP
    letter/NN
    >/NNP
    </NNP
    const/NN
    >/NNP
    =/NNP
    [/NNP)
  (NP +/-/JJ ]/NNP </NNP)
  digit/VBZ
  (NP
    >/NNP
    </NNP
    letter/NN
    >/NNP
    =a/NNP
    |/NNP
    b/NN
    |/NNP
    c/NN
    |……|/NNP
    z/NNP
    </NNP)
  digit/VBZ
  (NP >/NNP =0/NNP)
  |/VBD
  1/CD
  |………….|/JJ
  9/CD
  (NP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Union/NNP)
  ,/,
  (NP Concatenation/NNP)
  &/CC
  (NP Kleene/NNP ’/NNP CFG/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Union/NNP)
  ,/,
  (NP Concatenation/NNP)
  &/CC
  (NP Kleene/NNP ’/NNP CFG/NNP Theorem/NNP)
  :/:
  -/:
  If/IN
  (NP L1/NNP L2/NNP)
  context/SYM
  -/:
  (NP free/JJ languages/NNS)
  ,/,
  (NP languages/NNS L1/NNP U/NNP L2/NNP)
  ,/,
  (NP L1L2/NNP)
  ,/,
  (NP L1/NNP */NNP)
  also/RB
  (NP CFLs/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Example', '< exp > = <', '> + < term > | < term > < term > = < term > * < factor > | < factor > < factor > = < factor > ^ <', 'primary > | <', 'primary > <', 'primary > = < id > | < const > < id > = < letter > < const > = [', '+/- ] <', '> < letter > =a | b | c |……| z <', '> =0', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Union', 'Concatenation', 'Kleene ’ CFG Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Union', 'Concatenation', 'Kleene ’ CFG Theorem', 'L1 L2', 'free languages', 'languages L1 U L2', 'L1L2', 'L1 *', 'CFLs']

>> Named Entities are: 
 [('GPE', 'Example'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Concatenation'), ('PERSON', 'Kleene'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Concatenation'), ('PERSON', 'Kleene'), ('PERSON', 'L1 L2'), ('PERSON', 'L1L2'), ('PERSON', 'L1'), ('ORGANIZATION', 'CFLs')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('=', '='), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('=', '='), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('|', '|'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('=', '='), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('^', '^'), ('<', '<'), ('primary', 'primari'), ('>', '>'), ('|', '|'), ('<', '<'), ('primary', 'primari'), ('>', '>'), ('<', '<'), ('primary', 'primari'), ('>', '>'), ('=', '='), ('<', '<'), ('id', 'id'), ('>', '>'), ('|', '|'), ('<', '<'), ('const', 'const'), ('>', '>'), ('<', '<'), ('id', 'id'), ('>', '>'), ('=', '='), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('const', 'const'), ('>', '>'), ('=', '='), ('[', '['), ('+/-', '+/-'), (']', ']'), ('<', '<'), ('digit', 'digit'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('=a', '=a'), ('|', '|'), ('b', 'b'), ('|', '|'), ('c', 'c'), ('|……|', '|……|'), ('z', 'z'), ('<', '<'), ('digit', 'digit'), ('>', '>'), ('=0', '=0'), ('|', '|'), ('1', '1'), ('|………….|', '|………….|'), ('9', '9'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'union'), (',', ','), ('Concatenation', 'concaten'), ('&', '&'), ('Kleene', 'kleen'), ('’', '’'), ('CFG', 'cfg'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'union'), (',', ','), ('Concatenation', 'concaten'), ('&', '&'), ('Kleene', 'kleen'), ('’', '’'), ('CFG', 'cfg'), ('Theorem', 'theorem'), (':', ':'), ('-', '-'), ('If', 'if'), ('L1', 'l1'), ('L2', 'l2'), ('context', 'context'), ('-', '-'), ('free', 'free'), ('languages', 'languag'), (',', ','), ('languages', 'languag'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), (',', ','), ('L1L2', 'l1l2'), (',', ','), ('L1', 'l1'), ('*', '*'), ('also', 'also'), ('CFLs', 'cfl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('=', '='), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('=', '='), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('|', '|'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('=', '='), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('^', '^'), ('<', '<'), ('primary', 'primari'), ('>', '>'), ('|', '|'), ('<', '<'), ('primary', 'primari'), ('>', '>'), ('<', '<'), ('primary', 'primari'), ('>', '>'), ('=', '='), ('<', '<'), ('id', 'id'), ('>', '>'), ('|', '|'), ('<', '<'), ('const', 'const'), ('>', '>'), ('<', '<'), ('id', 'id'), ('>', '>'), ('=', '='), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('const', 'const'), ('>', '>'), ('=', '='), ('[', '['), ('+/-', '+/-'), (']', ']'), ('<', '<'), ('digit', 'digit'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('=a', '=a'), ('|', '|'), ('b', 'b'), ('|', '|'), ('c', 'c'), ('|……|', '|……|'), ('z', 'z'), ('<', '<'), ('digit', 'digit'), ('>', '>'), ('=0', '=0'), ('|', '|'), ('1', '1'), ('|………….|', '|………….|'), ('9', '9'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'union'), (',', ','), ('Concatenation', 'concaten'), ('&', '&'), ('Kleene', 'kleen'), ('’', '’'), ('CFG', 'cfg'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'union'), (',', ','), ('Concatenation', 'concaten'), ('&', '&'), ('Kleene', 'kleen'), ('’', '’'), ('CFG', 'cfg'), ('Theorem', 'theorem'), (':', ':'), ('-', '-'), ('If', 'if'), ('L1', 'l1'), ('L2', 'l2'), ('context', 'context'), ('-', '-'), ('free', 'free'), ('languages', 'languag'), (',', ','), ('languages', 'languag'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), (',', ','), ('L1L2', 'l1l2'), (',', ','), ('L1', 'l1'), ('*', '*'), ('also', 'also'), ('CFLs', 'cfls'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('=', '='), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('=', '='), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('|', '|'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('=', '='), ('<', '<'), ('factor', 'factor'), ('>', '>'), ('^', '^'), ('<', '<'), ('primary', 'primary'), ('>', '>'), ('|', '|'), ('<', '<'), ('primary', 'primary'), ('>', '>'), ('<', '<'), ('primary', 'primary'), ('>', '>'), ('=', '='), ('<', '<'), ('id', 'id'), ('>', '>'), ('|', '|'), ('<', '<'), ('const', 'const'), ('>', '>'), ('<', '<'), ('id', 'id'), ('>', '>'), ('=', '='), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('const', 'const'), ('>', '>'), ('=', '='), ('[', '['), ('+/-', '+/-'), (']', ']'), ('<', '<'), ('digit', 'digit'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('=a', '=a'), ('|', '|'), ('b', 'b'), ('|', '|'), ('c', 'c'), ('|……|', '|……|'), ('z', 'z'), ('<', '<'), ('digit', 'digit'), ('>', '>'), ('=0', '=0'), ('|', '|'), ('1', '1'), ('|………….|', '|………….|'), ('9', '9'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'Union'), (',', ','), ('Concatenation', 'Concatenation'), ('&', '&'), ('Kleene', 'Kleene'), ('’', '’'), ('CFG', 'CFG'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'Union'), (',', ','), ('Concatenation', 'Concatenation'), ('&', '&'), ('Kleene', 'Kleene'), ('’', '’'), ('CFG', 'CFG'), ('Theorem', 'Theorem'), (':', ':'), ('-', '-'), ('If', 'If'), ('L1', 'L1'), ('L2', 'L2'), ('context', 'context'), ('-', '-'), ('free', 'free'), ('languages', 'language'), (',', ','), ('languages', 'language'), ('L1', 'L1'), ('U', 'U'), ('L2', 'L2'), (',', ','), ('L1L2', 'L1L2'), (',', ','), ('L1', 'L1'), ('*', '*'), ('also', 'also'), ('CFLs', 'CFLs'), ('.', '.')]



============================ Sentence 55 =============================

The proof is constructive: Starting with CFGs 		G1 = (V1, Ʃ, S1,P1) and G2 = (V2, Ʃ, S2,P2) , Generating L1 and L2, respectively, we show how to construct a new CFG for each of the three cases. 


>> Tokens are: 
 ['The', 'proof', 'constructive', ':', 'Starting', 'CFGs', 'G1', '=', '(', 'V1', ',', 'Ʃ', ',', 'S1', ',', 'P1', ')', 'G2', '=', '(', 'V2', ',', 'Ʃ', ',', 'S2', ',', 'P2', ')', ',', 'Generating', 'L1', 'L2', ',', 'respectively', ',', 'show', 'construct', 'new', 'CFG', 'three', 'cases', '.']

>> Bigrams are: 
 [('The', 'proof'), ('proof', 'constructive'), ('constructive', ':'), (':', 'Starting'), ('Starting', 'CFGs'), ('CFGs', 'G1'), ('G1', '='), ('=', '('), ('(', 'V1'), ('V1', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'S1'), ('S1', ','), (',', 'P1'), ('P1', ')'), (')', 'G2'), ('G2', '='), ('=', '('), ('(', 'V2'), ('V2', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'S2'), ('S2', ','), (',', 'P2'), ('P2', ')'), (')', ','), (',', 'Generating'), ('Generating', 'L1'), ('L1', 'L2'), ('L2', ','), (',', 'respectively'), ('respectively', ','), (',', 'show'), ('show', 'construct'), ('construct', 'new'), ('new', 'CFG'), ('CFG', 'three'), ('three', 'cases'), ('cases', '.')]

>> Trigrams are: 
 [('The', 'proof', 'constructive'), ('proof', 'constructive', ':'), ('constructive', ':', 'Starting'), (':', 'Starting', 'CFGs'), ('Starting', 'CFGs', 'G1'), ('CFGs', 'G1', '='), ('G1', '=', '('), ('=', '(', 'V1'), ('(', 'V1', ','), ('V1', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'S1'), (',', 'S1', ','), ('S1', ',', 'P1'), (',', 'P1', ')'), ('P1', ')', 'G2'), (')', 'G2', '='), ('G2', '=', '('), ('=', '(', 'V2'), ('(', 'V2', ','), ('V2', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'S2'), (',', 'S2', ','), ('S2', ',', 'P2'), (',', 'P2', ')'), ('P2', ')', ','), (')', ',', 'Generating'), (',', 'Generating', 'L1'), ('Generating', 'L1', 'L2'), ('L1', 'L2', ','), ('L2', ',', 'respectively'), (',', 'respectively', ','), ('respectively', ',', 'show'), (',', 'show', 'construct'), ('show', 'construct', 'new'), ('construct', 'new', 'CFG'), ('new', 'CFG', 'three'), ('CFG', 'three', 'cases'), ('three', 'cases', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('proof', 'NN'), ('constructive', 'NN'), (':', ':'), ('Starting', 'VBG'), ('CFGs', 'NNP'), ('G1', 'NNP'), ('=', 'NNP'), ('(', '('), ('V1', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('S1', 'NNP'), (',', ','), ('P1', 'NNP'), (')', ')'), ('G2', 'NNP'), ('=', 'NNP'), ('(', '('), ('V2', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('S2', 'NNP'), (',', ','), ('P2', 'NNP'), (')', ')'), (',', ','), ('Generating', 'VBG'), ('L1', 'NNP'), ('L2', 'NNP'), (',', ','), ('respectively', 'RB'), (',', ','), ('show', 'VBP'), ('construct', 'VB'), ('new', 'JJ'), ('CFG', 'NNP'), ('three', 'CD'), ('cases', 'NNS'), ('.', '.')]

 (S
  (NP The/DT proof/NN constructive/NN)
  :/:
  Starting/VBG
  (NP CFGs/NNP G1/NNP =/NNP)
  (/(
  (NP V1/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP S1/NNP)
  ,/,
  (NP P1/NNP)
  )/)
  (NP G2/NNP =/NNP)
  (/(
  (NP V2/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP S2/NNP)
  ,/,
  (NP P2/NNP)
  )/)
  ,/,
  Generating/VBG
  (NP L1/NNP L2/NNP)
  ,/,
  respectively/RB
  ,/,
  show/VBP
  construct/VB
  (NP new/JJ CFG/NNP)
  three/CD
  (NP cases/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The proof constructive', 'CFGs G1 =', 'V1', 'Ʃ', 'S1', 'P1', 'G2 =', 'V2', 'Ʃ', 'S2', 'P2', 'L1 L2', 'new CFG', 'cases']

>> Named Entities are: 
 [('ORGANIZATION', 'CFGs G1'), ('GPE', 'Ʃ'), ('GPE', 'S1'), ('GPE', 'P1'), ('GPE', 'Ʃ'), ('GPE', 'S2'), ('GPE', 'P2'), ('PERSON', 'L1 L2')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('proof', 'proof'), ('constructive', 'construct'), (':', ':'), ('Starting', 'start'), ('CFGs', 'cfg'), ('G1', 'g1'), ('=', '='), ('(', '('), ('V1', 'v1'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S1', 's1'), (',', ','), ('P1', 'p1'), (')', ')'), ('G2', 'g2'), ('=', '='), ('(', '('), ('V2', 'v2'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S2', 's2'), (',', ','), ('P2', 'p2'), (')', ')'), (',', ','), ('Generating', 'gener'), ('L1', 'l1'), ('L2', 'l2'), (',', ','), ('respectively', 'respect'), (',', ','), ('show', 'show'), ('construct', 'construct'), ('new', 'new'), ('CFG', 'cfg'), ('three', 'three'), ('cases', 'case'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('proof', 'proof'), ('constructive', 'construct'), (':', ':'), ('Starting', 'start'), ('CFGs', 'cfgs'), ('G1', 'g1'), ('=', '='), ('(', '('), ('V1', 'v1'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S1', 's1'), (',', ','), ('P1', 'p1'), (')', ')'), ('G2', 'g2'), ('=', '='), ('(', '('), ('V2', 'v2'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S2', 's2'), (',', ','), ('P2', 'p2'), (')', ')'), (',', ','), ('Generating', 'generat'), ('L1', 'l1'), ('L2', 'l2'), (',', ','), ('respectively', 'respect'), (',', ','), ('show', 'show'), ('construct', 'construct'), ('new', 'new'), ('CFG', 'cfg'), ('three', 'three'), ('cases', 'case'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('proof', 'proof'), ('constructive', 'constructive'), (':', ':'), ('Starting', 'Starting'), ('CFGs', 'CFGs'), ('G1', 'G1'), ('=', '='), ('(', '('), ('V1', 'V1'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('S1', 'S1'), (',', ','), ('P1', 'P1'), (')', ')'), ('G2', 'G2'), ('=', '='), ('(', '('), ('V2', 'V2'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('S2', 'S2'), (',', ','), ('P2', 'P2'), (')', ')'), (',', ','), ('Generating', 'Generating'), ('L1', 'L1'), ('L2', 'L2'), (',', ','), ('respectively', 'respectively'), (',', ','), ('show', 'show'), ('construct', 'construct'), ('new', 'new'), ('CFG', 'CFG'), ('three', 'three'), ('cases', 'case'), ('.', '.')]



============================ Sentence 56 =============================

Gu = (Vu, Ʃ, Su, Pu) generating L1 U L2 Gc= (Vc, Ʃ, Sc, Pc) generating L1L2 G* = (V, Ʃ, S, P) generating  L1 *   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Union Gu = (Vu, Ʃ, Su, Pu)  A grammar Gu = (Vu, Ʃ, Su, Pu) generating L1 U L2. 


>> Tokens are: 
 ['Gu', '=', '(', 'Vu', ',', 'Ʃ', ',', 'Su', ',', 'Pu', ')', 'generating', 'L1', 'U', 'L2', 'Gc=', '(', 'Vc', ',', 'Ʃ', ',', 'Sc', ',', 'Pc', ')', 'generating', 'L1L2', 'G', '*', '=', '(', 'V', ',', 'Ʃ', ',', 'S', ',', 'P', ')', 'generating', 'L1', '*', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Union', 'Gu', '=', '(', 'Vu', ',', 'Ʃ', ',', 'Su', ',', 'Pu', ')', 'A', 'grammar', 'Gu', '=', '(', 'Vu', ',', 'Ʃ', ',', 'Su', ',', 'Pu', ')', 'generating', 'L1', 'U', 'L2', '.']

>> Bigrams are: 
 [('Gu', '='), ('=', '('), ('(', 'Vu'), ('Vu', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'Su'), ('Su', ','), (',', 'Pu'), ('Pu', ')'), (')', 'generating'), ('generating', 'L1'), ('L1', 'U'), ('U', 'L2'), ('L2', 'Gc='), ('Gc=', '('), ('(', 'Vc'), ('Vc', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'Sc'), ('Sc', ','), (',', 'Pc'), ('Pc', ')'), (')', 'generating'), ('generating', 'L1L2'), ('L1L2', 'G'), ('G', '*'), ('*', '='), ('=', '('), ('(', 'V'), ('V', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'S'), ('S', ','), (',', 'P'), ('P', ')'), (')', 'generating'), ('generating', 'L1'), ('L1', '*'), ('*', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Union'), ('Union', 'Gu'), ('Gu', '='), ('=', '('), ('(', 'Vu'), ('Vu', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'Su'), ('Su', ','), (',', 'Pu'), ('Pu', ')'), (')', 'A'), ('A', 'grammar'), ('grammar', 'Gu'), ('Gu', '='), ('=', '('), ('(', 'Vu'), ('Vu', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'Su'), ('Su', ','), (',', 'Pu'), ('Pu', ')'), (')', 'generating'), ('generating', 'L1'), ('L1', 'U'), ('U', 'L2'), ('L2', '.')]

>> Trigrams are: 
 [('Gu', '=', '('), ('=', '(', 'Vu'), ('(', 'Vu', ','), ('Vu', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'Su'), (',', 'Su', ','), ('Su', ',', 'Pu'), (',', 'Pu', ')'), ('Pu', ')', 'generating'), (')', 'generating', 'L1'), ('generating', 'L1', 'U'), ('L1', 'U', 'L2'), ('U', 'L2', 'Gc='), ('L2', 'Gc=', '('), ('Gc=', '(', 'Vc'), ('(', 'Vc', ','), ('Vc', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'Sc'), (',', 'Sc', ','), ('Sc', ',', 'Pc'), (',', 'Pc', ')'), ('Pc', ')', 'generating'), (')', 'generating', 'L1L2'), ('generating', 'L1L2', 'G'), ('L1L2', 'G', '*'), ('G', '*', '='), ('*', '=', '('), ('=', '(', 'V'), ('(', 'V', ','), ('V', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'S'), (',', 'S', ','), ('S', ',', 'P'), (',', 'P', ')'), ('P', ')', 'generating'), (')', 'generating', 'L1'), ('generating', 'L1', '*'), ('L1', '*', 'Unit'), ('*', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Union'), ('›', 'Union', 'Gu'), ('Union', 'Gu', '='), ('Gu', '=', '('), ('=', '(', 'Vu'), ('(', 'Vu', ','), ('Vu', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'Su'), (',', 'Su', ','), ('Su', ',', 'Pu'), (',', 'Pu', ')'), ('Pu', ')', 'A'), (')', 'A', 'grammar'), ('A', 'grammar', 'Gu'), ('grammar', 'Gu', '='), ('Gu', '=', '('), ('=', '(', 'Vu'), ('(', 'Vu', ','), ('Vu', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'Su'), (',', 'Su', ','), ('Su', ',', 'Pu'), (',', 'Pu', ')'), ('Pu', ')', 'generating'), (')', 'generating', 'L1'), ('generating', 'L1', 'U'), ('L1', 'U', 'L2'), ('U', 'L2', '.')]

>> POS Tags are: 
 [('Gu', 'NNP'), ('=', 'NNP'), ('(', '('), ('Vu', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('Su', 'NNP'), (',', ','), ('Pu', 'NNP'), (')', ')'), ('generating', 'VBG'), ('L1', 'NNP'), ('U', 'NNP'), ('L2', 'NNP'), ('Gc=', 'NNP'), ('(', '('), ('Vc', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('Sc', 'NNP'), (',', ','), ('Pc', 'NNP'), (')', ')'), ('generating', 'VBG'), ('L1L2', 'NNP'), ('G', 'NNP'), ('*', 'NNP'), ('=', 'NNP'), ('(', '('), ('V', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('S', 'NNP'), (',', ','), ('P', 'NNP'), (')', ')'), ('generating', 'VBG'), ('L1', 'NNP'), ('*', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Union', 'NNP'), ('Gu', 'NNP'), ('=', 'NNP'), ('(', '('), ('Vu', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('Su', 'NNP'), (',', ','), ('Pu', 'NNP'), (')', ')'), ('A', 'NNP'), ('grammar', 'NN'), ('Gu', 'NNP'), ('=', 'NNP'), ('(', '('), ('Vu', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('Su', 'NNP'), (',', ','), ('Pu', 'NNP'), (')', ')'), ('generating', 'VBG'), ('L1', 'NNP'), ('U', 'NNP'), ('L2', 'NNP'), ('.', '.')]

 (S
  (NP Gu/NNP =/NNP)
  (/(
  (NP Vu/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP Su/NNP)
  ,/,
  (NP Pu/NNP)
  )/)
  generating/VBG
  (NP L1/NNP U/NNP L2/NNP Gc=/NNP)
  (/(
  (NP Vc/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP Sc/NNP)
  ,/,
  (NP Pc/NNP)
  )/)
  generating/VBG
  (NP L1L2/NNP G/NNP */NNP =/NNP)
  (/(
  (NP V/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP S/NNP)
  ,/,
  (NP P/NNP)
  )/)
  generating/VBG
  (NP L1/NNP */NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Union/NNP Gu/NNP =/NNP)
  (/(
  (NP Vu/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP Su/NNP)
  ,/,
  (NP Pu/NNP)
  )/)
  (NP A/NNP grammar/NN Gu/NNP =/NNP)
  (/(
  (NP Vu/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP Su/NNP)
  ,/,
  (NP Pu/NNP)
  )/)
  generating/VBG
  (NP L1/NNP U/NNP L2/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Gu =', 'Vu', 'Ʃ', 'Su', 'Pu', 'L1 U L2 Gc=', 'Vc', 'Ʃ', 'Sc', 'Pc', 'L1L2 G * =', 'V', 'Ʃ', 'S', 'P', 'L1 * Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Union Gu =', 'Vu', 'Ʃ', 'Su', 'Pu', 'A grammar Gu =', 'Vu', 'Ʃ', 'Su', 'Pu', 'L1 U L2']

>> Named Entities are: 
 [('GPE', 'Ʃ'), ('GPE', 'Su'), ('GPE', 'Pu'), ('PERSON', 'L1 U L2'), ('GPE', 'Ʃ'), ('GPE', 'Sc'), ('GPE', 'Pc'), ('PERSON', 'L1L2 G'), ('GPE', 'Ʃ'), ('GPE', 'S'), ('PERSON', 'L1'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('GPE', 'Ʃ'), ('GPE', 'Su'), ('GPE', 'Pu'), ('GPE', 'Ʃ'), ('GPE', 'Su'), ('GPE', 'Pu'), ('PERSON', 'L1 U L2')] 

>> Stemming using Porter Stemmer: 
 [('Gu', 'gu'), ('=', '='), ('(', '('), ('Vu', 'vu'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Su', 'su'), (',', ','), ('Pu', 'pu'), (')', ')'), ('generating', 'gener'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), ('Gc=', 'gc='), ('(', '('), ('Vc', 'vc'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Sc', 'sc'), (',', ','), ('Pc', 'pc'), (')', ')'), ('generating', 'gener'), ('L1L2', 'l1l2'), ('G', 'g'), ('*', '*'), ('=', '='), ('(', '('), ('V', 'v'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S', 's'), (',', ','), ('P', 'p'), (')', ')'), ('generating', 'gener'), ('L1', 'l1'), ('*', '*'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'union'), ('Gu', 'gu'), ('=', '='), ('(', '('), ('Vu', 'vu'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Su', 'su'), (',', ','), ('Pu', 'pu'), (')', ')'), ('A', 'a'), ('grammar', 'grammar'), ('Gu', 'gu'), ('=', '='), ('(', '('), ('Vu', 'vu'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Su', 'su'), (',', ','), ('Pu', 'pu'), (')', ')'), ('generating', 'gener'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Gu', 'gu'), ('=', '='), ('(', '('), ('Vu', 'vu'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Su', 'su'), (',', ','), ('Pu', 'pu'), (')', ')'), ('generating', 'generat'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), ('Gc=', 'gc='), ('(', '('), ('Vc', 'vc'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Sc', 'sc'), (',', ','), ('Pc', 'pc'), (')', ')'), ('generating', 'generat'), ('L1L2', 'l1l2'), ('G', 'g'), ('*', '*'), ('=', '='), ('(', '('), ('V', 'v'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S', 's'), (',', ','), ('P', 'p'), (')', ')'), ('generating', 'generat'), ('L1', 'l1'), ('*', '*'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'union'), ('Gu', 'gu'), ('=', '='), ('(', '('), ('Vu', 'vu'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Su', 'su'), (',', ','), ('Pu', 'pu'), (')', ')'), ('A', 'a'), ('grammar', 'grammar'), ('Gu', 'gu'), ('=', '='), ('(', '('), ('Vu', 'vu'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Su', 'su'), (',', ','), ('Pu', 'pu'), (')', ')'), ('generating', 'generat'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), ('.', '.')]

>> Lemmatization: 
 [('Gu', 'Gu'), ('=', '='), ('(', '('), ('Vu', 'Vu'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('Su', 'Su'), (',', ','), ('Pu', 'Pu'), (')', ')'), ('generating', 'generating'), ('L1', 'L1'), ('U', 'U'), ('L2', 'L2'), ('Gc=', 'Gc='), ('(', '('), ('Vc', 'Vc'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('Sc', 'Sc'), (',', ','), ('Pc', 'Pc'), (')', ')'), ('generating', 'generating'), ('L1L2', 'L1L2'), ('G', 'G'), ('*', '*'), ('=', '='), ('(', '('), ('V', 'V'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('S', 'S'), (',', ','), ('P', 'P'), (')', ')'), ('generating', 'generating'), ('L1', 'L1'), ('*', '*'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Union', 'Union'), ('Gu', 'Gu'), ('=', '='), ('(', '('), ('Vu', 'Vu'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('Su', 'Su'), (',', ','), ('Pu', 'Pu'), (')', ')'), ('A', 'A'), ('grammar', 'grammar'), ('Gu', 'Gu'), ('=', '='), ('(', '('), ('Vu', 'Vu'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('Su', 'Su'), (',', ','), ('Pu', 'Pu'), (')', ')'), ('generating', 'generating'), ('L1', 'L1'), ('U', 'U'), ('L2', 'L2'), ('.', '.')]



============================ Sentence 57 =============================

First we rename the element of V2 if necessary so that V1 ∩ V2= Ø 		Vu= V1 U V2 U {Su} 	Where Su is a new symbol not in V1 or V2. 


>> Tokens are: 
 ['First', 'rename', 'element', 'V2', 'necessary', 'V1', '∩', 'V2=', 'Ø', 'Vu=', 'V1', 'U', 'V2', 'U', '{', 'Su', '}', 'Where', 'Su', 'new', 'symbol', 'V1', 'V2', '.']

>> Bigrams are: 
 [('First', 'rename'), ('rename', 'element'), ('element', 'V2'), ('V2', 'necessary'), ('necessary', 'V1'), ('V1', '∩'), ('∩', 'V2='), ('V2=', 'Ø'), ('Ø', 'Vu='), ('Vu=', 'V1'), ('V1', 'U'), ('U', 'V2'), ('V2', 'U'), ('U', '{'), ('{', 'Su'), ('Su', '}'), ('}', 'Where'), ('Where', 'Su'), ('Su', 'new'), ('new', 'symbol'), ('symbol', 'V1'), ('V1', 'V2'), ('V2', '.')]

>> Trigrams are: 
 [('First', 'rename', 'element'), ('rename', 'element', 'V2'), ('element', 'V2', 'necessary'), ('V2', 'necessary', 'V1'), ('necessary', 'V1', '∩'), ('V1', '∩', 'V2='), ('∩', 'V2=', 'Ø'), ('V2=', 'Ø', 'Vu='), ('Ø', 'Vu=', 'V1'), ('Vu=', 'V1', 'U'), ('V1', 'U', 'V2'), ('U', 'V2', 'U'), ('V2', 'U', '{'), ('U', '{', 'Su'), ('{', 'Su', '}'), ('Su', '}', 'Where'), ('}', 'Where', 'Su'), ('Where', 'Su', 'new'), ('Su', 'new', 'symbol'), ('new', 'symbol', 'V1'), ('symbol', 'V1', 'V2'), ('V1', 'V2', '.')]

>> POS Tags are: 
 [('First', 'RB'), ('rename', 'JJ'), ('element', 'NN'), ('V2', 'NNP'), ('necessary', 'JJ'), ('V1', 'NNP'), ('∩', 'NNP'), ('V2=', 'NNP'), ('Ø', 'NNP'), ('Vu=', 'NNP'), ('V1', 'NNP'), ('U', 'NNP'), ('V2', 'NNP'), ('U', 'NNP'), ('{', '('), ('Su', 'NNP'), ('}', ')'), ('Where', 'NNP'), ('Su', 'NNP'), ('new', 'JJ'), ('symbol', 'NN'), ('V1', 'NNP'), ('V2', 'NNP'), ('.', '.')]

 (S
  First/RB
  (NP rename/JJ element/NN V2/NNP)
  (NP
    necessary/JJ
    V1/NNP
    ∩/NNP
    V2=/NNP
    Ø/NNP
    Vu=/NNP
    V1/NNP
    U/NNP
    V2/NNP
    U/NNP)
  {/(
  (NP Su/NNP)
  }/)
  (NP Where/NNP Su/NNP)
  (NP new/JJ symbol/NN V1/NNP V2/NNP)
  ./.) 


>> Noun Phrases are: 
 ['rename element V2', 'necessary V1 ∩ V2= Ø Vu= V1 U V2 U', 'Su', 'Where Su', 'new symbol V1 V2']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('First', 'first'), ('rename', 'renam'), ('element', 'element'), ('V2', 'v2'), ('necessary', 'necessari'), ('V1', 'v1'), ('∩', '∩'), ('V2=', 'v2='), ('Ø', 'ø'), ('Vu=', 'vu='), ('V1', 'v1'), ('U', 'u'), ('V2', 'v2'), ('U', 'u'), ('{', '{'), ('Su', 'su'), ('}', '}'), ('Where', 'where'), ('Su', 'su'), ('new', 'new'), ('symbol', 'symbol'), ('V1', 'v1'), ('V2', 'v2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('First', 'first'), ('rename', 'renam'), ('element', 'element'), ('V2', 'v2'), ('necessary', 'necessari'), ('V1', 'v1'), ('∩', '∩'), ('V2=', 'v2='), ('Ø', 'ø'), ('Vu=', 'vu='), ('V1', 'v1'), ('U', 'u'), ('V2', 'v2'), ('U', 'u'), ('{', '{'), ('Su', 'su'), ('}', '}'), ('Where', 'where'), ('Su', 'su'), ('new', 'new'), ('symbol', 'symbol'), ('V1', 'v1'), ('V2', 'v2'), ('.', '.')]

>> Lemmatization: 
 [('First', 'First'), ('rename', 'rename'), ('element', 'element'), ('V2', 'V2'), ('necessary', 'necessary'), ('V1', 'V1'), ('∩', '∩'), ('V2=', 'V2='), ('Ø', 'Ø'), ('Vu=', 'Vu='), ('V1', 'V1'), ('U', 'U'), ('V2', 'V2'), ('U', 'U'), ('{', '{'), ('Su', 'Su'), ('}', '}'), ('Where', 'Where'), ('Su', 'Su'), ('new', 'new'), ('symbol', 'symbol'), ('V1', 'V1'), ('V2', 'V2'), ('.', '.')]



============================ Sentence 58 =============================

Then we let 		Pu= P1 U P2 U { Su S1 | S2 } On the other hand, if x is derivable from Su in Gu, the first step in any derivation must be  		SuS1 or SuS2  In the first case, all subsequent productions used must be productions in G1, because no variables in V2 are involved, and thus x∈ L1; in the second case, x ∈ L2. 


>> Tokens are: 
 ['Then', 'let', 'Pu=', 'P1', 'U', 'P2', 'U', '{', 'Su\uf0e0', 'S1', '|', 'S2', '}', 'On', 'hand', ',', 'x', 'derivable', 'Su', 'Gu', ',', 'first', 'step', 'derivation', 'must', 'Su\uf0e0S1', 'Su\uf0e0S2', 'In', 'first', 'case', ',', 'subsequent', 'productions', 'used', 'must', 'productions', 'G1', ',', 'variables', 'V2', 'involved', ',', 'thus', 'x∈', 'L1', ';', 'second', 'case', ',', 'x', '∈', 'L2', '.']

>> Bigrams are: 
 [('Then', 'let'), ('let', 'Pu='), ('Pu=', 'P1'), ('P1', 'U'), ('U', 'P2'), ('P2', 'U'), ('U', '{'), ('{', 'Su\uf0e0'), ('Su\uf0e0', 'S1'), ('S1', '|'), ('|', 'S2'), ('S2', '}'), ('}', 'On'), ('On', 'hand'), ('hand', ','), (',', 'x'), ('x', 'derivable'), ('derivable', 'Su'), ('Su', 'Gu'), ('Gu', ','), (',', 'first'), ('first', 'step'), ('step', 'derivation'), ('derivation', 'must'), ('must', 'Su\uf0e0S1'), ('Su\uf0e0S1', 'Su\uf0e0S2'), ('Su\uf0e0S2', 'In'), ('In', 'first'), ('first', 'case'), ('case', ','), (',', 'subsequent'), ('subsequent', 'productions'), ('productions', 'used'), ('used', 'must'), ('must', 'productions'), ('productions', 'G1'), ('G1', ','), (',', 'variables'), ('variables', 'V2'), ('V2', 'involved'), ('involved', ','), (',', 'thus'), ('thus', 'x∈'), ('x∈', 'L1'), ('L1', ';'), (';', 'second'), ('second', 'case'), ('case', ','), (',', 'x'), ('x', '∈'), ('∈', 'L2'), ('L2', '.')]

>> Trigrams are: 
 [('Then', 'let', 'Pu='), ('let', 'Pu=', 'P1'), ('Pu=', 'P1', 'U'), ('P1', 'U', 'P2'), ('U', 'P2', 'U'), ('P2', 'U', '{'), ('U', '{', 'Su\uf0e0'), ('{', 'Su\uf0e0', 'S1'), ('Su\uf0e0', 'S1', '|'), ('S1', '|', 'S2'), ('|', 'S2', '}'), ('S2', '}', 'On'), ('}', 'On', 'hand'), ('On', 'hand', ','), ('hand', ',', 'x'), (',', 'x', 'derivable'), ('x', 'derivable', 'Su'), ('derivable', 'Su', 'Gu'), ('Su', 'Gu', ','), ('Gu', ',', 'first'), (',', 'first', 'step'), ('first', 'step', 'derivation'), ('step', 'derivation', 'must'), ('derivation', 'must', 'Su\uf0e0S1'), ('must', 'Su\uf0e0S1', 'Su\uf0e0S2'), ('Su\uf0e0S1', 'Su\uf0e0S2', 'In'), ('Su\uf0e0S2', 'In', 'first'), ('In', 'first', 'case'), ('first', 'case', ','), ('case', ',', 'subsequent'), (',', 'subsequent', 'productions'), ('subsequent', 'productions', 'used'), ('productions', 'used', 'must'), ('used', 'must', 'productions'), ('must', 'productions', 'G1'), ('productions', 'G1', ','), ('G1', ',', 'variables'), (',', 'variables', 'V2'), ('variables', 'V2', 'involved'), ('V2', 'involved', ','), ('involved', ',', 'thus'), (',', 'thus', 'x∈'), ('thus', 'x∈', 'L1'), ('x∈', 'L1', ';'), ('L1', ';', 'second'), (';', 'second', 'case'), ('second', 'case', ','), ('case', ',', 'x'), (',', 'x', '∈'), ('x', '∈', 'L2'), ('∈', 'L2', '.')]

>> POS Tags are: 
 [('Then', 'RB'), ('let', 'VB'), ('Pu=', 'NNP'), ('P1', 'NNP'), ('U', 'NNP'), ('P2', 'NNP'), ('U', 'NNP'), ('{', '('), ('Su\uf0e0', 'NNP'), ('S1', 'NNP'), ('|', 'NNP'), ('S2', 'NNP'), ('}', ')'), ('On', 'IN'), ('hand', 'NN'), (',', ','), ('x', 'NNP'), ('derivable', 'JJ'), ('Su', 'NNP'), ('Gu', 'NNP'), (',', ','), ('first', 'JJ'), ('step', 'NN'), ('derivation', 'NN'), ('must', 'MD'), ('Su\uf0e0S1', 'VB'), ('Su\uf0e0S2', 'NNP'), ('In', 'IN'), ('first', 'JJ'), ('case', 'NN'), (',', ','), ('subsequent', 'JJ'), ('productions', 'NNS'), ('used', 'VBN'), ('must', 'MD'), ('productions', 'VB'), ('G1', 'NNP'), (',', ','), ('variables', 'VBZ'), ('V2', 'NNP'), ('involved', 'VBN'), (',', ','), ('thus', 'RB'), ('x∈', 'JJ'), ('L1', 'NNP'), (';', ':'), ('second', 'JJ'), ('case', 'NN'), (',', ','), ('x', 'NNP'), ('∈', 'NNP'), ('L2', 'NNP'), ('.', '.')]

 (S
  Then/RB
  let/VB
  (NP Pu=/NNP P1/NNP U/NNP P2/NNP U/NNP)
  {/(
  (NP Su/NNP S1/NNP |/NNP S2/NNP)
  }/)
  On/IN
  (NP hand/NN)
  ,/,
  (NP x/NNP)
  (NP derivable/JJ Su/NNP Gu/NNP)
  ,/,
  (NP first/JJ step/NN derivation/NN)
  must/MD
  SuS1/VB
  (NP SuS2/NNP)
  In/IN
  (NP first/JJ case/NN)
  ,/,
  (NP subsequent/JJ productions/NNS)
  used/VBN
  must/MD
  productions/VB
  (NP G1/NNP)
  ,/,
  variables/VBZ
  (NP V2/NNP)
  involved/VBN
  ,/,
  thus/RB
  (NP x∈/JJ L1/NNP)
  ;/:
  (NP second/JJ case/NN)
  ,/,
  (NP x/NNP ∈/NNP L2/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Pu= P1 U P2 U', 'Su\uf0e0 S1 | S2', 'hand', 'x', 'derivable Su Gu', 'first step derivation', 'Su\uf0e0S2', 'first case', 'subsequent productions', 'G1', 'V2', 'x∈ L1', 'second case', 'x ∈ L2']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Then', 'then'), ('let', 'let'), ('Pu=', 'pu='), ('P1', 'p1'), ('U', 'u'), ('P2', 'p2'), ('U', 'u'), ('{', '{'), ('Su\uf0e0', 'su\uf0e0'), ('S1', 's1'), ('|', '|'), ('S2', 's2'), ('}', '}'), ('On', 'on'), ('hand', 'hand'), (',', ','), ('x', 'x'), ('derivable', 'deriv'), ('Su', 'su'), ('Gu', 'gu'), (',', ','), ('first', 'first'), ('step', 'step'), ('derivation', 'deriv'), ('must', 'must'), ('Su\uf0e0S1', 'su\uf0e0s1'), ('Su\uf0e0S2', 'su\uf0e0s2'), ('In', 'in'), ('first', 'first'), ('case', 'case'), (',', ','), ('subsequent', 'subsequ'), ('productions', 'product'), ('used', 'use'), ('must', 'must'), ('productions', 'product'), ('G1', 'g1'), (',', ','), ('variables', 'variabl'), ('V2', 'v2'), ('involved', 'involv'), (',', ','), ('thus', 'thu'), ('x∈', 'x∈'), ('L1', 'l1'), (';', ';'), ('second', 'second'), ('case', 'case'), (',', ','), ('x', 'x'), ('∈', '∈'), ('L2', 'l2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Then', 'then'), ('let', 'let'), ('Pu=', 'pu='), ('P1', 'p1'), ('U', 'u'), ('P2', 'p2'), ('U', 'u'), ('{', '{'), ('Su\uf0e0', 'su\uf0e0'), ('S1', 's1'), ('|', '|'), ('S2', 's2'), ('}', '}'), ('On', 'on'), ('hand', 'hand'), (',', ','), ('x', 'x'), ('derivable', 'deriv'), ('Su', 'su'), ('Gu', 'gu'), (',', ','), ('first', 'first'), ('step', 'step'), ('derivation', 'deriv'), ('must', 'must'), ('Su\uf0e0S1', 'su\uf0e0s1'), ('Su\uf0e0S2', 'su\uf0e0s2'), ('In', 'in'), ('first', 'first'), ('case', 'case'), (',', ','), ('subsequent', 'subsequ'), ('productions', 'product'), ('used', 'use'), ('must', 'must'), ('productions', 'product'), ('G1', 'g1'), (',', ','), ('variables', 'variabl'), ('V2', 'v2'), ('involved', 'involv'), (',', ','), ('thus', 'thus'), ('x∈', 'x∈'), ('L1', 'l1'), (';', ';'), ('second', 'second'), ('case', 'case'), (',', ','), ('x', 'x'), ('∈', '∈'), ('L2', 'l2'), ('.', '.')]

>> Lemmatization: 
 [('Then', 'Then'), ('let', 'let'), ('Pu=', 'Pu='), ('P1', 'P1'), ('U', 'U'), ('P2', 'P2'), ('U', 'U'), ('{', '{'), ('Su\uf0e0', 'Su\uf0e0'), ('S1', 'S1'), ('|', '|'), ('S2', 'S2'), ('}', '}'), ('On', 'On'), ('hand', 'hand'), (',', ','), ('x', 'x'), ('derivable', 'derivable'), ('Su', 'Su'), ('Gu', 'Gu'), (',', ','), ('first', 'first'), ('step', 'step'), ('derivation', 'derivation'), ('must', 'must'), ('Su\uf0e0S1', 'Su\uf0e0S1'), ('Su\uf0e0S2', 'Su\uf0e0S2'), ('In', 'In'), ('first', 'first'), ('case', 'case'), (',', ','), ('subsequent', 'subsequent'), ('productions', 'production'), ('used', 'used'), ('must', 'must'), ('productions', 'production'), ('G1', 'G1'), (',', ','), ('variables', 'variable'), ('V2', 'V2'), ('involved', 'involved'), (',', ','), ('thus', 'thus'), ('x∈', 'x∈'), ('L1', 'L1'), (';', ';'), ('second', 'second'), ('case', 'case'), (',', ','), ('x', 'x'), ('∈', '∈'), ('L2', 'L2'), ('.', '.')]



============================ Sentence 59 =============================

Therefore, 		L(Gu) ⊆ L1 U L2   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Concatenation Gc= (Vc, Ʃ, Sc, Pc)  A grammar Gc= (Vc, Ʃ, Sc, Pc) generating L1L2 . 


>> Tokens are: 
 ['Therefore', ',', 'L', '(', 'Gu', ')', '⊆', 'L1', 'U', 'L2', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Concatenation', 'Gc=', '(', 'Vc', ',', 'Ʃ', ',', 'Sc', ',', 'Pc', ')', 'A', 'grammar', 'Gc=', '(', 'Vc', ',', 'Ʃ', ',', 'Sc', ',', 'Pc', ')', 'generating', 'L1L2', '.']

>> Bigrams are: 
 [('Therefore', ','), (',', 'L'), ('L', '('), ('(', 'Gu'), ('Gu', ')'), (')', '⊆'), ('⊆', 'L1'), ('L1', 'U'), ('U', 'L2'), ('L2', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Concatenation'), ('Concatenation', 'Gc='), ('Gc=', '('), ('(', 'Vc'), ('Vc', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'Sc'), ('Sc', ','), (',', 'Pc'), ('Pc', ')'), (')', 'A'), ('A', 'grammar'), ('grammar', 'Gc='), ('Gc=', '('), ('(', 'Vc'), ('Vc', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'Sc'), ('Sc', ','), (',', 'Pc'), ('Pc', ')'), (')', 'generating'), ('generating', 'L1L2'), ('L1L2', '.')]

>> Trigrams are: 
 [('Therefore', ',', 'L'), (',', 'L', '('), ('L', '(', 'Gu'), ('(', 'Gu', ')'), ('Gu', ')', '⊆'), (')', '⊆', 'L1'), ('⊆', 'L1', 'U'), ('L1', 'U', 'L2'), ('U', 'L2', 'Unit'), ('L2', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Concatenation'), ('›', 'Concatenation', 'Gc='), ('Concatenation', 'Gc=', '('), ('Gc=', '(', 'Vc'), ('(', 'Vc', ','), ('Vc', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'Sc'), (',', 'Sc', ','), ('Sc', ',', 'Pc'), (',', 'Pc', ')'), ('Pc', ')', 'A'), (')', 'A', 'grammar'), ('A', 'grammar', 'Gc='), ('grammar', 'Gc=', '('), ('Gc=', '(', 'Vc'), ('(', 'Vc', ','), ('Vc', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'Sc'), (',', 'Sc', ','), ('Sc', ',', 'Pc'), (',', 'Pc', ')'), ('Pc', ')', 'generating'), (')', 'generating', 'L1L2'), ('generating', 'L1L2', '.')]

>> POS Tags are: 
 [('Therefore', 'RB'), (',', ','), ('L', 'NNP'), ('(', '('), ('Gu', 'NNP'), (')', ')'), ('⊆', 'VBP'), ('L1', 'NNP'), ('U', 'NNP'), ('L2', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Concatenation', 'NNP'), ('Gc=', 'NNP'), ('(', '('), ('Vc', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('Sc', 'NNP'), (',', ','), ('Pc', 'NNP'), (')', ')'), ('A', 'NNP'), ('grammar', 'NN'), ('Gc=', 'NNP'), ('(', '('), ('Vc', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('Sc', 'NNP'), (',', ','), ('Pc', 'NNP'), (')', ')'), ('generating', 'VBG'), ('L1L2', 'NNP'), ('.', '.')]

 (S
  Therefore/RB
  ,/,
  (NP L/NNP)
  (/(
  (NP Gu/NNP)
  )/)
  ⊆/VBP
  (NP L1/NNP U/NNP L2/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Concatenation/NNP Gc=/NNP)
  (/(
  (NP Vc/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP Sc/NNP)
  ,/,
  (NP Pc/NNP)
  )/)
  (NP A/NNP grammar/NN Gc=/NNP)
  (/(
  (NP Vc/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP Sc/NNP)
  ,/,
  (NP Pc/NNP)
  )/)
  generating/VBG
  (NP L1L2/NNP)
  ./.) 


>> Noun Phrases are: 
 ['L', 'Gu', 'L1 U L2 Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Concatenation Gc=', 'Vc', 'Ʃ', 'Sc', 'Pc', 'A grammar Gc=', 'Vc', 'Ʃ', 'Sc', 'Pc', 'L1L2']

>> Named Entities are: 
 [('GPE', 'L'), ('PERSON', 'L1 U L2 Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('GPE', 'Ʃ'), ('GPE', 'Sc'), ('GPE', 'Pc'), ('GPE', 'Ʃ'), ('GPE', 'Sc'), ('GPE', 'Pc'), ('PERSON', 'L1L2')] 

>> Stemming using Porter Stemmer: 
 [('Therefore', 'therefor'), (',', ','), ('L', 'l'), ('(', '('), ('Gu', 'gu'), (')', ')'), ('⊆', '⊆'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Concatenation', 'concaten'), ('Gc=', 'gc='), ('(', '('), ('Vc', 'vc'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Sc', 'sc'), (',', ','), ('Pc', 'pc'), (')', ')'), ('A', 'a'), ('grammar', 'grammar'), ('Gc=', 'gc='), ('(', '('), ('Vc', 'vc'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Sc', 'sc'), (',', ','), ('Pc', 'pc'), (')', ')'), ('generating', 'gener'), ('L1L2', 'l1l2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Therefore', 'therefor'), (',', ','), ('L', 'l'), ('(', '('), ('Gu', 'gu'), (')', ')'), ('⊆', '⊆'), ('L1', 'l1'), ('U', 'u'), ('L2', 'l2'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Concatenation', 'concaten'), ('Gc=', 'gc='), ('(', '('), ('Vc', 'vc'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Sc', 'sc'), (',', ','), ('Pc', 'pc'), (')', ')'), ('A', 'a'), ('grammar', 'grammar'), ('Gc=', 'gc='), ('(', '('), ('Vc', 'vc'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('Sc', 'sc'), (',', ','), ('Pc', 'pc'), (')', ')'), ('generating', 'generat'), ('L1L2', 'l1l2'), ('.', '.')]

>> Lemmatization: 
 [('Therefore', 'Therefore'), (',', ','), ('L', 'L'), ('(', '('), ('Gu', 'Gu'), (')', ')'), ('⊆', '⊆'), ('L1', 'L1'), ('U', 'U'), ('L2', 'L2'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Concatenation', 'Concatenation'), ('Gc=', 'Gc='), ('(', '('), ('Vc', 'Vc'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('Sc', 'Sc'), (',', ','), ('Pc', 'Pc'), (')', ')'), ('A', 'A'), ('grammar', 'grammar'), ('Gc=', 'Gc='), ('(', '('), ('Vc', 'Vc'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('Sc', 'Sc'), (',', ','), ('Pc', 'Pc'), (')', ')'), ('generating', 'generating'), ('L1L2', 'L1L2'), ('.', '.')]



============================ Sentence 60 =============================

Again we relabeled variables if necessary so that V1 ∩ V2 = Ø and define  		Vc = V1 U V2 U {Sc} This time we let  		Pc= P1 U P2 U { ScS1S2 } If x ∈L1L2 then x = x1x2 , where xi ∈Li  for each i. we may then derive x in Gc as follows: 		Sc S1 S2  *x1 S2  * x1x2 = x First step in the derivation must be ScS1 S2 Where the second step is the derivation of x1 in G1 and the third step is the derivation of x2 in G2. 


>> Tokens are: 
 ['Again', 'relabeled', 'variables', 'necessary', 'V1', '∩', 'V2', '=', 'Ø', 'define', 'Vc', '=', 'V1', 'U', 'V2', 'U', '{', 'Sc', '}', 'This', 'time', 'let', 'Pc=', 'P1', 'U', 'P2', 'U', '{', 'Sc\uf0e0S1S2', '}', 'If', 'x', '∈L1L2', 'x', '=', 'x1x2', ',', 'xi', '∈Li', 'i.', 'may', 'derive', 'x', 'Gc', 'follows', ':', 'Sc', '\uf0e0S1', 'S2', '\uf0e0', '*', 'x1', 'S2', '\uf0e0', '*', 'x1x2', '=', 'x', 'First', 'step', 'derivation', 'must', 'Sc\uf0e0S1', 'S2', 'Where', 'second', 'step', 'derivation', 'x1', 'G1', 'third', 'step', 'derivation', 'x2', 'G2', '.']

>> Bigrams are: 
 [('Again', 'relabeled'), ('relabeled', 'variables'), ('variables', 'necessary'), ('necessary', 'V1'), ('V1', '∩'), ('∩', 'V2'), ('V2', '='), ('=', 'Ø'), ('Ø', 'define'), ('define', 'Vc'), ('Vc', '='), ('=', 'V1'), ('V1', 'U'), ('U', 'V2'), ('V2', 'U'), ('U', '{'), ('{', 'Sc'), ('Sc', '}'), ('}', 'This'), ('This', 'time'), ('time', 'let'), ('let', 'Pc='), ('Pc=', 'P1'), ('P1', 'U'), ('U', 'P2'), ('P2', 'U'), ('U', '{'), ('{', 'Sc\uf0e0S1S2'), ('Sc\uf0e0S1S2', '}'), ('}', 'If'), ('If', 'x'), ('x', '∈L1L2'), ('∈L1L2', 'x'), ('x', '='), ('=', 'x1x2'), ('x1x2', ','), (',', 'xi'), ('xi', '∈Li'), ('∈Li', 'i.'), ('i.', 'may'), ('may', 'derive'), ('derive', 'x'), ('x', 'Gc'), ('Gc', 'follows'), ('follows', ':'), (':', 'Sc'), ('Sc', '\uf0e0S1'), ('\uf0e0S1', 'S2'), ('S2', '\uf0e0'), ('\uf0e0', '*'), ('*', 'x1'), ('x1', 'S2'), ('S2', '\uf0e0'), ('\uf0e0', '*'), ('*', 'x1x2'), ('x1x2', '='), ('=', 'x'), ('x', 'First'), ('First', 'step'), ('step', 'derivation'), ('derivation', 'must'), ('must', 'Sc\uf0e0S1'), ('Sc\uf0e0S1', 'S2'), ('S2', 'Where'), ('Where', 'second'), ('second', 'step'), ('step', 'derivation'), ('derivation', 'x1'), ('x1', 'G1'), ('G1', 'third'), ('third', 'step'), ('step', 'derivation'), ('derivation', 'x2'), ('x2', 'G2'), ('G2', '.')]

>> Trigrams are: 
 [('Again', 'relabeled', 'variables'), ('relabeled', 'variables', 'necessary'), ('variables', 'necessary', 'V1'), ('necessary', 'V1', '∩'), ('V1', '∩', 'V2'), ('∩', 'V2', '='), ('V2', '=', 'Ø'), ('=', 'Ø', 'define'), ('Ø', 'define', 'Vc'), ('define', 'Vc', '='), ('Vc', '=', 'V1'), ('=', 'V1', 'U'), ('V1', 'U', 'V2'), ('U', 'V2', 'U'), ('V2', 'U', '{'), ('U', '{', 'Sc'), ('{', 'Sc', '}'), ('Sc', '}', 'This'), ('}', 'This', 'time'), ('This', 'time', 'let'), ('time', 'let', 'Pc='), ('let', 'Pc=', 'P1'), ('Pc=', 'P1', 'U'), ('P1', 'U', 'P2'), ('U', 'P2', 'U'), ('P2', 'U', '{'), ('U', '{', 'Sc\uf0e0S1S2'), ('{', 'Sc\uf0e0S1S2', '}'), ('Sc\uf0e0S1S2', '}', 'If'), ('}', 'If', 'x'), ('If', 'x', '∈L1L2'), ('x', '∈L1L2', 'x'), ('∈L1L2', 'x', '='), ('x', '=', 'x1x2'), ('=', 'x1x2', ','), ('x1x2', ',', 'xi'), (',', 'xi', '∈Li'), ('xi', '∈Li', 'i.'), ('∈Li', 'i.', 'may'), ('i.', 'may', 'derive'), ('may', 'derive', 'x'), ('derive', 'x', 'Gc'), ('x', 'Gc', 'follows'), ('Gc', 'follows', ':'), ('follows', ':', 'Sc'), (':', 'Sc', '\uf0e0S1'), ('Sc', '\uf0e0S1', 'S2'), ('\uf0e0S1', 'S2', '\uf0e0'), ('S2', '\uf0e0', '*'), ('\uf0e0', '*', 'x1'), ('*', 'x1', 'S2'), ('x1', 'S2', '\uf0e0'), ('S2', '\uf0e0', '*'), ('\uf0e0', '*', 'x1x2'), ('*', 'x1x2', '='), ('x1x2', '=', 'x'), ('=', 'x', 'First'), ('x', 'First', 'step'), ('First', 'step', 'derivation'), ('step', 'derivation', 'must'), ('derivation', 'must', 'Sc\uf0e0S1'), ('must', 'Sc\uf0e0S1', 'S2'), ('Sc\uf0e0S1', 'S2', 'Where'), ('S2', 'Where', 'second'), ('Where', 'second', 'step'), ('second', 'step', 'derivation'), ('step', 'derivation', 'x1'), ('derivation', 'x1', 'G1'), ('x1', 'G1', 'third'), ('G1', 'third', 'step'), ('third', 'step', 'derivation'), ('step', 'derivation', 'x2'), ('derivation', 'x2', 'G2'), ('x2', 'G2', '.')]

>> POS Tags are: 
 [('Again', 'RB'), ('relabeled', 'JJ'), ('variables', 'NNS'), ('necessary', 'JJ'), ('V1', 'NNP'), ('∩', 'NNP'), ('V2', 'NNP'), ('=', 'NNP'), ('Ø', 'NNP'), ('define', 'NN'), ('Vc', 'NNP'), ('=', 'NNP'), ('V1', 'NNP'), ('U', 'NNP'), ('V2', 'NNP'), ('U', 'NNP'), ('{', '('), ('Sc', 'NNP'), ('}', ')'), ('This', 'DT'), ('time', 'NN'), ('let', 'VB'), ('Pc=', 'NNP'), ('P1', 'NNP'), ('U', 'NNP'), ('P2', 'NNP'), ('U', 'NNP'), ('{', '('), ('Sc\uf0e0S1S2', 'NNP'), ('}', ')'), ('If', 'IN'), ('x', 'JJ'), ('∈L1L2', 'NNP'), ('x', 'NNP'), ('=', 'NNP'), ('x1x2', 'NNP'), (',', ','), ('xi', 'NNP'), ('∈Li', 'NNP'), ('i.', 'NN'), ('may', 'MD'), ('derive', 'VB'), ('x', 'NNP'), ('Gc', 'NNP'), ('follows', 'VBZ'), (':', ':'), ('Sc', 'NNP'), ('\uf0e0S1', 'NNP'), ('S2', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('x1', 'NNP'), ('S2', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('x1x2', 'NNP'), ('=', 'NNP'), ('x', 'NNP'), ('First', 'NNP'), ('step', 'NN'), ('derivation', 'NN'), ('must', 'MD'), ('Sc\uf0e0S1', 'VB'), ('S2', 'NNP'), ('Where', 'NNP'), ('second', 'JJ'), ('step', 'NN'), ('derivation', 'NN'), ('x1', 'NNP'), ('G1', 'NNP'), ('third', 'JJ'), ('step', 'NN'), ('derivation', 'NN'), ('x2', 'NNP'), ('G2', 'NNP'), ('.', '.')]

 (S
  Again/RB
  (NP relabeled/JJ variables/NNS)
  (NP
    necessary/JJ
    V1/NNP
    ∩/NNP
    V2/NNP
    =/NNP
    Ø/NNP
    define/NN
    Vc/NNP
    =/NNP
    V1/NNP
    U/NNP
    V2/NNP
    U/NNP)
  {/(
  (NP Sc/NNP)
  }/)
  (NP This/DT time/NN)
  let/VB
  (NP Pc=/NNP P1/NNP U/NNP P2/NNP U/NNP)
  {/(
  (NP ScS1S2/NNP)
  }/)
  If/IN
  (NP x/JJ ∈L1L2/NNP x/NNP =/NNP x1x2/NNP)
  ,/,
  (NP xi/NNP ∈Li/NNP i./NN)
  may/MD
  derive/VB
  (NP x/NNP Gc/NNP)
  follows/VBZ
  :/:
  (NP
    Sc/NNP
    S1/NNP
    S2/NNP
    /NNP
    */NNP
    x1/NNP
    S2/NNP
    /NNP
    */NNP
    x1x2/NNP
    =/NNP
    x/NNP
    First/NNP
    step/NN
    derivation/NN)
  must/MD
  ScS1/VB
  (NP S2/NNP Where/NNP)
  (NP second/JJ step/NN derivation/NN x1/NNP G1/NNP)
  (NP third/JJ step/NN derivation/NN x2/NNP G2/NNP)
  ./.) 


>> Noun Phrases are: 
 ['relabeled variables', 'necessary V1 ∩ V2 = Ø define Vc = V1 U V2 U', 'Sc', 'This time', 'Pc= P1 U P2 U', 'Sc\uf0e0S1S2', 'x ∈L1L2 x = x1x2', 'xi ∈Li i.', 'x Gc', 'Sc \uf0e0S1 S2 \uf0e0 * x1 S2 \uf0e0 * x1x2 = x First step derivation', 'S2 Where', 'second step derivation x1 G1', 'third step derivation x2 G2']

>> Named Entities are: 
 [('PERSON', 'S2 Where')] 

>> Stemming using Porter Stemmer: 
 [('Again', 'again'), ('relabeled', 'relabel'), ('variables', 'variabl'), ('necessary', 'necessari'), ('V1', 'v1'), ('∩', '∩'), ('V2', 'v2'), ('=', '='), ('Ø', 'ø'), ('define', 'defin'), ('Vc', 'vc'), ('=', '='), ('V1', 'v1'), ('U', 'u'), ('V2', 'v2'), ('U', 'u'), ('{', '{'), ('Sc', 'sc'), ('}', '}'), ('This', 'thi'), ('time', 'time'), ('let', 'let'), ('Pc=', 'pc='), ('P1', 'p1'), ('U', 'u'), ('P2', 'p2'), ('U', 'u'), ('{', '{'), ('Sc\uf0e0S1S2', 'sc\uf0e0s1s2'), ('}', '}'), ('If', 'if'), ('x', 'x'), ('∈L1L2', '∈l1l2'), ('x', 'x'), ('=', '='), ('x1x2', 'x1x2'), (',', ','), ('xi', 'xi'), ('∈Li', '∈li'), ('i.', 'i.'), ('may', 'may'), ('derive', 'deriv'), ('x', 'x'), ('Gc', 'gc'), ('follows', 'follow'), (':', ':'), ('Sc', 'sc'), ('\uf0e0S1', '\uf0e0s1'), ('S2', 's2'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('x1', 'x1'), ('S2', 's2'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('x1x2', 'x1x2'), ('=', '='), ('x', 'x'), ('First', 'first'), ('step', 'step'), ('derivation', 'deriv'), ('must', 'must'), ('Sc\uf0e0S1', 'sc\uf0e0s1'), ('S2', 's2'), ('Where', 'where'), ('second', 'second'), ('step', 'step'), ('derivation', 'deriv'), ('x1', 'x1'), ('G1', 'g1'), ('third', 'third'), ('step', 'step'), ('derivation', 'deriv'), ('x2', 'x2'), ('G2', 'g2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Again', 'again'), ('relabeled', 'relabel'), ('variables', 'variabl'), ('necessary', 'necessari'), ('V1', 'v1'), ('∩', '∩'), ('V2', 'v2'), ('=', '='), ('Ø', 'ø'), ('define', 'defin'), ('Vc', 'vc'), ('=', '='), ('V1', 'v1'), ('U', 'u'), ('V2', 'v2'), ('U', 'u'), ('{', '{'), ('Sc', 'sc'), ('}', '}'), ('This', 'this'), ('time', 'time'), ('let', 'let'), ('Pc=', 'pc='), ('P1', 'p1'), ('U', 'u'), ('P2', 'p2'), ('U', 'u'), ('{', '{'), ('Sc\uf0e0S1S2', 'sc\uf0e0s1s2'), ('}', '}'), ('If', 'if'), ('x', 'x'), ('∈L1L2', '∈l1l2'), ('x', 'x'), ('=', '='), ('x1x2', 'x1x2'), (',', ','), ('xi', 'xi'), ('∈Li', '∈li'), ('i.', 'i.'), ('may', 'may'), ('derive', 'deriv'), ('x', 'x'), ('Gc', 'gc'), ('follows', 'follow'), (':', ':'), ('Sc', 'sc'), ('\uf0e0S1', '\uf0e0s1'), ('S2', 's2'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('x1', 'x1'), ('S2', 's2'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('x1x2', 'x1x2'), ('=', '='), ('x', 'x'), ('First', 'first'), ('step', 'step'), ('derivation', 'deriv'), ('must', 'must'), ('Sc\uf0e0S1', 'sc\uf0e0s1'), ('S2', 's2'), ('Where', 'where'), ('second', 'second'), ('step', 'step'), ('derivation', 'deriv'), ('x1', 'x1'), ('G1', 'g1'), ('third', 'third'), ('step', 'step'), ('derivation', 'deriv'), ('x2', 'x2'), ('G2', 'g2'), ('.', '.')]

>> Lemmatization: 
 [('Again', 'Again'), ('relabeled', 'relabeled'), ('variables', 'variable'), ('necessary', 'necessary'), ('V1', 'V1'), ('∩', '∩'), ('V2', 'V2'), ('=', '='), ('Ø', 'Ø'), ('define', 'define'), ('Vc', 'Vc'), ('=', '='), ('V1', 'V1'), ('U', 'U'), ('V2', 'V2'), ('U', 'U'), ('{', '{'), ('Sc', 'Sc'), ('}', '}'), ('This', 'This'), ('time', 'time'), ('let', 'let'), ('Pc=', 'Pc='), ('P1', 'P1'), ('U', 'U'), ('P2', 'P2'), ('U', 'U'), ('{', '{'), ('Sc\uf0e0S1S2', 'Sc\uf0e0S1S2'), ('}', '}'), ('If', 'If'), ('x', 'x'), ('∈L1L2', '∈L1L2'), ('x', 'x'), ('=', '='), ('x1x2', 'x1x2'), (',', ','), ('xi', 'xi'), ('∈Li', '∈Li'), ('i.', 'i.'), ('may', 'may'), ('derive', 'derive'), ('x', 'x'), ('Gc', 'Gc'), ('follows', 'follows'), (':', ':'), ('Sc', 'Sc'), ('\uf0e0S1', '\uf0e0S1'), ('S2', 'S2'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('x1', 'x1'), ('S2', 'S2'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('x1x2', 'x1x2'), ('=', '='), ('x', 'x'), ('First', 'First'), ('step', 'step'), ('derivation', 'derivation'), ('must', 'must'), ('Sc\uf0e0S1', 'Sc\uf0e0S1'), ('S2', 'S2'), ('Where', 'Where'), ('second', 'second'), ('step', 'step'), ('derivation', 'derivation'), ('x1', 'x1'), ('G1', 'G1'), ('third', 'third'), ('step', 'step'), ('derivation', 'derivation'), ('x2', 'x2'), ('G2', 'G2'), ('.', '.')]



============================ Sentence 61 =============================

So x ∈ L1L2  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Kleene (*) A grammar G* = (V, Ʃ, S, P) generating  L1 * Let V = V1 U {S} Where S ∉ V1.The language L1*contains strings of the form x = x1x2 …xk, where each xi ∈ L1. 


>> Tokens are: 
 ['So', 'x', '∈', 'L1L2', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Kleene', '(', '*', ')', 'A', 'grammar', 'G', '*', '=', '(', 'V', ',', 'Ʃ', ',', 'S', ',', 'P', ')', 'generating', 'L1', '*', 'Let', 'V', '=', 'V1', 'U', '{', 'S', '}', 'Where', 'S', '∉', 'V1.The', 'language', 'L1', '*', 'contains', 'strings', 'form', 'x', '=', 'x1x2', '…xk', ',', 'xi', '∈', 'L1', '.']

>> Bigrams are: 
 [('So', 'x'), ('x', '∈'), ('∈', 'L1L2'), ('L1L2', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Kleene'), ('Kleene', '('), ('(', '*'), ('*', ')'), (')', 'A'), ('A', 'grammar'), ('grammar', 'G'), ('G', '*'), ('*', '='), ('=', '('), ('(', 'V'), ('V', ','), (',', 'Ʃ'), ('Ʃ', ','), (',', 'S'), ('S', ','), (',', 'P'), ('P', ')'), (')', 'generating'), ('generating', 'L1'), ('L1', '*'), ('*', 'Let'), ('Let', 'V'), ('V', '='), ('=', 'V1'), ('V1', 'U'), ('U', '{'), ('{', 'S'), ('S', '}'), ('}', 'Where'), ('Where', 'S'), ('S', '∉'), ('∉', 'V1.The'), ('V1.The', 'language'), ('language', 'L1'), ('L1', '*'), ('*', 'contains'), ('contains', 'strings'), ('strings', 'form'), ('form', 'x'), ('x', '='), ('=', 'x1x2'), ('x1x2', '…xk'), ('…xk', ','), (',', 'xi'), ('xi', '∈'), ('∈', 'L1'), ('L1', '.')]

>> Trigrams are: 
 [('So', 'x', '∈'), ('x', '∈', 'L1L2'), ('∈', 'L1L2', 'Unit'), ('L1L2', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Kleene'), ('›', 'Kleene', '('), ('Kleene', '(', '*'), ('(', '*', ')'), ('*', ')', 'A'), (')', 'A', 'grammar'), ('A', 'grammar', 'G'), ('grammar', 'G', '*'), ('G', '*', '='), ('*', '=', '('), ('=', '(', 'V'), ('(', 'V', ','), ('V', ',', 'Ʃ'), (',', 'Ʃ', ','), ('Ʃ', ',', 'S'), (',', 'S', ','), ('S', ',', 'P'), (',', 'P', ')'), ('P', ')', 'generating'), (')', 'generating', 'L1'), ('generating', 'L1', '*'), ('L1', '*', 'Let'), ('*', 'Let', 'V'), ('Let', 'V', '='), ('V', '=', 'V1'), ('=', 'V1', 'U'), ('V1', 'U', '{'), ('U', '{', 'S'), ('{', 'S', '}'), ('S', '}', 'Where'), ('}', 'Where', 'S'), ('Where', 'S', '∉'), ('S', '∉', 'V1.The'), ('∉', 'V1.The', 'language'), ('V1.The', 'language', 'L1'), ('language', 'L1', '*'), ('L1', '*', 'contains'), ('*', 'contains', 'strings'), ('contains', 'strings', 'form'), ('strings', 'form', 'x'), ('form', 'x', '='), ('x', '=', 'x1x2'), ('=', 'x1x2', '…xk'), ('x1x2', '…xk', ','), ('…xk', ',', 'xi'), (',', 'xi', '∈'), ('xi', '∈', 'L1'), ('∈', 'L1', '.')]

>> POS Tags are: 
 [('So', 'RB'), ('x', 'JJ'), ('∈', 'NNP'), ('L1L2', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Kleene', 'NNP'), ('(', '('), ('*', 'NNP'), (')', ')'), ('A', 'NNP'), ('grammar', 'NN'), ('G', 'NNP'), ('*', 'NNP'), ('=', 'NNP'), ('(', '('), ('V', 'NNP'), (',', ','), ('Ʃ', 'NNP'), (',', ','), ('S', 'NNP'), (',', ','), ('P', 'NNP'), (')', ')'), ('generating', 'VBG'), ('L1', 'NNP'), ('*', 'NNP'), ('Let', 'NNP'), ('V', 'NNP'), ('=', 'NNP'), ('V1', 'NNP'), ('U', 'NNP'), ('{', '('), ('S', 'NNP'), ('}', ')'), ('Where', 'NNP'), ('S', 'NNP'), ('∉', 'NNP'), ('V1.The', 'NNP'), ('language', 'NN'), ('L1', 'NNP'), ('*', 'NNP'), ('contains', 'VBZ'), ('strings', 'NNS'), ('form', 'NN'), ('x', 'VBP'), ('=', 'JJ'), ('x1x2', 'NNP'), ('…xk', 'NNP'), (',', ','), ('xi', 'NNP'), ('∈', 'NNP'), ('L1', 'NNP'), ('.', '.')]

 (S
  So/RB
  (NP x/JJ ∈/NNP L1L2/NNP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Kleene/NNP)
  (/(
  (NP */NNP)
  )/)
  (NP A/NNP grammar/NN G/NNP */NNP =/NNP)
  (/(
  (NP V/NNP)
  ,/,
  (NP Ʃ/NNP)
  ,/,
  (NP S/NNP)
  ,/,
  (NP P/NNP)
  )/)
  generating/VBG
  (NP L1/NNP */NNP Let/NNP V/NNP =/NNP V1/NNP U/NNP)
  {/(
  (NP S/NNP)
  }/)
  (NP Where/NNP S/NNP ∉/NNP V1.The/NNP language/NN L1/NNP */NNP)
  contains/VBZ
  (NP strings/NNS form/NN)
  x/VBP
  (NP =/JJ x1x2/NNP …xk/NNP)
  ,/,
  (NP xi/NNP ∈/NNP L1/NNP)
  ./.) 


>> Noun Phrases are: 
 ['x ∈ L1L2 Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› Kleene', '*', 'A grammar G * =', 'V', 'Ʃ', 'S', 'P', 'L1 * Let V = V1 U', 'S', 'Where S ∉ V1.The language L1 *', 'strings form', '= x1x2 …xk', 'xi ∈ L1']

>> Named Entities are: 
 [('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('GPE', 'Ʃ'), ('GPE', 'S'), ('PERSON', 'L1')] 

>> Stemming using Porter Stemmer: 
 [('So', 'so'), ('x', 'x'), ('∈', '∈'), ('L1L2', 'l1l2'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Kleene', 'kleen'), ('(', '('), ('*', '*'), (')', ')'), ('A', 'a'), ('grammar', 'grammar'), ('G', 'g'), ('*', '*'), ('=', '='), ('(', '('), ('V', 'v'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S', 's'), (',', ','), ('P', 'p'), (')', ')'), ('generating', 'gener'), ('L1', 'l1'), ('*', '*'), ('Let', 'let'), ('V', 'v'), ('=', '='), ('V1', 'v1'), ('U', 'u'), ('{', '{'), ('S', 's'), ('}', '}'), ('Where', 'where'), ('S', 's'), ('∉', '∉'), ('V1.The', 'v1.the'), ('language', 'languag'), ('L1', 'l1'), ('*', '*'), ('contains', 'contain'), ('strings', 'string'), ('form', 'form'), ('x', 'x'), ('=', '='), ('x1x2', 'x1x2'), ('…xk', '…xk'), (',', ','), ('xi', 'xi'), ('∈', '∈'), ('L1', 'l1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('So', 'so'), ('x', 'x'), ('∈', '∈'), ('L1L2', 'l1l2'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Kleene', 'kleen'), ('(', '('), ('*', '*'), (')', ')'), ('A', 'a'), ('grammar', 'grammar'), ('G', 'g'), ('*', '*'), ('=', '='), ('(', '('), ('V', 'v'), (',', ','), ('Ʃ', 'ʃ'), (',', ','), ('S', 's'), (',', ','), ('P', 'p'), (')', ')'), ('generating', 'generat'), ('L1', 'l1'), ('*', '*'), ('Let', 'let'), ('V', 'v'), ('=', '='), ('V1', 'v1'), ('U', 'u'), ('{', '{'), ('S', 's'), ('}', '}'), ('Where', 'where'), ('S', 's'), ('∉', '∉'), ('V1.The', 'v1.the'), ('language', 'languag'), ('L1', 'l1'), ('*', '*'), ('contains', 'contain'), ('strings', 'string'), ('form', 'form'), ('x', 'x'), ('=', '='), ('x1x2', 'x1x2'), ('…xk', '…xk'), (',', ','), ('xi', 'xi'), ('∈', '∈'), ('L1', 'l1'), ('.', '.')]

>> Lemmatization: 
 [('So', 'So'), ('x', 'x'), ('∈', '∈'), ('L1L2', 'L1L2'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Kleene', 'Kleene'), ('(', '('), ('*', '*'), (')', ')'), ('A', 'A'), ('grammar', 'grammar'), ('G', 'G'), ('*', '*'), ('=', '='), ('(', '('), ('V', 'V'), (',', ','), ('Ʃ', 'Ʃ'), (',', ','), ('S', 'S'), (',', ','), ('P', 'P'), (')', ')'), ('generating', 'generating'), ('L1', 'L1'), ('*', '*'), ('Let', 'Let'), ('V', 'V'), ('=', '='), ('V1', 'V1'), ('U', 'U'), ('{', '{'), ('S', 'S'), ('}', '}'), ('Where', 'Where'), ('S', 'S'), ('∉', '∉'), ('V1.The', 'V1.The'), ('language', 'language'), ('L1', 'L1'), ('*', '*'), ('contains', 'contains'), ('strings', 'string'), ('form', 'form'), ('x', 'x'), ('=', '='), ('x1x2', 'x1x2'), ('…xk', '…xk'), (',', ','), ('xi', 'xi'), ('∈', '∈'), ('L1', 'L1'), ('.', '.')]



============================ Sentence 62 =============================

Since each xi can be derived from S1, then to derive x from S it is enough to be able to derive a string of k S1‘S. 


>> Tokens are: 
 ['Since', 'xi', 'derived', 'S1', ',', 'derive', 'x', 'S', 'enough', 'able', 'derive', 'string', 'k', 'S1', '‘', 'S', '.']

>> Bigrams are: 
 [('Since', 'xi'), ('xi', 'derived'), ('derived', 'S1'), ('S1', ','), (',', 'derive'), ('derive', 'x'), ('x', 'S'), ('S', 'enough'), ('enough', 'able'), ('able', 'derive'), ('derive', 'string'), ('string', 'k'), ('k', 'S1'), ('S1', '‘'), ('‘', 'S'), ('S', '.')]

>> Trigrams are: 
 [('Since', 'xi', 'derived'), ('xi', 'derived', 'S1'), ('derived', 'S1', ','), ('S1', ',', 'derive'), (',', 'derive', 'x'), ('derive', 'x', 'S'), ('x', 'S', 'enough'), ('S', 'enough', 'able'), ('enough', 'able', 'derive'), ('able', 'derive', 'string'), ('derive', 'string', 'k'), ('string', 'k', 'S1'), ('k', 'S1', '‘'), ('S1', '‘', 'S'), ('‘', 'S', '.')]

>> POS Tags are: 
 [('Since', 'IN'), ('xi', 'NNP'), ('derived', 'VBD'), ('S1', 'NNP'), (',', ','), ('derive', 'JJ'), ('x', 'NN'), ('S', 'NNP'), ('enough', 'RB'), ('able', 'JJ'), ('derive', 'JJ'), ('string', 'NN'), ('k', 'NN'), ('S1', 'NNP'), ('‘', 'NNP'), ('S', 'NNP'), ('.', '.')]

 (S
  Since/IN
  (NP xi/NNP)
  derived/VBD
  (NP S1/NNP)
  ,/,
  (NP derive/JJ x/NN S/NNP)
  enough/RB
  (NP able/JJ derive/JJ string/NN k/NN S1/NNP ‘/NNP S/NNP)
  ./.) 


>> Noun Phrases are: 
 ['xi', 'S1', 'derive x S', 'able derive string k S1 ‘ S']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Since', 'sinc'), ('xi', 'xi'), ('derived', 'deriv'), ('S1', 's1'), (',', ','), ('derive', 'deriv'), ('x', 'x'), ('S', 's'), ('enough', 'enough'), ('able', 'abl'), ('derive', 'deriv'), ('string', 'string'), ('k', 'k'), ('S1', 's1'), ('‘', '‘'), ('S', 's'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Since', 'sinc'), ('xi', 'xi'), ('derived', 'deriv'), ('S1', 's1'), (',', ','), ('derive', 'deriv'), ('x', 'x'), ('S', 's'), ('enough', 'enough'), ('able', 'abl'), ('derive', 'deriv'), ('string', 'string'), ('k', 'k'), ('S1', 's1'), ('‘', '‘'), ('S', 's'), ('.', '.')]

>> Lemmatization: 
 [('Since', 'Since'), ('xi', 'xi'), ('derived', 'derived'), ('S1', 'S1'), (',', ','), ('derive', 'derive'), ('x', 'x'), ('S', 'S'), ('enough', 'enough'), ('able', 'able'), ('derive', 'derive'), ('string', 'string'), ('k', 'k'), ('S1', 'S1'), ('‘', '‘'), ('S', 'S'), ('.', '.')]



============================ Sentence 63 =============================

We can accomplish this by including the productions 		SS1S |  ^ In P. Therefore, let 		P = P1U { SS1S | ^ } The proof that L1 * ⊆ L(G*) is straightforward. 


>> Tokens are: 
 ['We', 'accomplish', 'including', 'productions', 'S\uf0e0S1S', '|', '^', 'In', 'P.', 'Therefore', ',', 'let', 'P', '=', 'P1U', '{', 'S\uf0e0S1S', '|', '^', '}', 'The', 'proof', 'L1', '*', '⊆', 'L', '(', 'G', '*', ')', 'straightforward', '.']

>> Bigrams are: 
 [('We', 'accomplish'), ('accomplish', 'including'), ('including', 'productions'), ('productions', 'S\uf0e0S1S'), ('S\uf0e0S1S', '|'), ('|', '^'), ('^', 'In'), ('In', 'P.'), ('P.', 'Therefore'), ('Therefore', ','), (',', 'let'), ('let', 'P'), ('P', '='), ('=', 'P1U'), ('P1U', '{'), ('{', 'S\uf0e0S1S'), ('S\uf0e0S1S', '|'), ('|', '^'), ('^', '}'), ('}', 'The'), ('The', 'proof'), ('proof', 'L1'), ('L1', '*'), ('*', '⊆'), ('⊆', 'L'), ('L', '('), ('(', 'G'), ('G', '*'), ('*', ')'), (')', 'straightforward'), ('straightforward', '.')]

>> Trigrams are: 
 [('We', 'accomplish', 'including'), ('accomplish', 'including', 'productions'), ('including', 'productions', 'S\uf0e0S1S'), ('productions', 'S\uf0e0S1S', '|'), ('S\uf0e0S1S', '|', '^'), ('|', '^', 'In'), ('^', 'In', 'P.'), ('In', 'P.', 'Therefore'), ('P.', 'Therefore', ','), ('Therefore', ',', 'let'), (',', 'let', 'P'), ('let', 'P', '='), ('P', '=', 'P1U'), ('=', 'P1U', '{'), ('P1U', '{', 'S\uf0e0S1S'), ('{', 'S\uf0e0S1S', '|'), ('S\uf0e0S1S', '|', '^'), ('|', '^', '}'), ('^', '}', 'The'), ('}', 'The', 'proof'), ('The', 'proof', 'L1'), ('proof', 'L1', '*'), ('L1', '*', '⊆'), ('*', '⊆', 'L'), ('⊆', 'L', '('), ('L', '(', 'G'), ('(', 'G', '*'), ('G', '*', ')'), ('*', ')', 'straightforward'), (')', 'straightforward', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('accomplish', 'VBP'), ('including', 'VBG'), ('productions', 'NNS'), ('S\uf0e0S1S', 'NNP'), ('|', 'NNP'), ('^', 'NNP'), ('In', 'IN'), ('P.', 'NNP'), ('Therefore', 'NNP'), (',', ','), ('let', 'VB'), ('P', 'NNP'), ('=', 'NNP'), ('P1U', 'NNP'), ('{', '('), ('S\uf0e0S1S', 'NNP'), ('|', 'NNP'), ('^', 'NNP'), ('}', ')'), ('The', 'DT'), ('proof', 'JJ'), ('L1', 'NNP'), ('*', 'NNP'), ('⊆', 'NNP'), ('L', 'NNP'), ('(', '('), ('G', 'NNP'), ('*', 'NNP'), (')', ')'), ('straightforward', 'NN'), ('.', '.')]

 (S
  We/PRP
  accomplish/VBP
  including/VBG
  (NP productions/NNS SS1S/NNP |/NNP ^/NNP)
  In/IN
  (NP P./NNP Therefore/NNP)
  ,/,
  let/VB
  (NP P/NNP =/NNP P1U/NNP)
  {/(
  (NP SS1S/NNP |/NNP ^/NNP)
  }/)
  (NP The/DT proof/JJ L1/NNP */NNP ⊆/NNP L/NNP)
  (/(
  (NP G/NNP */NNP)
  )/)
  (NP straightforward/NN)
  ./.) 


>> Noun Phrases are: 
 ['productions S\uf0e0S1S | ^', 'P. Therefore', 'P = P1U', 'S\uf0e0S1S | ^', 'The proof L1 * ⊆ L', 'G *', 'straightforward']

>> Named Entities are: 
 [('PERSON', 'P')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('accomplish', 'accomplish'), ('including', 'includ'), ('productions', 'product'), ('S\uf0e0S1S', 's\uf0e0s1'), ('|', '|'), ('^', '^'), ('In', 'in'), ('P.', 'p.'), ('Therefore', 'therefor'), (',', ','), ('let', 'let'), ('P', 'p'), ('=', '='), ('P1U', 'p1u'), ('{', '{'), ('S\uf0e0S1S', 's\uf0e0s1'), ('|', '|'), ('^', '^'), ('}', '}'), ('The', 'the'), ('proof', 'proof'), ('L1', 'l1'), ('*', '*'), ('⊆', '⊆'), ('L', 'l'), ('(', '('), ('G', 'g'), ('*', '*'), (')', ')'), ('straightforward', 'straightforward'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('accomplish', 'accomplish'), ('including', 'includ'), ('productions', 'product'), ('S\uf0e0S1S', 's\uf0e0s1s'), ('|', '|'), ('^', '^'), ('In', 'in'), ('P.', 'p.'), ('Therefore', 'therefor'), (',', ','), ('let', 'let'), ('P', 'p'), ('=', '='), ('P1U', 'p1u'), ('{', '{'), ('S\uf0e0S1S', 's\uf0e0s1s'), ('|', '|'), ('^', '^'), ('}', '}'), ('The', 'the'), ('proof', 'proof'), ('L1', 'l1'), ('*', '*'), ('⊆', '⊆'), ('L', 'l'), ('(', '('), ('G', 'g'), ('*', '*'), (')', ')'), ('straightforward', 'straightforward'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('accomplish', 'accomplish'), ('including', 'including'), ('productions', 'production'), ('S\uf0e0S1S', 'S\uf0e0S1S'), ('|', '|'), ('^', '^'), ('In', 'In'), ('P.', 'P.'), ('Therefore', 'Therefore'), (',', ','), ('let', 'let'), ('P', 'P'), ('=', '='), ('P1U', 'P1U'), ('{', '{'), ('S\uf0e0S1S', 'S\uf0e0S1S'), ('|', '|'), ('^', '^'), ('}', '}'), ('The', 'The'), ('proof', 'proof'), ('L1', 'L1'), ('*', '*'), ('⊆', '⊆'), ('L', 'L'), ('(', '('), ('G', 'G'), ('*', '*'), (')', ')'), ('straightforward', 'straightforward'), ('.', '.')]



============================ Sentence 64 =============================

If x ∈ L(G*) , on the other hand, then either x = or x can be derived from some string of the form S1k  in G* . 


>> Tokens are: 
 ['If', 'x', '∈', 'L', '(', 'G', '*', ')', ',', 'hand', ',', 'either', 'x', '=', 'x', 'derived', 'string', 'form', 'S1k', 'G', '*', '.']

>> Bigrams are: 
 [('If', 'x'), ('x', '∈'), ('∈', 'L'), ('L', '('), ('(', 'G'), ('G', '*'), ('*', ')'), (')', ','), (',', 'hand'), ('hand', ','), (',', 'either'), ('either', 'x'), ('x', '='), ('=', 'x'), ('x', 'derived'), ('derived', 'string'), ('string', 'form'), ('form', 'S1k'), ('S1k', 'G'), ('G', '*'), ('*', '.')]

>> Trigrams are: 
 [('If', 'x', '∈'), ('x', '∈', 'L'), ('∈', 'L', '('), ('L', '(', 'G'), ('(', 'G', '*'), ('G', '*', ')'), ('*', ')', ','), (')', ',', 'hand'), (',', 'hand', ','), ('hand', ',', 'either'), (',', 'either', 'x'), ('either', 'x', '='), ('x', '=', 'x'), ('=', 'x', 'derived'), ('x', 'derived', 'string'), ('derived', 'string', 'form'), ('string', 'form', 'S1k'), ('form', 'S1k', 'G'), ('S1k', 'G', '*'), ('G', '*', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('x', 'JJ'), ('∈', 'FW'), ('L', 'NNP'), ('(', '('), ('G', 'NNP'), ('*', 'NNP'), (')', ')'), (',', ','), ('hand', 'NN'), (',', ','), ('either', 'CC'), ('x', 'JJ'), ('=', 'NNP'), ('x', 'NNP'), ('derived', 'VBD'), ('string', 'VBG'), ('form', 'NN'), ('S1k', 'NNP'), ('G', 'NNP'), ('*', 'NNP'), ('.', '.')]

 (S
  If/IN
  x/JJ
  ∈/FW
  (NP L/NNP)
  (/(
  (NP G/NNP */NNP)
  )/)
  ,/,
  (NP hand/NN)
  ,/,
  either/CC
  (NP x/JJ =/NNP x/NNP)
  derived/VBD
  string/VBG
  (NP form/NN S1k/NNP G/NNP */NNP)
  ./.) 


>> Noun Phrases are: 
 ['L', 'G *', 'hand', 'x = x', 'form S1k G *']

>> Named Entities are: 
 [('ORGANIZATION', 'S1k')] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('x', 'x'), ('∈', '∈'), ('L', 'l'), ('(', '('), ('G', 'g'), ('*', '*'), (')', ')'), (',', ','), ('hand', 'hand'), (',', ','), ('either', 'either'), ('x', 'x'), ('=', '='), ('x', 'x'), ('derived', 'deriv'), ('string', 'string'), ('form', 'form'), ('S1k', 's1k'), ('G', 'g'), ('*', '*'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('x', 'x'), ('∈', '∈'), ('L', 'l'), ('(', '('), ('G', 'g'), ('*', '*'), (')', ')'), (',', ','), ('hand', 'hand'), (',', ','), ('either', 'either'), ('x', 'x'), ('=', '='), ('x', 'x'), ('derived', 'deriv'), ('string', 'string'), ('form', 'form'), ('S1k', 's1k'), ('G', 'g'), ('*', '*'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('x', 'x'), ('∈', '∈'), ('L', 'L'), ('(', '('), ('G', 'G'), ('*', '*'), (')', ')'), (',', ','), ('hand', 'hand'), (',', ','), ('either', 'either'), ('x', 'x'), ('=', '='), ('x', 'x'), ('derived', 'derived'), ('string', 'string'), ('form', 'form'), ('S1k', 'S1k'), ('G', 'G'), ('*', '*'), ('.', '.')]



============================ Sentence 65 =============================

In the second case, since the only production in G* beginning with S1 are those in G1, we may conclude that  	x∈ L(G1)k ⊆ L(G1)* . 


>> Tokens are: 
 ['In', 'second', 'case', ',', 'since', 'production', 'G', '*', 'beginning', 'S1', 'G1', ',', 'may', 'conclude', 'x∈', 'L', '(', 'G1', ')', 'k', '⊆', 'L', '(', 'G1', ')', '*', '.']

>> Bigrams are: 
 [('In', 'second'), ('second', 'case'), ('case', ','), (',', 'since'), ('since', 'production'), ('production', 'G'), ('G', '*'), ('*', 'beginning'), ('beginning', 'S1'), ('S1', 'G1'), ('G1', ','), (',', 'may'), ('may', 'conclude'), ('conclude', 'x∈'), ('x∈', 'L'), ('L', '('), ('(', 'G1'), ('G1', ')'), (')', 'k'), ('k', '⊆'), ('⊆', 'L'), ('L', '('), ('(', 'G1'), ('G1', ')'), (')', '*'), ('*', '.')]

>> Trigrams are: 
 [('In', 'second', 'case'), ('second', 'case', ','), ('case', ',', 'since'), (',', 'since', 'production'), ('since', 'production', 'G'), ('production', 'G', '*'), ('G', '*', 'beginning'), ('*', 'beginning', 'S1'), ('beginning', 'S1', 'G1'), ('S1', 'G1', ','), ('G1', ',', 'may'), (',', 'may', 'conclude'), ('may', 'conclude', 'x∈'), ('conclude', 'x∈', 'L'), ('x∈', 'L', '('), ('L', '(', 'G1'), ('(', 'G1', ')'), ('G1', ')', 'k'), (')', 'k', '⊆'), ('k', '⊆', 'L'), ('⊆', 'L', '('), ('L', '(', 'G1'), ('(', 'G1', ')'), ('G1', ')', '*'), (')', '*', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('second', 'JJ'), ('case', 'NN'), (',', ','), ('since', 'IN'), ('production', 'NN'), ('G', 'NNP'), ('*', 'NNP'), ('beginning', 'VBG'), ('S1', 'NNP'), ('G1', 'NNP'), (',', ','), ('may', 'MD'), ('conclude', 'VB'), ('x∈', 'NNP'), ('L', 'NNP'), ('(', '('), ('G1', 'NNP'), (')', ')'), ('k', 'VBD'), ('⊆', 'NNP'), ('L', 'NNP'), ('(', '('), ('G1', 'NNP'), (')', ')'), ('*', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP second/JJ case/NN)
  ,/,
  since/IN
  (NP production/NN G/NNP */NNP)
  beginning/VBG
  (NP S1/NNP G1/NNP)
  ,/,
  may/MD
  conclude/VB
  (NP x∈/NNP L/NNP)
  (/(
  (NP G1/NNP)
  )/)
  k/VBD
  (NP ⊆/NNP L/NNP)
  (/(
  (NP G1/NNP)
  )/)
  (NP */NN)
  ./.) 


>> Noun Phrases are: 
 ['second case', 'production G *', 'S1 G1', 'x∈ L', 'G1', '⊆ L', 'G1', '*']

>> Named Entities are: 
 [('PERSON', 'S1 G1')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('second', 'second'), ('case', 'case'), (',', ','), ('since', 'sinc'), ('production', 'product'), ('G', 'g'), ('*', '*'), ('beginning', 'begin'), ('S1', 's1'), ('G1', 'g1'), (',', ','), ('may', 'may'), ('conclude', 'conclud'), ('x∈', 'x∈'), ('L', 'l'), ('(', '('), ('G1', 'g1'), (')', ')'), ('k', 'k'), ('⊆', '⊆'), ('L', 'l'), ('(', '('), ('G1', 'g1'), (')', ')'), ('*', '*'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('second', 'second'), ('case', 'case'), (',', ','), ('since', 'sinc'), ('production', 'product'), ('G', 'g'), ('*', '*'), ('beginning', 'begin'), ('S1', 's1'), ('G1', 'g1'), (',', ','), ('may', 'may'), ('conclude', 'conclud'), ('x∈', 'x∈'), ('L', 'l'), ('(', '('), ('G1', 'g1'), (')', ')'), ('k', 'k'), ('⊆', '⊆'), ('L', 'l'), ('(', '('), ('G1', 'g1'), (')', ')'), ('*', '*'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('second', 'second'), ('case', 'case'), (',', ','), ('since', 'since'), ('production', 'production'), ('G', 'G'), ('*', '*'), ('beginning', 'beginning'), ('S1', 'S1'), ('G1', 'G1'), (',', ','), ('may', 'may'), ('conclude', 'conclude'), ('x∈', 'x∈'), ('L', 'L'), ('(', '('), ('G1', 'G1'), (')', ')'), ('k', 'k'), ('⊆', '⊆'), ('L', 'L'), ('(', '('), ('G1', 'G1'), (')', ')'), ('*', '*'), ('.', '.')]



============================ Sentence 66 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› End of Unit - 3   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› 


>> Tokens are: 
 ['Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'End', 'Unit', '-', '3', 'Unit', '–', '3', ':', 'Context', 'Free', 'Grammar', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Theory', 'Computation', '(', '2160704', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›']

>> Bigrams are: 
 [('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'End'), ('End', 'Unit'), ('Unit', '-'), ('-', '3'), ('3', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', ':'), (':', 'Context'), ('Context', 'Free'), ('Free', 'Grammar'), ('Grammar', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Theory'), ('Theory', 'Computation'), ('Computation', '('), ('(', '2160704'), ('2160704', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›')]

>> Trigrams are: 
 [('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'End'), ('›', 'End', 'Unit'), ('End', 'Unit', '-'), ('Unit', '-', '3'), ('-', '3', 'Unit'), ('3', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', ':'), ('3', ':', 'Context'), (':', 'Context', 'Free'), ('Context', 'Free', 'Grammar'), ('Free', 'Grammar', 'Darshan'), ('Grammar', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Theory'), ('›', 'Theory', 'Computation'), ('Theory', 'Computation', '('), ('Computation', '(', '2160704'), ('(', '2160704', ')'), ('2160704', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›')]

>> POS Tags are: 
 [('Unit', 'NNP'), ('–', 'VBZ'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('End', 'NNP'), ('Unit', 'NNP'), ('-', ':'), ('3', 'CD'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), (':', ':'), ('Context', 'NNP'), ('Free', 'NNP'), ('Grammar', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Theory', 'NNP'), ('Computation', 'NNP'), ('(', '('), ('2160704', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN')]

 (S
  (NP Unit/NNP)
  –/VBZ
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ End/NNP Unit/NNP)
  -/:
  3/CD
  (NP Unit/NNP)
  –/VBD
  3/CD
  :/:
  (NP
    Context/NNP
    Free/NNP
    Grammar/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Theory/NNP Computation/NNP)
  (/(
  2160704/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN)) 


>> Noun Phrases are: 
 ['Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '› End Unit', 'Unit', 'Context Free Grammar Darshan Institute Engineering', 'Technology ‹', '› Theory Computation', 'Darshan Institute Engineering', 'Technology ‹', '›']

>> Named Entities are: 
 [('GPE', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Unit'), ('PERSON', 'Unit'), ('PERSON', 'Context Free Grammar Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('End', 'end'), ('Unit', 'unit'), ('-', '-'), ('3', '3'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Stemming using Snowball Stemmer: 
 [('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('End', 'end'), ('Unit', 'unit'), ('-', '-'), ('3', '3'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'context'), ('Free', 'free'), ('Grammar', 'grammar'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'theori'), ('Computation', 'comput'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Lemmatization: 
 [('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('End', 'End'), ('Unit', 'Unit'), ('-', '-'), ('3', '3'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), (':', ':'), ('Context', 'Context'), ('Free', 'Free'), ('Grammar', 'Grammar'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Theory', 'Theory'), ('Computation', 'Computation'), ('(', '('), ('2160704', '2160704'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›')]

