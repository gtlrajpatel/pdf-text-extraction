

========================== Sentence 1 ===========================

 AI-18 FeedBack ANN 

Tokens are: 
>> ['AI', '-18', 'FeedBack', 'ANN'] 

 UPOS tags are: 
>> [('AI', 'PROPN'), ('-18', 'NUM'), ('FeedBack', 'NOUN'), ('ANN', 'PROPN')] 

 XPOS tags are: 
>> [('AI', 'NNP'), ('-18', 'CD'), ('FeedBack', 'NN'), ('ANN', 'NNP')] 

 Lemmas are: 
>> [('AI', 'AI'), ('-18', '-18'), ('FeedBack', 'feedback'), ('ANN', 'ANN')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), (('-18', 'AI'), 'nummod'), (('FeedBack', 'AI'), 'list'), (('ANN', 'AI'), 'flat')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 Here, feedback loops are allowed. 

Tokens are: 
>> ['Here', ',', 'feedback', 'loops', 'are', 'allowed', '.'] 

 UPOS tags are: 
>> [('Here', 'ADV'), (',', 'PUNCT'), ('feedback', 'NOUN'), ('loops', 'NOUN'), ('are', 'AUX'), ('allowed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Here', 'RB'), (',', ','), ('feedback', 'NN'), ('loops', 'NNS'), ('are', 'VBP'), ('allowed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Here', 'here'), (',', ','), ('feedback', 'feedback'), ('loops', 'loop'), ('are', 'be'), ('allowed', 'allow'), ('.', '.')] 

 Dependency tags are: 
>> [(('Here', 'allowed'), 'advmod'), ((',', 'allowed'), 'punct'), (('feedback', 'loops'), 'compound'), (('loops', 'allowed'), 'nsubj:pass'), (('are', 'allowed'), 'aux:pass'), (('allowed', 'root'), 'root'), (('.', 'allowed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 3 ===========================

 They are used in content addressable memories. 

Tokens are: 
>> ['They', 'are', 'used', 'in', 'content', 'addressable', 'memories', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('are', 'AUX'), ('used', 'VERB'), ('in', 'ADP'), ('content', 'NOUN'), ('addressable', 'ADJ'), ('memories', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('are', 'VBP'), ('used', 'VBN'), ('in', 'IN'), ('content', 'NN'), ('addressable', 'JJ'), ('memories', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('are', 'be'), ('used', 'use'), ('in', 'in'), ('content', 'content'), ('addressable', 'addressable'), ('memories', 'memory'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('in', 'content'), 'case'), (('content', 'used'), 'obl'), (('addressable', 'memories'), 'amod'), (('memories', 'content'), 'conj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 4 ===========================

 Working of ANNs 

Tokens are: 
>> ['Working', 'of', 'ANNs'] 

 UPOS tags are: 
>> [('Working', 'VERB'), ('of', 'ADP'), ('ANNs', 'PROPN')] 

 XPOS tags are: 
>> [('Working', 'VBG'), ('of', 'IN'), ('ANNs', 'NNP')] 

 Lemmas are: 
>> [('Working', 'work'), ('of', 'of'), ('ANNs', 'ANNs')] 

 Dependency tags are: 
>> [(('Working', 'root'), 'root'), (('of', 'ANNs'), 'case'), (('ANNs', 'Working'), 'obl')]

 Named Entities are: 
>> [('ANNs', 'ORG')]

========================== Sentence 5 ===========================

 In the topology diagrams shown, each arrow represents a connection between two neurons and indicates the pathway for the flow of information. 

Tokens are: 
>> ['In', 'the', 'topology', 'diagrams', 'shown', ',', 'each', 'arrow', 'represents', 'a', 'connection', 'between', 'two', 'neurons', 'and', 'indicates', 'the', 'pathway', 'for', 'the', 'flow', 'of', 'information', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('topology', 'NOUN'), ('diagrams', 'NOUN'), ('shown', 'VERB'), (',', 'PUNCT'), ('each', 'DET'), ('arrow', 'NOUN'), ('represents', 'VERB'), ('a', 'DET'), ('connection', 'NOUN'), ('between', 'ADP'), ('two', 'NUM'), ('neurons', 'NOUN'), ('and', 'CCONJ'), ('indicates', 'VERB'), ('the', 'DET'), ('pathway', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('flow', 'NOUN'), ('of', 'ADP'), ('information', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('topology', 'NN'), ('diagrams', 'NNS'), ('shown', 'VBN'), (',', ','), ('each', 'DT'), ('arrow', 'NN'), ('represents', 'VBZ'), ('a', 'DT'), ('connection', 'NN'), ('between', 'IN'), ('two', 'CD'), ('neurons', 'NNS'), ('and', 'CC'), ('indicates', 'VBZ'), ('the', 'DT'), ('pathway', 'NN'), ('for', 'IN'), ('the', 'DT'), ('flow', 'NN'), ('of', 'IN'), ('information', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('topology', 'topology'), ('diagrams', 'diagram'), ('shown', 'show'), (',', ','), ('each', 'each'), ('arrow', 'arrow'), ('represents', 'represent'), ('a', 'a'), ('connection', 'connection'), ('between', 'between'), ('two', 'two'), ('neurons', 'neuron'), ('and', 'and'), ('indicates', 'indicate'), ('the', 'the'), ('pathway', 'pathway'), ('for', 'for'), ('the', 'the'), ('flow', 'flow'), ('of', 'of'), ('information', 'information'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'diagrams'), 'case'), (('the', 'diagrams'), 'det'), (('topology', 'diagrams'), 'compound'), (('diagrams', 'represents'), 'obl'), (('shown', 'diagrams'), 'acl'), ((',', 'represents'), 'punct'), (('each', 'arrow'), 'det'), (('arrow', 'represents'), 'nsubj'), (('represents', 'root'), 'root'), (('a', 'connection'), 'det'), (('connection', 'represents'), 'obj'), (('between', 'neurons'), 'case'), (('two', 'neurons'), 'nummod'), (('neurons', 'connection'), 'nmod'), (('and', 'indicates'), 'cc'), (('indicates', 'represents'), 'conj'), (('the', 'pathway'), 'det'), (('pathway', 'indicates'), 'obj'), (('for', 'flow'), 'case'), (('the', 'flow'), 'det'), (('flow', 'pathway'), 'nmod'), (('of', 'information'), 'case'), (('information', 'flow'), 'nmod'), (('.', 'represents'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 6 ===========================

 Each connection has a weight, an integer number that controls the signal between the two neurons. 

Tokens are: 
>> ['Each', 'connection', 'has', 'a', 'weight', ',', 'an', 'integer', 'number', 'that', 'controls', 'the', 'signal', 'between', 'the', 'two', 'neurons', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('connection', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('weight', 'NOUN'), (',', 'PUNCT'), ('an', 'DET'), ('integer', 'NOUN'), ('number', 'NOUN'), ('that', 'PRON'), ('controls', 'VERB'), ('the', 'DET'), ('signal', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('two', 'NUM'), ('neurons', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('connection', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('weight', 'NN'), (',', ','), ('an', 'DT'), ('integer', 'NN'), ('number', 'NN'), ('that', 'WDT'), ('controls', 'VBZ'), ('the', 'DT'), ('signal', 'NN'), ('between', 'IN'), ('the', 'DT'), ('two', 'CD'), ('neurons', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('connection', 'connection'), ('has', 'have'), ('a', 'a'), ('weight', 'weight'), (',', ','), ('an', 'a'), ('integer', 'integer'), ('number', 'number'), ('that', 'that'), ('controls', 'control'), ('the', 'the'), ('signal', 'signal'), ('between', 'between'), ('the', 'the'), ('two', 'two'), ('neurons', 'neuron'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'connection'), 'det'), (('connection', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('a', 'weight'), 'det'), (('weight', 'has'), 'obj'), ((',', 'number'), 'punct'), (('an', 'number'), 'det'), (('integer', 'number'), 'compound'), (('number', 'weight'), 'appos'), (('that', 'controls'), 'nsubj'), (('controls', 'number'), 'acl:relcl'), (('the', 'signal'), 'det'), (('signal', 'controls'), 'obj'), (('between', 'neurons'), 'case'), (('the', 'neurons'), 'det'), (('two', 'neurons'), 'nummod'), (('neurons', 'signal'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 7 ===========================

 If the network generates a “good or desired” output, there is no need to adjust the weights. 

Tokens are: 
>> ['If', 'the', 'network', 'generates', 'a', '“', 'good', 'or', 'desired', '”', 'output', ',', 'there', 'is', 'no', 'need', 'to', 'adjust', 'the', 'weights', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('network', 'NOUN'), ('generates', 'VERB'), ('a', 'DET'), ('“', 'PUNCT'), ('good', 'ADJ'), ('or', 'CCONJ'), ('desired', 'VERB'), ('”', 'PUNCT'), ('output', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('need', 'NOUN'), ('to', 'PART'), ('adjust', 'VERB'), ('the', 'DET'), ('weights', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('network', 'NN'), ('generates', 'VBZ'), ('a', 'DT'), ('“', '``'), ('good', 'JJ'), ('or', 'CC'), ('desired', 'VBN'), ('”', "''"), ('output', 'NN'), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('need', 'NN'), ('to', 'TO'), ('adjust', 'VB'), ('the', 'DT'), ('weights', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('network', 'network'), ('generates', 'generate'), ('a', 'a'), ('“', "''"), ('good', 'good'), ('or', 'or'), ('desired', 'desire'), ('”', "''"), ('output', 'output'), (',', ','), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('need', 'need'), ('to', 'to'), ('adjust', 'adjust'), ('the', 'the'), ('weights', 'weight'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'generates'), 'mark'), (('the', 'network'), 'det'), (('network', 'generates'), 'nsubj'), (('generates', 'is'), 'advcl'), (('a', 'output'), 'det'), (('“', 'good'), 'punct'), (('good', 'output'), 'amod'), (('or', 'desired'), 'cc'), (('desired', 'good'), 'conj'), (('”', 'good'), 'punct'), (('output', 'generates'), 'obj'), ((',', 'is'), 'punct'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('no', 'need'), 'det'), (('need', 'is'), 'nsubj'), (('to', 'adjust'), 'mark'), (('adjust', 'need'), 'acl'), (('the', 'weights'), 'det'), (('weights', 'adjust'), 'obj'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 However, if the network generates a “poor or undesired” output or an error, then the system alters the weights in order to improve subsequent results. 

Tokens are: 
>> ['However', ',', 'if', 'the', 'network', 'generates', 'a', '“', 'poor', 'or', 'undesired', '”', 'output', 'or', 'an', 'error', ',', 'then', 'the', 'system', 'alters', 'the', 'weights', 'in', 'order', 'to', 'improve', 'subsequent', 'results', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('if', 'SCONJ'), ('the', 'DET'), ('network', 'NOUN'), ('generates', 'VERB'), ('a', 'DET'), ('“', 'PUNCT'), ('poor', 'ADJ'), ('or', 'CCONJ'), ('undesired', 'ADJ'), ('”', 'PUNCT'), ('output', 'NOUN'), ('or', 'CCONJ'), ('an', 'DET'), ('error', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('the', 'DET'), ('system', 'NOUN'), ('alters', 'VERB'), ('the', 'DET'), ('weights', 'NOUN'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('improve', 'VERB'), ('subsequent', 'ADJ'), ('results', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('if', 'IN'), ('the', 'DT'), ('network', 'NN'), ('generates', 'VBZ'), ('a', 'DT'), ('“', '``'), ('poor', 'JJ'), ('or', 'CC'), ('undesired', 'JJ'), ('”', "''"), ('output', 'NN'), ('or', 'CC'), ('an', 'DT'), ('error', 'NN'), (',', ','), ('then', 'RB'), ('the', 'DT'), ('system', 'NN'), ('alters', 'VBZ'), ('the', 'DT'), ('weights', 'NNS'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('improve', 'VB'), ('subsequent', 'JJ'), ('results', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('if', 'if'), ('the', 'the'), ('network', 'network'), ('generates', 'generate'), ('a', 'a'), ('“', "''"), ('poor', 'poor'), ('or', 'or'), ('undesired', 'undesired'), ('”', "''"), ('output', 'output'), ('or', 'or'), ('an', 'a'), ('error', 'error'), (',', ','), ('then', 'then'), ('the', 'the'), ('system', 'system'), ('alters', 'alter'), ('the', 'the'), ('weights', 'weight'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('improve', 'improve'), ('subsequent', 'subsequent'), ('results', 'result'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'alters'), 'advmod'), ((',', 'alters'), 'punct'), (('if', 'generates'), 'mark'), (('the', 'network'), 'det'), (('network', 'generates'), 'nsubj'), (('generates', 'alters'), 'advcl'), (('a', 'output'), 'det'), (('“', 'output'), 'punct'), (('poor', 'output'), 'amod'), (('or', 'undesired'), 'cc'), (('undesired', 'poor'), 'conj'), (('”', 'output'), 'punct'), (('output', 'generates'), 'obj'), (('or', 'error'), 'cc'), (('an', 'error'), 'det'), (('error', 'output'), 'conj'), ((',', 'alters'), 'punct'), (('then', 'alters'), 'advmod'), (('the', 'system'), 'det'), (('system', 'alters'), 'nsubj'), (('alters', 'root'), 'root'), (('the', 'weights'), 'det'), (('weights', 'alters'), 'obj'), (('in', 'improve'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'improve'), 'mark'), (('improve', 'alters'), 'advcl'), (('subsequent', 'results'), 'amod'), (('results', 'improve'), 'obj'), (('.', 'alters'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 Machine Learning in ANNs ANNs are capable of learning and they need to be trained. 

Tokens are: 
>> ['Machine', 'Learning', 'in', 'ANNs', 'ANNs', 'are', 'capable', 'of', 'learning', 'and', 'they', 'need', 'to', 'be', 'trained', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('Learning', 'NOUN'), ('in', 'ADP'), ('ANNs', 'PROPN'), ('ANNs', 'NOUN'), ('are', 'AUX'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('learning', 'VERB'), ('and', 'CCONJ'), ('they', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('trained', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('Learning', 'NN'), ('in', 'IN'), ('ANNs', 'NNP'), ('ANNs', 'NNS'), ('are', 'VBP'), ('capable', 'JJ'), ('of', 'IN'), ('learning', 'VBG'), ('and', 'CC'), ('they', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('trained', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('Learning', 'learning'), ('in', 'in'), ('ANNs', 'ANNs'), ('ANNs', 'ann'), ('are', 'be'), ('capable', 'capable'), ('of', 'of'), ('learning', 'learn'), ('and', 'and'), ('they', 'they'), ('need', 'need'), ('to', 'to'), ('be', 'be'), ('trained', 'train'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'Learning'), 'compound'), (('Learning', 'capable'), 'nsubj'), (('in', 'ANNs'), 'case'), (('ANNs', 'ANNs'), 'compound'), (('ANNs', 'Learning'), 'nmod'), (('are', 'capable'), 'cop'), (('capable', 'root'), 'root'), (('of', 'learning'), 'mark'), (('learning', 'capable'), 'advcl'), (('and', 'need'), 'cc'), (('they', 'need'), 'nsubj'), (('need', 'capable'), 'conj'), (('to', 'trained'), 'mark'), (('be', 'trained'), 'aux:pass'), (('trained', 'need'), 'xcomp'), (('.', 'capable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 There are several learning strategies − · Supervised Learning − 

Tokens are: 
>> ['There', 'are', 'several', 'learning', 'strategies', '−', '·', 'Supervised', 'Learning', '−'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('several', 'ADJ'), ('learning', 'NOUN'), ('strategies', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Supervised', 'VERB'), ('Learning', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('several', 'JJ'), ('learning', 'NN'), ('strategies', 'NNS'), ('−', ','), ('·', 'NFP'), ('Supervised', 'VBN'), ('Learning', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('several', 'several'), ('learning', 'learning'), ('strategies', 'strategy'), ('−', "''"), ('·', '·'), ('Supervised', 'supervise'), ('Learning', 'learning'), ('−', "''")] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('several', 'strategies'), 'amod'), (('learning', 'strategies'), 'compound'), (('strategies', 'are'), 'nsubj'), (('−', 'strategies'), 'punct'), (('·', 'Learning'), 'punct'), (('Supervised', 'Learning'), 'amod'), (('Learning', 'are'), 'nsubj'), (('−', 'are'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 It involves a teacher that is scholar than the ANN itself. 

Tokens are: 
>> ['It', 'involves', 'a', 'teacher', 'that', 'is', 'scholar', 'than', 'the', 'ANN', 'itself', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('involves', 'VERB'), ('a', 'DET'), ('teacher', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('scholar', 'NOUN'), ('than', 'ADP'), ('the', 'DET'), ('ANN', 'PROPN'), ('itself', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('involves', 'VBZ'), ('a', 'DT'), ('teacher', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('scholar', 'NN'), ('than', 'IN'), ('the', 'DT'), ('ANN', 'NNP'), ('itself', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('involves', 'involve'), ('a', 'a'), ('teacher', 'teacher'), ('that', 'that'), ('is', 'be'), ('scholar', 'scholar'), ('than', 'than'), ('the', 'the'), ('ANN', 'ANN'), ('itself', 'itself'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'involves'), 'nsubj'), (('involves', 'root'), 'root'), (('a', 'teacher'), 'det'), (('teacher', 'involves'), 'obj'), (('that', 'scholar'), 'nsubj'), (('is', 'scholar'), 'cop'), (('scholar', 'teacher'), 'acl:relcl'), (('than', 'ANN'), 'case'), (('the', 'ANN'), 'det'), (('ANN', 'scholar'), 'obl'), (('itself', 'ANN'), 'nmod:npmod'), (('.', 'involves'), 'punct')]

 Named Entities are: 
>> [('ANN', 'ORG')]

========================== Sentence 12 ===========================

 For example, the teacher feeds some example data about which the teacher already knows the answers. 

Tokens are: 
>> ['For', 'example', ',', 'the', 'teacher', 'feeds', 'some', 'example', 'data', 'about', 'which', 'the', 'teacher', 'already', 'knows', 'the', 'answers', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('teacher', 'NOUN'), ('feeds', 'VERB'), ('some', 'DET'), ('example', 'NOUN'), ('data', 'NOUN'), ('about', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('teacher', 'NOUN'), ('already', 'ADV'), ('knows', 'VERB'), ('the', 'DET'), ('answers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('teacher', 'NN'), ('feeds', 'VBZ'), ('some', 'DT'), ('example', 'NN'), ('data', 'NNS'), ('about', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('teacher', 'NN'), ('already', 'RB'), ('knows', 'VBZ'), ('the', 'DT'), ('answers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('teacher', 'teacher'), ('feeds', 'feed'), ('some', 'some'), ('example', 'example'), ('data', 'datum'), ('about', 'about'), ('which', 'which'), ('the', 'the'), ('teacher', 'teacher'), ('already', 'already'), ('knows', 'know'), ('the', 'the'), ('answers', 'answer'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'feeds'), 'obl'), ((',', 'feeds'), 'punct'), (('the', 'teacher'), 'det'), (('teacher', 'feeds'), 'nsubj'), (('feeds', 'root'), 'root'), (('some', 'data'), 'det'), (('example', 'data'), 'compound'), (('data', 'feeds'), 'obj'), (('about', 'which'), 'case'), (('which', 'knows'), 'obl'), (('the', 'teacher'), 'det'), (('teacher', 'knows'), 'nsubj'), (('already', 'knows'), 'advmod'), (('knows', 'data'), 'acl:relcl'), (('the', 'answers'), 'det'), (('answers', 'knows'), 'obj'), (('.', 'feeds'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 For example, pattern recognizing. 

Tokens are: 
>> ['For', 'example', ',', 'pattern', 'recognizing', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('pattern', 'NOUN'), ('recognizing', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('pattern', 'NN'), ('recognizing', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('pattern', 'pattern'), ('recognizing', 'recognize'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'recognizing'), 'obl'), ((',', 'example'), 'punct'), (('pattern', 'recognizing'), 'nsubj'), (('recognizing', 'root'), 'root'), (('.', 'recognizing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 The ANN comes up with guesses while recognizing. 

Tokens are: 
>> ['The', 'ANN', 'comes', 'up', 'with', 'guesses', 'while', 'recognizing', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ANN', 'PROPN'), ('comes', 'VERB'), ('up', 'ADP'), ('with', 'ADP'), ('guesses', 'NOUN'), ('while', 'SCONJ'), ('recognizing', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ANN', 'NNP'), ('comes', 'VBZ'), ('up', 'RP'), ('with', 'IN'), ('guesses', 'NNS'), ('while', 'IN'), ('recognizing', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ANN', 'ANN'), ('comes', 'come'), ('up', 'up'), ('with', 'with'), ('guesses', 'guess'), ('while', 'while'), ('recognizing', 'recognize'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'ANN'), 'det'), (('ANN', 'comes'), 'nsubj'), (('comes', 'root'), 'root'), (('up', 'comes'), 'compound:prt'), (('with', 'guesses'), 'case'), (('guesses', 'comes'), 'obl'), (('while', 'recognizing'), 'mark'), (('recognizing', 'comes'), 'advcl'), (('.', 'comes'), 'punct')]

 Named Entities are: 
>> [('ANN', 'ORG')]

========================== Sentence 15 ===========================

 Then the teacher provides the ANN with the answers. 

Tokens are: 
>> ['Then', 'the', 'teacher', 'provides', 'the', 'ANN', 'with', 'the', 'answers', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('the', 'DET'), ('teacher', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('ANN', 'PROPN'), ('with', 'ADP'), ('the', 'DET'), ('answers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('the', 'DT'), ('teacher', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('ANN', 'NNP'), ('with', 'IN'), ('the', 'DT'), ('answers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('the', 'the'), ('teacher', 'teacher'), ('provides', 'provide'), ('the', 'the'), ('ANN', 'ANN'), ('with', 'with'), ('the', 'the'), ('answers', 'answer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'provides'), 'advmod'), (('the', 'teacher'), 'det'), (('teacher', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('the', 'ANN'), 'det'), (('ANN', 'provides'), 'obj'), (('with', 'answers'), 'case'), (('the', 'answers'), 'det'), (('answers', 'provides'), 'obl'), (('.', 'provides'), 'punct')]

 Named Entities are: 
>> [('ANN', 'ORG')]

========================== Sentence 16 ===========================

 The network then compares it guesses with the teacher’s “correct” answers and makes adjustments according to errors. 

Tokens are: 
>> ['The', 'network', 'then', 'compares', 'it', 'guesses', 'with', 'the', 'teacher', '’s', '“', 'correct', '”', 'answers', 'and', 'makes', 'adjustments', 'according', 'to', 'errors', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('network', 'NOUN'), ('then', 'ADV'), ('compares', 'VERB'), ('it', 'PRON'), ('guesses', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('teacher', 'NOUN'), ('’s', 'PART'), ('“', 'PUNCT'), ('correct', 'ADJ'), ('”', 'PUNCT'), ('answers', 'NOUN'), ('and', 'CCONJ'), ('makes', 'VERB'), ('adjustments', 'NOUN'), ('according', 'VERB'), ('to', 'ADP'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('network', 'NN'), ('then', 'RB'), ('compares', 'VBZ'), ('it', 'PRP'), ('guesses', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('teacher', 'NN'), ('’s', 'POS'), ('“', '``'), ('correct', 'JJ'), ('”', "''"), ('answers', 'NNS'), ('and', 'CC'), ('makes', 'VBZ'), ('adjustments', 'NNS'), ('according', 'VBG'), ('to', 'IN'), ('errors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('network', 'network'), ('then', 'then'), ('compares', 'compare'), ('it', 'it'), ('guesses', 'guess'), ('with', 'with'), ('the', 'the'), ('teacher', 'teacher'), ('’s', "'s"), ('“', "''"), ('correct', 'correct'), ('”', "''"), ('answers', 'answer'), ('and', 'and'), ('makes', 'make'), ('adjustments', 'adjustment'), ('according', 'accord'), ('to', 'to'), ('errors', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'network'), 'det'), (('network', 'compares'), 'nsubj'), (('then', 'compares'), 'advmod'), (('compares', 'root'), 'root'), (('it', 'compares'), 'obj'), (('guesses', 'compares'), 'obj'), (('with', 'answers'), 'case'), (('the', 'teacher'), 'det'), (('teacher', 'answers'), 'nmod:poss'), (('’s', 'teacher'), 'case'), (('“', 'correct'), 'punct'), (('correct', 'answers'), 'amod'), (('”', 'correct'), 'punct'), (('answers', 'guesses'), 'nmod'), (('and', 'makes'), 'cc'), (('makes', 'compares'), 'conj'), (('adjustments', 'makes'), 'obj'), (('according', 'errors'), 'case'), (('to', 'according'), 'fixed'), (('errors', 'makes'), 'obl'), (('.', 'compares'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 · Unsupervised Learning − 

Tokens are: 
>> ['·', 'Unsupervised', 'Learning', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Unsupervised', 'VERB'), ('Learning', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Unsupervised', 'VBN'), ('Learning', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Unsupervised', 'unsupervise'), ('Learning', 'learning'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Learning'), 'punct'), (('Unsupervised', 'Learning'), 'amod'), (('Learning', 'root'), 'root'), (('−', 'Learning'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 It is required when there is no example data set with known answers. 

Tokens are: 
>> ['It', 'is', 'required', 'when', 'there', 'is', 'no', 'example', 'data', 'set', 'with', 'known', 'answers', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('required', 'VERB'), ('when', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('example', 'NOUN'), ('data', 'NOUN'), ('set', 'VERB'), ('with', 'ADP'), ('known', 'VERB'), ('answers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('required', 'VBN'), ('when', 'WRB'), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('example', 'NN'), ('data', 'NNS'), ('set', 'VBN'), ('with', 'IN'), ('known', 'VBN'), ('answers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('required', 'require'), ('when', 'when'), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('example', 'example'), ('data', 'datum'), ('set', 'set'), ('with', 'with'), ('known', 'know'), ('answers', 'answer'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'required'), 'nsubj:pass'), (('is', 'required'), 'aux:pass'), (('required', 'root'), 'root'), (('when', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'required'), 'advcl'), (('no', 'data'), 'det'), (('example', 'data'), 'compound'), (('data', 'is'), 'nsubj'), (('set', 'data'), 'acl'), (('with', 'answers'), 'case'), (('known', 'answers'), 'amod'), (('answers', 'set'), 'obl'), (('.', 'required'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 For example, searching for a hidden pattern. 

Tokens are: 
>> ['For', 'example', ',', 'searching', 'for', 'a', 'hidden', 'pattern', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('searching', 'VERB'), ('for', 'ADP'), ('a', 'DET'), ('hidden', 'VERB'), ('pattern', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('searching', 'VBG'), ('for', 'IN'), ('a', 'DT'), ('hidden', 'VBN'), ('pattern', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('searching', 'search'), ('for', 'for'), ('a', 'a'), ('hidden', 'hide'), ('pattern', 'pattern'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'searching'), 'obl'), ((',', 'searching'), 'punct'), (('searching', 'root'), 'root'), (('for', 'pattern'), 'case'), (('a', 'pattern'), 'det'), (('hidden', 'pattern'), 'amod'), (('pattern', 'searching'), 'obl'), (('.', 'searching'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 In this case, clustering i.e.--- dividing a set of elements into groups according to some unknown pattern is carried out based on the existing data sets present. 

Tokens are: 
>> ['In', 'this', 'case', ',', 'clustering', 'i.e.', '---', 'dividing', 'a', 'set', 'of', 'elements', 'into', 'groups', 'according', 'to', 'some', 'unknown', 'pattern', 'is', 'carried', 'out', 'based', 'on', 'the', 'existing', 'data', 'sets', 'present', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('case', 'NOUN'), (',', 'PUNCT'), ('clustering', 'NOUN'), ('i.e.', 'ADV'), ('---', 'PUNCT'), ('dividing', 'VERB'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('elements', 'NOUN'), ('into', 'ADP'), ('groups', 'NOUN'), ('according', 'VERB'), ('to', 'ADP'), ('some', 'DET'), ('unknown', 'ADJ'), ('pattern', 'NOUN'), ('is', 'AUX'), ('carried', 'VERB'), ('out', 'ADP'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('existing', 'VERB'), ('data', 'NOUN'), ('sets', 'NOUN'), ('present', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('case', 'NN'), (',', ','), ('clustering', 'NN'), ('i.e.', 'FW'), ('---', ','), ('dividing', 'VBG'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('elements', 'NNS'), ('into', 'IN'), ('groups', 'NNS'), ('according', 'VBG'), ('to', 'IN'), ('some', 'DT'), ('unknown', 'JJ'), ('pattern', 'NN'), ('is', 'VBZ'), ('carried', 'VBN'), ('out', 'RP'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('existing', 'VBG'), ('data', 'NN'), ('sets', 'NNS'), ('present', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('case', 'case'), (',', ','), ('clustering', 'clustering'), ('i.e.', 'i.e.'), ('---', '---'), ('dividing', 'divide'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('elements', 'element'), ('into', 'into'), ('groups', 'group'), ('according', 'accord'), ('to', 'to'), ('some', 'some'), ('unknown', 'unknown'), ('pattern', 'pattern'), ('is', 'be'), ('carried', 'carry'), ('out', 'out'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('existing', 'exist'), ('data', 'datum'), ('sets', 'set'), ('present', 'present'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'case'), 'case'), (('this', 'case'), 'det'), (('case', 'carried'), 'obl'), ((',', 'carried'), 'punct'), (('clustering', 'carried'), 'nsubj:pass'), (('i.e.', 'carried'), 'advmod'), (('---', 'dividing'), 'punct'), (('dividing', 'clustering'), 'acl'), (('a', 'set'), 'det'), (('set', 'dividing'), 'obj'), (('of', 'elements'), 'case'), (('elements', 'set'), 'nmod'), (('into', 'groups'), 'case'), (('groups', 'elements'), 'nmod'), (('according', 'pattern'), 'case'), (('to', 'according'), 'fixed'), (('some', 'pattern'), 'det'), (('unknown', 'pattern'), 'amod'), (('pattern', 'dividing'), 'obl'), (('is', 'carried'), 'aux:pass'), (('carried', 'root'), 'root'), (('out', 'carried'), 'compound:prt'), (('based', 'sets'), 'case'), (('on', 'sets'), 'case'), (('the', 'sets'), 'det'), (('existing', 'sets'), 'amod'), (('data', 'sets'), 'compound'), (('sets', 'carried'), 'obl'), (('present', 'sets'), 'amod'), (('.', 'carried'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 · Reinforcement Learning − 

Tokens are: 
>> ['·', 'Reinforcement', 'Learning', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Reinforcement', 'NOUN'), ('Learning', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Reinforcement', 'NN'), ('Learning', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Reinforcement', 'reinforcement'), ('Learning', 'learning'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Learning'), 'punct'), (('Reinforcement', 'Learning'), 'compound'), (('Learning', 'root'), 'root'), (('−', 'Learning'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 This strategy built on observation. 

Tokens are: 
>> ['This', 'strategy', 'built', 'on', 'observation', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('strategy', 'NOUN'), ('built', 'VERB'), ('on', 'ADP'), ('observation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('strategy', 'NN'), ('built', 'VBD'), ('on', 'IN'), ('observation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('strategy', 'strategy'), ('built', 'build'), ('on', 'on'), ('observation', 'observation'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'strategy'), 'det'), (('strategy', 'built'), 'nsubj'), (('built', 'root'), 'root'), (('on', 'observation'), 'case'), (('observation', 'built'), 'obl'), (('.', 'built'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 23 ===========================

 The ANN makes a decision by observing its environment. 

Tokens are: 
>> ['The', 'ANN', 'makes', 'a', 'decision', 'by', 'observing', 'its', 'environment', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ANN', 'PROPN'), ('makes', 'VERB'), ('a', 'DET'), ('decision', 'NOUN'), ('by', 'SCONJ'), ('observing', 'VERB'), ('its', 'PRON'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ANN', 'NNP'), ('makes', 'VBZ'), ('a', 'DT'), ('decision', 'NN'), ('by', 'IN'), ('observing', 'VBG'), ('its', 'PRP$'), ('environment', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ANN', 'ANN'), ('makes', 'make'), ('a', 'a'), ('decision', 'decision'), ('by', 'by'), ('observing', 'observe'), ('its', 'its'), ('environment', 'environment'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'ANN'), 'det'), (('ANN', 'makes'), 'nsubj'), (('makes', 'root'), 'root'), (('a', 'decision'), 'det'), (('decision', 'makes'), 'obj'), (('by', 'observing'), 'mark'), (('observing', 'makes'), 'advcl'), (('its', 'environment'), 'nmod:poss'), (('environment', 'observing'), 'obj'), (('.', 'makes'), 'punct')]

 Named Entities are: 
>> [('ANN', 'ORG')]

========================== Sentence 24 ===========================

 If the observation is negative, the network adjusts its weights to be able to make a different required decision the next time. 

Tokens are: 
>> ['If', 'the', 'observation', 'is', 'negative', ',', 'the', 'network', 'adjusts', 'its', 'weights', 'to', 'be', 'able', 'to', 'make', 'a', 'different', 'required', 'decision', 'the', 'next', 'time', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('observation', 'NOUN'), ('is', 'AUX'), ('negative', 'ADJ'), (',', 'PUNCT'), ('the', 'DET'), ('network', 'NOUN'), ('adjusts', 'VERB'), ('its', 'PRON'), ('weights', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('make', 'VERB'), ('a', 'DET'), ('different', 'ADJ'), ('required', 'VERB'), ('decision', 'NOUN'), ('the', 'DET'), ('next', 'ADJ'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('observation', 'NN'), ('is', 'VBZ'), ('negative', 'JJ'), (',', ','), ('the', 'DT'), ('network', 'NN'), ('adjusts', 'VBZ'), ('its', 'PRP$'), ('weights', 'NNS'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('different', 'JJ'), ('required', 'VBN'), ('decision', 'NN'), ('the', 'DT'), ('next', 'JJ'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('observation', 'observation'), ('is', 'be'), ('negative', 'negative'), (',', ','), ('the', 'the'), ('network', 'network'), ('adjusts', 'adjust'), ('its', 'its'), ('weights', 'weight'), ('to', 'to'), ('be', 'be'), ('able', 'able'), ('to', 'to'), ('make', 'make'), ('a', 'a'), ('different', 'different'), ('required', 'require'), ('decision', 'decision'), ('the', 'the'), ('next', 'next'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'negative'), 'mark'), (('the', 'observation'), 'det'), (('observation', 'negative'), 'nsubj'), (('is', 'negative'), 'cop'), (('negative', 'adjusts'), 'advcl'), ((',', 'adjusts'), 'punct'), (('the', 'network'), 'det'), (('network', 'adjusts'), 'nsubj'), (('adjusts', 'root'), 'root'), (('its', 'weights'), 'nmod:poss'), (('weights', 'adjusts'), 'obj'), (('to', 'able'), 'mark'), (('be', 'able'), 'cop'), (('able', 'adjusts'), 'xcomp'), (('to', 'make'), 'mark'), (('make', 'able'), 'xcomp'), (('a', 'decision'), 'det'), (('different', 'decision'), 'amod'), (('required', 'decision'), 'amod'), (('decision', 'make'), 'obj'), (('the', 'time'), 'det'), (('next', 'time'), 'amod'), (('time', 'make'), 'obl:tmod'), (('.', 'adjusts'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 Back Propagation Algorithm 

Tokens are: 
>> ['Back', 'Propagation', 'Algorithm'] 

 UPOS tags are: 
>> [('Back', 'ADJ'), ('Propagation', 'NOUN'), ('Algorithm', 'NOUN')] 

 XPOS tags are: 
>> [('Back', 'JJ'), ('Propagation', 'NN'), ('Algorithm', 'NN')] 

 Lemmas are: 
>> [('Back', 'back'), ('Propagation', 'propagation'), ('Algorithm', 'algorithm')] 

 Dependency tags are: 
>> [(('Back', 'Propagation'), 'amod'), (('Propagation', 'Algorithm'), 'compound'), (('Algorithm', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 It is the training or learning algorithm. 

Tokens are: 
>> ['It', 'is', 'the', 'training', 'or', 'learning', 'algorithm', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('training', 'NOUN'), ('or', 'CCONJ'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('training', 'NN'), ('or', 'CC'), ('learning', 'NN'), ('algorithm', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('training', 'training'), ('or', 'or'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'training'), 'nsubj'), (('is', 'training'), 'cop'), (('the', 'training'), 'det'), (('training', 'root'), 'root'), (('or', 'algorithm'), 'cc'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'training'), 'conj'), (('.', 'training'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 27 ===========================

 It learns by example. 

Tokens are: 
>> ['It', 'learns', 'by', 'example', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('learns', 'VERB'), ('by', 'ADP'), ('example', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('learns', 'VBZ'), ('by', 'IN'), ('example', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('learns', 'learn'), ('by', 'by'), ('example', 'example'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('by', 'example'), 'case'), (('example', 'learns'), 'obl'), (('.', 'learns'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 If you submit to the algorithm the example of what you want the network to do, it changes the network’s weights so that it can produce desired output for a particular input on finishing the training. 

Tokens are: 
>> ['If', 'you', 'submit', 'to', 'the', 'algorithm', 'the', 'example', 'of', 'what', 'you', 'want', 'the', 'network', 'to', 'do', ',', 'it', 'changes', 'the', 'network', '’s', 'weights', 'so', 'that', 'it', 'can', 'produce', 'desired', 'output', 'for', 'a', 'particular', 'input', 'on', 'finishing', 'the', 'training', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('you', 'PRON'), ('submit', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('algorithm', 'NOUN'), ('the', 'DET'), ('example', 'NOUN'), ('of', 'SCONJ'), ('what', 'PRON'), ('you', 'PRON'), ('want', 'VERB'), ('the', 'DET'), ('network', 'NOUN'), ('to', 'PART'), ('do', 'VERB'), (',', 'PUNCT'), ('it', 'PRON'), ('changes', 'VERB'), ('the', 'DET'), ('network', 'NOUN'), ('’s', 'PART'), ('weights', 'NOUN'), ('so', 'SCONJ'), ('that', 'SCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('produce', 'VERB'), ('desired', 'VERB'), ('output', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('particular', 'ADJ'), ('input', 'NOUN'), ('on', 'SCONJ'), ('finishing', 'VERB'), ('the', 'DET'), ('training', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('you', 'PRP'), ('submit', 'VBP'), ('to', 'IN'), ('the', 'DT'), ('algorithm', 'NN'), ('the', 'DT'), ('example', 'NN'), ('of', 'IN'), ('what', 'WP'), ('you', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('network', 'NN'), ('to', 'TO'), ('do', 'VB'), (',', ','), ('it', 'PRP'), ('changes', 'VBZ'), ('the', 'DT'), ('network', 'NN'), ('’s', 'POS'), ('weights', 'NNS'), ('so', 'IN'), ('that', 'IN'), ('it', 'PRP'), ('can', 'MD'), ('produce', 'VB'), ('desired', 'VBN'), ('output', 'NN'), ('for', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('input', 'NN'), ('on', 'IN'), ('finishing', 'VBG'), ('the', 'DT'), ('training', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('you', 'you'), ('submit', 'submit'), ('to', 'to'), ('the', 'the'), ('algorithm', 'algorithm'), ('the', 'the'), ('example', 'example'), ('of', 'of'), ('what', 'what'), ('you', 'you'), ('want', 'want'), ('the', 'the'), ('network', 'network'), ('to', 'to'), ('do', 'do'), (',', ','), ('it', 'it'), ('changes', 'change'), ('the', 'the'), ('network', 'network'), ('’s', "'s"), ('weights', 'weight'), ('so', 'so'), ('that', 'that'), ('it', 'it'), ('can', 'can'), ('produce', 'produce'), ('desired', 'desire'), ('output', 'output'), ('for', 'for'), ('a', 'a'), ('particular', 'particular'), ('input', 'input'), ('on', 'on'), ('finishing', 'finish'), ('the', 'the'), ('training', 'training'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'submit'), 'mark'), (('you', 'submit'), 'nsubj'), (('submit', 'changes'), 'advcl'), (('to', 'algorithm'), 'case'), (('the', 'algorithm'), 'det'), (('algorithm', 'submit'), 'obl'), (('the', 'example'), 'det'), (('example', 'changes'), 'nsubj'), (('of', 'what'), 'case'), (('what', 'example'), 'nmod'), (('you', 'want'), 'nsubj'), (('want', 'what'), 'acl:relcl'), (('the', 'network'), 'det'), (('network', 'want'), 'obj'), (('to', 'do'), 'mark'), (('do', 'want'), 'xcomp'), ((',', 'submit'), 'punct'), (('it', 'changes'), 'nsubj'), (('changes', 'root'), 'root'), (('the', 'network'), 'det'), (('network', 'weights'), 'nmod:poss'), (('’s', 'network'), 'case'), (('weights', 'changes'), 'obj'), (('so', 'produce'), 'mark'), (('that', 'so'), 'fixed'), (('it', 'produce'), 'nsubj'), (('can', 'produce'), 'aux'), (('produce', 'changes'), 'advcl'), (('desired', 'output'), 'amod'), (('output', 'produce'), 'obj'), (('for', 'input'), 'case'), (('a', 'input'), 'det'), (('particular', 'input'), 'amod'), (('input', 'output'), 'nmod'), (('on', 'finishing'), 'mark'), (('finishing', 'input'), 'acl'), (('the', 'training'), 'det'), (('training', 'finishing'), 'obj'), (('.', 'changes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 29 ===========================

 Back Propagation networks are ideal for simple Pattern Recognition and Mapping Tasks. 

Tokens are: 
>> ['Back', 'Propagation', 'networks', 'are', 'ideal', 'for', 'simple', 'Pattern', 'Recognition', 'and', 'Mapping', 'Tasks', '.'] 

 UPOS tags are: 
>> [('Back', 'ADJ'), ('Propagation', 'NOUN'), ('networks', 'NOUN'), ('are', 'AUX'), ('ideal', 'ADJ'), ('for', 'ADP'), ('simple', 'ADJ'), ('Pattern', 'NOUN'), ('Recognition', 'NOUN'), ('and', 'CCONJ'), ('Mapping', 'NOUN'), ('Tasks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'JJ'), ('Propagation', 'NN'), ('networks', 'NNS'), ('are', 'VBP'), ('ideal', 'JJ'), ('for', 'IN'), ('simple', 'JJ'), ('Pattern', 'NN'), ('Recognition', 'NN'), ('and', 'CC'), ('Mapping', 'NN'), ('Tasks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('Propagation', 'propagation'), ('networks', 'network'), ('are', 'be'), ('ideal', 'ideal'), ('for', 'for'), ('simple', 'simple'), ('Pattern', 'pattern'), ('Recognition', 'recognition'), ('and', 'and'), ('Mapping', 'mapping'), ('Tasks', 'task'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'networks'), 'amod'), (('Propagation', 'networks'), 'compound'), (('networks', 'ideal'), 'nsubj'), (('are', 'ideal'), 'cop'), (('ideal', 'root'), 'root'), (('for', 'Recognition'), 'case'), (('simple', 'Recognition'), 'amod'), (('Pattern', 'Recognition'), 'compound'), (('Recognition', 'ideal'), 'obl'), (('and', 'Tasks'), 'cc'), (('Mapping', 'Tasks'), 'compound'), (('Tasks', 'Recognition'), 'conj'), (('.', 'ideal'), 'punct')]

 Named Entities are: 
>> [('Pattern Recognition', 'ORG'), ('Mapping Tasks', 'ORG')]

========================== Sentence 30 ===========================

 Bayesian Networks (BN) 

Tokens are: 
>> ['Bayesian', 'Networks', '(', 'BN', ')'] 

 UPOS tags are: 
>> [('Bayesian', 'ADJ'), ('Networks', 'NOUN'), ('(', 'PUNCT'), ('BN', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Bayesian', 'JJ'), ('Networks', 'NNS'), ('(', '-LRB-'), ('BN', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Bayesian', 'Bayesian'), ('Networks', 'network'), ('(', '('), ('BN', 'bn'), (')', ')')] 

 Dependency tags are: 
>> [(('Bayesian', 'Networks'), 'amod'), (('Networks', 'root'), 'root'), (('(', 'BN'), 'punct'), (('BN', 'Networks'), 'appos'), ((')', 'BN'), 'punct')]

 Named Entities are: 
>> [('Bayesian Networks', 'ORG'), ('BN', 'ORG')]

========================== Sentence 31 ===========================

 These are the graphical structures used to represent the probabilistic relationship among a set of random variables. 

Tokens are: 
>> ['These', 'are', 'the', 'graphical', 'structures', 'used', 'to', 'represent', 'the', 'probabilistic', 'relationship', 'among', 'a', 'set', 'of', 'random', 'variables', '.'] 

 UPOS tags are: 
>> [('These', 'PRON'), ('are', 'AUX'), ('the', 'DET'), ('graphical', 'ADJ'), ('structures', 'NOUN'), ('used', 'VERB'), ('to', 'PART'), ('represent', 'VERB'), ('the', 'DET'), ('probabilistic', 'ADJ'), ('relationship', 'NOUN'), ('among', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('random', 'ADJ'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('These', 'DT'), ('are', 'VBP'), ('the', 'DT'), ('graphical', 'JJ'), ('structures', 'NNS'), ('used', 'VBN'), ('to', 'TO'), ('represent', 'VB'), ('the', 'DT'), ('probabilistic', 'JJ'), ('relationship', 'NN'), ('among', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('random', 'JJ'), ('variables', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('These', 'this'), ('are', 'be'), ('the', 'the'), ('graphical', 'graphical'), ('structures', 'structure'), ('used', 'use'), ('to', 'to'), ('represent', 'represent'), ('the', 'the'), ('probabilistic', 'probabilistic'), ('relationship', 'relationship'), ('among', 'among'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('random', 'random'), ('variables', 'variable'), ('.', '.')] 

 Dependency tags are: 
>> [(('These', 'structures'), 'nsubj'), (('are', 'structures'), 'cop'), (('the', 'structures'), 'det'), (('graphical', 'structures'), 'amod'), (('structures', 'root'), 'root'), (('used', 'structures'), 'acl'), (('to', 'represent'), 'mark'), (('represent', 'used'), 'xcomp'), (('the', 'relationship'), 'det'), (('probabilistic', 'relationship'), 'amod'), (('relationship', 'represent'), 'obj'), (('among', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'relationship'), 'nmod'), (('of', 'variables'), 'case'), (('random', 'variables'), 'amod'), (('variables', 'set'), 'nmod'), (('.', 'structures'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 Bayesian networks are also called Belief Networks or Bayes Nets. 

Tokens are: 
>> ['Bayesian', 'networks', 'are', 'also', 'called', 'Belief', 'Networks', 'or', 'Bayes', 'Nets', '.'] 

 UPOS tags are: 
>> [('Bayesian', 'ADJ'), ('networks', 'NOUN'), ('are', 'AUX'), ('also', 'ADV'), ('called', 'VERB'), ('Belief', 'PROPN'), ('Networks', 'PROPN'), ('or', 'CCONJ'), ('Bayes', 'PROPN'), ('Nets', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bayesian', 'JJ'), ('networks', 'NNS'), ('are', 'VBP'), ('also', 'RB'), ('called', 'VBN'), ('Belief', 'NNP'), ('Networks', 'NNPS'), ('or', 'CC'), ('Bayes', 'NNPS'), ('Nets', 'NNPS'), ('.', '.')] 

 Lemmas are: 
>> [('Bayesian', 'Bayesian'), ('networks', 'network'), ('are', 'be'), ('also', 'also'), ('called', 'call'), ('Belief', 'Belief'), ('Networks', 'Network'), ('or', 'or'), ('Bayes', 'Bayes'), ('Nets', 'Net'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bayesian', 'networks'), 'amod'), (('networks', 'called'), 'nsubj:pass'), (('are', 'called'), 'aux:pass'), (('also', 'called'), 'advmod'), (('called', 'root'), 'root'), (('Belief', 'Networks'), 'compound'), (('Networks', 'called'), 'obj'), (('or', 'Nets'), 'cc'), (('Bayes', 'Nets'), 'compound'), (('Nets', 'Networks'), 'conj'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> [('Bayesian', 'NORP'), ('Belief Networks', 'ORG'), ('Bayes Nets', 'ORG')]

========================== Sentence 33 ===========================

 BNs reason about uncertain domain. 

Tokens are: 
>> ['BNs', 'reason', 'about', 'uncertain', 'domain', '.'] 

 UPOS tags are: 
>> [('BNs', 'NOUN'), ('reason', 'NOUN'), ('about', 'ADP'), ('uncertain', 'ADJ'), ('domain', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('BNs', 'NN'), ('reason', 'NN'), ('about', 'IN'), ('uncertain', 'JJ'), ('domain', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('BNs', 'be'), ('reason', 'reason'), ('about', 'about'), ('uncertain', 'uncertain'), ('domain', 'domain'), ('.', '.')] 

 Dependency tags are: 
>> [(('BNs', 'reason'), 'cop'), (('reason', 'root'), 'root'), (('about', 'domain'), 'case'), (('uncertain', 'domain'), 'amod'), (('domain', 'reason'), 'nmod'), (('.', 'reason'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 34 ===========================

 In these networks, each node represents a random variable with specific propositions. 

Tokens are: 
>> ['In', 'these', 'networks', ',', 'each', 'node', 'represents', 'a', 'random', 'variable', 'with', 'specific', 'propositions', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('these', 'DET'), ('networks', 'NOUN'), (',', 'PUNCT'), ('each', 'DET'), ('node', 'NOUN'), ('represents', 'VERB'), ('a', 'DET'), ('random', 'ADJ'), ('variable', 'NOUN'), ('with', 'ADP'), ('specific', 'ADJ'), ('propositions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('these', 'DT'), ('networks', 'NNS'), (',', ','), ('each', 'DT'), ('node', 'NN'), ('represents', 'VBZ'), ('a', 'DT'), ('random', 'JJ'), ('variable', 'NN'), ('with', 'IN'), ('specific', 'JJ'), ('propositions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('these', 'this'), ('networks', 'network'), (',', ','), ('each', 'each'), ('node', 'node'), ('represents', 'represent'), ('a', 'a'), ('random', 'random'), ('variable', 'variable'), ('with', 'with'), ('specific', 'specific'), ('propositions', 'proposition'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'networks'), 'case'), (('these', 'networks'), 'det'), (('networks', 'represents'), 'obl'), ((',', 'represents'), 'punct'), (('each', 'node'), 'det'), (('node', 'represents'), 'nsubj'), (('represents', 'root'), 'root'), (('a', 'variable'), 'det'), (('random', 'variable'), 'amod'), (('variable', 'represents'), 'obj'), (('with', 'propositions'), 'case'), (('specific', 'propositions'), 'amod'), (('propositions', 'represents'), 'obl'), (('.', 'represents'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 For example, in a medical diagnosis domain, the node Cancer represents the proposition that a patient has cancer. 

Tokens are: 
>> ['For', 'example', ',', 'in', 'a', 'medical', 'diagnosis', 'domain', ',', 'the', 'node', 'Cancer', 'represents', 'the', 'proposition', 'that', 'a', 'patient', 'has', 'cancer', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('a', 'DET'), ('medical', 'ADJ'), ('diagnosis', 'NOUN'), ('domain', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('node', 'NOUN'), ('Cancer', 'PROPN'), ('represents', 'VERB'), ('the', 'DET'), ('proposition', 'NOUN'), ('that', 'SCONJ'), ('a', 'DET'), ('patient', 'NOUN'), ('has', 'VERB'), ('cancer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('in', 'IN'), ('a', 'DT'), ('medical', 'JJ'), ('diagnosis', 'NN'), ('domain', 'NN'), (',', ','), ('the', 'DT'), ('node', 'NN'), ('Cancer', 'NNP'), ('represents', 'VBZ'), ('the', 'DT'), ('proposition', 'NN'), ('that', 'IN'), ('a', 'DT'), ('patient', 'NN'), ('has', 'VBZ'), ('cancer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('in', 'in'), ('a', 'a'), ('medical', 'medical'), ('diagnosis', 'diagnosis'), ('domain', 'domain'), (',', ','), ('the', 'the'), ('node', 'node'), ('Cancer', 'Cancer'), ('represents', 'represent'), ('the', 'the'), ('proposition', 'proposition'), ('that', 'that'), ('a', 'a'), ('patient', 'patient'), ('has', 'have'), ('cancer', 'cancer'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'represents'), 'obl'), ((',', 'represents'), 'punct'), (('in', 'domain'), 'case'), (('a', 'domain'), 'det'), (('medical', 'domain'), 'amod'), (('diagnosis', 'domain'), 'compound'), (('domain', 'represents'), 'obl'), ((',', 'represents'), 'punct'), (('the', 'Cancer'), 'det'), (('node', 'Cancer'), 'compound'), (('Cancer', 'represents'), 'nsubj'), (('represents', 'root'), 'root'), (('the', 'proposition'), 'det'), (('proposition', 'represents'), 'obj'), (('that', 'has'), 'mark'), (('a', 'patient'), 'det'), (('patient', 'has'), 'nsubj'), (('has', 'proposition'), 'acl'), (('cancer', 'has'), 'obj'), (('.', 'represents'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 The edges connecting the nodes represent probabilistic dependencies among those random variables. 

Tokens are: 
>> ['The', 'edges', 'connecting', 'the', 'nodes', 'represent', 'probabilistic', 'dependencies', 'among', 'those', 'random', 'variables', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('edges', 'NOUN'), ('connecting', 'VERB'), ('the', 'DET'), ('nodes', 'NOUN'), ('represent', 'VERB'), ('probabilistic', 'ADJ'), ('dependencies', 'NOUN'), ('among', 'ADP'), ('those', 'DET'), ('random', 'ADJ'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('edges', 'NNS'), ('connecting', 'VBG'), ('the', 'DT'), ('nodes', 'NNS'), ('represent', 'VBP'), ('probabilistic', 'JJ'), ('dependencies', 'NNS'), ('among', 'IN'), ('those', 'DT'), ('random', 'JJ'), ('variables', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('edges', 'edge'), ('connecting', 'connect'), ('the', 'the'), ('nodes', 'node'), ('represent', 'represent'), ('probabilistic', 'probabilistic'), ('dependencies', 'dependency'), ('among', 'among'), ('those', 'that'), ('random', 'random'), ('variables', 'variable'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'edges'), 'det'), (('edges', 'represent'), 'nsubj'), (('connecting', 'edges'), 'acl'), (('the', 'nodes'), 'det'), (('nodes', 'connecting'), 'obj'), (('represent', 'root'), 'root'), (('probabilistic', 'dependencies'), 'amod'), (('dependencies', 'represent'), 'obj'), (('among', 'variables'), 'case'), (('those', 'variables'), 'det'), (('random', 'variables'), 'amod'), (('variables', 'dependencies'), 'nmod'), (('.', 'represent'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 37 ===========================

 If out of two nodes, one is affecting the other then they must be directly connected in the directions of the effect. 

Tokens are: 
>> ['If', 'out', 'of', 'two', 'nodes', ',', 'one', 'is', 'affecting', 'the', 'other', 'then', 'they', 'must', 'be', 'directly', 'connected', 'in', 'the', 'directions', 'of', 'the', 'effect', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('out', 'ADP'), ('of', 'ADP'), ('two', 'NUM'), ('nodes', 'NOUN'), (',', 'PUNCT'), ('one', 'PRON'), ('is', 'AUX'), ('affecting', 'VERB'), ('the', 'DET'), ('other', 'ADJ'), ('then', 'ADV'), ('they', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('directly', 'ADV'), ('connected', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('directions', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('effect', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('out', 'IN'), ('of', 'IN'), ('two', 'CD'), ('nodes', 'NNS'), (',', ','), ('one', 'PRP'), ('is', 'VBZ'), ('affecting', 'VBG'), ('the', 'DT'), ('other', 'JJ'), ('then', 'RB'), ('they', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('directly', 'RB'), ('connected', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('directions', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('effect', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('out', 'out'), ('of', 'of'), ('two', 'two'), ('nodes', 'node'), (',', ','), ('one', 'one'), ('is', 'be'), ('affecting', 'affect'), ('the', 'the'), ('other', 'other'), ('then', 'then'), ('they', 'they'), ('must', 'must'), ('be', 'be'), ('directly', 'directly'), ('connected', 'connect'), ('in', 'in'), ('the', 'the'), ('directions', 'direction'), ('of', 'of'), ('the', 'the'), ('effect', 'effect'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'nodes'), 'mark'), (('out', 'nodes'), 'case'), (('of', 'nodes'), 'case'), (('two', 'nodes'), 'nummod'), (('nodes', 'connected'), 'advcl'), ((',', 'affecting'), 'punct'), (('one', 'affecting'), 'nsubj'), (('is', 'affecting'), 'aux'), (('affecting', 'connected'), 'advcl'), (('the', 'other'), 'det'), (('other', 'affecting'), 'obj'), (('then', 'connected'), 'advmod'), (('they', 'connected'), 'nsubj:pass'), (('must', 'connected'), 'aux'), (('be', 'connected'), 'aux:pass'), (('directly', 'connected'), 'advmod'), (('connected', 'root'), 'root'), (('in', 'directions'), 'case'), (('the', 'directions'), 'det'), (('directions', 'connected'), 'obl'), (('of', 'effect'), 'case'), (('the', 'effect'), 'det'), (('effect', 'directions'), 'nmod'), (('.', 'connected'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 38 ===========================

 The strength of the relationship between variables is quantified by the probability associated with each node. 

Tokens are: 
>> ['The', 'strength', 'of', 'the', 'relationship', 'between', 'variables', 'is', 'quantified', 'by', 'the', 'probability', 'associated', 'with', 'each', 'node', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('strength', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('relationship', 'NOUN'), ('between', 'ADP'), ('variables', 'NOUN'), ('is', 'AUX'), ('quantified', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('probability', 'NOUN'), ('associated', 'VERB'), ('with', 'ADP'), ('each', 'DET'), ('node', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('strength', 'NN'), ('of', 'IN'), ('the', 'DT'), ('relationship', 'NN'), ('between', 'IN'), ('variables', 'NNS'), ('is', 'VBZ'), ('quantified', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('probability', 'NN'), ('associated', 'VBN'), ('with', 'IN'), ('each', 'DT'), ('node', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('strength', 'strength'), ('of', 'of'), ('the', 'the'), ('relationship', 'relationship'), ('between', 'between'), ('variables', 'variable'), ('is', 'be'), ('quantified', 'quantify'), ('by', 'by'), ('the', 'the'), ('probability', 'probability'), ('associated', 'associate'), ('with', 'with'), ('each', 'each'), ('node', 'node'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'strength'), 'det'), (('strength', 'quantified'), 'nsubj:pass'), (('of', 'relationship'), 'case'), (('the', 'relationship'), 'det'), (('relationship', 'strength'), 'nmod'), (('between', 'variables'), 'case'), (('variables', 'relationship'), 'nmod'), (('is', 'quantified'), 'aux:pass'), (('quantified', 'root'), 'root'), (('by', 'probability'), 'case'), (('the', 'probability'), 'det'), (('probability', 'quantified'), 'obl'), (('associated', 'probability'), 'acl'), (('with', 'node'), 'case'), (('each', 'node'), 'det'), (('node', 'associated'), 'obl'), (('.', 'quantified'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 39 ===========================

 There is an only constraint on the arcs in a BN that you cannot return to a node simply by following directed arcs. 

Tokens are: 
>> ['There', 'is', 'an', 'only', 'constraint', 'on', 'the', 'arcs', 'in', 'a', 'BN', 'that', 'you', 'cannot', 'return', 'to', 'a', 'node', 'simply', 'by', 'following', 'directed', 'arcs', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('is', 'VERB'), ('an', 'DET'), ('only', 'ADJ'), ('constraint', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('arcs', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('BN', 'NOUN'), ('that', 'PRON'), ('you', 'PRON'), ('cannot', 'AUX'), ('return', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('node', 'NOUN'), ('simply', 'ADV'), ('by', 'SCONJ'), ('following', 'VERB'), ('directed', 'VERB'), ('arcs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('is', 'VBZ'), ('an', 'DT'), ('only', 'JJ'), ('constraint', 'NN'), ('on', 'IN'), ('the', 'DT'), ('arcs', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('BN', 'NN'), ('that', 'WDT'), ('you', 'PRP'), ('cannot', 'MD'), ('return', 'VB'), ('to', 'IN'), ('a', 'DT'), ('node', 'NN'), ('simply', 'RB'), ('by', 'IN'), ('following', 'VBG'), ('directed', 'VBN'), ('arcs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('is', 'be'), ('an', 'a'), ('only', 'only'), ('constraint', 'constraint'), ('on', 'on'), ('the', 'the'), ('arcs', 'arc'), ('in', 'in'), ('a', 'a'), ('BN', 'bn'), ('that', 'that'), ('you', 'you'), ('cannot', 'cannot'), ('return', 'return'), ('to', 'to'), ('a', 'a'), ('node', 'node'), ('simply', 'simply'), ('by', 'by'), ('following', 'follow'), ('directed', 'direct'), ('arcs', 'arc'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'is'), 'expl'), (('is', 'root'), 'root'), (('an', 'constraint'), 'det'), (('only', 'constraint'), 'amod'), (('constraint', 'is'), 'nsubj'), (('on', 'arcs'), 'case'), (('the', 'arcs'), 'det'), (('arcs', 'constraint'), 'nmod'), (('in', 'BN'), 'case'), (('a', 'BN'), 'det'), (('BN', 'arcs'), 'nmod'), (('that', 'return'), 'obj'), (('you', 'return'), 'nsubj'), (('cannot', 'return'), 'aux'), (('return', 'BN'), 'acl:relcl'), (('to', 'node'), 'case'), (('a', 'node'), 'det'), (('node', 'return'), 'obl'), (('simply', 'following'), 'advmod'), (('by', 'arcs'), 'case'), (('following', 'arcs'), 'amod'), (('directed', 'arcs'), 'amod'), (('arcs', 'return'), 'obl'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> [('BN', 'ORG')]

========================== Sentence 40 ===========================

 Hence the BNs are called Directed Acyclic Graphs (DAGs). 

Tokens are: 
>> ['Hence', 'the', 'BNs', 'are', 'called', 'Directed', 'Acyclic', 'Graphs', '(', 'DAGs', ')', '.'] 

 UPOS tags are: 
>> [('Hence', 'ADV'), ('the', 'DET'), ('BNs', 'PROPN'), ('are', 'AUX'), ('called', 'VERB'), ('Directed', 'VERB'), ('Acyclic', 'ADJ'), ('Graphs', 'PROPN'), ('(', 'PUNCT'), ('DAGs', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Hence', 'RB'), ('the', 'DT'), ('BNs', 'NNP'), ('are', 'VBP'), ('called', 'VBN'), ('Directed', 'VBN'), ('Acyclic', 'NNP'), ('Graphs', 'NNPS'), ('(', '-LRB-'), ('DAGs', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Hence', 'hence'), ('the', 'the'), ('BNs', 'BNs'), ('are', 'be'), ('called', 'call'), ('Directed', 'direct'), ('Acyclic', 'Acyclic'), ('Graphs', 'Graphs'), ('(', '('), ('DAGs', 'DAG'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Hence', 'called'), 'advmod'), (('the', 'BNs'), 'det'), (('BNs', 'called'), 'nsubj:pass'), (('are', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('Directed', 'Graphs'), 'amod'), (('Acyclic', 'Graphs'), 'amod'), (('Graphs', 'called'), 'xcomp'), (('(', 'DAGs'), 'punct'), (('DAGs', 'Graphs'), 'appos'), ((')', 'DAGs'), 'punct'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> [('BNs', 'ORG'), ('DAGs', 'ORG')]

========================== Sentence 41 ===========================

 BNs are capable of handling multivalued variables simultaneously. 

Tokens are: 
>> ['BNs', 'are', 'capable', 'of', 'handling', 'multivalued', 'variables', 'simultaneously', '.'] 

 UPOS tags are: 
>> [('BNs', 'PROPN'), ('are', 'AUX'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('handling', 'VERB'), ('multivalued', 'ADJ'), ('variables', 'NOUN'), ('simultaneously', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('BNs', 'NNP'), ('are', 'VBP'), ('capable', 'JJ'), ('of', 'IN'), ('handling', 'VBG'), ('multivalued', 'JJ'), ('variables', 'NNS'), ('simultaneously', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('BNs', 'BNs'), ('are', 'be'), ('capable', 'capable'), ('of', 'of'), ('handling', 'handle'), ('multivalued', 'multivalued'), ('variables', 'variable'), ('simultaneously', 'simultaneously'), ('.', '.')] 

 Dependency tags are: 
>> [(('BNs', 'capable'), 'nsubj'), (('are', 'capable'), 'cop'), (('capable', 'root'), 'root'), (('of', 'handling'), 'mark'), (('handling', 'capable'), 'advcl'), (('multivalued', 'variables'), 'amod'), (('variables', 'handling'), 'obj'), (('simultaneously', 'handling'), 'advmod'), (('.', 'capable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 42 ===========================

 The BN variables are composed of two dimensions − · Range of prepositions · Probability assigned to each of the prepositions. 

Tokens are: 
>> ['The', 'BN', 'variables', 'are', 'composed', 'of', 'two', 'dimensions', '−', '·', 'Range', 'of', 'prepositions', '·', 'Probability', 'assigned', 'to', 'each', 'of', 'the', 'prepositions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('BN', 'PROPN'), ('variables', 'NOUN'), ('are', 'AUX'), ('composed', 'VERB'), ('of', 'ADP'), ('two', 'NUM'), ('dimensions', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Range', 'NOUN'), ('of', 'ADP'), ('prepositions', 'NOUN'), ('·', 'PUNCT'), ('Probability', 'NOUN'), ('assigned', 'VERB'), ('to', 'ADP'), ('each', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('prepositions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('BN', 'NNP'), ('variables', 'NNS'), ('are', 'VBP'), ('composed', 'VBN'), ('of', 'IN'), ('two', 'CD'), ('dimensions', 'NNS'), ('−', ','), ('·', 'NFP'), ('Range', 'NN'), ('of', 'IN'), ('prepositions', 'NNS'), ('·', ','), ('Probability', 'NN'), ('assigned', 'VBN'), ('to', 'IN'), ('each', 'DT'), ('of', 'IN'), ('the', 'DT'), ('prepositions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('BN', 'BN'), ('variables', 'variable'), ('are', 'be'), ('composed', 'compose'), ('of', 'of'), ('two', 'two'), ('dimensions', 'dimension'), ('−', "''"), ('·', '·'), ('Range', 'Range'), ('of', 'of'), ('prepositions', 'preposition'), ('·', '·'), ('Probability', 'probability'), ('assigned', 'assign'), ('to', 'to'), ('each', 'each'), ('of', 'of'), ('the', 'the'), ('prepositions', 'preposition'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'variables'), 'det'), (('BN', 'variables'), 'compound'), (('variables', 'composed'), 'nsubj:pass'), (('are', 'composed'), 'aux:pass'), (('composed', 'root'), 'root'), (('of', 'dimensions'), 'case'), (('two', 'dimensions'), 'nummod'), (('dimensions', 'composed'), 'obl'), (('−', 'Range'), 'punct'), (('·', 'Range'), 'punct'), (('Range', 'composed'), 'parataxis'), (('of', 'prepositions'), 'case'), (('prepositions', 'Range'), 'nmod'), (('·', 'Range'), 'punct'), (('Probability', 'Range'), 'appos'), (('assigned', 'Probability'), 'acl'), (('to', 'each'), 'case'), (('each', 'assigned'), 'obl'), (('of', 'prepositions'), 'case'), (('the', 'prepositions'), 'det'), (('prepositions', 'each'), 'nmod'), (('.', 'composed'), 'punct')]

 Named Entities are: 
>> [('BN', 'ORG'), ('two', 'CARDINAL')]

========================== Sentence 43 ===========================

 Consider a finite set X = {X1, X2, …,Xn} of discrete random variables, where each variable Xi may take values from a finite set, denoted by Val(Xi). 

Tokens are: 
>> ['Consider', 'a', 'finite', 'set', 'X', '=', '{', 'X1', ',', 'X2', ',', '…', ',', 'Xn}', 'of', 'discrete', 'random', 'variables', ',', 'where', 'each', 'variable', 'Xi', 'may', 'take', 'values', 'from', 'a', 'finite', 'set', ',', 'denoted', 'by', 'Val', '(', 'Xi', ')', '.'] 

 UPOS tags are: 
>> [('Consider', 'VERB'), ('a', 'DET'), ('finite', 'ADJ'), ('set', 'NOUN'), ('X', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('X1', 'PROPN'), (',', 'PUNCT'), ('X2', 'PROPN'), (',', 'PUNCT'), ('…', 'PUNCT'), (',', 'PUNCT'), ('Xn}', 'PROPN'), ('of', 'ADP'), ('discrete', 'ADJ'), ('random', 'ADJ'), ('variables', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('each', 'DET'), ('variable', 'ADJ'), ('Xi', 'NOUN'), ('may', 'AUX'), ('take', 'VERB'), ('values', 'NOUN'), ('from', 'ADP'), ('a', 'DET'), ('finite', 'ADJ'), ('set', 'NOUN'), (',', 'PUNCT'), ('denoted', 'VERB'), ('by', 'ADP'), ('Val', 'PROPN'), ('(', 'PUNCT'), ('Xi', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Consider', 'VB'), ('a', 'DT'), ('finite', 'JJ'), ('set', 'NN'), ('X', 'NN'), ('=', 'SYM'), ('{', ':'), ('X1', 'NNP'), (',', ','), ('X2', 'NNP'), (',', ','), ('…', ':'), (',', ','), ('Xn}', 'NNP'), ('of', 'IN'), ('discrete', 'JJ'), ('random', 'JJ'), ('variables', 'NNS'), (',', ','), ('where', 'WRB'), ('each', 'DT'), ('variable', 'JJ'), ('Xi', 'NN'), ('may', 'MD'), ('take', 'VB'), ('values', 'NNS'), ('from', 'IN'), ('a', 'DT'), ('finite', 'JJ'), ('set', 'NN'), (',', ','), ('denoted', 'VBN'), ('by', 'IN'), ('Val', 'NNP'), ('(', '-LRB-'), ('Xi', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Consider', 'consider'), ('a', 'a'), ('finite', 'finite'), ('set', 'set'), ('X', 'x'), ('=', '='), ('{', '{'), ('X1', 'X1'), (',', ','), ('X2', 'X2'), (',', ','), ('…', '…'), (',', ','), ('Xn}', 'Xn}'), ('of', 'of'), ('discrete', 'discrete'), ('random', 'random'), ('variables', 'variable'), (',', ','), ('where', 'where'), ('each', 'each'), ('variable', 'variable'), ('Xi', 'xi'), ('may', 'may'), ('take', 'take'), ('values', 'value'), ('from', 'from'), ('a', 'a'), ('finite', 'finite'), ('set', 'set'), (',', ','), ('denoted', 'denote'), ('by', 'by'), ('Val', 'Val'), ('(', '('), ('Xi', 'xi'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Consider', 'root'), 'root'), (('a', 'X'), 'det'), (('finite', 'X'), 'amod'), (('set', 'X'), 'compound'), (('X', 'Consider'), 'obj'), (('=', 'Consider'), 'ccomp'), (('{', 'X1'), 'punct'), (('X1', '='), 'obj'), ((',', 'X2'), 'punct'), (('X2', 'X1'), 'conj'), ((',', 'X1'), 'punct'), (('…', 'X1'), 'punct'), ((',', 'Xn}'), 'punct'), (('Xn}', 'X1'), 'conj'), (('of', 'variables'), 'case'), (('discrete', 'variables'), 'amod'), (('random', 'variables'), 'amod'), (('variables', 'Xn}'), 'nmod'), ((',', 'take'), 'punct'), (('where', 'take'), 'mark'), (('each', 'Xi'), 'det'), (('variable', 'Xi'), 'amod'), (('Xi', 'take'), 'nsubj'), (('may', 'take'), 'aux'), (('take', 'X1'), 'acl:relcl'), (('values', 'take'), 'obj'), (('from', 'set'), 'case'), (('a', 'set'), 'det'), (('finite', 'set'), 'amod'), (('set', 'take'), 'obl'), ((',', 'denoted'), 'punct'), (('denoted', 'set'), 'acl'), (('by', 'Val'), 'case'), (('Val', 'denoted'), 'obl'), (('(', 'Xi'), 'punct'), (('Xi', 'denoted'), 'obl:tmod'), ((')', 'Xi'), 'punct'), (('.', 'Consider'), 'punct')]

 Named Entities are: 
>> [('Xi', 'PERSON'), ('Val(Xi', 'ORG')]

========================== Sentence 44 ===========================

 If there is a directed link from variable Xi to variable, Xj, then variable Xi will be a parent of variable Xj showing direct dependencies between the variables. 

Tokens are: 
>> ['If', 'there', 'is', 'a', 'directed', 'link', 'from', 'variable', 'Xi', 'to', 'variable', ',', 'Xj', ',', 'then', 'variable', 'Xi', 'will', 'be', 'a', 'parent', 'of', 'variable', 'Xj', 'showing', 'direct', 'dependencies', 'between', 'the', 'variables', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('directed', 'VERB'), ('link', 'NOUN'), ('from', 'ADP'), ('variable', 'ADJ'), ('Xi', 'NOUN'), ('to', 'ADP'), ('variable', 'ADJ'), (',', 'PUNCT'), ('Xj', 'PROPN'), (',', 'PUNCT'), ('then', 'ADV'), ('variable', 'ADJ'), ('Xi', 'PROPN'), ('will', 'AUX'), ('be', 'AUX'), ('a', 'DET'), ('parent', 'NOUN'), ('of', 'ADP'), ('variable', 'ADJ'), ('Xj', 'NOUN'), ('showing', 'VERB'), ('direct', 'ADJ'), ('dependencies', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('directed', 'VBN'), ('link', 'NN'), ('from', 'IN'), ('variable', 'JJ'), ('Xi', 'NN'), ('to', 'IN'), ('variable', 'JJ'), (',', ','), ('Xj', 'NNP'), (',', ','), ('then', 'RB'), ('variable', 'JJ'), ('Xi', 'NNP'), ('will', 'MD'), ('be', 'VB'), ('a', 'DT'), ('parent', 'NN'), ('of', 'IN'), ('variable', 'JJ'), ('Xj', 'NN'), ('showing', 'VBG'), ('direct', 'JJ'), ('dependencies', 'NNS'), ('between', 'IN'), ('the', 'DT'), ('variables', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('directed', 'direct'), ('link', 'link'), ('from', 'from'), ('variable', 'variable'), ('Xi', 'xi'), ('to', 'to'), ('variable', 'variable'), (',', ','), ('Xj', 'Xj'), (',', ','), ('then', 'then'), ('variable', 'variable'), ('Xi', 'Xi'), ('will', 'will'), ('be', 'be'), ('a', 'a'), ('parent', 'parent'), ('of', 'of'), ('variable', 'variable'), ('Xj', 'xj'), ('showing', 'show'), ('direct', 'direct'), ('dependencies', 'dependency'), ('between', 'between'), ('the', 'the'), ('variables', 'variable'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'parent'), 'advcl'), (('a', 'link'), 'det'), (('directed', 'link'), 'amod'), (('link', 'is'), 'nsubj'), (('from', 'Xi'), 'case'), (('variable', 'Xi'), 'amod'), (('Xi', 'link'), 'nmod'), (('to', 'Xj'), 'case'), (('variable', 'Xj'), 'amod'), ((',', 'Xj'), 'punct'), (('Xj', 'Xi'), 'nmod'), ((',', 'is'), 'punct'), (('then', 'parent'), 'advmod'), (('variable', 'Xi'), 'amod'), (('Xi', 'parent'), 'nsubj'), (('will', 'parent'), 'aux'), (('be', 'parent'), 'cop'), (('a', 'parent'), 'det'), (('parent', 'root'), 'root'), (('of', 'Xj'), 'case'), (('variable', 'Xj'), 'amod'), (('Xj', 'parent'), 'nmod'), (('showing', 'Xj'), 'acl'), (('direct', 'dependencies'), 'amod'), (('dependencies', 'showing'), 'obj'), (('between', 'variables'), 'case'), (('the', 'variables'), 'det'), (('variables', 'dependencies'), 'nmod'), (('.', 'parent'), 'punct')]

 Named Entities are: 
>> [('Xi', 'PERSON'), ('Xi', 'PERSON')]

========================== Sentence 45 ===========================

 The structure of BN is ideal for combining prior knowledge and observed data. 

Tokens are: 
>> ['The', 'structure', 'of', 'BN', 'is', 'ideal', 'for', 'combining', 'prior', 'knowledge', 'and', 'observed', 'data', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('structure', 'NOUN'), ('of', 'ADP'), ('BN', 'PROPN'), ('is', 'AUX'), ('ideal', 'ADJ'), ('for', 'SCONJ'), ('combining', 'VERB'), ('prior', 'ADJ'), ('knowledge', 'NOUN'), ('and', 'CCONJ'), ('observed', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('structure', 'NN'), ('of', 'IN'), ('BN', 'NNP'), ('is', 'VBZ'), ('ideal', 'JJ'), ('for', 'IN'), ('combining', 'VBG'), ('prior', 'JJ'), ('knowledge', 'NN'), ('and', 'CC'), ('observed', 'VBN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('structure', 'structure'), ('of', 'of'), ('BN', 'BN'), ('is', 'be'), ('ideal', 'ideal'), ('for', 'for'), ('combining', 'combine'), ('prior', 'prior'), ('knowledge', 'knowledge'), ('and', 'and'), ('observed', 'observe'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'structure'), 'det'), (('structure', 'ideal'), 'nsubj'), (('of', 'BN'), 'case'), (('BN', 'structure'), 'nmod'), (('is', 'ideal'), 'cop'), (('ideal', 'root'), 'root'), (('for', 'combining'), 'mark'), (('combining', 'ideal'), 'advcl'), (('prior', 'knowledge'), 'amod'), (('knowledge', 'combining'), 'obj'), (('and', 'data'), 'cc'), (('observed', 'data'), 'amod'), (('data', 'knowledge'), 'conj'), (('.', 'ideal'), 'punct')]

 Named Entities are: 
>> [('BN', 'ORG')]

========================== Sentence 46 ===========================

 BN can be used to learn the causal relationships and understand various problem domains and to predict future events, even in case of missing data. 

Tokens are: 
>> ['BN', 'can', 'be', 'used', 'to', 'learn', 'the', 'causal', 'relationships', 'and', 'understand', 'various', 'problem', 'domains', 'and', 'to', 'predict', 'future', 'events', ',', 'even', 'in', 'case', 'of', 'missing', 'data', '.'] 

 UPOS tags are: 
>> [('BN', 'PROPN'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('learn', 'VERB'), ('the', 'DET'), ('causal', 'ADJ'), ('relationships', 'NOUN'), ('and', 'CCONJ'), ('understand', 'VERB'), ('various', 'ADJ'), ('problem', 'NOUN'), ('domains', 'NOUN'), ('and', 'CCONJ'), ('to', 'PART'), ('predict', 'VERB'), ('future', 'ADJ'), ('events', 'NOUN'), (',', 'PUNCT'), ('even', 'ADV'), ('in', 'ADP'), ('case', 'NOUN'), ('of', 'ADP'), ('missing', 'VERB'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('BN', 'NNP'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('learn', 'VB'), ('the', 'DT'), ('causal', 'JJ'), ('relationships', 'NNS'), ('and', 'CC'), ('understand', 'VB'), ('various', 'JJ'), ('problem', 'NN'), ('domains', 'NNS'), ('and', 'CC'), ('to', 'TO'), ('predict', 'VB'), ('future', 'JJ'), ('events', 'NNS'), (',', ','), ('even', 'RB'), ('in', 'IN'), ('case', 'NN'), ('of', 'IN'), ('missing', 'VBG'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('BN', 'BN'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('learn', 'learn'), ('the', 'the'), ('causal', 'causal'), ('relationships', 'relationship'), ('and', 'and'), ('understand', 'understand'), ('various', 'various'), ('problem', 'problem'), ('domains', 'domain'), ('and', 'and'), ('to', 'to'), ('predict', 'predict'), ('future', 'future'), ('events', 'event'), (',', ','), ('even', 'even'), ('in', 'in'), ('case', 'case'), ('of', 'of'), ('missing', 'miss'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('BN', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'learn'), 'mark'), (('learn', 'used'), 'xcomp'), (('the', 'relationships'), 'det'), (('causal', 'relationships'), 'amod'), (('relationships', 'learn'), 'obj'), (('and', 'understand'), 'cc'), (('understand', 'learn'), 'conj'), (('various', 'domains'), 'amod'), (('problem', 'domains'), 'compound'), (('domains', 'understand'), 'obj'), (('and', 'predict'), 'cc'), (('to', 'predict'), 'mark'), (('predict', 'understand'), 'conj'), (('future', 'events'), 'amod'), (('events', 'predict'), 'obj'), ((',', 'data'), 'punct'), (('even', 'data'), 'advmod'), (('in', 'data'), 'case'), (('case', 'in'), 'fixed'), (('of', 'in'), 'fixed'), (('missing', 'data'), 'amod'), (('data', 'predict'), 'obl'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> [('BN', 'ORG')]

========================== Sentence 47 ===========================

 Building a Bayesian Network 

Tokens are: 
>> ['Building', 'a', 'Bayesian', 'Network'] 

 UPOS tags are: 
>> [('Building', 'VERB'), ('a', 'DET'), ('Bayesian', 'ADJ'), ('Network', 'NOUN')] 

 XPOS tags are: 
>> [('Building', 'VBG'), ('a', 'DT'), ('Bayesian', 'JJ'), ('Network', 'NN')] 

 Lemmas are: 
>> [('Building', 'Building'), ('a', 'a'), ('Bayesian', 'Bayesian'), ('Network', 'network')] 

 Dependency tags are: 
>> [(('Building', 'root'), 'root'), (('a', 'Network'), 'det'), (('Bayesian', 'Network'), 'amod'), (('Network', 'Building'), 'obj')]

 Named Entities are: 
>> [('Bayesian', 'NORP')]

========================== Sentence 48 ===========================

 A knowledge engineer can build a Bayesian network. 

Tokens are: 
>> ['A', 'knowledge', 'engineer', 'can', 'build', 'a', 'Bayesian', 'network', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('can', 'AUX'), ('build', 'VERB'), ('a', 'DET'), ('Bayesian', 'ADJ'), ('network', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('can', 'MD'), ('build', 'VB'), ('a', 'DT'), ('Bayesian', 'JJ'), ('network', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('can', 'can'), ('build', 'build'), ('a', 'a'), ('Bayesian', 'Bayesian'), ('network', 'network'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'build'), 'nsubj'), (('can', 'build'), 'aux'), (('build', 'root'), 'root'), (('a', 'network'), 'det'), (('Bayesian', 'network'), 'amod'), (('network', 'build'), 'obj'), (('.', 'build'), 'punct')]

 Named Entities are: 
>> [('Bayesian', 'NORP')]

========================== Sentence 49 ===========================

 There are a number of steps the knowledge engineer needs to take while building it. 

Tokens are: 
>> ['There', 'are', 'a', 'number', 'of', 'steps', 'the', 'knowledge', 'engineer', 'needs', 'to', 'take', 'while', 'building', 'it', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('a', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('steps', 'NOUN'), ('the', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('needs', 'VERB'), ('to', 'PART'), ('take', 'VERB'), ('while', 'SCONJ'), ('building', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('a', 'DT'), ('number', 'NN'), ('of', 'IN'), ('steps', 'NNS'), ('the', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('needs', 'VBZ'), ('to', 'TO'), ('take', 'VB'), ('while', 'IN'), ('building', 'VBG'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('a', 'a'), ('number', 'number'), ('of', 'of'), ('steps', 'step'), ('the', 'the'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('needs', 'need'), ('to', 'to'), ('take', 'take'), ('while', 'while'), ('building', 'build'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('a', 'number'), 'det'), (('number', 'are'), 'nsubj'), (('of', 'steps'), 'case'), (('steps', 'number'), 'nmod'), (('the', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'needs'), 'nsubj'), (('needs', 'steps'), 'acl:relcl'), (('to', 'take'), 'mark'), (('take', 'needs'), 'xcomp'), (('while', 'building'), 'mark'), (('building', 'take'), 'advcl'), (('it', 'building'), 'obj'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 50 ===========================

 Example problem − Lung cancer. 

Tokens are: 
>> ['Example', 'problem', '−', 'Lung', 'cancer', '.'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), ('problem', 'NOUN'), ('−', 'PUNCT'), ('Lung', 'NOUN'), ('cancer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Example', 'NN'), ('problem', 'NN'), ('−', ','), ('Lung', 'NN'), ('cancer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Example', 'example'), ('problem', 'problem'), ('−', "''"), ('Lung', 'lung'), ('cancer', 'cancer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Example', 'problem'), 'compound'), (('problem', 'root'), 'root'), (('−', 'problem'), 'punct'), (('Lung', 'cancer'), 'compound'), (('cancer', 'problem'), 'parataxis'), (('.', 'problem'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 51 ===========================

 A patient has been suffering from breathlessness. 

Tokens are: 
>> ['A', 'patient', 'has', 'been', 'suffering', 'from', 'breathlessness', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('patient', 'NOUN'), ('has', 'AUX'), ('been', 'AUX'), ('suffering', 'VERB'), ('from', 'ADP'), ('breathlessness', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('patient', 'NN'), ('has', 'VBZ'), ('been', 'VBN'), ('suffering', 'VBG'), ('from', 'IN'), ('breathlessness', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('patient', 'patient'), ('has', 'have'), ('been', 'be'), ('suffering', 'suffer'), ('from', 'from'), ('breathlessness', 'breathlessness'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'patient'), 'det'), (('patient', 'suffering'), 'nsubj'), (('has', 'suffering'), 'aux'), (('been', 'suffering'), 'aux'), (('suffering', 'root'), 'root'), (('from', 'breathlessness'), 'case'), (('breathlessness', 'suffering'), 'obl'), (('.', 'suffering'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 He visits the doctor, suspecting he has lung cancer. 

Tokens are: 
>> ['He', 'visits', 'the', 'doctor', ',', 'suspecting', 'he', 'has', 'lung', 'cancer', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('visits', 'VERB'), ('the', 'DET'), ('doctor', 'NOUN'), (',', 'PUNCT'), ('suspecting', 'VERB'), ('he', 'PRON'), ('has', 'VERB'), ('lung', 'NOUN'), ('cancer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('visits', 'VBZ'), ('the', 'DT'), ('doctor', 'NN'), (',', ','), ('suspecting', 'VBG'), ('he', 'PRP'), ('has', 'VBZ'), ('lung', 'NN'), ('cancer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('visits', 'visit'), ('the', 'the'), ('doctor', 'doctor'), (',', ','), ('suspecting', 'suspect'), ('he', 'he'), ('has', 'have'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'visits'), 'nsubj'), (('visits', 'root'), 'root'), (('the', 'doctor'), 'det'), (('doctor', 'visits'), 'obj'), ((',', 'visits'), 'punct'), (('suspecting', 'visits'), 'advcl'), (('he', 'has'), 'nsubj'), (('has', 'suspecting'), 'ccomp'), (('lung', 'cancer'), 'compound'), (('cancer', 'has'), 'obj'), (('.', 'visits'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 The doctor knows that barring lung cancer, there are various other possible diseases the patient might have such as tuberculosis and bronchitis. 

Tokens are: 
>> ['The', 'doctor', 'knows', 'that', 'barring', 'lung', 'cancer', ',', 'there', 'are', 'various', 'other', 'possible', 'diseases', 'the', 'patient', 'might', 'have', 'such', 'as', 'tuberculosis', 'and', 'bronchitis', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('doctor', 'NOUN'), ('knows', 'VERB'), ('that', 'SCONJ'), ('barring', 'VERB'), ('lung', 'NOUN'), ('cancer', 'NOUN'), (',', 'PUNCT'), ('there', 'PRON'), ('are', 'VERB'), ('various', 'ADJ'), ('other', 'ADJ'), ('possible', 'ADJ'), ('diseases', 'NOUN'), ('the', 'DET'), ('patient', 'NOUN'), ('might', 'AUX'), ('have', 'VERB'), ('such', 'ADJ'), ('as', 'ADP'), ('tuberculosis', 'NOUN'), ('and', 'CCONJ'), ('bronchitis', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('doctor', 'NN'), ('knows', 'VBZ'), ('that', 'IN'), ('barring', 'VBG'), ('lung', 'NN'), ('cancer', 'NN'), (',', ','), ('there', 'EX'), ('are', 'VBP'), ('various', 'JJ'), ('other', 'JJ'), ('possible', 'JJ'), ('diseases', 'NNS'), ('the', 'DT'), ('patient', 'NN'), ('might', 'MD'), ('have', 'VB'), ('such', 'JJ'), ('as', 'IN'), ('tuberculosis', 'NN'), ('and', 'CC'), ('bronchitis', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('doctor', 'doctor'), ('knows', 'know'), ('that', 'that'), ('barring', 'barr'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('there', 'there'), ('are', 'be'), ('various', 'various'), ('other', 'other'), ('possible', 'possible'), ('diseases', 'disease'), ('the', 'the'), ('patient', 'patient'), ('might', 'might'), ('have', 'have'), ('such', 'such'), ('as', 'as'), ('tuberculosis', 'tuberculosis'), ('and', 'and'), ('bronchitis', 'bronchitis'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'doctor'), 'det'), (('doctor', 'knows'), 'nsubj'), (('knows', 'root'), 'root'), (('that', 'are'), 'mark'), (('barring', 'are'), 'advcl'), (('lung', 'cancer'), 'compound'), (('cancer', 'barring'), 'obj'), ((',', 'are'), 'punct'), (('there', 'are'), 'expl'), (('are', 'knows'), 'ccomp'), (('various', 'diseases'), 'amod'), (('other', 'diseases'), 'amod'), (('possible', 'diseases'), 'amod'), (('diseases', 'are'), 'nsubj'), (('the', 'patient'), 'det'), (('patient', 'have'), 'nsubj'), (('might', 'have'), 'aux'), (('have', 'diseases'), 'acl:relcl'), (('such', 'tuberculosis'), 'case'), (('as', 'such'), 'fixed'), (('tuberculosis', 'have'), 'obl'), (('and', 'bronchitis'), 'cc'), (('bronchitis', 'tuberculosis'), 'conj'), (('.', 'knows'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 Gather Relevant Information of Problem · 

Tokens are: 
>> ['Gather', 'Relevant', 'Information', 'of', 'Problem', '·'] 

 UPOS tags are: 
>> [('Gather', 'VERB'), ('Relevant', 'ADJ'), ('Information', 'NOUN'), ('of', 'ADP'), ('Problem', 'NOUN'), ('·', 'PUNCT')] 

 XPOS tags are: 
>> [('Gather', 'VB'), ('Relevant', 'JJ'), ('Information', 'NN'), ('of', 'IN'), ('Problem', 'NN'), ('·', 'NFP')] 

 Lemmas are: 
>> [('Gather', 'gather'), ('Relevant', 'relevant'), ('Information', 'information'), ('of', 'of'), ('Problem', 'problem'), ('·', '·')] 

 Dependency tags are: 
>> [(('Gather', 'root'), 'root'), (('Relevant', 'Information'), 'amod'), (('Information', 'Gather'), 'obj'), (('of', 'Problem'), 'case'), (('Problem', 'Information'), 'nmod'), (('·', 'Gather'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 55 ===========================

 Is the patient a smoker? 

Tokens are: 
>> ['Is', 'the', 'patient', 'a', 'smoker', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('the', 'DET'), ('patient', 'NOUN'), ('a', 'DET'), ('smoker', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('the', 'DT'), ('patient', 'NN'), ('a', 'DT'), ('smoker', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('the', 'the'), ('patient', 'patient'), ('a', 'a'), ('smoker', 'smoker'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'smoker'), 'cop'), (('the', 'patient'), 'det'), (('patient', 'smoker'), 'nsubj'), (('a', 'smoker'), 'det'), (('smoker', 'root'), 'root'), (('?', 'smoker'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 56 ===========================

 If yes, then high chances of cancer and bronchitis. 

Tokens are: 
>> ['If', 'yes', ',', 'then', 'high', 'chances', 'of', 'cancer', 'and', 'bronchitis', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('yes', 'INTJ'), (',', 'PUNCT'), ('then', 'ADV'), ('high', 'ADJ'), ('chances', 'NOUN'), ('of', 'ADP'), ('cancer', 'NOUN'), ('and', 'CCONJ'), ('bronchitis', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('yes', 'UH'), (',', ','), ('then', 'RB'), ('high', 'JJ'), ('chances', 'NNS'), ('of', 'IN'), ('cancer', 'NN'), ('and', 'CC'), ('bronchitis', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('yes', 'yes'), (',', ','), ('then', 'then'), ('high', 'high'), ('chances', 'chance'), ('of', 'of'), ('cancer', 'cancer'), ('and', 'and'), ('bronchitis', 'bronchitis'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'yes'), 'mark'), (('yes', 'chances'), 'advcl'), ((',', 'chances'), 'punct'), (('then', 'chances'), 'advmod'), (('high', 'chances'), 'amod'), (('chances', 'root'), 'root'), (('of', 'cancer'), 'case'), (('cancer', 'chances'), 'nmod'), (('and', 'bronchitis'), 'cc'), (('bronchitis', 'cancer'), 'conj'), (('.', 'chances'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 Is the patient exposed to air pollution? 

Tokens are: 
>> ['Is', 'the', 'patient', 'exposed', 'to', 'air', 'pollution', '?'] 

 UPOS tags are: 
>> [('Is', 'AUX'), ('the', 'DET'), ('patient', 'NOUN'), ('exposed', 'VERB'), ('to', 'ADP'), ('air', 'NOUN'), ('pollution', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Is', 'VBZ'), ('the', 'DT'), ('patient', 'NN'), ('exposed', 'VBN'), ('to', 'IN'), ('air', 'NN'), ('pollution', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('Is', 'be'), ('the', 'the'), ('patient', 'patient'), ('exposed', 'expose'), ('to', 'to'), ('air', 'air'), ('pollution', 'pollution'), ('?', '?')] 

 Dependency tags are: 
>> [(('Is', 'exposed'), 'cop'), (('the', 'patient'), 'det'), (('patient', 'exposed'), 'nsubj'), (('exposed', 'root'), 'root'), (('to', 'pollution'), 'case'), (('air', 'pollution'), 'compound'), (('pollution', 'exposed'), 'obl'), (('?', 'exposed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 If yes, what sort of air pollution? 

Tokens are: 
>> ['If', 'yes', ',', 'what', 'sort', 'of', 'air', 'pollution', '?'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('yes', 'INTJ'), (',', 'PUNCT'), ('what', 'DET'), ('sort', 'NOUN'), ('of', 'ADP'), ('air', 'NOUN'), ('pollution', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('yes', 'UH'), (',', ','), ('what', 'WDT'), ('sort', 'NN'), ('of', 'IN'), ('air', 'NN'), ('pollution', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('yes', 'yes'), (',', ','), ('what', 'what'), ('sort', 'sort'), ('of', 'of'), ('air', 'air'), ('pollution', 'pollution'), ('?', '?')] 

 Dependency tags are: 
>> [(('If', 'yes'), 'mark'), (('yes', 'sort'), 'advcl'), ((',', 'sort'), 'punct'), (('what', 'sort'), 'det'), (('sort', 'root'), 'root'), (('of', 'pollution'), 'case'), (('air', 'pollution'), 'compound'), (('pollution', 'sort'), 'nmod'), (('?', 'sort'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 · Take an X-Ray positive X-ray would indicate either TB or lung cancer. 

Tokens are: 
>> ['·', 'Take', 'an', 'X', '-', 'Ray', 'positive', 'X', '-ray', 'would', 'indicate', 'either', 'TB', 'or', 'lung', 'cancer', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Take', 'VERB'), ('an', 'DET'), ('X', 'NOUN'), ('-', 'PUNCT'), ('Ray', 'PROPN'), ('positive', 'ADJ'), ('X', 'NOUN'), ('-ray', 'NOUN'), ('would', 'AUX'), ('indicate', 'VERB'), ('either', 'CCONJ'), ('TB', 'NOUN'), ('or', 'CCONJ'), ('lung', 'NOUN'), ('cancer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Take', 'VB'), ('an', 'DT'), ('X', 'NN'), ('-', 'HYPH'), ('Ray', 'NNP'), ('positive', 'JJ'), ('X', 'NN'), ('-ray', 'NN'), ('would', 'MD'), ('indicate', 'VB'), ('either', 'CC'), ('TB', 'NN'), ('or', 'CC'), ('lung', 'NN'), ('cancer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Take', 'take'), ('an', 'a'), ('X', 'x'), ('-', '-'), ('Ray', 'Ray'), ('positive', 'positive'), ('X', 'x'), ('-ray', '-ray'), ('would', 'would'), ('indicate', 'indicate'), ('either', 'either'), ('TB', 'TB'), ('or', 'or'), ('lung', 'lung'), ('cancer', 'cancer'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Take'), 'punct'), (('Take', 'root'), 'root'), (('an', '-ray'), 'det'), (('X', 'Ray'), 'compound'), (('-', 'Ray'), 'punct'), (('Ray', '-ray'), 'compound'), (('positive', '-ray'), 'amod'), (('X', '-ray'), 'compound'), (('-ray', 'indicate'), 'nsubj'), (('would', 'indicate'), 'aux'), (('indicate', 'Take'), 'ccomp'), (('either', 'TB'), 'cc:preconj'), (('TB', 'cancer'), 'compound'), (('or', 'lung'), 'cc'), (('lung', 'TB'), 'conj'), (('cancer', 'indicate'), 'obj'), (('.', 'Take'), 'punct')]

 Named Entities are: 
>> [('X-Ray', 'PRODUCT')]

========================== Sentence 61 ===========================

 Identify Interesting Variables 

Tokens are: 
>> ['Identify', 'Interesting', 'Variables'] 

 UPOS tags are: 
>> [('Identify', 'VERB'), ('Interesting', 'ADJ'), ('Variables', 'NOUN')] 

 XPOS tags are: 
>> [('Identify', 'VB'), ('Interesting', 'JJ'), ('Variables', 'NNS')] 

 Lemmas are: 
>> [('Identify', 'identify'), ('Interesting', 'interesting'), ('Variables', 'variable')] 

 Dependency tags are: 
>> [(('Identify', 'root'), 'root'), (('Interesting', 'Variables'), 'amod'), (('Variables', 'Identify'), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 62 ===========================

 The knowledge engineer tries to answer the questions − · Which nodes to represent? 

Tokens are: 
>> ['The', 'knowledge', 'engineer', 'tries', 'to', 'answer', 'the', 'questions', '−', '·', 'Which', 'nodes', 'to', 'represent', '?'] 

 UPOS tags are: 
>> [('The', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('tries', 'VERB'), ('to', 'PART'), ('answer', 'VERB'), ('the', 'DET'), ('questions', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Which', 'DET'), ('nodes', 'VERB'), ('to', 'PART'), ('represent', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('tries', 'VBZ'), ('to', 'TO'), ('answer', 'VB'), ('the', 'DT'), ('questions', 'NNS'), ('−', ','), ('·', 'NFP'), ('Which', 'WDT'), ('nodes', 'VBZ'), ('to', 'TO'), ('represent', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('tries', 'try'), ('to', 'to'), ('answer', 'answer'), ('the', 'the'), ('questions', 'question'), ('−', "''"), ('·', '·'), ('Which', 'which'), ('nodes', 'node'), ('to', 'to'), ('represent', 'represent'), ('?', '?')] 

 Dependency tags are: 
>> [(('The', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'tries'), 'nsubj'), (('tries', 'root'), 'root'), (('to', 'answer'), 'mark'), (('answer', 'tries'), 'xcomp'), (('the', 'questions'), 'det'), (('questions', 'answer'), 'obj'), (('−', 'tries'), 'punct'), (('·', 'tries'), 'punct'), (('Which', 'nodes'), 'nsubj'), (('nodes', 'tries'), 'parataxis'), (('to', 'represent'), 'mark'), (('represent', 'nodes'), 'xcomp'), (('?', 'tries'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 64 ===========================

 What values can they take? 

Tokens are: 
>> ['What', 'values', 'can', 'they', 'take', '?'] 

 UPOS tags are: 
>> [('What', 'DET'), ('values', 'NOUN'), ('can', 'AUX'), ('they', 'PRON'), ('take', 'VERB'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WDT'), ('values', 'NNS'), ('can', 'MD'), ('they', 'PRP'), ('take', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('values', 'value'), ('can', 'can'), ('they', 'they'), ('take', 'take'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'values'), 'det'), (('values', 'take'), 'obj'), (('can', 'take'), 'aux'), (('they', 'take'), 'nsubj'), (('take', 'root'), 'root'), (('?', 'take'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 65 ===========================

 In which state can they be? 

Tokens are: 
>> ['In', 'which', 'state', 'can', 'they', 'be', '?'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('which', 'DET'), ('state', 'NOUN'), ('can', 'AUX'), ('they', 'PRON'), ('be', 'AUX'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('which', 'WDT'), ('state', 'NN'), ('can', 'MD'), ('they', 'PRP'), ('be', 'VB'), ('?', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('which', 'which'), ('state', 'state'), ('can', 'can'), ('they', 'they'), ('be', 'be'), ('?', '?')] 

 Dependency tags are: 
>> [(('In', 'state'), 'case'), (('which', 'state'), 'det'), (('state', 'be'), 'obl'), (('can', 'be'), 'aux'), (('they', 'be'), 'nsubj'), (('be', 'root'), 'root'), (('?', 'be'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 66 ===========================

 For now let us consider nodes, with only discrete values. 

Tokens are: 
>> ['For', 'now', 'let', 'us', 'consider', 'nodes', ',', 'with', 'only', 'discrete', 'values', '.'] 

 UPOS tags are: 
>> [('For', 'PART'), ('now', 'ADV'), ('let', 'VERB'), ('us', 'PRON'), ('consider', 'VERB'), ('nodes', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('only', 'ADV'), ('discrete', 'ADJ'), ('values', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'TO'), ('now', 'RB'), ('let', 'VB'), ('us', 'PRP'), ('consider', 'VB'), ('nodes', 'NNS'), (',', ','), ('with', 'IN'), ('only', 'RB'), ('discrete', 'JJ'), ('values', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('now', 'now'), ('let', 'let'), ('us', 'we'), ('consider', 'consider'), ('nodes', 'node'), (',', ','), ('with', 'with'), ('only', 'only'), ('discrete', 'discrete'), ('values', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'let'), 'mark'), (('now', 'let'), 'advmod'), (('let', 'root'), 'root'), (('us', 'let'), 'obj'), (('consider', 'let'), 'xcomp'), (('nodes', 'consider'), 'obj'), ((',', 'values'), 'punct'), (('with', 'values'), 'case'), (('only', 'values'), 'advmod'), (('discrete', 'values'), 'amod'), (('values', 'consider'), 'obl'), (('.', 'let'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 67 ===========================

 The variable must take on exactly one of these values at a time. 

Tokens are: 
>> ['The', 'variable', 'must', 'take', 'on', 'exactly', 'one', 'of', 'these', 'values', 'at', 'a', 'time', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('variable', 'NOUN'), ('must', 'AUX'), ('take', 'VERB'), ('on', 'ADP'), ('exactly', 'ADV'), ('one', 'NUM'), ('of', 'ADP'), ('these', 'DET'), ('values', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('variable', 'NN'), ('must', 'MD'), ('take', 'VB'), ('on', 'IN'), ('exactly', 'RB'), ('one', 'CD'), ('of', 'IN'), ('these', 'DT'), ('values', 'NNS'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('variable', 'variable'), ('must', 'must'), ('take', 'take'), ('on', 'on'), ('exactly', 'exactly'), ('one', 'one'), ('of', 'of'), ('these', 'this'), ('values', 'value'), ('at', 'at'), ('a', 'a'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'variable'), 'det'), (('variable', 'take'), 'nsubj'), (('must', 'take'), 'aux'), (('take', 'root'), 'root'), (('on', 'take'), 'compound:prt'), (('exactly', 'one'), 'advmod'), (('one', 'take'), 'obj'), (('of', 'values'), 'case'), (('these', 'values'), 'det'), (('values', 'one'), 'nmod'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'take'), 'obl'), (('.', 'take'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 68 ===========================

 Common types of discrete nodes are − · Boolean nodes − 

Tokens are: 
>> ['Common', 'types', 'of', 'discrete', 'nodes', 'are', '−', '·', 'Boolean', 'nodes', '−'] 

 UPOS tags are: 
>> [('Common', 'ADJ'), ('types', 'NOUN'), ('of', 'ADP'), ('discrete', 'ADJ'), ('nodes', 'NOUN'), ('are', 'AUX'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Boolean', 'NOUN'), ('nodes', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Common', 'JJ'), ('types', 'NNS'), ('of', 'IN'), ('discrete', 'JJ'), ('nodes', 'NNS'), ('are', 'VBP'), ('−', ','), ('·', 'NFP'), ('Boolean', 'NN'), ('nodes', 'NNS'), ('−', '.')] 

 Lemmas are: 
>> [('Common', 'common'), ('types', 'type'), ('of', 'of'), ('discrete', 'discrete'), ('nodes', 'node'), ('are', 'be'), ('−', "''"), ('·', '·'), ('Boolean', 'boolean'), ('nodes', 'node'), ('−', "''")] 

 Dependency tags are: 
>> [(('Common', 'types'), 'amod'), (('types', 'nodes'), 'nsubj'), (('of', 'nodes'), 'case'), (('discrete', 'nodes'), 'amod'), (('nodes', 'types'), 'nmod'), (('are', 'nodes'), 'cop'), (('−', 'nodes'), 'punct'), (('·', 'nodes'), 'punct'), (('Boolean', 'nodes'), 'compound'), (('nodes', 'root'), 'root'), (('−', 'nodes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 69 ===========================

 They represent propositions, taking binary values TRUE (T) and FALSE (F). 

Tokens are: 
>> ['They', 'represent', 'propositions', ',', 'taking', 'binary', 'values', 'TRUE', '(', 'T', ')', 'and', 'FALSE', '(', 'F', ')', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('represent', 'VERB'), ('propositions', 'NOUN'), (',', 'PUNCT'), ('taking', 'VERB'), ('binary', 'ADJ'), ('values', 'NOUN'), ('TRUE', 'ADJ'), ('(', 'PUNCT'), ('T', 'NOUN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('FALSE', 'ADJ'), ('(', 'PUNCT'), ('F', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('represent', 'VBP'), ('propositions', 'NNS'), (',', ','), ('taking', 'VBG'), ('binary', 'JJ'), ('values', 'NNS'), ('TRUE', 'JJ'), ('(', '-LRB-'), ('T', 'NN'), (')', '-RRB-'), ('and', 'CC'), ('FALSE', 'JJ'), ('(', '-LRB-'), ('F', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('represent', 'represent'), ('propositions', 'proposition'), (',', ','), ('taking', 'take'), ('binary', 'binary'), ('values', 'value'), ('TRUE', 'true'), ('(', '('), ('T', 'T'), (')', ')'), ('and', 'and'), ('FALSE', 'false'), ('(', '('), ('F', 'F'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'represent'), 'nsubj'), (('represent', 'root'), 'root'), (('propositions', 'represent'), 'obj'), ((',', 'taking'), 'punct'), (('taking', 'represent'), 'advcl'), (('binary', 'values'), 'amod'), (('values', 'taking'), 'obj'), (('TRUE', 'values'), 'amod'), (('(', 'T'), 'punct'), (('T', 'TRUE'), 'appos'), ((')', 'T'), 'punct'), (('and', 'FALSE'), 'cc'), (('FALSE', 'TRUE'), 'conj'), (('(', 'F'), 'punct'), (('F', 'FALSE'), 'appos'), ((')', 'F'), 'punct'), (('.', 'represent'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 70 ===========================

 · Ordered values − A node Pollution might represent and take values from {low, medium, high} describing degree of a patient’s exposure to pollution. 

Tokens are: 
>> ['·', 'Ordered', 'values', '−', 'A', 'node', 'Pollution', 'might', 'represent', 'and', 'take', 'values', 'from', '{', 'low', ',', 'medium', ',', 'high}', 'describing', 'degree', 'of', 'a', 'patient', '’s', 'exposure', 'to', 'pollution', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Ordered', 'VERB'), ('values', 'NOUN'), ('−', 'PUNCT'), ('A', 'DET'), ('node', 'NOUN'), ('Pollution', 'NOUN'), ('might', 'AUX'), ('represent', 'VERB'), ('and', 'CCONJ'), ('take', 'VERB'), ('values', 'NOUN'), ('from', 'ADP'), ('{', 'PUNCT'), ('low', 'ADJ'), (',', 'PUNCT'), ('medium', 'ADJ'), (',', 'PUNCT'), ('high}', 'NOUN'), ('describing', 'VERB'), ('degree', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('patient', 'NOUN'), ('’s', 'PART'), ('exposure', 'NOUN'), ('to', 'ADP'), ('pollution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Ordered', 'VBN'), ('values', 'NNS'), ('−', ','), ('A', 'DT'), ('node', 'NN'), ('Pollution', 'NN'), ('might', 'MD'), ('represent', 'VB'), ('and', 'CC'), ('take', 'VB'), ('values', 'NNS'), ('from', 'IN'), ('{', 'NFP'), ('low', 'JJ'), (',', ','), ('medium', 'JJ'), (',', ','), ('high}', 'NN'), ('describing', 'VBG'), ('degree', 'NN'), ('of', 'IN'), ('a', 'DT'), ('patient', 'NN'), ('’s', 'POS'), ('exposure', 'NN'), ('to', 'IN'), ('pollution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Ordered', 'order'), ('values', 'value'), ('−', "''"), ('A', 'a'), ('node', 'node'), ('Pollution', 'pollution'), ('might', 'might'), ('represent', 'represent'), ('and', 'and'), ('take', 'take'), ('values', 'value'), ('from', 'from'), ('{', '{'), ('low', 'low'), (',', ','), ('medium', 'medium'), (',', ','), ('high}', 'high}'), ('describing', 'describe'), ('degree', 'degree'), ('of', 'of'), ('a', 'a'), ('patient', 'patient'), ('’s', "'s"), ('exposure', 'exposure'), ('to', 'to'), ('pollution', 'pollution'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'values'), 'punct'), (('Ordered', 'values'), 'amod'), (('values', 'represent'), 'nsubj'), (('−', 'values'), 'punct'), (('A', 'Pollution'), 'det'), (('node', 'Pollution'), 'compound'), (('Pollution', 'represent'), 'nsubj'), (('might', 'represent'), 'aux'), (('represent', 'root'), 'root'), (('and', 'take'), 'cc'), (('take', 'represent'), 'conj'), (('values', 'take'), 'obj'), (('from', 'degree'), 'case'), (('{', 'high}'), 'punct'), (('low', 'degree'), 'amod'), ((',', 'medium'), 'punct'), (('medium', 'low'), 'conj'), ((',', 'high}'), 'punct'), (('high}', 'degree'), 'compound'), (('describing', 'degree'), 'amod'), (('degree', 'take'), 'obj'), (('of', 'exposure'), 'case'), (('a', 'patient'), 'det'), (('patient', 'exposure'), 'nmod:poss'), (('’s', 'patient'), 'case'), (('exposure', 'degree'), 'nmod'), (('to', 'pollution'), 'case'), (('pollution', 'exposure'), 'nmod'), (('.', 'represent'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 71 ===========================

 · Integral values − A node called Age might represent patient’s age with possible values from 1 to 120. 

Tokens are: 
>> ['·', 'Integral', 'values', '−', 'A', 'node', 'called', 'Age', 'might', 'represent', 'patient', '’s', 'age', 'with', 'possible', 'values', 'from', '1', 'to', '120', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Integral', 'ADJ'), ('values', 'NOUN'), ('−', 'PUNCT'), ('A', 'DET'), ('node', 'NOUN'), ('called', 'VERB'), ('Age', 'PROPN'), ('might', 'AUX'), ('represent', 'VERB'), ('patient', 'NOUN'), ('’s', 'PART'), ('age', 'NOUN'), ('with', 'ADP'), ('possible', 'ADJ'), ('values', 'NOUN'), ('from', 'ADP'), ('1', 'NUM'), ('to', 'ADP'), ('120', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Integral', 'JJ'), ('values', 'NNS'), ('−', ','), ('A', 'DT'), ('node', 'NN'), ('called', 'VBN'), ('Age', 'NNP'), ('might', 'MD'), ('represent', 'VB'), ('patient', 'NN'), ('’s', 'POS'), ('age', 'NN'), ('with', 'IN'), ('possible', 'JJ'), ('values', 'NNS'), ('from', 'IN'), ('1', 'CD'), ('to', 'IN'), ('120', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Integral', 'Integral'), ('values', 'value'), ('−', "''"), ('A', 'a'), ('node', 'node'), ('called', 'call'), ('Age', 'Age'), ('might', 'might'), ('represent', 'represent'), ('patient', 'patient'), ('’s', "'s"), ('age', 'age'), ('with', 'with'), ('possible', 'possible'), ('values', 'value'), ('from', 'from'), ('1', '1'), ('to', 'to'), ('120', '120'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'represent'), 'punct'), (('Integral', 'values'), 'amod'), (('values', 'represent'), 'nsubj'), (('−', 'values'), 'punct'), (('A', 'node'), 'det'), (('node', 'represent'), 'nsubj'), (('called', 'node'), 'acl'), (('Age', 'called'), 'xcomp'), (('might', 'represent'), 'aux'), (('represent', 'root'), 'root'), (('patient', 'age'), 'nmod:poss'), (('’s', 'patient'), 'case'), (('age', 'represent'), 'obj'), (('with', 'values'), 'case'), (('possible', 'values'), 'amod'), (('values', 'represent'), 'obl'), (('from', '1'), 'case'), (('1', 'values'), 'nmod'), (('to', '120'), 'case'), (('120', '1'), 'nmod'), (('.', 'represent'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('120', 'CARDINAL')]

========================== Sentence 72 ===========================

 Even at this early stage, modeling choices are being made. 

Tokens are: 
>> ['Even', 'at', 'this', 'early', 'stage', ',', 'modeling', 'choices', 'are', 'being', 'made', '.'] 

 UPOS tags are: 
>> [('Even', 'ADV'), ('at', 'ADP'), ('this', 'DET'), ('early', 'ADJ'), ('stage', 'NOUN'), (',', 'PUNCT'), ('modeling', 'NOUN'), ('choices', 'NOUN'), ('are', 'AUX'), ('being', 'AUX'), ('made', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Even', 'RB'), ('at', 'IN'), ('this', 'DT'), ('early', 'JJ'), ('stage', 'NN'), (',', ','), ('modeling', 'NN'), ('choices', 'NNS'), ('are', 'VBP'), ('being', 'VBG'), ('made', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Even', 'even'), ('at', 'at'), ('this', 'this'), ('early', 'early'), ('stage', 'stage'), (',', ','), ('modeling', 'modeling'), ('choices', 'choice'), ('are', 'be'), ('being', 'be'), ('made', 'make'), ('.', '.')] 

 Dependency tags are: 
>> [(('Even', 'stage'), 'advmod'), (('at', 'stage'), 'case'), (('this', 'stage'), 'det'), (('early', 'stage'), 'amod'), (('stage', 'made'), 'obl'), ((',', 'made'), 'punct'), (('modeling', 'choices'), 'compound'), (('choices', 'made'), 'nsubj:pass'), (('are', 'made'), 'aux'), (('being', 'made'), 'aux:pass'), (('made', 'root'), 'root'), (('.', 'made'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 73 ===========================

 Possible nodes and values for the lung cancer example − 	Node Name 	Type 	Value 	Nodes Creation  	Polution 	Binary 	{LOW, HIGH, MEDIUM} 

Tokens are: 
>> ['Possible', 'nodes', 'and', 'values', 'for', 'the', 'lung', 'cancer', 'example', '−', 'Node', 'Name', 'Type', 'Value', 'Nodes', 'Creation', 'Polution', 'Binary', '{', 'LOW', ',', 'HIGH', ',', 'MEDIUM', '}'] 

 UPOS tags are: 
>> [('Possible', 'ADJ'), ('nodes', 'NOUN'), ('and', 'CCONJ'), ('values', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('lung', 'NOUN'), ('cancer', 'NOUN'), ('example', 'NOUN'), ('−', 'PUNCT'), ('Node', 'NOUN'), ('Name', 'NOUN'), ('Type', 'NOUN'), ('Value', 'NOUN'), ('Nodes', 'NOUN'), ('Creation', 'NOUN'), ('Polution', 'NOUN'), ('Binary', 'NOUN'), ('{', 'PUNCT'), ('LOW', 'ADJ'), (',', 'PUNCT'), ('HIGH', 'ADJ'), (',', 'PUNCT'), ('MEDIUM', 'NOUN'), ('}', 'PUNCT')] 

 XPOS tags are: 
>> [('Possible', 'JJ'), ('nodes', 'NNS'), ('and', 'CC'), ('values', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('lung', 'NN'), ('cancer', 'NN'), ('example', 'NN'), ('−', ','), ('Node', 'NN'), ('Name', 'NN'), ('Type', 'NN'), ('Value', 'NN'), ('Nodes', 'NNS'), ('Creation', 'NN'), ('Polution', 'NN'), ('Binary', 'NN'), ('{', ','), ('LOW', 'JJ'), (',', ','), ('HIGH', 'JJ'), (',', ','), ('MEDIUM', 'NN'), ('}', ',')] 

 Lemmas are: 
>> [('Possible', 'possible'), ('nodes', 'node'), ('and', 'and'), ('values', 'value'), ('for', 'for'), ('the', 'the'), ('lung', 'lung'), ('cancer', 'cancer'), ('example', 'example'), ('−', "''"), ('Node', 'node'), ('Name', 'name'), ('Type', 'type'), ('Value', 'value'), ('Nodes', 'node'), ('Creation', 'creation'), ('Polution', 'polution'), ('Binary', 'binary'), ('{', '{'), ('LOW', 'low'), (',', ','), ('HIGH', 'high'), (',', ','), ('MEDIUM', 'medium'), ('}', '}')] 

 Dependency tags are: 
>> [(('Possible', 'nodes'), 'amod'), (('nodes', 'root'), 'root'), (('and', 'values'), 'cc'), (('values', 'nodes'), 'conj'), (('for', 'example'), 'case'), (('the', 'example'), 'det'), (('lung', 'example'), 'compound'), (('cancer', 'example'), 'compound'), (('example', 'nodes'), 'nmod'), (('−', 'nodes'), 'punct'), (('Node', 'Type'), 'compound'), (('Name', 'Type'), 'compound'), (('Type', 'Value'), 'compound'), (('Value', 'nodes'), 'list'), (('Nodes', 'Creation'), 'compound'), (('Creation', 'nodes'), 'list'), (('Polution', 'Binary'), 'compound'), (('Binary', 'Creation'), 'appos'), (('{', 'Binary'), 'punct'), (('LOW', 'MEDIUM'), 'amod'), ((',', 'MEDIUM'), 'punct'), (('HIGH', 'MEDIUM'), 'amod'), ((',', 'MEDIUM'), 'punct'), (('MEDIUM', 'nodes'), 'list'), (('}', 'nodes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 Smoker 	Boolean 	{TRUE, FASLE} 	  	Lung-Cancer 	Boolean 	{TRUE, FASLE} 	  	X-Ray 	Binary 	{Positive, Negative} 	   Create Arcs between Nodes Topology of the network should capture qualitative relationships between variables. 

Tokens are: 
>> ['Smoker', 'Boolean', '{', 'TRUE', ',', 'FASLE', '}', 'Lung', '-', 'Cancer', 'Boolean', '{', 'TRUE', ',', 'FASLE', '}', 'X', '-', 'Ray', 'Binary', '{', 'Positive', ',', 'Negative', '}', 'Create', 'Arcs', 'between', 'Nodes', 'Topology', 'of', 'the', 'network', 'should', 'capture', 'qualitative', 'relationships', 'between', 'variables', '.'] 

 UPOS tags are: 
>> [('Smoker', 'NOUN'), ('Boolean', 'PROPN'), ('{', 'PUNCT'), ('TRUE', 'ADJ'), (',', 'PUNCT'), ('FASLE', 'PROPN'), ('}', 'PUNCT'), ('Lung', 'PROPN'), ('-', 'PUNCT'), ('Cancer', 'PROPN'), ('Boolean', 'NOUN'), ('{', 'PUNCT'), ('TRUE', 'ADJ'), (',', 'PUNCT'), ('FASLE', 'PROPN'), ('}', 'PUNCT'), ('X', 'NOUN'), ('-', 'PUNCT'), ('Ray', 'PROPN'), ('Binary', 'PROPN'), ('{', 'PUNCT'), ('Positive', 'ADJ'), (',', 'PUNCT'), ('Negative', 'ADJ'), ('}', 'PUNCT'), ('Create', 'VERB'), ('Arcs', 'NOUN'), ('between', 'ADP'), ('Nodes', 'PROPN'), ('Topology', 'PROPN'), ('of', 'ADP'), ('the', 'DET'), ('network', 'NOUN'), ('should', 'AUX'), ('capture', 'VERB'), ('qualitative', 'ADJ'), ('relationships', 'NOUN'), ('between', 'ADP'), ('variables', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Smoker', 'NN'), ('Boolean', 'NNP'), ('{', ','), ('TRUE', 'JJ'), (',', ','), ('FASLE', 'NNP'), ('}', ','), ('Lung', 'NNP'), ('-', ','), ('Cancer', 'NNP'), ('Boolean', 'NN'), ('{', ','), ('TRUE', 'JJ'), (',', ','), ('FASLE', 'NNP'), ('}', ','), ('X', 'NN'), ('-', ','), ('Ray', 'NNP'), ('Binary', 'NNP'), ('{', ','), ('Positive', 'JJ'), (',', ','), ('Negative', 'JJ'), ('}', ','), ('Create', 'VB'), ('Arcs', 'NNS'), ('between', 'IN'), ('Nodes', 'NNPS'), ('Topology', 'NNP'), ('of', 'IN'), ('the', 'DT'), ('network', 'NN'), ('should', 'MD'), ('capture', 'VB'), ('qualitative', 'JJ'), ('relationships', 'NNS'), ('between', 'IN'), ('variables', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Smoker', 'smoker'), ('Boolean', 'Boolean'), ('{', '{'), ('TRUE', 'true'), (',', ','), ('FASLE', 'FASLE'), ('}', '}'), ('Lung', 'Lung'), ('-', '-'), ('Cancer', 'Cancer'), ('Boolean', 'boolean'), ('{', '{'), ('TRUE', 'true'), (',', ','), ('FASLE', 'FASLE'), ('}', '}'), ('X', 'x'), ('-', '-'), ('Ray', 'Ray'), ('Binary', 'Binary'), ('{', '{'), ('Positive', 'positive'), (',', ','), ('Negative', 'negative'), ('}', '}'), ('Create', 'create'), ('Arcs', 'arc'), ('between', 'between'), ('Nodes', 'Node'), ('Topology', 'Topology'), ('of', 'of'), ('the', 'the'), ('network', 'network'), ('should', 'should'), ('capture', 'capture'), ('qualitative', 'qualitative'), ('relationships', 'relationship'), ('between', 'between'), ('variables', 'variable'), ('.', '.')] 

 Dependency tags are: 
>> [(('Smoker', 'root'), 'root'), (('Boolean', 'Smoker'), 'flat'), (('{', 'Smoker'), 'punct'), (('TRUE', 'Smoker'), 'list'), ((',', 'FASLE'), 'punct'), (('FASLE', 'Smoker'), 'appos'), (('}', 'Lung'), 'punct'), (('Lung', 'Smoker'), 'parataxis'), (('-', 'Boolean'), 'punct'), (('Cancer', 'Boolean'), 'compound'), (('Boolean', 'Smoker'), 'list'), (('{', 'Boolean'), 'punct'), (('TRUE', 'Boolean'), 'amod'), ((',', 'FASLE'), 'punct'), (('FASLE', 'Boolean'), 'appos'), (('}', 'Smoker'), 'punct'), (('X', 'Smoker'), 'list'), (('-', 'X'), 'punct'), (('Ray', 'Smoker'), 'appos'), (('Binary', 'Smoker'), 'appos'), (('{', 'Binary'), 'punct'), (('Positive', 'Binary'), 'amod'), ((',', 'Negative'), 'punct'), (('Negative', 'Binary'), 'appos'), (('}', 'Create'), 'punct'), (('Create', 'Smoker'), 'parataxis'), (('Arcs', 'Create'), 'obj'), (('between', 'Nodes'), 'case'), (('Nodes', 'Arcs'), 'nmod'), (('Topology', 'Nodes'), 'flat'), (('of', 'network'), 'case'), (('the', 'network'), 'det'), (('network', 'Topology'), 'nmod'), (('should', 'capture'), 'aux'), (('capture', 'Create'), 'advcl'), (('qualitative', 'relationships'), 'amod'), (('relationships', 'capture'), 'obj'), (('between', 'variables'), 'case'), (('variables', 'relationships'), 'nmod'), (('.', 'Smoker'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 75 ===========================

 For example, what causes a patient to have lung cancer? 

Tokens are: 
>> ['For', 'example', ',', 'what', 'causes', 'a', 'patient', 'to', 'have', 'lung', 'cancer', '?'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('what', 'PRON'), ('causes', 'VERB'), ('a', 'DET'), ('patient', 'NOUN'), ('to', 'PART'), ('have', 'VERB'), ('lung', 'NOUN'), ('cancer', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('what', 'WP'), ('causes', 'VBZ'), ('a', 'DT'), ('patient', 'NN'), ('to', 'TO'), ('have', 'VB'), ('lung', 'NN'), ('cancer', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('what', 'what'), ('causes', 'cause'), ('a', 'a'), ('patient', 'patient'), ('to', 'to'), ('have', 'have'), ('lung', 'lung'), ('cancer', 'cancer'), ('?', '?')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'causes'), 'obl'), ((',', 'example'), 'punct'), (('what', 'causes'), 'nsubj'), (('causes', 'root'), 'root'), (('a', 'patient'), 'det'), (('patient', 'causes'), 'obj'), (('to', 'have'), 'mark'), (('have', 'patient'), 'acl'), (('lung', 'cancer'), 'compound'), (('cancer', 'have'), 'obj'), (('?', 'causes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 76 ===========================

 - Pollution and smoking. 

Tokens are: 
>> ['-', 'Pollution', 'and', 'smoking', '.'] 

 UPOS tags are: 
>> [('-', 'PUNCT'), ('Pollution', 'NOUN'), ('and', 'CCONJ'), ('smoking', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('-', 'NFP'), ('Pollution', 'NN'), ('and', 'CC'), ('smoking', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('-', '-'), ('Pollution', 'pollution'), ('and', 'and'), ('smoking', 'smoking'), ('.', '.')] 

 Dependency tags are: 
>> [(('-', 'Pollution'), 'punct'), (('Pollution', 'root'), 'root'), (('and', 'smoking'), 'cc'), (('smoking', 'Pollution'), 'conj'), (('.', 'Pollution'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 77 ===========================

 Then add arcs from node Pollution and node Smoker to node Lung-Cancer. 

Tokens are: 
>> ['Then', 'add', 'arcs', 'from', 'node', 'Pollution', 'and', 'node', 'Smoker', 'to', 'node', 'Lung', '-Cancer', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('add', 'VERB'), ('arcs', 'NOUN'), ('from', 'ADP'), ('node', 'NOUN'), ('Pollution', 'NOUN'), ('and', 'CCONJ'), ('node', 'NOUN'), ('Smoker', 'NOUN'), ('to', 'PART'), ('node', 'VERB'), ('Lung', 'PROPN'), ('-Cancer', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('add', 'VB'), ('arcs', 'NNS'), ('from', 'IN'), ('node', 'NN'), ('Pollution', 'NN'), ('and', 'CC'), ('node', 'NN'), ('Smoker', 'NN'), ('to', 'TO'), ('node', 'VB'), ('Lung', 'NNP'), ('-Cancer', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('add', 'add'), ('arcs', 'arc'), ('from', 'from'), ('node', 'node'), ('Pollution', 'pollution'), ('and', 'and'), ('node', 'node'), ('Smoker', 'smoker'), ('to', 'to'), ('node', 'node'), ('Lung', 'Lung'), ('-Cancer', '-Cancer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'add'), 'advmod'), (('add', 'root'), 'root'), (('arcs', 'add'), 'obj'), (('from', 'Pollution'), 'case'), (('node', 'Pollution'), 'compound'), (('Pollution', 'arcs'), 'nmod'), (('and', 'Smoker'), 'cc'), (('node', 'Smoker'), 'compound'), (('Smoker', 'Pollution'), 'conj'), (('to', 'node'), 'mark'), (('node', 'add'), 'advcl'), (('Lung', '-Cancer'), 'compound'), (('-Cancer', 'node'), 'obj'), (('.', 'add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 78 ===========================

 Similarly if patient has lung cancer, then X-ray result will be positive. 

Tokens are: 
>> ['Similarly', 'if', 'patient', 'has', 'lung', 'cancer', ',', 'then', 'X', '-ray', 'result', 'will', 'be', 'positive', '.'] 

 UPOS tags are: 
>> [('Similarly', 'ADV'), ('if', 'SCONJ'), ('patient', 'NOUN'), ('has', 'VERB'), ('lung', 'NOUN'), ('cancer', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('X', 'NOUN'), ('-ray', 'NOUN'), ('result', 'NOUN'), ('will', 'AUX'), ('be', 'AUX'), ('positive', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Similarly', 'RB'), ('if', 'IN'), ('patient', 'NN'), ('has', 'VBZ'), ('lung', 'NN'), ('cancer', 'NN'), (',', ','), ('then', 'RB'), ('X', 'NN'), ('-ray', 'NN'), ('result', 'NN'), ('will', 'MD'), ('be', 'VB'), ('positive', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Similarly', 'similarly'), ('if', 'if'), ('patient', 'patient'), ('has', 'have'), ('lung', 'lung'), ('cancer', 'cancer'), (',', ','), ('then', 'then'), ('X', 'x'), ('-ray', '-ray'), ('result', 'result'), ('will', 'will'), ('be', 'be'), ('positive', 'positive'), ('.', '.')] 

 Dependency tags are: 
>> [(('Similarly', 'positive'), 'advmod'), (('if', 'has'), 'mark'), (('patient', 'has'), 'nsubj'), (('has', 'positive'), 'advcl'), (('lung', 'cancer'), 'compound'), (('cancer', 'has'), 'obj'), ((',', 'positive'), 'punct'), (('then', 'positive'), 'advmod'), (('X', 'result'), 'compound'), (('-ray', 'result'), 'compound'), (('result', 'positive'), 'nsubj'), (('will', 'positive'), 'aux'), (('be', 'positive'), 'cop'), (('positive', 'root'), 'root'), (('.', 'positive'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 79 ===========================

 Then add arcs from node Lung-Cancer to node X-Ray. 

Tokens are: 
>> ['Then', 'add', 'arcs', 'from', 'node', 'Lung', '-', 'Cancer', 'to', 'node', 'X', '-', 'Ray', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('add', 'VERB'), ('arcs', 'NOUN'), ('from', 'ADP'), ('node', 'NOUN'), ('Lung', 'PROPN'), ('-', 'PUNCT'), ('Cancer', 'PROPN'), ('to', 'ADP'), ('node', 'NOUN'), ('X', 'PROPN'), ('-', 'PUNCT'), ('Ray', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('add', 'VB'), ('arcs', 'NNS'), ('from', 'IN'), ('node', 'NN'), ('Lung', 'NNP'), ('-', 'HYPH'), ('Cancer', 'NNP'), ('to', 'IN'), ('node', 'NN'), ('X', 'NNP'), ('-', 'HYPH'), ('Ray', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('add', 'add'), ('arcs', 'arc'), ('from', 'from'), ('node', 'node'), ('Lung', 'Lung'), ('-', '-'), ('Cancer', 'Cancer'), ('to', 'to'), ('node', 'node'), ('X', 'X'), ('-', '-'), ('Ray', 'Ray'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'add'), 'advmod'), (('add', 'root'), 'root'), (('arcs', 'add'), 'obj'), (('from', 'Cancer'), 'case'), (('node', 'add'), 'obl'), (('Lung', 'Cancer'), 'compound'), (('-', 'Cancer'), 'punct'), (('Cancer', 'node'), 'appos'), (('to', 'node'), 'case'), (('node', 'add'), 'obl'), (('X', 'Ray'), 'compound'), (('-', 'Ray'), 'punct'), (('Ray', 'node'), 'flat'), (('.', 'add'), 'punct')]

 Named Entities are: 
>> [('Lung-Cancer', 'ORG')]

========================== Sentence 80 ===========================

 Specify Topology Conventionally, BNs are laid out so that the arcs point from top to bottom. 

Tokens are: 
>> ['Specify', 'Topology', 'Conventionally', ',', 'BNs', 'are', 'laid', 'out', 'so', 'that', 'the', 'arcs', 'point', 'from', 'top', 'to', 'bottom', '.'] 

 UPOS tags are: 
>> [('Specify', 'VERB'), ('Topology', 'NOUN'), ('Conventionally', 'ADV'), (',', 'PUNCT'), ('BNs', 'PROPN'), ('are', 'AUX'), ('laid', 'VERB'), ('out', 'ADP'), ('so', 'SCONJ'), ('that', 'SCONJ'), ('the', 'DET'), ('arcs', 'NOUN'), ('point', 'VERB'), ('from', 'ADP'), ('top', 'NOUN'), ('to', 'ADP'), ('bottom', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Specify', 'VB'), ('Topology', 'NN'), ('Conventionally', 'RB'), (',', ','), ('BNs', 'NNP'), ('are', 'VBP'), ('laid', 'VBN'), ('out', 'RP'), ('so', 'IN'), ('that', 'IN'), ('the', 'DT'), ('arcs', 'NNS'), ('point', 'VBP'), ('from', 'IN'), ('top', 'NN'), ('to', 'IN'), ('bottom', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Specify', 'specify'), ('Topology', 'topology'), ('Conventionally', 'conventionally'), (',', ','), ('BNs', 'BNs'), ('are', 'be'), ('laid', 'lay'), ('out', 'out'), ('so', 'so'), ('that', 'that'), ('the', 'the'), ('arcs', 'arc'), ('point', 'point'), ('from', 'from'), ('top', 'top'), ('to', 'to'), ('bottom', 'bottom'), ('.', '.')] 

 Dependency tags are: 
>> [(('Specify', 'root'), 'root'), (('Topology', 'Specify'), 'obj'), (('Conventionally', 'Specify'), 'advmod'), ((',', 'Specify'), 'punct'), (('BNs', 'laid'), 'nsubj:pass'), (('are', 'laid'), 'aux:pass'), (('laid', 'Specify'), 'parataxis'), (('out', 'laid'), 'compound:prt'), (('so', 'point'), 'mark'), (('that', 'so'), 'fixed'), (('the', 'arcs'), 'det'), (('arcs', 'point'), 'nsubj'), (('point', 'laid'), 'advcl'), (('from', 'top'), 'case'), (('top', 'point'), 'obl'), (('to', 'bottom'), 'case'), (('bottom', 'point'), 'obl'), (('.', 'Specify'), 'punct')]

 Named Entities are: 
>> [('BNs', 'ORG')]

========================== Sentence 81 ===========================

 The set of parent nodes of a node X is given by Parents(X). 

Tokens are: 
>> ['The', 'set', 'of', 'parent', 'nodes', 'of', 'a', 'node', 'X', 'is', 'given', 'by', 'Parents', '(', 'X', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('parent', 'NOUN'), ('nodes', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('node', 'NOUN'), ('X', 'NOUN'), ('is', 'AUX'), ('given', 'VERB'), ('by', 'ADP'), ('Parents', 'PROPN'), ('(', 'PUNCT'), ('X', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('set', 'NN'), ('of', 'IN'), ('parent', 'NN'), ('nodes', 'NNS'), ('of', 'IN'), ('a', 'DT'), ('node', 'NN'), ('X', 'NN'), ('is', 'VBZ'), ('given', 'VBN'), ('by', 'IN'), ('Parents', 'NNPS'), ('(', '-LRB-'), ('X', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('set', 'set'), ('of', 'of'), ('parent', 'parent'), ('nodes', 'node'), ('of', 'of'), ('a', 'a'), ('node', 'node'), ('X', 'x'), ('is', 'be'), ('given', 'give'), ('by', 'by'), ('Parents', 'Parent'), ('(', '('), ('X', 'x'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'set'), 'det'), (('set', 'given'), 'nsubj:pass'), (('of', 'nodes'), 'case'), (('parent', 'nodes'), 'compound'), (('nodes', 'set'), 'nmod'), (('of', 'X'), 'case'), (('a', 'X'), 'det'), (('node', 'X'), 'compound'), (('X', 'nodes'), 'nmod'), (('is', 'given'), 'aux:pass'), (('given', 'root'), 'root'), (('by', 'Parents'), 'case'), (('Parents', 'given'), 'obl'), (('(', 'X'), 'punct'), (('X', 'Parents'), 'appos'), ((')', 'X'), 'punct'), (('.', 'given'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 The Lung-Cancer node has two parents (reasons or causes): Pollution and Smoker, while node Smoker is an ancestor of node X-Ray. 

Tokens are: 
>> ['The', 'Lung', '-', 'Cancer', 'node', 'has', 'two', 'parents', '(', 'reasons', 'or', 'causes', ')', ':', 'Pollution', 'and', 'Smoker', ',', 'while', 'node', 'Smoker', 'is', 'an', 'ancestor', 'of', 'node', 'X', '-', 'Ray', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Lung', 'PROPN'), ('-', 'PUNCT'), ('Cancer', 'PROPN'), ('node', 'NOUN'), ('has', 'VERB'), ('two', 'NUM'), ('parents', 'NOUN'), ('(', 'PUNCT'), ('reasons', 'NOUN'), ('or', 'CCONJ'), ('causes', 'NOUN'), (')', 'PUNCT'), (':', 'PUNCT'), ('Pollution', 'NOUN'), ('and', 'CCONJ'), ('Smoker', 'NOUN'), (',', 'PUNCT'), ('while', 'SCONJ'), ('node', 'NOUN'), ('Smoker', 'PROPN'), ('is', 'AUX'), ('an', 'DET'), ('ancestor', 'NOUN'), ('of', 'ADP'), ('node', 'NOUN'), ('X', 'PROPN'), ('-', 'PUNCT'), ('Ray', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Lung', 'NNP'), ('-', 'HYPH'), ('Cancer', 'NNP'), ('node', 'NN'), ('has', 'VBZ'), ('two', 'CD'), ('parents', 'NNS'), ('(', '-LRB-'), ('reasons', 'NNS'), ('or', 'CC'), ('causes', 'NNS'), (')', '-RRB-'), (':', ':'), ('Pollution', 'NN'), ('and', 'CC'), ('Smoker', 'NN'), (',', ','), ('while', 'IN'), ('node', 'NN'), ('Smoker', 'NNP'), ('is', 'VBZ'), ('an', 'DT'), ('ancestor', 'NN'), ('of', 'IN'), ('node', 'NN'), ('X', 'NNP'), ('-', 'HYPH'), ('Ray', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('Lung', 'Lung'), ('-', '-'), ('Cancer', 'Cancer'), ('node', 'node'), ('has', 'have'), ('two', 'two'), ('parents', 'parent'), ('(', '('), ('reasons', 'reason'), ('or', 'or'), ('causes', 'cause'), (')', ')'), (':', ':'), ('Pollution', 'pollution'), ('and', 'and'), ('Smoker', 'smoker'), (',', ','), ('while', 'while'), ('node', 'node'), ('Smoker', 'smoker'), ('is', 'be'), ('an', 'a'), ('ancestor', 'ancestor'), ('of', 'of'), ('node', 'node'), ('X', 'X'), ('-', '-'), ('Ray', 'Ray'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'node'), 'det'), (('Lung', 'Cancer'), 'compound'), (('-', 'Cancer'), 'punct'), (('Cancer', 'node'), 'compound'), (('node', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('two', 'parents'), 'nummod'), (('parents', 'has'), 'obj'), (('(', 'reasons'), 'punct'), (('reasons', 'parents'), 'appos'), (('or', 'causes'), 'cc'), (('causes', 'reasons'), 'conj'), ((')', 'reasons'), 'punct'), ((':', 'Pollution'), 'punct'), (('Pollution', 'parents'), 'appos'), (('and', 'Smoker'), 'cc'), (('Smoker', 'Pollution'), 'conj'), ((',', 'ancestor'), 'punct'), (('while', 'ancestor'), 'mark'), (('node', 'Smoker'), 'compound'), (('Smoker', 'ancestor'), 'nsubj'), (('is', 'ancestor'), 'cop'), (('an', 'ancestor'), 'det'), (('ancestor', 'has'), 'advcl'), (('of', 'Ray'), 'case'), (('node', 'Ray'), 'compound'), (('X', 'Ray'), 'compound'), (('-', 'Ray'), 'punct'), (('Ray', 'ancestor'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 83 ===========================

 Similarly, X-Ray is a child (consequence or effects) of node Lung-Cancer and successor of nodes Smoker and Pollution. 

Tokens are: 
>> ['Similarly', ',', 'X', '-', 'Ray', 'is', 'a', 'child', '(', 'consequence', 'or', 'effects', ')', 'of', 'node', 'Lung', '-', 'Cancer', 'and', 'successor', 'of', 'nodes', 'Smoker', 'and', 'Pollution', '.'] 

 UPOS tags are: 
>> [('Similarly', 'ADV'), (',', 'PUNCT'), ('X', 'PROPN'), ('-', 'PUNCT'), ('Ray', 'PROPN'), ('is', 'AUX'), ('a', 'DET'), ('child', 'NOUN'), ('(', 'PUNCT'), ('consequence', 'NOUN'), ('or', 'CCONJ'), ('effects', 'NOUN'), (')', 'PUNCT'), ('of', 'ADP'), ('node', 'NOUN'), ('Lung', 'PROPN'), ('-', 'PUNCT'), ('Cancer', 'PROPN'), ('and', 'CCONJ'), ('successor', 'NOUN'), ('of', 'ADP'), ('nodes', 'NOUN'), ('Smoker', 'NOUN'), ('and', 'CCONJ'), ('Pollution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Similarly', 'RB'), (',', ','), ('X', 'NNP'), ('-', 'HYPH'), ('Ray', 'NNP'), ('is', 'VBZ'), ('a', 'DT'), ('child', 'NN'), ('(', '-LRB-'), ('consequence', 'NN'), ('or', 'CC'), ('effects', 'NNS'), (')', '-RRB-'), ('of', 'IN'), ('node', 'NN'), ('Lung', 'NNP'), ('-', 'HYPH'), ('Cancer', 'NNP'), ('and', 'CC'), ('successor', 'NN'), ('of', 'IN'), ('nodes', 'NNS'), ('Smoker', 'NN'), ('and', 'CC'), ('Pollution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Similarly', 'similarly'), (',', ','), ('X', 'X'), ('-', '-'), ('Ray', 'Ray'), ('is', 'be'), ('a', 'a'), ('child', 'child'), ('(', '('), ('consequence', 'consequence'), ('or', 'or'), ('effects', 'effect'), (')', ')'), ('of', 'of'), ('node', 'node'), ('Lung', 'Lung'), ('-', '-'), ('Cancer', 'Cancer'), ('and', 'and'), ('successor', 'successor'), ('of', 'of'), ('nodes', 'node'), ('Smoker', 'smoker'), ('and', 'and'), ('Pollution', 'pollution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Similarly', 'child'), 'advmod'), ((',', 'child'), 'punct'), (('X', 'Ray'), 'compound'), (('-', 'X'), 'punct'), (('Ray', 'child'), 'nsubj'), (('is', 'child'), 'cop'), (('a', 'child'), 'det'), (('child', 'root'), 'root'), (('(', 'consequence'), 'punct'), (('consequence', 'child'), 'appos'), (('or', 'effects'), 'cc'), (('effects', 'consequence'), 'conj'), ((')', 'consequence'), 'punct'), (('of', 'Cancer'), 'case'), (('node', 'Cancer'), 'compound'), (('Lung', 'Cancer'), 'compound'), (('-', 'Cancer'), 'punct'), (('Cancer', 'child'), 'nmod'), (('and', 'successor'), 'cc'), (('successor', 'Cancer'), 'conj'), (('of', 'nodes'), 'case'), (('nodes', 'successor'), 'nmod'), (('Smoker', 'nodes'), 'flat'), (('and', 'Pollution'), 'cc'), (('Pollution', 'Smoker'), 'conj'), (('.', 'child'), 'punct')]

 Named Entities are: 
>> [('X-Ray', 'ORG')]

========================== Sentence 84 ===========================

 Conditional Probabilities 

Tokens are: 
>> ['Conditional', 'Probabilities'] 

 UPOS tags are: 
>> [('Conditional', 'ADJ'), ('Probabilities', 'NOUN')] 

 XPOS tags are: 
>> [('Conditional', 'JJ'), ('Probabilities', 'NNS')] 

 Lemmas are: 
>> [('Conditional', 'conditional'), ('Probabilities', 'probability')] 

 Dependency tags are: 
>> [(('Conditional', 'Probabilities'), 'amod'), (('Probabilities', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 85 ===========================

 Now quantify the relationships between connected nodes: this is done by specifying a conditional probability distribution for each node. 

Tokens are: 
>> ['Now', 'quantify', 'the', 'relationships', 'between', 'connected', 'nodes', ':', 'this', 'is', 'done', 'by', 'specifying', 'a', 'conditional', 'probability', 'distribution', 'for', 'each', 'node', '.'] 

 UPOS tags are: 
>> [('Now', 'ADV'), ('quantify', 'VERB'), ('the', 'DET'), ('relationships', 'NOUN'), ('between', 'ADP'), ('connected', 'VERB'), ('nodes', 'NOUN'), (':', 'PUNCT'), ('this', 'PRON'), ('is', 'AUX'), ('done', 'VERB'), ('by', 'SCONJ'), ('specifying', 'VERB'), ('a', 'DET'), ('conditional', 'ADJ'), ('probability', 'NOUN'), ('distribution', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('node', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Now', 'RB'), ('quantify', 'VB'), ('the', 'DT'), ('relationships', 'NNS'), ('between', 'IN'), ('connected', 'VBN'), ('nodes', 'NNS'), (':', ':'), ('this', 'DT'), ('is', 'VBZ'), ('done', 'VBN'), ('by', 'IN'), ('specifying', 'VBG'), ('a', 'DT'), ('conditional', 'JJ'), ('probability', 'NN'), ('distribution', 'NN'), ('for', 'IN'), ('each', 'DT'), ('node', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Now', 'now'), ('quantify', 'quantify'), ('the', 'the'), ('relationships', 'relationship'), ('between', 'between'), ('connected', 'connect'), ('nodes', 'node'), (':', ':'), ('this', 'this'), ('is', 'be'), ('done', 'do'), ('by', 'by'), ('specifying', 'specify'), ('a', 'a'), ('conditional', 'conditional'), ('probability', 'probability'), ('distribution', 'distribution'), ('for', 'for'), ('each', 'each'), ('node', 'node'), ('.', '.')] 

 Dependency tags are: 
>> [(('Now', 'quantify'), 'advmod'), (('quantify', 'root'), 'root'), (('the', 'relationships'), 'det'), (('relationships', 'quantify'), 'obj'), (('between', 'nodes'), 'case'), (('connected', 'nodes'), 'amod'), (('nodes', 'relationships'), 'nmod'), ((':', 'quantify'), 'punct'), (('this', 'done'), 'nsubj:pass'), (('is', 'done'), 'aux:pass'), (('done', 'quantify'), 'parataxis'), (('by', 'specifying'), 'mark'), (('specifying', 'done'), 'advcl'), (('a', 'distribution'), 'det'), (('conditional', 'distribution'), 'amod'), (('probability', 'distribution'), 'compound'), (('distribution', 'specifying'), 'obj'), (('for', 'node'), 'case'), (('each', 'node'), 'det'), (('node', 'distribution'), 'nmod'), (('.', 'quantify'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 86 ===========================

 As only discrete variables are considered here, this takes the form of a Conditional Probability Table (CPT). 

Tokens are: 
>> ['As', 'only', 'discrete', 'variables', 'are', 'considered', 'here', ',', 'this', 'takes', 'the', 'form', 'of', 'a', 'Conditional', 'Probability', 'Table', '(', 'CPT', ')', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('only', 'ADV'), ('discrete', 'ADJ'), ('variables', 'NOUN'), ('are', 'AUX'), ('considered', 'VERB'), ('here', 'ADV'), (',', 'PUNCT'), ('this', 'PRON'), ('takes', 'VERB'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('Conditional', 'ADJ'), ('Probability', 'NOUN'), ('Table', 'NOUN'), ('(', 'PUNCT'), ('CPT', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('only', 'RB'), ('discrete', 'JJ'), ('variables', 'NNS'), ('are', 'VBP'), ('considered', 'VBN'), ('here', 'RB'), (',', ','), ('this', 'DT'), ('takes', 'VBZ'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('a', 'DT'), ('Conditional', 'JJ'), ('Probability', 'NN'), ('Table', 'NN'), ('(', '-LRB-'), ('CPT', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('only', 'only'), ('discrete', 'discrete'), ('variables', 'variable'), ('are', 'be'), ('considered', 'consider'), ('here', 'here'), (',', ','), ('this', 'this'), ('takes', 'take'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('a', 'a'), ('Conditional', 'conditional'), ('Probability', 'probability'), ('Table', 'table'), ('(', '('), ('CPT', 'CPT'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'considered'), 'mark'), (('only', 'variables'), 'advmod'), (('discrete', 'variables'), 'amod'), (('variables', 'considered'), 'nsubj:pass'), (('are', 'considered'), 'aux:pass'), (('considered', 'takes'), 'advcl'), (('here', 'considered'), 'advmod'), ((',', 'takes'), 'punct'), (('this', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('the', 'form'), 'det'), (('form', 'takes'), 'obj'), (('of', 'Table'), 'case'), (('a', 'Table'), 'det'), (('Conditional', 'Table'), 'amod'), (('Probability', 'Table'), 'compound'), (('Table', 'form'), 'nmod'), (('(', 'CPT'), 'punct'), (('CPT', 'Table'), 'appos'), ((')', 'CPT'), 'punct'), (('.', 'takes'), 'punct')]

 Named Entities are: 
>> [('a Conditional Probability Table', 'LAW')]

========================== Sentence 87 ===========================

 First, for each node we need to look at all the possible combinations of values of those parent nodes. 

Tokens are: 
>> ['First', ',', 'for', 'each', 'node', 'we', 'need', 'to', 'look', 'at', 'all', 'the', 'possible', 'combinations', 'of', 'values', 'of', 'those', 'parent', 'nodes', '.'] 

 UPOS tags are: 
>> [('First', 'ADV'), (',', 'PUNCT'), ('for', 'ADP'), ('each', 'DET'), ('node', 'NOUN'), ('we', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('look', 'VERB'), ('at', 'ADP'), ('all', 'DET'), ('the', 'DET'), ('possible', 'ADJ'), ('combinations', 'NOUN'), ('of', 'ADP'), ('values', 'NOUN'), ('of', 'ADP'), ('those', 'DET'), ('parent', 'NOUN'), ('nodes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'RB'), (',', ','), ('for', 'IN'), ('each', 'DT'), ('node', 'NN'), ('we', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('look', 'VB'), ('at', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('possible', 'JJ'), ('combinations', 'NNS'), ('of', 'IN'), ('values', 'NNS'), ('of', 'IN'), ('those', 'DT'), ('parent', 'NN'), ('nodes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), (',', ','), ('for', 'for'), ('each', 'each'), ('node', 'node'), ('we', 'we'), ('need', 'need'), ('to', 'to'), ('look', 'look'), ('at', 'at'), ('all', 'all'), ('the', 'the'), ('possible', 'possible'), ('combinations', 'combination'), ('of', 'of'), ('values', 'value'), ('of', 'of'), ('those', 'that'), ('parent', 'parent'), ('nodes', 'node'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'need'), 'advmod'), ((',', 'need'), 'punct'), (('for', 'node'), 'case'), (('each', 'node'), 'det'), (('node', 'need'), 'obl'), (('we', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'look'), 'mark'), (('look', 'need'), 'xcomp'), (('at', 'combinations'), 'case'), (('all', 'combinations'), 'det:predet'), (('the', 'combinations'), 'det'), (('possible', 'combinations'), 'amod'), (('combinations', 'look'), 'obl'), (('of', 'values'), 'case'), (('values', 'combinations'), 'nmod'), (('of', 'nodes'), 'case'), (('those', 'nodes'), 'det'), (('parent', 'nodes'), 'compound'), (('nodes', 'values'), 'nmod'), (('.', 'need'), 'punct')]

 Named Entities are: 
>> [('First', 'ORDINAL')]

========================== Sentence 88 ===========================

 Each such combination is called an instantiation of the parent set. 

Tokens are: 
>> ['Each', 'such', 'combination', 'is', 'called', 'an', 'instantiation', 'of', 'the', 'parent', 'set', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('such', 'ADJ'), ('combination', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('an', 'DET'), ('instantiation', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('parent', 'NOUN'), ('set', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('such', 'JJ'), ('combination', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('an', 'DT'), ('instantiation', 'NN'), ('of', 'IN'), ('the', 'DT'), ('parent', 'NN'), ('set', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('such', 'such'), ('combination', 'combination'), ('is', 'be'), ('called', 'call'), ('an', 'a'), ('instantiation', 'instantiation'), ('of', 'of'), ('the', 'the'), ('parent', 'parent'), ('set', 'set'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'combination'), 'det'), (('such', 'combination'), 'amod'), (('combination', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('an', 'instantiation'), 'det'), (('instantiation', 'called'), 'xcomp'), (('of', 'set'), 'case'), (('the', 'set'), 'det'), (('parent', 'set'), 'compound'), (('set', 'instantiation'), 'nmod'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 89 ===========================

 For each distinct instantiation of parent node values, we need to specify the probability that the child will take. 

Tokens are: 
>> ['For', 'each', 'distinct', 'instantiation', 'of', 'parent', 'node', 'values', ',', 'we', 'need', 'to', 'specify', 'the', 'probability', 'that', 'the', 'child', 'will', 'take', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('distinct', 'ADJ'), ('instantiation', 'NOUN'), ('of', 'ADP'), ('parent', 'NOUN'), ('node', 'NOUN'), ('values', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('specify', 'VERB'), ('the', 'DET'), ('probability', 'NOUN'), ('that', 'SCONJ'), ('the', 'DET'), ('child', 'NOUN'), ('will', 'AUX'), ('take', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('distinct', 'JJ'), ('instantiation', 'NN'), ('of', 'IN'), ('parent', 'NN'), ('node', 'NN'), ('values', 'NNS'), (',', ','), ('we', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('specify', 'VB'), ('the', 'DT'), ('probability', 'NN'), ('that', 'IN'), ('the', 'DT'), ('child', 'NN'), ('will', 'MD'), ('take', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('distinct', 'distinct'), ('instantiation', 'instantiation'), ('of', 'of'), ('parent', 'parent'), ('node', 'node'), ('values', 'value'), (',', ','), ('we', 'we'), ('need', 'need'), ('to', 'to'), ('specify', 'specify'), ('the', 'the'), ('probability', 'probability'), ('that', 'that'), ('the', 'the'), ('child', 'child'), ('will', 'will'), ('take', 'take'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'instantiation'), 'case'), (('each', 'instantiation'), 'det'), (('distinct', 'instantiation'), 'amod'), (('instantiation', 'need'), 'obl'), (('of', 'values'), 'case'), (('parent', 'values'), 'compound'), (('node', 'values'), 'compound'), (('values', 'instantiation'), 'nmod'), ((',', 'need'), 'punct'), (('we', 'need'), 'nsubj'), (('need', 'root'), 'root'), (('to', 'specify'), 'mark'), (('specify', 'need'), 'xcomp'), (('the', 'probability'), 'det'), (('probability', 'specify'), 'obj'), (('that', 'take'), 'mark'), (('the', 'child'), 'det'), (('child', 'take'), 'nsubj'), (('will', 'take'), 'aux'), (('take', 'probability'), 'acl'), (('.', 'need'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 90 ===========================

 For example, the Lung-Cancer node’s parents are Pollution and Smoking. 

Tokens are: 
>> ['For', 'example', ',', 'the', 'Lung', '-', 'Cancer', 'node', '’s', 'parents', 'are', 'Pollution', 'and', 'Smoking', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('Lung', 'PROPN'), ('-', 'PUNCT'), ('Cancer', 'PROPN'), ('node', 'NOUN'), ('’s', 'PART'), ('parents', 'NOUN'), ('are', 'AUX'), ('Pollution', 'NOUN'), ('and', 'CCONJ'), ('Smoking', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('the', 'DT'), ('Lung', 'NNP'), ('-', 'HYPH'), ('Cancer', 'NNP'), ('node', 'NN'), ('’s', 'POS'), ('parents', 'NNS'), ('are', 'VBP'), ('Pollution', 'NN'), ('and', 'CC'), ('Smoking', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('the', 'the'), ('Lung', 'Lung'), ('-', '-'), ('Cancer', 'Cancer'), ('node', 'node'), ('’s', "'s"), ('parents', 'parent'), ('are', 'be'), ('Pollution', 'pollution'), ('and', 'and'), ('Smoking', 'smoking'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'Pollution'), 'obl'), ((',', 'Pollution'), 'punct'), (('the', 'node'), 'det'), (('Lung', 'Cancer'), 'compound'), (('-', 'Cancer'), 'punct'), (('Cancer', 'node'), 'compound'), (('node', 'parents'), 'nmod:poss'), (('’s', 'node'), 'case'), (('parents', 'Pollution'), 'nsubj'), (('are', 'Pollution'), 'cop'), (('Pollution', 'root'), 'root'), (('and', 'Smoking'), 'cc'), (('Smoking', 'Pollution'), 'conj'), (('.', 'Pollution'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 91 ===========================

 They take the possible values = { (H,T), ( H,F), (L,T), (L,F)}. 

Tokens are: 
>> ['They', 'take', 'the', 'possible', 'values', '=', '{', '(', 'H,', 'T', ')', ',', '(', 'H', ',', 'F', ')', ',', '(', 'L,', 'T', ')', ',', '(', 'L,', 'F', ')', '}', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('take', 'VERB'), ('the', 'DET'), ('possible', 'ADJ'), ('values', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('(', 'PUNCT'), ('H,', 'NOUN'), ('T', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('H', 'PROPN'), (',', 'PUNCT'), ('F', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('L,', 'PROPN'), ('T', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('(', 'PUNCT'), ('L,', 'PROPN'), ('F', 'PROPN'), (')', 'PUNCT'), ('}', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('take', 'VBP'), ('the', 'DT'), ('possible', 'JJ'), ('values', 'NNS'), ('=', 'SYM'), ('{', ','), ('(', '-LRB-'), ('H,', 'NN'), ('T', 'NN'), (')', '-RRB-'), (',', ','), ('(', '-LRB-'), ('H', 'NNP'), (',', ','), ('F', 'NNP'), (')', '-RRB-'), (',', ','), ('(', '-LRB-'), ('L,', 'NNP'), ('T', 'NNP'), (')', '-RRB-'), (',', ','), ('(', '-LRB-'), ('L,', 'NNP'), ('F', 'NNP'), (')', '-RRB-'), ('}', ','), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('take', 'take'), ('the', 'the'), ('possible', 'possible'), ('values', 'value'), ('=', '='), ('{', '{'), ('(', '('), ('H,', 'H,'), ('T', 'T'), (')', ')'), (',', ','), ('(', '('), ('H', 'H'), (',', ','), ('F', 'F'), (')', ')'), (',', ','), ('(', '('), ('L,', 'L,'), ('T', 'T'), (')', ')'), (',', ','), ('(', '('), ('L,', 'L,'), ('F', 'F'), (')', ')'), ('}', '}'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'take'), 'nsubj'), (('take', 'root'), 'root'), (('the', 'values'), 'det'), (('possible', 'values'), 'amod'), (('values', 'take'), 'obj'), (('=', 'take'), 'xcomp'), (('{', '='), 'punct'), (('(', 'T'), 'punct'), (('H,', '='), 'parataxis'), (('T', 'H,'), 'compound'), ((')', 'H,'), 'punct'), ((',', 'H'), 'punct'), (('(', 'H'), 'punct'), (('H', 'take'), 'parataxis'), ((',', 'F'), 'punct'), (('F', 'H'), 'appos'), ((')', 'H'), 'punct'), ((',', 'L,'), 'punct'), (('(', 'L,'), 'punct'), (('L,', 'H'), 'appos'), (('T', 'L,'), 'flat'), ((')', 'L,'), 'punct'), ((',', 'L,'), 'punct'), (('(', 'L,'), 'punct'), (('L,', 'L,'), 'dep'), (('F', 'L,'), 'dep'), ((')', 'L,'), 'punct'), (('}', 'L,'), 'punct'), (('.', 'take'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 92 ===========================

 The CPT specifies the probability of cancer for each of these cases as <0.05, 0.02, 0.03, 0.001> 

Tokens are: 
>> ['The', 'CPT', 'specifies', 'the', 'probability', 'of', 'cancer', 'for', 'each', 'of', 'these', 'cases', 'as', '<', '0.05', ',', '0.02', ',', '0.03', ',', '0.001', '>'] 

 UPOS tags are: 
>> [('The', 'DET'), ('CPT', 'PROPN'), ('specifies', 'VERB'), ('the', 'DET'), ('probability', 'NOUN'), ('of', 'ADP'), ('cancer', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('of', 'ADP'), ('these', 'DET'), ('cases', 'NOUN'), ('as', 'ADP'), ('<', 'PUNCT'), ('0.05', 'NUM'), (',', 'PUNCT'), ('0.02', 'NUM'), (',', 'PUNCT'), ('0.03', 'NUM'), (',', 'PUNCT'), ('0.001', 'NUM'), ('>', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('CPT', 'NNP'), ('specifies', 'VBZ'), ('the', 'DT'), ('probability', 'NN'), ('of', 'IN'), ('cancer', 'NN'), ('for', 'IN'), ('each', 'DT'), ('of', 'IN'), ('these', 'DT'), ('cases', 'NNS'), ('as', 'IN'), ('<', '-LRB-'), ('0.05', 'CD'), (',', ','), ('0.02', 'CD'), (',', ','), ('0.03', 'CD'), (',', ','), ('0.001', 'CD'), ('>', '-RRB-')] 

 Lemmas are: 
>> [('The', 'the'), ('CPT', 'CPT'), ('specifies', 'specify'), ('the', 'the'), ('probability', 'probability'), ('of', 'of'), ('cancer', 'cancer'), ('for', 'for'), ('each', 'each'), ('of', 'of'), ('these', 'this'), ('cases', 'case'), ('as', 'as'), ('<', '<'), ('0.05', '0.05'), (',', ','), ('0.02', '0.02'), (',', ','), ('0.03', '0.03'), (',', ','), ('0.001', '0.001'), ('>', '>')] 

 Dependency tags are: 
>> [(('The', 'CPT'), 'det'), (('CPT', 'specifies'), 'nsubj'), (('specifies', 'root'), 'root'), (('the', 'probability'), 'det'), (('probability', 'specifies'), 'obj'), (('of', 'cancer'), 'case'), (('cancer', 'probability'), 'nmod'), (('for', 'each'), 'case'), (('each', 'specifies'), 'obl'), (('of', 'cases'), 'case'), (('these', 'cases'), 'det'), (('cases', 'each'), 'nmod'), (('as', '0.05'), 'case'), (('<', '0.05'), 'punct'), (('0.05', 'specifies'), 'obl'), ((',', '0.02'), 'punct'), (('0.02', '0.05'), 'conj'), ((',', '0.03'), 'punct'), (('0.03', '0.05'), 'conj'), ((',', '0.001'), 'punct'), (('0.001', '0.05'), 'conj'), (('>', '0.001'), 'punct')]

 Named Entities are: 
>> [('CPT', 'ORG'), ('0.05', 'CARDINAL'), ('0.02', 'CARDINAL'), ('0.03', 'CARDINAL'), ('0.001', 'CARDINAL')]

========================== Sentence 93 ===========================

 respectively. 

Tokens are: 
>> ['respectively', '.'] 

 UPOS tags are: 
>> [('respectively', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('respectively', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('respectively', 'respectively'), ('.', '.')] 

 Dependency tags are: 
>> [(('respectively', 'root'), 'root'), (('.', 'respectively'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 94 ===========================

 Each node will have conditional probability associated as follows −  Applications of Neural Networks 

Tokens are: 
>> ['Each', 'node', 'will', 'have', 'conditional', 'probability', 'associated', 'as', 'follows', '−', 'Applications', 'of', 'Neural', 'Networks'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('node', 'NOUN'), ('will', 'AUX'), ('have', 'VERB'), ('conditional', 'ADJ'), ('probability', 'NOUN'), ('associated', 'VERB'), ('as', 'SCONJ'), ('follows', 'VERB'), ('−', 'PUNCT'), ('Applications', 'NOUN'), ('of', 'ADP'), ('Neural', 'ADJ'), ('Networks', 'NOUN')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('node', 'NN'), ('will', 'MD'), ('have', 'VB'), ('conditional', 'JJ'), ('probability', 'NN'), ('associated', 'VBN'), ('as', 'IN'), ('follows', 'VBZ'), ('−', ','), ('Applications', 'NNS'), ('of', 'IN'), ('Neural', 'JJ'), ('Networks', 'NNS')] 

 Lemmas are: 
>> [('Each', 'each'), ('node', 'node'), ('will', 'will'), ('have', 'have'), ('conditional', 'conditional'), ('probability', 'probability'), ('associated', 'associate'), ('as', 'as'), ('follows', 'follow'), ('−', "''"), ('Applications', 'application'), ('of', 'of'), ('Neural', 'neural'), ('Networks', 'network')] 

 Dependency tags are: 
>> [(('Each', 'node'), 'det'), (('node', 'have'), 'nsubj'), (('will', 'have'), 'aux'), (('have', 'root'), 'root'), (('conditional', 'probability'), 'amod'), (('probability', 'have'), 'obj'), (('associated', 'probability'), 'acl'), (('as', 'follows'), 'mark'), (('follows', 'associated'), 'advcl'), (('−', 'Applications'), 'punct'), (('Applications', 'follows'), 'obj'), (('of', 'Networks'), 'case'), (('Neural', 'Networks'), 'amod'), (('Networks', 'Applications'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 95 ===========================

 They can perform tasks that are easy for a human but difficult for a machine − · Aerospace − Autopilot aircrafts, aircraft fault detection. 

Tokens are: 
>> ['They', 'can', 'perform', 'tasks', 'that', 'are', 'easy', 'for', 'a', 'human', 'but', 'difficult', 'for', 'a', 'machine', '−', '·', 'Aerospace', '−', 'Autopilot', 'aircrafts', ',', 'aircraft', 'fault', 'detection', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('can', 'AUX'), ('perform', 'VERB'), ('tasks', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('easy', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('human', 'ADJ'), ('but', 'CCONJ'), ('difficult', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('machine', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Aerospace', 'NOUN'), ('−', 'PUNCT'), ('Autopilot', 'NOUN'), ('aircrafts', 'NOUN'), (',', 'PUNCT'), ('aircraft', 'NOUN'), ('fault', 'NOUN'), ('detection', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('can', 'MD'), ('perform', 'VB'), ('tasks', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('easy', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('human', 'JJ'), ('but', 'CC'), ('difficult', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('machine', 'NN'), ('−', ','), ('·', 'NFP'), ('Aerospace', 'NN'), ('−', ','), ('Autopilot', 'NN'), ('aircrafts', 'NNS'), (',', ','), ('aircraft', 'NN'), ('fault', 'NN'), ('detection', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('can', 'can'), ('perform', 'perform'), ('tasks', 'task'), ('that', 'that'), ('are', 'be'), ('easy', 'easy'), ('for', 'for'), ('a', 'a'), ('human', 'human'), ('but', 'but'), ('difficult', 'difficult'), ('for', 'for'), ('a', 'a'), ('machine', 'machine'), ('−', "''"), ('·', '·'), ('Aerospace', 'aerospace'), ('−', "''"), ('Autopilot', 'autopilot'), ('aircrafts', 'aircraft'), (',', ','), ('aircraft', 'aircraft'), ('fault', 'fault'), ('detection', 'detection'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'perform'), 'nsubj'), (('can', 'perform'), 'aux'), (('perform', 'root'), 'root'), (('tasks', 'perform'), 'obj'), (('that', 'easy'), 'nsubj'), (('are', 'easy'), 'cop'), (('easy', 'tasks'), 'acl:relcl'), (('for', 'human'), 'case'), (('a', 'human'), 'det'), (('human', 'easy'), 'obl'), (('but', 'difficult'), 'cc'), (('difficult', 'human'), 'conj'), (('for', 'machine'), 'case'), (('a', 'machine'), 'det'), (('machine', 'easy'), 'obl'), (('−', 'Aerospace'), 'punct'), (('·', 'Aerospace'), 'punct'), (('Aerospace', 'aircrafts'), 'compound'), (('−', 'Aerospace'), 'punct'), (('Autopilot', 'aircrafts'), 'compound'), (('aircrafts', 'perform'), 'parataxis'), ((',', 'detection'), 'punct'), (('aircraft', 'detection'), 'compound'), (('fault', 'detection'), 'compound'), (('detection', 'aircrafts'), 'conj'), (('.', 'perform'), 'punct')]

 Named Entities are: 
>> [('− · Aerospace − Autopilot aircrafts', 'PRODUCT')]

========================== Sentence 96 ===========================

 · Automotive − Automobile guidance systems. 

Tokens are: 
>> ['·', 'Automotive', '−', 'Automobile', 'guidance', 'systems', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Automotive', 'ADJ'), ('−', 'PUNCT'), ('Automobile', 'NOUN'), ('guidance', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Automotive', 'JJ'), ('−', ','), ('Automobile', 'NN'), ('guidance', 'NN'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Automotive', 'Automotive'), ('−', "''"), ('Automobile', 'automobile'), ('guidance', 'guidance'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'systems'), 'punct'), (('Automotive', 'systems'), 'amod'), (('−', 'Automotive'), 'punct'), (('Automobile', 'guidance'), 'compound'), (('guidance', 'systems'), 'compound'), (('systems', 'root'), 'root'), (('.', 'systems'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 97 ===========================

 · Military − Weapon orientation and steering, target tracking, object discrimination, facial recognition, signal/image identification. 

Tokens are: 
>> ['·', 'Military', '−', 'Weapon', 'orientation', 'and', 'steering', ',', 'target', 'tracking', ',', 'object', 'discrimination', ',', 'facial', 'recognition', ',', 'signal', '/', 'image', 'identification', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Military', 'ADJ'), ('−', 'PUNCT'), ('Weapon', 'NOUN'), ('orientation', 'NOUN'), ('and', 'CCONJ'), ('steering', 'NOUN'), (',', 'PUNCT'), ('target', 'NOUN'), ('tracking', 'NOUN'), (',', 'PUNCT'), ('object', 'NOUN'), ('discrimination', 'NOUN'), (',', 'PUNCT'), ('facial', 'ADJ'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('signal', 'NOUN'), ('/', 'SYM'), ('image', 'NOUN'), ('identification', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Military', 'JJ'), ('−', ','), ('Weapon', 'NN'), ('orientation', 'NN'), ('and', 'CC'), ('steering', 'NN'), (',', ','), ('target', 'NN'), ('tracking', 'NN'), (',', ','), ('object', 'NN'), ('discrimination', 'NN'), (',', ','), ('facial', 'JJ'), ('recognition', 'NN'), (',', ','), ('signal', 'NN'), ('/', ','), ('image', 'NN'), ('identification', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Military', 'military'), ('−', "''"), ('Weapon', 'weapon'), ('orientation', 'orientation'), ('and', 'and'), ('steering', 'steering'), (',', ','), ('target', 'target'), ('tracking', 'tracking'), (',', ','), ('object', 'object'), ('discrimination', 'discrimination'), (',', ','), ('facial', 'facial'), ('recognition', 'recognition'), (',', ','), ('signal', 'signal'), ('/', '/'), ('image', 'image'), ('identification', 'identification'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'orientation'), 'punct'), (('Military', 'orientation'), 'amod'), (('−', 'orientation'), 'punct'), (('Weapon', 'orientation'), 'compound'), (('orientation', 'root'), 'root'), (('and', 'steering'), 'cc'), (('steering', 'orientation'), 'conj'), ((',', 'tracking'), 'punct'), (('target', 'tracking'), 'compound'), (('tracking', 'orientation'), 'conj'), ((',', 'discrimination'), 'punct'), (('object', 'discrimination'), 'compound'), (('discrimination', 'orientation'), 'conj'), ((',', 'recognition'), 'punct'), (('facial', 'recognition'), 'amod'), (('recognition', 'orientation'), 'conj'), ((',', 'identification'), 'punct'), (('signal', 'orientation'), 'conj'), (('/', 'image'), 'cc'), (('image', 'identification'), 'compound'), (('identification', 'orientation'), 'conj'), (('.', 'orientation'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 98 ===========================

 · Electronics − Code sequence prediction, IC chip layout, chip failure analysis, machine vision, voice synthesis. 

Tokens are: 
>> ['·', 'Electronics', '−', 'Code', 'sequence', 'prediction', ',', 'IC', 'chip', 'layout', ',', 'chip', 'failure', 'analysis', ',', 'machine', 'vision', ',', 'voice', 'synthesis', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Electronics', 'NOUN'), ('−', 'PUNCT'), ('Code', 'NOUN'), ('sequence', 'NOUN'), ('prediction', 'NOUN'), (',', 'PUNCT'), ('IC', 'NOUN'), ('chip', 'NOUN'), ('layout', 'NOUN'), (',', 'PUNCT'), ('chip', 'NOUN'), ('failure', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('vision', 'NOUN'), (',', 'PUNCT'), ('voice', 'NOUN'), ('synthesis', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Electronics', 'NNS'), ('−', ','), ('Code', 'NN'), ('sequence', 'NN'), ('prediction', 'NN'), (',', ','), ('IC', 'NN'), ('chip', 'NN'), ('layout', 'NN'), (',', ','), ('chip', 'NN'), ('failure', 'NN'), ('analysis', 'NN'), (',', ','), ('machine', 'NN'), ('vision', 'NN'), (',', ','), ('voice', 'NN'), ('synthesis', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Electronics', 'electronics'), ('−', "''"), ('Code', 'code'), ('sequence', 'sequence'), ('prediction', 'prediction'), (',', ','), ('IC', 'ic'), ('chip', 'chip'), ('layout', 'layout'), (',', ','), ('chip', 'chip'), ('failure', 'failure'), ('analysis', 'analysis'), (',', ','), ('machine', 'machine'), ('vision', 'vision'), (',', ','), ('voice', 'voice'), ('synthesis', 'synthesis'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Electronics'), 'punct'), (('Electronics', 'root'), 'root'), (('−', 'Electronics'), 'punct'), (('Code', 'sequence'), 'compound'), (('sequence', 'prediction'), 'compound'), (('prediction', 'Electronics'), 'list'), ((',', 'Electronics'), 'punct'), (('IC', 'layout'), 'compound'), (('chip', 'layout'), 'compound'), (('layout', 'Electronics'), 'list'), ((',', 'analysis'), 'punct'), (('chip', 'analysis'), 'compound'), (('failure', 'analysis'), 'compound'), (('analysis', 'Electronics'), 'list'), ((',', 'vision'), 'punct'), (('machine', 'vision'), 'compound'), (('vision', 'Electronics'), 'list'), ((',', 'synthesis'), 'punct'), (('voice', 'synthesis'), 'compound'), (('synthesis', 'Electronics'), 'list'), (('.', 'Electronics'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 99 ===========================

 · Financial − Real estate appraisal, loan advisor, mortgage screening, corporate bond rating, portfolio trading program, corporate financial analysis, currency value prediction, document readers, credit application evaluators. 

Tokens are: 
>> ['·', 'Financial', '−', 'Real', 'estate', 'appraisal', ',', 'loan', 'advisor', ',', 'mortgage', 'screening', ',', 'corporate', 'bond', 'rating', ',', 'portfolio', 'trading', 'program', ',', 'corporate', 'financial', 'analysis', ',', 'currency', 'value', 'prediction', ',', 'document', 'readers', ',', 'credit', 'application', 'evaluators', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Financial', 'ADJ'), ('−', 'PUNCT'), ('Real', 'ADJ'), ('estate', 'NOUN'), ('appraisal', 'NOUN'), (',', 'PUNCT'), ('loan', 'NOUN'), ('advisor', 'NOUN'), (',', 'PUNCT'), ('mortgage', 'NOUN'), ('screening', 'NOUN'), (',', 'PUNCT'), ('corporate', 'ADJ'), ('bond', 'NOUN'), ('rating', 'NOUN'), (',', 'PUNCT'), ('portfolio', 'NOUN'), ('trading', 'NOUN'), ('program', 'NOUN'), (',', 'PUNCT'), ('corporate', 'ADJ'), ('financial', 'ADJ'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('currency', 'NOUN'), ('value', 'NOUN'), ('prediction', 'NOUN'), (',', 'PUNCT'), ('document', 'NOUN'), ('readers', 'NOUN'), (',', 'PUNCT'), ('credit', 'NOUN'), ('application', 'NOUN'), ('evaluators', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Financial', 'JJ'), ('−', ','), ('Real', 'JJ'), ('estate', 'NN'), ('appraisal', 'NN'), (',', ','), ('loan', 'NN'), ('advisor', 'NN'), (',', ','), ('mortgage', 'NN'), ('screening', 'NN'), (',', ','), ('corporate', 'JJ'), ('bond', 'NN'), ('rating', 'NN'), (',', ','), ('portfolio', 'NN'), ('trading', 'NN'), ('program', 'NN'), (',', ','), ('corporate', 'JJ'), ('financial', 'JJ'), ('analysis', 'NN'), (',', ','), ('currency', 'NN'), ('value', 'NN'), ('prediction', 'NN'), (',', ','), ('document', 'NN'), ('readers', 'NNS'), (',', ','), ('credit', 'NN'), ('application', 'NN'), ('evaluators', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Financial', 'Financial'), ('−', "''"), ('Real', 'real'), ('estate', 'estate'), ('appraisal', 'appraisal'), (',', ','), ('loan', 'loan'), ('advisor', 'advisor'), (',', ','), ('mortgage', 'mortgage'), ('screening', 'screen'), (',', ','), ('corporate', 'corporate'), ('bond', 'bond'), ('rating', 'rating'), (',', ','), ('portfolio', 'portfolio'), ('trading', 'trading'), ('program', 'program'), (',', ','), ('corporate', 'corporate'), ('financial', 'financial'), ('analysis', 'analysis'), (',', ','), ('currency', 'currency'), ('value', 'value'), ('prediction', 'prediction'), (',', ','), ('document', 'document'), ('readers', 'reader'), (',', ','), ('credit', 'credit'), ('application', 'application'), ('evaluators', 'evaluator'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'appraisal'), 'punct'), (('Financial', 'appraisal'), 'amod'), (('−', 'appraisal'), 'punct'), (('Real', 'estate'), 'amod'), (('estate', 'appraisal'), 'compound'), (('appraisal', 'root'), 'root'), ((',', 'appraisal'), 'punct'), (('loan', 'advisor'), 'compound'), (('advisor', 'appraisal'), 'list'), ((',', 'screening'), 'punct'), (('mortgage', 'screening'), 'compound'), (('screening', 'appraisal'), 'list'), ((',', 'rating'), 'punct'), (('corporate', 'rating'), 'amod'), (('bond', 'rating'), 'compound'), (('rating', 'appraisal'), 'list'), ((',', 'program'), 'punct'), (('portfolio', 'program'), 'compound'), (('trading', 'program'), 'compound'), (('program', 'appraisal'), 'list'), ((',', 'analysis'), 'punct'), (('corporate', 'analysis'), 'amod'), (('financial', 'analysis'), 'amod'), (('analysis', 'appraisal'), 'list'), ((',', 'prediction'), 'punct'), (('currency', 'value'), 'compound'), (('value', 'prediction'), 'compound'), (('prediction', 'appraisal'), 'list'), ((',', 'readers'), 'punct'), (('document', 'readers'), 'compound'), (('readers', 'appraisal'), 'list'), ((',', 'evaluators'), 'punct'), (('credit', 'evaluators'), 'compound'), (('application', 'evaluators'), 'compound'), (('evaluators', 'appraisal'), 'list'), (('.', 'appraisal'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 100 ===========================

 · Industrial − Manufacturing process control, product design and analysis, quality inspection systems, welding quality analysis, paper quality prediction, chemical product design analysis, dynamic modeling of chemical process systems, machine maintenance analysis, project bidding, planning, and management. 

Tokens are: 
>> ['·', 'Industrial', '−', 'Manufacturing', 'process', 'control', ',', 'product', 'design', 'and', 'analysis', ',', 'quality', 'inspection', 'systems', ',', 'welding', 'quality', 'analysis', ',', 'paper', 'quality', 'prediction', ',', 'chemical', 'product', 'design', 'analysis', ',', 'dynamic', 'modeling', 'of', 'chemical', 'process', 'systems', ',', 'machine', 'maintenance', 'analysis', ',', 'project', 'bidding', ',', 'planning', ',', 'and', 'management', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Industrial', 'ADJ'), ('−', 'PUNCT'), ('Manufacturing', 'NOUN'), ('process', 'NOUN'), ('control', 'NOUN'), (',', 'PUNCT'), ('product', 'NOUN'), ('design', 'NOUN'), ('and', 'CCONJ'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('quality', 'ADJ'), ('inspection', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('welding', 'NOUN'), ('quality', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('paper', 'NOUN'), ('quality', 'NOUN'), ('prediction', 'NOUN'), (',', 'PUNCT'), ('chemical', 'ADJ'), ('product', 'NOUN'), ('design', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('dynamic', 'ADJ'), ('modeling', 'NOUN'), ('of', 'ADP'), ('chemical', 'ADJ'), ('process', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('maintenance', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('project', 'NOUN'), ('bidding', 'NOUN'), (',', 'PUNCT'), ('planning', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('management', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Industrial', 'JJ'), ('−', ','), ('Manufacturing', 'NN'), ('process', 'NN'), ('control', 'NN'), (',', ','), ('product', 'NN'), ('design', 'NN'), ('and', 'CC'), ('analysis', 'NN'), (',', ','), ('quality', 'JJ'), ('inspection', 'NN'), ('systems', 'NNS'), (',', ','), ('welding', 'NN'), ('quality', 'NN'), ('analysis', 'NN'), (',', ','), ('paper', 'NN'), ('quality', 'NN'), ('prediction', 'NN'), (',', ','), ('chemical', 'JJ'), ('product', 'NN'), ('design', 'NN'), ('analysis', 'NN'), (',', ','), ('dynamic', 'JJ'), ('modeling', 'NN'), ('of', 'IN'), ('chemical', 'JJ'), ('process', 'NN'), ('systems', 'NNS'), (',', ','), ('machine', 'NN'), ('maintenance', 'NN'), ('analysis', 'NN'), (',', ','), ('project', 'NN'), ('bidding', 'NN'), (',', ','), ('planning', 'NN'), (',', ','), ('and', 'CC'), ('management', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Industrial', 'Industrial'), ('−', "''"), ('Manufacturing', 'manufacturing'), ('process', 'process'), ('control', 'control'), (',', ','), ('product', 'product'), ('design', 'design'), ('and', 'and'), ('analysis', 'analysis'), (',', ','), ('quality', 'quality'), ('inspection', 'inspection'), ('systems', 'system'), (',', ','), ('welding', 'welding'), ('quality', 'quality'), ('analysis', 'analysis'), (',', ','), ('paper', 'paper'), ('quality', 'quality'), ('prediction', 'prediction'), (',', ','), ('chemical', 'chemical'), ('product', 'product'), ('design', 'design'), ('analysis', 'analysis'), (',', ','), ('dynamic', 'dynamic'), ('modeling', 'modeling'), ('of', 'of'), ('chemical', 'chemical'), ('process', 'process'), ('systems', 'system'), (',', ','), ('machine', 'machine'), ('maintenance', 'maintenance'), ('analysis', 'analysis'), (',', ','), ('project', 'project'), ('bidding', 'bid'), (',', ','), ('planning', 'planning'), (',', ','), ('and', 'and'), ('management', 'management'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Industrial'), 'punct'), (('Industrial', 'control'), 'amod'), (('−', 'control'), 'punct'), (('Manufacturing', 'process'), 'compound'), (('process', 'control'), 'compound'), (('control', 'root'), 'root'), ((',', 'design'), 'punct'), (('product', 'design'), 'compound'), (('design', 'control'), 'conj'), (('and', 'analysis'), 'cc'), (('analysis', 'control'), 'conj'), ((',', 'systems'), 'punct'), (('quality', 'inspection'), 'amod'), (('inspection', 'systems'), 'compound'), (('systems', 'control'), 'conj'), ((',', 'analysis'), 'punct'), (('welding', 'analysis'), 'compound'), (('quality', 'analysis'), 'compound'), (('analysis', 'control'), 'conj'), ((',', 'prediction'), 'punct'), (('paper', 'quality'), 'compound'), (('quality', 'prediction'), 'compound'), (('prediction', 'control'), 'conj'), ((',', 'analysis'), 'punct'), (('chemical', 'product'), 'amod'), (('product', 'analysis'), 'compound'), (('design', 'analysis'), 'compound'), (('analysis', 'control'), 'conj'), ((',', 'modeling'), 'punct'), (('dynamic', 'modeling'), 'amod'), (('modeling', 'control'), 'conj'), (('of', 'systems'), 'case'), (('chemical', 'process'), 'amod'), (('process', 'systems'), 'compound'), (('systems', 'modeling'), 'nmod'), ((',', 'analysis'), 'punct'), (('machine', 'analysis'), 'compound'), (('maintenance', 'analysis'), 'compound'), (('analysis', 'control'), 'conj'), ((',', 'bidding'), 'punct'), (('project', 'bidding'), 'compound'), (('bidding', 'control'), 'conj'), ((',', 'planning'), 'punct'), (('planning', 'control'), 'conj'), ((',', 'management'), 'punct'), (('and', 'management'), 'cc'), (('management', 'control'), 'conj'), (('.', 'control'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 101 ===========================

 · Medical − Cancer cell analysis, EEG and ECG analysis, prosthetic design, transplant time optimizer. 

Tokens are: 
>> ['·', 'Medical', '−', 'Cancer', 'cell', 'analysis', ',', 'EEG', 'and', 'ECG', 'analysis', ',', 'prosthetic', 'design', ',', 'transplant', 'time', 'optimizer', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Medical', 'ADJ'), ('−', 'PUNCT'), ('Cancer', 'NOUN'), ('cell', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('EEG', 'NOUN'), ('and', 'CCONJ'), ('ECG', 'NOUN'), ('analysis', 'NOUN'), (',', 'PUNCT'), ('prosthetic', 'ADJ'), ('design', 'NOUN'), (',', 'PUNCT'), ('transplant', 'NOUN'), ('time', 'NOUN'), ('optimizer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Medical', 'JJ'), ('−', ','), ('Cancer', 'NN'), ('cell', 'NN'), ('analysis', 'NN'), (',', ','), ('EEG', 'NN'), ('and', 'CC'), ('ECG', 'NN'), ('analysis', 'NN'), (',', ','), ('prosthetic', 'JJ'), ('design', 'NN'), (',', ','), ('transplant', 'NN'), ('time', 'NN'), ('optimizer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Medical', 'Medical'), ('−', "''"), ('Cancer', 'Cancer'), ('cell', 'cell'), ('analysis', 'analysis'), (',', ','), ('EEG', 'eeg'), ('and', 'and'), ('ECG', 'ecg'), ('analysis', 'analysis'), (',', ','), ('prosthetic', 'prosthetic'), ('design', 'design'), (',', ','), ('transplant', 'transplant'), ('time', 'time'), ('optimizer', 'optimizer'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'analysis'), 'punct'), (('Medical', 'analysis'), 'amod'), (('−', 'Medical'), 'punct'), (('Cancer', 'cell'), 'compound'), (('cell', 'analysis'), 'compound'), (('analysis', 'root'), 'root'), ((',', 'analysis'), 'punct'), (('EEG', 'analysis'), 'compound'), (('and', 'ECG'), 'cc'), (('ECG', 'EEG'), 'conj'), (('analysis', 'analysis'), 'conj'), ((',', 'design'), 'punct'), (('prosthetic', 'design'), 'amod'), (('design', 'analysis'), 'conj'), ((',', 'optimizer'), 'punct'), (('transplant', 'time'), 'compound'), (('time', 'optimizer'), 'compound'), (('optimizer', 'analysis'), 'conj'), (('.', 'analysis'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 102 ===========================

 · Speech − Speech recognition, speech classification, text to speech conversion. 

Tokens are: 
>> ['·', 'Speech', '−', 'Speech', 'recognition', ',', 'speech', 'classification', ',', 'text', 'to', 'speech', 'conversion', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Speech', 'NOUN'), ('−', 'PUNCT'), ('Speech', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('classification', 'NOUN'), (',', 'PUNCT'), ('text', 'NOUN'), ('to', 'ADP'), ('speech', 'NOUN'), ('conversion', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Speech', 'NN'), ('−', ','), ('Speech', 'NN'), ('recognition', 'NN'), (',', ','), ('speech', 'NN'), ('classification', 'NN'), (',', ','), ('text', 'NN'), ('to', 'IN'), ('speech', 'NN'), ('conversion', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Speech', 'speech'), ('−', "''"), ('Speech', 'speech'), ('recognition', 'recognition'), (',', ','), ('speech', 'speech'), ('classification', 'classification'), (',', ','), ('text', 'text'), ('to', 'to'), ('speech', 'speech'), ('conversion', 'conversion'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Speech'), 'punct'), (('Speech', 'root'), 'root'), (('−', 'Speech'), 'punct'), (('Speech', 'recognition'), 'compound'), (('recognition', 'Speech'), 'list'), ((',', 'classification'), 'punct'), (('speech', 'classification'), 'compound'), (('classification', 'recognition'), 'conj'), ((',', 'text'), 'punct'), (('text', 'Speech'), 'list'), (('to', 'conversion'), 'case'), (('speech', 'conversion'), 'compound'), (('conversion', 'text'), 'nmod'), (('.', 'Speech'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 103 ===========================

 · Telecommunications − Image and data compression, automated information services, real-time spoken language translation. 

Tokens are: 
>> ['·', 'Telecommunications', '−', 'Image', 'and', 'data', 'compression', ',', 'automated', 'information', 'services', ',', 'real', '-', 'time', 'spoken', 'language', 'translation', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Telecommunications', 'NOUN'), ('−', 'PUNCT'), ('Image', 'NOUN'), ('and', 'CCONJ'), ('data', 'NOUN'), ('compression', 'NOUN'), (',', 'PUNCT'), ('automated', 'VERB'), ('information', 'NOUN'), ('services', 'NOUN'), (',', 'PUNCT'), ('real', 'ADJ'), ('-', 'PUNCT'), ('time', 'NOUN'), ('spoken', 'VERB'), ('language', 'NOUN'), ('translation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Telecommunications', 'NNS'), ('−', ','), ('Image', 'NN'), ('and', 'CC'), ('data', 'NN'), ('compression', 'NN'), (',', ','), ('automated', 'VBN'), ('information', 'NN'), ('services', 'NNS'), (',', ','), ('real', 'JJ'), ('-', 'HYPH'), ('time', 'NN'), ('spoken', 'VBN'), ('language', 'NN'), ('translation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Telecommunications', 'telecommunications'), ('−', "''"), ('Image', 'image'), ('and', 'and'), ('data', 'datum'), ('compression', 'compression'), (',', ','), ('automated', 'automated'), ('information', 'information'), ('services', 'service'), (',', ','), ('real', 'real'), ('-', '-'), ('time', 'time'), ('spoken', 'speak'), ('language', 'language'), ('translation', 'translation'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Telecommunications'), 'punct'), (('Telecommunications', 'root'), 'root'), (('−', 'Telecommunications'), 'punct'), (('Image', 'Telecommunications'), 'appos'), (('and', 'compression'), 'cc'), (('data', 'compression'), 'compound'), (('compression', 'Image'), 'conj'), ((',', 'services'), 'punct'), (('automated', 'services'), 'amod'), (('information', 'services'), 'compound'), (('services', 'Telecommunications'), 'list'), ((',', 'translation'), 'punct'), (('real', 'time'), 'amod'), (('-', 'time'), 'punct'), (('time', 'translation'), 'compound'), (('spoken', 'translation'), 'amod'), (('language', 'translation'), 'compound'), (('translation', 'Telecommunications'), 'list'), (('.', 'Telecommunications'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 104 ===========================

 · Transportation − Truck Brake system diagnosis, vehicle scheduling, routing systems. 

Tokens are: 
>> ['·', 'Transportation', '−', 'Truck', 'Brake', 'system', 'diagnosis', ',', 'vehicle', 'scheduling', ',', 'routing', 'systems', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Transportation', 'NOUN'), ('−', 'PUNCT'), ('Truck', 'NOUN'), ('Brake', 'NOUN'), ('system', 'NOUN'), ('diagnosis', 'NOUN'), (',', 'PUNCT'), ('vehicle', 'NOUN'), ('scheduling', 'NOUN'), (',', 'PUNCT'), ('routing', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Transportation', 'NN'), ('−', ','), ('Truck', 'NN'), ('Brake', 'NN'), ('system', 'NN'), ('diagnosis', 'NN'), (',', ','), ('vehicle', 'NN'), ('scheduling', 'NN'), (',', ','), ('routing', 'NN'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Transportation', 'transportation'), ('−', "''"), ('Truck', 'truck'), ('Brake', 'brake'), ('system', 'system'), ('diagnosis', 'diagnosis'), (',', ','), ('vehicle', 'vehicle'), ('scheduling', 'scheduling'), (',', ','), ('routing', 'routing'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Transportation'), 'punct'), (('Transportation', 'root'), 'root'), (('−', 'Transportation'), 'punct'), (('Truck', 'Brake'), 'compound'), (('Brake', 'system'), 'compound'), (('system', 'diagnosis'), 'compound'), (('diagnosis', 'Transportation'), 'list'), ((',', 'scheduling'), 'punct'), (('vehicle', 'scheduling'), 'compound'), (('scheduling', 'Transportation'), 'list'), ((',', 'systems'), 'punct'), (('routing', 'systems'), 'compound'), (('systems', 'Transportation'), 'list'), (('.', 'Transportation'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 105 ===========================

 · Software − Pattern Recognition in facial recognition, optical character recognition, etc. · Time Series Prediction − ANNs are used to make predictions on stocks and natural calamities. 

Tokens are: 
>> ['·', 'Software', '−', 'Pattern', 'Recognition', 'in', 'facial', 'recognition', ',', 'optical', 'character', 'recognition', ',', 'etc.', '·', 'Time', 'Series', 'Prediction', '−', 'ANNs', 'are', 'used', 'to', 'make', 'predictions', 'on', 'stocks', 'and', 'natural', 'calamities', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Software', 'NOUN'), ('−', 'PUNCT'), ('Pattern', 'NOUN'), ('Recognition', 'NOUN'), ('in', 'ADP'), ('facial', 'ADJ'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('optical', 'ADJ'), ('character', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X'), ('·', 'PUNCT'), ('Time', 'PROPN'), ('Series', 'PROPN'), ('Prediction', 'NOUN'), ('−', 'PUNCT'), ('ANNs', 'NOUN'), ('are', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('predictions', 'NOUN'), ('on', 'ADP'), ('stocks', 'NOUN'), ('and', 'CCONJ'), ('natural', 'ADJ'), ('calamities', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Software', 'NN'), ('−', ','), ('Pattern', 'NN'), ('Recognition', 'NN'), ('in', 'IN'), ('facial', 'JJ'), ('recognition', 'NN'), (',', ','), ('optical', 'JJ'), ('character', 'NN'), ('recognition', 'NN'), (',', ','), ('etc.', 'FW'), ('·', 'NFP'), ('Time', 'NNP'), ('Series', 'NNP'), ('Prediction', 'NN'), ('−', ','), ('ANNs', 'NN'), ('are', 'VBP'), ('used', 'VBN'), ('to', 'TO'), ('make', 'VB'), ('predictions', 'NNS'), ('on', 'IN'), ('stocks', 'NNS'), ('and', 'CC'), ('natural', 'JJ'), ('calamities', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Software', 'Software'), ('−', "''"), ('Pattern', 'pattern'), ('Recognition', 'recognition'), ('in', 'in'), ('facial', 'facial'), ('recognition', 'recognition'), (',', ','), ('optical', 'optical'), ('character', 'character'), ('recognition', 'recognition'), (',', ','), ('etc.', 'etc.'), ('·', '·'), ('Time', 'Time'), ('Series', 'Series'), ('Prediction', 'prediction'), ('−', "''"), ('ANNs', 'ann'), ('are', 'be'), ('used', 'use'), ('to', 'to'), ('make', 'make'), ('predictions', 'prediction'), ('on', 'on'), ('stocks', 'stock'), ('and', 'and'), ('natural', 'natural'), ('calamities', 'calamity'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Software'), 'punct'), (('Software', 'used'), 'nsubj:pass'), (('−', 'Software'), 'punct'), (('Pattern', 'Recognition'), 'compound'), (('Recognition', 'used'), 'nsubj:pass'), (('in', 'recognition'), 'case'), (('facial', 'recognition'), 'amod'), (('recognition', 'Recognition'), 'nmod'), ((',', 'recognition'), 'punct'), (('optical', 'recognition'), 'amod'), (('character', 'recognition'), 'compound'), (('recognition', 'recognition'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'recognition'), 'conj'), (('·', 'Prediction'), 'punct'), (('Time', 'Prediction'), 'compound'), (('Series', 'Prediction'), 'compound'), (('Prediction', 'Software'), 'list'), (('−', 'Prediction'), 'punct'), (('ANNs', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('to', 'make'), 'mark'), (('make', 'used'), 'xcomp'), (('predictions', 'make'), 'obj'), (('on', 'stocks'), 'case'), (('stocks', 'predictions'), 'nmod'), (('and', 'calamities'), 'cc'), (('natural', 'calamities'), 'amod'), (('calamities', 'stocks'), 'conj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 106 ===========================

 · Signal Processing − Neural networks can be trained to process an audio signal and filter it appropriately in the hearing aids. 

Tokens are: 
>> ['·', 'Signal', 'Processing', '−', 'Neural', 'networks', 'can', 'be', 'trained', 'to', 'process', 'an', 'audio', 'signal', 'and', 'filter', 'it', 'appropriately', 'in', 'the', 'hearing', 'aids', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Signal', 'NOUN'), ('Processing', 'NOUN'), ('−', 'PUNCT'), ('Neural', 'ADJ'), ('networks', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('trained', 'VERB'), ('to', 'PART'), ('process', 'VERB'), ('an', 'DET'), ('audio', 'NOUN'), ('signal', 'NOUN'), ('and', 'CCONJ'), ('filter', 'VERB'), ('it', 'PRON'), ('appropriately', 'ADV'), ('in', 'ADP'), ('the', 'DET'), ('hearing', 'NOUN'), ('aids', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Signal', 'NN'), ('Processing', 'NN'), ('−', ','), ('Neural', 'JJ'), ('networks', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('trained', 'VBN'), ('to', 'TO'), ('process', 'VB'), ('an', 'DT'), ('audio', 'NN'), ('signal', 'NN'), ('and', 'CC'), ('filter', 'VB'), ('it', 'PRP'), ('appropriately', 'RB'), ('in', 'IN'), ('the', 'DT'), ('hearing', 'NN'), ('aids', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Signal', 'signal'), ('Processing', 'processing'), ('−', "''"), ('Neural', 'neural'), ('networks', 'network'), ('can', 'can'), ('be', 'be'), ('trained', 'train'), ('to', 'to'), ('process', 'process'), ('an', 'a'), ('audio', 'audio'), ('signal', 'signal'), ('and', 'and'), ('filter', 'filter'), ('it', 'it'), ('appropriately', 'appropriately'), ('in', 'in'), ('the', 'the'), ('hearing', 'hearing'), ('aids', 'aid'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Processing'), 'punct'), (('Signal', 'Processing'), 'compound'), (('Processing', 'trained'), 'nsubj:pass'), (('−', 'Processing'), 'punct'), (('Neural', 'networks'), 'amod'), (('networks', 'trained'), 'nsubj:pass'), (('can', 'trained'), 'aux'), (('be', 'trained'), 'aux:pass'), (('trained', 'root'), 'root'), (('to', 'process'), 'mark'), (('process', 'trained'), 'xcomp'), (('an', 'signal'), 'det'), (('audio', 'signal'), 'compound'), (('signal', 'process'), 'obj'), (('and', 'filter'), 'cc'), (('filter', 'process'), 'conj'), (('it', 'filter'), 'obj'), (('appropriately', 'filter'), 'advmod'), (('in', 'aids'), 'case'), (('the', 'aids'), 'det'), (('hearing', 'aids'), 'compound'), (('aids', 'filter'), 'obl'), (('.', 'trained'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 107 ===========================

 · Control − ANNs are often used to make steering decisions of physical vehicles. 

Tokens are: 
>> ['·', 'Control', '−', 'ANNs', 'are', 'often', 'used', 'to', 'make', 'steering', 'decisions', 'of', 'physical', 'vehicles', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Control', 'NOUN'), ('−', 'PUNCT'), ('ANNs', 'PROPN'), ('are', 'AUX'), ('often', 'ADV'), ('used', 'VERB'), ('to', 'PART'), ('make', 'VERB'), ('steering', 'VERB'), ('decisions', 'NOUN'), ('of', 'ADP'), ('physical', 'ADJ'), ('vehicles', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Control', 'NN'), ('−', ','), ('ANNs', 'NNP'), ('are', 'VBP'), ('often', 'RB'), ('used', 'VBN'), ('to', 'TO'), ('make', 'VB'), ('steering', 'VBG'), ('decisions', 'NNS'), ('of', 'IN'), ('physical', 'JJ'), ('vehicles', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Control', 'control'), ('−', "''"), ('ANNs', 'ANNs'), ('are', 'be'), ('often', 'often'), ('used', 'use'), ('to', 'to'), ('make', 'make'), ('steering', 'steering'), ('decisions', 'decision'), ('of', 'of'), ('physical', 'physical'), ('vehicles', 'vehicle'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Control'), 'punct'), (('Control', 'used'), 'nsubj:pass'), (('−', 'Control'), 'punct'), (('ANNs', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('often', 'used'), 'advmod'), (('used', 'root'), 'root'), (('to', 'make'), 'mark'), (('make', 'used'), 'xcomp'), (('steering', 'decisions'), 'amod'), (('decisions', 'make'), 'obj'), (('of', 'vehicles'), 'case'), (('physical', 'vehicles'), 'amod'), (('vehicles', 'decisions'), 'nmod'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 108 ===========================

 · Anomaly Detection − 

Tokens are: 
>> ['·', 'Anomaly', 'Detection', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Anomaly', 'NOUN'), ('Detection', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Anomaly', 'NN'), ('Detection', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Anomaly', 'anomaly'), ('Detection', 'detection'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Detection'), 'punct'), (('Anomaly', 'Detection'), 'compound'), (('Detection', 'root'), 'root'), (('−', 'Detection'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 109 ===========================

 As ANNs are expert at recognizing patterns, they can also be trained to generate an output when something unusual occurs that misfits the pattern. 

Tokens are: 
>> ['As', 'ANNs', 'are', 'expert', 'at', 'recognizing', 'patterns', ',', 'they', 'can', 'also', 'be', 'trained', 'to', 'generate', 'an', 'output', 'when', 'something', 'unusual', 'occurs', 'that', 'misfits', 'the', 'pattern', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('ANNs', 'NOUN'), ('are', 'AUX'), ('expert', 'ADJ'), ('at', 'SCONJ'), ('recognizing', 'VERB'), ('patterns', 'NOUN'), (',', 'PUNCT'), ('they', 'PRON'), ('can', 'AUX'), ('also', 'ADV'), ('be', 'AUX'), ('trained', 'VERB'), ('to', 'PART'), ('generate', 'VERB'), ('an', 'DET'), ('output', 'NOUN'), ('when', 'SCONJ'), ('something', 'PRON'), ('unusual', 'ADJ'), ('occurs', 'VERB'), ('that', 'SCONJ'), ('misfits', 'NOUN'), ('the', 'DET'), ('pattern', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('ANNs', 'NNS'), ('are', 'VBP'), ('expert', 'JJ'), ('at', 'IN'), ('recognizing', 'VBG'), ('patterns', 'NNS'), (',', ','), ('they', 'PRP'), ('can', 'MD'), ('also', 'RB'), ('be', 'VB'), ('trained', 'VBN'), ('to', 'TO'), ('generate', 'VB'), ('an', 'DT'), ('output', 'NN'), ('when', 'WRB'), ('something', 'NN'), ('unusual', 'JJ'), ('occurs', 'VBZ'), ('that', 'IN'), ('misfits', 'NNS'), ('the', 'DT'), ('pattern', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('ANNs', 'ann'), ('are', 'be'), ('expert', 'expert'), ('at', 'at'), ('recognizing', 'recognize'), ('patterns', 'pattern'), (',', ','), ('they', 'they'), ('can', 'can'), ('also', 'also'), ('be', 'be'), ('trained', 'train'), ('to', 'to'), ('generate', 'generate'), ('an', 'a'), ('output', 'output'), ('when', 'when'), ('something', 'something'), ('unusual', 'unusual'), ('occurs', 'occur'), ('that', 'that'), ('misfits', 'misfit'), ('the', 'the'), ('pattern', 'pattern'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'expert'), 'mark'), (('ANNs', 'expert'), 'nsubj'), (('are', 'expert'), 'cop'), (('expert', 'trained'), 'advcl'), (('at', 'recognizing'), 'mark'), (('recognizing', 'expert'), 'advcl'), (('patterns', 'recognizing'), 'obj'), ((',', 'trained'), 'punct'), (('they', 'trained'), 'nsubj:pass'), (('can', 'trained'), 'aux'), (('also', 'trained'), 'advmod'), (('be', 'trained'), 'aux:pass'), (('trained', 'root'), 'root'), (('to', 'generate'), 'mark'), (('generate', 'trained'), 'xcomp'), (('an', 'output'), 'det'), (('output', 'generate'), 'obj'), (('when', 'occurs'), 'mark'), (('something', 'occurs'), 'nsubj'), (('unusual', 'something'), 'amod'), (('occurs', 'generate'), 'advcl'), (('that', 'misfits'), 'mark'), (('misfits', 'occurs'), 'obj'), (('the', 'pattern'), 'det'), (('pattern', 'occurs'), 'ccomp'), (('.', 'trained'), 'punct')]

 Named Entities are: 
>> [('ANNs', 'ORG')]