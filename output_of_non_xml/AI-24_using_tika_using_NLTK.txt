				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

AI-24 How does Machine Learning work A Machine Learning system learns from historical data, builds the prediction models, and whenever it receives new data, predicts the output for it. 


>> Tokens are: 
 ['AI-24', 'How', 'Machine', 'Learning', 'work', 'A', 'Machine', 'Learning', 'system', 'learns', 'historical', 'data', ',', 'builds', 'prediction', 'models', ',', 'whenever', 'receives', 'new', 'data', ',', 'predicts', 'output', '.']

>> Bigrams are: 
 [('AI-24', 'How'), ('How', 'Machine'), ('Machine', 'Learning'), ('Learning', 'work'), ('work', 'A'), ('A', 'Machine'), ('Machine', 'Learning'), ('Learning', 'system'), ('system', 'learns'), ('learns', 'historical'), ('historical', 'data'), ('data', ','), (',', 'builds'), ('builds', 'prediction'), ('prediction', 'models'), ('models', ','), (',', 'whenever'), ('whenever', 'receives'), ('receives', 'new'), ('new', 'data'), ('data', ','), (',', 'predicts'), ('predicts', 'output'), ('output', '.')]

>> Trigrams are: 
 [('AI-24', 'How', 'Machine'), ('How', 'Machine', 'Learning'), ('Machine', 'Learning', 'work'), ('Learning', 'work', 'A'), ('work', 'A', 'Machine'), ('A', 'Machine', 'Learning'), ('Machine', 'Learning', 'system'), ('Learning', 'system', 'learns'), ('system', 'learns', 'historical'), ('learns', 'historical', 'data'), ('historical', 'data', ','), ('data', ',', 'builds'), (',', 'builds', 'prediction'), ('builds', 'prediction', 'models'), ('prediction', 'models', ','), ('models', ',', 'whenever'), (',', 'whenever', 'receives'), ('whenever', 'receives', 'new'), ('receives', 'new', 'data'), ('new', 'data', ','), ('data', ',', 'predicts'), (',', 'predicts', 'output'), ('predicts', 'output', '.')]

>> POS Tags are: 
 [('AI-24', 'JJ'), ('How', 'NNP'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('work', 'VB'), ('A', 'NNP'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('system', 'NN'), ('learns', 'VBZ'), ('historical', 'JJ'), ('data', 'NNS'), (',', ','), ('builds', 'NNS'), ('prediction', 'NN'), ('models', 'NNS'), (',', ','), ('whenever', 'WRB'), ('receives', 'VBZ'), ('new', 'JJ'), ('data', 'NNS'), (',', ','), ('predicts', 'NNS'), ('output', 'NN'), ('.', '.')]

 (S
  (NP AI-24/JJ How/NNP Machine/NNP Learning/NNP)
  work/VB
  (NP A/NNP Machine/NNP Learning/NNP system/NN)
  learns/VBZ
  (NP historical/JJ data/NNS)
  ,/,
  (NP builds/NNS prediction/NN models/NNS)
  ,/,
  whenever/WRB
  receives/VBZ
  (NP new/JJ data/NNS)
  ,/,
  (NP predicts/NNS output/NN)
  ./.) 


>> Noun Phrases are: 
 ['AI-24 How Machine Learning', 'A Machine Learning system', 'historical data', 'builds prediction models', 'new data', 'predicts output']

>> Named Entities are: 
 [('PERSON', 'Machine Learning')] 

>> Stemming using Porter Stemmer: 
 [('AI-24', 'ai-24'), ('How', 'how'), ('Machine', 'machin'), ('Learning', 'learn'), ('work', 'work'), ('A', 'a'), ('Machine', 'machin'), ('Learning', 'learn'), ('system', 'system'), ('learns', 'learn'), ('historical', 'histor'), ('data', 'data'), (',', ','), ('builds', 'build'), ('prediction', 'predict'), ('models', 'model'), (',', ','), ('whenever', 'whenev'), ('receives', 'receiv'), ('new', 'new'), ('data', 'data'), (',', ','), ('predicts', 'predict'), ('output', 'output'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AI-24', 'ai-24'), ('How', 'how'), ('Machine', 'machin'), ('Learning', 'learn'), ('work', 'work'), ('A', 'a'), ('Machine', 'machin'), ('Learning', 'learn'), ('system', 'system'), ('learns', 'learn'), ('historical', 'histor'), ('data', 'data'), (',', ','), ('builds', 'build'), ('prediction', 'predict'), ('models', 'model'), (',', ','), ('whenever', 'whenev'), ('receives', 'receiv'), ('new', 'new'), ('data', 'data'), (',', ','), ('predicts', 'predict'), ('output', 'output'), ('.', '.')]

>> Lemmatization: 
 [('AI-24', 'AI-24'), ('How', 'How'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('work', 'work'), ('A', 'A'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('system', 'system'), ('learns', 'learns'), ('historical', 'historical'), ('data', 'data'), (',', ','), ('builds', 'build'), ('prediction', 'prediction'), ('models', 'model'), (',', ','), ('whenever', 'whenever'), ('receives', 'receives'), ('new', 'new'), ('data', 'data'), (',', ','), ('predicts', 'predicts'), ('output', 'output'), ('.', '.')]



============================ Sentence 2 =============================

The accuracy of predicted output depends upon the amount of data, as the huge amount of data helps to build a better model which predicts the output more accurately. 


>> Tokens are: 
 ['The', 'accuracy', 'predicted', 'output', 'depends', 'upon', 'amount', 'data', ',', 'huge', 'amount', 'data', 'helps', 'build', 'better', 'model', 'predicts', 'output', 'accurately', '.']

>> Bigrams are: 
 [('The', 'accuracy'), ('accuracy', 'predicted'), ('predicted', 'output'), ('output', 'depends'), ('depends', 'upon'), ('upon', 'amount'), ('amount', 'data'), ('data', ','), (',', 'huge'), ('huge', 'amount'), ('amount', 'data'), ('data', 'helps'), ('helps', 'build'), ('build', 'better'), ('better', 'model'), ('model', 'predicts'), ('predicts', 'output'), ('output', 'accurately'), ('accurately', '.')]

>> Trigrams are: 
 [('The', 'accuracy', 'predicted'), ('accuracy', 'predicted', 'output'), ('predicted', 'output', 'depends'), ('output', 'depends', 'upon'), ('depends', 'upon', 'amount'), ('upon', 'amount', 'data'), ('amount', 'data', ','), ('data', ',', 'huge'), (',', 'huge', 'amount'), ('huge', 'amount', 'data'), ('amount', 'data', 'helps'), ('data', 'helps', 'build'), ('helps', 'build', 'better'), ('build', 'better', 'model'), ('better', 'model', 'predicts'), ('model', 'predicts', 'output'), ('predicts', 'output', 'accurately'), ('output', 'accurately', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('accuracy', 'NN'), ('predicted', 'VBD'), ('output', 'NN'), ('depends', 'NNS'), ('upon', 'IN'), ('amount', 'NN'), ('data', 'NNS'), (',', ','), ('huge', 'JJ'), ('amount', 'NN'), ('data', 'NNS'), ('helps', 'VBZ'), ('build', 'VB'), ('better', 'JJR'), ('model', 'NN'), ('predicts', 'VBZ'), ('output', 'NN'), ('accurately', 'RB'), ('.', '.')]

 (S
  (NP The/DT accuracy/NN)
  predicted/VBD
  (NP output/NN depends/NNS)
  upon/IN
  (NP amount/NN data/NNS)
  ,/,
  (NP huge/JJ amount/NN data/NNS)
  helps/VBZ
  build/VB
  better/JJR
  (NP model/NN)
  predicts/VBZ
  (NP output/NN)
  accurately/RB
  ./.) 


>> Noun Phrases are: 
 ['The accuracy', 'output depends', 'amount data', 'huge amount data', 'model', 'output']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('accuracy', 'accuraci'), ('predicted', 'predict'), ('output', 'output'), ('depends', 'depend'), ('upon', 'upon'), ('amount', 'amount'), ('data', 'data'), (',', ','), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('helps', 'help'), ('build', 'build'), ('better', 'better'), ('model', 'model'), ('predicts', 'predict'), ('output', 'output'), ('accurately', 'accur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('accuracy', 'accuraci'), ('predicted', 'predict'), ('output', 'output'), ('depends', 'depend'), ('upon', 'upon'), ('amount', 'amount'), ('data', 'data'), (',', ','), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('helps', 'help'), ('build', 'build'), ('better', 'better'), ('model', 'model'), ('predicts', 'predict'), ('output', 'output'), ('accurately', 'accur'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('accuracy', 'accuracy'), ('predicted', 'predicted'), ('output', 'output'), ('depends', 'depends'), ('upon', 'upon'), ('amount', 'amount'), ('data', 'data'), (',', ','), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('helps', 'help'), ('build', 'build'), ('better', 'better'), ('model', 'model'), ('predicts', 'predicts'), ('output', 'output'), ('accurately', 'accurately'), ('.', '.')]



============================ Sentence 3 =============================

Suppose we have a complex problem, where we need to perform some predictions, so instead of writing a code for it, we just need to feed the data to generic algorithms, and with the help of these algorithms, machine builds the logic as per the data and predict the output. 


>> Tokens are: 
 ['Suppose', 'complex', 'problem', ',', 'need', 'perform', 'predictions', ',', 'instead', 'writing', 'code', ',', 'need', 'feed', 'data', 'generic', 'algorithms', ',', 'help', 'algorithms', ',', 'machine', 'builds', 'logic', 'per', 'data', 'predict', 'output', '.']

>> Bigrams are: 
 [('Suppose', 'complex'), ('complex', 'problem'), ('problem', ','), (',', 'need'), ('need', 'perform'), ('perform', 'predictions'), ('predictions', ','), (',', 'instead'), ('instead', 'writing'), ('writing', 'code'), ('code', ','), (',', 'need'), ('need', 'feed'), ('feed', 'data'), ('data', 'generic'), ('generic', 'algorithms'), ('algorithms', ','), (',', 'help'), ('help', 'algorithms'), ('algorithms', ','), (',', 'machine'), ('machine', 'builds'), ('builds', 'logic'), ('logic', 'per'), ('per', 'data'), ('data', 'predict'), ('predict', 'output'), ('output', '.')]

>> Trigrams are: 
 [('Suppose', 'complex', 'problem'), ('complex', 'problem', ','), ('problem', ',', 'need'), (',', 'need', 'perform'), ('need', 'perform', 'predictions'), ('perform', 'predictions', ','), ('predictions', ',', 'instead'), (',', 'instead', 'writing'), ('instead', 'writing', 'code'), ('writing', 'code', ','), ('code', ',', 'need'), (',', 'need', 'feed'), ('need', 'feed', 'data'), ('feed', 'data', 'generic'), ('data', 'generic', 'algorithms'), ('generic', 'algorithms', ','), ('algorithms', ',', 'help'), (',', 'help', 'algorithms'), ('help', 'algorithms', ','), ('algorithms', ',', 'machine'), (',', 'machine', 'builds'), ('machine', 'builds', 'logic'), ('builds', 'logic', 'per'), ('logic', 'per', 'data'), ('per', 'data', 'predict'), ('data', 'predict', 'output'), ('predict', 'output', '.')]

>> POS Tags are: 
 [('Suppose', 'NNP'), ('complex', 'NN'), ('problem', 'NN'), (',', ','), ('need', 'VBP'), ('perform', 'JJ'), ('predictions', 'NNS'), (',', ','), ('instead', 'RB'), ('writing', 'VBG'), ('code', 'NN'), (',', ','), ('need', 'VBP'), ('feed', 'VBN'), ('data', 'NNS'), ('generic', 'JJ'), ('algorithms', 'NN'), (',', ','), ('help', 'NN'), ('algorithms', 'NN'), (',', ','), ('machine', 'NN'), ('builds', 'NNS'), ('logic', 'JJ'), ('per', 'IN'), ('data', 'NNS'), ('predict', 'NN'), ('output', 'NN'), ('.', '.')]

 (S
  (NP Suppose/NNP complex/NN problem/NN)
  ,/,
  need/VBP
  (NP perform/JJ predictions/NNS)
  ,/,
  instead/RB
  writing/VBG
  (NP code/NN)
  ,/,
  need/VBP
  feed/VBN
  (NP data/NNS)
  (NP generic/JJ algorithms/NN)
  ,/,
  (NP help/NN algorithms/NN)
  ,/,
  (NP machine/NN builds/NNS)
  logic/JJ
  per/IN
  (NP data/NNS predict/NN output/NN)
  ./.) 


>> Noun Phrases are: 
 ['Suppose complex problem', 'perform predictions', 'code', 'data', 'generic algorithms', 'help algorithms', 'machine builds', 'data predict output']

>> Named Entities are: 
 [('GPE', 'Suppose')] 

>> Stemming using Porter Stemmer: 
 [('Suppose', 'suppos'), ('complex', 'complex'), ('problem', 'problem'), (',', ','), ('need', 'need'), ('perform', 'perform'), ('predictions', 'predict'), (',', ','), ('instead', 'instead'), ('writing', 'write'), ('code', 'code'), (',', ','), ('need', 'need'), ('feed', 'feed'), ('data', 'data'), ('generic', 'gener'), ('algorithms', 'algorithm'), (',', ','), ('help', 'help'), ('algorithms', 'algorithm'), (',', ','), ('machine', 'machin'), ('builds', 'build'), ('logic', 'logic'), ('per', 'per'), ('data', 'data'), ('predict', 'predict'), ('output', 'output'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Suppose', 'suppos'), ('complex', 'complex'), ('problem', 'problem'), (',', ','), ('need', 'need'), ('perform', 'perform'), ('predictions', 'predict'), (',', ','), ('instead', 'instead'), ('writing', 'write'), ('code', 'code'), (',', ','), ('need', 'need'), ('feed', 'feed'), ('data', 'data'), ('generic', 'generic'), ('algorithms', 'algorithm'), (',', ','), ('help', 'help'), ('algorithms', 'algorithm'), (',', ','), ('machine', 'machin'), ('builds', 'build'), ('logic', 'logic'), ('per', 'per'), ('data', 'data'), ('predict', 'predict'), ('output', 'output'), ('.', '.')]

>> Lemmatization: 
 [('Suppose', 'Suppose'), ('complex', 'complex'), ('problem', 'problem'), (',', ','), ('need', 'need'), ('perform', 'perform'), ('predictions', 'prediction'), (',', ','), ('instead', 'instead'), ('writing', 'writing'), ('code', 'code'), (',', ','), ('need', 'need'), ('feed', 'feed'), ('data', 'data'), ('generic', 'generic'), ('algorithms', 'algorithm'), (',', ','), ('help', 'help'), ('algorithms', 'algorithm'), (',', ','), ('machine', 'machine'), ('builds', 'build'), ('logic', 'logic'), ('per', 'per'), ('data', 'data'), ('predict', 'predict'), ('output', 'output'), ('.', '.')]



============================ Sentence 4 =============================

Machine learning has changed our way of thinking about the problem. 


>> Tokens are: 
 ['Machine', 'learning', 'changed', 'way', 'thinking', 'problem', '.']

>> Bigrams are: 
 [('Machine', 'learning'), ('learning', 'changed'), ('changed', 'way'), ('way', 'thinking'), ('thinking', 'problem'), ('problem', '.')]

>> Trigrams are: 
 [('Machine', 'learning', 'changed'), ('learning', 'changed', 'way'), ('changed', 'way', 'thinking'), ('way', 'thinking', 'problem'), ('thinking', 'problem', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('learning', 'VBG'), ('changed', 'VBD'), ('way', 'NN'), ('thinking', 'NN'), ('problem', 'NN'), ('.', '.')]

 (S
  (NP Machine/NN)
  learning/VBG
  changed/VBD
  (NP way/NN thinking/NN problem/NN)
  ./.) 


>> Noun Phrases are: 
 ['Machine', 'way thinking problem']

>> Named Entities are: 
 [('GPE', 'Machine')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('learning', 'learn'), ('changed', 'chang'), ('way', 'way'), ('thinking', 'think'), ('problem', 'problem'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('learning', 'learn'), ('changed', 'chang'), ('way', 'way'), ('thinking', 'think'), ('problem', 'problem'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('learning', 'learning'), ('changed', 'changed'), ('way', 'way'), ('thinking', 'thinking'), ('problem', 'problem'), ('.', '.')]



============================ Sentence 5 =============================

The below block diagram explains the working of Machine Learning algorithm:  Features of Machine Learning: · Machine learning uses data to detect various patterns in a given dataset. 


>> Tokens are: 
 ['The', 'block', 'diagram', 'explains', 'working', 'Machine', 'Learning', 'algorithm', ':', 'Features', 'Machine', 'Learning', ':', '·', 'Machine', 'learning', 'uses', 'data', 'detect', 'various', 'patterns', 'given', 'dataset', '.']

>> Bigrams are: 
 [('The', 'block'), ('block', 'diagram'), ('diagram', 'explains'), ('explains', 'working'), ('working', 'Machine'), ('Machine', 'Learning'), ('Learning', 'algorithm'), ('algorithm', ':'), (':', 'Features'), ('Features', 'Machine'), ('Machine', 'Learning'), ('Learning', ':'), (':', '·'), ('·', 'Machine'), ('Machine', 'learning'), ('learning', 'uses'), ('uses', 'data'), ('data', 'detect'), ('detect', 'various'), ('various', 'patterns'), ('patterns', 'given'), ('given', 'dataset'), ('dataset', '.')]

>> Trigrams are: 
 [('The', 'block', 'diagram'), ('block', 'diagram', 'explains'), ('diagram', 'explains', 'working'), ('explains', 'working', 'Machine'), ('working', 'Machine', 'Learning'), ('Machine', 'Learning', 'algorithm'), ('Learning', 'algorithm', ':'), ('algorithm', ':', 'Features'), (':', 'Features', 'Machine'), ('Features', 'Machine', 'Learning'), ('Machine', 'Learning', ':'), ('Learning', ':', '·'), (':', '·', 'Machine'), ('·', 'Machine', 'learning'), ('Machine', 'learning', 'uses'), ('learning', 'uses', 'data'), ('uses', 'data', 'detect'), ('data', 'detect', 'various'), ('detect', 'various', 'patterns'), ('various', 'patterns', 'given'), ('patterns', 'given', 'dataset'), ('given', 'dataset', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('block', 'NN'), ('diagram', 'NN'), ('explains', 'VBZ'), ('working', 'VBG'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('algorithm', 'NN'), (':', ':'), ('Features', 'NNS'), ('Machine', 'VBP'), ('Learning', 'VBG'), (':', ':'), ('·', 'NN'), ('Machine', 'NNP'), ('learning', 'NN'), ('uses', 'VBZ'), ('data', 'NNS'), ('detect', 'VBP'), ('various', 'JJ'), ('patterns', 'NNS'), ('given', 'VBN'), ('dataset', 'NNS'), ('.', '.')]

 (S
  (NP The/DT block/NN diagram/NN)
  explains/VBZ
  working/VBG
  (NP Machine/NNP Learning/NNP algorithm/NN)
  :/:
  (NP Features/NNS)
  Machine/VBP
  Learning/VBG
  :/:
  (NP ·/NN Machine/NNP learning/NN)
  uses/VBZ
  (NP data/NNS)
  detect/VBP
  (NP various/JJ patterns/NNS)
  given/VBN
  (NP dataset/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The block diagram', 'Machine Learning algorithm', 'Features', '· Machine learning', 'data', 'various patterns', 'dataset']

>> Named Entities are: 
 [('PERSON', 'Machine Learning'), ('PERSON', 'Machine')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('block', 'block'), ('diagram', 'diagram'), ('explains', 'explain'), ('working', 'work'), ('Machine', 'machin'), ('Learning', 'learn'), ('algorithm', 'algorithm'), (':', ':'), ('Features', 'featur'), ('Machine', 'machin'), ('Learning', 'learn'), (':', ':'), ('·', '·'), ('Machine', 'machin'), ('learning', 'learn'), ('uses', 'use'), ('data', 'data'), ('detect', 'detect'), ('various', 'variou'), ('patterns', 'pattern'), ('given', 'given'), ('dataset', 'dataset'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('block', 'block'), ('diagram', 'diagram'), ('explains', 'explain'), ('working', 'work'), ('Machine', 'machin'), ('Learning', 'learn'), ('algorithm', 'algorithm'), (':', ':'), ('Features', 'featur'), ('Machine', 'machin'), ('Learning', 'learn'), (':', ':'), ('·', '·'), ('Machine', 'machin'), ('learning', 'learn'), ('uses', 'use'), ('data', 'data'), ('detect', 'detect'), ('various', 'various'), ('patterns', 'pattern'), ('given', 'given'), ('dataset', 'dataset'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('block', 'block'), ('diagram', 'diagram'), ('explains', 'explains'), ('working', 'working'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('algorithm', 'algorithm'), (':', ':'), ('Features', 'Features'), ('Machine', 'Machine'), ('Learning', 'Learning'), (':', ':'), ('·', '·'), ('Machine', 'Machine'), ('learning', 'learning'), ('uses', 'us'), ('data', 'data'), ('detect', 'detect'), ('various', 'various'), ('patterns', 'pattern'), ('given', 'given'), ('dataset', 'dataset'), ('.', '.')]



============================ Sentence 6 =============================

· It can learn from past data and improve automatically. 


>> Tokens are: 
 ['·', 'It', 'learn', 'past', 'data', 'improve', 'automatically', '.']

>> Bigrams are: 
 [('·', 'It'), ('It', 'learn'), ('learn', 'past'), ('past', 'data'), ('data', 'improve'), ('improve', 'automatically'), ('automatically', '.')]

>> Trigrams are: 
 [('·', 'It', 'learn'), ('It', 'learn', 'past'), ('learn', 'past', 'data'), ('past', 'data', 'improve'), ('data', 'improve', 'automatically'), ('improve', 'automatically', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('It', 'PRP'), ('learn', 'VBD'), ('past', 'JJ'), ('data', 'NNS'), ('improve', 'VB'), ('automatically', 'RB'), ('.', '.')]

 (S
  (NP ·/NN)
  It/PRP
  learn/VBD
  (NP past/JJ data/NNS)
  improve/VB
  automatically/RB
  ./.) 


>> Noun Phrases are: 
 ['·', 'past data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('It', 'it'), ('learn', 'learn'), ('past', 'past'), ('data', 'data'), ('improve', 'improv'), ('automatically', 'automat'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('It', 'it'), ('learn', 'learn'), ('past', 'past'), ('data', 'data'), ('improve', 'improv'), ('automatically', 'automat'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('It', 'It'), ('learn', 'learn'), ('past', 'past'), ('data', 'data'), ('improve', 'improve'), ('automatically', 'automatically'), ('.', '.')]



============================ Sentence 7 =============================

· It is a data-driven technology. 


>> Tokens are: 
 ['·', 'It', 'data-driven', 'technology', '.']

>> Bigrams are: 
 [('·', 'It'), ('It', 'data-driven'), ('data-driven', 'technology'), ('technology', '.')]

>> Trigrams are: 
 [('·', 'It', 'data-driven'), ('It', 'data-driven', 'technology'), ('data-driven', 'technology', '.')]

>> POS Tags are: 
 [('·', 'VB'), ('It', 'PRP'), ('data-driven', 'JJ'), ('technology', 'NN'), ('.', '.')]

 (S ·/VB It/PRP (NP data-driven/JJ technology/NN) ./.) 


>> Noun Phrases are: 
 ['data-driven technology']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('It', 'it'), ('data-driven', 'data-driven'), ('technology', 'technolog'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('It', 'it'), ('data-driven', 'data-driven'), ('technology', 'technolog'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('It', 'It'), ('data-driven', 'data-driven'), ('technology', 'technology'), ('.', '.')]



============================ Sentence 8 =============================

· Machine learning is much similar to data mining as it also deals with the huge amount of the data. 


>> Tokens are: 
 ['·', 'Machine', 'learning', 'much', 'similar', 'data', 'mining', 'also', 'deals', 'huge', 'amount', 'data', '.']

>> Bigrams are: 
 [('·', 'Machine'), ('Machine', 'learning'), ('learning', 'much'), ('much', 'similar'), ('similar', 'data'), ('data', 'mining'), ('mining', 'also'), ('also', 'deals'), ('deals', 'huge'), ('huge', 'amount'), ('amount', 'data'), ('data', '.')]

>> Trigrams are: 
 [('·', 'Machine', 'learning'), ('Machine', 'learning', 'much'), ('learning', 'much', 'similar'), ('much', 'similar', 'data'), ('similar', 'data', 'mining'), ('data', 'mining', 'also'), ('mining', 'also', 'deals'), ('also', 'deals', 'huge'), ('deals', 'huge', 'amount'), ('huge', 'amount', 'data'), ('amount', 'data', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('Machine', 'NNP'), ('learning', 'NN'), ('much', 'JJ'), ('similar', 'JJ'), ('data', 'NNS'), ('mining', 'NN'), ('also', 'RB'), ('deals', 'VBZ'), ('huge', 'JJ'), ('amount', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP ·/JJ Machine/NNP learning/NN)
  (NP much/JJ similar/JJ data/NNS mining/NN)
  also/RB
  deals/VBZ
  (NP huge/JJ amount/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['· Machine learning', 'much similar data mining', 'huge amount data']

>> Named Entities are: 
 [('GPE', 'Machine')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('Machine', 'machin'), ('learning', 'learn'), ('much', 'much'), ('similar', 'similar'), ('data', 'data'), ('mining', 'mine'), ('also', 'also'), ('deals', 'deal'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('Machine', 'machin'), ('learning', 'learn'), ('much', 'much'), ('similar', 'similar'), ('data', 'data'), ('mining', 'mine'), ('also', 'also'), ('deals', 'deal'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('Machine', 'Machine'), ('learning', 'learning'), ('much', 'much'), ('similar', 'similar'), ('data', 'data'), ('mining', 'mining'), ('also', 'also'), ('deals', 'deal'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('.', '.')]



============================ Sentence 9 =============================

Need for Machine Learning The need for machine learning is increasing day by day. 


>> Tokens are: 
 ['Need', 'Machine', 'Learning', 'The', 'need', 'machine', 'learning', 'increasing', 'day', 'day', '.']

>> Bigrams are: 
 [('Need', 'Machine'), ('Machine', 'Learning'), ('Learning', 'The'), ('The', 'need'), ('need', 'machine'), ('machine', 'learning'), ('learning', 'increasing'), ('increasing', 'day'), ('day', 'day'), ('day', '.')]

>> Trigrams are: 
 [('Need', 'Machine', 'Learning'), ('Machine', 'Learning', 'The'), ('Learning', 'The', 'need'), ('The', 'need', 'machine'), ('need', 'machine', 'learning'), ('machine', 'learning', 'increasing'), ('learning', 'increasing', 'day'), ('increasing', 'day', 'day'), ('day', 'day', '.')]

>> POS Tags are: 
 [('Need', 'NN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('The', 'DT'), ('need', 'NN'), ('machine', 'NN'), ('learning', 'VBG'), ('increasing', 'VBG'), ('day', 'NN'), ('day', 'NN'), ('.', '.')]

 (S
  (NP Need/NN Machine/NNP Learning/NNP)
  (NP The/DT need/NN machine/NN)
  learning/VBG
  increasing/VBG
  (NP day/NN day/NN)
  ./.) 


>> Noun Phrases are: 
 ['Need Machine Learning', 'The need machine', 'day day']

>> Named Entities are: 
 [('PERSON', 'Need'), ('PERSON', 'Machine Learning')] 

>> Stemming using Porter Stemmer: 
 [('Need', 'need'), ('Machine', 'machin'), ('Learning', 'learn'), ('The', 'the'), ('need', 'need'), ('machine', 'machin'), ('learning', 'learn'), ('increasing', 'increas'), ('day', 'day'), ('day', 'day'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Need', 'need'), ('Machine', 'machin'), ('Learning', 'learn'), ('The', 'the'), ('need', 'need'), ('machine', 'machin'), ('learning', 'learn'), ('increasing', 'increas'), ('day', 'day'), ('day', 'day'), ('.', '.')]

>> Lemmatization: 
 [('Need', 'Need'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('The', 'The'), ('need', 'need'), ('machine', 'machine'), ('learning', 'learning'), ('increasing', 'increasing'), ('day', 'day'), ('day', 'day'), ('.', '.')]



============================ Sentence 10 =============================

The reason behind the need for machine learning is that it is capable of doing tasks that are too complex for a person to implement directly. 


>> Tokens are: 
 ['The', 'reason', 'behind', 'need', 'machine', 'learning', 'capable', 'tasks', 'complex', 'person', 'implement', 'directly', '.']

>> Bigrams are: 
 [('The', 'reason'), ('reason', 'behind'), ('behind', 'need'), ('need', 'machine'), ('machine', 'learning'), ('learning', 'capable'), ('capable', 'tasks'), ('tasks', 'complex'), ('complex', 'person'), ('person', 'implement'), ('implement', 'directly'), ('directly', '.')]

>> Trigrams are: 
 [('The', 'reason', 'behind'), ('reason', 'behind', 'need'), ('behind', 'need', 'machine'), ('need', 'machine', 'learning'), ('machine', 'learning', 'capable'), ('learning', 'capable', 'tasks'), ('capable', 'tasks', 'complex'), ('tasks', 'complex', 'person'), ('complex', 'person', 'implement'), ('person', 'implement', 'directly'), ('implement', 'directly', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('reason', 'NN'), ('behind', 'IN'), ('need', 'NN'), ('machine', 'NN'), ('learning', 'VBG'), ('capable', 'JJ'), ('tasks', 'NNS'), ('complex', 'JJ'), ('person', 'NN'), ('implement', 'NN'), ('directly', 'RB'), ('.', '.')]

 (S
  (NP The/DT reason/NN)
  behind/IN
  (NP need/NN machine/NN)
  learning/VBG
  (NP capable/JJ tasks/NNS)
  (NP complex/JJ person/NN implement/NN)
  directly/RB
  ./.) 


>> Noun Phrases are: 
 ['The reason', 'need machine', 'capable tasks', 'complex person implement']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('reason', 'reason'), ('behind', 'behind'), ('need', 'need'), ('machine', 'machin'), ('learning', 'learn'), ('capable', 'capabl'), ('tasks', 'task'), ('complex', 'complex'), ('person', 'person'), ('implement', 'implement'), ('directly', 'directli'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('reason', 'reason'), ('behind', 'behind'), ('need', 'need'), ('machine', 'machin'), ('learning', 'learn'), ('capable', 'capabl'), ('tasks', 'task'), ('complex', 'complex'), ('person', 'person'), ('implement', 'implement'), ('directly', 'direct'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('reason', 'reason'), ('behind', 'behind'), ('need', 'need'), ('machine', 'machine'), ('learning', 'learning'), ('capable', 'capable'), ('tasks', 'task'), ('complex', 'complex'), ('person', 'person'), ('implement', 'implement'), ('directly', 'directly'), ('.', '.')]



============================ Sentence 11 =============================

As a human, we have some limitations as we cannot access the huge amount of data manually, so for this, we need some computer systems and here comes the machine learning to make things easy for us. 


>> Tokens are: 
 ['As', 'human', ',', 'limitations', 'access', 'huge', 'amount', 'data', 'manually', ',', ',', 'need', 'computer', 'systems', 'comes', 'machine', 'learning', 'make', 'things', 'easy', 'us', '.']

>> Bigrams are: 
 [('As', 'human'), ('human', ','), (',', 'limitations'), ('limitations', 'access'), ('access', 'huge'), ('huge', 'amount'), ('amount', 'data'), ('data', 'manually'), ('manually', ','), (',', ','), (',', 'need'), ('need', 'computer'), ('computer', 'systems'), ('systems', 'comes'), ('comes', 'machine'), ('machine', 'learning'), ('learning', 'make'), ('make', 'things'), ('things', 'easy'), ('easy', 'us'), ('us', '.')]

>> Trigrams are: 
 [('As', 'human', ','), ('human', ',', 'limitations'), (',', 'limitations', 'access'), ('limitations', 'access', 'huge'), ('access', 'huge', 'amount'), ('huge', 'amount', 'data'), ('amount', 'data', 'manually'), ('data', 'manually', ','), ('manually', ',', ','), (',', ',', 'need'), (',', 'need', 'computer'), ('need', 'computer', 'systems'), ('computer', 'systems', 'comes'), ('systems', 'comes', 'machine'), ('comes', 'machine', 'learning'), ('machine', 'learning', 'make'), ('learning', 'make', 'things'), ('make', 'things', 'easy'), ('things', 'easy', 'us'), ('easy', 'us', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('human', 'JJ'), (',', ','), ('limitations', 'NNS'), ('access', 'NN'), ('huge', 'JJ'), ('amount', 'NN'), ('data', 'NNS'), ('manually', 'RB'), (',', ','), (',', ','), ('need', 'VBP'), ('computer', 'NN'), ('systems', 'NNS'), ('comes', 'VBZ'), ('machine', 'NN'), ('learning', 'VBG'), ('make', 'VBP'), ('things', 'NNS'), ('easy', 'JJ'), ('us', 'PRP'), ('.', '.')]

 (S
  As/IN
  human/JJ
  ,/,
  (NP limitations/NNS access/NN)
  (NP huge/JJ amount/NN data/NNS)
  manually/RB
  ,/,
  ,/,
  need/VBP
  (NP computer/NN systems/NNS)
  comes/VBZ
  (NP machine/NN)
  learning/VBG
  make/VBP
  (NP things/NNS)
  easy/JJ
  us/PRP
  ./.) 


>> Noun Phrases are: 
 ['limitations access', 'huge amount data', 'computer systems', 'machine', 'things']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('human', 'human'), (',', ','), ('limitations', 'limit'), ('access', 'access'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('manually', 'manual'), (',', ','), (',', ','), ('need', 'need'), ('computer', 'comput'), ('systems', 'system'), ('comes', 'come'), ('machine', 'machin'), ('learning', 'learn'), ('make', 'make'), ('things', 'thing'), ('easy', 'easi'), ('us', 'us'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('human', 'human'), (',', ','), ('limitations', 'limit'), ('access', 'access'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('manually', 'manual'), (',', ','), (',', ','), ('need', 'need'), ('computer', 'comput'), ('systems', 'system'), ('comes', 'come'), ('machine', 'machin'), ('learning', 'learn'), ('make', 'make'), ('things', 'thing'), ('easy', 'easi'), ('us', 'us'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('human', 'human'), (',', ','), ('limitations', 'limitation'), ('access', 'access'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('manually', 'manually'), (',', ','), (',', ','), ('need', 'need'), ('computer', 'computer'), ('systems', 'system'), ('comes', 'come'), ('machine', 'machine'), ('learning', 'learning'), ('make', 'make'), ('things', 'thing'), ('easy', 'easy'), ('us', 'u'), ('.', '.')]



============================ Sentence 12 =============================

We can train machine learning algorithms by providing them the huge amount of data and let them explore the data, construct the models, and predict the required output automatically. 


>> Tokens are: 
 ['We', 'train', 'machine', 'learning', 'algorithms', 'providing', 'huge', 'amount', 'data', 'let', 'explore', 'data', ',', 'construct', 'models', ',', 'predict', 'required', 'output', 'automatically', '.']

>> Bigrams are: 
 [('We', 'train'), ('train', 'machine'), ('machine', 'learning'), ('learning', 'algorithms'), ('algorithms', 'providing'), ('providing', 'huge'), ('huge', 'amount'), ('amount', 'data'), ('data', 'let'), ('let', 'explore'), ('explore', 'data'), ('data', ','), (',', 'construct'), ('construct', 'models'), ('models', ','), (',', 'predict'), ('predict', 'required'), ('required', 'output'), ('output', 'automatically'), ('automatically', '.')]

>> Trigrams are: 
 [('We', 'train', 'machine'), ('train', 'machine', 'learning'), ('machine', 'learning', 'algorithms'), ('learning', 'algorithms', 'providing'), ('algorithms', 'providing', 'huge'), ('providing', 'huge', 'amount'), ('huge', 'amount', 'data'), ('amount', 'data', 'let'), ('data', 'let', 'explore'), ('let', 'explore', 'data'), ('explore', 'data', ','), ('data', ',', 'construct'), (',', 'construct', 'models'), ('construct', 'models', ','), ('models', ',', 'predict'), (',', 'predict', 'required'), ('predict', 'required', 'output'), ('required', 'output', 'automatically'), ('output', 'automatically', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('train', 'VBP'), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'VBZ'), ('providing', 'VBG'), ('huge', 'JJ'), ('amount', 'NN'), ('data', 'NNS'), ('let', 'NN'), ('explore', 'IN'), ('data', 'NNS'), (',', ','), ('construct', 'NN'), ('models', 'NNS'), (',', ','), ('predict', 'NN'), ('required', 'VBN'), ('output', 'NN'), ('automatically', 'RB'), ('.', '.')]

 (S
  We/PRP
  train/VBP
  (NP machine/NN learning/NN)
  algorithms/VBZ
  providing/VBG
  (NP huge/JJ amount/NN data/NNS let/NN)
  explore/IN
  (NP data/NNS)
  ,/,
  (NP construct/NN models/NNS)
  ,/,
  (NP predict/NN)
  required/VBN
  (NP output/NN)
  automatically/RB
  ./.) 


>> Noun Phrases are: 
 ['machine learning', 'huge amount data let', 'data', 'construct models', 'predict', 'output']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('train', 'train'), ('machine', 'machin'), ('learning', 'learn'), ('algorithms', 'algorithm'), ('providing', 'provid'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('let', 'let'), ('explore', 'explor'), ('data', 'data'), (',', ','), ('construct', 'construct'), ('models', 'model'), (',', ','), ('predict', 'predict'), ('required', 'requir'), ('output', 'output'), ('automatically', 'automat'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('train', 'train'), ('machine', 'machin'), ('learning', 'learn'), ('algorithms', 'algorithm'), ('providing', 'provid'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('let', 'let'), ('explore', 'explor'), ('data', 'data'), (',', ','), ('construct', 'construct'), ('models', 'model'), (',', ','), ('predict', 'predict'), ('required', 'requir'), ('output', 'output'), ('automatically', 'automat'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('train', 'train'), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('providing', 'providing'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('let', 'let'), ('explore', 'explore'), ('data', 'data'), (',', ','), ('construct', 'construct'), ('models', 'model'), (',', ','), ('predict', 'predict'), ('required', 'required'), ('output', 'output'), ('automatically', 'automatically'), ('.', '.')]



============================ Sentence 13 =============================

The performance of the machine learning algorithm depends on the amount of data, and it can be determined by the cost function. 


>> Tokens are: 
 ['The', 'performance', 'machine', 'learning', 'algorithm', 'depends', 'amount', 'data', ',', 'determined', 'cost', 'function', '.']

>> Bigrams are: 
 [('The', 'performance'), ('performance', 'machine'), ('machine', 'learning'), ('learning', 'algorithm'), ('algorithm', 'depends'), ('depends', 'amount'), ('amount', 'data'), ('data', ','), (',', 'determined'), ('determined', 'cost'), ('cost', 'function'), ('function', '.')]

>> Trigrams are: 
 [('The', 'performance', 'machine'), ('performance', 'machine', 'learning'), ('machine', 'learning', 'algorithm'), ('learning', 'algorithm', 'depends'), ('algorithm', 'depends', 'amount'), ('depends', 'amount', 'data'), ('amount', 'data', ','), ('data', ',', 'determined'), (',', 'determined', 'cost'), ('determined', 'cost', 'function'), ('cost', 'function', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('performance', 'NN'), ('machine', 'NN'), ('learning', 'VBG'), ('algorithm', 'JJ'), ('depends', 'NNS'), ('amount', 'NN'), ('data', 'NNS'), (',', ','), ('determined', 'VBD'), ('cost', 'NN'), ('function', 'NN'), ('.', '.')]

 (S
  (NP The/DT performance/NN machine/NN)
  learning/VBG
  (NP algorithm/JJ depends/NNS amount/NN data/NNS)
  ,/,
  determined/VBD
  (NP cost/NN function/NN)
  ./.) 


>> Noun Phrases are: 
 ['The performance machine', 'algorithm depends amount data', 'cost function']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('performance', 'perform'), ('machine', 'machin'), ('learning', 'learn'), ('algorithm', 'algorithm'), ('depends', 'depend'), ('amount', 'amount'), ('data', 'data'), (',', ','), ('determined', 'determin'), ('cost', 'cost'), ('function', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('performance', 'perform'), ('machine', 'machin'), ('learning', 'learn'), ('algorithm', 'algorithm'), ('depends', 'depend'), ('amount', 'amount'), ('data', 'data'), (',', ','), ('determined', 'determin'), ('cost', 'cost'), ('function', 'function'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('performance', 'performance'), ('machine', 'machine'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('depends', 'depends'), ('amount', 'amount'), ('data', 'data'), (',', ','), ('determined', 'determined'), ('cost', 'cost'), ('function', 'function'), ('.', '.')]



============================ Sentence 14 =============================

With the help of machine learning, we can save both time and money. 


>> Tokens are: 
 ['With', 'help', 'machine', 'learning', ',', 'save', 'time', 'money', '.']

>> Bigrams are: 
 [('With', 'help'), ('help', 'machine'), ('machine', 'learning'), ('learning', ','), (',', 'save'), ('save', 'time'), ('time', 'money'), ('money', '.')]

>> Trigrams are: 
 [('With', 'help', 'machine'), ('help', 'machine', 'learning'), ('machine', 'learning', ','), ('learning', ',', 'save'), (',', 'save', 'time'), ('save', 'time', 'money'), ('time', 'money', '.')]

>> POS Tags are: 
 [('With', 'IN'), ('help', 'NN'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('save', 'VB'), ('time', 'NN'), ('money', 'NN'), ('.', '.')]

 (S
  With/IN
  (NP help/NN machine/NN learning/NN)
  ,/,
  save/VB
  (NP time/NN money/NN)
  ./.) 


>> Noun Phrases are: 
 ['help machine learning', 'time money']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('With', 'with'), ('help', 'help'), ('machine', 'machin'), ('learning', 'learn'), (',', ','), ('save', 'save'), ('time', 'time'), ('money', 'money'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('With', 'with'), ('help', 'help'), ('machine', 'machin'), ('learning', 'learn'), (',', ','), ('save', 'save'), ('time', 'time'), ('money', 'money'), ('.', '.')]

>> Lemmatization: 
 [('With', 'With'), ('help', 'help'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('save', 'save'), ('time', 'time'), ('money', 'money'), ('.', '.')]



============================ Sentence 15 =============================

The importance of machine learning can be easily understood by its uses cases, Currently, machine learning is used in self-driving cars, cyber fraud detection, face recognition, and friend suggestion by Facebook, etc. 


>> Tokens are: 
 ['The', 'importance', 'machine', 'learning', 'easily', 'understood', 'uses', 'cases', ',', 'Currently', ',', 'machine', 'learning', 'used', 'self-driving', 'cars', ',', 'cyber', 'fraud', 'detection', ',', 'face', 'recognition', ',', 'friend', 'suggestion', 'Facebook', ',', 'etc', '.']

>> Bigrams are: 
 [('The', 'importance'), ('importance', 'machine'), ('machine', 'learning'), ('learning', 'easily'), ('easily', 'understood'), ('understood', 'uses'), ('uses', 'cases'), ('cases', ','), (',', 'Currently'), ('Currently', ','), (',', 'machine'), ('machine', 'learning'), ('learning', 'used'), ('used', 'self-driving'), ('self-driving', 'cars'), ('cars', ','), (',', 'cyber'), ('cyber', 'fraud'), ('fraud', 'detection'), ('detection', ','), (',', 'face'), ('face', 'recognition'), ('recognition', ','), (',', 'friend'), ('friend', 'suggestion'), ('suggestion', 'Facebook'), ('Facebook', ','), (',', 'etc'), ('etc', '.')]

>> Trigrams are: 
 [('The', 'importance', 'machine'), ('importance', 'machine', 'learning'), ('machine', 'learning', 'easily'), ('learning', 'easily', 'understood'), ('easily', 'understood', 'uses'), ('understood', 'uses', 'cases'), ('uses', 'cases', ','), ('cases', ',', 'Currently'), (',', 'Currently', ','), ('Currently', ',', 'machine'), (',', 'machine', 'learning'), ('machine', 'learning', 'used'), ('learning', 'used', 'self-driving'), ('used', 'self-driving', 'cars'), ('self-driving', 'cars', ','), ('cars', ',', 'cyber'), (',', 'cyber', 'fraud'), ('cyber', 'fraud', 'detection'), ('fraud', 'detection', ','), ('detection', ',', 'face'), (',', 'face', 'recognition'), ('face', 'recognition', ','), ('recognition', ',', 'friend'), (',', 'friend', 'suggestion'), ('friend', 'suggestion', 'Facebook'), ('suggestion', 'Facebook', ','), ('Facebook', ',', 'etc'), (',', 'etc', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('importance', 'NN'), ('machine', 'NN'), ('learning', 'VBG'), ('easily', 'RB'), ('understood', 'JJ'), ('uses', 'NNS'), ('cases', 'NNS'), (',', ','), ('Currently', 'NNP'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('used', 'VBN'), ('self-driving', 'JJ'), ('cars', 'NNS'), (',', ','), ('cyber', 'VBP'), ('fraud', 'NN'), ('detection', 'NN'), (',', ','), ('face', 'NN'), ('recognition', 'NN'), (',', ','), ('friend', 'VBP'), ('suggestion', 'NN'), ('Facebook', 'NNP'), (',', ','), ('etc', 'NN'), ('.', '.')]

 (S
  (NP The/DT importance/NN machine/NN)
  learning/VBG
  easily/RB
  (NP understood/JJ uses/NNS cases/NNS)
  ,/,
  (NP Currently/NNP)
  ,/,
  (NP machine/NN learning/NN)
  used/VBN
  (NP self-driving/JJ cars/NNS)
  ,/,
  cyber/VBP
  (NP fraud/NN detection/NN)
  ,/,
  (NP face/NN recognition/NN)
  ,/,
  friend/VBP
  (NP suggestion/NN Facebook/NNP)
  ,/,
  (NP etc/NN)
  ./.) 


>> Noun Phrases are: 
 ['The importance machine', 'understood uses cases', 'Currently', 'machine learning', 'self-driving cars', 'fraud detection', 'face recognition', 'suggestion Facebook', 'etc']

>> Named Entities are: 
 [('PERSON', 'Currently'), ('PERSON', 'Facebook')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('importance', 'import'), ('machine', 'machin'), ('learning', 'learn'), ('easily', 'easili'), ('understood', 'understood'), ('uses', 'use'), ('cases', 'case'), (',', ','), ('Currently', 'current'), (',', ','), ('machine', 'machin'), ('learning', 'learn'), ('used', 'use'), ('self-driving', 'self-driv'), ('cars', 'car'), (',', ','), ('cyber', 'cyber'), ('fraud', 'fraud'), ('detection', 'detect'), (',', ','), ('face', 'face'), ('recognition', 'recognit'), (',', ','), ('friend', 'friend'), ('suggestion', 'suggest'), ('Facebook', 'facebook'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('importance', 'import'), ('machine', 'machin'), ('learning', 'learn'), ('easily', 'easili'), ('understood', 'understood'), ('uses', 'use'), ('cases', 'case'), (',', ','), ('Currently', 'current'), (',', ','), ('machine', 'machin'), ('learning', 'learn'), ('used', 'use'), ('self-driving', 'self-driv'), ('cars', 'car'), (',', ','), ('cyber', 'cyber'), ('fraud', 'fraud'), ('detection', 'detect'), (',', ','), ('face', 'face'), ('recognition', 'recognit'), (',', ','), ('friend', 'friend'), ('suggestion', 'suggest'), ('Facebook', 'facebook'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('importance', 'importance'), ('machine', 'machine'), ('learning', 'learning'), ('easily', 'easily'), ('understood', 'understood'), ('uses', 'us'), ('cases', 'case'), (',', ','), ('Currently', 'Currently'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('used', 'used'), ('self-driving', 'self-driving'), ('cars', 'car'), (',', ','), ('cyber', 'cyber'), ('fraud', 'fraud'), ('detection', 'detection'), (',', ','), ('face', 'face'), ('recognition', 'recognition'), (',', ','), ('friend', 'friend'), ('suggestion', 'suggestion'), ('Facebook', 'Facebook'), (',', ','), ('etc', 'etc'), ('.', '.')]



============================ Sentence 16 =============================

Various top companies such as Netflix and Amazon have build machine learning models that are using a vast amount of data to analyze the user interest and recommend product accordingly. 


>> Tokens are: 
 ['Various', 'top', 'companies', 'Netflix', 'Amazon', 'build', 'machine', 'learning', 'models', 'using', 'vast', 'amount', 'data', 'analyze', 'user', 'interest', 'recommend', 'product', 'accordingly', '.']

>> Bigrams are: 
 [('Various', 'top'), ('top', 'companies'), ('companies', 'Netflix'), ('Netflix', 'Amazon'), ('Amazon', 'build'), ('build', 'machine'), ('machine', 'learning'), ('learning', 'models'), ('models', 'using'), ('using', 'vast'), ('vast', 'amount'), ('amount', 'data'), ('data', 'analyze'), ('analyze', 'user'), ('user', 'interest'), ('interest', 'recommend'), ('recommend', 'product'), ('product', 'accordingly'), ('accordingly', '.')]

>> Trigrams are: 
 [('Various', 'top', 'companies'), ('top', 'companies', 'Netflix'), ('companies', 'Netflix', 'Amazon'), ('Netflix', 'Amazon', 'build'), ('Amazon', 'build', 'machine'), ('build', 'machine', 'learning'), ('machine', 'learning', 'models'), ('learning', 'models', 'using'), ('models', 'using', 'vast'), ('using', 'vast', 'amount'), ('vast', 'amount', 'data'), ('amount', 'data', 'analyze'), ('data', 'analyze', 'user'), ('analyze', 'user', 'interest'), ('user', 'interest', 'recommend'), ('interest', 'recommend', 'product'), ('recommend', 'product', 'accordingly'), ('product', 'accordingly', '.')]

>> POS Tags are: 
 [('Various', 'JJ'), ('top', 'JJ'), ('companies', 'NNS'), ('Netflix', 'NNP'), ('Amazon', 'NNP'), ('build', 'VB'), ('machine', 'NN'), ('learning', 'VBG'), ('models', 'NNS'), ('using', 'VBG'), ('vast', 'JJ'), ('amount', 'NN'), ('data', 'NNS'), ('analyze', 'RB'), ('user', 'JJ'), ('interest', 'NN'), ('recommend', 'NN'), ('product', 'NN'), ('accordingly', 'RB'), ('.', '.')]

 (S
  (NP Various/JJ top/JJ companies/NNS Netflix/NNP Amazon/NNP)
  build/VB
  (NP machine/NN)
  learning/VBG
  (NP models/NNS)
  using/VBG
  (NP vast/JJ amount/NN data/NNS)
  analyze/RB
  (NP user/JJ interest/NN recommend/NN product/NN)
  accordingly/RB
  ./.) 


>> Noun Phrases are: 
 ['Various top companies Netflix Amazon', 'machine', 'models', 'vast amount data', 'user interest recommend product']

>> Named Entities are: 
 [('GPE', 'Various'), ('PERSON', 'Netflix Amazon')] 

>> Stemming using Porter Stemmer: 
 [('Various', 'variou'), ('top', 'top'), ('companies', 'compani'), ('Netflix', 'netflix'), ('Amazon', 'amazon'), ('build', 'build'), ('machine', 'machin'), ('learning', 'learn'), ('models', 'model'), ('using', 'use'), ('vast', 'vast'), ('amount', 'amount'), ('data', 'data'), ('analyze', 'analyz'), ('user', 'user'), ('interest', 'interest'), ('recommend', 'recommend'), ('product', 'product'), ('accordingly', 'accordingli'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Various', 'various'), ('top', 'top'), ('companies', 'compani'), ('Netflix', 'netflix'), ('Amazon', 'amazon'), ('build', 'build'), ('machine', 'machin'), ('learning', 'learn'), ('models', 'model'), ('using', 'use'), ('vast', 'vast'), ('amount', 'amount'), ('data', 'data'), ('analyze', 'analyz'), ('user', 'user'), ('interest', 'interest'), ('recommend', 'recommend'), ('product', 'product'), ('accordingly', 'accord'), ('.', '.')]

>> Lemmatization: 
 [('Various', 'Various'), ('top', 'top'), ('companies', 'company'), ('Netflix', 'Netflix'), ('Amazon', 'Amazon'), ('build', 'build'), ('machine', 'machine'), ('learning', 'learning'), ('models', 'model'), ('using', 'using'), ('vast', 'vast'), ('amount', 'amount'), ('data', 'data'), ('analyze', 'analyze'), ('user', 'user'), ('interest', 'interest'), ('recommend', 'recommend'), ('product', 'product'), ('accordingly', 'accordingly'), ('.', '.')]



============================ Sentence 17 =============================

Following are some key points which show the importance of Machine Learning: · Rapid increment in the production of data · Solving complex problems, which are difficult for a human · Decision making in various sector including finance · Finding hidden patterns and extracting useful information from data. 


>> Tokens are: 
 ['Following', 'key', 'points', 'show', 'importance', 'Machine', 'Learning', ':', '·', 'Rapid', 'increment', 'production', 'data', '·', 'Solving', 'complex', 'problems', ',', 'difficult', 'human', '·', 'Decision', 'making', 'various', 'sector', 'including', 'finance', '·', 'Finding', 'hidden', 'patterns', 'extracting', 'useful', 'information', 'data', '.']

>> Bigrams are: 
 [('Following', 'key'), ('key', 'points'), ('points', 'show'), ('show', 'importance'), ('importance', 'Machine'), ('Machine', 'Learning'), ('Learning', ':'), (':', '·'), ('·', 'Rapid'), ('Rapid', 'increment'), ('increment', 'production'), ('production', 'data'), ('data', '·'), ('·', 'Solving'), ('Solving', 'complex'), ('complex', 'problems'), ('problems', ','), (',', 'difficult'), ('difficult', 'human'), ('human', '·'), ('·', 'Decision'), ('Decision', 'making'), ('making', 'various'), ('various', 'sector'), ('sector', 'including'), ('including', 'finance'), ('finance', '·'), ('·', 'Finding'), ('Finding', 'hidden'), ('hidden', 'patterns'), ('patterns', 'extracting'), ('extracting', 'useful'), ('useful', 'information'), ('information', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Following', 'key', 'points'), ('key', 'points', 'show'), ('points', 'show', 'importance'), ('show', 'importance', 'Machine'), ('importance', 'Machine', 'Learning'), ('Machine', 'Learning', ':'), ('Learning', ':', '·'), (':', '·', 'Rapid'), ('·', 'Rapid', 'increment'), ('Rapid', 'increment', 'production'), ('increment', 'production', 'data'), ('production', 'data', '·'), ('data', '·', 'Solving'), ('·', 'Solving', 'complex'), ('Solving', 'complex', 'problems'), ('complex', 'problems', ','), ('problems', ',', 'difficult'), (',', 'difficult', 'human'), ('difficult', 'human', '·'), ('human', '·', 'Decision'), ('·', 'Decision', 'making'), ('Decision', 'making', 'various'), ('making', 'various', 'sector'), ('various', 'sector', 'including'), ('sector', 'including', 'finance'), ('including', 'finance', '·'), ('finance', '·', 'Finding'), ('·', 'Finding', 'hidden'), ('Finding', 'hidden', 'patterns'), ('hidden', 'patterns', 'extracting'), ('patterns', 'extracting', 'useful'), ('extracting', 'useful', 'information'), ('useful', 'information', 'data'), ('information', 'data', '.')]

>> POS Tags are: 
 [('Following', 'VBG'), ('key', 'JJ'), ('points', 'NNS'), ('show', 'VBP'), ('importance', 'JJ'), ('Machine', 'NNP'), ('Learning', 'NNP'), (':', ':'), ('·', 'NN'), ('Rapid', 'NNP'), ('increment', 'NN'), ('production', 'NN'), ('data', 'NNS'), ('·', 'VBP'), ('Solving', 'VBG'), ('complex', 'JJ'), ('problems', 'NNS'), (',', ','), ('difficult', 'JJ'), ('human', 'JJ'), ('·', 'JJ'), ('Decision', 'NNP'), ('making', 'VBG'), ('various', 'JJ'), ('sector', 'NN'), ('including', 'VBG'), ('finance', 'NN'), ('·', 'VBD'), ('Finding', 'NNP'), ('hidden', 'NN'), ('patterns', 'NNS'), ('extracting', 'VBG'), ('useful', 'JJ'), ('information', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  Following/VBG
  (NP key/JJ points/NNS)
  show/VBP
  (NP importance/JJ Machine/NNP Learning/NNP)
  :/:
  (NP ·/NN Rapid/NNP increment/NN production/NN data/NNS)
  ·/VBP
  Solving/VBG
  (NP complex/JJ problems/NNS)
  ,/,
  (NP difficult/JJ human/JJ ·/JJ Decision/NNP)
  making/VBG
  (NP various/JJ sector/NN)
  including/VBG
  (NP finance/NN)
  ·/VBD
  (NP Finding/NNP hidden/NN patterns/NNS)
  extracting/VBG
  (NP useful/JJ information/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['key points', 'importance Machine Learning', '· Rapid increment production data', 'complex problems', 'difficult human · Decision', 'various sector', 'finance', 'Finding hidden patterns', 'useful information data']

>> Named Entities are: 
 [('PERSON', 'Machine Learning'), ('PERSON', 'Rapid')] 

>> Stemming using Porter Stemmer: 
 [('Following', 'follow'), ('key', 'key'), ('points', 'point'), ('show', 'show'), ('importance', 'import'), ('Machine', 'machin'), ('Learning', 'learn'), (':', ':'), ('·', '·'), ('Rapid', 'rapid'), ('increment', 'increment'), ('production', 'product'), ('data', 'data'), ('·', '·'), ('Solving', 'solv'), ('complex', 'complex'), ('problems', 'problem'), (',', ','), ('difficult', 'difficult'), ('human', 'human'), ('·', '·'), ('Decision', 'decis'), ('making', 'make'), ('various', 'variou'), ('sector', 'sector'), ('including', 'includ'), ('finance', 'financ'), ('·', '·'), ('Finding', 'find'), ('hidden', 'hidden'), ('patterns', 'pattern'), ('extracting', 'extract'), ('useful', 'use'), ('information', 'inform'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Following', 'follow'), ('key', 'key'), ('points', 'point'), ('show', 'show'), ('importance', 'import'), ('Machine', 'machin'), ('Learning', 'learn'), (':', ':'), ('·', '·'), ('Rapid', 'rapid'), ('increment', 'increment'), ('production', 'product'), ('data', 'data'), ('·', '·'), ('Solving', 'solv'), ('complex', 'complex'), ('problems', 'problem'), (',', ','), ('difficult', 'difficult'), ('human', 'human'), ('·', '·'), ('Decision', 'decis'), ('making', 'make'), ('various', 'various'), ('sector', 'sector'), ('including', 'includ'), ('finance', 'financ'), ('·', '·'), ('Finding', 'find'), ('hidden', 'hidden'), ('patterns', 'pattern'), ('extracting', 'extract'), ('useful', 'use'), ('information', 'inform'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Following', 'Following'), ('key', 'key'), ('points', 'point'), ('show', 'show'), ('importance', 'importance'), ('Machine', 'Machine'), ('Learning', 'Learning'), (':', ':'), ('·', '·'), ('Rapid', 'Rapid'), ('increment', 'increment'), ('production', 'production'), ('data', 'data'), ('·', '·'), ('Solving', 'Solving'), ('complex', 'complex'), ('problems', 'problem'), (',', ','), ('difficult', 'difficult'), ('human', 'human'), ('·', '·'), ('Decision', 'Decision'), ('making', 'making'), ('various', 'various'), ('sector', 'sector'), ('including', 'including'), ('finance', 'finance'), ('·', '·'), ('Finding', 'Finding'), ('hidden', 'hidden'), ('patterns', 'pattern'), ('extracting', 'extracting'), ('useful', 'useful'), ('information', 'information'), ('data', 'data'), ('.', '.')]



============================ Sentence 18 =============================

Classification of Machine Learning At a broad level, machine learning can be classified into three types: 1. 


>> Tokens are: 
 ['Classification', 'Machine', 'Learning', 'At', 'broad', 'level', ',', 'machine', 'learning', 'classified', 'three', 'types', ':', '1', '.']

>> Bigrams are: 
 [('Classification', 'Machine'), ('Machine', 'Learning'), ('Learning', 'At'), ('At', 'broad'), ('broad', 'level'), ('level', ','), (',', 'machine'), ('machine', 'learning'), ('learning', 'classified'), ('classified', 'three'), ('three', 'types'), ('types', ':'), (':', '1'), ('1', '.')]

>> Trigrams are: 
 [('Classification', 'Machine', 'Learning'), ('Machine', 'Learning', 'At'), ('Learning', 'At', 'broad'), ('At', 'broad', 'level'), ('broad', 'level', ','), ('level', ',', 'machine'), (',', 'machine', 'learning'), ('machine', 'learning', 'classified'), ('learning', 'classified', 'three'), ('classified', 'three', 'types'), ('three', 'types', ':'), ('types', ':', '1'), (':', '1', '.')]

>> POS Tags are: 
 [('Classification', 'NN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('At', 'IN'), ('broad', 'JJ'), ('level', 'NN'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('classified', 'VBD'), ('three', 'CD'), ('types', 'NNS'), (':', ':'), ('1', 'CD'), ('.', '.')]

 (S
  (NP Classification/NN Machine/NNP Learning/NNP)
  At/IN
  (NP broad/JJ level/NN)
  ,/,
  (NP machine/NN learning/NN)
  classified/VBD
  three/CD
  (NP types/NNS)
  :/:
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['Classification Machine Learning', 'broad level', 'machine learning', 'types']

>> Named Entities are: 
 [('PERSON', 'Machine Learning')] 

>> Stemming using Porter Stemmer: 
 [('Classification', 'classif'), ('Machine', 'machin'), ('Learning', 'learn'), ('At', 'at'), ('broad', 'broad'), ('level', 'level'), (',', ','), ('machine', 'machin'), ('learning', 'learn'), ('classified', 'classifi'), ('three', 'three'), ('types', 'type'), (':', ':'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Classification', 'classif'), ('Machine', 'machin'), ('Learning', 'learn'), ('At', 'at'), ('broad', 'broad'), ('level', 'level'), (',', ','), ('machine', 'machin'), ('learning', 'learn'), ('classified', 'classifi'), ('three', 'three'), ('types', 'type'), (':', ':'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Classification', 'Classification'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('At', 'At'), ('broad', 'broad'), ('level', 'level'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('classified', 'classified'), ('three', 'three'), ('types', 'type'), (':', ':'), ('1', '1'), ('.', '.')]



============================ Sentence 19 =============================

Supervised learning 2. 


>> Tokens are: 
 ['Supervised', 'learning', '2', '.']

>> Bigrams are: 
 [('Supervised', 'learning'), ('learning', '2'), ('2', '.')]

>> Trigrams are: 
 [('Supervised', 'learning', '2'), ('learning', '2', '.')]

>> POS Tags are: 
 [('Supervised', 'VBN'), ('learning', 'VBG'), ('2', 'CD'), ('.', '.')]

 (S Supervised/VBN learning/VBG 2/CD ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Supervised', 'supervis'), ('learning', 'learn'), ('2', '2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Supervised', 'supervis'), ('learning', 'learn'), ('2', '2'), ('.', '.')]

>> Lemmatization: 
 [('Supervised', 'Supervised'), ('learning', 'learning'), ('2', '2'), ('.', '.')]



============================ Sentence 20 =============================

Unsupervised learning 3. 


>> Tokens are: 
 ['Unsupervised', 'learning', '3', '.']

>> Bigrams are: 
 [('Unsupervised', 'learning'), ('learning', '3'), ('3', '.')]

>> Trigrams are: 
 [('Unsupervised', 'learning', '3'), ('learning', '3', '.')]

>> POS Tags are: 
 [('Unsupervised', 'VBN'), ('learning', 'VBG'), ('3', 'CD'), ('.', '.')]

 (S Unsupervised/VBN learning/VBG 3/CD ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Unsupervised', 'unsupervis'), ('learning', 'learn'), ('3', '3'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unsupervised', 'unsupervis'), ('learning', 'learn'), ('3', '3'), ('.', '.')]

>> Lemmatization: 
 [('Unsupervised', 'Unsupervised'), ('learning', 'learning'), ('3', '3'), ('.', '.')]



============================ Sentence 21 =============================

Reinforcement learning  1) Supervised Learning Supervised learning is a type of machine learning method in which we provide sample labeled data to the machine learning system in order to train it, and on that basis, it predicts the output. 


>> Tokens are: 
 ['Reinforcement', 'learning', '1', ')', 'Supervised', 'Learning', 'Supervised', 'learning', 'type', 'machine', 'learning', 'method', 'provide', 'sample', 'labeled', 'data', 'machine', 'learning', 'system', 'order', 'train', ',', 'basis', ',', 'predicts', 'output', '.']

>> Bigrams are: 
 [('Reinforcement', 'learning'), ('learning', '1'), ('1', ')'), (')', 'Supervised'), ('Supervised', 'Learning'), ('Learning', 'Supervised'), ('Supervised', 'learning'), ('learning', 'type'), ('type', 'machine'), ('machine', 'learning'), ('learning', 'method'), ('method', 'provide'), ('provide', 'sample'), ('sample', 'labeled'), ('labeled', 'data'), ('data', 'machine'), ('machine', 'learning'), ('learning', 'system'), ('system', 'order'), ('order', 'train'), ('train', ','), (',', 'basis'), ('basis', ','), (',', 'predicts'), ('predicts', 'output'), ('output', '.')]

>> Trigrams are: 
 [('Reinforcement', 'learning', '1'), ('learning', '1', ')'), ('1', ')', 'Supervised'), (')', 'Supervised', 'Learning'), ('Supervised', 'Learning', 'Supervised'), ('Learning', 'Supervised', 'learning'), ('Supervised', 'learning', 'type'), ('learning', 'type', 'machine'), ('type', 'machine', 'learning'), ('machine', 'learning', 'method'), ('learning', 'method', 'provide'), ('method', 'provide', 'sample'), ('provide', 'sample', 'labeled'), ('sample', 'labeled', 'data'), ('labeled', 'data', 'machine'), ('data', 'machine', 'learning'), ('machine', 'learning', 'system'), ('learning', 'system', 'order'), ('system', 'order', 'train'), ('order', 'train', ','), ('train', ',', 'basis'), (',', 'basis', ','), ('basis', ',', 'predicts'), (',', 'predicts', 'output'), ('predicts', 'output', '.')]

>> POS Tags are: 
 [('Reinforcement', 'NNP'), ('learning', 'VBG'), ('1', 'CD'), (')', ')'), ('Supervised', 'VBD'), ('Learning', 'NNP'), ('Supervised', 'VBD'), ('learning', 'VBG'), ('type', 'NN'), ('machine', 'NN'), ('learning', 'VBG'), ('method', 'JJ'), ('provide', 'JJ'), ('sample', 'NN'), ('labeled', 'VBD'), ('data', 'NNS'), ('machine', 'NN'), ('learning', 'NN'), ('system', 'NN'), ('order', 'NN'), ('train', 'NN'), (',', ','), ('basis', 'NN'), (',', ','), ('predicts', 'VBZ'), ('output', 'NN'), ('.', '.')]

 (S
  (NP Reinforcement/NNP)
  learning/VBG
  1/CD
  )/)
  Supervised/VBD
  (NP Learning/NNP)
  Supervised/VBD
  learning/VBG
  (NP type/NN machine/NN)
  learning/VBG
  (NP method/JJ provide/JJ sample/NN)
  labeled/VBD
  (NP data/NNS machine/NN learning/NN system/NN order/NN train/NN)
  ,/,
  (NP basis/NN)
  ,/,
  predicts/VBZ
  (NP output/NN)
  ./.) 


>> Noun Phrases are: 
 ['Reinforcement', 'Learning', 'type machine', 'method provide sample', 'data machine learning system order train', 'basis', 'output']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Reinforcement', 'reinforc'), ('learning', 'learn'), ('1', '1'), (')', ')'), ('Supervised', 'supervis'), ('Learning', 'learn'), ('Supervised', 'supervis'), ('learning', 'learn'), ('type', 'type'), ('machine', 'machin'), ('learning', 'learn'), ('method', 'method'), ('provide', 'provid'), ('sample', 'sampl'), ('labeled', 'label'), ('data', 'data'), ('machine', 'machin'), ('learning', 'learn'), ('system', 'system'), ('order', 'order'), ('train', 'train'), (',', ','), ('basis', 'basi'), (',', ','), ('predicts', 'predict'), ('output', 'output'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Reinforcement', 'reinforc'), ('learning', 'learn'), ('1', '1'), (')', ')'), ('Supervised', 'supervis'), ('Learning', 'learn'), ('Supervised', 'supervis'), ('learning', 'learn'), ('type', 'type'), ('machine', 'machin'), ('learning', 'learn'), ('method', 'method'), ('provide', 'provid'), ('sample', 'sampl'), ('labeled', 'label'), ('data', 'data'), ('machine', 'machin'), ('learning', 'learn'), ('system', 'system'), ('order', 'order'), ('train', 'train'), (',', ','), ('basis', 'basi'), (',', ','), ('predicts', 'predict'), ('output', 'output'), ('.', '.')]

>> Lemmatization: 
 [('Reinforcement', 'Reinforcement'), ('learning', 'learning'), ('1', '1'), (')', ')'), ('Supervised', 'Supervised'), ('Learning', 'Learning'), ('Supervised', 'Supervised'), ('learning', 'learning'), ('type', 'type'), ('machine', 'machine'), ('learning', 'learning'), ('method', 'method'), ('provide', 'provide'), ('sample', 'sample'), ('labeled', 'labeled'), ('data', 'data'), ('machine', 'machine'), ('learning', 'learning'), ('system', 'system'), ('order', 'order'), ('train', 'train'), (',', ','), ('basis', 'basis'), (',', ','), ('predicts', 'predicts'), ('output', 'output'), ('.', '.')]



============================ Sentence 22 =============================

The system creates a model using labeled data to understand the datasets and learn about each data, once the training and processing are done then we test the model by providing a sample data to check whether it is predicting the exact output or not. 


>> Tokens are: 
 ['The', 'system', 'creates', 'model', 'using', 'labeled', 'data', 'understand', 'datasets', 'learn', 'data', ',', 'training', 'processing', 'done', 'test', 'model', 'providing', 'sample', 'data', 'check', 'whether', 'predicting', 'exact', 'output', '.']

>> Bigrams are: 
 [('The', 'system'), ('system', 'creates'), ('creates', 'model'), ('model', 'using'), ('using', 'labeled'), ('labeled', 'data'), ('data', 'understand'), ('understand', 'datasets'), ('datasets', 'learn'), ('learn', 'data'), ('data', ','), (',', 'training'), ('training', 'processing'), ('processing', 'done'), ('done', 'test'), ('test', 'model'), ('model', 'providing'), ('providing', 'sample'), ('sample', 'data'), ('data', 'check'), ('check', 'whether'), ('whether', 'predicting'), ('predicting', 'exact'), ('exact', 'output'), ('output', '.')]

>> Trigrams are: 
 [('The', 'system', 'creates'), ('system', 'creates', 'model'), ('creates', 'model', 'using'), ('model', 'using', 'labeled'), ('using', 'labeled', 'data'), ('labeled', 'data', 'understand'), ('data', 'understand', 'datasets'), ('understand', 'datasets', 'learn'), ('datasets', 'learn', 'data'), ('learn', 'data', ','), ('data', ',', 'training'), (',', 'training', 'processing'), ('training', 'processing', 'done'), ('processing', 'done', 'test'), ('done', 'test', 'model'), ('test', 'model', 'providing'), ('model', 'providing', 'sample'), ('providing', 'sample', 'data'), ('sample', 'data', 'check'), ('data', 'check', 'whether'), ('check', 'whether', 'predicting'), ('whether', 'predicting', 'exact'), ('predicting', 'exact', 'output'), ('exact', 'output', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('system', 'NN'), ('creates', 'VBZ'), ('model', 'RBS'), ('using', 'VBG'), ('labeled', 'VBN'), ('data', 'NNS'), ('understand', 'NN'), ('datasets', 'NNS'), ('learn', 'VBP'), ('data', 'NNS'), (',', ','), ('training', 'VBG'), ('processing', 'VBG'), ('done', 'VBN'), ('test', 'NN'), ('model', 'NN'), ('providing', 'VBG'), ('sample', 'JJ'), ('data', 'NNS'), ('check', 'NN'), ('whether', 'IN'), ('predicting', 'VBG'), ('exact', 'JJ'), ('output', 'NN'), ('.', '.')]

 (S
  (NP The/DT system/NN)
  creates/VBZ
  model/RBS
  using/VBG
  labeled/VBN
  (NP data/NNS understand/NN datasets/NNS)
  learn/VBP
  (NP data/NNS)
  ,/,
  training/VBG
  processing/VBG
  done/VBN
  (NP test/NN model/NN)
  providing/VBG
  (NP sample/JJ data/NNS check/NN)
  whether/IN
  predicting/VBG
  (NP exact/JJ output/NN)
  ./.) 


>> Noun Phrases are: 
 ['The system', 'data understand datasets', 'data', 'test model', 'sample data check', 'exact output']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('system', 'system'), ('creates', 'creat'), ('model', 'model'), ('using', 'use'), ('labeled', 'label'), ('data', 'data'), ('understand', 'understand'), ('datasets', 'dataset'), ('learn', 'learn'), ('data', 'data'), (',', ','), ('training', 'train'), ('processing', 'process'), ('done', 'done'), ('test', 'test'), ('model', 'model'), ('providing', 'provid'), ('sample', 'sampl'), ('data', 'data'), ('check', 'check'), ('whether', 'whether'), ('predicting', 'predict'), ('exact', 'exact'), ('output', 'output'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('system', 'system'), ('creates', 'creat'), ('model', 'model'), ('using', 'use'), ('labeled', 'label'), ('data', 'data'), ('understand', 'understand'), ('datasets', 'dataset'), ('learn', 'learn'), ('data', 'data'), (',', ','), ('training', 'train'), ('processing', 'process'), ('done', 'done'), ('test', 'test'), ('model', 'model'), ('providing', 'provid'), ('sample', 'sampl'), ('data', 'data'), ('check', 'check'), ('whether', 'whether'), ('predicting', 'predict'), ('exact', 'exact'), ('output', 'output'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('system', 'system'), ('creates', 'creates'), ('model', 'model'), ('using', 'using'), ('labeled', 'labeled'), ('data', 'data'), ('understand', 'understand'), ('datasets', 'datasets'), ('learn', 'learn'), ('data', 'data'), (',', ','), ('training', 'training'), ('processing', 'processing'), ('done', 'done'), ('test', 'test'), ('model', 'model'), ('providing', 'providing'), ('sample', 'sample'), ('data', 'data'), ('check', 'check'), ('whether', 'whether'), ('predicting', 'predicting'), ('exact', 'exact'), ('output', 'output'), ('.', '.')]



============================ Sentence 23 =============================

The goal of supervised learning is to map input data with the output data. 


>> Tokens are: 
 ['The', 'goal', 'supervised', 'learning', 'map', 'input', 'data', 'output', 'data', '.']

>> Bigrams are: 
 [('The', 'goal'), ('goal', 'supervised'), ('supervised', 'learning'), ('learning', 'map'), ('map', 'input'), ('input', 'data'), ('data', 'output'), ('output', 'data'), ('data', '.')]

>> Trigrams are: 
 [('The', 'goal', 'supervised'), ('goal', 'supervised', 'learning'), ('supervised', 'learning', 'map'), ('learning', 'map', 'input'), ('map', 'input', 'data'), ('input', 'data', 'output'), ('data', 'output', 'data'), ('output', 'data', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('goal', 'NN'), ('supervised', 'VBD'), ('learning', 'VBG'), ('map', 'NN'), ('input', 'NN'), ('data', 'NNS'), ('output', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP The/DT goal/NN)
  supervised/VBD
  learning/VBG
  (NP map/NN input/NN data/NNS output/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The goal', 'map input data output data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('goal', 'goal'), ('supervised', 'supervis'), ('learning', 'learn'), ('map', 'map'), ('input', 'input'), ('data', 'data'), ('output', 'output'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('goal', 'goal'), ('supervised', 'supervis'), ('learning', 'learn'), ('map', 'map'), ('input', 'input'), ('data', 'data'), ('output', 'output'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('goal', 'goal'), ('supervised', 'supervised'), ('learning', 'learning'), ('map', 'map'), ('input', 'input'), ('data', 'data'), ('output', 'output'), ('data', 'data'), ('.', '.')]



============================ Sentence 24 =============================

The supervised learning is based on supervision, and it is the same as when a student learns things in the supervision of the teacher. 


>> Tokens are: 
 ['The', 'supervised', 'learning', 'based', 'supervision', ',', 'student', 'learns', 'things', 'supervision', 'teacher', '.']

>> Bigrams are: 
 [('The', 'supervised'), ('supervised', 'learning'), ('learning', 'based'), ('based', 'supervision'), ('supervision', ','), (',', 'student'), ('student', 'learns'), ('learns', 'things'), ('things', 'supervision'), ('supervision', 'teacher'), ('teacher', '.')]

>> Trigrams are: 
 [('The', 'supervised', 'learning'), ('supervised', 'learning', 'based'), ('learning', 'based', 'supervision'), ('based', 'supervision', ','), ('supervision', ',', 'student'), (',', 'student', 'learns'), ('student', 'learns', 'things'), ('learns', 'things', 'supervision'), ('things', 'supervision', 'teacher'), ('supervision', 'teacher', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('supervised', 'VBN'), ('learning', 'NN'), ('based', 'VBN'), ('supervision', 'NN'), (',', ','), ('student', 'NN'), ('learns', 'NNS'), ('things', 'NNS'), ('supervision', 'NN'), ('teacher', 'RB'), ('.', '.')]

 (S
  The/DT
  supervised/VBN
  (NP learning/NN)
  based/VBN
  (NP supervision/NN)
  ,/,
  (NP student/NN learns/NNS things/NNS supervision/NN)
  teacher/RB
  ./.) 


>> Noun Phrases are: 
 ['learning', 'supervision', 'student learns things supervision']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('supervised', 'supervis'), ('learning', 'learn'), ('based', 'base'), ('supervision', 'supervis'), (',', ','), ('student', 'student'), ('learns', 'learn'), ('things', 'thing'), ('supervision', 'supervis'), ('teacher', 'teacher'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('supervised', 'supervis'), ('learning', 'learn'), ('based', 'base'), ('supervision', 'supervis'), (',', ','), ('student', 'student'), ('learns', 'learn'), ('things', 'thing'), ('supervision', 'supervis'), ('teacher', 'teacher'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('supervised', 'supervised'), ('learning', 'learning'), ('based', 'based'), ('supervision', 'supervision'), (',', ','), ('student', 'student'), ('learns', 'learns'), ('things', 'thing'), ('supervision', 'supervision'), ('teacher', 'teacher'), ('.', '.')]



============================ Sentence 25 =============================

The example of supervised learning is spam filtering. 


>> Tokens are: 
 ['The', 'example', 'supervised', 'learning', 'spam', 'filtering', '.']

>> Bigrams are: 
 [('The', 'example'), ('example', 'supervised'), ('supervised', 'learning'), ('learning', 'spam'), ('spam', 'filtering'), ('filtering', '.')]

>> Trigrams are: 
 [('The', 'example', 'supervised'), ('example', 'supervised', 'learning'), ('supervised', 'learning', 'spam'), ('learning', 'spam', 'filtering'), ('spam', 'filtering', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('example', 'NN'), ('supervised', 'VBD'), ('learning', 'VBG'), ('spam', 'NN'), ('filtering', 'NN'), ('.', '.')]

 (S
  (NP The/DT example/NN)
  supervised/VBD
  learning/VBG
  (NP spam/NN filtering/NN)
  ./.) 


>> Noun Phrases are: 
 ['The example', 'spam filtering']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('example', 'exampl'), ('supervised', 'supervis'), ('learning', 'learn'), ('spam', 'spam'), ('filtering', 'filter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('example', 'exampl'), ('supervised', 'supervis'), ('learning', 'learn'), ('spam', 'spam'), ('filtering', 'filter'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('example', 'example'), ('supervised', 'supervised'), ('learning', 'learning'), ('spam', 'spam'), ('filtering', 'filtering'), ('.', '.')]



============================ Sentence 26 =============================

Supervised learning can be grouped further in two categories of algorithms: · Classification · Regression 2) Unsupervised Learning Unsupervised learning is a learning method in which a machine learns without any supervision. 


>> Tokens are: 
 ['Supervised', 'learning', 'grouped', 'two', 'categories', 'algorithms', ':', '·', 'Classification', '·', 'Regression', '2', ')', 'Unsupervised', 'Learning', 'Unsupervised', 'learning', 'learning', 'method', 'machine', 'learns', 'without', 'supervision', '.']

>> Bigrams are: 
 [('Supervised', 'learning'), ('learning', 'grouped'), ('grouped', 'two'), ('two', 'categories'), ('categories', 'algorithms'), ('algorithms', ':'), (':', '·'), ('·', 'Classification'), ('Classification', '·'), ('·', 'Regression'), ('Regression', '2'), ('2', ')'), (')', 'Unsupervised'), ('Unsupervised', 'Learning'), ('Learning', 'Unsupervised'), ('Unsupervised', 'learning'), ('learning', 'learning'), ('learning', 'method'), ('method', 'machine'), ('machine', 'learns'), ('learns', 'without'), ('without', 'supervision'), ('supervision', '.')]

>> Trigrams are: 
 [('Supervised', 'learning', 'grouped'), ('learning', 'grouped', 'two'), ('grouped', 'two', 'categories'), ('two', 'categories', 'algorithms'), ('categories', 'algorithms', ':'), ('algorithms', ':', '·'), (':', '·', 'Classification'), ('·', 'Classification', '·'), ('Classification', '·', 'Regression'), ('·', 'Regression', '2'), ('Regression', '2', ')'), ('2', ')', 'Unsupervised'), (')', 'Unsupervised', 'Learning'), ('Unsupervised', 'Learning', 'Unsupervised'), ('Learning', 'Unsupervised', 'learning'), ('Unsupervised', 'learning', 'learning'), ('learning', 'learning', 'method'), ('learning', 'method', 'machine'), ('method', 'machine', 'learns'), ('machine', 'learns', 'without'), ('learns', 'without', 'supervision'), ('without', 'supervision', '.')]

>> POS Tags are: 
 [('Supervised', 'VBN'), ('learning', 'VBG'), ('grouped', 'VBD'), ('two', 'CD'), ('categories', 'NNS'), ('algorithms', 'VBP'), (':', ':'), ('·', 'JJ'), ('Classification', 'NNP'), ('·', 'NNP'), ('Regression', 'NNP'), ('2', 'CD'), (')', ')'), ('Unsupervised', 'VBD'), ('Learning', 'NNP'), ('Unsupervised', 'VBD'), ('learning', 'VBG'), ('learning', 'VBG'), ('method', 'JJ'), ('machine', 'NN'), ('learns', 'NNS'), ('without', 'IN'), ('supervision', 'NN'), ('.', '.')]

 (S
  Supervised/VBN
  learning/VBG
  grouped/VBD
  two/CD
  (NP categories/NNS)
  algorithms/VBP
  :/:
  (NP ·/JJ Classification/NNP ·/NNP Regression/NNP)
  2/CD
  )/)
  Unsupervised/VBD
  (NP Learning/NNP)
  Unsupervised/VBD
  learning/VBG
  learning/VBG
  (NP method/JJ machine/NN learns/NNS)
  without/IN
  (NP supervision/NN)
  ./.) 


>> Noun Phrases are: 
 ['categories', '· Classification · Regression', 'Learning', 'method machine learns', 'supervision']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Supervised', 'supervis'), ('learning', 'learn'), ('grouped', 'group'), ('two', 'two'), ('categories', 'categori'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Classification', 'classif'), ('·', '·'), ('Regression', 'regress'), ('2', '2'), (')', ')'), ('Unsupervised', 'unsupervis'), ('Learning', 'learn'), ('Unsupervised', 'unsupervis'), ('learning', 'learn'), ('learning', 'learn'), ('method', 'method'), ('machine', 'machin'), ('learns', 'learn'), ('without', 'without'), ('supervision', 'supervis'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Supervised', 'supervis'), ('learning', 'learn'), ('grouped', 'group'), ('two', 'two'), ('categories', 'categori'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Classification', 'classif'), ('·', '·'), ('Regression', 'regress'), ('2', '2'), (')', ')'), ('Unsupervised', 'unsupervis'), ('Learning', 'learn'), ('Unsupervised', 'unsupervis'), ('learning', 'learn'), ('learning', 'learn'), ('method', 'method'), ('machine', 'machin'), ('learns', 'learn'), ('without', 'without'), ('supervision', 'supervis'), ('.', '.')]

>> Lemmatization: 
 [('Supervised', 'Supervised'), ('learning', 'learning'), ('grouped', 'grouped'), ('two', 'two'), ('categories', 'category'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Classification', 'Classification'), ('·', '·'), ('Regression', 'Regression'), ('2', '2'), (')', ')'), ('Unsupervised', 'Unsupervised'), ('Learning', 'Learning'), ('Unsupervised', 'Unsupervised'), ('learning', 'learning'), ('learning', 'learning'), ('method', 'method'), ('machine', 'machine'), ('learns', 'learns'), ('without', 'without'), ('supervision', 'supervision'), ('.', '.')]



============================ Sentence 27 =============================

The training is provided to the machine with the set of data that has not been labeled, classified, or categorized, and the algorithm needs to act on that data without any supervision. 


>> Tokens are: 
 ['The', 'training', 'provided', 'machine', 'set', 'data', 'labeled', ',', 'classified', ',', 'categorized', ',', 'algorithm', 'needs', 'act', 'data', 'without', 'supervision', '.']

>> Bigrams are: 
 [('The', 'training'), ('training', 'provided'), ('provided', 'machine'), ('machine', 'set'), ('set', 'data'), ('data', 'labeled'), ('labeled', ','), (',', 'classified'), ('classified', ','), (',', 'categorized'), ('categorized', ','), (',', 'algorithm'), ('algorithm', 'needs'), ('needs', 'act'), ('act', 'data'), ('data', 'without'), ('without', 'supervision'), ('supervision', '.')]

>> Trigrams are: 
 [('The', 'training', 'provided'), ('training', 'provided', 'machine'), ('provided', 'machine', 'set'), ('machine', 'set', 'data'), ('set', 'data', 'labeled'), ('data', 'labeled', ','), ('labeled', ',', 'classified'), (',', 'classified', ','), ('classified', ',', 'categorized'), (',', 'categorized', ','), ('categorized', ',', 'algorithm'), (',', 'algorithm', 'needs'), ('algorithm', 'needs', 'act'), ('needs', 'act', 'data'), ('act', 'data', 'without'), ('data', 'without', 'supervision'), ('without', 'supervision', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('training', 'NN'), ('provided', 'VBD'), ('machine', 'NN'), ('set', 'VBN'), ('data', 'NNS'), ('labeled', 'VBD'), (',', ','), ('classified', 'VBD'), (',', ','), ('categorized', 'VBN'), (',', ','), ('algorithm', 'JJ'), ('needs', 'NNS'), ('act', 'NN'), ('data', 'NNS'), ('without', 'IN'), ('supervision', 'NN'), ('.', '.')]

 (S
  (NP The/DT training/NN)
  provided/VBD
  (NP machine/NN)
  set/VBN
  (NP data/NNS)
  labeled/VBD
  ,/,
  classified/VBD
  ,/,
  categorized/VBN
  ,/,
  (NP algorithm/JJ needs/NNS act/NN data/NNS)
  without/IN
  (NP supervision/NN)
  ./.) 


>> Noun Phrases are: 
 ['The training', 'machine', 'data', 'algorithm needs act data', 'supervision']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('training', 'train'), ('provided', 'provid'), ('machine', 'machin'), ('set', 'set'), ('data', 'data'), ('labeled', 'label'), (',', ','), ('classified', 'classifi'), (',', ','), ('categorized', 'categor'), (',', ','), ('algorithm', 'algorithm'), ('needs', 'need'), ('act', 'act'), ('data', 'data'), ('without', 'without'), ('supervision', 'supervis'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('training', 'train'), ('provided', 'provid'), ('machine', 'machin'), ('set', 'set'), ('data', 'data'), ('labeled', 'label'), (',', ','), ('classified', 'classifi'), (',', ','), ('categorized', 'categor'), (',', ','), ('algorithm', 'algorithm'), ('needs', 'need'), ('act', 'act'), ('data', 'data'), ('without', 'without'), ('supervision', 'supervis'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('training', 'training'), ('provided', 'provided'), ('machine', 'machine'), ('set', 'set'), ('data', 'data'), ('labeled', 'labeled'), (',', ','), ('classified', 'classified'), (',', ','), ('categorized', 'categorized'), (',', ','), ('algorithm', 'algorithm'), ('needs', 'need'), ('act', 'act'), ('data', 'data'), ('without', 'without'), ('supervision', 'supervision'), ('.', '.')]



============================ Sentence 28 =============================

The goal of unsupervised learning is to restructure the input data into new features or a group of objects with similar patterns. 


>> Tokens are: 
 ['The', 'goal', 'unsupervised', 'learning', 'restructure', 'input', 'data', 'new', 'features', 'group', 'objects', 'similar', 'patterns', '.']

>> Bigrams are: 
 [('The', 'goal'), ('goal', 'unsupervised'), ('unsupervised', 'learning'), ('learning', 'restructure'), ('restructure', 'input'), ('input', 'data'), ('data', 'new'), ('new', 'features'), ('features', 'group'), ('group', 'objects'), ('objects', 'similar'), ('similar', 'patterns'), ('patterns', '.')]

>> Trigrams are: 
 [('The', 'goal', 'unsupervised'), ('goal', 'unsupervised', 'learning'), ('unsupervised', 'learning', 'restructure'), ('learning', 'restructure', 'input'), ('restructure', 'input', 'data'), ('input', 'data', 'new'), ('data', 'new', 'features'), ('new', 'features', 'group'), ('features', 'group', 'objects'), ('group', 'objects', 'similar'), ('objects', 'similar', 'patterns'), ('similar', 'patterns', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('goal', 'NN'), ('unsupervised', 'VBD'), ('learning', 'JJ'), ('restructure', 'NN'), ('input', 'NN'), ('data', 'NNS'), ('new', 'JJ'), ('features', 'NNS'), ('group', 'NN'), ('objects', 'VBZ'), ('similar', 'JJ'), ('patterns', 'NNS'), ('.', '.')]

 (S
  (NP The/DT goal/NN)
  unsupervised/VBD
  (NP learning/JJ restructure/NN input/NN data/NNS)
  (NP new/JJ features/NNS group/NN)
  objects/VBZ
  (NP similar/JJ patterns/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The goal', 'learning restructure input data', 'new features group', 'similar patterns']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('goal', 'goal'), ('unsupervised', 'unsupervis'), ('learning', 'learn'), ('restructure', 'restructur'), ('input', 'input'), ('data', 'data'), ('new', 'new'), ('features', 'featur'), ('group', 'group'), ('objects', 'object'), ('similar', 'similar'), ('patterns', 'pattern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('goal', 'goal'), ('unsupervised', 'unsupervis'), ('learning', 'learn'), ('restructure', 'restructur'), ('input', 'input'), ('data', 'data'), ('new', 'new'), ('features', 'featur'), ('group', 'group'), ('objects', 'object'), ('similar', 'similar'), ('patterns', 'pattern'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('goal', 'goal'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('restructure', 'restructure'), ('input', 'input'), ('data', 'data'), ('new', 'new'), ('features', 'feature'), ('group', 'group'), ('objects', 'object'), ('similar', 'similar'), ('patterns', 'pattern'), ('.', '.')]



============================ Sentence 29 =============================

In unsupervised learning, we don't have a predetermined result. 


>> Tokens are: 
 ['In', 'unsupervised', 'learning', ',', "n't", 'predetermined', 'result', '.']

>> Bigrams are: 
 [('In', 'unsupervised'), ('unsupervised', 'learning'), ('learning', ','), (',', "n't"), ("n't", 'predetermined'), ('predetermined', 'result'), ('result', '.')]

>> Trigrams are: 
 [('In', 'unsupervised', 'learning'), ('unsupervised', 'learning', ','), ('learning', ',', "n't"), (',', "n't", 'predetermined'), ("n't", 'predetermined', 'result'), ('predetermined', 'result', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('unsupervised', 'JJ'), ('learning', 'NN'), (',', ','), ("n't", 'RB'), ('predetermined', 'VBD'), ('result', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP unsupervised/JJ learning/NN)
  ,/,
  n't/RB
  predetermined/VBD
  (NP result/NN)
  ./.) 


>> Noun Phrases are: 
 ['unsupervised learning', 'result']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('unsupervised', 'unsupervis'), ('learning', 'learn'), (',', ','), ("n't", "n't"), ('predetermined', 'predetermin'), ('result', 'result'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('unsupervised', 'unsupervis'), ('learning', 'learn'), (',', ','), ("n't", "n't"), ('predetermined', 'predetermin'), ('result', 'result'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), (',', ','), ("n't", "n't"), ('predetermined', 'predetermined'), ('result', 'result'), ('.', '.')]



============================ Sentence 30 =============================

The machine tries to find useful insights from the huge amount of data. 


>> Tokens are: 
 ['The', 'machine', 'tries', 'find', 'useful', 'insights', 'huge', 'amount', 'data', '.']

>> Bigrams are: 
 [('The', 'machine'), ('machine', 'tries'), ('tries', 'find'), ('find', 'useful'), ('useful', 'insights'), ('insights', 'huge'), ('huge', 'amount'), ('amount', 'data'), ('data', '.')]

>> Trigrams are: 
 [('The', 'machine', 'tries'), ('machine', 'tries', 'find'), ('tries', 'find', 'useful'), ('find', 'useful', 'insights'), ('useful', 'insights', 'huge'), ('insights', 'huge', 'amount'), ('huge', 'amount', 'data'), ('amount', 'data', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('machine', 'NN'), ('tries', 'VBZ'), ('find', 'VBP'), ('useful', 'JJ'), ('insights', 'NNS'), ('huge', 'JJ'), ('amount', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP The/DT machine/NN)
  tries/VBZ
  find/VBP
  (NP useful/JJ insights/NNS)
  (NP huge/JJ amount/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The machine', 'useful insights', 'huge amount data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('machine', 'machin'), ('tries', 'tri'), ('find', 'find'), ('useful', 'use'), ('insights', 'insight'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('machine', 'machin'), ('tries', 'tri'), ('find', 'find'), ('useful', 'use'), ('insights', 'insight'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('machine', 'machine'), ('tries', 'try'), ('find', 'find'), ('useful', 'useful'), ('insights', 'insight'), ('huge', 'huge'), ('amount', 'amount'), ('data', 'data'), ('.', '.')]



============================ Sentence 31 =============================

It can be further classifieds into two categories of algorithms: · Clustering · Association 3) Reinforcement Learning Reinforcement learning is a feedback-based learning method, in which a learning agent gets a reward for each right action and gets a penalty for each wrong action. 


>> Tokens are: 
 ['It', 'classifieds', 'two', 'categories', 'algorithms', ':', '·', 'Clustering', '·', 'Association', '3', ')', 'Reinforcement', 'Learning', 'Reinforcement', 'learning', 'feedback-based', 'learning', 'method', ',', 'learning', 'agent', 'gets', 'reward', 'right', 'action', 'gets', 'penalty', 'wrong', 'action', '.']

>> Bigrams are: 
 [('It', 'classifieds'), ('classifieds', 'two'), ('two', 'categories'), ('categories', 'algorithms'), ('algorithms', ':'), (':', '·'), ('·', 'Clustering'), ('Clustering', '·'), ('·', 'Association'), ('Association', '3'), ('3', ')'), (')', 'Reinforcement'), ('Reinforcement', 'Learning'), ('Learning', 'Reinforcement'), ('Reinforcement', 'learning'), ('learning', 'feedback-based'), ('feedback-based', 'learning'), ('learning', 'method'), ('method', ','), (',', 'learning'), ('learning', 'agent'), ('agent', 'gets'), ('gets', 'reward'), ('reward', 'right'), ('right', 'action'), ('action', 'gets'), ('gets', 'penalty'), ('penalty', 'wrong'), ('wrong', 'action'), ('action', '.')]

>> Trigrams are: 
 [('It', 'classifieds', 'two'), ('classifieds', 'two', 'categories'), ('two', 'categories', 'algorithms'), ('categories', 'algorithms', ':'), ('algorithms', ':', '·'), (':', '·', 'Clustering'), ('·', 'Clustering', '·'), ('Clustering', '·', 'Association'), ('·', 'Association', '3'), ('Association', '3', ')'), ('3', ')', 'Reinforcement'), (')', 'Reinforcement', 'Learning'), ('Reinforcement', 'Learning', 'Reinforcement'), ('Learning', 'Reinforcement', 'learning'), ('Reinforcement', 'learning', 'feedback-based'), ('learning', 'feedback-based', 'learning'), ('feedback-based', 'learning', 'method'), ('learning', 'method', ','), ('method', ',', 'learning'), (',', 'learning', 'agent'), ('learning', 'agent', 'gets'), ('agent', 'gets', 'reward'), ('gets', 'reward', 'right'), ('reward', 'right', 'action'), ('right', 'action', 'gets'), ('action', 'gets', 'penalty'), ('gets', 'penalty', 'wrong'), ('penalty', 'wrong', 'action'), ('wrong', 'action', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('classifieds', 'VBZ'), ('two', 'CD'), ('categories', 'NNS'), ('algorithms', 'VBP'), (':', ':'), ('·', 'NN'), ('Clustering', 'NNP'), ('·', 'NNP'), ('Association', 'NNP'), ('3', 'CD'), (')', ')'), ('Reinforcement', 'NN'), ('Learning', 'VBG'), ('Reinforcement', 'NNP'), ('learning', 'VBG'), ('feedback-based', 'JJ'), ('learning', 'NN'), ('method', 'NN'), (',', ','), ('learning', 'VBG'), ('agent', 'JJ'), ('gets', 'VBZ'), ('reward', 'RB'), ('right', 'JJ'), ('action', 'NN'), ('gets', 'VBZ'), ('penalty', 'NN'), ('wrong', 'JJ'), ('action', 'NN'), ('.', '.')]

 (S
  It/PRP
  classifieds/VBZ
  two/CD
  (NP categories/NNS)
  algorithms/VBP
  :/:
  (NP ·/NN Clustering/NNP ·/NNP Association/NNP)
  3/CD
  )/)
  (NP Reinforcement/NN)
  Learning/VBG
  (NP Reinforcement/NNP)
  learning/VBG
  (NP feedback-based/JJ learning/NN method/NN)
  ,/,
  learning/VBG
  agent/JJ
  gets/VBZ
  reward/RB
  (NP right/JJ action/NN)
  gets/VBZ
  (NP penalty/NN)
  (NP wrong/JJ action/NN)
  ./.) 


>> Noun Phrases are: 
 ['categories', '· Clustering · Association', 'Reinforcement', 'Reinforcement', 'feedback-based learning method', 'right action', 'penalty', 'wrong action']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('classifieds', 'classifi'), ('two', 'two'), ('categories', 'categori'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Clustering', 'cluster'), ('·', '·'), ('Association', 'associ'), ('3', '3'), (')', ')'), ('Reinforcement', 'reinforc'), ('Learning', 'learn'), ('Reinforcement', 'reinforc'), ('learning', 'learn'), ('feedback-based', 'feedback-bas'), ('learning', 'learn'), ('method', 'method'), (',', ','), ('learning', 'learn'), ('agent', 'agent'), ('gets', 'get'), ('reward', 'reward'), ('right', 'right'), ('action', 'action'), ('gets', 'get'), ('penalty', 'penalti'), ('wrong', 'wrong'), ('action', 'action'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('classifieds', 'classifi'), ('two', 'two'), ('categories', 'categori'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Clustering', 'cluster'), ('·', '·'), ('Association', 'associ'), ('3', '3'), (')', ')'), ('Reinforcement', 'reinforc'), ('Learning', 'learn'), ('Reinforcement', 'reinforc'), ('learning', 'learn'), ('feedback-based', 'feedback-bas'), ('learning', 'learn'), ('method', 'method'), (',', ','), ('learning', 'learn'), ('agent', 'agent'), ('gets', 'get'), ('reward', 'reward'), ('right', 'right'), ('action', 'action'), ('gets', 'get'), ('penalty', 'penalti'), ('wrong', 'wrong'), ('action', 'action'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('classifieds', 'classified'), ('two', 'two'), ('categories', 'category'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Clustering', 'Clustering'), ('·', '·'), ('Association', 'Association'), ('3', '3'), (')', ')'), ('Reinforcement', 'Reinforcement'), ('Learning', 'Learning'), ('Reinforcement', 'Reinforcement'), ('learning', 'learning'), ('feedback-based', 'feedback-based'), ('learning', 'learning'), ('method', 'method'), (',', ','), ('learning', 'learning'), ('agent', 'agent'), ('gets', 'get'), ('reward', 'reward'), ('right', 'right'), ('action', 'action'), ('gets', 'get'), ('penalty', 'penalty'), ('wrong', 'wrong'), ('action', 'action'), ('.', '.')]



============================ Sentence 32 =============================

The agent learns automatically with these feedbacks and improves its performance. 


>> Tokens are: 
 ['The', 'agent', 'learns', 'automatically', 'feedbacks', 'improves', 'performance', '.']

>> Bigrams are: 
 [('The', 'agent'), ('agent', 'learns'), ('learns', 'automatically'), ('automatically', 'feedbacks'), ('feedbacks', 'improves'), ('improves', 'performance'), ('performance', '.')]

>> Trigrams are: 
 [('The', 'agent', 'learns'), ('agent', 'learns', 'automatically'), ('learns', 'automatically', 'feedbacks'), ('automatically', 'feedbacks', 'improves'), ('feedbacks', 'improves', 'performance'), ('improves', 'performance', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('agent', 'NN'), ('learns', 'VBZ'), ('automatically', 'RB'), ('feedbacks', 'JJ'), ('improves', 'NNS'), ('performance', 'NN'), ('.', '.')]

 (S
  (NP The/DT agent/NN)
  learns/VBZ
  automatically/RB
  (NP feedbacks/JJ improves/NNS performance/NN)
  ./.) 


>> Noun Phrases are: 
 ['The agent', 'feedbacks improves performance']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('agent', 'agent'), ('learns', 'learn'), ('automatically', 'automat'), ('feedbacks', 'feedback'), ('improves', 'improv'), ('performance', 'perform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('agent', 'agent'), ('learns', 'learn'), ('automatically', 'automat'), ('feedbacks', 'feedback'), ('improves', 'improv'), ('performance', 'perform'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('agent', 'agent'), ('learns', 'learns'), ('automatically', 'automatically'), ('feedbacks', 'feedback'), ('improves', 'improves'), ('performance', 'performance'), ('.', '.')]



============================ Sentence 33 =============================

In reinforcement learning, the agent interacts with the environment and explores it. 


>> Tokens are: 
 ['In', 'reinforcement', 'learning', ',', 'agent', 'interacts', 'environment', 'explores', '.']

>> Bigrams are: 
 [('In', 'reinforcement'), ('reinforcement', 'learning'), ('learning', ','), (',', 'agent'), ('agent', 'interacts'), ('interacts', 'environment'), ('environment', 'explores'), ('explores', '.')]

>> Trigrams are: 
 [('In', 'reinforcement', 'learning'), ('reinforcement', 'learning', ','), ('learning', ',', 'agent'), (',', 'agent', 'interacts'), ('agent', 'interacts', 'environment'), ('interacts', 'environment', 'explores'), ('environment', 'explores', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('reinforcement', 'NN'), ('learning', 'NN'), (',', ','), ('agent', 'JJ'), ('interacts', 'NNS'), ('environment', 'NN'), ('explores', 'NNS'), ('.', '.')]

 (S
  In/IN
  (NP reinforcement/NN learning/NN)
  ,/,
  (NP agent/JJ interacts/NNS environment/NN explores/NNS)
  ./.) 


>> Noun Phrases are: 
 ['reinforcement learning', 'agent interacts environment explores']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('reinforcement', 'reinforc'), ('learning', 'learn'), (',', ','), ('agent', 'agent'), ('interacts', 'interact'), ('environment', 'environ'), ('explores', 'explor'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('reinforcement', 'reinforc'), ('learning', 'learn'), (',', ','), ('agent', 'agent'), ('interacts', 'interact'), ('environment', 'environ'), ('explores', 'explor'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), (',', ','), ('agent', 'agent'), ('interacts', 'interacts'), ('environment', 'environment'), ('explores', 'explores'), ('.', '.')]



============================ Sentence 34 =============================

The goal of an agent is to get the most reward points, and hence, it improves its performance. 


>> Tokens are: 
 ['The', 'goal', 'agent', 'get', 'reward', 'points', ',', 'hence', ',', 'improves', 'performance', '.']

>> Bigrams are: 
 [('The', 'goal'), ('goal', 'agent'), ('agent', 'get'), ('get', 'reward'), ('reward', 'points'), ('points', ','), (',', 'hence'), ('hence', ','), (',', 'improves'), ('improves', 'performance'), ('performance', '.')]

>> Trigrams are: 
 [('The', 'goal', 'agent'), ('goal', 'agent', 'get'), ('agent', 'get', 'reward'), ('get', 'reward', 'points'), ('reward', 'points', ','), ('points', ',', 'hence'), (',', 'hence', ','), ('hence', ',', 'improves'), (',', 'improves', 'performance'), ('improves', 'performance', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('goal', 'NN'), ('agent', 'NN'), ('get', 'VB'), ('reward', 'JJ'), ('points', 'NNS'), (',', ','), ('hence', 'NN'), (',', ','), ('improves', 'VBZ'), ('performance', 'NN'), ('.', '.')]

 (S
  (NP The/DT goal/NN agent/NN)
  get/VB
  (NP reward/JJ points/NNS)
  ,/,
  (NP hence/NN)
  ,/,
  improves/VBZ
  (NP performance/NN)
  ./.) 


>> Noun Phrases are: 
 ['The goal agent', 'reward points', 'hence', 'performance']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('goal', 'goal'), ('agent', 'agent'), ('get', 'get'), ('reward', 'reward'), ('points', 'point'), (',', ','), ('hence', 'henc'), (',', ','), ('improves', 'improv'), ('performance', 'perform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('goal', 'goal'), ('agent', 'agent'), ('get', 'get'), ('reward', 'reward'), ('points', 'point'), (',', ','), ('hence', 'henc'), (',', ','), ('improves', 'improv'), ('performance', 'perform'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('goal', 'goal'), ('agent', 'agent'), ('get', 'get'), ('reward', 'reward'), ('points', 'point'), (',', ','), ('hence', 'hence'), (',', ','), ('improves', 'improves'), ('performance', 'performance'), ('.', '.')]



============================ Sentence 35 =============================

The robotic dog, which automatically learns the movement of his arms, is an example of Reinforcement learning. 


>> Tokens are: 
 ['The', 'robotic', 'dog', ',', 'automatically', 'learns', 'movement', 'arms', ',', 'example', 'Reinforcement', 'learning', '.']

>> Bigrams are: 
 [('The', 'robotic'), ('robotic', 'dog'), ('dog', ','), (',', 'automatically'), ('automatically', 'learns'), ('learns', 'movement'), ('movement', 'arms'), ('arms', ','), (',', 'example'), ('example', 'Reinforcement'), ('Reinforcement', 'learning'), ('learning', '.')]

>> Trigrams are: 
 [('The', 'robotic', 'dog'), ('robotic', 'dog', ','), ('dog', ',', 'automatically'), (',', 'automatically', 'learns'), ('automatically', 'learns', 'movement'), ('learns', 'movement', 'arms'), ('movement', 'arms', ','), ('arms', ',', 'example'), (',', 'example', 'Reinforcement'), ('example', 'Reinforcement', 'learning'), ('Reinforcement', 'learning', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('robotic', 'JJ'), ('dog', 'NN'), (',', ','), ('automatically', 'RB'), ('learns', 'JJ'), ('movement', 'NN'), ('arms', 'NNS'), (',', ','), ('example', 'NN'), ('Reinforcement', 'NNP'), ('learning', 'NN'), ('.', '.')]

 (S
  (NP The/DT robotic/JJ dog/NN)
  ,/,
  automatically/RB
  (NP learns/JJ movement/NN arms/NNS)
  ,/,
  (NP example/NN Reinforcement/NNP learning/NN)
  ./.) 


>> Noun Phrases are: 
 ['The robotic dog', 'learns movement arms', 'example Reinforcement learning']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('robotic', 'robot'), ('dog', 'dog'), (',', ','), ('automatically', 'automat'), ('learns', 'learn'), ('movement', 'movement'), ('arms', 'arm'), (',', ','), ('example', 'exampl'), ('Reinforcement', 'reinforc'), ('learning', 'learn'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('robotic', 'robot'), ('dog', 'dog'), (',', ','), ('automatically', 'automat'), ('learns', 'learn'), ('movement', 'movement'), ('arms', 'arm'), (',', ','), ('example', 'exampl'), ('Reinforcement', 'reinforc'), ('learning', 'learn'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('robotic', 'robotic'), ('dog', 'dog'), (',', ','), ('automatically', 'automatically'), ('learns', 'learns'), ('movement', 'movement'), ('arms', 'arm'), (',', ','), ('example', 'example'), ('Reinforcement', 'Reinforcement'), ('learning', 'learning'), ('.', '.')]



============================ Sentence 36 =============================

Note: We will learn about the above types of machine learning in detail in later chapters. 


>> Tokens are: 
 ['Note', ':', 'We', 'learn', 'types', 'machine', 'learning', 'detail', 'later', 'chapters', '.']

>> Bigrams are: 
 [('Note', ':'), (':', 'We'), ('We', 'learn'), ('learn', 'types'), ('types', 'machine'), ('machine', 'learning'), ('learning', 'detail'), ('detail', 'later'), ('later', 'chapters'), ('chapters', '.')]

>> Trigrams are: 
 [('Note', ':', 'We'), (':', 'We', 'learn'), ('We', 'learn', 'types'), ('learn', 'types', 'machine'), ('types', 'machine', 'learning'), ('machine', 'learning', 'detail'), ('learning', 'detail', 'later'), ('detail', 'later', 'chapters'), ('later', 'chapters', '.')]

>> POS Tags are: 
 [('Note', 'NN'), (':', ':'), ('We', 'PRP'), ('learn', 'VBP'), ('types', 'NNS'), ('machine', 'NN'), ('learning', 'VBG'), ('detail', 'NN'), ('later', 'NN'), ('chapters', 'NNS'), ('.', '.')]

 (S
  (NP Note/NN)
  :/:
  We/PRP
  learn/VBP
  (NP types/NNS machine/NN)
  learning/VBG
  (NP detail/NN later/NN chapters/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Note', 'types machine', 'detail later chapters']

>> Named Entities are: 
 [('GPE', 'Note')] 

>> Stemming using Porter Stemmer: 
 [('Note', 'note'), (':', ':'), ('We', 'we'), ('learn', 'learn'), ('types', 'type'), ('machine', 'machin'), ('learning', 'learn'), ('detail', 'detail'), ('later', 'later'), ('chapters', 'chapter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Note', 'note'), (':', ':'), ('We', 'we'), ('learn', 'learn'), ('types', 'type'), ('machine', 'machin'), ('learning', 'learn'), ('detail', 'detail'), ('later', 'later'), ('chapters', 'chapter'), ('.', '.')]

>> Lemmatization: 
 [('Note', 'Note'), (':', ':'), ('We', 'We'), ('learn', 'learn'), ('types', 'type'), ('machine', 'machine'), ('learning', 'learning'), ('detail', 'detail'), ('later', 'later'), ('chapters', 'chapter'), ('.', '.')]



============================ Sentence 37 =============================

History of Machine Learning Before some years (about 40-50 years), machine learning was science fiction, but today it is the part of our daily life. 


>> Tokens are: 
 ['History', 'Machine', 'Learning', 'Before', 'years', '(', '40-50', 'years', ')', ',', 'machine', 'learning', 'science', 'fiction', ',', 'today', 'part', 'daily', 'life', '.']

>> Bigrams are: 
 [('History', 'Machine'), ('Machine', 'Learning'), ('Learning', 'Before'), ('Before', 'years'), ('years', '('), ('(', '40-50'), ('40-50', 'years'), ('years', ')'), (')', ','), (',', 'machine'), ('machine', 'learning'), ('learning', 'science'), ('science', 'fiction'), ('fiction', ','), (',', 'today'), ('today', 'part'), ('part', 'daily'), ('daily', 'life'), ('life', '.')]

>> Trigrams are: 
 [('History', 'Machine', 'Learning'), ('Machine', 'Learning', 'Before'), ('Learning', 'Before', 'years'), ('Before', 'years', '('), ('years', '(', '40-50'), ('(', '40-50', 'years'), ('40-50', 'years', ')'), ('years', ')', ','), (')', ',', 'machine'), (',', 'machine', 'learning'), ('machine', 'learning', 'science'), ('learning', 'science', 'fiction'), ('science', 'fiction', ','), ('fiction', ',', 'today'), (',', 'today', 'part'), ('today', 'part', 'daily'), ('part', 'daily', 'life'), ('daily', 'life', '.')]

>> POS Tags are: 
 [('History', 'NNP'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('Before', 'IN'), ('years', 'NNS'), ('(', '('), ('40-50', 'CD'), ('years', 'NNS'), (')', ')'), (',', ','), ('machine', 'NN'), ('learning', 'VBG'), ('science', 'NN'), ('fiction', 'NN'), (',', ','), ('today', 'NN'), ('part', 'NN'), ('daily', 'JJ'), ('life', 'NN'), ('.', '.')]

 (S
  (NP History/NNP Machine/NNP Learning/NNP)
  Before/IN
  (NP years/NNS)
  (/(
  40-50/CD
  (NP years/NNS)
  )/)
  ,/,
  (NP machine/NN)
  learning/VBG
  (NP science/NN fiction/NN)
  ,/,
  (NP today/NN part/NN)
  (NP daily/JJ life/NN)
  ./.) 


>> Noun Phrases are: 
 ['History Machine Learning', 'years', 'years', 'machine', 'science fiction', 'today part', 'daily life']

>> Named Entities are: 
 [('PERSON', 'History'), ('PERSON', 'Machine Learning')] 

>> Stemming using Porter Stemmer: 
 [('History', 'histori'), ('Machine', 'machin'), ('Learning', 'learn'), ('Before', 'befor'), ('years', 'year'), ('(', '('), ('40-50', '40-50'), ('years', 'year'), (')', ')'), (',', ','), ('machine', 'machin'), ('learning', 'learn'), ('science', 'scienc'), ('fiction', 'fiction'), (',', ','), ('today', 'today'), ('part', 'part'), ('daily', 'daili'), ('life', 'life'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('History', 'histori'), ('Machine', 'machin'), ('Learning', 'learn'), ('Before', 'befor'), ('years', 'year'), ('(', '('), ('40-50', '40-50'), ('years', 'year'), (')', ')'), (',', ','), ('machine', 'machin'), ('learning', 'learn'), ('science', 'scienc'), ('fiction', 'fiction'), (',', ','), ('today', 'today'), ('part', 'part'), ('daily', 'daili'), ('life', 'life'), ('.', '.')]

>> Lemmatization: 
 [('History', 'History'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('Before', 'Before'), ('years', 'year'), ('(', '('), ('40-50', '40-50'), ('years', 'year'), (')', ')'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('science', 'science'), ('fiction', 'fiction'), (',', ','), ('today', 'today'), ('part', 'part'), ('daily', 'daily'), ('life', 'life'), ('.', '.')]



============================ Sentence 38 =============================

Machine learning is making our day to day life easy from self-driving cars to Amazon virtual assistant "Alexa". 


>> Tokens are: 
 ['Machine', 'learning', 'making', 'day', 'day', 'life', 'easy', 'self-driving', 'cars', 'Amazon', 'virtual', 'assistant', '``', 'Alexa', "''", '.']

>> Bigrams are: 
 [('Machine', 'learning'), ('learning', 'making'), ('making', 'day'), ('day', 'day'), ('day', 'life'), ('life', 'easy'), ('easy', 'self-driving'), ('self-driving', 'cars'), ('cars', 'Amazon'), ('Amazon', 'virtual'), ('virtual', 'assistant'), ('assistant', '``'), ('``', 'Alexa'), ('Alexa', "''"), ("''", '.')]

>> Trigrams are: 
 [('Machine', 'learning', 'making'), ('learning', 'making', 'day'), ('making', 'day', 'day'), ('day', 'day', 'life'), ('day', 'life', 'easy'), ('life', 'easy', 'self-driving'), ('easy', 'self-driving', 'cars'), ('self-driving', 'cars', 'Amazon'), ('cars', 'Amazon', 'virtual'), ('Amazon', 'virtual', 'assistant'), ('virtual', 'assistant', '``'), ('assistant', '``', 'Alexa'), ('``', 'Alexa', "''"), ('Alexa', "''", '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('learning', 'VBG'), ('making', 'VBG'), ('day', 'NN'), ('day', 'NN'), ('life', 'NN'), ('easy', 'JJ'), ('self-driving', 'JJ'), ('cars', 'NNS'), ('Amazon', 'NNP'), ('virtual', 'JJ'), ('assistant', 'NN'), ('``', '``'), ('Alexa', 'NNP'), ("''", "''"), ('.', '.')]

 (S
  (NP Machine/NN)
  learning/VBG
  making/VBG
  (NP day/NN day/NN life/NN)
  (NP easy/JJ self-driving/JJ cars/NNS Amazon/NNP)
  (NP virtual/JJ assistant/NN)
  ``/``
  (NP Alexa/NNP)
  ''/''
  ./.) 


>> Noun Phrases are: 
 ['Machine', 'day day life', 'easy self-driving cars Amazon', 'virtual assistant', 'Alexa']

>> Named Entities are: 
 [('GPE', 'Machine'), ('PERSON', 'Amazon'), ('PERSON', 'Alexa')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('learning', 'learn'), ('making', 'make'), ('day', 'day'), ('day', 'day'), ('life', 'life'), ('easy', 'easi'), ('self-driving', 'self-driv'), ('cars', 'car'), ('Amazon', 'amazon'), ('virtual', 'virtual'), ('assistant', 'assist'), ('``', '``'), ('Alexa', 'alexa'), ("''", "''"), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('learning', 'learn'), ('making', 'make'), ('day', 'day'), ('day', 'day'), ('life', 'life'), ('easy', 'easi'), ('self-driving', 'self-driv'), ('cars', 'car'), ('Amazon', 'amazon'), ('virtual', 'virtual'), ('assistant', 'assist'), ('``', '``'), ('Alexa', 'alexa'), ("''", "''"), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('learning', 'learning'), ('making', 'making'), ('day', 'day'), ('day', 'day'), ('life', 'life'), ('easy', 'easy'), ('self-driving', 'self-driving'), ('cars', 'car'), ('Amazon', 'Amazon'), ('virtual', 'virtual'), ('assistant', 'assistant'), ('``', '``'), ('Alexa', 'Alexa'), ("''", "''"), ('.', '.')]



============================ Sentence 39 =============================

However, the idea behind machine learning is so old and has a long history. 


>> Tokens are: 
 ['However', ',', 'idea', 'behind', 'machine', 'learning', 'old', 'long', 'history', '.']

>> Bigrams are: 
 [('However', ','), (',', 'idea'), ('idea', 'behind'), ('behind', 'machine'), ('machine', 'learning'), ('learning', 'old'), ('old', 'long'), ('long', 'history'), ('history', '.')]

>> Trigrams are: 
 [('However', ',', 'idea'), (',', 'idea', 'behind'), ('idea', 'behind', 'machine'), ('behind', 'machine', 'learning'), ('machine', 'learning', 'old'), ('learning', 'old', 'long'), ('old', 'long', 'history'), ('long', 'history', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('idea', 'NN'), ('behind', 'IN'), ('machine', 'NN'), ('learning', 'VBG'), ('old', 'JJ'), ('long', 'JJ'), ('history', 'NN'), ('.', '.')]

 (S
  However/RB
  ,/,
  (NP idea/NN)
  behind/IN
  (NP machine/NN)
  learning/VBG
  (NP old/JJ long/JJ history/NN)
  ./.) 


>> Noun Phrases are: 
 ['idea', 'machine', 'old long history']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('idea', 'idea'), ('behind', 'behind'), ('machine', 'machin'), ('learning', 'learn'), ('old', 'old'), ('long', 'long'), ('history', 'histori'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('idea', 'idea'), ('behind', 'behind'), ('machine', 'machin'), ('learning', 'learn'), ('old', 'old'), ('long', 'long'), ('history', 'histori'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('idea', 'idea'), ('behind', 'behind'), ('machine', 'machine'), ('learning', 'learning'), ('old', 'old'), ('long', 'long'), ('history', 'history'), ('.', '.')]



============================ Sentence 40 =============================

Below some milestones are given which have occurred in the history of machine learning:  The early history of Machine Learning (Pre-1940): · 1834: In 1834, Charles Babbage, the father of the computer, conceived a device that could be programmed with punch cards. 


>> Tokens are: 
 ['Below', 'milestones', 'given', 'occurred', 'history', 'machine', 'learning', ':', 'The', 'early', 'history', 'Machine', 'Learning', '(', 'Pre-1940', ')', ':', '·', '1834', ':', 'In', '1834', ',', 'Charles', 'Babbage', ',', 'father', 'computer', ',', 'conceived', 'device', 'could', 'programmed', 'punch', 'cards', '.']

>> Bigrams are: 
 [('Below', 'milestones'), ('milestones', 'given'), ('given', 'occurred'), ('occurred', 'history'), ('history', 'machine'), ('machine', 'learning'), ('learning', ':'), (':', 'The'), ('The', 'early'), ('early', 'history'), ('history', 'Machine'), ('Machine', 'Learning'), ('Learning', '('), ('(', 'Pre-1940'), ('Pre-1940', ')'), (')', ':'), (':', '·'), ('·', '1834'), ('1834', ':'), (':', 'In'), ('In', '1834'), ('1834', ','), (',', 'Charles'), ('Charles', 'Babbage'), ('Babbage', ','), (',', 'father'), ('father', 'computer'), ('computer', ','), (',', 'conceived'), ('conceived', 'device'), ('device', 'could'), ('could', 'programmed'), ('programmed', 'punch'), ('punch', 'cards'), ('cards', '.')]

>> Trigrams are: 
 [('Below', 'milestones', 'given'), ('milestones', 'given', 'occurred'), ('given', 'occurred', 'history'), ('occurred', 'history', 'machine'), ('history', 'machine', 'learning'), ('machine', 'learning', ':'), ('learning', ':', 'The'), (':', 'The', 'early'), ('The', 'early', 'history'), ('early', 'history', 'Machine'), ('history', 'Machine', 'Learning'), ('Machine', 'Learning', '('), ('Learning', '(', 'Pre-1940'), ('(', 'Pre-1940', ')'), ('Pre-1940', ')', ':'), (')', ':', '·'), (':', '·', '1834'), ('·', '1834', ':'), ('1834', ':', 'In'), (':', 'In', '1834'), ('In', '1834', ','), ('1834', ',', 'Charles'), (',', 'Charles', 'Babbage'), ('Charles', 'Babbage', ','), ('Babbage', ',', 'father'), (',', 'father', 'computer'), ('father', 'computer', ','), ('computer', ',', 'conceived'), (',', 'conceived', 'device'), ('conceived', 'device', 'could'), ('device', 'could', 'programmed'), ('could', 'programmed', 'punch'), ('programmed', 'punch', 'cards'), ('punch', 'cards', '.')]

>> POS Tags are: 
 [('Below', 'IN'), ('milestones', 'NNS'), ('given', 'VBN'), ('occurred', 'VBD'), ('history', 'NN'), ('machine', 'NN'), ('learning', 'NN'), (':', ':'), ('The', 'DT'), ('early', 'JJ'), ('history', 'NN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('(', '('), ('Pre-1940', 'NNP'), (')', ')'), (':', ':'), ('·', 'JJ'), ('1834', 'CD'), (':', ':'), ('In', 'IN'), ('1834', 'CD'), (',', ','), ('Charles', 'NNP'), ('Babbage', 'NNP'), (',', ','), ('father', 'RB'), ('computer', 'NN'), (',', ','), ('conceived', 'VBN'), ('device', 'NN'), ('could', 'MD'), ('programmed', 'VB'), ('punch', 'JJ'), ('cards', 'NNS'), ('.', '.')]

 (S
  Below/IN
  (NP milestones/NNS)
  given/VBN
  occurred/VBD
  (NP history/NN machine/NN learning/NN)
  :/:
  (NP The/DT early/JJ history/NN Machine/NNP Learning/NNP)
  (/(
  (NP Pre-1940/NNP)
  )/)
  :/:
  ·/JJ
  1834/CD
  :/:
  In/IN
  1834/CD
  ,/,
  (NP Charles/NNP Babbage/NNP)
  ,/,
  father/RB
  (NP computer/NN)
  ,/,
  conceived/VBN
  (NP device/NN)
  could/MD
  programmed/VB
  (NP punch/JJ cards/NNS)
  ./.) 


>> Noun Phrases are: 
 ['milestones', 'history machine learning', 'The early history Machine Learning', 'Pre-1940', 'Charles Babbage', 'computer', 'device', 'punch cards']

>> Named Entities are: 
 [('PERSON', 'Machine Learning'), ('PERSON', 'Charles Babbage')] 

>> Stemming using Porter Stemmer: 
 [('Below', 'below'), ('milestones', 'mileston'), ('given', 'given'), ('occurred', 'occur'), ('history', 'histori'), ('machine', 'machin'), ('learning', 'learn'), (':', ':'), ('The', 'the'), ('early', 'earli'), ('history', 'histori'), ('Machine', 'machin'), ('Learning', 'learn'), ('(', '('), ('Pre-1940', 'pre-1940'), (')', ')'), (':', ':'), ('·', '·'), ('1834', '1834'), (':', ':'), ('In', 'in'), ('1834', '1834'), (',', ','), ('Charles', 'charl'), ('Babbage', 'babbag'), (',', ','), ('father', 'father'), ('computer', 'comput'), (',', ','), ('conceived', 'conceiv'), ('device', 'devic'), ('could', 'could'), ('programmed', 'program'), ('punch', 'punch'), ('cards', 'card'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Below', 'below'), ('milestones', 'mileston'), ('given', 'given'), ('occurred', 'occur'), ('history', 'histori'), ('machine', 'machin'), ('learning', 'learn'), (':', ':'), ('The', 'the'), ('early', 'earli'), ('history', 'histori'), ('Machine', 'machin'), ('Learning', 'learn'), ('(', '('), ('Pre-1940', 'pre-1940'), (')', ')'), (':', ':'), ('·', '·'), ('1834', '1834'), (':', ':'), ('In', 'in'), ('1834', '1834'), (',', ','), ('Charles', 'charl'), ('Babbage', 'babbag'), (',', ','), ('father', 'father'), ('computer', 'comput'), (',', ','), ('conceived', 'conceiv'), ('device', 'devic'), ('could', 'could'), ('programmed', 'program'), ('punch', 'punch'), ('cards', 'card'), ('.', '.')]

>> Lemmatization: 
 [('Below', 'Below'), ('milestones', 'milestone'), ('given', 'given'), ('occurred', 'occurred'), ('history', 'history'), ('machine', 'machine'), ('learning', 'learning'), (':', ':'), ('The', 'The'), ('early', 'early'), ('history', 'history'), ('Machine', 'Machine'), ('Learning', 'Learning'), ('(', '('), ('Pre-1940', 'Pre-1940'), (')', ')'), (':', ':'), ('·', '·'), ('1834', '1834'), (':', ':'), ('In', 'In'), ('1834', '1834'), (',', ','), ('Charles', 'Charles'), ('Babbage', 'Babbage'), (',', ','), ('father', 'father'), ('computer', 'computer'), (',', ','), ('conceived', 'conceived'), ('device', 'device'), ('could', 'could'), ('programmed', 'programmed'), ('punch', 'punch'), ('cards', 'card'), ('.', '.')]



============================ Sentence 41 =============================

However, the machine was never built, but all modern computers rely on its logical structure. 


>> Tokens are: 
 ['However', ',', 'machine', 'never', 'built', ',', 'modern', 'computers', 'rely', 'logical', 'structure', '.']

>> Bigrams are: 
 [('However', ','), (',', 'machine'), ('machine', 'never'), ('never', 'built'), ('built', ','), (',', 'modern'), ('modern', 'computers'), ('computers', 'rely'), ('rely', 'logical'), ('logical', 'structure'), ('structure', '.')]

>> Trigrams are: 
 [('However', ',', 'machine'), (',', 'machine', 'never'), ('machine', 'never', 'built'), ('never', 'built', ','), ('built', ',', 'modern'), (',', 'modern', 'computers'), ('modern', 'computers', 'rely'), ('computers', 'rely', 'logical'), ('rely', 'logical', 'structure'), ('logical', 'structure', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('machine', 'NN'), ('never', 'RB'), ('built', 'VBN'), (',', ','), ('modern', 'JJ'), ('computers', 'NNS'), ('rely', 'RB'), ('logical', 'JJ'), ('structure', 'NN'), ('.', '.')]

 (S
  However/RB
  ,/,
  (NP machine/NN)
  never/RB
  built/VBN
  ,/,
  (NP modern/JJ computers/NNS)
  rely/RB
  (NP logical/JJ structure/NN)
  ./.) 


>> Noun Phrases are: 
 ['machine', 'modern computers', 'logical structure']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('machine', 'machin'), ('never', 'never'), ('built', 'built'), (',', ','), ('modern', 'modern'), ('computers', 'comput'), ('rely', 'reli'), ('logical', 'logic'), ('structure', 'structur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('machine', 'machin'), ('never', 'never'), ('built', 'built'), (',', ','), ('modern', 'modern'), ('computers', 'comput'), ('rely', 'reli'), ('logical', 'logic'), ('structure', 'structur'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('machine', 'machine'), ('never', 'never'), ('built', 'built'), (',', ','), ('modern', 'modern'), ('computers', 'computer'), ('rely', 'rely'), ('logical', 'logical'), ('structure', 'structure'), ('.', '.')]



============================ Sentence 42 =============================

· 1936: In 1936, Alan Turing gave a theory that how a machine can determine and execute a set of instructions. 


>> Tokens are: 
 ['·', '1936', ':', 'In', '1936', ',', 'Alan', 'Turing', 'gave', 'theory', 'machine', 'determine', 'execute', 'set', 'instructions', '.']

>> Bigrams are: 
 [('·', '1936'), ('1936', ':'), (':', 'In'), ('In', '1936'), ('1936', ','), (',', 'Alan'), ('Alan', 'Turing'), ('Turing', 'gave'), ('gave', 'theory'), ('theory', 'machine'), ('machine', 'determine'), ('determine', 'execute'), ('execute', 'set'), ('set', 'instructions'), ('instructions', '.')]

>> Trigrams are: 
 [('·', '1936', ':'), ('1936', ':', 'In'), (':', 'In', '1936'), ('In', '1936', ','), ('1936', ',', 'Alan'), (',', 'Alan', 'Turing'), ('Alan', 'Turing', 'gave'), ('Turing', 'gave', 'theory'), ('gave', 'theory', 'machine'), ('theory', 'machine', 'determine'), ('machine', 'determine', 'execute'), ('determine', 'execute', 'set'), ('execute', 'set', 'instructions'), ('set', 'instructions', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('1936', 'CD'), (':', ':'), ('In', 'IN'), ('1936', 'CD'), (',', ','), ('Alan', 'NNP'), ('Turing', 'NNP'), ('gave', 'VBD'), ('theory', 'JJ'), ('machine', 'NN'), ('determine', 'NN'), ('execute', 'NN'), ('set', 'VBN'), ('instructions', 'NNS'), ('.', '.')]

 (S
  ·/JJ
  1936/CD
  :/:
  In/IN
  1936/CD
  ,/,
  (NP Alan/NNP Turing/NNP)
  gave/VBD
  (NP theory/JJ machine/NN determine/NN execute/NN)
  set/VBN
  (NP instructions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Alan Turing', 'theory machine determine execute', 'instructions']

>> Named Entities are: 
 [('PERSON', 'Alan Turing')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('1936', '1936'), (':', ':'), ('In', 'in'), ('1936', '1936'), (',', ','), ('Alan', 'alan'), ('Turing', 'ture'), ('gave', 'gave'), ('theory', 'theori'), ('machine', 'machin'), ('determine', 'determin'), ('execute', 'execut'), ('set', 'set'), ('instructions', 'instruct'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('1936', '1936'), (':', ':'), ('In', 'in'), ('1936', '1936'), (',', ','), ('Alan', 'alan'), ('Turing', 'ture'), ('gave', 'gave'), ('theory', 'theori'), ('machine', 'machin'), ('determine', 'determin'), ('execute', 'execut'), ('set', 'set'), ('instructions', 'instruct'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('1936', '1936'), (':', ':'), ('In', 'In'), ('1936', '1936'), (',', ','), ('Alan', 'Alan'), ('Turing', 'Turing'), ('gave', 'gave'), ('theory', 'theory'), ('machine', 'machine'), ('determine', 'determine'), ('execute', 'execute'), ('set', 'set'), ('instructions', 'instruction'), ('.', '.')]



============================ Sentence 43 =============================

The era of stored program computers: · 1940: In 1940, the first manually operated computer, "ENIAC" was invented, which was the first electronic general-purpose computer. 


>> Tokens are: 
 ['The', 'era', 'stored', 'program', 'computers', ':', '·', '1940', ':', 'In', '1940', ',', 'first', 'manually', 'operated', 'computer', ',', '``', 'ENIAC', "''", 'invented', ',', 'first', 'electronic', 'general-purpose', 'computer', '.']

>> Bigrams are: 
 [('The', 'era'), ('era', 'stored'), ('stored', 'program'), ('program', 'computers'), ('computers', ':'), (':', '·'), ('·', '1940'), ('1940', ':'), (':', 'In'), ('In', '1940'), ('1940', ','), (',', 'first'), ('first', 'manually'), ('manually', 'operated'), ('operated', 'computer'), ('computer', ','), (',', '``'), ('``', 'ENIAC'), ('ENIAC', "''"), ("''", 'invented'), ('invented', ','), (',', 'first'), ('first', 'electronic'), ('electronic', 'general-purpose'), ('general-purpose', 'computer'), ('computer', '.')]

>> Trigrams are: 
 [('The', 'era', 'stored'), ('era', 'stored', 'program'), ('stored', 'program', 'computers'), ('program', 'computers', ':'), ('computers', ':', '·'), (':', '·', '1940'), ('·', '1940', ':'), ('1940', ':', 'In'), (':', 'In', '1940'), ('In', '1940', ','), ('1940', ',', 'first'), (',', 'first', 'manually'), ('first', 'manually', 'operated'), ('manually', 'operated', 'computer'), ('operated', 'computer', ','), ('computer', ',', '``'), (',', '``', 'ENIAC'), ('``', 'ENIAC', "''"), ('ENIAC', "''", 'invented'), ("''", 'invented', ','), ('invented', ',', 'first'), (',', 'first', 'electronic'), ('first', 'electronic', 'general-purpose'), ('electronic', 'general-purpose', 'computer'), ('general-purpose', 'computer', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('era', 'NN'), ('stored', 'VBN'), ('program', 'NN'), ('computers', 'NNS'), (':', ':'), ('·', 'JJ'), ('1940', 'CD'), (':', ':'), ('In', 'IN'), ('1940', 'CD'), (',', ','), ('first', 'RB'), ('manually', 'RB'), ('operated', 'VBN'), ('computer', 'NN'), (',', ','), ('``', '``'), ('ENIAC', 'NNP'), ("''", "''"), ('invented', 'VBD'), (',', ','), ('first', 'JJ'), ('electronic', 'JJ'), ('general-purpose', 'JJ'), ('computer', 'NN'), ('.', '.')]

 (S
  (NP The/DT era/NN)
  stored/VBN
  (NP program/NN computers/NNS)
  :/:
  ·/JJ
  1940/CD
  :/:
  In/IN
  1940/CD
  ,/,
  first/RB
  manually/RB
  operated/VBN
  (NP computer/NN)
  ,/,
  ``/``
  (NP ENIAC/NNP)
  ''/''
  invented/VBD
  ,/,
  (NP first/JJ electronic/JJ general-purpose/JJ computer/NN)
  ./.) 


>> Noun Phrases are: 
 ['The era', 'program computers', 'computer', 'ENIAC', 'first electronic general-purpose computer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('era', 'era'), ('stored', 'store'), ('program', 'program'), ('computers', 'comput'), (':', ':'), ('·', '·'), ('1940', '1940'), (':', ':'), ('In', 'in'), ('1940', '1940'), (',', ','), ('first', 'first'), ('manually', 'manual'), ('operated', 'oper'), ('computer', 'comput'), (',', ','), ('``', '``'), ('ENIAC', 'eniac'), ("''", "''"), ('invented', 'invent'), (',', ','), ('first', 'first'), ('electronic', 'electron'), ('general-purpose', 'general-purpos'), ('computer', 'comput'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('era', 'era'), ('stored', 'store'), ('program', 'program'), ('computers', 'comput'), (':', ':'), ('·', '·'), ('1940', '1940'), (':', ':'), ('In', 'in'), ('1940', '1940'), (',', ','), ('first', 'first'), ('manually', 'manual'), ('operated', 'oper'), ('computer', 'comput'), (',', ','), ('``', '``'), ('ENIAC', 'eniac'), ("''", "''"), ('invented', 'invent'), (',', ','), ('first', 'first'), ('electronic', 'electron'), ('general-purpose', 'general-purpos'), ('computer', 'comput'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('era', 'era'), ('stored', 'stored'), ('program', 'program'), ('computers', 'computer'), (':', ':'), ('·', '·'), ('1940', '1940'), (':', ':'), ('In', 'In'), ('1940', '1940'), (',', ','), ('first', 'first'), ('manually', 'manually'), ('operated', 'operated'), ('computer', 'computer'), (',', ','), ('``', '``'), ('ENIAC', 'ENIAC'), ("''", "''"), ('invented', 'invented'), (',', ','), ('first', 'first'), ('electronic', 'electronic'), ('general-purpose', 'general-purpose'), ('computer', 'computer'), ('.', '.')]



============================ Sentence 44 =============================

After that stored program computer such as EDSAC in 1949 and EDVAC in 1951 were invented. 


>> Tokens are: 
 ['After', 'stored', 'program', 'computer', 'EDSAC', '1949', 'EDVAC', '1951', 'invented', '.']

>> Bigrams are: 
 [('After', 'stored'), ('stored', 'program'), ('program', 'computer'), ('computer', 'EDSAC'), ('EDSAC', '1949'), ('1949', 'EDVAC'), ('EDVAC', '1951'), ('1951', 'invented'), ('invented', '.')]

>> Trigrams are: 
 [('After', 'stored', 'program'), ('stored', 'program', 'computer'), ('program', 'computer', 'EDSAC'), ('computer', 'EDSAC', '1949'), ('EDSAC', '1949', 'EDVAC'), ('1949', 'EDVAC', '1951'), ('EDVAC', '1951', 'invented'), ('1951', 'invented', '.')]

>> POS Tags are: 
 [('After', 'IN'), ('stored', 'VBN'), ('program', 'NN'), ('computer', 'NN'), ('EDSAC', 'NNP'), ('1949', 'CD'), ('EDVAC', 'NNP'), ('1951', 'CD'), ('invented', 'VBD'), ('.', '.')]

 (S
  After/IN
  stored/VBN
  (NP program/NN computer/NN EDSAC/NNP)
  1949/CD
  (NP EDVAC/NNP)
  1951/CD
  invented/VBD
  ./.) 


>> Noun Phrases are: 
 ['program computer EDSAC', 'EDVAC']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('After', 'after'), ('stored', 'store'), ('program', 'program'), ('computer', 'comput'), ('EDSAC', 'edsac'), ('1949', '1949'), ('EDVAC', 'edvac'), ('1951', '1951'), ('invented', 'invent'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('After', 'after'), ('stored', 'store'), ('program', 'program'), ('computer', 'comput'), ('EDSAC', 'edsac'), ('1949', '1949'), ('EDVAC', 'edvac'), ('1951', '1951'), ('invented', 'invent'), ('.', '.')]

>> Lemmatization: 
 [('After', 'After'), ('stored', 'stored'), ('program', 'program'), ('computer', 'computer'), ('EDSAC', 'EDSAC'), ('1949', '1949'), ('EDVAC', 'EDVAC'), ('1951', '1951'), ('invented', 'invented'), ('.', '.')]



============================ Sentence 45 =============================

· 1943: In 1943, a human neural network was modeled with an electrical circuit. 


>> Tokens are: 
 ['·', '1943', ':', 'In', '1943', ',', 'human', 'neural', 'network', 'modeled', 'electrical', 'circuit', '.']

>> Bigrams are: 
 [('·', '1943'), ('1943', ':'), (':', 'In'), ('In', '1943'), ('1943', ','), (',', 'human'), ('human', 'neural'), ('neural', 'network'), ('network', 'modeled'), ('modeled', 'electrical'), ('electrical', 'circuit'), ('circuit', '.')]

>> Trigrams are: 
 [('·', '1943', ':'), ('1943', ':', 'In'), (':', 'In', '1943'), ('In', '1943', ','), ('1943', ',', 'human'), (',', 'human', 'neural'), ('human', 'neural', 'network'), ('neural', 'network', 'modeled'), ('network', 'modeled', 'electrical'), ('modeled', 'electrical', 'circuit'), ('electrical', 'circuit', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('1943', 'CD'), (':', ':'), ('In', 'IN'), ('1943', 'CD'), (',', ','), ('human', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('modeled', 'VBD'), ('electrical', 'JJ'), ('circuit', 'NN'), ('.', '.')]

 (S
  ·/JJ
  1943/CD
  :/:
  In/IN
  1943/CD
  ,/,
  (NP human/JJ neural/JJ network/NN)
  modeled/VBD
  (NP electrical/JJ circuit/NN)
  ./.) 


>> Noun Phrases are: 
 ['human neural network', 'electrical circuit']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('1943', '1943'), (':', ':'), ('In', 'in'), ('1943', '1943'), (',', ','), ('human', 'human'), ('neural', 'neural'), ('network', 'network'), ('modeled', 'model'), ('electrical', 'electr'), ('circuit', 'circuit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('1943', '1943'), (':', ':'), ('In', 'in'), ('1943', '1943'), (',', ','), ('human', 'human'), ('neural', 'neural'), ('network', 'network'), ('modeled', 'model'), ('electrical', 'electr'), ('circuit', 'circuit'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('1943', '1943'), (':', ':'), ('In', 'In'), ('1943', '1943'), (',', ','), ('human', 'human'), ('neural', 'neural'), ('network', 'network'), ('modeled', 'modeled'), ('electrical', 'electrical'), ('circuit', 'circuit'), ('.', '.')]



============================ Sentence 46 =============================

In 1950, the scientists started applying their idea to work and analyzed how human neurons might work. 


>> Tokens are: 
 ['In', '1950', ',', 'scientists', 'started', 'applying', 'idea', 'work', 'analyzed', 'human', 'neurons', 'might', 'work', '.']

>> Bigrams are: 
 [('In', '1950'), ('1950', ','), (',', 'scientists'), ('scientists', 'started'), ('started', 'applying'), ('applying', 'idea'), ('idea', 'work'), ('work', 'analyzed'), ('analyzed', 'human'), ('human', 'neurons'), ('neurons', 'might'), ('might', 'work'), ('work', '.')]

>> Trigrams are: 
 [('In', '1950', ','), ('1950', ',', 'scientists'), (',', 'scientists', 'started'), ('scientists', 'started', 'applying'), ('started', 'applying', 'idea'), ('applying', 'idea', 'work'), ('idea', 'work', 'analyzed'), ('work', 'analyzed', 'human'), ('analyzed', 'human', 'neurons'), ('human', 'neurons', 'might'), ('neurons', 'might', 'work'), ('might', 'work', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('1950', 'CD'), (',', ','), ('scientists', 'NNS'), ('started', 'VBD'), ('applying', 'VBG'), ('idea', 'NN'), ('work', 'NN'), ('analyzed', 'JJ'), ('human', 'JJ'), ('neurons', 'NNS'), ('might', 'MD'), ('work', 'VB'), ('.', '.')]

 (S
  In/IN
  1950/CD
  ,/,
  (NP scientists/NNS)
  started/VBD
  applying/VBG
  (NP idea/NN work/NN)
  (NP analyzed/JJ human/JJ neurons/NNS)
  might/MD
  work/VB
  ./.) 


>> Noun Phrases are: 
 ['scientists', 'idea work', 'analyzed human neurons']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('1950', '1950'), (',', ','), ('scientists', 'scientist'), ('started', 'start'), ('applying', 'appli'), ('idea', 'idea'), ('work', 'work'), ('analyzed', 'analyz'), ('human', 'human'), ('neurons', 'neuron'), ('might', 'might'), ('work', 'work'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('1950', '1950'), (',', ','), ('scientists', 'scientist'), ('started', 'start'), ('applying', 'appli'), ('idea', 'idea'), ('work', 'work'), ('analyzed', 'analyz'), ('human', 'human'), ('neurons', 'neuron'), ('might', 'might'), ('work', 'work'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('1950', '1950'), (',', ','), ('scientists', 'scientist'), ('started', 'started'), ('applying', 'applying'), ('idea', 'idea'), ('work', 'work'), ('analyzed', 'analyzed'), ('human', 'human'), ('neurons', 'neuron'), ('might', 'might'), ('work', 'work'), ('.', '.')]



============================ Sentence 47 =============================

Computer machinery and intelligence: · 1950: In 1950, Alan Turing published a seminal paper, "Computer Machinery and Intelligence," on the topic of artificial intelligence. 


>> Tokens are: 
 ['Computer', 'machinery', 'intelligence', ':', '·', '1950', ':', 'In', '1950', ',', 'Alan', 'Turing', 'published', 'seminal', 'paper', ',', '``', 'Computer', 'Machinery', 'Intelligence', ',', "''", 'topic', 'artificial', 'intelligence', '.']

>> Bigrams are: 
 [('Computer', 'machinery'), ('machinery', 'intelligence'), ('intelligence', ':'), (':', '·'), ('·', '1950'), ('1950', ':'), (':', 'In'), ('In', '1950'), ('1950', ','), (',', 'Alan'), ('Alan', 'Turing'), ('Turing', 'published'), ('published', 'seminal'), ('seminal', 'paper'), ('paper', ','), (',', '``'), ('``', 'Computer'), ('Computer', 'Machinery'), ('Machinery', 'Intelligence'), ('Intelligence', ','), (',', "''"), ("''", 'topic'), ('topic', 'artificial'), ('artificial', 'intelligence'), ('intelligence', '.')]

>> Trigrams are: 
 [('Computer', 'machinery', 'intelligence'), ('machinery', 'intelligence', ':'), ('intelligence', ':', '·'), (':', '·', '1950'), ('·', '1950', ':'), ('1950', ':', 'In'), (':', 'In', '1950'), ('In', '1950', ','), ('1950', ',', 'Alan'), (',', 'Alan', 'Turing'), ('Alan', 'Turing', 'published'), ('Turing', 'published', 'seminal'), ('published', 'seminal', 'paper'), ('seminal', 'paper', ','), ('paper', ',', '``'), (',', '``', 'Computer'), ('``', 'Computer', 'Machinery'), ('Computer', 'Machinery', 'Intelligence'), ('Machinery', 'Intelligence', ','), ('Intelligence', ',', "''"), (',', "''", 'topic'), ("''", 'topic', 'artificial'), ('topic', 'artificial', 'intelligence'), ('artificial', 'intelligence', '.')]

>> POS Tags are: 
 [('Computer', 'NNP'), ('machinery', 'NN'), ('intelligence', 'NN'), (':', ':'), ('·', 'JJ'), ('1950', 'CD'), (':', ':'), ('In', 'IN'), ('1950', 'CD'), (',', ','), ('Alan', 'NNP'), ('Turing', 'NNP'), ('published', 'VBD'), ('seminal', 'JJ'), ('paper', 'NN'), (',', ','), ('``', '``'), ('Computer', 'NNP'), ('Machinery', 'NNP'), ('Intelligence', 'NNP'), (',', ','), ("''", "''"), ('topic', 'VBZ'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('.', '.')]

 (S
  (NP Computer/NNP machinery/NN intelligence/NN)
  :/:
  ·/JJ
  1950/CD
  :/:
  In/IN
  1950/CD
  ,/,
  (NP Alan/NNP Turing/NNP)
  published/VBD
  (NP seminal/JJ paper/NN)
  ,/,
  ``/``
  (NP Computer/NNP Machinery/NNP Intelligence/NNP)
  ,/,
  ''/''
  topic/VBZ
  (NP artificial/JJ intelligence/NN)
  ./.) 


>> Noun Phrases are: 
 ['Computer machinery intelligence', 'Alan Turing', 'seminal paper', 'Computer Machinery Intelligence', 'artificial intelligence']

>> Named Entities are: 
 [('PERSON', 'Alan Turing'), ('ORGANIZATION', 'Computer Machinery Intelligence')] 

>> Stemming using Porter Stemmer: 
 [('Computer', 'comput'), ('machinery', 'machineri'), ('intelligence', 'intellig'), (':', ':'), ('·', '·'), ('1950', '1950'), (':', ':'), ('In', 'in'), ('1950', '1950'), (',', ','), ('Alan', 'alan'), ('Turing', 'ture'), ('published', 'publish'), ('seminal', 'semin'), ('paper', 'paper'), (',', ','), ('``', '``'), ('Computer', 'comput'), ('Machinery', 'machineri'), ('Intelligence', 'intellig'), (',', ','), ("''", "''"), ('topic', 'topic'), ('artificial', 'artifici'), ('intelligence', 'intellig'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Computer', 'comput'), ('machinery', 'machineri'), ('intelligence', 'intellig'), (':', ':'), ('·', '·'), ('1950', '1950'), (':', ':'), ('In', 'in'), ('1950', '1950'), (',', ','), ('Alan', 'alan'), ('Turing', 'ture'), ('published', 'publish'), ('seminal', 'semin'), ('paper', 'paper'), (',', ','), ('``', '``'), ('Computer', 'comput'), ('Machinery', 'machineri'), ('Intelligence', 'intellig'), (',', ','), ("''", "''"), ('topic', 'topic'), ('artificial', 'artifici'), ('intelligence', 'intellig'), ('.', '.')]

>> Lemmatization: 
 [('Computer', 'Computer'), ('machinery', 'machinery'), ('intelligence', 'intelligence'), (':', ':'), ('·', '·'), ('1950', '1950'), (':', ':'), ('In', 'In'), ('1950', '1950'), (',', ','), ('Alan', 'Alan'), ('Turing', 'Turing'), ('published', 'published'), ('seminal', 'seminal'), ('paper', 'paper'), (',', ','), ('``', '``'), ('Computer', 'Computer'), ('Machinery', 'Machinery'), ('Intelligence', 'Intelligence'), (',', ','), ("''", "''"), ('topic', 'topic'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('.', '.')]



============================ Sentence 48 =============================

In his paper, he asked, "Can machines think?" 


>> Tokens are: 
 ['In', 'paper', ',', 'asked', ',', '``', 'Can', 'machines', 'think', '?', "''"]

>> Bigrams are: 
 [('In', 'paper'), ('paper', ','), (',', 'asked'), ('asked', ','), (',', '``'), ('``', 'Can'), ('Can', 'machines'), ('machines', 'think'), ('think', '?'), ('?', "''")]

>> Trigrams are: 
 [('In', 'paper', ','), ('paper', ',', 'asked'), (',', 'asked', ','), ('asked', ',', '``'), (',', '``', 'Can'), ('``', 'Can', 'machines'), ('Can', 'machines', 'think'), ('machines', 'think', '?'), ('think', '?', "''")]

>> POS Tags are: 
 [('In', 'IN'), ('paper', 'NN'), (',', ','), ('asked', 'VBD'), (',', ','), ('``', '``'), ('Can', 'MD'), ('machines', 'NNS'), ('think', 'VB'), ('?', '.'), ("''", "''")]

 (S
  In/IN
  (NP paper/NN)
  ,/,
  asked/VBD
  ,/,
  ``/``
  Can/MD
  (NP machines/NNS)
  think/VB
  ?/.
  ''/'') 


>> Noun Phrases are: 
 ['paper', 'machines']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('asked', 'ask'), (',', ','), ('``', '``'), ('Can', 'can'), ('machines', 'machin'), ('think', 'think'), ('?', '?'), ("''", "''")]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('paper', 'paper'), (',', ','), ('asked', 'ask'), (',', ','), ('``', '``'), ('Can', 'can'), ('machines', 'machin'), ('think', 'think'), ('?', '?'), ("''", "''")]

>> Lemmatization: 
 [('In', 'In'), ('paper', 'paper'), (',', ','), ('asked', 'asked'), (',', ','), ('``', '``'), ('Can', 'Can'), ('machines', 'machine'), ('think', 'think'), ('?', '?'), ("''", "''")]



============================ Sentence 49 =============================

Machine intelligence in Games: · 1952: Arthur Samuel, who was the pioneer of machine learning, created a program that helped an IBM computer to play a checkers game. 


>> Tokens are: 
 ['Machine', 'intelligence', 'Games', ':', '·', '1952', ':', 'Arthur', 'Samuel', ',', 'pioneer', 'machine', 'learning', ',', 'created', 'program', 'helped', 'IBM', 'computer', 'play', 'checkers', 'game', '.']

>> Bigrams are: 
 [('Machine', 'intelligence'), ('intelligence', 'Games'), ('Games', ':'), (':', '·'), ('·', '1952'), ('1952', ':'), (':', 'Arthur'), ('Arthur', 'Samuel'), ('Samuel', ','), (',', 'pioneer'), ('pioneer', 'machine'), ('machine', 'learning'), ('learning', ','), (',', 'created'), ('created', 'program'), ('program', 'helped'), ('helped', 'IBM'), ('IBM', 'computer'), ('computer', 'play'), ('play', 'checkers'), ('checkers', 'game'), ('game', '.')]

>> Trigrams are: 
 [('Machine', 'intelligence', 'Games'), ('intelligence', 'Games', ':'), ('Games', ':', '·'), (':', '·', '1952'), ('·', '1952', ':'), ('1952', ':', 'Arthur'), (':', 'Arthur', 'Samuel'), ('Arthur', 'Samuel', ','), ('Samuel', ',', 'pioneer'), (',', 'pioneer', 'machine'), ('pioneer', 'machine', 'learning'), ('machine', 'learning', ','), ('learning', ',', 'created'), (',', 'created', 'program'), ('created', 'program', 'helped'), ('program', 'helped', 'IBM'), ('helped', 'IBM', 'computer'), ('IBM', 'computer', 'play'), ('computer', 'play', 'checkers'), ('play', 'checkers', 'game'), ('checkers', 'game', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('intelligence', 'NN'), ('Games', 'NNPS'), (':', ':'), ('·', 'JJ'), ('1952', 'CD'), (':', ':'), ('Arthur', 'NNP'), ('Samuel', 'NNP'), (',', ','), ('pioneer', 'NN'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('created', 'VBN'), ('program', 'NN'), ('helped', 'VBD'), ('IBM', 'NNP'), ('computer', 'NN'), ('play', 'NN'), ('checkers', 'NNS'), ('game', 'NN'), ('.', '.')]

 (S
  (NP Machine/NN intelligence/NN)
  Games/NNPS
  :/:
  ·/JJ
  1952/CD
  :/:
  (NP Arthur/NNP Samuel/NNP)
  ,/,
  (NP pioneer/NN machine/NN learning/NN)
  ,/,
  created/VBN
  (NP program/NN)
  helped/VBD
  (NP IBM/NNP computer/NN play/NN checkers/NNS game/NN)
  ./.) 


>> Noun Phrases are: 
 ['Machine intelligence', 'Arthur Samuel', 'pioneer machine learning', 'program', 'IBM computer play checkers game']

>> Named Entities are: 
 [('GPE', 'Machine'), ('PERSON', 'Arthur Samuel'), ('ORGANIZATION', 'IBM')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('intelligence', 'intellig'), ('Games', 'game'), (':', ':'), ('·', '·'), ('1952', '1952'), (':', ':'), ('Arthur', 'arthur'), ('Samuel', 'samuel'), (',', ','), ('pioneer', 'pioneer'), ('machine', 'machin'), ('learning', 'learn'), (',', ','), ('created', 'creat'), ('program', 'program'), ('helped', 'help'), ('IBM', 'ibm'), ('computer', 'comput'), ('play', 'play'), ('checkers', 'checker'), ('game', 'game'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('intelligence', 'intellig'), ('Games', 'game'), (':', ':'), ('·', '·'), ('1952', '1952'), (':', ':'), ('Arthur', 'arthur'), ('Samuel', 'samuel'), (',', ','), ('pioneer', 'pioneer'), ('machine', 'machin'), ('learning', 'learn'), (',', ','), ('created', 'creat'), ('program', 'program'), ('helped', 'help'), ('IBM', 'ibm'), ('computer', 'comput'), ('play', 'play'), ('checkers', 'checker'), ('game', 'game'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('intelligence', 'intelligence'), ('Games', 'Games'), (':', ':'), ('·', '·'), ('1952', '1952'), (':', ':'), ('Arthur', 'Arthur'), ('Samuel', 'Samuel'), (',', ','), ('pioneer', 'pioneer'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('created', 'created'), ('program', 'program'), ('helped', 'helped'), ('IBM', 'IBM'), ('computer', 'computer'), ('play', 'play'), ('checkers', 'checker'), ('game', 'game'), ('.', '.')]



============================ Sentence 50 =============================

It performed better more it played. 


>> Tokens are: 
 ['It', 'performed', 'better', 'played', '.']

>> Bigrams are: 
 [('It', 'performed'), ('performed', 'better'), ('better', 'played'), ('played', '.')]

>> Trigrams are: 
 [('It', 'performed', 'better'), ('performed', 'better', 'played'), ('better', 'played', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('performed', 'VBD'), ('better', 'RBR'), ('played', 'VBN'), ('.', '.')]

 (S It/PRP performed/VBD better/RBR played/VBN ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('performed', 'perform'), ('better', 'better'), ('played', 'play'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('performed', 'perform'), ('better', 'better'), ('played', 'play'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('performed', 'performed'), ('better', 'better'), ('played', 'played'), ('.', '.')]



============================ Sentence 51 =============================

· 1959: In 1959, the term "Machine Learning" was first coined by Arthur Samuel. 


>> Tokens are: 
 ['·', '1959', ':', 'In', '1959', ',', 'term', '``', 'Machine', 'Learning', "''", 'first', 'coined', 'Arthur', 'Samuel', '.']

>> Bigrams are: 
 [('·', '1959'), ('1959', ':'), (':', 'In'), ('In', '1959'), ('1959', ','), (',', 'term'), ('term', '``'), ('``', 'Machine'), ('Machine', 'Learning'), ('Learning', "''"), ("''", 'first'), ('first', 'coined'), ('coined', 'Arthur'), ('Arthur', 'Samuel'), ('Samuel', '.')]

>> Trigrams are: 
 [('·', '1959', ':'), ('1959', ':', 'In'), (':', 'In', '1959'), ('In', '1959', ','), ('1959', ',', 'term'), (',', 'term', '``'), ('term', '``', 'Machine'), ('``', 'Machine', 'Learning'), ('Machine', 'Learning', "''"), ('Learning', "''", 'first'), ("''", 'first', 'coined'), ('first', 'coined', 'Arthur'), ('coined', 'Arthur', 'Samuel'), ('Arthur', 'Samuel', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('1959', 'CD'), (':', ':'), ('In', 'IN'), ('1959', 'CD'), (',', ','), ('term', 'NN'), ('``', '``'), ('Machine', 'NNP'), ('Learning', 'NNP'), ("''", "''"), ('first', 'RB'), ('coined', 'VBD'), ('Arthur', 'NNP'), ('Samuel', 'NNP'), ('.', '.')]

 (S
  ·/JJ
  1959/CD
  :/:
  In/IN
  1959/CD
  ,/,
  (NP term/NN)
  ``/``
  (NP Machine/NNP Learning/NNP)
  ''/''
  first/RB
  coined/VBD
  (NP Arthur/NNP Samuel/NNP)
  ./.) 


>> Noun Phrases are: 
 ['term', 'Machine Learning', 'Arthur Samuel']

>> Named Entities are: 
 [('PERSON', 'Machine Learning'), ('PERSON', 'Arthur Samuel')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'in'), ('1959', '1959'), (',', ','), ('term', 'term'), ('``', '``'), ('Machine', 'machin'), ('Learning', 'learn'), ("''", "''"), ('first', 'first'), ('coined', 'coin'), ('Arthur', 'arthur'), ('Samuel', 'samuel'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'in'), ('1959', '1959'), (',', ','), ('term', 'term'), ('``', '``'), ('Machine', 'machin'), ('Learning', 'learn'), ("''", "''"), ('first', 'first'), ('coined', 'coin'), ('Arthur', 'arthur'), ('Samuel', 'samuel'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'In'), ('1959', '1959'), (',', ','), ('term', 'term'), ('``', '``'), ('Machine', 'Machine'), ('Learning', 'Learning'), ("''", "''"), ('first', 'first'), ('coined', 'coined'), ('Arthur', 'Arthur'), ('Samuel', 'Samuel'), ('.', '.')]



============================ Sentence 52 =============================

The first "AI" winter: · The duration of 1974 to 1980 was the tough time for AI and ML researchers, and this duration was called as AI winter. 


>> Tokens are: 
 ['The', 'first', '``', 'AI', "''", 'winter', ':', '·', 'The', 'duration', '1974', '1980', 'tough', 'time', 'AI', 'ML', 'researchers', ',', 'duration', 'called', 'AI', 'winter', '.']

>> Bigrams are: 
 [('The', 'first'), ('first', '``'), ('``', 'AI'), ('AI', "''"), ("''", 'winter'), ('winter', ':'), (':', '·'), ('·', 'The'), ('The', 'duration'), ('duration', '1974'), ('1974', '1980'), ('1980', 'tough'), ('tough', 'time'), ('time', 'AI'), ('AI', 'ML'), ('ML', 'researchers'), ('researchers', ','), (',', 'duration'), ('duration', 'called'), ('called', 'AI'), ('AI', 'winter'), ('winter', '.')]

>> Trigrams are: 
 [('The', 'first', '``'), ('first', '``', 'AI'), ('``', 'AI', "''"), ('AI', "''", 'winter'), ("''", 'winter', ':'), ('winter', ':', '·'), (':', '·', 'The'), ('·', 'The', 'duration'), ('The', 'duration', '1974'), ('duration', '1974', '1980'), ('1974', '1980', 'tough'), ('1980', 'tough', 'time'), ('tough', 'time', 'AI'), ('time', 'AI', 'ML'), ('AI', 'ML', 'researchers'), ('ML', 'researchers', ','), ('researchers', ',', 'duration'), (',', 'duration', 'called'), ('duration', 'called', 'AI'), ('called', 'AI', 'winter'), ('AI', 'winter', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('first', 'JJ'), ('``', '``'), ('AI', 'NNP'), ("''", "''"), ('winter', 'NN'), (':', ':'), ('·', 'VB'), ('The', 'DT'), ('duration', 'NN'), ('1974', 'CD'), ('1980', 'CD'), ('tough', 'JJ'), ('time', 'NN'), ('AI', 'NNP'), ('ML', 'NNP'), ('researchers', 'NNS'), (',', ','), ('duration', 'NN'), ('called', 'VBN'), ('AI', 'NNP'), ('winter', 'NN'), ('.', '.')]

 (S
  The/DT
  first/JJ
  ``/``
  (NP AI/NNP)
  ''/''
  (NP winter/NN)
  :/:
  ·/VB
  (NP The/DT duration/NN)
  1974/CD
  1980/CD
  (NP tough/JJ time/NN AI/NNP ML/NNP researchers/NNS)
  ,/,
  (NP duration/NN)
  called/VBN
  (NP AI/NNP winter/NN)
  ./.) 


>> Noun Phrases are: 
 ['AI', 'winter', 'The duration', 'tough time AI ML researchers', 'duration', 'AI winter']

>> Named Entities are: 
 [('ORGANIZATION', 'AI'), ('ORGANIZATION', 'AI')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('first', 'first'), ('``', '``'), ('AI', 'ai'), ("''", "''"), ('winter', 'winter'), (':', ':'), ('·', '·'), ('The', 'the'), ('duration', 'durat'), ('1974', '1974'), ('1980', '1980'), ('tough', 'tough'), ('time', 'time'), ('AI', 'ai'), ('ML', 'ml'), ('researchers', 'research'), (',', ','), ('duration', 'durat'), ('called', 'call'), ('AI', 'ai'), ('winter', 'winter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('first', 'first'), ('``', '``'), ('AI', 'ai'), ("''", "''"), ('winter', 'winter'), (':', ':'), ('·', '·'), ('The', 'the'), ('duration', 'durat'), ('1974', '1974'), ('1980', '1980'), ('tough', 'tough'), ('time', 'time'), ('AI', 'ai'), ('ML', 'ml'), ('researchers', 'research'), (',', ','), ('duration', 'durat'), ('called', 'call'), ('AI', 'ai'), ('winter', 'winter'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('first', 'first'), ('``', '``'), ('AI', 'AI'), ("''", "''"), ('winter', 'winter'), (':', ':'), ('·', '·'), ('The', 'The'), ('duration', 'duration'), ('1974', '1974'), ('1980', '1980'), ('tough', 'tough'), ('time', 'time'), ('AI', 'AI'), ('ML', 'ML'), ('researchers', 'researcher'), (',', ','), ('duration', 'duration'), ('called', 'called'), ('AI', 'AI'), ('winter', 'winter'), ('.', '.')]



============================ Sentence 53 =============================

· In this duration, failure of machine translation occurred, and people had reduced their interest from AI, which led to reduced funding by the government to the researches. 


>> Tokens are: 
 ['·', 'In', 'duration', ',', 'failure', 'machine', 'translation', 'occurred', ',', 'people', 'reduced', 'interest', 'AI', ',', 'led', 'reduced', 'funding', 'government', 'researches', '.']

>> Bigrams are: 
 [('·', 'In'), ('In', 'duration'), ('duration', ','), (',', 'failure'), ('failure', 'machine'), ('machine', 'translation'), ('translation', 'occurred'), ('occurred', ','), (',', 'people'), ('people', 'reduced'), ('reduced', 'interest'), ('interest', 'AI'), ('AI', ','), (',', 'led'), ('led', 'reduced'), ('reduced', 'funding'), ('funding', 'government'), ('government', 'researches'), ('researches', '.')]

>> Trigrams are: 
 [('·', 'In', 'duration'), ('In', 'duration', ','), ('duration', ',', 'failure'), (',', 'failure', 'machine'), ('failure', 'machine', 'translation'), ('machine', 'translation', 'occurred'), ('translation', 'occurred', ','), ('occurred', ',', 'people'), (',', 'people', 'reduced'), ('people', 'reduced', 'interest'), ('reduced', 'interest', 'AI'), ('interest', 'AI', ','), ('AI', ',', 'led'), (',', 'led', 'reduced'), ('led', 'reduced', 'funding'), ('reduced', 'funding', 'government'), ('funding', 'government', 'researches'), ('government', 'researches', '.')]

>> POS Tags are: 
 [('·', 'NN'), ('In', 'IN'), ('duration', 'NN'), (',', ','), ('failure', 'NN'), ('machine', 'NN'), ('translation', 'NN'), ('occurred', 'VBD'), (',', ','), ('people', 'NNS'), ('reduced', 'VBD'), ('interest', 'NN'), ('AI', 'NNP'), (',', ','), ('led', 'VBD'), ('reduced', 'VBN'), ('funding', 'JJ'), ('government', 'NN'), ('researches', 'NNS'), ('.', '.')]

 (S
  (NP ·/NN)
  In/IN
  (NP duration/NN)
  ,/,
  (NP failure/NN machine/NN translation/NN)
  occurred/VBD
  ,/,
  (NP people/NNS)
  reduced/VBD
  (NP interest/NN AI/NNP)
  ,/,
  led/VBD
  reduced/VBN
  (NP funding/JJ government/NN researches/NNS)
  ./.) 


>> Noun Phrases are: 
 ['·', 'duration', 'failure machine translation', 'people', 'interest AI', 'funding government researches']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('In', 'in'), ('duration', 'durat'), (',', ','), ('failure', 'failur'), ('machine', 'machin'), ('translation', 'translat'), ('occurred', 'occur'), (',', ','), ('people', 'peopl'), ('reduced', 'reduc'), ('interest', 'interest'), ('AI', 'ai'), (',', ','), ('led', 'led'), ('reduced', 'reduc'), ('funding', 'fund'), ('government', 'govern'), ('researches', 'research'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('In', 'in'), ('duration', 'durat'), (',', ','), ('failure', 'failur'), ('machine', 'machin'), ('translation', 'translat'), ('occurred', 'occur'), (',', ','), ('people', 'peopl'), ('reduced', 'reduc'), ('interest', 'interest'), ('AI', 'ai'), (',', ','), ('led', 'led'), ('reduced', 'reduc'), ('funding', 'fund'), ('government', 'govern'), ('researches', 'research'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('In', 'In'), ('duration', 'duration'), (',', ','), ('failure', 'failure'), ('machine', 'machine'), ('translation', 'translation'), ('occurred', 'occurred'), (',', ','), ('people', 'people'), ('reduced', 'reduced'), ('interest', 'interest'), ('AI', 'AI'), (',', ','), ('led', 'led'), ('reduced', 'reduced'), ('funding', 'funding'), ('government', 'government'), ('researches', 'research'), ('.', '.')]



============================ Sentence 54 =============================

Machine Learning from theory to reality · 1959: In 1959, the first neural network was applied to a real-world problem to remove echoes over phone lines using an adaptive filter. 


>> Tokens are: 
 ['Machine', 'Learning', 'theory', 'reality', '·', '1959', ':', 'In', '1959', ',', 'first', 'neural', 'network', 'applied', 'real-world', 'problem', 'remove', 'echoes', 'phone', 'lines', 'using', 'adaptive', 'filter', '.']

>> Bigrams are: 
 [('Machine', 'Learning'), ('Learning', 'theory'), ('theory', 'reality'), ('reality', '·'), ('·', '1959'), ('1959', ':'), (':', 'In'), ('In', '1959'), ('1959', ','), (',', 'first'), ('first', 'neural'), ('neural', 'network'), ('network', 'applied'), ('applied', 'real-world'), ('real-world', 'problem'), ('problem', 'remove'), ('remove', 'echoes'), ('echoes', 'phone'), ('phone', 'lines'), ('lines', 'using'), ('using', 'adaptive'), ('adaptive', 'filter'), ('filter', '.')]

>> Trigrams are: 
 [('Machine', 'Learning', 'theory'), ('Learning', 'theory', 'reality'), ('theory', 'reality', '·'), ('reality', '·', '1959'), ('·', '1959', ':'), ('1959', ':', 'In'), (':', 'In', '1959'), ('In', '1959', ','), ('1959', ',', 'first'), (',', 'first', 'neural'), ('first', 'neural', 'network'), ('neural', 'network', 'applied'), ('network', 'applied', 'real-world'), ('applied', 'real-world', 'problem'), ('real-world', 'problem', 'remove'), ('problem', 'remove', 'echoes'), ('remove', 'echoes', 'phone'), ('echoes', 'phone', 'lines'), ('phone', 'lines', 'using'), ('lines', 'using', 'adaptive'), ('using', 'adaptive', 'filter'), ('adaptive', 'filter', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('Learning', 'NNP'), ('theory', 'NN'), ('reality', 'NN'), ('·', 'JJ'), ('1959', 'CD'), (':', ':'), ('In', 'IN'), ('1959', 'CD'), (',', ','), ('first', 'RB'), ('neural', 'JJ'), ('network', 'NN'), ('applied', 'VBD'), ('real-world', 'NN'), ('problem', 'NN'), ('remove', 'NN'), ('echoes', 'VBZ'), ('phone', 'NN'), ('lines', 'NNS'), ('using', 'VBG'), ('adaptive', 'JJ'), ('filter', 'NN'), ('.', '.')]

 (S
  (NP Machine/NN Learning/NNP theory/NN reality/NN)
  ·/JJ
  1959/CD
  :/:
  In/IN
  1959/CD
  ,/,
  first/RB
  (NP neural/JJ network/NN)
  applied/VBD
  (NP real-world/NN problem/NN remove/NN)
  echoes/VBZ
  (NP phone/NN lines/NNS)
  using/VBG
  (NP adaptive/JJ filter/NN)
  ./.) 


>> Noun Phrases are: 
 ['Machine Learning theory reality', 'neural network', 'real-world problem remove', 'phone lines', 'adaptive filter']

>> Named Entities are: 
 [('PERSON', 'Machine Learning')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('theory', 'theori'), ('reality', 'realiti'), ('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'in'), ('1959', '1959'), (',', ','), ('first', 'first'), ('neural', 'neural'), ('network', 'network'), ('applied', 'appli'), ('real-world', 'real-world'), ('problem', 'problem'), ('remove', 'remov'), ('echoes', 'echo'), ('phone', 'phone'), ('lines', 'line'), ('using', 'use'), ('adaptive', 'adapt'), ('filter', 'filter'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('theory', 'theori'), ('reality', 'realiti'), ('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'in'), ('1959', '1959'), (',', ','), ('first', 'first'), ('neural', 'neural'), ('network', 'network'), ('applied', 'appli'), ('real-world', 'real-world'), ('problem', 'problem'), ('remove', 'remov'), ('echoes', 'echo'), ('phone', 'phone'), ('lines', 'line'), ('using', 'use'), ('adaptive', 'adapt'), ('filter', 'filter'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('Learning', 'Learning'), ('theory', 'theory'), ('reality', 'reality'), ('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'In'), ('1959', '1959'), (',', ','), ('first', 'first'), ('neural', 'neural'), ('network', 'network'), ('applied', 'applied'), ('real-world', 'real-world'), ('problem', 'problem'), ('remove', 'remove'), ('echoes', 'echo'), ('phone', 'phone'), ('lines', 'line'), ('using', 'using'), ('adaptive', 'adaptive'), ('filter', 'filter'), ('.', '.')]



============================ Sentence 55 =============================

· 1985: In 1985, Terry Sejnowski and Charles Rosenberg invented a neural network NETtalk, which was able to teach itself how to correctly pronounce 20,000 words in one week. 


>> Tokens are: 
 ['·', '1985', ':', 'In', '1985', ',', 'Terry', 'Sejnowski', 'Charles', 'Rosenberg', 'invented', 'neural', 'network', 'NETtalk', ',', 'able', 'teach', 'correctly', 'pronounce', '20,000', 'words', 'one', 'week', '.']

>> Bigrams are: 
 [('·', '1985'), ('1985', ':'), (':', 'In'), ('In', '1985'), ('1985', ','), (',', 'Terry'), ('Terry', 'Sejnowski'), ('Sejnowski', 'Charles'), ('Charles', 'Rosenberg'), ('Rosenberg', 'invented'), ('invented', 'neural'), ('neural', 'network'), ('network', 'NETtalk'), ('NETtalk', ','), (',', 'able'), ('able', 'teach'), ('teach', 'correctly'), ('correctly', 'pronounce'), ('pronounce', '20,000'), ('20,000', 'words'), ('words', 'one'), ('one', 'week'), ('week', '.')]

>> Trigrams are: 
 [('·', '1985', ':'), ('1985', ':', 'In'), (':', 'In', '1985'), ('In', '1985', ','), ('1985', ',', 'Terry'), (',', 'Terry', 'Sejnowski'), ('Terry', 'Sejnowski', 'Charles'), ('Sejnowski', 'Charles', 'Rosenberg'), ('Charles', 'Rosenberg', 'invented'), ('Rosenberg', 'invented', 'neural'), ('invented', 'neural', 'network'), ('neural', 'network', 'NETtalk'), ('network', 'NETtalk', ','), ('NETtalk', ',', 'able'), (',', 'able', 'teach'), ('able', 'teach', 'correctly'), ('teach', 'correctly', 'pronounce'), ('correctly', 'pronounce', '20,000'), ('pronounce', '20,000', 'words'), ('20,000', 'words', 'one'), ('words', 'one', 'week'), ('one', 'week', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('1985', 'CD'), (':', ':'), ('In', 'IN'), ('1985', 'CD'), (',', ','), ('Terry', 'NNP'), ('Sejnowski', 'NNP'), ('Charles', 'NNP'), ('Rosenberg', 'NNP'), ('invented', 'VBD'), ('neural', 'JJ'), ('network', 'NN'), ('NETtalk', 'NNP'), (',', ','), ('able', 'JJ'), ('teach', 'NN'), ('correctly', 'RB'), ('pronounce', 'RB'), ('20,000', 'CD'), ('words', 'NNS'), ('one', 'CD'), ('week', 'NN'), ('.', '.')]

 (S
  ·/JJ
  1985/CD
  :/:
  In/IN
  1985/CD
  ,/,
  (NP Terry/NNP Sejnowski/NNP Charles/NNP Rosenberg/NNP)
  invented/VBD
  (NP neural/JJ network/NN NETtalk/NNP)
  ,/,
  (NP able/JJ teach/NN)
  correctly/RB
  pronounce/RB
  20,000/CD
  (NP words/NNS)
  one/CD
  (NP week/NN)
  ./.) 


>> Noun Phrases are: 
 ['Terry Sejnowski Charles Rosenberg', 'neural network NETtalk', 'able teach', 'words', 'week']

>> Named Entities are: 
 [('PERSON', 'Terry Sejnowski Charles Rosenberg'), ('ORGANIZATION', 'NETtalk')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('1985', '1985'), (':', ':'), ('In', 'in'), ('1985', '1985'), (',', ','), ('Terry', 'terri'), ('Sejnowski', 'sejnowski'), ('Charles', 'charl'), ('Rosenberg', 'rosenberg'), ('invented', 'invent'), ('neural', 'neural'), ('network', 'network'), ('NETtalk', 'nettalk'), (',', ','), ('able', 'abl'), ('teach', 'teach'), ('correctly', 'correctli'), ('pronounce', 'pronounc'), ('20,000', '20,000'), ('words', 'word'), ('one', 'one'), ('week', 'week'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('1985', '1985'), (':', ':'), ('In', 'in'), ('1985', '1985'), (',', ','), ('Terry', 'terri'), ('Sejnowski', 'sejnowski'), ('Charles', 'charl'), ('Rosenberg', 'rosenberg'), ('invented', 'invent'), ('neural', 'neural'), ('network', 'network'), ('NETtalk', 'nettalk'), (',', ','), ('able', 'abl'), ('teach', 'teach'), ('correctly', 'correct'), ('pronounce', 'pronounc'), ('20,000', '20,000'), ('words', 'word'), ('one', 'one'), ('week', 'week'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('1985', '1985'), (':', ':'), ('In', 'In'), ('1985', '1985'), (',', ','), ('Terry', 'Terry'), ('Sejnowski', 'Sejnowski'), ('Charles', 'Charles'), ('Rosenberg', 'Rosenberg'), ('invented', 'invented'), ('neural', 'neural'), ('network', 'network'), ('NETtalk', 'NETtalk'), (',', ','), ('able', 'able'), ('teach', 'teach'), ('correctly', 'correctly'), ('pronounce', 'pronounce'), ('20,000', '20,000'), ('words', 'word'), ('one', 'one'), ('week', 'week'), ('.', '.')]



============================ Sentence 56 =============================

· 1997: The IBM's Deep blue intelligent computer won the chess game against the chess expert Garry Kasparov, and it became the first computer which had beaten a human chess expert. 


>> Tokens are: 
 ['·', '1997', ':', 'The', 'IBM', "'s", 'Deep', 'blue', 'intelligent', 'computer', 'chess', 'game', 'chess', 'expert', 'Garry', 'Kasparov', ',', 'became', 'first', 'computer', 'beaten', 'human', 'chess', 'expert', '.']

>> Bigrams are: 
 [('·', '1997'), ('1997', ':'), (':', 'The'), ('The', 'IBM'), ('IBM', "'s"), ("'s", 'Deep'), ('Deep', 'blue'), ('blue', 'intelligent'), ('intelligent', 'computer'), ('computer', 'chess'), ('chess', 'game'), ('game', 'chess'), ('chess', 'expert'), ('expert', 'Garry'), ('Garry', 'Kasparov'), ('Kasparov', ','), (',', 'became'), ('became', 'first'), ('first', 'computer'), ('computer', 'beaten'), ('beaten', 'human'), ('human', 'chess'), ('chess', 'expert'), ('expert', '.')]

>> Trigrams are: 
 [('·', '1997', ':'), ('1997', ':', 'The'), (':', 'The', 'IBM'), ('The', 'IBM', "'s"), ('IBM', "'s", 'Deep'), ("'s", 'Deep', 'blue'), ('Deep', 'blue', 'intelligent'), ('blue', 'intelligent', 'computer'), ('intelligent', 'computer', 'chess'), ('computer', 'chess', 'game'), ('chess', 'game', 'chess'), ('game', 'chess', 'expert'), ('chess', 'expert', 'Garry'), ('expert', 'Garry', 'Kasparov'), ('Garry', 'Kasparov', ','), ('Kasparov', ',', 'became'), (',', 'became', 'first'), ('became', 'first', 'computer'), ('first', 'computer', 'beaten'), ('computer', 'beaten', 'human'), ('beaten', 'human', 'chess'), ('human', 'chess', 'expert'), ('chess', 'expert', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('1997', 'CD'), (':', ':'), ('The', 'DT'), ('IBM', 'NNP'), ("'s", 'POS'), ('Deep', 'NNP'), ('blue', 'NN'), ('intelligent', 'NN'), ('computer', 'NN'), ('chess', 'NN'), ('game', 'NN'), ('chess', 'NN'), ('expert', 'NN'), ('Garry', 'NNP'), ('Kasparov', 'NNP'), (',', ','), ('became', 'VBD'), ('first', 'JJ'), ('computer', 'NN'), ('beaten', 'VBN'), ('human', 'JJ'), ('chess', 'NN'), ('expert', 'NN'), ('.', '.')]

 (S
  ·/JJ
  1997/CD
  :/:
  (NP The/DT IBM/NNP)
  's/POS
  (NP
    Deep/NNP
    blue/NN
    intelligent/NN
    computer/NN
    chess/NN
    game/NN
    chess/NN
    expert/NN
    Garry/NNP
    Kasparov/NNP)
  ,/,
  became/VBD
  (NP first/JJ computer/NN)
  beaten/VBN
  (NP human/JJ chess/NN expert/NN)
  ./.) 


>> Noun Phrases are: 
 ['The IBM', 'Deep blue intelligent computer chess game chess expert Garry Kasparov', 'first computer', 'human chess expert']

>> Named Entities are: 
 [('ORGANIZATION', 'IBM'), ('PERSON', 'Garry Kasparov')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('1997', '1997'), (':', ':'), ('The', 'the'), ('IBM', 'ibm'), ("'s", "'s"), ('Deep', 'deep'), ('blue', 'blue'), ('intelligent', 'intellig'), ('computer', 'comput'), ('chess', 'chess'), ('game', 'game'), ('chess', 'chess'), ('expert', 'expert'), ('Garry', 'garri'), ('Kasparov', 'kasparov'), (',', ','), ('became', 'becam'), ('first', 'first'), ('computer', 'comput'), ('beaten', 'beaten'), ('human', 'human'), ('chess', 'chess'), ('expert', 'expert'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('1997', '1997'), (':', ':'), ('The', 'the'), ('IBM', 'ibm'), ("'s", "'s"), ('Deep', 'deep'), ('blue', 'blue'), ('intelligent', 'intellig'), ('computer', 'comput'), ('chess', 'chess'), ('game', 'game'), ('chess', 'chess'), ('expert', 'expert'), ('Garry', 'garri'), ('Kasparov', 'kasparov'), (',', ','), ('became', 'becam'), ('first', 'first'), ('computer', 'comput'), ('beaten', 'beaten'), ('human', 'human'), ('chess', 'chess'), ('expert', 'expert'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('1997', '1997'), (':', ':'), ('The', 'The'), ('IBM', 'IBM'), ("'s", "'s"), ('Deep', 'Deep'), ('blue', 'blue'), ('intelligent', 'intelligent'), ('computer', 'computer'), ('chess', 'chess'), ('game', 'game'), ('chess', 'chess'), ('expert', 'expert'), ('Garry', 'Garry'), ('Kasparov', 'Kasparov'), (',', ','), ('became', 'became'), ('first', 'first'), ('computer', 'computer'), ('beaten', 'beaten'), ('human', 'human'), ('chess', 'chess'), ('expert', 'expert'), ('.', '.')]



============================ Sentence 57 =============================

Machine Learning at 21st century · 2006: In the year 2006, computer scientist Geoffrey Hinton has given a new name to neural net research as "deep learning," and nowadays, it has become one of the most trending technologies. 


>> Tokens are: 
 ['Machine', 'Learning', '21st', 'century', '·', '2006', ':', 'In', 'year', '2006', ',', 'computer', 'scientist', 'Geoffrey', 'Hinton', 'given', 'new', 'name', 'neural', 'net', 'research', '``', 'deep', 'learning', ',', "''", 'nowadays', ',', 'become', 'one', 'trending', 'technologies', '.']

>> Bigrams are: 
 [('Machine', 'Learning'), ('Learning', '21st'), ('21st', 'century'), ('century', '·'), ('·', '2006'), ('2006', ':'), (':', 'In'), ('In', 'year'), ('year', '2006'), ('2006', ','), (',', 'computer'), ('computer', 'scientist'), ('scientist', 'Geoffrey'), ('Geoffrey', 'Hinton'), ('Hinton', 'given'), ('given', 'new'), ('new', 'name'), ('name', 'neural'), ('neural', 'net'), ('net', 'research'), ('research', '``'), ('``', 'deep'), ('deep', 'learning'), ('learning', ','), (',', "''"), ("''", 'nowadays'), ('nowadays', ','), (',', 'become'), ('become', 'one'), ('one', 'trending'), ('trending', 'technologies'), ('technologies', '.')]

>> Trigrams are: 
 [('Machine', 'Learning', '21st'), ('Learning', '21st', 'century'), ('21st', 'century', '·'), ('century', '·', '2006'), ('·', '2006', ':'), ('2006', ':', 'In'), (':', 'In', 'year'), ('In', 'year', '2006'), ('year', '2006', ','), ('2006', ',', 'computer'), (',', 'computer', 'scientist'), ('computer', 'scientist', 'Geoffrey'), ('scientist', 'Geoffrey', 'Hinton'), ('Geoffrey', 'Hinton', 'given'), ('Hinton', 'given', 'new'), ('given', 'new', 'name'), ('new', 'name', 'neural'), ('name', 'neural', 'net'), ('neural', 'net', 'research'), ('net', 'research', '``'), ('research', '``', 'deep'), ('``', 'deep', 'learning'), ('deep', 'learning', ','), ('learning', ',', "''"), (',', "''", 'nowadays'), ("''", 'nowadays', ','), ('nowadays', ',', 'become'), (',', 'become', 'one'), ('become', 'one', 'trending'), ('one', 'trending', 'technologies'), ('trending', 'technologies', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('Learning', 'VBG'), ('21st', 'JJ'), ('century', 'NN'), ('·', 'NN'), ('2006', 'CD'), (':', ':'), ('In', 'IN'), ('year', 'NN'), ('2006', 'CD'), (',', ','), ('computer', 'NN'), ('scientist', 'NN'), ('Geoffrey', 'NNP'), ('Hinton', 'NNP'), ('given', 'VBN'), ('new', 'JJ'), ('name', 'JJ'), ('neural', 'JJ'), ('net', 'JJ'), ('research', 'NN'), ('``', '``'), ('deep', 'JJ'), ('learning', 'NN'), (',', ','), ("''", "''"), ('nowadays', 'VBZ'), (',', ','), ('become', 'VB'), ('one', 'CD'), ('trending', 'VBG'), ('technologies', 'NNS'), ('.', '.')]

 (S
  (NP Machine/NN)
  Learning/VBG
  (NP 21st/JJ century/NN ·/NN)
  2006/CD
  :/:
  In/IN
  (NP year/NN)
  2006/CD
  ,/,
  (NP computer/NN scientist/NN Geoffrey/NNP Hinton/NNP)
  given/VBN
  (NP new/JJ name/JJ neural/JJ net/JJ research/NN)
  ``/``
  (NP deep/JJ learning/NN)
  ,/,
  ''/''
  nowadays/VBZ
  ,/,
  become/VB
  one/CD
  trending/VBG
  (NP technologies/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Machine', '21st century ·', 'year', 'computer scientist Geoffrey Hinton', 'new name neural net research', 'deep learning', 'technologies']

>> Named Entities are: 
 [('GPE', 'Machine'), ('PERSON', 'Geoffrey Hinton')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('21st', '21st'), ('century', 'centuri'), ('·', '·'), ('2006', '2006'), (':', ':'), ('In', 'in'), ('year', 'year'), ('2006', '2006'), (',', ','), ('computer', 'comput'), ('scientist', 'scientist'), ('Geoffrey', 'geoffrey'), ('Hinton', 'hinton'), ('given', 'given'), ('new', 'new'), ('name', 'name'), ('neural', 'neural'), ('net', 'net'), ('research', 'research'), ('``', '``'), ('deep', 'deep'), ('learning', 'learn'), (',', ','), ("''", "''"), ('nowadays', 'nowaday'), (',', ','), ('become', 'becom'), ('one', 'one'), ('trending', 'trend'), ('technologies', 'technolog'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('21st', '21st'), ('century', 'centuri'), ('·', '·'), ('2006', '2006'), (':', ':'), ('In', 'in'), ('year', 'year'), ('2006', '2006'), (',', ','), ('computer', 'comput'), ('scientist', 'scientist'), ('Geoffrey', 'geoffrey'), ('Hinton', 'hinton'), ('given', 'given'), ('new', 'new'), ('name', 'name'), ('neural', 'neural'), ('net', 'net'), ('research', 'research'), ('``', '``'), ('deep', 'deep'), ('learning', 'learn'), (',', ','), ("''", "''"), ('nowadays', 'nowaday'), (',', ','), ('become', 'becom'), ('one', 'one'), ('trending', 'trend'), ('technologies', 'technolog'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('Learning', 'Learning'), ('21st', '21st'), ('century', 'century'), ('·', '·'), ('2006', '2006'), (':', ':'), ('In', 'In'), ('year', 'year'), ('2006', '2006'), (',', ','), ('computer', 'computer'), ('scientist', 'scientist'), ('Geoffrey', 'Geoffrey'), ('Hinton', 'Hinton'), ('given', 'given'), ('new', 'new'), ('name', 'name'), ('neural', 'neural'), ('net', 'net'), ('research', 'research'), ('``', '``'), ('deep', 'deep'), ('learning', 'learning'), (',', ','), ("''", "''"), ('nowadays', 'nowadays'), (',', ','), ('become', 'become'), ('one', 'one'), ('trending', 'trending'), ('technologies', 'technology'), ('.', '.')]



============================ Sentence 58 =============================

· 2012: In 2012, Google created a deep neural network which learned to recognize the image of humans and cats in YouTube videos. 


>> Tokens are: 
 ['·', '2012', ':', 'In', '2012', ',', 'Google', 'created', 'deep', 'neural', 'network', 'learned', 'recognize', 'image', 'humans', 'cats', 'YouTube', 'videos', '.']

>> Bigrams are: 
 [('·', '2012'), ('2012', ':'), (':', 'In'), ('In', '2012'), ('2012', ','), (',', 'Google'), ('Google', 'created'), ('created', 'deep'), ('deep', 'neural'), ('neural', 'network'), ('network', 'learned'), ('learned', 'recognize'), ('recognize', 'image'), ('image', 'humans'), ('humans', 'cats'), ('cats', 'YouTube'), ('YouTube', 'videos'), ('videos', '.')]

>> Trigrams are: 
 [('·', '2012', ':'), ('2012', ':', 'In'), (':', 'In', '2012'), ('In', '2012', ','), ('2012', ',', 'Google'), (',', 'Google', 'created'), ('Google', 'created', 'deep'), ('created', 'deep', 'neural'), ('deep', 'neural', 'network'), ('neural', 'network', 'learned'), ('network', 'learned', 'recognize'), ('learned', 'recognize', 'image'), ('recognize', 'image', 'humans'), ('image', 'humans', 'cats'), ('humans', 'cats', 'YouTube'), ('cats', 'YouTube', 'videos'), ('YouTube', 'videos', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('2012', 'CD'), (':', ':'), ('In', 'IN'), ('2012', 'CD'), (',', ','), ('Google', 'NNP'), ('created', 'VBD'), ('deep', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('learned', 'VBD'), ('recognize', 'JJ'), ('image', 'NN'), ('humans', 'NNS'), ('cats', 'VBP'), ('YouTube', 'NNP'), ('videos', 'NNS'), ('.', '.')]

 (S
  ·/JJ
  2012/CD
  :/:
  In/IN
  2012/CD
  ,/,
  (NP Google/NNP)
  created/VBD
  (NP deep/JJ neural/JJ network/NN)
  learned/VBD
  (NP recognize/JJ image/NN humans/NNS)
  cats/VBP
  (NP YouTube/NNP videos/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Google', 'deep neural network', 'recognize image humans', 'YouTube videos']

>> Named Entities are: 
 [('PERSON', 'Google'), ('ORGANIZATION', 'YouTube')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('2012', '2012'), (':', ':'), ('In', 'in'), ('2012', '2012'), (',', ','), ('Google', 'googl'), ('created', 'creat'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('learned', 'learn'), ('recognize', 'recogn'), ('image', 'imag'), ('humans', 'human'), ('cats', 'cat'), ('YouTube', 'youtub'), ('videos', 'video'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('2012', '2012'), (':', ':'), ('In', 'in'), ('2012', '2012'), (',', ','), ('Google', 'googl'), ('created', 'creat'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('learned', 'learn'), ('recognize', 'recogn'), ('image', 'imag'), ('humans', 'human'), ('cats', 'cat'), ('YouTube', 'youtub'), ('videos', 'video'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('2012', '2012'), (':', ':'), ('In', 'In'), ('2012', '2012'), (',', ','), ('Google', 'Google'), ('created', 'created'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('learned', 'learned'), ('recognize', 'recognize'), ('image', 'image'), ('humans', 'human'), ('cats', 'cat'), ('YouTube', 'YouTube'), ('videos', 'video'), ('.', '.')]



============================ Sentence 59 =============================

· 2014: In 2014, the Chabot "Eugen Goostman" cleared the Turing Test. 


>> Tokens are: 
 ['·', '2014', ':', 'In', '2014', ',', 'Chabot', '``', 'Eugen', 'Goostman', "''", 'cleared', 'Turing', 'Test', '.']

>> Bigrams are: 
 [('·', '2014'), ('2014', ':'), (':', 'In'), ('In', '2014'), ('2014', ','), (',', 'Chabot'), ('Chabot', '``'), ('``', 'Eugen'), ('Eugen', 'Goostman'), ('Goostman', "''"), ("''", 'cleared'), ('cleared', 'Turing'), ('Turing', 'Test'), ('Test', '.')]

>> Trigrams are: 
 [('·', '2014', ':'), ('2014', ':', 'In'), (':', 'In', '2014'), ('In', '2014', ','), ('2014', ',', 'Chabot'), (',', 'Chabot', '``'), ('Chabot', '``', 'Eugen'), ('``', 'Eugen', 'Goostman'), ('Eugen', 'Goostman', "''"), ('Goostman', "''", 'cleared'), ("''", 'cleared', 'Turing'), ('cleared', 'Turing', 'Test'), ('Turing', 'Test', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('2014', 'CD'), (':', ':'), ('In', 'IN'), ('2014', 'CD'), (',', ','), ('Chabot', 'NNP'), ('``', '``'), ('Eugen', 'NNP'), ('Goostman', 'NNP'), ("''", "''"), ('cleared', 'VBD'), ('Turing', 'NNP'), ('Test', 'NNP'), ('.', '.')]

 (S
  ·/JJ
  2014/CD
  :/:
  In/IN
  2014/CD
  ,/,
  (NP Chabot/NNP)
  ``/``
  (NP Eugen/NNP Goostman/NNP)
  ''/''
  cleared/VBD
  (NP Turing/NNP Test/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Chabot', 'Eugen Goostman', 'Turing Test']

>> Named Entities are: 
 [('PERSON', 'Chabot'), ('PERSON', 'Eugen Goostman'), ('PERSON', 'Turing Test')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('2014', '2014'), (':', ':'), ('In', 'in'), ('2014', '2014'), (',', ','), ('Chabot', 'chabot'), ('``', '``'), ('Eugen', 'eugen'), ('Goostman', 'goostman'), ("''", "''"), ('cleared', 'clear'), ('Turing', 'ture'), ('Test', 'test'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('2014', '2014'), (':', ':'), ('In', 'in'), ('2014', '2014'), (',', ','), ('Chabot', 'chabot'), ('``', '``'), ('Eugen', 'eugen'), ('Goostman', 'goostman'), ("''", "''"), ('cleared', 'clear'), ('Turing', 'ture'), ('Test', 'test'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('2014', '2014'), (':', ':'), ('In', 'In'), ('2014', '2014'), (',', ','), ('Chabot', 'Chabot'), ('``', '``'), ('Eugen', 'Eugen'), ('Goostman', 'Goostman'), ("''", "''"), ('cleared', 'cleared'), ('Turing', 'Turing'), ('Test', 'Test'), ('.', '.')]



============================ Sentence 60 =============================

It was the first Chabot who convinced the 33% of human judges that it was not a machine. 


>> Tokens are: 
 ['It', 'first', 'Chabot', 'convinced', '33', '%', 'human', 'judges', 'machine', '.']

>> Bigrams are: 
 [('It', 'first'), ('first', 'Chabot'), ('Chabot', 'convinced'), ('convinced', '33'), ('33', '%'), ('%', 'human'), ('human', 'judges'), ('judges', 'machine'), ('machine', '.')]

>> Trigrams are: 
 [('It', 'first', 'Chabot'), ('first', 'Chabot', 'convinced'), ('Chabot', 'convinced', '33'), ('convinced', '33', '%'), ('33', '%', 'human'), ('%', 'human', 'judges'), ('human', 'judges', 'machine'), ('judges', 'machine', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('first', 'RB'), ('Chabot', 'NNP'), ('convinced', 'VBD'), ('33', 'CD'), ('%', 'NN'), ('human', 'JJ'), ('judges', 'NNS'), ('machine', 'NN'), ('.', '.')]

 (S
  It/PRP
  first/RB
  (NP Chabot/NNP)
  convinced/VBD
  33/CD
  (NP %/NN)
  (NP human/JJ judges/NNS machine/NN)
  ./.) 


>> Noun Phrases are: 
 ['Chabot', '%', 'human judges machine']

>> Named Entities are: 
 [('PERSON', 'Chabot')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('first', 'first'), ('Chabot', 'chabot'), ('convinced', 'convinc'), ('33', '33'), ('%', '%'), ('human', 'human'), ('judges', 'judg'), ('machine', 'machin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('first', 'first'), ('Chabot', 'chabot'), ('convinced', 'convinc'), ('33', '33'), ('%', '%'), ('human', 'human'), ('judges', 'judg'), ('machine', 'machin'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('first', 'first'), ('Chabot', 'Chabot'), ('convinced', 'convinced'), ('33', '33'), ('%', '%'), ('human', 'human'), ('judges', 'judge'), ('machine', 'machine'), ('.', '.')]



============================ Sentence 61 =============================

· 2014: DeepFace was a deep neural network created by Facebook, and they claimed that it could recognize a person with the same precision as a human can do. 


>> Tokens are: 
 ['·', '2014', ':', 'DeepFace', 'deep', 'neural', 'network', 'created', 'Facebook', ',', 'claimed', 'could', 'recognize', 'person', 'precision', 'human', '.']

>> Bigrams are: 
 [('·', '2014'), ('2014', ':'), (':', 'DeepFace'), ('DeepFace', 'deep'), ('deep', 'neural'), ('neural', 'network'), ('network', 'created'), ('created', 'Facebook'), ('Facebook', ','), (',', 'claimed'), ('claimed', 'could'), ('could', 'recognize'), ('recognize', 'person'), ('person', 'precision'), ('precision', 'human'), ('human', '.')]

>> Trigrams are: 
 [('·', '2014', ':'), ('2014', ':', 'DeepFace'), (':', 'DeepFace', 'deep'), ('DeepFace', 'deep', 'neural'), ('deep', 'neural', 'network'), ('neural', 'network', 'created'), ('network', 'created', 'Facebook'), ('created', 'Facebook', ','), ('Facebook', ',', 'claimed'), (',', 'claimed', 'could'), ('claimed', 'could', 'recognize'), ('could', 'recognize', 'person'), ('recognize', 'person', 'precision'), ('person', 'precision', 'human'), ('precision', 'human', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('2014', 'CD'), (':', ':'), ('DeepFace', 'NNP'), ('deep', 'VBZ'), ('neural', 'JJ'), ('network', 'NN'), ('created', 'VBD'), ('Facebook', 'NNP'), (',', ','), ('claimed', 'VBD'), ('could', 'MD'), ('recognize', 'VB'), ('person', 'NN'), ('precision', 'NN'), ('human', 'NN'), ('.', '.')]

 (S
  ·/JJ
  2014/CD
  :/:
  (NP DeepFace/NNP)
  deep/VBZ
  (NP neural/JJ network/NN)
  created/VBD
  (NP Facebook/NNP)
  ,/,
  claimed/VBD
  could/MD
  recognize/VB
  (NP person/NN precision/NN human/NN)
  ./.) 


>> Noun Phrases are: 
 ['DeepFace', 'neural network', 'Facebook', 'person precision human']

>> Named Entities are: 
 [('ORGANIZATION', 'DeepFace'), ('PERSON', 'Facebook')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('2014', '2014'), (':', ':'), ('DeepFace', 'deepfac'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('created', 'creat'), ('Facebook', 'facebook'), (',', ','), ('claimed', 'claim'), ('could', 'could'), ('recognize', 'recogn'), ('person', 'person'), ('precision', 'precis'), ('human', 'human'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('2014', '2014'), (':', ':'), ('DeepFace', 'deepfac'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('created', 'creat'), ('Facebook', 'facebook'), (',', ','), ('claimed', 'claim'), ('could', 'could'), ('recognize', 'recogn'), ('person', 'person'), ('precision', 'precis'), ('human', 'human'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('2014', '2014'), (':', ':'), ('DeepFace', 'DeepFace'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('created', 'created'), ('Facebook', 'Facebook'), (',', ','), ('claimed', 'claimed'), ('could', 'could'), ('recognize', 'recognize'), ('person', 'person'), ('precision', 'precision'), ('human', 'human'), ('.', '.')]



============================ Sentence 62 =============================

· 2016: AlphaGo beat the world's number second player Lee sedol at Go game. 


>> Tokens are: 
 ['·', '2016', ':', 'AlphaGo', 'beat', 'world', "'s", 'number', 'second', 'player', 'Lee', 'sedol', 'Go', 'game', '.']

>> Bigrams are: 
 [('·', '2016'), ('2016', ':'), (':', 'AlphaGo'), ('AlphaGo', 'beat'), ('beat', 'world'), ('world', "'s"), ("'s", 'number'), ('number', 'second'), ('second', 'player'), ('player', 'Lee'), ('Lee', 'sedol'), ('sedol', 'Go'), ('Go', 'game'), ('game', '.')]

>> Trigrams are: 
 [('·', '2016', ':'), ('2016', ':', 'AlphaGo'), (':', 'AlphaGo', 'beat'), ('AlphaGo', 'beat', 'world'), ('beat', 'world', "'s"), ('world', "'s", 'number'), ("'s", 'number', 'second'), ('number', 'second', 'player'), ('second', 'player', 'Lee'), ('player', 'Lee', 'sedol'), ('Lee', 'sedol', 'Go'), ('sedol', 'Go', 'game'), ('Go', 'game', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('2016', 'CD'), (':', ':'), ('AlphaGo', 'NNP'), ('beat', 'VBD'), ('world', 'NN'), ("'s", 'POS'), ('number', 'NN'), ('second', 'JJ'), ('player', 'NN'), ('Lee', 'NNP'), ('sedol', 'VBD'), ('Go', 'NNP'), ('game', 'NN'), ('.', '.')]

 (S
  ·/JJ
  2016/CD
  :/:
  (NP AlphaGo/NNP)
  beat/VBD
  (NP world/NN)
  's/POS
  (NP number/NN)
  (NP second/JJ player/NN Lee/NNP)
  sedol/VBD
  (NP Go/NNP game/NN)
  ./.) 


>> Noun Phrases are: 
 ['AlphaGo', 'world', 'number', 'second player Lee', 'Go game']

>> Named Entities are: 
 [('ORGANIZATION', 'AlphaGo'), ('PERSON', 'Lee')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('2016', '2016'), (':', ':'), ('AlphaGo', 'alphago'), ('beat', 'beat'), ('world', 'world'), ("'s", "'s"), ('number', 'number'), ('second', 'second'), ('player', 'player'), ('Lee', 'lee'), ('sedol', 'sedol'), ('Go', 'go'), ('game', 'game'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('2016', '2016'), (':', ':'), ('AlphaGo', 'alphago'), ('beat', 'beat'), ('world', 'world'), ("'s", "'s"), ('number', 'number'), ('second', 'second'), ('player', 'player'), ('Lee', 'lee'), ('sedol', 'sedol'), ('Go', 'go'), ('game', 'game'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('2016', '2016'), (':', ':'), ('AlphaGo', 'AlphaGo'), ('beat', 'beat'), ('world', 'world'), ("'s", "'s"), ('number', 'number'), ('second', 'second'), ('player', 'player'), ('Lee', 'Lee'), ('sedol', 'sedol'), ('Go', 'Go'), ('game', 'game'), ('.', '.')]



============================ Sentence 63 =============================

In 2017 it beat the number one player of this game Ke Jie. 


>> Tokens are: 
 ['In', '2017', 'beat', 'number', 'one', 'player', 'game', 'Ke', 'Jie', '.']

>> Bigrams are: 
 [('In', '2017'), ('2017', 'beat'), ('beat', 'number'), ('number', 'one'), ('one', 'player'), ('player', 'game'), ('game', 'Ke'), ('Ke', 'Jie'), ('Jie', '.')]

>> Trigrams are: 
 [('In', '2017', 'beat'), ('2017', 'beat', 'number'), ('beat', 'number', 'one'), ('number', 'one', 'player'), ('one', 'player', 'game'), ('player', 'game', 'Ke'), ('game', 'Ke', 'Jie'), ('Ke', 'Jie', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('2017', 'CD'), ('beat', 'NN'), ('number', 'NN'), ('one', 'CD'), ('player', 'NN'), ('game', 'NN'), ('Ke', 'NNP'), ('Jie', 'NNP'), ('.', '.')]

 (S
  In/IN
  2017/CD
  (NP beat/NN number/NN)
  one/CD
  (NP player/NN game/NN Ke/NNP Jie/NNP)
  ./.) 


>> Noun Phrases are: 
 ['beat number', 'player game Ke Jie']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('2017', '2017'), ('beat', 'beat'), ('number', 'number'), ('one', 'one'), ('player', 'player'), ('game', 'game'), ('Ke', 'ke'), ('Jie', 'jie'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('2017', '2017'), ('beat', 'beat'), ('number', 'number'), ('one', 'one'), ('player', 'player'), ('game', 'game'), ('Ke', 'ke'), ('Jie', 'jie'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('2017', '2017'), ('beat', 'beat'), ('number', 'number'), ('one', 'one'), ('player', 'player'), ('game', 'game'), ('Ke', 'Ke'), ('Jie', 'Jie'), ('.', '.')]



============================ Sentence 64 =============================

· 2017: In 2017, the Alphabet's Jigsaw team built an intelligent system that was able to learn the online trolling. 


>> Tokens are: 
 ['·', '2017', ':', 'In', '2017', ',', 'Alphabet', "'s", 'Jigsaw', 'team', 'built', 'intelligent', 'system', 'able', 'learn', 'online', 'trolling', '.']

>> Bigrams are: 
 [('·', '2017'), ('2017', ':'), (':', 'In'), ('In', '2017'), ('2017', ','), (',', 'Alphabet'), ('Alphabet', "'s"), ("'s", 'Jigsaw'), ('Jigsaw', 'team'), ('team', 'built'), ('built', 'intelligent'), ('intelligent', 'system'), ('system', 'able'), ('able', 'learn'), ('learn', 'online'), ('online', 'trolling'), ('trolling', '.')]

>> Trigrams are: 
 [('·', '2017', ':'), ('2017', ':', 'In'), (':', 'In', '2017'), ('In', '2017', ','), ('2017', ',', 'Alphabet'), (',', 'Alphabet', "'s"), ('Alphabet', "'s", 'Jigsaw'), ("'s", 'Jigsaw', 'team'), ('Jigsaw', 'team', 'built'), ('team', 'built', 'intelligent'), ('built', 'intelligent', 'system'), ('intelligent', 'system', 'able'), ('system', 'able', 'learn'), ('able', 'learn', 'online'), ('learn', 'online', 'trolling'), ('online', 'trolling', '.')]

>> POS Tags are: 
 [('·', 'JJ'), ('2017', 'CD'), (':', ':'), ('In', 'IN'), ('2017', 'CD'), (',', ','), ('Alphabet', 'NNP'), ("'s", 'POS'), ('Jigsaw', 'NNP'), ('team', 'NN'), ('built', 'VBN'), ('intelligent', 'JJ'), ('system', 'NN'), ('able', 'JJ'), ('learn', 'JJ'), ('online', 'NN'), ('trolling', 'NN'), ('.', '.')]

 (S
  ·/JJ
  2017/CD
  :/:
  In/IN
  2017/CD
  ,/,
  (NP Alphabet/NNP)
  's/POS
  (NP Jigsaw/NNP team/NN)
  built/VBN
  (NP intelligent/JJ system/NN)
  (NP able/JJ learn/JJ online/NN trolling/NN)
  ./.) 


>> Noun Phrases are: 
 ['Alphabet', 'Jigsaw team', 'intelligent system', 'able learn online trolling']

>> Named Entities are: 
 [('PERSON', 'Alphabet'), ('ORGANIZATION', 'Jigsaw')] 

>> Stemming using Porter Stemmer: 
 [('·', '·'), ('2017', '2017'), (':', ':'), ('In', 'in'), ('2017', '2017'), (',', ','), ('Alphabet', 'alphabet'), ("'s", "'s"), ('Jigsaw', 'jigsaw'), ('team', 'team'), ('built', 'built'), ('intelligent', 'intellig'), ('system', 'system'), ('able', 'abl'), ('learn', 'learn'), ('online', 'onlin'), ('trolling', 'troll'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('·', '·'), ('2017', '2017'), (':', ':'), ('In', 'in'), ('2017', '2017'), (',', ','), ('Alphabet', 'alphabet'), ("'s", "'s"), ('Jigsaw', 'jigsaw'), ('team', 'team'), ('built', 'built'), ('intelligent', 'intellig'), ('system', 'system'), ('able', 'abl'), ('learn', 'learn'), ('online', 'onlin'), ('trolling', 'troll'), ('.', '.')]

>> Lemmatization: 
 [('·', '·'), ('2017', '2017'), (':', ':'), ('In', 'In'), ('2017', '2017'), (',', ','), ('Alphabet', 'Alphabet'), ("'s", "'s"), ('Jigsaw', 'Jigsaw'), ('team', 'team'), ('built', 'built'), ('intelligent', 'intelligent'), ('system', 'system'), ('able', 'able'), ('learn', 'learn'), ('online', 'online'), ('trolling', 'trolling'), ('.', '.')]



============================ Sentence 65 =============================

It used to read millions of comments of different websites to learn to stop online trolling. 


>> Tokens are: 
 ['It', 'used', 'read', 'millions', 'comments', 'different', 'websites', 'learn', 'stop', 'online', 'trolling', '.']

>> Bigrams are: 
 [('It', 'used'), ('used', 'read'), ('read', 'millions'), ('millions', 'comments'), ('comments', 'different'), ('different', 'websites'), ('websites', 'learn'), ('learn', 'stop'), ('stop', 'online'), ('online', 'trolling'), ('trolling', '.')]

>> Trigrams are: 
 [('It', 'used', 'read'), ('used', 'read', 'millions'), ('read', 'millions', 'comments'), ('millions', 'comments', 'different'), ('comments', 'different', 'websites'), ('different', 'websites', 'learn'), ('websites', 'learn', 'stop'), ('learn', 'stop', 'online'), ('stop', 'online', 'trolling'), ('online', 'trolling', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('used', 'VBD'), ('read', 'JJ'), ('millions', 'NNS'), ('comments', 'NNS'), ('different', 'JJ'), ('websites', 'NNS'), ('learn', 'VBP'), ('stop', 'JJ'), ('online', 'NN'), ('trolling', 'NN'), ('.', '.')]

 (S
  It/PRP
  used/VBD
  (NP read/JJ millions/NNS comments/NNS)
  (NP different/JJ websites/NNS)
  learn/VBP
  (NP stop/JJ online/NN trolling/NN)
  ./.) 


>> Noun Phrases are: 
 ['read millions comments', 'different websites', 'stop online trolling']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('used', 'use'), ('read', 'read'), ('millions', 'million'), ('comments', 'comment'), ('different', 'differ'), ('websites', 'websit'), ('learn', 'learn'), ('stop', 'stop'), ('online', 'onlin'), ('trolling', 'troll'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('used', 'use'), ('read', 'read'), ('millions', 'million'), ('comments', 'comment'), ('different', 'differ'), ('websites', 'websit'), ('learn', 'learn'), ('stop', 'stop'), ('online', 'onlin'), ('trolling', 'troll'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('used', 'used'), ('read', 'read'), ('millions', 'million'), ('comments', 'comment'), ('different', 'different'), ('websites', 'website'), ('learn', 'learn'), ('stop', 'stop'), ('online', 'online'), ('trolling', 'trolling'), ('.', '.')]



============================ Sentence 66 =============================

Machine Learning at present: Now machine learning has got a great advancement in its research, and it is present everywhere around us, such as self-driving cars, Amazon Alexa, Catboats, recommender system, and many more. 


>> Tokens are: 
 ['Machine', 'Learning', 'present', ':', 'Now', 'machine', 'learning', 'got', 'great', 'advancement', 'research', ',', 'present', 'everywhere', 'around', 'us', ',', 'self-driving', 'cars', ',', 'Amazon', 'Alexa', ',', 'Catboats', ',', 'recommender', 'system', ',', 'many', '.']

>> Bigrams are: 
 [('Machine', 'Learning'), ('Learning', 'present'), ('present', ':'), (':', 'Now'), ('Now', 'machine'), ('machine', 'learning'), ('learning', 'got'), ('got', 'great'), ('great', 'advancement'), ('advancement', 'research'), ('research', ','), (',', 'present'), ('present', 'everywhere'), ('everywhere', 'around'), ('around', 'us'), ('us', ','), (',', 'self-driving'), ('self-driving', 'cars'), ('cars', ','), (',', 'Amazon'), ('Amazon', 'Alexa'), ('Alexa', ','), (',', 'Catboats'), ('Catboats', ','), (',', 'recommender'), ('recommender', 'system'), ('system', ','), (',', 'many'), ('many', '.')]

>> Trigrams are: 
 [('Machine', 'Learning', 'present'), ('Learning', 'present', ':'), ('present', ':', 'Now'), (':', 'Now', 'machine'), ('Now', 'machine', 'learning'), ('machine', 'learning', 'got'), ('learning', 'got', 'great'), ('got', 'great', 'advancement'), ('great', 'advancement', 'research'), ('advancement', 'research', ','), ('research', ',', 'present'), (',', 'present', 'everywhere'), ('present', 'everywhere', 'around'), ('everywhere', 'around', 'us'), ('around', 'us', ','), ('us', ',', 'self-driving'), (',', 'self-driving', 'cars'), ('self-driving', 'cars', ','), ('cars', ',', 'Amazon'), (',', 'Amazon', 'Alexa'), ('Amazon', 'Alexa', ','), ('Alexa', ',', 'Catboats'), (',', 'Catboats', ','), ('Catboats', ',', 'recommender'), (',', 'recommender', 'system'), ('recommender', 'system', ','), ('system', ',', 'many'), (',', 'many', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('Learning', 'VBG'), ('present', 'JJ'), (':', ':'), ('Now', 'RB'), ('machine', 'NN'), ('learning', 'NN'), ('got', 'VBD'), ('great', 'JJ'), ('advancement', 'JJ'), ('research', 'NN'), (',', ','), ('present', 'JJ'), ('everywhere', 'RB'), ('around', 'IN'), ('us', 'PRP'), (',', ','), ('self-driving', 'JJ'), ('cars', 'NNS'), (',', ','), ('Amazon', 'NNP'), ('Alexa', 'NNP'), (',', ','), ('Catboats', 'NNP'), (',', ','), ('recommender', 'NN'), ('system', 'NN'), (',', ','), ('many', 'JJ'), ('.', '.')]

 (S
  (NP Machine/NN)
  Learning/VBG
  present/JJ
  :/:
  Now/RB
  (NP machine/NN learning/NN)
  got/VBD
  (NP great/JJ advancement/JJ research/NN)
  ,/,
  present/JJ
  everywhere/RB
  around/IN
  us/PRP
  ,/,
  (NP self-driving/JJ cars/NNS)
  ,/,
  (NP Amazon/NNP Alexa/NNP)
  ,/,
  (NP Catboats/NNP)
  ,/,
  (NP recommender/NN system/NN)
  ,/,
  many/JJ
  ./.) 


>> Noun Phrases are: 
 ['Machine', 'machine learning', 'great advancement research', 'self-driving cars', 'Amazon Alexa', 'Catboats', 'recommender system']

>> Named Entities are: 
 [('GPE', 'Machine'), ('PERSON', 'Amazon Alexa'), ('GPE', 'Catboats')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('present', 'present'), (':', ':'), ('Now', 'now'), ('machine', 'machin'), ('learning', 'learn'), ('got', 'got'), ('great', 'great'), ('advancement', 'advanc'), ('research', 'research'), (',', ','), ('present', 'present'), ('everywhere', 'everywher'), ('around', 'around'), ('us', 'us'), (',', ','), ('self-driving', 'self-driv'), ('cars', 'car'), (',', ','), ('Amazon', 'amazon'), ('Alexa', 'alexa'), (',', ','), ('Catboats', 'catboat'), (',', ','), ('recommender', 'recommend'), ('system', 'system'), (',', ','), ('many', 'mani'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('Learning', 'learn'), ('present', 'present'), (':', ':'), ('Now', 'now'), ('machine', 'machin'), ('learning', 'learn'), ('got', 'got'), ('great', 'great'), ('advancement', 'advanc'), ('research', 'research'), (',', ','), ('present', 'present'), ('everywhere', 'everywher'), ('around', 'around'), ('us', 'us'), (',', ','), ('self-driving', 'self-driv'), ('cars', 'car'), (',', ','), ('Amazon', 'amazon'), ('Alexa', 'alexa'), (',', ','), ('Catboats', 'catboat'), (',', ','), ('recommender', 'recommend'), ('system', 'system'), (',', ','), ('many', 'mani'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('Learning', 'Learning'), ('present', 'present'), (':', ':'), ('Now', 'Now'), ('machine', 'machine'), ('learning', 'learning'), ('got', 'got'), ('great', 'great'), ('advancement', 'advancement'), ('research', 'research'), (',', ','), ('present', 'present'), ('everywhere', 'everywhere'), ('around', 'around'), ('us', 'u'), (',', ','), ('self-driving', 'self-driving'), ('cars', 'car'), (',', ','), ('Amazon', 'Amazon'), ('Alexa', 'Alexa'), (',', ','), ('Catboats', 'Catboats'), (',', ','), ('recommender', 'recommender'), ('system', 'system'), (',', ','), ('many', 'many'), ('.', '.')]



============================ Sentence 67 =============================

It includes Supervised, unsupervised, and reinforcement learning with clustering, classification, decision tree, SVM algorithms, etc. 


>> Tokens are: 
 ['It', 'includes', 'Supervised', ',', 'unsupervised', ',', 'reinforcement', 'learning', 'clustering', ',', 'classification', ',', 'decision', 'tree', ',', 'SVM', 'algorithms', ',', 'etc', '.']

>> Bigrams are: 
 [('It', 'includes'), ('includes', 'Supervised'), ('Supervised', ','), (',', 'unsupervised'), ('unsupervised', ','), (',', 'reinforcement'), ('reinforcement', 'learning'), ('learning', 'clustering'), ('clustering', ','), (',', 'classification'), ('classification', ','), (',', 'decision'), ('decision', 'tree'), ('tree', ','), (',', 'SVM'), ('SVM', 'algorithms'), ('algorithms', ','), (',', 'etc'), ('etc', '.')]

>> Trigrams are: 
 [('It', 'includes', 'Supervised'), ('includes', 'Supervised', ','), ('Supervised', ',', 'unsupervised'), (',', 'unsupervised', ','), ('unsupervised', ',', 'reinforcement'), (',', 'reinforcement', 'learning'), ('reinforcement', 'learning', 'clustering'), ('learning', 'clustering', ','), ('clustering', ',', 'classification'), (',', 'classification', ','), ('classification', ',', 'decision'), (',', 'decision', 'tree'), ('decision', 'tree', ','), ('tree', ',', 'SVM'), (',', 'SVM', 'algorithms'), ('SVM', 'algorithms', ','), ('algorithms', ',', 'etc'), (',', 'etc', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('includes', 'VBZ'), ('Supervised', 'VBN'), (',', ','), ('unsupervised', 'JJ'), (',', ','), ('reinforcement', 'JJ'), ('learning', 'VBG'), ('clustering', 'NN'), (',', ','), ('classification', 'NN'), (',', ','), ('decision', 'NN'), ('tree', 'NN'), (',', ','), ('SVM', 'NNP'), ('algorithms', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')]

 (S
  It/PRP
  includes/VBZ
  Supervised/VBN
  ,/,
  unsupervised/JJ
  ,/,
  reinforcement/JJ
  learning/VBG
  (NP clustering/NN)
  ,/,
  (NP classification/NN)
  ,/,
  (NP decision/NN tree/NN)
  ,/,
  (NP SVM/NNP algorithms/NN)
  ,/,
  etc/FW
  ./.) 


>> Noun Phrases are: 
 ['clustering', 'classification', 'decision tree', 'SVM algorithms']

>> Named Entities are: 
 [('ORGANIZATION', 'SVM')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('includes', 'includ'), ('Supervised', 'supervis'), (',', ','), ('unsupervised', 'unsupervis'), (',', ','), ('reinforcement', 'reinforc'), ('learning', 'learn'), ('clustering', 'cluster'), (',', ','), ('classification', 'classif'), (',', ','), ('decision', 'decis'), ('tree', 'tree'), (',', ','), ('SVM', 'svm'), ('algorithms', 'algorithm'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('includes', 'includ'), ('Supervised', 'supervis'), (',', ','), ('unsupervised', 'unsupervis'), (',', ','), ('reinforcement', 'reinforc'), ('learning', 'learn'), ('clustering', 'cluster'), (',', ','), ('classification', 'classif'), (',', ','), ('decision', 'decis'), ('tree', 'tree'), (',', ','), ('SVM', 'svm'), ('algorithms', 'algorithm'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('includes', 'includes'), ('Supervised', 'Supervised'), (',', ','), ('unsupervised', 'unsupervised'), (',', ','), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('clustering', 'clustering'), (',', ','), ('classification', 'classification'), (',', ','), ('decision', 'decision'), ('tree', 'tree'), (',', ','), ('SVM', 'SVM'), ('algorithms', 'algorithm'), (',', ','), ('etc', 'etc'), ('.', '.')]

