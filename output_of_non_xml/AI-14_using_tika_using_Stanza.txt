

========================== Sentence 1 ===========================

 AI-14  Knowledge Base 

Tokens are: 
>> ['AI', '-14', 'Knowledge', 'Base'] 

 UPOS tags are: 
>> [('AI', 'ADP'), ('-14', 'NUM'), ('Knowledge', 'NOUN'), ('Base', 'NOUN')] 

 XPOS tags are: 
>> [('AI', 'IN'), ('-14', 'CD'), ('Knowledge', 'NN'), ('Base', 'NN')] 

 Lemmas are: 
>> [('AI', 'ai'), ('-14', '-14'), ('Knowledge', 'knowledge'), ('Base', 'base')] 

 Dependency tags are: 
>> [(('AI', 'Base'), 'case'), (('-14', 'Base'), 'nummod'), (('Knowledge', 'Base'), 'compound'), (('Base', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 It contains domain-specific and high-quality knowledge. 

Tokens are: 
>> ['It', 'contains', 'domain-specific', 'and', 'high', '-', 'quality', 'knowledge', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('contains', 'VERB'), ('domain-specific', 'ADJ'), ('and', 'CCONJ'), ('high', 'ADJ'), ('-', 'PUNCT'), ('quality', 'ADJ'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('contains', 'VBZ'), ('domain-specific', 'JJ'), ('and', 'CC'), ('high', 'JJ'), ('-', 'HYPH'), ('quality', 'JJ'), ('knowledge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('contains', 'contain'), ('domain-specific', 'domain-specific'), ('and', 'and'), ('high', 'high'), ('-', '-'), ('quality', 'quality'), ('knowledge', 'knowledge'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'contains'), 'nsubj'), (('contains', 'root'), 'root'), (('domain-specific', 'knowledge'), 'amod'), (('and', 'quality'), 'cc'), (('high', 'quality'), 'amod'), (('-', 'quality'), 'punct'), (('quality', 'domain-specific'), 'conj'), (('knowledge', 'contains'), 'obj'), (('.', 'contains'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 3 ===========================

 Knowledge is required to exhibit intelligence. 

Tokens are: 
>> ['Knowledge', 'is', 'required', 'to', 'exhibit', 'intelligence', '.'] 

 UPOS tags are: 
>> [('Knowledge', 'NOUN'), ('is', 'AUX'), ('required', 'VERB'), ('to', 'PART'), ('exhibit', 'VERB'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Knowledge', 'NN'), ('is', 'VBZ'), ('required', 'VBN'), ('to', 'TO'), ('exhibit', 'VB'), ('intelligence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Knowledge', 'knowledge'), ('is', 'be'), ('required', 'require'), ('to', 'to'), ('exhibit', 'exhibit'), ('intelligence', 'intelligence'), ('.', '.')] 

 Dependency tags are: 
>> [(('Knowledge', 'required'), 'nsubj:pass'), (('is', 'required'), 'aux:pass'), (('required', 'root'), 'root'), (('to', 'exhibit'), 'mark'), (('exhibit', 'required'), 'xcomp'), (('intelligence', 'exhibit'), 'obj'), (('.', 'required'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 4 ===========================

 The success of any ES majorly depends upon the collection of highly accurate and precise knowledge. 

Tokens are: 
>> ['The', 'success', 'of', 'any', 'ES', 'majorly', 'depends', 'upon', 'the', 'collection', 'of', 'highly', 'accurate', 'and', 'precise', 'knowledge', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('success', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('ES', 'PROPN'), ('majorly', 'ADV'), ('depends', 'VERB'), ('upon', 'ADP'), ('the', 'DET'), ('collection', 'NOUN'), ('of', 'ADP'), ('highly', 'ADV'), ('accurate', 'ADJ'), ('and', 'CCONJ'), ('precise', 'ADJ'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('success', 'NN'), ('of', 'IN'), ('any', 'DT'), ('ES', 'NNP'), ('majorly', 'RB'), ('depends', 'VBZ'), ('upon', 'IN'), ('the', 'DT'), ('collection', 'NN'), ('of', 'IN'), ('highly', 'RB'), ('accurate', 'JJ'), ('and', 'CC'), ('precise', 'JJ'), ('knowledge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('success', 'success'), ('of', 'of'), ('any', 'any'), ('ES', 'ES'), ('majorly', 'majorly'), ('depends', 'depend'), ('upon', 'upon'), ('the', 'the'), ('collection', 'collection'), ('of', 'of'), ('highly', 'highly'), ('accurate', 'accurate'), ('and', 'and'), ('precise', 'precise'), ('knowledge', 'knowledge'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'success'), 'det'), (('success', 'depends'), 'nsubj'), (('of', 'ES'), 'case'), (('any', 'ES'), 'det'), (('ES', 'success'), 'nmod'), (('majorly', 'depends'), 'advmod'), (('depends', 'root'), 'root'), (('upon', 'collection'), 'case'), (('the', 'collection'), 'det'), (('collection', 'depends'), 'obl'), (('of', 'knowledge'), 'case'), (('highly', 'accurate'), 'advmod'), (('accurate', 'knowledge'), 'amod'), (('and', 'precise'), 'cc'), (('precise', 'accurate'), 'conj'), (('knowledge', 'collection'), 'nmod'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 What is Knowledge? 

Tokens are: 
>> ['What', 'is', 'Knowledge', '?'] 

 UPOS tags are: 
>> [('What', 'PRON'), ('is', 'AUX'), ('Knowledge', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('What', 'WP'), ('is', 'VBZ'), ('Knowledge', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('What', 'what'), ('is', 'be'), ('Knowledge', 'knowledge'), ('?', '?')] 

 Dependency tags are: 
>> [(('What', 'root'), 'root'), (('is', 'What'), 'cop'), (('Knowledge', 'What'), 'nsubj'), (('?', 'What'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 The data is collection of facts. 

Tokens are: 
>> ['The', 'data', 'is', 'collection', 'of', 'facts', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('data', 'NOUN'), ('is', 'AUX'), ('collection', 'NOUN'), ('of', 'ADP'), ('facts', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('data', 'NNS'), ('is', 'VBZ'), ('collection', 'NN'), ('of', 'IN'), ('facts', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('data', 'datum'), ('is', 'be'), ('collection', 'collection'), ('of', 'of'), ('facts', 'fact'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'data'), 'det'), (('data', 'collection'), 'nsubj'), (('is', 'collection'), 'cop'), (('collection', 'root'), 'root'), (('of', 'facts'), 'case'), (('facts', 'collection'), 'nmod'), (('.', 'collection'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 The information is organized as data and facts about the task domain. 

Tokens are: 
>> ['The', 'information', 'is', 'organized', 'as', 'data', 'and', 'facts', 'about', 'the', 'task', 'domain', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('information', 'NOUN'), ('is', 'AUX'), ('organized', 'VERB'), ('as', 'ADP'), ('data', 'NOUN'), ('and', 'CCONJ'), ('facts', 'NOUN'), ('about', 'ADP'), ('the', 'DET'), ('task', 'NOUN'), ('domain', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('information', 'NN'), ('is', 'VBZ'), ('organized', 'VBN'), ('as', 'IN'), ('data', 'NNS'), ('and', 'CC'), ('facts', 'NNS'), ('about', 'IN'), ('the', 'DT'), ('task', 'NN'), ('domain', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('information', 'information'), ('is', 'be'), ('organized', 'organize'), ('as', 'as'), ('data', 'datum'), ('and', 'and'), ('facts', 'fact'), ('about', 'about'), ('the', 'the'), ('task', 'task'), ('domain', 'domain'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'information'), 'det'), (('information', 'organized'), 'nsubj:pass'), (('is', 'organized'), 'aux:pass'), (('organized', 'root'), 'root'), (('as', 'data'), 'case'), (('data', 'organized'), 'obl'), (('and', 'facts'), 'cc'), (('facts', 'data'), 'conj'), (('about', 'domain'), 'case'), (('the', 'domain'), 'det'), (('task', 'domain'), 'compound'), (('domain', 'data'), 'nmod'), (('.', 'organized'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 Data, information, and past experience combined together are termed as knowledge. 

Tokens are: 
>> ['Data', ',', 'information', ',', 'and', 'past', 'experience', 'combined', 'together', 'are', 'termed', 'as', 'knowledge', '.'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), (',', 'PUNCT'), ('information', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('past', 'ADJ'), ('experience', 'NOUN'), ('combined', 'VERB'), ('together', 'ADV'), ('are', 'AUX'), ('termed', 'VERB'), ('as', 'ADP'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Data', 'NNS'), (',', ','), ('information', 'NN'), (',', ','), ('and', 'CC'), ('past', 'JJ'), ('experience', 'NN'), ('combined', 'VBN'), ('together', 'RB'), ('are', 'VBP'), ('termed', 'VBN'), ('as', 'IN'), ('knowledge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Data', 'data'), (',', ','), ('information', 'information'), (',', ','), ('and', 'and'), ('past', 'past'), ('experience', 'experience'), ('combined', 'combine'), ('together', 'together'), ('are', 'be'), ('termed', 'term'), ('as', 'as'), ('knowledge', 'knowledge'), ('.', '.')] 

 Dependency tags are: 
>> [(('Data', 'termed'), 'nsubj:pass'), ((',', 'information'), 'punct'), (('information', 'Data'), 'conj'), ((',', 'experience'), 'punct'), (('and', 'experience'), 'cc'), (('past', 'experience'), 'amod'), (('experience', 'Data'), 'conj'), (('combined', 'experience'), 'acl'), (('together', 'combined'), 'advmod'), (('are', 'termed'), 'aux:pass'), (('termed', 'root'), 'root'), (('as', 'knowledge'), 'case'), (('knowledge', 'termed'), 'obl'), (('.', 'termed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 Components of Knowledge Base 

Tokens are: 
>> ['Components', 'of', 'Knowledge', 'Base'] 

 UPOS tags are: 
>> [('Components', 'NOUN'), ('of', 'ADP'), ('Knowledge', 'NOUN'), ('Base', 'NOUN')] 

 XPOS tags are: 
>> [('Components', 'NNS'), ('of', 'IN'), ('Knowledge', 'NN'), ('Base', 'NN')] 

 Lemmas are: 
>> [('Components', 'component'), ('of', 'of'), ('Knowledge', 'knowledge'), ('Base', 'base')] 

 Dependency tags are: 
>> [(('Components', 'root'), 'root'), (('of', 'Base'), 'case'), (('Knowledge', 'Base'), 'compound'), (('Base', 'Components'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 The knowledge base of an ES is a store of both, factual and heuristic knowledge. 

Tokens are: 
>> ['The', 'knowledge', 'base', 'of', 'an', 'ES', 'is', 'a', 'store', 'of', 'both', ',', 'factual', 'and', 'heuristic', 'knowledge', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('ES', 'PROPN'), ('is', 'AUX'), ('a', 'DET'), ('store', 'NOUN'), ('of', 'ADP'), ('both', 'CCONJ'), (',', 'PUNCT'), ('factual', 'ADJ'), ('and', 'CCONJ'), ('heuristic', 'ADJ'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('of', 'IN'), ('an', 'DT'), ('ES', 'NNP'), ('is', 'VBZ'), ('a', 'DT'), ('store', 'NN'), ('of', 'IN'), ('both', 'CC'), (',', ','), ('factual', 'JJ'), ('and', 'CC'), ('heuristic', 'JJ'), ('knowledge', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('of', 'of'), ('an', 'a'), ('ES', 'ES'), ('is', 'be'), ('a', 'a'), ('store', 'store'), ('of', 'of'), ('both', 'both'), (',', ','), ('factual', 'factual'), ('and', 'and'), ('heuristic', 'heuristic'), ('knowledge', 'knowledge'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'store'), 'nsubj'), (('of', 'ES'), 'case'), (('an', 'ES'), 'det'), (('ES', 'base'), 'nmod'), (('is', 'store'), 'cop'), (('a', 'store'), 'det'), (('store', 'root'), 'root'), (('of', 'knowledge'), 'case'), (('both', 'knowledge'), 'det'), ((',', 'factual'), 'punct'), (('factual', 'knowledge'), 'amod'), (('and', 'heuristic'), 'cc'), (('heuristic', 'both'), 'conj'), (('knowledge', 'store'), 'nmod'), (('.', 'store'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 · Factual Knowledge − 

Tokens are: 
>> ['·', 'Factual', 'Knowledge', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Factual', 'ADJ'), ('Knowledge', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Factual', 'JJ'), ('Knowledge', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Factual', 'factual'), ('Knowledge', 'knowledge'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Knowledge'), 'punct'), (('Factual', 'Knowledge'), 'amod'), (('Knowledge', 'root'), 'root'), (('−', 'Knowledge'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 It is the information widely accepted by the Knowledge Engineers and scholars in the task domain. 

Tokens are: 
>> ['It', 'is', 'the', 'information', 'widely', 'accepted', 'by', 'the', 'Knowledge', 'Engineers', 'and', 'scholars', 'in', 'the', 'task', 'domain', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('information', 'NOUN'), ('widely', 'ADV'), ('accepted', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('Knowledge', 'NOUN'), ('Engineers', 'PROPN'), ('and', 'CCONJ'), ('scholars', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('task', 'NOUN'), ('domain', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('information', 'NN'), ('widely', 'RB'), ('accepted', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('Knowledge', 'NN'), ('Engineers', 'NNPS'), ('and', 'CC'), ('scholars', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('task', 'NN'), ('domain', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('information', 'information'), ('widely', 'widely'), ('accepted', 'accept'), ('by', 'by'), ('the', 'the'), ('Knowledge', 'knowledge'), ('Engineers', 'Engineer'), ('and', 'and'), ('scholars', 'scholar'), ('in', 'in'), ('the', 'the'), ('task', 'task'), ('domain', 'domain'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'information'), 'nsubj'), (('is', 'information'), 'cop'), (('the', 'information'), 'det'), (('information', 'root'), 'root'), (('widely', 'accepted'), 'advmod'), (('accepted', 'information'), 'acl'), (('by', 'Knowledge'), 'case'), (('the', 'Knowledge'), 'det'), (('Knowledge', 'accepted'), 'obl'), (('Engineers', 'accepted'), 'obl'), (('and', 'scholars'), 'cc'), (('scholars', 'Engineers'), 'conj'), (('in', 'domain'), 'case'), (('the', 'domain'), 'det'), (('task', 'domain'), 'compound'), (('domain', 'Engineers'), 'nmod'), (('.', 'information'), 'punct')]

 Named Entities are: 
>> [('the Knowledge Engineers', 'ORG')]

========================== Sentence 13 ===========================

 · Heuristic Knowledge − 

Tokens are: 
>> ['·', 'Heuristic', 'Knowledge', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Heuristic', 'ADJ'), ('Knowledge', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Heuristic', 'JJ'), ('Knowledge', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Heuristic', 'heuristic'), ('Knowledge', 'knowledge'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Knowledge'), 'punct'), (('Heuristic', 'Knowledge'), 'amod'), (('Knowledge', 'root'), 'root'), (('−', 'Knowledge'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 It is about practice, accurate judgement, one’s ability of evaluation, and guessing. 

Tokens are: 
>> ['It', 'is', 'about', 'practice', ',', 'accurate', 'judgement', ',', 'one', '’s', 'ability', 'of', 'evaluation', ',', 'and', 'guessing', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('about', 'ADP'), ('practice', 'NOUN'), (',', 'PUNCT'), ('accurate', 'ADJ'), ('judgement', 'NOUN'), (',', 'PUNCT'), ('one', 'NUM'), ('’s', 'PART'), ('ability', 'NOUN'), ('of', 'ADP'), ('evaluation', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('guessing', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('about', 'IN'), ('practice', 'NN'), (',', ','), ('accurate', 'JJ'), ('judgement', 'NN'), (',', ','), ('one', 'CD'), ('’s', 'POS'), ('ability', 'NN'), ('of', 'IN'), ('evaluation', 'NN'), (',', ','), ('and', 'CC'), ('guessing', 'VBG'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('about', 'about'), ('practice', 'practice'), (',', ','), ('accurate', 'accurate'), ('judgement', 'judgement'), (',', ','), ('one', 'one'), ('’s', "'s"), ('ability', 'ability'), ('of', 'of'), ('evaluation', 'evaluation'), (',', ','), ('and', 'and'), ('guessing', 'guess'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'practice'), 'nsubj'), (('is', 'practice'), 'cop'), (('about', 'practice'), 'case'), (('practice', 'root'), 'root'), ((',', 'judgement'), 'punct'), (('accurate', 'judgement'), 'amod'), (('judgement', 'practice'), 'conj'), ((',', 'ability'), 'punct'), (('one', 'ability'), 'nmod:poss'), (('’s', 'one'), 'case'), (('ability', 'practice'), 'conj'), (('of', 'evaluation'), 'case'), (('evaluation', 'ability'), 'nmod'), ((',', 'guessing'), 'punct'), (('and', 'guessing'), 'cc'), (('guessing', 'practice'), 'conj'), (('.', 'practice'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 15 ===========================

 Knowledge representation 

Tokens are: 
>> ['Knowledge', 'representation'] 

 UPOS tags are: 
>> [('Knowledge', 'NOUN'), ('representation', 'NOUN')] 

 XPOS tags are: 
>> [('Knowledge', 'NN'), ('representation', 'NN')] 

 Lemmas are: 
>> [('Knowledge', 'knowledge'), ('representation', 'representation')] 

 Dependency tags are: 
>> [(('Knowledge', 'representation'), 'compound'), (('representation', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 It is the method used to organize and formalize the knowledge in the knowledge base. 

Tokens are: 
>> ['It', 'is', 'the', 'method', 'used', 'to', 'organize', 'and', 'formalize', 'the', 'knowledge', 'in', 'the', 'knowledge', 'base', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('method', 'NOUN'), ('used', 'VERB'), ('to', 'PART'), ('organize', 'VERB'), ('and', 'CCONJ'), ('formalize', 'VERB'), ('the', 'DET'), ('knowledge', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('method', 'NN'), ('used', 'VBN'), ('to', 'TO'), ('organize', 'VB'), ('and', 'CC'), ('formalize', 'VB'), ('the', 'DT'), ('knowledge', 'NN'), ('in', 'IN'), ('the', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('the', 'the'), ('method', 'method'), ('used', 'use'), ('to', 'to'), ('organize', 'organize'), ('and', 'and'), ('formalize', 'formalize'), ('the', 'the'), ('knowledge', 'knowledge'), ('in', 'in'), ('the', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'method'), 'nsubj'), (('is', 'method'), 'cop'), (('the', 'method'), 'det'), (('method', 'root'), 'root'), (('used', 'method'), 'acl'), (('to', 'organize'), 'mark'), (('organize', 'used'), 'xcomp'), (('and', 'formalize'), 'cc'), (('formalize', 'organize'), 'conj'), (('the', 'knowledge'), 'det'), (('knowledge', 'organize'), 'obj'), (('in', 'base'), 'case'), (('the', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'knowledge'), 'nmod'), (('.', 'method'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 It is in the form of IF-THEN-ELSE rules. 

Tokens are: 
>> ['It', 'is', 'in', 'the', 'form', 'of', 'IF', '-', 'THEN', '-ELSE', 'rules', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('IF', 'SCONJ'), ('-', 'PUNCT'), ('THEN', 'ADV'), ('-ELSE', 'NOUN'), ('rules', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('IF', 'IN'), ('-', ','), ('THEN', 'RB'), ('-ELSE', 'NN'), ('rules', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('IF', 'if'), ('-', '-'), ('THEN', 'then'), ('-ELSE', '-else'), ('rules', 'rule'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'form'), 'nsubj'), (('is', 'form'), 'cop'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'root'), 'root'), (('of', 'rules'), 'case'), (('IF', 'rules'), 'mark'), (('-', 'rules'), 'punct'), (('THEN', 'rules'), 'advmod'), (('-ELSE', 'rules'), 'compound'), (('rules', 'form'), 'advcl'), (('.', 'form'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 Knowledge Acquisition 

Tokens are: 
>> ['Knowledge', 'Acquisition'] 

 UPOS tags are: 
>> [('Knowledge', 'NOUN'), ('Acquisition', 'NOUN')] 

 XPOS tags are: 
>> [('Knowledge', 'NN'), ('Acquisition', 'NN')] 

 Lemmas are: 
>> [('Knowledge', 'knowledge'), ('Acquisition', 'Acquisition')] 

 Dependency tags are: 
>> [(('Knowledge', 'Acquisition'), 'compound'), (('Acquisition', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 The success of any expert system majorly depends on the quality, completeness, and accuracy of the information stored in the knowledge base. 

Tokens are: 
>> ['The', 'success', 'of', 'any', 'expert', 'system', 'majorly', 'depends', 'on', 'the', 'quality', ',', 'completeness', ',', 'and', 'accuracy', 'of', 'the', 'information', 'stored', 'in', 'the', 'knowledge', 'base', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('success', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('expert', 'NOUN'), ('system', 'NOUN'), ('majorly', 'ADV'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('quality', 'NOUN'), (',', 'PUNCT'), ('completeness', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('accuracy', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('information', 'NOUN'), ('stored', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('success', 'NN'), ('of', 'IN'), ('any', 'DT'), ('expert', 'NN'), ('system', 'NN'), ('majorly', 'RB'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('quality', 'NN'), (',', ','), ('completeness', 'NN'), (',', ','), ('and', 'CC'), ('accuracy', 'NN'), ('of', 'IN'), ('the', 'DT'), ('information', 'NN'), ('stored', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('success', 'success'), ('of', 'of'), ('any', 'any'), ('expert', 'expert'), ('system', 'system'), ('majorly', 'majorly'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('quality', 'quality'), (',', ','), ('completeness', 'completeness'), (',', ','), ('and', 'and'), ('accuracy', 'accuracy'), ('of', 'of'), ('the', 'the'), ('information', 'information'), ('stored', 'store'), ('in', 'in'), ('the', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'success'), 'det'), (('success', 'depends'), 'nsubj'), (('of', 'system'), 'case'), (('any', 'system'), 'det'), (('expert', 'system'), 'compound'), (('system', 'success'), 'nmod'), (('majorly', 'depends'), 'advmod'), (('depends', 'root'), 'root'), (('on', 'quality'), 'case'), (('the', 'quality'), 'det'), (('quality', 'depends'), 'obl'), ((',', 'completeness'), 'punct'), (('completeness', 'quality'), 'conj'), ((',', 'accuracy'), 'punct'), (('and', 'accuracy'), 'cc'), (('accuracy', 'quality'), 'conj'), (('of', 'information'), 'case'), (('the', 'information'), 'det'), (('information', 'accuracy'), 'nmod'), (('stored', 'information'), 'acl'), (('in', 'base'), 'case'), (('the', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'stored'), 'obl'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 The knowledge base is formed by readings from various experts, scholars, and the Knowledge Engineers. 

Tokens are: 
>> ['The', 'knowledge', 'base', 'is', 'formed', 'by', 'readings', 'from', 'various', 'experts', ',', 'scholars', ',', 'and', 'the', 'Knowledge', 'Engineers', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('is', 'AUX'), ('formed', 'VERB'), ('by', 'ADP'), ('readings', 'NOUN'), ('from', 'ADP'), ('various', 'ADJ'), ('experts', 'NOUN'), (',', 'PUNCT'), ('scholars', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('Knowledge', 'NOUN'), ('Engineers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('is', 'VBZ'), ('formed', 'VBN'), ('by', 'IN'), ('readings', 'NNS'), ('from', 'IN'), ('various', 'JJ'), ('experts', 'NNS'), (',', ','), ('scholars', 'NNS'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('Knowledge', 'NN'), ('Engineers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('is', 'be'), ('formed', 'form'), ('by', 'by'), ('readings', 'reading'), ('from', 'from'), ('various', 'various'), ('experts', 'expert'), (',', ','), ('scholars', 'scholar'), (',', ','), ('and', 'and'), ('the', 'the'), ('Knowledge', 'knowledge'), ('Engineers', 'Engineer'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'formed'), 'nsubj:pass'), (('is', 'formed'), 'aux:pass'), (('formed', 'root'), 'root'), (('by', 'readings'), 'case'), (('readings', 'formed'), 'obl'), (('from', 'experts'), 'case'), (('various', 'experts'), 'amod'), (('experts', 'readings'), 'nmod'), ((',', 'scholars'), 'punct'), (('scholars', 'experts'), 'conj'), ((',', 'Engineers'), 'punct'), (('and', 'Engineers'), 'cc'), (('the', 'Engineers'), 'det'), (('Knowledge', 'Engineers'), 'compound'), (('Engineers', 'experts'), 'conj'), (('.', 'formed'), 'punct')]

 Named Entities are: 
>> [('the Knowledge Engineers', 'ORG')]

========================== Sentence 21 ===========================

 The knowledge engineer is a person with the qualities of empathy, quick learning, and case analyzing skills. 

Tokens are: 
>> ['The', 'knowledge', 'engineer', 'is', 'a', 'person', 'with', 'the', 'qualities', 'of', 'empathy', ',', 'quick', 'learning', ',', 'and', 'case', 'analyzing', 'skills', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('person', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('qualities', 'NOUN'), ('of', 'ADP'), ('empathy', 'NOUN'), (',', 'PUNCT'), ('quick', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('case', 'NOUN'), ('analyzing', 'VERB'), ('skills', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('person', 'NN'), ('with', 'IN'), ('the', 'DT'), ('qualities', 'NNS'), ('of', 'IN'), ('empathy', 'NN'), (',', ','), ('quick', 'JJ'), ('learning', 'NN'), (',', ','), ('and', 'CC'), ('case', 'NN'), ('analyzing', 'VBG'), ('skills', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('is', 'be'), ('a', 'a'), ('person', 'person'), ('with', 'with'), ('the', 'the'), ('qualities', 'quality'), ('of', 'of'), ('empathy', 'empathy'), (',', ','), ('quick', 'quick'), ('learning', 'learning'), (',', ','), ('and', 'and'), ('case', 'case'), ('analyzing', 'analyze'), ('skills', 'skill'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'person'), 'nsubj'), (('is', 'person'), 'cop'), (('a', 'person'), 'det'), (('person', 'root'), 'root'), (('with', 'qualities'), 'case'), (('the', 'qualities'), 'det'), (('qualities', 'person'), 'nmod'), (('of', 'empathy'), 'case'), (('empathy', 'qualities'), 'nmod'), ((',', 'learning'), 'punct'), (('quick', 'learning'), 'amod'), (('learning', 'empathy'), 'conj'), ((',', 'skills'), 'punct'), (('and', 'skills'), 'cc'), (('case', 'analyzing'), 'compound'), (('analyzing', 'skills'), 'amod'), (('skills', 'empathy'), 'conj'), (('.', 'person'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 He acquires information from subject expert by recording, interviewing, and observing him at work, etc. 

Tokens are: 
>> ['He', 'acquires', 'information', 'from', 'subject', 'expert', 'by', 'recording', ',', 'interviewing', ',', 'and', 'observing', 'him', 'at', 'work', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('acquires', 'VERB'), ('information', 'NOUN'), ('from', 'ADP'), ('subject', 'NOUN'), ('expert', 'NOUN'), ('by', 'SCONJ'), ('recording', 'VERB'), (',', 'PUNCT'), ('interviewing', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('observing', 'VERB'), ('him', 'PRON'), ('at', 'ADP'), ('work', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('acquires', 'VBZ'), ('information', 'NN'), ('from', 'IN'), ('subject', 'NN'), ('expert', 'NN'), ('by', 'IN'), ('recording', 'VBG'), (',', ','), ('interviewing', 'VBG'), (',', ','), ('and', 'CC'), ('observing', 'VBG'), ('him', 'PRP'), ('at', 'IN'), ('work', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('acquires', 'acquire'), ('information', 'information'), ('from', 'from'), ('subject', 'subject'), ('expert', 'expert'), ('by', 'by'), ('recording', 'record'), (',', ','), ('interviewing', 'interview'), (',', ','), ('and', 'and'), ('observing', 'observe'), ('him', 'he'), ('at', 'at'), ('work', 'work'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'acquires'), 'nsubj'), (('acquires', 'root'), 'root'), (('information', 'acquires'), 'obj'), (('from', 'expert'), 'case'), (('subject', 'expert'), 'compound'), (('expert', 'information'), 'nmod'), (('by', 'recording'), 'mark'), (('recording', 'acquires'), 'advcl'), ((',', 'interviewing'), 'punct'), (('interviewing', 'recording'), 'conj'), ((',', 'observing'), 'punct'), (('and', 'observing'), 'cc'), (('observing', 'recording'), 'conj'), (('him', 'observing'), 'obj'), (('at', 'work'), 'case'), (('work', 'observing'), 'obl'), ((',', 'etc'), 'punct'), (('etc', 'work'), 'conj'), (('.', 'acquires'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 23 ===========================

 He then categorizes and organizes the information in a meaningful way, in the form of IF-THEN-ELSE rules, to be used by interference machine. 

Tokens are: 
>> ['He', 'then', 'categorizes', 'and', 'organizes', 'the', 'information', 'in', 'a', 'meaningful', 'way', ',', 'in', 'the', 'form', 'of', 'IF', '-', 'THEN', '-', 'ELSE', 'rules', ',', 'to', 'be', 'used', 'by', 'interference', 'machine', '.'] 

 UPOS tags are: 
>> [('He', 'PRON'), ('then', 'ADV'), ('categorizes', 'VERB'), ('and', 'CCONJ'), ('organizes', 'VERB'), ('the', 'DET'), ('information', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('meaningful', 'ADJ'), ('way', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('IF', 'SCONJ'), ('-', 'PUNCT'), ('THEN', 'ADV'), ('-', 'PUNCT'), ('ELSE', 'ADJ'), ('rules', 'NOUN'), (',', 'PUNCT'), ('to', 'PART'), ('be', 'AUX'), ('used', 'VERB'), ('by', 'ADP'), ('interference', 'NOUN'), ('machine', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('He', 'PRP'), ('then', 'RB'), ('categorizes', 'VBZ'), ('and', 'CC'), ('organizes', 'VBZ'), ('the', 'DT'), ('information', 'NN'), ('in', 'IN'), ('a', 'DT'), ('meaningful', 'JJ'), ('way', 'NN'), (',', ','), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('IF', 'IN'), ('-', ','), ('THEN', 'RB'), ('-', ','), ('ELSE', 'JJ'), ('rules', 'NNS'), (',', ','), ('to', 'TO'), ('be', 'VB'), ('used', 'VBN'), ('by', 'IN'), ('interference', 'NN'), ('machine', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('He', 'he'), ('then', 'then'), ('categorizes', 'categorize'), ('and', 'and'), ('organizes', 'organize'), ('the', 'the'), ('information', 'information'), ('in', 'in'), ('a', 'a'), ('meaningful', 'meaningful'), ('way', 'way'), (',', ','), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('IF', 'if'), ('-', '-'), ('THEN', 'then'), ('-', '-'), ('ELSE', 'else'), ('rules', 'rule'), (',', ','), ('to', 'to'), ('be', 'be'), ('used', 'use'), ('by', 'by'), ('interference', 'interference'), ('machine', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('He', 'categorizes'), 'nsubj'), (('then', 'categorizes'), 'advmod'), (('categorizes', 'root'), 'root'), (('and', 'organizes'), 'cc'), (('organizes', 'categorizes'), 'conj'), (('the', 'information'), 'det'), (('information', 'categorizes'), 'obj'), (('in', 'way'), 'case'), (('a', 'way'), 'det'), (('meaningful', 'way'), 'amod'), (('way', 'information'), 'nmod'), ((',', 'form'), 'punct'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'categorizes'), 'obl'), (('of', 'IF'), 'case'), (('IF', 'rules'), 'mark'), (('-', 'rules'), 'punct'), (('THEN', 'rules'), 'advmod'), (('-', 'THEN'), 'punct'), (('ELSE', 'rules'), 'amod'), (('rules', 'form'), 'nmod'), ((',', 'rules'), 'punct'), (('to', 'used'), 'mark'), (('be', 'used'), 'aux:pass'), (('used', 'rules'), 'acl'), (('by', 'machine'), 'case'), (('interference', 'machine'), 'compound'), (('machine', 'used'), 'obl'), (('.', 'categorizes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 24 ===========================

 The knowledge engineer also monitors the development of the ES. 

Tokens are: 
>> ['The', 'knowledge', 'engineer', 'also', 'monitors', 'the', 'development', 'of', 'the', 'ES', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('also', 'ADV'), ('monitors', 'VERB'), ('the', 'DET'), ('development', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('ES', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('also', 'RB'), ('monitors', 'VBZ'), ('the', 'DT'), ('development', 'NN'), ('of', 'IN'), ('the', 'DT'), ('ES', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('also', 'also'), ('monitors', 'monitor'), ('the', 'the'), ('development', 'development'), ('of', 'of'), ('the', 'the'), ('ES', 'ES'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'monitors'), 'nsubj'), (('also', 'monitors'), 'advmod'), (('monitors', 'root'), 'root'), (('the', 'development'), 'det'), (('development', 'monitors'), 'obj'), (('of', 'ES'), 'case'), (('the', 'ES'), 'det'), (('ES', 'development'), 'nmod'), (('.', 'monitors'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 Inference Engine 

Tokens are: 
>> ['Inference', 'Engine'] 

 UPOS tags are: 
>> [('Inference', 'NOUN'), ('Engine', 'NOUN')] 

 XPOS tags are: 
>> [('Inference', 'NN'), ('Engine', 'NN')] 

 Lemmas are: 
>> [('Inference', 'inference'), ('Engine', 'engine')] 

 Dependency tags are: 
>> [(('Inference', 'Engine'), 'compound'), (('Engine', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 Use of efficient procedures and rules by the Inference Engine is essential in deducting a correct, flawless solution. 

Tokens are: 
>> ['Use', 'of', 'efficient', 'procedures', 'and', 'rules', 'by', 'the', 'Inference', 'Engine', 'is', 'essential', 'in', 'deducting', 'a', 'correct', ',', 'flawless', 'solution', '.'] 

 UPOS tags are: 
>> [('Use', 'NOUN'), ('of', 'ADP'), ('efficient', 'ADJ'), ('procedures', 'NOUN'), ('and', 'CCONJ'), ('rules', 'NOUN'), ('by', 'ADP'), ('the', 'DET'), ('Inference', 'NOUN'), ('Engine', 'NOUN'), ('is', 'AUX'), ('essential', 'ADJ'), ('in', 'SCONJ'), ('deducting', 'VERB'), ('a', 'DET'), ('correct', 'ADJ'), (',', 'PUNCT'), ('flawless', 'ADJ'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Use', 'NN'), ('of', 'IN'), ('efficient', 'JJ'), ('procedures', 'NNS'), ('and', 'CC'), ('rules', 'NNS'), ('by', 'IN'), ('the', 'DT'), ('Inference', 'NN'), ('Engine', 'NN'), ('is', 'VBZ'), ('essential', 'JJ'), ('in', 'IN'), ('deducting', 'VBG'), ('a', 'DT'), ('correct', 'JJ'), (',', ','), ('flawless', 'JJ'), ('solution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Use', 'use'), ('of', 'of'), ('efficient', 'efficient'), ('procedures', 'procedure'), ('and', 'and'), ('rules', 'rule'), ('by', 'by'), ('the', 'the'), ('Inference', 'inference'), ('Engine', 'engine'), ('is', 'be'), ('essential', 'essential'), ('in', 'in'), ('deducting', 'deduct'), ('a', 'a'), ('correct', 'correct'), (',', ','), ('flawless', 'flawless'), ('solution', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('Use', 'essential'), 'nsubj'), (('of', 'procedures'), 'case'), (('efficient', 'procedures'), 'amod'), (('procedures', 'Use'), 'nmod'), (('and', 'rules'), 'cc'), (('rules', 'procedures'), 'conj'), (('by', 'Engine'), 'case'), (('the', 'Engine'), 'det'), (('Inference', 'Engine'), 'compound'), (('Engine', 'procedures'), 'nmod'), (('is', 'essential'), 'cop'), (('essential', 'root'), 'root'), (('in', 'deducting'), 'mark'), (('deducting', 'essential'), 'advcl'), (('a', 'solution'), 'det'), (('correct', 'solution'), 'amod'), ((',', 'solution'), 'punct'), (('flawless', 'solution'), 'amod'), (('solution', 'deducting'), 'obj'), (('.', 'essential'), 'punct')]

 Named Entities are: 
>> [('the Inference Engine', 'LAW')]

========================== Sentence 27 ===========================

 In case of knowledge-based ES, the Inference Engine acquires and manipulates the knowledge from the knowledge base to arrive at a particular solution. 

Tokens are: 
>> ['In', 'case', 'of', 'knowledge', '-', 'based', 'ES', ',', 'the', 'Inference', 'Engine', 'acquires', 'and', 'manipulates', 'the', 'knowledge', 'from', 'the', 'knowledge', 'base', 'to', 'arrive', 'at', 'a', 'particular', 'solution', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('case', 'NOUN'), ('of', 'ADP'), ('knowledge', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('ES', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('Inference', 'NOUN'), ('Engine', 'NOUN'), ('acquires', 'VERB'), ('and', 'CCONJ'), ('manipulates', 'VERB'), ('the', 'DET'), ('knowledge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('to', 'PART'), ('arrive', 'VERB'), ('at', 'ADP'), ('a', 'DET'), ('particular', 'ADJ'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('case', 'NN'), ('of', 'IN'), ('knowledge', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('ES', 'NN'), (',', ','), ('the', 'DT'), ('Inference', 'NN'), ('Engine', 'NN'), ('acquires', 'VBZ'), ('and', 'CC'), ('manipulates', 'VBZ'), ('the', 'DT'), ('knowledge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('to', 'TO'), ('arrive', 'VB'), ('at', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('solution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('case', 'case'), ('of', 'of'), ('knowledge', 'knowledge'), ('-', '-'), ('based', 'base'), ('ES', 'es'), (',', ','), ('the', 'the'), ('Inference', 'inference'), ('Engine', 'engine'), ('acquires', 'acquire'), ('and', 'and'), ('manipulates', 'manipulate'), ('the', 'the'), ('knowledge', 'knowledge'), ('from', 'from'), ('the', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('to', 'to'), ('arrive', 'arrive'), ('at', 'at'), ('a', 'a'), ('particular', 'particular'), ('solution', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'ES'), 'case'), (('case', 'In'), 'fixed'), (('of', 'ES'), 'case'), (('knowledge', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'ES'), 'amod'), (('ES', 'acquires'), 'obl'), ((',', 'acquires'), 'punct'), (('the', 'Engine'), 'det'), (('Inference', 'Engine'), 'compound'), (('Engine', 'acquires'), 'nsubj'), (('acquires', 'root'), 'root'), (('and', 'manipulates'), 'cc'), (('manipulates', 'acquires'), 'conj'), (('the', 'knowledge'), 'det'), (('knowledge', 'manipulates'), 'obj'), (('from', 'base'), 'case'), (('the', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'knowledge'), 'nmod'), (('to', 'arrive'), 'mark'), (('arrive', 'base'), 'acl'), (('at', 'solution'), 'case'), (('a', 'solution'), 'det'), (('particular', 'solution'), 'amod'), (('solution', 'arrive'), 'obl'), (('.', 'acquires'), 'punct')]

 Named Entities are: 
>> [('the Inference Engine', 'PRODUCT')]

========================== Sentence 28 ===========================

 In case of rule based ES, it − · Applies rules repeatedly to the facts, which are obtained from earlier rule application. 

Tokens are: 
>> ['In', 'case', 'of', 'rule', 'based', 'ES', ',', 'it', '−', '·', 'Applies', 'rules', 'repeatedly', 'to', 'the', 'facts', ',', 'which', 'are', 'obtained', 'from', 'earlier', 'rule', 'application', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('case', 'NOUN'), ('of', 'ADP'), ('rule', 'NOUN'), ('based', 'VERB'), ('ES', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Applies', 'VERB'), ('rules', 'NOUN'), ('repeatedly', 'ADV'), ('to', 'ADP'), ('the', 'DET'), ('facts', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('are', 'AUX'), ('obtained', 'VERB'), ('from', 'ADP'), ('earlier', 'ADJ'), ('rule', 'NOUN'), ('application', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('case', 'NN'), ('of', 'IN'), ('rule', 'NN'), ('based', 'VBN'), ('ES', 'NN'), (',', ','), ('it', 'PRP'), ('−', ','), ('·', 'NFP'), ('Applies', 'VBZ'), ('rules', 'NNS'), ('repeatedly', 'RB'), ('to', 'IN'), ('the', 'DT'), ('facts', 'NNS'), (',', ','), ('which', 'WDT'), ('are', 'VBP'), ('obtained', 'VBN'), ('from', 'IN'), ('earlier', 'JJR'), ('rule', 'NN'), ('application', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('case', 'case'), ('of', 'of'), ('rule', 'rule'), ('based', 'base'), ('ES', 'es'), (',', ','), ('it', 'it'), ('−', "''"), ('·', '·'), ('Applies', 'apply'), ('rules', 'rule'), ('repeatedly', 'repeatedly'), ('to', 'to'), ('the', 'the'), ('facts', 'fact'), (',', ','), ('which', 'which'), ('are', 'be'), ('obtained', 'obtain'), ('from', 'from'), ('earlier', 'early'), ('rule', 'rule'), ('application', 'application'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'ES'), 'case'), (('case', 'In'), 'fixed'), (('of', 'ES'), 'case'), (('rule', 'ES'), 'compound'), (('based', 'ES'), 'amod'), (('ES', 'Applies'), 'obl'), ((',', 'Applies'), 'punct'), (('it', 'Applies'), 'nsubj'), (('−', 'it'), 'punct'), (('·', 'Applies'), 'punct'), (('Applies', 'root'), 'root'), (('rules', 'Applies'), 'obj'), (('repeatedly', 'Applies'), 'advmod'), (('to', 'facts'), 'case'), (('the', 'facts'), 'det'), (('facts', 'Applies'), 'obl'), ((',', 'facts'), 'punct'), (('which', 'obtained'), 'nsubj:pass'), (('are', 'obtained'), 'aux:pass'), (('obtained', 'facts'), 'acl:relcl'), (('from', 'application'), 'case'), (('earlier', 'application'), 'amod'), (('rule', 'application'), 'compound'), (('application', 'obtained'), 'obl'), (('.', 'Applies'), 'punct')]

 Named Entities are: 
>> [('it − · Applies', 'LAW')]

========================== Sentence 29 ===========================

 · Adds new knowledge into the knowledge base if required. 

Tokens are: 
>> ['·', 'Adds', 'new', 'knowledge', 'into', 'the', 'knowledge', 'base', 'if', 'required', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Adds', 'VERB'), ('new', 'ADJ'), ('knowledge', 'NOUN'), ('into', 'ADP'), ('the', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('if', 'SCONJ'), ('required', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Adds', 'VBZ'), ('new', 'JJ'), ('knowledge', 'NN'), ('into', 'IN'), ('the', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('if', 'IN'), ('required', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Adds', 'add'), ('new', 'new'), ('knowledge', 'knowledge'), ('into', 'into'), ('the', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('if', 'if'), ('required', 'require'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Adds'), 'punct'), (('Adds', 'root'), 'root'), (('new', 'knowledge'), 'amod'), (('knowledge', 'Adds'), 'obj'), (('into', 'base'), 'case'), (('the', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'Adds'), 'obl'), (('if', 'required'), 'mark'), (('required', 'Adds'), 'advcl'), (('.', 'Adds'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 · Resolves rules conflict when multiple rules are applicable to a particular case. 

Tokens are: 
>> ['·', 'Resolves', 'rules', 'conflict', 'when', 'multiple', 'rules', 'are', 'applicable', 'to', 'a', 'particular', 'case', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Resolves', 'VERB'), ('rules', 'NOUN'), ('conflict', 'NOUN'), ('when', 'SCONJ'), ('multiple', 'ADJ'), ('rules', 'NOUN'), ('are', 'AUX'), ('applicable', 'ADJ'), ('to', 'ADP'), ('a', 'DET'), ('particular', 'ADJ'), ('case', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Resolves', 'VBZ'), ('rules', 'NNS'), ('conflict', 'NN'), ('when', 'WRB'), ('multiple', 'JJ'), ('rules', 'NNS'), ('are', 'VBP'), ('applicable', 'JJ'), ('to', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('case', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Resolves', 'resolve'), ('rules', 'rule'), ('conflict', 'conflict'), ('when', 'when'), ('multiple', 'multiple'), ('rules', 'rule'), ('are', 'be'), ('applicable', 'applicable'), ('to', 'to'), ('a', 'a'), ('particular', 'particular'), ('case', 'case'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Resolves'), 'punct'), (('Resolves', 'root'), 'root'), (('rules', 'conflict'), 'compound'), (('conflict', 'Resolves'), 'obj'), (('when', 'applicable'), 'mark'), (('multiple', 'rules'), 'amod'), (('rules', 'applicable'), 'nsubj'), (('are', 'applicable'), 'cop'), (('applicable', 'Resolves'), 'advcl'), (('to', 'case'), 'case'), (('a', 'case'), 'det'), (('particular', 'case'), 'amod'), (('case', 'applicable'), 'obl'), (('.', 'Resolves'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 31 ===========================

 To recommend a solution, the Inference Engine uses the following strategies − · Forward Chaining · Backward Chaining Forward Chaining 

Tokens are: 
>> ['To', 'recommend', 'a', 'solution', ',', 'the', 'Inference', 'Engine', 'uses', 'the', 'following', 'strategies', '−', '·', 'Forward', 'Chaining', '·', 'Backward', 'Chaining', 'Forward', 'Chaining'] 

 UPOS tags are: 
>> [('To', 'PART'), ('recommend', 'VERB'), ('a', 'DET'), ('solution', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('Inference', 'NOUN'), ('Engine', 'NOUN'), ('uses', 'VERB'), ('the', 'DET'), ('following', 'VERB'), ('strategies', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Forward', 'ADJ'), ('Chaining', 'NOUN'), ('·', 'PUNCT'), ('Backward', 'ADJ'), ('Chaining', 'NOUN'), ('Forward', 'ADV'), ('Chaining', 'NOUN')] 

 XPOS tags are: 
>> [('To', 'TO'), ('recommend', 'VB'), ('a', 'DT'), ('solution', 'NN'), (',', ','), ('the', 'DT'), ('Inference', 'NN'), ('Engine', 'NN'), ('uses', 'VBZ'), ('the', 'DT'), ('following', 'VBG'), ('strategies', 'NNS'), ('−', ','), ('·', 'NFP'), ('Forward', 'JJ'), ('Chaining', 'NN'), ('·', 'NFP'), ('Backward', 'JJ'), ('Chaining', 'NN'), ('Forward', 'RB'), ('Chaining', 'NN')] 

 Lemmas are: 
>> [('To', 'to'), ('recommend', 'recommend'), ('a', 'a'), ('solution', 'solution'), (',', ','), ('the', 'the'), ('Inference', 'inference'), ('Engine', 'engine'), ('uses', 'use'), ('the', 'the'), ('following', 'follow'), ('strategies', 'strategy'), ('−', "''"), ('·', '·'), ('Forward', 'forward'), ('Chaining', 'Chaining'), ('·', '·'), ('Backward', 'backward'), ('Chaining', 'Chaining'), ('Forward', 'forward'), ('Chaining', 'Chaining')] 

 Dependency tags are: 
>> [(('To', 'recommend'), 'mark'), (('recommend', 'uses'), 'advcl'), (('a', 'solution'), 'det'), (('solution', 'recommend'), 'obj'), ((',', 'uses'), 'punct'), (('the', 'Engine'), 'det'), (('Inference', 'Engine'), 'compound'), (('Engine', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('the', 'strategies'), 'det'), (('following', 'strategies'), 'amod'), (('strategies', 'uses'), 'obj'), (('−', 'strategies'), 'punct'), (('·', 'Chaining'), 'punct'), (('Forward', 'Chaining'), 'amod'), (('Chaining', 'uses'), 'parataxis'), (('·', 'Chaining'), 'punct'), (('Backward', 'Chaining'), 'amod'), (('Chaining', 'Chaining'), 'compound'), (('Forward', 'Chaining'), 'advmod'), (('Chaining', 'uses'), 'parataxis')]

 Named Entities are: 
>> [('the Inference Engine', 'PRODUCT')]

========================== Sentence 32 ===========================

 It is a strategy of an expert system to answer the question, “What can happen next?” 

Tokens are: 
>> ['It', 'is', 'a', 'strategy', 'of', 'an', 'expert', 'system', 'to', 'answer', 'the', 'question', ',', '“', 'What', 'can', 'happen', 'next', '?', '”'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('strategy', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('expert', 'NOUN'), ('system', 'NOUN'), ('to', 'PART'), ('answer', 'VERB'), ('the', 'DET'), ('question', 'NOUN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('What', 'PRON'), ('can', 'AUX'), ('happen', 'VERB'), ('next', 'ADV'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('strategy', 'NN'), ('of', 'IN'), ('an', 'DT'), ('expert', 'NN'), ('system', 'NN'), ('to', 'TO'), ('answer', 'VB'), ('the', 'DT'), ('question', 'NN'), (',', ','), ('“', '``'), ('What', 'WP'), ('can', 'MD'), ('happen', 'VB'), ('next', 'RB'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('a', 'a'), ('strategy', 'strategy'), ('of', 'of'), ('an', 'a'), ('expert', 'expert'), ('system', 'system'), ('to', 'to'), ('answer', 'answer'), ('the', 'the'), ('question', 'question'), (',', ','), ('“', "''"), ('What', 'what'), ('can', 'can'), ('happen', 'happen'), ('next', 'next'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('It', 'strategy'), 'nsubj'), (('is', 'strategy'), 'cop'), (('a', 'strategy'), 'det'), (('strategy', 'root'), 'root'), (('of', 'system'), 'case'), (('an', 'system'), 'det'), (('expert', 'system'), 'compound'), (('system', 'strategy'), 'nmod'), (('to', 'answer'), 'mark'), (('answer', 'strategy'), 'csubj'), (('the', 'question'), 'det'), (('question', 'answer'), 'obj'), ((',', 'happen'), 'punct'), (('“', 'happen'), 'punct'), (('What', 'happen'), 'nsubj'), (('can', 'happen'), 'aux'), (('happen', 'strategy'), 'parataxis'), (('next', 'happen'), 'advmod'), (('?', 'happen'), 'punct'), (('”', 'happen'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 Here, the Inference Engine follows the chain of conditions and derivations and finally deduces the outcome. 

Tokens are: 
>> ['Here', ',', 'the', 'Inference', 'Engine', 'follows', 'the', 'chain', 'of', 'conditions', 'and', 'derivations', 'and', 'finally', 'deduces', 'the', 'outcome', '.'] 

 UPOS tags are: 
>> [('Here', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('Inference', 'PROPN'), ('Engine', 'PROPN'), ('follows', 'VERB'), ('the', 'DET'), ('chain', 'NOUN'), ('of', 'ADP'), ('conditions', 'NOUN'), ('and', 'CCONJ'), ('derivations', 'NOUN'), ('and', 'CCONJ'), ('finally', 'ADV'), ('deduces', 'VERB'), ('the', 'DET'), ('outcome', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Here', 'RB'), (',', ','), ('the', 'DT'), ('Inference', 'NNP'), ('Engine', 'NNP'), ('follows', 'VBZ'), ('the', 'DT'), ('chain', 'NN'), ('of', 'IN'), ('conditions', 'NNS'), ('and', 'CC'), ('derivations', 'NNS'), ('and', 'CC'), ('finally', 'RB'), ('deduces', 'VBZ'), ('the', 'DT'), ('outcome', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Here', 'here'), (',', ','), ('the', 'the'), ('Inference', 'Inference'), ('Engine', 'engine'), ('follows', 'follow'), ('the', 'the'), ('chain', 'chain'), ('of', 'of'), ('conditions', 'condition'), ('and', 'and'), ('derivations', 'derivation'), ('and', 'and'), ('finally', 'finally'), ('deduces', 'deduce'), ('the', 'the'), ('outcome', 'outcome'), ('.', '.')] 

 Dependency tags are: 
>> [(('Here', 'follows'), 'advmod'), ((',', 'follows'), 'punct'), (('the', 'Engine'), 'det'), (('Inference', 'Engine'), 'compound'), (('Engine', 'follows'), 'nsubj'), (('follows', 'root'), 'root'), (('the', 'chain'), 'det'), (('chain', 'follows'), 'obj'), (('of', 'conditions'), 'case'), (('conditions', 'chain'), 'nmod'), (('and', 'derivations'), 'cc'), (('derivations', 'conditions'), 'conj'), (('and', 'deduces'), 'cc'), (('finally', 'deduces'), 'advmod'), (('deduces', 'follows'), 'conj'), (('the', 'outcome'), 'det'), (('outcome', 'deduces'), 'obj'), (('.', 'follows'), 'punct')]

 Named Entities are: 
>> [('the Inference Engine', 'ORG')]

========================== Sentence 34 ===========================

 It considers all the facts and rules, and sorts them before concluding to a solution. 

Tokens are: 
>> ['It', 'considers', 'all', 'the', 'facts', 'and', 'rules', ',', 'and', 'sorts', 'them', 'before', 'concluding', 'to', 'a', 'solution', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('considers', 'VERB'), ('all', 'DET'), ('the', 'DET'), ('facts', 'NOUN'), ('and', 'CCONJ'), ('rules', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('sorts', 'VERB'), ('them', 'PRON'), ('before', 'SCONJ'), ('concluding', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('considers', 'VBZ'), ('all', 'PDT'), ('the', 'DT'), ('facts', 'NNS'), ('and', 'CC'), ('rules', 'NNS'), (',', ','), ('and', 'CC'), ('sorts', 'VBZ'), ('them', 'PRP'), ('before', 'IN'), ('concluding', 'VBG'), ('to', 'IN'), ('a', 'DT'), ('solution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('considers', 'consider'), ('all', 'all'), ('the', 'the'), ('facts', 'fact'), ('and', 'and'), ('rules', 'rule'), (',', ','), ('and', 'and'), ('sorts', 'sort'), ('them', 'they'), ('before', 'before'), ('concluding', 'conclude'), ('to', 'to'), ('a', 'a'), ('solution', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'considers'), 'nsubj'), (('considers', 'root'), 'root'), (('all', 'facts'), 'det:predet'), (('the', 'facts'), 'det'), (('facts', 'considers'), 'obj'), (('and', 'rules'), 'cc'), (('rules', 'facts'), 'conj'), ((',', 'sorts'), 'punct'), (('and', 'sorts'), 'cc'), (('sorts', 'considers'), 'conj'), (('them', 'sorts'), 'obj'), (('before', 'concluding'), 'mark'), (('concluding', 'sorts'), 'advcl'), (('to', 'solution'), 'case'), (('a', 'solution'), 'det'), (('solution', 'concluding'), 'obl'), (('.', 'considers'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 This strategy is followed for working on conclusion, result, or effect. 

Tokens are: 
>> ['This', 'strategy', 'is', 'followed', 'for', 'working', 'on', 'conclusion', ',', 'result', ',', 'or', 'effect', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('strategy', 'NOUN'), ('is', 'AUX'), ('followed', 'VERB'), ('for', 'SCONJ'), ('working', 'VERB'), ('on', 'ADP'), ('conclusion', 'NOUN'), (',', 'PUNCT'), ('result', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('effect', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('strategy', 'NN'), ('is', 'VBZ'), ('followed', 'VBN'), ('for', 'IN'), ('working', 'VBG'), ('on', 'IN'), ('conclusion', 'NN'), (',', ','), ('result', 'NN'), (',', ','), ('or', 'CC'), ('effect', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('strategy', 'strategy'), ('is', 'be'), ('followed', 'follow'), ('for', 'for'), ('working', 'work'), ('on', 'on'), ('conclusion', 'conclusion'), (',', ','), ('result', 'result'), (',', ','), ('or', 'or'), ('effect', 'effect'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'strategy'), 'det'), (('strategy', 'followed'), 'nsubj:pass'), (('is', 'followed'), 'aux:pass'), (('followed', 'root'), 'root'), (('for', 'working'), 'mark'), (('working', 'followed'), 'advcl'), (('on', 'conclusion'), 'case'), (('conclusion', 'working'), 'obl'), ((',', 'result'), 'punct'), (('result', 'conclusion'), 'conj'), ((',', 'effect'), 'punct'), (('or', 'effect'), 'cc'), (('effect', 'conclusion'), 'conj'), (('.', 'followed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 For example, prediction of share market status as an effect of changes in interest rates. 

Tokens are: 
>> ['For', 'example', ',', 'prediction', 'of', 'share', 'market', 'status', 'as', 'an', 'effect', 'of', 'changes', 'in', 'interest', 'rates', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('prediction', 'NOUN'), ('of', 'ADP'), ('share', 'NOUN'), ('market', 'NOUN'), ('status', 'NOUN'), ('as', 'ADP'), ('an', 'DET'), ('effect', 'NOUN'), ('of', 'ADP'), ('changes', 'NOUN'), ('in', 'ADP'), ('interest', 'NOUN'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('prediction', 'NN'), ('of', 'IN'), ('share', 'NN'), ('market', 'NN'), ('status', 'NN'), ('as', 'IN'), ('an', 'DT'), ('effect', 'NN'), ('of', 'IN'), ('changes', 'NNS'), ('in', 'IN'), ('interest', 'NN'), ('rates', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('prediction', 'prediction'), ('of', 'of'), ('share', 'share'), ('market', 'market'), ('status', 'status'), ('as', 'as'), ('an', 'a'), ('effect', 'effect'), ('of', 'of'), ('changes', 'change'), ('in', 'in'), ('interest', 'interest'), ('rates', 'rate'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'prediction'), 'nmod'), ((',', 'example'), 'punct'), (('prediction', 'root'), 'root'), (('of', 'status'), 'case'), (('share', 'market'), 'compound'), (('market', 'status'), 'compound'), (('status', 'prediction'), 'nmod'), (('as', 'effect'), 'case'), (('an', 'effect'), 'det'), (('effect', 'prediction'), 'nmod'), (('of', 'changes'), 'case'), (('changes', 'effect'), 'nmod'), (('in', 'rates'), 'case'), (('interest', 'rates'), 'compound'), (('rates', 'changes'), 'nmod'), (('.', 'prediction'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 37 ===========================

 Backward Chaining 

Tokens are: 
>> ['Backward', 'Chaining'] 

 UPOS tags are: 
>> [('Backward', 'ADJ'), ('Chaining', 'NOUN')] 

 XPOS tags are: 
>> [('Backward', 'JJ'), ('Chaining', 'NN')] 

 Lemmas are: 
>> [('Backward', 'backward'), ('Chaining', 'Chaining')] 

 Dependency tags are: 
>> [(('Backward', 'Chaining'), 'amod'), (('Chaining', 'root'), 'root')]

 Named Entities are: 
>> [('Backward Chaining', 'PERSON')]

========================== Sentence 38 ===========================

 With this strategy, an expert system finds out the answer to the question, “Why this happened?” 

Tokens are: 
>> ['With', 'this', 'strategy', ',', 'an', 'expert', 'system', 'finds', 'out', 'the', 'answer', 'to', 'the', 'question', ',', '“', 'Why', 'this', 'happened', '?', '”'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('this', 'DET'), ('strategy', 'NOUN'), (',', 'PUNCT'), ('an', 'DET'), ('expert', 'NOUN'), ('system', 'NOUN'), ('finds', 'VERB'), ('out', 'ADP'), ('the', 'DET'), ('answer', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('question', 'NOUN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('Why', 'ADV'), ('this', 'PRON'), ('happened', 'VERB'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('this', 'DT'), ('strategy', 'NN'), (',', ','), ('an', 'DT'), ('expert', 'NN'), ('system', 'NN'), ('finds', 'VBZ'), ('out', 'RP'), ('the', 'DT'), ('answer', 'NN'), ('to', 'IN'), ('the', 'DT'), ('question', 'NN'), (',', ','), ('“', '``'), ('Why', 'WRB'), ('this', 'DT'), ('happened', 'VBD'), ('?', '.'), ('”', "''")] 

 Lemmas are: 
>> [('With', 'with'), ('this', 'this'), ('strategy', 'strategy'), (',', ','), ('an', 'a'), ('expert', 'expert'), ('system', 'system'), ('finds', 'find'), ('out', 'out'), ('the', 'the'), ('answer', 'answer'), ('to', 'to'), ('the', 'the'), ('question', 'question'), (',', ','), ('“', "''"), ('Why', 'why'), ('this', 'this'), ('happened', 'happen'), ('?', '?'), ('”', "''")] 

 Dependency tags are: 
>> [(('With', 'strategy'), 'case'), (('this', 'strategy'), 'det'), (('strategy', 'finds'), 'obl'), ((',', 'finds'), 'punct'), (('an', 'system'), 'det'), (('expert', 'system'), 'compound'), (('system', 'finds'), 'nsubj'), (('finds', 'root'), 'root'), (('out', 'finds'), 'compound:prt'), (('the', 'answer'), 'det'), (('answer', 'finds'), 'obj'), (('to', 'question'), 'case'), (('the', 'question'), 'det'), (('question', 'answer'), 'nmod'), ((',', 'happened'), 'punct'), (('“', 'happened'), 'punct'), (('Why', 'happened'), 'advmod'), (('this', 'happened'), 'nsubj'), (('happened', 'finds'), 'parataxis'), (('?', 'happened'), 'punct'), (('”', 'happened'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 39 ===========================

 On the basis of what has already happened, the Inference Engine tries to find out which conditions could have happened in the past for this result. 

Tokens are: 
>> ['On', 'the', 'basis', 'of', 'what', 'has', 'already', 'happened', ',', 'the', 'Inference', 'Engine', 'tries', 'to', 'find', 'out', 'which', 'conditions', 'could', 'have', 'happened', 'in', 'the', 'past', 'for', 'this', 'result', '.'] 

 UPOS tags are: 
>> [('On', 'ADP'), ('the', 'DET'), ('basis', 'NOUN'), ('of', 'ADP'), ('what', 'PRON'), ('has', 'AUX'), ('already', 'ADV'), ('happened', 'VERB'), (',', 'PUNCT'), ('the', 'DET'), ('Inference', 'PROPN'), ('Engine', 'PROPN'), ('tries', 'VERB'), ('to', 'PART'), ('find', 'VERB'), ('out', 'ADP'), ('which', 'DET'), ('conditions', 'NOUN'), ('could', 'AUX'), ('have', 'AUX'), ('happened', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('past', 'NOUN'), ('for', 'ADP'), ('this', 'DET'), ('result', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('On', 'IN'), ('the', 'DT'), ('basis', 'NN'), ('of', 'IN'), ('what', 'WP'), ('has', 'VBZ'), ('already', 'RB'), ('happened', 'VBN'), (',', ','), ('the', 'DT'), ('Inference', 'NNP'), ('Engine', 'NNP'), ('tries', 'VBZ'), ('to', 'TO'), ('find', 'VB'), ('out', 'RP'), ('which', 'WDT'), ('conditions', 'NNS'), ('could', 'MD'), ('have', 'VB'), ('happened', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('past', 'NN'), ('for', 'IN'), ('this', 'DT'), ('result', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('On', 'on'), ('the', 'the'), ('basis', 'basis'), ('of', 'of'), ('what', 'what'), ('has', 'have'), ('already', 'already'), ('happened', 'happen'), (',', ','), ('the', 'the'), ('Inference', 'Inference'), ('Engine', 'engine'), ('tries', 'try'), ('to', 'to'), ('find', 'find'), ('out', 'out'), ('which', 'which'), ('conditions', 'condition'), ('could', 'could'), ('have', 'have'), ('happened', 'happen'), ('in', 'in'), ('the', 'the'), ('past', 'past'), ('for', 'for'), ('this', 'this'), ('result', 'result'), ('.', '.')] 

 Dependency tags are: 
>> [(('On', 'basis'), 'case'), (('the', 'basis'), 'det'), (('basis', 'tries'), 'obl'), (('of', 'what'), 'case'), (('what', 'basis'), 'nmod'), (('has', 'happened'), 'aux'), (('already', 'happened'), 'advmod'), (('happened', 'what'), 'acl:relcl'), ((',', 'tries'), 'punct'), (('the', 'Engine'), 'det'), (('Inference', 'Engine'), 'compound'), (('Engine', 'tries'), 'nsubj'), (('tries', 'root'), 'root'), (('to', 'find'), 'mark'), (('find', 'tries'), 'xcomp'), (('out', 'find'), 'compound:prt'), (('which', 'conditions'), 'det'), (('conditions', 'happened'), 'nsubj'), (('could', 'happened'), 'aux'), (('have', 'happened'), 'aux'), (('happened', 'find'), 'ccomp'), (('in', 'past'), 'case'), (('the', 'past'), 'det'), (('past', 'happened'), 'obl'), (('for', 'result'), 'case'), (('this', 'result'), 'det'), (('result', 'happened'), 'obl'), (('.', 'tries'), 'punct')]

 Named Entities are: 
>> [('the Inference Engine', 'ORG')]

========================== Sentence 40 ===========================

 This strategy is followed for finding out cause or reason. 

Tokens are: 
>> ['This', 'strategy', 'is', 'followed', 'for', 'finding', 'out', 'cause', 'or', 'reason', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('strategy', 'NOUN'), ('is', 'AUX'), ('followed', 'VERB'), ('for', 'SCONJ'), ('finding', 'VERB'), ('out', 'ADP'), ('cause', 'NOUN'), ('or', 'CCONJ'), ('reason', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('strategy', 'NN'), ('is', 'VBZ'), ('followed', 'VBN'), ('for', 'IN'), ('finding', 'VBG'), ('out', 'RP'), ('cause', 'NN'), ('or', 'CC'), ('reason', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('strategy', 'strategy'), ('is', 'be'), ('followed', 'follow'), ('for', 'for'), ('finding', 'find'), ('out', 'out'), ('cause', 'cause'), ('or', 'or'), ('reason', 'reason'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'strategy'), 'det'), (('strategy', 'followed'), 'nsubj:pass'), (('is', 'followed'), 'aux:pass'), (('followed', 'root'), 'root'), (('for', 'finding'), 'mark'), (('finding', 'followed'), 'advcl'), (('out', 'finding'), 'compound:prt'), (('cause', 'finding'), 'obj'), (('or', 'reason'), 'cc'), (('reason', 'cause'), 'conj'), (('.', 'followed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 41 ===========================

 For example, diagnosis of blood cancer in humans. 

Tokens are: 
>> ['For', 'example', ',', 'diagnosis', 'of', 'blood', 'cancer', 'in', 'humans', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('diagnosis', 'NOUN'), ('of', 'ADP'), ('blood', 'NOUN'), ('cancer', 'NOUN'), ('in', 'ADP'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('diagnosis', 'NN'), ('of', 'IN'), ('blood', 'NN'), ('cancer', 'NN'), ('in', 'IN'), ('humans', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('diagnosis', 'diagnosis'), ('of', 'of'), ('blood', 'blood'), ('cancer', 'cancer'), ('in', 'in'), ('humans', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'diagnosis'), 'nmod'), ((',', 'example'), 'punct'), (('diagnosis', 'root'), 'root'), (('of', 'cancer'), 'case'), (('blood', 'cancer'), 'compound'), (('cancer', 'diagnosis'), 'nmod'), (('in', 'humans'), 'case'), (('humans', 'cancer'), 'nmod'), (('.', 'diagnosis'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 42 ===========================

 User Interface User interface provides interaction between user of the ES and the ES itself. 

Tokens are: 
>> ['User', 'Interface', 'User', 'interface', 'provides', 'interaction', 'between', 'user', 'of', 'the', 'ES', 'and', 'the', 'ES', 'itself', '.'] 

 UPOS tags are: 
>> [('User', 'NOUN'), ('Interface', 'NOUN'), ('User', 'NOUN'), ('interface', 'NOUN'), ('provides', 'VERB'), ('interaction', 'NOUN'), ('between', 'ADP'), ('user', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('ES', 'PROPN'), ('and', 'CCONJ'), ('the', 'DET'), ('ES', 'PROPN'), ('itself', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('User', 'NN'), ('Interface', 'NN'), ('User', 'NN'), ('interface', 'NN'), ('provides', 'VBZ'), ('interaction', 'NN'), ('between', 'IN'), ('user', 'NN'), ('of', 'IN'), ('the', 'DT'), ('ES', 'NNP'), ('and', 'CC'), ('the', 'DT'), ('ES', 'NNP'), ('itself', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('User', 'user'), ('Interface', 'interface'), ('User', 'user'), ('interface', 'interface'), ('provides', 'provide'), ('interaction', 'interaction'), ('between', 'between'), ('user', 'user'), ('of', 'of'), ('the', 'the'), ('ES', 'ES'), ('and', 'and'), ('the', 'the'), ('ES', 'ES'), ('itself', 'itself'), ('.', '.')] 

 Dependency tags are: 
>> [(('User', 'Interface'), 'compound'), (('Interface', 'interface'), 'compound'), (('User', 'interface'), 'compound'), (('interface', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('interaction', 'provides'), 'obj'), (('between', 'user'), 'case'), (('user', 'interaction'), 'nmod'), (('of', 'ES'), 'case'), (('the', 'ES'), 'det'), (('ES', 'user'), 'nmod'), (('and', 'ES'), 'cc'), (('the', 'ES'), 'det'), (('ES', 'ES'), 'conj'), (('itself', 'ES'), 'nmod:npmod'), (('.', 'provides'), 'punct')]

 Named Entities are: 
>> [('ES', 'ORG'), ('ES', 'ORG')]

========================== Sentence 43 ===========================

 It is generally Natural Language Processing so as to be used by the user who is well-versed in the task domain. 

Tokens are: 
>> ['It', 'is', 'generally', 'Natural', 'Language', 'Processing', 'so', 'as', 'to', 'be', 'used', 'by', 'the', 'user', 'who', 'is', 'well', '-', 'versed', 'in', 'the', 'task', 'domain', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('generally', 'ADV'), ('Natural', 'ADJ'), ('Language', 'NOUN'), ('Processing', 'NOUN'), ('so', 'ADV'), ('as', 'SCONJ'), ('to', 'PART'), ('be', 'AUX'), ('used', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('user', 'NOUN'), ('who', 'PRON'), ('is', 'AUX'), ('well', 'ADV'), ('-', 'PUNCT'), ('versed', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('task', 'NOUN'), ('domain', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('generally', 'RB'), ('Natural', 'JJ'), ('Language', 'NN'), ('Processing', 'NN'), ('so', 'RB'), ('as', 'IN'), ('to', 'TO'), ('be', 'VB'), ('used', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('user', 'NN'), ('who', 'WP'), ('is', 'VBZ'), ('well', 'RB'), ('-', 'HYPH'), ('versed', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('task', 'NN'), ('domain', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('generally', 'generally'), ('Natural', 'Natural'), ('Language', 'language'), ('Processing', 'processing'), ('so', 'so'), ('as', 'as'), ('to', 'to'), ('be', 'be'), ('used', 'use'), ('by', 'by'), ('the', 'the'), ('user', 'user'), ('who', 'who'), ('is', 'be'), ('well', 'well'), ('-', '-'), ('versed', 'verse'), ('in', 'in'), ('the', 'the'), ('task', 'task'), ('domain', 'domain'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'Processing'), 'nsubj'), (('is', 'Processing'), 'cop'), (('generally', 'Processing'), 'advmod'), (('Natural', 'Processing'), 'amod'), (('Language', 'Processing'), 'compound'), (('Processing', 'root'), 'root'), (('so', 'used'), 'mark'), (('as', 'used'), 'mark'), (('to', 'so'), 'fixed'), (('be', 'used'), 'aux:pass'), (('used', 'Processing'), 'advcl'), (('by', 'user'), 'case'), (('the', 'user'), 'det'), (('user', 'used'), 'obl'), (('who', 'versed'), 'nsubj:pass'), (('is', 'versed'), 'aux:pass'), (('well', 'versed'), 'advmod'), (('-', 'versed'), 'punct'), (('versed', 'user'), 'acl:relcl'), (('in', 'domain'), 'case'), (('the', 'domain'), 'det'), (('task', 'domain'), 'compound'), (('domain', 'versed'), 'obl'), (('.', 'Processing'), 'punct')]

 Named Entities are: 
>> [('Natural Language Processing', 'ORG')]

========================== Sentence 44 ===========================

 The user of the ES need not be necessarily an expert in Artificial Intelligence. 

Tokens are: 
>> ['The', 'user', 'of', 'the', 'ES', 'need', 'not', 'be', 'necessarily', 'an', 'expert', 'in', 'Artificial', 'Intelligence', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('user', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('ES', 'PROPN'), ('need', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('necessarily', 'ADV'), ('an', 'DET'), ('expert', 'NOUN'), ('in', 'ADP'), ('Artificial', 'ADJ'), ('Intelligence', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('user', 'NN'), ('of', 'IN'), ('the', 'DT'), ('ES', 'NNP'), ('need', 'VBP'), ('not', 'RB'), ('be', 'VB'), ('necessarily', 'RB'), ('an', 'DT'), ('expert', 'NN'), ('in', 'IN'), ('Artificial', 'NNP'), ('Intelligence', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('user', 'user'), ('of', 'of'), ('the', 'the'), ('ES', 'ES'), ('need', 'need'), ('not', 'not'), ('be', 'be'), ('necessarily', 'necessarily'), ('an', 'a'), ('expert', 'expert'), ('in', 'in'), ('Artificial', 'Artificial'), ('Intelligence', 'Intelligence'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'user'), 'det'), (('user', 'expert'), 'nsubj'), (('of', 'ES'), 'case'), (('the', 'ES'), 'det'), (('ES', 'user'), 'nmod'), (('need', 'expert'), 'aux'), (('not', 'expert'), 'advmod'), (('be', 'expert'), 'cop'), (('necessarily', 'expert'), 'advmod'), (('an', 'expert'), 'det'), (('expert', 'root'), 'root'), (('in', 'Intelligence'), 'case'), (('Artificial', 'Intelligence'), 'amod'), (('Intelligence', 'expert'), 'nmod'), (('.', 'expert'), 'punct')]

 Named Entities are: 
>> [('Artificial Intelligence', 'ORG')]

========================== Sentence 45 ===========================

 It explains how the ES has arrived at a particular recommendation. 

Tokens are: 
>> ['It', 'explains', 'how', 'the', 'ES', 'has', 'arrived', 'at', 'a', 'particular', 'recommendation', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('explains', 'VERB'), ('how', 'SCONJ'), ('the', 'DET'), ('ES', 'PROPN'), ('has', 'AUX'), ('arrived', 'VERB'), ('at', 'ADP'), ('a', 'DET'), ('particular', 'ADJ'), ('recommendation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('explains', 'VBZ'), ('how', 'WRB'), ('the', 'DT'), ('ES', 'NNP'), ('has', 'VBZ'), ('arrived', 'VBN'), ('at', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('recommendation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('explains', 'explain'), ('how', 'how'), ('the', 'the'), ('ES', 'ES'), ('has', 'have'), ('arrived', 'arrive'), ('at', 'at'), ('a', 'a'), ('particular', 'particular'), ('recommendation', 'recommendation'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'explains'), 'nsubj'), (('explains', 'root'), 'root'), (('how', 'arrived'), 'mark'), (('the', 'ES'), 'det'), (('ES', 'arrived'), 'nsubj'), (('has', 'arrived'), 'aux'), (('arrived', 'explains'), 'ccomp'), (('at', 'recommendation'), 'case'), (('a', 'recommendation'), 'det'), (('particular', 'recommendation'), 'amod'), (('recommendation', 'arrived'), 'obl'), (('.', 'explains'), 'punct')]

 Named Entities are: 
>> [('ES', 'ORG')]

========================== Sentence 46 ===========================

 The explanation may appear in the following forms − · Natural language displayed on screen. 

Tokens are: 
>> ['The', 'explanation', 'may', 'appear', 'in', 'the', 'following', 'forms', '−', '·', 'Natural', 'language', 'displayed', 'on', 'screen', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('explanation', 'NOUN'), ('may', 'AUX'), ('appear', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('following', 'VERB'), ('forms', 'NOUN'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Natural', 'ADJ'), ('language', 'NOUN'), ('displayed', 'VERB'), ('on', 'ADP'), ('screen', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('explanation', 'NN'), ('may', 'MD'), ('appear', 'VB'), ('in', 'IN'), ('the', 'DT'), ('following', 'VBG'), ('forms', 'NNS'), ('−', ','), ('·', 'NFP'), ('Natural', 'JJ'), ('language', 'NN'), ('displayed', 'VBN'), ('on', 'IN'), ('screen', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('explanation', 'explanation'), ('may', 'may'), ('appear', 'appear'), ('in', 'in'), ('the', 'the'), ('following', 'follow'), ('forms', 'form'), ('−', "''"), ('·', '·'), ('Natural', 'Natural'), ('language', 'language'), ('displayed', 'display'), ('on', 'on'), ('screen', 'screen'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'explanation'), 'det'), (('explanation', 'appear'), 'nsubj'), (('may', 'appear'), 'aux'), (('appear', 'root'), 'root'), (('in', 'forms'), 'case'), (('the', 'forms'), 'det'), (('following', 'forms'), 'amod'), (('forms', 'appear'), 'obl'), (('−', 'appear'), 'punct'), (('·', 'language'), 'punct'), (('Natural', 'language'), 'amod'), (('language', 'appear'), 'parataxis'), (('displayed', 'language'), 'acl'), (('on', 'screen'), 'case'), (('screen', 'displayed'), 'obl'), (('.', 'appear'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 · Verbal narrations in natural language. 

Tokens are: 
>> ['·', 'Verbal', 'narrations', 'in', 'natural', 'language', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Verbal', 'ADJ'), ('narrations', 'NOUN'), ('in', 'ADP'), ('natural', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Verbal', 'JJ'), ('narrations', 'NNS'), ('in', 'IN'), ('natural', 'JJ'), ('language', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Verbal', 'Verbal'), ('narrations', 'narration'), ('in', 'in'), ('natural', 'natural'), ('language', 'language'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'narrations'), 'punct'), (('Verbal', 'narrations'), 'amod'), (('narrations', 'root'), 'root'), (('in', 'language'), 'case'), (('natural', 'language'), 'amod'), (('language', 'narrations'), 'nmod'), (('.', 'narrations'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 48 ===========================

 · Listing of rule numbers displayed on the screen. 

Tokens are: 
>> ['·', 'Listing', 'of', 'rule', 'numbers', 'displayed', 'on', 'the', 'screen', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Listing', 'PROPN'), ('of', 'ADP'), ('rule', 'NOUN'), ('numbers', 'NOUN'), ('displayed', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('screen', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Listing', 'NNP'), ('of', 'IN'), ('rule', 'NN'), ('numbers', 'NNS'), ('displayed', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('screen', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Listing', 'Listing'), ('of', 'of'), ('rule', 'rule'), ('numbers', 'number'), ('displayed', 'display'), ('on', 'on'), ('the', 'the'), ('screen', 'screen'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Listing'), 'punct'), (('Listing', 'root'), 'root'), (('of', 'numbers'), 'case'), (('rule', 'numbers'), 'compound'), (('numbers', 'Listing'), 'nmod'), (('displayed', 'numbers'), 'acl'), (('on', 'screen'), 'case'), (('the', 'screen'), 'det'), (('screen', 'displayed'), 'obl'), (('.', 'Listing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 49 ===========================

 The user interface makes it easy to trace the credibility of the deductions. 

Tokens are: 
>> ['The', 'user', 'interface', 'makes', 'it', 'easy', 'to', 'trace', 'the', 'credibility', 'of', 'the', 'deductions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('user', 'NOUN'), ('interface', 'NOUN'), ('makes', 'VERB'), ('it', 'PRON'), ('easy', 'ADJ'), ('to', 'PART'), ('trace', 'VERB'), ('the', 'DET'), ('credibility', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('deductions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('user', 'NN'), ('interface', 'NN'), ('makes', 'VBZ'), ('it', 'PRP'), ('easy', 'JJ'), ('to', 'TO'), ('trace', 'VB'), ('the', 'DT'), ('credibility', 'NN'), ('of', 'IN'), ('the', 'DT'), ('deductions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('user', 'user'), ('interface', 'interface'), ('makes', 'make'), ('it', 'it'), ('easy', 'easy'), ('to', 'to'), ('trace', 'trace'), ('the', 'the'), ('credibility', 'credibility'), ('of', 'of'), ('the', 'the'), ('deductions', 'deduction'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'interface'), 'det'), (('user', 'interface'), 'compound'), (('interface', 'makes'), 'nsubj'), (('makes', 'root'), 'root'), (('it', 'makes'), 'expl'), (('easy', 'makes'), 'xcomp'), (('to', 'trace'), 'mark'), (('trace', 'easy'), 'xcomp'), (('the', 'credibility'), 'det'), (('credibility', 'trace'), 'obj'), (('of', 'deductions'), 'case'), (('the', 'deductions'), 'det'), (('deductions', 'credibility'), 'nmod'), (('.', 'makes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 50 ===========================

 Requirements of Efficient ES User Interface · 

Tokens are: 
>> ['Requirements', 'of', 'Efficient', 'ES', 'User', 'Interface', '·'] 

 UPOS tags are: 
>> [('Requirements', 'NOUN'), ('of', 'ADP'), ('Efficient', 'ADJ'), ('ES', 'NOUN'), ('User', 'NOUN'), ('Interface', 'NOUN'), ('·', 'PUNCT')] 

 XPOS tags are: 
>> [('Requirements', 'NNS'), ('of', 'IN'), ('Efficient', 'JJ'), ('ES', 'NN'), ('User', 'NN'), ('Interface', 'NN'), ('·', 'NFP')] 

 Lemmas are: 
>> [('Requirements', 'requirement'), ('of', 'of'), ('Efficient', 'efficient'), ('ES', 'es'), ('User', 'user'), ('Interface', 'interface'), ('·', '·')] 

 Dependency tags are: 
>> [(('Requirements', 'root'), 'root'), (('of', 'Interface'), 'case'), (('Efficient', 'Interface'), 'amod'), (('ES', 'Interface'), 'compound'), (('User', 'Interface'), 'compound'), (('Interface', 'Requirements'), 'nmod'), (('·', 'Requirements'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 51 ===========================

 It should help users to accomplish their goals in shortest possible way. 

Tokens are: 
>> ['It', 'should', 'help', 'users', 'to', 'accomplish', 'their', 'goals', 'in', 'shortest', 'possible', 'way', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('should', 'AUX'), ('help', 'VERB'), ('users', 'NOUN'), ('to', 'PART'), ('accomplish', 'VERB'), ('their', 'PRON'), ('goals', 'NOUN'), ('in', 'ADP'), ('shortest', 'ADJ'), ('possible', 'ADJ'), ('way', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('should', 'MD'), ('help', 'VB'), ('users', 'NNS'), ('to', 'TO'), ('accomplish', 'VB'), ('their', 'PRP$'), ('goals', 'NNS'), ('in', 'IN'), ('shortest', 'JJS'), ('possible', 'JJ'), ('way', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('should', 'should'), ('help', 'help'), ('users', 'user'), ('to', 'to'), ('accomplish', 'accomplish'), ('their', 'they'), ('goals', 'goal'), ('in', 'in'), ('shortest', 'short'), ('possible', 'possible'), ('way', 'way'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'help'), 'nsubj'), (('should', 'help'), 'aux'), (('help', 'root'), 'root'), (('users', 'help'), 'obj'), (('to', 'accomplish'), 'mark'), (('accomplish', 'help'), 'xcomp'), (('their', 'goals'), 'nmod:poss'), (('goals', 'accomplish'), 'obj'), (('in', 'way'), 'case'), (('shortest', 'way'), 'amod'), (('possible', 'way'), 'amod'), (('way', 'accomplish'), 'obl'), (('.', 'help'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 It should be designed to work for user’s existing or desired work practices. 

Tokens are: 
>> ['It', 'should', 'be', 'designed', 'to', 'work', 'for', 'user', '’s', 'existing', 'or', 'desired', 'work', 'practices', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('should', 'AUX'), ('be', 'AUX'), ('designed', 'VERB'), ('to', 'PART'), ('work', 'VERB'), ('for', 'ADP'), ('user', 'NOUN'), ('’s', 'PART'), ('existing', 'VERB'), ('or', 'CCONJ'), ('desired', 'VERB'), ('work', 'NOUN'), ('practices', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('should', 'MD'), ('be', 'VB'), ('designed', 'VBN'), ('to', 'TO'), ('work', 'VB'), ('for', 'IN'), ('user', 'NN'), ('’s', 'POS'), ('existing', 'VBG'), ('or', 'CC'), ('desired', 'VBN'), ('work', 'NN'), ('practices', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('should', 'should'), ('be', 'be'), ('designed', 'design'), ('to', 'to'), ('work', 'work'), ('for', 'for'), ('user', 'user'), ('’s', "'s"), ('existing', 'exist'), ('or', 'or'), ('desired', 'desire'), ('work', 'work'), ('practices', 'practice'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'designed'), 'nsubj:pass'), (('should', 'designed'), 'aux'), (('be', 'designed'), 'aux:pass'), (('designed', 'root'), 'root'), (('to', 'work'), 'mark'), (('work', 'designed'), 'xcomp'), (('for', 'practices'), 'case'), (('user', 'practices'), 'nmod:poss'), (('’s', 'user'), 'case'), (('existing', 'practices'), 'amod'), (('or', 'desired'), 'cc'), (('desired', 'existing'), 'conj'), (('work', 'practices'), 'compound'), (('practices', 'work'), 'obl'), (('.', 'designed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 · Its technology should be adaptable to user’s requirements; not the other way round. 

Tokens are: 
>> ['·', 'Its', 'technology', 'should', 'be', 'adaptable', 'to', 'user', '’s', 'requirements', ';', 'not', 'the', 'other', 'way', 'round', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Its', 'PRON'), ('technology', 'NOUN'), ('should', 'AUX'), ('be', 'AUX'), ('adaptable', 'ADJ'), ('to', 'ADP'), ('user', 'NOUN'), ('’s', 'PART'), ('requirements', 'NOUN'), (';', 'PUNCT'), ('not', 'ADV'), ('the', 'DET'), ('other', 'ADJ'), ('way', 'NOUN'), ('round', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Its', 'PRP$'), ('technology', 'NN'), ('should', 'MD'), ('be', 'VB'), ('adaptable', 'JJ'), ('to', 'IN'), ('user', 'NN'), ('’s', 'POS'), ('requirements', 'NNS'), (';', ','), ('not', 'RB'), ('the', 'DT'), ('other', 'JJ'), ('way', 'NN'), ('round', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Its', 'its'), ('technology', 'technology'), ('should', 'should'), ('be', 'be'), ('adaptable', 'adaptable'), ('to', 'to'), ('user', 'user'), ('’s', "'s"), ('requirements', 'requirement'), (';', ';'), ('not', 'not'), ('the', 'the'), ('other', 'other'), ('way', 'way'), ('round', 'round'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'adaptable'), 'punct'), (('Its', 'technology'), 'nmod:poss'), (('technology', 'adaptable'), 'nsubj'), (('should', 'adaptable'), 'aux'), (('be', 'adaptable'), 'cop'), (('adaptable', 'root'), 'root'), (('to', 'requirements'), 'case'), (('user', 'requirements'), 'nmod:poss'), (('’s', 'user'), 'case'), (('requirements', 'adaptable'), 'obl'), ((';', 'adaptable'), 'punct'), (('not', 'way'), 'advmod'), (('the', 'way'), 'det'), (('other', 'way'), 'amod'), (('way', 'round'), 'obl:npmod'), (('round', 'adaptable'), 'advmod'), (('.', 'adaptable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 55 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 56 ===========================

 It should make efficient use of user input. 

Tokens are: 
>> ['It', 'should', 'make', 'efficient', 'use', 'of', 'user', 'input', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('should', 'AUX'), ('make', 'VERB'), ('efficient', 'ADJ'), ('use', 'NOUN'), ('of', 'ADP'), ('user', 'NOUN'), ('input', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('should', 'MD'), ('make', 'VB'), ('efficient', 'JJ'), ('use', 'NN'), ('of', 'IN'), ('user', 'NN'), ('input', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('should', 'should'), ('make', 'make'), ('efficient', 'efficient'), ('use', 'use'), ('of', 'of'), ('user', 'user'), ('input', 'input'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'make'), 'nsubj'), (('should', 'make'), 'aux'), (('make', 'root'), 'root'), (('efficient', 'use'), 'amod'), (('use', 'make'), 'obj'), (('of', 'input'), 'case'), (('user', 'input'), 'compound'), (('input', 'use'), 'nmod'), (('.', 'make'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 Expert Systems Limitations 

Tokens are: 
>> ['Expert', 'Systems', 'Limitations'] 

 UPOS tags are: 
>> [('Expert', 'NOUN'), ('Systems', 'NOUN'), ('Limitations', 'NOUN')] 

 XPOS tags are: 
>> [('Expert', 'NN'), ('Systems', 'NNS'), ('Limitations', 'NNS')] 

 Lemmas are: 
>> [('Expert', 'expert'), ('Systems', 'system'), ('Limitations', 'limitation')] 

 Dependency tags are: 
>> [(('Expert', 'Systems'), 'compound'), (('Systems', 'Limitations'), 'compound'), (('Limitations', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 No technology can offer easy and complete solution. 

Tokens are: 
>> ['No', 'technology', 'can', 'offer', 'easy', 'and', 'complete', 'solution', '.'] 

 UPOS tags are: 
>> [('No', 'DET'), ('technology', 'NOUN'), ('can', 'AUX'), ('offer', 'VERB'), ('easy', 'ADJ'), ('and', 'CCONJ'), ('complete', 'ADJ'), ('solution', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('No', 'DT'), ('technology', 'NN'), ('can', 'MD'), ('offer', 'VB'), ('easy', 'JJ'), ('and', 'CC'), ('complete', 'JJ'), ('solution', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('No', 'no'), ('technology', 'technology'), ('can', 'can'), ('offer', 'offer'), ('easy', 'easy'), ('and', 'and'), ('complete', 'complete'), ('solution', 'solution'), ('.', '.')] 

 Dependency tags are: 
>> [(('No', 'technology'), 'det'), (('technology', 'offer'), 'nsubj'), (('can', 'offer'), 'aux'), (('offer', 'root'), 'root'), (('easy', 'solution'), 'amod'), (('and', 'complete'), 'cc'), (('complete', 'easy'), 'conj'), (('solution', 'offer'), 'obj'), (('.', 'offer'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 Large systems are costly, require significant development time, and computer resources. 

Tokens are: 
>> ['Large', 'systems', 'are', 'costly', ',', 'require', 'significant', 'development', 'time', ',', 'and', 'computer', 'resources', '.'] 

 UPOS tags are: 
>> [('Large', 'ADJ'), ('systems', 'NOUN'), ('are', 'AUX'), ('costly', 'ADJ'), (',', 'PUNCT'), ('require', 'VERB'), ('significant', 'ADJ'), ('development', 'NOUN'), ('time', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('computer', 'NOUN'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Large', 'JJ'), ('systems', 'NNS'), ('are', 'VBP'), ('costly', 'JJ'), (',', ','), ('require', 'VBP'), ('significant', 'JJ'), ('development', 'NN'), ('time', 'NN'), (',', ','), ('and', 'CC'), ('computer', 'NN'), ('resources', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Large', 'large'), ('systems', 'system'), ('are', 'be'), ('costly', 'costly'), (',', ','), ('require', 'require'), ('significant', 'significant'), ('development', 'development'), ('time', 'time'), (',', ','), ('and', 'and'), ('computer', 'computer'), ('resources', 'resource'), ('.', '.')] 

 Dependency tags are: 
>> [(('Large', 'systems'), 'amod'), (('systems', 'costly'), 'nsubj'), (('are', 'costly'), 'cop'), (('costly', 'root'), 'root'), ((',', 'require'), 'punct'), (('require', 'costly'), 'conj'), (('significant', 'time'), 'amod'), (('development', 'time'), 'compound'), (('time', 'require'), 'obj'), ((',', 'resources'), 'punct'), (('and', 'resources'), 'cc'), (('computer', 'resources'), 'compound'), (('resources', 'time'), 'conj'), (('.', 'costly'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 ESs have their limitations which include − · Limitations of the technology · Difficult knowledge acquisition · ES are difficult to maintain · High development costs Applications of Expert System 

Tokens are: 
>> ['ESs', 'have', 'their', 'limitations', 'which', 'include', '−', '·', 'Limitations', 'of', 'the', 'technology', '·', 'Difficult', 'knowledge', 'acquisition', '·', 'ES', 'are', 'difficult', 'to', 'maintain', '·', 'High', 'development', 'costs', 'Applications', 'of', 'Expert', 'System'] 

 UPOS tags are: 
>> [('ESs', 'PROPN'), ('have', 'VERB'), ('their', 'PRON'), ('limitations', 'NOUN'), ('which', 'PRON'), ('include', 'VERB'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Limitations', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('technology', 'NOUN'), ('·', 'PUNCT'), ('Difficult', 'ADJ'), ('knowledge', 'NOUN'), ('acquisition', 'NOUN'), ('·', 'PUNCT'), ('ES', 'NOUN'), ('are', 'AUX'), ('difficult', 'ADJ'), ('to', 'PART'), ('maintain', 'VERB'), ('·', 'PUNCT'), ('High', 'ADJ'), ('development', 'NOUN'), ('costs', 'NOUN'), ('Applications', 'NOUN'), ('of', 'ADP'), ('Expert', 'NOUN'), ('System', 'NOUN')] 

 XPOS tags are: 
>> [('ESs', 'NNP'), ('have', 'VBP'), ('their', 'PRP$'), ('limitations', 'NNS'), ('which', 'WDT'), ('include', 'VBP'), ('−', ','), ('·', 'NFP'), ('Limitations', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('technology', 'NN'), ('·', 'NFP'), ('Difficult', 'JJ'), ('knowledge', 'NN'), ('acquisition', 'NN'), ('·', 'NFP'), ('ES', 'NN'), ('are', 'VBP'), ('difficult', 'JJ'), ('to', 'TO'), ('maintain', 'VB'), ('·', 'NFP'), ('High', 'JJ'), ('development', 'NN'), ('costs', 'NNS'), ('Applications', 'NNS'), ('of', 'IN'), ('Expert', 'NN'), ('System', 'NN')] 

 Lemmas are: 
>> [('ESs', 'ESs'), ('have', 'have'), ('their', 'they'), ('limitations', 'limitation'), ('which', 'which'), ('include', 'include'), ('−', "''"), ('·', '·'), ('Limitations', 'limitation'), ('of', 'of'), ('the', 'the'), ('technology', 'technology'), ('·', '·'), ('Difficult', 'difficult'), ('knowledge', 'knowledge'), ('acquisition', 'acquisition'), ('·', '·'), ('ES', 'es'), ('are', 'be'), ('difficult', 'difficult'), ('to', 'to'), ('maintain', 'maintain'), ('·', '·'), ('High', 'high'), ('development', 'development'), ('costs', 'cost'), ('Applications', 'application'), ('of', 'of'), ('Expert', 'expert'), ('System', 'system')] 

 Dependency tags are: 
>> [(('ESs', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('their', 'limitations'), 'nmod:poss'), (('limitations', 'have'), 'obj'), (('which', 'include'), 'nsubj'), (('include', 'limitations'), 'acl:relcl'), (('−', 'Limitations'), 'punct'), (('·', 'Limitations'), 'punct'), (('Limitations', 'have'), 'parataxis'), (('of', 'technology'), 'case'), (('the', 'technology'), 'det'), (('technology', 'Limitations'), 'nmod'), (('·', 'acquisition'), 'punct'), (('Difficult', 'acquisition'), 'amod'), (('knowledge', 'acquisition'), 'compound'), (('acquisition', 'Limitations'), 'appos'), (('·', 'difficult'), 'punct'), (('ES', 'difficult'), 'nsubj'), (('are', 'difficult'), 'cop'), (('difficult', 'have'), 'parataxis'), (('to', 'maintain'), 'mark'), (('maintain', 'difficult'), 'xcomp'), (('·', 'Applications'), 'punct'), (('High', 'development'), 'amod'), (('development', 'costs'), 'compound'), (('costs', 'Applications'), 'compound'), (('Applications', 'maintain'), 'obj'), (('of', 'System'), 'case'), (('Expert', 'System'), 'compound'), (('System', 'Applications'), 'nmod')]

 Named Entities are: 
>> [('ESs', 'ORG')]

========================== Sentence 61 ===========================

 The following table shows where ES can be applied. 

Tokens are: 
>> ['The', 'following', 'table', 'shows', 'where', 'ES', 'can', 'be', 'applied', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('following', 'VERB'), ('table', 'NOUN'), ('shows', 'VERB'), ('where', 'SCONJ'), ('ES', 'PROPN'), ('can', 'AUX'), ('be', 'AUX'), ('applied', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('following', 'VBG'), ('table', 'NN'), ('shows', 'VBZ'), ('where', 'WRB'), ('ES', 'NNP'), ('can', 'MD'), ('be', 'VB'), ('applied', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('following', 'follow'), ('table', 'table'), ('shows', 'show'), ('where', 'where'), ('ES', 'ES'), ('can', 'can'), ('be', 'be'), ('applied', 'apply'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'table'), 'det'), (('following', 'table'), 'amod'), (('table', 'shows'), 'nsubj'), (('shows', 'root'), 'root'), (('where', 'applied'), 'mark'), (('ES', 'applied'), 'nsubj:pass'), (('can', 'applied'), 'aux'), (('be', 'applied'), 'aux:pass'), (('applied', 'shows'), 'ccomp'), (('.', 'shows'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 62 ===========================

 Application 	Description  	Design Domain 	Camera lens design, automobile design. 

Tokens are: 
>> ['Application', 'Description', 'Design', 'Domain', 'Camera', 'lens', 'design', ',', 'automobile', 'design', '.'] 

 UPOS tags are: 
>> [('Application', 'NOUN'), ('Description', 'NOUN'), ('Design', 'NOUN'), ('Domain', 'NOUN'), ('Camera', 'NOUN'), ('lens', 'NOUN'), ('design', 'NOUN'), (',', 'PUNCT'), ('automobile', 'NOUN'), ('design', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Application', 'NN'), ('Description', 'NN'), ('Design', 'NN'), ('Domain', 'NN'), ('Camera', 'NN'), ('lens', 'NN'), ('design', 'NN'), (',', ','), ('automobile', 'NN'), ('design', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Application', 'application'), ('Description', 'description'), ('Design', 'design'), ('Domain', 'domain'), ('Camera', 'camera'), ('lens', 'lens'), ('design', 'design'), (',', ','), ('automobile', 'automobile'), ('design', 'design'), ('.', '.')] 

 Dependency tags are: 
>> [(('Application', 'Description'), 'compound'), (('Description', 'Camera'), 'compound'), (('Design', 'Domain'), 'compound'), (('Domain', 'Camera'), 'compound'), (('Camera', 'root'), 'root'), (('lens', 'design'), 'compound'), (('design', 'Camera'), 'conj'), ((',', 'design'), 'punct'), (('automobile', 'design'), 'compound'), (('design', 'design'), 'conj'), (('.', 'Camera'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 Medical Domain 	Diagnosis Systems to deduce cause of disease from observed data, conduction medical operations on humans. 

Tokens are: 
>> ['Medical', 'Domain', 'Diagnosis', 'Systems', 'to', 'deduce', 'cause', 'of', 'disease', 'from', 'observed', 'data', ',', 'conduction', 'medical', 'operations', 'on', 'humans', '.'] 

 UPOS tags are: 
>> [('Medical', 'ADJ'), ('Domain', 'NOUN'), ('Diagnosis', 'NOUN'), ('Systems', 'NOUN'), ('to', 'PART'), ('deduce', 'VERB'), ('cause', 'NOUN'), ('of', 'ADP'), ('disease', 'NOUN'), ('from', 'ADP'), ('observed', 'VERB'), ('data', 'NOUN'), (',', 'PUNCT'), ('conduction', 'NOUN'), ('medical', 'ADJ'), ('operations', 'NOUN'), ('on', 'ADP'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Medical', 'JJ'), ('Domain', 'NN'), ('Diagnosis', 'NN'), ('Systems', 'NNS'), ('to', 'TO'), ('deduce', 'VB'), ('cause', 'NN'), ('of', 'IN'), ('disease', 'NN'), ('from', 'IN'), ('observed', 'VBN'), ('data', 'NNS'), (',', ','), ('conduction', 'NN'), ('medical', 'JJ'), ('operations', 'NNS'), ('on', 'IN'), ('humans', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Medical', 'Medical'), ('Domain', 'domain'), ('Diagnosis', 'diagnosis'), ('Systems', 'system'), ('to', 'to'), ('deduce', 'deduce'), ('cause', 'cause'), ('of', 'of'), ('disease', 'disease'), ('from', 'from'), ('observed', 'observe'), ('data', 'datum'), (',', ','), ('conduction', 'conduction'), ('medical', 'medical'), ('operations', 'operation'), ('on', 'on'), ('humans', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('Medical', 'Domain'), 'amod'), (('Domain', 'Diagnosis'), 'compound'), (('Diagnosis', 'Systems'), 'compound'), (('Systems', 'root'), 'root'), (('to', 'deduce'), 'mark'), (('deduce', 'Systems'), 'acl'), (('cause', 'deduce'), 'obj'), (('of', 'disease'), 'case'), (('disease', 'cause'), 'nmod'), (('from', 'data'), 'case'), (('observed', 'data'), 'amod'), (('data', 'deduce'), 'obl'), ((',', 'operations'), 'punct'), (('conduction', 'operations'), 'compound'), (('medical', 'operations'), 'amod'), (('operations', 'data'), 'conj'), (('on', 'humans'), 'case'), (('humans', 'operations'), 'nmod'), (('.', 'Systems'), 'punct')]

 Named Entities are: 
>> [('Medical Domain \tDiagnosis Systems', 'ORG')]

========================== Sentence 64 ===========================

 Monitoring Systems 	Comparing data continuously with observed system or with prescribed behavior such as leakage monitoring in long petroleum pipeline. 

Tokens are: 
>> ['Monitoring', 'Systems', 'Comparing', 'data', 'continuously', 'with', 'observed', 'system', 'or', 'with', 'prescribed', 'behavior', 'such', 'as', 'leakage', 'monitoring', 'in', 'long', 'petroleum', 'pipeline', '.'] 

 UPOS tags are: 
>> [('Monitoring', 'VERB'), ('Systems', 'NOUN'), ('Comparing', 'VERB'), ('data', 'NOUN'), ('continuously', 'ADV'), ('with', 'ADP'), ('observed', 'VERB'), ('system', 'NOUN'), ('or', 'CCONJ'), ('with', 'ADP'), ('prescribed', 'VERB'), ('behavior', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('leakage', 'NOUN'), ('monitoring', 'NOUN'), ('in', 'ADP'), ('long', 'ADJ'), ('petroleum', 'NOUN'), ('pipeline', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Monitoring', 'VBG'), ('Systems', 'NNS'), ('Comparing', 'VBG'), ('data', 'NNS'), ('continuously', 'RB'), ('with', 'IN'), ('observed', 'VBN'), ('system', 'NN'), ('or', 'CC'), ('with', 'IN'), ('prescribed', 'VBN'), ('behavior', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('leakage', 'NN'), ('monitoring', 'NN'), ('in', 'IN'), ('long', 'JJ'), ('petroleum', 'NN'), ('pipeline', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Monitoring', 'monitor'), ('Systems', 'system'), ('Comparing', 'Comparing'), ('data', 'datum'), ('continuously', 'continuously'), ('with', 'with'), ('observed', 'observe'), ('system', 'system'), ('or', 'or'), ('with', 'with'), ('prescribed', 'prescribe'), ('behavior', 'behavior'), ('such', 'such'), ('as', 'as'), ('leakage', 'leakage'), ('monitoring', 'monitoring'), ('in', 'in'), ('long', 'long'), ('petroleum', 'petroleum'), ('pipeline', 'pipeline'), ('.', '.')] 

 Dependency tags are: 
>> [(('Monitoring', 'root'), 'root'), (('Systems', 'Monitoring'), 'obj'), (('Comparing', 'Systems'), 'acl'), (('data', 'Comparing'), 'obj'), (('continuously', 'Comparing'), 'advmod'), (('with', 'system'), 'case'), (('observed', 'system'), 'amod'), (('system', 'Comparing'), 'obl'), (('or', 'behavior'), 'cc'), (('with', 'behavior'), 'case'), (('prescribed', 'behavior'), 'amod'), (('behavior', 'system'), 'conj'), (('such', 'monitoring'), 'case'), (('as', 'such'), 'fixed'), (('leakage', 'monitoring'), 'compound'), (('monitoring', 'behavior'), 'nmod'), (('in', 'pipeline'), 'case'), (('long', 'pipeline'), 'amod'), (('petroleum', 'pipeline'), 'compound'), (('pipeline', 'monitoring'), 'nmod'), (('.', 'Monitoring'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 65 ===========================

 Process Control Systems 

Tokens are: 
>> ['Process', 'Control', 'Systems'] 

 UPOS tags are: 
>> [('Process', 'NOUN'), ('Control', 'NOUN'), ('Systems', 'NOUN')] 

 XPOS tags are: 
>> [('Process', 'NN'), ('Control', 'NN'), ('Systems', 'NNS')] 

 Lemmas are: 
>> [('Process', 'process'), ('Control', 'control'), ('Systems', 'system')] 

 Dependency tags are: 
>> [(('Process', 'Control'), 'compound'), (('Control', 'Systems'), 'compound'), (('Systems', 'root'), 'root')]

 Named Entities are: 
>> [('Process Control Systems', 'ORG')]

========================== Sentence 66 ===========================

 Controlling a physical process based on monitoring. 

Tokens are: 
>> ['Controlling', 'a', 'physical', 'process', 'based', 'on', 'monitoring', '.'] 

 UPOS tags are: 
>> [('Controlling', 'VERB'), ('a', 'DET'), ('physical', 'ADJ'), ('process', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('monitoring', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Controlling', 'VBG'), ('a', 'DT'), ('physical', 'JJ'), ('process', 'NN'), ('based', 'VBN'), ('on', 'IN'), ('monitoring', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Controlling', 'control'), ('a', 'a'), ('physical', 'physical'), ('process', 'process'), ('based', 'base'), ('on', 'on'), ('monitoring', 'monitoring'), ('.', '.')] 

 Dependency tags are: 
>> [(('Controlling', 'root'), 'root'), (('a', 'process'), 'det'), (('physical', 'process'), 'amod'), (('process', 'Controlling'), 'obj'), (('based', 'process'), 'acl'), (('on', 'monitoring'), 'case'), (('monitoring', 'based'), 'obl'), (('.', 'Controlling'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 67 ===========================

 Knowledge Domain 	Finding out faults in vehicles, computers. 

Tokens are: 
>> ['Knowledge', 'Domain', 'Finding', 'out', 'faults', 'in', 'vehicles', ',', 'computers', '.'] 

 UPOS tags are: 
>> [('Knowledge', 'NOUN'), ('Domain', 'NOUN'), ('Finding', 'VERB'), ('out', 'ADP'), ('faults', 'NOUN'), ('in', 'ADP'), ('vehicles', 'NOUN'), (',', 'PUNCT'), ('computers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Knowledge', 'NN'), ('Domain', 'NN'), ('Finding', 'VBG'), ('out', 'RP'), ('faults', 'NNS'), ('in', 'IN'), ('vehicles', 'NNS'), (',', ','), ('computers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Knowledge', 'knowledge'), ('Domain', 'domain'), ('Finding', 'find'), ('out', 'out'), ('faults', 'fault'), ('in', 'in'), ('vehicles', 'vehicle'), (',', ','), ('computers', 'computer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Knowledge', 'Domain'), 'compound'), (('Domain', 'root'), 'root'), (('Finding', 'Domain'), 'acl'), (('out', 'Finding'), 'compound:prt'), (('faults', 'Finding'), 'obj'), (('in', 'vehicles'), 'case'), (('vehicles', 'faults'), 'nmod'), ((',', 'computers'), 'punct'), (('computers', 'vehicles'), 'conj'), (('.', 'Domain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 68 ===========================

 Finance/Commerce 	Detection of possible fraud, suspicious transactions, stock market trading, Airline scheduling, cargo scheduling. 

Tokens are: 
>> ['Finance', '/', 'Commerce', 'Detection', 'of', 'possible', 'fraud', ',', 'suspicious', 'transactions', ',', 'stock', 'market', 'trading', ',', 'Airline', 'scheduling', ',', 'cargo', 'scheduling', '.'] 

 UPOS tags are: 
>> [('Finance', 'NOUN'), ('/', 'PUNCT'), ('Commerce', 'NOUN'), ('Detection', 'NOUN'), ('of', 'ADP'), ('possible', 'ADJ'), ('fraud', 'NOUN'), (',', 'PUNCT'), ('suspicious', 'ADJ'), ('transactions', 'NOUN'), (',', 'PUNCT'), ('stock', 'NOUN'), ('market', 'NOUN'), ('trading', 'NOUN'), (',', 'PUNCT'), ('Airline', 'NOUN'), ('scheduling', 'NOUN'), (',', 'PUNCT'), ('cargo', 'NOUN'), ('scheduling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Finance', 'NN'), ('/', ','), ('Commerce', 'NN'), ('Detection', 'NN'), ('of', 'IN'), ('possible', 'JJ'), ('fraud', 'NN'), (',', ','), ('suspicious', 'JJ'), ('transactions', 'NNS'), (',', ','), ('stock', 'NN'), ('market', 'NN'), ('trading', 'NN'), (',', ','), ('Airline', 'NN'), ('scheduling', 'NN'), (',', ','), ('cargo', 'NN'), ('scheduling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Finance', 'finance'), ('/', '/'), ('Commerce', 'commerce'), ('Detection', 'detection'), ('of', 'of'), ('possible', 'possible'), ('fraud', 'fraud'), (',', ','), ('suspicious', 'suspicious'), ('transactions', 'transaction'), (',', ','), ('stock', 'stock'), ('market', 'market'), ('trading', 'trading'), (',', ','), ('Airline', 'airline'), ('scheduling', 'scheduling'), (',', ','), ('cargo', 'cargo'), ('scheduling', 'scheduling'), ('.', '.')] 

 Dependency tags are: 
>> [(('Finance', 'Detection'), 'compound'), (('/', 'Commerce'), 'punct'), (('Commerce', 'Finance'), 'conj'), (('Detection', 'root'), 'root'), (('of', 'fraud'), 'case'), (('possible', 'fraud'), 'amod'), (('fraud', 'Detection'), 'nmod'), ((',', 'transactions'), 'punct'), (('suspicious', 'transactions'), 'amod'), (('transactions', 'fraud'), 'conj'), ((',', 'trading'), 'punct'), (('stock', 'trading'), 'compound'), (('market', 'trading'), 'compound'), (('trading', 'fraud'), 'conj'), ((',', 'scheduling'), 'punct'), (('Airline', 'scheduling'), 'compound'), (('scheduling', 'fraud'), 'conj'), ((',', 'scheduling'), 'punct'), (('cargo', 'scheduling'), 'compound'), (('scheduling', 'fraud'), 'conj'), (('.', 'Detection'), 'punct')]

 Named Entities are: 
>> [('Airline', 'ORG')]

========================== Sentence 69 ===========================

 Expert System Technology 

Tokens are: 
>> ['Expert', 'System', 'Technology'] 

 UPOS tags are: 
>> [('Expert', 'NOUN'), ('System', 'NOUN'), ('Technology', 'NOUN')] 

 XPOS tags are: 
>> [('Expert', 'NN'), ('System', 'NN'), ('Technology', 'NN')] 

 Lemmas are: 
>> [('Expert', 'expert'), ('System', 'system'), ('Technology', 'technology')] 

 Dependency tags are: 
>> [(('Expert', 'System'), 'compound'), (('System', 'Technology'), 'compound'), (('Technology', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 70 ===========================

 There are several levels of ES technologies available. 

Tokens are: 
>> ['There', 'are', 'several', 'levels', 'of', 'ES', 'technologies', 'available', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('several', 'ADJ'), ('levels', 'NOUN'), ('of', 'ADP'), ('ES', 'NOUN'), ('technologies', 'NOUN'), ('available', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('several', 'JJ'), ('levels', 'NNS'), ('of', 'IN'), ('ES', 'NN'), ('technologies', 'NNS'), ('available', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('several', 'several'), ('levels', 'level'), ('of', 'of'), ('ES', 'es'), ('technologies', 'technology'), ('available', 'available'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('several', 'levels'), 'amod'), (('levels', 'are'), 'nsubj'), (('of', 'technologies'), 'case'), (('ES', 'technologies'), 'compound'), (('technologies', 'levels'), 'nmod'), (('available', 'technologies'), 'amod'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 71 ===========================

 Expert systems technologies include − · Expert System Development Environment − 

Tokens are: 
>> ['Expert', 'systems', 'technologies', 'include', '−', '·', 'Expert', 'System', 'Development', 'Environment', '−'] 

 UPOS tags are: 
>> [('Expert', 'NOUN'), ('systems', 'NOUN'), ('technologies', 'NOUN'), ('include', 'VERB'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Expert', 'NOUN'), ('System', 'NOUN'), ('Development', 'NOUN'), ('Environment', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Expert', 'NN'), ('systems', 'NNS'), ('technologies', 'NNS'), ('include', 'VBP'), ('−', ','), ('·', 'NFP'), ('Expert', 'NN'), ('System', 'NN'), ('Development', 'NN'), ('Environment', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('Expert', 'expert'), ('systems', 'system'), ('technologies', 'technology'), ('include', 'include'), ('−', "''"), ('·', '·'), ('Expert', 'expert'), ('System', 'system'), ('Development', 'development'), ('Environment', 'environment'), ('−', "''")] 

 Dependency tags are: 
>> [(('Expert', 'systems'), 'compound'), (('systems', 'technologies'), 'compound'), (('technologies', 'include'), 'nsubj'), (('include', 'root'), 'root'), (('−', 'include'), 'punct'), (('·', 'Environment'), 'punct'), (('Expert', 'System'), 'compound'), (('System', 'Environment'), 'compound'), (('Development', 'Environment'), 'compound'), (('Environment', 'include'), 'obj'), (('−', 'include'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 72 ===========================

 The ES development environment includes hardware and tools. 

Tokens are: 
>> ['The', 'ES', 'development', 'environment', 'includes', 'hardware', 'and', 'tools', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ES', 'PROPN'), ('development', 'NOUN'), ('environment', 'NOUN'), ('includes', 'VERB'), ('hardware', 'NOUN'), ('and', 'CCONJ'), ('tools', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ES', 'NNP'), ('development', 'NN'), ('environment', 'NN'), ('includes', 'VBZ'), ('hardware', 'NN'), ('and', 'CC'), ('tools', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ES', 'ES'), ('development', 'development'), ('environment', 'environment'), ('includes', 'include'), ('hardware', 'hardware'), ('and', 'and'), ('tools', 'tool'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'environment'), 'det'), (('ES', 'environment'), 'compound'), (('development', 'environment'), 'compound'), (('environment', 'includes'), 'nsubj'), (('includes', 'root'), 'root'), (('hardware', 'includes'), 'obj'), (('and', 'tools'), 'cc'), (('tools', 'hardware'), 'conj'), (('.', 'includes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 73 ===========================

 They are − · Workstations, minicomputers, mainframes. 

Tokens are: 
>> ['They', 'are', '−', '·', 'Workstations', ',', 'minicomputers', ',', 'mainframes', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('are', 'AUX'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Workstations', 'NOUN'), (',', 'PUNCT'), ('minicomputers', 'NOUN'), (',', 'PUNCT'), ('mainframes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('are', 'VBP'), ('−', ','), ('·', ','), ('Workstations', 'NNS'), (',', ','), ('minicomputers', 'NNS'), (',', ','), ('mainframes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('are', 'be'), ('−', "''"), ('·', '·'), ('Workstations', 'workstation'), (',', ','), ('minicomputers', 'minicomputer'), (',', ','), ('mainframes', 'mainframe'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'are'), 'nsubj'), (('are', 'root'), 'root'), (('−', 'are'), 'punct'), (('·', 'Workstations'), 'punct'), (('Workstations', 'are'), 'parataxis'), ((',', 'minicomputers'), 'punct'), (('minicomputers', 'Workstations'), 'conj'), ((',', 'mainframes'), 'punct'), (('mainframes', 'Workstations'), 'conj'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 · High level Symbolic Programming Languages such as LISt Programming (LISP) and PROgrammation en LOGique (PROLOG). 

Tokens are: 
>> ['·', 'High', 'level', 'Symbolic', 'Programming', 'Languages', 'such', 'as', 'LISt', 'Programming', '(', 'LISP', ')', 'and', 'PROgrammation', 'en', 'LOGique', '(', 'PROLOG', ')', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('High', 'ADJ'), ('level', 'NOUN'), ('Symbolic', 'ADJ'), ('Programming', 'NOUN'), ('Languages', 'PROPN'), ('such', 'ADJ'), ('as', 'ADP'), ('LISt', 'PROPN'), ('Programming', 'PROPN'), ('(', 'PUNCT'), ('LISP', 'PROPN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('PROgrammation', 'PROPN'), ('en', 'PROPN'), ('LOGique', 'PROPN'), ('(', 'PUNCT'), ('PROLOG', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('High', 'JJ'), ('level', 'NN'), ('Symbolic', 'JJ'), ('Programming', 'NN'), ('Languages', 'NNPS'), ('such', 'JJ'), ('as', 'IN'), ('LISt', 'NNP'), ('Programming', 'NNP'), ('(', '-LRB-'), ('LISP', 'NNP'), (')', '-RRB-'), ('and', 'CC'), ('PROgrammation', 'NNP'), ('en', 'NNP'), ('LOGique', 'NNP'), ('(', '-LRB-'), ('PROLOG', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('High', 'high'), ('level', 'level'), ('Symbolic', 'Symbolic'), ('Programming', 'programming'), ('Languages', 'Language'), ('such', 'such'), ('as', 'as'), ('LISt', 'LISt'), ('Programming', 'Programming'), ('(', '('), ('LISP', 'LISP'), (')', ')'), ('and', 'and'), ('PROgrammation', 'PROgrammation'), ('en', 'en'), ('LOGique', 'LOGique'), ('(', '('), ('PROLOG', 'PROLOG'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'level'), 'punct'), (('High', 'level'), 'amod'), (('level', 'Languages'), 'compound'), (('Symbolic', 'Languages'), 'amod'), (('Programming', 'Languages'), 'compound'), (('Languages', 'root'), 'root'), (('such', 'Programming'), 'case'), (('as', 'such'), 'fixed'), (('LISt', 'Programming'), 'compound'), (('Programming', 'Languages'), 'nmod'), (('(', 'LISP'), 'punct'), (('LISP', 'Programming'), 'appos'), ((')', 'LISP'), 'punct'), (('and', 'PROgrammation'), 'cc'), (('PROgrammation', 'Programming'), 'conj'), (('en', 'PROgrammation'), 'flat'), (('LOGique', 'PROgrammation'), 'flat'), (('(', 'PROLOG'), 'punct'), (('PROLOG', 'PROgrammation'), 'appos'), ((')', 'PROLOG'), 'punct'), (('.', 'Languages'), 'punct')]

 Named Entities are: 
>> [('LISt Programming', 'ORG'), ('LISP', 'ORG'), ('PROgrammation en LOGique', 'ORG'), ('PROLOG', 'ORG')]

========================== Sentence 75 ===========================

 · Large databases. 

Tokens are: 
>> ['·', 'Large', 'databases', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Large', 'ADJ'), ('databases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Large', 'JJ'), ('databases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Large', 'large'), ('databases', 'database'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'databases'), 'punct'), (('Large', 'databases'), 'amod'), (('databases', 'root'), 'root'), (('.', 'databases'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 76 ===========================

 · Tools − 

Tokens are: 
>> ['·', 'Tools', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Tools', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Tools', 'NNS'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Tools', 'tool'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Tools'), 'punct'), (('Tools', 'root'), 'root'), (('−', 'Tools'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 77 ===========================

 They reduce the effort and cost involved in developing an expert system to large extent. 

Tokens are: 
>> ['They', 'reduce', 'the', 'effort', 'and', 'cost', 'involved', 'in', 'developing', 'an', 'expert', 'system', 'to', 'large', 'extent', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('reduce', 'VERB'), ('the', 'DET'), ('effort', 'NOUN'), ('and', 'CCONJ'), ('cost', 'VERB'), ('involved', 'VERB'), ('in', 'SCONJ'), ('developing', 'VERB'), ('an', 'DET'), ('expert', 'NOUN'), ('system', 'NOUN'), ('to', 'ADP'), ('large', 'ADJ'), ('extent', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('reduce', 'VBP'), ('the', 'DT'), ('effort', 'NN'), ('and', 'CC'), ('cost', 'VBP'), ('involved', 'VBN'), ('in', 'IN'), ('developing', 'VBG'), ('an', 'DT'), ('expert', 'NN'), ('system', 'NN'), ('to', 'IN'), ('large', 'JJ'), ('extent', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('reduce', 'reduce'), ('the', 'the'), ('effort', 'effort'), ('and', 'and'), ('cost', 'cost'), ('involved', 'involve'), ('in', 'in'), ('developing', 'develop'), ('an', 'a'), ('expert', 'expert'), ('system', 'system'), ('to', 'to'), ('large', 'large'), ('extent', 'extent'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'reduce'), 'nsubj'), (('reduce', 'root'), 'root'), (('the', 'effort'), 'det'), (('effort', 'reduce'), 'obj'), (('and', 'cost'), 'cc'), (('cost', 'reduce'), 'conj'), (('involved', 'cost'), 'xcomp'), (('in', 'developing'), 'mark'), (('developing', 'involved'), 'advcl'), (('an', 'system'), 'det'), (('expert', 'system'), 'compound'), (('system', 'developing'), 'obj'), (('to', 'extent'), 'case'), (('large', 'extent'), 'amod'), (('extent', 'developing'), 'obl'), (('.', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 78 ===========================

 · Powerful editors and debugging tools with multi-windows. 

Tokens are: 
>> ['·', 'Powerful', 'editors', 'and', 'debugging', 'tools', 'with', 'multi-windows', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Powerful', 'ADJ'), ('editors', 'NOUN'), ('and', 'CCONJ'), ('debugging', 'NOUN'), ('tools', 'NOUN'), ('with', 'ADP'), ('multi-windows', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Powerful', 'JJ'), ('editors', 'NNS'), ('and', 'CC'), ('debugging', 'NN'), ('tools', 'NNS'), ('with', 'IN'), ('multi-windows', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Powerful', 'powerful'), ('editors', 'editor'), ('and', 'and'), ('debugging', 'debugging'), ('tools', 'tool'), ('with', 'with'), ('multi-windows', 'multi-window'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'editors'), 'punct'), (('Powerful', 'editors'), 'amod'), (('editors', 'root'), 'root'), (('and', 'tools'), 'cc'), (('debugging', 'tools'), 'compound'), (('tools', 'editors'), 'conj'), (('with', 'multi-windows'), 'case'), (('multi-windows', 'tools'), 'nmod'), (('.', 'editors'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 79 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 80 ===========================

 They provide rapid prototyping · Have Inbuilt definitions of model, knowledge representation, and inference design. 

Tokens are: 
>> ['They', 'provide', 'rapid', 'prototyping', '·', 'Have', 'Inbuilt', 'definitions', 'of', 'model', ',', 'knowledge', 'representation', ',', 'and', 'inference', 'design', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('provide', 'VERB'), ('rapid', 'ADJ'), ('prototyping', 'NOUN'), ('·', 'PUNCT'), ('Have', 'VERB'), ('Inbuilt', 'ADJ'), ('definitions', 'NOUN'), ('of', 'ADP'), ('model', 'NOUN'), (',', 'PUNCT'), ('knowledge', 'NOUN'), ('representation', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('inference', 'NOUN'), ('design', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('provide', 'VBP'), ('rapid', 'JJ'), ('prototyping', 'NN'), ('·', ','), ('Have', 'VB'), ('Inbuilt', 'JJ'), ('definitions', 'NNS'), ('of', 'IN'), ('model', 'NN'), (',', ','), ('knowledge', 'NN'), ('representation', 'NN'), (',', ','), ('and', 'CC'), ('inference', 'NN'), ('design', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('provide', 'provide'), ('rapid', 'rapid'), ('prototyping', 'prototyping'), ('·', '·'), ('Have', 'have'), ('Inbuilt', 'inbuilt'), ('definitions', 'definition'), ('of', 'of'), ('model', 'model'), (',', ','), ('knowledge', 'knowledge'), ('representation', 'representation'), (',', ','), ('and', 'and'), ('inference', 'inference'), ('design', 'design'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'provide'), 'nsubj'), (('provide', 'root'), 'root'), (('rapid', 'prototyping'), 'amod'), (('prototyping', 'provide'), 'obj'), (('·', 'provide'), 'punct'), (('Have', 'provide'), 'parataxis'), (('Inbuilt', 'definitions'), 'amod'), (('definitions', 'Have'), 'obj'), (('of', 'model'), 'case'), (('model', 'definitions'), 'nmod'), ((',', 'representation'), 'punct'), (('knowledge', 'representation'), 'compound'), (('representation', 'model'), 'conj'), ((',', 'design'), 'punct'), (('and', 'design'), 'cc'), (('inference', 'design'), 'compound'), (('design', 'model'), 'conj'), (('.', 'provide'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 81 ===========================

 · Shells − A shell is nothing but an expert system without knowledge base. 

Tokens are: 
>> ['·', 'Shells', '−', 'A', 'shell', 'is', 'nothing', 'but', 'an', 'expert', 'system', 'without', 'knowledge', 'base', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Shells', 'NOUN'), ('−', 'PUNCT'), ('A', 'DET'), ('shell', 'NOUN'), ('is', 'AUX'), ('nothing', 'PRON'), ('but', 'CCONJ'), ('an', 'DET'), ('expert', 'ADJ'), ('system', 'NOUN'), ('without', 'ADP'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Shells', 'NNS'), ('−', ','), ('A', 'DT'), ('shell', 'NN'), ('is', 'VBZ'), ('nothing', 'NN'), ('but', 'CC'), ('an', 'DT'), ('expert', 'JJ'), ('system', 'NN'), ('without', 'IN'), ('knowledge', 'NN'), ('base', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Shells', 'shell'), ('−', "''"), ('A', 'a'), ('shell', 'shell'), ('is', 'be'), ('nothing', 'nothing'), ('but', 'but'), ('an', 'a'), ('expert', 'expert'), ('system', 'system'), ('without', 'without'), ('knowledge', 'knowledge'), ('base', 'base'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Shells'), 'punct'), (('Shells', 'nothing'), 'nsubj'), (('−', 'Shells'), 'punct'), (('A', 'shell'), 'det'), (('shell', 'nothing'), 'nsubj'), (('is', 'nothing'), 'cop'), (('nothing', 'root'), 'root'), (('but', 'system'), 'case'), (('an', 'system'), 'det'), (('expert', 'system'), 'amod'), (('system', 'nothing'), 'conj'), (('without', 'base'), 'case'), (('knowledge', 'base'), 'compound'), (('base', 'system'), 'nmod'), (('.', 'nothing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 A shell provides the developers with knowledge acquisition, inference engine, user interface, and explanation facility. 

Tokens are: 
>> ['A', 'shell', 'provides', 'the', 'developers', 'with', 'knowledge', 'acquisition', ',', 'inference', 'engine', ',', 'user', 'interface', ',', 'and', 'explanation', 'facility', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('shell', 'NOUN'), ('provides', 'VERB'), ('the', 'DET'), ('developers', 'NOUN'), ('with', 'ADP'), ('knowledge', 'NOUN'), ('acquisition', 'NOUN'), (',', 'PUNCT'), ('inference', 'NOUN'), ('engine', 'NOUN'), (',', 'PUNCT'), ('user', 'NOUN'), ('interface', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('explanation', 'NOUN'), ('facility', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('shell', 'NN'), ('provides', 'VBZ'), ('the', 'DT'), ('developers', 'NNS'), ('with', 'IN'), ('knowledge', 'NN'), ('acquisition', 'NN'), (',', ','), ('inference', 'NN'), ('engine', 'NN'), (',', ','), ('user', 'NN'), ('interface', 'NN'), (',', ','), ('and', 'CC'), ('explanation', 'NN'), ('facility', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('shell', 'shell'), ('provides', 'provide'), ('the', 'the'), ('developers', 'developer'), ('with', 'with'), ('knowledge', 'knowledge'), ('acquisition', 'acquisition'), (',', ','), ('inference', 'inference'), ('engine', 'engine'), (',', ','), ('user', 'user'), ('interface', 'interface'), (',', ','), ('and', 'and'), ('explanation', 'explanation'), ('facility', 'facility'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'shell'), 'det'), (('shell', 'provides'), 'nsubj'), (('provides', 'root'), 'root'), (('the', 'developers'), 'det'), (('developers', 'provides'), 'obj'), (('with', 'acquisition'), 'case'), (('knowledge', 'acquisition'), 'compound'), (('acquisition', 'developers'), 'nmod'), ((',', 'engine'), 'punct'), (('inference', 'engine'), 'compound'), (('engine', 'acquisition'), 'conj'), ((',', 'interface'), 'punct'), (('user', 'interface'), 'compound'), (('interface', 'acquisition'), 'conj'), ((',', 'facility'), 'punct'), (('and', 'facility'), 'cc'), (('explanation', 'facility'), 'compound'), (('facility', 'acquisition'), 'conj'), (('.', 'provides'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 83 ===========================

 For example, few shells are given below − · Java Expert System Shell (JESS) that provides fully developed Java API for creating an expert system. 

Tokens are: 
>> ['For', 'example', ',', 'few', 'shells', 'are', 'given', 'below', '−', '·', 'Java', 'Expert', 'System', 'Shell', '(', 'JESS', ')', 'that', 'provides', 'fully', 'developed', 'Java', 'API', 'for', 'creating', 'an', 'expert', 'system', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('example', 'NOUN'), (',', 'PUNCT'), ('few', 'ADJ'), ('shells', 'NOUN'), ('are', 'AUX'), ('given', 'VERB'), ('below', 'ADP'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Java', 'PROPN'), ('Expert', 'PROPN'), ('System', 'PROPN'), ('Shell', 'PROPN'), ('(', 'PUNCT'), ('JESS', 'PROPN'), (')', 'PUNCT'), ('that', 'PRON'), ('provides', 'VERB'), ('fully', 'ADV'), ('developed', 'VERB'), ('Java', 'PROPN'), ('API', 'PROPN'), ('for', 'SCONJ'), ('creating', 'VERB'), ('an', 'DET'), ('expert', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('example', 'NN'), (',', ','), ('few', 'JJ'), ('shells', 'NNS'), ('are', 'VBP'), ('given', 'VBN'), ('below', 'IN'), ('−', ','), ('·', 'NFP'), ('Java', 'NNP'), ('Expert', 'NNP'), ('System', 'NNP'), ('Shell', 'NNP'), ('(', '-LRB-'), ('JESS', 'NNP'), (')', '-RRB-'), ('that', 'WDT'), ('provides', 'VBZ'), ('fully', 'RB'), ('developed', 'VBN'), ('Java', 'NNP'), ('API', 'NNP'), ('for', 'IN'), ('creating', 'VBG'), ('an', 'DT'), ('expert', 'NN'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('example', 'example'), (',', ','), ('few', 'few'), ('shells', 'shell'), ('are', 'be'), ('given', 'give'), ('below', 'below'), ('−', "''"), ('·', '·'), ('Java', 'Java'), ('Expert', 'Expert'), ('System', 'System'), ('Shell', 'Shell'), ('(', '('), ('JESS', 'JESS'), (')', ')'), ('that', 'that'), ('provides', 'provide'), ('fully', 'fully'), ('developed', 'develop'), ('Java', 'Java'), ('API', 'api'), ('for', 'for'), ('creating', 'create'), ('an', 'a'), ('expert', 'expert'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'example'), 'case'), (('example', 'given'), 'obl'), ((',', 'example'), 'punct'), (('few', 'shells'), 'amod'), (('shells', 'given'), 'nsubj:pass'), (('are', 'given'), 'aux:pass'), (('given', 'root'), 'root'), (('below', 'given'), 'obl'), (('−', 'Shell'), 'punct'), (('·', 'Shell'), 'punct'), (('Java', 'Shell'), 'compound'), (('Expert', 'Shell'), 'compound'), (('System', 'Shell'), 'compound'), (('Shell', 'given'), 'obl'), (('(', 'JESS'), 'punct'), (('JESS', 'Shell'), 'appos'), ((')', 'JESS'), 'punct'), (('that', 'provides'), 'nsubj'), (('provides', 'Shell'), 'acl:relcl'), (('fully', 'developed'), 'advmod'), (('developed', 'API'), 'amod'), (('Java', 'API'), 'compound'), (('API', 'provides'), 'obj'), (('for', 'creating'), 'mark'), (('creating', 'provides'), 'advcl'), (('an', 'system'), 'det'), (('expert', 'system'), 'compound'), (('system', 'creating'), 'obj'), (('.', 'given'), 'punct')]

 Named Entities are: 
>> [('Java API', 'PRODUCT')]

========================== Sentence 84 ===========================

 · Vidwan, a shell developed at the National Centre for Software Technology, Mumbai in 1993. 

Tokens are: 
>> ['·', 'Vidwan', ',', 'a', 'shell', 'developed', 'at', 'the', 'National', 'Centre', 'for', 'Software', 'Technology', ',', 'Mumbai', 'in', '1993', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Vidwan', 'PROPN'), (',', 'PUNCT'), ('a', 'DET'), ('shell', 'NOUN'), ('developed', 'VERB'), ('at', 'ADP'), ('the', 'DET'), ('National', 'ADJ'), ('Centre', 'PROPN'), ('for', 'ADP'), ('Software', 'PROPN'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Mumbai', 'PROPN'), ('in', 'ADP'), ('1993', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Vidwan', 'NNP'), (',', ','), ('a', 'DT'), ('shell', 'NN'), ('developed', 'VBD'), ('at', 'IN'), ('the', 'DT'), ('National', 'NNP'), ('Centre', 'NNP'), ('for', 'IN'), ('Software', 'NNP'), ('Technology', 'NNP'), (',', ','), ('Mumbai', 'NNP'), ('in', 'IN'), ('1993', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Vidwan', 'Vidwan'), (',', ','), ('a', 'a'), ('shell', 'shell'), ('developed', 'develop'), ('at', 'at'), ('the', 'the'), ('National', 'National'), ('Centre', 'Centre'), ('for', 'for'), ('Software', 'Software'), ('Technology', 'Technology'), (',', ','), ('Mumbai', 'Mumbai'), ('in', 'in'), ('1993', '1993'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'developed'), 'punct'), (('Vidwan', 'developed'), 'nsubj'), ((',', 'developed'), 'punct'), (('a', 'shell'), 'det'), (('shell', 'developed'), 'nsubj'), (('developed', 'root'), 'root'), (('at', 'Centre'), 'case'), (('the', 'Centre'), 'det'), (('National', 'Centre'), 'amod'), (('Centre', 'developed'), 'obl'), (('for', 'Technology'), 'case'), (('Software', 'Technology'), 'compound'), (('Technology', 'Centre'), 'nmod'), ((',', 'Technology'), 'punct'), (('Mumbai', 'Technology'), 'appos'), (('in', '1993'), 'case'), (('1993', 'developed'), 'obl'), (('.', 'developed'), 'punct')]

 Named Entities are: 
>> [('Vidwan', 'ORG'), ('the National Centre for Software Technology', 'ORG'), ('Mumbai', 'GPE'), ('1993', 'DATE')]

========================== Sentence 85 ===========================

 It enables knowledge encoding in the form of IF-THEN rules. 

Tokens are: 
>> ['It', 'enables', 'knowledge', 'encoding', 'in', 'the', 'form', 'of', 'IF', '-', 'THEN', 'rules', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('enables', 'VERB'), ('knowledge', 'NOUN'), ('encoding', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('IF', 'SCONJ'), ('-', 'PUNCT'), ('THEN', 'ADV'), ('rules', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('enables', 'VBZ'), ('knowledge', 'NN'), ('encoding', 'NN'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('IF', 'IN'), ('-', ','), ('THEN', 'RB'), ('rules', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('enables', 'enable'), ('knowledge', 'knowledge'), ('encoding', 'encoding'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('IF', 'if'), ('-', '-'), ('THEN', 'then'), ('rules', 'rule'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'enables'), 'nsubj'), (('enables', 'root'), 'root'), (('knowledge', 'encoding'), 'compound'), (('encoding', 'enables'), 'obj'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'enables'), 'obl'), (('of', 'IF'), 'case'), (('IF', 'rules'), 'mark'), (('-', 'rules'), 'punct'), (('THEN', 'rules'), 'advmod'), (('rules', 'enables'), 'advcl'), (('.', 'enables'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 86 ===========================

 Development of Expert Systems: General Steps 

Tokens are: 
>> ['Development', 'of', 'Expert', 'Systems', ':', 'General', 'Steps'] 

 UPOS tags are: 
>> [('Development', 'NOUN'), ('of', 'ADP'), ('Expert', 'NOUN'), ('Systems', 'NOUN'), (':', 'PUNCT'), ('General', 'ADJ'), ('Steps', 'NOUN')] 

 XPOS tags are: 
>> [('Development', 'NN'), ('of', 'IN'), ('Expert', 'NN'), ('Systems', 'NNS'), (':', ':'), ('General', 'JJ'), ('Steps', 'NNS')] 

 Lemmas are: 
>> [('Development', 'development'), ('of', 'of'), ('Expert', 'expert'), ('Systems', 'system'), (':', ':'), ('General', 'General'), ('Steps', 'step')] 

 Dependency tags are: 
>> [(('Development', 'root'), 'root'), (('of', 'Systems'), 'case'), (('Expert', 'Systems'), 'compound'), (('Systems', 'Development'), 'nmod'), ((':', 'Development'), 'punct'), (('General', 'Steps'), 'amod'), (('Steps', 'Development'), 'appos')]

 Named Entities are: 
>> []

========================== Sentence 87 ===========================

 The process of ES development is iterative. 

Tokens are: 
>> ['The', 'process', 'of', 'ES', 'development', 'is', 'iterative', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('process', 'NOUN'), ('of', 'ADP'), ('ES', 'PROPN'), ('development', 'NOUN'), ('is', 'AUX'), ('iterative', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('process', 'NN'), ('of', 'IN'), ('ES', 'NNP'), ('development', 'NN'), ('is', 'VBZ'), ('iterative', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('process', 'process'), ('of', 'of'), ('ES', 'ES'), ('development', 'development'), ('is', 'be'), ('iterative', 'iterative'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'process'), 'det'), (('process', 'iterative'), 'nsubj'), (('of', 'development'), 'case'), (('ES', 'development'), 'compound'), (('development', 'process'), 'nmod'), (('is', 'iterative'), 'cop'), (('iterative', 'root'), 'root'), (('.', 'iterative'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 88 ===========================

 Steps in developing the ES include − Identify Problem Domain · The problem must be suitable for an expert system to solve it. 

Tokens are: 
>> ['Steps', 'in', 'developing', 'the', 'ES', 'include', '−', 'Identify', 'Problem', 'Domain', '·', 'The', 'problem', 'must', 'be', 'suitable', 'for', 'an', 'expert', 'system', 'to', 'solve', 'it', '.'] 

 UPOS tags are: 
>> [('Steps', 'NOUN'), ('in', 'SCONJ'), ('developing', 'VERB'), ('the', 'DET'), ('ES', 'NOUN'), ('include', 'VERB'), ('−', 'PUNCT'), ('Identify', 'VERB'), ('Problem', 'NOUN'), ('Domain', 'NOUN'), ('·', 'PUNCT'), ('The', 'DET'), ('problem', 'NOUN'), ('must', 'AUX'), ('be', 'AUX'), ('suitable', 'ADJ'), ('for', 'ADP'), ('an', 'DET'), ('expert', 'NOUN'), ('system', 'NOUN'), ('to', 'PART'), ('solve', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Steps', 'NNS'), ('in', 'IN'), ('developing', 'VBG'), ('the', 'DT'), ('ES', 'NN'), ('include', 'VBP'), ('−', ','), ('Identify', 'VB'), ('Problem', 'NN'), ('Domain', 'NN'), ('·', 'NFP'), ('The', 'DT'), ('problem', 'NN'), ('must', 'MD'), ('be', 'VB'), ('suitable', 'JJ'), ('for', 'IN'), ('an', 'DT'), ('expert', 'NN'), ('system', 'NN'), ('to', 'TO'), ('solve', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Steps', 'step'), ('in', 'in'), ('developing', 'develop'), ('the', 'the'), ('ES', 'es'), ('include', 'include'), ('−', "''"), ('Identify', 'identify'), ('Problem', 'problem'), ('Domain', 'domain'), ('·', '·'), ('The', 'the'), ('problem', 'problem'), ('must', 'must'), ('be', 'be'), ('suitable', 'suitable'), ('for', 'for'), ('an', 'a'), ('expert', 'expert'), ('system', 'system'), ('to', 'to'), ('solve', 'solve'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('Steps', 'Identify'), 'nsubj'), (('in', 'developing'), 'mark'), (('developing', 'Steps'), 'acl'), (('the', 'ES'), 'det'), (('ES', 'developing'), 'obj'), (('include', 'root'), 'root'), (('−', 'include'), 'punct'), (('Identify', 'include'), 'ccomp'), (('Problem', 'Domain'), 'compound'), (('Domain', 'Identify'), 'obj'), (('·', 'suitable'), 'punct'), (('The', 'problem'), 'det'), (('problem', 'suitable'), 'nsubj'), (('must', 'suitable'), 'aux'), (('be', 'suitable'), 'cop'), (('suitable', 'Identify'), 'parataxis'), (('for', 'system'), 'case'), (('an', 'system'), 'det'), (('expert', 'system'), 'compound'), (('system', 'suitable'), 'obl'), (('to', 'solve'), 'mark'), (('solve', 'suitable'), 'advcl'), (('it', 'solve'), 'obj'), (('.', 'Identify'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 89 ===========================

 · Find the experts in task domain for the ES project. 

Tokens are: 
>> ['·', 'Find', 'the', 'experts', 'in', 'task', 'domain', 'for', 'the', 'ES', 'project', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Find', 'VERB'), ('the', 'DET'), ('experts', 'NOUN'), ('in', 'ADP'), ('task', 'NOUN'), ('domain', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('ES', 'PROPN'), ('project', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Find', 'VB'), ('the', 'DT'), ('experts', 'NNS'), ('in', 'IN'), ('task', 'NN'), ('domain', 'NN'), ('for', 'IN'), ('the', 'DT'), ('ES', 'NNP'), ('project', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Find', 'find'), ('the', 'the'), ('experts', 'expert'), ('in', 'in'), ('task', 'task'), ('domain', 'domain'), ('for', 'for'), ('the', 'the'), ('ES', 'ES'), ('project', 'project'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Find'), 'punct'), (('Find', 'root'), 'root'), (('the', 'experts'), 'det'), (('experts', 'Find'), 'obj'), (('in', 'domain'), 'case'), (('task', 'domain'), 'compound'), (('domain', 'experts'), 'nmod'), (('for', 'project'), 'case'), (('the', 'project'), 'det'), (('ES', 'project'), 'compound'), (('project', 'Find'), 'obl'), (('.', 'Find'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 90 ===========================

 · Establish cost-effectiveness of the system. 

Tokens are: 
>> ['·', 'Establish', 'cost-effectiveness', 'of', 'the', 'system', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Establish', 'VERB'), ('cost-effectiveness', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('system', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Establish', 'VB'), ('cost-effectiveness', 'NN'), ('of', 'IN'), ('the', 'DT'), ('system', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Establish', 'establish'), ('cost-effectiveness', 'cost-effectiveness'), ('of', 'of'), ('the', 'the'), ('system', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Establish'), 'punct'), (('Establish', 'root'), 'root'), (('cost-effectiveness', 'Establish'), 'obj'), (('of', 'system'), 'case'), (('the', 'system'), 'det'), (('system', 'cost-effectiveness'), 'nmod'), (('.', 'Establish'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 91 ===========================

 Design the System · Identify the ES Technology · Know and establish the degree of integration with the other systems and databases. 

Tokens are: 
>> ['Design', 'the', 'System', '·', 'Identify', 'the', 'ES', 'Technology', '·', 'Know', 'and', 'establish', 'the', 'degree', 'of', 'integration', 'with', 'the', 'other', 'systems', 'and', 'databases', '.'] 

 UPOS tags are: 
>> [('Design', 'VERB'), ('the', 'DET'), ('System', 'NOUN'), ('·', 'PUNCT'), ('Identify', 'VERB'), ('the', 'DET'), ('ES', 'NOUN'), ('Technology', 'NOUN'), ('·', 'PUNCT'), ('Know', 'VERB'), ('and', 'CCONJ'), ('establish', 'VERB'), ('the', 'DET'), ('degree', 'NOUN'), ('of', 'ADP'), ('integration', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('other', 'ADJ'), ('systems', 'NOUN'), ('and', 'CCONJ'), ('databases', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Design', 'VB'), ('the', 'DT'), ('System', 'NN'), ('·', 'NFP'), ('Identify', 'VB'), ('the', 'DT'), ('ES', 'NN'), ('Technology', 'NN'), ('·', 'NFP'), ('Know', 'VB'), ('and', 'CC'), ('establish', 'VB'), ('the', 'DT'), ('degree', 'NN'), ('of', 'IN'), ('integration', 'NN'), ('with', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('systems', 'NNS'), ('and', 'CC'), ('databases', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Design', 'Design'), ('the', 'the'), ('System', 'system'), ('·', '·'), ('Identify', 'identify'), ('the', 'the'), ('ES', 'es'), ('Technology', 'technology'), ('·', '·'), ('Know', 'know'), ('and', 'and'), ('establish', 'establish'), ('the', 'the'), ('degree', 'degree'), ('of', 'of'), ('integration', 'integration'), ('with', 'with'), ('the', 'the'), ('other', 'other'), ('systems', 'system'), ('and', 'and'), ('databases', 'database'), ('.', '.')] 

 Dependency tags are: 
>> [(('Design', 'root'), 'root'), (('the', 'System'), 'det'), (('System', 'Design'), 'obj'), (('·', 'Design'), 'punct'), (('Identify', 'Design'), 'parataxis'), (('the', 'Technology'), 'det'), (('ES', 'Technology'), 'compound'), (('Technology', 'Identify'), 'obj'), (('·', 'Identify'), 'punct'), (('Know', 'Design'), 'parataxis'), (('and', 'establish'), 'cc'), (('establish', 'Know'), 'conj'), (('the', 'degree'), 'det'), (('degree', 'establish'), 'obj'), (('of', 'integration'), 'case'), (('integration', 'degree'), 'nmod'), (('with', 'systems'), 'case'), (('the', 'systems'), 'det'), (('other', 'systems'), 'amod'), (('systems', 'establish'), 'obl'), (('and', 'databases'), 'cc'), (('databases', 'systems'), 'conj'), (('.', 'Design'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 92 ===========================

 · Realize how the concepts can represent the domain knowledge best. 

Tokens are: 
>> ['·', 'Realize', 'how', 'the', 'concepts', 'can', 'represent', 'the', 'domain', 'knowledge', 'best', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Realize', 'VERB'), ('how', 'SCONJ'), ('the', 'DET'), ('concepts', 'NOUN'), ('can', 'AUX'), ('represent', 'VERB'), ('the', 'DET'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('best', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Realize', 'VB'), ('how', 'WRB'), ('the', 'DT'), ('concepts', 'NNS'), ('can', 'MD'), ('represent', 'VB'), ('the', 'DT'), ('domain', 'NN'), ('knowledge', 'NN'), ('best', 'JJS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Realize', 'realize'), ('how', 'how'), ('the', 'the'), ('concepts', 'concept'), ('can', 'can'), ('represent', 'represent'), ('the', 'the'), ('domain', 'domain'), ('knowledge', 'knowledge'), ('best', 'good'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Realize'), 'punct'), (('Realize', 'root'), 'root'), (('how', 'represent'), 'mark'), (('the', 'concepts'), 'det'), (('concepts', 'represent'), 'nsubj'), (('can', 'represent'), 'aux'), (('represent', 'Realize'), 'ccomp'), (('the', 'knowledge'), 'det'), (('domain', 'knowledge'), 'compound'), (('knowledge', 'represent'), 'obj'), (('best', 'represent'), 'xcomp'), (('.', 'Realize'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 93 ===========================

 Develop the Prototype From Knowledge Base: 

Tokens are: 
>> ['Develop', 'the', 'Prototype', 'From', 'Knowledge', 'Base', ':'] 

 UPOS tags are: 
>> [('Develop', 'VERB'), ('the', 'DET'), ('Prototype', 'NOUN'), ('From', 'ADP'), ('Knowledge', 'NOUN'), ('Base', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Develop', 'VB'), ('the', 'DT'), ('Prototype', 'NN'), ('From', 'IN'), ('Knowledge', 'NN'), ('Base', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Develop', 'develop'), ('the', 'the'), ('Prototype', 'prototype'), ('From', 'from'), ('Knowledge', 'knowledge'), ('Base', 'base'), (':', ':')] 

 Dependency tags are: 
>> [(('Develop', 'root'), 'root'), (('the', 'Prototype'), 'det'), (('Prototype', 'Develop'), 'obj'), (('From', 'Base'), 'case'), (('Knowledge', 'Base'), 'compound'), (('Base', 'Develop'), 'obl'), ((':', 'Develop'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 94 ===========================

 The knowledge engineer works to − · Acquire domain knowledge from the expert. 

Tokens are: 
>> ['The', 'knowledge', 'engineer', 'works', 'to', '−', '·', 'Acquire', 'domain', 'knowledge', 'from', 'the', 'expert', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('works', 'VERB'), ('to', 'ADP'), ('−', 'PUNCT'), ('·', 'PUNCT'), ('Acquire', 'VERB'), ('domain', 'NOUN'), ('knowledge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('expert', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('works', 'VBZ'), ('to', 'IN'), ('−', ','), ('·', 'NFP'), ('Acquire', 'VB'), ('domain', 'NN'), ('knowledge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('expert', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('works', 'work'), ('to', 'to'), ('−', "''"), ('·', '·'), ('Acquire', 'acquire'), ('domain', 'domain'), ('knowledge', 'knowledge'), ('from', 'from'), ('the', 'the'), ('expert', 'expert'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'works'), 'nsubj'), (('works', 'root'), 'root'), (('to', 'works'), 'obl'), (('−', 'works'), 'punct'), (('·', 'Acquire'), 'punct'), (('Acquire', 'works'), 'parataxis'), (('domain', 'knowledge'), 'compound'), (('knowledge', 'Acquire'), 'obj'), (('from', 'expert'), 'case'), (('the', 'expert'), 'det'), (('expert', 'Acquire'), 'obl'), (('.', 'works'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 95 ===========================

 · Represent it in the form of If-THEN-ELSE rules. 

Tokens are: 
>> ['·', 'Represent', 'it', 'in', 'the', 'form', 'of', 'If', '-', 'THEN', '-ELSE', 'rules', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Represent', 'VERB'), ('it', 'PRON'), ('in', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('If', 'SCONJ'), ('-', 'PUNCT'), ('THEN', 'ADV'), ('-ELSE', 'NOUN'), ('rules', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Represent', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('If', 'IN'), ('-', ','), ('THEN', 'RB'), ('-ELSE', 'NN'), ('rules', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Represent', 'represent'), ('it', 'it'), ('in', 'in'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('If', 'if'), ('-', '-'), ('THEN', 'then'), ('-ELSE', '-else'), ('rules', 'rule'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Represent'), 'punct'), (('Represent', 'root'), 'root'), (('it', 'Represent'), 'obj'), (('in', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'Represent'), 'obl'), (('of', 'rules'), 'case'), (('If', 'rules'), 'mark'), (('-', 'rules'), 'punct'), (('THEN', 'rules'), 'advmod'), (('-ELSE', 'rules'), 'compound'), (('rules', 'Represent'), 'advcl'), (('.', 'Represent'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 96 ===========================

 Test and Refine the Prototype · The knowledge engineer uses sample cases to test the prototype for any deficiencies in performance. 

Tokens are: 
>> ['Test', 'and', 'Refine', 'the', 'Prototype', '·', 'The', 'knowledge', 'engineer', 'uses', 'sample', 'cases', 'to', 'test', 'the', 'prototype', 'for', 'any', 'deficiencies', 'in', 'performance', '.'] 

 UPOS tags are: 
>> [('Test', 'VERB'), ('and', 'CCONJ'), ('Refine', 'VERB'), ('the', 'DET'), ('Prototype', 'NOUN'), ('·', 'PUNCT'), ('The', 'DET'), ('knowledge', 'NOUN'), ('engineer', 'NOUN'), ('uses', 'VERB'), ('sample', 'NOUN'), ('cases', 'NOUN'), ('to', 'PART'), ('test', 'VERB'), ('the', 'DET'), ('prototype', 'NOUN'), ('for', 'ADP'), ('any', 'DET'), ('deficiencies', 'NOUN'), ('in', 'ADP'), ('performance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Test', 'VB'), ('and', 'CC'), ('Refine', 'VB'), ('the', 'DT'), ('Prototype', 'NN'), ('·', 'NFP'), ('The', 'DT'), ('knowledge', 'NN'), ('engineer', 'NN'), ('uses', 'VBZ'), ('sample', 'NN'), ('cases', 'NNS'), ('to', 'TO'), ('test', 'VB'), ('the', 'DT'), ('prototype', 'NN'), ('for', 'IN'), ('any', 'DT'), ('deficiencies', 'NNS'), ('in', 'IN'), ('performance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Test', 'test'), ('and', 'and'), ('Refine', 'refine'), ('the', 'the'), ('Prototype', 'prototype'), ('·', '·'), ('The', 'the'), ('knowledge', 'knowledge'), ('engineer', 'engineer'), ('uses', 'use'), ('sample', 'sample'), ('cases', 'case'), ('to', 'to'), ('test', 'test'), ('the', 'the'), ('prototype', 'prototype'), ('for', 'for'), ('any', 'any'), ('deficiencies', 'deficiency'), ('in', 'in'), ('performance', 'performance'), ('.', '.')] 

 Dependency tags are: 
>> [(('Test', 'root'), 'root'), (('and', 'Refine'), 'cc'), (('Refine', 'Test'), 'conj'), (('the', 'Prototype'), 'det'), (('Prototype', 'Refine'), 'obj'), (('·', 'Test'), 'punct'), (('The', 'engineer'), 'det'), (('knowledge', 'engineer'), 'compound'), (('engineer', 'uses'), 'nsubj'), (('uses', 'Test'), 'parataxis'), (('sample', 'cases'), 'compound'), (('cases', 'uses'), 'obj'), (('to', 'test'), 'mark'), (('test', 'uses'), 'advcl'), (('the', 'prototype'), 'det'), (('prototype', 'test'), 'obj'), (('for', 'deficiencies'), 'case'), (('any', 'deficiencies'), 'det'), (('deficiencies', 'test'), 'obl'), (('in', 'performance'), 'case'), (('performance', 'deficiencies'), 'nmod'), (('.', 'Test'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 97 ===========================

 · End users test the prototypes of the ES. 

Tokens are: 
>> ['·', 'End', 'users', 'test', 'the', 'prototypes', 'of', 'the', 'ES', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('End', 'NOUN'), ('users', 'NOUN'), ('test', 'VERB'), ('the', 'DET'), ('prototypes', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('ES', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('End', 'NN'), ('users', 'NNS'), ('test', 'VB'), ('the', 'DT'), ('prototypes', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('ES', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('End', 'end'), ('users', 'user'), ('test', 'test'), ('the', 'the'), ('prototypes', 'prototype'), ('of', 'of'), ('the', 'the'), ('ES', 'es'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'test'), 'punct'), (('End', 'users'), 'compound'), (('users', 'test'), 'nsubj'), (('test', 'root'), 'root'), (('the', 'prototypes'), 'det'), (('prototypes', 'test'), 'obj'), (('of', 'ES'), 'case'), (('the', 'ES'), 'det'), (('ES', 'prototypes'), 'nmod'), (('.', 'test'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 98 ===========================

 Develop and Complete the ES · Test and ensure the interaction of the ES with all elements of its environment, including end users, databases, and other information systems. 

Tokens are: 
>> ['Develop', 'and', 'Complete', 'the', 'ES', '·', 'Test', 'and', 'ensure', 'the', 'interaction', 'of', 'the', 'ES', 'with', 'all', 'elements', 'of', 'its', 'environment', ',', 'including', 'end', 'users', ',', 'databases', ',', 'and', 'other', 'information', 'systems', '.'] 

 UPOS tags are: 
>> [('Develop', 'VERB'), ('and', 'CCONJ'), ('Complete', 'VERB'), ('the', 'DET'), ('ES', 'NOUN'), ('·', 'PUNCT'), ('Test', 'NOUN'), ('and', 'CCONJ'), ('ensure', 'VERB'), ('the', 'DET'), ('interaction', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('ES', 'NOUN'), ('with', 'ADP'), ('all', 'DET'), ('elements', 'NOUN'), ('of', 'ADP'), ('its', 'PRON'), ('environment', 'NOUN'), (',', 'PUNCT'), ('including', 'VERB'), ('end', 'NOUN'), ('users', 'NOUN'), (',', 'PUNCT'), ('databases', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('other', 'ADJ'), ('information', 'NOUN'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Develop', 'VB'), ('and', 'CC'), ('Complete', 'VB'), ('the', 'DT'), ('ES', 'NN'), ('·', 'NFP'), ('Test', 'NN'), ('and', 'CC'), ('ensure', 'VB'), ('the', 'DT'), ('interaction', 'NN'), ('of', 'IN'), ('the', 'DT'), ('ES', 'NN'), ('with', 'IN'), ('all', 'DT'), ('elements', 'NNS'), ('of', 'IN'), ('its', 'PRP$'), ('environment', 'NN'), (',', ','), ('including', 'VBG'), ('end', 'NN'), ('users', 'NNS'), (',', ','), ('databases', 'NNS'), (',', ','), ('and', 'CC'), ('other', 'JJ'), ('information', 'NN'), ('systems', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Develop', 'develop'), ('and', 'and'), ('Complete', 'complete'), ('the', 'the'), ('ES', 'es'), ('·', '·'), ('Test', 'test'), ('and', 'and'), ('ensure', 'ensure'), ('the', 'the'), ('interaction', 'interaction'), ('of', 'of'), ('the', 'the'), ('ES', 'es'), ('with', 'with'), ('all', 'all'), ('elements', 'element'), ('of', 'of'), ('its', 'its'), ('environment', 'environment'), (',', ','), ('including', 'include'), ('end', 'end'), ('users', 'user'), (',', ','), ('databases', 'database'), (',', ','), ('and', 'and'), ('other', 'other'), ('information', 'information'), ('systems', 'system'), ('.', '.')] 

 Dependency tags are: 
>> [(('Develop', 'root'), 'root'), (('and', 'Complete'), 'cc'), (('Complete', 'Develop'), 'conj'), (('the', 'Test'), 'det'), (('ES', 'Test'), 'compound'), (('·', 'Test'), 'punct'), (('Test', 'Complete'), 'obj'), (('and', 'ensure'), 'cc'), (('ensure', 'Develop'), 'conj'), (('the', 'interaction'), 'det'), (('interaction', 'ensure'), 'obj'), (('of', 'ES'), 'case'), (('the', 'ES'), 'det'), (('ES', 'interaction'), 'nmod'), (('with', 'elements'), 'case'), (('all', 'elements'), 'det'), (('elements', 'interaction'), 'nmod'), (('of', 'environment'), 'case'), (('its', 'environment'), 'nmod:poss'), (('environment', 'elements'), 'nmod'), ((',', 'users'), 'punct'), (('including', 'users'), 'case'), (('end', 'users'), 'compound'), (('users', 'elements'), 'nmod'), ((',', 'databases'), 'punct'), (('databases', 'users'), 'conj'), ((',', 'systems'), 'punct'), (('and', 'systems'), 'cc'), (('other', 'systems'), 'amod'), (('information', 'systems'), 'compound'), (('systems', 'users'), 'conj'), (('.', 'Develop'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 99 ===========================

 · Document the ES project well. 

Tokens are: 
>> ['·', 'Document', 'the', 'ES', 'project', 'well', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Document', 'VERB'), ('the', 'DET'), ('ES', 'PROPN'), ('project', 'NOUN'), ('well', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Document', 'VB'), ('the', 'DT'), ('ES', 'NNP'), ('project', 'NN'), ('well', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Document', 'document'), ('the', 'the'), ('ES', 'ES'), ('project', 'project'), ('well', 'well'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Document'), 'punct'), (('Document', 'root'), 'root'), (('the', 'project'), 'det'), (('ES', 'project'), 'compound'), (('project', 'Document'), 'obj'), (('well', 'Document'), 'advmod'), (('.', 'Document'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 100 ===========================

 · Train the user to use ES. 

Tokens are: 
>> ['·', 'Train', 'the', 'user', 'to', 'use', 'ES', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Train', 'VERB'), ('the', 'DET'), ('user', 'NOUN'), ('to', 'PART'), ('use', 'VERB'), ('ES', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Train', 'VB'), ('the', 'DT'), ('user', 'NN'), ('to', 'TO'), ('use', 'VB'), ('ES', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Train', 'train'), ('the', 'the'), ('user', 'user'), ('to', 'to'), ('use', 'use'), ('ES', 'es'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Train'), 'punct'), (('Train', 'root'), 'root'), (('the', 'user'), 'det'), (('user', 'Train'), 'obj'), (('to', 'use'), 'mark'), (('use', 'Train'), 'advcl'), (('ES', 'use'), 'obj'), (('.', 'Train'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 101 ===========================

 Maintain the System · Keep the knowledge base up-to-date by regular review and update. 

Tokens are: 
>> ['Maintain', 'the', 'System', '·', 'Keep', 'the', 'knowledge', 'base', 'up', '-', 'to-date', 'by', 'regular', 'review', 'and', 'update', '.'] 

 UPOS tags are: 
>> [('Maintain', 'VERB'), ('the', 'DET'), ('System', 'NOUN'), ('·', 'PUNCT'), ('Keep', 'VERB'), ('the', 'DET'), ('knowledge', 'NOUN'), ('base', 'NOUN'), ('up', 'ADP'), ('-', 'PUNCT'), ('to-date', 'VERB'), ('by', 'ADP'), ('regular', 'ADJ'), ('review', 'NOUN'), ('and', 'CCONJ'), ('update', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Maintain', 'VB'), ('the', 'DT'), ('System', 'NN'), ('·', 'NFP'), ('Keep', 'VB'), ('the', 'DT'), ('knowledge', 'NN'), ('base', 'NN'), ('up', 'RP'), ('-', 'HYPH'), ('to-date', 'VBN'), ('by', 'IN'), ('regular', 'JJ'), ('review', 'NN'), ('and', 'CC'), ('update', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Maintain', 'maintain'), ('the', 'the'), ('System', 'system'), ('·', '·'), ('Keep', 'keep'), ('the', 'the'), ('knowledge', 'knowledge'), ('base', 'base'), ('up', 'up'), ('-', '-'), ('to-date', 'to-date'), ('by', 'by'), ('regular', 'regular'), ('review', 'review'), ('and', 'and'), ('update', 'update'), ('.', '.')] 

 Dependency tags are: 
>> [(('Maintain', 'root'), 'root'), (('the', 'System'), 'det'), (('System', 'Maintain'), 'obj'), (('·', 'Maintain'), 'punct'), (('Keep', 'Maintain'), 'parataxis'), (('the', 'base'), 'det'), (('knowledge', 'base'), 'compound'), (('base', 'Keep'), 'obj'), (('up', 'to-date'), 'advmod'), (('-', 'to-date'), 'punct'), (('to-date', 'Keep'), 'advcl'), (('by', 'review'), 'case'), (('regular', 'review'), 'amod'), (('review', 'to-date'), 'obl'), (('and', 'update'), 'cc'), (('update', 'review'), 'conj'), (('.', 'Maintain'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 102 ===========================

 · Cater for new interfaces with other information systems, as those systems evolve. 

Tokens are: 
>> ['·', 'Cater', 'for', 'new', 'interfaces', 'with', 'other', 'information', 'systems', ',', 'as', 'those', 'systems', 'evolve', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Cater', 'VERB'), ('for', 'ADP'), ('new', 'ADJ'), ('interfaces', 'NOUN'), ('with', 'ADP'), ('other', 'ADJ'), ('information', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('as', 'SCONJ'), ('those', 'DET'), ('systems', 'NOUN'), ('evolve', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Cater', 'VB'), ('for', 'IN'), ('new', 'JJ'), ('interfaces', 'NNS'), ('with', 'IN'), ('other', 'JJ'), ('information', 'NN'), ('systems', 'NNS'), (',', ','), ('as', 'IN'), ('those', 'DT'), ('systems', 'NNS'), ('evolve', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Cater', 'cater'), ('for', 'for'), ('new', 'new'), ('interfaces', 'interface'), ('with', 'with'), ('other', 'other'), ('information', 'information'), ('systems', 'system'), (',', ','), ('as', 'as'), ('those', 'that'), ('systems', 'system'), ('evolve', 'evolve'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'Cater'), 'punct'), (('Cater', 'root'), 'root'), (('for', 'interfaces'), 'case'), (('new', 'interfaces'), 'amod'), (('interfaces', 'Cater'), 'obl'), (('with', 'systems'), 'case'), (('other', 'systems'), 'amod'), (('information', 'systems'), 'compound'), (('systems', 'interfaces'), 'nmod'), ((',', 'Cater'), 'punct'), (('as', 'evolve'), 'mark'), (('those', 'systems'), 'det'), (('systems', 'evolve'), 'nsubj'), (('evolve', 'Cater'), 'advcl'), (('.', 'Cater'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 103 ===========================

 Benefits of Expert Systems · Availability − 

Tokens are: 
>> ['Benefits', 'of', 'Expert', 'Systems', '·', 'Availability', '−'] 

 UPOS tags are: 
>> [('Benefits', 'NOUN'), ('of', 'ADP'), ('Expert', 'NOUN'), ('Systems', 'NOUN'), ('·', 'PUNCT'), ('Availability', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('Benefits', 'NNS'), ('of', 'IN'), ('Expert', 'NN'), ('Systems', 'NNS'), ('·', ','), ('Availability', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('Benefits', 'benefit'), ('of', 'of'), ('Expert', 'expert'), ('Systems', 'system'), ('·', '·'), ('Availability', 'availability'), ('−', "''")] 

 Dependency tags are: 
>> [(('Benefits', 'root'), 'root'), (('of', 'Systems'), 'case'), (('Expert', 'Systems'), 'compound'), (('Systems', 'Benefits'), 'nmod'), (('·', 'Benefits'), 'punct'), (('Availability', 'Benefits'), 'parataxis'), (('−', 'Benefits'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 104 ===========================

 They are easily available due to mass production of software. 

Tokens are: 
>> ['They', 'are', 'easily', 'available', 'due', 'to', 'mass', 'production', 'of', 'software', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('are', 'AUX'), ('easily', 'ADV'), ('available', 'ADJ'), ('due', 'ADP'), ('to', 'ADP'), ('mass', 'ADJ'), ('production', 'NOUN'), ('of', 'ADP'), ('software', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('are', 'VBP'), ('easily', 'RB'), ('available', 'JJ'), ('due', 'IN'), ('to', 'IN'), ('mass', 'JJ'), ('production', 'NN'), ('of', 'IN'), ('software', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('are', 'be'), ('easily', 'easily'), ('available', 'available'), ('due', 'due'), ('to', 'to'), ('mass', 'mass'), ('production', 'production'), ('of', 'of'), ('software', 'software'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'available'), 'nsubj'), (('are', 'available'), 'cop'), (('easily', 'available'), 'advmod'), (('available', 'root'), 'root'), (('due', 'production'), 'case'), (('to', 'due'), 'fixed'), (('mass', 'production'), 'amod'), (('production', 'available'), 'obl'), (('of', 'software'), 'case'), (('software', 'production'), 'nmod'), (('.', 'available'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 105 ===========================

 · Less Production Cost − Production cost is reasonable. 

Tokens are: 
>> ['·', 'Less', 'Production', 'Cost', '−', 'Production', 'cost', 'is', 'reasonable', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Less', 'ADJ'), ('Production', 'NOUN'), ('Cost', 'NOUN'), ('−', 'PUNCT'), ('Production', 'NOUN'), ('cost', 'NOUN'), ('is', 'AUX'), ('reasonable', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Less', 'JJR'), ('Production', 'NN'), ('Cost', 'NN'), ('−', ','), ('Production', 'NN'), ('cost', 'NN'), ('is', 'VBZ'), ('reasonable', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Less', 'less'), ('Production', 'production'), ('Cost', 'Cost'), ('−', "''"), ('Production', 'production'), ('cost', 'cost'), ('is', 'be'), ('reasonable', 'reasonable'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'reasonable'), 'punct'), (('Less', 'Cost'), 'amod'), (('Production', 'Cost'), 'compound'), (('Cost', 'reasonable'), 'nsubj'), (('−', 'Cost'), 'punct'), (('Production', 'cost'), 'compound'), (('cost', 'reasonable'), 'nsubj'), (('is', 'reasonable'), 'cop'), (('reasonable', 'root'), 'root'), (('.', 'reasonable'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 106 ===========================

 This makes them affordable. 

Tokens are: 
>> ['This', 'makes', 'them', 'affordable', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('makes', 'VERB'), ('them', 'PRON'), ('affordable', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('makes', 'VBZ'), ('them', 'PRP'), ('affordable', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('makes', 'make'), ('them', 'they'), ('affordable', 'affordable'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'makes'), 'nsubj'), (('makes', 'root'), 'root'), (('them', 'makes'), 'obj'), (('affordable', 'makes'), 'xcomp'), (('.', 'makes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 107 ===========================

 · Speed − 

Tokens are: 
>> ['·', 'Speed', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Speed', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Speed', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Speed', 'speed'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Speed'), 'punct'), (('Speed', 'root'), 'root'), (('−', 'Speed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 108 ===========================

 They offer great speed. 

Tokens are: 
>> ['They', 'offer', 'great', 'speed', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('offer', 'VERB'), ('great', 'ADJ'), ('speed', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('offer', 'VBP'), ('great', 'JJ'), ('speed', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('offer', 'offer'), ('great', 'great'), ('speed', 'speed'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'offer'), 'nsubj'), (('offer', 'root'), 'root'), (('great', 'speed'), 'amod'), (('speed', 'offer'), 'obj'), (('.', 'offer'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 109 ===========================

 They reduce the amount of work an individual puts in. 

Tokens are: 
>> ['They', 'reduce', 'the', 'amount', 'of', 'work', 'an', 'individual', 'puts', 'in', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('reduce', 'VERB'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('work', 'NOUN'), ('an', 'DET'), ('individual', 'NOUN'), ('puts', 'VERB'), ('in', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('reduce', 'VBP'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('work', 'NN'), ('an', 'DT'), ('individual', 'NN'), ('puts', 'VBZ'), ('in', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('reduce', 'reduce'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('work', 'work'), ('an', 'a'), ('individual', 'individual'), ('puts', 'put'), ('in', 'in'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'reduce'), 'nsubj'), (('reduce', 'root'), 'root'), (('the', 'amount'), 'det'), (('amount', 'reduce'), 'obj'), (('of', 'work'), 'case'), (('work', 'amount'), 'nmod'), (('an', 'individual'), 'det'), (('individual', 'puts'), 'nsubj'), (('puts', 'work'), 'acl:relcl'), (('in', 'puts'), 'obl'), (('.', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 110 ===========================

 · Less Error Rate − Error rate is low as compared to human errors. 

Tokens are: 
>> ['·', 'Less', 'Error', 'Rate', '−', 'Error', 'rate', 'is', 'low', 'as', 'compared', 'to', 'human', 'errors', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Less', 'ADJ'), ('Error', 'NOUN'), ('Rate', 'NOUN'), ('−', 'PUNCT'), ('Error', 'NOUN'), ('rate', 'NOUN'), ('is', 'AUX'), ('low', 'ADJ'), ('as', 'SCONJ'), ('compared', 'VERB'), ('to', 'ADP'), ('human', 'ADJ'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Less', 'JJR'), ('Error', 'NN'), ('Rate', 'NN'), ('−', ','), ('Error', 'NN'), ('rate', 'NN'), ('is', 'VBZ'), ('low', 'JJ'), ('as', 'IN'), ('compared', 'VBN'), ('to', 'IN'), ('human', 'JJ'), ('errors', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Less', 'less'), ('Error', 'error'), ('Rate', 'rate'), ('−', "''"), ('Error', 'error'), ('rate', 'rate'), ('is', 'be'), ('low', 'low'), ('as', 'as'), ('compared', 'compare'), ('to', 'to'), ('human', 'human'), ('errors', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'low'), 'punct'), (('Less', 'Rate'), 'amod'), (('Error', 'Rate'), 'compound'), (('Rate', 'low'), 'nsubj'), (('−', 'Rate'), 'punct'), (('Error', 'rate'), 'compound'), (('rate', 'low'), 'nsubj'), (('is', 'low'), 'cop'), (('low', 'root'), 'root'), (('as', 'compared'), 'mark'), (('compared', 'low'), 'advcl'), (('to', 'errors'), 'case'), (('human', 'errors'), 'amod'), (('errors', 'compared'), 'obl'), (('.', 'low'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 111 ===========================

 · Reducing Risk − 

Tokens are: 
>> ['·', 'Reducing', 'Risk', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Reducing', 'VERB'), ('Risk', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Reducing', 'VBG'), ('Risk', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Reducing', 'reduce'), ('Risk', 'risk'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'Reducing'), 'punct'), (('Reducing', 'root'), 'root'), (('Risk', 'Reducing'), 'obj'), (('−', 'Reducing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 112 ===========================

 They can work in the environment dangerous to humans. 

Tokens are: 
>> ['They', 'can', 'work', 'in', 'the', 'environment', 'dangerous', 'to', 'humans', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('can', 'AUX'), ('work', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), ('dangerous', 'ADJ'), ('to', 'ADP'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('can', 'MD'), ('work', 'VB'), ('in', 'IN'), ('the', 'DT'), ('environment', 'NN'), ('dangerous', 'JJ'), ('to', 'IN'), ('humans', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('can', 'can'), ('work', 'work'), ('in', 'in'), ('the', 'the'), ('environment', 'environment'), ('dangerous', 'dangerous'), ('to', 'to'), ('humans', 'human'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'work'), 'nsubj'), (('can', 'work'), 'aux'), (('work', 'root'), 'root'), (('in', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'work'), 'obl'), (('dangerous', 'environment'), 'amod'), (('to', 'humans'), 'case'), (('humans', 'dangerous'), 'obl'), (('.', 'work'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 113 ===========================

 · Steady response − 

Tokens are: 
>> ['·', 'Steady', 'response', '−'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Steady', 'ADJ'), ('response', 'NOUN'), ('−', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Steady', 'JJ'), ('response', 'NN'), ('−', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Steady', 'steady'), ('response', 'response'), ('−', "''")] 

 Dependency tags are: 
>> [(('·', 'response'), 'punct'), (('Steady', 'response'), 'amod'), (('response', 'root'), 'root'), (('−', 'response'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 114 ===========================

 They work steadily without getting motional, tensed or fatigued. 

Tokens are: 
>> ['They', 'work', 'steadily', 'without', 'getting', 'motional', ',', 'tensed', 'or', 'fatigued', '.'] 

 UPOS tags are: 
>> [('They', 'PRON'), ('work', 'VERB'), ('steadily', 'ADV'), ('without', 'SCONJ'), ('getting', 'VERB'), ('motional', 'ADJ'), (',', 'PUNCT'), ('tensed', 'ADJ'), ('or', 'CCONJ'), ('fatigued', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('They', 'PRP'), ('work', 'VBP'), ('steadily', 'RB'), ('without', 'IN'), ('getting', 'VBG'), ('motional', 'JJ'), (',', ','), ('tensed', 'JJ'), ('or', 'CC'), ('fatigued', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('They', 'they'), ('work', 'work'), ('steadily', 'steadily'), ('without', 'without'), ('getting', 'get'), ('motional', 'motional'), (',', ','), ('tensed', 'tensed'), ('or', 'or'), ('fatigued', 'fatigued'), ('.', '.')] 

 Dependency tags are: 
>> [(('They', 'work'), 'nsubj'), (('work', 'root'), 'root'), (('steadily', 'work'), 'advmod'), (('without', 'getting'), 'mark'), (('getting', 'work'), 'advcl'), (('motional', 'getting'), 'xcomp'), ((',', 'tensed'), 'punct'), (('tensed', 'motional'), 'conj'), (('or', 'fatigued'), 'cc'), (('fatigued', 'motional'), 'conj'), (('.', 'work'), 'punct')]

 Named Entities are: 
>> []