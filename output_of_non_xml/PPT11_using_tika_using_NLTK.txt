				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

PowerPoint Presentation  Unit – 3 Parsing Theory (I) dixita.kagathara@darshan.ac.in +91 - 97277 47317 (CE Department) Computer Engineering Department Prof. Dixita B. Kagathara Compiler Design (CD) GTU # 2170701   Darshan Institute of Engineering & Technology, Rajkot     Looping Topics to be covered  Role of parser Context free grammar Derivation & Ambiguity Left recursion & Left factoring Classification of parsing Backtracking LL(1) parsing Recursive descent paring Shift reduce parsing Operator precedence parsing LR parsing             Role of Parser        Role of parser  Parser obtains a string of token from the lexical analyzer and reports  syntax error if any otherwise generates syntax tree. 


>> Tokens are: 
 ['PowerPoint', 'Presentation', 'Unit', '–', '3', 'Parsing', 'Theory', '(', 'I', ')', 'dixita.kagathara', '@', 'darshan.ac.in', '+91', '-', '97277', '47317', '(', 'CE', 'Department', ')', 'Computer', 'Engineering', 'Department', 'Prof.', 'Dixita', 'B.', 'Kagathara', 'Compiler', 'Design', '(', 'CD', ')', 'GTU', '#', '2170701', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', ',', 'Rajkot', '\uf050', 'Looping', 'Topics', 'covered', 'Role', 'parser', 'Context', 'free', 'grammar', 'Derivation', '&', 'Ambiguity', 'Left', 'recursion', '&', 'Left', 'factoring', 'Classification', 'parsing', 'Backtracking', 'LL', '(', '1', ')', 'parsing', 'Recursive', 'descent', 'paring', 'Shift', 'reduce', 'parsing', 'Operator', 'precedence', 'parsing', 'LR', 'parsing', 'Role', 'Parser', 'Role', 'parser', 'Parser', 'obtains', 'string', 'token', 'lexical', 'analyzer', 'reports', 'syntax', 'error', 'otherwise', 'generates', 'syntax', 'tree', '.']

>> Bigrams are: 
 [('PowerPoint', 'Presentation'), ('Presentation', 'Unit'), ('Unit', '–'), ('–', '3'), ('3', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', 'dixita.kagathara'), ('dixita.kagathara', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '+91'), ('+91', '-'), ('-', '97277'), ('97277', '47317'), ('47317', '('), ('(', 'CE'), ('CE', 'Department'), ('Department', ')'), (')', 'Computer'), ('Computer', 'Engineering'), ('Engineering', 'Department'), ('Department', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B.'), ('B.', 'Kagathara'), ('Kagathara', 'Compiler'), ('Compiler', 'Design'), ('Design', '('), ('(', 'CD'), ('CD', ')'), (')', 'GTU'), ('GTU', '#'), ('#', '2170701'), ('2170701', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', ','), (',', 'Rajkot'), ('Rajkot', '\uf050'), ('\uf050', 'Looping'), ('Looping', 'Topics'), ('Topics', 'covered'), ('covered', 'Role'), ('Role', 'parser'), ('parser', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'Derivation'), ('Derivation', '&'), ('&', 'Ambiguity'), ('Ambiguity', 'Left'), ('Left', 'recursion'), ('recursion', '&'), ('&', 'Left'), ('Left', 'factoring'), ('factoring', 'Classification'), ('Classification', 'parsing'), ('parsing', 'Backtracking'), ('Backtracking', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Recursive'), ('Recursive', 'descent'), ('descent', 'paring'), ('paring', 'Shift'), ('Shift', 'reduce'), ('reduce', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', 'LR'), ('LR', 'parsing'), ('parsing', 'Role'), ('Role', 'Parser'), ('Parser', 'Role'), ('Role', 'parser'), ('parser', 'Parser'), ('Parser', 'obtains'), ('obtains', 'string'), ('string', 'token'), ('token', 'lexical'), ('lexical', 'analyzer'), ('analyzer', 'reports'), ('reports', 'syntax'), ('syntax', 'error'), ('error', 'otherwise'), ('otherwise', 'generates'), ('generates', 'syntax'), ('syntax', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('PowerPoint', 'Presentation', 'Unit'), ('Presentation', 'Unit', '–'), ('Unit', '–', '3'), ('–', '3', 'Parsing'), ('3', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', 'dixita.kagathara'), (')', 'dixita.kagathara', '@'), ('dixita.kagathara', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '+91'), ('darshan.ac.in', '+91', '-'), ('+91', '-', '97277'), ('-', '97277', '47317'), ('97277', '47317', '('), ('47317', '(', 'CE'), ('(', 'CE', 'Department'), ('CE', 'Department', ')'), ('Department', ')', 'Computer'), (')', 'Computer', 'Engineering'), ('Computer', 'Engineering', 'Department'), ('Engineering', 'Department', 'Prof.'), ('Department', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B.'), ('Dixita', 'B.', 'Kagathara'), ('B.', 'Kagathara', 'Compiler'), ('Kagathara', 'Compiler', 'Design'), ('Compiler', 'Design', '('), ('Design', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', 'GTU'), (')', 'GTU', '#'), ('GTU', '#', '2170701'), ('#', '2170701', 'Darshan'), ('2170701', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', ','), ('Technology', ',', 'Rajkot'), (',', 'Rajkot', '\uf050'), ('Rajkot', '\uf050', 'Looping'), ('\uf050', 'Looping', 'Topics'), ('Looping', 'Topics', 'covered'), ('Topics', 'covered', 'Role'), ('covered', 'Role', 'parser'), ('Role', 'parser', 'Context'), ('parser', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'Derivation'), ('grammar', 'Derivation', '&'), ('Derivation', '&', 'Ambiguity'), ('&', 'Ambiguity', 'Left'), ('Ambiguity', 'Left', 'recursion'), ('Left', 'recursion', '&'), ('recursion', '&', 'Left'), ('&', 'Left', 'factoring'), ('Left', 'factoring', 'Classification'), ('factoring', 'Classification', 'parsing'), ('Classification', 'parsing', 'Backtracking'), ('parsing', 'Backtracking', 'LL'), ('Backtracking', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Recursive'), ('parsing', 'Recursive', 'descent'), ('Recursive', 'descent', 'paring'), ('descent', 'paring', 'Shift'), ('paring', 'Shift', 'reduce'), ('Shift', 'reduce', 'parsing'), ('reduce', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', 'LR'), ('parsing', 'LR', 'parsing'), ('LR', 'parsing', 'Role'), ('parsing', 'Role', 'Parser'), ('Role', 'Parser', 'Role'), ('Parser', 'Role', 'parser'), ('Role', 'parser', 'Parser'), ('parser', 'Parser', 'obtains'), ('Parser', 'obtains', 'string'), ('obtains', 'string', 'token'), ('string', 'token', 'lexical'), ('token', 'lexical', 'analyzer'), ('lexical', 'analyzer', 'reports'), ('analyzer', 'reports', 'syntax'), ('reports', 'syntax', 'error'), ('syntax', 'error', 'otherwise'), ('error', 'otherwise', 'generates'), ('otherwise', 'generates', 'syntax'), ('generates', 'syntax', 'tree'), ('syntax', 'tree', '.')]

>> POS Tags are: 
 [('PowerPoint', 'NNP'), ('Presentation', 'NNP'), ('Unit', 'NNP'), ('–', 'VBD'), ('3', 'CD'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('dixita.kagathara', 'NN'), ('@', 'NNP'), ('darshan.ac.in', 'NN'), ('+91', 'NNP'), ('-', ':'), ('97277', 'CD'), ('47317', 'CD'), ('(', '('), ('CE', 'NNP'), ('Department', 'NNP'), (')', ')'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B.', 'NNP'), ('Kagathara', 'NNP'), ('Compiler', 'NNP'), ('Design', 'NNP'), ('(', '('), ('CD', 'NN'), (')', ')'), ('GTU', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('\uf050', 'NNP'), ('Looping', 'NNP'), ('Topics', 'NNP'), ('covered', 'VBD'), ('Role', 'NNP'), ('parser', 'NN'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('Derivation', 'NNP'), ('&', 'CC'), ('Ambiguity', 'NNP'), ('Left', 'NNP'), ('recursion', 'NN'), ('&', 'CC'), ('Left', 'NNP'), ('factoring', 'NN'), ('Classification', 'NNP'), ('parsing', 'VBG'), ('Backtracking', 'NNP'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Recursive', 'JJ'), ('descent', 'NN'), ('paring', 'VBG'), ('Shift', 'NNP'), ('reduce', 'VB'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('parsing', 'VBG'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Role', 'NNP'), ('Parser', 'NNP'), ('Role', 'NNP'), ('parser', 'NN'), ('Parser', 'NNP'), ('obtains', 'VBZ'), ('string', 'VBG'), ('token', 'JJ'), ('lexical', 'JJ'), ('analyzer', 'NN'), ('reports', 'NNS'), ('syntax', 'VBD'), ('error', 'JJ'), ('otherwise', 'RB'), ('generates', 'VBZ'), ('syntax', 'JJ'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP PowerPoint/NNP Presentation/NNP Unit/NNP)
  –/VBD
  3/CD
  (NP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  (NP dixita.kagathara/NN @/NNP darshan.ac.in/NN +91/NNP)
  -/:
  97277/CD
  47317/CD
  (/(
  (NP CE/NNP Department/NNP)
  )/)
  (NP
    Computer/NNP
    Engineering/NNP
    Department/NNP
    Prof./NNP
    Dixita/NNP
    B./NNP
    Kagathara/NNP
    Compiler/NNP
    Design/NNP)
  (/(
  (NP CD/NN)
  )/)
  (NP GTU/NNP)
  #/#
  2170701/CD
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP)
  ,/,
  (NP Rajkot/NNP /NNP Looping/NNP Topics/NNP)
  covered/VBD
  (NP Role/NNP parser/NN Context/NNP)
  (NP free/JJ grammar/NN Derivation/NNP)
  &/CC
  (NP Ambiguity/NNP Left/NNP recursion/NN)
  &/CC
  (NP Left/NNP factoring/NN Classification/NNP)
  parsing/VBG
  (NP Backtracking/NNP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  (NP Recursive/JJ descent/NN)
  paring/VBG
  (NP Shift/NNP)
  reduce/VB
  parsing/VBG
  (NP Operator/NNP precedence/NN)
  parsing/VBG
  (NP LR/NNP)
  parsing/VBG
  (NP Role/NNP Parser/NNP Role/NNP parser/NN Parser/NNP)
  obtains/VBZ
  string/VBG
  (NP token/JJ lexical/JJ analyzer/NN reports/NNS)
  syntax/VBD
  error/JJ
  otherwise/RB
  generates/VBZ
  (NP syntax/JJ tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['PowerPoint Presentation Unit', 'Parsing Theory', 'dixita.kagathara @ darshan.ac.in +91', 'CE Department', 'Computer Engineering Department Prof. Dixita B. Kagathara Compiler Design', 'CD', 'GTU', 'Darshan Institute Engineering', 'Technology', 'Rajkot \uf050 Looping Topics', 'Role parser Context', 'free grammar Derivation', 'Ambiguity Left recursion', 'Left factoring Classification', 'Backtracking LL', 'Recursive descent', 'Shift', 'Operator precedence', 'LR', 'Role Parser Role parser Parser', 'token lexical analyzer reports', 'syntax tree']

>> Named Entities are: 
 [('ORGANIZATION', 'PowerPoint'), ('PERSON', 'Unit'), ('ORGANIZATION', 'CE Department'), ('ORGANIZATION', 'Computer Engineering Department'), ('PERSON', 'Dixita B. Kagathara Compiler'), ('ORGANIZATION', 'GTU'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Rajkot'), ('PERSON', 'Topics'), ('PERSON', 'Role'), ('ORGANIZATION', 'Ambiguity Left'), ('GPE', 'Left'), ('PERSON', 'Shift'), ('PERSON', 'Role Parser Role'), ('PERSON', 'Parser')] 

>> Stemming using Porter Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'ce'), ('Department', 'depart'), (')', ')'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B.', 'b.'), ('Kagathara', 'kagathara'), ('Compiler', 'compil'), ('Design', 'design'), ('(', '('), ('CD', 'cd'), (')', ')'), ('GTU', 'gtu'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Topics', 'topic'), ('covered', 'cover'), ('Role', 'role'), ('parser', 'parser'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Derivation', 'deriv'), ('&', '&'), ('Ambiguity', 'ambigu'), ('Left', 'left'), ('recursion', 'recurs'), ('&', '&'), ('Left', 'left'), ('factoring', 'factor'), ('Classification', 'classif'), ('parsing', 'pars'), ('Backtracking', 'backtrack'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Recursive', 'recurs'), ('descent', 'descent'), ('paring', 'pare'), ('Shift', 'shift'), ('reduce', 'reduc'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('LR', 'lr'), ('parsing', 'pars'), ('Role', 'role'), ('Parser', 'parser'), ('Role', 'role'), ('parser', 'parser'), ('Parser', 'parser'), ('obtains', 'obtain'), ('string', 'string'), ('token', 'token'), ('lexical', 'lexic'), ('analyzer', 'analyz'), ('reports', 'report'), ('syntax', 'syntax'), ('error', 'error'), ('otherwise', 'otherwis'), ('generates', 'gener'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('Unit', 'unit'), ('–', '–'), ('3', '3'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'ce'), ('Department', 'depart'), (')', ')'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B.', 'b.'), ('Kagathara', 'kagathara'), ('Compiler', 'compil'), ('Design', 'design'), ('(', '('), ('CD', 'cd'), (')', ')'), ('GTU', 'gtu'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Topics', 'topic'), ('covered', 'cover'), ('Role', 'role'), ('parser', 'parser'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Derivation', 'deriv'), ('&', '&'), ('Ambiguity', 'ambigu'), ('Left', 'left'), ('recursion', 'recurs'), ('&', '&'), ('Left', 'left'), ('factoring', 'factor'), ('Classification', 'classif'), ('parsing', 'pars'), ('Backtracking', 'backtrack'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Recursive', 'recurs'), ('descent', 'descent'), ('paring', 'pare'), ('Shift', 'shift'), ('reduce', 'reduc'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('LR', 'lr'), ('parsing', 'pars'), ('Role', 'role'), ('Parser', 'parser'), ('Role', 'role'), ('parser', 'parser'), ('Parser', 'parser'), ('obtains', 'obtain'), ('string', 'string'), ('token', 'token'), ('lexical', 'lexic'), ('analyzer', 'analyz'), ('reports', 'report'), ('syntax', 'syntax'), ('error', 'error'), ('otherwise', 'otherwis'), ('generates', 'generat'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('PowerPoint', 'PowerPoint'), ('Presentation', 'Presentation'), ('Unit', 'Unit'), ('–', '–'), ('3', '3'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('dixita.kagathara', 'dixita.kagathara'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'CE'), ('Department', 'Department'), (')', ')'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B.', 'B.'), ('Kagathara', 'Kagathara'), ('Compiler', 'Compiler'), ('Design', 'Design'), ('(', '('), ('CD', 'CD'), (')', ')'), ('GTU', 'GTU'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('\uf050', '\uf050'), ('Looping', 'Looping'), ('Topics', 'Topics'), ('covered', 'covered'), ('Role', 'Role'), ('parser', 'parser'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('Derivation', 'Derivation'), ('&', '&'), ('Ambiguity', 'Ambiguity'), ('Left', 'Left'), ('recursion', 'recursion'), ('&', '&'), ('Left', 'Left'), ('factoring', 'factoring'), ('Classification', 'Classification'), ('parsing', 'parsing'), ('Backtracking', 'Backtracking'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('paring', 'paring'), ('Shift', 'Shift'), ('reduce', 'reduce'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('LR', 'LR'), ('parsing', 'parsing'), ('Role', 'Role'), ('Parser', 'Parser'), ('Role', 'Role'), ('parser', 'parser'), ('Parser', 'Parser'), ('obtains', 'obtains'), ('string', 'string'), ('token', 'token'), ('lexical', 'lexical'), ('analyzer', 'analyzer'), ('reports', 'report'), ('syntax', 'syntax'), ('error', 'error'), ('otherwise', 'otherwise'), ('generates', 'generates'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 2 =============================

There are two types of parser:  Top-down parser  Bottom-up parser  Rest of front end Parse tree Token IR Lexical analyzer Symbol table Parser Get next token Source program Parsetree    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar        Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Nonterminal symbol:  The name of syntax category of a language, e.g.-.-, noun, verb, etc. 


>> Tokens are: 
 ['There', 'two', 'types', 'parser', ':', 'Top-down', 'parser', 'Bottom-up', 'parser', 'Rest', 'front', 'end', 'Parse', 'tree', 'Token', 'IR', 'Lexical', 'analyzer', 'Symbol', 'table', 'Parser', 'Get', 'next', 'token', 'Source', 'program', 'Parsetree', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Context', 'free', 'grammar', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', '4-tuple', ',', 'finite', 'set', 'non', 'terminals', ',', 'disjoint', 'finite', 'set', 'terminals', ',', 'element', '’', 'start', 'symbol', ',', 'finite', 'set', 'formulas', 'form', 'Nonterminal', 'symbol', ':', 'The', 'name', 'syntax', 'category', 'language', ',', 'e.g.-.-', ',', 'noun', ',', 'verb', ',', 'etc', '.']

>> Bigrams are: 
 [('There', 'two'), ('two', 'types'), ('types', 'parser'), ('parser', ':'), (':', 'Top-down'), ('Top-down', 'parser'), ('parser', 'Bottom-up'), ('Bottom-up', 'parser'), ('parser', 'Rest'), ('Rest', 'front'), ('front', 'end'), ('end', 'Parse'), ('Parse', 'tree'), ('tree', 'Token'), ('Token', 'IR'), ('IR', 'Lexical'), ('Lexical', 'analyzer'), ('analyzer', 'Symbol'), ('Symbol', 'table'), ('table', 'Parser'), ('Parser', 'Get'), ('Get', 'next'), ('next', 'token'), ('token', 'Source'), ('Source', 'program'), ('program', 'Parsetree'), ('Parsetree', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'A'), ('A', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '('), ('(', 'CFG'), ('CFG', ')'), (')', '4-tuple'), ('4-tuple', ','), (',', 'finite'), ('finite', 'set'), ('set', 'non'), ('non', 'terminals'), ('terminals', ','), (',', 'disjoint'), ('disjoint', 'finite'), ('finite', 'set'), ('set', 'terminals'), ('terminals', ','), (',', 'element'), ('element', '’'), ('’', 'start'), ('start', 'symbol'), ('symbol', ','), (',', 'finite'), ('finite', 'set'), ('set', 'formulas'), ('formulas', 'form'), ('form', 'Nonterminal'), ('Nonterminal', 'symbol'), ('symbol', ':'), (':', 'The'), ('The', 'name'), ('name', 'syntax'), ('syntax', 'category'), ('category', 'language'), ('language', ','), (',', 'e.g.-.-'), ('e.g.-.-', ','), (',', 'noun'), ('noun', ','), (',', 'verb'), ('verb', ','), (',', 'etc'), ('etc', '.')]

>> Trigrams are: 
 [('There', 'two', 'types'), ('two', 'types', 'parser'), ('types', 'parser', ':'), ('parser', ':', 'Top-down'), (':', 'Top-down', 'parser'), ('Top-down', 'parser', 'Bottom-up'), ('parser', 'Bottom-up', 'parser'), ('Bottom-up', 'parser', 'Rest'), ('parser', 'Rest', 'front'), ('Rest', 'front', 'end'), ('front', 'end', 'Parse'), ('end', 'Parse', 'tree'), ('Parse', 'tree', 'Token'), ('tree', 'Token', 'IR'), ('Token', 'IR', 'Lexical'), ('IR', 'Lexical', 'analyzer'), ('Lexical', 'analyzer', 'Symbol'), ('analyzer', 'Symbol', 'table'), ('Symbol', 'table', 'Parser'), ('table', 'Parser', 'Get'), ('Parser', 'Get', 'next'), ('Get', 'next', 'token'), ('next', 'token', 'Source'), ('token', 'Source', 'program'), ('Source', 'program', 'Parsetree'), ('program', 'Parsetree', 'Prof.'), ('Parsetree', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Context'), ('›', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'Context'), ('grammar', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'A'), ('grammar', 'A', 'context'), ('A', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '('), ('grammar', '(', 'CFG'), ('(', 'CFG', ')'), ('CFG', ')', '4-tuple'), (')', '4-tuple', ','), ('4-tuple', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'non'), ('set', 'non', 'terminals'), ('non', 'terminals', ','), ('terminals', ',', 'disjoint'), (',', 'disjoint', 'finite'), ('disjoint', 'finite', 'set'), ('finite', 'set', 'terminals'), ('set', 'terminals', ','), ('terminals', ',', 'element'), (',', 'element', '’'), ('element', '’', 'start'), ('’', 'start', 'symbol'), ('start', 'symbol', ','), ('symbol', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'formulas'), ('set', 'formulas', 'form'), ('formulas', 'form', 'Nonterminal'), ('form', 'Nonterminal', 'symbol'), ('Nonterminal', 'symbol', ':'), ('symbol', ':', 'The'), (':', 'The', 'name'), ('The', 'name', 'syntax'), ('name', 'syntax', 'category'), ('syntax', 'category', 'language'), ('category', 'language', ','), ('language', ',', 'e.g.-.-'), (',', 'e.g.-.-', ','), ('e.g.-.-', ',', 'noun'), (',', 'noun', ','), ('noun', ',', 'verb'), (',', 'verb', ','), ('verb', ',', 'etc'), (',', 'etc', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('two', 'CD'), ('types', 'NNS'), ('parser', 'IN'), (':', ':'), ('Top-down', 'JJ'), ('parser', 'NN'), ('Bottom-up', 'NNP'), ('parser', 'NN'), ('Rest', 'NNP'), ('front', 'JJ'), ('end', 'NN'), ('Parse', 'NNP'), ('tree', 'NN'), ('Token', 'NNP'), ('IR', 'NNP'), ('Lexical', 'NNP'), ('analyzer', 'NN'), ('Symbol', 'NNP'), ('table', 'NN'), ('Parser', 'NNP'), ('Get', 'NNP'), ('next', 'JJ'), ('token', 'JJ'), ('Source', 'NNP'), ('program', 'NN'), ('Parsetree', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'NNP'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '('), ('CFG', 'NNP'), (')', ')'), ('4-tuple', 'JJ'), (',', ','), ('finite', 'JJ'), ('set', 'NN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('disjoint', 'NN'), ('finite', 'NN'), ('set', 'VBN'), ('terminals', 'NNS'), (',', ','), ('element', 'NN'), ('’', 'NNP'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('finite', 'JJ'), ('set', 'VBN'), ('formulas', 'NNS'), ('form', 'VBP'), ('Nonterminal', 'JJ'), ('symbol', 'NN'), (':', ':'), ('The', 'DT'), ('name', 'NN'), ('syntax', 'JJ'), ('category', 'NN'), ('language', 'NN'), (',', ','), ('e.g.-.-', 'JJ'), (',', ','), ('noun', 'JJ'), (',', ','), ('verb', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')]

 (S
  There/EX
  two/CD
  (NP types/NNS)
  parser/IN
  :/:
  (NP Top-down/JJ parser/NN Bottom-up/NNP parser/NN Rest/NNP)
  (NP
    front/JJ
    end/NN
    Parse/NNP
    tree/NN
    Token/NNP
    IR/NNP
    Lexical/NNP
    analyzer/NN
    Symbol/NNP
    table/NN
    Parser/NNP
    Get/NNP)
  (NP
    next/JJ
    token/JJ
    Source/NNP
    program/NN
    Parsetree/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Context/NNP)
  (NP free/JJ grammar/NN Context/NNP)
  (NP free/JJ grammar/NN A/NNP context/NN)
  (NP free/JJ grammar/NN)
  (/(
  (NP CFG/NNP)
  )/)
  4-tuple/JJ
  ,/,
  (NP finite/JJ set/NN non/NN terminals/NNS)
  ,/,
  (NP disjoint/NN finite/NN)
  set/VBN
  (NP terminals/NNS)
  ,/,
  (NP element/NN ’/NNP start/NN symbol/NN)
  ,/,
  finite/JJ
  set/VBN
  (NP formulas/NNS)
  form/VBP
  (NP Nonterminal/JJ symbol/NN)
  :/:
  (NP The/DT name/NN)
  (NP syntax/JJ category/NN language/NN)
  ,/,
  e.g.-.-/JJ
  ,/,
  noun/JJ
  ,/,
  (NP verb/NN)
  ,/,
  etc/FW
  ./.) 


>> Noun Phrases are: 
 ['types', 'Top-down parser Bottom-up parser Rest', 'front end Parse tree Token IR Lexical analyzer Symbol table Parser Get', 'next token Source program Parsetree Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Context', 'free grammar Context', 'free grammar A context', 'free grammar', 'CFG', 'finite set non terminals', 'disjoint finite', 'terminals', 'element ’ start symbol', 'formulas', 'Nonterminal symbol', 'The name', 'syntax category language', 'verb']

>> Named Entities are: 
 [('PERSON', 'Parse'), ('PERSON', 'Token IR Lexical'), ('PERSON', 'Symbol'), ('PERSON', 'Parser Get'), ('GPE', 'Source'), ('PERSON', 'Parsetree'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('two', 'two'), ('types', 'type'), ('parser', 'parser'), (':', ':'), ('Top-down', 'top-down'), ('parser', 'parser'), ('Bottom-up', 'bottom-up'), ('parser', 'parser'), ('Rest', 'rest'), ('front', 'front'), ('end', 'end'), ('Parse', 'pars'), ('tree', 'tree'), ('Token', 'token'), ('IR', 'ir'), ('Lexical', 'lexic'), ('analyzer', 'analyz'), ('Symbol', 'symbol'), ('table', 'tabl'), ('Parser', 'parser'), ('Get', 'get'), ('next', 'next'), ('token', 'token'), ('Source', 'sourc'), ('program', 'program'), ('Parsetree', 'parsetre'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Nonterminal', 'nontermin'), ('symbol', 'symbol'), (':', ':'), ('The', 'the'), ('name', 'name'), ('syntax', 'syntax'), ('category', 'categori'), ('language', 'languag'), (',', ','), ('e.g.-.-', 'e.g.-.-'), (',', ','), ('noun', 'noun'), (',', ','), ('verb', 'verb'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('two', 'two'), ('types', 'type'), ('parser', 'parser'), (':', ':'), ('Top-down', 'top-down'), ('parser', 'parser'), ('Bottom-up', 'bottom-up'), ('parser', 'parser'), ('Rest', 'rest'), ('front', 'front'), ('end', 'end'), ('Parse', 'pars'), ('tree', 'tree'), ('Token', 'token'), ('IR', 'ir'), ('Lexical', 'lexic'), ('analyzer', 'analyz'), ('Symbol', 'symbol'), ('table', 'tabl'), ('Parser', 'parser'), ('Get', 'get'), ('next', 'next'), ('token', 'token'), ('Source', 'sourc'), ('program', 'program'), ('Parsetree', 'parsetre'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Nonterminal', 'nontermin'), ('symbol', 'symbol'), (':', ':'), ('The', 'the'), ('name', 'name'), ('syntax', 'syntax'), ('category', 'categori'), ('language', 'languag'), (',', ','), ('e.g.-.-', 'e.g.-.-'), (',', ','), ('noun', 'noun'), (',', ','), ('verb', 'verb'), (',', ','), ('etc', 'etc'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('two', 'two'), ('types', 'type'), ('parser', 'parser'), (':', ':'), ('Top-down', 'Top-down'), ('parser', 'parser'), ('Bottom-up', 'Bottom-up'), ('parser', 'parser'), ('Rest', 'Rest'), ('front', 'front'), ('end', 'end'), ('Parse', 'Parse'), ('tree', 'tree'), ('Token', 'Token'), ('IR', 'IR'), ('Lexical', 'Lexical'), ('analyzer', 'analyzer'), ('Symbol', 'Symbol'), ('table', 'table'), ('Parser', 'Parser'), ('Get', 'Get'), ('next', 'next'), ('token', 'token'), ('Source', 'Source'), ('program', 'program'), ('Parsetree', 'Parsetree'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'A'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('4-tuple', '4-tuple'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('terminals', 'terminal'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Nonterminal', 'Nonterminal'), ('symbol', 'symbol'), (':', ':'), ('The', 'The'), ('name', 'name'), ('syntax', 'syntax'), ('category', 'category'), ('language', 'language'), (',', ','), ('e.g.-.-', 'e.g.-.-'), (',', ','), ('noun', 'noun'), (',', ','), ('verb', 'verb'), (',', ','), ('etc', 'etc'), ('.', '.')]



============================ Sentence 3 =============================

The It is written as a single capital letter, or as a name enclosed between < … >, e.g.-.-, A or <Noun>. 


>> Tokens are: 
 ['The', 'It', 'written', 'single', 'capital', 'letter', ',', 'name', 'enclosed', '<', '…', '>', ',', 'e.g.-.-', ',', 'A', '<', 'Noun', '>', '.']

>> Bigrams are: 
 [('The', 'It'), ('It', 'written'), ('written', 'single'), ('single', 'capital'), ('capital', 'letter'), ('letter', ','), (',', 'name'), ('name', 'enclosed'), ('enclosed', '<'), ('<', '…'), ('…', '>'), ('>', ','), (',', 'e.g.-.-'), ('e.g.-.-', ','), (',', 'A'), ('A', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '.')]

>> Trigrams are: 
 [('The', 'It', 'written'), ('It', 'written', 'single'), ('written', 'single', 'capital'), ('single', 'capital', 'letter'), ('capital', 'letter', ','), ('letter', ',', 'name'), (',', 'name', 'enclosed'), ('name', 'enclosed', '<'), ('enclosed', '<', '…'), ('<', '…', '>'), ('…', '>', ','), ('>', ',', 'e.g.-.-'), (',', 'e.g.-.-', ','), ('e.g.-.-', ',', 'A'), (',', 'A', '<'), ('A', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('It', 'PRP'), ('written', 'VBN'), ('single', 'JJ'), ('capital', 'NN'), ('letter', 'NN'), (',', ','), ('name', 'NN'), ('enclosed', 'VBD'), ('<', 'NNP'), ('…', 'NNP'), ('>', 'NNP'), (',', ','), ('e.g.-.-', 'NN'), (',', ','), ('A', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('.', '.')]

 (S
  The/DT
  It/PRP
  written/VBN
  (NP single/JJ capital/NN letter/NN)
  ,/,
  (NP name/NN)
  enclosed/VBD
  (NP </NNP …/NNP >/NNP)
  ,/,
  (NP e.g.-.-/NN)
  ,/,
  (NP A/NNP </NNP Noun/NNP >/NNP)
  ./.) 


>> Noun Phrases are: 
 ['single capital letter', 'name', '< … >', 'e.g.-.-', 'A < Noun >']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('It', 'it'), ('written', 'written'), ('single', 'singl'), ('capital', 'capit'), ('letter', 'letter'), (',', ','), ('name', 'name'), ('enclosed', 'enclos'), ('<', '<'), ('…', '…'), ('>', '>'), (',', ','), ('e.g.-.-', 'e.g.-.-'), (',', ','), ('A', 'a'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('It', 'it'), ('written', 'written'), ('single', 'singl'), ('capital', 'capit'), ('letter', 'letter'), (',', ','), ('name', 'name'), ('enclosed', 'enclos'), ('<', '<'), ('…', '…'), ('>', '>'), (',', ','), ('e.g.-.-', 'e.g.-.-'), (',', ','), ('A', 'a'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('It', 'It'), ('written', 'written'), ('single', 'single'), ('capital', 'capital'), ('letter', 'letter'), (',', ','), ('name', 'name'), ('enclosed', 'enclosed'), ('<', '<'), ('…', '…'), ('>', '>'), (',', ','), ('e.g.-.-', 'e.g.-.-'), (',', ','), ('A', 'A'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('.', '.')]



============================ Sentence 4 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Terminal symbol:  A symbol in the alphabet. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', '4-tuple', ',', 'finite', 'set', 'non', 'terminals', ',', 'disjoint', 'finite', 'set', 'terminals', ',', 'element', '’', 'start', 'symbol', ',', 'finite', 'set', 'formulas', 'form', 'Terminal', 'symbol', ':', 'A', 'symbol', 'alphabet', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'A'), ('A', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '('), ('(', 'CFG'), ('CFG', ')'), (')', '4-tuple'), ('4-tuple', ','), (',', 'finite'), ('finite', 'set'), ('set', 'non'), ('non', 'terminals'), ('terminals', ','), (',', 'disjoint'), ('disjoint', 'finite'), ('finite', 'set'), ('set', 'terminals'), ('terminals', ','), (',', 'element'), ('element', '’'), ('’', 'start'), ('start', 'symbol'), ('symbol', ','), (',', 'finite'), ('finite', 'set'), ('set', 'formulas'), ('formulas', 'form'), ('form', 'Terminal'), ('Terminal', 'symbol'), ('symbol', ':'), (':', 'A'), ('A', 'symbol'), ('symbol', 'alphabet'), ('alphabet', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Context'), ('›', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'A'), ('grammar', 'A', 'context'), ('A', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '('), ('grammar', '(', 'CFG'), ('(', 'CFG', ')'), ('CFG', ')', '4-tuple'), (')', '4-tuple', ','), ('4-tuple', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'non'), ('set', 'non', 'terminals'), ('non', 'terminals', ','), ('terminals', ',', 'disjoint'), (',', 'disjoint', 'finite'), ('disjoint', 'finite', 'set'), ('finite', 'set', 'terminals'), ('set', 'terminals', ','), ('terminals', ',', 'element'), (',', 'element', '’'), ('element', '’', 'start'), ('’', 'start', 'symbol'), ('start', 'symbol', ','), ('symbol', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'formulas'), ('set', 'formulas', 'form'), ('formulas', 'form', 'Terminal'), ('form', 'Terminal', 'symbol'), ('Terminal', 'symbol', ':'), ('symbol', ':', 'A'), (':', 'A', 'symbol'), ('A', 'symbol', 'alphabet'), ('symbol', 'alphabet', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'NNP'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '('), ('CFG', 'NNP'), (')', ')'), ('4-tuple', 'JJ'), (',', ','), ('finite', 'JJ'), ('set', 'NN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('disjoint', 'NN'), ('finite', 'NN'), ('set', 'VBN'), ('terminals', 'NNS'), (',', ','), ('element', 'NN'), ('’', 'NNP'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('finite', 'JJ'), ('set', 'VBN'), ('formulas', 'NNS'), ('form', 'VBP'), ('Terminal', 'JJ'), ('symbol', 'NN'), (':', ':'), ('A', 'DT'), ('symbol', 'NN'), ('alphabet', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Context/NNP)
  (NP free/JJ grammar/NN A/NNP context/NN)
  (NP free/JJ grammar/NN)
  (/(
  (NP CFG/NNP)
  )/)
  4-tuple/JJ
  ,/,
  (NP finite/JJ set/NN non/NN terminals/NNS)
  ,/,
  (NP disjoint/NN finite/NN)
  set/VBN
  (NP terminals/NNS)
  ,/,
  (NP element/NN ’/NNP start/NN symbol/NN)
  ,/,
  finite/JJ
  set/VBN
  (NP formulas/NNS)
  form/VBP
  (NP Terminal/JJ symbol/NN)
  :/:
  (NP A/DT symbol/NN alphabet/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Context', 'free grammar A context', 'free grammar', 'CFG', 'finite set non terminals', 'disjoint finite', 'terminals', 'element ’ start symbol', 'formulas', 'Terminal symbol', 'A symbol alphabet']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'CFG'), ('ORGANIZATION', 'Terminal')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Terminal', 'termin'), ('symbol', 'symbol'), (':', ':'), ('A', 'a'), ('symbol', 'symbol'), ('alphabet', 'alphabet'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Terminal', 'termin'), ('symbol', 'symbol'), (':', ':'), ('A', 'a'), ('symbol', 'symbol'), ('alphabet', 'alphabet'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'A'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('4-tuple', '4-tuple'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('terminals', 'terminal'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Terminal', 'Terminal'), ('symbol', 'symbol'), (':', ':'), ('A', 'A'), ('symbol', 'symbol'), ('alphabet', 'alphabet'), ('.', '.')]



============================ Sentence 5 =============================

It is denoted by lower case letter and punctuation marks used in language. 


>> Tokens are: 
 ['It', 'denoted', 'lower', 'case', 'letter', 'punctuation', 'marks', 'used', 'language', '.']

>> Bigrams are: 
 [('It', 'denoted'), ('denoted', 'lower'), ('lower', 'case'), ('case', 'letter'), ('letter', 'punctuation'), ('punctuation', 'marks'), ('marks', 'used'), ('used', 'language'), ('language', '.')]

>> Trigrams are: 
 [('It', 'denoted', 'lower'), ('denoted', 'lower', 'case'), ('lower', 'case', 'letter'), ('case', 'letter', 'punctuation'), ('letter', 'punctuation', 'marks'), ('punctuation', 'marks', 'used'), ('marks', 'used', 'language'), ('used', 'language', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('denoted', 'VBD'), ('lower', 'JJR'), ('case', 'NN'), ('letter', 'NN'), ('punctuation', 'NN'), ('marks', 'NNS'), ('used', 'VBD'), ('language', 'NN'), ('.', '.')]

 (S
  It/PRP
  denoted/VBD
  lower/JJR
  (NP case/NN letter/NN punctuation/NN marks/NNS)
  used/VBD
  (NP language/NN)
  ./.) 


>> Noun Phrases are: 
 ['case letter punctuation marks', 'language']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('denoted', 'denot'), ('lower', 'lower'), ('case', 'case'), ('letter', 'letter'), ('punctuation', 'punctuat'), ('marks', 'mark'), ('used', 'use'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('denoted', 'denot'), ('lower', 'lower'), ('case', 'case'), ('letter', 'letter'), ('punctuation', 'punctuat'), ('marks', 'mark'), ('used', 'use'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('denoted', 'denoted'), ('lower', 'lower'), ('case', 'case'), ('letter', 'letter'), ('punctuation', 'punctuation'), ('marks', 'mark'), ('used', 'used'), ('language', 'language'), ('.', '.')]



============================ Sentence 6 =============================

<Noun Phrase> → <Article><Noun> <Article> → a | an | the <Noun> → boy | apple         Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Start symbol:  First nonterminal symbol of the grammar is called start symbol. 


>> Tokens are: 
 ['<', 'Noun', 'Phrase', '>', '→', '<', 'Article', '>', '<', 'Noun', '>', '<', 'Article', '>', '→', '|', '|', '<', 'Noun', '>', '→', 'boy', '|', 'apple', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', '4-tuple', ',', 'finite', 'set', 'non', 'terminals', ',', 'disjoint', 'finite', 'set', 'terminals', ',', 'element', '’', 'start', 'symbol', ',', 'finite', 'set', 'formulas', 'form', 'Start', 'symbol', ':', 'First', 'nonterminal', 'symbol', 'grammar', 'called', 'start', 'symbol', '.']

>> Bigrams are: 
 [('<', 'Noun'), ('Noun', 'Phrase'), ('Phrase', '>'), ('>', '→'), ('→', '<'), ('<', 'Article'), ('Article', '>'), ('>', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '<'), ('<', 'Article'), ('Article', '>'), ('>', '→'), ('→', '|'), ('|', '|'), ('|', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '→'), ('→', 'boy'), ('boy', '|'), ('|', 'apple'), ('apple', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'A'), ('A', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '('), ('(', 'CFG'), ('CFG', ')'), (')', '4-tuple'), ('4-tuple', ','), (',', 'finite'), ('finite', 'set'), ('set', 'non'), ('non', 'terminals'), ('terminals', ','), (',', 'disjoint'), ('disjoint', 'finite'), ('finite', 'set'), ('set', 'terminals'), ('terminals', ','), (',', 'element'), ('element', '’'), ('’', 'start'), ('start', 'symbol'), ('symbol', ','), (',', 'finite'), ('finite', 'set'), ('set', 'formulas'), ('formulas', 'form'), ('form', 'Start'), ('Start', 'symbol'), ('symbol', ':'), (':', 'First'), ('First', 'nonterminal'), ('nonterminal', 'symbol'), ('symbol', 'grammar'), ('grammar', 'called'), ('called', 'start'), ('start', 'symbol'), ('symbol', '.')]

>> Trigrams are: 
 [('<', 'Noun', 'Phrase'), ('Noun', 'Phrase', '>'), ('Phrase', '>', '→'), ('>', '→', '<'), ('→', '<', 'Article'), ('<', 'Article', '>'), ('Article', '>', '<'), ('>', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '<'), ('>', '<', 'Article'), ('<', 'Article', '>'), ('Article', '>', '→'), ('>', '→', '|'), ('→', '|', '|'), ('|', '|', '<'), ('|', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '→'), ('>', '→', 'boy'), ('→', 'boy', '|'), ('boy', '|', 'apple'), ('|', 'apple', 'Prof.'), ('apple', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Context'), ('›', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'A'), ('grammar', 'A', 'context'), ('A', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '('), ('grammar', '(', 'CFG'), ('(', 'CFG', ')'), ('CFG', ')', '4-tuple'), (')', '4-tuple', ','), ('4-tuple', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'non'), ('set', 'non', 'terminals'), ('non', 'terminals', ','), ('terminals', ',', 'disjoint'), (',', 'disjoint', 'finite'), ('disjoint', 'finite', 'set'), ('finite', 'set', 'terminals'), ('set', 'terminals', ','), ('terminals', ',', 'element'), (',', 'element', '’'), ('element', '’', 'start'), ('’', 'start', 'symbol'), ('start', 'symbol', ','), ('symbol', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'formulas'), ('set', 'formulas', 'form'), ('formulas', 'form', 'Start'), ('form', 'Start', 'symbol'), ('Start', 'symbol', ':'), ('symbol', ':', 'First'), (':', 'First', 'nonterminal'), ('First', 'nonterminal', 'symbol'), ('nonterminal', 'symbol', 'grammar'), ('symbol', 'grammar', 'called'), ('grammar', 'called', 'start'), ('called', 'start', 'symbol'), ('start', 'symbol', '.')]

>> POS Tags are: 
 [('<', 'JJ'), ('Noun', 'NNP'), ('Phrase', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('<', 'NNP'), ('Article', 'NNP'), ('>', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('<', 'NNP'), ('Article', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('boy', 'NN'), ('|', 'NNP'), ('apple', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'NNP'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '('), ('CFG', 'NNP'), (')', ')'), ('4-tuple', 'JJ'), (',', ','), ('finite', 'JJ'), ('set', 'NN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('disjoint', 'NN'), ('finite', 'NN'), ('set', 'VBN'), ('terminals', 'NNS'), (',', ','), ('element', 'NN'), ('’', 'NNP'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('finite', 'JJ'), ('set', 'VBN'), ('formulas', 'NNS'), ('form', 'JJ'), ('Start', 'NNP'), ('symbol', 'NN'), (':', ':'), ('First', 'NNP'), ('nonterminal', 'JJ'), ('symbol', 'NN'), ('grammar', 'NN'), ('called', 'VBN'), ('start', 'JJ'), ('symbol', 'NN'), ('.', '.')]

 (S
  (NP
    </JJ
    Noun/NNP
    Phrase/NNP
    >/NNP
    →/NNP
    </NNP
    Article/NNP
    >/NNP
    </NNP
    Noun/NNP
    >/NNP
    </NNP
    Article/NNP
    >/NNP
    →/NNP
    |/NNP
    |/NNP
    </NNP
    Noun/NNP
    >/NNP
    →/NNP
    boy/NN
    |/NNP
    apple/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Context/NNP)
  (NP free/JJ grammar/NN A/NNP context/NN)
  (NP free/JJ grammar/NN)
  (/(
  (NP CFG/NNP)
  )/)
  4-tuple/JJ
  ,/,
  (NP finite/JJ set/NN non/NN terminals/NNS)
  ,/,
  (NP disjoint/NN finite/NN)
  set/VBN
  (NP terminals/NNS)
  ,/,
  (NP element/NN ’/NNP start/NN symbol/NN)
  ,/,
  finite/JJ
  set/VBN
  (NP formulas/NNS)
  (NP form/JJ Start/NNP symbol/NN)
  :/:
  (NP First/NNP)
  (NP nonterminal/JJ symbol/NN grammar/NN)
  called/VBN
  (NP start/JJ symbol/NN)
  ./.) 


>> Noun Phrases are: 
 ['< Noun Phrase > → < Article > < Noun > < Article > → | | < Noun > → boy | apple Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Context', 'free grammar A context', 'free grammar', 'CFG', 'finite set non terminals', 'disjoint finite', 'terminals', 'element ’ start symbol', 'formulas', 'form Start symbol', 'First', 'nonterminal symbol grammar', 'start symbol']

>> Named Entities are: 
 [('PERSON', 'Noun Phrase'), ('PERSON', 'Article'), ('PERSON', 'Article'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'appl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Start', 'start'), ('symbol', 'symbol'), (':', ':'), ('First', 'first'), ('nonterminal', 'nontermin'), ('symbol', 'symbol'), ('grammar', 'grammar'), ('called', 'call'), ('start', 'start'), ('symbol', 'symbol'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'appl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Start', 'start'), ('symbol', 'symbol'), (':', ':'), ('First', 'first'), ('nonterminal', 'nontermin'), ('symbol', 'symbol'), ('grammar', 'grammar'), ('called', 'call'), ('start', 'start'), ('symbol', 'symbol'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('Noun', 'Noun'), ('Phrase', 'Phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'Article'), ('>', '>'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('<', '<'), ('Article', 'Article'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'apple'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'A'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('4-tuple', '4-tuple'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('terminals', 'terminal'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Start', 'Start'), ('symbol', 'symbol'), (':', ':'), ('First', 'First'), ('nonterminal', 'nonterminal'), ('symbol', 'symbol'), ('grammar', 'grammar'), ('called', 'called'), ('start', 'start'), ('symbol', 'symbol'), ('.', '.')]



============================ Sentence 7 =============================

<Noun Phrase> → <Article><Noun> <Article> → a | an | the <Noun> → boy | apple     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Production:   A production, also called a rewriting rule, is a rule of grammar. 


>> Tokens are: 
 ['<', 'Noun', 'Phrase', '>', '→', '<', 'Article', '>', '<', 'Noun', '>', '<', 'Article', '>', '→', '|', '|', '<', 'Noun', '>', '→', 'boy', '|', 'apple', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', '4-tuple', ',', 'finite', 'set', 'non', 'terminals', ',', 'disjoint', 'finite', 'set', 'terminals', ',', 'element', '’', 'start', 'symbol', ',', 'finite', 'set', 'formulas', 'form', 'Production', ':', 'A', 'production', ',', 'also', 'called', 'rewriting', 'rule', ',', 'rule', 'grammar', '.']

>> Bigrams are: 
 [('<', 'Noun'), ('Noun', 'Phrase'), ('Phrase', '>'), ('>', '→'), ('→', '<'), ('<', 'Article'), ('Article', '>'), ('>', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '<'), ('<', 'Article'), ('Article', '>'), ('>', '→'), ('→', '|'), ('|', '|'), ('|', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '→'), ('→', 'boy'), ('boy', '|'), ('|', 'apple'), ('apple', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Context'), ('Context', 'free'), ('free', 'grammar'), ('grammar', 'A'), ('A', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '('), ('(', 'CFG'), ('CFG', ')'), (')', '4-tuple'), ('4-tuple', ','), (',', 'finite'), ('finite', 'set'), ('set', 'non'), ('non', 'terminals'), ('terminals', ','), (',', 'disjoint'), ('disjoint', 'finite'), ('finite', 'set'), ('set', 'terminals'), ('terminals', ','), (',', 'element'), ('element', '’'), ('’', 'start'), ('start', 'symbol'), ('symbol', ','), (',', 'finite'), ('finite', 'set'), ('set', 'formulas'), ('formulas', 'form'), ('form', 'Production'), ('Production', ':'), (':', 'A'), ('A', 'production'), ('production', ','), (',', 'also'), ('also', 'called'), ('called', 'rewriting'), ('rewriting', 'rule'), ('rule', ','), (',', 'rule'), ('rule', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('<', 'Noun', 'Phrase'), ('Noun', 'Phrase', '>'), ('Phrase', '>', '→'), ('>', '→', '<'), ('→', '<', 'Article'), ('<', 'Article', '>'), ('Article', '>', '<'), ('>', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '<'), ('>', '<', 'Article'), ('<', 'Article', '>'), ('Article', '>', '→'), ('>', '→', '|'), ('→', '|', '|'), ('|', '|', '<'), ('|', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '→'), ('>', '→', 'boy'), ('→', 'boy', '|'), ('boy', '|', 'apple'), ('|', 'apple', 'Prof.'), ('apple', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Context'), ('›', 'Context', 'free'), ('Context', 'free', 'grammar'), ('free', 'grammar', 'A'), ('grammar', 'A', 'context'), ('A', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '('), ('grammar', '(', 'CFG'), ('(', 'CFG', ')'), ('CFG', ')', '4-tuple'), (')', '4-tuple', ','), ('4-tuple', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'non'), ('set', 'non', 'terminals'), ('non', 'terminals', ','), ('terminals', ',', 'disjoint'), (',', 'disjoint', 'finite'), ('disjoint', 'finite', 'set'), ('finite', 'set', 'terminals'), ('set', 'terminals', ','), ('terminals', ',', 'element'), (',', 'element', '’'), ('element', '’', 'start'), ('’', 'start', 'symbol'), ('start', 'symbol', ','), ('symbol', ',', 'finite'), (',', 'finite', 'set'), ('finite', 'set', 'formulas'), ('set', 'formulas', 'form'), ('formulas', 'form', 'Production'), ('form', 'Production', ':'), ('Production', ':', 'A'), (':', 'A', 'production'), ('A', 'production', ','), ('production', ',', 'also'), (',', 'also', 'called'), ('also', 'called', 'rewriting'), ('called', 'rewriting', 'rule'), ('rewriting', 'rule', ','), ('rule', ',', 'rule'), (',', 'rule', 'grammar'), ('rule', 'grammar', '.')]

>> POS Tags are: 
 [('<', 'JJ'), ('Noun', 'NNP'), ('Phrase', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('<', 'NNP'), ('Article', 'NNP'), ('>', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('<', 'NNP'), ('Article', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('boy', 'NN'), ('|', 'NNP'), ('apple', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Context', 'NNP'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'NNP'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '('), ('CFG', 'NNP'), (')', ')'), ('4-tuple', 'JJ'), (',', ','), ('finite', 'JJ'), ('set', 'NN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('disjoint', 'NN'), ('finite', 'NN'), ('set', 'VBN'), ('terminals', 'NNS'), (',', ','), ('element', 'NN'), ('’', 'NNP'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('finite', 'JJ'), ('set', 'VBN'), ('formulas', 'JJ'), ('form', 'NN'), ('Production', 'NN'), (':', ':'), ('A', 'DT'), ('production', 'NN'), (',', ','), ('also', 'RB'), ('called', 'VBD'), ('rewriting', 'NN'), ('rule', 'NN'), (',', ','), ('rule', 'NN'), ('grammar', 'NN'), ('.', '.')]

 (S
  (NP
    </JJ
    Noun/NNP
    Phrase/NNP
    >/NNP
    →/NNP
    </NNP
    Article/NNP
    >/NNP
    </NNP
    Noun/NNP
    >/NNP
    </NNP
    Article/NNP
    >/NNP
    →/NNP
    |/NNP
    |/NNP
    </NNP
    Noun/NNP
    >/NNP
    →/NNP
    boy/NN
    |/NNP
    apple/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Context/NNP)
  (NP free/JJ grammar/NN A/NNP context/NN)
  (NP free/JJ grammar/NN)
  (/(
  (NP CFG/NNP)
  )/)
  4-tuple/JJ
  ,/,
  (NP finite/JJ set/NN non/NN terminals/NNS)
  ,/,
  (NP disjoint/NN finite/NN)
  set/VBN
  (NP terminals/NNS)
  ,/,
  (NP element/NN ’/NNP start/NN symbol/NN)
  ,/,
  finite/JJ
  set/VBN
  (NP formulas/JJ form/NN Production/NN)
  :/:
  (NP A/DT production/NN)
  ,/,
  also/RB
  called/VBD
  (NP rewriting/NN rule/NN)
  ,/,
  (NP rule/NN grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['< Noun Phrase > → < Article > < Noun > < Article > → | | < Noun > → boy | apple Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Context', 'free grammar A context', 'free grammar', 'CFG', 'finite set non terminals', 'disjoint finite', 'terminals', 'element ’ start symbol', 'formulas form Production', 'A production', 'rewriting rule', 'rule grammar']

>> Named Entities are: 
 [('PERSON', 'Noun Phrase'), ('PERSON', 'Article'), ('PERSON', 'Article'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'CFG')] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'appl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Production', 'product'), (':', ':'), ('A', 'a'), ('production', 'product'), (',', ','), ('also', 'also'), ('called', 'call'), ('rewriting', 'rewrit'), ('rule', 'rule'), (',', ','), ('rule', 'rule'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'appl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'cfg'), (')', ')'), ('4-tuple', '4-tupl'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finit'), ('set', 'set'), ('terminals', 'termin'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finit'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Production', 'product'), (':', ':'), ('A', 'a'), ('production', 'product'), (',', ','), ('also', 'also'), ('called', 'call'), ('rewriting', 'rewrit'), ('rule', 'rule'), (',', ','), ('rule', 'rule'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('Noun', 'Noun'), ('Phrase', 'Phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'Article'), ('>', '>'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('<', '<'), ('Article', 'Article'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'apple'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Context', 'Context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'A'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('4-tuple', '4-tuple'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('terminals', 'terminal'), (',', ','), ('element', 'element'), ('’', '’'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formula'), ('form', 'form'), ('Production', 'Production'), (':', ':'), ('A', 'A'), ('production', 'production'), (',', ','), ('also', 'also'), ('called', 'called'), ('rewriting', 'rewriting'), ('rule', 'rule'), (',', ','), ('rule', 'rule'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 8 =============================

It has the form of A nonterminal symbol → String of terminal and nonterminal symbols     <Noun Phrase> → <Article><Noun> <Article> → a | an | the <Noun> → boy | apple       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Grammar Write terminals, non terminals, start symbol, and productions for following grammar. 


>> Tokens are: 
 ['It', 'form', 'A', 'nonterminal', 'symbol', '→', 'String', 'terminal', 'nonterminal', 'symbols', '<', 'Noun', 'Phrase', '>', '→', '<', 'Article', '>', '<', 'Noun', '>', '<', 'Article', '>', '→', '|', '|', '<', 'Noun', '>', '→', 'boy', '|', 'apple', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Grammar', 'Write', 'terminals', ',', 'non', 'terminals', ',', 'start', 'symbol', ',', 'productions', 'following', 'grammar', '.']

>> Bigrams are: 
 [('It', 'form'), ('form', 'A'), ('A', 'nonterminal'), ('nonterminal', 'symbol'), ('symbol', '→'), ('→', 'String'), ('String', 'terminal'), ('terminal', 'nonterminal'), ('nonterminal', 'symbols'), ('symbols', '<'), ('<', 'Noun'), ('Noun', 'Phrase'), ('Phrase', '>'), ('>', '→'), ('→', '<'), ('<', 'Article'), ('Article', '>'), ('>', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '<'), ('<', 'Article'), ('Article', '>'), ('>', '→'), ('→', '|'), ('|', '|'), ('|', '<'), ('<', 'Noun'), ('Noun', '>'), ('>', '→'), ('→', 'boy'), ('boy', '|'), ('|', 'apple'), ('apple', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Grammar'), ('Grammar', 'Write'), ('Write', 'terminals'), ('terminals', ','), (',', 'non'), ('non', 'terminals'), ('terminals', ','), (',', 'start'), ('start', 'symbol'), ('symbol', ','), (',', 'productions'), ('productions', 'following'), ('following', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('It', 'form', 'A'), ('form', 'A', 'nonterminal'), ('A', 'nonterminal', 'symbol'), ('nonterminal', 'symbol', '→'), ('symbol', '→', 'String'), ('→', 'String', 'terminal'), ('String', 'terminal', 'nonterminal'), ('terminal', 'nonterminal', 'symbols'), ('nonterminal', 'symbols', '<'), ('symbols', '<', 'Noun'), ('<', 'Noun', 'Phrase'), ('Noun', 'Phrase', '>'), ('Phrase', '>', '→'), ('>', '→', '<'), ('→', '<', 'Article'), ('<', 'Article', '>'), ('Article', '>', '<'), ('>', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '<'), ('>', '<', 'Article'), ('<', 'Article', '>'), ('Article', '>', '→'), ('>', '→', '|'), ('→', '|', '|'), ('|', '|', '<'), ('|', '<', 'Noun'), ('<', 'Noun', '>'), ('Noun', '>', '→'), ('>', '→', 'boy'), ('→', 'boy', '|'), ('boy', '|', 'apple'), ('|', 'apple', 'Prof.'), ('apple', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Grammar'), (':', 'Grammar', 'Write'), ('Grammar', 'Write', 'terminals'), ('Write', 'terminals', ','), ('terminals', ',', 'non'), (',', 'non', 'terminals'), ('non', 'terminals', ','), ('terminals', ',', 'start'), (',', 'start', 'symbol'), ('start', 'symbol', ','), ('symbol', ',', 'productions'), (',', 'productions', 'following'), ('productions', 'following', 'grammar'), ('following', 'grammar', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('form', 'VBZ'), ('A', 'DT'), ('nonterminal', 'JJ'), ('symbol', 'NN'), ('→', 'NNP'), ('String', 'NNP'), ('terminal', 'JJ'), ('nonterminal', 'JJ'), ('symbols', 'NNS'), ('<', 'VBP'), ('Noun', 'NNP'), ('Phrase', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('<', 'NNP'), ('Article', 'NNP'), ('>', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('<', 'NNP'), ('Article', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('Noun', 'NNP'), ('>', 'NNP'), ('→', 'NNP'), ('boy', 'NN'), ('|', 'NNP'), ('apple', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Grammar', 'NNP'), ('Write', 'NNP'), ('terminals', 'NNS'), (',', ','), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('start', 'VBP'), ('symbol', 'NN'), (',', ','), ('productions', 'NNS'), ('following', 'VBG'), ('grammar', 'NN'), ('.', '.')]

 (S
  It/PRP
  form/VBZ
  (NP A/DT nonterminal/JJ symbol/NN →/NNP String/NNP)
  (NP terminal/JJ nonterminal/JJ symbols/NNS)
  </VBP
  (NP
    Noun/NNP
    Phrase/NNP
    >/NNP
    →/NNP
    </NNP
    Article/NNP
    >/NNP
    </NNP
    Noun/NNP
    >/NNP
    </NNP
    Article/NNP
    >/NNP
    →/NNP
    |/NNP
    |/NNP
    </NNP
    Noun/NNP
    >/NNP
    →/NNP
    boy/NN
    |/NNP
    apple/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Grammar/NNP Write/NNP terminals/NNS)
  ,/,
  (NP non/NN terminals/NNS)
  ,/,
  start/VBP
  (NP symbol/NN)
  ,/,
  (NP productions/NNS)
  following/VBG
  (NP grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['A nonterminal symbol → String', 'terminal nonterminal symbols', 'Noun Phrase > → < Article > < Noun > < Article > → | | < Noun > → boy | apple Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Grammar Write terminals', 'non terminals', 'symbol', 'productions', 'grammar']

>> Named Entities are: 
 [('PERSON', 'Noun Phrase'), ('PERSON', 'Article'), ('PERSON', 'Article'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Grammar Write')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('form', 'form'), ('A', 'a'), ('nonterminal', 'nontermin'), ('symbol', 'symbol'), ('→', '→'), ('String', 'string'), ('terminal', 'termin'), ('nonterminal', 'nontermin'), ('symbols', 'symbol'), ('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'appl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Grammar', 'grammar'), ('Write', 'write'), ('terminals', 'termin'), (',', ','), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('productions', 'product'), ('following', 'follow'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('form', 'form'), ('A', 'a'), ('nonterminal', 'nontermin'), ('symbol', 'symbol'), ('→', '→'), ('String', 'string'), ('terminal', 'termin'), ('nonterminal', 'nontermin'), ('symbols', 'symbol'), ('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'articl'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'appl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Grammar', 'grammar'), ('Write', 'write'), ('terminals', 'termin'), (',', ','), ('non', 'non'), ('terminals', 'termin'), (',', ','), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('productions', 'product'), ('following', 'follow'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('form', 'form'), ('A', 'A'), ('nonterminal', 'nonterminal'), ('symbol', 'symbol'), ('→', '→'), ('String', 'String'), ('terminal', 'terminal'), ('nonterminal', 'nonterminal'), ('symbols', 'symbol'), ('<', '<'), ('Noun', 'Noun'), ('Phrase', 'Phrase'), ('>', '>'), ('→', '→'), ('<', '<'), ('Article', 'Article'), ('>', '>'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('<', '<'), ('Article', 'Article'), ('>', '>'), ('→', '→'), ('|', '|'), ('|', '|'), ('<', '<'), ('Noun', 'Noun'), ('>', '>'), ('→', '→'), ('boy', 'boy'), ('|', '|'), ('apple', 'apple'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Grammar', 'Grammar'), ('Write', 'Write'), ('terminals', 'terminal'), (',', ','), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('productions', 'production'), ('following', 'following'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 9 =============================

E  E O E| (E) | -E | id O  + | - | * | /  | ↑  Terminals: 	id + - * / ↑ ( ) Non terminals: E, O Start symbol: 	E Productions: 	E  E O E| (E) | -E | id 		O  + | - | * | /  | ↑     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Derivation & Ambiguity        Derivation Derivation is used to find whether the string belongs to a given grammar or not. 


>> Tokens are: 
 ['E', '\uf0e0', 'E', 'O', 'E|', '(', 'E', ')', '|', '-E', '|', 'id', 'O', '\uf0e0', '+', '|', '-', '|', '*', '|', '/', '|', '↑', 'Terminals', ':', 'id', '+', '-', '*', '/', '↑', '(', ')', 'Non', 'terminals', ':', 'E', ',', 'O', 'Start', 'symbol', ':', 'E', 'Productions', ':', 'E', '\uf0e0', 'E', 'O', 'E|', '(', 'E', ')', '|', '-E', '|', 'id', 'O', '\uf0e0', '+', '|', '-', '|', '*', '|', '/', '|', '↑', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Derivation', '&', 'Ambiguity', 'Derivation', 'Derivation', 'used', 'find', 'whether', 'string', 'belongs', 'given', 'grammar', '.']

>> Bigrams are: 
 [('E', '\uf0e0'), ('\uf0e0', 'E'), ('E', 'O'), ('O', 'E|'), ('E|', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', '-E'), ('-E', '|'), ('|', 'id'), ('id', 'O'), ('O', '\uf0e0'), ('\uf0e0', '+'), ('+', '|'), ('|', '-'), ('-', '|'), ('|', '*'), ('*', '|'), ('|', '/'), ('/', '|'), ('|', '↑'), ('↑', 'Terminals'), ('Terminals', ':'), (':', 'id'), ('id', '+'), ('+', '-'), ('-', '*'), ('*', '/'), ('/', '↑'), ('↑', '('), ('(', ')'), (')', 'Non'), ('Non', 'terminals'), ('terminals', ':'), (':', 'E'), ('E', ','), (',', 'O'), ('O', 'Start'), ('Start', 'symbol'), ('symbol', ':'), (':', 'E'), ('E', 'Productions'), ('Productions', ':'), (':', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'E'), ('E', 'O'), ('O', 'E|'), ('E|', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', '-E'), ('-E', '|'), ('|', 'id'), ('id', 'O'), ('O', '\uf0e0'), ('\uf0e0', '+'), ('+', '|'), ('|', '-'), ('-', '|'), ('|', '*'), ('*', '|'), ('|', '/'), ('/', '|'), ('|', '↑'), ('↑', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Derivation'), ('Derivation', '&'), ('&', 'Ambiguity'), ('Ambiguity', 'Derivation'), ('Derivation', 'Derivation'), ('Derivation', 'used'), ('used', 'find'), ('find', 'whether'), ('whether', 'string'), ('string', 'belongs'), ('belongs', 'given'), ('given', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('E', '\uf0e0', 'E'), ('\uf0e0', 'E', 'O'), ('E', 'O', 'E|'), ('O', 'E|', '('), ('E|', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', '-E'), ('|', '-E', '|'), ('-E', '|', 'id'), ('|', 'id', 'O'), ('id', 'O', '\uf0e0'), ('O', '\uf0e0', '+'), ('\uf0e0', '+', '|'), ('+', '|', '-'), ('|', '-', '|'), ('-', '|', '*'), ('|', '*', '|'), ('*', '|', '/'), ('|', '/', '|'), ('/', '|', '↑'), ('|', '↑', 'Terminals'), ('↑', 'Terminals', ':'), ('Terminals', ':', 'id'), (':', 'id', '+'), ('id', '+', '-'), ('+', '-', '*'), ('-', '*', '/'), ('*', '/', '↑'), ('/', '↑', '('), ('↑', '(', ')'), ('(', ')', 'Non'), (')', 'Non', 'terminals'), ('Non', 'terminals', ':'), ('terminals', ':', 'E'), (':', 'E', ','), ('E', ',', 'O'), (',', 'O', 'Start'), ('O', 'Start', 'symbol'), ('Start', 'symbol', ':'), ('symbol', ':', 'E'), (':', 'E', 'Productions'), ('E', 'Productions', ':'), ('Productions', ':', 'E'), (':', 'E', '\uf0e0'), ('E', '\uf0e0', 'E'), ('\uf0e0', 'E', 'O'), ('E', 'O', 'E|'), ('O', 'E|', '('), ('E|', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', '-E'), ('|', '-E', '|'), ('-E', '|', 'id'), ('|', 'id', 'O'), ('id', 'O', '\uf0e0'), ('O', '\uf0e0', '+'), ('\uf0e0', '+', '|'), ('+', '|', '-'), ('|', '-', '|'), ('-', '|', '*'), ('|', '*', '|'), ('*', '|', '/'), ('|', '/', '|'), ('/', '|', '↑'), ('|', '↑', 'Prof.'), ('↑', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Derivation'), ('›', 'Derivation', '&'), ('Derivation', '&', 'Ambiguity'), ('&', 'Ambiguity', 'Derivation'), ('Ambiguity', 'Derivation', 'Derivation'), ('Derivation', 'Derivation', 'used'), ('Derivation', 'used', 'find'), ('used', 'find', 'whether'), ('find', 'whether', 'string'), ('whether', 'string', 'belongs'), ('string', 'belongs', 'given'), ('belongs', 'given', 'grammar'), ('given', 'grammar', '.')]

>> POS Tags are: 
 [('E', 'NNP'), ('\uf0e0', 'NNP'), ('E', 'NNP'), ('O', 'NNP'), ('E|', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('-E', 'JJ'), ('|', 'NNP'), ('id', 'NN'), ('O', 'NNP'), ('\uf0e0', 'NNP'), ('+', 'NNP'), ('|', 'NNP'), ('-', ':'), ('|', 'NN'), ('*', 'JJ'), ('|', 'NNP'), ('/', 'NNP'), ('|', 'NNP'), ('↑', 'NNP'), ('Terminals', 'NNS'), (':', ':'), ('id', 'NN'), ('+', 'SYM'), ('-', ':'), ('*', 'NN'), ('/', 'NN'), ('↑', 'NNP'), ('(', '('), (')', ')'), ('Non', 'NN'), ('terminals', 'NNS'), (':', ':'), ('E', 'NN'), (',', ','), ('O', 'NNP'), ('Start', 'NNP'), ('symbol', 'NN'), (':', ':'), ('E', 'JJ'), ('Productions', 'NNS'), (':', ':'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('E', 'NNP'), ('O', 'NNP'), ('E|', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('-E', 'JJ'), ('|', 'NNP'), ('id', 'NN'), ('O', 'NNP'), ('\uf0e0', 'NNP'), ('+', 'NNP'), ('|', 'NNP'), ('-', ':'), ('|', 'NN'), ('*', 'JJ'), ('|', 'NNP'), ('/', 'NNP'), ('|', 'NNP'), ('↑', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Derivation', 'NNP'), ('&', 'CC'), ('Ambiguity', 'NNP'), ('Derivation', 'NNP'), ('Derivation', 'NNP'), ('used', 'VBD'), ('find', 'VB'), ('whether', 'IN'), ('string', 'VBG'), ('belongs', 'NNS'), ('given', 'VBN'), ('grammar', 'NN'), ('.', '.')]

 (S
  (NP E/NNP /NNP E/NNP O/NNP E|/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP -E/JJ |/NNP id/NN O/NNP /NNP +/NNP |/NNP)
  -/:
  (NP |/NN)
  (NP */JJ |/NNP //NNP |/NNP ↑/NNP Terminals/NNS)
  :/:
  (NP id/NN)
  +/SYM
  -/:
  (NP */NN //NN ↑/NNP)
  (/(
  )/)
  (NP Non/NN terminals/NNS)
  :/:
  (NP E/NN)
  ,/,
  (NP O/NNP Start/NNP symbol/NN)
  :/:
  (NP E/JJ Productions/NNS)
  :/:
  (NP E/NNP /NNP E/NNP O/NNP E|/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP -E/JJ |/NNP id/NN O/NNP /NNP +/NNP |/NNP)
  -/:
  (NP |/NN)
  (NP
    */JJ
    |/NNP
    //NNP
    |/NNP
    ↑/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Derivation/NNP)
  &/CC
  (NP Ambiguity/NNP Derivation/NNP Derivation/NNP)
  used/VBD
  find/VB
  whether/IN
  string/VBG
  (NP belongs/NNS)
  given/VBN
  (NP grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['E \uf0e0 E O E|', 'E', '-E | id O \uf0e0 + |', '|', '* | / | ↑ Terminals', 'id', '* / ↑', 'Non terminals', 'E', 'O Start symbol', 'E Productions', 'E \uf0e0 E O E|', 'E', '-E | id O \uf0e0 + |', '|', '* | / | ↑ Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Derivation', 'Ambiguity Derivation Derivation', 'belongs', 'grammar']

>> Named Entities are: 
 [('PERSON', 'O Start'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Ambiguity Derivation Derivation')] 

>> Stemming using Porter Stemmer: 
 [('E', 'e'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('O', 'o'), ('E|', 'e|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('|', '|'), ('id', 'id'), ('O', 'o'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', '↑'), ('Terminals', 'termin'), (':', ':'), ('id', 'id'), ('+', '+'), ('-', '-'), ('*', '*'), ('/', '/'), ('↑', '↑'), ('(', '('), (')', ')'), ('Non', 'non'), ('terminals', 'termin'), (':', ':'), ('E', 'e'), (',', ','), ('O', 'o'), ('Start', 'start'), ('symbol', 'symbol'), (':', ':'), ('E', 'e'), ('Productions', 'product'), (':', ':'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('O', 'o'), ('E|', 'e|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('|', '|'), ('id', 'id'), ('O', 'o'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', '↑'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'deriv'), ('&', '&'), ('Ambiguity', 'ambigu'), ('Derivation', 'deriv'), ('Derivation', 'deriv'), ('used', 'use'), ('find', 'find'), ('whether', 'whether'), ('string', 'string'), ('belongs', 'belong'), ('given', 'given'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E', 'e'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('O', 'o'), ('E|', 'e|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('|', '|'), ('id', 'id'), ('O', 'o'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', '↑'), ('Terminals', 'termin'), (':', ':'), ('id', 'id'), ('+', '+'), ('-', '-'), ('*', '*'), ('/', '/'), ('↑', '↑'), ('(', '('), (')', ')'), ('Non', 'non'), ('terminals', 'termin'), (':', ':'), ('E', 'e'), (',', ','), ('O', 'o'), ('Start', 'start'), ('symbol', 'symbol'), (':', ':'), ('E', 'e'), ('Productions', 'product'), (':', ':'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('O', 'o'), ('E|', 'e|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('|', '|'), ('id', 'id'), ('O', 'o'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', '↑'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'deriv'), ('&', '&'), ('Ambiguity', 'ambigu'), ('Derivation', 'deriv'), ('Derivation', 'deriv'), ('used', 'use'), ('find', 'find'), ('whether', 'whether'), ('string', 'string'), ('belongs', 'belong'), ('given', 'given'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('E', 'E'), ('\uf0e0', '\uf0e0'), ('E', 'E'), ('O', 'O'), ('E|', 'E|'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('-E', '-E'), ('|', '|'), ('id', 'id'), ('O', 'O'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', '↑'), ('Terminals', 'Terminals'), (':', ':'), ('id', 'id'), ('+', '+'), ('-', '-'), ('*', '*'), ('/', '/'), ('↑', '↑'), ('(', '('), (')', ')'), ('Non', 'Non'), ('terminals', 'terminal'), (':', ':'), ('E', 'E'), (',', ','), ('O', 'O'), ('Start', 'Start'), ('symbol', 'symbol'), (':', ':'), ('E', 'E'), ('Productions', 'Productions'), (':', ':'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('E', 'E'), ('O', 'O'), ('E|', 'E|'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('-E', '-E'), ('|', '|'), ('id', 'id'), ('O', 'O'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', '↑'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Derivation', 'Derivation'), ('&', '&'), ('Ambiguity', 'Ambiguity'), ('Derivation', 'Derivation'), ('Derivation', 'Derivation'), ('used', 'used'), ('find', 'find'), ('whether', 'whether'), ('string', 'string'), ('belongs', 'belongs'), ('given', 'given'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 10 =============================

Types of derivations are:  Leftmost derivation  Rightmost derivation     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Leftmost derivation  A derivation of a string  in a grammar  is a left most derivation if at every step the left most non terminal is replaced. 


>> Tokens are: 
 ['Types', 'derivations', ':', 'Leftmost', 'derivation', 'Rightmost', 'derivation', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Leftmost', 'derivation', 'A', 'derivation', 'string', 'grammar', 'left', 'derivation', 'every', 'step', 'left', 'non', 'terminal', 'replaced', '.']

>> Bigrams are: 
 [('Types', 'derivations'), ('derivations', ':'), (':', 'Leftmost'), ('Leftmost', 'derivation'), ('derivation', 'Rightmost'), ('Rightmost', 'derivation'), ('derivation', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Leftmost'), ('Leftmost', 'derivation'), ('derivation', 'A'), ('A', 'derivation'), ('derivation', 'string'), ('string', 'grammar'), ('grammar', 'left'), ('left', 'derivation'), ('derivation', 'every'), ('every', 'step'), ('step', 'left'), ('left', 'non'), ('non', 'terminal'), ('terminal', 'replaced'), ('replaced', '.')]

>> Trigrams are: 
 [('Types', 'derivations', ':'), ('derivations', ':', 'Leftmost'), (':', 'Leftmost', 'derivation'), ('Leftmost', 'derivation', 'Rightmost'), ('derivation', 'Rightmost', 'derivation'), ('Rightmost', 'derivation', 'Prof.'), ('derivation', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Leftmost'), ('›', 'Leftmost', 'derivation'), ('Leftmost', 'derivation', 'A'), ('derivation', 'A', 'derivation'), ('A', 'derivation', 'string'), ('derivation', 'string', 'grammar'), ('string', 'grammar', 'left'), ('grammar', 'left', 'derivation'), ('left', 'derivation', 'every'), ('derivation', 'every', 'step'), ('every', 'step', 'left'), ('step', 'left', 'non'), ('left', 'non', 'terminal'), ('non', 'terminal', 'replaced'), ('terminal', 'replaced', '.')]

>> POS Tags are: 
 [('Types', 'NNS'), ('derivations', 'NNS'), (':', ':'), ('Leftmost', 'NNP'), ('derivation', 'NN'), ('Rightmost', 'NNP'), ('derivation', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Leftmost', 'NNP'), ('derivation', 'NN'), ('A', 'NNP'), ('derivation', 'NN'), ('string', 'VBG'), ('grammar', 'NN'), ('left', 'VBD'), ('derivation', 'NN'), ('every', 'DT'), ('step', 'NN'), ('left', 'VBD'), ('non', 'JJ'), ('terminal', 'NN'), ('replaced', 'VBD'), ('.', '.')]

 (S
  (NP Types/NNS derivations/NNS)
  :/:
  (NP
    Leftmost/NNP
    derivation/NN
    Rightmost/NNP
    derivation/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Leftmost/NNP derivation/NN A/NNP derivation/NN)
  string/VBG
  (NP grammar/NN)
  left/VBD
  (NP derivation/NN)
  (NP every/DT step/NN)
  left/VBD
  (NP non/JJ terminal/NN)
  replaced/VBD
  ./.) 


>> Noun Phrases are: 
 ['Types derivations', 'Leftmost derivation Rightmost derivation Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Leftmost derivation A derivation', 'grammar', 'derivation', 'every step', 'non terminal']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Types', 'type'), ('derivations', 'deriv'), (':', ':'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('left', 'left'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('left', 'left'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Types', 'type'), ('derivations', 'deriv'), (':', ':'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leftmost', 'leftmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('left', 'left'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('left', 'left'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Lemmatization: 
 [('Types', 'Types'), ('derivations', 'derivation'), (':', ':'), ('Leftmost', 'Leftmost'), ('derivation', 'derivation'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leftmost', 'Leftmost'), ('derivation', 'derivation'), ('A', 'A'), ('derivation', 'derivation'), ('string', 'string'), ('grammar', 'grammar'), ('left', 'left'), ('derivation', 'derivation'), ('every', 'every'), ('step', 'step'), ('left', 'left'), ('non', 'non'), ('terminal', 'terminal'), ('replaced', 'replaced'), ('.', '.')]



============================ Sentence 11 =============================

Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a   		S 	S-S S*S-S a*S-S a*a-S 	a*a-a   a S - S a a S * S S Parse tree represents the structure of derivation   Leftmost Derivation Parse tree    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rightmost derivation  A derivation of a string  in a grammar  is a right most derivation if at every step the right most non terminal is replaced. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0S+S', '|', 'S-S', '|', 'S', '*', 'S', '|', 'S/S', '|', 'Output', 'string', ':', '*', 'a-a', 'S', '\uf0e0S-S', '\uf0e0S', '*', 'S-S', '\uf0e0a', '*', 'S-S', '\uf0e0a', '*', 'a-S', '\uf0e0a', '*', 'a-a', 'S', '-', 'S', 'S', '*', 'S', 'S', 'Parse', 'tree', 'represents', 'structure', 'derivation', 'Leftmost', 'Derivation', 'Parse', 'tree', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rightmost', 'derivation', 'A', 'derivation', 'string', 'grammar', 'right', 'derivation', 'every', 'step', 'right', 'non', 'terminal', 'replaced', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S-S'), ('S-S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', 'S/S'), ('S/S', '|'), ('|', 'Output'), ('Output', 'string'), ('string', ':'), (':', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '\uf0e0S-S'), ('\uf0e0S-S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S-S'), ('S-S', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'S-S'), ('S-S', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'a-S'), ('a-S', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '-'), ('-', 'S'), ('S', 'S'), ('S', '*'), ('*', 'S'), ('S', 'S'), ('S', 'Parse'), ('Parse', 'tree'), ('tree', 'represents'), ('represents', 'structure'), ('structure', 'derivation'), ('derivation', 'Leftmost'), ('Leftmost', 'Derivation'), ('Derivation', 'Parse'), ('Parse', 'tree'), ('tree', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rightmost'), ('Rightmost', 'derivation'), ('derivation', 'A'), ('A', 'derivation'), ('derivation', 'string'), ('string', 'grammar'), ('grammar', 'right'), ('right', 'derivation'), ('derivation', 'every'), ('every', 'step'), ('step', 'right'), ('right', 'non'), ('non', 'terminal'), ('terminal', 'replaced'), ('replaced', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0S+S'), (':', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S-S'), ('|', 'S-S', '|'), ('S-S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', 'S/S'), ('|', 'S/S', '|'), ('S/S', '|', 'Output'), ('|', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '*'), (':', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '\uf0e0S-S'), ('S', '\uf0e0S-S', '\uf0e0S'), ('\uf0e0S-S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S-S'), ('*', 'S-S', '\uf0e0a'), ('S-S', '\uf0e0a', '*'), ('\uf0e0a', '*', 'S-S'), ('*', 'S-S', '\uf0e0a'), ('S-S', '\uf0e0a', '*'), ('\uf0e0a', '*', 'a-S'), ('*', 'a-S', '\uf0e0a'), ('a-S', '\uf0e0a', '*'), ('\uf0e0a', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '-'), ('S', '-', 'S'), ('-', 'S', 'S'), ('S', 'S', '*'), ('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', 'Parse'), ('S', 'Parse', 'tree'), ('Parse', 'tree', 'represents'), ('tree', 'represents', 'structure'), ('represents', 'structure', 'derivation'), ('structure', 'derivation', 'Leftmost'), ('derivation', 'Leftmost', 'Derivation'), ('Leftmost', 'Derivation', 'Parse'), ('Derivation', 'Parse', 'tree'), ('Parse', 'tree', 'Prof.'), ('tree', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rightmost'), ('›', 'Rightmost', 'derivation'), ('Rightmost', 'derivation', 'A'), ('derivation', 'A', 'derivation'), ('A', 'derivation', 'string'), ('derivation', 'string', 'grammar'), ('string', 'grammar', 'right'), ('grammar', 'right', 'derivation'), ('right', 'derivation', 'every'), ('derivation', 'every', 'step'), ('every', 'step', 'right'), ('step', 'right', 'non'), ('right', 'non', 'terminal'), ('non', 'terminal', 'replaced'), ('terminal', 'replaced', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S-S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('S/S', 'NNP'), ('|', 'NNP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('*', 'JJ'), ('a-a', 'JJ'), ('S', 'NNP'), ('\uf0e0S-S', 'JJ'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S-S', 'NNP'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('S-S', 'NNP'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('a-S', 'JJ'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('a-a', 'JJ'), ('S', 'NNP'), ('-', ':'), ('S', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('Parse', 'NNP'), ('tree', 'JJ'), ('represents', 'VBZ'), ('structure', 'NN'), ('derivation', 'NN'), ('Leftmost', 'NNP'), ('Derivation', 'NNP'), ('Parse', 'NNP'), ('tree', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Rightmost', 'NNP'), ('derivation', 'NN'), ('A', 'NNP'), ('derivation', 'NN'), ('string', 'VBG'), ('grammar', 'NN'), ('right', 'JJ'), ('derivation', 'NN'), ('every', 'DT'), ('step', 'NN'), ('right', 'RB'), ('non', 'JJ'), ('terminal', 'NN'), ('replaced', 'VBD'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP
    SS+S/NNP
    |/NNP
    S-S/NNP
    |/NNP
    S/NNP
    */NNP
    S/NNP
    |/NNP
    S/S/NNP
    |/NNP
    Output/NNP
    string/NN)
  :/:
  (NP */JJ a-a/JJ S/NNP)
  (NP S-S/JJ S/NNP */NNP S-S/NNP a/NNP */NNP S-S/NNP a/NNP */NNP)
  (NP a-S/JJ a/NNP */NNP)
  (NP a-a/JJ S/NNP)
  -/:
  (NP S/NNP S/NNP */NNP S/NNP S/NNP Parse/NNP)
  tree/JJ
  represents/VBZ
  (NP
    structure/NN
    derivation/NN
    Leftmost/NNP
    Derivation/NNP
    Parse/NNP
    tree/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Rightmost/NNP derivation/NN A/NNP derivation/NN)
  string/VBG
  (NP grammar/NN)
  (NP right/JJ derivation/NN)
  (NP every/DT step/NN)
  right/RB
  (NP non/JJ terminal/NN)
  replaced/VBD
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0S+S | S-S | S * S | S/S | Output string', '* a-a S', '\uf0e0S-S \uf0e0S * S-S \uf0e0a * S-S \uf0e0a *', 'a-S \uf0e0a *', 'a-a S', 'S S * S S Parse', 'structure derivation Leftmost Derivation Parse tree Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rightmost derivation A derivation', 'grammar', 'right derivation', 'every step', 'non terminal']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Leftmost Derivation Parse'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S-S', 's-'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S-S', '\uf0e0s-'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('S-S', 's-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-S', 'a-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('-', '-'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('Parse', 'pars'), ('tree', 'tree'), ('represents', 'repres'), ('structure', 'structur'), ('derivation', 'deriv'), ('Leftmost', 'leftmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('tree', 'tree'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('right', 'right'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('right', 'right'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S-S', '\uf0e0s-s'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-s'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('S-S', 's-s'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-S', 'a-'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('-', '-'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('Parse', 'pars'), ('tree', 'tree'), ('represents', 'repres'), ('structure', 'structur'), ('derivation', 'deriv'), ('Leftmost', 'leftmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('tree', 'tree'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rightmost', 'rightmost'), ('derivation', 'deriv'), ('A', 'a'), ('derivation', 'deriv'), ('string', 'string'), ('grammar', 'grammar'), ('right', 'right'), ('derivation', 'deriv'), ('every', 'everi'), ('step', 'step'), ('right', 'right'), ('non', 'non'), ('terminal', 'termin'), ('replaced', 'replac'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S-S', 'S-S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('S/S', 'S/S'), ('|', '|'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('\uf0e0S-S', '\uf0e0S-S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S-S', 'S-S'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('S-S', 'S-S'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-S', 'a-S'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('-', '-'), ('S', 'S'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('Parse', 'Parse'), ('tree', 'tree'), ('represents', 'represents'), ('structure', 'structure'), ('derivation', 'derivation'), ('Leftmost', 'Leftmost'), ('Derivation', 'Derivation'), ('Parse', 'Parse'), ('tree', 'tree'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('A', 'A'), ('derivation', 'derivation'), ('string', 'string'), ('grammar', 'grammar'), ('right', 'right'), ('derivation', 'derivation'), ('every', 'every'), ('step', 'step'), ('right', 'right'), ('non', 'non'), ('terminal', 'terminal'), ('replaced', 'replaced'), ('.', '.')]



============================ Sentence 12 =============================

It is all called canonical derivation. 


>> Tokens are: 
 ['It', 'called', 'canonical', 'derivation', '.']

>> Bigrams are: 
 [('It', 'called'), ('called', 'canonical'), ('canonical', 'derivation'), ('derivation', '.')]

>> Trigrams are: 
 [('It', 'called', 'canonical'), ('called', 'canonical', 'derivation'), ('canonical', 'derivation', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('called', 'VBD'), ('canonical', 'JJ'), ('derivation', 'NN'), ('.', '.')]

 (S It/PRP called/VBD (NP canonical/JJ derivation/NN) ./.) 


>> Noun Phrases are: 
 ['canonical derivation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('called', 'call'), ('canonical', 'canon'), ('derivation', 'deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('called', 'call'), ('canonical', 'canon'), ('derivation', 'deriv'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('called', 'called'), ('canonical', 'canonical'), ('derivation', 'derivation'), ('.', '.')]



============================ Sentence 13 =============================

Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a            S 		S*S 		 S*S-S 		 S*S-a 		 S*a-a 		 a*a-a  a S * S a a S - S S Rightmost Derivation Parse Tree    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise: Derivation Perform leftmost derivation and draw parse tree. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0S+S', '|', 'S-S', '|', 'S', '*', 'S', '|', 'S/S', '|', 'Output', 'string', ':', '*', 'a-a', 'S', '\uf0e0S', '*', 'S', '\uf0e0S', '*', 'S-S', '\uf0e0S', '*', 'S-a', '\uf0e0S', '*', 'a-a', '\uf0e0a', '*', 'a-a', 'S', '*', 'S', 'S', '-', 'S', 'S', 'Rightmost', 'Derivation', 'Parse', 'Tree', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Exercise', ':', 'Derivation', 'Perform', 'leftmost', 'derivation', 'draw', 'parse', 'tree', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S-S'), ('S-S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', 'S/S'), ('S/S', '|'), ('|', 'Output'), ('Output', 'string'), ('string', ':'), (':', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S'), ('S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S-S'), ('S-S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S-a'), ('S-a', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'a-a'), ('a-a', '\uf0e0a'), ('\uf0e0a', '*'), ('*', 'a-a'), ('a-a', 'S'), ('S', '*'), ('*', 'S'), ('S', 'S'), ('S', '-'), ('-', 'S'), ('S', 'S'), ('S', 'Rightmost'), ('Rightmost', 'Derivation'), ('Derivation', 'Parse'), ('Parse', 'Tree'), ('Tree', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', ':'), (':', 'Derivation'), ('Derivation', 'Perform'), ('Perform', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'draw'), ('draw', 'parse'), ('parse', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0S+S'), (':', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S-S'), ('|', 'S-S', '|'), ('S-S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', 'S/S'), ('|', 'S/S', '|'), ('S/S', '|', 'Output'), ('|', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '*'), (':', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '\uf0e0S'), ('S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S'), ('*', 'S', '\uf0e0S'), ('S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S-S'), ('*', 'S-S', '\uf0e0S'), ('S-S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S-a'), ('*', 'S-a', '\uf0e0S'), ('S-a', '\uf0e0S', '*'), ('\uf0e0S', '*', 'a-a'), ('*', 'a-a', '\uf0e0a'), ('a-a', '\uf0e0a', '*'), ('\uf0e0a', '*', 'a-a'), ('*', 'a-a', 'S'), ('a-a', 'S', '*'), ('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', '-'), ('S', '-', 'S'), ('-', 'S', 'S'), ('S', 'S', 'Rightmost'), ('S', 'Rightmost', 'Derivation'), ('Rightmost', 'Derivation', 'Parse'), ('Derivation', 'Parse', 'Tree'), ('Parse', 'Tree', 'Prof.'), ('Tree', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', ':'), ('Exercise', ':', 'Derivation'), (':', 'Derivation', 'Perform'), ('Derivation', 'Perform', 'leftmost'), ('Perform', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'draw'), ('derivation', 'draw', 'parse'), ('draw', 'parse', 'tree'), ('parse', 'tree', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S-S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('S/S', 'NNP'), ('|', 'NNP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('*', 'JJ'), ('a-a', 'JJ'), ('S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S-S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S-a', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('a-a', 'JJ'), ('\uf0e0a', 'NNP'), ('*', 'NNP'), ('a-a', 'JJ'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('-', ':'), ('S', 'NNP'), ('S', 'NNP'), ('Rightmost', 'NNP'), ('Derivation', 'NNP'), ('Parse', 'NNP'), ('Tree', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Exercise', 'NN'), (':', ':'), ('Derivation', 'NN'), ('Perform', 'NNP'), ('leftmost', 'NN'), ('derivation', 'NN'), ('draw', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP
    SS+S/NNP
    |/NNP
    S-S/NNP
    |/NNP
    S/NNP
    */NNP
    S/NNP
    |/NNP
    S/S/NNP
    |/NNP
    Output/NNP
    string/NN)
  :/:
  (NP
    */JJ
    a-a/JJ
    S/NNP
    S/NNP
    */NNP
    S/NNP
    S/NNP
    */NNP
    S-S/NNP
    S/NNP
    */NNP
    S-a/NNP
    S/NNP
    */NNP)
  (NP a-a/JJ a/NNP */NNP)
  (NP a-a/JJ S/NNP */NNP S/NNP S/NNP)
  -/:
  (NP
    S/NNP
    S/NNP
    Rightmost/NNP
    Derivation/NNP
    Parse/NNP
    Tree/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Exercise/NN)
  :/:
  (NP Derivation/NN Perform/NNP leftmost/NN derivation/NN)
  (NP draw/JJ parse/NN tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0S+S | S-S | S * S | S/S | Output string', '* a-a S \uf0e0S * S \uf0e0S * S-S \uf0e0S * S-a \uf0e0S *', 'a-a \uf0e0a *', 'a-a S * S S', 'S S Rightmost Derivation Parse Tree Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Exercise', 'Derivation Perform leftmost derivation', 'draw parse tree']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Parse Tree'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Perform')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S-S', 's-'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-a', 's-a'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('a-a', 'a-a'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('-', '-'), ('S', 's'), ('S', 's'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('Tree', 'tree'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Derivation', 'deriv'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-S', 's-s'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S-a', 's-a'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('a-a', 'a-a'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('-', '-'), ('S', 's'), ('S', 's'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('Parse', 'pars'), ('Tree', 'tree'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Derivation', 'deriv'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S-S', 'S-S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('S/S', 'S/S'), ('|', '|'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S', 'S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S-S', 'S-S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S-a', 'S-a'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('a-a', 'a-a'), ('\uf0e0a', '\uf0e0a'), ('*', '*'), ('a-a', 'a-a'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('-', '-'), ('S', 'S'), ('S', 'S'), ('Rightmost', 'Rightmost'), ('Derivation', 'Derivation'), ('Parse', 'Parse'), ('Tree', 'Tree'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), (':', ':'), ('Derivation', 'Derivation'), ('Perform', 'Perform'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 14 =============================

SA1B A0A | 𝜖 B0B | 1B | 𝜖  Output string: 1001 Perform leftmost derivation and draw parse tree. 


>> Tokens are: 
 ['S\uf0e0A1B', 'A\uf0e00A', '|', '𝜖', 'B\uf0e00B', '|', '1B', '|', '𝜖', 'Output', 'string', ':', '1001', 'Perform', 'leftmost', 'derivation', 'draw', 'parse', 'tree', '.']

>> Bigrams are: 
 [('S\uf0e0A1B', 'A\uf0e00A'), ('A\uf0e00A', '|'), ('|', '𝜖'), ('𝜖', 'B\uf0e00B'), ('B\uf0e00B', '|'), ('|', '1B'), ('1B', '|'), ('|', '𝜖'), ('𝜖', 'Output'), ('Output', 'string'), ('string', ':'), (':', '1001'), ('1001', 'Perform'), ('Perform', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'draw'), ('draw', 'parse'), ('parse', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('S\uf0e0A1B', 'A\uf0e00A', '|'), ('A\uf0e00A', '|', '𝜖'), ('|', '𝜖', 'B\uf0e00B'), ('𝜖', 'B\uf0e00B', '|'), ('B\uf0e00B', '|', '1B'), ('|', '1B', '|'), ('1B', '|', '𝜖'), ('|', '𝜖', 'Output'), ('𝜖', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '1001'), (':', '1001', 'Perform'), ('1001', 'Perform', 'leftmost'), ('Perform', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'draw'), ('derivation', 'draw', 'parse'), ('draw', 'parse', 'tree'), ('parse', 'tree', '.')]

>> POS Tags are: 
 [('S\uf0e0A1B', 'NNP'), ('A\uf0e00A', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('B\uf0e00B', 'NNP'), ('|', 'VBD'), ('1B', 'CD'), ('|', 'NNP'), ('𝜖', 'NNP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('1001', 'CD'), ('Perform', 'NNP'), ('leftmost', 'FW'), ('derivation', 'NN'), ('draw', 'FW'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP SA1B/NNP A0A/NNP |/NNP 𝜖/NNP B0B/NNP)
  |/VBD
  1B/CD
  (NP |/NNP 𝜖/NNP Output/NNP string/NN)
  :/:
  1001/CD
  (NP Perform/NNP)
  leftmost/FW
  (NP derivation/NN)
  draw/FW
  (NP parse/NN tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e0A1B A\uf0e00A | 𝜖 B\uf0e00B', '| 𝜖 Output string', 'Perform', 'derivation', 'parse tree']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', '𝜖'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', '𝜖'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e0A1B', 'S\uf0e0A1B'), ('A\uf0e00A', 'A\uf0e00A'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'B\uf0e00B'), ('|', '|'), ('1B', '1B'), ('|', '|'), ('𝜖', '𝜖'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('Perform', 'Perform'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 15 =============================

S0S1 | 01   Output string: 000111 Perform rightmost derivation and draw parse tree. 


>> Tokens are: 
 ['S\uf0e00S1', '|', '01', 'Output', 'string', ':', '000111', 'Perform', 'rightmost', 'derivation', 'draw', 'parse', 'tree', '.']

>> Bigrams are: 
 [('S\uf0e00S1', '|'), ('|', '01'), ('01', 'Output'), ('Output', 'string'), ('string', ':'), (':', '000111'), ('000111', 'Perform'), ('Perform', 'rightmost'), ('rightmost', 'derivation'), ('derivation', 'draw'), ('draw', 'parse'), ('parse', 'tree'), ('tree', '.')]

>> Trigrams are: 
 [('S\uf0e00S1', '|', '01'), ('|', '01', 'Output'), ('01', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', '000111'), (':', '000111', 'Perform'), ('000111', 'Perform', 'rightmost'), ('Perform', 'rightmost', 'derivation'), ('rightmost', 'derivation', 'draw'), ('derivation', 'draw', 'parse'), ('draw', 'parse', 'tree'), ('parse', 'tree', '.')]

>> POS Tags are: 
 [('S\uf0e00S1', 'NNP'), ('|', 'VBD'), ('01', 'CD'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('000111', 'CD'), ('Perform', 'NNP'), ('rightmost', 'NN'), ('derivation', 'NN'), ('draw', 'JJ'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')]

 (S
  (NP S0S1/NNP)
  |/VBD
  01/CD
  (NP Output/NNP string/NN)
  :/:
  000111/CD
  (NP Perform/NNP rightmost/NN derivation/NN)
  (NP draw/JJ parse/NN tree/NN)
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e00S1', 'Output string', 'Perform rightmost derivation', 'draw parse tree']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e00S1', 's\uf0e00s1'), ('|', '|'), ('01', '01'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('000111', '000111'), ('Perform', 'perform'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e00S1', 's\uf0e00s1'), ('|', '|'), ('01', '01'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('000111', '000111'), ('Perform', 'perform'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('draw', 'draw'), ('parse', 'pars'), ('tree', 'tree'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e00S1', 'S\uf0e00S1'), ('|', '|'), ('01', '01'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('000111', '000111'), ('Perform', 'Perform'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')]



============================ Sentence 16 =============================

EE+E | E*E | id | (E) | -E Output string: id + id * id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Ambiguous grammar        Ambiguity Ambiguity, is a word, phrase, or statement which contains more than one meaning. 


>> Tokens are: 
 ['E\uf0e0E+E', '|', 'E', '*', 'E', '|', 'id', '|', '(', 'E', ')', '|', '-E', 'Output', 'string', ':', 'id', '+', 'id', '*', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Ambiguous', 'grammar', 'Ambiguity', 'Ambiguity', ',', 'word', ',', 'phrase', ',', 'statement', 'contains', 'one', 'meaning', '.']

>> Bigrams are: 
 [('E\uf0e0E+E', '|'), ('|', 'E'), ('E', '*'), ('*', 'E'), ('E', '|'), ('|', 'id'), ('id', '|'), ('|', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', '-E'), ('-E', 'Output'), ('Output', 'string'), ('string', ':'), (':', 'id'), ('id', '+'), ('+', 'id'), ('id', '*'), ('*', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'Ambiguity'), ('Ambiguity', 'Ambiguity'), ('Ambiguity', ','), (',', 'word'), ('word', ','), (',', 'phrase'), ('phrase', ','), (',', 'statement'), ('statement', 'contains'), ('contains', 'one'), ('one', 'meaning'), ('meaning', '.')]

>> Trigrams are: 
 [('E\uf0e0E+E', '|', 'E'), ('|', 'E', '*'), ('E', '*', 'E'), ('*', 'E', '|'), ('E', '|', 'id'), ('|', 'id', '|'), ('id', '|', '('), ('|', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', '-E'), ('|', '-E', 'Output'), ('-E', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', 'id'), (':', 'id', '+'), ('id', '+', 'id'), ('+', 'id', '*'), ('id', '*', 'id'), ('*', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Ambiguous'), ('›', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'Ambiguity'), ('grammar', 'Ambiguity', 'Ambiguity'), ('Ambiguity', 'Ambiguity', ','), ('Ambiguity', ',', 'word'), (',', 'word', ','), ('word', ',', 'phrase'), (',', 'phrase', ','), ('phrase', ',', 'statement'), (',', 'statement', 'contains'), ('statement', 'contains', 'one'), ('contains', 'one', 'meaning'), ('one', 'meaning', '.')]

>> POS Tags are: 
 [('E\uf0e0E+E', 'NNP'), ('|', 'NNP'), ('E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('|', 'NNP'), ('id', 'NN'), ('|', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('-E', 'JJ'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('id', 'JJ'), ('+', 'NNP'), ('id', 'NN'), ('*', 'NNP'), ('id', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Ambiguous', 'NNP'), ('grammar', 'NN'), ('Ambiguity', 'NNP'), ('Ambiguity', 'NNP'), (',', ','), ('word', 'NN'), (',', ','), ('phrase', 'NN'), (',', ','), ('statement', 'NN'), ('contains', 'VBZ'), ('one', 'CD'), ('meaning', 'NN'), ('.', '.')]

 (S
  (NP EE+E/NNP |/NNP E/NNP */NNP E/NNP |/NNP id/NN |/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP -E/JJ Output/NNP string/NN)
  :/:
  (NP
    id/JJ
    +/NNP
    id/NN
    */NNP
    id/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Ambiguous/NNP grammar/NN Ambiguity/NNP Ambiguity/NNP)
  ,/,
  (NP word/NN)
  ,/,
  (NP phrase/NN)
  ,/,
  (NP statement/NN)
  contains/VBZ
  one/CD
  (NP meaning/NN)
  ./.) 


>> Noun Phrases are: 
 ['E\uf0e0E+E | E * E | id |', 'E', '-E Output string', 'id + id * id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Ambiguous grammar Ambiguity Ambiguity', 'word', 'phrase', 'statement', 'meaning']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('E\uf0e0E+E', 'e\uf0e0e+'), ('|', '|'), ('E', 'e'), ('*', '*'), ('E', 'e'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Ambiguity', 'ambigu'), ('Ambiguity', 'ambigu'), (',', ','), ('word', 'word'), (',', ','), ('phrase', 'phrase'), (',', ','), ('statement', 'statement'), ('contains', 'contain'), ('one', 'one'), ('meaning', 'mean'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E\uf0e0E+E', 'e\uf0e0e+'), ('|', '|'), ('E', 'e'), ('*', '*'), ('E', 'e'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Ambiguity', 'ambigu'), ('Ambiguity', 'ambigu'), (',', ','), ('word', 'word'), (',', ','), ('phrase', 'phrase'), (',', ','), ('statement', 'statement'), ('contains', 'contain'), ('one', 'one'), ('meaning', 'mean'), ('.', '.')]

>> Lemmatization: 
 [('E\uf0e0E+E', 'E\uf0e0E+E'), ('|', '|'), ('E', 'E'), ('*', '*'), ('E', 'E'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('-E', '-E'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('Ambiguity', 'Ambiguity'), ('Ambiguity', 'Ambiguity'), (',', ','), ('word', 'word'), (',', ','), ('phrase', 'phrase'), (',', ','), ('statement', 'statement'), ('contains', 'contains'), ('one', 'one'), ('meaning', 'meaning'), ('.', '.')]



============================ Sentence 17 =============================

Chip A long thin piece of potato A small piece of silicon      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Ambiguity In formal language grammar, ambiguity would arise if identical string can occur on the RHS of two or more productions. 


>> Tokens are: 
 ['Chip', 'A', 'long', 'thin', 'piece', 'potato', 'A', 'small', 'piece', 'silicon', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Ambiguity', 'In', 'formal', 'language', 'grammar', ',', 'ambiguity', 'would', 'arise', 'identical', 'string', 'occur', 'RHS', 'two', 'productions', '.']

>> Bigrams are: 
 [('Chip', 'A'), ('A', 'long'), ('long', 'thin'), ('thin', 'piece'), ('piece', 'potato'), ('potato', 'A'), ('A', 'small'), ('small', 'piece'), ('piece', 'silicon'), ('silicon', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Ambiguity'), ('Ambiguity', 'In'), ('In', 'formal'), ('formal', 'language'), ('language', 'grammar'), ('grammar', ','), (',', 'ambiguity'), ('ambiguity', 'would'), ('would', 'arise'), ('arise', 'identical'), ('identical', 'string'), ('string', 'occur'), ('occur', 'RHS'), ('RHS', 'two'), ('two', 'productions'), ('productions', '.')]

>> Trigrams are: 
 [('Chip', 'A', 'long'), ('A', 'long', 'thin'), ('long', 'thin', 'piece'), ('thin', 'piece', 'potato'), ('piece', 'potato', 'A'), ('potato', 'A', 'small'), ('A', 'small', 'piece'), ('small', 'piece', 'silicon'), ('piece', 'silicon', 'Prof.'), ('silicon', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Ambiguity'), ('›', 'Ambiguity', 'In'), ('Ambiguity', 'In', 'formal'), ('In', 'formal', 'language'), ('formal', 'language', 'grammar'), ('language', 'grammar', ','), ('grammar', ',', 'ambiguity'), (',', 'ambiguity', 'would'), ('ambiguity', 'would', 'arise'), ('would', 'arise', 'identical'), ('arise', 'identical', 'string'), ('identical', 'string', 'occur'), ('string', 'occur', 'RHS'), ('occur', 'RHS', 'two'), ('RHS', 'two', 'productions'), ('two', 'productions', '.')]

>> POS Tags are: 
 [('Chip', 'VB'), ('A', 'NNP'), ('long', 'RB'), ('thin', 'JJ'), ('piece', 'NN'), ('potato', 'VBD'), ('A', 'NNP'), ('small', 'JJ'), ('piece', 'NN'), ('silicon', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Ambiguity', 'NNP'), ('In', 'IN'), ('formal', 'JJ'), ('language', 'NN'), ('grammar', 'NN'), (',', ','), ('ambiguity', 'NN'), ('would', 'MD'), ('arise', 'VB'), ('identical', 'JJ'), ('string', 'NN'), ('occur', 'JJ'), ('RHS', 'NNP'), ('two', 'CD'), ('productions', 'NNS'), ('.', '.')]

 (S
  Chip/VB
  (NP A/NNP)
  long/RB
  (NP thin/JJ piece/NN)
  potato/VBD
  (NP A/NNP)
  (NP
    small/JJ
    piece/NN
    silicon/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Ambiguity/NNP)
  In/IN
  (NP formal/JJ language/NN grammar/NN)
  ,/,
  (NP ambiguity/NN)
  would/MD
  arise/VB
  (NP identical/JJ string/NN)
  (NP occur/JJ RHS/NNP)
  two/CD
  (NP productions/NNS)
  ./.) 


>> Noun Phrases are: 
 ['A', 'thin piece', 'A', 'small piece silicon Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Ambiguity', 'formal language grammar', 'ambiguity', 'identical string', 'occur RHS', 'productions']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Chip', 'chip'), ('A', 'a'), ('long', 'long'), ('thin', 'thin'), ('piece', 'piec'), ('potato', 'potato'), ('A', 'a'), ('small', 'small'), ('piece', 'piec'), ('silicon', 'silicon'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguity', 'ambigu'), ('In', 'in'), ('formal', 'formal'), ('language', 'languag'), ('grammar', 'grammar'), (',', ','), ('ambiguity', 'ambigu'), ('would', 'would'), ('arise', 'aris'), ('identical', 'ident'), ('string', 'string'), ('occur', 'occur'), ('RHS', 'rh'), ('two', 'two'), ('productions', 'product'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Chip', 'chip'), ('A', 'a'), ('long', 'long'), ('thin', 'thin'), ('piece', 'piec'), ('potato', 'potato'), ('A', 'a'), ('small', 'small'), ('piece', 'piec'), ('silicon', 'silicon'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguity', 'ambigu'), ('In', 'in'), ('formal', 'formal'), ('language', 'languag'), ('grammar', 'grammar'), (',', ','), ('ambiguity', 'ambigu'), ('would', 'would'), ('arise', 'aris'), ('identical', 'ident'), ('string', 'string'), ('occur', 'occur'), ('RHS', 'rhs'), ('two', 'two'), ('productions', 'product'), ('.', '.')]

>> Lemmatization: 
 [('Chip', 'Chip'), ('A', 'A'), ('long', 'long'), ('thin', 'thin'), ('piece', 'piece'), ('potato', 'potato'), ('A', 'A'), ('small', 'small'), ('piece', 'piece'), ('silicon', 'silicon'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguity', 'Ambiguity'), ('In', 'In'), ('formal', 'formal'), ('language', 'language'), ('grammar', 'grammar'), (',', ','), ('ambiguity', 'ambiguity'), ('would', 'would'), ('arise', 'arise'), ('identical', 'identical'), ('string', 'string'), ('occur', 'occur'), ('RHS', 'RHS'), ('two', 'two'), ('productions', 'production'), ('.', '.')]



============================ Sentence 18 =============================

Grammar: 	 	  can be derived from either N1 or N2     Replaced by  or  ? 


>> Tokens are: 
 ['Grammar', ':', 'derived', 'either', 'N1', 'N2', 'Replaced', '?']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'derived'), ('derived', 'either'), ('either', 'N1'), ('N1', 'N2'), ('N2', 'Replaced'), ('Replaced', '?')]

>> Trigrams are: 
 [('Grammar', ':', 'derived'), (':', 'derived', 'either'), ('derived', 'either', 'N1'), ('either', 'N1', 'N2'), ('N1', 'N2', 'Replaced'), ('N2', 'Replaced', '?')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('derived', 'VBN'), ('either', 'DT'), ('N1', 'NNP'), ('N2', 'NNP'), ('Replaced', 'NNP'), ('?', '.')]

 (S
  (NP Grammar/NN)
  :/:
  derived/VBN
  (NP either/DT N1/NNP N2/NNP Replaced/NNP)
  ?/.) 


>> Noun Phrases are: 
 ['Grammar', 'either N1 N2 Replaced']

>> Named Entities are: 
 [('GPE', 'Grammar')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('derived', 'deriv'), ('either', 'either'), ('N1', 'n1'), ('N2', 'n2'), ('Replaced', 'replac'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('derived', 'deriv'), ('either', 'either'), ('N1', 'n1'), ('N2', 'n2'), ('Replaced', 'replac'), ('?', '?')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('derived', 'derived'), ('either', 'either'), ('N1', 'N1'), ('N2', 'N2'), ('Replaced', 'Replaced'), ('?', '?')]



============================ Sentence 19 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Ambiguous grammar Ambiguous grammar is one that produces more than one leftmost or more then one rightmost derivation for the same sentence. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Ambiguous', 'grammar', 'Ambiguous', 'grammar', 'one', 'produces', 'one', 'leftmost', 'one', 'rightmost', 'derivation', 'sentence', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'Ambiguous'), ('Ambiguous', 'grammar'), ('grammar', 'one'), ('one', 'produces'), ('produces', 'one'), ('one', 'leftmost'), ('leftmost', 'one'), ('one', 'rightmost'), ('rightmost', 'derivation'), ('derivation', 'sentence'), ('sentence', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Ambiguous'), ('›', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'Ambiguous'), ('grammar', 'Ambiguous', 'grammar'), ('Ambiguous', 'grammar', 'one'), ('grammar', 'one', 'produces'), ('one', 'produces', 'one'), ('produces', 'one', 'leftmost'), ('one', 'leftmost', 'one'), ('leftmost', 'one', 'rightmost'), ('one', 'rightmost', 'derivation'), ('rightmost', 'derivation', 'sentence'), ('derivation', 'sentence', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Ambiguous', 'NNP'), ('grammar', 'NN'), ('Ambiguous', 'NNP'), ('grammar', 'NN'), ('one', 'CD'), ('produces', 'VBZ'), ('one', 'CD'), ('leftmost', 'NN'), ('one', 'CD'), ('rightmost', 'NN'), ('derivation', 'NN'), ('sentence', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Ambiguous/NNP grammar/NN Ambiguous/NNP grammar/NN)
  one/CD
  produces/VBZ
  one/CD
  (NP leftmost/NN)
  one/CD
  (NP rightmost/NN derivation/NN sentence/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Ambiguous grammar Ambiguous grammar', 'leftmost', 'rightmost derivation sentence']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('one', 'one'), ('produces', 'produc'), ('one', 'one'), ('leftmost', 'leftmost'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('sentence', 'sentenc'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('Ambiguous', 'ambigu'), ('grammar', 'grammar'), ('one', 'one'), ('produces', 'produc'), ('one', 'one'), ('leftmost', 'leftmost'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('sentence', 'sentenc'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('Ambiguous', 'Ambiguous'), ('grammar', 'grammar'), ('one', 'one'), ('produces', 'produce'), ('one', 'one'), ('leftmost', 'leftmost'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('sentence', 'sentence'), ('.', '.')]



============================ Sentence 20 =============================

Grammar: SS+S | S*S | (S) | a		Output string: a+a*a  	    S					   	    S 	S*S						S+S 	S+S*S					a+S 	a+S*S					a+S*S 	a+a*S					a+a*S 	a+a*a					a+a*a Here, Two leftmost derivation for string a+a*a is possible hence, above grammar is ambiguous. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0S+S', '|', 'S', '*', 'S', '|', '(', 'S', ')', '|', 'Output', 'string', ':', 'a+a', '*', 'S', 'S', '\uf0e0S', '*', 'S', '\uf0e0S+S', '\uf0e0S+S', '*', 'S', '\uf0e0a+S', '\uf0e0a+S', '*', 'S', '\uf0e0a+S', '*', 'S', '\uf0e0a+a', '*', 'S', '\uf0e0a+a', '*', 'S', '\uf0e0a+a', '*', '\uf0e0a+a', '*', 'Here', ',', 'Two', 'leftmost', 'derivation', 'string', 'a+a', '*', 'possible', 'hence', ',', 'grammar', 'ambiguous', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0S+S'), ('S\uf0e0S+S', '|'), ('|', 'S'), ('S', '*'), ('*', 'S'), ('S', '|'), ('|', '('), ('(', 'S'), ('S', ')'), (')', '|'), ('|', 'Output'), ('Output', 'string'), ('string', ':'), (':', 'a+a'), ('a+a', '*'), ('*', 'S'), ('S', 'S'), ('S', '\uf0e0S'), ('\uf0e0S', '*'), ('*', 'S'), ('S', '\uf0e0S+S'), ('\uf0e0S+S', '\uf0e0S+S'), ('\uf0e0S+S', '*'), ('*', 'S'), ('S', '\uf0e0a+S'), ('\uf0e0a+S', '\uf0e0a+S'), ('\uf0e0a+S', '*'), ('*', 'S'), ('S', '\uf0e0a+S'), ('\uf0e0a+S', '*'), ('*', 'S'), ('S', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', 'S'), ('S', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', 'S'), ('S', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', '\uf0e0a+a'), ('\uf0e0a+a', '*'), ('*', 'Here'), ('Here', ','), (',', 'Two'), ('Two', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'string'), ('string', 'a+a'), ('a+a', '*'), ('*', 'possible'), ('possible', 'hence'), ('hence', ','), (',', 'grammar'), ('grammar', 'ambiguous'), ('ambiguous', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0S+S'), (':', 'S\uf0e0S+S', '|'), ('S\uf0e0S+S', '|', 'S'), ('|', 'S', '*'), ('S', '*', 'S'), ('*', 'S', '|'), ('S', '|', '('), ('|', '(', 'S'), ('(', 'S', ')'), ('S', ')', '|'), (')', '|', 'Output'), ('|', 'Output', 'string'), ('Output', 'string', ':'), ('string', ':', 'a+a'), (':', 'a+a', '*'), ('a+a', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', '\uf0e0S'), ('S', '\uf0e0S', '*'), ('\uf0e0S', '*', 'S'), ('*', 'S', '\uf0e0S+S'), ('S', '\uf0e0S+S', '\uf0e0S+S'), ('\uf0e0S+S', '\uf0e0S+S', '*'), ('\uf0e0S+S', '*', 'S'), ('*', 'S', '\uf0e0a+S'), ('S', '\uf0e0a+S', '\uf0e0a+S'), ('\uf0e0a+S', '\uf0e0a+S', '*'), ('\uf0e0a+S', '*', 'S'), ('*', 'S', '\uf0e0a+S'), ('S', '\uf0e0a+S', '*'), ('\uf0e0a+S', '*', 'S'), ('*', 'S', '\uf0e0a+a'), ('S', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', 'S'), ('*', 'S', '\uf0e0a+a'), ('S', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', 'S'), ('*', 'S', '\uf0e0a+a'), ('S', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', '\uf0e0a+a'), ('*', '\uf0e0a+a', '*'), ('\uf0e0a+a', '*', 'Here'), ('*', 'Here', ','), ('Here', ',', 'Two'), (',', 'Two', 'leftmost'), ('Two', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'string'), ('derivation', 'string', 'a+a'), ('string', 'a+a', '*'), ('a+a', '*', 'possible'), ('*', 'possible', 'hence'), ('possible', 'hence', ','), ('hence', ',', 'grammar'), (',', 'grammar', 'ambiguous'), ('grammar', 'ambiguous', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NNP'), ('|', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('|', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('|', 'VBP'), ('Output', 'NNP'), ('string', 'NN'), (':', ':'), ('a+a', 'JJ'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('\uf0e0S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0S+S', 'NNP'), ('\uf0e0S+S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+S', 'NNP'), ('\uf0e0a+S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('\uf0e0a+a', 'NNP'), ('*', 'NNP'), ('Here', 'RB'), (',', ','), ('Two', 'CD'), ('leftmost', 'JJS'), ('derivation', 'NN'), ('string', 'VBG'), ('a+a', 'JJ'), ('*', 'NNP'), ('possible', 'JJ'), ('hence', 'NN'), (',', ','), ('grammar', 'NN'), ('ambiguous', 'JJ'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP SS+S/NNP |/NNP S/NNP */NNP S/NNP |/NNP)
  (/(
  (NP S/NNP)
  )/)
  |/VBP
  (NP Output/NNP string/NN)
  :/:
  (NP
    a+a/JJ
    */NNP
    S/NNP
    S/NNP
    S/NNP
    */NNP
    S/NNP
    S+S/NNP
    S+S/NNP
    */NNP
    S/NNP
    a+S/NNP
    a+S/NNP
    */NNP
    S/NNP
    a+S/NNP
    */NNP
    S/NNP
    a+a/NNP
    */NNP
    S/NNP
    a+a/NNP
    */NNP
    S/NNP
    a+a/NNP
    */NNP
    a+a/NNP
    */NNP)
  Here/RB
  ,/,
  Two/CD
  leftmost/JJS
  (NP derivation/NN)
  string/VBG
  (NP a+a/JJ */NNP)
  (NP possible/JJ hence/NN)
  ,/,
  (NP grammar/NN)
  ambiguous/JJ
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0S+S | S * S |', 'S', 'Output string', 'a+a * S S \uf0e0S * S \uf0e0S+S \uf0e0S+S * S \uf0e0a+S \uf0e0a+S * S \uf0e0a+S * S \uf0e0a+a * S \uf0e0a+a * S \uf0e0a+a * \uf0e0a+a *', 'derivation', 'a+a *', 'possible hence', 'grammar']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Output')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 's'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S+S', '\uf0e0s+'), ('\uf0e0S+S', '\uf0e0s+'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('Here', 'here'), (',', ','), ('Two', 'two'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('possible', 'possibl'), ('hence', 'henc'), (',', ','), ('grammar', 'grammar'), ('ambiguous', 'ambigu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S', 's'), ('*', '*'), ('S', 's'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 's'), ('S', 's'), ('\uf0e0S', '\uf0e0s'), ('*', '*'), ('S', 's'), ('\uf0e0S+S', '\uf0e0s+s'), ('\uf0e0S+S', '\uf0e0s+s'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+S', '\uf0e0a+'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 's'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('Here', 'here'), (',', ','), ('Two', 'two'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('possible', 'possibl'), ('hence', 'henc'), (',', ','), ('grammar', 'grammar'), ('ambiguous', 'ambigu'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0S+S', 'S\uf0e0S+S'), ('|', '|'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('|', '|'), ('(', '('), ('S', 'S'), (')', ')'), ('|', '|'), ('Output', 'Output'), ('string', 'string'), (':', ':'), ('a+a', 'a+a'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('\uf0e0S', '\uf0e0S'), ('*', '*'), ('S', 'S'), ('\uf0e0S+S', '\uf0e0S+S'), ('\uf0e0S+S', '\uf0e0S+S'), ('*', '*'), ('S', 'S'), ('\uf0e0a+S', '\uf0e0a+S'), ('\uf0e0a+S', '\uf0e0a+S'), ('*', '*'), ('S', 'S'), ('\uf0e0a+S', '\uf0e0a+S'), ('*', '*'), ('S', 'S'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 'S'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('S', 'S'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('\uf0e0a+a', '\uf0e0a+a'), ('*', '*'), ('Here', 'Here'), (',', ','), ('Two', 'Two'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('string', 'string'), ('a+a', 'a+a'), ('*', '*'), ('possible', 'possible'), ('hence', 'hence'), (',', ','), ('grammar', 'grammar'), ('ambiguous', 'ambiguous'), ('.', '.')]



============================ Sentence 21 =============================

a S * S a a S S + S a S + S a a S * S S    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise: Ambiguous Grammar Check Ambiguity in following grammars: S aS | Sa | 𝜖  (output string: aaaa) S aSbS | bSaS | 𝜖  (output string: abab) S SS+ | SS* | a (output string: aa+a*) <exp> → <exp> + <term> | <term> <term> → <term> * <letter> | <letter>  <letter> → a|b|c|…|z  (output string: a+b*c)  Prove that the CFG with productions: S  a | Sa | bSS | SSb | SbS  is ambiguous (Hint: consider output string yourself)     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Left recursion & Left factoring        Left recursion A grammar is said to be left recursive if it has a non terminal  such that there is a derivation for some string  Algorithm to eliminate left recursion Arrange the non terminals in some order   For  do begin 	for  do begin  		replace each production of the form    			by the productions , 			where are all the current 				productions;  	 end  	 eliminate the immediate left recursion among the  - productions end     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›    Left recursion elimination         𝜖    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Examples: Left recursion elimination EE+T | T 				ETE’ 				E’+TE’ | ε TT*F | F 				TFT’ 				T’*FT’ | ε  XX%Y | Z 				XZX’ 				X’%YX’ | ε       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise: Left recursion AAbd | Aa | a        BBe | b AAB | AC | a | b SA | B AABC | Acd | a | aa BBee | b ExpExp+term | Exp-term | term      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Left factoring Left factoring is a grammar transformation that is useful for producing a grammar suitable for predictive parsing. 


>> Tokens are: 
 ['S', '*', 'S', 'S', 'S', '+', 'S', 'S', '+', 'S', 'S', '*', 'S', 'S', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Exercise', ':', 'Ambiguous', 'Grammar', 'Check', 'Ambiguity', 'following', 'grammars', ':', 'S\uf0e0', 'aS', '|', 'Sa', '|', '𝜖', '(', 'output', 'string', ':', 'aaaa', ')', 'S\uf0e0', 'aSbS', '|', 'bSaS', '|', '𝜖', '(', 'output', 'string', ':', 'abab', ')', 'S\uf0e0', 'SS+', '|', 'SS', '*', '|', '(', 'output', 'string', ':', 'aa+a', '*', ')', '<', 'exp', '>', '→', '<', 'exp', '>', '+', '<', 'term', '>', '|', '<', 'term', '>', '<', 'term', '>', '→', '<', 'term', '>', '*', '<', 'letter', '>', '|', '<', 'letter', '>', '<', 'letter', '>', '→', 'a|b|c|…|z', '(', 'output', 'string', ':', 'a+b', '*', 'c', ')', 'Prove', 'CFG', 'productions', ':', 'S', '\uf0e0', '|', 'Sa', '|', 'bSS', '|', 'SSb', '|', 'SbS', 'ambiguous', '(', 'Hint', ':', 'consider', 'output', 'string', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Left', 'recursion', '&', 'Left', 'factoring', 'Left', 'recursion', 'A', 'grammar', 'said', 'left', 'recursive', 'non', 'terminal', 'derivation', 'string', 'Algorithm', 'eliminate', 'left', 'recursion', 'Arrange', 'non', 'terminals', 'order', 'For', 'begin', 'begin', 'replace', 'production', 'form', 'productions', ',', 'current', 'productions', ';', 'end', 'eliminate', 'immediate', 'left', 'recursion', 'among', '-', 'productions', 'end', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Left', 'recursion', 'elimination', '\uf0e0', '𝜖', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Examples', ':', 'Left', 'recursion', 'elimination', 'E\uf0e0E+T', '|', 'T', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ε', 'T\uf0e0T', '*', 'F', '|', 'F', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ε', 'X\uf0e0X', '%', 'Y', '|', 'Z', 'X\uf0e0ZX', '’', 'X', '’', '\uf0e0', '%', 'YX', '’', '|', 'ε', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Exercise', ':', 'Left', 'recursion', 'A\uf0e0Abd', '|', 'Aa', '|', 'B\uf0e0Be', '|', 'b', 'A\uf0e0AB', '|', 'AC', '|', '|', 'b', 'S\uf0e0A', '|', 'B', 'A\uf0e0ABC', '|', 'Acd', '|', '|', 'aa', 'B\uf0e0Bee', '|', 'b', 'Exp\uf0e0Exp+term', '|', 'Exp-term', '|', 'term', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Left', 'factoring', 'Left', 'factoring', 'grammar', 'transformation', 'useful', 'producing', 'grammar', 'suitable', 'predictive', 'parsing', '.']

>> Bigrams are: 
 [('S', '*'), ('*', 'S'), ('S', 'S'), ('S', 'S'), ('S', '+'), ('+', 'S'), ('S', 'S'), ('S', '+'), ('+', 'S'), ('S', 'S'), ('S', '*'), ('*', 'S'), ('S', 'S'), ('S', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', ':'), (':', 'Ambiguous'), ('Ambiguous', 'Grammar'), ('Grammar', 'Check'), ('Check', 'Ambiguity'), ('Ambiguity', 'following'), ('following', 'grammars'), ('grammars', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'aS'), ('aS', '|'), ('|', 'Sa'), ('Sa', '|'), ('|', '𝜖'), ('𝜖', '('), ('(', 'output'), ('output', 'string'), ('string', ':'), (':', 'aaaa'), ('aaaa', ')'), (')', 'S\uf0e0'), ('S\uf0e0', 'aSbS'), ('aSbS', '|'), ('|', 'bSaS'), ('bSaS', '|'), ('|', '𝜖'), ('𝜖', '('), ('(', 'output'), ('output', 'string'), ('string', ':'), (':', 'abab'), ('abab', ')'), (')', 'S\uf0e0'), ('S\uf0e0', 'SS+'), ('SS+', '|'), ('|', 'SS'), ('SS', '*'), ('*', '|'), ('|', '('), ('(', 'output'), ('output', 'string'), ('string', ':'), (':', 'aa+a'), ('aa+a', '*'), ('*', ')'), (')', '<'), ('<', 'exp'), ('exp', '>'), ('>', '→'), ('→', '<'), ('<', 'exp'), ('exp', '>'), ('>', '+'), ('+', '<'), ('<', 'term'), ('term', '>'), ('>', '|'), ('|', '<'), ('<', 'term'), ('term', '>'), ('>', '<'), ('<', 'term'), ('term', '>'), ('>', '→'), ('→', '<'), ('<', 'term'), ('term', '>'), ('>', '*'), ('*', '<'), ('<', 'letter'), ('letter', '>'), ('>', '|'), ('|', '<'), ('<', 'letter'), ('letter', '>'), ('>', '<'), ('<', 'letter'), ('letter', '>'), ('>', '→'), ('→', 'a|b|c|…|z'), ('a|b|c|…|z', '('), ('(', 'output'), ('output', 'string'), ('string', ':'), (':', 'a+b'), ('a+b', '*'), ('*', 'c'), ('c', ')'), (')', 'Prove'), ('Prove', 'CFG'), ('CFG', 'productions'), ('productions', ':'), (':', 'S'), ('S', '\uf0e0'), ('\uf0e0', '|'), ('|', 'Sa'), ('Sa', '|'), ('|', 'bSS'), ('bSS', '|'), ('|', 'SSb'), ('SSb', '|'), ('|', 'SbS'), ('SbS', 'ambiguous'), ('ambiguous', '('), ('(', 'Hint'), ('Hint', ':'), (':', 'consider'), ('consider', 'output'), ('output', 'string'), ('string', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Left'), ('Left', 'recursion'), ('recursion', '&'), ('&', 'Left'), ('Left', 'factoring'), ('factoring', 'Left'), ('Left', 'recursion'), ('recursion', 'A'), ('A', 'grammar'), ('grammar', 'said'), ('said', 'left'), ('left', 'recursive'), ('recursive', 'non'), ('non', 'terminal'), ('terminal', 'derivation'), ('derivation', 'string'), ('string', 'Algorithm'), ('Algorithm', 'eliminate'), ('eliminate', 'left'), ('left', 'recursion'), ('recursion', 'Arrange'), ('Arrange', 'non'), ('non', 'terminals'), ('terminals', 'order'), ('order', 'For'), ('For', 'begin'), ('begin', 'begin'), ('begin', 'replace'), ('replace', 'production'), ('production', 'form'), ('form', 'productions'), ('productions', ','), (',', 'current'), ('current', 'productions'), ('productions', ';'), (';', 'end'), ('end', 'eliminate'), ('eliminate', 'immediate'), ('immediate', 'left'), ('left', 'recursion'), ('recursion', 'among'), ('among', '-'), ('-', 'productions'), ('productions', 'end'), ('end', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Left'), ('Left', 'recursion'), ('recursion', 'elimination'), ('elimination', '\uf0e0'), ('\uf0e0', '𝜖'), ('𝜖', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Examples'), ('Examples', ':'), (':', 'Left'), ('Left', 'recursion'), ('recursion', 'elimination'), ('elimination', 'E\uf0e0E+T'), ('E\uf0e0E+T', '|'), ('|', 'T'), ('T', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ε'), ('ε', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ε'), ('ε', 'X\uf0e0X'), ('X\uf0e0X', '%'), ('%', 'Y'), ('Y', '|'), ('|', 'Z'), ('Z', 'X\uf0e0ZX'), ('X\uf0e0ZX', '’'), ('’', 'X'), ('X', '’'), ('’', '\uf0e0'), ('\uf0e0', '%'), ('%', 'YX'), ('YX', '’'), ('’', '|'), ('|', 'ε'), ('ε', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', ':'), (':', 'Left'), ('Left', 'recursion'), ('recursion', 'A\uf0e0Abd'), ('A\uf0e0Abd', '|'), ('|', 'Aa'), ('Aa', '|'), ('|', 'B\uf0e0Be'), ('B\uf0e0Be', '|'), ('|', 'b'), ('b', 'A\uf0e0AB'), ('A\uf0e0AB', '|'), ('|', 'AC'), ('AC', '|'), ('|', '|'), ('|', 'b'), ('b', 'S\uf0e0A'), ('S\uf0e0A', '|'), ('|', 'B'), ('B', 'A\uf0e0ABC'), ('A\uf0e0ABC', '|'), ('|', 'Acd'), ('Acd', '|'), ('|', '|'), ('|', 'aa'), ('aa', 'B\uf0e0Bee'), ('B\uf0e0Bee', '|'), ('|', 'b'), ('b', 'Exp\uf0e0Exp+term'), ('Exp\uf0e0Exp+term', '|'), ('|', 'Exp-term'), ('Exp-term', '|'), ('|', 'term'), ('term', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Left'), ('Left', 'factoring'), ('factoring', 'Left'), ('Left', 'factoring'), ('factoring', 'grammar'), ('grammar', 'transformation'), ('transformation', 'useful'), ('useful', 'producing'), ('producing', 'grammar'), ('grammar', 'suitable'), ('suitable', 'predictive'), ('predictive', 'parsing'), ('parsing', '.')]

>> Trigrams are: 
 [('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', 'S'), ('S', 'S', '+'), ('S', '+', 'S'), ('+', 'S', 'S'), ('S', 'S', '+'), ('S', '+', 'S'), ('+', 'S', 'S'), ('S', 'S', '*'), ('S', '*', 'S'), ('*', 'S', 'S'), ('S', 'S', 'Prof.'), ('S', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', ':'), ('Exercise', ':', 'Ambiguous'), (':', 'Ambiguous', 'Grammar'), ('Ambiguous', 'Grammar', 'Check'), ('Grammar', 'Check', 'Ambiguity'), ('Check', 'Ambiguity', 'following'), ('Ambiguity', 'following', 'grammars'), ('following', 'grammars', ':'), ('grammars', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'aS'), ('S\uf0e0', 'aS', '|'), ('aS', '|', 'Sa'), ('|', 'Sa', '|'), ('Sa', '|', '𝜖'), ('|', '𝜖', '('), ('𝜖', '(', 'output'), ('(', 'output', 'string'), ('output', 'string', ':'), ('string', ':', 'aaaa'), (':', 'aaaa', ')'), ('aaaa', ')', 'S\uf0e0'), (')', 'S\uf0e0', 'aSbS'), ('S\uf0e0', 'aSbS', '|'), ('aSbS', '|', 'bSaS'), ('|', 'bSaS', '|'), ('bSaS', '|', '𝜖'), ('|', '𝜖', '('), ('𝜖', '(', 'output'), ('(', 'output', 'string'), ('output', 'string', ':'), ('string', ':', 'abab'), (':', 'abab', ')'), ('abab', ')', 'S\uf0e0'), (')', 'S\uf0e0', 'SS+'), ('S\uf0e0', 'SS+', '|'), ('SS+', '|', 'SS'), ('|', 'SS', '*'), ('SS', '*', '|'), ('*', '|', '('), ('|', '(', 'output'), ('(', 'output', 'string'), ('output', 'string', ':'), ('string', ':', 'aa+a'), (':', 'aa+a', '*'), ('aa+a', '*', ')'), ('*', ')', '<'), (')', '<', 'exp'), ('<', 'exp', '>'), ('exp', '>', '→'), ('>', '→', '<'), ('→', '<', 'exp'), ('<', 'exp', '>'), ('exp', '>', '+'), ('>', '+', '<'), ('+', '<', 'term'), ('<', 'term', '>'), ('term', '>', '|'), ('>', '|', '<'), ('|', '<', 'term'), ('<', 'term', '>'), ('term', '>', '<'), ('>', '<', 'term'), ('<', 'term', '>'), ('term', '>', '→'), ('>', '→', '<'), ('→', '<', 'term'), ('<', 'term', '>'), ('term', '>', '*'), ('>', '*', '<'), ('*', '<', 'letter'), ('<', 'letter', '>'), ('letter', '>', '|'), ('>', '|', '<'), ('|', '<', 'letter'), ('<', 'letter', '>'), ('letter', '>', '<'), ('>', '<', 'letter'), ('<', 'letter', '>'), ('letter', '>', '→'), ('>', '→', 'a|b|c|…|z'), ('→', 'a|b|c|…|z', '('), ('a|b|c|…|z', '(', 'output'), ('(', 'output', 'string'), ('output', 'string', ':'), ('string', ':', 'a+b'), (':', 'a+b', '*'), ('a+b', '*', 'c'), ('*', 'c', ')'), ('c', ')', 'Prove'), (')', 'Prove', 'CFG'), ('Prove', 'CFG', 'productions'), ('CFG', 'productions', ':'), ('productions', ':', 'S'), (':', 'S', '\uf0e0'), ('S', '\uf0e0', '|'), ('\uf0e0', '|', 'Sa'), ('|', 'Sa', '|'), ('Sa', '|', 'bSS'), ('|', 'bSS', '|'), ('bSS', '|', 'SSb'), ('|', 'SSb', '|'), ('SSb', '|', 'SbS'), ('|', 'SbS', 'ambiguous'), ('SbS', 'ambiguous', '('), ('ambiguous', '(', 'Hint'), ('(', 'Hint', ':'), ('Hint', ':', 'consider'), (':', 'consider', 'output'), ('consider', 'output', 'string'), ('output', 'string', ')'), ('string', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Left'), ('›', 'Left', 'recursion'), ('Left', 'recursion', '&'), ('recursion', '&', 'Left'), ('&', 'Left', 'factoring'), ('Left', 'factoring', 'Left'), ('factoring', 'Left', 'recursion'), ('Left', 'recursion', 'A'), ('recursion', 'A', 'grammar'), ('A', 'grammar', 'said'), ('grammar', 'said', 'left'), ('said', 'left', 'recursive'), ('left', 'recursive', 'non'), ('recursive', 'non', 'terminal'), ('non', 'terminal', 'derivation'), ('terminal', 'derivation', 'string'), ('derivation', 'string', 'Algorithm'), ('string', 'Algorithm', 'eliminate'), ('Algorithm', 'eliminate', 'left'), ('eliminate', 'left', 'recursion'), ('left', 'recursion', 'Arrange'), ('recursion', 'Arrange', 'non'), ('Arrange', 'non', 'terminals'), ('non', 'terminals', 'order'), ('terminals', 'order', 'For'), ('order', 'For', 'begin'), ('For', 'begin', 'begin'), ('begin', 'begin', 'replace'), ('begin', 'replace', 'production'), ('replace', 'production', 'form'), ('production', 'form', 'productions'), ('form', 'productions', ','), ('productions', ',', 'current'), (',', 'current', 'productions'), ('current', 'productions', ';'), ('productions', ';', 'end'), (';', 'end', 'eliminate'), ('end', 'eliminate', 'immediate'), ('eliminate', 'immediate', 'left'), ('immediate', 'left', 'recursion'), ('left', 'recursion', 'among'), ('recursion', 'among', '-'), ('among', '-', 'productions'), ('-', 'productions', 'end'), ('productions', 'end', 'Prof.'), ('end', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Left'), ('›', 'Left', 'recursion'), ('Left', 'recursion', 'elimination'), ('recursion', 'elimination', '\uf0e0'), ('elimination', '\uf0e0', '𝜖'), ('\uf0e0', '𝜖', 'Prof.'), ('𝜖', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Examples'), ('›', 'Examples', ':'), ('Examples', ':', 'Left'), (':', 'Left', 'recursion'), ('Left', 'recursion', 'elimination'), ('recursion', 'elimination', 'E\uf0e0E+T'), ('elimination', 'E\uf0e0E+T', '|'), ('E\uf0e0E+T', '|', 'T'), ('|', 'T', 'E\uf0e0TE'), ('T', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ε'), ('|', 'ε', 'T\uf0e0T'), ('ε', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'T\uf0e0FT'), ('F', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ε'), ('|', 'ε', 'X\uf0e0X'), ('ε', 'X\uf0e0X', '%'), ('X\uf0e0X', '%', 'Y'), ('%', 'Y', '|'), ('Y', '|', 'Z'), ('|', 'Z', 'X\uf0e0ZX'), ('Z', 'X\uf0e0ZX', '’'), ('X\uf0e0ZX', '’', 'X'), ('’', 'X', '’'), ('X', '’', '\uf0e0'), ('’', '\uf0e0', '%'), ('\uf0e0', '%', 'YX'), ('%', 'YX', '’'), ('YX', '’', '|'), ('’', '|', 'ε'), ('|', 'ε', 'Prof.'), ('ε', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', ':'), ('Exercise', ':', 'Left'), (':', 'Left', 'recursion'), ('Left', 'recursion', 'A\uf0e0Abd'), ('recursion', 'A\uf0e0Abd', '|'), ('A\uf0e0Abd', '|', 'Aa'), ('|', 'Aa', '|'), ('Aa', '|', 'B\uf0e0Be'), ('|', 'B\uf0e0Be', '|'), ('B\uf0e0Be', '|', 'b'), ('|', 'b', 'A\uf0e0AB'), ('b', 'A\uf0e0AB', '|'), ('A\uf0e0AB', '|', 'AC'), ('|', 'AC', '|'), ('AC', '|', '|'), ('|', '|', 'b'), ('|', 'b', 'S\uf0e0A'), ('b', 'S\uf0e0A', '|'), ('S\uf0e0A', '|', 'B'), ('|', 'B', 'A\uf0e0ABC'), ('B', 'A\uf0e0ABC', '|'), ('A\uf0e0ABC', '|', 'Acd'), ('|', 'Acd', '|'), ('Acd', '|', '|'), ('|', '|', 'aa'), ('|', 'aa', 'B\uf0e0Bee'), ('aa', 'B\uf0e0Bee', '|'), ('B\uf0e0Bee', '|', 'b'), ('|', 'b', 'Exp\uf0e0Exp+term'), ('b', 'Exp\uf0e0Exp+term', '|'), ('Exp\uf0e0Exp+term', '|', 'Exp-term'), ('|', 'Exp-term', '|'), ('Exp-term', '|', 'term'), ('|', 'term', 'Prof.'), ('term', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Left'), ('›', 'Left', 'factoring'), ('Left', 'factoring', 'Left'), ('factoring', 'Left', 'factoring'), ('Left', 'factoring', 'grammar'), ('factoring', 'grammar', 'transformation'), ('grammar', 'transformation', 'useful'), ('transformation', 'useful', 'producing'), ('useful', 'producing', 'grammar'), ('producing', 'grammar', 'suitable'), ('grammar', 'suitable', 'predictive'), ('suitable', 'predictive', 'parsing'), ('predictive', 'parsing', '.')]

>> POS Tags are: 
 [('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('+', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('+', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('*', 'NNP'), ('S', 'NNP'), ('S', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Exercise', 'NN'), (':', ':'), ('Ambiguous', 'JJ'), ('Grammar', 'NNP'), ('Check', 'NNP'), ('Ambiguity', 'NNP'), ('following', 'VBG'), ('grammars', 'NNS'), (':', ':'), ('S\uf0e0', 'NNP'), ('aS', 'IN'), ('|', 'NNP'), ('Sa', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('(', '('), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('aaaa', 'NN'), (')', ')'), ('S\uf0e0', 'NNP'), ('aSbS', 'NN'), ('|', 'NNP'), ('bSaS', 'NN'), ('|', 'NNP'), ('𝜖', 'NNP'), ('(', '('), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('abab', 'NN'), (')', ')'), ('S\uf0e0', 'NNP'), ('SS+', 'NNP'), ('|', 'NNP'), ('SS', 'NNP'), ('*', 'NNP'), ('|', 'NNP'), ('(', '('), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('aa+a', 'JJ'), ('*', 'NN'), (')', ')'), ('<', 'VBZ'), ('exp', 'JJ'), ('>', 'NNP'), ('→', 'NNP'), ('<', 'NNP'), ('exp', 'VBZ'), ('>', 'NNP'), ('+', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('→', 'NNP'), ('<', 'NNP'), ('term', 'NN'), ('>', 'NNP'), ('*', 'NNP'), ('<', 'NNP'), ('letter', 'NN'), ('>', 'NNP'), ('|', 'NNP'), ('<', 'NNP'), ('letter', 'NN'), ('>', 'NNP'), ('<', 'NNP'), ('letter', 'NN'), ('>', 'NNP'), ('→', 'NNP'), ('a|b|c|…|z', 'NN'), ('(', '('), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('a+b', 'JJ'), ('*', 'NNP'), ('c', 'NN'), (')', ')'), ('Prove', 'NNP'), ('CFG', 'NNP'), ('productions', 'NNS'), (':', ':'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('|', 'NNP'), ('Sa', 'NNP'), ('|', 'NNP'), ('bSS', 'NN'), ('|', 'NNP'), ('SSb', 'NNP'), ('|', 'NNP'), ('SbS', 'NNP'), ('ambiguous', 'JJ'), ('(', '('), ('Hint', 'NN'), (':', ':'), ('consider', 'NN'), ('output', 'NN'), ('string', 'VBG'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Left', 'NNP'), ('recursion', 'NN'), ('&', 'CC'), ('Left', 'NNP'), ('factoring', 'NN'), ('Left', 'NNP'), ('recursion', 'NN'), ('A', 'NNP'), ('grammar', 'NN'), ('said', 'VBD'), ('left', 'JJ'), ('recursive', 'JJ'), ('non', 'JJ'), ('terminal', 'JJ'), ('derivation', 'NN'), ('string', 'VBG'), ('Algorithm', 'NNP'), ('eliminate', 'NN'), ('left', 'VBD'), ('recursion', 'NN'), ('Arrange', 'NNP'), ('non', 'NN'), ('terminals', 'NNS'), ('order', 'NN'), ('For', 'IN'), ('begin', 'NN'), ('begin', 'NN'), ('replace', 'VB'), ('production', 'NN'), ('form', 'NN'), ('productions', 'NNS'), (',', ','), ('current', 'JJ'), ('productions', 'NNS'), (';', ':'), ('end', 'VB'), ('eliminate', 'NN'), ('immediate', 'JJ'), ('left', 'VBN'), ('recursion', 'NN'), ('among', 'IN'), ('-', ':'), ('productions', 'NNS'), ('end', 'VBP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Left', 'NNP'), ('recursion', 'NN'), ('elimination', 'NN'), ('\uf0e0', 'NNP'), ('𝜖', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Examples', 'NNS'), (':', ':'), ('Left', 'NNP'), ('recursion', 'NN'), ('elimination', 'NN'), ('E\uf0e0E+T', 'NNP'), ('|', 'NNP'), ('T', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ε', 'NNP'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ε', 'NNP'), ('X\uf0e0X', 'NNP'), ('%', 'NN'), ('Y', 'NNP'), ('|', 'NNP'), ('Z', 'NNP'), ('X\uf0e0ZX', 'NNP'), ('’', 'NNP'), ('X', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('%', 'NN'), ('YX', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ε', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Exercise', 'NN'), (':', ':'), ('Left', 'NNP'), ('recursion', 'NN'), ('A\uf0e0Abd', 'NNP'), ('|', 'NNP'), ('Aa', 'NNP'), ('|', 'NNP'), ('B\uf0e0Be', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('A\uf0e0AB', 'NNP'), ('|', 'NNP'), ('AC', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('S\uf0e0A', 'NNP'), ('|', 'NNP'), ('B', 'NNP'), ('A\uf0e0ABC', 'NNP'), ('|', 'NNP'), ('Acd', 'NNP'), ('|', 'NNP'), ('|', 'NNP'), ('aa', 'VBZ'), ('B\uf0e0Bee', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('Exp\uf0e0Exp+term', 'NNP'), ('|', 'NNP'), ('Exp-term', 'NNP'), ('|', 'NNP'), ('term', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Left', 'VBD'), ('factoring', 'JJ'), ('Left', 'NNP'), ('factoring', 'NN'), ('grammar', 'NN'), ('transformation', 'NN'), ('useful', 'JJ'), ('producing', 'VBG'), ('grammar', 'NN'), ('suitable', 'JJ'), ('predictive', 'JJ'), ('parsing', 'NN'), ('.', '.')]

 (S
  (NP
    S/NNP
    */NNP
    S/NNP
    S/NNP
    S/NNP
    +/NNP
    S/NNP
    S/NNP
    +/NNP
    S/NNP
    S/NNP
    */NNP
    S/NNP
    S/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Exercise/NN)
  :/:
  (NP Ambiguous/JJ Grammar/NNP Check/NNP Ambiguity/NNP)
  following/VBG
  (NP grammars/NNS)
  :/:
  (NP S/NNP)
  aS/IN
  (NP |/NNP Sa/NNP |/NNP 𝜖/NNP)
  (/(
  (NP output/NN string/NN)
  :/:
  (NP aaaa/NN)
  )/)
  (NP S/NNP aSbS/NN |/NNP bSaS/NN |/NNP 𝜖/NNP)
  (/(
  (NP output/NN string/NN)
  :/:
  (NP abab/NN)
  )/)
  (NP S/NNP SS+/NNP |/NNP SS/NNP */NNP |/NNP)
  (/(
  (NP output/NN string/NN)
  :/:
  (NP aa+a/JJ */NN)
  )/)
  </VBZ
  (NP exp/JJ >/NNP →/NNP </NNP)
  exp/VBZ
  (NP
    >/NNP
    +/NNP
    </NNP
    term/NN
    >/NNP
    |/NNP
    </NNP
    term/NN
    >/NNP
    </NNP
    term/NN
    >/NNP
    →/NNP
    </NNP
    term/NN
    >/NNP
    */NNP
    </NNP
    letter/NN
    >/NNP
    |/NNP
    </NNP
    letter/NN
    >/NNP
    </NNP
    letter/NN
    >/NNP
    →/NNP
    a|b|c|…|z/NN)
  (/(
  (NP output/NN string/NN)
  :/:
  (NP a+b/JJ */NNP c/NN)
  )/)
  (NP Prove/NNP CFG/NNP productions/NNS)
  :/:
  (NP
    S/NNP
    /NNP
    |/NNP
    Sa/NNP
    |/NNP
    bSS/NN
    |/NNP
    SSb/NNP
    |/NNP
    SbS/NNP)
  ambiguous/JJ
  (/(
  (NP Hint/NN)
  :/:
  (NP consider/NN output/NN)
  string/VBG
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Left/NNP recursion/NN)
  &/CC
  (NP Left/NNP factoring/NN Left/NNP recursion/NN A/NNP grammar/NN)
  said/VBD
  (NP left/JJ recursive/JJ non/JJ terminal/JJ derivation/NN)
  string/VBG
  (NP Algorithm/NNP eliminate/NN)
  left/VBD
  (NP recursion/NN Arrange/NNP non/NN terminals/NNS order/NN)
  For/IN
  (NP begin/NN begin/NN)
  replace/VB
  (NP production/NN form/NN productions/NNS)
  ,/,
  (NP current/JJ productions/NNS)
  ;/:
  end/VB
  (NP eliminate/NN)
  immediate/JJ
  left/VBN
  (NP recursion/NN)
  among/IN
  -/:
  (NP productions/NNS)
  end/VBP
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP
    ›/NN
    Left/NNP
    recursion/NN
    elimination/NN
    /NNP
    𝜖/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Examples/NNS)
  :/:
  (NP
    Left/NNP
    recursion/NN
    elimination/NN
    EE+T/NNP
    |/NNP
    T/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ε/NNP
    TT/NNP
    */NNP
    F/NNP
    |/NNP
    F/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ε/NNP
    XX/NNP
    %/NN
    Y/NNP
    |/NNP
    Z/NNP
    XZX/NNP
    ’/NNP
    X/NNP
    ’/NNP
    /NNP
    %/NN
    YX/NNP
    ’/NNP
    |/NNP
    ε/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Exercise/NN)
  :/:
  (NP
    Left/NNP
    recursion/NN
    AAbd/NNP
    |/NNP
    Aa/NNP
    |/NNP
    BBe/NNP
    |/NNP
    b/NN
    AAB/NNP
    |/NNP
    AC/NNP
    |/NNP
    |/NNP
    b/NN
    SA/NNP
    |/NNP
    B/NNP
    AABC/NNP
    |/NNP
    Acd/NNP
    |/NNP
    |/NNP)
  aa/VBZ
  (NP
    BBee/NNP
    |/NNP
    b/NN
    ExpExp+term/NNP
    |/NNP
    Exp-term/NNP
    |/NNP
    term/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN)
  Left/VBD
  (NP
    factoring/JJ
    Left/NNP
    factoring/NN
    grammar/NN
    transformation/NN)
  useful/JJ
  producing/VBG
  (NP grammar/NN)
  (NP suitable/JJ predictive/JJ parsing/NN)
  ./.) 


>> Noun Phrases are: 
 ['S * S S S + S S + S S * S S Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Exercise', 'Ambiguous Grammar Check Ambiguity', 'grammars', 'S\uf0e0', '| Sa | 𝜖', 'output string', 'aaaa', 'S\uf0e0 aSbS | bSaS | 𝜖', 'output string', 'abab', 'S\uf0e0 SS+ | SS * |', 'output string', 'aa+a *', 'exp > → <', '> + < term > | < term > < term > → < term > * < letter > | < letter > < letter > → a|b|c|…|z', 'output string', 'a+b * c', 'Prove CFG productions', 'S \uf0e0 | Sa | bSS | SSb | SbS', 'Hint', 'consider output', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Left recursion', 'Left factoring Left recursion A grammar', 'left recursive non terminal derivation', 'Algorithm eliminate', 'recursion Arrange non terminals order', 'begin begin', 'production form productions', 'current productions', 'eliminate', 'recursion', 'productions', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Left recursion elimination \uf0e0 𝜖 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Examples', 'Left recursion elimination E\uf0e0E+T | T E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ε T\uf0e0T * F | F T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ε X\uf0e0X % Y | Z X\uf0e0ZX ’ X ’ \uf0e0 % YX ’ | ε Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Exercise', 'Left recursion A\uf0e0Abd | Aa | B\uf0e0Be | b A\uf0e0AB | AC | | b S\uf0e0A | B A\uf0e0ABC | Acd | |', 'B\uf0e0Bee | b Exp\uf0e0Exp+term | Exp-term | term Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '›', 'factoring Left factoring grammar transformation', 'grammar', 'suitable predictive parsing']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Grammar Check'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Left'), ('GPE', 'Left'), ('PERSON', 'Left'), ('PERSON', 'Algorithm'), ('PERSON', 'Arrange'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Left'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Ambiguous', 'ambigu'), ('Grammar', 'grammar'), ('Check', 'check'), ('Ambiguity', 'ambigu'), ('following', 'follow'), ('grammars', 'grammar'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('aSbS', 'asb'), ('|', '|'), ('bSaS', 'bsa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('SS+', 'ss+'), ('|', '|'), ('SS', 'ss'), ('*', '*'), ('|', '|'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aa+a', 'aa+a'), ('*', '*'), (')', ')'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('→', '→'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('→', '→'), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('|', '|'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('→', '→'), ('a|b|c|…|z', 'a|b|c|…|z'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('a+b', 'a+b'), ('*', '*'), ('c', 'c'), (')', ')'), ('Prove', 'prove'), ('CFG', 'cfg'), ('productions', 'product'), (':', ':'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('bSS', 'bss'), ('|', '|'), ('SSb', 'ssb'), ('|', '|'), ('SbS', 'sb'), ('ambiguous', 'ambigu'), ('(', '('), ('Hint', 'hint'), (':', ':'), ('consider', 'consid'), ('output', 'output'), ('string', 'string'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'left'), ('recursion', 'recurs'), ('&', '&'), ('Left', 'left'), ('factoring', 'factor'), ('Left', 'left'), ('recursion', 'recurs'), ('A', 'a'), ('grammar', 'grammar'), ('said', 'said'), ('left', 'left'), ('recursive', 'recurs'), ('non', 'non'), ('terminal', 'termin'), ('derivation', 'deriv'), ('string', 'string'), ('Algorithm', 'algorithm'), ('eliminate', 'elimin'), ('left', 'left'), ('recursion', 'recurs'), ('Arrange', 'arrang'), ('non', 'non'), ('terminals', 'termin'), ('order', 'order'), ('For', 'for'), ('begin', 'begin'), ('begin', 'begin'), ('replace', 'replac'), ('production', 'product'), ('form', 'form'), ('productions', 'product'), (',', ','), ('current', 'current'), ('productions', 'product'), (';', ';'), ('end', 'end'), ('eliminate', 'elimin'), ('immediate', 'immedi'), ('left', 'left'), ('recursion', 'recurs'), ('among', 'among'), ('-', '-'), ('productions', 'product'), ('end', 'end'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'left'), ('recursion', 'recurs'), ('elimination', 'elimin'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Examples', 'exampl'), (':', ':'), ('Left', 'left'), ('recursion', 'recurs'), ('elimination', 'elimin'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('X\uf0e0X', 'x\uf0e0x'), ('%', '%'), ('Y', 'y'), ('|', '|'), ('Z', 'z'), ('X\uf0e0ZX', 'x\uf0e0zx'), ('’', '’'), ('X', 'x'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('%', '%'), ('YX', 'yx'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Left', 'left'), ('recursion', 'recurs'), ('A\uf0e0Abd', 'a\uf0e0abd'), ('|', '|'), ('Aa', 'aa'), ('|', '|'), ('B\uf0e0Be', 'b\uf0e0be'), ('|', '|'), ('b', 'b'), ('A\uf0e0AB', 'a\uf0e0ab'), ('|', '|'), ('AC', 'ac'), ('|', '|'), ('|', '|'), ('b', 'b'), ('S\uf0e0A', 's\uf0e0a'), ('|', '|'), ('B', 'b'), ('A\uf0e0ABC', 'a\uf0e0abc'), ('|', '|'), ('Acd', 'acd'), ('|', '|'), ('|', '|'), ('aa', 'aa'), ('B\uf0e0Bee', 'b\uf0e0bee'), ('|', '|'), ('b', 'b'), ('Exp\uf0e0Exp+term', 'exp\uf0e0exp+term'), ('|', '|'), ('Exp-term', 'exp-term'), ('|', '|'), ('term', 'term'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'left'), ('factoring', 'factor'), ('Left', 'left'), ('factoring', 'factor'), ('grammar', 'grammar'), ('transformation', 'transform'), ('useful', 'use'), ('producing', 'produc'), ('grammar', 'grammar'), ('suitable', 'suitabl'), ('predictive', 'predict'), ('parsing', 'pars'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('+', '+'), ('S', 's'), ('S', 's'), ('*', '*'), ('S', 's'), ('S', 's'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Ambiguous', 'ambigu'), ('Grammar', 'grammar'), ('Check', 'check'), ('Ambiguity', 'ambigu'), ('following', 'follow'), ('grammars', 'grammar'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('aS', 'as'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('aSbS', 'asb'), ('|', '|'), ('bSaS', 'bsas'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('SS+', 'ss+'), ('|', '|'), ('SS', 'ss'), ('*', '*'), ('|', '|'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aa+a', 'aa+a'), ('*', '*'), (')', ')'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('→', '→'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('→', '→'), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('|', '|'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('→', '→'), ('a|b|c|…|z', 'a|b|c|…|z'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('a+b', 'a+b'), ('*', '*'), ('c', 'c'), (')', ')'), ('Prove', 'prove'), ('CFG', 'cfg'), ('productions', 'product'), (':', ':'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('bSS', 'bss'), ('|', '|'), ('SSb', 'ssb'), ('|', '|'), ('SbS', 'sbs'), ('ambiguous', 'ambigu'), ('(', '('), ('Hint', 'hint'), (':', ':'), ('consider', 'consid'), ('output', 'output'), ('string', 'string'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'left'), ('recursion', 'recurs'), ('&', '&'), ('Left', 'left'), ('factoring', 'factor'), ('Left', 'left'), ('recursion', 'recurs'), ('A', 'a'), ('grammar', 'grammar'), ('said', 'said'), ('left', 'left'), ('recursive', 'recurs'), ('non', 'non'), ('terminal', 'termin'), ('derivation', 'deriv'), ('string', 'string'), ('Algorithm', 'algorithm'), ('eliminate', 'elimin'), ('left', 'left'), ('recursion', 'recurs'), ('Arrange', 'arrang'), ('non', 'non'), ('terminals', 'termin'), ('order', 'order'), ('For', 'for'), ('begin', 'begin'), ('begin', 'begin'), ('replace', 'replac'), ('production', 'product'), ('form', 'form'), ('productions', 'product'), (',', ','), ('current', 'current'), ('productions', 'product'), (';', ';'), ('end', 'end'), ('eliminate', 'elimin'), ('immediate', 'immedi'), ('left', 'left'), ('recursion', 'recurs'), ('among', 'among'), ('-', '-'), ('productions', 'product'), ('end', 'end'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'left'), ('recursion', 'recurs'), ('elimination', 'elimin'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Examples', 'exampl'), (':', ':'), ('Left', 'left'), ('recursion', 'recurs'), ('elimination', 'elimin'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('X\uf0e0X', 'x\uf0e0x'), ('%', '%'), ('Y', 'y'), ('|', '|'), ('Z', 'z'), ('X\uf0e0ZX', 'x\uf0e0zx'), ('’', '’'), ('X', 'x'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('%', '%'), ('YX', 'yx'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), (':', ':'), ('Left', 'left'), ('recursion', 'recurs'), ('A\uf0e0Abd', 'a\uf0e0abd'), ('|', '|'), ('Aa', 'aa'), ('|', '|'), ('B\uf0e0Be', 'b\uf0e0be'), ('|', '|'), ('b', 'b'), ('A\uf0e0AB', 'a\uf0e0ab'), ('|', '|'), ('AC', 'ac'), ('|', '|'), ('|', '|'), ('b', 'b'), ('S\uf0e0A', 's\uf0e0a'), ('|', '|'), ('B', 'b'), ('A\uf0e0ABC', 'a\uf0e0abc'), ('|', '|'), ('Acd', 'acd'), ('|', '|'), ('|', '|'), ('aa', 'aa'), ('B\uf0e0Bee', 'b\uf0e0bee'), ('|', '|'), ('b', 'b'), ('Exp\uf0e0Exp+term', 'exp\uf0e0exp+term'), ('|', '|'), ('Exp-term', 'exp-term'), ('|', '|'), ('term', 'term'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'left'), ('factoring', 'factor'), ('Left', 'left'), ('factoring', 'factor'), ('grammar', 'grammar'), ('transformation', 'transform'), ('useful', 'use'), ('producing', 'produc'), ('grammar', 'grammar'), ('suitable', 'suitabl'), ('predictive', 'predict'), ('parsing', 'pars'), ('.', '.')]

>> Lemmatization: 
 [('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('S', 'S'), ('+', '+'), ('S', 'S'), ('S', 'S'), ('+', '+'), ('S', 'S'), ('S', 'S'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), (':', ':'), ('Ambiguous', 'Ambiguous'), ('Grammar', 'Grammar'), ('Check', 'Check'), ('Ambiguity', 'Ambiguity'), ('following', 'following'), ('grammars', 'grammar'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'aS'), ('|', '|'), ('Sa', 'Sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')'), ('S\uf0e0', 'S\uf0e0'), ('aSbS', 'aSbS'), ('|', '|'), ('bSaS', 'bSaS'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0', 'S\uf0e0'), ('SS+', 'SS+'), ('|', '|'), ('SS', 'SS'), ('*', '*'), ('|', '|'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aa+a', 'aa+a'), ('*', '*'), (')', ')'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('→', '→'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('→', '→'), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('|', '|'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('→', '→'), ('a|b|c|…|z', 'a|b|c|…|z'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('a+b', 'a+b'), ('*', '*'), ('c', 'c'), (')', ')'), ('Prove', 'Prove'), ('CFG', 'CFG'), ('productions', 'production'), (':', ':'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('|', '|'), ('Sa', 'Sa'), ('|', '|'), ('bSS', 'bSS'), ('|', '|'), ('SSb', 'SSb'), ('|', '|'), ('SbS', 'SbS'), ('ambiguous', 'ambiguous'), ('(', '('), ('Hint', 'Hint'), (':', ':'), ('consider', 'consider'), ('output', 'output'), ('string', 'string'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'Left'), ('recursion', 'recursion'), ('&', '&'), ('Left', 'Left'), ('factoring', 'factoring'), ('Left', 'Left'), ('recursion', 'recursion'), ('A', 'A'), ('grammar', 'grammar'), ('said', 'said'), ('left', 'left'), ('recursive', 'recursive'), ('non', 'non'), ('terminal', 'terminal'), ('derivation', 'derivation'), ('string', 'string'), ('Algorithm', 'Algorithm'), ('eliminate', 'eliminate'), ('left', 'left'), ('recursion', 'recursion'), ('Arrange', 'Arrange'), ('non', 'non'), ('terminals', 'terminal'), ('order', 'order'), ('For', 'For'), ('begin', 'begin'), ('begin', 'begin'), ('replace', 'replace'), ('production', 'production'), ('form', 'form'), ('productions', 'production'), (',', ','), ('current', 'current'), ('productions', 'production'), (';', ';'), ('end', 'end'), ('eliminate', 'eliminate'), ('immediate', 'immediate'), ('left', 'left'), ('recursion', 'recursion'), ('among', 'among'), ('-', '-'), ('productions', 'production'), ('end', 'end'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'Left'), ('recursion', 'recursion'), ('elimination', 'elimination'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Examples', 'Examples'), (':', ':'), ('Left', 'Left'), ('recursion', 'recursion'), ('elimination', 'elimination'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('|', '|'), ('T', 'T'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('X\uf0e0X', 'X\uf0e0X'), ('%', '%'), ('Y', 'Y'), ('|', '|'), ('Z', 'Z'), ('X\uf0e0ZX', 'X\uf0e0ZX'), ('’', '’'), ('X', 'X'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('%', '%'), ('YX', 'YX'), ('’', '’'), ('|', '|'), ('ε', 'ε'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), (':', ':'), ('Left', 'Left'), ('recursion', 'recursion'), ('A\uf0e0Abd', 'A\uf0e0Abd'), ('|', '|'), ('Aa', 'Aa'), ('|', '|'), ('B\uf0e0Be', 'B\uf0e0Be'), ('|', '|'), ('b', 'b'), ('A\uf0e0AB', 'A\uf0e0AB'), ('|', '|'), ('AC', 'AC'), ('|', '|'), ('|', '|'), ('b', 'b'), ('S\uf0e0A', 'S\uf0e0A'), ('|', '|'), ('B', 'B'), ('A\uf0e0ABC', 'A\uf0e0ABC'), ('|', '|'), ('Acd', 'Acd'), ('|', '|'), ('|', '|'), ('aa', 'aa'), ('B\uf0e0Bee', 'B\uf0e0Bee'), ('|', '|'), ('b', 'b'), ('Exp\uf0e0Exp+term', 'Exp\uf0e0Exp+term'), ('|', '|'), ('Exp-term', 'Exp-term'), ('|', '|'), ('term', 'term'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Left', 'Left'), ('factoring', 'factoring'), ('Left', 'Left'), ('factoring', 'factoring'), ('grammar', 'grammar'), ('transformation', 'transformation'), ('useful', 'useful'), ('producing', 'producing'), ('grammar', 'grammar'), ('suitable', 'suitable'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('.', '.')]



============================ Sentence 22 =============================

Algorithm to left factor a grammar Input: Grammar G Output: An equivalent left factored grammar. 


>> Tokens are: 
 ['Algorithm', 'left', 'factor', 'grammar', 'Input', ':', 'Grammar', 'G', 'Output', ':', 'An', 'equivalent', 'left', 'factored', 'grammar', '.']

>> Bigrams are: 
 [('Algorithm', 'left'), ('left', 'factor'), ('factor', 'grammar'), ('grammar', 'Input'), ('Input', ':'), (':', 'Grammar'), ('Grammar', 'G'), ('G', 'Output'), ('Output', ':'), (':', 'An'), ('An', 'equivalent'), ('equivalent', 'left'), ('left', 'factored'), ('factored', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('Algorithm', 'left', 'factor'), ('left', 'factor', 'grammar'), ('factor', 'grammar', 'Input'), ('grammar', 'Input', ':'), ('Input', ':', 'Grammar'), (':', 'Grammar', 'G'), ('Grammar', 'G', 'Output'), ('G', 'Output', ':'), ('Output', ':', 'An'), (':', 'An', 'equivalent'), ('An', 'equivalent', 'left'), ('equivalent', 'left', 'factored'), ('left', 'factored', 'grammar'), ('factored', 'grammar', '.')]

>> POS Tags are: 
 [('Algorithm', 'NNP'), ('left', 'VBD'), ('factor', 'NN'), ('grammar', 'NN'), ('Input', 'NNP'), (':', ':'), ('Grammar', 'NNP'), ('G', 'NNP'), ('Output', 'NNP'), (':', ':'), ('An', 'DT'), ('equivalent', 'NN'), ('left', 'VBD'), ('factored', 'JJ'), ('grammar', 'NN'), ('.', '.')]

 (S
  (NP Algorithm/NNP)
  left/VBD
  (NP factor/NN grammar/NN Input/NNP)
  :/:
  (NP Grammar/NNP G/NNP Output/NNP)
  :/:
  (NP An/DT equivalent/NN)
  left/VBD
  (NP factored/JJ grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['Algorithm', 'factor grammar Input', 'Grammar G Output', 'An equivalent', 'factored grammar']

>> Named Entities are: 
 [('PERSON', 'Algorithm'), ('PERSON', 'Input'), ('PERSON', 'Grammar G Output')] 

>> Stemming using Porter Stemmer: 
 [('Algorithm', 'algorithm'), ('left', 'left'), ('factor', 'factor'), ('grammar', 'grammar'), ('Input', 'input'), (':', ':'), ('Grammar', 'grammar'), ('G', 'g'), ('Output', 'output'), (':', ':'), ('An', 'an'), ('equivalent', 'equival'), ('left', 'left'), ('factored', 'factor'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Algorithm', 'algorithm'), ('left', 'left'), ('factor', 'factor'), ('grammar', 'grammar'), ('Input', 'input'), (':', ':'), ('Grammar', 'grammar'), ('G', 'g'), ('Output', 'output'), (':', ':'), ('An', 'an'), ('equivalent', 'equival'), ('left', 'left'), ('factored', 'factor'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('Algorithm', 'Algorithm'), ('left', 'left'), ('factor', 'factor'), ('grammar', 'grammar'), ('Input', 'Input'), (':', ':'), ('Grammar', 'Grammar'), ('G', 'G'), ('Output', 'Output'), (':', ':'), ('An', 'An'), ('equivalent', 'equivalent'), ('left', 'left'), ('factored', 'factored'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 23 =============================

Method:  For each non terminal A find the longest prefix  common to two or more of its alternatives. 


>> Tokens are: 
 ['Method', ':', 'For', 'non', 'terminal', 'A', 'find', 'longest', 'prefix', 'common', 'two', 'alternatives', '.']

>> Bigrams are: 
 [('Method', ':'), (':', 'For'), ('For', 'non'), ('non', 'terminal'), ('terminal', 'A'), ('A', 'find'), ('find', 'longest'), ('longest', 'prefix'), ('prefix', 'common'), ('common', 'two'), ('two', 'alternatives'), ('alternatives', '.')]

>> Trigrams are: 
 [('Method', ':', 'For'), (':', 'For', 'non'), ('For', 'non', 'terminal'), ('non', 'terminal', 'A'), ('terminal', 'A', 'find'), ('A', 'find', 'longest'), ('find', 'longest', 'prefix'), ('longest', 'prefix', 'common'), ('prefix', 'common', 'two'), ('common', 'two', 'alternatives'), ('two', 'alternatives', '.')]

>> POS Tags are: 
 [('Method', 'NN'), (':', ':'), ('For', 'IN'), ('non', 'JJ'), ('terminal', 'NN'), ('A', 'NNP'), ('find', 'NN'), ('longest', 'JJ'), ('prefix', 'NN'), ('common', 'JJ'), ('two', 'CD'), ('alternatives', 'NNS'), ('.', '.')]

 (S
  (NP Method/NN)
  :/:
  For/IN
  (NP non/JJ terminal/NN A/NNP find/NN)
  (NP longest/JJ prefix/NN)
  common/JJ
  two/CD
  (NP alternatives/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Method', 'non terminal A find', 'longest prefix', 'alternatives']

>> Named Entities are: 
 [('GPE', 'Method')] 

>> Stemming using Porter Stemmer: 
 [('Method', 'method'), (':', ':'), ('For', 'for'), ('non', 'non'), ('terminal', 'termin'), ('A', 'a'), ('find', 'find'), ('longest', 'longest'), ('prefix', 'prefix'), ('common', 'common'), ('two', 'two'), ('alternatives', 'altern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Method', 'method'), (':', ':'), ('For', 'for'), ('non', 'non'), ('terminal', 'termin'), ('A', 'a'), ('find', 'find'), ('longest', 'longest'), ('prefix', 'prefix'), ('common', 'common'), ('two', 'two'), ('alternatives', 'altern'), ('.', '.')]

>> Lemmatization: 
 [('Method', 'Method'), (':', ':'), ('For', 'For'), ('non', 'non'), ('terminal', 'terminal'), ('A', 'A'), ('find', 'find'), ('longest', 'longest'), ('prefix', 'prefix'), ('common', 'common'), ('two', 'two'), ('alternatives', 'alternative'), ('.', '.')]



============================ Sentence 24 =============================

If , i.e.-,  there is a non trivial common prefix, replace all the  productions where  represents all alternatives that do not begin with  by 	   Here A' is new non terminal. 


>> Tokens are: 
 ['If', ',', 'i.e.-', ',', 'non', 'trivial', 'common', 'prefix', ',', 'replace', 'productions', 'represents', 'alternatives', 'begin', 'Here', 'A', "'", 'new', 'non', 'terminal', '.']

>> Bigrams are: 
 [('If', ','), (',', 'i.e.-'), ('i.e.-', ','), (',', 'non'), ('non', 'trivial'), ('trivial', 'common'), ('common', 'prefix'), ('prefix', ','), (',', 'replace'), ('replace', 'productions'), ('productions', 'represents'), ('represents', 'alternatives'), ('alternatives', 'begin'), ('begin', 'Here'), ('Here', 'A'), ('A', "'"), ("'", 'new'), ('new', 'non'), ('non', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('If', ',', 'i.e.-'), (',', 'i.e.-', ','), ('i.e.-', ',', 'non'), (',', 'non', 'trivial'), ('non', 'trivial', 'common'), ('trivial', 'common', 'prefix'), ('common', 'prefix', ','), ('prefix', ',', 'replace'), (',', 'replace', 'productions'), ('replace', 'productions', 'represents'), ('productions', 'represents', 'alternatives'), ('represents', 'alternatives', 'begin'), ('alternatives', 'begin', 'Here'), ('begin', 'Here', 'A'), ('Here', 'A', "'"), ('A', "'", 'new'), ("'", 'new', 'non'), ('new', 'non', 'terminal'), ('non', 'terminal', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), ('i.e.-', 'JJ'), (',', ','), ('non', 'JJ'), ('trivial', 'JJ'), ('common', 'JJ'), ('prefix', 'NN'), (',', ','), ('replace', 'VB'), ('productions', 'NNS'), ('represents', 'VBZ'), ('alternatives', 'NNS'), ('begin', 'VBP'), ('Here', 'RB'), ('A', 'NNP'), ("'", 'POS'), ('new', 'JJ'), ('non', 'JJ'), ('terminal', 'NN'), ('.', '.')]

 (S
  If/IN
  ,/,
  i.e.-/JJ
  ,/,
  (NP non/JJ trivial/JJ common/JJ prefix/NN)
  ,/,
  replace/VB
  (NP productions/NNS)
  represents/VBZ
  (NP alternatives/NNS)
  begin/VBP
  Here/RB
  (NP A/NNP)
  '/POS
  (NP new/JJ non/JJ terminal/NN)
  ./.) 


>> Noun Phrases are: 
 ['non trivial common prefix', 'productions', 'alternatives', 'A', 'new non terminal']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), ('i.e.-', 'i.e.-'), (',', ','), ('non', 'non'), ('trivial', 'trivial'), ('common', 'common'), ('prefix', 'prefix'), (',', ','), ('replace', 'replac'), ('productions', 'product'), ('represents', 'repres'), ('alternatives', 'altern'), ('begin', 'begin'), ('Here', 'here'), ('A', 'a'), ("'", "'"), ('new', 'new'), ('non', 'non'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), ('i.e.-', 'i.e.-'), (',', ','), ('non', 'non'), ('trivial', 'trivial'), ('common', 'common'), ('prefix', 'prefix'), (',', ','), ('replace', 'replac'), ('productions', 'product'), ('represents', 'repres'), ('alternatives', 'altern'), ('begin', 'begin'), ('Here', 'here'), ('A', 'a'), ("'", "'"), ('new', 'new'), ('non', 'non'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), ('i.e.-', 'i.e.-'), (',', ','), ('non', 'non'), ('trivial', 'trivial'), ('common', 'common'), ('prefix', 'prefix'), (',', ','), ('replace', 'replace'), ('productions', 'production'), ('represents', 'represents'), ('alternatives', 'alternative'), ('begin', 'begin'), ('Here', 'Here'), ('A', 'A'), ("'", "'"), ('new', 'new'), ('non', 'non'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 25 =============================

Repeatedly apply this transformation until no two alternatives for a non-terminal have a common prefix. 


>> Tokens are: 
 ['Repeatedly', 'apply', 'transformation', 'two', 'alternatives', 'non-terminal', 'common', 'prefix', '.']

>> Bigrams are: 
 [('Repeatedly', 'apply'), ('apply', 'transformation'), ('transformation', 'two'), ('two', 'alternatives'), ('alternatives', 'non-terminal'), ('non-terminal', 'common'), ('common', 'prefix'), ('prefix', '.')]

>> Trigrams are: 
 [('Repeatedly', 'apply', 'transformation'), ('apply', 'transformation', 'two'), ('transformation', 'two', 'alternatives'), ('two', 'alternatives', 'non-terminal'), ('alternatives', 'non-terminal', 'common'), ('non-terminal', 'common', 'prefix'), ('common', 'prefix', '.')]

>> POS Tags are: 
 [('Repeatedly', 'RB'), ('apply', 'VB'), ('transformation', 'NN'), ('two', 'CD'), ('alternatives', 'NNS'), ('non-terminal', 'JJ'), ('common', 'JJ'), ('prefix', 'NN'), ('.', '.')]

 (S
  Repeatedly/RB
  apply/VB
  (NP transformation/NN)
  two/CD
  (NP alternatives/NNS)
  (NP non-terminal/JJ common/JJ prefix/NN)
  ./.) 


>> Noun Phrases are: 
 ['transformation', 'alternatives', 'non-terminal common prefix']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Repeatedly', 'repeatedli'), ('apply', 'appli'), ('transformation', 'transform'), ('two', 'two'), ('alternatives', 'altern'), ('non-terminal', 'non-termin'), ('common', 'common'), ('prefix', 'prefix'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Repeatedly', 'repeat'), ('apply', 'appli'), ('transformation', 'transform'), ('two', 'two'), ('alternatives', 'altern'), ('non-terminal', 'non-termin'), ('common', 'common'), ('prefix', 'prefix'), ('.', '.')]

>> Lemmatization: 
 [('Repeatedly', 'Repeatedly'), ('apply', 'apply'), ('transformation', 'transformation'), ('two', 'two'), ('alternatives', 'alternative'), ('non-terminal', 'non-terminal'), ('common', 'common'), ('prefix', 'prefix'), ('.', '.')]



============================ Sentence 26 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›     δ Left factoring elimination     δ   |             Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Left factoring elimination SaAB | aCD 			SaS’ 			S’AB | CD A xByA | xByAzA | a  			A xByAA’ | a 			A’ Є | zA  A aAB | aA |a 			AaA’ 			A’AB | A | 𝜖 			A’AA’’ | 𝜖 			A’’B | 𝜖      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise SiEtS | iEtSeS | a A ad | a | ab | abc | x     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing        Parsing Parsing is a technique that takes input string and produces output either a parse tree if string is valid sentence of grammar, or an error message indicating that string is not a valid. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'δ', 'Left', 'factoring', 'elimination', 'δ', '|', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Left', 'factoring', 'elimination', 'S\uf0e0aAB', '|', 'aCD', 'S\uf0e0aS', '’', 'S', '’', '\uf0e0AB', '|', 'CD', 'A\uf0e0', 'xByA', '|', 'xByAzA', '|', 'A\uf0e0', 'xByAA', '’', '|', 'A', '’', '\uf0e0', 'Є', '|', 'zA', 'A\uf0e0', 'aAB', '|', 'aA', '|a', 'A\uf0e0aA', '’', 'A', '’', '\uf0e0AB', '|', 'A', '|', '𝜖', 'A', '’', '\uf0e0AA', '’', '’', '|', '𝜖', 'A', '’', '’', '\uf0e0B', '|', '𝜖', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Exercise', 'S\uf0e0iEtS', '|', 'iEtSeS', '|', 'A\uf0e0', 'ad', '|', '|', 'ab', '|', 'abc', '|', 'x', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Parsing', 'Parsing', 'technique', 'takes', 'input', 'string', 'produces', 'output', 'either', 'parse', 'tree', 'string', 'valid', 'sentence', 'grammar', ',', 'error', 'message', 'indicating', 'string', 'valid', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'δ'), ('δ', 'Left'), ('Left', 'factoring'), ('factoring', 'elimination'), ('elimination', 'δ'), ('δ', '|'), ('|', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Left'), ('Left', 'factoring'), ('factoring', 'elimination'), ('elimination', 'S\uf0e0aAB'), ('S\uf0e0aAB', '|'), ('|', 'aCD'), ('aCD', 'S\uf0e0aS'), ('S\uf0e0aS', '’'), ('’', 'S'), ('S', '’'), ('’', '\uf0e0AB'), ('\uf0e0AB', '|'), ('|', 'CD'), ('CD', 'A\uf0e0'), ('A\uf0e0', 'xByA'), ('xByA', '|'), ('|', 'xByAzA'), ('xByAzA', '|'), ('|', 'A\uf0e0'), ('A\uf0e0', 'xByAA'), ('xByAA', '’'), ('’', '|'), ('|', 'A'), ('A', '’'), ('’', '\uf0e0'), ('\uf0e0', 'Є'), ('Є', '|'), ('|', 'zA'), ('zA', 'A\uf0e0'), ('A\uf0e0', 'aAB'), ('aAB', '|'), ('|', 'aA'), ('aA', '|a'), ('|a', 'A\uf0e0aA'), ('A\uf0e0aA', '’'), ('’', 'A'), ('A', '’'), ('’', '\uf0e0AB'), ('\uf0e0AB', '|'), ('|', 'A'), ('A', '|'), ('|', '𝜖'), ('𝜖', 'A'), ('A', '’'), ('’', '\uf0e0AA'), ('\uf0e0AA', '’'), ('’', '’'), ('’', '|'), ('|', '𝜖'), ('𝜖', 'A'), ('A', '’'), ('’', '’'), ('’', '\uf0e0B'), ('\uf0e0B', '|'), ('|', '𝜖'), ('𝜖', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', 'S\uf0e0iEtS'), ('S\uf0e0iEtS', '|'), ('|', 'iEtSeS'), ('iEtSeS', '|'), ('|', 'A\uf0e0'), ('A\uf0e0', 'ad'), ('ad', '|'), ('|', '|'), ('|', 'ab'), ('ab', '|'), ('|', 'abc'), ('abc', '|'), ('|', 'x'), ('x', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Parsing'), ('Parsing', 'Parsing'), ('Parsing', 'technique'), ('technique', 'takes'), ('takes', 'input'), ('input', 'string'), ('string', 'produces'), ('produces', 'output'), ('output', 'either'), ('either', 'parse'), ('parse', 'tree'), ('tree', 'string'), ('string', 'valid'), ('valid', 'sentence'), ('sentence', 'grammar'), ('grammar', ','), (',', 'error'), ('error', 'message'), ('message', 'indicating'), ('indicating', 'string'), ('string', 'valid'), ('valid', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'δ'), ('›', 'δ', 'Left'), ('δ', 'Left', 'factoring'), ('Left', 'factoring', 'elimination'), ('factoring', 'elimination', 'δ'), ('elimination', 'δ', '|'), ('δ', '|', 'Prof.'), ('|', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Left'), (':', 'Left', 'factoring'), ('Left', 'factoring', 'elimination'), ('factoring', 'elimination', 'S\uf0e0aAB'), ('elimination', 'S\uf0e0aAB', '|'), ('S\uf0e0aAB', '|', 'aCD'), ('|', 'aCD', 'S\uf0e0aS'), ('aCD', 'S\uf0e0aS', '’'), ('S\uf0e0aS', '’', 'S'), ('’', 'S', '’'), ('S', '’', '\uf0e0AB'), ('’', '\uf0e0AB', '|'), ('\uf0e0AB', '|', 'CD'), ('|', 'CD', 'A\uf0e0'), ('CD', 'A\uf0e0', 'xByA'), ('A\uf0e0', 'xByA', '|'), ('xByA', '|', 'xByAzA'), ('|', 'xByAzA', '|'), ('xByAzA', '|', 'A\uf0e0'), ('|', 'A\uf0e0', 'xByAA'), ('A\uf0e0', 'xByAA', '’'), ('xByAA', '’', '|'), ('’', '|', 'A'), ('|', 'A', '’'), ('A', '’', '\uf0e0'), ('’', '\uf0e0', 'Є'), ('\uf0e0', 'Є', '|'), ('Є', '|', 'zA'), ('|', 'zA', 'A\uf0e0'), ('zA', 'A\uf0e0', 'aAB'), ('A\uf0e0', 'aAB', '|'), ('aAB', '|', 'aA'), ('|', 'aA', '|a'), ('aA', '|a', 'A\uf0e0aA'), ('|a', 'A\uf0e0aA', '’'), ('A\uf0e0aA', '’', 'A'), ('’', 'A', '’'), ('A', '’', '\uf0e0AB'), ('’', '\uf0e0AB', '|'), ('\uf0e0AB', '|', 'A'), ('|', 'A', '|'), ('A', '|', '𝜖'), ('|', '𝜖', 'A'), ('𝜖', 'A', '’'), ('A', '’', '\uf0e0AA'), ('’', '\uf0e0AA', '’'), ('\uf0e0AA', '’', '’'), ('’', '’', '|'), ('’', '|', '𝜖'), ('|', '𝜖', 'A'), ('𝜖', 'A', '’'), ('A', '’', '’'), ('’', '’', '\uf0e0B'), ('’', '\uf0e0B', '|'), ('\uf0e0B', '|', '𝜖'), ('|', '𝜖', 'Prof.'), ('𝜖', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', 'S\uf0e0iEtS'), ('Exercise', 'S\uf0e0iEtS', '|'), ('S\uf0e0iEtS', '|', 'iEtSeS'), ('|', 'iEtSeS', '|'), ('iEtSeS', '|', 'A\uf0e0'), ('|', 'A\uf0e0', 'ad'), ('A\uf0e0', 'ad', '|'), ('ad', '|', '|'), ('|', '|', 'ab'), ('|', 'ab', '|'), ('ab', '|', 'abc'), ('|', 'abc', '|'), ('abc', '|', 'x'), ('|', 'x', 'Prof.'), ('x', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Parsing'), ('Parsing', 'Parsing', 'Parsing'), ('Parsing', 'Parsing', 'technique'), ('Parsing', 'technique', 'takes'), ('technique', 'takes', 'input'), ('takes', 'input', 'string'), ('input', 'string', 'produces'), ('string', 'produces', 'output'), ('produces', 'output', 'either'), ('output', 'either', 'parse'), ('either', 'parse', 'tree'), ('parse', 'tree', 'string'), ('tree', 'string', 'valid'), ('string', 'valid', 'sentence'), ('valid', 'sentence', 'grammar'), ('sentence', 'grammar', ','), ('grammar', ',', 'error'), (',', 'error', 'message'), ('error', 'message', 'indicating'), ('message', 'indicating', 'string'), ('indicating', 'string', 'valid'), ('string', 'valid', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('δ', 'NN'), ('Left', 'VBD'), ('factoring', 'JJ'), ('elimination', 'NN'), ('δ', 'NNP'), ('|', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Left', 'NNP'), ('factoring', 'VBG'), ('elimination', 'NN'), ('S\uf0e0aAB', 'NNP'), ('|', 'NNP'), ('aCD', 'VBZ'), ('S\uf0e0aS', 'NNP'), ('’', 'NNP'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0AB', 'NNP'), ('|', 'NNP'), ('CD', 'NNP'), ('A\uf0e0', 'NNP'), ('xByA', 'NNP'), ('|', 'NNP'), ('xByAzA', 'NNP'), ('|', 'NNP'), ('A\uf0e0', 'NNP'), ('xByAA', 'NNP'), ('’', 'NNP'), ('|', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('Є', 'NNP'), ('|', 'NNP'), ('zA', 'NNP'), ('A\uf0e0', 'NNP'), ('aAB', 'VBZ'), ('|', 'NNP'), ('aA', 'NN'), ('|a', 'NNP'), ('A\uf0e0aA', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('\uf0e0AB', 'NNP'), ('|', 'VBZ'), ('A', 'NNP'), ('|', 'NNP'), ('𝜖', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('\uf0e0AA', 'NNP'), ('’', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('𝜖', 'VBZ'), ('A', 'NNP'), ('’', 'NNP'), ('’', 'NNP'), ('\uf0e0B', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Exercise', 'NNP'), ('S\uf0e0iEtS', 'NNP'), ('|', 'NNP'), ('iEtSeS', 'NN'), ('|', 'NNP'), ('A\uf0e0', 'NNP'), ('ad', 'NN'), ('|', 'NN'), ('|', 'NNP'), ('ab', 'NN'), ('|', 'NNP'), ('abc', 'NN'), ('|', 'NNP'), ('x', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'VBG'), ('Parsing', 'VBG'), ('Parsing', 'VBG'), ('technique', 'NN'), ('takes', 'VBZ'), ('input', 'JJ'), ('string', 'VBG'), ('produces', 'VBZ'), ('output', 'NN'), ('either', 'CC'), ('parse', 'JJ'), ('tree', 'NN'), ('string', 'VBG'), ('valid', 'JJ'), ('sentence', 'NN'), ('grammar', 'NN'), (',', ','), ('error', 'NN'), ('message', 'NN'), ('indicating', 'VBG'), ('string', 'VBG'), ('valid', 'JJ'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ δ/NN)
  Left/VBD
  (NP
    factoring/JJ
    elimination/NN
    δ/NNP
    |/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Left/NNP)
  factoring/VBG
  (NP elimination/NN SaAB/NNP |/NNP)
  aCD/VBZ
  (NP
    SaS/NNP
    ’/NNP
    S/NNP
    ’/NNP
    AB/NNP
    |/NNP
    CD/NNP
    A/NNP
    xByA/NNP
    |/NNP
    xByAzA/NNP
    |/NNP
    A/NNP
    xByAA/NNP
    ’/NNP)
  |/VBZ
  (NP A/NNP ’/NNP /NNP Є/NNP |/NNP zA/NNP A/NNP)
  aAB/VBZ
  (NP |/NNP aA/NN |a/NNP AaA/NNP)
  ’/VBZ
  (NP A/NNP ’/NNP AB/NNP)
  |/VBZ
  (NP A/NNP |/NNP)
  𝜖/VBZ
  (NP A/NNP ’/NNP AA/NNP ’/NNP ’/NNP |/NNP)
  𝜖/VBZ
  (NP
    A/NNP
    ’/NNP
    ’/NNP
    B/NNP
    |/NNP
    𝜖/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP
    ›/NNP
    Exercise/NNP
    SiEtS/NNP
    |/NNP
    iEtSeS/NN
    |/NNP
    A/NNP
    ad/NN
    |/NN
    |/NNP
    ab/NN
    |/NNP
    abc/NN
    |/NNP
    x/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Parsing/VBG
  Parsing/VBG
  Parsing/VBG
  (NP technique/NN)
  takes/VBZ
  input/JJ
  string/VBG
  produces/VBZ
  (NP output/NN)
  either/CC
  (NP parse/JJ tree/NN)
  string/VBG
  (NP valid/JJ sentence/NN grammar/NN)
  ,/,
  (NP error/NN message/NN)
  indicating/VBG
  string/VBG
  valid/JJ
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› δ', 'factoring elimination δ | Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Left', 'elimination S\uf0e0aAB |', 'S\uf0e0aS ’ S ’ \uf0e0AB | CD A\uf0e0 xByA | xByAzA | A\uf0e0 xByAA ’', 'A ’ \uf0e0 Є | zA A\uf0e0', '| aA |a A\uf0e0aA', 'A ’ \uf0e0AB', 'A |', 'A ’ \uf0e0AA ’ ’ |', 'A ’ ’ \uf0e0B | 𝜖 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Exercise S\uf0e0iEtS | iEtSeS | A\uf0e0 ad | | ab | abc | x Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'technique', 'output', 'parse tree', 'valid sentence grammar', 'error message']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('δ', 'δ'), ('Left', 'left'), ('factoring', 'factor'), ('elimination', 'elimin'), ('δ', 'δ'), ('|', '|'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Left', 'left'), ('factoring', 'factor'), ('elimination', 'elimin'), ('S\uf0e0aAB', 's\uf0e0aab'), ('|', '|'), ('aCD', 'acd'), ('S\uf0e0aS', 's\uf0e0a'), ('’', '’'), ('S', 's'), ('’', '’'), ('\uf0e0AB', '\uf0e0ab'), ('|', '|'), ('CD', 'cd'), ('A\uf0e0', 'a\uf0e0'), ('xByA', 'xbya'), ('|', '|'), ('xByAzA', 'xbyaza'), ('|', '|'), ('A\uf0e0', 'a\uf0e0'), ('xByAA', 'xbyaa'), ('’', '’'), ('|', '|'), ('A', 'a'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('Є', 'є'), ('|', '|'), ('zA', 'za'), ('A\uf0e0', 'a\uf0e0'), ('aAB', 'aab'), ('|', '|'), ('aA', 'aa'), ('|a', '|a'), ('A\uf0e0aA', 'a\uf0e0aa'), ('’', '’'), ('A', 'a'), ('’', '’'), ('\uf0e0AB', '\uf0e0ab'), ('|', '|'), ('A', 'a'), ('|', '|'), ('𝜖', '𝜖'), ('A', 'a'), ('’', '’'), ('\uf0e0AA', '\uf0e0aa'), ('’', '’'), ('’', '’'), ('|', '|'), ('𝜖', '𝜖'), ('A', 'a'), ('’', '’'), ('’', '’'), ('\uf0e0B', '\uf0e0b'), ('|', '|'), ('𝜖', '𝜖'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), ('S\uf0e0iEtS', 's\uf0e0iet'), ('|', '|'), ('iEtSeS', 'iets'), ('|', '|'), ('A\uf0e0', 'a\uf0e0'), ('ad', 'ad'), ('|', '|'), ('|', '|'), ('ab', 'ab'), ('|', '|'), ('abc', 'abc'), ('|', '|'), ('x', 'x'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Parsing', 'pars'), ('Parsing', 'pars'), ('technique', 'techniqu'), ('takes', 'take'), ('input', 'input'), ('string', 'string'), ('produces', 'produc'), ('output', 'output'), ('either', 'either'), ('parse', 'pars'), ('tree', 'tree'), ('string', 'string'), ('valid', 'valid'), ('sentence', 'sentenc'), ('grammar', 'grammar'), (',', ','), ('error', 'error'), ('message', 'messag'), ('indicating', 'indic'), ('string', 'string'), ('valid', 'valid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('δ', 'δ'), ('Left', 'left'), ('factoring', 'factor'), ('elimination', 'elimin'), ('δ', 'δ'), ('|', '|'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Left', 'left'), ('factoring', 'factor'), ('elimination', 'elimin'), ('S\uf0e0aAB', 's\uf0e0aab'), ('|', '|'), ('aCD', 'acd'), ('S\uf0e0aS', 's\uf0e0as'), ('’', '’'), ('S', 's'), ('’', '’'), ('\uf0e0AB', '\uf0e0ab'), ('|', '|'), ('CD', 'cd'), ('A\uf0e0', 'a\uf0e0'), ('xByA', 'xbya'), ('|', '|'), ('xByAzA', 'xbyaza'), ('|', '|'), ('A\uf0e0', 'a\uf0e0'), ('xByAA', 'xbyaa'), ('’', '’'), ('|', '|'), ('A', 'a'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('Є', 'є'), ('|', '|'), ('zA', 'za'), ('A\uf0e0', 'a\uf0e0'), ('aAB', 'aab'), ('|', '|'), ('aA', 'aa'), ('|a', '|a'), ('A\uf0e0aA', 'a\uf0e0aa'), ('’', '’'), ('A', 'a'), ('’', '’'), ('\uf0e0AB', '\uf0e0ab'), ('|', '|'), ('A', 'a'), ('|', '|'), ('𝜖', '𝜖'), ('A', 'a'), ('’', '’'), ('\uf0e0AA', '\uf0e0aa'), ('’', '’'), ('’', '’'), ('|', '|'), ('𝜖', '𝜖'), ('A', 'a'), ('’', '’'), ('’', '’'), ('\uf0e0B', '\uf0e0b'), ('|', '|'), ('𝜖', '𝜖'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), ('S\uf0e0iEtS', 's\uf0e0iet'), ('|', '|'), ('iEtSeS', 'iets'), ('|', '|'), ('A\uf0e0', 'a\uf0e0'), ('ad', 'ad'), ('|', '|'), ('|', '|'), ('ab', 'ab'), ('|', '|'), ('abc', 'abc'), ('|', '|'), ('x', 'x'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Parsing', 'pars'), ('Parsing', 'pars'), ('technique', 'techniqu'), ('takes', 'take'), ('input', 'input'), ('string', 'string'), ('produces', 'produc'), ('output', 'output'), ('either', 'either'), ('parse', 'pars'), ('tree', 'tree'), ('string', 'string'), ('valid', 'valid'), ('sentence', 'sentenc'), ('grammar', 'grammar'), (',', ','), ('error', 'error'), ('message', 'messag'), ('indicating', 'indic'), ('string', 'string'), ('valid', 'valid'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('δ', 'δ'), ('Left', 'Left'), ('factoring', 'factoring'), ('elimination', 'elimination'), ('δ', 'δ'), ('|', '|'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Left', 'Left'), ('factoring', 'factoring'), ('elimination', 'elimination'), ('S\uf0e0aAB', 'S\uf0e0aAB'), ('|', '|'), ('aCD', 'aCD'), ('S\uf0e0aS', 'S\uf0e0aS'), ('’', '’'), ('S', 'S'), ('’', '’'), ('\uf0e0AB', '\uf0e0AB'), ('|', '|'), ('CD', 'CD'), ('A\uf0e0', 'A\uf0e0'), ('xByA', 'xByA'), ('|', '|'), ('xByAzA', 'xByAzA'), ('|', '|'), ('A\uf0e0', 'A\uf0e0'), ('xByAA', 'xByAA'), ('’', '’'), ('|', '|'), ('A', 'A'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('Є', 'Є'), ('|', '|'), ('zA', 'zA'), ('A\uf0e0', 'A\uf0e0'), ('aAB', 'aAB'), ('|', '|'), ('aA', 'aA'), ('|a', '|a'), ('A\uf0e0aA', 'A\uf0e0aA'), ('’', '’'), ('A', 'A'), ('’', '’'), ('\uf0e0AB', '\uf0e0AB'), ('|', '|'), ('A', 'A'), ('|', '|'), ('𝜖', '𝜖'), ('A', 'A'), ('’', '’'), ('\uf0e0AA', '\uf0e0AA'), ('’', '’'), ('’', '’'), ('|', '|'), ('𝜖', '𝜖'), ('A', 'A'), ('’', '’'), ('’', '’'), ('\uf0e0B', '\uf0e0B'), ('|', '|'), ('𝜖', '𝜖'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), ('S\uf0e0iEtS', 'S\uf0e0iEtS'), ('|', '|'), ('iEtSeS', 'iEtSeS'), ('|', '|'), ('A\uf0e0', 'A\uf0e0'), ('ad', 'ad'), ('|', '|'), ('|', '|'), ('ab', 'ab'), ('|', '|'), ('abc', 'abc'), ('|', '|'), ('x', 'x'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Parsing', 'Parsing'), ('Parsing', 'Parsing'), ('technique', 'technique'), ('takes', 'take'), ('input', 'input'), ('string', 'string'), ('produces', 'produce'), ('output', 'output'), ('either', 'either'), ('parse', 'parse'), ('tree', 'tree'), ('string', 'string'), ('valid', 'valid'), ('sentence', 'sentence'), ('grammar', 'grammar'), (',', ','), ('error', 'error'), ('message', 'message'), ('indicating', 'indicating'), ('string', 'string'), ('valid', 'valid'), ('.', '.')]



============================ Sentence 27 =============================

Types of parsing are: Top down parsing: In top down parsing parser build parse tree from top to bottom. 


>> Tokens are: 
 ['Types', 'parsing', ':', 'Top', 'parsing', ':', 'In', 'top', 'parsing', 'parser', 'build', 'parse', 'tree', 'top', 'bottom', '.']

>> Bigrams are: 
 [('Types', 'parsing'), ('parsing', ':'), (':', 'Top'), ('Top', 'parsing'), ('parsing', ':'), (':', 'In'), ('In', 'top'), ('top', 'parsing'), ('parsing', 'parser'), ('parser', 'build'), ('build', 'parse'), ('parse', 'tree'), ('tree', 'top'), ('top', 'bottom'), ('bottom', '.')]

>> Trigrams are: 
 [('Types', 'parsing', ':'), ('parsing', ':', 'Top'), (':', 'Top', 'parsing'), ('Top', 'parsing', ':'), ('parsing', ':', 'In'), (':', 'In', 'top'), ('In', 'top', 'parsing'), ('top', 'parsing', 'parser'), ('parsing', 'parser', 'build'), ('parser', 'build', 'parse'), ('build', 'parse', 'tree'), ('parse', 'tree', 'top'), ('tree', 'top', 'bottom'), ('top', 'bottom', '.')]

>> POS Tags are: 
 [('Types', 'NNS'), ('parsing', 'VBG'), (':', ':'), ('Top', 'JJ'), ('parsing', 'NN'), (':', ':'), ('In', 'IN'), ('top', 'JJ'), ('parsing', 'NN'), ('parser', 'NN'), ('build', 'JJ'), ('parse', 'JJ'), ('tree', 'NN'), ('top', 'JJ'), ('bottom', 'NN'), ('.', '.')]

 (S
  (NP Types/NNS)
  parsing/VBG
  :/:
  (NP Top/JJ parsing/NN)
  :/:
  In/IN
  (NP top/JJ parsing/NN parser/NN)
  (NP build/JJ parse/JJ tree/NN)
  (NP top/JJ bottom/NN)
  ./.) 


>> Noun Phrases are: 
 ['Types', 'Top parsing', 'top parsing parser', 'build parse tree', 'top bottom']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Types', 'type'), ('parsing', 'pars'), (':', ':'), ('Top', 'top'), ('parsing', 'pars'), (':', ':'), ('In', 'in'), ('top', 'top'), ('parsing', 'pars'), ('parser', 'parser'), ('build', 'build'), ('parse', 'pars'), ('tree', 'tree'), ('top', 'top'), ('bottom', 'bottom'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Types', 'type'), ('parsing', 'pars'), (':', ':'), ('Top', 'top'), ('parsing', 'pars'), (':', ':'), ('In', 'in'), ('top', 'top'), ('parsing', 'pars'), ('parser', 'parser'), ('build', 'build'), ('parse', 'pars'), ('tree', 'tree'), ('top', 'top'), ('bottom', 'bottom'), ('.', '.')]

>> Lemmatization: 
 [('Types', 'Types'), ('parsing', 'parsing'), (':', ':'), ('Top', 'Top'), ('parsing', 'parsing'), (':', ':'), ('In', 'In'), ('top', 'top'), ('parsing', 'parsing'), ('parser', 'parser'), ('build', 'build'), ('parse', 'parse'), ('tree', 'tree'), ('top', 'top'), ('bottom', 'bottom'), ('.', '.')]



============================ Sentence 28 =============================

Bottom up parsing: Bottom up parser starts from leaves and work up to the root. 


>> Tokens are: 
 ['Bottom', 'parsing', ':', 'Bottom', 'parser', 'starts', 'leaves', 'work', 'root', '.']

>> Bigrams are: 
 [('Bottom', 'parsing'), ('parsing', ':'), (':', 'Bottom'), ('Bottom', 'parser'), ('parser', 'starts'), ('starts', 'leaves'), ('leaves', 'work'), ('work', 'root'), ('root', '.')]

>> Trigrams are: 
 [('Bottom', 'parsing', ':'), ('parsing', ':', 'Bottom'), (':', 'Bottom', 'parser'), ('Bottom', 'parser', 'starts'), ('parser', 'starts', 'leaves'), ('starts', 'leaves', 'work'), ('leaves', 'work', 'root'), ('work', 'root', '.')]

>> POS Tags are: 
 [('Bottom', 'JJ'), ('parsing', 'NN'), (':', ':'), ('Bottom', 'NNP'), ('parser', 'NN'), ('starts', 'VBZ'), ('leaves', 'VBZ'), ('work', 'NN'), ('root', 'NN'), ('.', '.')]

 (S
  (NP Bottom/JJ parsing/NN)
  :/:
  (NP Bottom/NNP parser/NN)
  starts/VBZ
  leaves/VBZ
  (NP work/NN root/NN)
  ./.) 


>> Noun Phrases are: 
 ['Bottom parsing', 'Bottom parser', 'work root']

>> Named Entities are: 
 [('GPE', 'Bottom')] 

>> Stemming using Porter Stemmer: 
 [('Bottom', 'bottom'), ('parsing', 'pars'), (':', ':'), ('Bottom', 'bottom'), ('parser', 'parser'), ('starts', 'start'), ('leaves', 'leav'), ('work', 'work'), ('root', 'root'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Bottom', 'bottom'), ('parsing', 'pars'), (':', ':'), ('Bottom', 'bottom'), ('parser', 'parser'), ('starts', 'start'), ('leaves', 'leav'), ('work', 'work'), ('root', 'root'), ('.', '.')]

>> Lemmatization: 
 [('Bottom', 'Bottom'), ('parsing', 'parsing'), (':', ':'), ('Bottom', 'Bottom'), ('parser', 'parser'), ('starts', 'start'), ('leaves', 'leaf'), ('work', 'work'), ('root', 'root'), ('.', '.')]



============================ Sentence 29 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Classification of parsing methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Backtracking In backtracking, expansion of nonterminal symbol we choose one alternative and if any mismatch occurs then we try another alternative. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Classification', 'parsing', 'methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Backtracking', 'In', 'backtracking', ',', 'expansion', 'nonterminal', 'symbol', 'choose', 'one', 'alternative', 'mismatch', 'occurs', 'try', 'another', 'alternative', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Classification'), ('Classification', 'parsing'), ('parsing', 'methods'), ('methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'parsing'), ('parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Backtracking'), ('Backtracking', 'In'), ('In', 'backtracking'), ('backtracking', ','), (',', 'expansion'), ('expansion', 'nonterminal'), ('nonterminal', 'symbol'), ('symbol', 'choose'), ('choose', 'one'), ('one', 'alternative'), ('alternative', 'mismatch'), ('mismatch', 'occurs'), ('occurs', 'try'), ('try', 'another'), ('another', 'alternative'), ('alternative', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Classification'), ('›', 'Classification', 'parsing'), ('Classification', 'parsing', 'methods'), ('parsing', 'methods', 'Parsing'), ('methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'parsing'), ('predictive', 'parsing', ')'), ('parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Backtracking'), ('›', 'Backtracking', 'In'), ('Backtracking', 'In', 'backtracking'), ('In', 'backtracking', ','), ('backtracking', ',', 'expansion'), (',', 'expansion', 'nonterminal'), ('expansion', 'nonterminal', 'symbol'), ('nonterminal', 'symbol', 'choose'), ('symbol', 'choose', 'one'), ('choose', 'one', 'alternative'), ('one', 'alternative', 'mismatch'), ('alternative', 'mismatch', 'occurs'), ('mismatch', 'occurs', 'try'), ('occurs', 'try', 'another'), ('try', 'another', 'alternative'), ('another', 'alternative', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Classification', 'NNP'), ('parsing', 'VBG'), ('methods', 'NNS'), ('Parsing', 'VBG'), ('Top', 'JJ'), ('parsing', 'NN'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('parsing', 'NN'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Backtracking', 'NNP'), ('In', 'IN'), ('backtracking', 'NN'), (',', ','), ('expansion', 'NN'), ('nonterminal', 'JJ'), ('symbol', 'NN'), ('choose', 'VBP'), ('one', 'CD'), ('alternative', 'JJ'), ('mismatch', 'NN'), ('occurs', 'VBZ'), ('try', 'VB'), ('another', 'DT'), ('alternative', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Classification/NNP)
  parsing/VBG
  (NP methods/NNS)
  Parsing/VBG
  (NP Top/JJ parsing/NN Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ parsing/NN)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Backtracking/NNP)
  In/IN
  (NP backtracking/NN)
  ,/,
  (NP expansion/NN)
  (NP nonterminal/JJ symbol/NN)
  choose/VBP
  one/CD
  (NP alternative/JJ mismatch/NN)
  occurs/VBZ
  try/VB
  (NP another/DT alternative/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Classification', 'methods', 'Top parsing Bottom parsing', 'Shift', 'predictive parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Backtracking', 'backtracking', 'expansion', 'nonterminal symbol', 'alternative mismatch', 'another alternative']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Classification', 'classif'), ('parsing', 'pars'), ('methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Backtracking', 'backtrack'), ('In', 'in'), ('backtracking', 'backtrack'), (',', ','), ('expansion', 'expans'), ('nonterminal', 'nontermin'), ('symbol', 'symbol'), ('choose', 'choos'), ('one', 'one'), ('alternative', 'altern'), ('mismatch', 'mismatch'), ('occurs', 'occur'), ('try', 'tri'), ('another', 'anoth'), ('alternative', 'altern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Classification', 'classif'), ('parsing', 'pars'), ('methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Backtracking', 'backtrack'), ('In', 'in'), ('backtracking', 'backtrack'), (',', ','), ('expansion', 'expans'), ('nonterminal', 'nontermin'), ('symbol', 'symbol'), ('choose', 'choos'), ('one', 'one'), ('alternative', 'altern'), ('mismatch', 'mismatch'), ('occurs', 'occur'), ('try', 'tri'), ('another', 'anoth'), ('alternative', 'altern'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Classification', 'Classification'), ('parsing', 'parsing'), ('methods', 'method'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Backtracking', 'Backtracking'), ('In', 'In'), ('backtracking', 'backtracking'), (',', ','), ('expansion', 'expansion'), ('nonterminal', 'nonterminal'), ('symbol', 'symbol'), ('choose', 'choose'), ('one', 'one'), ('alternative', 'alternative'), ('mismatch', 'mismatch'), ('occurs', 'occurs'), ('try', 'try'), ('another', 'another'), ('alternative', 'alternative'), ('.', '.')]



============================ Sentence 30 =============================

Grammar: S cAd		Input string: cad 	        A ab | a c A d S c A d S a b c A d S a Parsing done Make prediction Backtrack Make prediction    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise E 5+T | 3-T T V | V*V | V+V V a | b String: 3-a+b     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  LL(1) parser (predictive parser) LL(1) is non recursive top down parser. 


>> Tokens are: 
 ['Grammar', ':', 'S\uf0e0', 'cAd', 'Input', 'string', ':', 'cad', 'A\uf0e0', 'ab', '|', 'c', 'A', 'S', 'c', 'A', 'S', 'b', 'c', 'A', 'S', 'Parsing', 'done', 'Make', 'prediction', 'Backtrack', 'Make', 'prediction', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Exercise', 'E\uf0e0', '5+T', '|', '3-T', 'T\uf0e0', 'V', '|', 'V', '*', 'V', '|', 'V+V', 'V\uf0e0', '|', 'b', 'String', ':', '3-a+b', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'LL', '(', '1', ')', 'parser', '(', 'predictive', 'parser', ')', 'LL', '(', '1', ')', 'non', 'recursive', 'top', 'parser', '.']

>> Bigrams are: 
 [('Grammar', ':'), (':', 'S\uf0e0'), ('S\uf0e0', 'cAd'), ('cAd', 'Input'), ('Input', 'string'), ('string', ':'), (':', 'cad'), ('cad', 'A\uf0e0'), ('A\uf0e0', 'ab'), ('ab', '|'), ('|', 'c'), ('c', 'A'), ('A', 'S'), ('S', 'c'), ('c', 'A'), ('A', 'S'), ('S', 'b'), ('b', 'c'), ('c', 'A'), ('A', 'S'), ('S', 'Parsing'), ('Parsing', 'done'), ('done', 'Make'), ('Make', 'prediction'), ('prediction', 'Backtrack'), ('Backtrack', 'Make'), ('Make', 'prediction'), ('prediction', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Exercise'), ('Exercise', 'E\uf0e0'), ('E\uf0e0', '5+T'), ('5+T', '|'), ('|', '3-T'), ('3-T', 'T\uf0e0'), ('T\uf0e0', 'V'), ('V', '|'), ('|', 'V'), ('V', '*'), ('*', 'V'), ('V', '|'), ('|', 'V+V'), ('V+V', 'V\uf0e0'), ('V\uf0e0', '|'), ('|', 'b'), ('b', 'String'), ('String', ':'), (':', '3-a+b'), ('3-a+b', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'parsing'), ('parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parser'), ('parser', '('), ('(', 'predictive'), ('predictive', 'parser'), ('parser', ')'), (')', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'non'), ('non', 'recursive'), ('recursive', 'top'), ('top', 'parser'), ('parser', '.')]

>> Trigrams are: 
 [('Grammar', ':', 'S\uf0e0'), (':', 'S\uf0e0', 'cAd'), ('S\uf0e0', 'cAd', 'Input'), ('cAd', 'Input', 'string'), ('Input', 'string', ':'), ('string', ':', 'cad'), (':', 'cad', 'A\uf0e0'), ('cad', 'A\uf0e0', 'ab'), ('A\uf0e0', 'ab', '|'), ('ab', '|', 'c'), ('|', 'c', 'A'), ('c', 'A', 'S'), ('A', 'S', 'c'), ('S', 'c', 'A'), ('c', 'A', 'S'), ('A', 'S', 'b'), ('S', 'b', 'c'), ('b', 'c', 'A'), ('c', 'A', 'S'), ('A', 'S', 'Parsing'), ('S', 'Parsing', 'done'), ('Parsing', 'done', 'Make'), ('done', 'Make', 'prediction'), ('Make', 'prediction', 'Backtrack'), ('prediction', 'Backtrack', 'Make'), ('Backtrack', 'Make', 'prediction'), ('Make', 'prediction', 'Prof.'), ('prediction', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Exercise'), ('›', 'Exercise', 'E\uf0e0'), ('Exercise', 'E\uf0e0', '5+T'), ('E\uf0e0', '5+T', '|'), ('5+T', '|', '3-T'), ('|', '3-T', 'T\uf0e0'), ('3-T', 'T\uf0e0', 'V'), ('T\uf0e0', 'V', '|'), ('V', '|', 'V'), ('|', 'V', '*'), ('V', '*', 'V'), ('*', 'V', '|'), ('V', '|', 'V+V'), ('|', 'V+V', 'V\uf0e0'), ('V+V', 'V\uf0e0', '|'), ('V\uf0e0', '|', 'b'), ('|', 'b', 'String'), ('b', 'String', ':'), ('String', ':', '3-a+b'), (':', '3-a+b', 'Prof.'), ('3-a+b', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'parsing'), ('predictive', 'parsing', ')'), ('parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'LL'), ('›', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parser'), (')', 'parser', '('), ('parser', '(', 'predictive'), ('(', 'predictive', 'parser'), ('predictive', 'parser', ')'), ('parser', ')', 'LL'), (')', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'non'), (')', 'non', 'recursive'), ('non', 'recursive', 'top'), ('recursive', 'top', 'parser'), ('top', 'parser', '.')]

>> POS Tags are: 
 [('Grammar', 'NN'), (':', ':'), ('S\uf0e0', 'NNP'), ('cAd', 'NN'), ('Input', 'NNP'), ('string', 'NN'), (':', ':'), ('cad', 'NN'), ('A\uf0e0', 'NNP'), ('ab', 'NN'), ('|', 'NNP'), ('c', 'VBZ'), ('A', 'NNP'), ('S', 'NNP'), ('c', 'VBZ'), ('A', 'NNP'), ('S', 'NNP'), ('b', 'NN'), ('c', 'NN'), ('A', 'NNP'), ('S', 'NNP'), ('Parsing', 'NNP'), ('done', 'VBN'), ('Make', 'NNP'), ('prediction', 'NN'), ('Backtrack', 'NNP'), ('Make', 'NNP'), ('prediction', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Exercise', 'NNP'), ('E\uf0e0', 'NNP'), ('5+T', 'CD'), ('|', 'NNP'), ('3-T', 'JJ'), ('T\uf0e0', 'NNP'), ('V', 'NNP'), ('|', 'NNP'), ('V', 'NNP'), ('*', 'NNP'), ('V', 'NNP'), ('|', 'NNP'), ('V+V', 'NNP'), ('V\uf0e0', 'NNP'), ('|', 'NNP'), ('b', 'NN'), ('String', 'NN'), (':', ':'), ('3-a+b', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('parsing', 'NN'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parser', 'NN'), ('(', '('), ('predictive', 'JJ'), ('parser', 'NN'), (')', ')'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('non', 'RB'), ('recursive', 'JJ'), ('top', 'JJ'), ('parser', 'NN'), ('.', '.')]

 (S
  (NP Grammar/NN)
  :/:
  (NP S/NNP cAd/NN Input/NNP string/NN)
  :/:
  (NP cad/NN A/NNP ab/NN |/NNP)
  c/VBZ
  (NP A/NNP S/NNP)
  c/VBZ
  (NP A/NNP S/NNP b/NN c/NN A/NNP S/NNP Parsing/NNP)
  done/VBN
  (NP
    Make/NNP
    prediction/NN
    Backtrack/NNP
    Make/NNP
    prediction/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Exercise/NNP E/NNP)
  5+T/CD
  (NP |/NNP)
  (NP
    3-T/JJ
    T/NNP
    V/NNP
    |/NNP
    V/NNP
    */NNP
    V/NNP
    |/NNP
    V+V/NNP
    V/NNP
    |/NNP
    b/NN
    String/NN)
  :/:
  (NP 3-a+b/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ parsing/NN)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ LL/NNP)
  (/(
  1/CD
  )/)
  (NP parser/NN)
  (/(
  (NP predictive/JJ parser/NN)
  )/)
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  non/RB
  (NP recursive/JJ top/JJ parser/NN)
  ./.) 


>> Noun Phrases are: 
 ['Grammar', 'S\uf0e0 cAd Input string', 'cad A\uf0e0 ab |', 'A S', 'A S b c A S Parsing', 'Make prediction Backtrack Make prediction Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Exercise E\uf0e0', '|', '3-T T\uf0e0 V | V * V | V+V V\uf0e0 | b String', '3-a+b Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› LL', 'parser', 'predictive parser', 'LL', 'recursive top parser']

>> Named Entities are: 
 [('GPE', 'Grammar'), ('PERSON', 'Input'), ('PERSON', 'Make'), ('PERSON', 'Backtrack Make'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('cAd', 'cad'), ('Input', 'input'), ('string', 'string'), (':', ':'), ('cad', 'cad'), ('A\uf0e0', 'a\uf0e0'), ('ab', 'ab'), ('|', '|'), ('c', 'c'), ('A', 'a'), ('S', 's'), ('c', 'c'), ('A', 'a'), ('S', 's'), ('b', 'b'), ('c', 'c'), ('A', 'a'), ('S', 's'), ('Parsing', 'pars'), ('done', 'done'), ('Make', 'make'), ('prediction', 'predict'), ('Backtrack', 'backtrack'), ('Make', 'make'), ('prediction', 'predict'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), ('E\uf0e0', 'e\uf0e0'), ('5+T', '5+t'), ('|', '|'), ('3-T', '3-t'), ('T\uf0e0', 't\uf0e0'), ('V', 'v'), ('|', '|'), ('V', 'v'), ('*', '*'), ('V', 'v'), ('|', '|'), ('V+V', 'v+v'), ('V\uf0e0', 'v\uf0e0'), ('|', '|'), ('b', 'b'), ('String', 'string'), (':', ':'), ('3-a+b', '3-a+b'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('(', '('), ('predictive', 'predict'), ('parser', 'parser'), (')', ')'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('non', 'non'), ('recursive', 'recurs'), ('top', 'top'), ('parser', 'parser'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0', 's\uf0e0'), ('cAd', 'cad'), ('Input', 'input'), ('string', 'string'), (':', ':'), ('cad', 'cad'), ('A\uf0e0', 'a\uf0e0'), ('ab', 'ab'), ('|', '|'), ('c', 'c'), ('A', 'a'), ('S', 's'), ('c', 'c'), ('A', 'a'), ('S', 's'), ('b', 'b'), ('c', 'c'), ('A', 'a'), ('S', 's'), ('Parsing', 'pars'), ('done', 'done'), ('Make', 'make'), ('prediction', 'predict'), ('Backtrack', 'backtrack'), ('Make', 'make'), ('prediction', 'predict'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'exercis'), ('E\uf0e0', 'e\uf0e0'), ('5+T', '5+t'), ('|', '|'), ('3-T', '3-t'), ('T\uf0e0', 't\uf0e0'), ('V', 'v'), ('|', '|'), ('V', 'v'), ('*', '*'), ('V', 'v'), ('|', '|'), ('V+V', 'v+v'), ('V\uf0e0', 'v\uf0e0'), ('|', '|'), ('b', 'b'), ('String', 'string'), (':', ':'), ('3-a+b', '3-a+b'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('(', '('), ('predictive', 'predict'), ('parser', 'parser'), (')', ')'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('non', 'non'), ('recursive', 'recurs'), ('top', 'top'), ('parser', 'parser'), ('.', '.')]

>> Lemmatization: 
 [('Grammar', 'Grammar'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('cAd', 'cAd'), ('Input', 'Input'), ('string', 'string'), (':', ':'), ('cad', 'cad'), ('A\uf0e0', 'A\uf0e0'), ('ab', 'ab'), ('|', '|'), ('c', 'c'), ('A', 'A'), ('S', 'S'), ('c', 'c'), ('A', 'A'), ('S', 'S'), ('b', 'b'), ('c', 'c'), ('A', 'A'), ('S', 'S'), ('Parsing', 'Parsing'), ('done', 'done'), ('Make', 'Make'), ('prediction', 'prediction'), ('Backtrack', 'Backtrack'), ('Make', 'Make'), ('prediction', 'prediction'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Exercise', 'Exercise'), ('E\uf0e0', 'E\uf0e0'), ('5+T', '5+T'), ('|', '|'), ('3-T', '3-T'), ('T\uf0e0', 'T\uf0e0'), ('V', 'V'), ('|', '|'), ('V', 'V'), ('*', '*'), ('V', 'V'), ('|', '|'), ('V+V', 'V+V'), ('V\uf0e0', 'V\uf0e0'), ('|', '|'), ('b', 'b'), ('String', 'String'), (':', ':'), ('3-a+b', '3-a+b'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('(', '('), ('predictive', 'predictive'), ('parser', 'parser'), (')', ')'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('non', 'non'), ('recursive', 'recursive'), ('top', 'top'), ('parser', 'parser'), ('.', '.')]



============================ Sentence 31 =============================

First L indicates input is scanned from left to right. 


>> Tokens are: 
 ['First', 'L', 'indicates', 'input', 'scanned', 'left', 'right', '.']

>> Bigrams are: 
 [('First', 'L'), ('L', 'indicates'), ('indicates', 'input'), ('input', 'scanned'), ('scanned', 'left'), ('left', 'right'), ('right', '.')]

>> Trigrams are: 
 [('First', 'L', 'indicates'), ('L', 'indicates', 'input'), ('indicates', 'input', 'scanned'), ('input', 'scanned', 'left'), ('scanned', 'left', 'right'), ('left', 'right', '.')]

>> POS Tags are: 
 [('First', 'NNP'), ('L', 'NNP'), ('indicates', 'VBZ'), ('input', 'NN'), ('scanned', 'VBD'), ('left', 'RB'), ('right', 'JJ'), ('.', '.')]

 (S
  (NP First/NNP L/NNP)
  indicates/VBZ
  (NP input/NN)
  scanned/VBD
  left/RB
  right/JJ
  ./.) 


>> Noun Phrases are: 
 ['First L', 'input']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('First', 'first'), ('L', 'l'), ('indicates', 'indic'), ('input', 'input'), ('scanned', 'scan'), ('left', 'left'), ('right', 'right'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('First', 'first'), ('L', 'l'), ('indicates', 'indic'), ('input', 'input'), ('scanned', 'scan'), ('left', 'left'), ('right', 'right'), ('.', '.')]

>> Lemmatization: 
 [('First', 'First'), ('L', 'L'), ('indicates', 'indicates'), ('input', 'input'), ('scanned', 'scanned'), ('left', 'left'), ('right', 'right'), ('.', '.')]



============================ Sentence 32 =============================

The second L means it uses leftmost derivation for input string   1 means it uses only input symbol to predict the parsing process. 


>> Tokens are: 
 ['The', 'second', 'L', 'means', 'uses', 'leftmost', 'derivation', 'input', 'string', '1', 'means', 'uses', 'input', 'symbol', 'predict', 'parsing', 'process', '.']

>> Bigrams are: 
 [('The', 'second'), ('second', 'L'), ('L', 'means'), ('means', 'uses'), ('uses', 'leftmost'), ('leftmost', 'derivation'), ('derivation', 'input'), ('input', 'string'), ('string', '1'), ('1', 'means'), ('means', 'uses'), ('uses', 'input'), ('input', 'symbol'), ('symbol', 'predict'), ('predict', 'parsing'), ('parsing', 'process'), ('process', '.')]

>> Trigrams are: 
 [('The', 'second', 'L'), ('second', 'L', 'means'), ('L', 'means', 'uses'), ('means', 'uses', 'leftmost'), ('uses', 'leftmost', 'derivation'), ('leftmost', 'derivation', 'input'), ('derivation', 'input', 'string'), ('input', 'string', '1'), ('string', '1', 'means'), ('1', 'means', 'uses'), ('means', 'uses', 'input'), ('uses', 'input', 'symbol'), ('input', 'symbol', 'predict'), ('symbol', 'predict', 'parsing'), ('predict', 'parsing', 'process'), ('parsing', 'process', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('second', 'JJ'), ('L', 'NNP'), ('means', 'VBZ'), ('uses', 'VBZ'), ('leftmost', 'JJ'), ('derivation', 'NN'), ('input', 'NN'), ('string', 'VBG'), ('1', 'CD'), ('means', 'NNS'), ('uses', 'VBZ'), ('input', 'JJ'), ('symbol', 'NN'), ('predict', 'NN'), ('parsing', 'VBG'), ('process', 'NN'), ('.', '.')]

 (S
  (NP The/DT second/JJ L/NNP)
  means/VBZ
  uses/VBZ
  (NP leftmost/JJ derivation/NN input/NN)
  string/VBG
  1/CD
  (NP means/NNS)
  uses/VBZ
  (NP input/JJ symbol/NN predict/NN)
  parsing/VBG
  (NP process/NN)
  ./.) 


>> Noun Phrases are: 
 ['The second L', 'leftmost derivation input', 'means', 'input symbol predict', 'process']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('second', 'second'), ('L', 'l'), ('means', 'mean'), ('uses', 'use'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('input', 'input'), ('string', 'string'), ('1', '1'), ('means', 'mean'), ('uses', 'use'), ('input', 'input'), ('symbol', 'symbol'), ('predict', 'predict'), ('parsing', 'pars'), ('process', 'process'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('second', 'second'), ('L', 'l'), ('means', 'mean'), ('uses', 'use'), ('leftmost', 'leftmost'), ('derivation', 'deriv'), ('input', 'input'), ('string', 'string'), ('1', '1'), ('means', 'mean'), ('uses', 'use'), ('input', 'input'), ('symbol', 'symbol'), ('predict', 'predict'), ('parsing', 'pars'), ('process', 'process'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('second', 'second'), ('L', 'L'), ('means', 'mean'), ('uses', 'us'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('input', 'input'), ('string', 'string'), ('1', '1'), ('means', 'mean'), ('uses', 'us'), ('input', 'input'), ('symbol', 'symbol'), ('predict', 'predict'), ('parsing', 'parsing'), ('process', 'process'), ('.', '.')]



============================ Sentence 33 =============================

Predictive parsing program Parsing table M INPUT OUTPUT   Stack  	a	+	b	$	  	X 	Y 	Z 	$     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  LL(1) parsing (predictive parsing) Steps to construct LL(1) parser Remove left recursion / Perform left factoring (if any). 


>> Tokens are: 
 ['Predictive', 'parsing', 'program', 'Parsing', 'table', 'M', 'INPUT', 'OUTPUT', 'Stack', '+', 'b', '$', 'X', 'Y', 'Z', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'LL', '(', '1', ')', 'parsing', '(', 'predictive', 'parsing', ')', 'Steps', 'construct', 'LL', '(', '1', ')', 'parser', 'Remove', 'left', 'recursion', '/', 'Perform', 'left', 'factoring', '(', ')', '.']

>> Bigrams are: 
 [('Predictive', 'parsing'), ('parsing', 'program'), ('program', 'Parsing'), ('Parsing', 'table'), ('table', 'M'), ('M', 'INPUT'), ('INPUT', 'OUTPUT'), ('OUTPUT', 'Stack'), ('Stack', '+'), ('+', 'b'), ('b', '$'), ('$', 'X'), ('X', 'Y'), ('Y', 'Z'), ('Z', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', '('), ('(', 'predictive'), ('predictive', 'parsing'), ('parsing', ')'), (')', 'Steps'), ('Steps', 'construct'), ('construct', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parser'), ('parser', 'Remove'), ('Remove', 'left'), ('left', 'recursion'), ('recursion', '/'), ('/', 'Perform'), ('Perform', 'left'), ('left', 'factoring'), ('factoring', '('), ('(', ')'), (')', '.')]

>> Trigrams are: 
 [('Predictive', 'parsing', 'program'), ('parsing', 'program', 'Parsing'), ('program', 'Parsing', 'table'), ('Parsing', 'table', 'M'), ('table', 'M', 'INPUT'), ('M', 'INPUT', 'OUTPUT'), ('INPUT', 'OUTPUT', 'Stack'), ('OUTPUT', 'Stack', '+'), ('Stack', '+', 'b'), ('+', 'b', '$'), ('b', '$', 'X'), ('$', 'X', 'Y'), ('X', 'Y', 'Z'), ('Y', 'Z', '$'), ('Z', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'LL'), ('›', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', '('), ('parsing', '(', 'predictive'), ('(', 'predictive', 'parsing'), ('predictive', 'parsing', ')'), ('parsing', ')', 'Steps'), (')', 'Steps', 'construct'), ('Steps', 'construct', 'LL'), ('construct', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parser'), (')', 'parser', 'Remove'), ('parser', 'Remove', 'left'), ('Remove', 'left', 'recursion'), ('left', 'recursion', '/'), ('recursion', '/', 'Perform'), ('/', 'Perform', 'left'), ('Perform', 'left', 'factoring'), ('left', 'factoring', '('), ('factoring', '(', ')'), ('(', ')', '.')]

>> POS Tags are: 
 [('Predictive', 'JJ'), ('parsing', 'VBG'), ('program', 'NN'), ('Parsing', 'NNP'), ('table', 'NN'), ('M', 'NNP'), ('INPUT', 'NNP'), ('OUTPUT', 'NNP'), ('Stack', 'NNP'), ('+', 'NNP'), ('b', 'VBD'), ('$', '$'), ('X', 'NNP'), ('Y', 'NNP'), ('Z', 'NNP'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'NN'), ('(', '('), ('predictive', 'JJ'), ('parsing', 'NN'), (')', ')'), ('Steps', 'NNP'), ('construct', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parser', 'NN'), ('Remove', 'NNP'), ('left', 'VBD'), ('recursion', 'NN'), ('/', 'NN'), ('Perform', 'NNP'), ('left', 'VBD'), ('factoring', 'VBG'), ('(', '('), (')', ')'), ('.', '.')]

 (S
  Predictive/JJ
  parsing/VBG
  (NP
    program/NN
    Parsing/NNP
    table/NN
    M/NNP
    INPUT/NNP
    OUTPUT/NNP
    Stack/NNP
    +/NNP)
  b/VBD
  $/$
  (NP X/NNP Y/NNP Z/NNP)
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ LL/NNP)
  (/(
  1/CD
  )/)
  (NP parsing/NN)
  (/(
  (NP predictive/JJ parsing/NN)
  )/)
  (NP Steps/NNP construct/NN LL/NNP)
  (/(
  1/CD
  )/)
  (NP parser/NN Remove/NNP)
  left/VBD
  (NP recursion/NN //NN Perform/NNP)
  left/VBD
  factoring/VBG
  (/(
  )/)
  ./.) 


>> Noun Phrases are: 
 ['program Parsing table M INPUT OUTPUT Stack +', 'X Y Z', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› LL', 'parsing', 'predictive parsing', 'Steps construct LL', 'parser Remove', 'recursion / Perform']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Steps'), ('PERSON', 'Remove'), ('PERSON', 'Perform')] 

>> Stemming using Porter Stemmer: 
 [('Predictive', 'predict'), ('parsing', 'pars'), ('program', 'program'), ('Parsing', 'pars'), ('table', 'tabl'), ('M', 'm'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('Stack', 'stack'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'x'), ('Y', 'y'), ('Z', 'z'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('Steps', 'step'), ('construct', 'construct'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('Remove', 'remov'), ('left', 'left'), ('recursion', 'recurs'), ('/', '/'), ('Perform', 'perform'), ('left', 'left'), ('factoring', 'factor'), ('(', '('), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Predictive', 'predict'), ('parsing', 'pars'), ('program', 'program'), ('Parsing', 'pars'), ('table', 'tabl'), ('M', 'm'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('Stack', 'stack'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'x'), ('Y', 'y'), ('Z', 'z'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('Steps', 'step'), ('construct', 'construct'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('Remove', 'remov'), ('left', 'left'), ('recursion', 'recurs'), ('/', '/'), ('Perform', 'perform'), ('left', 'left'), ('factoring', 'factor'), ('(', '('), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Predictive', 'Predictive'), ('parsing', 'parsing'), ('program', 'program'), ('Parsing', 'Parsing'), ('table', 'table'), ('M', 'M'), ('INPUT', 'INPUT'), ('OUTPUT', 'OUTPUT'), ('Stack', 'Stack'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('Steps', 'Steps'), ('construct', 'construct'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('Remove', 'Remove'), ('left', 'left'), ('recursion', 'recursion'), ('/', '/'), ('Perform', 'Perform'), ('left', 'left'), ('factoring', 'factoring'), ('(', '('), (')', ')'), ('.', '.')]



============================ Sentence 34 =============================

Compute FIRST and FOLLOW of non terminals. 


>> Tokens are: 
 ['Compute', 'FIRST', 'FOLLOW', 'non', 'terminals', '.']

>> Bigrams are: 
 [('Compute', 'FIRST'), ('FIRST', 'FOLLOW'), ('FOLLOW', 'non'), ('non', 'terminals'), ('terminals', '.')]

>> Trigrams are: 
 [('Compute', 'FIRST', 'FOLLOW'), ('FIRST', 'FOLLOW', 'non'), ('FOLLOW', 'non', 'terminals'), ('non', 'terminals', '.')]

>> POS Tags are: 
 [('Compute', 'NNP'), ('FIRST', 'NNP'), ('FOLLOW', 'NNP'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')]

 (S (NP Compute/NNP FIRST/NNP FOLLOW/NNP non/NN terminals/NNS) ./.) 


>> Noun Phrases are: 
 ['Compute FIRST FOLLOW non terminals']

>> Named Entities are: 
 [('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST')] 

>> Stemming using Porter Stemmer: 
 [('Compute', 'comput'), ('FIRST', 'first'), ('FOLLOW', 'follow'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Compute', 'comput'), ('FIRST', 'first'), ('FOLLOW', 'follow'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Compute', 'Compute'), ('FIRST', 'FIRST'), ('FOLLOW', 'FOLLOW'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')]



============================ Sentence 35 =============================

Construct predictive parsing table. 


>> Tokens are: 
 ['Construct', 'predictive', 'parsing', 'table', '.']

>> Bigrams are: 
 [('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', '.')]

>> Trigrams are: 
 [('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', '.')]

>> POS Tags are: 
 [('Construct', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('.', '.')]

 (S (NP Construct/NNP) (NP predictive/JJ parsing/NN table/NN) ./.) 


>> Noun Phrases are: 
 ['Construct', 'predictive parsing table']

>> Named Entities are: 
 [('GSP', 'Construct')] 

>> Stemming using Porter Stemmer: 
 [('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('.', '.')]

>> Lemmatization: 
 [('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('.', '.')]



============================ Sentence 36 =============================

Parse the input string using parsing table. 


>> Tokens are: 
 ['Parse', 'input', 'string', 'using', 'parsing', 'table', '.']

>> Bigrams are: 
 [('Parse', 'input'), ('input', 'string'), ('string', 'using'), ('using', 'parsing'), ('parsing', 'table'), ('table', '.')]

>> Trigrams are: 
 [('Parse', 'input', 'string'), ('input', 'string', 'using'), ('string', 'using', 'parsing'), ('using', 'parsing', 'table'), ('parsing', 'table', '.')]

>> POS Tags are: 
 [('Parse', 'NNP'), ('input', 'NN'), ('string', 'VBG'), ('using', 'VBG'), ('parsing', 'VBG'), ('table', 'NN'), ('.', '.')]

 (S
  (NP Parse/NNP input/NN)
  string/VBG
  using/VBG
  parsing/VBG
  (NP table/NN)
  ./.) 


>> Noun Phrases are: 
 ['Parse input', 'table']

>> Named Entities are: 
 [('GPE', 'Parse')] 

>> Stemming using Porter Stemmer: 
 [('Parse', 'pars'), ('input', 'input'), ('string', 'string'), ('using', 'use'), ('parsing', 'pars'), ('table', 'tabl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Parse', 'pars'), ('input', 'input'), ('string', 'string'), ('using', 'use'), ('parsing', 'pars'), ('table', 'tabl'), ('.', '.')]

>> Lemmatization: 
 [('Parse', 'Parse'), ('input', 'input'), ('string', 'string'), ('using', 'using'), ('parsing', 'parsing'), ('table', 'table'), ('.', '.')]



============================ Sentence 37 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to compute first of non terminal If and  is terminal, add  to . 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rules', 'compute', 'first', 'non', 'terminal', 'If', 'terminal', ',', 'add', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rules'), ('Rules', 'compute'), ('compute', 'first'), ('first', 'non'), ('non', 'terminal'), ('terminal', 'If'), ('If', 'terminal'), ('terminal', ','), (',', 'add'), ('add', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rules'), ('›', 'Rules', 'compute'), ('Rules', 'compute', 'first'), ('compute', 'first', 'non'), ('first', 'non', 'terminal'), ('non', 'terminal', 'If'), ('terminal', 'If', 'terminal'), ('If', 'terminal', ','), ('terminal', ',', 'add'), (',', 'add', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Rules', 'NNP'), ('compute', 'NN'), ('first', 'RB'), ('non', 'JJ'), ('terminal', 'NN'), ('If', 'IN'), ('terminal', 'JJ'), (',', ','), ('add', 'VB'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Rules/NNP compute/NN)
  first/RB
  (NP non/JJ terminal/NN)
  If/IN
  terminal/JJ
  ,/,
  add/VB
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rules compute', 'non terminal']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Rules')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('compute', 'comput'), ('first', 'first'), ('non', 'non'), ('terminal', 'termin'), ('If', 'if'), ('terminal', 'termin'), (',', ','), ('add', 'add'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('compute', 'comput'), ('first', 'first'), ('non', 'non'), ('terminal', 'termin'), ('If', 'if'), ('terminal', 'termin'), (',', ','), ('add', 'add'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'Rules'), ('compute', 'compute'), ('first', 'first'), ('non', 'non'), ('terminal', 'terminal'), ('If', 'If'), ('terminal', 'terminal'), (',', ','), ('add', 'add'), ('.', '.')]



============================ Sentence 38 =============================

If , add to . 


>> Tokens are: 
 ['If', ',', 'add', '.']

>> Bigrams are: 
 [('If', ','), (',', 'add'), ('add', '.')]

>> Trigrams are: 
 [('If', ',', 'add'), (',', 'add', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), ('add', 'VBP'), ('.', '.')]

 (S If/IN ,/, add/VBP ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), ('add', 'add'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), ('add', 'add'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), ('add', 'add'), ('.', '.')]



============================ Sentence 39 =============================

If  is nonterminal and is a production, then place  in  if for some , a is in , and 𝜖 is in all of that is . 


>> Tokens are: 
 ['If', 'nonterminal', 'production', ',', 'place', ',', ',', '𝜖', '.']

>> Bigrams are: 
 [('If', 'nonterminal'), ('nonterminal', 'production'), ('production', ','), (',', 'place'), ('place', ','), (',', ','), (',', '𝜖'), ('𝜖', '.')]

>> Trigrams are: 
 [('If', 'nonterminal', 'production'), ('nonterminal', 'production', ','), ('production', ',', 'place'), (',', 'place', ','), ('place', ',', ','), (',', ',', '𝜖'), (',', '𝜖', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('nonterminal', 'JJ'), ('production', 'NN'), (',', ','), ('place', 'NN'), (',', ','), (',', ','), ('𝜖', 'UH'), ('.', '.')]

 (S
  If/IN
  (NP nonterminal/JJ production/NN)
  ,/,
  (NP place/NN)
  ,/,
  ,/,
  𝜖/UH
  ./.) 


>> Noun Phrases are: 
 ['nonterminal production', 'place']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('nonterminal', 'nontermin'), ('production', 'product'), (',', ','), ('place', 'place'), (',', ','), (',', ','), ('𝜖', '𝜖'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('nonterminal', 'nontermin'), ('production', 'product'), (',', ','), ('place', 'place'), (',', ','), (',', ','), ('𝜖', '𝜖'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('nonterminal', 'nonterminal'), ('production', 'production'), (',', ','), ('place', 'place'), (',', ','), (',', ','), ('𝜖', '𝜖'), ('.', '.')]



============================ Sentence 40 =============================

If 𝜖 is in  for all then add 𝜖 to . 


>> Tokens are: 
 ['If', '𝜖', 'add', '𝜖', '.']

>> Bigrams are: 
 [('If', '𝜖'), ('𝜖', 'add'), ('add', '𝜖'), ('𝜖', '.')]

>> Trigrams are: 
 [('If', '𝜖', 'add'), ('𝜖', 'add', '𝜖'), ('add', '𝜖', '.')]

>> POS Tags are: 
 [('If', 'IN'), ('𝜖', 'JJ'), ('add', 'VBP'), ('𝜖', 'NNS'), ('.', '.')]

 (S If/IN 𝜖/JJ add/VBP (NP 𝜖/NNS) ./.) 


>> Noun Phrases are: 
 ['𝜖']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('𝜖', '𝜖'), ('add', 'add'), ('𝜖', '𝜖'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('𝜖', '𝜖'), ('add', 'add'), ('𝜖', '𝜖'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), ('𝜖', '𝜖'), ('add', 'add'), ('𝜖', '𝜖'), ('.', '.')]



============================ Sentence 41 =============================

Everything in  is surely in  If  does not derive 𝜖, then we do nothing more to , but if , then we add  and so on. 


>> Tokens are: 
 ['Everything', 'surely', 'If', 'derive', '𝜖', ',', 'nothing', ',', ',', 'add', '.']

>> Bigrams are: 
 [('Everything', 'surely'), ('surely', 'If'), ('If', 'derive'), ('derive', '𝜖'), ('𝜖', ','), (',', 'nothing'), ('nothing', ','), (',', ','), (',', 'add'), ('add', '.')]

>> Trigrams are: 
 [('Everything', 'surely', 'If'), ('surely', 'If', 'derive'), ('If', 'derive', '𝜖'), ('derive', '𝜖', ','), ('𝜖', ',', 'nothing'), (',', 'nothing', ','), ('nothing', ',', ','), (',', ',', 'add'), (',', 'add', '.')]

>> POS Tags are: 
 [('Everything', 'NN'), ('surely', 'RB'), ('If', 'IN'), ('derive', 'JJ'), ('𝜖', 'NN'), (',', ','), ('nothing', 'NN'), (',', ','), (',', ','), ('add', 'VBP'), ('.', '.')]

 (S
  (NP Everything/NN)
  surely/RB
  If/IN
  (NP derive/JJ 𝜖/NN)
  ,/,
  (NP nothing/NN)
  ,/,
  ,/,
  add/VBP
  ./.) 


>> Noun Phrases are: 
 ['Everything', 'derive 𝜖', 'nothing']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Everything', 'everyth'), ('surely', 'sure'), ('If', 'if'), ('derive', 'deriv'), ('𝜖', '𝜖'), (',', ','), ('nothing', 'noth'), (',', ','), (',', ','), ('add', 'add'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Everything', 'everyth'), ('surely', 'sure'), ('If', 'if'), ('derive', 'deriv'), ('𝜖', '𝜖'), (',', ','), ('nothing', 'noth'), (',', ','), (',', ','), ('add', 'add'), ('.', '.')]

>> Lemmatization: 
 [('Everything', 'Everything'), ('surely', 'surely'), ('If', 'If'), ('derive', 'derive'), ('𝜖', '𝜖'), (',', ','), ('nothing', 'nothing'), (',', ','), (',', ','), ('add', 'add'), ('.', '.')]



============================ Sentence 42 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to compute first of non terminal Simplification of Rule 3 If  ,   If  does not derives   If  derives     If  & Y2 derives ∈   If  , Y2 & Y3 derives ∈  If  , Y2 , Y3 …..YK all derives ∈  (note: if all non terminals derives ∈ then add ∈ to FIRST(A))     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to compute FOLLOW of non terminal Place S is start symbol) If then everything in  except for 𝜖 is placed in   If there is a production or a production  where  contains  then everything in     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  How to apply rules to find FOLLOW of non terminal? 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rules', 'compute', 'first', 'non', 'terminal', 'Simplification', 'Rule', '3', 'If', ',', 'If', 'derives', 'If', 'derives', 'If', '&', 'Y2', 'derives', '∈', 'If', ',', 'Y2', '&', 'Y3', 'derives', '∈', 'If', ',', 'Y2', ',', 'Y3', '…', '..', 'YK', 'derives', '∈', '(', 'note', ':', 'non', 'terminals', 'derives', '∈', 'add', '∈', 'FIRST', '(', 'A', ')', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rules', 'compute', 'FOLLOW', 'non', 'terminal', 'Place', 'S', 'start', 'symbol', ')', 'If', 'everything', 'except', '𝜖', 'placed', 'If', 'production', 'production', 'contains', 'everything', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'How', 'apply', 'rules', 'find', 'FOLLOW', 'non', 'terminal', '?']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rules'), ('Rules', 'compute'), ('compute', 'first'), ('first', 'non'), ('non', 'terminal'), ('terminal', 'Simplification'), ('Simplification', 'Rule'), ('Rule', '3'), ('3', 'If'), ('If', ','), (',', 'If'), ('If', 'derives'), ('derives', 'If'), ('If', 'derives'), ('derives', 'If'), ('If', '&'), ('&', 'Y2'), ('Y2', 'derives'), ('derives', '∈'), ('∈', 'If'), ('If', ','), (',', 'Y2'), ('Y2', '&'), ('&', 'Y3'), ('Y3', 'derives'), ('derives', '∈'), ('∈', 'If'), ('If', ','), (',', 'Y2'), ('Y2', ','), (',', 'Y3'), ('Y3', '…'), ('…', '..'), ('..', 'YK'), ('YK', 'derives'), ('derives', '∈'), ('∈', '('), ('(', 'note'), ('note', ':'), (':', 'non'), ('non', 'terminals'), ('terminals', 'derives'), ('derives', '∈'), ('∈', 'add'), ('add', '∈'), ('∈', 'FIRST'), ('FIRST', '('), ('(', 'A'), ('A', ')'), (')', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rules'), ('Rules', 'compute'), ('compute', 'FOLLOW'), ('FOLLOW', 'non'), ('non', 'terminal'), ('terminal', 'Place'), ('Place', 'S'), ('S', 'start'), ('start', 'symbol'), ('symbol', ')'), (')', 'If'), ('If', 'everything'), ('everything', 'except'), ('except', '𝜖'), ('𝜖', 'placed'), ('placed', 'If'), ('If', 'production'), ('production', 'production'), ('production', 'contains'), ('contains', 'everything'), ('everything', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'How'), ('How', 'apply'), ('apply', 'rules'), ('rules', 'find'), ('find', 'FOLLOW'), ('FOLLOW', 'non'), ('non', 'terminal'), ('terminal', '?')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rules'), ('›', 'Rules', 'compute'), ('Rules', 'compute', 'first'), ('compute', 'first', 'non'), ('first', 'non', 'terminal'), ('non', 'terminal', 'Simplification'), ('terminal', 'Simplification', 'Rule'), ('Simplification', 'Rule', '3'), ('Rule', '3', 'If'), ('3', 'If', ','), ('If', ',', 'If'), (',', 'If', 'derives'), ('If', 'derives', 'If'), ('derives', 'If', 'derives'), ('If', 'derives', 'If'), ('derives', 'If', '&'), ('If', '&', 'Y2'), ('&', 'Y2', 'derives'), ('Y2', 'derives', '∈'), ('derives', '∈', 'If'), ('∈', 'If', ','), ('If', ',', 'Y2'), (',', 'Y2', '&'), ('Y2', '&', 'Y3'), ('&', 'Y3', 'derives'), ('Y3', 'derives', '∈'), ('derives', '∈', 'If'), ('∈', 'If', ','), ('If', ',', 'Y2'), (',', 'Y2', ','), ('Y2', ',', 'Y3'), (',', 'Y3', '…'), ('Y3', '…', '..'), ('…', '..', 'YK'), ('..', 'YK', 'derives'), ('YK', 'derives', '∈'), ('derives', '∈', '('), ('∈', '(', 'note'), ('(', 'note', ':'), ('note', ':', 'non'), (':', 'non', 'terminals'), ('non', 'terminals', 'derives'), ('terminals', 'derives', '∈'), ('derives', '∈', 'add'), ('∈', 'add', '∈'), ('add', '∈', 'FIRST'), ('∈', 'FIRST', '('), ('FIRST', '(', 'A'), ('(', 'A', ')'), ('A', ')', ')'), (')', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rules'), ('›', 'Rules', 'compute'), ('Rules', 'compute', 'FOLLOW'), ('compute', 'FOLLOW', 'non'), ('FOLLOW', 'non', 'terminal'), ('non', 'terminal', 'Place'), ('terminal', 'Place', 'S'), ('Place', 'S', 'start'), ('S', 'start', 'symbol'), ('start', 'symbol', ')'), ('symbol', ')', 'If'), (')', 'If', 'everything'), ('If', 'everything', 'except'), ('everything', 'except', '𝜖'), ('except', '𝜖', 'placed'), ('𝜖', 'placed', 'If'), ('placed', 'If', 'production'), ('If', 'production', 'production'), ('production', 'production', 'contains'), ('production', 'contains', 'everything'), ('contains', 'everything', 'Prof.'), ('everything', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'How'), ('›', 'How', 'apply'), ('How', 'apply', 'rules'), ('apply', 'rules', 'find'), ('rules', 'find', 'FOLLOW'), ('find', 'FOLLOW', 'non'), ('FOLLOW', 'non', 'terminal'), ('non', 'terminal', '?')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Rules', 'NNP'), ('compute', 'NN'), ('first', 'RB'), ('non', 'JJ'), ('terminal', 'JJ'), ('Simplification', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('If', 'IN'), (',', ','), ('If', 'IN'), ('derives', 'NNS'), ('If', 'IN'), ('derives', 'NNS'), ('If', 'IN'), ('&', 'CC'), ('Y2', 'NNP'), ('derives', 'VBZ'), ('∈', 'RB'), ('If', 'IN'), (',', ','), ('Y2', 'NNP'), ('&', 'CC'), ('Y3', 'NNP'), ('derives', 'VBZ'), ('∈', 'RB'), ('If', 'IN'), (',', ','), ('Y2', 'NNP'), (',', ','), ('Y3', 'NNP'), ('…', 'NNP'), ('..', 'NNP'), ('YK', 'NNP'), ('derives', 'VBZ'), ('∈', 'NNP'), ('(', '('), ('note', 'NN'), (':', ':'), ('non', 'NN'), ('terminals', 'NNS'), ('derives', 'VBZ'), ('∈', 'JJ'), ('add', 'VB'), ('∈', 'NNP'), ('FIRST', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Rules', 'NNP'), ('compute', 'NN'), ('FOLLOW', 'NNP'), ('non', 'VBZ'), ('terminal', 'JJ'), ('Place', 'NNP'), ('S', 'NNP'), ('start', 'VB'), ('symbol', 'NN'), (')', ')'), ('If', 'IN'), ('everything', 'NN'), ('except', 'IN'), ('𝜖', 'NN'), ('placed', 'VBN'), ('If', 'IN'), ('production', 'NN'), ('production', 'NN'), ('contains', 'VBZ'), ('everything', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('How', 'NNP'), ('apply', 'VB'), ('rules', 'NNS'), ('find', 'VBP'), ('FOLLOW', 'NNP'), ('non', 'FW'), ('terminal', 'NN'), ('?', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Rules/NNP compute/NN)
  first/RB
  (NP non/JJ terminal/JJ Simplification/NNP Rule/NNP)
  3/CD
  If/IN
  ,/,
  If/IN
  (NP derives/NNS)
  If/IN
  (NP derives/NNS)
  If/IN
  &/CC
  (NP Y2/NNP)
  derives/VBZ
  ∈/RB
  If/IN
  ,/,
  (NP Y2/NNP)
  &/CC
  (NP Y3/NNP)
  derives/VBZ
  ∈/RB
  If/IN
  ,/,
  (NP Y2/NNP)
  ,/,
  (NP Y3/NNP …/NNP ../NNP YK/NNP)
  derives/VBZ
  (NP ∈/NNP)
  (/(
  (NP note/NN)
  :/:
  (NP non/NN terminals/NNS)
  derives/VBZ
  ∈/JJ
  add/VB
  (NP ∈/NNP FIRST/NNP)
  (/(
  (NP A/NNP)
  )/)
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Rules/NNP compute/NN FOLLOW/NNP)
  non/VBZ
  (NP terminal/JJ Place/NNP S/NNP)
  start/VB
  (NP symbol/NN)
  )/)
  If/IN
  (NP everything/NN)
  except/IN
  (NP 𝜖/NN)
  placed/VBN
  If/IN
  (NP production/NN production/NN)
  contains/VBZ
  (NP everything/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP How/NNP)
  apply/VB
  (NP rules/NNS)
  find/VBP
  (NP FOLLOW/NNP)
  non/FW
  (NP terminal/NN)
  ?/.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rules compute', 'non terminal Simplification Rule', 'derives', 'derives', 'Y2', 'Y2', 'Y3', 'Y2', 'Y3 … .. YK', '∈', 'note', 'non terminals', '∈ FIRST', 'A', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rules compute FOLLOW', 'terminal Place S', 'symbol', 'everything', '𝜖', 'production production', 'everything Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› How', 'rules', 'FOLLOW', 'terminal']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Rules'), ('GPE', 'Y2'), ('PERSON', 'Y3'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Rules'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'FOLLOW')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('compute', 'comput'), ('first', 'first'), ('non', 'non'), ('terminal', 'termin'), ('Simplification', 'simplif'), ('Rule', 'rule'), ('3', '3'), ('If', 'if'), (',', ','), ('If', 'if'), ('derives', 'deriv'), ('If', 'if'), ('derives', 'deriv'), ('If', 'if'), ('&', '&'), ('Y2', 'y2'), ('derives', 'deriv'), ('∈', '∈'), ('If', 'if'), (',', ','), ('Y2', 'y2'), ('&', '&'), ('Y3', 'y3'), ('derives', 'deriv'), ('∈', '∈'), ('If', 'if'), (',', ','), ('Y2', 'y2'), (',', ','), ('Y3', 'y3'), ('…', '…'), ('..', '..'), ('YK', 'yk'), ('derives', 'deriv'), ('∈', '∈'), ('(', '('), ('note', 'note'), (':', ':'), ('non', 'non'), ('terminals', 'termin'), ('derives', 'deriv'), ('∈', '∈'), ('add', 'add'), ('∈', '∈'), ('FIRST', 'first'), ('(', '('), ('A', 'a'), (')', ')'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('compute', 'comput'), ('FOLLOW', 'follow'), ('non', 'non'), ('terminal', 'termin'), ('Place', 'place'), ('S', 's'), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('If', 'if'), ('everything', 'everyth'), ('except', 'except'), ('𝜖', '𝜖'), ('placed', 'place'), ('If', 'if'), ('production', 'product'), ('production', 'product'), ('contains', 'contain'), ('everything', 'everyth'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('How', 'how'), ('apply', 'appli'), ('rules', 'rule'), ('find', 'find'), ('FOLLOW', 'follow'), ('non', 'non'), ('terminal', 'termin'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('compute', 'comput'), ('first', 'first'), ('non', 'non'), ('terminal', 'termin'), ('Simplification', 'simplif'), ('Rule', 'rule'), ('3', '3'), ('If', 'if'), (',', ','), ('If', 'if'), ('derives', 'deriv'), ('If', 'if'), ('derives', 'deriv'), ('If', 'if'), ('&', '&'), ('Y2', 'y2'), ('derives', 'deriv'), ('∈', '∈'), ('If', 'if'), (',', ','), ('Y2', 'y2'), ('&', '&'), ('Y3', 'y3'), ('derives', 'deriv'), ('∈', '∈'), ('If', 'if'), (',', ','), ('Y2', 'y2'), (',', ','), ('Y3', 'y3'), ('…', '…'), ('..', '..'), ('YK', 'yk'), ('derives', 'deriv'), ('∈', '∈'), ('(', '('), ('note', 'note'), (':', ':'), ('non', 'non'), ('terminals', 'termin'), ('derives', 'deriv'), ('∈', '∈'), ('add', 'add'), ('∈', '∈'), ('FIRST', 'first'), ('(', '('), ('A', 'a'), (')', ')'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('compute', 'comput'), ('FOLLOW', 'follow'), ('non', 'non'), ('terminal', 'termin'), ('Place', 'place'), ('S', 's'), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('If', 'if'), ('everything', 'everyth'), ('except', 'except'), ('𝜖', '𝜖'), ('placed', 'place'), ('If', 'if'), ('production', 'product'), ('production', 'product'), ('contains', 'contain'), ('everything', 'everyth'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('How', 'how'), ('apply', 'appli'), ('rules', 'rule'), ('find', 'find'), ('FOLLOW', 'follow'), ('non', 'non'), ('terminal', 'termin'), ('?', '?')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'Rules'), ('compute', 'compute'), ('first', 'first'), ('non', 'non'), ('terminal', 'terminal'), ('Simplification', 'Simplification'), ('Rule', 'Rule'), ('3', '3'), ('If', 'If'), (',', ','), ('If', 'If'), ('derives', 'derives'), ('If', 'If'), ('derives', 'derives'), ('If', 'If'), ('&', '&'), ('Y2', 'Y2'), ('derives', 'derives'), ('∈', '∈'), ('If', 'If'), (',', ','), ('Y2', 'Y2'), ('&', '&'), ('Y3', 'Y3'), ('derives', 'derives'), ('∈', '∈'), ('If', 'If'), (',', ','), ('Y2', 'Y2'), (',', ','), ('Y3', 'Y3'), ('…', '…'), ('..', '..'), ('YK', 'YK'), ('derives', 'derives'), ('∈', '∈'), ('(', '('), ('note', 'note'), (':', ':'), ('non', 'non'), ('terminals', 'terminal'), ('derives', 'derives'), ('∈', '∈'), ('add', 'add'), ('∈', '∈'), ('FIRST', 'FIRST'), ('(', '('), ('A', 'A'), (')', ')'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'Rules'), ('compute', 'compute'), ('FOLLOW', 'FOLLOW'), ('non', 'non'), ('terminal', 'terminal'), ('Place', 'Place'), ('S', 'S'), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('If', 'If'), ('everything', 'everything'), ('except', 'except'), ('𝜖', '𝜖'), ('placed', 'placed'), ('If', 'If'), ('production', 'production'), ('production', 'production'), ('contains', 'contains'), ('everything', 'everything'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('How', 'How'), ('apply', 'apply'), ('rules', 'rule'), ('find', 'find'), ('FOLLOW', 'FOLLOW'), ('non', 'non'), ('terminal', 'terminal'), ('?', '?')]



============================ Sentence 43 =============================

𝜖  𝜖      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to construct predictive parsing table For each production  of the grammar, do steps 2 and 3. 


>> Tokens are: 
 ['𝜖', '𝜖', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rules', 'construct', 'predictive', 'parsing', 'table', 'For', 'production', 'grammar', ',', 'steps', '2', '3', '.']

>> Bigrams are: 
 [('𝜖', '𝜖'), ('𝜖', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rules'), ('Rules', 'construct'), ('construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'For'), ('For', 'production'), ('production', 'grammar'), ('grammar', ','), (',', 'steps'), ('steps', '2'), ('2', '3'), ('3', '.')]

>> Trigrams are: 
 [('𝜖', '𝜖', 'Prof.'), ('𝜖', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rules'), ('›', 'Rules', 'construct'), ('Rules', 'construct', 'predictive'), ('construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'For'), ('table', 'For', 'production'), ('For', 'production', 'grammar'), ('production', 'grammar', ','), ('grammar', ',', 'steps'), (',', 'steps', '2'), ('steps', '2', '3'), ('2', '3', '.')]

>> POS Tags are: 
 [('𝜖', 'JJ'), ('𝜖', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Rules', 'NNP'), ('construct', 'NN'), ('predictive', 'NN'), ('parsing', 'NN'), ('table', 'NN'), ('For', 'IN'), ('production', 'NN'), ('grammar', 'NN'), (',', ','), ('steps', 'VBZ'), ('2', 'CD'), ('3', 'CD'), ('.', '.')]

 (S
  (NP 𝜖/JJ 𝜖/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Rules/NNP construct/NN predictive/NN parsing/NN table/NN)
  For/IN
  (NP production/NN grammar/NN)
  ,/,
  steps/VBZ
  2/CD
  3/CD
  ./.) 


>> Noun Phrases are: 
 ['𝜖 𝜖 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rules construct predictive parsing table', 'production grammar']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Rules')] 

>> Stemming using Porter Stemmer: 
 [('𝜖', '𝜖'), ('𝜖', '𝜖'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('For', 'for'), ('production', 'product'), ('grammar', 'grammar'), (',', ','), ('steps', 'step'), ('2', '2'), ('3', '3'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('𝜖', '𝜖'), ('𝜖', '𝜖'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('For', 'for'), ('production', 'product'), ('grammar', 'grammar'), (',', ','), ('steps', 'step'), ('2', '2'), ('3', '3'), ('.', '.')]

>> Lemmatization: 
 [('𝜖', '𝜖'), ('𝜖', '𝜖'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'Rules'), ('construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('For', 'For'), ('production', 'production'), ('grammar', 'grammar'), (',', ','), ('steps', 'step'), ('2', '2'), ('3', '3'), ('.', '.')]



============================ Sentence 44 =============================

For each terminal  in , Add  to . 


>> Tokens are: 
 ['For', 'terminal', ',', 'Add', '.']

>> Bigrams are: 
 [('For', 'terminal'), ('terminal', ','), (',', 'Add'), ('Add', '.')]

>> Trigrams are: 
 [('For', 'terminal', ','), ('terminal', ',', 'Add'), (',', 'Add', '.')]

>> POS Tags are: 
 [('For', 'IN'), ('terminal', 'JJ'), (',', ','), ('Add', 'NNP'), ('.', '.')]

 (S For/IN terminal/JJ ,/, (NP Add/NNP) ./.) 


>> Noun Phrases are: 
 ['Add']

>> Named Entities are: 
 [('PERSON', 'Add')] 

>> Stemming using Porter Stemmer: 
 [('For', 'for'), ('terminal', 'termin'), (',', ','), ('Add', 'add'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('For', 'for'), ('terminal', 'termin'), (',', ','), ('Add', 'add'), ('.', '.')]

>> Lemmatization: 
 [('For', 'For'), ('terminal', 'terminal'), (',', ','), ('Add', 'Add'), ('.', '.')]



============================ Sentence 45 =============================

If  is in , Add  to  for each terminal  in . 


>> Tokens are: 
 ['If', ',', 'Add', 'terminal', '.']

>> Bigrams are: 
 [('If', ','), (',', 'Add'), ('Add', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('If', ',', 'Add'), (',', 'Add', 'terminal'), ('Add', 'terminal', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), ('Add', 'NNP'), ('terminal', 'NN'), ('.', '.')]

 (S If/IN ,/, (NP Add/NNP terminal/NN) ./.) 


>> Noun Phrases are: 
 ['Add terminal']

>> Named Entities are: 
 [('PERSON', 'Add')] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), ('Add', 'add'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), ('Add', 'add'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), ('Add', 'Add'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 46 =============================

If  is in , and  is in , add  to . 


>> Tokens are: 
 ['If', ',', ',', 'add', '.']

>> Bigrams are: 
 [('If', ','), (',', ','), (',', 'add'), ('add', '.')]

>> Trigrams are: 
 [('If', ',', ','), (',', ',', 'add'), (',', 'add', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), (',', ','), ('add', 'VBP'), ('.', '.')]

 (S If/IN ,/, ,/, add/VBP ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), (',', ','), ('add', 'add'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), (',', ','), ('add', 'add'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), (',', ','), ('add', 'add'), ('.', '.')]



============================ Sentence 47 =============================

Make each undefined entry of M be error. 


>> Tokens are: 
 ['Make', 'undefined', 'entry', 'M', 'error', '.']

>> Bigrams are: 
 [('Make', 'undefined'), ('undefined', 'entry'), ('entry', 'M'), ('M', 'error'), ('error', '.')]

>> Trigrams are: 
 [('Make', 'undefined', 'entry'), ('undefined', 'entry', 'M'), ('entry', 'M', 'error'), ('M', 'error', '.')]

>> POS Tags are: 
 [('Make', 'NNP'), ('undefined', 'JJ'), ('entry', 'NN'), ('M', 'NNP'), ('error', 'NN'), ('.', '.')]

 (S (NP Make/NNP) (NP undefined/JJ entry/NN M/NNP error/NN) ./.) 


>> Noun Phrases are: 
 ['Make', 'undefined entry M error']

>> Named Entities are: 
 [('GPE', 'Make')] 

>> Stemming using Porter Stemmer: 
 [('Make', 'make'), ('undefined', 'undefin'), ('entry', 'entri'), ('M', 'm'), ('error', 'error'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Make', 'make'), ('undefined', 'undefin'), ('entry', 'entri'), ('M', 'm'), ('error', 'error'), ('.', '.')]

>> Lemmatization: 
 [('Make', 'Make'), ('undefined', 'undefined'), ('entry', 'entry'), ('M', 'M'), ('error', 'error'), ('.', '.')]



============================ Sentence 48 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 1: Not required  Step 2: Compute FIRST First(S) SaBa  First(B) BbB 					B𝜖  SaBa 	BbB | ϵ 	 	S		a	B	a  	A		  	B		𝜖  	A		  Rule 1 add  to  Rule 2 add  to  FIRST(B)={ b   , 𝜖 } 	NT	First  	S	{ a }  	B	{b,𝜖}   	B		b	B  	A		  Rule 1 add  to   FIRST(S)={ a }     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 2: Compute FOLLOW Follow(S)   Follow(B) SaBa 				BbB   SaBa 	BbB | ϵ 	 Follow(B)={ a   	B		b	B  Follow(S)={ $ }  	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	S		a	B	a  	A 			B  Rule 3 Follow(A)=follow(B) 	A			B	  Rule 2 First(   Rule 1: Place $ in FOLLOW(S)    }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 3: Prepare predictive parsing table      SaBa a=FIRST(aBa)={ a } M[S,a]=SaBa  SaBa 	BbB | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	NT	Input Symbol		 		a	b	$ 	S	SaBa		 	B			  Rule: 2 A  a = first() M[A,a] = A      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 3: Prepare predictive parsing table      BbB a=FIRST(bB)={ b } M[B,b]=BbB  SaBa 	BbB | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	NT	Input Symbol		 		a	b	$ 	S	SaBa		 	B		BbB	  Rule: 2 A  a = first() M[A,a] = A      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 3: Prepare predictive parsing table      Bϵ b=FOLLOW(B)={ a } M[B,a]=B𝜖   SaBa 	BbB | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	NT	Input Symbol		 		a	b	$ 	S	SaBa	Error	Error 	B	Bϵ	BbB	Error   Rule: 3 A  b = follow(A) M[A,b] = A        Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 1: Not required  Step 2: Compute FIRST First(S) SaB 					S𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	S		𝜖  	A		  Rule 2 add  to  FIRST(S)={ a   , 𝜖 } 	NT	First  	S	{ a, 𝜖 }  	B	{b,𝜖}   	S		a	B  	A		  Rule 1 add  to  	C	{c,𝜖}       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 1: Not required  Step 2: Compute FIRST First(B) BbC 					B𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	B		𝜖  	A		  Rule 2 add  to  FIRST(B)={ b   , 𝜖 } 	NT	First  	S	{ a, 𝜖 }  	B	{b,𝜖}  	B		b	C  	A		  Rule 1 add  to  	C	{c,𝜖}       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 1: Not required  Step 2: Compute FIRST First(C) CcS 					C𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	C		𝜖  	A		  Rule 2 add  to  FIRST(B)={ c   , 𝜖 } 	NT	First  	S	{ a, 𝜖 }  	B	{b,𝜖}  	C		c	S  	A		  Rule 1 add  to  	C	{c,𝜖}      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing Step 2: Compute FOLLOW Follow(S)  CcS       BbC 					SaB       ={$} 	C		c	S  Follow(S)={ $ }  	NT	First 	Follow  	S	{a,𝜖}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  	A 			B  Rule 3 Follow(A)=follow(B) Rule 1: Place $ in FOLLOW(S)   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 Follow(S)=Follow(C)  	B		b	C  	A 			B  Rule 3 Follow(A)=follow(B) Follow(C)=Follow(B)   ={$} 	S		a	B  	A 			B  Rule 3 Follow(A)=follow(B) Follow(B)=Follow(S)   ={$}       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      SaB a=FIRST(aB)={ a } M[S,a]=SaB  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			 	B				 	C				  Rule: 2 A  a = first() M[A,a] = A   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a,𝜖}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      S𝜖 b=FOLLOW(S)={ $ } M[S,$]=S𝜖  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B				 	C				   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 3 A  b = follow(A) M[A,b] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      BbC a=FIRST(bC)={ b } M[B,b]=BbC  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B		BbC		 	C				   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 2 A  a = first() M[A,a] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      B𝜖 b=FOLLOW(B)={ $ } M[B,$]=B𝜖  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B		BbC		B𝜖 	C				   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 3 A  b = follow(A) M[A,b] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      CcS a=FIRST(cS)={ c } M[C,c]=CcS  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B		BbC		B𝜖 	C			CcS	   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 2 A  a = first() M[A,a] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      C𝜖 b=FOLLOW(C)={ $ } M[C,$]=C𝜖  	NT	Input Symbol			 		a	b	c	$ 	S	SaB	Error	Error	S𝜖 	B	Error	BbB	Error	B𝜖 	C	Error	Error	CcS	C𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 3 A  b = follow(A) M[A,b] = A           Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing EE+T | T TT*F | F F(E) | id Step 1: Remove left recursion 	ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FIRST First(E) ETE’   First(T) TFT’  First(F) F(E) 					Fid   ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  	E		T	E’  	A		Y1	Y2  Rule 3 First(A)=First(Y1) 	T		F	T’  	A		Y1	Y2  Rule 3 First(A)=First(Y1) FIRST(E)=FIRST(T) FIRST(T)=FIRST(F) 	F		(	E	)  	A		  	F		id  	A		  Rule 1 add  to  Rule 1 add  to  FIRST(F)={ (   , id } 	NT	First  	E	{ (,id }  	E’	  	T	{ (,id }  	T’	  	F	{ (,id }     = {(, id } = {(, id }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FIRST First(E’) E’+TE’    E’𝜖    	A		  	E’		  	A		  Rule 1 add  to  Rule 2 add  to  FIRST(E’)={ + , 𝜖 } 	E’		+	T	E’  	NT	First  	E	{ (,id }  	E’	{ +, 𝜖 }  	T	{ (,id }  	T’	  	F	{ (,id }  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FIRST First(T’) T’*FT’    T’𝜖    	A		  	T’		  	A		  Rule 1 add  to  Rule 2 add  to  FIRST(T’)={ * , 𝜖 } 	T’		*	F	T’  	NT	First  	E	{ (,id }  	E’	{ +, 𝜖 }  	T	{ (,id }  	T’	{ *, 𝜖 }  	F	{ (,id }  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(E)  F(E) 	   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	  	T	{ (,id }	  	T’	{ *, 𝜖 }	  	F	{ (,id }	  Rule 1: Place $ in FOLLOW(E) FOLLOW(E)={ $, 	F 		(	E	)  	A 			B	  Rule 2  ) }  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(E’) ETE’    E’+TE’ 	  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	  	T’	{ *, 𝜖 }	  	F	{ (,id }	  FOLLOW(E’)={ $,) 	E 		T	E’  	A 			B  Rule 3   	E’		+T	E’  	A 			B  Rule 3  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(T) ETE’    	  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	  	T’	{ *, 𝜖 }	  	F	{ (,id }	  FOLLOW(T)={ +, 	E 			T	E’  	A 			B	  $, )  	E			T	E’  	A 			B	  Rule 3  Rule 2  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(T) E’+TE’  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	  	F	{ (,id }	  FOLLOW(T)={ +, 	E’ 		+	T	E’  	A 			B	  $, )  Rule 3  Rule 2  	E’ 		+	T	E’  	A 			B	  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(T’) TFT’    T’*FT’ 	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	  FOLLOW(T’)={+ $,) 	T		F	T’  	A 			B  Rule 3   	T’		*F	T’  	A 			B  Rule 3  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(F) TFT’  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	  FOLLOW(F)={ *, 	T 			F	T’  	A 			B	   + ,$ , )  	T			F	T’  	A 			B	  Rule 3  Rule 2  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(F) T’*FT’    	   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  FOLLOW(F)={ *,+, 	T’ 		*	F	T’  	A 			B	  $, )  Rule 3  Rule 2  	T’ 		*	F	T’  	A 			B	  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        ETE’ a=FIRST(TE’)={ (,id } M[E,(]=ETE’ M[E,id]=ETE’  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  Rule: 2 A  a = first() M[A,a] = A  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’						 	T						 	T’						 	F						    ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        E’+TE’ a=FIRST(+TE’)={ + } M[E’,+]=E’+TE’  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’				 	T						 	T’						 	F						  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        E’𝜖 b=FOLLOW(E’)={ $,) } M[E’,$]=E’𝜖 M[E’,)]=E’𝜖  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T						 	T’						 	F						  Rule: 3 A  b = follow(A) M[A,b] = A    	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        TFT’ a=FIRST(FT’)={ (,id } M[T,(]=TFT’ M[T,id]=TFT’   	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’						 	F						    	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  Rule: 2 A  a = first() M[A,a] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        T’*FT’ a=FIRST(*FT’)={ * } M[T’,*]=T’*FT’  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’			T’*FT’			 	F						  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table       T’𝜖 b=FOLLOW(T’)={ +,$,) } M[T’,+]=T’𝜖 M[T’,$]=T’𝜖 M[T’,)]=T’𝜖  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’		T’𝜖	T’*FT’		T’𝜖	T’𝜖 	F						  Rule: 3 A  b = follow(A) M[A,b] = A     	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table         F(E) a=FIRST((E))={ ( } M[F,(]=F(E)  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’		T’𝜖	T’*FT’		T’𝜖	T’𝜖 	F				F(E)		  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table         Fid a=FIRST(id)={ id } M[F,id]=Fid  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’		T’𝜖	T’*FT’		T’𝜖	T’𝜖 	F	Fid			F(E)		  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 4: Make each undefined entry of table be Error  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’	Error	Error	ETE’	Error	Error 	E’	Error	E’+TE’	Error	Error	E’𝜖	E’𝜖 	T	TFT’	Error	Error	TFT’	Error	Error 	T’	Error	T’𝜖	T’*FT’	Error	T’𝜖	T’𝜖 	F	Fid	Error	Error	F(E)	Error	Error     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 4: Parse the string : id + id * id $  	STACK	INPUT	OUTPUT  	E$	id+id*id$	  	TE’$	id+id*id$	ETE’  	FT’E’$	id+id*id$	TFT’  	idT’E’$	id+id*id$	Fid  	T’E’$	+id*id$	  	+TE’$	+id*id$	E’+TE’  	E’$	+id*id$	T’𝜖  	idT’E’$	id$	Fid  	TE’$	id*id$	  	T’E’$	$	  	FT’E’$	id*id$	TFT’  	E’$	$	T’𝜖  	FT’E’$	id$	  	$	$	E’𝜖  	*FT’E’$	*id$	T*FT’  	T’E’$	*id$	  	idT’E’$	id*id$	Fid                                              	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’	Error	Error	ETE’	Error	Error 	E’	Error	E’+TE’	Error	Error	E’𝜖	E’𝜖 	T	TFT’	Error	Error	TFT’	Error	Error 	T’	Error	T’𝜖	T’*FT’	Error	T’𝜖	T’𝜖 	F	Fid	Error	Error	F(E)	Error	Error     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Recursive descent parsing A top down parsing that executes a set of recursive procedure to process the input without backtracking is called recursive descent parser. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'S', ')', 'S\uf0e0aBa', 'First', '(', 'B', ')', 'B\uf0e0bB', 'B\uf0e0𝜖', 'S\uf0e0aBa', 'B\uf0e0bB', '|', 'ϵ', 'S', '\uf0e0', 'B', 'A', '\uf0e0', 'B', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '1', 'add', 'Rule', '2', 'add', 'FIRST', '(', 'B', ')', '=', '{', 'b', ',', '𝜖', '}', 'NT', 'First', 'S', '{', '}', 'B', '{', 'b', ',', '𝜖', '}', 'B', '\uf0e0', 'b', 'B', 'A', '\uf0e0', 'Rule', '1', 'add', 'FIRST', '(', 'S', ')', '=', '{', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'Follow', '(', 'S', ')', 'Follow', '(', 'B', ')', 'S\uf0e0aBa', 'B\uf0e0bB', 'S\uf0e0aBa', 'B\uf0e0bB', '|', 'ϵ', 'Follow', '(', 'B', ')', '=', '{', 'B', '\uf0e0', 'b', 'B', 'Follow', '(', 'S', ')', '=', '{', '$', '}', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '}', 'S', '\uf0e0', 'B', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'A', '\uf0e0', 'B', 'Rule', '2', 'First', '(', 'Rule', '1', ':', 'Place', '$', 'FOLLOW', '(', 'S', ')', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'S\uf0e0aBa', 'a=FIRST', '(', 'aBa', ')', '=', '{', '}', 'M', '[', 'S', ',', ']', '=S\uf0e0aBa', 'S\uf0e0aBa', 'B\uf0e0bB', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '}', 'NT', 'Input', 'Symbol', 'b', '$', 'S', 'S\uf0e0aBa', 'B', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0bB', 'a=FIRST', '(', 'bB', ')', '=', '{', 'b', '}', 'M', '[', 'B', ',', 'b', ']', '=B\uf0e0bB', 'S\uf0e0aBa', 'B\uf0e0bB', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '}', 'NT', 'Input', 'Symbol', 'b', '$', 'S', 'S\uf0e0aBa', 'B', 'B\uf0e0bB', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0ϵ', 'b=FOLLOW', '(', 'B', ')', '=', '{', '}', 'M', '[', 'B', ',', ']', '=B\uf0e0𝜖', 'S\uf0e0aBa', 'B\uf0e0bB', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '}', 'NT', 'Input', 'Symbol', 'b', '$', 'S', 'S\uf0e0aBa', 'Error', 'Error', 'B', 'B\uf0e0ϵ', 'B\uf0e0bB', 'Error', 'Rule', ':', '3', 'A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M', '[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'S', ')', 'S\uf0e0aB', 'S\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'S', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '2', 'add', 'FIRST', '(', 'S', ')', '=', '{', ',', '𝜖', '}', 'NT', 'First', 'S', '{', ',', '𝜖', '}', 'B', '{', 'b', ',', '𝜖', '}', 'S', '\uf0e0', 'B', 'A', '\uf0e0', 'Rule', '1', 'add', 'C', '{', 'c', ',', '𝜖', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'B', ')', 'B\uf0e0bC', 'B\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'B', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '2', 'add', 'FIRST', '(', 'B', ')', '=', '{', 'b', ',', '𝜖', '}', 'NT', 'First', 'S', '{', ',', '𝜖', '}', 'B', '{', 'b', ',', '𝜖', '}', 'B', '\uf0e0', 'b', 'C', 'A', '\uf0e0', 'Rule', '1', 'add', 'C', '{', 'c', ',', '𝜖', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'C', ')', 'C\uf0e0cS', 'C\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'C', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '2', 'add', 'FIRST', '(', 'B', ')', '=', '{', 'c', ',', '𝜖', '}', 'NT', 'First', 'S', '{', ',', '𝜖', '}', 'B', '{', 'b', ',', '𝜖', '}', 'C', '\uf0e0', 'c', 'S', 'A', '\uf0e0', 'Rule', '1', 'add', 'C', '{', 'c', ',', '𝜖', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'Follow', '(', 'S', ')', 'C\uf0e0cS', 'B\uf0e0bC', 'S\uf0e0aB', '=', '{', '$', '}', 'C', '\uf0e0', 'c', 'S', 'Follow', '(', 'S', ')', '=', '{', '$', '}', 'NT', 'First', 'Follow', 'S', '{', ',', '𝜖', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'Rule', '1', ':', 'Place', '$', 'FOLLOW', '(', 'S', ')', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'Follow', '(', 'S', ')', '=Follow', '(', 'C', ')', 'B', '\uf0e0', 'b', 'C', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'Follow', '(', 'C', ')', '=Follow', '(', 'B', ')', '=', '{', '$', '}', 'S', '\uf0e0', 'B', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'Follow', '(', 'B', ')', '=Follow', '(', 'S', ')', '=', '{', '$', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'S\uf0e0aB', 'a=FIRST', '(', 'aB', ')', '=', '{', '}', 'M', '[', 'S', ',', ']', '=S\uf0e0aB', 'NT', 'Input', 'Symbol', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'B', 'C', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', ',', '𝜖', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'S\uf0e0𝜖', 'b=FOLLOW', '(', 'S', ')', '=', '{', '$', '}', 'M', '[', 'S', ',', '$', ']', '=S\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'C', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'Rule', ':', '3', 'A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M', '[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0bC', 'a=FIRST', '(', 'bC', ')', '=', '{', 'b', '}', 'M', '[', 'B', ',', 'b', ']', '=B\uf0e0bC', 'NT', 'Input', 'Symbol', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'B\uf0e0bC', 'C', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0𝜖', 'b=FOLLOW', '(', 'B', ')', '=', '{', '$', '}', 'M', '[', 'B', ',', '$', ']', '=B\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'B\uf0e0bC', 'B\uf0e0𝜖', 'C', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'Rule', ':', '3', 'A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M', '[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'C\uf0e0cS', 'a=FIRST', '(', 'cS', ')', '=', '{', 'c', '}', 'M', '[', 'C', ',', 'c', ']', '=C\uf0e0cS', 'NT', 'Input', 'Symbol', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'B\uf0e0bC', 'B\uf0e0𝜖', 'C', 'C\uf0e0cS', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'C\uf0e0𝜖', 'b=FOLLOW', '(', 'C', ')', '=', '{', '$', '}', 'M', '[', 'C', ',', '$', ']', '=C\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'Error', 'Error', 'S\uf0e0𝜖', 'B', 'Error', 'B\uf0e0bB', 'Error', 'B\uf0e0𝜖', 'C', 'Error', 'Error', 'C\uf0e0cS', 'C\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', '}', '{', '$', '}', 'B', '{', 'b', ',', '𝜖', '}', '{', '$', '}', 'C', '{', 'c', ',', '𝜖', '}', '{', '$', '}', 'Rule', ':', '3', 'A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M', '[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'E\uf0e0E+T', '|', 'T', 'T\uf0e0T', '*', 'F', '|', 'F', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Step', '1', ':', 'Remove', 'left', 'recursion', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'E', ')', 'E\uf0e0TE', '’', 'First', '(', 'T', ')', 'T\uf0e0FT', '’', 'First', '(', 'F', ')', 'F\uf0e0', '(', 'E', ')', 'F\uf0e0id', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'E', '\uf0e0', 'T', 'E', '’', 'A', '\uf0e0', 'Y1', 'Y2', 'Rule', '3', 'First', '(', 'A', ')', '=First', '(', 'Y1', ')', 'T', '\uf0e0', 'F', 'T', '’', 'A', '\uf0e0', 'Y1', 'Y2', 'Rule', '3', 'First', '(', 'A', ')', '=First', '(', 'Y1', ')', 'FIRST', '(', 'E', ')', '=FIRST', '(', 'T', ')', 'FIRST', '(', 'T', ')', '=FIRST', '(', 'F', ')', 'F', '\uf0e0', '(', 'E', ')', 'A', '\uf0e0', 'F', '\uf0e0', 'id', 'A', '\uf0e0', 'Rule', '1', 'add', 'Rule', '1', 'add', 'FIRST', '(', 'F', ')', '=', '{', '(', ',', 'id', '}', 'NT', 'First', 'E', '{', '(', ',', 'id', '}', 'E', '’', 'T', '{', '(', ',', 'id', '}', 'T', '’', 'F', '{', '(', ',', 'id', '}', '=', '{', '(', ',', 'id', '}', '=', '{', '(', ',', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'E', '’', ')', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'A', '\uf0e0', 'E', '’', '\uf0e0', 'A', '\uf0e0', 'Rule', '1', 'add', 'Rule', '2', 'add', 'FIRST', '(', 'E', '’', ')', '=', '{', '+', ',', '𝜖', '}', 'E', '’', '\uf0e0', '+', 'T', 'E', '’', 'NT', 'First', 'E', '{', '(', ',', 'id', '}', 'E', '’', '{', '+', ',', '𝜖', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', 'F', '{', '(', ',', 'id', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'T', '’', ')', 'T', '’', '\uf0e0', '*', 'FT', '’', 'T', '’', '\uf0e0𝜖', 'A', '\uf0e0', 'T', '’', '\uf0e0', 'A', '\uf0e0', 'Rule', '1', 'add', 'Rule', '2', 'add', 'FIRST', '(', 'T', '’', ')', '=', '{', '*', ',', '𝜖', '}', 'T', '’', '\uf0e0', '*', 'F', 'T', '’', 'NT', 'First', 'E', '{', '(', ',', 'id', '}', 'E', '’', '{', '+', ',', '𝜖', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'E', ')', 'F\uf0e0', '(', 'E', ')', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'Rule', '1', ':', 'Place', '$', 'FOLLOW', '(', 'E', ')', 'FOLLOW', '(', 'E', ')', '=', '{', '$', ',', 'F', '\uf0e0', '(', 'E', ')', 'A', '\uf0e0', 'B', 'Rule', '2', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'E', '’', ')', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'E', '’', ')', '=', '{', '$', ',', ')', 'E', '\uf0e0', 'T', 'E', '’', 'A', '\uf0e0', 'B', 'Rule', '3', 'E', '’', '\uf0e0', '+T', 'E', '’', 'A', '\uf0e0', 'B', 'Rule', '3', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'T', ')', 'E\uf0e0TE', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'T', ')', '=', '{', '+', ',', 'E', '\uf0e0', 'T', 'E', '’', 'A', '\uf0e0', 'B', '$', ',', ')', 'E', '\uf0e0', 'T', 'E', '’', 'A', '\uf0e0', 'B', 'Rule', '3', 'Rule', '2', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'T', ')', 'E', '’', '\uf0e0+TE', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'T', ')', '=', '{', '+', ',', 'E', '’', '\uf0e0', '+', 'T', 'E', '’', 'A', '\uf0e0', 'B', '$', ',', ')', 'Rule', '3', 'Rule', '2', 'E', '’', '\uf0e0', '+', 'T', 'E', '’', 'A', '\uf0e0', 'B', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'T', '’', ')', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'T', '’', ')', '=', '{', '+', '$', ',', ')', 'T', '\uf0e0', 'F', 'T', '’', 'A', '\uf0e0', 'B', 'Rule', '3', 'T', '’', '\uf0e0', '*', 'F', 'T', '’', 'A', '\uf0e0', 'B', 'Rule', '3', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'F', ')', 'T\uf0e0FT', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'F', ')', '=', '{', '*', ',', 'T', '\uf0e0', 'F', 'T', '’', 'A', '\uf0e0', 'B', '+', ',', '$', ',', ')', 'T', '\uf0e0', 'F', 'T', '’', 'A', '\uf0e0', 'B', 'Rule', '3', 'Rule', '2', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'F', ')', 'T', '’', '\uf0e0', '*', 'FT', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'FOLLOW', '(', 'F', ')', '=', '{', '*', ',', '+', ',', 'T', '’', '\uf0e0', '*', 'F', 'T', '’', 'A', '\uf0e0', 'B', '$', ',', ')', 'Rule', '3', 'Rule', '2', 'T', '’', '\uf0e0', '*', 'F', 'T', '’', 'A', '\uf0e0', 'B', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'E\uf0e0TE', '’', 'a=FIRST', '(', 'TE', '’', ')', '=', '{', '(', ',', 'id', '}', 'M', '[', 'E', ',', '(', ']', '=E\uf0e0TE', '’', 'M', '[', 'E', ',', 'id', ']', '=E\uf0e0TE', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'T', 'T', '’', 'F', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'E', '’', '\uf0e0+TE', '’', 'a=FIRST', '(', '+TE', '’', ')', '=', '{', '+', '}', 'M', '[', 'E', '’', ',', '+', ']', '=E', '’', '\uf0e0+TE', '’', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'T', 'T', '’', 'F', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'E', '’', '\uf0e0𝜖', 'b=FOLLOW', '(', 'E', '’', ')', '=', '{', '$', ',', ')', '}', 'M', '[', 'E', '’', ',', '$', ']', '=E', '’', '\uf0e0𝜖', 'M', '[', 'E', '’', ',', ')', ']', '=E', '’', '\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T', '’', 'F', 'Rule', ':', '3', 'A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M', '[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'T\uf0e0FT', '’', 'a=FIRST', '(', 'FT', '’', ')', '=', '{', '(', ',', 'id', '}', 'M', '[', 'T', ',', '(', ']', '=T\uf0e0FT', '’', 'M', '[', 'T', ',', 'id', ']', '=T\uf0e0FT', '’', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T', '’', 'F', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'T', '’', '\uf0e0', '*', 'FT', '’', 'a=FIRST', '(', '*', 'FT', '’', ')', '=', '{', '*', '}', 'M', '[', 'T', '’', ',', '*', ']', '=T', '’', '\uf0e0', '*', 'FT', '’', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', 'F', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'T', '’', '\uf0e0𝜖', 'b=FOLLOW', '(', 'T', '’', ')', '=', '{', '+', ',', '$', ',', ')', '}', 'M', '[', 'T', '’', ',', '+', ']', '=T', '’', '\uf0e0𝜖', 'M', '[', 'T', '’', ',', '$', ']', '=T', '’', '\uf0e0𝜖', 'M', '[', 'T', '’', ',', ')', ']', '=T', '’', '\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T', '’', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0', '*', 'FT', '’', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0𝜖', 'F', 'Rule', ':', '3', 'A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M', '[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'F\uf0e0', '(', 'E', ')', 'a=FIRST', '(', '(', 'E', ')', ')', '=', '{', '(', '}', 'M', '[', 'F', ',', '(', ']', '=F\uf0e0', '(', 'E', ')', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T', '’', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0', '*', 'FT', '’', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0𝜖', 'F', 'F\uf0e0', '(', 'E', ')', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'F\uf0e0id', 'a=FIRST', '(', 'id', ')', '=', '{', 'id', '}', 'M', '[', 'F', ',', 'id', ']', '=F\uf0e0id', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E', '’', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T', '’', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0', '*', 'FT', '’', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0𝜖', 'F', 'F\uf0e0id', 'F\uf0e0', '(', 'E', ')', 'Rule', ':', '2', 'A\uf0e0', '=', 'first', '(', ')', 'M', '[', 'A', ',', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E', '’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T', '’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E', '’', '\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T', '’', '\uf0e0', '*', 'FT', '’', '|', 'ϵ', 'F\uf0e0', '(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '4', ':', 'Make', 'undefined', 'entry', 'table', 'Error', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'Error', 'Error', 'E\uf0e0TE', '’', 'Error', 'Error', 'E', '’', 'Error', 'E', '’', '\uf0e0+TE', '’', 'Error', 'Error', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'Error', 'Error', 'T\uf0e0FT', '’', 'Error', 'Error', 'T', '’', 'Error', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0', '*', 'FT', '’', 'Error', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0𝜖', 'F', 'F\uf0e0id', 'Error', 'Error', 'F\uf0e0', '(', 'E', ')', 'Error', 'Error', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example-3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '4', ':', 'Parse', 'string', ':', 'id', '+', 'id', '*', 'id', '$', 'STACK', 'INPUT', 'OUTPUT', 'E', '$', 'id+id', '*', 'id', '$', 'TE', '’', '$', 'id+id', '*', 'id', '$', 'E\uf0e0TE', '’', 'FT', '’', 'E', '’', '$', 'id+id', '*', 'id', '$', 'T\uf0e0FT', '’', 'idT', '’', 'E', '’', '$', 'id+id', '*', 'id', '$', 'F\uf0e0id', 'T', '’', 'E', '’', '$', '+id', '*', 'id', '$', '+TE', '’', '$', '+id', '*', 'id', '$', 'E', '’', '\uf0e0+TE', '’', 'E', '’', '$', '+id', '*', 'id', '$', 'T', '’', '\uf0e0𝜖', 'idT', '’', 'E', '’', '$', 'id', '$', 'F\uf0e0id', 'TE', '’', '$', 'id', '*', 'id', '$', 'T', '’', 'E', '’', '$', '$', 'FT', '’', 'E', '’', '$', 'id', '*', 'id', '$', 'T\uf0e0FT', '’', 'E', '’', '$', '$', 'T', '’', '\uf0e0𝜖', 'FT', '’', 'E', '’', '$', 'id', '$', '$', '$', 'E', '’', '\uf0e0𝜖', '*', 'FT', '’', 'E', '’', '$', '*', 'id', '$', 'T\uf0e0', '*', 'FT', '’', 'T', '’', 'E', '’', '$', '*', 'id', '$', 'idT', '’', 'E', '’', '$', 'id', '*', 'id', '$', 'F\uf0e0id', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'Error', 'Error', 'E\uf0e0TE', '’', 'Error', 'Error', 'E', '’', 'Error', 'E', '’', '\uf0e0+TE', '’', 'Error', 'Error', 'E', '’', '\uf0e0𝜖', 'E', '’', '\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'Error', 'Error', 'T\uf0e0FT', '’', 'Error', 'Error', 'T', '’', 'Error', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0', '*', 'FT', '’', 'Error', 'T', '’', '\uf0e0𝜖', 'T', '’', '\uf0e0𝜖', 'F', 'F\uf0e0id', 'Error', 'Error', 'F\uf0e0', '(', 'E', ')', 'Error', 'Error', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Recursive', 'descent', 'parsing', 'A', 'top', 'parsing', 'executes', 'set', 'recursive', 'procedure', 'process', 'input', 'without', 'backtracking', 'called', 'recursive', 'descent', 'parser', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-1'), ('Example-1', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Not'), ('Not', 'required'), ('required', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'S'), ('S', ')'), (')', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'First'), ('First', '('), ('(', 'B'), ('B', ')'), (')', 'B\uf0e0bB'), ('B\uf0e0bB', 'B\uf0e0𝜖'), ('B\uf0e0𝜖', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B\uf0e0bB'), ('B\uf0e0bB', '|'), ('|', 'ϵ'), ('ϵ', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', '\uf0e0'), ('\uf0e0', '𝜖'), ('𝜖', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'Rule'), ('Rule', '2'), ('2', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'S'), ('S', '{'), ('{', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'B'), ('B', '\uf0e0'), ('\uf0e0', 'b'), ('b', 'B'), ('B', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'S'), ('S', ')'), (')', '='), ('=', '{'), ('{', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-1'), ('Example-1', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'Follow'), ('Follow', '('), ('(', 'S'), ('S', ')'), (')', 'Follow'), ('Follow', '('), ('(', 'B'), ('B', ')'), (')', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B\uf0e0bB'), ('B\uf0e0bB', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B\uf0e0bB'), ('B\uf0e0bB', '|'), ('|', 'ϵ'), ('ϵ', 'Follow'), ('Follow', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', 'B'), ('B', '\uf0e0'), ('\uf0e0', 'b'), ('b', 'B'), ('B', 'Follow'), ('Follow', '('), ('(', 'S'), ('S', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '}'), ('}', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'Follow'), ('Follow', '('), ('(', 'A'), ('A', ')'), (')', '=follow'), ('=follow', '('), ('(', 'B'), ('B', ')'), (')', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '2'), ('2', 'First'), ('First', '('), ('(', 'Rule'), ('Rule', '1'), ('1', ':'), (':', 'Place'), ('Place', '$'), ('$', 'FOLLOW'), ('FOLLOW', '('), ('(', 'S'), ('S', ')'), (')', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-1'), ('Example-1', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'a=FIRST'), ('a=FIRST', '('), ('(', 'aBa'), ('aBa', ')'), (')', '='), ('=', '{'), ('{', '}'), ('}', 'M'), ('M', '['), ('[', 'S'), ('S', ','), (',', ']'), (']', '=S\uf0e0aBa'), ('=S\uf0e0aBa', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B\uf0e0bB'), ('B\uf0e0bB', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '}'), ('}', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', '$'), ('$', 'S'), ('S', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B'), ('B', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-1'), ('Example-1', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'B\uf0e0bB'), ('B\uf0e0bB', 'a=FIRST'), ('a=FIRST', '('), ('(', 'bB'), ('bB', ')'), (')', '='), ('=', '{'), ('{', 'b'), ('b', '}'), ('}', 'M'), ('M', '['), ('[', 'B'), ('B', ','), (',', 'b'), ('b', ']'), (']', '=B\uf0e0bB'), ('=B\uf0e0bB', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B\uf0e0bB'), ('B\uf0e0bB', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '}'), ('}', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', '$'), ('$', 'S'), ('S', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B'), ('B', 'B\uf0e0bB'), ('B\uf0e0bB', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-1'), ('Example-1', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'B\uf0e0ϵ'), ('B\uf0e0ϵ', 'b=FOLLOW'), ('b=FOLLOW', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', '}'), ('}', 'M'), ('M', '['), ('[', 'B'), ('B', ','), (',', ']'), (']', '=B\uf0e0𝜖'), ('=B\uf0e0𝜖', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'B\uf0e0bB'), ('B\uf0e0bB', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '}'), ('}', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', '$'), ('$', 'S'), ('S', 'S\uf0e0aBa'), ('S\uf0e0aBa', 'Error'), ('Error', 'Error'), ('Error', 'B'), ('B', 'B\uf0e0ϵ'), ('B\uf0e0ϵ', 'B\uf0e0bB'), ('B\uf0e0bB', 'Error'), ('Error', 'Rule'), ('Rule', ':'), (':', '3'), ('3', 'A\uf0e0'), ('A\uf0e0', 'b'), ('b', '='), ('=', 'follow'), ('follow', '('), ('(', 'A'), ('A', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', 'b'), ('b', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Not'), ('Not', 'required'), ('required', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'S'), ('S', ')'), (')', 'S\uf0e0aB'), ('S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'S'), ('S', '\uf0e0'), ('\uf0e0', '𝜖'), ('𝜖', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '2'), ('2', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'S'), ('S', ')'), (')', '='), ('=', '{'), ('{', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'S'), ('S', '{'), ('{', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Not'), ('Not', 'required'), ('required', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'B'), ('B', ')'), (')', 'B\uf0e0bC'), ('B\uf0e0bC', 'B\uf0e0𝜖'), ('B\uf0e0𝜖', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'B'), ('B', '\uf0e0'), ('\uf0e0', '𝜖'), ('𝜖', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '2'), ('2', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'S'), ('S', '{'), ('{', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'B'), ('B', '\uf0e0'), ('\uf0e0', 'b'), ('b', 'C'), ('C', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Not'), ('Not', 'required'), ('required', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'C'), ('C', ')'), (')', 'C\uf0e0cS'), ('C\uf0e0cS', 'C\uf0e0𝜖'), ('C\uf0e0𝜖', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'C'), ('C', '\uf0e0'), ('\uf0e0', '𝜖'), ('𝜖', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '2'), ('2', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'S'), ('S', '{'), ('{', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'C'), ('C', '\uf0e0'), ('\uf0e0', 'c'), ('c', 'S'), ('S', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'Follow'), ('Follow', '('), ('(', 'S'), ('S', ')'), (')', 'C\uf0e0cS'), ('C\uf0e0cS', 'B\uf0e0bC'), ('B\uf0e0bC', 'S\uf0e0aB'), ('S\uf0e0aB', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '\uf0e0'), ('\uf0e0', 'c'), ('c', 'S'), ('S', 'Follow'), ('Follow', '('), ('(', 'S'), ('S', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'Follow'), ('Follow', '('), ('(', 'A'), ('A', ')'), (')', '=follow'), ('=follow', '('), ('(', 'B'), ('B', ')'), (')', 'Rule'), ('Rule', '1'), ('1', ':'), (':', 'Place'), ('Place', '$'), ('$', 'FOLLOW'), ('FOLLOW', '('), ('(', 'S'), ('S', ')'), (')', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'Follow'), ('Follow', '('), ('(', 'S'), ('S', ')'), (')', '=Follow'), ('=Follow', '('), ('(', 'C'), ('C', ')'), (')', 'B'), ('B', '\uf0e0'), ('\uf0e0', 'b'), ('b', 'C'), ('C', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'Follow'), ('Follow', '('), ('(', 'A'), ('A', ')'), (')', '=follow'), ('=follow', '('), ('(', 'B'), ('B', ')'), (')', 'Follow'), ('Follow', '('), ('(', 'C'), ('C', ')'), (')', '=Follow'), ('=Follow', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'Follow'), ('Follow', '('), ('(', 'A'), ('A', ')'), (')', '=follow'), ('=follow', '('), ('(', 'B'), ('B', ')'), (')', 'Follow'), ('Follow', '('), ('(', 'B'), ('B', ')'), (')', '=Follow'), ('=Follow', '('), ('(', 'S'), ('S', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'S\uf0e0aB'), ('S\uf0e0aB', 'a=FIRST'), ('a=FIRST', '('), ('(', 'aB'), ('aB', ')'), (')', '='), ('=', '{'), ('{', '}'), ('}', 'M'), ('M', '['), ('[', 'S'), ('S', ','), (',', ']'), (']', '=S\uf0e0aB'), ('=S\uf0e0aB', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', 'c'), ('c', '$'), ('$', 'S'), ('S', 'S\uf0e0aB'), ('S\uf0e0aB', 'B'), ('B', 'C'), ('C', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'b=FOLLOW'), ('b=FOLLOW', '('), ('(', 'S'), ('S', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'M'), ('M', '['), ('[', 'S'), ('S', ','), (',', '$'), ('$', ']'), (']', '=S\uf0e0𝜖'), ('=S\uf0e0𝜖', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', 'c'), ('c', '$'), ('$', 'S'), ('S', 'S\uf0e0aB'), ('S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'B'), ('B', 'C'), ('C', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'Rule'), ('Rule', ':'), (':', '3'), ('3', 'A\uf0e0'), ('A\uf0e0', 'b'), ('b', '='), ('=', 'follow'), ('follow', '('), ('(', 'A'), ('A', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', 'b'), ('b', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'B\uf0e0bC'), ('B\uf0e0bC', 'a=FIRST'), ('a=FIRST', '('), ('(', 'bC'), ('bC', ')'), (')', '='), ('=', '{'), ('{', 'b'), ('b', '}'), ('}', 'M'), ('M', '['), ('[', 'B'), ('B', ','), (',', 'b'), ('b', ']'), (']', '=B\uf0e0bC'), ('=B\uf0e0bC', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', 'c'), ('c', '$'), ('$', 'S'), ('S', 'S\uf0e0aB'), ('S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'B'), ('B', 'B\uf0e0bC'), ('B\uf0e0bC', 'C'), ('C', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'B\uf0e0𝜖'), ('B\uf0e0𝜖', 'b=FOLLOW'), ('b=FOLLOW', '('), ('(', 'B'), ('B', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'M'), ('M', '['), ('[', 'B'), ('B', ','), (',', '$'), ('$', ']'), (']', '=B\uf0e0𝜖'), ('=B\uf0e0𝜖', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', 'c'), ('c', '$'), ('$', 'S'), ('S', 'S\uf0e0aB'), ('S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'B'), ('B', 'B\uf0e0bC'), ('B\uf0e0bC', 'B\uf0e0𝜖'), ('B\uf0e0𝜖', 'C'), ('C', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'Rule'), ('Rule', ':'), (':', '3'), ('3', 'A\uf0e0'), ('A\uf0e0', 'b'), ('b', '='), ('=', 'follow'), ('follow', '('), ('(', 'A'), ('A', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', 'b'), ('b', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'C\uf0e0cS'), ('C\uf0e0cS', 'a=FIRST'), ('a=FIRST', '('), ('(', 'cS'), ('cS', ')'), (')', '='), ('=', '{'), ('{', 'c'), ('c', '}'), ('}', 'M'), ('M', '['), ('[', 'C'), ('C', ','), (',', 'c'), ('c', ']'), (']', '=C\uf0e0cS'), ('=C\uf0e0cS', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', 'c'), ('c', '$'), ('$', 'S'), ('S', 'S\uf0e0aB'), ('S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'B'), ('B', 'B\uf0e0bC'), ('B\uf0e0bC', 'B\uf0e0𝜖'), ('B\uf0e0𝜖', 'C'), ('C', 'C\uf0e0cS'), ('C\uf0e0cS', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-2'), ('Example-2', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Prepare'), ('Prepare', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'C\uf0e0𝜖'), ('C\uf0e0𝜖', 'b=FOLLOW'), ('b=FOLLOW', '('), ('(', 'C'), ('C', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', '}'), ('}', 'M'), ('M', '['), ('[', 'C'), ('C', ','), (',', '$'), ('$', ']'), (']', '=C\uf0e0𝜖'), ('=C\uf0e0𝜖', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'b'), ('b', 'c'), ('c', '$'), ('$', 'S'), ('S', 'S\uf0e0aB'), ('S\uf0e0aB', 'Error'), ('Error', 'Error'), ('Error', 'S\uf0e0𝜖'), ('S\uf0e0𝜖', 'B'), ('B', 'Error'), ('Error', 'B\uf0e0bB'), ('B\uf0e0bB', 'Error'), ('Error', 'B\uf0e0𝜖'), ('B\uf0e0𝜖', 'C'), ('C', 'Error'), ('Error', 'Error'), ('Error', 'C\uf0e0cS'), ('C\uf0e0cS', 'C\uf0e0𝜖'), ('C\uf0e0𝜖', 'S\uf0e0aB'), ('S\uf0e0aB', '|'), ('|', 'ϵ'), ('ϵ', 'B\uf0e0bC'), ('B\uf0e0bC', '|'), ('|', 'ϵ'), ('ϵ', 'C\uf0e0cS'), ('C\uf0e0cS', '|'), ('|', 'ϵ'), ('ϵ', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'S'), ('S', '{'), ('{', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'B'), ('B', '{'), ('{', 'b'), ('b', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'C'), ('C', '{'), ('{', 'c'), ('c', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', '}'), ('}', 'Rule'), ('Rule', ':'), (':', '3'), ('3', 'A\uf0e0'), ('A\uf0e0', 'b'), ('b', '='), ('=', 'follow'), ('follow', '('), ('(', 'A'), ('A', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', 'b'), ('b', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'E\uf0e0E+T'), ('E\uf0e0E+T', '|'), ('|', 'T'), ('T', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Remove'), ('Remove', 'left'), ('left', 'recursion'), ('recursion', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'E'), ('E', ')'), (')', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'First'), ('First', '('), ('(', 'T'), ('T', ')'), (')', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'First'), ('First', '('), ('(', 'F'), ('F', ')'), (')', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'F\uf0e0id'), ('F\uf0e0id', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Y1'), ('Y1', 'Y2'), ('Y2', 'Rule'), ('Rule', '3'), ('3', 'First'), ('First', '('), ('(', 'A'), ('A', ')'), (')', '=First'), ('=First', '('), ('(', 'Y1'), ('Y1', ')'), (')', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Y1'), ('Y1', 'Y2'), ('Y2', 'Rule'), ('Rule', '3'), ('3', 'First'), ('First', '('), ('(', 'A'), ('A', ')'), (')', '=First'), ('=First', '('), ('(', 'Y1'), ('Y1', ')'), (')', 'FIRST'), ('FIRST', '('), ('(', 'E'), ('E', ')'), (')', '=FIRST'), ('=FIRST', '('), ('(', 'T'), ('T', ')'), (')', 'FIRST'), ('FIRST', '('), ('(', 'T'), ('T', ')'), (')', '=FIRST'), ('=FIRST', '('), ('(', 'F'), ('F', ')'), (')', 'F'), ('F', '\uf0e0'), ('\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'F'), ('F', '\uf0e0'), ('\uf0e0', 'id'), ('id', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'F'), ('F', ')'), (')', '='), ('=', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'NT'), ('NT', 'First'), ('First', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'E'), ('E', '’'), ('’', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '’'), ('’', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '='), ('=', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '='), ('=', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'E'), ('E', '’'), ('’', ')'), (')', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'E'), ('E', '’'), ('’', '\uf0e0'), ('\uf0e0', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'Rule'), ('Rule', '2'), ('2', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'E'), ('E', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'E'), ('E', '’'), ('’', '\uf0e0'), ('\uf0e0', '+'), ('+', 'T'), ('T', 'E'), ('E', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '’'), ('’', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FIRST'), ('FIRST', 'First'), ('First', '('), ('(', 'T'), ('T', '’'), ('’', ')'), (')', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'Rule'), ('Rule', '1'), ('1', 'add'), ('add', 'Rule'), ('Rule', '2'), ('2', 'add'), ('add', 'FIRST'), ('FIRST', '('), ('(', 'T'), ('T', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'F'), ('F', 'T'), ('T', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'E'), ('E', ')'), (')', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'Rule'), ('Rule', '1'), ('1', ':'), (':', 'Place'), ('Place', '$'), ('$', 'FOLLOW'), ('FOLLOW', '('), ('(', 'E'), ('E', ')'), (')', 'FOLLOW'), ('FOLLOW', '('), ('(', 'E'), ('E', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', ','), (',', 'F'), ('F', '\uf0e0'), ('\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '2'), ('2', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'E'), ('E', '’'), ('’', ')'), (')', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'FOLLOW'), ('FOLLOW', '('), ('(', 'E'), ('E', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'E'), ('E', '’'), ('’', '\uf0e0'), ('\uf0e0', '+T'), ('+T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'T'), ('T', ')'), (')', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'FOLLOW'), ('FOLLOW', '('), ('(', 'T'), ('T', ')'), (')', '='), ('=', '{'), ('{', '+'), ('+', ','), (',', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', '$'), ('$', ','), (',', ')'), (')', 'E'), ('E', '\uf0e0'), ('\uf0e0', 'T'), ('T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'Rule'), ('Rule', '2'), ('2', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'T'), ('T', ')'), (')', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'FOLLOW'), ('FOLLOW', '('), ('(', 'T'), ('T', ')'), (')', '='), ('=', '{'), ('{', '+'), ('+', ','), (',', 'E'), ('E', '’'), ('’', '\uf0e0'), ('\uf0e0', '+'), ('+', 'T'), ('T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', '$'), ('$', ','), (',', ')'), (')', 'Rule'), ('Rule', '3'), ('3', 'Rule'), ('Rule', '2'), ('2', 'E'), ('E', '’'), ('’', '\uf0e0'), ('\uf0e0', '+'), ('+', 'T'), ('T', 'E'), ('E', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'T'), ('T', '’'), ('’', ')'), (')', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'FOLLOW'), ('FOLLOW', '('), ('(', 'T'), ('T', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '+'), ('+', '$'), ('$', ','), (',', ')'), (')', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'F'), ('F', ')'), (')', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'FOLLOW'), ('FOLLOW', '('), ('(', 'F'), ('F', ')'), (')', '='), ('=', '{'), ('{', '*'), ('*', ','), (',', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', 'T'), ('T', '\uf0e0'), ('\uf0e0', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'Rule'), ('Rule', '3'), ('3', 'Rule'), ('Rule', '2'), ('2', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Compute'), ('Compute', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', '('), ('(', 'F'), ('F', ')'), (')', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'FOLLOW'), ('FOLLOW', '('), ('(', 'F'), ('F', ')'), (')', '='), ('=', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', '$'), ('$', ','), (',', ')'), (')', 'Rule'), ('Rule', '3'), ('3', 'Rule'), ('Rule', '2'), ('2', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'F'), ('F', 'T'), ('T', '’'), ('’', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'B'), ('B', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'a=FIRST'), ('a=FIRST', '('), ('(', 'TE'), ('TE', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'M'), ('M', '['), ('[', 'E'), ('E', ','), (',', '('), ('(', ']'), (']', '=E\uf0e0TE'), ('=E\uf0e0TE', '’'), ('’', 'M'), ('M', '['), ('[', 'E'), ('E', ','), (',', 'id'), ('id', ']'), (']', '=E\uf0e0TE'), ('=E\uf0e0TE', '’'), ('’', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'T'), ('T', 'T'), ('T', '’'), ('’', 'F'), ('F', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'a=FIRST'), ('a=FIRST', '('), ('(', '+TE'), ('+TE', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '+'), ('+', '}'), ('}', 'M'), ('M', '['), ('[', 'E'), ('E', '’'), ('’', ','), (',', '+'), ('+', ']'), (']', '=E'), ('=E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'T'), ('T', 'T'), ('T', '’'), ('’', 'F'), ('F', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'b=FOLLOW'), ('b=FOLLOW', '('), ('(', 'E'), ('E', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'M'), ('M', '['), ('[', 'E'), ('E', '’'), ('’', ','), (',', '$'), ('$', ']'), (']', '=E'), ('=E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'M'), ('M', '['), ('[', 'E'), ('E', '’'), ('’', ','), (',', ')'), (')', ']'), (']', '=E'), ('=E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T'), ('T', '’'), ('’', 'F'), ('F', 'Rule'), ('Rule', ':'), (':', '3'), ('3', 'A\uf0e0'), ('A\uf0e0', 'b'), ('b', '='), ('=', 'follow'), ('follow', '('), ('(', 'A'), ('A', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', 'b'), ('b', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'a=FIRST'), ('a=FIRST', '('), ('(', 'FT'), ('FT', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', 'M'), ('M', '['), ('[', 'T'), ('T', ','), (',', '('), ('(', ']'), (']', '=T\uf0e0FT'), ('=T\uf0e0FT', '’'), ('’', 'M'), ('M', '['), ('[', 'T'), ('T', ','), (',', 'id'), ('id', ']'), (']', '=T\uf0e0FT'), ('=T\uf0e0FT', '’'), ('’', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', 'F'), ('F', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'a=FIRST'), ('a=FIRST', '('), ('(', '*'), ('*', 'FT'), ('FT', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '*'), ('*', '}'), ('}', 'M'), ('M', '['), ('[', 'T'), ('T', '’'), ('’', ','), (',', '*'), ('*', ']'), (']', '=T'), ('=T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'F'), ('F', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'b=FOLLOW'), ('b=FOLLOW', '('), ('(', 'T'), ('T', '’'), ('’', ')'), (')', '='), ('=', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'M'), ('M', '['), ('[', 'T'), ('T', '’'), ('’', ','), (',', '+'), ('+', ']'), (']', '=T'), ('=T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'M'), ('M', '['), ('[', 'T'), ('T', '’'), ('’', ','), (',', '$'), ('$', ']'), (']', '=T'), ('=T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'M'), ('M', '['), ('[', 'T'), ('T', '’'), ('’', ','), (',', ')'), (')', ']'), (']', '=T'), ('=T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'F'), ('F', 'Rule'), ('Rule', ':'), (':', '3'), ('3', 'A\uf0e0'), ('A\uf0e0', 'b'), ('b', '='), ('=', 'follow'), ('follow', '('), ('(', 'A'), ('A', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', 'b'), ('b', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'a=FIRST'), ('a=FIRST', '('), ('(', '('), ('(', 'E'), ('E', ')'), (')', ')'), (')', '='), ('=', '{'), ('{', '('), ('(', '}'), ('}', 'M'), ('M', '['), ('[', 'F'), ('F', ','), (',', '('), ('(', ']'), (']', '=F\uf0e0'), ('=F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Construct'), ('Construct', 'predictive'), ('predictive', 'parsing'), ('parsing', 'table'), ('table', 'F\uf0e0id'), ('F\uf0e0id', 'a=FIRST'), ('a=FIRST', '('), ('(', 'id'), ('id', ')'), (')', '='), ('=', '{'), ('{', 'id'), ('id', '}'), ('}', 'M'), ('M', '['), ('[', 'F'), ('F', ','), (',', 'id'), ('id', ']'), (']', '=F\uf0e0id'), ('=F\uf0e0id', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'F'), ('F', 'F\uf0e0id'), ('F\uf0e0id', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'Rule'), ('Rule', ':'), (':', '2'), ('2', 'A\uf0e0'), ('A\uf0e0', '='), ('=', 'first'), ('first', '('), ('(', ')'), (')', 'M'), ('M', '['), ('[', 'A'), ('A', ','), (',', ']'), (']', '='), ('=', 'A\uf0e0'), ('A\uf0e0', 'NT'), ('NT', 'First'), ('First', 'Follow'), ('Follow', 'E'), ('E', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E'), ('E', '’'), ('’', '{'), ('{', '+'), ('+', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'T'), ('T', '’'), ('’', '{'), ('{', '*'), ('*', ','), (',', '𝜖'), ('𝜖', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'F'), ('F', '{'), ('{', '('), ('(', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', '+'), ('+', ','), (',', '$'), ('$', ','), (',', ')'), (')', '}'), ('}', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', '|'), ('|', 'ϵ'), ('ϵ', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '4'), ('4', ':'), (':', 'Make'), ('Make', 'undefined'), ('undefined', 'entry'), ('entry', 'table'), ('table', 'Error'), ('Error', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'E'), ('E', '’'), ('’', 'Error'), ('Error', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'T'), ('T', '’'), ('’', 'Error'), ('Error', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'Error'), ('Error', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'F'), ('F', 'F\uf0e0id'), ('F\uf0e0id', 'Error'), ('Error', 'Error'), ('Error', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'Error'), ('Error', 'Error'), ('Error', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example-3'), ('Example-3', ':'), (':', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'parsing'), ('parsing', 'Step'), ('Step', '4'), ('4', ':'), (':', 'Parse'), ('Parse', 'string'), ('string', ':'), (':', 'id'), ('id', '+'), ('+', 'id'), ('id', '*'), ('*', 'id'), ('id', '$'), ('$', 'STACK'), ('STACK', 'INPUT'), ('INPUT', 'OUTPUT'), ('OUTPUT', 'E'), ('E', '$'), ('$', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'TE'), ('TE', '’'), ('’', '$'), ('$', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'FT'), ('FT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'idT'), ('idT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'F\uf0e0id'), ('F\uf0e0id', 'T'), ('T', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', '+TE'), ('+TE', '’'), ('’', '$'), ('$', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'idT'), ('idT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', 'id'), ('id', '$'), ('$', 'F\uf0e0id'), ('F\uf0e0id', 'TE'), ('TE', '’'), ('’', '$'), ('$', 'id'), ('id', '*'), ('*', 'id'), ('id', '$'), ('$', 'T'), ('T', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', '$'), ('$', 'FT'), ('FT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', 'id'), ('id', '*'), ('*', 'id'), ('id', '$'), ('$', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', '$'), ('$', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'FT'), ('FT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', 'id'), ('id', '$'), ('$', '$'), ('$', '$'), ('$', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', '*'), ('*', 'id'), ('id', '$'), ('$', 'T\uf0e0'), ('T\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'T'), ('T', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', '*'), ('*', 'id'), ('id', '$'), ('$', 'idT'), ('idT', '’'), ('’', 'E'), ('E', '’'), ('’', '$'), ('$', 'id'), ('id', '*'), ('*', 'id'), ('id', '$'), ('$', 'F\uf0e0id'), ('F\uf0e0id', 'NT'), ('NT', 'Input'), ('Input', 'Symbol'), ('Symbol', 'id'), ('id', '+'), ('+', '*'), ('*', '('), ('(', ')'), (')', '$'), ('$', 'E'), ('E', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'E\uf0e0TE'), ('E\uf0e0TE', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'E'), ('E', '’'), ('’', 'Error'), ('Error', 'E'), ('E', '’'), ('’', '\uf0e0+TE'), ('\uf0e0+TE', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'E'), ('E', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'T\uf0e0FT'), ('T\uf0e0FT', '’'), ('’', 'Error'), ('Error', 'Error'), ('Error', 'T'), ('T', '’'), ('’', 'Error'), ('Error', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0'), ('\uf0e0', '*'), ('*', 'FT'), ('FT', '’'), ('’', 'Error'), ('Error', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'T'), ('T', '’'), ('’', '\uf0e0𝜖'), ('\uf0e0𝜖', 'F'), ('F', 'F\uf0e0id'), ('F\uf0e0id', 'Error'), ('Error', 'Error'), ('Error', 'F\uf0e0'), ('F\uf0e0', '('), ('(', 'E'), ('E', ')'), (')', 'Error'), ('Error', 'Error'), ('Error', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'methods'), ('methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'parsing'), ('parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Recursive'), ('Recursive', 'descent'), ('descent', 'parsing'), ('parsing', 'A'), ('A', 'top'), ('top', 'parsing'), ('parsing', 'executes'), ('executes', 'set'), ('set', 'recursive'), ('recursive', 'procedure'), ('procedure', 'process'), ('process', 'input'), ('input', 'without'), ('without', 'backtracking'), ('backtracking', 'called'), ('called', 'recursive'), ('recursive', 'descent'), ('descent', 'parser'), ('parser', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-1'), ('›', 'Example-1', ':'), ('Example-1', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Not'), (':', 'Not', 'required'), ('Not', 'required', 'Step'), ('required', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'S\uf0e0aBa'), (')', 'S\uf0e0aBa', 'First'), ('S\uf0e0aBa', 'First', '('), ('First', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'B\uf0e0bB'), (')', 'B\uf0e0bB', 'B\uf0e0𝜖'), ('B\uf0e0bB', 'B\uf0e0𝜖', 'S\uf0e0aBa'), ('B\uf0e0𝜖', 'S\uf0e0aBa', 'B\uf0e0bB'), ('S\uf0e0aBa', 'B\uf0e0bB', '|'), ('B\uf0e0bB', '|', 'ϵ'), ('|', 'ϵ', 'S'), ('ϵ', 'S', '\uf0e0'), ('S', '\uf0e0', 'B'), ('\uf0e0', 'B', 'A'), ('B', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', '\uf0e0'), ('B', '\uf0e0', '𝜖'), ('\uf0e0', '𝜖', 'A'), ('𝜖', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'Rule'), ('add', 'Rule', '2'), ('Rule', '2', 'add'), ('2', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'S'), ('First', 'S', '{'), ('S', '{', '}'), ('{', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'B'), ('}', 'B', '\uf0e0'), ('B', '\uf0e0', 'b'), ('\uf0e0', 'b', 'B'), ('b', 'B', 'A'), ('B', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'S'), ('(', 'S', ')'), ('S', ')', '='), (')', '=', '{'), ('=', '{', '}'), ('{', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-1'), ('›', 'Example-1', ':'), ('Example-1', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'Follow'), ('FOLLOW', 'Follow', '('), ('Follow', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'Follow'), (')', 'Follow', '('), ('Follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'S\uf0e0aBa'), (')', 'S\uf0e0aBa', 'B\uf0e0bB'), ('S\uf0e0aBa', 'B\uf0e0bB', 'S\uf0e0aBa'), ('B\uf0e0bB', 'S\uf0e0aBa', 'B\uf0e0bB'), ('S\uf0e0aBa', 'B\uf0e0bB', '|'), ('B\uf0e0bB', '|', 'ϵ'), ('|', 'ϵ', 'Follow'), ('ϵ', 'Follow', '('), ('Follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', 'B'), ('{', 'B', '\uf0e0'), ('B', '\uf0e0', 'b'), ('\uf0e0', 'b', 'B'), ('b', 'B', 'Follow'), ('B', 'Follow', '('), ('Follow', '(', 'S'), ('(', 'S', ')'), ('S', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '}'), ('{', '}', 'S'), ('}', 'S', '\uf0e0'), ('S', '\uf0e0', 'B'), ('\uf0e0', 'B', 'A'), ('B', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'Follow'), ('3', 'Follow', '('), ('Follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', '=follow'), (')', '=follow', '('), ('=follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'A'), (')', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '2'), ('Rule', '2', 'First'), ('2', 'First', '('), ('First', '(', 'Rule'), ('(', 'Rule', '1'), ('Rule', '1', ':'), ('1', ':', 'Place'), (':', 'Place', '$'), ('Place', '$', 'FOLLOW'), ('$', 'FOLLOW', '('), ('FOLLOW', '(', 'S'), ('(', 'S', ')'), ('S', ')', '}'), (')', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-1'), ('›', 'Example-1', ':'), ('Example-1', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'S\uf0e0aBa'), ('table', 'S\uf0e0aBa', 'a=FIRST'), ('S\uf0e0aBa', 'a=FIRST', '('), ('a=FIRST', '(', 'aBa'), ('(', 'aBa', ')'), ('aBa', ')', '='), (')', '=', '{'), ('=', '{', '}'), ('{', '}', 'M'), ('}', 'M', '['), ('M', '[', 'S'), ('[', 'S', ','), ('S', ',', ']'), (',', ']', '=S\uf0e0aBa'), (']', '=S\uf0e0aBa', 'S\uf0e0aBa'), ('=S\uf0e0aBa', 'S\uf0e0aBa', 'B\uf0e0bB'), ('S\uf0e0aBa', 'B\uf0e0bB', '|'), ('B\uf0e0bB', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '}'), ('{', '}', 'NT'), ('}', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'S\uf0e0aBa'), ('S', 'S\uf0e0aBa', 'B'), ('S\uf0e0aBa', 'B', 'Rule'), ('B', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-1'), ('›', 'Example-1', ':'), ('Example-1', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'B\uf0e0bB'), ('table', 'B\uf0e0bB', 'a=FIRST'), ('B\uf0e0bB', 'a=FIRST', '('), ('a=FIRST', '(', 'bB'), ('(', 'bB', ')'), ('bB', ')', '='), (')', '=', '{'), ('=', '{', 'b'), ('{', 'b', '}'), ('b', '}', 'M'), ('}', 'M', '['), ('M', '[', 'B'), ('[', 'B', ','), ('B', ',', 'b'), (',', 'b', ']'), ('b', ']', '=B\uf0e0bB'), (']', '=B\uf0e0bB', 'S\uf0e0aBa'), ('=B\uf0e0bB', 'S\uf0e0aBa', 'B\uf0e0bB'), ('S\uf0e0aBa', 'B\uf0e0bB', '|'), ('B\uf0e0bB', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '}'), ('{', '}', 'NT'), ('}', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'S\uf0e0aBa'), ('S', 'S\uf0e0aBa', 'B'), ('S\uf0e0aBa', 'B', 'B\uf0e0bB'), ('B', 'B\uf0e0bB', 'Rule'), ('B\uf0e0bB', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-1'), ('›', 'Example-1', ':'), ('Example-1', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'B\uf0e0ϵ'), ('table', 'B\uf0e0ϵ', 'b=FOLLOW'), ('B\uf0e0ϵ', 'b=FOLLOW', '('), ('b=FOLLOW', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', '}'), ('{', '}', 'M'), ('}', 'M', '['), ('M', '[', 'B'), ('[', 'B', ','), ('B', ',', ']'), (',', ']', '=B\uf0e0𝜖'), (']', '=B\uf0e0𝜖', 'S\uf0e0aBa'), ('=B\uf0e0𝜖', 'S\uf0e0aBa', 'B\uf0e0bB'), ('S\uf0e0aBa', 'B\uf0e0bB', '|'), ('B\uf0e0bB', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '}'), ('{', '}', 'NT'), ('}', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'S\uf0e0aBa'), ('S', 'S\uf0e0aBa', 'Error'), ('S\uf0e0aBa', 'Error', 'Error'), ('Error', 'Error', 'B'), ('Error', 'B', 'B\uf0e0ϵ'), ('B', 'B\uf0e0ϵ', 'B\uf0e0bB'), ('B\uf0e0ϵ', 'B\uf0e0bB', 'Error'), ('B\uf0e0bB', 'Error', 'Rule'), ('Error', 'Rule', ':'), ('Rule', ':', '3'), (':', '3', 'A\uf0e0'), ('3', 'A\uf0e0', 'b'), ('A\uf0e0', 'b', '='), ('b', '=', 'follow'), ('=', 'follow', '('), ('follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', 'b'), (',', 'b', ']'), ('b', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Not'), (':', 'Not', 'required'), ('Not', 'required', 'Step'), ('required', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'S\uf0e0aB'), (')', 'S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0𝜖', 'S\uf0e0aB'), ('S\uf0e0𝜖', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'S'), ('ϵ', 'S', '\uf0e0'), ('S', '\uf0e0', '𝜖'), ('\uf0e0', '𝜖', 'A'), ('𝜖', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '2'), ('Rule', '2', 'add'), ('2', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'S'), ('(', 'S', ')'), ('S', ')', '='), (')', '=', '{'), ('=', '{', ','), ('{', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'S'), ('First', 'S', '{'), ('S', '{', ','), ('{', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'S'), ('}', 'S', '\uf0e0'), ('S', '\uf0e0', 'B'), ('\uf0e0', 'B', 'A'), ('B', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'C'), ('add', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Not'), (':', 'Not', 'required'), ('Not', 'required', 'Step'), ('required', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'B\uf0e0bC'), (')', 'B\uf0e0bC', 'B\uf0e0𝜖'), ('B\uf0e0bC', 'B\uf0e0𝜖', 'S\uf0e0aB'), ('B\uf0e0𝜖', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'B'), ('ϵ', 'B', '\uf0e0'), ('B', '\uf0e0', '𝜖'), ('\uf0e0', '𝜖', 'A'), ('𝜖', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '2'), ('Rule', '2', 'add'), ('2', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'S'), ('First', 'S', '{'), ('S', '{', ','), ('{', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'B'), ('}', 'B', '\uf0e0'), ('B', '\uf0e0', 'b'), ('\uf0e0', 'b', 'C'), ('b', 'C', 'A'), ('C', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'C'), ('add', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Not'), (':', 'Not', 'required'), ('Not', 'required', 'Step'), ('required', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'C'), ('(', 'C', ')'), ('C', ')', 'C\uf0e0cS'), (')', 'C\uf0e0cS', 'C\uf0e0𝜖'), ('C\uf0e0cS', 'C\uf0e0𝜖', 'S\uf0e0aB'), ('C\uf0e0𝜖', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'C'), ('ϵ', 'C', '\uf0e0'), ('C', '\uf0e0', '𝜖'), ('\uf0e0', '𝜖', 'A'), ('𝜖', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '2'), ('Rule', '2', 'add'), ('2', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'S'), ('First', 'S', '{'), ('S', '{', ','), ('{', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'C'), ('}', 'C', '\uf0e0'), ('C', '\uf0e0', 'c'), ('\uf0e0', 'c', 'S'), ('c', 'S', 'A'), ('S', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'C'), ('add', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'Follow'), ('FOLLOW', 'Follow', '('), ('Follow', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'C\uf0e0cS'), (')', 'C\uf0e0cS', 'B\uf0e0bC'), ('C\uf0e0cS', 'B\uf0e0bC', 'S\uf0e0aB'), ('B\uf0e0bC', 'S\uf0e0aB', '='), ('S\uf0e0aB', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '\uf0e0'), ('C', '\uf0e0', 'c'), ('\uf0e0', 'c', 'S'), ('c', 'S', 'Follow'), ('S', 'Follow', '('), ('Follow', '(', 'S'), ('(', 'S', ')'), ('S', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', ','), ('{', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'A'), ('}', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'Follow'), ('3', 'Follow', '('), ('Follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', '=follow'), (')', '=follow', '('), ('=follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'Rule'), (')', 'Rule', '1'), ('Rule', '1', ':'), ('1', ':', 'Place'), (':', 'Place', '$'), ('Place', '$', 'FOLLOW'), ('$', 'FOLLOW', '('), ('FOLLOW', '(', 'S'), ('(', 'S', ')'), ('S', ')', 'S\uf0e0aB'), (')', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'Follow'), ('ϵ', 'Follow', '('), ('Follow', '(', 'S'), ('(', 'S', ')'), ('S', ')', '=Follow'), (')', '=Follow', '('), ('=Follow', '(', 'C'), ('(', 'C', ')'), ('C', ')', 'B'), (')', 'B', '\uf0e0'), ('B', '\uf0e0', 'b'), ('\uf0e0', 'b', 'C'), ('b', 'C', 'A'), ('C', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'Follow'), ('3', 'Follow', '('), ('Follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', '=follow'), (')', '=follow', '('), ('=follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'Follow'), (')', 'Follow', '('), ('Follow', '(', 'C'), ('(', 'C', ')'), ('C', ')', '=Follow'), (')', '=Follow', '('), ('=Follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'S'), ('}', 'S', '\uf0e0'), ('S', '\uf0e0', 'B'), ('\uf0e0', 'B', 'A'), ('B', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'Follow'), ('3', 'Follow', '('), ('Follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', '=follow'), (')', '=follow', '('), ('=follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', 'Follow'), (')', 'Follow', '('), ('Follow', '(', 'B'), ('(', 'B', ')'), ('B', ')', '=Follow'), (')', '=Follow', '('), ('=Follow', '(', 'S'), ('(', 'S', ')'), ('S', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'S\uf0e0aB'), ('table', 'S\uf0e0aB', 'a=FIRST'), ('S\uf0e0aB', 'a=FIRST', '('), ('a=FIRST', '(', 'aB'), ('(', 'aB', ')'), ('aB', ')', '='), (')', '=', '{'), ('=', '{', '}'), ('{', '}', 'M'), ('}', 'M', '['), ('M', '[', 'S'), ('[', 'S', ','), ('S', ',', ']'), (',', ']', '=S\uf0e0aB'), (']', '=S\uf0e0aB', 'NT'), ('=S\uf0e0aB', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', 'c'), ('b', 'c', '$'), ('c', '$', 'S'), ('$', 'S', 'S\uf0e0aB'), ('S', 'S\uf0e0aB', 'B'), ('S\uf0e0aB', 'B', 'C'), ('B', 'C', 'Rule'), ('C', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'S\uf0e0aB'), ('A\uf0e0', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', ','), ('{', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'S\uf0e0𝜖'), ('table', 'S\uf0e0𝜖', 'b=FOLLOW'), ('S\uf0e0𝜖', 'b=FOLLOW', '('), ('b=FOLLOW', '(', 'S'), ('(', 'S', ')'), ('S', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'M'), ('}', 'M', '['), ('M', '[', 'S'), ('[', 'S', ','), ('S', ',', '$'), (',', '$', ']'), ('$', ']', '=S\uf0e0𝜖'), (']', '=S\uf0e0𝜖', 'NT'), ('=S\uf0e0𝜖', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', 'c'), ('b', 'c', '$'), ('c', '$', 'S'), ('$', 'S', 'S\uf0e0aB'), ('S', 'S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0𝜖', 'B'), ('S\uf0e0𝜖', 'B', 'C'), ('B', 'C', 'S\uf0e0aB'), ('C', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'Rule'), ('}', 'Rule', ':'), ('Rule', ':', '3'), (':', '3', 'A\uf0e0'), ('3', 'A\uf0e0', 'b'), ('A\uf0e0', 'b', '='), ('b', '=', 'follow'), ('=', 'follow', '('), ('follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', 'b'), (',', 'b', ']'), ('b', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'B\uf0e0bC'), ('table', 'B\uf0e0bC', 'a=FIRST'), ('B\uf0e0bC', 'a=FIRST', '('), ('a=FIRST', '(', 'bC'), ('(', 'bC', ')'), ('bC', ')', '='), (')', '=', '{'), ('=', '{', 'b'), ('{', 'b', '}'), ('b', '}', 'M'), ('}', 'M', '['), ('M', '[', 'B'), ('[', 'B', ','), ('B', ',', 'b'), (',', 'b', ']'), ('b', ']', '=B\uf0e0bC'), (']', '=B\uf0e0bC', 'NT'), ('=B\uf0e0bC', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', 'c'), ('b', 'c', '$'), ('c', '$', 'S'), ('$', 'S', 'S\uf0e0aB'), ('S', 'S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0𝜖', 'B'), ('S\uf0e0𝜖', 'B', 'B\uf0e0bC'), ('B', 'B\uf0e0bC', 'C'), ('B\uf0e0bC', 'C', 'S\uf0e0aB'), ('C', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'Rule'), ('}', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'B\uf0e0𝜖'), ('table', 'B\uf0e0𝜖', 'b=FOLLOW'), ('B\uf0e0𝜖', 'b=FOLLOW', '('), ('b=FOLLOW', '(', 'B'), ('(', 'B', ')'), ('B', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'M'), ('}', 'M', '['), ('M', '[', 'B'), ('[', 'B', ','), ('B', ',', '$'), (',', '$', ']'), ('$', ']', '=B\uf0e0𝜖'), (']', '=B\uf0e0𝜖', 'NT'), ('=B\uf0e0𝜖', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', 'c'), ('b', 'c', '$'), ('c', '$', 'S'), ('$', 'S', 'S\uf0e0aB'), ('S', 'S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0𝜖', 'B'), ('S\uf0e0𝜖', 'B', 'B\uf0e0bC'), ('B', 'B\uf0e0bC', 'B\uf0e0𝜖'), ('B\uf0e0bC', 'B\uf0e0𝜖', 'C'), ('B\uf0e0𝜖', 'C', 'S\uf0e0aB'), ('C', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'Rule'), ('}', 'Rule', ':'), ('Rule', ':', '3'), (':', '3', 'A\uf0e0'), ('3', 'A\uf0e0', 'b'), ('A\uf0e0', 'b', '='), ('b', '=', 'follow'), ('=', 'follow', '('), ('follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', 'b'), (',', 'b', ']'), ('b', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'C\uf0e0cS'), ('table', 'C\uf0e0cS', 'a=FIRST'), ('C\uf0e0cS', 'a=FIRST', '('), ('a=FIRST', '(', 'cS'), ('(', 'cS', ')'), ('cS', ')', '='), (')', '=', '{'), ('=', '{', 'c'), ('{', 'c', '}'), ('c', '}', 'M'), ('}', 'M', '['), ('M', '[', 'C'), ('[', 'C', ','), ('C', ',', 'c'), (',', 'c', ']'), ('c', ']', '=C\uf0e0cS'), (']', '=C\uf0e0cS', 'NT'), ('=C\uf0e0cS', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', 'c'), ('b', 'c', '$'), ('c', '$', 'S'), ('$', 'S', 'S\uf0e0aB'), ('S', 'S\uf0e0aB', 'S\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0𝜖', 'B'), ('S\uf0e0𝜖', 'B', 'B\uf0e0bC'), ('B', 'B\uf0e0bC', 'B\uf0e0𝜖'), ('B\uf0e0bC', 'B\uf0e0𝜖', 'C'), ('B\uf0e0𝜖', 'C', 'C\uf0e0cS'), ('C', 'C\uf0e0cS', 'S\uf0e0aB'), ('C\uf0e0cS', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'Rule'), ('}', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-2'), ('›', 'Example-2', ':'), ('Example-2', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Prepare'), (':', 'Prepare', 'predictive'), ('Prepare', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'C\uf0e0𝜖'), ('table', 'C\uf0e0𝜖', 'b=FOLLOW'), ('C\uf0e0𝜖', 'b=FOLLOW', '('), ('b=FOLLOW', '(', 'C'), ('(', 'C', ')'), ('C', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', '}'), ('$', '}', 'M'), ('}', 'M', '['), ('M', '[', 'C'), ('[', 'C', ','), ('C', ',', '$'), (',', '$', ']'), ('$', ']', '=C\uf0e0𝜖'), (']', '=C\uf0e0𝜖', 'NT'), ('=C\uf0e0𝜖', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'b'), ('Symbol', 'b', 'c'), ('b', 'c', '$'), ('c', '$', 'S'), ('$', 'S', 'S\uf0e0aB'), ('S', 'S\uf0e0aB', 'Error'), ('S\uf0e0aB', 'Error', 'Error'), ('Error', 'Error', 'S\uf0e0𝜖'), ('Error', 'S\uf0e0𝜖', 'B'), ('S\uf0e0𝜖', 'B', 'Error'), ('B', 'Error', 'B\uf0e0bB'), ('Error', 'B\uf0e0bB', 'Error'), ('B\uf0e0bB', 'Error', 'B\uf0e0𝜖'), ('Error', 'B\uf0e0𝜖', 'C'), ('B\uf0e0𝜖', 'C', 'Error'), ('C', 'Error', 'Error'), ('Error', 'Error', 'C\uf0e0cS'), ('Error', 'C\uf0e0cS', 'C\uf0e0𝜖'), ('C\uf0e0cS', 'C\uf0e0𝜖', 'S\uf0e0aB'), ('C\uf0e0𝜖', 'S\uf0e0aB', '|'), ('S\uf0e0aB', '|', 'ϵ'), ('|', 'ϵ', 'B\uf0e0bC'), ('ϵ', 'B\uf0e0bC', '|'), ('B\uf0e0bC', '|', 'ϵ'), ('|', 'ϵ', 'C\uf0e0cS'), ('ϵ', 'C\uf0e0cS', '|'), ('C\uf0e0cS', '|', 'ϵ'), ('|', 'ϵ', 'NT'), ('ϵ', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'S'), ('Follow', 'S', '{'), ('S', '{', '}'), ('{', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'B'), ('}', 'B', '{'), ('B', '{', 'b'), ('{', 'b', ','), ('b', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'C'), ('}', 'C', '{'), ('C', '{', 'c'), ('{', 'c', ','), ('c', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', '}'), ('$', '}', 'Rule'), ('}', 'Rule', ':'), ('Rule', ':', '3'), (':', '3', 'A\uf0e0'), ('3', 'A\uf0e0', 'b'), ('A\uf0e0', 'b', '='), ('b', '=', 'follow'), ('=', 'follow', '('), ('follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', 'b'), (',', 'b', ']'), ('b', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'E\uf0e0E+T'), ('parsing', 'E\uf0e0E+T', '|'), ('E\uf0e0E+T', '|', 'T'), ('|', 'T', 'T\uf0e0T'), ('T', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Step'), ('id', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Remove'), (':', 'Remove', 'left'), ('Remove', 'left', 'recursion'), ('left', 'recursion', 'E\uf0e0TE'), ('recursion', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'E\uf0e0TE'), (')', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'First'), ('’', 'First', '('), ('First', '(', 'T'), ('(', 'T', ')'), ('T', ')', 'T\uf0e0FT'), (')', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'First'), ('’', 'First', '('), ('First', '(', 'F'), ('(', 'F', ')'), ('F', ')', 'F\uf0e0'), (')', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'F\uf0e0id'), (')', 'F\uf0e0id', 'E\uf0e0TE'), ('F\uf0e0id', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'E'), ('id', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'Y1'), ('\uf0e0', 'Y1', 'Y2'), ('Y1', 'Y2', 'Rule'), ('Y2', 'Rule', '3'), ('Rule', '3', 'First'), ('3', 'First', '('), ('First', '(', 'A'), ('(', 'A', ')'), ('A', ')', '=First'), (')', '=First', '('), ('=First', '(', 'Y1'), ('(', 'Y1', ')'), ('Y1', ')', 'T'), (')', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'Y1'), ('\uf0e0', 'Y1', 'Y2'), ('Y1', 'Y2', 'Rule'), ('Y2', 'Rule', '3'), ('Rule', '3', 'First'), ('3', 'First', '('), ('First', '(', 'A'), ('(', 'A', ')'), ('A', ')', '=First'), (')', '=First', '('), ('=First', '(', 'Y1'), ('(', 'Y1', ')'), ('Y1', ')', 'FIRST'), (')', 'FIRST', '('), ('FIRST', '(', 'E'), ('(', 'E', ')'), ('E', ')', '=FIRST'), (')', '=FIRST', '('), ('=FIRST', '(', 'T'), ('(', 'T', ')'), ('T', ')', 'FIRST'), (')', 'FIRST', '('), ('FIRST', '(', 'T'), ('(', 'T', ')'), ('T', ')', '=FIRST'), (')', '=FIRST', '('), ('=FIRST', '(', 'F'), ('(', 'F', ')'), ('F', ')', 'F'), (')', 'F', '\uf0e0'), ('F', '\uf0e0', '('), ('\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'A'), (')', 'A', '\uf0e0'), ('A', '\uf0e0', 'F'), ('\uf0e0', 'F', '\uf0e0'), ('F', '\uf0e0', 'id'), ('\uf0e0', 'id', 'A'), ('id', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'Rule'), ('add', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'F'), ('(', 'F', ')'), ('F', ')', '='), (')', '=', '{'), ('=', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'NT'), ('}', 'NT', 'First'), ('NT', 'First', 'E'), ('First', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'E'), ('}', 'E', '’'), ('E', '’', 'T'), ('’', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '’'), ('T', '’', 'F'), ('’', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '='), ('}', '=', '{'), ('=', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '='), ('}', '=', '{'), ('=', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'E'), ('(', 'E', '’'), ('E', '’', ')'), ('’', ')', 'E'), (')', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'A'), ('\uf0e0𝜖', 'A', '\uf0e0'), ('A', '\uf0e0', 'E'), ('\uf0e0', 'E', '’'), ('E', '’', '\uf0e0'), ('’', '\uf0e0', 'A'), ('\uf0e0', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'Rule'), ('add', 'Rule', '2'), ('Rule', '2', 'add'), ('2', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'E'), ('(', 'E', '’'), ('E', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'E'), ('}', 'E', '’'), ('E', '’', '\uf0e0'), ('’', '\uf0e0', '+'), ('\uf0e0', '+', 'T'), ('+', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'E'), ('First', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '’'), ('T', '’', 'F'), ('’', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FIRST'), ('Compute', 'FIRST', 'First'), ('FIRST', 'First', '('), ('First', '(', 'T'), ('(', 'T', '’'), ('T', '’', ')'), ('’', ')', 'T'), (')', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'A'), ('\uf0e0𝜖', 'A', '\uf0e0'), ('A', '\uf0e0', 'T'), ('\uf0e0', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', 'A'), ('\uf0e0', 'A', '\uf0e0'), ('A', '\uf0e0', 'Rule'), ('\uf0e0', 'Rule', '1'), ('Rule', '1', 'add'), ('1', 'add', 'Rule'), ('add', 'Rule', '2'), ('Rule', '2', 'add'), ('2', 'add', 'FIRST'), ('add', 'FIRST', '('), ('FIRST', '(', 'T'), ('(', 'T', '’'), ('T', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'T'), ('}', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'F'), ('*', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'E'), ('First', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'F\uf0e0'), (')', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'NT'), (')', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'Rule'), ('}', 'Rule', '1'), ('Rule', '1', ':'), ('1', ':', 'Place'), (':', 'Place', '$'), ('Place', '$', 'FOLLOW'), ('$', 'FOLLOW', '('), ('FOLLOW', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'FOLLOW'), (')', 'FOLLOW', '('), ('FOLLOW', '(', 'E'), ('(', 'E', ')'), ('E', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', ','), ('$', ',', 'F'), (',', 'F', '\uf0e0'), ('F', '\uf0e0', '('), ('\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'A'), (')', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '2'), ('Rule', '2', ')'), ('2', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'E'), ('(', 'E', '’'), ('E', '’', ')'), ('’', ')', 'E\uf0e0TE'), (')', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'FOLLOW'), ('}', 'FOLLOW', '('), ('FOLLOW', '(', 'E'), ('(', 'E', '’'), ('E', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', 'E'), (')', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'E'), ('3', 'E', '’'), ('E', '’', '\uf0e0'), ('’', '\uf0e0', '+T'), ('\uf0e0', '+T', 'E'), ('+T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'E\uf0e0TE'), ('3', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', '}'), ('id', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'T'), ('(', 'T', ')'), ('T', ')', 'E\uf0e0TE'), (')', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'FOLLOW'), ('}', 'FOLLOW', '('), ('FOLLOW', '(', 'T'), ('(', 'T', ')'), ('T', ')', '='), (')', '=', '{'), ('=', '{', '+'), ('{', '+', ','), ('+', ',', 'E'), (',', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', '$'), ('B', '$', ','), ('$', ',', ')'), (',', ')', 'E'), (')', 'E', '\uf0e0'), ('E', '\uf0e0', 'T'), ('\uf0e0', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'Rule'), ('3', 'Rule', '2'), ('Rule', '2', 'E\uf0e0TE'), ('2', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'T'), ('(', 'T', ')'), ('T', ')', 'E'), (')', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'FOLLOW'), ('}', 'FOLLOW', '('), ('FOLLOW', '(', 'T'), ('(', 'T', ')'), ('T', ')', '='), (')', '=', '{'), ('=', '{', '+'), ('{', '+', ','), ('+', ',', 'E'), (',', 'E', '’'), ('E', '’', '\uf0e0'), ('’', '\uf0e0', '+'), ('\uf0e0', '+', 'T'), ('+', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', '$'), ('B', '$', ','), ('$', ',', ')'), (',', ')', 'Rule'), (')', 'Rule', '3'), ('Rule', '3', 'Rule'), ('3', 'Rule', '2'), ('Rule', '2', 'E'), ('2', 'E', '’'), ('E', '’', '\uf0e0'), ('’', '\uf0e0', '+'), ('\uf0e0', '+', 'T'), ('+', 'T', 'E'), ('T', 'E', '’'), ('E', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'E\uf0e0TE'), ('B', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', '}'), ('id', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'T'), ('(', 'T', '’'), ('T', '’', ')'), ('’', ')', 'T\uf0e0FT'), (')', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'FOLLOW'), ('}', 'FOLLOW', '('), ('FOLLOW', '(', 'T'), ('(', 'T', '’'), ('T', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '+'), ('{', '+', '$'), ('+', '$', ','), ('$', ',', ')'), (',', ')', 'T'), (')', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'T'), ('3', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'F'), ('*', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'E\uf0e0TE'), ('3', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', '}'), ('id', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'F'), ('(', 'F', ')'), ('F', ')', 'T\uf0e0FT'), (')', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'FOLLOW'), ('}', 'FOLLOW', '('), ('FOLLOW', '(', 'F'), ('(', 'F', ')'), ('F', ')', '='), (')', '=', '{'), ('=', '{', '*'), ('{', '*', ','), ('*', ',', 'T'), (',', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', '+'), ('B', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', 'T'), (')', 'T', '\uf0e0'), ('T', '\uf0e0', 'F'), ('\uf0e0', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'Rule'), ('B', 'Rule', '3'), ('Rule', '3', 'Rule'), ('3', 'Rule', '2'), ('Rule', '2', 'E\uf0e0TE'), ('2', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Compute'), (':', 'Compute', 'FOLLOW'), ('Compute', 'FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW', '('), ('FOLLOW', '(', 'F'), ('(', 'F', ')'), ('F', ')', 'T'), (')', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'FOLLOW'), ('}', 'FOLLOW', '('), ('FOLLOW', '(', 'F'), ('(', 'F', ')'), ('F', ')', '='), (')', '=', '{'), ('=', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', 'T'), (',', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'F'), ('*', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', '$'), ('B', '$', ','), ('$', ',', ')'), (',', ')', 'Rule'), (')', 'Rule', '3'), ('Rule', '3', 'Rule'), ('3', 'Rule', '2'), ('Rule', '2', 'T'), ('2', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'F'), ('*', 'F', 'T'), ('F', 'T', '’'), ('T', '’', 'A'), ('’', 'A', '\uf0e0'), ('A', '\uf0e0', 'B'), ('\uf0e0', 'B', 'E\uf0e0TE'), ('B', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', '}'), ('id', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'E\uf0e0TE'), ('table', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'a=FIRST'), ('’', 'a=FIRST', '('), ('a=FIRST', '(', 'TE'), ('(', 'TE', '’'), ('TE', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'M'), ('}', 'M', '['), ('M', '[', 'E'), ('[', 'E', ','), ('E', ',', '('), (',', '(', ']'), ('(', ']', '=E\uf0e0TE'), (']', '=E\uf0e0TE', '’'), ('=E\uf0e0TE', '’', 'M'), ('’', 'M', '['), ('M', '[', 'E'), ('[', 'E', ','), ('E', ',', 'id'), (',', 'id', ']'), ('id', ']', '=E\uf0e0TE'), (']', '=E\uf0e0TE', '’'), ('=E\uf0e0TE', '’', 'NT'), ('’', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'Rule'), ('}', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'T'), ('’', 'T', 'T'), ('T', 'T', '’'), ('T', '’', 'F'), ('’', 'F', 'E\uf0e0TE'), ('F', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'E'), ('table', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'a=FIRST'), ('’', 'a=FIRST', '('), ('a=FIRST', '(', '+TE'), ('(', '+TE', '’'), ('+TE', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '+'), ('{', '+', '}'), ('+', '}', 'M'), ('}', 'M', '['), ('M', '[', 'E'), ('[', 'E', '’'), ('E', '’', ','), ('’', ',', '+'), (',', '+', ']'), ('+', ']', '=E'), (']', '=E', '’'), ('=E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'NT'), ('’', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'T'), ('’', 'T', 'T'), ('T', 'T', '’'), ('T', '’', 'F'), ('’', 'F', 'Rule'), ('F', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'E'), ('table', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'b=FOLLOW'), ('\uf0e0𝜖', 'b=FOLLOW', '('), ('b=FOLLOW', '(', 'E'), ('(', 'E', '’'), ('E', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'M'), ('}', 'M', '['), ('M', '[', 'E'), ('[', 'E', '’'), ('E', '’', ','), ('’', ',', '$'), (',', '$', ']'), ('$', ']', '=E'), (']', '=E', '’'), ('=E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'M'), ('\uf0e0𝜖', 'M', '['), ('M', '[', 'E'), ('[', 'E', '’'), ('E', '’', ','), ('’', ',', ')'), (',', ')', ']'), (')', ']', '=E'), (']', '=E', '’'), ('=E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'NT'), ('\uf0e0𝜖', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T'), ('T', 'T', '’'), ('T', '’', 'F'), ('’', 'F', 'Rule'), ('F', 'Rule', ':'), ('Rule', ':', '3'), (':', '3', 'A\uf0e0'), ('3', 'A\uf0e0', 'b'), ('A\uf0e0', 'b', '='), ('b', '=', 'follow'), ('=', 'follow', '('), ('follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', 'b'), (',', 'b', ']'), ('b', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'T\uf0e0FT'), ('table', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'a=FIRST'), ('’', 'a=FIRST', '('), ('a=FIRST', '(', 'FT'), ('(', 'FT', '’'), ('FT', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', 'M'), ('}', 'M', '['), ('M', '[', 'T'), ('[', 'T', ','), ('T', ',', '('), (',', '(', ']'), ('(', ']', '=T\uf0e0FT'), (']', '=T\uf0e0FT', '’'), ('=T\uf0e0FT', '’', 'M'), ('’', 'M', '['), ('M', '[', 'T'), ('[', 'T', ','), ('T', ',', 'id'), (',', 'id', ']'), ('id', ']', '=T\uf0e0FT'), (']', '=T\uf0e0FT', '’'), ('=T\uf0e0FT', '’', 'NT'), ('’', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T\uf0e0FT'), ('’', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', 'F'), ('’', 'F', 'NT'), ('F', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Rule'), ('id', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'Prof.'), ('A\uf0e0', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'T'), ('table', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'a=FIRST'), ('’', 'a=FIRST', '('), ('a=FIRST', '(', '*'), ('(', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '*'), ('{', '*', '}'), ('*', '}', 'M'), ('}', 'M', '['), ('M', '[', 'T'), ('[', 'T', '’'), ('T', '’', ','), ('’', ',', '*'), (',', '*', ']'), ('*', ']', '=T'), (']', '=T', '’'), ('=T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'NT'), ('’', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T\uf0e0FT'), ('’', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'F'), ('’', 'F', 'Rule'), ('F', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'T'), ('table', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'b=FOLLOW'), ('\uf0e0𝜖', 'b=FOLLOW', '('), ('b=FOLLOW', '(', 'T'), ('(', 'T', '’'), ('T', '’', ')'), ('’', ')', '='), (')', '=', '{'), ('=', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'M'), ('}', 'M', '['), ('M', '[', 'T'), ('[', 'T', '’'), ('T', '’', ','), ('’', ',', '+'), (',', '+', ']'), ('+', ']', '=T'), (']', '=T', '’'), ('=T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'M'), ('\uf0e0𝜖', 'M', '['), ('M', '[', 'T'), ('[', 'T', '’'), ('T', '’', ','), ('’', ',', '$'), (',', '$', ']'), ('$', ']', '=T'), (']', '=T', '’'), ('=T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'M'), ('\uf0e0𝜖', 'M', '['), ('M', '[', 'T'), ('[', 'T', '’'), ('T', '’', ','), ('’', ',', ')'), (',', ')', ']'), (')', ']', '=T'), (']', '=T', '’'), ('=T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'NT'), ('\uf0e0𝜖', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T\uf0e0FT'), ('’', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'F'), ('\uf0e0𝜖', 'F', 'Rule'), ('F', 'Rule', ':'), ('Rule', ':', '3'), (':', '3', 'A\uf0e0'), ('3', 'A\uf0e0', 'b'), ('A\uf0e0', 'b', '='), ('b', '=', 'follow'), ('=', 'follow', '('), ('follow', '(', 'A'), ('(', 'A', ')'), ('A', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', 'b'), (',', 'b', ']'), ('b', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'F\uf0e0'), ('table', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'a=FIRST'), (')', 'a=FIRST', '('), ('a=FIRST', '(', '('), ('(', '(', 'E'), ('(', 'E', ')'), ('E', ')', ')'), (')', ')', '='), (')', '=', '{'), ('=', '{', '('), ('{', '(', '}'), ('(', '}', 'M'), ('}', 'M', '['), ('M', '[', 'F'), ('[', 'F', ','), ('F', ',', '('), (',', '(', ']'), ('(', ']', '=F\uf0e0'), (']', '=F\uf0e0', '('), ('=F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'NT'), (')', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T\uf0e0FT'), ('’', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'F'), ('\uf0e0𝜖', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'Rule'), (')', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Construct'), (':', 'Construct', 'predictive'), ('Construct', 'predictive', 'parsing'), ('predictive', 'parsing', 'table'), ('parsing', 'table', 'F\uf0e0id'), ('table', 'F\uf0e0id', 'a=FIRST'), ('F\uf0e0id', 'a=FIRST', '('), ('a=FIRST', '(', 'id'), ('(', 'id', ')'), ('id', ')', '='), (')', '=', '{'), ('=', '{', 'id'), ('{', 'id', '}'), ('id', '}', 'M'), ('}', 'M', '['), ('M', '[', 'F'), ('[', 'F', ','), ('F', ',', 'id'), (',', 'id', ']'), ('id', ']', '=F\uf0e0id'), (']', '=F\uf0e0id', 'NT'), ('=F\uf0e0id', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E\uf0e0TE'), ('’', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T\uf0e0FT'), ('’', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'F'), ('\uf0e0𝜖', 'F', 'F\uf0e0id'), ('F', 'F\uf0e0id', 'F\uf0e0'), ('F\uf0e0id', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'Rule'), (')', 'Rule', ':'), ('Rule', ':', '2'), (':', '2', 'A\uf0e0'), ('2', 'A\uf0e0', '='), ('A\uf0e0', '=', 'first'), ('=', 'first', '('), ('first', '(', ')'), ('(', ')', 'M'), (')', 'M', '['), ('M', '[', 'A'), ('[', 'A', ','), ('A', ',', ']'), (',', ']', '='), (']', '=', 'A\uf0e0'), ('=', 'A\uf0e0', 'NT'), ('A\uf0e0', 'NT', 'First'), ('NT', 'First', 'Follow'), ('First', 'Follow', 'E'), ('Follow', 'E', '{'), ('E', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E'), ('}', 'E', '’'), ('E', '’', '{'), ('’', '{', '+'), ('{', '+', ','), ('+', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '$'), ('{', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '{'), ('T', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'T'), ('}', 'T', '’'), ('T', '’', '{'), ('’', '{', '*'), ('{', '*', ','), ('*', ',', '𝜖'), (',', '𝜖', '}'), ('𝜖', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'F'), ('}', 'F', '{'), ('F', '{', '('), ('{', '(', ','), ('(', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', '+'), (',', '+', ','), ('+', ',', '$'), (',', '$', ','), ('$', ',', ')'), (',', ')', '}'), (')', '}', 'E\uf0e0TE'), ('}', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'T\uf0e0FT'), ('ϵ', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', '|'), ('’', '|', 'ϵ'), ('|', 'ϵ', 'F\uf0e0'), ('ϵ', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '4'), ('Step', '4', ':'), ('4', ':', 'Make'), (':', 'Make', 'undefined'), ('Make', 'undefined', 'entry'), ('undefined', 'entry', 'table'), ('entry', 'table', 'Error'), ('table', 'Error', 'NT'), ('Error', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'E\uf0e0TE'), ('Error', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'E'), ('Error', 'E', '’'), ('E', '’', 'Error'), ('’', 'Error', 'E'), ('Error', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'E'), ('Error', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'T\uf0e0FT'), ('Error', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'T'), ('Error', 'T', '’'), ('T', '’', 'Error'), ('’', 'Error', 'T'), ('Error', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'Error'), ('’', 'Error', 'T'), ('Error', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'F'), ('\uf0e0𝜖', 'F', 'F\uf0e0id'), ('F', 'F\uf0e0id', 'Error'), ('F\uf0e0id', 'Error', 'Error'), ('Error', 'Error', 'F\uf0e0'), ('Error', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'Error'), (')', 'Error', 'Error'), ('Error', 'Error', 'Prof.'), ('Error', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example-3'), ('›', 'Example-3', ':'), ('Example-3', ':', 'LL'), (':', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'parsing'), (')', 'parsing', 'Step'), ('parsing', 'Step', '4'), ('Step', '4', ':'), ('4', ':', 'Parse'), (':', 'Parse', 'string'), ('Parse', 'string', ':'), ('string', ':', 'id'), (':', 'id', '+'), ('id', '+', 'id'), ('+', 'id', '*'), ('id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'STACK'), ('$', 'STACK', 'INPUT'), ('STACK', 'INPUT', 'OUTPUT'), ('INPUT', 'OUTPUT', 'E'), ('OUTPUT', 'E', '$'), ('E', '$', 'id+id'), ('$', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'TE'), ('$', 'TE', '’'), ('TE', '’', '$'), ('’', '$', 'id+id'), ('$', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'E\uf0e0TE'), ('$', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'FT'), ('’', 'FT', '’'), ('FT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', 'id+id'), ('$', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'T\uf0e0FT'), ('$', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'idT'), ('’', 'idT', '’'), ('idT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', 'id+id'), ('$', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'F\uf0e0id'), ('$', 'F\uf0e0id', 'T'), ('F\uf0e0id', 'T', '’'), ('T', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', '+id'), ('$', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+TE'), ('$', '+TE', '’'), ('+TE', '’', '$'), ('’', '$', '+id'), ('$', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'E'), ('$', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', '+id'), ('$', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'T'), ('$', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'idT'), ('\uf0e0𝜖', 'idT', '’'), ('idT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', 'id'), ('$', 'id', '$'), ('id', '$', 'F\uf0e0id'), ('$', 'F\uf0e0id', 'TE'), ('F\uf0e0id', 'TE', '’'), ('TE', '’', '$'), ('’', '$', 'id'), ('$', 'id', '*'), ('id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'T'), ('$', 'T', '’'), ('T', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', '$'), ('$', '$', 'FT'), ('$', 'FT', '’'), ('FT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', 'id'), ('$', 'id', '*'), ('id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'T\uf0e0FT'), ('$', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', '$'), ('$', '$', 'T'), ('$', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'FT'), ('\uf0e0𝜖', 'FT', '’'), ('FT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', 'id'), ('$', 'id', '$'), ('id', '$', '$'), ('$', '$', '$'), ('$', '$', 'E'), ('$', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', '*'), ('\uf0e0𝜖', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', '*'), ('$', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'T\uf0e0'), ('$', 'T\uf0e0', '*'), ('T\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'T'), ('’', 'T', '’'), ('T', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', '*'), ('$', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'idT'), ('$', 'idT', '’'), ('idT', '’', 'E'), ('’', 'E', '’'), ('E', '’', '$'), ('’', '$', 'id'), ('$', 'id', '*'), ('id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'F\uf0e0id'), ('$', 'F\uf0e0id', 'NT'), ('F\uf0e0id', 'NT', 'Input'), ('NT', 'Input', 'Symbol'), ('Input', 'Symbol', 'id'), ('Symbol', 'id', '+'), ('id', '+', '*'), ('+', '*', '('), ('*', '(', ')'), ('(', ')', '$'), (')', '$', 'E'), ('$', 'E', 'E\uf0e0TE'), ('E', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'E\uf0e0TE'), ('Error', 'E\uf0e0TE', '’'), ('E\uf0e0TE', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'E'), ('Error', 'E', '’'), ('E', '’', 'Error'), ('’', 'Error', 'E'), ('Error', 'E', '’'), ('E', '’', '\uf0e0+TE'), ('’', '\uf0e0+TE', '’'), ('\uf0e0+TE', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'E'), ('Error', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'E'), ('\uf0e0𝜖', 'E', '’'), ('E', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', 'T\uf0e0FT'), ('T', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'T\uf0e0FT'), ('Error', 'T\uf0e0FT', '’'), ('T\uf0e0FT', '’', 'Error'), ('’', 'Error', 'Error'), ('Error', 'Error', 'T'), ('Error', 'T', '’'), ('T', '’', 'Error'), ('’', 'Error', 'T'), ('Error', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0'), ('’', '\uf0e0', '*'), ('\uf0e0', '*', 'FT'), ('*', 'FT', '’'), ('FT', '’', 'Error'), ('’', 'Error', 'T'), ('Error', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'T'), ('\uf0e0𝜖', 'T', '’'), ('T', '’', '\uf0e0𝜖'), ('’', '\uf0e0𝜖', 'F'), ('\uf0e0𝜖', 'F', 'F\uf0e0id'), ('F', 'F\uf0e0id', 'Error'), ('F\uf0e0id', 'Error', 'Error'), ('Error', 'Error', 'F\uf0e0'), ('Error', 'F\uf0e0', '('), ('F\uf0e0', '(', 'E'), ('(', 'E', ')'), ('E', ')', 'Error'), (')', 'Error', 'Error'), ('Error', 'Error', 'Prof.'), ('Error', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'methods'), ('Parsing', 'methods', 'Parsing'), ('methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'parsing'), ('predictive', 'parsing', ')'), ('parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Recursive'), ('›', 'Recursive', 'descent'), ('Recursive', 'descent', 'parsing'), ('descent', 'parsing', 'A'), ('parsing', 'A', 'top'), ('A', 'top', 'parsing'), ('top', 'parsing', 'executes'), ('parsing', 'executes', 'set'), ('executes', 'set', 'recursive'), ('set', 'recursive', 'procedure'), ('recursive', 'procedure', 'process'), ('procedure', 'process', 'input'), ('process', 'input', 'without'), ('input', 'without', 'backtracking'), ('without', 'backtracking', 'called'), ('backtracking', 'called', 'recursive'), ('called', 'recursive', 'descent'), ('recursive', 'descent', 'parser'), ('descent', 'parser', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-1', 'NN'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'JJ'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('S\uf0e0aBa', 'NNP'), ('First', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('B\uf0e0bB', 'NNP'), ('B\uf0e0𝜖', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('\uf0e0', 'NNP'), ('𝜖', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'NN'), ('Rule', 'NNP'), ('2', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('B', 'NNP'), ('\uf0e0', 'NNP'), ('b', 'NN'), ('B', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-1', 'NN'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('Follow', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('Follow', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('Follow', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'NNP'), ('{', '('), ('B', 'NNP'), ('\uf0e0', 'NNP'), ('b', 'NN'), ('B', 'NNP'), ('Follow', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('}', ')'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('Follow', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), ('=follow', 'NN'), ('(', '('), ('B', 'NNP'), (')', ')'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('2', 'CD'), ('First', 'NNP'), ('(', '('), ('Rule', 'NNP'), ('1', 'CD'), (':', ':'), ('Place', 'NN'), ('$', '$'), ('FOLLOW', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-1', 'NN'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('S\uf0e0aBa', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('aBa', 'NN'), (')', ')'), ('=', 'NN'), ('{', '('), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('S', 'NNP'), (',', ','), (']', 'NNP'), ('=S\uf0e0aBa', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('}', ')'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-1', 'NN'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('B\uf0e0bB', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('bB', 'NN'), (')', ')'), ('=', 'FW'), ('{', '('), ('b', 'NN'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('B', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=B\uf0e0bB', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('}', ')'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B', 'NNP'), ('B\uf0e0bB', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-1', 'NN'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('B\uf0e0ϵ', 'NNP'), ('b=FOLLOW', 'NN'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'NN'), ('{', '('), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('B', 'NNP'), (',', ','), (']', 'NNP'), ('=B\uf0e0𝜖', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('}', ')'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('B', 'NNP'), ('B\uf0e0ϵ', 'NNP'), ('B\uf0e0bB', 'NNP'), ('Error', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('3', 'CD'), ('A\uf0e0', 'NNP'), ('b', 'NN'), ('=', 'NN'), ('follow', 'NN'), ('(', '('), ('A', 'DT'), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'JJ'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('S\uf0e0aB', 'NNP'), ('S\uf0e0𝜖', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('𝜖', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('2', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=', 'NNP'), ('{', '('), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('S', 'NNP'), ('{', '('), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'RB'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'JJ'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('B\uf0e0bC', 'NNP'), ('B\uf0e0𝜖', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B', 'NNP'), ('\uf0e0', 'NNP'), ('𝜖', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('2', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('S', 'NNP'), ('{', '('), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('B', 'NNP'), ('\uf0e0', 'NNP'), ('b', 'NN'), ('C', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'RB'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'JJ'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('C', 'NNP'), (')', ')'), ('C\uf0e0cS', 'NNP'), ('C\uf0e0𝜖', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C', 'NNP'), ('\uf0e0', 'NNP'), ('𝜖', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('2', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'JJ'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('S', 'NNP'), ('{', '('), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('C', 'NNP'), ('\uf0e0', 'NNP'), ('c', 'VBZ'), ('S', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'RB'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('Follow', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('C\uf0e0cS', 'NNP'), ('B\uf0e0bC', 'NNP'), ('S\uf0e0aB', 'NNP'), ('=', 'NNP'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('\uf0e0', 'NNP'), ('c', 'VBP'), ('S', 'NNP'), ('Follow', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('Follow', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), ('=follow', 'NN'), ('(', '('), ('B', 'NNP'), (')', ')'), ('Rule', 'VBD'), ('1', 'CD'), (':', ':'), ('Place', 'NN'), ('$', '$'), ('FOLLOW', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('Follow', 'NNP'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=Follow', 'NN'), ('(', '('), ('C', 'NNP'), (')', ')'), ('B', 'NNP'), ('\uf0e0', 'NNP'), ('b', 'NN'), ('C', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('Follow', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), ('=follow', 'NN'), ('(', '('), ('B', 'NNP'), (')', ')'), ('Follow', 'NNP'), ('(', '('), ('C', 'NNP'), (')', ')'), ('=Follow', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('Follow', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), ('=follow', 'NN'), ('(', '('), ('B', 'NNP'), (')', ')'), ('Follow', 'NNP'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=Follow', 'NN'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('S\uf0e0aB', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('aB', 'NN'), (')', ')'), ('=', 'NN'), ('{', '('), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('S', 'NNP'), (',', ','), (']', 'NNP'), ('=S\uf0e0aB', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('c', 'JJ'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aB', 'NNP'), ('B', 'NNP'), ('C', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('S\uf0e0𝜖', 'NNP'), ('b=FOLLOW', 'NN'), ('(', '('), ('S', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('S', 'NNP'), (',', ','), ('$', '$'), (']', 'JJ'), ('=S\uf0e0𝜖', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('c', 'JJ'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aB', 'NNP'), ('S\uf0e0𝜖', 'NNP'), ('B', 'NNP'), ('C', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('Rule', 'NNP'), (':', ':'), ('3', 'CD'), ('A\uf0e0', 'NNP'), ('b', 'NN'), ('=', 'NN'), ('follow', 'NN'), ('(', '('), ('A', 'DT'), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('B\uf0e0bC', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('bC', 'NN'), (')', ')'), ('=', 'FW'), ('{', '('), ('b', 'NN'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('B', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=B\uf0e0bC', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('c', 'JJ'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aB', 'NNP'), ('S\uf0e0𝜖', 'NNP'), ('B', 'NNP'), ('B\uf0e0bC', 'NNP'), ('C', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('B\uf0e0𝜖', 'NNP'), ('b=FOLLOW', 'NN'), ('(', '('), ('B', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('B', 'NNP'), (',', ','), ('$', '$'), (']', 'JJ'), ('=B\uf0e0𝜖', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('c', 'JJ'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aB', 'NNP'), ('S\uf0e0𝜖', 'NNP'), ('B', 'NNP'), ('B\uf0e0bC', 'NNP'), ('B\uf0e0𝜖', 'NNP'), ('C', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('Rule', 'NNP'), (':', ':'), ('3', 'CD'), ('A\uf0e0', 'NNP'), ('b', 'NN'), ('=', 'NN'), ('follow', 'NN'), ('(', '('), ('A', 'DT'), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('C\uf0e0cS', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('cS', 'NN'), (')', ')'), ('=', 'FW'), ('{', '('), ('c', 'VB'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('C', 'NNP'), (',', ','), ('c', 'VBZ'), (']', 'NNP'), ('=C\uf0e0cS', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('c', 'JJ'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aB', 'NNP'), ('S\uf0e0𝜖', 'NNP'), ('B', 'NNP'), ('B\uf0e0bC', 'NNP'), ('B\uf0e0𝜖', 'NNP'), ('C', 'NNP'), ('C\uf0e0cS', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-2', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Prepare', 'NNP'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('C\uf0e0𝜖', 'NNP'), ('b=FOLLOW', 'NN'), ('(', '('), ('C', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('C', 'NNP'), (',', ','), ('$', '$'), (']', 'JJ'), ('=C\uf0e0𝜖', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('b', 'VBD'), ('c', 'JJ'), ('$', '$'), ('S', 'NNP'), ('S\uf0e0aB', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('S\uf0e0𝜖', 'NNP'), ('B', 'NNP'), ('Error', 'NNP'), ('B\uf0e0bB', 'NNP'), ('Error', 'NNP'), ('B\uf0e0𝜖', 'NNP'), ('C', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('C\uf0e0cS', 'NNP'), ('C\uf0e0𝜖', 'NNP'), ('S\uf0e0aB', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('B\uf0e0bC', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('C\uf0e0cS', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('S', 'NNP'), ('{', '('), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('B', 'NNP'), ('{', '('), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('C', 'NNP'), ('{', '('), ('c', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), ('}', ')'), ('Rule', 'NNP'), (':', ':'), ('3', 'CD'), ('A\uf0e0', 'NNP'), ('b', 'NN'), ('=', 'NN'), ('follow', 'NN'), ('(', '('), ('A', 'DT'), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('E\uf0e0E+T', 'NNP'), ('|', 'NNP'), ('T', 'NNP'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBD'), ('id', 'JJ'), ('Step', 'NNP'), ('1', 'CD'), (':', ':'), ('Remove', 'VB'), ('left', 'VBD'), ('recursion', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('First', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('First', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('F\uf0e0id', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Y1', 'NNP'), ('Y2', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('First', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), ('=First', 'NNP'), ('(', '('), ('Y1', 'NNP'), (')', ')'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Y1', 'NNP'), ('Y2', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('First', 'NNP'), ('(', '('), ('A', 'NNP'), (')', ')'), ('=First', 'NNP'), ('(', '('), ('Y1', 'NNP'), (')', ')'), ('FIRST', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('=FIRST', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('FIRST', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('=FIRST', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('id', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'NN'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('=', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('=', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('E', 'NNP'), ('’', 'NNP'), (')', ')'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'NN'), ('Rule', 'NNP'), ('2', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('E', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('+', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'NNP'), ('First', 'NNP'), ('(', '('), ('T', 'NNP'), ('’', 'NNP'), (')', ')'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('Rule', 'NNP'), ('1', 'CD'), ('add', 'NN'), ('Rule', 'NNP'), ('2', 'CD'), ('add', 'NN'), ('FIRST', 'NNP'), ('(', '('), ('T', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'NN'), ('}', ')'), ('Rule', 'NNP'), ('1', 'CD'), (':', ':'), ('Place', 'NN'), ('$', '$'), ('FOLLOW', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), (',', ','), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('2', 'CD'), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('E', 'NNP'), ('’', 'NNP'), (')', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'NN'), ('}', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('E', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('+T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'NN'), ('}', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('+', 'NN'), (',', ','), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('$', '$'), (',', ','), (')', ')'), ('E', 'NNP'), ('\uf0e0', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('Rule', 'NNP'), ('2', 'CD'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'NN'), ('}', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('T', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('+', 'NN'), (',', ','), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('+', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'NN'), ('3', 'CD'), ('Rule', 'NNP'), ('2', 'CD'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('+', 'NNP'), ('T', 'NNP'), ('E', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('T', 'NNP'), ('’', 'NNP'), (')', ')'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'NN'), ('}', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('T', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('+', 'JJ'), ('$', '$'), (',', ','), (')', ')'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'NN'), ('}', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('*', 'NN'), (',', ','), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('T', 'NNP'), ('\uf0e0', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('Rule', 'NNP'), ('3', 'CD'), ('Rule', 'NNP'), ('2', 'CD'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NNP'), ('FOLLOW', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('FOLLOW', 'NNP'), ('(', '('), ('F', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('*', 'NN'), (',', ','), ('+', 'NNP'), (',', ','), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('B', 'NNP'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'NN'), ('3', 'CD'), ('Rule', 'NNP'), ('2', 'CD'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('T', 'NNP'), ('’', 'VBZ'), ('A', 'NNP'), ('\uf0e0', 'NN'), ('B', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('TE', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('E', 'NNP'), (',', ','), ('(', '('), (']', 'JJ'), ('=E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('M', 'NNP'), ('[', 'NNP'), ('E', 'NNP'), (',', ','), ('id', 'NN'), (']', 'NNP'), ('=E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('+TE', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('+', 'NN'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), (',', ','), ('+', 'NNP'), (']', 'NNP'), ('=E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('b=FOLLOW', 'NN'), ('(', '('), ('E', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'VBD'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), (',', ','), ('$', '$'), (']', 'JJ'), ('=E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('M', 'NNP'), ('[', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), (',', ','), (')', ')'), (']', 'VBP'), ('=E', 'JJ'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('3', 'CD'), ('A\uf0e0', 'NNP'), ('b', 'NN'), ('=', 'NN'), ('follow', 'NN'), ('(', '('), ('A', 'DT'), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('FT', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('T', 'NNP'), (',', ','), ('(', '('), (']', 'JJ'), ('=T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('M', 'NNP'), ('[', 'NNP'), ('T', 'NNP'), (',', ','), ('id', 'NN'), (']', 'NNP'), ('=T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('*', 'JJ'), ('FT', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('*', 'NN'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), (',', ','), ('*', 'NNP'), (']', 'NNP'), ('=T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('F', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('b=FOLLOW', 'NN'), ('(', '('), ('T', 'NNP'), ('’', 'NNP'), (')', ')'), ('=', 'FW'), ('{', '('), ('+', 'NN'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), (',', ','), ('+', 'NNP'), (']', 'NNP'), ('=T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('M', 'NNP'), ('[', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), (',', ','), ('$', '$'), (']', 'JJ'), ('=T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('M', 'NNP'), ('[', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), (',', ','), (')', ')'), (']', 'VBP'), ('=T', 'JJ'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('Rule', 'NNP'), (':', ':'), ('3', 'CD'), ('A\uf0e0', 'NNP'), ('b', 'NN'), ('=', 'NN'), ('follow', 'NN'), ('(', '('), ('A', 'DT'), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('a=FIRST', 'NN'), ('(', '('), ('(', '('), ('E', 'NNP'), (')', ')'), (')', ')'), ('=', 'FW'), ('{', '('), ('(', '('), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('F', 'NNP'), (',', ','), ('(', '('), (']', 'JJ'), ('=F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'JJ'), ('F\uf0e0id', 'NNP'), ('a=FIRST', 'NN'), ('(', '('), ('id', 'NN'), (')', ')'), ('=', 'FW'), ('{', '('), ('id', 'NN'), ('}', ')'), ('M', 'NNP'), ('[', 'NNP'), ('F', 'NNP'), (',', ','), ('id', 'NN'), (']', 'NNP'), ('=F\uf0e0id', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('=', 'NNP'), ('first', 'RB'), ('(', '('), (')', ')'), ('M', 'NNP'), ('[', 'VBZ'), ('A', 'NNP'), (',', ','), (']', 'NNP'), ('=', 'NNP'), ('A\uf0e0', 'NNP'), ('NT', 'NNP'), ('First', 'NNP'), ('Follow', 'NNP'), ('E', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E', 'NNP'), ('’', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('T', 'NNP'), ('’', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('𝜖', 'VB'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('(', '('), (',', ','), ('id', 'VB'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('+', 'NNP'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', ')'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('|', 'NNP'), ('ϵ', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('4', 'CD'), (':', ':'), ('Make', 'NN'), ('undefined', 'JJ'), ('entry', 'NN'), ('table', 'JJ'), ('Error', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('Error', 'NNP'), ('Error', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example-3', 'JJ'), (':', ':'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('parsing', 'VBG'), ('Step', '$'), ('4', 'CD'), (':', ':'), ('Parse', 'NN'), ('string', 'NN'), (':', ':'), ('id', 'JJ'), ('+', 'NNP'), ('id', 'NN'), ('*', 'NNP'), ('id', 'VBZ'), ('$', '$'), ('STACK', 'NNP'), ('INPUT', 'NNP'), ('OUTPUT', 'NNP'), ('E', 'NNP'), ('$', '$'), ('id+id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('TE', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id+id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id+id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('idT', 'NN'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id+id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('F\uf0e0id', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+TE', 'JJ'), ('’', 'NNP'), ('$', '$'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('idT', 'NN'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id', 'JJ'), ('$', '$'), ('F\uf0e0id', 'NNP'), ('TE', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('T', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('$', '$'), ('FT', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('$', '$'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id', 'JJ'), ('$', '$'), ('$', '$'), ('$', '$'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('*', 'NNP'), ('id', 'JJ'), ('$', '$'), ('T\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('*', 'NNP'), ('id', 'JJ'), ('$', '$'), ('idT', 'JJ'), ('’', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('$', '$'), ('id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('F\uf0e0id', 'NNP'), ('NT', 'NNP'), ('Input', 'NNP'), ('Symbol', 'NNP'), ('id', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0+TE', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('E', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('T\uf0e0FT', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NNP'), ('FT', 'NNP'), ('’', 'NNP'), ('Error', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('T', 'NNP'), ('’', 'NNP'), ('\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('Error', 'NNP'), ('Error', 'NNP'), ('F\uf0e0', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('Error', 'NNP'), ('Error', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('methods', 'NNS'), ('Parsing', 'VBG'), ('Top', 'JJ'), ('parsing', 'NN'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('parsing', 'NN'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('parsing', 'VBG'), ('A', 'NNP'), ('top', 'JJ'), ('parsing', 'NN'), ('executes', 'NNS'), ('set', 'VBD'), ('recursive', 'JJ'), ('procedure', 'NN'), ('process', 'NN'), ('input', 'NN'), ('without', 'IN'), ('backtracking', 'VBG'), ('called', 'VBN'), ('recursive', 'JJ'), ('descent', 'NN'), ('parser', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example-1/NN)
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  1/CD
  :/:
  Not/RB
  (NP required/JJ Step/NN)
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP SaBa/NNP First/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP
    BbB/NNP
    B𝜖/NNP
    SaBa/NNP
    BbB/NNP
    |/NNP
    ϵ/NNP
    S/NNP
    /NNP
    B/NNP
    A/NNP
    /NN
    B/NNP
    /NNP)
  𝜖/VBZ
  (NP A/NNP /NNP Rule/NNP)
  1/CD
  (NP add/NN Rule/NNP)
  2/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP =/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP NT/NNP First/NNP S/NNP)
  {/(
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP B/NNP /NNP b/NN B/NNP A/NNP /NNP Rule/NNP)
  1/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP S/NNP)
  )/)
  =/VBD
  {/(
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example-1/NN)
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP Follow/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP Follow/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP SaBa/NNP BbB/NNP SaBa/NNP BbB/NNP |/NNP ϵ/NNP Follow/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP =/NNP)
  {/(
  (NP B/NNP /NNP b/NN B/NNP Follow/NNP)
  (/(
  (NP S/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP NT/NNP First/NNP Follow/NNP S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  }/)
  (NP S/NNP /NNP B/NNP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP Follow/NNP)
  (/(
  (NP A/NNP)
  )/)
  (NP =follow/NN)
  (/(
  (NP B/NNP)
  )/)
  (NP A/NNP /NN B/NNP Rule/NNP)
  2/CD
  (NP First/NNP)
  (/(
  (NP Rule/NNP)
  1/CD
  :/:
  (NP Place/NN)
  $/$
  (NP FOLLOW/NNP)
  (/(
  (NP S/NNP)
  )/)
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example-1/NN)
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ SaBa/NNP a=FIRST/NN)
  (/(
  (NP aBa/NN)
  )/)
  (NP =/NN)
  {/(
  }/)
  (NP M/NNP [/NNP S/NNP)
  ,/,
  (NP
    ]/NNP
    =SaBa/NNP
    SaBa/NNP
    BbB/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  }/)
  (NP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  $/$
  (NP S/NNP SaBa/NNP B/NNP Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example-1/NN)
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ BbB/NNP a=FIRST/NN)
  (/(
  (NP bB/NN)
  )/)
  =/FW
  {/(
  (NP b/NN)
  }/)
  (NP M/NNP [/NNP B/NNP)
  ,/,
  (NP
    b/NN
    ]/NNP
    =BbB/NNP
    SaBa/NNP
    BbB/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  }/)
  (NP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  $/$
  (NP S/NNP SaBa/NNP B/NNP BbB/NNP Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example-1/NN)
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ Bϵ/NNP b=FOLLOW/NN)
  (/(
  (NP B/NNP)
  )/)
  (NP =/NN)
  {/(
  }/)
  (NP M/NNP [/NNP B/NNP)
  ,/,
  (NP
    ]/NNP
    =B𝜖/NNP
    SaBa/NNP
    BbB/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  }/)
  (NP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  $/$
  (NP
    S/NNP
    SaBa/NNP
    Error/NNP
    Error/NNP
    B/NNP
    Bϵ/NNP
    BbB/NNP
    Error/NNP
    Rule/NNP)
  :/:
  3/CD
  (NP A/NNP b/NN =/NN follow/NN)
  (/(
  A/DT
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP b/NN ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  1/CD
  :/:
  Not/RB
  (NP required/JJ Step/NN)
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP
    SaB/NNP
    S𝜖/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    S/NNP
    /NNP)
  𝜖/VBZ
  (NP A/NNP /NNP Rule/NNP)
  2/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP =/NNP)
  {/(
  ,/,
  𝜖/VB
  }/)
  (NP NT/NNP First/NNP S/NNP)
  {/(
  ,/,
  𝜖/VB
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP S/NNP /NNP B/NNP A/NNP /NNP Rule/NNP)
  1/CD
  add/RB
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  1/CD
  :/:
  Not/RB
  (NP required/JJ Step/NN)
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP
    BbC/NNP
    B𝜖/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    B/NNP
    /NNP)
  𝜖/VBZ
  (NP A/NNP /NNP Rule/NNP)
  2/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP =/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP NT/NNP First/NNP S/NNP)
  {/(
  ,/,
  𝜖/VB
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP B/NNP /NNP b/NN C/NNP A/NNP /NNP Rule/NNP)
  1/CD
  add/RB
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  1/CD
  :/:
  Not/RB
  (NP required/JJ Step/NN)
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP C/NNP)
  )/)
  (NP
    CcS/NNP
    C𝜖/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    C/NNP
    /NNP)
  𝜖/VBZ
  (NP A/NNP /NNP Rule/NNP)
  2/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP B/NNP)
  )/)
  =/FW
  {/(
  (NP c/NN)
  ,/,
  𝜖/JJ
  }/)
  (NP NT/NNP First/NNP S/NNP)
  {/(
  ,/,
  𝜖/VB
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP C/NNP /NNP)
  c/VBZ
  (NP S/NNP A/NNP /NNP Rule/NNP)
  1/CD
  add/RB
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP Follow/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP CcS/NNP BbC/NNP SaB/NNP =/NNP)
  {/(
  $/$
  }/)
  (NP C/NNP /NNP)
  c/VBP
  (NP S/NNP Follow/NNP)
  (/(
  (NP S/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP NT/NNP First/NNP Follow/NNP S/NNP)
  {/(
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP A/NNP /NNP B/NNP Rule/NNP)
  3/CD
  (NP Follow/NNP)
  (/(
  (NP A/NNP)
  )/)
  (NP =follow/NN)
  (/(
  (NP B/NNP)
  )/)
  Rule/VBD
  1/CD
  :/:
  (NP Place/NN)
  $/$
  (NP FOLLOW/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    Follow/NNP)
  (/(
  (NP S/NNP)
  )/)
  (NP =Follow/NN)
  (/(
  (NP C/NNP)
  )/)
  (NP B/NNP /NNP b/NN C/NNP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP Follow/NNP)
  (/(
  (NP A/NNP)
  )/)
  (NP =follow/NN)
  (/(
  (NP B/NNP)
  )/)
  (NP Follow/NNP)
  (/(
  (NP C/NNP)
  )/)
  (NP =Follow/NNP)
  (/(
  (NP B/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP S/NNP /NNP B/NNP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP Follow/NNP)
  (/(
  (NP A/NNP)
  )/)
  (NP =follow/NN)
  (/(
  (NP B/NNP)
  )/)
  (NP Follow/NNP)
  (/(
  (NP B/NNP)
  )/)
  (NP =Follow/NN)
  (/(
  (NP S/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ SaB/NNP a=FIRST/NN)
  (/(
  (NP aB/NN)
  )/)
  (NP =/NN)
  {/(
  }/)
  (NP M/NNP [/NNP S/NNP)
  ,/,
  (NP ]/NNP =SaB/NNP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  c/JJ
  $/$
  (NP S/NNP SaB/NNP B/NNP C/NNP Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP
    ]/NNP
    =/NNP
    A/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ S𝜖/NNP b=FOLLOW/NN)
  (/(
  (NP S/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP M/NNP [/NNP S/NNP)
  ,/,
  $/$
  (NP ]/JJ =S𝜖/NNP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  c/JJ
  $/$
  (NP
    S/NNP
    SaB/NNP
    S𝜖/NNP
    B/NNP
    C/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP Rule/NNP)
  :/:
  3/CD
  (NP A/NNP b/NN =/NN follow/NN)
  (/(
  A/DT
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP b/NN ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ BbC/NNP a=FIRST/NN)
  (/(
  (NP bC/NN)
  )/)
  =/FW
  {/(
  (NP b/NN)
  }/)
  (NP M/NNP [/NNP B/NNP)
  ,/,
  (NP b/NN ]/NNP =BbC/NNP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  c/JJ
  $/$
  (NP
    S/NNP
    SaB/NNP
    S𝜖/NNP
    B/NNP
    BbC/NNP
    C/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ B𝜖/NNP b=FOLLOW/NN)
  (/(
  (NP B/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP M/NNP [/NNP B/NNP)
  ,/,
  $/$
  (NP ]/JJ =B𝜖/NNP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  c/JJ
  $/$
  (NP
    S/NNP
    SaB/NNP
    S𝜖/NNP
    B/NNP
    BbC/NNP
    B𝜖/NNP
    C/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP Rule/NNP)
  :/:
  3/CD
  (NP A/NNP b/NN =/NN follow/NN)
  (/(
  A/DT
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP b/NN ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ CcS/NNP a=FIRST/NN)
  (/(
  (NP cS/NN)
  )/)
  =/FW
  {/(
  c/VB
  }/)
  (NP M/NNP [/NNP C/NNP)
  ,/,
  c/VBZ
  (NP ]/NNP =CcS/NNP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  c/JJ
  $/$
  (NP
    S/NNP
    SaB/NNP
    S𝜖/NNP
    B/NNP
    BbC/NNP
    B𝜖/NNP
    C/NNP
    CcS/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-2/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Prepare/NNP)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ C𝜖/NNP b=FOLLOW/NN)
  (/(
  (NP C/NNP)
  )/)
  =/VBD
  {/(
  $/$
  }/)
  (NP M/NNP [/NNP C/NNP)
  ,/,
  $/$
  (NP ]/JJ =C𝜖/NNP NT/NNP Input/NNP Symbol/NNP)
  b/VBD
  c/JJ
  $/$
  (NP
    S/NNP
    SaB/NNP
    Error/NNP
    Error/NNP
    S𝜖/NNP
    B/NNP
    Error/NNP
    BbB/NNP
    Error/NNP
    B𝜖/NNP
    C/NNP
    Error/NNP
    Error/NNP
    CcS/NNP
    C𝜖/NNP
    SaB/NNP
    |/NNP
    ϵ/NNP
    BbC/NNP
    |/NNP
    ϵ/NNP
    CcS/NNP
    |/NNP
    ϵ/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    S/NNP)
  {/(
  }/)
  {/(
  $/$
  }/)
  (NP B/NNP)
  {/(
  (NP b/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  {/(
  $/$
  }/)
  (NP C/NNP)
  {/(
  (NP c/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  }/)
  (NP Rule/NNP)
  :/:
  3/CD
  (NP A/NNP b/NN =/NN follow/NN)
  (/(
  A/DT
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP b/NN ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  (NP EE+T/NNP |/NNP T/NNP TT/NNP */NNP F/NNP |/NNP F/NNP F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBD
  (NP id/JJ Step/NNP)
  1/CD
  :/:
  Remove/VB
  left/VBD
  (NP
    recursion/NN
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP ETE/NNP ’/NNP First/NNP)
  (/(
  (NP T/NNP)
  )/)
  (NP TFT/NNP ’/NNP First/NNP)
  (/(
  (NP F/NNP)
  )/)
  (NP F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP
    Fid/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ E/NNP /NNP T/NNP E/NNP)
  ’/VBZ
  (NP A/NNP /NNP Y1/NNP Y2/NNP Rule/NNP)
  3/CD
  (NP First/NNP)
  (/(
  (NP A/NNP)
  )/)
  (NP =First/NNP)
  (/(
  (NP Y1/NNP)
  )/)
  (NP T/NNP /NNP F/NNP T/NNP)
  ’/VBZ
  (NP A/NNP /NNP Y1/NNP Y2/NNP Rule/NNP)
  3/CD
  (NP First/NNP)
  (/(
  (NP A/NNP)
  )/)
  (NP =First/NNP)
  (/(
  (NP Y1/NNP)
  )/)
  (NP FIRST/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP =FIRST/NNP)
  (/(
  (NP T/NNP)
  )/)
  (NP FIRST/NNP)
  (/(
  (NP T/NNP)
  )/)
  (NP =FIRST/NNP)
  (/(
  (NP F/NNP)
  )/)
  (NP F/NNP /NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP A/NNP /NNP F/NNP /NNP)
  id/VBZ
  (NP A/NNP /NNP Rule/NNP)
  1/CD
  (NP add/NN Rule/NNP)
  1/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP F/NNP)
  )/)
  =/FW
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP NT/NNP First/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP E/NNP ’/NNP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP T/NNP ’/NNP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP =/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP =/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP E/NNP ’/NNP)
  )/)
  (NP E/NNP ’/NNP +TE/NNP ’/NNP E/NNP ’/NNP)
  𝜖/VBZ
  (NP A/NNP /NNP E/NNP ’/NNP)
  /VBZ
  (NP A/NNP /NNP Rule/NNP)
  1/CD
  (NP add/NN Rule/NNP)
  2/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP E/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (NP +/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP
    E/NNP
    ’/NNP
    /NNP
    +/NNP
    T/NNP
    E/NNP
    ’/NNP
    NT/NNP
    First/NNP
    E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP T/NNP ’/NNP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FIRST/NNP First/NNP)
  (/(
  (NP T/NNP ’/NNP)
  )/)
  (NP T/NNP ’/NNP /NNP */NNP FT/NNP ’/NNP T/NNP ’/NNP)
  𝜖/VBZ
  (NP A/NNP /NNP T/NNP ’/NNP)
  /VBZ
  (NP A/NNP /NNP Rule/NNP)
  1/CD
  (NP add/NN Rule/NNP)
  2/CD
  (NP add/NN FIRST/NNP)
  (/(
  (NP T/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (NP */NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    F/NNP
    T/NNP
    ’/NNP
    NT/NNP
    First/NNP
    E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  (NP id/NN)
  }/)
  (NP Rule/NNP)
  1/CD
  :/:
  (NP Place/NN)
  $/$
  (NP FOLLOW/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP FOLLOW/NNP)
  (/(
  (NP E/NNP)
  )/)
  =/VBD
  {/(
  $/$
  ,/,
  (NP F/NNP /NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP A/NNP /NN B/NNP Rule/NNP)
  2/CD
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP E/NNP ’/NNP)
  )/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  (NP id/NN)
  }/)
  (NP FOLLOW/NNP)
  (/(
  (NP E/NNP ’/NNP)
  )/)
  =/VBD
  {/(
  $/$
  ,/,
  )/)
  (NP E/NNP /NNP T/NNP E/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP E/NNP ’/NNP /NNP +T/NNP E/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  id/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP T/NNP)
  )/)
  (NP ETE/NNP ’/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  (NP id/NN)
  }/)
  (NP FOLLOW/NNP)
  (/(
  (NP T/NNP)
  )/)
  =/FW
  {/(
  (NP +/NN)
  ,/,
  (NP E/NNP /NNP T/NNP E/NNP)
  ’/VBZ
  (NP A/NNP /NNP B/NNP)
  $/$
  ,/,
  )/)
  (NP E/NNP /NNP T/NNP E/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP Rule/NNP)
  2/CD
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP T/NNP)
  )/)
  (NP E/NNP ’/NNP +TE/NNP ’/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP 𝜖/NN)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  (NP id/NN)
  }/)
  (NP FOLLOW/NNP)
  (/(
  (NP T/NNP)
  )/)
  =/FW
  {/(
  (NP +/NN)
  ,/,
  (NP E/NNP ’/NNP /NNP +/NNP T/NNP E/NNP)
  ’/VBZ
  (NP A/NNP /NNP B/NNP)
  $/$
  ,/,
  )/)
  (NP Rule/NN)
  3/CD
  (NP Rule/NNP)
  2/CD
  (NP E/NNP ’/NNP /NNP +/NNP T/NNP E/NNP)
  ’/VBZ
  (NP
    A/NNP
    /NN
    B/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  id/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP T/NNP ’/NNP)
  )/)
  (NP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  (NP id/NN)
  }/)
  (NP FOLLOW/NNP)
  (/(
  (NP T/NNP ’/NNP)
  )/)
  =/FW
  {/(
  +/JJ
  $/$
  ,/,
  )/)
  (NP T/NNP /NNP F/NNP T/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP T/NNP ’/NNP /NNP */NNP F/NNP T/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  id/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP F/NNP)
  )/)
  (NP TFT/NNP ’/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  (NP id/NN)
  }/)
  (NP FOLLOW/NNP)
  (/(
  (NP F/NNP)
  )/)
  =/FW
  {/(
  (NP */NN)
  ,/,
  (NP T/NNP /NNP F/NNP T/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  (NP T/NNP /NNP F/NNP T/NNP)
  ’/VBZ
  (NP A/NNP /NN B/NNP Rule/NNP)
  3/CD
  (NP Rule/NNP)
  2/CD
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  2/CD
  :/:
  (NP Compute/NN FOLLOW/NNP FOLLOW/NNP)
  (/(
  (NP F/NNP)
  )/)
  (NP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP FOLLOW/NNP)
  (/(
  (NP F/NNP)
  )/)
  =/FW
  {/(
  (NP */NN)
  ,/,
  (NP +/NNP)
  ,/,
  (NP T/NNP ’/NNP /NNP */NNP F/NNP T/NNP)
  ’/VBZ
  (NP A/NNP /NNP B/NNP)
  $/$
  ,/,
  )/)
  (NP Rule/NN)
  3/CD
  (NP Rule/NNP)
  2/CD
  (NP T/NNP ’/NNP /NNP */NNP F/NNP T/NNP)
  ’/VBZ
  (NP
    A/NNP
    /NN
    B/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  id/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ ETE/NNP ’/NNP a=FIRST/NN)
  (/(
  (NP TE/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP M/NNP [/NNP E/NNP)
  ,/,
  (/(
  (NP ]/JJ =ETE/NNP ’/NNP M/NNP [/NNP E/NNP)
  ,/,
  (NP id/NN ]/NNP =ETE/NNP ’/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP Rule/NN)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP
    ]/NNP
    =/NNP
    A/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    T/NNP
    T/NNP
    ’/NNP
    F/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ E/NNP ’/NNP +TE/NNP ’/NNP a=FIRST/NN)
  (/(
  (NP +TE/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (NP +/NN)
  }/)
  (NP M/NNP [/NNP E/NNP ’/NNP)
  ,/,
  (NP
    +/NNP
    ]/NNP
    =E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    T/NNP
    T/NNP
    ’/NNP
    F/NNP
    Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ E/NNP ’/NNP 𝜖/NNP b=FOLLOW/NN)
  (/(
  (NP E/NNP ’/NNP)
  )/)
  =/VBD
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP M/NNP [/NNP E/NNP ’/NNP)
  ,/,
  $/$
  (NP ]/JJ =E/NNP ’/NNP 𝜖/NNP M/NNP [/NNP E/NNP ’/NNP)
  ,/,
  )/)
  ]/VBP
  (NP
    =E/JJ
    ’/NNP
    𝜖/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    T/NNP
    ’/NNP
    F/NNP
    Rule/NNP)
  :/:
  3/CD
  (NP A/NNP b/NN =/NN follow/NN)
  (/(
  A/DT
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP b/NN ]/NNP =/NNP A/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ TFT/NNP ’/NNP a=FIRST/NN)
  (/(
  (NP FT/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (/(
  ,/,
  id/VB
  }/)
  (NP M/NNP [/NNP T/NNP)
  ,/,
  (/(
  (NP ]/JJ =TFT/NNP ’/NNP M/NNP [/NNP T/NNP)
  ,/,
  (NP
    id/NN
    ]/NNP
    =TFT/NNP
    ’/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    F/NNP
    NT/NNP
    First/NNP
    Follow/NNP
    E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Rule/NN)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ T/NNP ’/NNP /NNP */NNP FT/NNP ’/NNP a=FIRST/NN)
  (/(
  (NP */JJ FT/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (NP */NN)
  }/)
  (NP M/NNP [/NNP T/NNP ’/NNP)
  ,/,
  (NP
    */NNP
    ]/NNP
    =T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    F/NNP
    Rule/NNP)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ T/NNP ’/NNP 𝜖/NNP b=FOLLOW/NN)
  (/(
  (NP T/NNP ’/NNP)
  )/)
  =/FW
  {/(
  (NP +/NN)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP M/NNP [/NNP T/NNP ’/NNP)
  ,/,
  (NP +/NNP ]/NNP =T/NNP ’/NNP 𝜖/NNP M/NNP [/NNP T/NNP ’/NNP)
  ,/,
  $/$
  (NP ]/JJ =T/NNP ’/NNP 𝜖/NNP M/NNP [/NNP T/NNP ’/NNP)
  ,/,
  )/)
  ]/VBP
  (NP
    =T/JJ
    ’/NNP
    𝜖/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    F/NNP
    Rule/NNP)
  :/:
  3/CD
  (NP A/NNP b/NN =/NN follow/NN)
  (/(
  A/DT
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP b/NN ]/NNP =/NNP A/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN table/NN F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP a=FIRST/NN)
  (/(
  (/(
  (NP E/NNP)
  )/)
  )/)
  =/FW
  {/(
  (/(
  }/)
  (NP M/NNP [/NNP F/NNP)
  ,/,
  (/(
  (NP ]/JJ =F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP NT/NNP Input/NNP Symbol/NNP id/NN +/NNP */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    F/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP Rule/NN)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  3/CD
  :/:
  (NP Construct/NN)
  (NP predictive/JJ parsing/NN)
  (NP table/JJ Fid/NNP a=FIRST/NN)
  (/(
  (NP id/NN)
  )/)
  =/FW
  {/(
  (NP id/NN)
  }/)
  (NP M/NNP [/NNP F/NNP)
  ,/,
  (NP
    id/NN
    ]/NNP
    =Fid/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    F/NNP
    Fid/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP Rule/NN)
  :/:
  2/CD
  (NP A/NNP =/NNP)
  first/RB
  (/(
  )/)
  (NP M/NNP)
  [/VBZ
  (NP A/NNP)
  ,/,
  (NP ]/NNP =/NNP A/NNP NT/NNP First/NNP Follow/NNP E/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP E/NNP ’/NNP)
  {/(
  (NP +/NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP T/NNP ’/NNP)
  {/(
  (NP */NN)
  ,/,
  𝜖/VB
  }/)
  {/(
  +/JJ
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP F/NNP)
  {/(
  (/(
  ,/,
  id/VB
  }/)
  {/(
  */JJ
  ,/,
  (NP +/NNP)
  ,/,
  $/$
  ,/,
  )/)
  }/)
  (NP
    ETE/NNP
    ’/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    TFT/NNP
    ’/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    |/NNP
    ϵ/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  4/CD
  :/:
  (NP Make/NN)
  (NP undefined/JJ entry/NN)
  (NP
    table/JJ
    Error/NNP
    NT/NNP
    Input/NNP
    Symbol/NNP
    id/NN
    +/NNP
    */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    ETE/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    E/NNP
    ’/NNP
    Error/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    TFT/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    T/NNP
    ’/NNP
    Error/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    Error/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    F/NNP
    Fid/NNP
    Error/NNP
    Error/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP Error/NNP Error/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  ›/JJ
  Example-3/JJ
  :/:
  (NP LL/NNP)
  (/(
  1/CD
  )/)
  parsing/VBG
  Step/$
  4/CD
  :/:
  (NP Parse/NN string/NN)
  :/:
  (NP id/JJ +/NNP id/NN */NNP)
  id/VBZ
  $/$
  (NP STACK/NNP INPUT/NNP OUTPUT/NNP E/NNP)
  $/$
  (NP id+id/JJ */NNP)
  id/POS
  $/$
  (NP TE/NNP ’/NNP)
  $/$
  (NP id+id/JJ */NNP)
  id/POS
  $/$
  (NP ETE/NNP ’/NNP FT/NNP ’/NNP E/NNP ’/NNP)
  $/$
  (NP id+id/JJ */NNP)
  id/POS
  $/$
  (NP TFT/NNP ’/NNP idT/NN ’/NNP E/NNP ’/NNP)
  $/$
  (NP id+id/JJ */NNP)
  id/POS
  $/$
  (NP Fid/NNP T/NNP ’/NNP E/NNP ’/NNP)
  $/$
  (NP +id/NNP */NNP)
  id/VBP
  $/$
  (NP +TE/JJ ’/NNP)
  $/$
  (NP +id/NNP */NNP)
  id/VBP
  $/$
  (NP E/NNP ’/NNP +TE/NNP ’/NNP E/NNP ’/NNP)
  $/$
  (NP +id/NNP */NNP)
  id/VBP
  $/$
  (NP T/NNP ’/NNP 𝜖/NNP idT/NN ’/NNP E/NNP ’/NNP)
  $/$
  id/JJ
  $/$
  (NP Fid/NNP TE/NNP ’/NNP)
  $/$
  (NP id/JJ */NNP)
  id/POS
  $/$
  (NP T/NNP ’/NNP E/NNP ’/NNP)
  $/$
  $/$
  (NP FT/NNP ’/NNP E/NNP ’/NNP)
  $/$
  (NP id/JJ */NNP)
  id/POS
  $/$
  (NP TFT/NNP ’/NNP E/NNP ’/NNP)
  $/$
  $/$
  (NP T/NNP ’/NNP 𝜖/NNP FT/NNP ’/NNP E/NNP ’/NNP)
  $/$
  id/JJ
  $/$
  $/$
  $/$
  (NP E/NNP ’/NNP 𝜖/NNP */NNP FT/NNP ’/NNP E/NNP ’/NNP)
  $/$
  (NP */NNP)
  id/JJ
  $/$
  (NP T/NNP */NNP FT/NNP ’/NNP T/NNP ’/NNP E/NNP ’/NNP)
  $/$
  (NP */NNP)
  id/JJ
  $/$
  (NP idT/JJ ’/NNP E/NNP ’/NNP)
  $/$
  (NP id/JJ */NNP)
  id/POS
  $/$
  (NP Fid/NNP NT/NNP Input/NNP Symbol/NNP id/NN +/NNP */NNP)
  (/(
  )/)
  $/$
  (NP
    E/NNP
    ETE/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    ETE/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    E/NNP
    ’/NNP
    Error/NNP
    E/NNP
    ’/NNP
    +TE/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    E/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    TFT/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    TFT/NNP
    ’/NNP
    Error/NNP
    Error/NNP
    T/NNP
    ’/NNP
    Error/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    /NNP
    */NNP
    FT/NNP
    ’/NNP
    Error/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    T/NNP
    ’/NNP
    𝜖/NNP
    F/NNP
    Fid/NNP
    Error/NNP
    Error/NNP
    F/NNP)
  (/(
  (NP E/NNP)
  )/)
  (NP Error/NNP Error/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP methods/NNS)
  Parsing/VBG
  (NP Top/JJ parsing/NN Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ parsing/NN)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Recursive/NNP descent/NN)
  parsing/VBG
  (NP A/NNP)
  (NP top/JJ parsing/NN executes/NNS)
  set/VBD
  (NP recursive/JJ procedure/NN process/NN input/NN)
  without/IN
  backtracking/VBG
  called/VBN
  (NP recursive/JJ descent/NN parser/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example-1', 'LL', 'required Step', 'Compute FIRST First', 'S', 'S\uf0e0aBa First', 'B', 'B\uf0e0bB B\uf0e0𝜖 S\uf0e0aBa B\uf0e0bB | ϵ S \uf0e0 B A \uf0e0 B \uf0e0', 'A \uf0e0 Rule', 'add Rule', 'add FIRST', 'B', '=', 'b', '𝜖', 'NT First S', 'B', 'b', '𝜖', 'B \uf0e0 b B A \uf0e0 Rule', 'add FIRST', 'S', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example-1', 'LL', 'Compute FOLLOW Follow', 'S', 'Follow', 'B', 'S\uf0e0aBa B\uf0e0bB S\uf0e0aBa B\uf0e0bB | ϵ Follow', 'B', '=', 'B \uf0e0 b B Follow', 'S', 'NT First Follow S', 'B', 'b', '𝜖', 'S \uf0e0 B A \uf0e0 B Rule', 'Follow', 'A', '=follow', 'B', 'A \uf0e0 B Rule', 'First', 'Rule', 'Place', 'FOLLOW', 'S', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example-1', 'LL', 'Prepare', 'predictive parsing', 'table S\uf0e0aBa a=FIRST', 'aBa', '=', 'M [ S', '] =S\uf0e0aBa S\uf0e0aBa B\uf0e0bB | ϵ NT First Follow S', 'B', 'b', '𝜖', 'NT Input Symbol', 'S S\uf0e0aBa B Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example-1', 'LL', 'Prepare', 'predictive parsing', 'table B\uf0e0bB a=FIRST', 'bB', 'b', 'M [ B', 'b ] =B\uf0e0bB S\uf0e0aBa B\uf0e0bB | ϵ NT First Follow S', 'B', 'b', '𝜖', 'NT Input Symbol', 'S S\uf0e0aBa B B\uf0e0bB Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example-1', 'LL', 'Prepare', 'predictive parsing', 'table B\uf0e0ϵ b=FOLLOW', 'B', '=', 'M [ B', '] =B\uf0e0𝜖 S\uf0e0aBa B\uf0e0bB | ϵ NT First Follow S', 'B', 'b', '𝜖', 'NT Input Symbol', 'S S\uf0e0aBa Error Error B B\uf0e0ϵ B\uf0e0bB Error Rule', 'A\uf0e0 b = follow', 'M', 'A', 'b ] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'required Step', 'Compute FIRST First', 'S', 'S\uf0e0aB S\uf0e0𝜖 S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ S \uf0e0', 'A \uf0e0 Rule', 'add FIRST', 'S', '=', 'NT First S', 'B', 'b', '𝜖', 'S \uf0e0 B A \uf0e0 Rule', 'C', 'c', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'required Step', 'Compute FIRST First', 'B', 'B\uf0e0bC B\uf0e0𝜖 S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ B \uf0e0', 'A \uf0e0 Rule', 'add FIRST', 'B', '=', 'b', '𝜖', 'NT First S', 'B', 'b', '𝜖', 'B \uf0e0 b C A \uf0e0 Rule', 'C', 'c', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'required Step', 'Compute FIRST First', 'C', 'C\uf0e0cS C\uf0e0𝜖 S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ C \uf0e0', 'A \uf0e0 Rule', 'add FIRST', 'B', 'c', 'NT First S', 'B', 'b', '𝜖', 'C \uf0e0', 'S A \uf0e0 Rule', 'C', 'c', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW Follow', 'S', 'C\uf0e0cS B\uf0e0bC S\uf0e0aB =', 'C \uf0e0', 'S Follow', 'S', 'NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'A \uf0e0 B Rule', 'Follow', 'A', '=follow', 'B', 'Place', 'FOLLOW', 'S', 'S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ Follow', 'S', '=Follow', 'C', 'B \uf0e0 b C A \uf0e0 B Rule', 'Follow', 'A', '=follow', 'B', 'Follow', 'C', '=Follow', 'B', 'S \uf0e0 B A \uf0e0 B Rule', 'Follow', 'A', '=follow', 'B', 'Follow', 'B', '=Follow', 'S', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Prepare', 'predictive parsing', 'table S\uf0e0aB a=FIRST', 'aB', '=', 'M [ S', '] =S\uf0e0aB NT Input Symbol', 'S S\uf0e0aB B C Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Prepare', 'predictive parsing', 'table S\uf0e0𝜖 b=FOLLOW', 'S', 'M [ S', '] =S\uf0e0𝜖 NT Input Symbol', 'S S\uf0e0aB S\uf0e0𝜖 B C S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'Rule', 'A\uf0e0 b = follow', 'M', 'A', 'b ] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Prepare', 'predictive parsing', 'table B\uf0e0bC a=FIRST', 'bC', 'b', 'M [ B', 'b ] =B\uf0e0bC NT Input Symbol', 'S S\uf0e0aB S\uf0e0𝜖 B B\uf0e0bC C S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Prepare', 'predictive parsing', 'table B\uf0e0𝜖 b=FOLLOW', 'B', 'M [ B', '] =B\uf0e0𝜖 NT Input Symbol', 'S S\uf0e0aB S\uf0e0𝜖 B B\uf0e0bC B\uf0e0𝜖 C S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'Rule', 'A\uf0e0 b = follow', 'M', 'A', 'b ] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Prepare', 'predictive parsing', 'table C\uf0e0cS a=FIRST', 'cS', 'M [ C', '] =C\uf0e0cS NT Input Symbol', 'S S\uf0e0aB S\uf0e0𝜖 B B\uf0e0bC B\uf0e0𝜖 C C\uf0e0cS S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Prepare', 'predictive parsing', 'table C\uf0e0𝜖 b=FOLLOW', 'C', 'M [ C', '] =C\uf0e0𝜖 NT Input Symbol', 'S S\uf0e0aB Error Error S\uf0e0𝜖 B Error B\uf0e0bB Error B\uf0e0𝜖 C Error Error C\uf0e0cS C\uf0e0𝜖 S\uf0e0aB | ϵ B\uf0e0bC | ϵ C\uf0e0cS | ϵ NT First Follow S', 'B', 'b', '𝜖', 'C', 'c', 'Rule', 'A\uf0e0 b = follow', 'M', 'A', 'b ] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'E\uf0e0E+T | T T\uf0e0T * F | F F\uf0e0', 'E', 'id Step', 'recursion E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FIRST First', 'E', 'E\uf0e0TE ’ First', 'T', 'T\uf0e0FT ’ First', 'F', 'F\uf0e0', 'E', 'F\uf0e0id E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id E \uf0e0 T E', 'A \uf0e0 Y1 Y2 Rule', 'First', 'A', '=First', 'Y1', 'T \uf0e0 F T', 'A \uf0e0 Y1 Y2 Rule', 'First', 'A', '=First', 'Y1', 'FIRST', 'E', '=FIRST', 'T', 'FIRST', 'T', '=FIRST', 'F', 'F \uf0e0', 'E', 'A \uf0e0 F \uf0e0', 'A \uf0e0 Rule', 'add Rule', 'add FIRST', 'F', 'NT First E', 'E ’ T', 'T ’ F', '=', '=', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FIRST First', 'E ’', 'E ’ \uf0e0+TE ’ E ’', 'A \uf0e0 E ’', 'A \uf0e0 Rule', 'add Rule', 'add FIRST', 'E ’', '+', '𝜖', 'E ’ \uf0e0 + T E ’ NT First E', 'E ’', '+', '𝜖', 'T', 'T ’ F', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FIRST First', 'T ’', 'T ’ \uf0e0 * FT ’ T ’', 'A \uf0e0 T ’', 'A \uf0e0 Rule', 'add Rule', 'add FIRST', 'T ’', '*', '𝜖', 'T ’ \uf0e0 * F T ’ NT First E', 'E ’', '+', '𝜖', 'T', 'T ’', '*', '𝜖', 'F', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'E', 'F\uf0e0', 'E', 'NT First Follow E', 'E ’', '+', '𝜖', 'T', 'T ’', '*', '𝜖', 'F', 'id', 'Rule', 'Place', 'FOLLOW', 'E', 'FOLLOW', 'E', 'F \uf0e0', 'E', 'A \uf0e0 B Rule', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'E ’', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', '𝜖', 'F', 'id', 'FOLLOW', 'E ’', 'E \uf0e0 T E', 'A \uf0e0 B Rule', 'E ’ \uf0e0 +T E', 'A \uf0e0 B Rule', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'T', 'E\uf0e0TE ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', '𝜖', 'F', 'id', 'FOLLOW', 'T', '+', 'E \uf0e0 T E', 'A \uf0e0 B', 'E \uf0e0 T E', 'A \uf0e0 B Rule', 'Rule', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'T', 'E ’ \uf0e0+TE ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', '𝜖', 'F', 'id', 'FOLLOW', 'T', '+', 'E ’ \uf0e0 + T E', 'A \uf0e0 B', 'Rule', 'Rule', 'E ’ \uf0e0 + T E', 'A \uf0e0 B E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'T ’', 'T\uf0e0FT ’ T ’ \uf0e0 * FT ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', 'id', 'FOLLOW', 'T ’', 'T \uf0e0 F T', 'A \uf0e0 B Rule', 'T ’ \uf0e0 * F T', 'A \uf0e0 B Rule', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'F', 'T\uf0e0FT ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', 'id', 'FOLLOW', 'F', '*', 'T \uf0e0 F T', 'A \uf0e0 B +', 'T \uf0e0 F T', 'A \uf0e0 B Rule', 'Rule', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Compute FOLLOW FOLLOW', 'F', 'T ’ \uf0e0 * FT ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'FOLLOW', 'F', '*', '+', 'T ’ \uf0e0 * F T', 'A \uf0e0 B', 'Rule', 'Rule', 'T ’ \uf0e0 * F T', 'A \uf0e0 B E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table E\uf0e0TE ’ a=FIRST', 'TE ’', 'M [ E', '] =E\uf0e0TE ’ M [ E', 'id ] =E\uf0e0TE ’ NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ T T ’ F E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table E ’ \uf0e0+TE ’ a=FIRST', '+TE ’', '+', 'M [ E ’', '+ ] =E ’ \uf0e0+TE ’ NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ T T ’ F Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table E ’ \uf0e0𝜖 b=FOLLOW', 'E ’', 'M [ E ’', '] =E ’ \uf0e0𝜖 M [ E ’', '=E ’ \uf0e0𝜖 NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T ’ F Rule', 'A\uf0e0 b = follow', 'M', 'A', 'b ] = A\uf0e0 NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table T\uf0e0FT ’ a=FIRST', 'FT ’', 'M [ T', '] =T\uf0e0FT ’ M [ T', 'id ] =T\uf0e0FT ’ NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ T\uf0e0FT ’ T ’ F NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table T ’ \uf0e0 * FT ’ a=FIRST', '* FT ’', '*', 'M [ T ’', '* ] =T ’ \uf0e0 * FT ’ NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ T\uf0e0FT ’ T ’ T ’ \uf0e0 * FT ’ F Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table T ’ \uf0e0𝜖 b=FOLLOW', 'T ’', '+', 'M [ T ’', '+ ] =T ’ \uf0e0𝜖 M [ T ’', '] =T ’ \uf0e0𝜖 M [ T ’', '=T ’ \uf0e0𝜖 NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ T\uf0e0FT ’ T ’ T ’ \uf0e0𝜖 T ’ \uf0e0 * FT ’ T ’ \uf0e0𝜖 T ’ \uf0e0𝜖 F Rule', 'A\uf0e0 b = follow', 'M', 'A', 'b ] = A\uf0e0 NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing table F\uf0e0', 'E', 'a=FIRST', 'E', 'M [ F', '] =F\uf0e0', 'E', 'NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ T\uf0e0FT ’ T ’ T ’ \uf0e0𝜖 T ’ \uf0e0 * FT ’ T ’ \uf0e0𝜖 T ’ \uf0e0𝜖 F F\uf0e0', 'E', 'Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Construct', 'predictive parsing', 'table F\uf0e0id a=FIRST', 'id', 'id', 'M [ F', 'id ] =F\uf0e0id NT Input Symbol id + *', 'E E\uf0e0TE ’ E\uf0e0TE ’ E ’ E ’ \uf0e0+TE ’ E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ T\uf0e0FT ’ T ’ T ’ \uf0e0𝜖 T ’ \uf0e0 * FT ’ T ’ \uf0e0𝜖 T ’ \uf0e0𝜖 F F\uf0e0id F\uf0e0', 'E', 'Rule', 'A\uf0e0 =', 'M', 'A', '] = A\uf0e0 NT First Follow E', 'E ’', '+', 'T', 'T ’', '*', 'F', '+', 'E\uf0e0TE ’ E ’ \uf0e0+TE ’ | ϵ T\uf0e0FT ’ T ’ \uf0e0 * FT ’ | ϵ F\uf0e0', 'E', 'id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Make', 'undefined entry', 'table Error NT Input Symbol id + *', 'E E\uf0e0TE ’ Error Error E\uf0e0TE ’ Error Error E ’ Error E ’ \uf0e0+TE ’ Error Error E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ Error Error T\uf0e0FT ’ Error Error T ’ Error T ’ \uf0e0𝜖 T ’ \uf0e0 * FT ’ Error T ’ \uf0e0𝜖 T ’ \uf0e0𝜖 F F\uf0e0id Error Error F\uf0e0', 'E', 'Error Error Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', 'LL', 'Parse string', 'id + id *', 'STACK INPUT OUTPUT E', 'id+id *', 'TE ’', 'id+id *', 'E\uf0e0TE ’ FT ’ E ’', 'id+id *', 'T\uf0e0FT ’ idT ’ E ’', 'id+id *', 'F\uf0e0id T ’ E ’', '+id *', '+TE ’', '+id *', 'E ’ \uf0e0+TE ’ E ’', '+id *', 'T ’ \uf0e0𝜖 idT ’ E ’', 'F\uf0e0id TE ’', 'id *', 'T ’ E ’', 'FT ’ E ’', 'id *', 'T\uf0e0FT ’ E ’', 'T ’ \uf0e0𝜖 FT ’ E ’', 'E ’ \uf0e0𝜖 * FT ’ E ’', '*', 'T\uf0e0 * FT ’ T ’ E ’', '*', 'idT ’ E ’', 'id *', 'F\uf0e0id NT Input Symbol id + *', 'E E\uf0e0TE ’ Error Error E\uf0e0TE ’ Error Error E ’ Error E ’ \uf0e0+TE ’ Error Error E ’ \uf0e0𝜖 E ’ \uf0e0𝜖 T T\uf0e0FT ’ Error Error T\uf0e0FT ’ Error Error T ’ Error T ’ \uf0e0𝜖 T ’ \uf0e0 * FT ’ Error T ’ \uf0e0𝜖 T ’ \uf0e0𝜖 F F\uf0e0id Error Error F\uf0e0', 'E', 'Error Error Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing methods', 'Top parsing Bottom parsing', 'Shift', 'predictive parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Recursive descent', 'A', 'top parsing executes', 'recursive procedure process input', 'recursive descent parser']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW Follow'), ('GPE', 'Follow'), ('PERSON', 'Follow S'), ('GPE', 'Follow'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'aBa'), ('PERSON', 'Follow S'), ('PERSON', 'Symbol'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Follow S'), ('PERSON', 'Symbol'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Follow S'), ('PERSON', 'Symbol'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW Follow'), ('PERSON', 'S Follow'), ('PERSON', 'Follow S'), ('GPE', 'Follow'), ('ORGANIZATION', 'FOLLOW'), ('GPE', 'Follow'), ('GPE', 'Follow'), ('GPE', 'Follow'), ('GPE', 'Follow'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Symbol'), ('PERSON', 'Follow S'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Symbol'), ('PERSON', 'Follow S'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Symbol'), ('PERSON', 'Follow S'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Symbol'), ('PERSON', 'Follow S'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Symbol'), ('PERSON', 'Follow S'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Symbol'), ('PERSON', 'Follow S'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FIRST First'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('PERSON', 'F'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('PERSON', 'E'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('PERSON', 'E'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('PERSON', 'T'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Compute'), ('ORGANIZATION', 'FOLLOW'), ('ORGANIZATION', 'FOLLOW'), ('PERSON', 'T'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'TE'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'FT'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Error NT Input Symbol'), ('PERSON', 'Error Error'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'idT'), ('PERSON', 'Error Error'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aBa', 's\uf0e0aba'), ('First', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('B\uf0e0bB', 'b\uf0e0bb'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'b'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('2', '2'), ('First', 'first'), ('(', '('), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('S\uf0e0aBa', 's\uf0e0aba'), ('a=FIRST', 'a=first'), ('(', '('), ('aBa', 'aba'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'm'), ('[', '['), ('S', 's'), (',', ','), (']', ']'), ('=S\uf0e0aBa', '=s\uf0e0aba'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B', 'b'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0bB', 'b\uf0e0bb'), ('a=FIRST', 'a=first'), ('(', '('), ('bB', 'bb'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('b', 'b'), (']', ']'), ('=B\uf0e0bB', '=b\uf0e0bb'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B', 'b'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0ϵ', 'b\uf0e0ϵ'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), (']', ']'), ('=B\uf0e0𝜖', '=b\uf0e0𝜖'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('Error', 'error'), ('Error', 'error'), ('B', 'b'), ('B\uf0e0ϵ', 'b\uf0e0ϵ'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Error', 'error'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'c'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('C', 'c'), (')', ')'), ('C\uf0e0cS', 'c\uf0e0c'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 's'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('C\uf0e0cS', 'c\uf0e0c'), ('B\uf0e0bC', 'b\uf0e0bc'), ('S\uf0e0aB', 's\uf0e0ab'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 's'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=Follow', '=follow'), ('(', '('), ('C', 'c'), (')', ')'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'c'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('C', 'c'), (')', ')'), ('=Follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=Follow', '=follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('S\uf0e0aB', 's\uf0e0ab'), ('a=FIRST', 'a=first'), ('(', '('), ('aB', 'ab'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'm'), ('[', '['), ('S', 's'), (',', ','), (']', ']'), ('=S\uf0e0aB', '=s\uf0e0ab'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('B', 'b'), ('C', 'c'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('S', 's'), (',', ','), ('$', '$'), (']', ']'), ('=S\uf0e0𝜖', '=s\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0bC', 'b\uf0e0bc'), ('a=FIRST', 'a=first'), ('(', '('), ('bC', 'bc'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('b', 'b'), (']', ']'), ('=B\uf0e0bC', '=b\uf0e0bc'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('B\uf0e0bC', 'b\uf0e0bc'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('$', '$'), (']', ']'), ('=B\uf0e0𝜖', '=b\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('C\uf0e0cS', 'c\uf0e0c'), ('a=FIRST', 'a=first'), ('(', '('), ('cS', 'cs'), (')', ')'), ('=', '='), ('{', '{'), ('c', 'c'), ('}', '}'), ('M', 'm'), ('[', '['), ('C', 'c'), (',', ','), ('c', 'c'), (']', ']'), ('=C\uf0e0cS', '=c\uf0e0c'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('C\uf0e0cS', 'c\uf0e0c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('C', 'c'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('C', 'c'), (',', ','), ('$', '$'), (']', ']'), ('=C\uf0e0𝜖', '=c\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('Error', 'error'), ('Error', 'error'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('Error', 'error'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Error', 'error'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('Error', 'error'), ('Error', 'error'), ('C\uf0e0cS', 'c\uf0e0c'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0c'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Remove', 'remov'), ('left', 'left'), ('recursion', 'recurs'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('E', 'e'), (')', ')'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('First', 'first'), ('(', '('), ('T', 't'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('First', 'first'), ('(', '('), ('F', 'f'), (')', ')'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('F\uf0e0id', 'f\uf0e0id'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Y1', 'y1'), ('Y2', 'y2'), ('Rule', 'rule'), ('3', '3'), ('First', 'first'), ('(', '('), ('A', 'a'), (')', ')'), ('=First', '=first'), ('(', '('), ('Y1', 'y1'), (')', ')'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Y1', 'y1'), ('Y2', 'y2'), ('Rule', 'rule'), ('3', '3'), ('First', 'first'), ('(', '('), ('A', 'a'), (')', ')'), ('=First', '=first'), ('(', '('), ('Y1', 'y1'), (')', ')'), ('FIRST', 'first'), ('(', '('), ('E', 'e'), (')', ')'), ('=FIRST', '=first'), ('(', '('), ('T', 't'), (')', ')'), ('FIRST', 'first'), ('(', '('), ('T', 't'), (')', ')'), ('=FIRST', '=first'), ('(', '('), ('F', 'f'), (')', ')'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('id', 'id'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('F', 'f'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'e'), ('’', '’'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 't'), ('E', 'e'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('2', '2'), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+T', '+t'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('$', '$'), (',', ','), (')', ')'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('TE', 'te'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), (',', ','), ('(', '('), (']', ']'), ('=E\uf0e0TE', '=e\uf0e0t'), ('’', '’'), ('M', 'm'), ('[', '['), ('E', 'e'), (',', ','), ('id', 'id'), (']', ']'), ('=E\uf0e0TE', '=e\uf0e0t'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('T', 't'), ('T', 't'), ('’', '’'), ('F', 'f'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('+TE', '+te'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', '’'), (',', ','), ('+', '+'), (']', ']'), ('=E', '=e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('T', 't'), ('T', 't'), ('’', '’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', '’'), (',', ','), ('$', '$'), (']', ']'), ('=E', '=e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', '’'), (',', ','), (')', ')'), (']', ']'), ('=E', '=e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T', 't'), ('’', '’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('FT', 'ft'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 't'), (',', ','), ('(', '('), (']', ']'), ('=T\uf0e0FT', '=t\uf0e0ft'), ('’', '’'), ('M', 'm'), ('[', '['), ('T', 't'), (',', ','), ('id', 'id'), (']', ']'), ('=T\uf0e0FT', '=t\uf0e0ft'), ('’', '’'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('F', 'f'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('*', '*'), ('FT', 'ft'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), ('*', '*'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), ('+', '+'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), ('$', '$'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), (')', ')'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('a=FIRST', 'a=first'), ('(', '('), ('(', '('), ('E', 'e'), (')', ')'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), ('}', '}'), ('M', 'm'), ('[', '['), ('F', 'f'), (',', ','), ('(', '('), (']', ']'), ('=F\uf0e0', '=f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('F\uf0e0id', 'f\uf0e0id'), ('a=FIRST', 'a=first'), ('(', '('), ('id', 'id'), (')', ')'), ('=', '='), ('{', '{'), ('id', 'id'), ('}', '}'), ('M', 'm'), ('[', '['), ('F', 'f'), (',', ','), ('id', 'id'), (']', ']'), ('=F\uf0e0id', '=f\uf0e0id'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Make', 'make'), ('undefined', 'undefin'), ('entry', 'entri'), ('table', 'tabl'), ('Error', 'error'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('Error', 'error'), ('Error', 'error'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Error', 'error'), ('Error', 'error'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'pars'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('STACK', 'stack'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('E', 'e'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('TE', 'te'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('idT', 'idt'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('T', 't'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+TE', '+te'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('idT', 'idt'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('TE', 'te'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T', 't'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('$', '$'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('$', '$'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('$', '$'), ('$', '$'), ('$', '$'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0', 't\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('*', '*'), ('id', 'id'), ('$', '$'), ('idT', 'idt'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('Error', 'error'), ('Error', 'error'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Error', 'error'), ('Error', 'error'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'recurs'), ('descent', 'descent'), ('parsing', 'pars'), ('A', 'a'), ('top', 'top'), ('parsing', 'pars'), ('executes', 'execut'), ('set', 'set'), ('recursive', 'recurs'), ('procedure', 'procedur'), ('process', 'process'), ('input', 'input'), ('without', 'without'), ('backtracking', 'backtrack'), ('called', 'call'), ('recursive', 'recurs'), ('descent', 'descent'), ('parser', 'parser'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aBa', 's\uf0e0aba'), ('First', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('B\uf0e0bB', 'b\uf0e0bb'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'b'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('2', '2'), ('First', 'first'), ('(', '('), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('S\uf0e0aBa', 's\uf0e0aba'), ('a=FIRST', 'a=first'), ('(', '('), ('aBa', 'aba'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'm'), ('[', '['), ('S', 's'), (',', ','), (']', ']'), ('=S\uf0e0aBa', '=s\uf0e0aba'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B', 'b'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0bB', 'b\uf0e0bb'), ('a=FIRST', 'a=first'), ('(', '('), ('bB', 'bb'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('b', 'b'), (']', ']'), ('=B\uf0e0bB', '=b\uf0e0bb'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B', 'b'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'example-1'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0ϵ', 'b\uf0e0ϵ'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), (']', ']'), ('=B\uf0e0𝜖', '=b\uf0e0𝜖'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('Error', 'error'), ('Error', 'error'), ('B', 'b'), ('B\uf0e0ϵ', 'b\uf0e0ϵ'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Error', 'error'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'c'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'requir'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('C', 'c'), (')', ')'), ('C\uf0e0cS', 'c\uf0e0cs'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 's'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('C\uf0e0cS', 'c\uf0e0cs'), ('B\uf0e0bC', 'b\uf0e0bc'), ('S\uf0e0aB', 's\uf0e0ab'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 's'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=Follow', '=follow'), ('(', '('), ('C', 'c'), (')', ')'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'c'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('C', 'c'), (')', ')'), ('=Follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=Follow', '=follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('S\uf0e0aB', 's\uf0e0ab'), ('a=FIRST', 'a=first'), ('(', '('), ('aB', 'ab'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'm'), ('[', '['), ('S', 's'), (',', ','), (']', ']'), ('=S\uf0e0aB', '=s\uf0e0ab'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('B', 'b'), ('C', 'c'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('S', 's'), (',', ','), ('$', '$'), (']', ']'), ('=S\uf0e0𝜖', '=s\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0bC', 'b\uf0e0bc'), ('a=FIRST', 'a=first'), ('(', '('), ('bC', 'bc'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('b', 'b'), (']', ']'), ('=B\uf0e0bC', '=b\uf0e0bc'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('B\uf0e0bC', 'b\uf0e0bc'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('$', '$'), (']', ']'), ('=B\uf0e0𝜖', '=b\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('C\uf0e0cS', 'c\uf0e0cs'), ('a=FIRST', 'a=first'), ('(', '('), ('cS', 'cs'), (')', ')'), ('=', '='), ('{', '{'), ('c', 'c'), ('}', '}'), ('M', 'm'), ('[', '['), ('C', 'c'), (',', ','), ('c', 'c'), (']', ']'), ('=C\uf0e0cS', '=c\uf0e0cs'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('C\uf0e0cS', 'c\uf0e0cs'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'example-2'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepar'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('C', 'c'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('C', 'c'), (',', ','), ('$', '$'), (']', ']'), ('=C\uf0e0𝜖', '=c\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('Error', 'error'), ('Error', 'error'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('Error', 'error'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Error', 'error'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('Error', 'error'), ('Error', 'error'), ('C\uf0e0cS', 'c\uf0e0cs'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'c\uf0e0cs'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Remove', 'remov'), ('left', 'left'), ('recursion', 'recurs'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('E', 'e'), (')', ')'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('First', 'first'), ('(', '('), ('T', 't'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('First', 'first'), ('(', '('), ('F', 'f'), (')', ')'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('F\uf0e0id', 'f\uf0e0id'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Y1', 'y1'), ('Y2', 'y2'), ('Rule', 'rule'), ('3', '3'), ('First', 'first'), ('(', '('), ('A', 'a'), (')', ')'), ('=First', '=first'), ('(', '('), ('Y1', 'y1'), (')', ')'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Y1', 'y1'), ('Y2', 'y2'), ('Rule', 'rule'), ('3', '3'), ('First', 'first'), ('(', '('), ('A', 'a'), (')', ')'), ('=First', '=first'), ('(', '('), ('Y1', 'y1'), (')', ')'), ('FIRST', 'first'), ('(', '('), ('E', 'e'), (')', ')'), ('=FIRST', '=first'), ('(', '('), ('T', 't'), (')', ')'), ('FIRST', 'first'), ('(', '('), ('T', 't'), (')', ')'), ('=FIRST', '=first'), ('(', '('), ('F', 'f'), (')', ')'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('id', 'id'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('F', 'f'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('NT', 'nt'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'e'), ('’', '’'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 't'), ('E', 'e'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'first'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), ('F', 'f'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('2', '2'), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+T', '+t'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E', 'e'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 't'), ('E', 'e'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('$', '$'), (',', ','), (')', ')'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('T', 't'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'comput'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'f'), ('T', 't'), ('’', '’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('TE', 'te'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), (',', ','), ('(', '('), (']', ']'), ('=E\uf0e0TE', '=e\uf0e0t'), ('’', '’'), ('M', 'm'), ('[', '['), ('E', 'e'), (',', ','), ('id', 'id'), (']', ']'), ('=E\uf0e0TE', '=e\uf0e0t'), ('’', '’'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('T', 't'), ('T', 't'), ('’', '’'), ('F', 'f'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('+TE', '+te'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', '’'), (',', ','), ('+', '+'), (']', ']'), ('=E', '=e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('T', 't'), ('T', 't'), ('’', '’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('E', 'e'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', '’'), (',', ','), ('$', '$'), (']', ']'), ('=E', '=e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', '’'), (',', ','), (')', ')'), (']', ']'), ('=E', '=e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T', 't'), ('’', '’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('FT', 'ft'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 't'), (',', ','), ('(', '('), (']', ']'), ('=T\uf0e0FT', '=t\uf0e0ft'), ('’', '’'), ('M', 'm'), ('[', '['), ('T', 't'), (',', ','), ('id', 'id'), (']', ']'), ('=T\uf0e0FT', '=t\uf0e0ft'), ('’', '’'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('F', 'f'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('a=FIRST', 'a=first'), ('(', '('), ('*', '*'), ('FT', 'ft'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), ('*', '*'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('b=FOLLOW', 'b=follow'), ('(', '('), ('T', 't'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), ('+', '+'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), ('$', '$'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'm'), ('[', '['), ('T', 't'), ('’', '’'), (',', ','), (')', ')'), (']', ']'), ('=T', '=t'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'a\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('a=FIRST', 'a=first'), ('(', '('), ('(', '('), ('E', 'e'), (')', ')'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), ('}', '}'), ('M', 'm'), ('[', '['), ('F', 'f'), (',', ','), ('(', '('), (']', ']'), ('=F\uf0e0', '=f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predict'), ('parsing', 'pars'), ('table', 'tabl'), ('F\uf0e0id', 'f\uf0e0id'), ('a=FIRST', 'a=first'), ('(', '('), ('id', 'id'), (')', ')'), ('=', '='), ('{', '{'), ('id', 'id'), ('}', '}'), ('M', 'm'), ('[', '['), ('F', 'f'), (',', ','), ('id', 'id'), (']', ']'), ('=F\uf0e0id', '=f\uf0e0id'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'm'), ('[', '['), ('A', 'a'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('NT', 'nt'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'e'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 't'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Make', 'make'), ('undefined', 'undefin'), ('entry', 'entri'), ('table', 'tabl'), ('Error', 'error'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('Error', 'error'), ('Error', 'error'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Error', 'error'), ('Error', 'error'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'example-3'), (':', ':'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'pars'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'pars'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('STACK', 'stack'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('E', 'e'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('TE', 'te'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('idT', 'idt'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('T', 't'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+TE', '+te'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('idT', 'idt'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('TE', 'te'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T', 't'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('$', '$'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('$', '$'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('$', '$'), ('$', '$'), ('$', '$'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0', 't\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('T', 't'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('*', '*'), ('id', 'id'), ('$', '$'), ('idT', 'idt'), ('’', '’'), ('E', 'e'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('NT', 'nt'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E\uf0e0TE', 'e\uf0e0t'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+te'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'e'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', '’'), ('Error', 'error'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'ft'), ('’', '’'), ('Error', 'error'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 't'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('Error', 'error'), ('Error', 'error'), ('F\uf0e0', 'f\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('Error', 'error'), ('Error', 'error'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'recurs'), ('descent', 'descent'), ('parsing', 'pars'), ('A', 'a'), ('top', 'top'), ('parsing', 'pars'), ('executes', 'execut'), ('set', 'set'), ('recursive', 'recurs'), ('procedure', 'procedur'), ('process', 'process'), ('input', 'input'), ('without', 'without'), ('backtracking', 'backtrack'), ('called', 'call'), ('recursive', 'recurs'), ('descent', 'descent'), ('parser', 'parser'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'Example-1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Not', 'Not'), ('required', 'required'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('S', 'S'), (')', ')'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('First', 'First'), ('(', '('), ('B', 'B'), (')', ')'), ('B\uf0e0bB', 'B\uf0e0bB'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'B\uf0e0bB'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('Rule', 'Rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('S', 'S'), ('{', '{'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'B'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'B'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('S', 'S'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'Example-1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('Follow', 'Follow'), ('(', '('), ('S', 'S'), (')', ')'), ('Follow', 'Follow'), ('(', '('), ('B', 'B'), (')', ')'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'B\uf0e0bB'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'B\uf0e0bB'), ('|', '|'), ('ϵ', 'ϵ'), ('Follow', 'Follow'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('B', 'B'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'B'), ('Follow', 'Follow'), ('(', '('), ('S', 'S'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('Follow', 'Follow'), ('(', '('), ('A', 'A'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'B'), (')', ')'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('2', '2'), ('First', 'First'), ('(', '('), ('Rule', 'Rule'), ('1', '1'), (':', ':'), ('Place', 'Place'), ('$', '$'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('S', 'S'), (')', ')'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'Example-1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('aBa', 'aBa'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'M'), ('[', '['), ('S', 'S'), (',', ','), (']', ']'), ('=S\uf0e0aBa', '=S\uf0e0aBa'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'B\uf0e0bB'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B', 'B'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'Example-1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0bB', 'B\uf0e0bB'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('bB', 'bB'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), ('}', '}'), ('M', 'M'), ('[', '['), ('B', 'B'), (',', ','), ('b', 'b'), (']', ']'), ('=B\uf0e0bB', '=B\uf0e0bB'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'B\uf0e0bB'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B', 'B'), ('B\uf0e0bB', 'B\uf0e0bB'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-1', 'Example-1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0ϵ', 'B\uf0e0ϵ'), ('b=FOLLOW', 'b=FOLLOW'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'M'), ('[', '['), ('B', 'B'), (',', ','), (']', ']'), ('=B\uf0e0𝜖', '=B\uf0e0𝜖'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'B\uf0e0bB'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('}', '}'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('Error', 'Error'), ('Error', 'Error'), ('B', 'B'), ('B\uf0e0ϵ', 'B\uf0e0ϵ'), ('B\uf0e0bB', 'B\uf0e0bB'), ('Error', 'Error'), ('Rule', 'Rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'A'), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Not', 'Not'), ('required', 'required'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('S', 'S'), (')', ')'), ('S\uf0e0aB', 'S\uf0e0aB'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('S', 'S'), (')', ')'), ('=', '='), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('S', 'S'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Not', 'Not'), ('required', 'required'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('B', 'B'), (')', ')'), ('B\uf0e0bC', 'B\uf0e0bC'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('B', 'B'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('S', 'S'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'B'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'C'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Not', 'Not'), ('required', 'required'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('C', 'C'), (')', ')'), ('C\uf0e0cS', 'C\uf0e0cS'), ('C\uf0e0𝜖', 'C\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('C', 'C'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('S', 'S'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('C', 'C'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 'S'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('Follow', 'Follow'), ('(', '('), ('S', 'S'), (')', ')'), ('C\uf0e0cS', 'C\uf0e0cS'), ('B\uf0e0bC', 'B\uf0e0bC'), ('S\uf0e0aB', 'S\uf0e0aB'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 'S'), ('Follow', 'Follow'), ('(', '('), ('S', 'S'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('Follow', 'Follow'), ('(', '('), ('A', 'A'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'B'), (')', ')'), ('Rule', 'Rule'), ('1', '1'), (':', ':'), ('Place', 'Place'), ('$', '$'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('S', 'S'), (')', ')'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('Follow', 'Follow'), ('(', '('), ('S', 'S'), (')', ')'), ('=Follow', '=Follow'), ('(', '('), ('C', 'C'), (')', ')'), ('B', 'B'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'C'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('Follow', 'Follow'), ('(', '('), ('A', 'A'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'B'), (')', ')'), ('Follow', 'Follow'), ('(', '('), ('C', 'C'), (')', ')'), ('=Follow', '=Follow'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('Follow', 'Follow'), ('(', '('), ('A', 'A'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'B'), (')', ')'), ('Follow', 'Follow'), ('(', '('), ('B', 'B'), (')', ')'), ('=Follow', '=Follow'), ('(', '('), ('S', 'S'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('S\uf0e0aB', 'S\uf0e0aB'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('aB', 'aB'), (')', ')'), ('=', '='), ('{', '{'), ('}', '}'), ('M', 'M'), ('[', '['), ('S', 'S'), (',', ','), (']', ']'), ('=S\uf0e0aB', '=S\uf0e0aB'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 'S\uf0e0aB'), ('B', 'B'), ('C', 'C'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('b=FOLLOW', 'b=FOLLOW'), ('(', '('), ('S', 'S'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'M'), ('[', '['), ('S', 'S'), (',', ','), ('$', '$'), (']', ']'), ('=S\uf0e0𝜖', '=S\uf0e0𝜖'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 'S\uf0e0aB'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('B', 'B'), ('C', 'C'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'Rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'A'), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0bC', 'B\uf0e0bC'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('bC', 'bC'), (')', ')'), ('=', '='), ('{', '{'), ('b', 'b'), ('}', '}'), ('M', 'M'), ('[', '['), ('B', 'B'), (',', ','), ('b', 'b'), (']', ']'), ('=B\uf0e0bC', '=B\uf0e0bC'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 'S\uf0e0aB'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('B', 'B'), ('B\uf0e0bC', 'B\uf0e0bC'), ('C', 'C'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('b=FOLLOW', 'b=FOLLOW'), ('(', '('), ('B', 'B'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'M'), ('[', '['), ('B', 'B'), (',', ','), ('$', '$'), (']', ']'), ('=B\uf0e0𝜖', '=B\uf0e0𝜖'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 'S\uf0e0aB'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('B', 'B'), ('B\uf0e0bC', 'B\uf0e0bC'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('C', 'C'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'Rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'A'), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('C\uf0e0cS', 'C\uf0e0cS'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('cS', 'cS'), (')', ')'), ('=', '='), ('{', '{'), ('c', 'c'), ('}', '}'), ('M', 'M'), ('[', '['), ('C', 'C'), (',', ','), ('c', 'c'), (']', ']'), ('=C\uf0e0cS', '=C\uf0e0cS'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 'S\uf0e0aB'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('B', 'B'), ('B\uf0e0bC', 'B\uf0e0bC'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('C', 'C'), ('C\uf0e0cS', 'C\uf0e0cS'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-2', 'Example-2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Prepare', 'Prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('C\uf0e0𝜖', 'C\uf0e0𝜖'), ('b=FOLLOW', 'b=FOLLOW'), ('(', '('), ('C', 'C'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M', 'M'), ('[', '['), ('C', 'C'), (',', ','), ('$', '$'), (']', ']'), ('=C\uf0e0𝜖', '=C\uf0e0𝜖'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 'S\uf0e0aB'), ('Error', 'Error'), ('Error', 'Error'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('B', 'B'), ('Error', 'Error'), ('B\uf0e0bB', 'B\uf0e0bB'), ('Error', 'Error'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('C', 'C'), ('Error', 'Error'), ('Error', 'Error'), ('C\uf0e0cS', 'C\uf0e0cS'), ('C\uf0e0𝜖', 'C\uf0e0𝜖'), ('S\uf0e0aB', 'S\uf0e0aB'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'B\uf0e0bC'), ('|', '|'), ('ϵ', 'ϵ'), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('S', 'S'), ('{', '{'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'B'), ('{', '{'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'C'), ('{', '{'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'Rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'A'), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Remove', 'Remove'), ('left', 'left'), ('recursion', 'recursion'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('E', 'E'), (')', ')'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('First', 'First'), ('(', '('), ('T', 'T'), (')', ')'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('First', 'First'), ('(', '('), ('F', 'F'), (')', ')'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('F\uf0e0id', 'F\uf0e0id'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Y1', 'Y1'), ('Y2', 'Y2'), ('Rule', 'Rule'), ('3', '3'), ('First', 'First'), ('(', '('), ('A', 'A'), (')', ')'), ('=First', '=First'), ('(', '('), ('Y1', 'Y1'), (')', ')'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Y1', 'Y1'), ('Y2', 'Y2'), ('Rule', 'Rule'), ('3', '3'), ('First', 'First'), ('(', '('), ('A', 'A'), (')', ')'), ('=First', '=First'), ('(', '('), ('Y1', 'Y1'), (')', ')'), ('FIRST', 'FIRST'), ('(', '('), ('E', 'E'), (')', ')'), ('=FIRST', '=FIRST'), ('(', '('), ('T', 'T'), (')', ')'), ('FIRST', 'FIRST'), ('(', '('), ('T', 'T'), (')', ')'), ('=FIRST', '=FIRST'), ('(', '('), ('F', 'F'), (')', ')'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('id', 'id'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('F', 'F'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('NT', 'NT'), ('First', 'First'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'E'), ('’', '’'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', '’'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('E', 'E'), ('’', '’'), (')', ')'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('E', 'E'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('Rule', 'Rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('E', 'E'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('E', 'E'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', '’'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'FIRST'), ('First', 'First'), ('(', '('), ('T', 'T'), ('’', '’'), (')', ')'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('Rule', 'Rule'), ('1', '1'), ('add', 'add'), ('Rule', 'Rule'), ('2', '2'), ('add', 'add'), ('FIRST', 'FIRST'), ('(', '('), ('T', 'T'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('E', 'E'), (')', ')'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Rule', 'Rule'), ('1', '1'), (':', ':'), ('Place', 'Place'), ('$', '$'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('E', 'E'), (')', ')'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('E', 'E'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('2', '2'), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('E', 'E'), ('’', '’'), (')', ')'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('E', 'E'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('E', 'E'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+T', '+T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('T', 'T'), (')', ')'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('T', 'T'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('$', '$'), (',', ','), (')', ')'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('Rule', 'Rule'), ('2', '2'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('T', 'T'), (')', ')'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('T', 'T'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('E', 'E'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'Rule'), ('3', '3'), ('Rule', 'Rule'), ('2', '2'), ('E', 'E'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E', 'E'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('T', 'T'), ('’', '’'), (')', ')'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('T', 'T'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('$', '$'), (',', ','), (')', ')'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('F', 'F'), (')', ')'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('F', 'F'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'Rule'), ('3', '3'), ('Rule', 'Rule'), ('2', '2'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FOLLOW', 'FOLLOW'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('F', 'F'), (')', ')'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('FOLLOW', 'FOLLOW'), ('(', '('), ('F', 'F'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'Rule'), ('3', '3'), ('Rule', 'Rule'), ('2', '2'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T', 'T'), ('’', '’'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('TE', 'TE'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M', 'M'), ('[', '['), ('E', 'E'), (',', ','), ('(', '('), (']', ']'), ('=E\uf0e0TE', '=E\uf0e0TE'), ('’', '’'), ('M', 'M'), ('[', '['), ('E', 'E'), (',', ','), ('id', 'id'), (']', ']'), ('=E\uf0e0TE', '=E\uf0e0TE'), ('’', '’'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('T', 'T'), ('T', 'T'), ('’', '’'), ('F', 'F'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('+TE', '+TE'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('}', '}'), ('M', 'M'), ('[', '['), ('E', 'E'), ('’', '’'), (',', ','), ('+', '+'), (']', ']'), ('=E', '=E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('T', 'T'), ('T', 'T'), ('’', '’'), ('F', 'F'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('b=FOLLOW', 'b=FOLLOW'), ('(', '('), ('E', 'E'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'M'), ('[', '['), ('E', 'E'), ('’', '’'), (',', ','), ('$', '$'), (']', ']'), ('=E', '=E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'M'), ('[', '['), ('E', 'E'), ('’', '’'), (',', ','), (')', ')'), (']', ']'), ('=E', '=E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T', 'T'), ('’', '’'), ('F', 'F'), ('Rule', 'Rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'A'), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('FT', 'FT'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M', 'M'), ('[', '['), ('T', 'T'), (',', ','), ('(', '('), (']', ']'), ('=T\uf0e0FT', '=T\uf0e0FT'), ('’', '’'), ('M', 'M'), ('[', '['), ('T', 'T'), (',', ','), ('id', 'id'), (']', ']'), ('=T\uf0e0FT', '=T\uf0e0FT'), ('’', '’'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('F', 'F'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('*', '*'), ('FT', 'FT'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), ('}', '}'), ('M', 'M'), ('[', '['), ('T', 'T'), ('’', '’'), (',', ','), ('*', '*'), (']', ']'), ('=T', '=T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('F', 'F'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('b=FOLLOW', 'b=FOLLOW'), ('(', '('), ('T', 'T'), ('’', '’'), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'M'), ('[', '['), ('T', 'T'), ('’', '’'), (',', ','), ('+', '+'), (']', ']'), ('=T', '=T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'M'), ('[', '['), ('T', 'T'), ('’', '’'), (',', ','), ('$', '$'), (']', ']'), ('=T', '=T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('M', 'M'), ('[', '['), ('T', 'T'), ('’', '’'), (',', ','), (')', ')'), (']', ']'), ('=T', '=T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'F'), ('Rule', 'Rule'), (':', ':'), ('3', '3'), ('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'A'), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('(', '('), ('E', 'E'), (')', ')'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), ('}', '}'), ('M', 'M'), ('[', '['), ('F', 'F'), (',', ','), ('(', '('), (']', ']'), ('=F\uf0e0', '=F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Construct', 'Construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('F\uf0e0id', 'F\uf0e0id'), ('a=FIRST', 'a=FIRST'), ('(', '('), ('id', 'id'), (')', ')'), ('=', '='), ('{', '{'), ('id', 'id'), ('}', '}'), ('M', 'M'), ('[', '['), ('F', 'F'), (',', ','), ('id', 'id'), (']', ']'), ('=F\uf0e0id', '=F\uf0e0id'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('Rule', 'Rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M', 'M'), ('[', '['), ('A', 'A'), (',', ','), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'NT'), ('First', 'First'), ('Follow', 'Follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E', 'E'), ('’', '’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('’', '’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('4', '4'), (':', ':'), ('Make', 'Make'), ('undefined', 'undefined'), ('entry', 'entry'), ('table', 'table'), ('Error', 'Error'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('E', 'E'), ('’', '’'), ('Error', 'Error'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('T', 'T'), ('’', '’'), ('Error', 'Error'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('Error', 'Error'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('Error', 'Error'), ('Error', 'Error'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('Error', 'Error'), ('Error', 'Error'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example-3', 'Example-3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'Step'), ('4', '4'), (':', ':'), ('Parse', 'Parse'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('STACK', 'STACK'), ('INPUT', 'INPUT'), ('OUTPUT', 'OUTPUT'), ('E', 'E'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('TE', 'TE'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('FT', 'FT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('idT', 'idT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'F\uf0e0id'), ('T', 'T'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+TE', '+TE'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('idT', 'idT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'F\uf0e0id'), ('TE', 'TE'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T', 'T'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('$', '$'), ('FT', 'FT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('$', '$'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('FT', 'FT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('id', 'id'), ('$', '$'), ('$', '$'), ('$', '$'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T\uf0e0', 'T\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('T', 'T'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('*', '*'), ('id', 'id'), ('$', '$'), ('idT', 'idT'), ('’', '’'), ('E', 'E'), ('’', '’'), ('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'F\uf0e0id'), ('NT', 'NT'), ('Input', 'Input'), ('Symbol', 'Symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('E', 'E'), ('’', '’'), ('Error', 'Error'), ('E', 'E'), ('’', '’'), ('\uf0e0+TE', '\uf0e0+TE'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('E', 'E'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', '’'), ('Error', 'Error'), ('Error', 'Error'), ('T', 'T'), ('’', '’'), ('Error', 'Error'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('FT', 'FT'), ('’', '’'), ('Error', 'Error'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('T', 'T'), ('’', '’'), ('\uf0e0𝜖', '\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('Error', 'Error'), ('Error', 'Error'), ('F\uf0e0', 'F\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('Error', 'Error'), ('Error', 'Error'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('methods', 'method'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('parsing', 'parsing'), ('A', 'A'), ('top', 'top'), ('parsing', 'parsing'), ('executes', 'executes'), ('set', 'set'), ('recursive', 'recursive'), ('procedure', 'procedure'), ('process', 'process'), ('input', 'input'), ('without', 'without'), ('backtracking', 'backtracking'), ('called', 'called'), ('recursive', 'recursive'), ('descent', 'descent'), ('parser', 'parser'), ('.', '.')]



============================ Sentence 49 =============================

There is a procedure for each non terminal in the grammar. 


>> Tokens are: 
 ['There', 'procedure', 'non', 'terminal', 'grammar', '.']

>> Bigrams are: 
 [('There', 'procedure'), ('procedure', 'non'), ('non', 'terminal'), ('terminal', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('There', 'procedure', 'non'), ('procedure', 'non', 'terminal'), ('non', 'terminal', 'grammar'), ('terminal', 'grammar', '.')]

>> POS Tags are: 
 [('There', 'EX'), ('procedure', 'NN'), ('non', 'CC'), ('terminal', 'JJ'), ('grammar', 'NN'), ('.', '.')]

 (S There/EX (NP procedure/NN) non/CC (NP terminal/JJ grammar/NN) ./.) 


>> Noun Phrases are: 
 ['procedure', 'terminal grammar']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('There', 'there'), ('procedure', 'procedur'), ('non', 'non'), ('terminal', 'termin'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('There', 'there'), ('procedure', 'procedur'), ('non', 'non'), ('terminal', 'termin'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('There', 'There'), ('procedure', 'procedure'), ('non', 'non'), ('terminal', 'terminal'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 50 =============================

Consider RHS of any production rule as definition of the procedure. 


>> Tokens are: 
 ['Consider', 'RHS', 'production', 'rule', 'definition', 'procedure', '.']

>> Bigrams are: 
 [('Consider', 'RHS'), ('RHS', 'production'), ('production', 'rule'), ('rule', 'definition'), ('definition', 'procedure'), ('procedure', '.')]

>> Trigrams are: 
 [('Consider', 'RHS', 'production'), ('RHS', 'production', 'rule'), ('production', 'rule', 'definition'), ('rule', 'definition', 'procedure'), ('definition', 'procedure', '.')]

>> POS Tags are: 
 [('Consider', 'VB'), ('RHS', 'NNP'), ('production', 'NN'), ('rule', 'NN'), ('definition', 'NN'), ('procedure', 'NN'), ('.', '.')]

 (S
  Consider/VB
  (NP RHS/NNP production/NN rule/NN definition/NN procedure/NN)
  ./.) 


>> Noun Phrases are: 
 ['RHS production rule definition procedure']

>> Named Entities are: 
 [('ORGANIZATION', 'RHS')] 

>> Stemming using Porter Stemmer: 
 [('Consider', 'consid'), ('RHS', 'rh'), ('production', 'product'), ('rule', 'rule'), ('definition', 'definit'), ('procedure', 'procedur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Consider', 'consid'), ('RHS', 'rhs'), ('production', 'product'), ('rule', 'rule'), ('definition', 'definit'), ('procedure', 'procedur'), ('.', '.')]

>> Lemmatization: 
 [('Consider', 'Consider'), ('RHS', 'RHS'), ('production', 'production'), ('rule', 'rule'), ('definition', 'definition'), ('procedure', 'procedure'), ('.', '.')]



============================ Sentence 51 =============================

As it reads expected input symbol, it advances input pointer to next position. 


>> Tokens are: 
 ['As', 'reads', 'expected', 'input', 'symbol', ',', 'advances', 'input', 'pointer', 'next', 'position', '.']

>> Bigrams are: 
 [('As', 'reads'), ('reads', 'expected'), ('expected', 'input'), ('input', 'symbol'), ('symbol', ','), (',', 'advances'), ('advances', 'input'), ('input', 'pointer'), ('pointer', 'next'), ('next', 'position'), ('position', '.')]

>> Trigrams are: 
 [('As', 'reads', 'expected'), ('reads', 'expected', 'input'), ('expected', 'input', 'symbol'), ('input', 'symbol', ','), ('symbol', ',', 'advances'), (',', 'advances', 'input'), ('advances', 'input', 'pointer'), ('input', 'pointer', 'next'), ('pointer', 'next', 'position'), ('next', 'position', '.')]

>> POS Tags are: 
 [('As', 'IN'), ('reads', 'NNS'), ('expected', 'VBN'), ('input', 'JJ'), ('symbol', 'NN'), (',', ','), ('advances', 'NNS'), ('input', 'VBP'), ('pointer', 'RB'), ('next', 'JJ'), ('position', 'NN'), ('.', '.')]

 (S
  As/IN
  (NP reads/NNS)
  expected/VBN
  (NP input/JJ symbol/NN)
  ,/,
  (NP advances/NNS)
  input/VBP
  pointer/RB
  (NP next/JJ position/NN)
  ./.) 


>> Noun Phrases are: 
 ['reads', 'input symbol', 'advances', 'next position']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('As', 'as'), ('reads', 'read'), ('expected', 'expect'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('advances', 'advanc'), ('input', 'input'), ('pointer', 'pointer'), ('next', 'next'), ('position', 'posit'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('As', 'as'), ('reads', 'read'), ('expected', 'expect'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('advances', 'advanc'), ('input', 'input'), ('pointer', 'pointer'), ('next', 'next'), ('position', 'posit'), ('.', '.')]

>> Lemmatization: 
 [('As', 'As'), ('reads', 'read'), ('expected', 'expected'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('advances', 'advance'), ('input', 'input'), ('pointer', 'pointer'), ('next', 'next'), ('position', 'position'), ('.', '.')]



============================ Sentence 52 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Recursive descent parsing Procedure E { 	If lookahead=num  	{ 		Match(num); 		T(); 	} 	Else 		Error(); 	If lookahead=$ 	{ 		Declare success; 	} 	Else 		Error(); }  Procedure T { 	If lookahead=’*’  	{ 		Match(‘*’); 		If lookahead=num  		{ 			Match(num); 			T(); 		} 		Else 			Error();   	} 	Else 		NULL } Proceduce Match(token t) { 	If lookahead=t 	lookahead=next_token; 	Else 		Error(); } Procedure Error { 	Print(“Error”); } 	 	E  	T 	3	*	4	$   num T num * T | 𝜖  Success    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Recursive descent parsing Procedure E { 	If lookahead=num  	{ 		Match(num); 		T(); 	} 	Else 		Error(); 	If lookahead=$ 	{ 		Declare success; 	} 	Else 		Error(); }  Procedure T { 	If lookahead=’*’  	{ 		Match(‘*’); 		If lookahead=num  		{ 			Match(num); 			T(); 		} 		Else 			Error();   	} 	Else 		NULL } Proceduce Match(token t) { 	If lookahead=t 	lookahead=next_token; 	Else 		Error(); } Procedure Error { 	Print(“Error”); } 	 	E  	T num T num * T | 𝜖 Success 	3	4	*	$  Error 	3	*	4	$     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Handle & Handle pruning Handle: A “handle” of a string is a substring of the string that matches the right side of a production, and whose reduction to the non terminal of the production is one step along the reverse of rightmost derivation. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Recursive', 'descent', 'parsing', 'Procedure', 'E', '{', 'If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';', 'If', 'lookahead=', '$', '{', 'Declare', 'success', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'T', '{', 'If', 'lookahead=', '’', '*', '’', '{', 'Match', '(', '‘', '*', '’', ')', ';', 'If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Else', 'NULL', '}', 'Proceduce', 'Match', '(', 'token', ')', '{', 'If', 'lookahead=t', 'lookahead=next_token', ';', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'Error', '{', 'Print', '(', '“', 'Error', '”', ')', ';', '}', 'E\uf0e0', 'T\uf0e0', '3', '*', '4', '$', 'num', 'T', 'num', '*', 'T', '|', '𝜖', 'Success', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Recursive', 'descent', 'parsing', 'Procedure', 'E', '{', 'If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';', 'If', 'lookahead=', '$', '{', 'Declare', 'success', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'T', '{', 'If', 'lookahead=', '’', '*', '’', '{', 'Match', '(', '‘', '*', '’', ')', ';', 'If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Else', 'NULL', '}', 'Proceduce', 'Match', '(', 'token', ')', '{', 'If', 'lookahead=t', 'lookahead=next_token', ';', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'Error', '{', 'Print', '(', '“', 'Error', '”', ')', ';', '}', 'E\uf0e0', 'T\uf0e0', 'num', 'T', 'num', '*', 'T', '|', '𝜖', 'Success', '3', '4', '*', '$', 'Error', '3', '*', '4', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Handle', '&', 'Handle', 'pruning', 'Handle', ':', 'A', '“', 'handle', '”', 'string', 'substring', 'string', 'matches', 'right', 'side', 'production', ',', 'whose', 'reduction', 'non', 'terminal', 'production', 'one', 'step', 'along', 'reverse', 'rightmost', 'derivation', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Recursive'), ('Recursive', 'descent'), ('descent', 'parsing'), ('parsing', 'Procedure'), ('Procedure', 'E'), ('E', '{'), ('{', 'If'), ('If', 'lookahead=num'), ('lookahead=num', '{'), ('{', 'Match'), ('Match', '('), ('(', 'num'), ('num', ')'), (')', ';'), (';', 'T'), ('T', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', 'If'), ('If', 'lookahead='), ('lookahead=', '$'), ('$', '{'), ('{', 'Declare'), ('Declare', 'success'), ('success', ';'), (';', '}'), ('}', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Procedure'), ('Procedure', 'T'), ('T', '{'), ('{', 'If'), ('If', 'lookahead='), ('lookahead=', '’'), ('’', '*'), ('*', '’'), ('’', '{'), ('{', 'Match'), ('Match', '('), ('(', '‘'), ('‘', '*'), ('*', '’'), ('’', ')'), (')', ';'), (';', 'If'), ('If', 'lookahead=num'), ('lookahead=num', '{'), ('{', 'Match'), ('Match', '('), ('(', 'num'), ('num', ')'), (')', ';'), (';', 'T'), ('T', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Else'), ('Else', 'NULL'), ('NULL', '}'), ('}', 'Proceduce'), ('Proceduce', 'Match'), ('Match', '('), ('(', 'token'), ('token', ')'), (')', '{'), ('{', 'If'), ('If', 'lookahead=t'), ('lookahead=t', 'lookahead=next_token'), ('lookahead=next_token', ';'), (';', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Procedure'), ('Procedure', 'Error'), ('Error', '{'), ('{', 'Print'), ('Print', '('), ('(', '“'), ('“', 'Error'), ('Error', '”'), ('”', ')'), (')', ';'), (';', '}'), ('}', 'E\uf0e0'), ('E\uf0e0', 'T\uf0e0'), ('T\uf0e0', '3'), ('3', '*'), ('*', '4'), ('4', '$'), ('$', 'num'), ('num', 'T'), ('T', 'num'), ('num', '*'), ('*', 'T'), ('T', '|'), ('|', '𝜖'), ('𝜖', 'Success'), ('Success', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Recursive'), ('Recursive', 'descent'), ('descent', 'parsing'), ('parsing', 'Procedure'), ('Procedure', 'E'), ('E', '{'), ('{', 'If'), ('If', 'lookahead=num'), ('lookahead=num', '{'), ('{', 'Match'), ('Match', '('), ('(', 'num'), ('num', ')'), (')', ';'), (';', 'T'), ('T', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', 'If'), ('If', 'lookahead='), ('lookahead=', '$'), ('$', '{'), ('{', 'Declare'), ('Declare', 'success'), ('success', ';'), (';', '}'), ('}', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Procedure'), ('Procedure', 'T'), ('T', '{'), ('{', 'If'), ('If', 'lookahead='), ('lookahead=', '’'), ('’', '*'), ('*', '’'), ('’', '{'), ('{', 'Match'), ('Match', '('), ('(', '‘'), ('‘', '*'), ('*', '’'), ('’', ')'), (')', ';'), (';', 'If'), ('If', 'lookahead=num'), ('lookahead=num', '{'), ('{', 'Match'), ('Match', '('), ('(', 'num'), ('num', ')'), (')', ';'), (';', 'T'), ('T', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Else'), ('Else', 'NULL'), ('NULL', '}'), ('}', 'Proceduce'), ('Proceduce', 'Match'), ('Match', '('), ('(', 'token'), ('token', ')'), (')', '{'), ('{', 'If'), ('If', 'lookahead=t'), ('lookahead=t', 'lookahead=next_token'), ('lookahead=next_token', ';'), (';', 'Else'), ('Else', 'Error'), ('Error', '('), ('(', ')'), (')', ';'), (';', '}'), ('}', 'Procedure'), ('Procedure', 'Error'), ('Error', '{'), ('{', 'Print'), ('Print', '('), ('(', '“'), ('“', 'Error'), ('Error', '”'), ('”', ')'), (')', ';'), (';', '}'), ('}', 'E\uf0e0'), ('E\uf0e0', 'T\uf0e0'), ('T\uf0e0', 'num'), ('num', 'T'), ('T', 'num'), ('num', '*'), ('*', 'T'), ('T', '|'), ('|', '𝜖'), ('𝜖', 'Success'), ('Success', '3'), ('3', '4'), ('4', '*'), ('*', '$'), ('$', 'Error'), ('Error', '3'), ('3', '*'), ('*', '4'), ('4', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'Parsing'), ('Parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Handle'), ('Handle', '&'), ('&', 'Handle'), ('Handle', 'pruning'), ('pruning', 'Handle'), ('Handle', ':'), (':', 'A'), ('A', '“'), ('“', 'handle'), ('handle', '”'), ('”', 'string'), ('string', 'substring'), ('substring', 'string'), ('string', 'matches'), ('matches', 'right'), ('right', 'side'), ('side', 'production'), ('production', ','), (',', 'whose'), ('whose', 'reduction'), ('reduction', 'non'), ('non', 'terminal'), ('terminal', 'production'), ('production', 'one'), ('one', 'step'), ('step', 'along'), ('along', 'reverse'), ('reverse', 'rightmost'), ('rightmost', 'derivation'), ('derivation', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Recursive'), (':', 'Recursive', 'descent'), ('Recursive', 'descent', 'parsing'), ('descent', 'parsing', 'Procedure'), ('parsing', 'Procedure', 'E'), ('Procedure', 'E', '{'), ('E', '{', 'If'), ('{', 'If', 'lookahead=num'), ('If', 'lookahead=num', '{'), ('lookahead=num', '{', 'Match'), ('{', 'Match', '('), ('Match', '(', 'num'), ('(', 'num', ')'), ('num', ')', ';'), (')', ';', 'T'), (';', 'T', '('), ('T', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', 'If'), (';', 'If', 'lookahead='), ('If', 'lookahead=', '$'), ('lookahead=', '$', '{'), ('$', '{', 'Declare'), ('{', 'Declare', 'success'), ('Declare', 'success', ';'), ('success', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Procedure'), ('}', 'Procedure', 'T'), ('Procedure', 'T', '{'), ('T', '{', 'If'), ('{', 'If', 'lookahead='), ('If', 'lookahead=', '’'), ('lookahead=', '’', '*'), ('’', '*', '’'), ('*', '’', '{'), ('’', '{', 'Match'), ('{', 'Match', '('), ('Match', '(', '‘'), ('(', '‘', '*'), ('‘', '*', '’'), ('*', '’', ')'), ('’', ')', ';'), (')', ';', 'If'), (';', 'If', 'lookahead=num'), ('If', 'lookahead=num', '{'), ('lookahead=num', '{', 'Match'), ('{', 'Match', '('), ('Match', '(', 'num'), ('(', 'num', ')'), ('num', ')', ';'), (')', ';', 'T'), (';', 'T', '('), ('T', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'NULL'), ('Else', 'NULL', '}'), ('NULL', '}', 'Proceduce'), ('}', 'Proceduce', 'Match'), ('Proceduce', 'Match', '('), ('Match', '(', 'token'), ('(', 'token', ')'), ('token', ')', '{'), (')', '{', 'If'), ('{', 'If', 'lookahead=t'), ('If', 'lookahead=t', 'lookahead=next_token'), ('lookahead=t', 'lookahead=next_token', ';'), ('lookahead=next_token', ';', 'Else'), (';', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Procedure'), ('}', 'Procedure', 'Error'), ('Procedure', 'Error', '{'), ('Error', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '“'), ('(', '“', 'Error'), ('“', 'Error', '”'), ('Error', '”', ')'), ('”', ')', ';'), (')', ';', '}'), (';', '}', 'E\uf0e0'), ('}', 'E\uf0e0', 'T\uf0e0'), ('E\uf0e0', 'T\uf0e0', '3'), ('T\uf0e0', '3', '*'), ('3', '*', '4'), ('*', '4', '$'), ('4', '$', 'num'), ('$', 'num', 'T'), ('num', 'T', 'num'), ('T', 'num', '*'), ('num', '*', 'T'), ('*', 'T', '|'), ('T', '|', '𝜖'), ('|', '𝜖', 'Success'), ('𝜖', 'Success', 'Prof.'), ('Success', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Recursive'), (':', 'Recursive', 'descent'), ('Recursive', 'descent', 'parsing'), ('descent', 'parsing', 'Procedure'), ('parsing', 'Procedure', 'E'), ('Procedure', 'E', '{'), ('E', '{', 'If'), ('{', 'If', 'lookahead=num'), ('If', 'lookahead=num', '{'), ('lookahead=num', '{', 'Match'), ('{', 'Match', '('), ('Match', '(', 'num'), ('(', 'num', ')'), ('num', ')', ';'), (')', ';', 'T'), (';', 'T', '('), ('T', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', 'If'), (';', 'If', 'lookahead='), ('If', 'lookahead=', '$'), ('lookahead=', '$', '{'), ('$', '{', 'Declare'), ('{', 'Declare', 'success'), ('Declare', 'success', ';'), ('success', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Procedure'), ('}', 'Procedure', 'T'), ('Procedure', 'T', '{'), ('T', '{', 'If'), ('{', 'If', 'lookahead='), ('If', 'lookahead=', '’'), ('lookahead=', '’', '*'), ('’', '*', '’'), ('*', '’', '{'), ('’', '{', 'Match'), ('{', 'Match', '('), ('Match', '(', '‘'), ('(', '‘', '*'), ('‘', '*', '’'), ('*', '’', ')'), ('’', ')', ';'), (')', ';', 'If'), (';', 'If', 'lookahead=num'), ('If', 'lookahead=num', '{'), ('lookahead=num', '{', 'Match'), ('{', 'Match', '('), ('Match', '(', 'num'), ('(', 'num', ')'), ('num', ')', ';'), (')', ';', 'T'), (';', 'T', '('), ('T', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Else'), ('}', 'Else', 'NULL'), ('Else', 'NULL', '}'), ('NULL', '}', 'Proceduce'), ('}', 'Proceduce', 'Match'), ('Proceduce', 'Match', '('), ('Match', '(', 'token'), ('(', 'token', ')'), ('token', ')', '{'), (')', '{', 'If'), ('{', 'If', 'lookahead=t'), ('If', 'lookahead=t', 'lookahead=next_token'), ('lookahead=t', 'lookahead=next_token', ';'), ('lookahead=next_token', ';', 'Else'), (';', 'Else', 'Error'), ('Else', 'Error', '('), ('Error', '(', ')'), ('(', ')', ';'), (')', ';', '}'), (';', '}', 'Procedure'), ('}', 'Procedure', 'Error'), ('Procedure', 'Error', '{'), ('Error', '{', 'Print'), ('{', 'Print', '('), ('Print', '(', '“'), ('(', '“', 'Error'), ('“', 'Error', '”'), ('Error', '”', ')'), ('”', ')', ';'), (')', ';', '}'), (';', '}', 'E\uf0e0'), ('}', 'E\uf0e0', 'T\uf0e0'), ('E\uf0e0', 'T\uf0e0', 'num'), ('T\uf0e0', 'num', 'T'), ('num', 'T', 'num'), ('T', 'num', '*'), ('num', '*', 'T'), ('*', 'T', '|'), ('T', '|', '𝜖'), ('|', '𝜖', 'Success'), ('𝜖', 'Success', '3'), ('Success', '3', '4'), ('3', '4', '*'), ('4', '*', '$'), ('*', '$', 'Error'), ('$', 'Error', '3'), ('Error', '3', '*'), ('3', '*', '4'), ('*', '4', '$'), ('4', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'Parsing'), ('predictive', 'Parsing', ')'), ('Parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Handle'), ('›', 'Handle', '&'), ('Handle', '&', 'Handle'), ('&', 'Handle', 'pruning'), ('Handle', 'pruning', 'Handle'), ('pruning', 'Handle', ':'), ('Handle', ':', 'A'), (':', 'A', '“'), ('A', '“', 'handle'), ('“', 'handle', '”'), ('handle', '”', 'string'), ('”', 'string', 'substring'), ('string', 'substring', 'string'), ('substring', 'string', 'matches'), ('string', 'matches', 'right'), ('matches', 'right', 'side'), ('right', 'side', 'production'), ('side', 'production', ','), ('production', ',', 'whose'), (',', 'whose', 'reduction'), ('whose', 'reduction', 'non'), ('reduction', 'non', 'terminal'), ('non', 'terminal', 'production'), ('terminal', 'production', 'one'), ('production', 'one', 'step'), ('one', 'step', 'along'), ('step', 'along', 'reverse'), ('along', 'reverse', 'rightmost'), ('reverse', 'rightmost', 'derivation'), ('rightmost', 'derivation', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Recursive', 'JJ'), ('descent', 'NN'), ('parsing', 'VBG'), ('Procedure', 'NNP'), ('E', 'NNP'), ('{', '('), ('If', 'IN'), ('lookahead=num', 'VBN'), ('{', '('), ('Match', 'NNP'), ('(', '('), ('num', 'NN'), (')', ')'), (';', ':'), ('T', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('If', 'IN'), ('lookahead=', 'JJ'), ('$', '$'), ('{', '('), ('Declare', 'NNP'), ('success', 'NN'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Procedure', 'NNP'), ('T', 'NNP'), ('{', '('), ('If', 'IN'), ('lookahead=', 'VBN'), ('’', 'NNP'), ('*', 'NNP'), ('’', 'NNP'), ('{', '('), ('Match', 'NNP'), ('(', '('), ('‘', 'NNP'), ('*', 'NNP'), ('’', 'NNP'), (')', ')'), (';', ':'), ('If', 'IN'), ('lookahead=num', 'VBN'), ('{', '('), ('Match', 'NNP'), ('(', '('), ('num', 'NN'), (')', ')'), (';', ':'), ('T', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('NULL', 'NNP'), ('}', ')'), ('Proceduce', 'NNP'), ('Match', 'NNP'), ('(', '('), ('token', 'VBN'), (')', ')'), ('{', '('), ('If', 'IN'), ('lookahead=t', 'VBN'), ('lookahead=next_token', 'NN'), (';', ':'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Procedure', 'NNP'), ('Error', 'NNP'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('“', 'NNP'), ('Error', 'NNP'), ('”', 'NNP'), (')', ')'), (';', ':'), ('}', ')'), ('E\uf0e0', 'NNP'), ('T\uf0e0', 'NNP'), ('3', 'CD'), ('*', 'VBD'), ('4', 'CD'), ('$', '$'), ('num', 'JJ'), ('T', 'NNP'), ('num', 'NN'), ('*', 'NNP'), ('T', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('Success', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Recursive', 'JJ'), ('descent', 'NN'), ('parsing', 'VBG'), ('Procedure', 'NNP'), ('E', 'NNP'), ('{', '('), ('If', 'IN'), ('lookahead=num', 'VBN'), ('{', '('), ('Match', 'NNP'), ('(', '('), ('num', 'NN'), (')', ')'), (';', ':'), ('T', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('If', 'IN'), ('lookahead=', 'JJ'), ('$', '$'), ('{', '('), ('Declare', 'NNP'), ('success', 'NN'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Procedure', 'NNP'), ('T', 'NNP'), ('{', '('), ('If', 'IN'), ('lookahead=', 'VBN'), ('’', 'NNP'), ('*', 'NNP'), ('’', 'NNP'), ('{', '('), ('Match', 'NNP'), ('(', '('), ('‘', 'NNP'), ('*', 'NNP'), ('’', 'NNP'), (')', ')'), (';', ':'), ('If', 'IN'), ('lookahead=num', 'VBN'), ('{', '('), ('Match', 'NNP'), ('(', '('), ('num', 'NN'), (')', ')'), (';', ':'), ('T', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Else', 'NNP'), ('NULL', 'NNP'), ('}', ')'), ('Proceduce', 'NNP'), ('Match', 'NNP'), ('(', '('), ('token', 'VBN'), (')', ')'), ('{', '('), ('If', 'IN'), ('lookahead=t', 'VBN'), ('lookahead=next_token', 'NN'), (';', ':'), ('Else', 'NNP'), ('Error', 'NNP'), ('(', '('), (')', ')'), (';', ':'), ('}', ')'), ('Procedure', 'NNP'), ('Error', 'NNP'), ('{', '('), ('Print', 'NNP'), ('(', '('), ('“', 'NNP'), ('Error', 'NNP'), ('”', 'NNP'), (')', ')'), (';', ':'), ('}', ')'), ('E\uf0e0', 'NNP'), ('T\uf0e0', 'NNP'), ('num', 'NN'), ('T', 'NNP'), ('num', 'NN'), ('*', 'NNP'), ('T', 'NNP'), ('|', 'NNP'), ('𝜖', 'NNP'), ('Success', 'NNP'), ('3', 'CD'), ('4', 'CD'), ('*', 'JJ'), ('$', '$'), ('Error', 'NNP'), ('3', 'CD'), ('*', 'VBD'), ('4', 'CD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('Parsing', 'NNP'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Handle', 'NNP'), ('&', 'CC'), ('Handle', 'NNP'), ('pruning', 'VBG'), ('Handle', 'NNP'), (':', ':'), ('A', 'DT'), ('“', 'NN'), ('handle', 'NN'), ('”', 'NNP'), ('string', 'VBG'), ('substring', 'VBG'), ('string', 'VBG'), ('matches', 'NNS'), ('right', 'JJ'), ('side', 'NN'), ('production', 'NN'), (',', ','), ('whose', 'WP$'), ('reduction', 'NN'), ('non', 'JJ'), ('terminal', 'JJ'), ('production', 'NN'), ('one', 'CD'), ('step', 'NN'), ('along', 'IN'), ('reverse', 'NN'), ('rightmost', 'NN'), ('derivation', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Recursive/JJ descent/NN)
  parsing/VBG
  (NP Procedure/NNP E/NNP)
  {/(
  If/IN
  lookahead=num/VBN
  {/(
  (NP Match/NNP)
  (/(
  (NP num/NN)
  )/)
  ;/:
  (NP T/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  If/IN
  lookahead=/JJ
  $/$
  {/(
  (NP Declare/NNP success/NN)
  ;/:
  }/)
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Procedure/NNP T/NNP)
  {/(
  If/IN
  lookahead=/VBN
  (NP ’/NNP */NNP ’/NNP)
  {/(
  (NP Match/NNP)
  (/(
  (NP ‘/NNP */NNP ’/NNP)
  )/)
  ;/:
  If/IN
  lookahead=num/VBN
  {/(
  (NP Match/NNP)
  (/(
  (NP num/NN)
  )/)
  ;/:
  (NP T/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Else/NNP NULL/NNP)
  }/)
  (NP Proceduce/NNP Match/NNP)
  (/(
  token/VBN
  )/)
  {/(
  If/IN
  lookahead=t/VBN
  (NP lookahead=next_token/NN)
  ;/:
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Procedure/NNP Error/NNP)
  {/(
  (NP Print/NNP)
  (/(
  (NP “/NNP Error/NNP ”/NNP)
  )/)
  ;/:
  }/)
  (NP E/NNP T/NNP)
  3/CD
  */VBD
  4/CD
  $/$
  (NP
    num/JJ
    T/NNP
    num/NN
    */NNP
    T/NNP
    |/NNP
    𝜖/NNP
    Success/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Recursive/JJ descent/NN)
  parsing/VBG
  (NP Procedure/NNP E/NNP)
  {/(
  If/IN
  lookahead=num/VBN
  {/(
  (NP Match/NNP)
  (/(
  (NP num/NN)
  )/)
  ;/:
  (NP T/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  If/IN
  lookahead=/JJ
  $/$
  {/(
  (NP Declare/NNP success/NN)
  ;/:
  }/)
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Procedure/NNP T/NNP)
  {/(
  If/IN
  lookahead=/VBN
  (NP ’/NNP */NNP ’/NNP)
  {/(
  (NP Match/NNP)
  (/(
  (NP ‘/NNP */NNP ’/NNP)
  )/)
  ;/:
  If/IN
  lookahead=num/VBN
  {/(
  (NP Match/NNP)
  (/(
  (NP num/NN)
  )/)
  ;/:
  (NP T/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Else/NNP NULL/NNP)
  }/)
  (NP Proceduce/NNP Match/NNP)
  (/(
  token/VBN
  )/)
  {/(
  If/IN
  lookahead=t/VBN
  (NP lookahead=next_token/NN)
  ;/:
  (NP Else/NNP Error/NNP)
  (/(
  )/)
  ;/:
  }/)
  (NP Procedure/NNP Error/NNP)
  {/(
  (NP Print/NNP)
  (/(
  (NP “/NNP Error/NNP ”/NNP)
  )/)
  ;/:
  }/)
  (NP
    E/NNP
    T/NNP
    num/NN
    T/NNP
    num/NN
    */NNP
    T/NNP
    |/NNP
    𝜖/NNP
    Success/NNP)
  3/CD
  4/CD
  */JJ
  $/$
  (NP Error/NNP)
  3/CD
  */VBD
  4/CD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ Parsing/NNP)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Handle/NNP)
  &/CC
  (NP Handle/NNP)
  pruning/VBG
  (NP Handle/NNP)
  :/:
  (NP A/DT “/NN handle/NN ”/NNP)
  string/VBG
  substring/VBG
  string/VBG
  (NP matches/NNS)
  (NP right/JJ side/NN production/NN)
  ,/,
  whose/WP$
  (NP reduction/NN)
  (NP non/JJ terminal/JJ production/NN)
  one/CD
  (NP step/NN)
  along/IN
  (NP reverse/NN rightmost/NN derivation/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Recursive descent', 'Procedure E', 'Match', 'num', 'T', 'Else Error', 'Declare success', 'Else Error', 'Procedure T', '’ * ’', 'Match', '‘ * ’', 'Match', 'num', 'T', 'Else Error', 'Else NULL', 'Proceduce Match', 'lookahead=next_token', 'Else Error', 'Procedure Error', 'Print', '“ Error ”', 'E\uf0e0 T\uf0e0', 'num T num * T | 𝜖 Success Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Recursive descent', 'Procedure E', 'Match', 'num', 'T', 'Else Error', 'Declare success', 'Else Error', 'Procedure T', '’ * ’', 'Match', '‘ * ’', 'Match', 'num', 'T', 'Else Error', 'Else NULL', 'Proceduce Match', 'lookahead=next_token', 'Else Error', 'Procedure Error', 'Print', '“ Error ”', 'E\uf0e0 T\uf0e0 num T num * T | 𝜖 Success', 'Error', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive Parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Handle', 'Handle', 'Handle', 'A “ handle ”', 'matches', 'right side production', 'reduction', 'non terminal production', 'step', 'reverse rightmost derivation']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Procedure E'), ('GPE', 'Match'), ('PERSON', 'Else Error'), ('PERSON', 'Else Error'), ('GPE', 'Match'), ('GPE', 'Match'), ('PERSON', 'Else Error'), ('PERSON', 'Else NULL'), ('PERSON', 'Proceduce Match'), ('PERSON', 'Else Error'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Procedure E'), ('GPE', 'Match'), ('PERSON', 'Else Error'), ('PERSON', 'Else Error'), ('GPE', 'Match'), ('GPE', 'Match'), ('PERSON', 'Else Error'), ('PERSON', 'Else NULL'), ('PERSON', 'Proceduce Match'), ('PERSON', 'Else Error'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('GPE', 'Handle'), ('PERSON', 'Handle')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Recursive', 'recurs'), ('descent', 'descent'), ('parsing', 'pars'), ('Procedure', 'procedur'), ('E', 'e'), ('{', '{'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=', 'lookahead='), ('$', '$'), ('{', '{'), ('Declare', 'declar'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('T', 't'), ('{', '{'), ('If', 'if'), ('lookahead=', 'lookahead='), ('’', '’'), ('*', '*'), ('’', '’'), ('{', '{'), ('Match', 'match'), ('(', '('), ('‘', '‘'), ('*', '*'), ('’', '’'), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('NULL', 'null'), ('}', '}'), ('Proceduce', 'proceduc'), ('Match', 'match'), ('(', '('), ('token', 'token'), (')', ')'), ('{', '{'), ('If', 'if'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('Error', 'error'), ('{', '{'), ('Print', 'print'), ('(', '('), ('“', '“'), ('Error', 'error'), ('”', '”'), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'e\uf0e0'), ('T\uf0e0', 't\uf0e0'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('num', 'num'), ('T', 't'), ('num', 'num'), ('*', '*'), ('T', 't'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'success'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Recursive', 'recurs'), ('descent', 'descent'), ('parsing', 'pars'), ('Procedure', 'procedur'), ('E', 'e'), ('{', '{'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=', 'lookahead='), ('$', '$'), ('{', '{'), ('Declare', 'declar'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('T', 't'), ('{', '{'), ('If', 'if'), ('lookahead=', 'lookahead='), ('’', '’'), ('*', '*'), ('’', '’'), ('{', '{'), ('Match', 'match'), ('(', '('), ('‘', '‘'), ('*', '*'), ('’', '’'), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('NULL', 'null'), ('}', '}'), ('Proceduce', 'proceduc'), ('Match', 'match'), ('(', '('), ('token', 'token'), (')', ')'), ('{', '{'), ('If', 'if'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('Error', 'error'), ('{', '{'), ('Print', 'print'), ('(', '('), ('“', '“'), ('Error', 'error'), ('”', '”'), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'e\uf0e0'), ('T\uf0e0', 't\uf0e0'), ('num', 'num'), ('T', 't'), ('num', 'num'), ('*', '*'), ('T', 't'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'success'), ('3', '3'), ('4', '4'), ('*', '*'), ('$', '$'), ('Error', 'error'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Handle', 'handl'), ('&', '&'), ('Handle', 'handl'), ('pruning', 'prune'), ('Handle', 'handl'), (':', ':'), ('A', 'a'), ('“', '“'), ('handle', 'handl'), ('”', '”'), ('string', 'string'), ('substring', 'substr'), ('string', 'string'), ('matches', 'match'), ('right', 'right'), ('side', 'side'), ('production', 'product'), (',', ','), ('whose', 'whose'), ('reduction', 'reduct'), ('non', 'non'), ('terminal', 'termin'), ('production', 'product'), ('one', 'one'), ('step', 'step'), ('along', 'along'), ('reverse', 'revers'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Recursive', 'recurs'), ('descent', 'descent'), ('parsing', 'pars'), ('Procedure', 'procedur'), ('E', 'e'), ('{', '{'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=', 'lookahead='), ('$', '$'), ('{', '{'), ('Declare', 'declar'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('T', 't'), ('{', '{'), ('If', 'if'), ('lookahead=', 'lookahead='), ('’', '’'), ('*', '*'), ('’', '’'), ('{', '{'), ('Match', 'match'), ('(', '('), ('‘', '‘'), ('*', '*'), ('’', '’'), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('NULL', 'null'), ('}', '}'), ('Proceduce', 'proceduc'), ('Match', 'match'), ('(', '('), ('token', 'token'), (')', ')'), ('{', '{'), ('If', 'if'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('Error', 'error'), ('{', '{'), ('Print', 'print'), ('(', '('), ('“', '“'), ('Error', 'error'), ('”', '”'), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'e\uf0e0'), ('T\uf0e0', 't\uf0e0'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('num', 'num'), ('T', 't'), ('num', 'num'), ('*', '*'), ('T', 't'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'success'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Recursive', 'recurs'), ('descent', 'descent'), ('parsing', 'pars'), ('Procedure', 'procedur'), ('E', 'e'), ('{', '{'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=', 'lookahead='), ('$', '$'), ('{', '{'), ('Declare', 'declar'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('T', 't'), ('{', '{'), ('If', 'if'), ('lookahead=', 'lookahead='), ('’', '’'), ('*', '*'), ('’', '’'), ('{', '{'), ('Match', 'match'), ('(', '('), ('‘', '‘'), ('*', '*'), ('’', '’'), (')', ')'), (';', ';'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 't'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'els'), ('NULL', 'null'), ('}', '}'), ('Proceduce', 'proceduc'), ('Match', 'match'), ('(', '('), ('token', 'token'), (')', ')'), ('{', '{'), ('If', 'if'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'els'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedur'), ('Error', 'error'), ('{', '{'), ('Print', 'print'), ('(', '('), ('“', '“'), ('Error', 'error'), ('”', '”'), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'e\uf0e0'), ('T\uf0e0', 't\uf0e0'), ('num', 'num'), ('T', 't'), ('num', 'num'), ('*', '*'), ('T', 't'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'success'), ('3', '3'), ('4', '4'), ('*', '*'), ('$', '$'), ('Error', 'error'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Handle', 'handl'), ('&', '&'), ('Handle', 'handl'), ('pruning', 'prune'), ('Handle', 'handl'), (':', ':'), ('A', 'a'), ('“', '“'), ('handle', 'handl'), ('”', '”'), ('string', 'string'), ('substring', 'substr'), ('string', 'string'), ('matches', 'match'), ('right', 'right'), ('side', 'side'), ('production', 'product'), (',', ','), ('whose', 'whose'), ('reduction', 'reduct'), ('non', 'non'), ('terminal', 'termin'), ('production', 'product'), ('one', 'one'), ('step', 'step'), ('along', 'along'), ('reverse', 'revers'), ('rightmost', 'rightmost'), ('derivation', 'deriv'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('parsing', 'parsing'), ('Procedure', 'Procedure'), ('E', 'E'), ('{', '{'), ('If', 'If'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('If', 'If'), ('lookahead=', 'lookahead='), ('$', '$'), ('{', '{'), ('Declare', 'Declare'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'Procedure'), ('T', 'T'), ('{', '{'), ('If', 'If'), ('lookahead=', 'lookahead='), ('’', '’'), ('*', '*'), ('’', '’'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('‘', '‘'), ('*', '*'), ('’', '’'), (')', ')'), (';', ';'), ('If', 'If'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('NULL', 'NULL'), ('}', '}'), ('Proceduce', 'Proceduce'), ('Match', 'Match'), ('(', '('), ('token', 'token'), (')', ')'), ('{', '{'), ('If', 'If'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'Procedure'), ('Error', 'Error'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('“', '“'), ('Error', 'Error'), ('”', '”'), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'E\uf0e0'), ('T\uf0e0', 'T\uf0e0'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('num', 'num'), ('T', 'T'), ('num', 'num'), ('*', '*'), ('T', 'T'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'Success'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('parsing', 'parsing'), ('Procedure', 'Procedure'), ('E', 'E'), ('{', '{'), ('If', 'If'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('If', 'If'), ('lookahead=', 'lookahead='), ('$', '$'), ('{', '{'), ('Declare', 'Declare'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'Procedure'), ('T', 'T'), ('{', '{'), ('If', 'If'), ('lookahead=', 'lookahead='), ('’', '’'), ('*', '*'), ('’', '’'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('‘', '‘'), ('*', '*'), ('’', '’'), (')', ')'), (';', ';'), ('If', 'If'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('NULL', 'NULL'), ('}', '}'), ('Proceduce', 'Proceduce'), ('Match', 'Match'), ('(', '('), ('token', 'token'), (')', ')'), ('{', '{'), ('If', 'If'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'Else'), ('Error', 'Error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'Procedure'), ('Error', 'Error'), ('{', '{'), ('Print', 'Print'), ('(', '('), ('“', '“'), ('Error', 'Error'), ('”', '”'), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'E\uf0e0'), ('T\uf0e0', 'T\uf0e0'), ('num', 'num'), ('T', 'T'), ('num', 'num'), ('*', '*'), ('T', 'T'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'Success'), ('3', '3'), ('4', '4'), ('*', '*'), ('$', '$'), ('Error', 'Error'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'Parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Handle', 'Handle'), ('&', '&'), ('Handle', 'Handle'), ('pruning', 'pruning'), ('Handle', 'Handle'), (':', ':'), ('A', 'A'), ('“', '“'), ('handle', 'handle'), ('”', '”'), ('string', 'string'), ('substring', 'substring'), ('string', 'string'), ('matches', 'match'), ('right', 'right'), ('side', 'side'), ('production', 'production'), (',', ','), ('whose', 'whose'), ('reduction', 'reduction'), ('non', 'non'), ('terminal', 'terminal'), ('production', 'production'), ('one', 'one'), ('step', 'step'), ('along', 'along'), ('reverse', 'reverse'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('.', '.')]



============================ Sentence 53 =============================

Handle pruning: The process of discovering a handle and reducing it to appropriate left hand side non terminal is known as handle pruning. 


>> Tokens are: 
 ['Handle', 'pruning', ':', 'The', 'process', 'discovering', 'handle', 'reducing', 'appropriate', 'left', 'hand', 'side', 'non', 'terminal', 'known', 'handle', 'pruning', '.']

>> Bigrams are: 
 [('Handle', 'pruning'), ('pruning', ':'), (':', 'The'), ('The', 'process'), ('process', 'discovering'), ('discovering', 'handle'), ('handle', 'reducing'), ('reducing', 'appropriate'), ('appropriate', 'left'), ('left', 'hand'), ('hand', 'side'), ('side', 'non'), ('non', 'terminal'), ('terminal', 'known'), ('known', 'handle'), ('handle', 'pruning'), ('pruning', '.')]

>> Trigrams are: 
 [('Handle', 'pruning', ':'), ('pruning', ':', 'The'), (':', 'The', 'process'), ('The', 'process', 'discovering'), ('process', 'discovering', 'handle'), ('discovering', 'handle', 'reducing'), ('handle', 'reducing', 'appropriate'), ('reducing', 'appropriate', 'left'), ('appropriate', 'left', 'hand'), ('left', 'hand', 'side'), ('hand', 'side', 'non'), ('side', 'non', 'terminal'), ('non', 'terminal', 'known'), ('terminal', 'known', 'handle'), ('known', 'handle', 'pruning'), ('handle', 'pruning', '.')]

>> POS Tags are: 
 [('Handle', 'NNP'), ('pruning', 'NN'), (':', ':'), ('The', 'DT'), ('process', 'NN'), ('discovering', 'VBG'), ('handle', 'JJ'), ('reducing', 'VBG'), ('appropriate', 'JJ'), ('left', 'JJ'), ('hand', 'NN'), ('side', 'NN'), ('non', 'IN'), ('terminal', 'JJ'), ('known', 'VBN'), ('handle', 'JJ'), ('pruning', 'NN'), ('.', '.')]

 (S
  (NP Handle/NNP pruning/NN)
  :/:
  (NP The/DT process/NN)
  discovering/VBG
  handle/JJ
  reducing/VBG
  (NP appropriate/JJ left/JJ hand/NN side/NN)
  non/IN
  terminal/JJ
  known/VBN
  (NP handle/JJ pruning/NN)
  ./.) 


>> Noun Phrases are: 
 ['Handle pruning', 'The process', 'appropriate left hand side', 'handle pruning']

>> Named Entities are: 
 [('GPE', 'Handle')] 

>> Stemming using Porter Stemmer: 
 [('Handle', 'handl'), ('pruning', 'prune'), (':', ':'), ('The', 'the'), ('process', 'process'), ('discovering', 'discov'), ('handle', 'handl'), ('reducing', 'reduc'), ('appropriate', 'appropri'), ('left', 'left'), ('hand', 'hand'), ('side', 'side'), ('non', 'non'), ('terminal', 'termin'), ('known', 'known'), ('handle', 'handl'), ('pruning', 'prune'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Handle', 'handl'), ('pruning', 'prune'), (':', ':'), ('The', 'the'), ('process', 'process'), ('discovering', 'discov'), ('handle', 'handl'), ('reducing', 'reduc'), ('appropriate', 'appropri'), ('left', 'left'), ('hand', 'hand'), ('side', 'side'), ('non', 'non'), ('terminal', 'termin'), ('known', 'known'), ('handle', 'handl'), ('pruning', 'prune'), ('.', '.')]

>> Lemmatization: 
 [('Handle', 'Handle'), ('pruning', 'pruning'), (':', ':'), ('The', 'The'), ('process', 'process'), ('discovering', 'discovering'), ('handle', 'handle'), ('reducing', 'reducing'), ('appropriate', 'appropriate'), ('left', 'left'), ('hand', 'hand'), ('side', 'side'), ('non', 'non'), ('terminal', 'terminal'), ('known', 'known'), ('handle', 'handle'), ('pruning', 'pruning'), ('.', '.')]



============================ Sentence 54 =============================

EE+E EE*E Eid String: id1+id2*id3 	Right sentential form	Handle	Production  	id1+id2*id3	id1	Eid   	E+id2*id3	id2	Eid  	E+E*id3	id3	Eid  	E+E*E	E*E	EE*E  	E+E	E+E	EE+E   	E		                 Rightmost Derivation E E+E E+E*E E+E*id3 E+id2*id3 id1+id2*id3    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Shift reduce parser The shift reduce parser performs following basic operations: Shift: Moving of the symbols from input buffer onto the stack, this action is called shift. 


>> Tokens are: 
 ['E\uf0e0E+E', 'E\uf0e0E', '*', 'E', 'E\uf0e0id', 'String', ':', 'id1+id2', '*', 'id3', 'Right', 'sentential', 'form', 'Handle', 'Production', 'id1+id2', '*', 'id3', 'id1', 'E\uf0e0id', 'E+id2', '*', 'id3', 'id2', 'E\uf0e0id', 'E+E', '*', 'id3', 'id3', 'E\uf0e0id', 'E+E', '*', 'E', 'E', '*', 'E', 'E\uf0e0E', '*', 'E', 'E+E', 'E+E', 'E\uf0e0E+E', 'E', 'Rightmost', 'Derivation', 'E', 'E+E', 'E+E', '*', 'E', 'E+E', '*', 'id3', 'E+id2', '*', 'id3', 'id1+id2', '*', 'id3', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Shift', 'reduce', 'parser', 'The', 'shift', 'reduce', 'parser', 'performs', 'following', 'basic', 'operations', ':', 'Shift', ':', 'Moving', 'symbols', 'input', 'buffer', 'onto', 'stack', ',', 'action', 'called', 'shift', '.']

>> Bigrams are: 
 [('E\uf0e0E+E', 'E\uf0e0E'), ('E\uf0e0E', '*'), ('*', 'E'), ('E', 'E\uf0e0id'), ('E\uf0e0id', 'String'), ('String', ':'), (':', 'id1+id2'), ('id1+id2', '*'), ('*', 'id3'), ('id3', 'Right'), ('Right', 'sentential'), ('sentential', 'form'), ('form', 'Handle'), ('Handle', 'Production'), ('Production', 'id1+id2'), ('id1+id2', '*'), ('*', 'id3'), ('id3', 'id1'), ('id1', 'E\uf0e0id'), ('E\uf0e0id', 'E+id2'), ('E+id2', '*'), ('*', 'id3'), ('id3', 'id2'), ('id2', 'E\uf0e0id'), ('E\uf0e0id', 'E+E'), ('E+E', '*'), ('*', 'id3'), ('id3', 'id3'), ('id3', 'E\uf0e0id'), ('E\uf0e0id', 'E+E'), ('E+E', '*'), ('*', 'E'), ('E', 'E'), ('E', '*'), ('*', 'E'), ('E', 'E\uf0e0E'), ('E\uf0e0E', '*'), ('*', 'E'), ('E', 'E+E'), ('E+E', 'E+E'), ('E+E', 'E\uf0e0E+E'), ('E\uf0e0E+E', 'E'), ('E', 'Rightmost'), ('Rightmost', 'Derivation'), ('Derivation', 'E'), ('E', 'E+E'), ('E+E', 'E+E'), ('E+E', '*'), ('*', 'E'), ('E', 'E+E'), ('E+E', '*'), ('*', 'id3'), ('id3', 'E+id2'), ('E+id2', '*'), ('*', 'id3'), ('id3', 'id1+id2'), ('id1+id2', '*'), ('*', 'id3'), ('id3', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Shift'), ('Shift', 'reduce'), ('reduce', 'parser'), ('parser', 'The'), ('The', 'shift'), ('shift', 'reduce'), ('reduce', 'parser'), ('parser', 'performs'), ('performs', 'following'), ('following', 'basic'), ('basic', 'operations'), ('operations', ':'), (':', 'Shift'), ('Shift', ':'), (':', 'Moving'), ('Moving', 'symbols'), ('symbols', 'input'), ('input', 'buffer'), ('buffer', 'onto'), ('onto', 'stack'), ('stack', ','), (',', 'action'), ('action', 'called'), ('called', 'shift'), ('shift', '.')]

>> Trigrams are: 
 [('E\uf0e0E+E', 'E\uf0e0E', '*'), ('E\uf0e0E', '*', 'E'), ('*', 'E', 'E\uf0e0id'), ('E', 'E\uf0e0id', 'String'), ('E\uf0e0id', 'String', ':'), ('String', ':', 'id1+id2'), (':', 'id1+id2', '*'), ('id1+id2', '*', 'id3'), ('*', 'id3', 'Right'), ('id3', 'Right', 'sentential'), ('Right', 'sentential', 'form'), ('sentential', 'form', 'Handle'), ('form', 'Handle', 'Production'), ('Handle', 'Production', 'id1+id2'), ('Production', 'id1+id2', '*'), ('id1+id2', '*', 'id3'), ('*', 'id3', 'id1'), ('id3', 'id1', 'E\uf0e0id'), ('id1', 'E\uf0e0id', 'E+id2'), ('E\uf0e0id', 'E+id2', '*'), ('E+id2', '*', 'id3'), ('*', 'id3', 'id2'), ('id3', 'id2', 'E\uf0e0id'), ('id2', 'E\uf0e0id', 'E+E'), ('E\uf0e0id', 'E+E', '*'), ('E+E', '*', 'id3'), ('*', 'id3', 'id3'), ('id3', 'id3', 'E\uf0e0id'), ('id3', 'E\uf0e0id', 'E+E'), ('E\uf0e0id', 'E+E', '*'), ('E+E', '*', 'E'), ('*', 'E', 'E'), ('E', 'E', '*'), ('E', '*', 'E'), ('*', 'E', 'E\uf0e0E'), ('E', 'E\uf0e0E', '*'), ('E\uf0e0E', '*', 'E'), ('*', 'E', 'E+E'), ('E', 'E+E', 'E+E'), ('E+E', 'E+E', 'E\uf0e0E+E'), ('E+E', 'E\uf0e0E+E', 'E'), ('E\uf0e0E+E', 'E', 'Rightmost'), ('E', 'Rightmost', 'Derivation'), ('Rightmost', 'Derivation', 'E'), ('Derivation', 'E', 'E+E'), ('E', 'E+E', 'E+E'), ('E+E', 'E+E', '*'), ('E+E', '*', 'E'), ('*', 'E', 'E+E'), ('E', 'E+E', '*'), ('E+E', '*', 'id3'), ('*', 'id3', 'E+id2'), ('id3', 'E+id2', '*'), ('E+id2', '*', 'id3'), ('*', 'id3', 'id1+id2'), ('id3', 'id1+id2', '*'), ('id1+id2', '*', 'id3'), ('*', 'id3', 'Prof.'), ('id3', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Shift'), ('›', 'Shift', 'reduce'), ('Shift', 'reduce', 'parser'), ('reduce', 'parser', 'The'), ('parser', 'The', 'shift'), ('The', 'shift', 'reduce'), ('shift', 'reduce', 'parser'), ('reduce', 'parser', 'performs'), ('parser', 'performs', 'following'), ('performs', 'following', 'basic'), ('following', 'basic', 'operations'), ('basic', 'operations', ':'), ('operations', ':', 'Shift'), (':', 'Shift', ':'), ('Shift', ':', 'Moving'), (':', 'Moving', 'symbols'), ('Moving', 'symbols', 'input'), ('symbols', 'input', 'buffer'), ('input', 'buffer', 'onto'), ('buffer', 'onto', 'stack'), ('onto', 'stack', ','), ('stack', ',', 'action'), (',', 'action', 'called'), ('action', 'called', 'shift'), ('called', 'shift', '.')]

>> POS Tags are: 
 [('E\uf0e0E+E', 'NNP'), ('E\uf0e0E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('E\uf0e0id', 'NNP'), ('String', 'NNP'), (':', ':'), ('id1+id2', 'NN'), ('*', 'VBP'), ('id3', 'NN'), ('Right', 'NNP'), ('sentential', 'JJ'), ('form', 'NN'), ('Handle', 'NNP'), ('Production', 'NNP'), ('id1+id2', 'NN'), ('*', 'NNP'), ('id3', 'NN'), ('id1', 'NN'), ('E\uf0e0id', 'NNP'), ('E+id2', 'NNP'), ('*', 'NNP'), ('id3', 'NN'), ('id2', 'NN'), ('E\uf0e0id', 'NNP'), ('E+E', 'NNP'), ('*', 'NNP'), ('id3', 'NN'), ('id3', 'NN'), ('E\uf0e0id', 'NNP'), ('E+E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('E\uf0e0E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('E+E', 'NNP'), ('E+E', 'NNP'), ('E\uf0e0E+E', 'NNP'), ('E', 'NNP'), ('Rightmost', 'NNP'), ('Derivation', 'NNP'), ('E', 'NNP'), ('E+E', 'NNP'), ('E+E', 'NNP'), ('*', 'NNP'), ('E', 'NNP'), ('E+E', 'NNP'), ('*', 'NNP'), ('id3', 'NN'), ('E+id2', 'NNP'), ('*', 'NNP'), ('id3', 'NN'), ('id1+id2', 'NN'), ('*', 'NNP'), ('id3', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Shift', 'NNP'), ('reduce', 'VB'), ('parser', 'VBZ'), ('The', 'DT'), ('shift', 'NN'), ('reduce', 'VB'), ('parser', 'JJR'), ('performs', 'NNS'), ('following', 'VBG'), ('basic', 'JJ'), ('operations', 'NNS'), (':', ':'), ('Shift', 'NN'), (':', ':'), ('Moving', 'NNP'), ('symbols', 'VBZ'), ('input', 'NN'), ('buffer', 'VB'), ('onto', 'IN'), ('stack', 'NN'), (',', ','), ('action', 'NN'), ('called', 'VBN'), ('shift', 'NN'), ('.', '.')]

 (S
  (NP EE+E/NNP EE/NNP */NNP E/NNP Eid/NNP String/NNP)
  :/:
  (NP id1+id2/NN)
  */VBP
  (NP id3/NN Right/NNP)
  (NP
    sentential/JJ
    form/NN
    Handle/NNP
    Production/NNP
    id1+id2/NN
    */NNP
    id3/NN
    id1/NN
    Eid/NNP
    E+id2/NNP
    */NNP
    id3/NN
    id2/NN
    Eid/NNP
    E+E/NNP
    */NNP
    id3/NN
    id3/NN
    Eid/NNP
    E+E/NNP
    */NNP
    E/NNP
    E/NNP
    */NNP
    E/NNP
    EE/NNP
    */NNP
    E/NNP
    E+E/NNP
    E+E/NNP
    EE+E/NNP
    E/NNP
    Rightmost/NNP
    Derivation/NNP
    E/NNP
    E+E/NNP
    E+E/NNP
    */NNP
    E/NNP
    E+E/NNP
    */NNP
    id3/NN
    E+id2/NNP
    */NNP
    id3/NN
    id1+id2/NN
    */NNP
    id3/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Shift/NNP)
  reduce/VB
  parser/VBZ
  (NP The/DT shift/NN)
  reduce/VB
  parser/JJR
  (NP performs/NNS)
  following/VBG
  (NP basic/JJ operations/NNS)
  :/:
  (NP Shift/NN)
  :/:
  (NP Moving/NNP)
  symbols/VBZ
  (NP input/NN)
  buffer/VB
  onto/IN
  (NP stack/NN)
  ,/,
  (NP action/NN)
  called/VBN
  (NP shift/NN)
  ./.) 


>> Noun Phrases are: 
 ['E\uf0e0E+E E\uf0e0E * E E\uf0e0id String', 'id1+id2', 'id3 Right', 'sentential form Handle Production id1+id2 * id3 id1 E\uf0e0id E+id2 * id3 id2 E\uf0e0id E+E * id3 id3 E\uf0e0id E+E * E E * E E\uf0e0E * E E+E E+E E\uf0e0E+E E Rightmost Derivation E E+E E+E * E E+E * id3 E+id2 * id3 id1+id2 * id3 Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Shift', 'The shift', 'performs', 'basic operations', 'Shift', 'Moving', 'input', 'stack', 'action', 'shift']

>> Named Entities are: 
 [('PERSON', 'Handle'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('E\uf0e0E+E', 'e\uf0e0e+'), ('E\uf0e0E', 'e\uf0e0e'), ('*', '*'), ('E', 'e'), ('E\uf0e0id', 'e\uf0e0id'), ('String', 'string'), (':', ':'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('Right', 'right'), ('sentential', 'sententi'), ('form', 'form'), ('Handle', 'handl'), ('Production', 'product'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('id1', 'id1'), ('E\uf0e0id', 'e\uf0e0id'), ('E+id2', 'e+id2'), ('*', '*'), ('id3', 'id3'), ('id2', 'id2'), ('E\uf0e0id', 'e\uf0e0id'), ('E+E', 'e+e'), ('*', '*'), ('id3', 'id3'), ('id3', 'id3'), ('E\uf0e0id', 'e\uf0e0id'), ('E+E', 'e+e'), ('*', '*'), ('E', 'e'), ('E', 'e'), ('*', '*'), ('E', 'e'), ('E\uf0e0E', 'e\uf0e0e'), ('*', '*'), ('E', 'e'), ('E+E', 'e+e'), ('E+E', 'e+e'), ('E\uf0e0E+E', 'e\uf0e0e+'), ('E', 'e'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('E', 'e'), ('E+E', 'e+e'), ('E+E', 'e+e'), ('*', '*'), ('E', 'e'), ('E+E', 'e+e'), ('*', '*'), ('id3', 'id3'), ('E+id2', 'e+id2'), ('*', '*'), ('id3', 'id3'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Shift', 'shift'), ('reduce', 'reduc'), ('parser', 'parser'), ('The', 'the'), ('shift', 'shift'), ('reduce', 'reduc'), ('parser', 'parser'), ('performs', 'perform'), ('following', 'follow'), ('basic', 'basic'), ('operations', 'oper'), (':', ':'), ('Shift', 'shift'), (':', ':'), ('Moving', 'move'), ('symbols', 'symbol'), ('input', 'input'), ('buffer', 'buffer'), ('onto', 'onto'), ('stack', 'stack'), (',', ','), ('action', 'action'), ('called', 'call'), ('shift', 'shift'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E\uf0e0E+E', 'e\uf0e0e+'), ('E\uf0e0E', 'e\uf0e0e'), ('*', '*'), ('E', 'e'), ('E\uf0e0id', 'e\uf0e0id'), ('String', 'string'), (':', ':'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('Right', 'right'), ('sentential', 'sententi'), ('form', 'form'), ('Handle', 'handl'), ('Production', 'product'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('id1', 'id1'), ('E\uf0e0id', 'e\uf0e0id'), ('E+id2', 'e+id2'), ('*', '*'), ('id3', 'id3'), ('id2', 'id2'), ('E\uf0e0id', 'e\uf0e0id'), ('E+E', 'e+e'), ('*', '*'), ('id3', 'id3'), ('id3', 'id3'), ('E\uf0e0id', 'e\uf0e0id'), ('E+E', 'e+e'), ('*', '*'), ('E', 'e'), ('E', 'e'), ('*', '*'), ('E', 'e'), ('E\uf0e0E', 'e\uf0e0e'), ('*', '*'), ('E', 'e'), ('E+E', 'e+e'), ('E+E', 'e+e'), ('E\uf0e0E+E', 'e\uf0e0e+'), ('E', 'e'), ('Rightmost', 'rightmost'), ('Derivation', 'deriv'), ('E', 'e'), ('E+E', 'e+e'), ('E+E', 'e+e'), ('*', '*'), ('E', 'e'), ('E+E', 'e+e'), ('*', '*'), ('id3', 'id3'), ('E+id2', 'e+id2'), ('*', '*'), ('id3', 'id3'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Shift', 'shift'), ('reduce', 'reduc'), ('parser', 'parser'), ('The', 'the'), ('shift', 'shift'), ('reduce', 'reduc'), ('parser', 'parser'), ('performs', 'perform'), ('following', 'follow'), ('basic', 'basic'), ('operations', 'oper'), (':', ':'), ('Shift', 'shift'), (':', ':'), ('Moving', 'move'), ('symbols', 'symbol'), ('input', 'input'), ('buffer', 'buffer'), ('onto', 'onto'), ('stack', 'stack'), (',', ','), ('action', 'action'), ('called', 'call'), ('shift', 'shift'), ('.', '.')]

>> Lemmatization: 
 [('E\uf0e0E+E', 'E\uf0e0E+E'), ('E\uf0e0E', 'E\uf0e0E'), ('*', '*'), ('E', 'E'), ('E\uf0e0id', 'E\uf0e0id'), ('String', 'String'), (':', ':'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('Right', 'Right'), ('sentential', 'sentential'), ('form', 'form'), ('Handle', 'Handle'), ('Production', 'Production'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('id1', 'id1'), ('E\uf0e0id', 'E\uf0e0id'), ('E+id2', 'E+id2'), ('*', '*'), ('id3', 'id3'), ('id2', 'id2'), ('E\uf0e0id', 'E\uf0e0id'), ('E+E', 'E+E'), ('*', '*'), ('id3', 'id3'), ('id3', 'id3'), ('E\uf0e0id', 'E\uf0e0id'), ('E+E', 'E+E'), ('*', '*'), ('E', 'E'), ('E', 'E'), ('*', '*'), ('E', 'E'), ('E\uf0e0E', 'E\uf0e0E'), ('*', '*'), ('E', 'E'), ('E+E', 'E+E'), ('E+E', 'E+E'), ('E\uf0e0E+E', 'E\uf0e0E+E'), ('E', 'E'), ('Rightmost', 'Rightmost'), ('Derivation', 'Derivation'), ('E', 'E'), ('E+E', 'E+E'), ('E+E', 'E+E'), ('*', '*'), ('E', 'E'), ('E+E', 'E+E'), ('*', '*'), ('id3', 'id3'), ('E+id2', 'E+id2'), ('*', '*'), ('id3', 'id3'), ('id1+id2', 'id1+id2'), ('*', '*'), ('id3', 'id3'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Shift', 'Shift'), ('reduce', 'reduce'), ('parser', 'parser'), ('The', 'The'), ('shift', 'shift'), ('reduce', 'reduce'), ('parser', 'parser'), ('performs', 'performs'), ('following', 'following'), ('basic', 'basic'), ('operations', 'operation'), (':', ':'), ('Shift', 'Shift'), (':', ':'), ('Moving', 'Moving'), ('symbols', 'symbol'), ('input', 'input'), ('buffer', 'buffer'), ('onto', 'onto'), ('stack', 'stack'), (',', ','), ('action', 'action'), ('called', 'called'), ('shift', 'shift'), ('.', '.')]



============================ Sentence 55 =============================

Reduce: If handle appears on the top of the stack then reduction of it by appropriate rule is done. 


>> Tokens are: 
 ['Reduce', ':', 'If', 'handle', 'appears', 'top', 'stack', 'reduction', 'appropriate', 'rule', 'done', '.']

>> Bigrams are: 
 [('Reduce', ':'), (':', 'If'), ('If', 'handle'), ('handle', 'appears'), ('appears', 'top'), ('top', 'stack'), ('stack', 'reduction'), ('reduction', 'appropriate'), ('appropriate', 'rule'), ('rule', 'done'), ('done', '.')]

>> Trigrams are: 
 [('Reduce', ':', 'If'), (':', 'If', 'handle'), ('If', 'handle', 'appears'), ('handle', 'appears', 'top'), ('appears', 'top', 'stack'), ('top', 'stack', 'reduction'), ('stack', 'reduction', 'appropriate'), ('reduction', 'appropriate', 'rule'), ('appropriate', 'rule', 'done'), ('rule', 'done', '.')]

>> POS Tags are: 
 [('Reduce', 'NN'), (':', ':'), ('If', 'IN'), ('handle', 'JJ'), ('appears', 'VBZ'), ('top', 'JJ'), ('stack', 'NN'), ('reduction', 'NN'), ('appropriate', 'JJ'), ('rule', 'NN'), ('done', 'VBN'), ('.', '.')]

 (S
  (NP Reduce/NN)
  :/:
  If/IN
  handle/JJ
  appears/VBZ
  (NP top/JJ stack/NN reduction/NN)
  (NP appropriate/JJ rule/NN)
  done/VBN
  ./.) 


>> Noun Phrases are: 
 ['Reduce', 'top stack reduction', 'appropriate rule']

>> Named Entities are: 
 [('GPE', 'Reduce')] 

>> Stemming using Porter Stemmer: 
 [('Reduce', 'reduc'), (':', ':'), ('If', 'if'), ('handle', 'handl'), ('appears', 'appear'), ('top', 'top'), ('stack', 'stack'), ('reduction', 'reduct'), ('appropriate', 'appropri'), ('rule', 'rule'), ('done', 'done'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Reduce', 'reduc'), (':', ':'), ('If', 'if'), ('handle', 'handl'), ('appears', 'appear'), ('top', 'top'), ('stack', 'stack'), ('reduction', 'reduct'), ('appropriate', 'appropri'), ('rule', 'rule'), ('done', 'done'), ('.', '.')]

>> Lemmatization: 
 [('Reduce', 'Reduce'), (':', ':'), ('If', 'If'), ('handle', 'handle'), ('appears', 'appears'), ('top', 'top'), ('stack', 'stack'), ('reduction', 'reduction'), ('appropriate', 'appropriate'), ('rule', 'rule'), ('done', 'done'), ('.', '.')]



============================ Sentence 56 =============================

This action is called reduce action. 


>> Tokens are: 
 ['This', 'action', 'called', 'reduce', 'action', '.']

>> Bigrams are: 
 [('This', 'action'), ('action', 'called'), ('called', 'reduce'), ('reduce', 'action'), ('action', '.')]

>> Trigrams are: 
 [('This', 'action', 'called'), ('action', 'called', 'reduce'), ('called', 'reduce', 'action'), ('reduce', 'action', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('action', 'NN'), ('called', 'VBN'), ('reduce', 'VB'), ('action', 'NN'), ('.', '.')]

 (S (NP This/DT action/NN) called/VBN reduce/VB (NP action/NN) ./.) 


>> Noun Phrases are: 
 ['This action', 'action']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('action', 'action'), ('called', 'call'), ('reduce', 'reduc'), ('action', 'action'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('action', 'action'), ('called', 'call'), ('reduce', 'reduc'), ('action', 'action'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('action', 'action'), ('called', 'called'), ('reduce', 'reduce'), ('action', 'action'), ('.', '.')]



============================ Sentence 57 =============================

Accept: If stack contains start symbol only and input buffer is empty at the same time then that action is called accept. 


>> Tokens are: 
 ['Accept', ':', 'If', 'stack', 'contains', 'start', 'symbol', 'input', 'buffer', 'empty', 'time', 'action', 'called', 'accept', '.']

>> Bigrams are: 
 [('Accept', ':'), (':', 'If'), ('If', 'stack'), ('stack', 'contains'), ('contains', 'start'), ('start', 'symbol'), ('symbol', 'input'), ('input', 'buffer'), ('buffer', 'empty'), ('empty', 'time'), ('time', 'action'), ('action', 'called'), ('called', 'accept'), ('accept', '.')]

>> Trigrams are: 
 [('Accept', ':', 'If'), (':', 'If', 'stack'), ('If', 'stack', 'contains'), ('stack', 'contains', 'start'), ('contains', 'start', 'symbol'), ('start', 'symbol', 'input'), ('symbol', 'input', 'buffer'), ('input', 'buffer', 'empty'), ('buffer', 'empty', 'time'), ('empty', 'time', 'action'), ('time', 'action', 'called'), ('action', 'called', 'accept'), ('called', 'accept', '.')]

>> POS Tags are: 
 [('Accept', 'NN'), (':', ':'), ('If', 'IN'), ('stack', 'NN'), ('contains', 'VBZ'), ('start', 'JJ'), ('symbol', 'NN'), ('input', 'NN'), ('buffer', 'VB'), ('empty', 'JJ'), ('time', 'NN'), ('action', 'NN'), ('called', 'VBN'), ('accept', 'NN'), ('.', '.')]

 (S
  (NP Accept/NN)
  :/:
  If/IN
  (NP stack/NN)
  contains/VBZ
  (NP start/JJ symbol/NN input/NN)
  buffer/VB
  (NP empty/JJ time/NN action/NN)
  called/VBN
  (NP accept/NN)
  ./.) 


>> Noun Phrases are: 
 ['Accept', 'stack', 'start symbol input', 'empty time action', 'accept']

>> Named Entities are: 
 [('GPE', 'Accept')] 

>> Stemming using Porter Stemmer: 
 [('Accept', 'accept'), (':', ':'), ('If', 'if'), ('stack', 'stack'), ('contains', 'contain'), ('start', 'start'), ('symbol', 'symbol'), ('input', 'input'), ('buffer', 'buffer'), ('empty', 'empti'), ('time', 'time'), ('action', 'action'), ('called', 'call'), ('accept', 'accept'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Accept', 'accept'), (':', ':'), ('If', 'if'), ('stack', 'stack'), ('contains', 'contain'), ('start', 'start'), ('symbol', 'symbol'), ('input', 'input'), ('buffer', 'buffer'), ('empty', 'empti'), ('time', 'time'), ('action', 'action'), ('called', 'call'), ('accept', 'accept'), ('.', '.')]

>> Lemmatization: 
 [('Accept', 'Accept'), (':', ':'), ('If', 'If'), ('stack', 'stack'), ('contains', 'contains'), ('start', 'start'), ('symbol', 'symbol'), ('input', 'input'), ('buffer', 'buffer'), ('empty', 'empty'), ('time', 'time'), ('action', 'action'), ('called', 'called'), ('accept', 'accept'), ('.', '.')]



============================ Sentence 58 =============================

Error: A situation in which parser cannot either shift or reduce the symbols, it cannot even perform accept action then it is called error action. 


>> Tokens are: 
 ['Error', ':', 'A', 'situation', 'parser', 'either', 'shift', 'reduce', 'symbols', ',', 'even', 'perform', 'accept', 'action', 'called', 'error', 'action', '.']

>> Bigrams are: 
 [('Error', ':'), (':', 'A'), ('A', 'situation'), ('situation', 'parser'), ('parser', 'either'), ('either', 'shift'), ('shift', 'reduce'), ('reduce', 'symbols'), ('symbols', ','), (',', 'even'), ('even', 'perform'), ('perform', 'accept'), ('accept', 'action'), ('action', 'called'), ('called', 'error'), ('error', 'action'), ('action', '.')]

>> Trigrams are: 
 [('Error', ':', 'A'), (':', 'A', 'situation'), ('A', 'situation', 'parser'), ('situation', 'parser', 'either'), ('parser', 'either', 'shift'), ('either', 'shift', 'reduce'), ('shift', 'reduce', 'symbols'), ('reduce', 'symbols', ','), ('symbols', ',', 'even'), (',', 'even', 'perform'), ('even', 'perform', 'accept'), ('perform', 'accept', 'action'), ('accept', 'action', 'called'), ('action', 'called', 'error'), ('called', 'error', 'action'), ('error', 'action', '.')]

>> POS Tags are: 
 [('Error', 'NN'), (':', ':'), ('A', 'DT'), ('situation', 'NN'), ('parser', 'NN'), ('either', 'CC'), ('shift', 'NN'), ('reduce', 'VB'), ('symbols', 'NNS'), (',', ','), ('even', 'RB'), ('perform', 'VB'), ('accept', 'JJ'), ('action', 'NN'), ('called', 'VBN'), ('error', 'NN'), ('action', 'NN'), ('.', '.')]

 (S
  (NP Error/NN)
  :/:
  (NP A/DT situation/NN parser/NN)
  either/CC
  (NP shift/NN)
  reduce/VB
  (NP symbols/NNS)
  ,/,
  even/RB
  perform/VB
  (NP accept/JJ action/NN)
  called/VBN
  (NP error/NN action/NN)
  ./.) 


>> Noun Phrases are: 
 ['Error', 'A situation parser', 'shift', 'symbols', 'accept action', 'error action']

>> Named Entities are: 
 [('GPE', 'Error')] 

>> Stemming using Porter Stemmer: 
 [('Error', 'error'), (':', ':'), ('A', 'a'), ('situation', 'situat'), ('parser', 'parser'), ('either', 'either'), ('shift', 'shift'), ('reduce', 'reduc'), ('symbols', 'symbol'), (',', ','), ('even', 'even'), ('perform', 'perform'), ('accept', 'accept'), ('action', 'action'), ('called', 'call'), ('error', 'error'), ('action', 'action'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Error', 'error'), (':', ':'), ('A', 'a'), ('situation', 'situat'), ('parser', 'parser'), ('either', 'either'), ('shift', 'shift'), ('reduce', 'reduc'), ('symbols', 'symbol'), (',', ','), ('even', 'even'), ('perform', 'perform'), ('accept', 'accept'), ('action', 'action'), ('called', 'call'), ('error', 'error'), ('action', 'action'), ('.', '.')]

>> Lemmatization: 
 [('Error', 'Error'), (':', ':'), ('A', 'A'), ('situation', 'situation'), ('parser', 'parser'), ('either', 'either'), ('shift', 'shift'), ('reduce', 'reduce'), ('symbols', 'symbol'), (',', ','), ('even', 'even'), ('perform', 'perform'), ('accept', 'accept'), ('action', 'action'), ('called', 'called'), ('error', 'error'), ('action', 'action'), ('.', '.')]



============================ Sentence 59 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Shift reduce parser 	Stack 	Input Buffer	Action  	$	id+id*id$	Shift    	$id	+id*id$	Reduce Fid  	$F	+id*id$	Reduce TF  	$T	+id*id$	Reduce ET  	$E	+id*id$	Shift   	$E+	id*id$	Shift   	$E+id	*id$	Reduce Fid  	$E+F	*id$	Reduce TF  	$E+T	*id$	Shift   	$E+T*	id$	Shift   	$E+T*id	$	Reduce Fid   	$E+T*F	$	Reduce TT*F   	$E+T	$	Reduce EE+T  	$E	$	Accept                                               Grammar: EE+T | T TT*F | F Fid String: id+id*id    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Viable Prefix The set of prefixes of right sentential forms that can appear on the stack of a shift-reduce parser are called viable prefixes. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Shift', 'reduce', 'parser', 'Stack', 'Input', 'Buffer', 'Action', '$', 'id+id', '*', 'id', '$', 'Shift', '$', 'id', '+id', '*', 'id', '$', 'Reduce', 'F\uf0e0id', '$', 'F', '+id', '*', 'id', '$', 'Reduce', 'T\uf0e0F', '$', 'T', '+id', '*', 'id', '$', 'Reduce', 'E\uf0e0T', '$', 'E', '+id', '*', 'id', '$', 'Shift', '$', 'E+', 'id', '*', 'id', '$', 'Shift', '$', 'E+id', '*', 'id', '$', 'Reduce', 'F\uf0e0id', '$', 'E+F', '*', 'id', '$', 'Reduce', 'T\uf0e0F', '$', 'E+T', '*', 'id', '$', 'Shift', '$', 'E+T', '*', 'id', '$', 'Shift', '$', 'E+T', '*', 'id', '$', 'Reduce', 'F\uf0e0id', '$', 'E+T', '*', 'F', '$', 'Reduce', 'T\uf0e0T', '*', 'F', '$', 'E+T', '$', 'Reduce', 'E\uf0e0E+T', '$', 'E', '$', 'Accept', 'Grammar', ':', 'E\uf0e0E+T', '|', 'T', 'T\uf0e0T', '*', 'F', '|', 'F', 'F\uf0e0id', 'String', ':', 'id+id', '*', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Viable', 'Prefix', 'The', 'set', 'prefixes', 'right', 'sentential', 'forms', 'appear', 'stack', 'shift-reduce', 'parser', 'called', 'viable', 'prefixes', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Shift'), ('Shift', 'reduce'), ('reduce', 'parser'), ('parser', 'Stack'), ('Stack', 'Input'), ('Input', 'Buffer'), ('Buffer', 'Action'), ('Action', '$'), ('$', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Shift'), ('Shift', '$'), ('$', 'id'), ('id', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Reduce'), ('Reduce', 'F\uf0e0id'), ('F\uf0e0id', '$'), ('$', 'F'), ('F', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Reduce'), ('Reduce', 'T\uf0e0F'), ('T\uf0e0F', '$'), ('$', 'T'), ('T', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Reduce'), ('Reduce', 'E\uf0e0T'), ('E\uf0e0T', '$'), ('$', 'E'), ('E', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Shift'), ('Shift', '$'), ('$', 'E+'), ('E+', 'id'), ('id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Shift'), ('Shift', '$'), ('$', 'E+id'), ('E+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'Reduce'), ('Reduce', 'F\uf0e0id'), ('F\uf0e0id', '$'), ('$', 'E+F'), ('E+F', '*'), ('*', 'id'), ('id', '$'), ('$', 'Reduce'), ('Reduce', 'T\uf0e0F'), ('T\uf0e0F', '$'), ('$', 'E+T'), ('E+T', '*'), ('*', 'id'), ('id', '$'), ('$', 'Shift'), ('Shift', '$'), ('$', 'E+T'), ('E+T', '*'), ('*', 'id'), ('id', '$'), ('$', 'Shift'), ('Shift', '$'), ('$', 'E+T'), ('E+T', '*'), ('*', 'id'), ('id', '$'), ('$', 'Reduce'), ('Reduce', 'F\uf0e0id'), ('F\uf0e0id', '$'), ('$', 'E+T'), ('E+T', '*'), ('*', 'F'), ('F', '$'), ('$', 'Reduce'), ('Reduce', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F'), ('F', '$'), ('$', 'E+T'), ('E+T', '$'), ('$', 'Reduce'), ('Reduce', 'E\uf0e0E+T'), ('E\uf0e0E+T', '$'), ('$', 'E'), ('E', '$'), ('$', 'Accept'), ('Accept', 'Grammar'), ('Grammar', ':'), (':', 'E\uf0e0E+T'), ('E\uf0e0E+T', '|'), ('|', 'T'), ('T', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'F\uf0e0id'), ('F\uf0e0id', 'String'), ('String', ':'), (':', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Viable'), ('Viable', 'Prefix'), ('Prefix', 'The'), ('The', 'set'), ('set', 'prefixes'), ('prefixes', 'right'), ('right', 'sentential'), ('sentential', 'forms'), ('forms', 'appear'), ('appear', 'stack'), ('stack', 'shift-reduce'), ('shift-reduce', 'parser'), ('parser', 'called'), ('called', 'viable'), ('viable', 'prefixes'), ('prefixes', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Shift'), (':', 'Shift', 'reduce'), ('Shift', 'reduce', 'parser'), ('reduce', 'parser', 'Stack'), ('parser', 'Stack', 'Input'), ('Stack', 'Input', 'Buffer'), ('Input', 'Buffer', 'Action'), ('Buffer', 'Action', '$'), ('Action', '$', 'id+id'), ('$', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Shift'), ('$', 'Shift', '$'), ('Shift', '$', 'id'), ('$', 'id', '+id'), ('id', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Reduce'), ('$', 'Reduce', 'F\uf0e0id'), ('Reduce', 'F\uf0e0id', '$'), ('F\uf0e0id', '$', 'F'), ('$', 'F', '+id'), ('F', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Reduce'), ('$', 'Reduce', 'T\uf0e0F'), ('Reduce', 'T\uf0e0F', '$'), ('T\uf0e0F', '$', 'T'), ('$', 'T', '+id'), ('T', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Reduce'), ('$', 'Reduce', 'E\uf0e0T'), ('Reduce', 'E\uf0e0T', '$'), ('E\uf0e0T', '$', 'E'), ('$', 'E', '+id'), ('E', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Shift'), ('$', 'Shift', '$'), ('Shift', '$', 'E+'), ('$', 'E+', 'id'), ('E+', 'id', '*'), ('id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Shift'), ('$', 'Shift', '$'), ('Shift', '$', 'E+id'), ('$', 'E+id', '*'), ('E+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Reduce'), ('$', 'Reduce', 'F\uf0e0id'), ('Reduce', 'F\uf0e0id', '$'), ('F\uf0e0id', '$', 'E+F'), ('$', 'E+F', '*'), ('E+F', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Reduce'), ('$', 'Reduce', 'T\uf0e0F'), ('Reduce', 'T\uf0e0F', '$'), ('T\uf0e0F', '$', 'E+T'), ('$', 'E+T', '*'), ('E+T', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Shift'), ('$', 'Shift', '$'), ('Shift', '$', 'E+T'), ('$', 'E+T', '*'), ('E+T', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Shift'), ('$', 'Shift', '$'), ('Shift', '$', 'E+T'), ('$', 'E+T', '*'), ('E+T', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'Reduce'), ('$', 'Reduce', 'F\uf0e0id'), ('Reduce', 'F\uf0e0id', '$'), ('F\uf0e0id', '$', 'E+T'), ('$', 'E+T', '*'), ('E+T', '*', 'F'), ('*', 'F', '$'), ('F', '$', 'Reduce'), ('$', 'Reduce', 'T\uf0e0T'), ('Reduce', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F'), ('*', 'F', '$'), ('F', '$', 'E+T'), ('$', 'E+T', '$'), ('E+T', '$', 'Reduce'), ('$', 'Reduce', 'E\uf0e0E+T'), ('Reduce', 'E\uf0e0E+T', '$'), ('E\uf0e0E+T', '$', 'E'), ('$', 'E', '$'), ('E', '$', 'Accept'), ('$', 'Accept', 'Grammar'), ('Accept', 'Grammar', ':'), ('Grammar', ':', 'E\uf0e0E+T'), (':', 'E\uf0e0E+T', '|'), ('E\uf0e0E+T', '|', 'T'), ('|', 'T', 'T\uf0e0T'), ('T', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'F\uf0e0id'), ('F', 'F\uf0e0id', 'String'), ('F\uf0e0id', 'String', ':'), ('String', ':', 'id+id'), (':', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Viable'), ('›', 'Viable', 'Prefix'), ('Viable', 'Prefix', 'The'), ('Prefix', 'The', 'set'), ('The', 'set', 'prefixes'), ('set', 'prefixes', 'right'), ('prefixes', 'right', 'sentential'), ('right', 'sentential', 'forms'), ('sentential', 'forms', 'appear'), ('forms', 'appear', 'stack'), ('appear', 'stack', 'shift-reduce'), ('stack', 'shift-reduce', 'parser'), ('shift-reduce', 'parser', 'called'), ('parser', 'called', 'viable'), ('called', 'viable', 'prefixes'), ('viable', 'prefixes', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Shift', 'NN'), ('reduce', 'VB'), ('parser', 'JJR'), ('Stack', 'NNP'), ('Input', 'NNP'), ('Buffer', 'NNP'), ('Action', 'NNP'), ('$', '$'), ('id+id', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('Shift', 'NNP'), ('$', '$'), ('id', 'JJ'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VB'), ('$', '$'), ('Reduce', 'NNP'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NNP'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VB'), ('$', '$'), ('Reduce', 'NNP'), ('T\uf0e0F', 'NNP'), ('$', '$'), ('T', 'NNP'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VB'), ('$', '$'), ('Reduce', 'NNP'), ('E\uf0e0T', 'NNP'), ('$', '$'), ('E', 'NNP'), ('+id', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('Shift', 'NNP'), ('$', '$'), ('E+', 'NNP'), ('id', 'NN'), ('*', 'NNP'), ('id', 'VBZ'), ('$', '$'), ('Shift', 'NNP'), ('$', '$'), ('E+id', 'NNP'), ('*', 'NNP'), ('id', 'VB'), ('$', '$'), ('Reduce', 'NNP'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('E+F', 'NNP'), ('*', 'NNP'), ('id', 'VB'), ('$', '$'), ('Reduce', 'NNP'), ('T\uf0e0F', 'NNP'), ('$', '$'), ('E+T', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('Shift', 'NNP'), ('$', '$'), ('E+T', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('Shift', 'NNP'), ('$', '$'), ('E+T', 'NNP'), ('*', 'NNP'), ('id', 'VB'), ('$', '$'), ('Reduce', 'NNP'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('E+T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('$', '$'), ('Reduce', 'NNP'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('$', '$'), ('E+T', 'NNP'), ('$', '$'), ('Reduce', 'NNP'), ('E\uf0e0E+T', 'NNP'), ('$', '$'), ('E', 'NNP'), ('$', '$'), ('Accept', 'NNP'), ('Grammar', 'NNP'), (':', ':'), ('E\uf0e0E+T', 'NNP'), ('|', 'NNP'), ('T', 'NNP'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('String', 'NNP'), (':', ':'), ('id+id', 'NN'), ('*', 'NNP'), ('id', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Viable', 'NNP'), ('Prefix', 'NNP'), ('The', 'DT'), ('set', 'NN'), ('prefixes', 'NNS'), ('right', 'JJ'), ('sentential', 'JJ'), ('forms', 'NNS'), ('appear', 'VBP'), ('stack', 'JJ'), ('shift-reduce', 'JJ'), ('parser', 'NN'), ('called', 'VBN'), ('viable', 'JJ'), ('prefixes', 'NNS'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Shift/NN)
  reduce/VB
  parser/JJR
  (NP Stack/NNP Input/NNP Buffer/NNP Action/NNP)
  $/$
  (NP id+id/JJ */NNP)
  id/POS
  $/$
  (NP Shift/NNP)
  $/$
  (NP id/JJ +id/NNP */NNP)
  id/VB
  $/$
  (NP Reduce/NNP Fid/NNP)
  $/$
  (NP F/NNP +id/NNP */NNP)
  id/VB
  $/$
  (NP Reduce/NNP TF/NNP)
  $/$
  (NP T/NNP +id/NNP */NNP)
  id/VB
  $/$
  (NP Reduce/NNP ET/NNP)
  $/$
  (NP E/NNP +id/NNP */NNP)
  id/VBP
  $/$
  (NP Shift/NNP)
  $/$
  (NP E+/NNP id/NN */NNP)
  id/VBZ
  $/$
  (NP Shift/NNP)
  $/$
  (NP E+id/NNP */NNP)
  id/VB
  $/$
  (NP Reduce/NNP Fid/NNP)
  $/$
  (NP E+F/NNP */NNP)
  id/VB
  $/$
  (NP Reduce/NNP TF/NNP)
  $/$
  (NP E+T/NNP */NNP)
  id/VBP
  $/$
  (NP Shift/NNP)
  $/$
  (NP E+T/NNP */NNP)
  id/VBP
  $/$
  (NP Shift/NNP)
  $/$
  (NP E+T/NNP */NNP)
  id/VB
  $/$
  (NP Reduce/NNP Fid/NNP)
  $/$
  (NP E+T/NNP */NNP F/NNP)
  $/$
  (NP Reduce/NNP TT/NNP */NNP F/NNP)
  $/$
  (NP E+T/NNP)
  $/$
  (NP Reduce/NNP EE+T/NNP)
  $/$
  (NP E/NNP)
  $/$
  (NP Accept/NNP Grammar/NNP)
  :/:
  (NP
    EE+T/NNP
    |/NNP
    T/NNP
    TT/NNP
    */NNP
    F/NNP
    |/NNP
    F/NNP
    Fid/NNP
    String/NNP)
  :/:
  (NP id+id/NN */NNP id/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Viable/NNP Prefix/NNP)
  (NP The/DT set/NN prefixes/NNS)
  (NP right/JJ sentential/JJ forms/NNS)
  appear/VBP
  (NP stack/JJ shift-reduce/JJ parser/NN)
  called/VBN
  (NP viable/JJ prefixes/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Shift', 'Stack Input Buffer Action', 'id+id *', 'Shift', 'id +id *', 'Reduce F\uf0e0id', 'F +id *', 'Reduce T\uf0e0F', 'T +id *', 'Reduce E\uf0e0T', 'E +id *', 'Shift', 'E+ id *', 'Shift', 'E+id *', 'Reduce F\uf0e0id', 'E+F *', 'Reduce T\uf0e0F', 'E+T *', 'Shift', 'E+T *', 'Shift', 'E+T *', 'Reduce F\uf0e0id', 'E+T * F', 'Reduce T\uf0e0T * F', 'E+T', 'Reduce E\uf0e0E+T', 'E', 'Accept Grammar', 'E\uf0e0E+T | T T\uf0e0T * F | F F\uf0e0id String', 'id+id * id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Viable Prefix', 'The set prefixes', 'right sentential forms', 'stack shift-reduce parser', 'viable prefixes']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Stack Input Buffer'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Reduce'), ('PERSON', 'Accept Grammar'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Shift', 'shift'), ('reduce', 'reduc'), ('parser', 'parser'), ('Stack', 'stack'), ('Input', 'input'), ('Buffer', 'buffer'), ('Action', 'action'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('id', 'id'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('T\uf0e0F', 't\uf0e0f'), ('$', '$'), ('T', 't'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('E\uf0e0T', 'e\uf0e0t'), ('$', '$'), ('E', 'e'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+', 'e+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+id', 'e+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('E+F', 'e+f'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('T\uf0e0F', 't\uf0e0f'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('F', 'f'), ('$', '$'), ('Reduce', 'reduc'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('$', '$'), ('E+T', 'e+t'), ('$', '$'), ('Reduce', 'reduc'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('$', '$'), ('E', 'e'), ('$', '$'), ('Accept', 'accept'), ('Grammar', 'grammar'), (':', ':'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('String', 'string'), (':', ':'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Viable', 'viabl'), ('Prefix', 'prefix'), ('The', 'the'), ('set', 'set'), ('prefixes', 'prefix'), ('right', 'right'), ('sentential', 'sententi'), ('forms', 'form'), ('appear', 'appear'), ('stack', 'stack'), ('shift-reduce', 'shift-reduc'), ('parser', 'parser'), ('called', 'call'), ('viable', 'viabl'), ('prefixes', 'prefix'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Shift', 'shift'), ('reduce', 'reduc'), ('parser', 'parser'), ('Stack', 'stack'), ('Input', 'input'), ('Buffer', 'buffer'), ('Action', 'action'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('id', 'id'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('T\uf0e0F', 't\uf0e0f'), ('$', '$'), ('T', 't'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('E\uf0e0T', 'e\uf0e0t'), ('$', '$'), ('E', 'e'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+', 'e+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+id', 'e+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('E+F', 'e+f'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('T\uf0e0F', 't\uf0e0f'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('E+T', 'e+t'), ('*', '*'), ('F', 'f'), ('$', '$'), ('Reduce', 'reduc'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('$', '$'), ('E+T', 'e+t'), ('$', '$'), ('Reduce', 'reduc'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('$', '$'), ('E', 'e'), ('$', '$'), ('Accept', 'accept'), ('Grammar', 'grammar'), (':', ':'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('String', 'string'), (':', ':'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Viable', 'viabl'), ('Prefix', 'prefix'), ('The', 'the'), ('set', 'set'), ('prefixes', 'prefix'), ('right', 'right'), ('sentential', 'sententi'), ('forms', 'form'), ('appear', 'appear'), ('stack', 'stack'), ('shift-reduce', 'shift-reduc'), ('parser', 'parser'), ('called', 'call'), ('viable', 'viabl'), ('prefixes', 'prefix'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Shift', 'Shift'), ('reduce', 'reduce'), ('parser', 'parser'), ('Stack', 'Stack'), ('Input', 'Input'), ('Buffer', 'Buffer'), ('Action', 'Action'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'Shift'), ('$', '$'), ('id', 'id'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'Reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'F'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'Reduce'), ('T\uf0e0F', 'T\uf0e0F'), ('$', '$'), ('T', 'T'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'Reduce'), ('E\uf0e0T', 'E\uf0e0T'), ('$', '$'), ('E', 'E'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'Shift'), ('$', '$'), ('E+', 'E+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'Shift'), ('$', '$'), ('E+id', 'E+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'Reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('E+F', 'E+F'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'Reduce'), ('T\uf0e0F', 'T\uf0e0F'), ('$', '$'), ('E+T', 'E+T'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'Shift'), ('$', '$'), ('E+T', 'E+T'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'Shift'), ('$', '$'), ('E+T', 'E+T'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Reduce', 'Reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('E+T', 'E+T'), ('*', '*'), ('F', 'F'), ('$', '$'), ('Reduce', 'Reduce'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F', 'F'), ('$', '$'), ('E+T', 'E+T'), ('$', '$'), ('Reduce', 'Reduce'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('$', '$'), ('E', 'E'), ('$', '$'), ('Accept', 'Accept'), ('Grammar', 'Grammar'), (':', ':'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('String', 'String'), (':', ':'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Viable', 'Viable'), ('Prefix', 'Prefix'), ('The', 'The'), ('set', 'set'), ('prefixes', 'prefix'), ('right', 'right'), ('sentential', 'sentential'), ('forms', 'form'), ('appear', 'appear'), ('stack', 'stack'), ('shift-reduce', 'shift-reduce'), ('parser', 'parser'), ('called', 'called'), ('viable', 'viable'), ('prefixes', 'prefix'), ('.', '.')]



============================ Sentence 60 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence parsing Operator Grammar: A Grammar in which there is no Є in RHS of any production or no adjacent non terminals is called operator  grammar. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'parsing', 'Operator', 'Grammar', ':', 'A', 'Grammar', 'Є', 'RHS', 'production', 'adjacent', 'non', 'terminals', 'called', 'operator', 'grammar', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'Parsing'), ('Parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', 'Operator'), ('Operator', 'Grammar'), ('Grammar', ':'), (':', 'A'), ('A', 'Grammar'), ('Grammar', 'Є'), ('Є', 'RHS'), ('RHS', 'production'), ('production', 'adjacent'), ('adjacent', 'non'), ('non', 'terminals'), ('terminals', 'called'), ('called', 'operator'), ('operator', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'Parsing'), ('predictive', 'Parsing', ')'), ('Parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', 'Operator'), ('parsing', 'Operator', 'Grammar'), ('Operator', 'Grammar', ':'), ('Grammar', ':', 'A'), (':', 'A', 'Grammar'), ('A', 'Grammar', 'Є'), ('Grammar', 'Є', 'RHS'), ('Є', 'RHS', 'production'), ('RHS', 'production', 'adjacent'), ('production', 'adjacent', 'non'), ('adjacent', 'non', 'terminals'), ('non', 'terminals', 'called'), ('terminals', 'called', 'operator'), ('called', 'operator', 'grammar'), ('operator', 'grammar', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('Parsing', 'NNP'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('parsing', 'NN'), ('Operator', 'NNP'), ('Grammar', 'NNP'), (':', ':'), ('A', 'DT'), ('Grammar', 'NNP'), ('Є', 'NN'), ('RHS', 'NNP'), ('production', 'NN'), ('adjacent', 'JJ'), ('non', 'NN'), ('terminals', 'NNS'), ('called', 'VBD'), ('operator', 'NN'), ('grammar', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ Parsing/NNP)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP
    ›/NNP
    Operator/NNP
    precedence/NN
    parsing/NN
    Operator/NNP
    Grammar/NNP)
  :/:
  (NP A/DT Grammar/NNP Є/NN RHS/NNP production/NN)
  (NP adjacent/JJ non/NN terminals/NNS)
  called/VBD
  (NP operator/NN grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive Parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence parsing Operator Grammar', 'A Grammar Є RHS production', 'adjacent non terminals', 'operator grammar']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Operator Grammar'), ('ORGANIZATION', 'RHS')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Operator', 'oper'), ('Grammar', 'grammar'), (':', ':'), ('A', 'a'), ('Grammar', 'grammar'), ('Є', 'є'), ('RHS', 'rh'), ('production', 'product'), ('adjacent', 'adjac'), ('non', 'non'), ('terminals', 'termin'), ('called', 'call'), ('operator', 'oper'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Operator', 'oper'), ('Grammar', 'grammar'), (':', ':'), ('A', 'a'), ('Grammar', 'grammar'), ('Є', 'є'), ('RHS', 'rhs'), ('production', 'product'), ('adjacent', 'adjac'), ('non', 'non'), ('terminals', 'termin'), ('called', 'call'), ('operator', 'oper'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'Parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('Grammar', 'Grammar'), (':', ':'), ('A', 'A'), ('Grammar', 'Grammar'), ('Є', 'Є'), ('RHS', 'RHS'), ('production', 'production'), ('adjacent', 'adjacent'), ('non', 'non'), ('terminals', 'terminal'), ('called', 'called'), ('operator', 'operator'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 61 =============================

Example: 	E EAE | (E) | id 		A + | * | - Above grammar is not operator grammar because right side EAE has consecutive non terminals. 


>> Tokens are: 
 ['Example', ':', 'E\uf0e0', 'EAE', '|', '(', 'E', ')', '|', 'id', 'A\uf0e0', '+', '|', '*', '|', '-', 'Above', 'grammar', 'operator', 'grammar', 'right', 'side', 'EAE', 'consecutive', 'non', 'terminals', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'E\uf0e0'), ('E\uf0e0', 'EAE'), ('EAE', '|'), ('|', '('), ('(', 'E'), ('E', ')'), (')', '|'), ('|', 'id'), ('id', 'A\uf0e0'), ('A\uf0e0', '+'), ('+', '|'), ('|', '*'), ('*', '|'), ('|', '-'), ('-', 'Above'), ('Above', 'grammar'), ('grammar', 'operator'), ('operator', 'grammar'), ('grammar', 'right'), ('right', 'side'), ('side', 'EAE'), ('EAE', 'consecutive'), ('consecutive', 'non'), ('non', 'terminals'), ('terminals', '.')]

>> Trigrams are: 
 [('Example', ':', 'E\uf0e0'), (':', 'E\uf0e0', 'EAE'), ('E\uf0e0', 'EAE', '|'), ('EAE', '|', '('), ('|', '(', 'E'), ('(', 'E', ')'), ('E', ')', '|'), (')', '|', 'id'), ('|', 'id', 'A\uf0e0'), ('id', 'A\uf0e0', '+'), ('A\uf0e0', '+', '|'), ('+', '|', '*'), ('|', '*', '|'), ('*', '|', '-'), ('|', '-', 'Above'), ('-', 'Above', 'grammar'), ('Above', 'grammar', 'operator'), ('grammar', 'operator', 'grammar'), ('operator', 'grammar', 'right'), ('grammar', 'right', 'side'), ('right', 'side', 'EAE'), ('side', 'EAE', 'consecutive'), ('EAE', 'consecutive', 'non'), ('consecutive', 'non', 'terminals'), ('non', 'terminals', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('E\uf0e0', 'NNP'), ('EAE', 'NNP'), ('|', 'NNP'), ('(', '('), ('E', 'NNP'), (')', ')'), ('|', 'VBP'), ('id', 'JJ'), ('A\uf0e0', 'NNP'), ('+', 'NNP'), ('|', 'NNP'), ('*', 'NNP'), ('|', 'NNP'), ('-', ':'), ('Above', 'NNP'), ('grammar', 'NN'), ('operator', 'NN'), ('grammar', 'NN'), ('right', 'JJ'), ('side', 'NN'), ('EAE', 'NNP'), ('consecutive', 'JJ'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP E/NNP EAE/NNP |/NNP)
  (/(
  (NP E/NNP)
  )/)
  |/VBP
  (NP id/JJ A/NNP +/NNP |/NNP */NNP |/NNP)
  -/:
  (NP Above/NNP grammar/NN operator/NN grammar/NN)
  (NP right/JJ side/NN EAE/NNP)
  (NP consecutive/JJ non/NN terminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'E\uf0e0 EAE |', 'E', 'id A\uf0e0 + | * |', 'Above grammar operator grammar', 'right side EAE', 'consecutive non terminals']

>> Named Entities are: 
 [('GPE', 'Example'), ('GPE', 'Above'), ('ORGANIZATION', 'EAE')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('E\uf0e0', 'e\uf0e0'), ('EAE', 'eae'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('A\uf0e0', 'a\uf0e0'), ('+', '+'), ('|', '|'), ('*', '*'), ('|', '|'), ('-', '-'), ('Above', 'abov'), ('grammar', 'grammar'), ('operator', 'oper'), ('grammar', 'grammar'), ('right', 'right'), ('side', 'side'), ('EAE', 'eae'), ('consecutive', 'consecut'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('E\uf0e0', 'e\uf0e0'), ('EAE', 'eae'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('A\uf0e0', 'a\uf0e0'), ('+', '+'), ('|', '|'), ('*', '*'), ('|', '|'), ('-', '-'), ('Above', 'abov'), ('grammar', 'grammar'), ('operator', 'oper'), ('grammar', 'grammar'), ('right', 'right'), ('side', 'side'), ('EAE', 'eae'), ('consecutive', 'consecut'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('E\uf0e0', 'E\uf0e0'), ('EAE', 'EAE'), ('|', '|'), ('(', '('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('A\uf0e0', 'A\uf0e0'), ('+', '+'), ('|', '|'), ('*', '*'), ('|', '|'), ('-', '-'), ('Above', 'Above'), ('grammar', 'grammar'), ('operator', 'operator'), ('grammar', 'grammar'), ('right', 'right'), ('side', 'side'), ('EAE', 'EAE'), ('consecutive', 'consecutive'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')]



============================ Sentence 62 =============================

In operator precedence parsing we define following disjoint relations:  	Relation 	Meaning  	a<.b	a “yields precedence to” b  	a=b	a “has the same precedence as” b  	a.>b	a “takes precedence over” b     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Precedence & associativity of operators 	Operator	Precedence	Associative 	↑	1	right  	*, /	2	left 	+, -	3	left     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Steps of operator precedence parsing Find Leading and trailing of non terminal Establish relation Creation of table Parse the string     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Leading & Trailing Leading:- Leading of a non terminal is the first terminal or operator in production of that non terminal. 


>> Tokens are: 
 ['In', 'operator', 'precedence', 'parsing', 'define', 'following', 'disjoint', 'relations', ':', 'Relation', 'Meaning', '<', '.b', '“', 'yields', 'precedence', '”', 'b', 'a=b', '“', 'precedence', '”', 'b', 'a.', '>', 'b', '“', 'takes', 'precedence', '”', 'b', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Precedence', '&', 'associativity', 'operators', 'Operator', 'Precedence', 'Associative', '↑', '1', 'right', '*', ',', '/', '2', 'left', '+', ',', '-', '3', 'left', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Steps', 'operator', 'precedence', 'parsing', 'Find', 'Leading', 'trailing', 'non', 'terminal', 'Establish', 'relation', 'Creation', 'table', 'Parse', 'string', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Leading', '&', 'Trailing', 'Leading', ':', '-', 'Leading', 'non', 'terminal', 'first', 'terminal', 'operator', 'production', 'non', 'terminal', '.']

>> Bigrams are: 
 [('In', 'operator'), ('operator', 'precedence'), ('precedence', 'parsing'), ('parsing', 'define'), ('define', 'following'), ('following', 'disjoint'), ('disjoint', 'relations'), ('relations', ':'), (':', 'Relation'), ('Relation', 'Meaning'), ('Meaning', '<'), ('<', '.b'), ('.b', '“'), ('“', 'yields'), ('yields', 'precedence'), ('precedence', '”'), ('”', 'b'), ('b', 'a=b'), ('a=b', '“'), ('“', 'precedence'), ('precedence', '”'), ('”', 'b'), ('b', 'a.'), ('a.', '>'), ('>', 'b'), ('b', '“'), ('“', 'takes'), ('takes', 'precedence'), ('precedence', '”'), ('”', 'b'), ('b', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Precedence'), ('Precedence', '&'), ('&', 'associativity'), ('associativity', 'operators'), ('operators', 'Operator'), ('Operator', 'Precedence'), ('Precedence', 'Associative'), ('Associative', '↑'), ('↑', '1'), ('1', 'right'), ('right', '*'), ('*', ','), (',', '/'), ('/', '2'), ('2', 'left'), ('left', '+'), ('+', ','), (',', '-'), ('-', '3'), ('3', 'left'), ('left', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Steps'), ('Steps', 'operator'), ('operator', 'precedence'), ('precedence', 'parsing'), ('parsing', 'Find'), ('Find', 'Leading'), ('Leading', 'trailing'), ('trailing', 'non'), ('non', 'terminal'), ('terminal', 'Establish'), ('Establish', 'relation'), ('relation', 'Creation'), ('Creation', 'table'), ('table', 'Parse'), ('Parse', 'string'), ('string', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Leading'), ('Leading', '&'), ('&', 'Trailing'), ('Trailing', 'Leading'), ('Leading', ':'), (':', '-'), ('-', 'Leading'), ('Leading', 'non'), ('non', 'terminal'), ('terminal', 'first'), ('first', 'terminal'), ('terminal', 'operator'), ('operator', 'production'), ('production', 'non'), ('non', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('In', 'operator', 'precedence'), ('operator', 'precedence', 'parsing'), ('precedence', 'parsing', 'define'), ('parsing', 'define', 'following'), ('define', 'following', 'disjoint'), ('following', 'disjoint', 'relations'), ('disjoint', 'relations', ':'), ('relations', ':', 'Relation'), (':', 'Relation', 'Meaning'), ('Relation', 'Meaning', '<'), ('Meaning', '<', '.b'), ('<', '.b', '“'), ('.b', '“', 'yields'), ('“', 'yields', 'precedence'), ('yields', 'precedence', '”'), ('precedence', '”', 'b'), ('”', 'b', 'a=b'), ('b', 'a=b', '“'), ('a=b', '“', 'precedence'), ('“', 'precedence', '”'), ('precedence', '”', 'b'), ('”', 'b', 'a.'), ('b', 'a.', '>'), ('a.', '>', 'b'), ('>', 'b', '“'), ('b', '“', 'takes'), ('“', 'takes', 'precedence'), ('takes', 'precedence', '”'), ('precedence', '”', 'b'), ('”', 'b', 'Prof.'), ('b', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Precedence'), ('›', 'Precedence', '&'), ('Precedence', '&', 'associativity'), ('&', 'associativity', 'operators'), ('associativity', 'operators', 'Operator'), ('operators', 'Operator', 'Precedence'), ('Operator', 'Precedence', 'Associative'), ('Precedence', 'Associative', '↑'), ('Associative', '↑', '1'), ('↑', '1', 'right'), ('1', 'right', '*'), ('right', '*', ','), ('*', ',', '/'), (',', '/', '2'), ('/', '2', 'left'), ('2', 'left', '+'), ('left', '+', ','), ('+', ',', '-'), (',', '-', '3'), ('-', '3', 'left'), ('3', 'left', 'Prof.'), ('left', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Steps'), ('›', 'Steps', 'operator'), ('Steps', 'operator', 'precedence'), ('operator', 'precedence', 'parsing'), ('precedence', 'parsing', 'Find'), ('parsing', 'Find', 'Leading'), ('Find', 'Leading', 'trailing'), ('Leading', 'trailing', 'non'), ('trailing', 'non', 'terminal'), ('non', 'terminal', 'Establish'), ('terminal', 'Establish', 'relation'), ('Establish', 'relation', 'Creation'), ('relation', 'Creation', 'table'), ('Creation', 'table', 'Parse'), ('table', 'Parse', 'string'), ('Parse', 'string', 'Prof.'), ('string', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Leading'), ('›', 'Leading', '&'), ('Leading', '&', 'Trailing'), ('&', 'Trailing', 'Leading'), ('Trailing', 'Leading', ':'), ('Leading', ':', '-'), (':', '-', 'Leading'), ('-', 'Leading', 'non'), ('Leading', 'non', 'terminal'), ('non', 'terminal', 'first'), ('terminal', 'first', 'terminal'), ('first', 'terminal', 'operator'), ('terminal', 'operator', 'production'), ('operator', 'production', 'non'), ('production', 'non', 'terminal'), ('non', 'terminal', '.')]

>> POS Tags are: 
 [('In', 'IN'), ('operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('define', 'NN'), ('following', 'VBG'), ('disjoint', 'NN'), ('relations', 'NNS'), (':', ':'), ('Relation', 'NN'), ('Meaning', 'NNP'), ('<', 'NNP'), ('.b', 'NNP'), ('“', 'NNP'), ('yields', 'NNS'), ('precedence', 'NN'), ('”', 'VBP'), ('b', 'NN'), ('a=b', 'NN'), ('“', 'NNP'), ('precedence', 'NN'), ('”', 'NN'), ('b', 'NN'), ('a.', 'NN'), ('>', 'NNP'), ('b', 'NN'), ('“', 'NNP'), ('takes', 'VBZ'), ('precedence', 'NN'), ('”', 'NN'), ('b', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Precedence', 'NNP'), ('&', 'CC'), ('associativity', 'NN'), ('operators', 'NNS'), ('Operator', 'NNP'), ('Precedence', 'NNP'), ('Associative', 'NNP'), ('↑', 'VBD'), ('1', 'CD'), ('right', 'JJ'), ('*', 'NN'), (',', ','), ('/', '$'), ('2', 'CD'), ('left', 'VBD'), ('+', 'NN'), (',', ','), ('-', ':'), ('3', 'CD'), ('left', 'VBD'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Steps', 'NNP'), ('operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('Find', 'NNP'), ('Leading', 'VBG'), ('trailing', 'VBG'), ('non', 'JJ'), ('terminal', 'JJ'), ('Establish', 'JJ'), ('relation', 'NN'), ('Creation', 'NNP'), ('table', 'NN'), ('Parse', 'NNP'), ('string', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Leading', 'NNP'), ('&', 'CC'), ('Trailing', 'NNP'), ('Leading', 'NNP'), (':', ':'), ('-', ':'), ('Leading', 'VBG'), ('non', 'JJ'), ('terminal', 'JJ'), ('first', 'JJ'), ('terminal', 'NN'), ('operator', 'NN'), ('production', 'NN'), ('non', 'DT'), ('terminal', 'NN'), ('.', '.')]

 (S
  In/IN
  (NP operator/NN precedence/NN)
  parsing/VBG
  (NP define/NN)
  following/VBG
  (NP disjoint/NN relations/NNS)
  :/:
  (NP
    Relation/NN
    Meaning/NNP
    </NNP
    .b/NNP
    “/NNP
    yields/NNS
    precedence/NN)
  ”/VBP
  (NP
    b/NN
    a=b/NN
    “/NNP
    precedence/NN
    ”/NN
    b/NN
    a./NN
    >/NNP
    b/NN
    “/NNP)
  takes/VBZ
  (NP precedence/NN ”/NN b/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Precedence/NNP)
  &/CC
  (NP
    associativity/NN
    operators/NNS
    Operator/NNP
    Precedence/NNP
    Associative/NNP)
  ↑/VBD
  1/CD
  (NP right/JJ */NN)
  ,/,
  //$
  2/CD
  left/VBD
  (NP +/NN)
  ,/,
  -/:
  3/CD
  left/VBD
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Steps/NNP operator/NN precedence/NN)
  parsing/VBG
  (NP Find/NNP)
  Leading/VBG
  trailing/VBG
  (NP
    non/JJ
    terminal/JJ
    Establish/JJ
    relation/NN
    Creation/NNP
    table/NN
    Parse/NNP
    string/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Leading/NNP)
  &/CC
  (NP Trailing/NNP Leading/NNP)
  :/:
  -/:
  Leading/VBG
  (NP
    non/JJ
    terminal/JJ
    first/JJ
    terminal/NN
    operator/NN
    production/NN)
  (NP non/DT terminal/NN)
  ./.) 


>> Noun Phrases are: 
 ['operator precedence', 'define', 'disjoint relations', 'Relation Meaning < .b “ yields precedence', 'b a=b “ precedence ” b a. > b “', 'precedence ” b Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Precedence', 'associativity operators Operator Precedence Associative', 'right *', '+', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Steps operator precedence', 'Find', 'non terminal Establish relation Creation table Parse string Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Leading', 'Trailing Leading', 'non terminal first terminal operator production', 'non terminal']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Operator Precedence Associative'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Steps'), ('PERSON', 'Parse'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('In', 'in'), ('operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('define', 'defin'), ('following', 'follow'), ('disjoint', 'disjoint'), ('relations', 'relat'), (':', ':'), ('Relation', 'relat'), ('Meaning', 'mean'), ('<', '<'), ('.b', '.b'), ('“', '“'), ('yields', 'yield'), ('precedence', 'preced'), ('”', '”'), ('b', 'b'), ('a=b', 'a=b'), ('“', '“'), ('precedence', 'preced'), ('”', '”'), ('b', 'b'), ('a.', 'a.'), ('>', '>'), ('b', 'b'), ('“', '“'), ('takes', 'take'), ('precedence', 'preced'), ('”', '”'), ('b', 'b'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Precedence', 'preced'), ('&', '&'), ('associativity', 'associ'), ('operators', 'oper'), ('Operator', 'oper'), ('Precedence', 'preced'), ('Associative', 'associ'), ('↑', '↑'), ('1', '1'), ('right', 'right'), ('*', '*'), (',', ','), ('/', '/'), ('2', '2'), ('left', 'left'), ('+', '+'), (',', ','), ('-', '-'), ('3', '3'), ('left', 'left'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Steps', 'step'), ('operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Find', 'find'), ('Leading', 'lead'), ('trailing', 'trail'), ('non', 'non'), ('terminal', 'termin'), ('Establish', 'establish'), ('relation', 'relat'), ('Creation', 'creation'), ('table', 'tabl'), ('Parse', 'pars'), ('string', 'string'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('Leading', 'lead'), (':', ':'), ('-', '-'), ('Leading', 'lead'), ('non', 'non'), ('terminal', 'termin'), ('first', 'first'), ('terminal', 'termin'), ('operator', 'oper'), ('production', 'product'), ('non', 'non'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('In', 'in'), ('operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('define', 'defin'), ('following', 'follow'), ('disjoint', 'disjoint'), ('relations', 'relat'), (':', ':'), ('Relation', 'relat'), ('Meaning', 'mean'), ('<', '<'), ('.b', '.b'), ('“', '“'), ('yields', 'yield'), ('precedence', 'preced'), ('”', '”'), ('b', 'b'), ('a=b', 'a=b'), ('“', '“'), ('precedence', 'preced'), ('”', '”'), ('b', 'b'), ('a.', 'a.'), ('>', '>'), ('b', 'b'), ('“', '“'), ('takes', 'take'), ('precedence', 'preced'), ('”', '”'), ('b', 'b'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Precedence', 'preced'), ('&', '&'), ('associativity', 'associ'), ('operators', 'oper'), ('Operator', 'oper'), ('Precedence', 'preced'), ('Associative', 'associ'), ('↑', '↑'), ('1', '1'), ('right', 'right'), ('*', '*'), (',', ','), ('/', '/'), ('2', '2'), ('left', 'left'), ('+', '+'), (',', ','), ('-', '-'), ('3', '3'), ('left', 'left'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Steps', 'step'), ('operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Find', 'find'), ('Leading', 'lead'), ('trailing', 'trail'), ('non', 'non'), ('terminal', 'termin'), ('Establish', 'establish'), ('relation', 'relat'), ('Creation', 'creation'), ('table', 'tabl'), ('Parse', 'pars'), ('string', 'string'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('Leading', 'lead'), (':', ':'), ('-', '-'), ('Leading', 'lead'), ('non', 'non'), ('terminal', 'termin'), ('first', 'first'), ('terminal', 'termin'), ('operator', 'oper'), ('production', 'product'), ('non', 'non'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('In', 'In'), ('operator', 'operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('define', 'define'), ('following', 'following'), ('disjoint', 'disjoint'), ('relations', 'relation'), (':', ':'), ('Relation', 'Relation'), ('Meaning', 'Meaning'), ('<', '<'), ('.b', '.b'), ('“', '“'), ('yields', 'yield'), ('precedence', 'precedence'), ('”', '”'), ('b', 'b'), ('a=b', 'a=b'), ('“', '“'), ('precedence', 'precedence'), ('”', '”'), ('b', 'b'), ('a.', 'a.'), ('>', '>'), ('b', 'b'), ('“', '“'), ('takes', 'take'), ('precedence', 'precedence'), ('”', '”'), ('b', 'b'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Precedence', 'Precedence'), ('&', '&'), ('associativity', 'associativity'), ('operators', 'operator'), ('Operator', 'Operator'), ('Precedence', 'Precedence'), ('Associative', 'Associative'), ('↑', '↑'), ('1', '1'), ('right', 'right'), ('*', '*'), (',', ','), ('/', '/'), ('2', '2'), ('left', 'left'), ('+', '+'), (',', ','), ('-', '-'), ('3', '3'), ('left', 'left'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Steps', 'Steps'), ('operator', 'operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Find', 'Find'), ('Leading', 'Leading'), ('trailing', 'trailing'), ('non', 'non'), ('terminal', 'terminal'), ('Establish', 'Establish'), ('relation', 'relation'), ('Creation', 'Creation'), ('table', 'table'), ('Parse', 'Parse'), ('string', 'string'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Leading', 'Leading'), ('&', '&'), ('Trailing', 'Trailing'), ('Leading', 'Leading'), (':', ':'), ('-', '-'), ('Leading', 'Leading'), ('non', 'non'), ('terminal', 'terminal'), ('first', 'first'), ('terminal', 'terminal'), ('operator', 'operator'), ('production', 'production'), ('non', 'non'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 63 =============================

Trailing:- Trailing of a non terminal is the last terminal or operator in production of that non terminal. 


>> Tokens are: 
 ['Trailing', ':', '-', 'Trailing', 'non', 'terminal', 'last', 'terminal', 'operator', 'production', 'non', 'terminal', '.']

>> Bigrams are: 
 [('Trailing', ':'), (':', '-'), ('-', 'Trailing'), ('Trailing', 'non'), ('non', 'terminal'), ('terminal', 'last'), ('last', 'terminal'), ('terminal', 'operator'), ('operator', 'production'), ('production', 'non'), ('non', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('Trailing', ':', '-'), (':', '-', 'Trailing'), ('-', 'Trailing', 'non'), ('Trailing', 'non', 'terminal'), ('non', 'terminal', 'last'), ('terminal', 'last', 'terminal'), ('last', 'terminal', 'operator'), ('terminal', 'operator', 'production'), ('operator', 'production', 'non'), ('production', 'non', 'terminal'), ('non', 'terminal', '.')]

>> POS Tags are: 
 [('Trailing', 'NN'), (':', ':'), ('-', ':'), ('Trailing', 'VBG'), ('non', 'JJ'), ('terminal', 'JJ'), ('last', 'JJ'), ('terminal', 'NN'), ('operator', 'NN'), ('production', 'NN'), ('non', 'DT'), ('terminal', 'NN'), ('.', '.')]

 (S
  (NP Trailing/NN)
  :/:
  -/:
  Trailing/VBG
  (NP
    non/JJ
    terminal/JJ
    last/JJ
    terminal/NN
    operator/NN
    production/NN)
  (NP non/DT terminal/NN)
  ./.) 


>> Noun Phrases are: 
 ['Trailing', 'non terminal last terminal operator production', 'non terminal']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Trailing', 'trail'), (':', ':'), ('-', '-'), ('Trailing', 'trail'), ('non', 'non'), ('terminal', 'termin'), ('last', 'last'), ('terminal', 'termin'), ('operator', 'oper'), ('production', 'product'), ('non', 'non'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Trailing', 'trail'), (':', ':'), ('-', '-'), ('Trailing', 'trail'), ('non', 'non'), ('terminal', 'termin'), ('last', 'last'), ('terminal', 'termin'), ('operator', 'oper'), ('production', 'product'), ('non', 'non'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Trailing', 'Trailing'), (':', ':'), ('-', '-'), ('Trailing', 'Trailing'), ('non', 'non'), ('terminal', 'terminal'), ('last', 'last'), ('terminal', 'terminal'), ('operator', 'operator'), ('production', 'production'), ('non', 'non'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 64 =============================

Example: 	EE+T | T 		TT*F | F 		Fid  	Non terminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}           Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to establish a relation For a = b, , where  is  or a single non terminal  [e.g.- : (E)] a <.b [e.g.- : +T] a .>b [e.g.- : E+] $ <. 


>> Tokens are: 
 ['Example', ':', 'E\uf0e0E+T', '|', 'T', 'T\uf0e0T', '*', 'F', '|', 'F', 'F\uf0e0id', 'Non', 'terminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id', '}', '{', '+', ',', '*', ',', 'id', '}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rules', 'establish', 'relation', 'For', '=', 'b', ',', ',', 'single', 'non', 'terminal', '[', 'e.g.-', ':', '(', 'E', ')', ']', '<', '.b', '[', 'e.g.-', ':', '+T', ']', '.', '>', 'b', '[', 'e.g.-', ':', 'E+', ']', '$', '<', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'E\uf0e0E+T'), ('E\uf0e0E+T', '|'), ('|', 'T'), ('T', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'F\uf0e0id'), ('F\uf0e0id', 'Non'), ('Non', 'terminal'), ('terminal', 'Leading'), ('Leading', 'Trailing'), ('Trailing', 'E'), ('E', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'F'), ('F', '{'), ('{', 'id'), ('id', '}'), ('}', '{'), ('{', 'id'), ('id', '}'), ('}', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rules'), ('Rules', 'establish'), ('establish', 'relation'), ('relation', 'For'), ('For', '='), ('=', 'b'), ('b', ','), (',', ','), (',', 'single'), ('single', 'non'), ('non', 'terminal'), ('terminal', '['), ('[', 'e.g.-'), ('e.g.-', ':'), (':', '('), ('(', 'E'), ('E', ')'), (')', ']'), (']', '<'), ('<', '.b'), ('.b', '['), ('[', 'e.g.-'), ('e.g.-', ':'), (':', '+T'), ('+T', ']'), (']', '.'), ('.', '>'), ('>', 'b'), ('b', '['), ('[', 'e.g.-'), ('e.g.-', ':'), (':', 'E+'), ('E+', ']'), (']', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('Example', ':', 'E\uf0e0E+T'), (':', 'E\uf0e0E+T', '|'), ('E\uf0e0E+T', '|', 'T'), ('|', 'T', 'T\uf0e0T'), ('T', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'F\uf0e0id'), ('F', 'F\uf0e0id', 'Non'), ('F\uf0e0id', 'Non', 'terminal'), ('Non', 'terminal', 'Leading'), ('terminal', 'Leading', 'Trailing'), ('Leading', 'Trailing', 'E'), ('Trailing', 'E', '{'), ('E', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '{'), ('T', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'F'), ('}', 'F', '{'), ('F', '{', 'id'), ('{', 'id', '}'), ('id', '}', '{'), ('}', '{', 'id'), ('{', 'id', '}'), ('id', '}', 'Prof.'), ('}', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rules'), ('›', 'Rules', 'establish'), ('Rules', 'establish', 'relation'), ('establish', 'relation', 'For'), ('relation', 'For', '='), ('For', '=', 'b'), ('=', 'b', ','), ('b', ',', ','), (',', ',', 'single'), (',', 'single', 'non'), ('single', 'non', 'terminal'), ('non', 'terminal', '['), ('terminal', '[', 'e.g.-'), ('[', 'e.g.-', ':'), ('e.g.-', ':', '('), (':', '(', 'E'), ('(', 'E', ')'), ('E', ')', ']'), (')', ']', '<'), (']', '<', '.b'), ('<', '.b', '['), ('.b', '[', 'e.g.-'), ('[', 'e.g.-', ':'), ('e.g.-', ':', '+T'), (':', '+T', ']'), ('+T', ']', '.'), (']', '.', '>'), ('.', '>', 'b'), ('>', 'b', '['), ('b', '[', 'e.g.-'), ('[', 'e.g.-', ':'), ('e.g.-', ':', 'E+'), (':', 'E+', ']'), ('E+', ']', '$'), (']', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('E\uf0e0E+T', 'NNP'), ('|', 'NNP'), ('T', 'NNP'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('Non', 'NNP'), ('terminal', 'JJ'), ('Leading', 'NNP'), ('Trailing', 'NNP'), ('E', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('id', 'JJ'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('id', 'NN'), ('}', ')'), ('{', '('), ('id', 'JJ'), ('}', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Rules', 'NNP'), ('establish', 'VB'), ('relation', 'NN'), ('For', 'IN'), ('=', 'NN'), ('b', 'NN'), (',', ','), (',', ','), ('single', 'JJ'), ('non', 'FW'), ('terminal', 'JJ'), ('[', 'JJ'), ('e.g.-', 'NN'), (':', ':'), ('(', '('), ('E', 'NNP'), (')', ')'), (']', 'VBP'), ('<', 'JJ'), ('.b', 'NNP'), ('[', 'NNP'), ('e.g.-', 'NN'), (':', ':'), ('+T', 'JJ'), (']', 'NN'), ('.', '.'), ('>', 'NN'), ('b', 'NN'), ('[', 'JJ'), ('e.g.-', 'NN'), (':', ':'), ('E+', 'NNP'), (']', 'NNP'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP
    EE+T/NNP
    |/NNP
    T/NNP
    TT/NNP
    */NNP
    F/NNP
    |/NNP
    F/NNP
    Fid/NNP
    Non/NNP)
  (NP terminal/JJ Leading/NNP Trailing/NNP E/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  {/(
  +/JJ
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  (NP T/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP id/NN)
  }/)
  {/(
  */JJ
  ,/,
  id/JJ
  }/)
  (NP F/NNP)
  {/(
  (NP id/NN)
  }/)
  {/(
  id/JJ
  }/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Rules/NNP)
  establish/VB
  (NP relation/NN)
  For/IN
  (NP =/NN b/NN)
  ,/,
  ,/,
  single/JJ
  non/FW
  (NP terminal/JJ [/JJ e.g.-/NN)
  :/:
  (/(
  (NP E/NNP)
  )/)
  ]/VBP
  (NP </JJ .b/NNP [/NNP e.g.-/NN)
  :/:
  (NP +T/JJ ]/NN)
  ./.
  (NP >/NN b/NN)
  (NP [/JJ e.g.-/NN)
  :/:
  (NP E+/NNP ]/NNP)
  $/$
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'E\uf0e0E+T | T T\uf0e0T * F | F F\uf0e0id Non', 'terminal Leading Trailing E', '+', '*', 'id', '*', 'id', 'T', '*', 'id', 'F', 'id', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rules', 'relation', '= b', 'terminal [ e.g.-', 'E', '< .b [ e.g.-', '+T ]', '> b', '[ e.g.-', 'E+ ]', '<']

>> Named Entities are: 
 [('GPE', 'Example'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Rules')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('Non', 'non'), ('terminal', 'termin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('establish', 'establish'), ('relation', 'relat'), ('For', 'for'), ('=', '='), ('b', 'b'), (',', ','), (',', ','), ('single', 'singl'), ('non', 'non'), ('terminal', 'termin'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('(', '('), ('E', 'e'), (')', ')'), (']', ']'), ('<', '<'), ('.b', '.b'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('+T', '+t'), (']', ']'), ('.', '.'), ('>', '>'), ('b', 'b'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('E+', 'e+'), (']', ']'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('Non', 'non'), ('terminal', 'termin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('establish', 'establish'), ('relation', 'relat'), ('For', 'for'), ('=', '='), ('b', 'b'), (',', ','), (',', ','), ('single', 'singl'), ('non', 'non'), ('terminal', 'termin'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('(', '('), ('E', 'e'), (')', ')'), (']', ']'), ('<', '<'), ('.b', '.b'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('+T', '+t'), (']', ']'), ('.', '.'), ('>', '>'), ('b', 'b'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('E+', 'e+'), (']', ']'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('Non', 'Non'), ('terminal', 'terminal'), ('Leading', 'Leading'), ('Trailing', 'Trailing'), ('E', 'E'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'F'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'Rules'), ('establish', 'establish'), ('relation', 'relation'), ('For', 'For'), ('=', '='), ('b', 'b'), (',', ','), (',', ','), ('single', 'single'), ('non', 'non'), ('terminal', 'terminal'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('(', '('), ('E', 'E'), (')', ')'), (']', ']'), ('<', '<'), ('.b', '.b'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('+T', '+T'), (']', ']'), ('.', '.'), ('>', '>'), ('b', 'b'), ('[', '['), ('e.g.-', 'e.g.-'), (':', ':'), ('E+', 'E+'), (']', ']'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 65 =============================

Leading (start symbol) Trailing (start symbol) .> $      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing       a <.b     	Nonterminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}  Step 1: Find Leading & Trailing of NT  Step 2: Establish Relation  E E	 Step3: Creation of Table  	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['Leading', '(', 'start', 'symbol', ')', 'Trailing', '(', 'start', 'symbol', ')', '.', '>', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Operator', 'precedence', 'parsing', '<', '.b', 'Nonterminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id', '}', '{', '+', ',', '*', ',', 'id', '}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Step', '1', ':', 'Find', 'Leading', '&', 'Trailing', 'NT', 'Step', '2', ':', 'Establish', 'Relation', 'E\uf0e0', 'E', 'Step3', ':', 'Creation', 'Table', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('Leading', '('), ('(', 'start'), ('start', 'symbol'), ('symbol', ')'), (')', 'Trailing'), ('Trailing', '('), ('(', 'start'), ('start', 'symbol'), ('symbol', ')'), (')', '.'), ('.', '>'), ('>', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', '<'), ('<', '.b'), ('.b', 'Nonterminal'), ('Nonterminal', 'Leading'), ('Leading', 'Trailing'), ('Trailing', 'E'), ('E', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'F'), ('F', '{'), ('{', 'id'), ('id', '}'), ('}', '{'), ('{', 'id'), ('id', '}'), ('}', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Find'), ('Find', 'Leading'), ('Leading', '&'), ('&', 'Trailing'), ('Trailing', 'NT'), ('NT', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Establish'), ('Establish', 'Relation'), ('Relation', 'E\uf0e0'), ('E\uf0e0', 'E'), ('E', 'Step3'), ('Step3', ':'), (':', 'Creation'), ('Creation', 'Table'), ('Table', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('Leading', '(', 'start'), ('(', 'start', 'symbol'), ('start', 'symbol', ')'), ('symbol', ')', 'Trailing'), (')', 'Trailing', '('), ('Trailing', '(', 'start'), ('(', 'start', 'symbol'), ('start', 'symbol', ')'), ('symbol', ')', '.'), (')', '.', '>'), ('.', '>', '$'), ('>', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Operator'), (':', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', '<'), ('parsing', '<', '.b'), ('<', '.b', 'Nonterminal'), ('.b', 'Nonterminal', 'Leading'), ('Nonterminal', 'Leading', 'Trailing'), ('Leading', 'Trailing', 'E'), ('Trailing', 'E', '{'), ('E', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '{'), ('T', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'F'), ('}', 'F', '{'), ('F', '{', 'id'), ('{', 'id', '}'), ('id', '}', '{'), ('}', '{', 'id'), ('{', 'id', '}'), ('id', '}', 'Step'), ('}', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Find'), (':', 'Find', 'Leading'), ('Find', 'Leading', '&'), ('Leading', '&', 'Trailing'), ('&', 'Trailing', 'NT'), ('Trailing', 'NT', 'Step'), ('NT', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Establish'), (':', 'Establish', 'Relation'), ('Establish', 'Relation', 'E\uf0e0'), ('Relation', 'E\uf0e0', 'E'), ('E\uf0e0', 'E', 'Step3'), ('E', 'Step3', ':'), ('Step3', ':', 'Creation'), (':', 'Creation', 'Table'), ('Creation', 'Table', '+'), ('Table', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('Leading', 'VBG'), ('(', '('), ('start', 'JJ'), ('symbol', 'NN'), (')', ')'), ('Trailing', 'NNP'), ('(', '('), ('start', 'VB'), ('symbol', 'NN'), (')', ')'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('<', 'NNP'), ('.b', 'NNP'), ('Nonterminal', 'NNP'), ('Leading', 'NNP'), ('Trailing', 'NNP'), ('E', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('id', 'JJ'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('id', 'NN'), ('}', ')'), ('{', '('), ('id', 'JJ'), ('}', ')'), ('Step', 'NNP'), ('1', 'CD'), (':', ':'), ('Find', 'NNP'), ('Leading', 'NNP'), ('&', 'CC'), ('Trailing', 'NNP'), ('NT', 'NNP'), ('Step', 'NNP'), ('2', 'CD'), (':', ':'), ('Establish', 'JJ'), ('Relation', 'NNP'), ('E\uf0e0', 'NNP'), ('E', 'NNP'), ('Step3', 'NNP'), (':', ':'), ('Creation', 'NN'), ('Table', 'NNP'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  Leading/VBG
  (/(
  (NP start/JJ symbol/NN)
  )/)
  (NP Trailing/NNP)
  (/(
  start/VB
  (NP symbol/NN)
  )/)
  ./.
  >/JJ
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Operator/NN precedence/NN)
  parsing/VBG
  (NP </NNP .b/NNP Nonterminal/NNP Leading/NNP Trailing/NNP E/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  {/(
  +/JJ
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  (NP T/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP id/NN)
  }/)
  {/(
  */JJ
  ,/,
  id/JJ
  }/)
  (NP F/NNP)
  {/(
  (NP id/NN)
  }/)
  {/(
  id/JJ
  }/)
  (NP Step/NNP)
  1/CD
  :/:
  (NP Find/NNP Leading/NNP)
  &/CC
  (NP Trailing/NNP NT/NNP Step/NNP)
  2/CD
  :/:
  (NP Establish/JJ Relation/NNP E/NNP E/NNP Step3/NNP)
  :/:
  (NP Creation/NN Table/NNP +/NNP */NNP)
  id/VBP
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['start symbol', 'Trailing', 'symbol', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Operator precedence', '< .b Nonterminal Leading Trailing E', '+', '*', 'id', '*', 'id', 'T', '*', 'id', 'F', 'id', 'Step', 'Find Leading', 'Trailing NT Step', 'Establish Relation E\uf0e0 E Step3', 'Creation Table + *', '+', '> <']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Find Leading'), ('PERSON', 'Establish Relation'), ('PERSON', 'Step3'), ('PERSON', 'Table')] 

>> Stemming using Porter Stemmer: 
 [('Leading', 'lead'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('Trailing', 'trail'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.', '.'), ('>', '>'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('<', '<'), ('.b', '.b'), ('Nonterminal', 'nontermin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('NT', 'nt'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relat'), ('E\uf0e0', 'e\uf0e0'), ('E', 'e'), ('Step3', 'step3'), (':', ':'), ('Creation', 'creation'), ('Table', 'tabl'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Leading', 'lead'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('Trailing', 'trail'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.', '.'), ('>', '>'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('<', '<'), ('.b', '.b'), ('Nonterminal', 'nontermin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('NT', 'nt'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relat'), ('E\uf0e0', 'e\uf0e0'), ('E', 'e'), ('Step3', 'step3'), (':', ':'), ('Creation', 'creation'), ('Table', 'tabl'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Leading', 'Leading'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('Trailing', 'Trailing'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.', '.'), ('>', '>'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('<', '<'), ('.b', '.b'), ('Nonterminal', 'Nonterminal'), ('Leading', 'Leading'), ('Trailing', 'Trailing'), ('E', 'E'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'F'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Find', 'Find'), ('Leading', 'Leading'), ('&', '&'), ('Trailing', 'Trailing'), ('NT', 'NT'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Establish', 'Establish'), ('Relation', 'Relation'), ('E\uf0e0', 'E\uf0e0'), ('E', 'E'), ('Step3', 'Step3'), (':', ':'), ('Creation', 'Creation'), ('Table', 'Table'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 66 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 67 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 68 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 69 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 70 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 71 =============================

+T	 | T	 T T *F	 | F	 F id    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing       a .>b     	Nonterminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}  Step2: Establish Relation  E  Step3: Creation of Table  	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['+T', '|', 'T', 'T\uf0e0', 'T', '*', 'F', '|', 'F', 'F\uf0e0', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Operator', 'precedence', 'parsing', '.', '>', 'b', 'Nonterminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id', '}', '{', '+', ',', '*', ',', 'id', '}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Step2', ':', 'Establish', 'Relation', 'E\uf0e0', 'Step3', ':', 'Creation', 'Table', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('+T', '|'), ('|', 'T'), ('T', 'T\uf0e0'), ('T\uf0e0', 'T'), ('T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', 'id'), ('id', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', '.'), ('.', '>'), ('>', 'b'), ('b', 'Nonterminal'), ('Nonterminal', 'Leading'), ('Leading', 'Trailing'), ('Trailing', 'E'), ('E', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'F'), ('F', '{'), ('{', 'id'), ('id', '}'), ('}', '{'), ('{', 'id'), ('id', '}'), ('}', 'Step2'), ('Step2', ':'), (':', 'Establish'), ('Establish', 'Relation'), ('Relation', 'E\uf0e0'), ('E\uf0e0', 'Step3'), ('Step3', ':'), (':', 'Creation'), ('Creation', 'Table'), ('Table', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('+T', '|', 'T'), ('|', 'T', 'T\uf0e0'), ('T', 'T\uf0e0', 'T'), ('T\uf0e0', 'T', '*'), ('T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', 'id'), ('F\uf0e0', 'id', 'Prof.'), ('id', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Operator'), (':', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', '.'), ('parsing', '.', '>'), ('.', '>', 'b'), ('>', 'b', 'Nonterminal'), ('b', 'Nonterminal', 'Leading'), ('Nonterminal', 'Leading', 'Trailing'), ('Leading', 'Trailing', 'E'), ('Trailing', 'E', '{'), ('E', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '{'), ('T', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'F'), ('}', 'F', '{'), ('F', '{', 'id'), ('{', 'id', '}'), ('id', '}', '{'), ('}', '{', 'id'), ('{', 'id', '}'), ('id', '}', 'Step2'), ('}', 'Step2', ':'), ('Step2', ':', 'Establish'), (':', 'Establish', 'Relation'), ('Establish', 'Relation', 'E\uf0e0'), ('Relation', 'E\uf0e0', 'Step3'), ('E\uf0e0', 'Step3', ':'), ('Step3', ':', 'Creation'), (':', 'Creation', 'Table'), ('Creation', 'Table', '+'), ('Table', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('+T', 'JJ'), ('|', 'NNP'), ('T', 'NNP'), ('T\uf0e0', 'NNP'), ('T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('id', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('.', '.'), ('>', 'NN'), ('b', 'IN'), ('Nonterminal', 'NNP'), ('Leading', 'NNP'), ('Trailing', 'NNP'), ('E', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('id', 'JJ'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('id', 'NN'), ('}', ')'), ('{', '('), ('id', 'JJ'), ('}', ')'), ('Step2', 'NNP'), (':', ':'), ('Establish', 'JJ'), ('Relation', 'NNP'), ('E\uf0e0', 'NNP'), ('Step3', 'NNP'), (':', ':'), ('Creation', 'NN'), ('Table', 'NNP'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  (NP
    +T/JJ
    |/NNP
    T/NNP
    T/NNP
    T/NNP
    */NNP
    F/NNP
    |/NNP
    F/NNP
    F/NNP
    id/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Operator/NN precedence/NN parsing/NN)
  ./.
  (NP >/NN)
  b/IN
  (NP Nonterminal/NNP Leading/NNP Trailing/NNP E/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  {/(
  +/JJ
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  (NP T/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP id/NN)
  }/)
  {/(
  */JJ
  ,/,
  id/JJ
  }/)
  (NP F/NNP)
  {/(
  (NP id/NN)
  }/)
  {/(
  id/JJ
  }/)
  (NP Step2/NNP)
  :/:
  (NP Establish/JJ Relation/NNP E/NNP Step3/NNP)
  :/:
  (NP Creation/NN Table/NNP +/NNP */NNP)
  id/VBP
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['+T | T T\uf0e0 T * F | F F\uf0e0 id Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Operator precedence parsing', '>', 'Nonterminal Leading Trailing E', '+', '*', 'id', '*', 'id', 'T', '*', 'id', 'F', 'id', 'Step2', 'Establish Relation E\uf0e0 Step3', 'Creation Table + *', '+', '> <']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Nonterminal'), ('PERSON', 'Step2'), ('PERSON', 'Establish Relation'), ('PERSON', 'Step3'), ('PERSON', 'Table')] 

>> Stemming using Porter Stemmer: 
 [('+T', '+t'), ('|', '|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('.', '.'), ('>', '>'), ('b', 'b'), ('Nonterminal', 'nontermin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step2', 'step2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relat'), ('E\uf0e0', 'e\uf0e0'), ('Step3', 'step3'), (':', ':'), ('Creation', 'creation'), ('Table', 'tabl'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('+T', '+t'), ('|', '|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('.', '.'), ('>', '>'), ('b', 'b'), ('Nonterminal', 'nontermin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step2', 'step2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relat'), ('E\uf0e0', 'e\uf0e0'), ('Step3', 'step3'), (':', ':'), ('Creation', 'creation'), ('Table', 'tabl'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('+T', '+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T', 'T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('.', '.'), ('>', '>'), ('b', 'b'), ('Nonterminal', 'Nonterminal'), ('Leading', 'Leading'), ('Trailing', 'Trailing'), ('E', 'E'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'F'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step2', 'Step2'), (':', ':'), ('Establish', 'Establish'), ('Relation', 'Relation'), ('E\uf0e0', 'E\uf0e0'), ('Step3', 'Step3'), (':', ':'), ('Creation', 'Creation'), ('Table', 'Table'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 72 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 73 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 74 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 75 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 76 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 77 =============================

E+ T| T	 T  T*	 F| F	 F id Step 1: Find Leading & Trailing of NT     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing  	Nonterminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}  Step 2: Establish Relation  E  Step 3: Creation of Table  	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['E+', 'T|', 'T', 'T\uf0e0', 'T', '*', 'F|', 'F', 'F\uf0e0', 'id', 'Step', '1', ':', 'Find', 'Leading', '&', 'Trailing', 'NT', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Operator', 'precedence', 'parsing', 'Nonterminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id', '}', '{', '+', ',', '*', ',', 'id', '}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Step', '2', ':', 'Establish', 'Relation', 'E\uf0e0', 'Step', '3', ':', 'Creation', 'Table', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('E+', 'T|'), ('T|', 'T'), ('T', 'T\uf0e0'), ('T\uf0e0', 'T'), ('T', '*'), ('*', 'F|'), ('F|', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', 'id'), ('id', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Find'), ('Find', 'Leading'), ('Leading', '&'), ('&', 'Trailing'), ('Trailing', 'NT'), ('NT', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', 'Nonterminal'), ('Nonterminal', 'Leading'), ('Leading', 'Trailing'), ('Trailing', 'E'), ('E', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '+'), ('+', ','), (',', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'T'), ('T', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', '{'), ('{', '*'), ('*', ','), (',', 'id'), ('id', '}'), ('}', 'F'), ('F', '{'), ('{', 'id'), ('id', '}'), ('}', '{'), ('{', 'id'), ('id', '}'), ('}', 'Step'), ('Step', '2'), ('2', ':'), (':', 'Establish'), ('Establish', 'Relation'), ('Relation', 'E\uf0e0'), ('E\uf0e0', 'Step'), ('Step', '3'), ('3', ':'), (':', 'Creation'), ('Creation', 'Table'), ('Table', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('E+', 'T|', 'T'), ('T|', 'T', 'T\uf0e0'), ('T', 'T\uf0e0', 'T'), ('T\uf0e0', 'T', '*'), ('T', '*', 'F|'), ('*', 'F|', 'F'), ('F|', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', 'id'), ('F\uf0e0', 'id', 'Step'), ('id', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Find'), (':', 'Find', 'Leading'), ('Find', 'Leading', '&'), ('Leading', '&', 'Trailing'), ('&', 'Trailing', 'NT'), ('Trailing', 'NT', 'Prof.'), ('NT', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Operator'), (':', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', 'Nonterminal'), ('parsing', 'Nonterminal', 'Leading'), ('Nonterminal', 'Leading', 'Trailing'), ('Leading', 'Trailing', 'E'), ('Trailing', 'E', '{'), ('E', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '+'), ('{', '+', ','), ('+', ',', '*'), (',', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'T'), ('}', 'T', '{'), ('T', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', '{'), ('}', '{', '*'), ('{', '*', ','), ('*', ',', 'id'), (',', 'id', '}'), ('id', '}', 'F'), ('}', 'F', '{'), ('F', '{', 'id'), ('{', 'id', '}'), ('id', '}', '{'), ('}', '{', 'id'), ('{', 'id', '}'), ('id', '}', 'Step'), ('}', 'Step', '2'), ('Step', '2', ':'), ('2', ':', 'Establish'), (':', 'Establish', 'Relation'), ('Establish', 'Relation', 'E\uf0e0'), ('Relation', 'E\uf0e0', 'Step'), ('E\uf0e0', 'Step', '3'), ('Step', '3', ':'), ('3', ':', 'Creation'), (':', 'Creation', 'Table'), ('Creation', 'Table', '+'), ('Table', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('E+', 'NNP'), ('T|', 'NNP'), ('T', 'NNP'), ('T\uf0e0', 'NNP'), ('T', 'NNP'), ('*', 'NNP'), ('F|', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('id', 'JJ'), ('Step', 'NNP'), ('1', 'CD'), (':', ':'), ('Find', 'NNP'), ('Leading', 'NNP'), ('&', 'CC'), ('Trailing', 'NNP'), ('NT', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('Nonterminal', 'NNP'), ('Leading', 'NNP'), ('Trailing', 'NNP'), ('E', 'NNP'), ('{', '('), ('+', 'NN'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('+', 'JJ'), (',', ','), ('*', 'NNP'), (',', ','), ('id', 'NN'), ('}', ')'), ('T', 'NNP'), ('{', '('), ('*', 'NN'), (',', ','), ('id', 'NN'), ('}', ')'), ('{', '('), ('*', 'JJ'), (',', ','), ('id', 'JJ'), ('}', ')'), ('F', 'NNP'), ('{', '('), ('id', 'NN'), ('}', ')'), ('{', '('), ('id', 'JJ'), ('}', ')'), ('Step', 'NNP'), ('2', 'CD'), (':', ':'), ('Establish', 'JJ'), ('Relation', 'NNP'), ('E\uf0e0', 'NNP'), ('Step', 'NNP'), ('3', 'CD'), (':', ':'), ('Creation', 'NN'), ('Table', 'NNP'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  (NP E+/NNP T|/NNP T/NNP T/NNP T/NNP */NNP F|/NNP F/NNP F/NNP)
  (NP id/JJ Step/NNP)
  1/CD
  :/:
  (NP Find/NNP Leading/NNP)
  &/CC
  (NP Trailing/NNP NT/NNP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Operator/NN precedence/NN)
  parsing/VBG
  (NP Nonterminal/NNP Leading/NNP Trailing/NNP E/NNP)
  {/(
  (NP +/NN)
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  {/(
  +/JJ
  ,/,
  (NP */NNP)
  ,/,
  (NP id/NN)
  }/)
  (NP T/NNP)
  {/(
  (NP */NN)
  ,/,
  (NP id/NN)
  }/)
  {/(
  */JJ
  ,/,
  id/JJ
  }/)
  (NP F/NNP)
  {/(
  (NP id/NN)
  }/)
  {/(
  id/JJ
  }/)
  (NP Step/NNP)
  2/CD
  :/:
  (NP Establish/JJ Relation/NNP E/NNP Step/NNP)
  3/CD
  :/:
  (NP Creation/NN Table/NNP +/NNP */NNP)
  id/VBP
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['E+ T| T T\uf0e0 T * F| F F\uf0e0', 'id Step', 'Find Leading', 'Trailing NT Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Operator precedence', 'Nonterminal Leading Trailing E', '+', '*', 'id', '*', 'id', 'T', '*', 'id', 'F', 'id', 'Step', 'Establish Relation E\uf0e0 Step', 'Creation Table + *', '+', '> <']

>> Named Entities are: 
 [('PERSON', 'Find Leading'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Nonterminal'), ('PERSON', 'Establish Relation'), ('PERSON', 'Table')] 

>> Stemming using Porter Stemmer: 
 [('E+', 'e+'), ('T|', 't|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F|', 'f|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('NT', 'nt'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Nonterminal', 'nontermin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relat'), ('E\uf0e0', 'e\uf0e0'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Creation', 'creation'), ('Table', 'tabl'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E+', 'e+'), ('T|', 't|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F|', 'f|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('NT', 'nt'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Nonterminal', 'nontermin'), ('Leading', 'lead'), ('Trailing', 'trail'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 't'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relat'), ('E\uf0e0', 'e\uf0e0'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Creation', 'creation'), ('Table', 'tabl'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('E+', 'E+'), ('T|', 'T|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T', 'T'), ('*', '*'), ('F|', 'F|'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('id', 'id'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Find', 'Find'), ('Leading', 'Leading'), ('&', '&'), ('Trailing', 'Trailing'), ('NT', 'NT'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Nonterminal', 'Nonterminal'), ('Leading', 'Leading'), ('Trailing', 'Trailing'), ('E', 'E'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'F'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'Step'), ('2', '2'), (':', ':'), ('Establish', 'Establish'), ('Relation', 'Relation'), ('E\uf0e0', 'E\uf0e0'), ('Step', 'Step'), ('3', '3'), (':', ':'), ('Creation', 'Creation'), ('Table', 'Table'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 78 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 79 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 80 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 81 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 82 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 83 =============================

E+ T| T	 T  T*	 F| F	 F id    Step 1: Find Leading & Trailing of NT  $<. 


>> Tokens are: 
 ['E+', 'T|', 'T', 'T\uf0e0', 'T', '*', 'F|', 'F', 'F\uf0e0', 'id', 'Step', '1', ':', 'Find', 'Leading', '&', 'Trailing', 'NT', '$', '<', '.']

>> Bigrams are: 
 [('E+', 'T|'), ('T|', 'T'), ('T', 'T\uf0e0'), ('T\uf0e0', 'T'), ('T', '*'), ('*', 'F|'), ('F|', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', 'id'), ('id', 'Step'), ('Step', '1'), ('1', ':'), (':', 'Find'), ('Find', 'Leading'), ('Leading', '&'), ('&', 'Trailing'), ('Trailing', 'NT'), ('NT', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('E+', 'T|', 'T'), ('T|', 'T', 'T\uf0e0'), ('T', 'T\uf0e0', 'T'), ('T\uf0e0', 'T', '*'), ('T', '*', 'F|'), ('*', 'F|', 'F'), ('F|', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', 'id'), ('F\uf0e0', 'id', 'Step'), ('id', 'Step', '1'), ('Step', '1', ':'), ('1', ':', 'Find'), (':', 'Find', 'Leading'), ('Find', 'Leading', '&'), ('Leading', '&', 'Trailing'), ('&', 'Trailing', 'NT'), ('Trailing', 'NT', '$'), ('NT', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('E+', 'NNP'), ('T|', 'NNP'), ('T', 'NNP'), ('T\uf0e0', 'NNP'), ('T', 'NNP'), ('*', 'NNP'), ('F|', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('id', 'JJ'), ('Step', 'NNP'), ('1', 'CD'), (':', ':'), ('Find', 'NNP'), ('Leading', 'NNP'), ('&', 'CC'), ('Trailing', 'NNP'), ('NT', 'NNP'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP E+/NNP T|/NNP T/NNP T/NNP T/NNP */NNP F|/NNP F/NNP F/NNP)
  (NP id/JJ Step/NNP)
  1/CD
  :/:
  (NP Find/NNP Leading/NNP)
  &/CC
  (NP Trailing/NNP NT/NNP)
  $/$
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['E+ T| T T\uf0e0 T * F| F F\uf0e0', 'id Step', 'Find Leading', 'Trailing NT', '<']

>> Named Entities are: 
 [('PERSON', 'Find Leading')] 

>> Stemming using Porter Stemmer: 
 [('E+', 'e+'), ('T|', 't|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F|', 'f|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('NT', 'nt'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E+', 'e+'), ('T|', 't|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F|', 'f|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('NT', 'nt'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('E+', 'E+'), ('T|', 'T|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T', 'T'), ('*', '*'), ('F|', 'F|'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('id', 'id'), ('Step', 'Step'), ('1', '1'), (':', ':'), ('Find', 'Find'), ('Leading', 'Leading'), ('&', '&'), ('Trailing', 'Trailing'), ('NT', 'NT'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 84 =============================

Leading (start symbol) $ <. 


>> Tokens are: 
 ['Leading', '(', 'start', 'symbol', ')', '$', '<', '.']

>> Bigrams are: 
 [('Leading', '('), ('(', 'start'), ('start', 'symbol'), ('symbol', ')'), (')', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('Leading', '(', 'start'), ('(', 'start', 'symbol'), ('start', 'symbol', ')'), ('symbol', ')', '$'), (')', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('Leading', 'VBG'), ('(', '('), ('start', 'JJ'), ('symbol', 'NN'), (')', ')'), ('$', '$'), ('<', 'UH'), ('.', '.')]

 (S Leading/VBG (/( (NP start/JJ symbol/NN) )/) $/$ </UH ./.) 


>> Noun Phrases are: 
 ['start symbol']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Leading', 'lead'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Leading', 'lead'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Leading', 'Leading'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 85 =============================

Trailing (start symbol) .> $      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing  Assign precedence operator between terminals String:  id+id*id	 $ id+id*id $ $ <. 


>> Tokens are: 
 ['Trailing', '(', 'start', 'symbol', ')', '.', '>', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Operator', 'precedence', 'parsing', 'Assign', 'precedence', 'operator', 'terminals', 'String', ':', 'id+id', '*', 'id', '$', 'id+id', '*', 'id', '$', '$', '<', '.']

>> Bigrams are: 
 [('Trailing', '('), ('(', 'start'), ('start', 'symbol'), ('symbol', ')'), (')', '.'), ('.', '>'), ('>', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', 'Assign'), ('Assign', 'precedence'), ('precedence', 'operator'), ('operator', 'terminals'), ('terminals', 'String'), ('String', ':'), (':', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', 'id+id'), ('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('Trailing', '(', 'start'), ('(', 'start', 'symbol'), ('start', 'symbol', ')'), ('symbol', ')', '.'), (')', '.', '>'), ('.', '>', '$'), ('>', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Operator'), (':', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', 'Assign'), ('parsing', 'Assign', 'precedence'), ('Assign', 'precedence', 'operator'), ('precedence', 'operator', 'terminals'), ('operator', 'terminals', 'String'), ('terminals', 'String', ':'), ('String', ':', 'id+id'), (':', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'id+id'), ('$', 'id+id', '*'), ('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', '$'), ('$', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('Trailing', 'NNP'), ('(', '('), ('start', 'VB'), ('symbol', 'NN'), (')', ')'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('Assign', 'NNP'), ('precedence', 'NN'), ('operator', 'NN'), ('terminals', 'NNS'), ('String', 'VBG'), (':', ':'), ('id+id', 'NN'), ('*', 'VBZ'), ('id', 'JJ'), ('$', '$'), ('id+id', 'JJ'), ('*', 'NNP'), ('id', 'VBD'), ('$', '$'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP Trailing/NNP)
  (/(
  start/VB
  (NP symbol/NN)
  )/)
  ./.
  >/JJ
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Operator/NN precedence/NN)
  parsing/VBG
  (NP Assign/NNP precedence/NN operator/NN terminals/NNS)
  String/VBG
  :/:
  (NP id+id/NN)
  */VBZ
  id/JJ
  $/$
  (NP id+id/JJ */NNP)
  id/VBD
  $/$
  $/$
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['Trailing', 'symbol', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Operator precedence', 'Assign precedence operator terminals', 'id+id', 'id+id *', '<']

>> Named Entities are: 
 [('GPE', 'Trailing'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Assign')] 

>> Stemming using Porter Stemmer: 
 [('Trailing', 'trail'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.', '.'), ('>', '>'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Assign', 'assign'), ('precedence', 'preced'), ('operator', 'oper'), ('terminals', 'termin'), ('String', 'string'), (':', ':'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Trailing', 'trail'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.', '.'), ('>', '>'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('Assign', 'assign'), ('precedence', 'preced'), ('operator', 'oper'), ('terminals', 'termin'), ('String', 'string'), (':', ':'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Trailing', 'Trailing'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.', '.'), ('>', '>'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Assign', 'Assign'), ('precedence', 'precedence'), ('operator', 'operator'), ('terminals', 'terminal'), ('String', 'String'), (':', ':'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 86 =============================

id+id*id$ $ <. 


>> Tokens are: 
 ['id+id', '*', 'id', '$', '$', '<', '.']

>> Bigrams are: 
 [('id+id', '*'), ('*', 'id'), ('id', '$'), ('$', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('id+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', '$'), ('$', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('id+id', 'NN'), ('*', 'NNP'), ('id', 'VBZ'), ('$', '$'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S (NP id+id/NN */NNP) id/VBZ $/$ $/$ (NP </NNP) ./.) 


>> Noun Phrases are: 
 ['id+id *', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id+id', 'id+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 87 =============================

id .> +id*id$ $ <. 


>> Tokens are: 
 ['id', '.', '>', '+id', '*', 'id', '$', '$', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '+id'), ('+id', '*'), ('*', 'id'), ('id', '$'), ('$', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '+id'), ('>', '+id', '*'), ('+id', '*', 'id'), ('*', 'id', '$'), ('id', '$', '$'), ('$', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('+id', 'JJ'), ('*', 'NNP'), ('id', 'VBD'), ('$', '$'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP id/NN)
  ./.
  >/CC
  (NP +id/JJ */NNP)
  id/VBD
  $/$
  $/$
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['id', '+id *', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+id', '+id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 88 =============================

id .> + <. 


>> Tokens are: 
 ['id', '.', '>', '+', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '+'), ('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '+'), ('>', '+', '<'), ('+', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP id/NN) ./. >/CC (NP +/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['id', '+ <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 89 =============================

id*id$ $ <. 


>> Tokens are: 
 ['id', '*', 'id', '$', '$', '<', '.']

>> Bigrams are: 
 [('id', '*'), ('*', 'id'), ('id', '$'), ('$', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '*', 'id'), ('*', 'id', '$'), ('id', '$', '$'), ('$', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('*', 'NNP'), ('id', 'VBZ'), ('$', '$'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S (NP id/NN */NNP) id/VBZ $/$ $/$ (NP </NNP) ./.) 


>> Noun Phrases are: 
 ['id *', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 90 =============================

id .> + <. 


>> Tokens are: 
 ['id', '.', '>', '+', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '+'), ('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '+'), ('>', '+', '<'), ('+', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP id/NN) ./. >/CC (NP +/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['id', '+ <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 91 =============================

id .> *id$ $ <. 


>> Tokens are: 
 ['id', '.', '>', '*', 'id', '$', '$', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '*'), ('*', 'id'), ('id', '$'), ('$', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '*'), ('>', '*', 'id'), ('*', 'id', '$'), ('id', '$', '$'), ('$', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('*', 'JJ'), ('id', 'JJ'), ('$', '$'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S (NP id/NN) ./. >/CC */JJ id/JJ $/$ $/$ (NP </NNP) ./.) 


>> Noun Phrases are: 
 ['id', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 92 =============================

id .> + <. 


>> Tokens are: 
 ['id', '.', '>', '+', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '+'), ('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '+'), ('>', '+', '<'), ('+', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP id/NN) ./. >/CC (NP +/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['id', '+ <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 93 =============================

id .> *<. 


>> Tokens are: 
 ['id', '.', '>', '*', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '*'), ('>', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('*', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP id/NN) ./. >/CC (NP */JJ </NN) ./.) 


>> Noun Phrases are: 
 ['id', '* <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 94 =============================

id$ $ <. 


>> Tokens are: 
 ['id', '$', '$', '<', '.']

>> Bigrams are: 
 [('id', '$'), ('$', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '$', '$'), ('$', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('id', 'JJ'), ('$', '$'), ('$', '$'), ('<', 'NNP'), ('.', '.')]

 (S id/JJ $/$ $/$ (NP </NNP) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('$', '$'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 95 =============================

id .> + <. 


>> Tokens are: 
 ['id', '.', '>', '+', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '+'), ('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '+'), ('>', '+', '<'), ('+', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP id/NN) ./. >/CC (NP +/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['id', '+ <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 96 =============================

id .> *<. 


>> Tokens are: 
 ['id', '.', '>', '*', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '*'), ('>', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'CC'), ('*', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP id/NN) ./. >/CC (NP */JJ </NN) ./.) 


>> Noun Phrases are: 
 ['id', '* <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 97 =============================

id .> $  	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['id', '.', '>', '$', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('id', '.'), ('.', '>'), ('>', '$'), ('$', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('id', '.', '>'), ('.', '>', '$'), ('>', '$', '+'), ('$', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('id', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('+', 'JJ'), ('*', 'NNP'), ('id', 'POS'), ('$', '$'), ('+', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S
  (NP id/NN)
  ./.
  >/JJ
  $/$
  (NP +/JJ */NNP)
  id/POS
  $/$
  (NP +/NN)
  ./.
  (NP >/JJ </NN)
  ./.) 


>> Noun Phrases are: 
 ['id', '+ *', '+', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 98 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 99 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 100 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 101 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 102 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 103 =============================

Step 4: Parse the string using precedence table     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing 	$ <. 


>> Tokens are: 
 ['Step', '4', ':', 'Parse', 'string', 'using', 'precedence', 'table', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'Operator', 'precedence', 'parsing', '$', '<', '.']

>> Bigrams are: 
 [('Step', '4'), ('4', ':'), (':', 'Parse'), ('Parse', 'string'), ('string', 'using'), ('using', 'precedence'), ('precedence', 'table'), ('table', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'Operator'), ('Operator', 'precedence'), ('precedence', 'parsing'), ('parsing', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('Step', '4', ':'), ('4', ':', 'Parse'), (':', 'Parse', 'string'), ('Parse', 'string', 'using'), ('string', 'using', 'precedence'), ('using', 'precedence', 'table'), ('precedence', 'table', 'Prof.'), ('table', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'Operator'), (':', 'Operator', 'precedence'), ('Operator', 'precedence', 'parsing'), ('precedence', 'parsing', '$'), ('parsing', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('Step', 'NN'), ('4', 'CD'), (':', ':'), ('Parse', 'NN'), ('string', 'VBG'), ('using', 'VBG'), ('precedence', 'NN'), ('table', 'JJ'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('$', '$'), ('<', 'CD'), ('.', '.')]

 (S
  (NP Step/NN)
  4/CD
  :/:
  (NP Parse/NN)
  string/VBG
  using/VBG
  (NP precedence/NN)
  (NP table/JJ Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP Operator/NN precedence/NN)
  parsing/VBG
  $/$
  </CD
  ./.) 


>> Noun Phrases are: 
 ['Step', 'Parse', 'precedence', 'table Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'Operator precedence']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'pars'), ('string', 'string'), ('using', 'use'), ('precedence', 'preced'), ('table', 'tabl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'pars'), ('string', 'string'), ('using', 'use'), ('precedence', 'preced'), ('table', 'tabl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('Operator', 'oper'), ('precedence', 'preced'), ('parsing', 'pars'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Step', 'Step'), ('4', '4'), (':', ':'), ('Parse', 'Parse'), ('string', 'string'), ('using', 'using'), ('precedence', 'precedence'), ('table', 'table'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 104 =============================

Id .> + <. 


>> Tokens are: 
 ['Id', '.', '>', '+', '<', '.']

>> Bigrams are: 
 [('Id', '.'), ('.', '>'), ('>', '+'), ('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('Id', '.', '>'), ('.', '>', '+'), ('>', '+', '<'), ('+', '<', '.')]

>> POS Tags are: 
 [('Id', 'NNP'), ('.', '.'), ('>', 'VB'), ('+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP Id/NNP) ./. >/VB (NP +/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['Id', '+ <']

>> Named Entities are: 
 [('GPE', 'Id')] 

>> Stemming using Porter Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Id', 'Id'), ('.', '.'), ('>', '>'), ('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 105 =============================

Id .> * <. 


>> Tokens are: 
 ['Id', '.', '>', '*', '<', '.']

>> Bigrams are: 
 [('Id', '.'), ('.', '>'), ('>', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('Id', '.', '>'), ('.', '>', '*'), ('>', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('Id', 'NNP'), ('.', '.'), ('>', 'VB'), ('*', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP Id/NNP) ./. >/VB (NP */JJ </NN) ./.) 


>> Noun Phrases are: 
 ['Id', '* <']

>> Named Entities are: 
 [('GPE', 'Id')] 

>> Stemming using Porter Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Id', 'Id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 106 =============================

Id .> $	Handle id is obtained between <. 


>> Tokens are: 
 ['Id', '.', '>', '$', 'Handle', 'id', 'obtained', '<', '.']

>> Bigrams are: 
 [('Id', '.'), ('.', '>'), ('>', '$'), ('$', 'Handle'), ('Handle', 'id'), ('id', 'obtained'), ('obtained', '<'), ('<', '.')]

>> Trigrams are: 
 [('Id', '.', '>'), ('.', '>', '$'), ('>', '$', 'Handle'), ('$', 'Handle', 'id'), ('Handle', 'id', 'obtained'), ('id', 'obtained', '<'), ('obtained', '<', '.')]

>> POS Tags are: 
 [('Id', 'NNP'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('Handle', 'NNP'), ('id', 'NN'), ('obtained', 'VBD'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP Id/NNP)
  ./.
  >/JJ
  $/$
  (NP Handle/NNP id/NN)
  obtained/VBD
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['Id', 'Handle id', '<']

>> Named Entities are: 
 [('GPE', 'Id'), ('GPE', 'Handle')] 

>> Stemming using Porter Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'handl'), ('id', 'id'), ('obtained', 'obtain'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'handl'), ('id', 'id'), ('obtained', 'obtain'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Id', 'Id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'Handle'), ('id', 'id'), ('obtained', 'obtained'), ('<', '<'), ('.', '.')]



============================ Sentence 107 =============================

and .> Reduce this by Fid  	$ F + <. 


>> Tokens are: 
 ['.', '>', 'Reduce', 'F\uf0e0id', '$', 'F', '+', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'Reduce'), ('Reduce', 'F\uf0e0id'), ('F\uf0e0id', '$'), ('$', 'F'), ('F', '+'), ('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'Reduce'), ('>', 'Reduce', 'F\uf0e0id'), ('Reduce', 'F\uf0e0id', '$'), ('F\uf0e0id', '$', 'F'), ('$', 'F', '+'), ('F', '+', '<'), ('+', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('Reduce', 'NNP'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NNP'), ('+', 'NNP'), ('<', 'NNP'), ('.', '.')]

 (S ./. (NP >/NN Reduce/NNP Fid/NNP) $/$ (NP F/NNP +/NNP </NNP) ./.) 


>> Noun Phrases are: 
 ['> Reduce F\uf0e0id', 'F + <']

>> Named Entities are: 
 [('PERSON', 'Reduce')] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('Reduce', 'Reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'F'), ('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 108 =============================

Id .> * <. 


>> Tokens are: 
 ['Id', '.', '>', '*', '<', '.']

>> Bigrams are: 
 [('Id', '.'), ('.', '>'), ('>', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('Id', '.', '>'), ('.', '>', '*'), ('>', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('Id', 'NNP'), ('.', '.'), ('>', 'VB'), ('*', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP Id/NNP) ./. >/VB (NP */JJ </NN) ./.) 


>> Noun Phrases are: 
 ['Id', '* <']

>> Named Entities are: 
 [('GPE', 'Id')] 

>> Stemming using Porter Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Id', 'Id'), ('.', '.'), ('>', '>'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 109 =============================

Id .> $	Handle id is obtained between <. 


>> Tokens are: 
 ['Id', '.', '>', '$', 'Handle', 'id', 'obtained', '<', '.']

>> Bigrams are: 
 [('Id', '.'), ('.', '>'), ('>', '$'), ('$', 'Handle'), ('Handle', 'id'), ('id', 'obtained'), ('obtained', '<'), ('<', '.')]

>> Trigrams are: 
 [('Id', '.', '>'), ('.', '>', '$'), ('>', '$', 'Handle'), ('$', 'Handle', 'id'), ('Handle', 'id', 'obtained'), ('id', 'obtained', '<'), ('obtained', '<', '.')]

>> POS Tags are: 
 [('Id', 'NNP'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('Handle', 'NNP'), ('id', 'NN'), ('obtained', 'VBD'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP Id/NNP)
  ./.
  >/JJ
  $/$
  (NP Handle/NNP id/NN)
  obtained/VBD
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['Id', 'Handle id', '<']

>> Named Entities are: 
 [('GPE', 'Id'), ('GPE', 'Handle')] 

>> Stemming using Porter Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'handl'), ('id', 'id'), ('obtained', 'obtain'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'handl'), ('id', 'id'), ('obtained', 'obtain'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Id', 'Id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'Handle'), ('id', 'id'), ('obtained', 'obtained'), ('<', '<'), ('.', '.')]



============================ Sentence 110 =============================

and .> Reduce this by Fid  	$ F + F * <. 


>> Tokens are: 
 ['.', '>', 'Reduce', 'F\uf0e0id', '$', 'F', '+', 'F', '*', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'Reduce'), ('Reduce', 'F\uf0e0id'), ('F\uf0e0id', '$'), ('$', 'F'), ('F', '+'), ('+', 'F'), ('F', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'Reduce'), ('>', 'Reduce', 'F\uf0e0id'), ('Reduce', 'F\uf0e0id', '$'), ('F\uf0e0id', '$', 'F'), ('$', 'F', '+'), ('F', '+', 'F'), ('+', 'F', '*'), ('F', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('Reduce', 'NNP'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NNP'), ('+', 'NNP'), ('F', 'NNP'), ('*', 'NNP'), ('<', 'NNP'), ('.', '.')]

 (S
  ./.
  (NP >/NN Reduce/NNP Fid/NNP)
  $/$
  (NP F/NNP +/NNP F/NNP */NNP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['> Reduce F\uf0e0id', 'F + F * <']

>> Named Entities are: 
 [('PERSON', 'Reduce')] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('F', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('F', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('Reduce', 'Reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'F'), ('+', '+'), ('F', 'F'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 111 =============================

Id .> $	Handle id is obtained between <. 


>> Tokens are: 
 ['Id', '.', '>', '$', 'Handle', 'id', 'obtained', '<', '.']

>> Bigrams are: 
 [('Id', '.'), ('.', '>'), ('>', '$'), ('$', 'Handle'), ('Handle', 'id'), ('id', 'obtained'), ('obtained', '<'), ('<', '.')]

>> Trigrams are: 
 [('Id', '.', '>'), ('.', '>', '$'), ('>', '$', 'Handle'), ('$', 'Handle', 'id'), ('Handle', 'id', 'obtained'), ('id', 'obtained', '<'), ('obtained', '<', '.')]

>> POS Tags are: 
 [('Id', 'NNP'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('Handle', 'NNP'), ('id', 'NN'), ('obtained', 'VBD'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP Id/NNP)
  ./.
  >/JJ
  $/$
  (NP Handle/NNP id/NN)
  obtained/VBD
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['Id', 'Handle id', '<']

>> Named Entities are: 
 [('GPE', 'Id'), ('GPE', 'Handle')] 

>> Stemming using Porter Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'handl'), ('id', 'id'), ('obtained', 'obtain'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Id', 'id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'handl'), ('id', 'id'), ('obtained', 'obtain'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Id', 'Id'), ('.', '.'), ('>', '>'), ('$', '$'), ('Handle', 'Handle'), ('id', 'id'), ('obtained', 'obtained'), ('<', '<'), ('.', '.')]



============================ Sentence 112 =============================

and .> Reduce this by Fid  	$ F + F * F $	Perform appropriate reductions of all nonterminals. 


>> Tokens are: 
 ['.', '>', 'Reduce', 'F\uf0e0id', '$', 'F', '+', 'F', '*', 'F', '$', 'Perform', 'appropriate', 'reductions', 'nonterminals', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'Reduce'), ('Reduce', 'F\uf0e0id'), ('F\uf0e0id', '$'), ('$', 'F'), ('F', '+'), ('+', 'F'), ('F', '*'), ('*', 'F'), ('F', '$'), ('$', 'Perform'), ('Perform', 'appropriate'), ('appropriate', 'reductions'), ('reductions', 'nonterminals'), ('nonterminals', '.')]

>> Trigrams are: 
 [('.', '>', 'Reduce'), ('>', 'Reduce', 'F\uf0e0id'), ('Reduce', 'F\uf0e0id', '$'), ('F\uf0e0id', '$', 'F'), ('$', 'F', '+'), ('F', '+', 'F'), ('+', 'F', '*'), ('F', '*', 'F'), ('*', 'F', '$'), ('F', '$', 'Perform'), ('$', 'Perform', 'appropriate'), ('Perform', 'appropriate', 'reductions'), ('appropriate', 'reductions', 'nonterminals'), ('reductions', 'nonterminals', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('Reduce', 'NNP'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NNP'), ('+', 'NNP'), ('F', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('$', '$'), ('Perform', 'NNP'), ('appropriate', 'JJ'), ('reductions', 'NNS'), ('nonterminals', 'NNS'), ('.', '.')]

 (S
  ./.
  (NP >/NN Reduce/NNP Fid/NNP)
  $/$
  (NP F/NNP +/NNP F/NNP */NNP F/NNP)
  $/$
  (NP Perform/NNP)
  (NP appropriate/JJ reductions/NNS nonterminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['> Reduce F\uf0e0id', 'F + F * F', 'Perform', 'appropriate reductions nonterminals']

>> Named Entities are: 
 [('PERSON', 'Reduce'), ('PERSON', 'Perform')] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('F', 'f'), ('*', '*'), ('F', 'f'), ('$', '$'), ('Perform', 'perform'), ('appropriate', 'appropri'), ('reductions', 'reduct'), ('nonterminals', 'nontermin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('Reduce', 'reduc'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('F', 'f'), ('*', '*'), ('F', 'f'), ('$', '$'), ('Perform', 'perform'), ('appropriate', 'appropri'), ('reductions', 'reduct'), ('nonterminals', 'nontermin'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('Reduce', 'Reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'F'), ('+', '+'), ('F', 'F'), ('*', '*'), ('F', 'F'), ('$', '$'), ('Perform', 'Perform'), ('appropriate', 'appropriate'), ('reductions', 'reduction'), ('nonterminals', 'nonterminals'), ('.', '.')]



============================ Sentence 113 =============================

$ E + T * F $	Remove all non terminals. 


>> Tokens are: 
 ['$', 'E', '+', 'T', '*', 'F', '$', 'Remove', 'non', 'terminals', '.']

>> Bigrams are: 
 [('$', 'E'), ('E', '+'), ('+', 'T'), ('T', '*'), ('*', 'F'), ('F', '$'), ('$', 'Remove'), ('Remove', 'non'), ('non', 'terminals'), ('terminals', '.')]

>> Trigrams are: 
 [('$', 'E', '+'), ('E', '+', 'T'), ('+', 'T', '*'), ('T', '*', 'F'), ('*', 'F', '$'), ('F', '$', 'Remove'), ('$', 'Remove', 'non'), ('Remove', 'non', 'terminals'), ('non', 'terminals', '.')]

>> POS Tags are: 
 [('$', '$'), ('E', 'NNP'), ('+', 'NNP'), ('T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('$', '$'), ('Remove', 'NNP'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')]

 (S
  $/$
  (NP E/NNP +/NNP T/NNP */NNP F/NNP)
  $/$
  (NP Remove/NNP non/NN terminals/NNS)
  ./.) 


>> Noun Phrases are: 
 ['E + T * F', 'Remove non terminals']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('$', '$'), ('E', 'e'), ('+', '+'), ('T', 't'), ('*', '*'), ('F', 'f'), ('$', '$'), ('Remove', 'remov'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('$', '$'), ('E', 'e'), ('+', '+'), ('T', 't'), ('*', '*'), ('F', 'f'), ('$', '$'), ('Remove', 'remov'), ('non', 'non'), ('terminals', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('$', '$'), ('E', 'E'), ('+', '+'), ('T', 'T'), ('*', '*'), ('F', 'F'), ('$', '$'), ('Remove', 'Remove'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')]



============================ Sentence 114 =============================

$  +  *  $	Place relation between  operators  	$ <. 


>> Tokens are: 
 ['$', '+', '*', '$', 'Place', 'relation', 'operators', '$', '<', '.']

>> Bigrams are: 
 [('$', '+'), ('+', '*'), ('*', '$'), ('$', 'Place'), ('Place', 'relation'), ('relation', 'operators'), ('operators', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('$', '+', '*'), ('+', '*', '$'), ('*', '$', 'Place'), ('$', 'Place', 'relation'), ('Place', 'relation', 'operators'), ('relation', 'operators', '$'), ('operators', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('$', '$'), ('+', 'CD'), ('*', 'NNP'), ('$', '$'), ('Place', 'NNP'), ('relation', 'NN'), ('operators', 'NNS'), ('$', '$'), ('<', 'CD'), ('.', '.')]

 (S
  $/$
  +/CD
  (NP */NNP)
  $/$
  (NP Place/NNP relation/NN operators/NNS)
  $/$
  </CD
  ./.) 


>> Noun Phrases are: 
 ['*', 'Place relation operators']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('$', '$'), ('+', '+'), ('*', '*'), ('$', '$'), ('Place', 'place'), ('relation', 'relat'), ('operators', 'oper'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('$', '$'), ('+', '+'), ('*', '*'), ('$', '$'), ('Place', 'place'), ('relation', 'relat'), ('operators', 'oper'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('$', '$'), ('+', '+'), ('*', '*'), ('$', '$'), ('Place', 'Place'), ('relation', 'relation'), ('operators', 'operator'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 115 =============================

+ <. 


>> Tokens are: 
 ['+', '<', '.']

>> Bigrams are: 
 [('+', '<'), ('<', '.')]

>> Trigrams are: 
 [('+', '<', '.')]

>> POS Tags are: 
 [('+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S (NP +/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['+ <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('+', '+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('+', '+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('+', '+'), ('<', '<'), ('.', '.')]



============================ Sentence 116 =============================

* >$	The * operator is surrounded by <. 


>> Tokens are: 
 ['*', '>', '$', 'The', '*', 'operator', 'surrounded', '<', '.']

>> Bigrams are: 
 [('*', '>'), ('>', '$'), ('$', 'The'), ('The', '*'), ('*', 'operator'), ('operator', 'surrounded'), ('surrounded', '<'), ('<', '.')]

>> Trigrams are: 
 [('*', '>', '$'), ('>', '$', 'The'), ('$', 'The', '*'), ('The', '*', 'operator'), ('*', 'operator', 'surrounded'), ('operator', 'surrounded', '<'), ('surrounded', '<', '.')]

>> POS Tags are: 
 [('*', 'JJ'), ('>', 'NNP'), ('$', '$'), ('The', 'DT'), ('*', 'NNP'), ('operator', 'NN'), ('surrounded', 'VBD'), ('<', 'NNP'), ('.', '.')]

 (S
  (NP */JJ >/NNP)
  $/$
  (NP The/DT */NNP operator/NN)
  surrounded/VBD
  (NP </NNP)
  ./.) 


>> Noun Phrases are: 
 ['* >', 'The * operator', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('*', '*'), ('>', '>'), ('$', '$'), ('The', 'the'), ('*', '*'), ('operator', 'oper'), ('surrounded', 'surround'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('*', '*'), ('>', '>'), ('$', '$'), ('The', 'the'), ('*', '*'), ('operator', 'oper'), ('surrounded', 'surround'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('*', '*'), ('>', '>'), ('$', '$'), ('The', 'The'), ('*', '*'), ('operator', 'operator'), ('surrounded', 'surrounded'), ('<', '<'), ('.', '.')]



============================ Sentence 117 =============================

and .>. 


>> Tokens are: 
 ['.', '>', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '.')]

>> Trigrams are: 
 [('.', '>', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('.', '.')]

 (S ./. (NP >/NN) ./.) 


>> Noun Phrases are: 
 ['>']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('.', '.')]



============================ Sentence 118 =============================

This indicates * becomes handle so reduce by TT*F.  	$ <. 


>> Tokens are: 
 ['This', 'indicates', '*', 'becomes', 'handle', 'reduce', 'T\uf0e0T', '*', 'F.', '$', '<', '.']

>> Bigrams are: 
 [('This', 'indicates'), ('indicates', '*'), ('*', 'becomes'), ('becomes', 'handle'), ('handle', 'reduce'), ('reduce', 'T\uf0e0T'), ('T\uf0e0T', '*'), ('*', 'F.'), ('F.', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('This', 'indicates', '*'), ('indicates', '*', 'becomes'), ('*', 'becomes', 'handle'), ('becomes', 'handle', 'reduce'), ('handle', 'reduce', 'T\uf0e0T'), ('reduce', 'T\uf0e0T', '*'), ('T\uf0e0T', '*', 'F.'), ('*', 'F.', '$'), ('F.', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('indicates', 'VBZ'), ('*', 'JJ'), ('becomes', 'NNS'), ('handle', 'VBP'), ('reduce', 'VB'), ('T\uf0e0T', 'NNP'), ('*', 'NNP'), ('F.', 'NNP'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  This/DT
  indicates/VBZ
  (NP */JJ becomes/NNS)
  handle/VBP
  reduce/VB
  (NP TT/NNP */NNP F./NNP)
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['* becomes', 'T\uf0e0T * F.', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('indicates', 'indic'), ('*', '*'), ('becomes', 'becom'), ('handle', 'handl'), ('reduce', 'reduc'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F.', 'f.'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('indicates', 'indic'), ('*', '*'), ('becomes', 'becom'), ('handle', 'handl'), ('reduce', 'reduc'), ('T\uf0e0T', 't\uf0e0t'), ('*', '*'), ('F.', 'f.'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('indicates', 'indicates'), ('*', '*'), ('becomes', 'becomes'), ('handle', 'handle'), ('reduce', 'reduce'), ('T\uf0e0T', 'T\uf0e0T'), ('*', '*'), ('F.', 'F.'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 119 =============================

+ >$	+ becomes handle. 


>> Tokens are: 
 ['+', '>', '$', '+', 'becomes', 'handle', '.']

>> Bigrams are: 
 [('+', '>'), ('>', '$'), ('$', '+'), ('+', 'becomes'), ('becomes', 'handle'), ('handle', '.')]

>> Trigrams are: 
 [('+', '>', '$'), ('>', '$', '+'), ('$', '+', 'becomes'), ('+', 'becomes', 'handle'), ('becomes', 'handle', '.')]

>> POS Tags are: 
 [('+', 'JJ'), ('>', 'NNP'), ('$', '$'), ('+', 'JJ'), ('becomes', 'VBZ'), ('handle', 'NN'), ('.', '.')]

 (S (NP +/JJ >/NNP) $/$ +/JJ becomes/VBZ (NP handle/NN) ./.) 


>> Noun Phrases are: 
 ['+ >', 'handle']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('+', '+'), ('>', '>'), ('$', '$'), ('+', '+'), ('becomes', 'becom'), ('handle', 'handl'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('+', '+'), ('>', '>'), ('$', '$'), ('+', '+'), ('becomes', 'becom'), ('handle', 'handl'), ('.', '.')]

>> Lemmatization: 
 [('+', '+'), ('>', '>'), ('$', '$'), ('+', '+'), ('becomes', 'becomes'), ('handle', 'handle'), ('.', '.')]



============================ Sentence 120 =============================

Hence reduce by EE+T. 


>> Tokens are: 
 ['Hence', 'reduce', 'E\uf0e0E+T', '.']

>> Bigrams are: 
 [('Hence', 'reduce'), ('reduce', 'E\uf0e0E+T'), ('E\uf0e0E+T', '.')]

>> Trigrams are: 
 [('Hence', 'reduce', 'E\uf0e0E+T'), ('reduce', 'E\uf0e0E+T', '.')]

>> POS Tags are: 
 [('Hence', 'NNP'), ('reduce', 'VB'), ('E\uf0e0E+T', 'NNP'), ('.', '.')]

 (S (NP Hence/NNP) reduce/VB (NP EE+T/NNP) ./.) 


>> Noun Phrases are: 
 ['Hence', 'E\uf0e0E+T']

>> Named Entities are: 
 [('GPE', 'Hence')] 

>> Stemming using Porter Stemmer: 
 [('Hence', 'henc'), ('reduce', 'reduc'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Hence', 'henc'), ('reduce', 'reduc'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('.', '.')]

>> Lemmatization: 
 [('Hence', 'Hence'), ('reduce', 'reduce'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('.', '.')]



============================ Sentence 121 =============================

$  $	Parsing Done           Step 4: Parse the string using precedence table  Scan the input string until first .> is encountered. 


>> Tokens are: 
 ['$', '$', 'Parsing', 'Done', 'Step', '4', ':', 'Parse', 'string', 'using', 'precedence', 'table', 'Scan', 'input', 'string', 'first', '.', '>', 'encountered', '.']

>> Bigrams are: 
 [('$', '$'), ('$', 'Parsing'), ('Parsing', 'Done'), ('Done', 'Step'), ('Step', '4'), ('4', ':'), (':', 'Parse'), ('Parse', 'string'), ('string', 'using'), ('using', 'precedence'), ('precedence', 'table'), ('table', 'Scan'), ('Scan', 'input'), ('input', 'string'), ('string', 'first'), ('first', '.'), ('.', '>'), ('>', 'encountered'), ('encountered', '.')]

>> Trigrams are: 
 [('$', '$', 'Parsing'), ('$', 'Parsing', 'Done'), ('Parsing', 'Done', 'Step'), ('Done', 'Step', '4'), ('Step', '4', ':'), ('4', ':', 'Parse'), (':', 'Parse', 'string'), ('Parse', 'string', 'using'), ('string', 'using', 'precedence'), ('using', 'precedence', 'table'), ('precedence', 'table', 'Scan'), ('table', 'Scan', 'input'), ('Scan', 'input', 'string'), ('input', 'string', 'first'), ('string', 'first', '.'), ('first', '.', '>'), ('.', '>', 'encountered'), ('>', 'encountered', '.')]

>> POS Tags are: 
 [('$', '$'), ('$', '$'), ('Parsing', 'VBG'), ('Done', 'NNP'), ('Step', 'NNP'), ('4', 'CD'), (':', ':'), ('Parse', 'NN'), ('string', 'VBG'), ('using', 'VBG'), ('precedence', 'NN'), ('table', 'JJ'), ('Scan', 'NNP'), ('input', 'NN'), ('string', 'VBG'), ('first', 'RB'), ('.', '.'), ('>', 'NN'), ('encountered', 'VBD'), ('.', '.')]

 (S
  $/$
  $/$
  Parsing/VBG
  (NP Done/NNP Step/NNP)
  4/CD
  :/:
  (NP Parse/NN)
  string/VBG
  using/VBG
  (NP precedence/NN)
  (NP table/JJ Scan/NNP input/NN)
  string/VBG
  first/RB
  ./.
  (NP >/NN)
  encountered/VBD
  ./.) 


>> Noun Phrases are: 
 ['Done Step', 'Parse', 'precedence', 'table Scan input', '>']

>> Named Entities are: 
 [('PERSON', 'Done Step')] 

>> Stemming using Porter Stemmer: 
 [('$', '$'), ('$', '$'), ('Parsing', 'pars'), ('Done', 'done'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'pars'), ('string', 'string'), ('using', 'use'), ('precedence', 'preced'), ('table', 'tabl'), ('Scan', 'scan'), ('input', 'input'), ('string', 'string'), ('first', 'first'), ('.', '.'), ('>', '>'), ('encountered', 'encount'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('$', '$'), ('$', '$'), ('Parsing', 'pars'), ('Done', 'done'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'pars'), ('string', 'string'), ('using', 'use'), ('precedence', 'preced'), ('table', 'tabl'), ('Scan', 'scan'), ('input', 'input'), ('string', 'string'), ('first', 'first'), ('.', '.'), ('>', '>'), ('encountered', 'encount'), ('.', '.')]

>> Lemmatization: 
 [('$', '$'), ('$', '$'), ('Parsing', 'Parsing'), ('Done', 'Done'), ('Step', 'Step'), ('4', '4'), (':', ':'), ('Parse', 'Parse'), ('string', 'string'), ('using', 'using'), ('precedence', 'precedence'), ('table', 'table'), ('Scan', 'Scan'), ('input', 'input'), ('string', 'string'), ('first', 'first'), ('.', '.'), ('>', '>'), ('encountered', 'encountered'), ('.', '.')]



============================ Sentence 122 =============================

Scan backward until <. 


>> Tokens are: 
 ['Scan', 'backward', '<', '.']

>> Bigrams are: 
 [('Scan', 'backward'), ('backward', '<'), ('<', '.')]

>> Trigrams are: 
 [('Scan', 'backward', '<'), ('backward', '<', '.')]

>> POS Tags are: 
 [('Scan', 'JJ'), ('backward', 'NN'), ('<', 'NN'), ('.', '.')]

 (S (NP Scan/JJ backward/NN </NN) ./.) 


>> Noun Phrases are: 
 ['Scan backward <']

>> Named Entities are: 
 [('GPE', 'Scan')] 

>> Stemming using Porter Stemmer: 
 [('Scan', 'scan'), ('backward', 'backward'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Scan', 'scan'), ('backward', 'backward'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Scan', 'Scan'), ('backward', 'backward'), ('<', '<'), ('.', '.')]



============================ Sentence 123 =============================

is encountered. 


>> Tokens are: 
 ['encountered', '.']

>> Bigrams are: 
 [('encountered', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('encountered', 'VBN'), ('.', '.')]

 (S encountered/VBN ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('encountered', 'encount'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('encountered', 'encount'), ('.', '.')]

>> Lemmatization: 
 [('encountered', 'encountered'), ('.', '.')]



============================ Sentence 124 =============================

The handle is string between <. 


>> Tokens are: 
 ['The', 'handle', 'string', '<', '.']

>> Bigrams are: 
 [('The', 'handle'), ('handle', 'string'), ('string', '<'), ('<', '.')]

>> Trigrams are: 
 [('The', 'handle', 'string'), ('handle', 'string', '<'), ('string', '<', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('handle', 'NN'), ('string', 'VBG'), ('<', 'NN'), ('.', '.')]

 (S (NP The/DT handle/NN) string/VBG (NP </NN) ./.) 


>> Noun Phrases are: 
 ['The handle', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('handle', 'handl'), ('string', 'string'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('handle', 'handl'), ('string', 'string'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('handle', 'handle'), ('string', 'string'), ('<', '<'), ('.', '.')]



============================ Sentence 125 =============================

and  .>    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function Algorithm for constructing precedence functions Create functions  and  for each  that is terminal or . 


>> Tokens are: 
 ['.', '>', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', 'Algorithm', 'constructing', 'precedence', 'functions', 'Create', 'functions', 'terminal', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', 'Algorithm'), ('Algorithm', 'constructing'), ('constructing', 'precedence'), ('precedence', 'functions'), ('functions', 'Create'), ('Create', 'functions'), ('functions', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('.', '>', 'Prof.'), ('>', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', 'Algorithm'), ('function', 'Algorithm', 'constructing'), ('Algorithm', 'constructing', 'precedence'), ('constructing', 'precedence', 'functions'), ('precedence', 'functions', 'Create'), ('functions', 'Create', 'functions'), ('Create', 'functions', 'terminal'), ('functions', 'terminal', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'CC'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('Algorithm', 'NNP'), ('constructing', 'VBG'), ('precedence', 'NN'), ('functions', 'NNS'), ('Create', 'NNP'), ('functions', 'NNS'), ('terminal', 'NN'), ('.', '.')]

 (S
  ./.
  >/CC
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN Algorithm/NNP)
  constructing/VBG
  (NP
    precedence/NN
    functions/NNS
    Create/NNP
    functions/NNS
    terminal/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function Algorithm', 'precedence functions Create functions terminal']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Create')] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('Algorithm', 'algorithm'), ('constructing', 'construct'), ('precedence', 'preced'), ('functions', 'function'), ('Create', 'creat'), ('functions', 'function'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('Algorithm', 'algorithm'), ('constructing', 'construct'), ('precedence', 'preced'), ('functions', 'function'), ('Create', 'creat'), ('functions', 'function'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('Algorithm', 'Algorithm'), ('constructing', 'constructing'), ('precedence', 'precedence'), ('functions', 'function'), ('Create', 'Create'), ('functions', 'function'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 126 =============================

Partition the symbols in as many as groups possible, in such a way that  and  are in the same group if . 


>> Tokens are: 
 ['Partition', 'symbols', 'many', 'groups', 'possible', ',', 'way', 'group', '.']

>> Bigrams are: 
 [('Partition', 'symbols'), ('symbols', 'many'), ('many', 'groups'), ('groups', 'possible'), ('possible', ','), (',', 'way'), ('way', 'group'), ('group', '.')]

>> Trigrams are: 
 [('Partition', 'symbols', 'many'), ('symbols', 'many', 'groups'), ('many', 'groups', 'possible'), ('groups', 'possible', ','), ('possible', ',', 'way'), (',', 'way', 'group'), ('way', 'group', '.')]

>> POS Tags are: 
 [('Partition', 'NNP'), ('symbols', 'VBZ'), ('many', 'JJ'), ('groups', 'NNS'), ('possible', 'JJ'), (',', ','), ('way', 'NN'), ('group', 'NN'), ('.', '.')]

 (S
  (NP Partition/NNP)
  symbols/VBZ
  (NP many/JJ groups/NNS)
  possible/JJ
  ,/,
  (NP way/NN group/NN)
  ./.) 


>> Noun Phrases are: 
 ['Partition', 'many groups', 'way group']

>> Named Entities are: 
 [('GPE', 'Partition')] 

>> Stemming using Porter Stemmer: 
 [('Partition', 'partit'), ('symbols', 'symbol'), ('many', 'mani'), ('groups', 'group'), ('possible', 'possibl'), (',', ','), ('way', 'way'), ('group', 'group'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Partition', 'partit'), ('symbols', 'symbol'), ('many', 'mani'), ('groups', 'group'), ('possible', 'possibl'), (',', ','), ('way', 'way'), ('group', 'group'), ('.', '.')]

>> Lemmatization: 
 [('Partition', 'Partition'), ('symbols', 'symbol'), ('many', 'many'), ('groups', 'group'), ('possible', 'possible'), (',', ','), ('way', 'way'), ('group', 'group'), ('.', '.')]



============================ Sentence 127 =============================

Create a directed graph whose nodes are in the groups, next for each symbols do:  if , place an edge from the group of  to the group of  if , place an edge from the group of  to the group of  If the constructed graph has a cycle then no precedence functions exist. 


>> Tokens are: 
 ['Create', 'directed', 'graph', 'whose', 'nodes', 'groups', ',', 'next', 'symbols', ':', ',', 'place', 'edge', 'group', 'group', ',', 'place', 'edge', 'group', 'group', 'If', 'constructed', 'graph', 'cycle', 'precedence', 'functions', 'exist', '.']

>> Bigrams are: 
 [('Create', 'directed'), ('directed', 'graph'), ('graph', 'whose'), ('whose', 'nodes'), ('nodes', 'groups'), ('groups', ','), (',', 'next'), ('next', 'symbols'), ('symbols', ':'), (':', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'group'), ('group', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'group'), ('group', 'If'), ('If', 'constructed'), ('constructed', 'graph'), ('graph', 'cycle'), ('cycle', 'precedence'), ('precedence', 'functions'), ('functions', 'exist'), ('exist', '.')]

>> Trigrams are: 
 [('Create', 'directed', 'graph'), ('directed', 'graph', 'whose'), ('graph', 'whose', 'nodes'), ('whose', 'nodes', 'groups'), ('nodes', 'groups', ','), ('groups', ',', 'next'), (',', 'next', 'symbols'), ('next', 'symbols', ':'), ('symbols', ':', ','), (':', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'group'), ('group', 'group', ','), ('group', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'group'), ('group', 'group', 'If'), ('group', 'If', 'constructed'), ('If', 'constructed', 'graph'), ('constructed', 'graph', 'cycle'), ('graph', 'cycle', 'precedence'), ('cycle', 'precedence', 'functions'), ('precedence', 'functions', 'exist'), ('functions', 'exist', '.')]

>> POS Tags are: 
 [('Create', 'NNP'), ('directed', 'VBD'), ('graph', 'NNS'), ('whose', 'WP$'), ('nodes', 'NNS'), ('groups', 'NNS'), (',', ','), ('next', 'JJ'), ('symbols', 'NNS'), (':', ':'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('group', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('group', 'NN'), ('If', 'IN'), ('constructed', 'VBN'), ('graph', 'NN'), ('cycle', 'NN'), ('precedence', 'NN'), ('functions', 'NNS'), ('exist', 'VBP'), ('.', '.')]

 (S
  (NP Create/NNP)
  directed/VBD
  (NP graph/NNS)
  whose/WP$
  (NP nodes/NNS groups/NNS)
  ,/,
  (NP next/JJ symbols/NNS)
  :/:
  ,/,
  (NP place/NN edge/NN group/NN group/NN)
  ,/,
  (NP place/NN edge/NN group/NN group/NN)
  If/IN
  constructed/VBN
  (NP graph/NN cycle/NN precedence/NN functions/NNS)
  exist/VBP
  ./.) 


>> Noun Phrases are: 
 ['Create', 'graph', 'nodes groups', 'next symbols', 'place edge group group', 'place edge group group', 'graph cycle precedence functions']

>> Named Entities are: 
 [('GPE', 'Create')] 

>> Stemming using Porter Stemmer: 
 [('Create', 'creat'), ('directed', 'direct'), ('graph', 'graph'), ('whose', 'whose'), ('nodes', 'node'), ('groups', 'group'), (',', ','), ('next', 'next'), ('symbols', 'symbol'), (':', ':'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('group', 'group'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('group', 'group'), ('If', 'if'), ('constructed', 'construct'), ('graph', 'graph'), ('cycle', 'cycl'), ('precedence', 'preced'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Create', 'creat'), ('directed', 'direct'), ('graph', 'graph'), ('whose', 'whose'), ('nodes', 'node'), ('groups', 'group'), (',', ','), ('next', 'next'), ('symbols', 'symbol'), (':', ':'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('group', 'group'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('group', 'group'), ('If', 'if'), ('constructed', 'construct'), ('graph', 'graph'), ('cycle', 'cycl'), ('precedence', 'preced'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')]

>> Lemmatization: 
 [('Create', 'Create'), ('directed', 'directed'), ('graph', 'graph'), ('whose', 'whose'), ('nodes', 'node'), ('groups', 'group'), (',', ','), ('next', 'next'), ('symbols', 'symbol'), (':', ':'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('group', 'group'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('group', 'group'), ('If', 'If'), ('constructed', 'constructed'), ('graph', 'graph'), ('cycle', 'cycle'), ('precedence', 'precedence'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')]



============================ Sentence 128 =============================

When there are no cycles collect the length of the longest paths from the groups of  and respectively. 


>> Tokens are: 
 ['When', 'cycles', 'collect', 'length', 'longest', 'paths', 'groups', 'respectively', '.']

>> Bigrams are: 
 [('When', 'cycles'), ('cycles', 'collect'), ('collect', 'length'), ('length', 'longest'), ('longest', 'paths'), ('paths', 'groups'), ('groups', 'respectively'), ('respectively', '.')]

>> Trigrams are: 
 [('When', 'cycles', 'collect'), ('cycles', 'collect', 'length'), ('collect', 'length', 'longest'), ('length', 'longest', 'paths'), ('longest', 'paths', 'groups'), ('paths', 'groups', 'respectively'), ('groups', 'respectively', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('cycles', 'NNS'), ('collect', 'VBP'), ('length', 'NN'), ('longest', 'JJS'), ('paths', 'JJ'), ('groups', 'NNS'), ('respectively', 'RB'), ('.', '.')]

 (S
  When/WRB
  (NP cycles/NNS)
  collect/VBP
  (NP length/NN)
  longest/JJS
  (NP paths/JJ groups/NNS)
  respectively/RB
  ./.) 


>> Noun Phrases are: 
 ['cycles', 'length', 'paths groups']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('cycles', 'cycl'), ('collect', 'collect'), ('length', 'length'), ('longest', 'longest'), ('paths', 'path'), ('groups', 'group'), ('respectively', 'respect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('cycles', 'cycl'), ('collect', 'collect'), ('length', 'length'), ('longest', 'longest'), ('paths', 'path'), ('groups', 'group'), ('respectively', 'respect'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('cycles', 'cycle'), ('collect', 'collect'), ('length', 'length'), ('longest', 'longest'), ('paths', 'path'), ('groups', 'group'), ('respectively', 'respectively'), ('.', '.')]



============================ Sentence 129 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function Create functions fa and ga for each a that is terminal or $. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', 'Create', 'functions', 'fa', 'ga', 'terminal', '$', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', 'Create'), ('Create', 'functions'), ('functions', 'fa'), ('fa', 'ga'), ('ga', 'terminal'), ('terminal', '$'), ('$', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', 'Create'), ('function', 'Create', 'functions'), ('Create', 'functions', 'fa'), ('functions', 'fa', 'ga'), ('fa', 'ga', 'terminal'), ('ga', 'terminal', '$'), ('terminal', '$', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('Create', 'NNP'), ('functions', 'NNS'), ('fa', 'VBP'), ('ga', 'JJ'), ('terminal', 'JJ'), ('$', '$'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP
    ›/NNP
    Operator/NNP
    precedence/NN
    function/NN
    Create/NNP
    functions/NNS)
  fa/VBP
  ga/JJ
  terminal/JJ
  $/$
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function Create functions']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Create')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('Create', 'creat'), ('functions', 'function'), ('fa', 'fa'), ('ga', 'ga'), ('terminal', 'termin'), ('$', '$'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('Create', 'creat'), ('functions', 'function'), ('fa', 'fa'), ('ga', 'ga'), ('terminal', 'termin'), ('$', '$'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('Create', 'Create'), ('functions', 'function'), ('fa', 'fa'), ('ga', 'ga'), ('terminal', 'terminal'), ('$', '$'), ('.', '.')]



============================ Sentence 130 =============================

E E+T | T 	T T*F | F	F id f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function Partition the symbols in as many as groups possible, in such a way that fa and gb are in the same group if a = b.  f+ f* fid f$ g+ g* gid g$ 	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['E\uf0e0', 'E+T', '|', 'T', 'T\uf0e0', 'T', '*', 'F', '|', 'F', 'F\uf0e0', 'id', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', 'Partition', 'symbols', 'many', 'groups', 'possible', ',', 'way', 'fa', 'gb', 'group', '=', 'b.', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('E\uf0e0', 'E+T'), ('E+T', '|'), ('|', 'T'), ('T', 'T\uf0e0'), ('T\uf0e0', 'T'), ('T', '*'), ('*', 'F'), ('F', '|'), ('|', 'F'), ('F', 'F\uf0e0'), ('F\uf0e0', 'id'), ('id', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', 'Partition'), ('Partition', 'symbols'), ('symbols', 'many'), ('many', 'groups'), ('groups', 'possible'), ('possible', ','), (',', 'way'), ('way', 'fa'), ('fa', 'gb'), ('gb', 'group'), ('group', '='), ('=', 'b.'), ('b.', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('E\uf0e0', 'E+T', '|'), ('E+T', '|', 'T'), ('|', 'T', 'T\uf0e0'), ('T', 'T\uf0e0', 'T'), ('T\uf0e0', 'T', '*'), ('T', '*', 'F'), ('*', 'F', '|'), ('F', '|', 'F'), ('|', 'F', 'F\uf0e0'), ('F', 'F\uf0e0', 'id'), ('F\uf0e0', 'id', 'f+'), ('id', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', 'Partition'), ('function', 'Partition', 'symbols'), ('Partition', 'symbols', 'many'), ('symbols', 'many', 'groups'), ('many', 'groups', 'possible'), ('groups', 'possible', ','), ('possible', ',', 'way'), (',', 'way', 'fa'), ('way', 'fa', 'gb'), ('fa', 'gb', 'group'), ('gb', 'group', '='), ('group', '=', 'b.'), ('=', 'b.', 'f+'), ('b.', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', '+'), ('$', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('E\uf0e0', 'NNP'), ('E+T', 'NNP'), ('|', 'NNP'), ('T', 'NNP'), ('T\uf0e0', 'NNP'), ('T', 'NNP'), ('*', 'NNP'), ('F', 'NNP'), ('|', 'NNP'), ('F', 'NNP'), ('F\uf0e0', 'NNP'), ('id', 'NN'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('Partition', 'NNP'), ('symbols', 'VBZ'), ('many', 'JJ'), ('groups', 'NNS'), ('possible', 'JJ'), (',', ','), ('way', 'NN'), ('fa', 'JJ'), ('gb', 'NN'), ('group', 'NN'), ('=', 'NNP'), ('b.', 'VBZ'), ('f+', 'JJ'), ('f', 'JJ'), ('*', 'NN'), ('fid', 'NN'), ('f', 'VBD'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('+', 'CD'), ('*', 'NNP'), ('id', 'JJ'), ('$', '$'), ('+', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S
  (NP
    E/NNP
    E+T/NNP
    |/NNP
    T/NNP
    T/NNP
    T/NNP
    */NNP
    F/NNP
    |/NNP
    F/NNP
    F/NNP
    id/NN
    f+/NN
    f/NN
    */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN Partition/NNP)
  symbols/VBZ
  (NP many/JJ groups/NNS)
  possible/JJ
  ,/,
  (NP way/NN)
  (NP fa/JJ gb/NN group/NN =/NNP)
  b./VBZ
  (NP f+/JJ f/JJ */NN fid/NN)
  f/VBD
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  +/CD
  (NP */NNP)
  id/JJ
  $/$
  (NP +/NN)
  ./.
  (NP >/JJ </NN)
  ./.) 


>> Noun Phrases are: 
 ['E\uf0e0 E+T | T T\uf0e0 T * F | F F\uf0e0 id f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function Partition', 'many groups', 'way', 'fa gb group =', 'f+ f * fid', 'g+ g * gid', '*', '+', '> <']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Partition')] 

>> Stemming using Porter Stemmer: 
 [('E\uf0e0', 'e\uf0e0'), ('E+T', 'e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('Partition', 'partit'), ('symbols', 'symbol'), ('many', 'mani'), ('groups', 'group'), ('possible', 'possibl'), (',', ','), ('way', 'way'), ('fa', 'fa'), ('gb', 'gb'), ('group', 'group'), ('=', '='), ('b.', 'b.'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('E\uf0e0', 'e\uf0e0'), ('E+T', 'e+t'), ('|', '|'), ('T', 't'), ('T\uf0e0', 't\uf0e0'), ('T', 't'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('Partition', 'partit'), ('symbols', 'symbol'), ('many', 'mani'), ('groups', 'group'), ('possible', 'possibl'), (',', ','), ('way', 'way'), ('fa', 'fa'), ('gb', 'gb'), ('group', 'group'), ('=', '='), ('b.', 'b.'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('E\uf0e0', 'E\uf0e0'), ('E+T', 'E+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T', 'T'), ('*', '*'), ('F', 'F'), ('|', '|'), ('F', 'F'), ('F\uf0e0', 'F\uf0e0'), ('id', 'id'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('Partition', 'Partition'), ('symbols', 'symbol'), ('many', 'many'), ('groups', 'group'), ('possible', 'possible'), (',', ','), ('way', 'way'), ('fa', 'fa'), ('gb', 'gb'), ('group', 'group'), ('=', '='), ('b.', 'b.'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 131 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 132 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 133 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 134 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 135 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 136 =============================

. 


>> Tokens are: 
 ['.']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('.', '.')]

 (S ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.')]

>> Lemmatization: 
 [('.', '.')]



============================ Sentence 137 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb   f+ f* fid f$ g+ g* gid g$ f+ .> g+ f+  g+ f* .> g+ f*  g+ fid .> g+ fid  g+ f$ <. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '<', '·', 'b', ',', 'place', 'edge', 'group', 'gb', 'group', 'fa', '·', '>', 'b', ',', 'place', 'edge', 'group', 'fa', 'group', 'gb', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'f+', '.', '>', 'g+', 'f+', '\uf0e0', 'g+', 'f', '*', '.', '>', 'g+', 'f', '*', '\uf0e0', 'g+', 'fid', '.', '>', 'g+', 'fid', '\uf0e0', 'g+', 'f', '$', '<', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '<'), ('<', '·'), ('·', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'gb'), ('gb', 'group'), ('group', 'fa'), ('fa', '·'), ('·', '>'), ('>', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'fa'), ('fa', 'group'), ('group', 'gb'), ('gb', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'f+'), ('f+', '.'), ('.', '>'), ('>', 'g+'), ('g+', 'f+'), ('f+', '\uf0e0'), ('\uf0e0', 'g+'), ('g+', 'f'), ('f', '*'), ('*', '.'), ('.', '>'), ('>', 'g+'), ('g+', 'f'), ('f', '*'), ('*', '\uf0e0'), ('\uf0e0', 'g+'), ('g+', 'fid'), ('fid', '.'), ('.', '>'), ('>', 'g+'), ('g+', 'fid'), ('fid', '\uf0e0'), ('\uf0e0', 'g+'), ('g+', 'f'), ('f', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '<'), ('function', '<', '·'), ('<', '·', 'b'), ('·', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'gb'), ('group', 'gb', 'group'), ('gb', 'group', 'fa'), ('group', 'fa', '·'), ('fa', '·', '>'), ('·', '>', 'b'), ('>', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'fa'), ('group', 'fa', 'group'), ('fa', 'group', 'gb'), ('group', 'gb', 'f+'), ('gb', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'f+'), ('$', 'f+', '.'), ('f+', '.', '>'), ('.', '>', 'g+'), ('>', 'g+', 'f+'), ('g+', 'f+', '\uf0e0'), ('f+', '\uf0e0', 'g+'), ('\uf0e0', 'g+', 'f'), ('g+', 'f', '*'), ('f', '*', '.'), ('*', '.', '>'), ('.', '>', 'g+'), ('>', 'g+', 'f'), ('g+', 'f', '*'), ('f', '*', '\uf0e0'), ('*', '\uf0e0', 'g+'), ('\uf0e0', 'g+', 'fid'), ('g+', 'fid', '.'), ('fid', '.', '>'), ('.', '>', 'g+'), ('>', 'g+', 'fid'), ('g+', 'fid', '\uf0e0'), ('fid', '\uf0e0', 'g+'), ('\uf0e0', 'g+', 'f'), ('g+', 'f', '$'), ('f', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('<', 'NNP'), ('·', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('gb', 'VBD'), ('group', 'NN'), ('fa', 'NN'), ('·', 'NNP'), ('>', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('fa', 'VBD'), ('group', 'NN'), ('gb', 'NN'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('f+', 'NN'), ('.', '.'), ('>', 'CC'), ('g+', 'JJ'), ('f+', 'NN'), ('\uf0e0', 'NNP'), ('g+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('.', '.'), ('>', 'VB'), ('g+', 'JJ'), ('f', 'NN'), ('*', 'NNP'), ('\uf0e0', 'NNP'), ('g+', 'NN'), ('fid', 'NN'), ('.', '.'), ('>', 'CC'), ('g+', 'JJ'), ('fid', 'NN'), ('\uf0e0', 'NNP'), ('g+', 'NN'), ('f', 'VBD'), ('$', '$'), ('<', 'CD'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN </NNP ·/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  gb/VBD
  (NP group/NN fa/NN ·/NNP >/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  fa/VBD
  (NP group/NN gb/NN f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP f+/NN)
  ./.
  >/CC
  (NP g+/JJ f+/NN /NNP g+/NN f/NN */NNP)
  ./.
  >/VB
  (NP g+/JJ f/NN */NNP /NNP g+/NN fid/NN)
  ./.
  >/CC
  (NP g+/JJ fid/NN /NNP g+/NN)
  f/VBD
  $/$
  </CD
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function < · b', 'place edge group', 'group fa · > b', 'place edge group', 'group gb f+ f *', 'g+ g * gid', 'f+', 'g+ f+ \uf0e0 g+ f *', 'g+ f * \uf0e0 g+ fid', 'g+ fid \uf0e0 g+']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('f', 'f'), ('*', '*'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('fid', 'fid'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('f', 'f'), ('*', '*'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('fid', 'fid'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('f', 'f'), ('*', '*'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('fid', 'fid'), ('.', '.'), ('>', '>'), ('g+', 'g+'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g+', 'g+'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 138 =============================

g+ f$  g+ 	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['g+', 'f', '$', '\uf0df', 'g+', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('g+', 'f'), ('f', '$'), ('$', '\uf0df'), ('\uf0df', 'g+'), ('g+', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('g+', 'f', '$'), ('f', '$', '\uf0df'), ('$', '\uf0df', 'g+'), ('\uf0df', 'g+', '+'), ('g+', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('g+', 'NN'), ('f', 'VBD'), ('$', '$'), ('\uf0df', 'CD'), ('g+', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  (NP g+/NN)
  f/VBD
  $/$
  /CD
  (NP g+/NN +/NNP */NNP)
  id/VBP
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['g+', 'g+ + *', '+', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('g+', 'g+'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('g+', 'g+'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('g+', 'g+'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('g+', 'g+'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('g+', 'g+'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('g+', 'g+'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 139 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 140 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 141 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 142 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 143 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 144 =============================

f g    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb   f+ f* fid f$ g+ g* gid g$ f+ <. 


>> Tokens are: 
 ['f', 'g', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '<', '·', 'b', ',', 'place', 'edge', 'group', 'gb', 'group', 'fa', '·', '>', 'b', ',', 'place', 'edge', 'group', 'fa', 'group', 'gb', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'f+', '<', '.']

>> Bigrams are: 
 [('f', 'g'), ('g', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '<'), ('<', '·'), ('·', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'gb'), ('gb', 'group'), ('group', 'fa'), ('fa', '·'), ('·', '>'), ('>', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'fa'), ('fa', 'group'), ('group', 'gb'), ('gb', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'f+'), ('f+', '<'), ('<', '.')]

>> Trigrams are: 
 [('f', 'g', 'Prof.'), ('g', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '<'), ('function', '<', '·'), ('<', '·', 'b'), ('·', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'gb'), ('group', 'gb', 'group'), ('gb', 'group', 'fa'), ('group', 'fa', '·'), ('fa', '·', '>'), ('·', '>', 'b'), ('>', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'fa'), ('group', 'fa', 'group'), ('fa', 'group', 'gb'), ('group', 'gb', 'f+'), ('gb', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'f+'), ('$', 'f+', '<'), ('f+', '<', '.')]

>> POS Tags are: 
 [('f', 'JJ'), ('g', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('<', 'NNP'), ('·', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('gb', 'VBD'), ('group', 'NN'), ('fa', 'NN'), ('·', 'NNP'), ('>', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('fa', 'VBD'), ('group', 'NN'), ('gb', 'NN'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('f+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S
  (NP f/JJ g/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN </NNP ·/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  gb/VBD
  (NP group/NN fa/NN ·/NNP >/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  fa/VBD
  (NP group/NN gb/NN f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP f+/JJ </NN)
  ./.) 


>> Noun Phrases are: 
 ['f g Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function < · b', 'place edge group', 'group fa · > b', 'place edge group', 'group gb f+ f *', 'g+ g * gid', 'f+ <']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('<', '<'), ('.', '.')]



============================ Sentence 145 =============================

g* f+  g* f* .> g* f*  g* fid .> g* fid  g* f$ <. 


>> Tokens are: 
 ['g', '*', 'f+', '\uf0df', 'g', '*', 'f', '*', '.', '>', 'g', '*', 'f', '*', '\uf0e0', 'g', '*', 'fid', '.', '>', 'g', '*', 'fid', '\uf0e0', 'g', '*', 'f', '$', '<', '.']

>> Bigrams are: 
 [('g', '*'), ('*', 'f+'), ('f+', '\uf0df'), ('\uf0df', 'g'), ('g', '*'), ('*', 'f'), ('f', '*'), ('*', '.'), ('.', '>'), ('>', 'g'), ('g', '*'), ('*', 'f'), ('f', '*'), ('*', '\uf0e0'), ('\uf0e0', 'g'), ('g', '*'), ('*', 'fid'), ('fid', '.'), ('.', '>'), ('>', 'g'), ('g', '*'), ('*', 'fid'), ('fid', '\uf0e0'), ('\uf0e0', 'g'), ('g', '*'), ('*', 'f'), ('f', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('g', '*', 'f+'), ('*', 'f+', '\uf0df'), ('f+', '\uf0df', 'g'), ('\uf0df', 'g', '*'), ('g', '*', 'f'), ('*', 'f', '*'), ('f', '*', '.'), ('*', '.', '>'), ('.', '>', 'g'), ('>', 'g', '*'), ('g', '*', 'f'), ('*', 'f', '*'), ('f', '*', '\uf0e0'), ('*', '\uf0e0', 'g'), ('\uf0e0', 'g', '*'), ('g', '*', 'fid'), ('*', 'fid', '.'), ('fid', '.', '>'), ('.', '>', 'g'), ('>', 'g', '*'), ('g', '*', 'fid'), ('*', 'fid', '\uf0e0'), ('fid', '\uf0e0', 'g'), ('\uf0e0', 'g', '*'), ('g', '*', 'f'), ('*', 'f', '$'), ('f', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('g', 'NN'), ('*', 'NNP'), ('f+', 'NN'), ('\uf0df', 'NNP'), ('g', 'NN'), ('*', 'NNP'), ('f', 'NN'), ('*', 'NNP'), ('.', '.'), ('>', 'VB'), ('g', 'JJ'), ('*', 'NNP'), ('f', 'NN'), ('*', 'NNP'), ('\uf0e0', 'NNP'), ('g', 'NN'), ('*', 'NNP'), ('fid', 'NN'), ('.', '.'), ('>', 'CC'), ('g', 'JJ'), ('*', 'NNP'), ('fid', 'NN'), ('\uf0e0', 'NNP'), ('g', 'NN'), ('*', 'NNP'), ('f', 'VBD'), ('$', '$'), ('<', 'CD'), ('.', '.')]

 (S
  (NP g/NN */NNP f+/NN /NNP g/NN */NNP f/NN */NNP)
  ./.
  >/VB
  (NP g/JJ */NNP f/NN */NNP /NNP g/NN */NNP fid/NN)
  ./.
  >/CC
  (NP g/JJ */NNP fid/NN /NNP g/NN */NNP)
  f/VBD
  $/$
  </CD
  ./.) 


>> Noun Phrases are: 
 ['g * f+ \uf0df g * f *', 'g * f * \uf0e0 g * fid', 'g * fid \uf0e0 g *']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('g', 'g'), ('*', '*'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('*', '*'), ('.', '.'), ('>', '>'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('*', '*'), ('fid', 'fid'), ('.', '.'), ('>', '>'), ('g', 'g'), ('*', '*'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('g', 'g'), ('*', '*'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('*', '*'), ('.', '.'), ('>', '>'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('*', '*'), ('fid', 'fid'), ('.', '.'), ('>', '>'), ('g', 'g'), ('*', '*'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('g', 'g'), ('*', '*'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('*', '*'), ('.', '.'), ('>', '>'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('*', '*'), ('fid', 'fid'), ('.', '.'), ('>', '>'), ('g', 'g'), ('*', '*'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('*', '*'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 146 =============================

g* f$  g* 	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['g', '*', 'f', '$', '\uf0df', 'g', '*', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('g', '*'), ('*', 'f'), ('f', '$'), ('$', '\uf0df'), ('\uf0df', 'g'), ('g', '*'), ('*', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('g', '*', 'f'), ('*', 'f', '$'), ('f', '$', '\uf0df'), ('$', '\uf0df', 'g'), ('\uf0df', 'g', '*'), ('g', '*', '+'), ('*', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('g', 'NN'), ('*', 'NNP'), ('f', 'VBD'), ('$', '$'), ('\uf0df', 'CD'), ('g', 'NN'), ('*', 'NNP'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  (NP g/NN */NNP)
  f/VBD
  $/$
  /CD
  (NP g/NN */NNP +/NNP */NNP)
  id/VBP
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['g *', 'g * + *', '+', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('g', 'g'), ('*', '*'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('g', 'g'), ('*', '*'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('g', 'g'), ('*', '*'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('g', 'g'), ('*', '*'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('g', 'g'), ('*', '*'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('g', 'g'), ('*', '*'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 147 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 148 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 149 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 150 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 151 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 152 =============================

f g    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb  f+ f* fid f$ g+ g* gid g$ f+ <. 


>> Tokens are: 
 ['f', 'g', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '<', '·', 'b', ',', 'place', 'edge', 'group', 'gb', 'group', 'fa', '·', '>', 'b', ',', 'place', 'edge', 'group', 'fa', 'group', 'gb', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'f+', '<', '.']

>> Bigrams are: 
 [('f', 'g'), ('g', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '<'), ('<', '·'), ('·', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'gb'), ('gb', 'group'), ('group', 'fa'), ('fa', '·'), ('·', '>'), ('>', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'fa'), ('fa', 'group'), ('group', 'gb'), ('gb', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'f+'), ('f+', '<'), ('<', '.')]

>> Trigrams are: 
 [('f', 'g', 'Prof.'), ('g', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '<'), ('function', '<', '·'), ('<', '·', 'b'), ('·', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'gb'), ('group', 'gb', 'group'), ('gb', 'group', 'fa'), ('group', 'fa', '·'), ('fa', '·', '>'), ('·', '>', 'b'), ('>', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'fa'), ('group', 'fa', 'group'), ('fa', 'group', 'gb'), ('group', 'gb', 'f+'), ('gb', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'f+'), ('$', 'f+', '<'), ('f+', '<', '.')]

>> POS Tags are: 
 [('f', 'JJ'), ('g', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('<', 'NNP'), ('·', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('gb', 'VBD'), ('group', 'NN'), ('fa', 'NN'), ('·', 'NNP'), ('>', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('fa', 'VBD'), ('group', 'NN'), ('gb', 'NN'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('f+', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S
  (NP f/JJ g/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN </NNP ·/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  gb/VBD
  (NP group/NN fa/NN ·/NNP >/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  fa/VBD
  (NP group/NN gb/NN f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP f+/JJ </NN)
  ./.) 


>> Noun Phrases are: 
 ['f g Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function < · b', 'place edge group', 'group fa · > b', 'place edge group', 'group gb f+ f *', 'g+ g * gid', 'f+ <']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('f+', 'f+'), ('<', '<'), ('.', '.')]



============================ Sentence 153 =============================

gid f+  gid f* <. 


>> Tokens are: 
 ['gid', 'f+', '\uf0df', 'gid', 'f', '*', '<', '.']

>> Bigrams are: 
 [('gid', 'f+'), ('f+', '\uf0df'), ('\uf0df', 'gid'), ('gid', 'f'), ('f', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('gid', 'f+', '\uf0df'), ('f+', '\uf0df', 'gid'), ('\uf0df', 'gid', 'f'), ('gid', 'f', '*'), ('f', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('gid', 'JJ'), ('f+', 'NN'), ('\uf0df', 'NNP'), ('gid', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('<', 'NNP'), ('.', '.')]

 (S (NP gid/JJ f+/NN /NNP gid/NN f/NN */NNP </NNP) ./.) 


>> Noun Phrases are: 
 ['gid f+ \uf0df gid f * <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('gid', 'gid'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('gid', 'gid'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('gid', 'gid'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 154 =============================

gid f*  gid f$ <. 


>> Tokens are: 
 ['gid', 'f', '*', '\uf0df', 'gid', 'f', '$', '<', '.']

>> Bigrams are: 
 [('gid', 'f'), ('f', '*'), ('*', '\uf0df'), ('\uf0df', 'gid'), ('gid', 'f'), ('f', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('gid', 'f', '*'), ('f', '*', '\uf0df'), ('*', '\uf0df', 'gid'), ('\uf0df', 'gid', 'f'), ('gid', 'f', '$'), ('f', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('gid', 'JJ'), ('f', 'NN'), ('*', 'NNP'), ('\uf0df', 'NNP'), ('gid', 'VBD'), ('f', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S (NP gid/JJ f/NN */NNP /NNP) gid/VBD f/JJ $/$ (NP </NN) ./.) 


>> Noun Phrases are: 
 ['gid f * \uf0df', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('gid', 'gid'), ('f', 'f'), ('*', '*'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('gid', 'gid'), ('f', 'f'), ('*', '*'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('gid', 'gid'), ('f', 'f'), ('*', '*'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f', 'f'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 155 =============================

gid f$  gid 	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['gid', 'f', '$', '\uf0df', 'gid', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('gid', 'f'), ('f', '$'), ('$', '\uf0df'), ('\uf0df', 'gid'), ('gid', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('gid', 'f', '$'), ('f', '$', '\uf0df'), ('$', '\uf0df', 'gid'), ('\uf0df', 'gid', '+'), ('gid', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('gid', 'JJ'), ('f', 'JJ'), ('$', '$'), ('\uf0df', 'JJ'), ('gid', 'JJ'), ('+', 'NN'), ('*', 'NNP'), ('id', 'VBZ'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  gid/JJ
  f/JJ
  $/$
  (NP /JJ gid/JJ +/NN */NNP)
  id/VBZ
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['\uf0df gid + *', '+', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('gid', 'gid'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('gid', 'gid'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('gid', 'gid'), ('f', 'f'), ('$', '$'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 156 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 157 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 158 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 159 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 160 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 161 =============================

f g    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb  f+ f* fid g+ g* gid 	 	+	*	id	$  	+	.>	<. 


>> Tokens are: 
 ['f', 'g', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '<', '·', 'b', ',', 'place', 'edge', 'group', 'gb', 'group', 'fa', '·', '>', 'b', ',', 'place', 'edge', 'group', 'fa', 'group', 'gb', 'f+', 'f', '*', 'fid', 'g+', 'g', '*', 'gid', '+', '*', 'id', '$', '+', '.', '>', '<', '.']

>> Bigrams are: 
 [('f', 'g'), ('g', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '<'), ('<', '·'), ('·', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'gb'), ('gb', 'group'), ('group', 'fa'), ('fa', '·'), ('·', '>'), ('>', 'b'), ('b', ','), (',', 'place'), ('place', 'edge'), ('edge', 'group'), ('group', 'fa'), ('fa', 'group'), ('group', 'gb'), ('gb', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', '+'), ('+', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('f', 'g', 'Prof.'), ('g', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '<'), ('function', '<', '·'), ('<', '·', 'b'), ('·', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'gb'), ('group', 'gb', 'group'), ('gb', 'group', 'fa'), ('group', 'fa', '·'), ('fa', '·', '>'), ('·', '>', 'b'), ('>', 'b', ','), ('b', ',', 'place'), (',', 'place', 'edge'), ('place', 'edge', 'group'), ('edge', 'group', 'fa'), ('group', 'fa', 'group'), ('fa', 'group', 'gb'), ('group', 'gb', 'f+'), ('gb', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'g+'), ('fid', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', '+'), ('gid', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', '+'), ('$', '+', '.'), ('+', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('f', 'JJ'), ('g', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('<', 'NNP'), ('·', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('gb', 'VBD'), ('group', 'NN'), ('fa', 'NN'), ('·', 'NNP'), ('>', 'NNP'), ('b', 'NN'), (',', ','), ('place', 'NN'), ('edge', 'NN'), ('group', 'NN'), ('fa', 'VBD'), ('group', 'NN'), ('gb', 'NN'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'NN'), ('g+', 'NN'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('+', 'NNP'), ('.', '.'), ('>', 'NN'), ('<', 'NN'), ('.', '.')]

 (S
  (NP f/JJ g/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN </NNP ·/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  gb/VBD
  (NP group/NN fa/NN ·/NNP >/NNP b/NN)
  ,/,
  (NP place/NN edge/NN group/NN)
  fa/VBD
  (NP
    group/NN
    gb/NN
    f+/NN
    f/NN
    */NNP
    fid/NN
    g+/NN
    g/NN
    */NNP
    gid/NN
    +/NNP
    */NNP)
  id/VBP
  $/$
  (NP +/NNP)
  ./.
  (NP >/NN </NN)
  ./.) 


>> Noun Phrases are: 
 ['f g Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function < · b', 'place edge group', 'group fa · > b', 'place edge group', 'group gb f+ f * fid g+ g * gid + *', '+', '> <']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edg'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('f', 'f'), ('g', 'g'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('<', '<'), ('·', '·'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('gb', 'gb'), ('group', 'group'), ('fa', 'fa'), ('·', '·'), ('>', '>'), ('b', 'b'), (',', ','), ('place', 'place'), ('edge', 'edge'), ('group', 'group'), ('fa', 'fa'), ('group', 'group'), ('gb', 'gb'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 162 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 163 =============================

.> 	*	.>	.>	<. 


>> Tokens are: 
 ['.', '>', '*', '.', '>', '.', '>', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', '*'), ('*', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', '*'), ('>', '*', '.'), ('*', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '<'), ('>', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('*', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S ./. (NP >/NN */NN) ./. (NP >/NN) ./. (NP >/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['> *', '>', '> <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('*', '*'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('<', '<'), ('.', '.')]



============================ Sentence 164 =============================

.> 	id	.>	.>	 	.> 	$	<. 


>> Tokens are: 
 ['.', '>', 'id', '.', '>', '.', '>', '.', '>', '$', '<', '.']

>> Bigrams are: 
 [('.', '>'), ('>', 'id'), ('id', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '.'), ('.', '>'), ('>', '$'), ('$', '<'), ('<', '.')]

>> Trigrams are: 
 [('.', '>', 'id'), ('>', 'id', '.'), ('id', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '.'), ('>', '.', '>'), ('.', '>', '$'), ('>', '$', '<'), ('$', '<', '.')]

>> POS Tags are: 
 [('.', '.'), ('>', 'NN'), ('id', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'NN'), ('.', '.'), ('>', 'JJ'), ('$', '$'), ('<', 'NN'), ('.', '.')]

 (S
  ./.
  (NP >/NN id/NN)
  ./.
  (NP >/NN)
  ./.
  (NP >/NN)
  ./.
  >/JJ
  $/$
  (NP </NN)
  ./.) 


>> Noun Phrases are: 
 ['> id', '>', '>', '<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('.', '.'), ('>', '>'), ('id', 'id'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('.', '.'), ('>', '>'), ('$', '$'), ('<', '<'), ('.', '.')]



============================ Sentence 165 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 166 =============================

<. 


>> Tokens are: 
 ['<', '.']

>> Bigrams are: 
 [('<', '.')]

>> Trigrams are: 
 []

>> POS Tags are: 
 [('<', 'NN'), ('.', '.')]

 (S (NP </NN) ./.) 


>> Noun Phrases are: 
 ['<']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('<', '<'), ('.', '.')]



============================ Sentence 167 =============================

f+ <. 


>> Tokens are: 
 ['f+', '<', '.']

>> Bigrams are: 
 [('f+', '<'), ('<', '.')]

>> Trigrams are: 
 [('f+', '<', '.')]

>> POS Tags are: 
 [('f+', 'NN'), ('<', 'NN'), ('.', '.')]

 (S (NP f+/NN </NN) ./.) 


>> Noun Phrases are: 
 ['f+ <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('f+', 'f+'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('f+', 'f+'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('f+', 'f+'), ('<', '<'), ('.', '.')]



============================ Sentence 168 =============================

g$ f+  g$ f* <. 


>> Tokens are: 
 ['g', '$', 'f+', '\uf0e0', 'g', '$', 'f', '*', '<', '.']

>> Bigrams are: 
 [('g', '$'), ('$', 'f+'), ('f+', '\uf0e0'), ('\uf0e0', 'g'), ('g', '$'), ('$', 'f'), ('f', '*'), ('*', '<'), ('<', '.')]

>> Trigrams are: 
 [('g', '$', 'f+'), ('$', 'f+', '\uf0e0'), ('f+', '\uf0e0', 'g'), ('\uf0e0', 'g', '$'), ('g', '$', 'f'), ('$', 'f', '*'), ('f', '*', '<'), ('*', '<', '.')]

>> POS Tags are: 
 [('g', 'JJ'), ('$', '$'), ('f+', 'JJ'), ('\uf0e0', 'NNP'), ('g', 'VBD'), ('$', '$'), ('f', 'JJ'), ('*', 'NNP'), ('<', 'NN'), ('.', '.')]

 (S g/JJ $/$ (NP f+/JJ /NNP) g/VBD $/$ (NP f/JJ */NNP </NN) ./.) 


>> Noun Phrases are: 
 ['f+ \uf0e0', 'f * <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('g', 'g'), ('$', '$'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('f', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('g', 'g'), ('$', '$'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('f', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('g', 'g'), ('$', '$'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('f', 'f'), ('*', '*'), ('<', '<'), ('.', '.')]



============================ Sentence 169 =============================

g$ f*  g$ fid <. 


>> Tokens are: 
 ['g', '$', 'f', '*', '\uf0e0', 'g', '$', 'fid', '<', '.']

>> Bigrams are: 
 [('g', '$'), ('$', 'f'), ('f', '*'), ('*', '\uf0e0'), ('\uf0e0', 'g'), ('g', '$'), ('$', 'fid'), ('fid', '<'), ('<', '.')]

>> Trigrams are: 
 [('g', '$', 'f'), ('$', 'f', '*'), ('f', '*', '\uf0e0'), ('*', '\uf0e0', 'g'), ('\uf0e0', 'g', '$'), ('g', '$', 'fid'), ('$', 'fid', '<'), ('fid', '<', '.')]

>> POS Tags are: 
 [('g', 'JJ'), ('$', '$'), ('f', 'JJ'), ('*', 'NNP'), ('\uf0e0', 'NNP'), ('g', 'VBD'), ('$', '$'), ('fid', 'JJ'), ('<', 'NN'), ('.', '.')]

 (S g/JJ $/$ (NP f/JJ */NNP /NNP) g/VBD $/$ (NP fid/JJ </NN) ./.) 


>> Noun Phrases are: 
 ['f * \uf0e0', 'fid <']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('g', 'g'), ('$', '$'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('fid', 'fid'), ('<', '<'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('g', 'g'), ('$', '$'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('fid', 'fid'), ('<', '<'), ('.', '.')]

>> Lemmatization: 
 [('g', 'g'), ('$', '$'), ('f', 'f'), ('*', '*'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('fid', 'fid'), ('<', '<'), ('.', '.')]



============================ Sentence 170 =============================

g$ fid  g$ f g f$ g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2			  	 g				   f+ f* fid f$ g+ g* gid g$ If the constructed graph has a cycle then no precedence functions exist. 


>> Tokens are: 
 ['g', '$', 'fid', '\uf0e0', 'g', '$', 'f', 'g', 'f', '$', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', 'g', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'If', 'constructed', 'graph', 'cycle', 'precedence', 'functions', 'exist', '.']

>> Bigrams are: 
 [('g', '$'), ('$', 'fid'), ('fid', '\uf0e0'), ('\uf0e0', 'g'), ('g', '$'), ('$', 'f'), ('f', 'g'), ('g', 'f'), ('f', '$'), ('$', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', 'g'), ('g', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'If'), ('If', 'constructed'), ('constructed', 'graph'), ('graph', 'cycle'), ('cycle', 'precedence'), ('precedence', 'functions'), ('functions', 'exist'), ('exist', '.')]

>> Trigrams are: 
 [('g', '$', 'fid'), ('$', 'fid', '\uf0e0'), ('fid', '\uf0e0', 'g'), ('\uf0e0', 'g', '$'), ('g', '$', 'f'), ('$', 'f', 'g'), ('f', 'g', 'f'), ('g', 'f', '$'), ('f', '$', 'g'), ('$', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', 'g'), ('2', 'g', 'f+'), ('g', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'If'), ('$', 'If', 'constructed'), ('If', 'constructed', 'graph'), ('constructed', 'graph', 'cycle'), ('graph', 'cycle', 'precedence'), ('cycle', 'precedence', 'functions'), ('precedence', 'functions', 'exist'), ('functions', 'exist', '.')]

>> POS Tags are: 
 [('g', 'JJ'), ('$', '$'), ('fid', 'JJ'), ('\uf0e0', 'NNP'), ('g', 'VBD'), ('$', '$'), ('f', 'JJ'), ('g', 'NN'), ('f', 'VBD'), ('$', '$'), ('g', 'JJ'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('g', 'NN'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'RB'), ('$', '$'), ('If', 'IN'), ('constructed', 'VBN'), ('graph', 'NN'), ('cycle', 'NN'), ('precedence', 'NN'), ('functions', 'NNS'), ('exist', 'VBP'), ('.', '.')]

 (S
  g/JJ
  $/$
  (NP fid/JJ /NNP)
  g/VBD
  $/$
  (NP f/JJ g/NN)
  f/VBD
  $/$
  g/JJ
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  (NP g/NN f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/RB
  $/$
  If/IN
  constructed/VBN
  (NP graph/NN cycle/NN precedence/NN functions/NNS)
  exist/VBP
  ./.) 


>> Noun Phrases are: 
 ['fid \uf0e0', 'f g', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g f+ f *', 'g+ g * gid', 'graph cycle precedence functions']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('g', 'g'), ('$', '$'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('f', 'f'), ('g', 'g'), ('f', 'f'), ('$', '$'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'g'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('If', 'if'), ('constructed', 'construct'), ('graph', 'graph'), ('cycle', 'cycl'), ('precedence', 'preced'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('g', 'g'), ('$', '$'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('f', 'f'), ('g', 'g'), ('f', 'f'), ('$', '$'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'g'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('If', 'if'), ('constructed', 'construct'), ('graph', 'graph'), ('cycle', 'cycl'), ('precedence', 'preced'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')]

>> Lemmatization: 
 [('g', 'g'), ('$', '$'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g', 'g'), ('$', '$'), ('f', 'f'), ('g', 'g'), ('f', 'f'), ('$', '$'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'g'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('If', 'If'), ('constructed', 'constructed'), ('graph', 'graph'), ('cycle', 'cycle'), ('precedence', 'precedence'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')]



============================ Sentence 171 =============================

When there are no cycles collect the length of the longest paths from the groups of fa and gb respectively. 


>> Tokens are: 
 ['When', 'cycles', 'collect', 'length', 'longest', 'paths', 'groups', 'fa', 'gb', 'respectively', '.']

>> Bigrams are: 
 [('When', 'cycles'), ('cycles', 'collect'), ('collect', 'length'), ('length', 'longest'), ('longest', 'paths'), ('paths', 'groups'), ('groups', 'fa'), ('fa', 'gb'), ('gb', 'respectively'), ('respectively', '.')]

>> Trigrams are: 
 [('When', 'cycles', 'collect'), ('cycles', 'collect', 'length'), ('collect', 'length', 'longest'), ('length', 'longest', 'paths'), ('longest', 'paths', 'groups'), ('paths', 'groups', 'fa'), ('groups', 'fa', 'gb'), ('fa', 'gb', 'respectively'), ('gb', 'respectively', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('cycles', 'NNS'), ('collect', 'VBP'), ('length', 'NN'), ('longest', 'JJS'), ('paths', 'JJ'), ('groups', 'NNS'), ('fa', 'VBP'), ('gb', 'JJ'), ('respectively', 'RB'), ('.', '.')]

 (S
  When/WRB
  (NP cycles/NNS)
  collect/VBP
  (NP length/NN)
  longest/JJS
  (NP paths/JJ groups/NNS)
  fa/VBP
  gb/JJ
  respectively/RB
  ./.) 


>> Noun Phrases are: 
 ['cycles', 'length', 'paths groups']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('cycles', 'cycl'), ('collect', 'collect'), ('length', 'length'), ('longest', 'longest'), ('paths', 'path'), ('groups', 'group'), ('fa', 'fa'), ('gb', 'gb'), ('respectively', 'respect'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('cycles', 'cycl'), ('collect', 'collect'), ('length', 'length'), ('longest', 'longest'), ('paths', 'path'), ('groups', 'group'), ('fa', 'fa'), ('gb', 'gb'), ('respectively', 'respect'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('cycles', 'cycle'), ('collect', 'collect'), ('length', 'length'), ('longest', 'longest'), ('paths', 'path'), ('groups', 'group'), ('fa', 'fa'), ('gb', 'gb'), ('respectively', 'respectively'), ('.', '.')]



============================ Sentence 172 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2			  	 g	1			   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2	4		  	 g	1			   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function  	 	+	*	id	$  	f 	2	4		  	 g	1	3		   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2	4	4	  	 g	1	3		   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2	4	4	  	 g	1	3	5	   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function  	 	+	*	id	$  	f 	2	4	4	0  	 g	1	3	5	0  f+ f* fid f$ g+ g* gid g$      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  LR parser LR parsing is most efficient method of bottom up parsing which can be used to parse large class of context free grammar. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', 'g', '1', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', 'g', '1', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', 'g', '1', '3', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', '4', 'g', '1', '3', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', '4', 'g', '1', '3', '5', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', '4', '0', 'g', '1', '3', '5', '0', 'f+', 'f', '*', 'fid', 'f', '$', 'g+', 'g', '*', 'gid', 'g', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'LR', 'parser', 'LR', 'parsing', 'efficient', 'method', 'bottom', 'parsing', 'used', 'parse', 'large', 'class', 'context', 'free', 'grammar', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', 'g'), ('g', '1'), ('1', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', '4'), ('4', 'g'), ('g', '1'), ('1', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', '4'), ('4', 'g'), ('g', '1'), ('1', '3'), ('3', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', '4'), ('4', '4'), ('4', 'g'), ('g', '1'), ('1', '3'), ('3', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', '4'), ('4', '4'), ('4', 'g'), ('g', '1'), ('1', '3'), ('3', '5'), ('5', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Operator'), ('Operator', 'precedence'), ('precedence', 'function'), ('function', '+'), ('+', '*'), ('*', 'id'), ('id', '$'), ('$', 'f'), ('f', '2'), ('2', '4'), ('4', '4'), ('4', '0'), ('0', 'g'), ('g', '1'), ('1', '3'), ('3', '5'), ('5', '0'), ('0', 'f+'), ('f+', 'f'), ('f', '*'), ('*', 'fid'), ('fid', 'f'), ('f', '$'), ('$', 'g+'), ('g+', 'g'), ('g', '*'), ('*', 'gid'), ('gid', 'g'), ('g', '$'), ('$', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'Parsing'), ('Parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'LR'), ('LR', 'parser'), ('parser', 'LR'), ('LR', 'parsing'), ('parsing', 'efficient'), ('efficient', 'method'), ('method', 'bottom'), ('bottom', 'parsing'), ('parsing', 'used'), ('used', 'parse'), ('parse', 'large'), ('large', 'class'), ('class', 'context'), ('context', 'free'), ('free', 'grammar'), ('grammar', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', 'g'), ('2', 'g', '1'), ('g', '1', 'f+'), ('1', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', '4'), ('2', '4', 'g'), ('4', 'g', '1'), ('g', '1', 'f+'), ('1', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', '4'), ('2', '4', 'g'), ('4', 'g', '1'), ('g', '1', '3'), ('1', '3', 'f+'), ('3', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', '4'), ('2', '4', '4'), ('4', '4', 'g'), ('4', 'g', '1'), ('g', '1', '3'), ('1', '3', 'f+'), ('3', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', '4'), ('2', '4', '4'), ('4', '4', 'g'), ('4', 'g', '1'), ('g', '1', '3'), ('1', '3', '5'), ('3', '5', 'f+'), ('5', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Operator'), ('›', 'Operator', 'precedence'), ('Operator', 'precedence', 'function'), ('precedence', 'function', '+'), ('function', '+', '*'), ('+', '*', 'id'), ('*', 'id', '$'), ('id', '$', 'f'), ('$', 'f', '2'), ('f', '2', '4'), ('2', '4', '4'), ('4', '4', '0'), ('4', '0', 'g'), ('0', 'g', '1'), ('g', '1', '3'), ('1', '3', '5'), ('3', '5', '0'), ('5', '0', 'f+'), ('0', 'f+', 'f'), ('f+', 'f', '*'), ('f', '*', 'fid'), ('*', 'fid', 'f'), ('fid', 'f', '$'), ('f', '$', 'g+'), ('$', 'g+', 'g'), ('g+', 'g', '*'), ('g', '*', 'gid'), ('*', 'gid', 'g'), ('gid', 'g', '$'), ('g', '$', 'Prof.'), ('$', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'Parsing'), ('predictive', 'Parsing', ')'), ('Parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'LR'), ('›', 'LR', 'parser'), ('LR', 'parser', 'LR'), ('parser', 'LR', 'parsing'), ('LR', 'parsing', 'efficient'), ('parsing', 'efficient', 'method'), ('efficient', 'method', 'bottom'), ('method', 'bottom', 'parsing'), ('bottom', 'parsing', 'used'), ('parsing', 'used', 'parse'), ('used', 'parse', 'large'), ('parse', 'large', 'class'), ('large', 'class', 'context'), ('class', 'context', 'free'), ('context', 'free', 'grammar'), ('free', 'grammar', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('g', 'NN'), ('1', 'CD'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('4', 'CD'), ('g', 'NN'), ('1', 'CD'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('4', 'CD'), ('g', 'NN'), ('1', 'CD'), ('3', 'CD'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('4', 'CD'), ('4', 'CD'), ('g', 'NN'), ('1', 'CD'), ('3', 'CD'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('4', 'CD'), ('4', 'CD'), ('g', 'NN'), ('1', 'CD'), ('3', 'CD'), ('5', 'CD'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'NNP'), ('*', 'NNP'), ('id', 'VBP'), ('$', '$'), ('f', 'JJ'), ('2', 'CD'), ('4', 'CD'), ('4', 'CD'), ('0', 'CD'), ('g', 'NN'), ('1', 'CD'), ('3', 'CD'), ('5', 'CD'), ('0', 'CD'), ('f+', 'NN'), ('f', 'NN'), ('*', 'NNP'), ('fid', 'VBZ'), ('f', 'JJ'), ('$', '$'), ('g+', 'JJ'), ('g', 'NN'), ('*', 'NNP'), ('gid', 'NN'), ('g', 'VBD'), ('$', '$'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('Parsing', 'NNP'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('LR', 'NNP'), ('parser', 'NN'), ('LR', 'NNP'), ('parsing', 'VBG'), ('efficient', 'JJ'), ('method', 'NN'), ('bottom', 'NN'), ('parsing', 'VBG'), ('used', 'VBN'), ('parse', 'JJ'), ('large', 'JJ'), ('class', 'NN'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  (NP g/NN)
  1/CD
  (NP f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  4/CD
  (NP g/NN)
  1/CD
  (NP f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  4/CD
  (NP g/NN)
  1/CD
  3/CD
  (NP f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  4/CD
  4/CD
  (NP g/NN)
  1/CD
  3/CD
  (NP f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  4/CD
  4/CD
  (NP g/NN)
  1/CD
  3/CD
  5/CD
  (NP f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Operator/NNP precedence/NN function/NN +/NNP */NNP)
  id/VBP
  $/$
  f/JJ
  2/CD
  4/CD
  4/CD
  0/CD
  (NP g/NN)
  1/CD
  3/CD
  5/CD
  0/CD
  (NP f+/NN f/NN */NNP)
  fid/VBZ
  f/JJ
  $/$
  (NP g+/JJ g/NN */NNP gid/NN)
  g/VBD
  $/$
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ Parsing/NNP)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP LR/NNP parser/NN LR/NNP)
  parsing/VBG
  (NP efficient/JJ method/NN bottom/NN)
  parsing/VBG
  used/VBN
  (NP parse/JJ large/JJ class/NN context/NN)
  (NP free/JJ grammar/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g', 'f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g', 'f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g', 'f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g', 'f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g', 'f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Operator precedence function + *', 'g', 'f+ f *', 'g+ g * gid', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive Parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› LR parser LR', 'efficient method bottom', 'parse large class context', 'free grammar']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'g'), ('1', '1'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'g'), ('1', '1'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('5', '5'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('0', '0'), ('g', 'g'), ('1', '1'), ('3', '3'), ('5', '5'), ('0', '0'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LR', 'lr'), ('parser', 'parser'), ('LR', 'lr'), ('parsing', 'pars'), ('efficient', 'effici'), ('method', 'method'), ('bottom', 'bottom'), ('parsing', 'pars'), ('used', 'use'), ('parse', 'pars'), ('large', 'larg'), ('class', 'class'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'g'), ('1', '1'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'g'), ('1', '1'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('5', '5'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'oper'), ('precedence', 'preced'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('0', '0'), ('g', 'g'), ('1', '1'), ('3', '3'), ('5', '5'), ('0', '0'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LR', 'lr'), ('parser', 'parser'), ('LR', 'lr'), ('parsing', 'pars'), ('efficient', 'effici'), ('method', 'method'), ('bottom', 'bottom'), ('parsing', 'pars'), ('used', 'use'), ('parse', 'pars'), ('large', 'larg'), ('class', 'class'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'g'), ('1', '1'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'g'), ('1', '1'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'g'), ('1', '1'), ('3', '3'), ('5', '5'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('0', '0'), ('g', 'g'), ('1', '1'), ('3', '3'), ('5', '5'), ('0', '0'), ('f+', 'f+'), ('f', 'f'), ('*', '*'), ('fid', 'fid'), ('f', 'f'), ('$', '$'), ('g+', 'g+'), ('g', 'g'), ('*', '*'), ('gid', 'gid'), ('g', 'g'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'Parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('LR', 'LR'), ('parser', 'parser'), ('LR', 'LR'), ('parsing', 'parsing'), ('efficient', 'efficient'), ('method', 'method'), ('bottom', 'bottom'), ('parsing', 'parsing'), ('used', 'used'), ('parse', 'parse'), ('large', 'large'), ('class', 'class'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')]



============================ Sentence 173 =============================

The technique is called LR(k) parsing:   The “L” is for left to right scanning of input symbol,  The “R” for constructing right most derivation in reverse,  The “k” for the number of input symbols of look ahead that are used in making parsing decision. 


>> Tokens are: 
 ['The', 'technique', 'called', 'LR', '(', 'k', ')', 'parsing', ':', 'The', '“', 'L', '”', 'left', 'right', 'scanning', 'input', 'symbol', ',', 'The', '“', 'R', '”', 'constructing', 'right', 'derivation', 'reverse', ',', 'The', '“', 'k', '”', 'number', 'input', 'symbols', 'look', 'ahead', 'used', 'making', 'parsing', 'decision', '.']

>> Bigrams are: 
 [('The', 'technique'), ('technique', 'called'), ('called', 'LR'), ('LR', '('), ('(', 'k'), ('k', ')'), (')', 'parsing'), ('parsing', ':'), (':', 'The'), ('The', '“'), ('“', 'L'), ('L', '”'), ('”', 'left'), ('left', 'right'), ('right', 'scanning'), ('scanning', 'input'), ('input', 'symbol'), ('symbol', ','), (',', 'The'), ('The', '“'), ('“', 'R'), ('R', '”'), ('”', 'constructing'), ('constructing', 'right'), ('right', 'derivation'), ('derivation', 'reverse'), ('reverse', ','), (',', 'The'), ('The', '“'), ('“', 'k'), ('k', '”'), ('”', 'number'), ('number', 'input'), ('input', 'symbols'), ('symbols', 'look'), ('look', 'ahead'), ('ahead', 'used'), ('used', 'making'), ('making', 'parsing'), ('parsing', 'decision'), ('decision', '.')]

>> Trigrams are: 
 [('The', 'technique', 'called'), ('technique', 'called', 'LR'), ('called', 'LR', '('), ('LR', '(', 'k'), ('(', 'k', ')'), ('k', ')', 'parsing'), (')', 'parsing', ':'), ('parsing', ':', 'The'), (':', 'The', '“'), ('The', '“', 'L'), ('“', 'L', '”'), ('L', '”', 'left'), ('”', 'left', 'right'), ('left', 'right', 'scanning'), ('right', 'scanning', 'input'), ('scanning', 'input', 'symbol'), ('input', 'symbol', ','), ('symbol', ',', 'The'), (',', 'The', '“'), ('The', '“', 'R'), ('“', 'R', '”'), ('R', '”', 'constructing'), ('”', 'constructing', 'right'), ('constructing', 'right', 'derivation'), ('right', 'derivation', 'reverse'), ('derivation', 'reverse', ','), ('reverse', ',', 'The'), (',', 'The', '“'), ('The', '“', 'k'), ('“', 'k', '”'), ('k', '”', 'number'), ('”', 'number', 'input'), ('number', 'input', 'symbols'), ('input', 'symbols', 'look'), ('symbols', 'look', 'ahead'), ('look', 'ahead', 'used'), ('ahead', 'used', 'making'), ('used', 'making', 'parsing'), ('making', 'parsing', 'decision'), ('parsing', 'decision', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('technique', 'NN'), ('called', 'VBN'), ('LR', 'NNP'), ('(', '('), ('k', 'NN'), (')', ')'), ('parsing', 'NN'), (':', ':'), ('The', 'DT'), ('“', 'NNP'), ('L', 'NNP'), ('”', 'NNP'), ('left', 'VBD'), ('right', 'JJ'), ('scanning', 'VBG'), ('input', 'JJ'), ('symbol', 'NN'), (',', ','), ('The', 'DT'), ('“', 'NNP'), ('R', 'NNP'), ('”', 'NNP'), ('constructing', 'VBG'), ('right', 'JJ'), ('derivation', 'NN'), ('reverse', 'NN'), (',', ','), ('The', 'DT'), ('“', 'NNP'), ('k', 'NN'), ('”', 'NNP'), ('number', 'NN'), ('input', 'NN'), ('symbols', 'NNS'), ('look', 'VBP'), ('ahead', 'RB'), ('used', 'VBN'), ('making', 'VBG'), ('parsing', 'VBG'), ('decision', 'NN'), ('.', '.')]

 (S
  (NP The/DT technique/NN)
  called/VBN
  (NP LR/NNP)
  (/(
  (NP k/NN)
  )/)
  (NP parsing/NN)
  :/:
  (NP The/DT “/NNP L/NNP ”/NNP)
  left/VBD
  right/JJ
  scanning/VBG
  (NP input/JJ symbol/NN)
  ,/,
  (NP The/DT “/NNP R/NNP ”/NNP)
  constructing/VBG
  (NP right/JJ derivation/NN reverse/NN)
  ,/,
  (NP The/DT “/NNP k/NN ”/NNP number/NN input/NN symbols/NNS)
  look/VBP
  ahead/RB
  used/VBN
  making/VBG
  parsing/VBG
  (NP decision/NN)
  ./.) 


>> Noun Phrases are: 
 ['The technique', 'LR', 'k', 'parsing', 'The “ L ”', 'input symbol', 'The “ R ”', 'right derivation reverse', 'The “ k ” number input symbols', 'decision']

>> Named Entities are: 
 [('ORGANIZATION', 'LR')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('technique', 'techniqu'), ('called', 'call'), ('LR', 'lr'), ('(', '('), ('k', 'k'), (')', ')'), ('parsing', 'pars'), (':', ':'), ('The', 'the'), ('“', '“'), ('L', 'l'), ('”', '”'), ('left', 'left'), ('right', 'right'), ('scanning', 'scan'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('The', 'the'), ('“', '“'), ('R', 'r'), ('”', '”'), ('constructing', 'construct'), ('right', 'right'), ('derivation', 'deriv'), ('reverse', 'revers'), (',', ','), ('The', 'the'), ('“', '“'), ('k', 'k'), ('”', '”'), ('number', 'number'), ('input', 'input'), ('symbols', 'symbol'), ('look', 'look'), ('ahead', 'ahead'), ('used', 'use'), ('making', 'make'), ('parsing', 'pars'), ('decision', 'decis'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('technique', 'techniqu'), ('called', 'call'), ('LR', 'lr'), ('(', '('), ('k', 'k'), (')', ')'), ('parsing', 'pars'), (':', ':'), ('The', 'the'), ('“', '“'), ('L', 'l'), ('”', '”'), ('left', 'left'), ('right', 'right'), ('scanning', 'scan'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('The', 'the'), ('“', '“'), ('R', 'r'), ('”', '”'), ('constructing', 'construct'), ('right', 'right'), ('derivation', 'deriv'), ('reverse', 'revers'), (',', ','), ('The', 'the'), ('“', '“'), ('k', 'k'), ('”', '”'), ('number', 'number'), ('input', 'input'), ('symbols', 'symbol'), ('look', 'look'), ('ahead', 'ahead'), ('used', 'use'), ('making', 'make'), ('parsing', 'pars'), ('decision', 'decis'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('technique', 'technique'), ('called', 'called'), ('LR', 'LR'), ('(', '('), ('k', 'k'), (')', ')'), ('parsing', 'parsing'), (':', ':'), ('The', 'The'), ('“', '“'), ('L', 'L'), ('”', '”'), ('left', 'left'), ('right', 'right'), ('scanning', 'scanning'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('The', 'The'), ('“', '“'), ('R', 'R'), ('”', '”'), ('constructing', 'constructing'), ('right', 'right'), ('derivation', 'derivation'), ('reverse', 'reverse'), (',', ','), ('The', 'The'), ('“', '“'), ('k', 'k'), ('”', '”'), ('number', 'number'), ('input', 'input'), ('symbols', 'symbol'), ('look', 'look'), ('ahead', 'ahead'), ('used', 'used'), ('making', 'making'), ('parsing', 'parsing'), ('decision', 'decision'), ('.', '.')]



============================ Sentence 174 =============================

LR parsing program INPUT OUTPUT 	a	+	b	$	  	X 	Y 	Z 	$  Parsing Table Action Goto    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Computation of closure & go to function X Xb  Closure(I): 		X  X b Goto(I,X) 		X X b	  . 


>> Tokens are: 
 ['LR', 'parsing', 'program', 'INPUT', 'OUTPUT', '+', 'b', '$', 'X', 'Y', 'Z', '$', 'Parsing', 'Table', 'Action', 'Goto', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Computation', 'closure', '&', 'go', 'function', 'X\uf0e0', 'Xb', 'Closure', '(', 'I', ')', ':', 'X\uf0e0', 'X', 'b', 'Goto', '(', 'I', ',', 'X', ')', 'X\uf0e0', 'X', 'b', '.']

>> Bigrams are: 
 [('LR', 'parsing'), ('parsing', 'program'), ('program', 'INPUT'), ('INPUT', 'OUTPUT'), ('OUTPUT', '+'), ('+', 'b'), ('b', '$'), ('$', 'X'), ('X', 'Y'), ('Y', 'Z'), ('Z', '$'), ('$', 'Parsing'), ('Parsing', 'Table'), ('Table', 'Action'), ('Action', 'Goto'), ('Goto', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'parsing'), ('parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Computation'), ('Computation', 'closure'), ('closure', '&'), ('&', 'go'), ('go', 'function'), ('function', 'X\uf0e0'), ('X\uf0e0', 'Xb'), ('Xb', 'Closure'), ('Closure', '('), ('(', 'I'), ('I', ')'), (')', ':'), (':', 'X\uf0e0'), ('X\uf0e0', 'X'), ('X', 'b'), ('b', 'Goto'), ('Goto', '('), ('(', 'I'), ('I', ','), (',', 'X'), ('X', ')'), (')', 'X\uf0e0'), ('X\uf0e0', 'X'), ('X', 'b'), ('b', '.')]

>> Trigrams are: 
 [('LR', 'parsing', 'program'), ('parsing', 'program', 'INPUT'), ('program', 'INPUT', 'OUTPUT'), ('INPUT', 'OUTPUT', '+'), ('OUTPUT', '+', 'b'), ('+', 'b', '$'), ('b', '$', 'X'), ('$', 'X', 'Y'), ('X', 'Y', 'Z'), ('Y', 'Z', '$'), ('Z', '$', 'Parsing'), ('$', 'Parsing', 'Table'), ('Parsing', 'Table', 'Action'), ('Table', 'Action', 'Goto'), ('Action', 'Goto', 'Prof.'), ('Goto', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'parsing'), ('predictive', 'parsing', ')'), ('parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Computation'), ('›', 'Computation', 'closure'), ('Computation', 'closure', '&'), ('closure', '&', 'go'), ('&', 'go', 'function'), ('go', 'function', 'X\uf0e0'), ('function', 'X\uf0e0', 'Xb'), ('X\uf0e0', 'Xb', 'Closure'), ('Xb', 'Closure', '('), ('Closure', '(', 'I'), ('(', 'I', ')'), ('I', ')', ':'), (')', ':', 'X\uf0e0'), (':', 'X\uf0e0', 'X'), ('X\uf0e0', 'X', 'b'), ('X', 'b', 'Goto'), ('b', 'Goto', '('), ('Goto', '(', 'I'), ('(', 'I', ','), ('I', ',', 'X'), (',', 'X', ')'), ('X', ')', 'X\uf0e0'), (')', 'X\uf0e0', 'X'), ('X\uf0e0', 'X', 'b'), ('X', 'b', '.')]

>> POS Tags are: 
 [('LR', 'JJ'), ('parsing', 'VBG'), ('program', 'NN'), ('INPUT', 'NNP'), ('OUTPUT', 'NNP'), ('+', 'NNP'), ('b', 'VBD'), ('$', '$'), ('X', 'NNP'), ('Y', 'NNP'), ('Z', 'NNP'), ('$', '$'), ('Parsing', 'VBG'), ('Table', 'NNP'), ('Action', 'NNP'), ('Goto', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('parsing', 'NN'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Computation', 'NNP'), ('closure', 'NN'), ('&', 'CC'), ('go', 'VB'), ('function', 'NN'), ('X\uf0e0', 'NNP'), ('Xb', 'NNP'), ('Closure', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), (':', ':'), ('X\uf0e0', 'NN'), ('X', 'NN'), ('b', 'NN'), ('Goto', 'NNP'), ('(', '('), ('I', 'PRP'), (',', ','), ('X', 'NNP'), (')', ')'), ('X\uf0e0', 'NNP'), ('X', 'NNP'), ('b', 'NN'), ('.', '.')]

 (S
  LR/JJ
  parsing/VBG
  (NP program/NN INPUT/NNP OUTPUT/NNP +/NNP)
  b/VBD
  $/$
  (NP X/NNP Y/NNP Z/NNP)
  $/$
  Parsing/VBG
  (NP
    Table/NNP
    Action/NNP
    Goto/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ parsing/NN)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Computation/NNP closure/NN)
  &/CC
  go/VB
  (NP function/NN X/NNP Xb/NNP Closure/NNP)
  (/(
  I/PRP
  )/)
  :/:
  (NP X/NN X/NN b/NN Goto/NNP)
  (/(
  I/PRP
  ,/,
  (NP X/NNP)
  )/)
  (NP X/NNP X/NNP b/NN)
  ./.) 


>> Noun Phrases are: 
 ['program INPUT OUTPUT +', 'X Y Z', 'Table Action Goto Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Computation closure', 'function X\uf0e0 Xb Closure', 'X\uf0e0 X b Goto', 'X', 'X\uf0e0 X b']

>> Named Entities are: 
 [('ORGANIZATION', 'INPUT'), ('PERSON', 'Table Action Goto'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('LR', 'lr'), ('parsing', 'pars'), ('program', 'program'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'x'), ('Y', 'y'), ('Z', 'z'), ('$', '$'), ('Parsing', 'pars'), ('Table', 'tabl'), ('Action', 'action'), ('Goto', 'goto'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Computation', 'comput'), ('closure', 'closur'), ('&', '&'), ('go', 'go'), ('function', 'function'), ('X\uf0e0', 'x\uf0e0'), ('Xb', 'xb'), ('Closure', 'closur'), ('(', '('), ('I', 'i'), (')', ')'), (':', ':'), ('X\uf0e0', 'x\uf0e0'), ('X', 'x'), ('b', 'b'), ('Goto', 'goto'), ('(', '('), ('I', 'i'), (',', ','), ('X', 'x'), (')', ')'), ('X\uf0e0', 'x\uf0e0'), ('X', 'x'), ('b', 'b'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('LR', 'lr'), ('parsing', 'pars'), ('program', 'program'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'x'), ('Y', 'y'), ('Z', 'z'), ('$', '$'), ('Parsing', 'pars'), ('Table', 'tabl'), ('Action', 'action'), ('Goto', 'goto'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Computation', 'comput'), ('closure', 'closur'), ('&', '&'), ('go', 'go'), ('function', 'function'), ('X\uf0e0', 'x\uf0e0'), ('Xb', 'xb'), ('Closure', 'closur'), ('(', '('), ('I', 'i'), (')', ')'), (':', ':'), ('X\uf0e0', 'x\uf0e0'), ('X', 'x'), ('b', 'b'), ('Goto', 'goto'), ('(', '('), ('I', 'i'), (',', ','), ('X', 'x'), (')', ')'), ('X\uf0e0', 'x\uf0e0'), ('X', 'x'), ('b', 'b'), ('.', '.')]

>> Lemmatization: 
 [('LR', 'LR'), ('parsing', 'parsing'), ('program', 'program'), ('INPUT', 'INPUT'), ('OUTPUT', 'OUTPUT'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z'), ('$', '$'), ('Parsing', 'Parsing'), ('Table', 'Table'), ('Action', 'Action'), ('Goto', 'Goto'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Computation', 'Computation'), ('closure', 'closure'), ('&', '&'), ('go', 'go'), ('function', 'function'), ('X\uf0e0', 'X\uf0e0'), ('Xb', 'Xb'), ('Closure', 'Closure'), ('(', '('), ('I', 'I'), (')', ')'), (':', ':'), ('X\uf0e0', 'X\uf0e0'), ('X', 'X'), ('b', 'b'), ('Goto', 'Goto'), ('(', '('), ('I', 'I'), (',', ','), ('X', 'X'), (')', ')'), ('X\uf0e0', 'X\uf0e0'), ('X', 'X'), ('b', 'b'), ('.', '.')]



============================ Sentence 175 =============================

. 


>> Tokens are: 
 ['.']

>> Bigrams are: 
 []

>> Trigrams are: 
 []

>> POS Tags are: 
 [('.', '.')]

 (S ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('.', '.')]

>> Lemmatization: 
 [('.', '.')]



============================ Sentence 176 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Steps to construct SLR parser Construct Canonical set of LR(0) items Construct SLR parsing table Parse the input string     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: SLR(1)- simple LR S  AA A  aA | b S’.S S. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Steps', 'construct', 'SLR', 'parser', 'Construct', 'Canonical', 'set', 'LR', '(', '0', ')', 'items', 'Construct', 'SLR', 'parsing', 'table', 'Parse', 'input', 'string', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'SLR', '(', '1', ')', '-', 'simple', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'aA', '|', 'b', 'S', '’', '\uf0e0.S', 'S\uf0e0', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Steps'), ('Steps', 'construct'), ('construct', 'SLR'), ('SLR', 'parser'), ('parser', 'Construct'), ('Construct', 'Canonical'), ('Canonical', 'set'), ('set', 'LR'), ('LR', '('), ('(', '0'), ('0', ')'), (')', 'items'), ('items', 'Construct'), ('Construct', 'SLR'), ('SLR', 'parsing'), ('parsing', 'table'), ('table', 'Parse'), ('Parse', 'input'), ('input', 'string'), ('string', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'SLR'), ('SLR', '('), ('(', '1'), ('1', ')'), (')', '-'), ('-', 'simple'), ('simple', 'LR'), ('LR', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'AA'), ('AA', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'aA'), ('aA', '|'), ('|', 'b'), ('b', 'S'), ('S', '’'), ('’', '\uf0e0.S'), ('\uf0e0.S', 'S\uf0e0'), ('S\uf0e0', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Steps'), ('›', 'Steps', 'construct'), ('Steps', 'construct', 'SLR'), ('construct', 'SLR', 'parser'), ('SLR', 'parser', 'Construct'), ('parser', 'Construct', 'Canonical'), ('Construct', 'Canonical', 'set'), ('Canonical', 'set', 'LR'), ('set', 'LR', '('), ('LR', '(', '0'), ('(', '0', ')'), ('0', ')', 'items'), (')', 'items', 'Construct'), ('items', 'Construct', 'SLR'), ('Construct', 'SLR', 'parsing'), ('SLR', 'parsing', 'table'), ('parsing', 'table', 'Parse'), ('table', 'Parse', 'input'), ('Parse', 'input', 'string'), ('input', 'string', 'Prof.'), ('string', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'SLR'), (':', 'SLR', '('), ('SLR', '(', '1'), ('(', '1', ')'), ('1', ')', '-'), (')', '-', 'simple'), ('-', 'simple', 'LR'), ('simple', 'LR', 'S'), ('LR', 'S', '\uf0e0'), ('S', '\uf0e0', 'AA'), ('\uf0e0', 'AA', 'A'), ('AA', 'A', '\uf0e0'), ('A', '\uf0e0', 'aA'), ('\uf0e0', 'aA', '|'), ('aA', '|', 'b'), ('|', 'b', 'S'), ('b', 'S', '’'), ('S', '’', '\uf0e0.S'), ('’', '\uf0e0.S', 'S\uf0e0'), ('\uf0e0.S', 'S\uf0e0', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Steps', 'NNP'), ('construct', 'NN'), ('SLR', 'NNP'), ('parser', 'NN'), ('Construct', 'NNP'), ('Canonical', 'NNP'), ('set', 'VBD'), ('LR', 'NNP'), ('(', '('), ('0', 'CD'), (')', ')'), ('items', 'NNS'), ('Construct', 'NNP'), ('SLR', 'NNP'), ('parsing', 'VBG'), ('table', 'JJ'), ('Parse', 'NNP'), ('input', 'NN'), ('string', 'VBG'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('SLR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('-', ':'), ('simple', 'JJ'), ('LR', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('AA', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('aA', 'NN'), ('|', 'NN'), ('b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0.S', 'NNP'), ('S\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP
    ›/JJ
    Steps/NNP
    construct/NN
    SLR/NNP
    parser/NN
    Construct/NNP
    Canonical/NNP)
  set/VBD
  (NP LR/NNP)
  (/(
  0/CD
  )/)
  (NP items/NNS Construct/NNP SLR/NNP)
  parsing/VBG
  (NP table/JJ Parse/NNP input/NN)
  string/VBG
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP SLR/NNP)
  (/(
  1/CD
  )/)
  -/:
  (NP
    simple/JJ
    LR/NNP
    S/NNP
    /NNP
    AA/NNP
    A/NNP
    /NNP
    aA/NN
    |/NN
    b/NN
    S/NNP
    ’/NNP
    .S/NNP
    S/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Steps construct SLR parser Construct Canonical', 'LR', 'items Construct SLR', 'table Parse input', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'SLR', 'simple LR S \uf0e0 AA A \uf0e0 aA | b S ’ \uf0e0.S S\uf0e0']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Steps'), ('ORGANIZATION', 'SLR'), ('ORGANIZATION', 'Construct Canonical'), ('ORGANIZATION', 'Construct'), ('ORGANIZATION', 'Parse'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Steps', 'step'), ('construct', 'construct'), ('SLR', 'slr'), ('parser', 'parser'), ('Construct', 'construct'), ('Canonical', 'canon'), ('set', 'set'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Construct', 'construct'), ('SLR', 'slr'), ('parsing', 'pars'), ('table', 'tabl'), ('Parse', 'pars'), ('input', 'input'), ('string', 'string'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('SLR', 'slr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simpl'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.'), ('S\uf0e0', 's\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Steps', 'step'), ('construct', 'construct'), ('SLR', 'slr'), ('parser', 'parser'), ('Construct', 'construct'), ('Canonical', 'canon'), ('set', 'set'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Construct', 'construct'), ('SLR', 'slr'), ('parsing', 'pars'), ('table', 'tabl'), ('Parse', 'pars'), ('input', 'input'), ('string', 'string'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('SLR', 'slr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simpl'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.s'), ('S\uf0e0', 's\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Steps', 'Steps'), ('construct', 'construct'), ('SLR', 'SLR'), ('parser', 'parser'), ('Construct', 'Construct'), ('Canonical', 'Canonical'), ('set', 'set'), ('LR', 'LR'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Construct', 'Construct'), ('SLR', 'SLR'), ('parsing', 'parsing'), ('table', 'table'), ('Parse', 'Parse'), ('input', 'input'), ('string', 'string'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('SLR', 'SLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simple'), ('LR', 'LR'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('AA', 'AA'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('aA', 'aA'), ('|', '|'), ('b', 'b'), ('S', 'S'), ('’', '’'), ('\uf0e0.S', '\uf0e0.S'), ('S\uf0e0', 'S\uf0e0'), ('.', '.')]



============================ Sentence 177 =============================

AA A. 


>> Tokens are: 
 ['AA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('AA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('AA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('AA', 'NNP'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP AA/NNP A/NNP) ./.) 


>> Noun Phrases are: 
 ['AA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('AA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('AA', 'AA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 178 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 179 =============================

b  S’ S.  S A . 


>> Tokens are: 
 ['b', 'S', '’', '\uf0e0', 'S.', 'S\uf0e0', 'A', '.']

>> Bigrams are: 
 [('b', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', 'S.'), ('S.', 'S\uf0e0'), ('S\uf0e0', 'A'), ('A', '.')]

>> Trigrams are: 
 [('b', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', 'S.'), ('\uf0e0', 'S.', 'S\uf0e0'), ('S.', 'S\uf0e0', 'A'), ('S\uf0e0', 'A', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('S.', 'NNP'), ('S\uf0e0', 'NNP'), ('A', 'NNP'), ('.', '.')]

 (S (NP b/NN S/NNP ’/NNP /NNP S./NNP S/NNP A/NNP) ./.) 


>> Noun Phrases are: 
 ['b S ’ \uf0e0 S. S\uf0e0 A']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), ('S\uf0e0', 's\uf0e0'), ('A', 'a'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), ('S\uf0e0', 's\uf0e0'), ('A', 'a'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 'S.'), ('S\uf0e0', 'S\uf0e0'), ('A', 'A'), ('.', '.')]



============================ Sentence 180 =============================

A A. 


>> Tokens are: 
 ['A', 'A\uf0e0', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 181 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 182 =============================

b  A. 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 183 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 184 =============================

b  A a . 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 185 =============================

A A b.  A. 


>> Tokens are: 
 ['A', 'A\uf0e0', 'b.', 'A\uf0e0', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', 'A\uf0e0'), ('b.', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP b./NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0 b. A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 186 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 187 =============================

b  A a . 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 188 =============================

A A b.  A. 


>> Tokens are: 
 ['A', 'A\uf0e0', 'b.', 'A\uf0e0', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', 'A\uf0e0'), ('b.', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP b./NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0 b. A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 189 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 190 =============================

b  A a . 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 191 =============================

A A b.  S AA . 


>> Tokens are: 
 ['A', 'A\uf0e0', 'b.', 'S\uf0e0', 'AA', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', 'S\uf0e0'), ('S\uf0e0', 'AA'), ('AA', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', 'S\uf0e0'), ('b.', 'S\uf0e0', 'AA'), ('S\uf0e0', 'AA', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('S\uf0e0', 'NNP'), ('AA', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP b./NN S/NNP AA/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0 b. S\uf0e0 AA']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'AA'), ('.', '.')]



============================ Sentence 192 =============================

A aA . 


>> Tokens are: 
 ['A\uf0e0', 'aA', '.']

>> Bigrams are: 
 [('A\uf0e0', 'aA'), ('aA', '.')]

>> Trigrams are: 
 [('A\uf0e0', 'aA', '.')]

>> POS Tags are: 
 [('A\uf0e0', 'NNP'), ('aA', 'NN'), ('.', '.')]

 (S (NP A/NNP aA/NN) ./.) 


>> Noun Phrases are: 
 ['A\uf0e0 aA']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A\uf0e0', 'a\uf0e0'), ('aA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A\uf0e0', 'a\uf0e0'), ('aA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('A\uf0e0', 'A\uf0e0'), ('aA', 'aA'), ('.', '.')]



============================ Sentence 193 =============================

3 6 5 3 3 4 4 4           Augmented grammar  LR(0) item set     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to construct SLR parsing table Construct , the collection of sets of LR(0) items for  Stateis constructed from . 


>> Tokens are: 
 ['3', '6', '5', '3', '3', '4', '4', '4', 'Augmented', 'grammar', 'LR', '(', '0', ')', 'item', 'set', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Rules', 'construct', 'SLR', 'parsing', 'table', 'Construct', ',', 'collection', 'sets', 'LR', '(', '0', ')', 'items', 'Stateis', 'constructed', '.']

>> Bigrams are: 
 [('3', '6'), ('6', '5'), ('5', '3'), ('3', '3'), ('3', '4'), ('4', '4'), ('4', '4'), ('4', 'Augmented'), ('Augmented', 'grammar'), ('grammar', 'LR'), ('LR', '('), ('(', '0'), ('0', ')'), (')', 'item'), ('item', 'set'), ('set', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Rules'), ('Rules', 'construct'), ('construct', 'SLR'), ('SLR', 'parsing'), ('parsing', 'table'), ('table', 'Construct'), ('Construct', ','), (',', 'collection'), ('collection', 'sets'), ('sets', 'LR'), ('LR', '('), ('(', '0'), ('0', ')'), (')', 'items'), ('items', 'Stateis'), ('Stateis', 'constructed'), ('constructed', '.')]

>> Trigrams are: 
 [('3', '6', '5'), ('6', '5', '3'), ('5', '3', '3'), ('3', '3', '4'), ('3', '4', '4'), ('4', '4', '4'), ('4', '4', 'Augmented'), ('4', 'Augmented', 'grammar'), ('Augmented', 'grammar', 'LR'), ('grammar', 'LR', '('), ('LR', '(', '0'), ('(', '0', ')'), ('0', ')', 'item'), (')', 'item', 'set'), ('item', 'set', 'Prof.'), ('set', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Rules'), ('›', 'Rules', 'construct'), ('Rules', 'construct', 'SLR'), ('construct', 'SLR', 'parsing'), ('SLR', 'parsing', 'table'), ('parsing', 'table', 'Construct'), ('table', 'Construct', ','), ('Construct', ',', 'collection'), (',', 'collection', 'sets'), ('collection', 'sets', 'LR'), ('sets', 'LR', '('), ('LR', '(', '0'), ('(', '0', ')'), ('0', ')', 'items'), (')', 'items', 'Stateis'), ('items', 'Stateis', 'constructed'), ('Stateis', 'constructed', '.')]

>> POS Tags are: 
 [('3', 'CD'), ('6', 'CD'), ('5', 'CD'), ('3', 'CD'), ('3', 'CD'), ('4', 'CD'), ('4', 'CD'), ('4', 'CD'), ('Augmented', 'NNP'), ('grammar', 'NN'), ('LR', 'NNP'), ('(', '('), ('0', 'CD'), (')', ')'), ('item', 'NN'), ('set', 'VBN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NN'), ('Rules', 'NNP'), ('construct', 'NN'), ('SLR', 'NNP'), ('parsing', 'VBG'), ('table', 'JJ'), ('Construct', 'NNP'), (',', ','), ('collection', 'NN'), ('sets', 'NNS'), ('LR', 'NNP'), ('(', '('), ('0', 'CD'), (')', ')'), ('items', 'NNS'), ('Stateis', 'NNP'), ('constructed', 'VBD'), ('.', '.')]

 (S
  3/CD
  6/CD
  5/CD
  3/CD
  3/CD
  4/CD
  4/CD
  4/CD
  (NP Augmented/NNP grammar/NN LR/NNP)
  (/(
  0/CD
  )/)
  (NP item/NN)
  set/VBN
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NN Rules/NNP construct/NN SLR/NNP)
  parsing/VBG
  (NP table/JJ Construct/NNP)
  ,/,
  (NP collection/NN sets/NNS LR/NNP)
  (/(
  0/CD
  )/)
  (NP items/NNS Stateis/NNP)
  constructed/VBD
  ./.) 


>> Noun Phrases are: 
 ['Augmented grammar LR', 'item', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Rules construct SLR', 'table Construct', 'collection sets LR', 'items Stateis']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Rules'), ('PERSON', 'Stateis')] 

>> Stemming using Porter Stemmer: 
 [('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('Augmented', 'augment'), ('grammar', 'grammar'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('construct', 'construct'), ('SLR', 'slr'), ('parsing', 'pars'), ('table', 'tabl'), ('Construct', 'construct'), (',', ','), ('collection', 'collect'), ('sets', 'set'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Stateis', 'statei'), ('constructed', 'construct'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('Augmented', 'augment'), ('grammar', 'grammar'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'rule'), ('construct', 'construct'), ('SLR', 'slr'), ('parsing', 'pars'), ('table', 'tabl'), ('Construct', 'construct'), (',', ','), ('collection', 'collect'), ('sets', 'set'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Stateis', 'statei'), ('constructed', 'construct'), ('.', '.')]

>> Lemmatization: 
 [('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('Augmented', 'Augmented'), ('grammar', 'grammar'), ('LR', 'LR'), ('(', '('), ('0', '0'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Rules', 'Rules'), ('construct', 'construct'), ('SLR', 'SLR'), ('parsing', 'parsing'), ('table', 'table'), ('Construct', 'Construct'), (',', ','), ('collection', 'collection'), ('sets', 'set'), ('LR', 'LR'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Stateis', 'Stateis'), ('constructed', 'constructed'), ('.', '.')]



============================ Sentence 194 =============================

The parsing actions for state  are determined as follow : If is in  and GOTO  , then set to “shift j”. 


>> Tokens are: 
 ['The', 'parsing', 'actions', 'state', 'determined', 'follow', ':', 'If', 'GOTO', ',', 'set', '“', 'shift', 'j', '”', '.']

>> Bigrams are: 
 [('The', 'parsing'), ('parsing', 'actions'), ('actions', 'state'), ('state', 'determined'), ('determined', 'follow'), ('follow', ':'), (':', 'If'), ('If', 'GOTO'), ('GOTO', ','), (',', 'set'), ('set', '“'), ('“', 'shift'), ('shift', 'j'), ('j', '”'), ('”', '.')]

>> Trigrams are: 
 [('The', 'parsing', 'actions'), ('parsing', 'actions', 'state'), ('actions', 'state', 'determined'), ('state', 'determined', 'follow'), ('determined', 'follow', ':'), ('follow', ':', 'If'), (':', 'If', 'GOTO'), ('If', 'GOTO', ','), ('GOTO', ',', 'set'), (',', 'set', '“'), ('set', '“', 'shift'), ('“', 'shift', 'j'), ('shift', 'j', '”'), ('j', '”', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('parsing', 'NN'), ('actions', 'NNS'), ('state', 'NN'), ('determined', 'VBD'), ('follow', 'NN'), (':', ':'), ('If', 'IN'), ('GOTO', 'NNP'), (',', ','), ('set', 'VBD'), ('“', 'JJ'), ('shift', 'NN'), ('j', 'NN'), ('”', 'NNP'), ('.', '.')]

 (S
  (NP The/DT parsing/NN actions/NNS state/NN)
  determined/VBD
  (NP follow/NN)
  :/:
  If/IN
  (NP GOTO/NNP)
  ,/,
  set/VBD
  (NP “/JJ shift/NN j/NN ”/NNP)
  ./.) 


>> Noun Phrases are: 
 ['The parsing actions state', 'follow', 'GOTO', '“ shift j ”']

>> Named Entities are: 
 [('ORGANIZATION', 'GOTO')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('parsing', 'pars'), ('actions', 'action'), ('state', 'state'), ('determined', 'determin'), ('follow', 'follow'), (':', ':'), ('If', 'if'), ('GOTO', 'goto'), (',', ','), ('set', 'set'), ('“', '“'), ('shift', 'shift'), ('j', 'j'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('parsing', 'pars'), ('actions', 'action'), ('state', 'state'), ('determined', 'determin'), ('follow', 'follow'), (':', ':'), ('If', 'if'), ('GOTO', 'goto'), (',', ','), ('set', 'set'), ('“', '“'), ('shift', 'shift'), ('j', 'j'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('parsing', 'parsing'), ('actions', 'action'), ('state', 'state'), ('determined', 'determined'), ('follow', 'follow'), (':', ':'), ('If', 'If'), ('GOTO', 'GOTO'), (',', ','), ('set', 'set'), ('“', '“'), ('shift', 'shift'), ('j', 'j'), ('”', '”'), ('.', '.')]



============================ Sentence 195 =============================

Here a must be terminal. 


>> Tokens are: 
 ['Here', 'must', 'terminal', '.']

>> Bigrams are: 
 [('Here', 'must'), ('must', 'terminal'), ('terminal', '.')]

>> Trigrams are: 
 [('Here', 'must', 'terminal'), ('must', 'terminal', '.')]

>> POS Tags are: 
 [('Here', 'RB'), ('must', 'MD'), ('terminal', 'VB'), ('.', '.')]

 (S Here/RB must/MD terminal/VB ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Here', 'here'), ('must', 'must'), ('terminal', 'termin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Here', 'here'), ('must', 'must'), ('terminal', 'termin'), ('.', '.')]

>> Lemmatization: 
 [('Here', 'Here'), ('must', 'must'), ('terminal', 'terminal'), ('.', '.')]



============================ Sentence 196 =============================

If is in , then set to “reduce A ” for all a in ; here A may not be S’. 


>> Tokens are: 
 ['If', ',', 'set', '“', 'reduce', 'A\uf0e0', '”', ';', 'A', 'may', 'S', '’', '.']

>> Bigrams are: 
 [('If', ','), (',', 'set'), ('set', '“'), ('“', 'reduce'), ('reduce', 'A\uf0e0'), ('A\uf0e0', '”'), ('”', ';'), (';', 'A'), ('A', 'may'), ('may', 'S'), ('S', '’'), ('’', '.')]

>> Trigrams are: 
 [('If', ',', 'set'), (',', 'set', '“'), ('set', '“', 'reduce'), ('“', 'reduce', 'A\uf0e0'), ('reduce', 'A\uf0e0', '”'), ('A\uf0e0', '”', ';'), ('”', ';', 'A'), (';', 'A', 'may'), ('A', 'may', 'S'), ('may', 'S', '’'), ('S', '’', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), ('set', 'VBD'), ('“', 'RP'), ('reduce', 'VB'), ('A\uf0e0', 'NNP'), ('”', 'NNP'), (';', ':'), ('A', 'NNP'), ('may', 'MD'), ('S', 'NNP'), ('’', 'NNP'), ('.', '.')]

 (S
  If/IN
  ,/,
  set/VBD
  “/RP
  reduce/VB
  (NP A/NNP ”/NNP)
  ;/:
  (NP A/NNP)
  may/MD
  (NP S/NNP ’/NNP)
  ./.) 


>> Noun Phrases are: 
 ['A\uf0e0 ”', 'A', 'S ’']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), ('set', 'set'), ('“', '“'), ('reduce', 'reduc'), ('A\uf0e0', 'a\uf0e0'), ('”', '”'), (';', ';'), ('A', 'a'), ('may', 'may'), ('S', 's'), ('’', '’'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), ('set', 'set'), ('“', '“'), ('reduce', 'reduc'), ('A\uf0e0', 'a\uf0e0'), ('”', '”'), (';', ';'), ('A', 'a'), ('may', 'may'), ('S', 's'), ('’', '’'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), ('set', 'set'), ('“', '“'), ('reduce', 'reduce'), ('A\uf0e0', 'A\uf0e0'), ('”', '”'), (';', ';'), ('A', 'A'), ('may', 'may'), ('S', 'S'), ('’', '’'), ('.', '.')]



============================ Sentence 197 =============================

If is in , then set action to “accept”. 


>> Tokens are: 
 ['If', ',', 'set', 'action', '“', 'accept', '”', '.']

>> Bigrams are: 
 [('If', ','), (',', 'set'), ('set', 'action'), ('action', '“'), ('“', 'accept'), ('accept', '”'), ('”', '.')]

>> Trigrams are: 
 [('If', ',', 'set'), (',', 'set', 'action'), ('set', 'action', '“'), ('action', '“', 'accept'), ('“', 'accept', '”'), ('accept', '”', '.')]

>> POS Tags are: 
 [('If', 'IN'), (',', ','), ('set', 'VBN'), ('action', 'NN'), ('“', 'NNP'), ('accept', 'VBD'), ('”', 'NNP'), ('.', '.')]

 (S If/IN ,/, set/VBN (NP action/NN “/NNP) accept/VBD (NP ”/NNP) ./.) 


>> Noun Phrases are: 
 ['action “', '”']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), (',', ','), ('set', 'set'), ('action', 'action'), ('“', '“'), ('accept', 'accept'), ('”', '”'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), (',', ','), ('set', 'set'), ('action', 'action'), ('“', '“'), ('accept', 'accept'), ('”', '”'), ('.', '.')]

>> Lemmatization: 
 [('If', 'If'), (',', ','), ('set', 'set'), ('action', 'action'), ('“', '“'), ('accept', 'accept'), ('”', '”'), ('.', '.')]



============================ Sentence 198 =============================

The goto transitions for state i are constructed for all non terminals A using the All entries not defined by rules 2 and 3 are made error. 


>> Tokens are: 
 ['The', 'goto', 'transitions', 'state', 'constructed', 'non', 'terminals', 'A', 'using', 'All', 'entries', 'defined', 'rules', '2', '3', 'made', 'error', '.']

>> Bigrams are: 
 [('The', 'goto'), ('goto', 'transitions'), ('transitions', 'state'), ('state', 'constructed'), ('constructed', 'non'), ('non', 'terminals'), ('terminals', 'A'), ('A', 'using'), ('using', 'All'), ('All', 'entries'), ('entries', 'defined'), ('defined', 'rules'), ('rules', '2'), ('2', '3'), ('3', 'made'), ('made', 'error'), ('error', '.')]

>> Trigrams are: 
 [('The', 'goto', 'transitions'), ('goto', 'transitions', 'state'), ('transitions', 'state', 'constructed'), ('state', 'constructed', 'non'), ('constructed', 'non', 'terminals'), ('non', 'terminals', 'A'), ('terminals', 'A', 'using'), ('A', 'using', 'All'), ('using', 'All', 'entries'), ('All', 'entries', 'defined'), ('entries', 'defined', 'rules'), ('defined', 'rules', '2'), ('rules', '2', '3'), ('2', '3', 'made'), ('3', 'made', 'error'), ('made', 'error', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('goto', 'NN'), ('transitions', 'NNS'), ('state', 'NN'), ('constructed', 'VBD'), ('non', 'JJ'), ('terminals', 'NNS'), ('A', 'DT'), ('using', 'VBG'), ('All', 'NNP'), ('entries', 'NNS'), ('defined', 'VBD'), ('rules', 'NNS'), ('2', 'CD'), ('3', 'CD'), ('made', 'VBD'), ('error', 'NN'), ('.', '.')]

 (S
  (NP The/DT goto/NN transitions/NNS state/NN)
  constructed/VBD
  (NP non/JJ terminals/NNS)
  A/DT
  using/VBG
  (NP All/NNP entries/NNS)
  defined/VBD
  (NP rules/NNS)
  2/CD
  3/CD
  made/VBD
  (NP error/NN)
  ./.) 


>> Noun Phrases are: 
 ['The goto transitions state', 'non terminals', 'All entries', 'rules', 'error']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('goto', 'goto'), ('transitions', 'transit'), ('state', 'state'), ('constructed', 'construct'), ('non', 'non'), ('terminals', 'termin'), ('A', 'a'), ('using', 'use'), ('All', 'all'), ('entries', 'entri'), ('defined', 'defin'), ('rules', 'rule'), ('2', '2'), ('3', '3'), ('made', 'made'), ('error', 'error'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('goto', 'goto'), ('transitions', 'transit'), ('state', 'state'), ('constructed', 'construct'), ('non', 'non'), ('terminals', 'termin'), ('A', 'a'), ('using', 'use'), ('All', 'all'), ('entries', 'entri'), ('defined', 'defin'), ('rules', 'rule'), ('2', '2'), ('3', '3'), ('made', 'made'), ('error', 'error'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('goto', 'goto'), ('transitions', 'transition'), ('state', 'state'), ('constructed', 'constructed'), ('non', 'non'), ('terminals', 'terminal'), ('A', 'A'), ('using', 'using'), ('All', 'All'), ('entries', 'entry'), ('defined', 'defined'), ('rules', 'rule'), ('2', '2'), ('3', '3'), ('made', 'made'), ('error', 'error'), ('.', '.')]



============================ Sentence 199 =============================

Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: SLR(1)- simple LR 		Action			Go to	 	Item set	a	b	$	S	A 	0	S3 	S4		1	2 	1			Accept 		 	2	S3 	S4 			5 	3	S3 	S4 			6 	4	R3 	R3	R3		 	5			R1 		 	6	R2 	R2 	R2 		  S’. 


>> Tokens are: 
 ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'SLR', '(', '1', ')', '-', 'simple', 'LR', 'Action', 'Go', 'Item', 'set', 'b', '$', 'S', 'A', '0', 'S3', 'S4', '1', '2', '1', 'Accept', '2', 'S3', 'S4', '5', '3', 'S3', 'S4', '6', '4', 'R3', 'R3', 'R3', '5', 'R1', '6', 'R2', 'R2', 'R2', 'S', '’', '\uf0e0', '.']

>> Bigrams are: 
 [('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'SLR'), ('SLR', '('), ('(', '1'), ('1', ')'), (')', '-'), ('-', 'simple'), ('simple', 'LR'), ('LR', 'Action'), ('Action', 'Go'), ('Go', 'Item'), ('Item', 'set'), ('set', 'b'), ('b', '$'), ('$', 'S'), ('S', 'A'), ('A', '0'), ('0', 'S3'), ('S3', 'S4'), ('S4', '1'), ('1', '2'), ('2', '1'), ('1', 'Accept'), ('Accept', '2'), ('2', 'S3'), ('S3', 'S4'), ('S4', '5'), ('5', '3'), ('3', 'S3'), ('S3', 'S4'), ('S4', '6'), ('6', '4'), ('4', 'R3'), ('R3', 'R3'), ('R3', 'R3'), ('R3', '5'), ('5', 'R1'), ('R1', '6'), ('6', 'R2'), ('R2', 'R2'), ('R2', 'R2'), ('R2', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', '.')]

>> Trigrams are: 
 [('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'SLR'), (':', 'SLR', '('), ('SLR', '(', '1'), ('(', '1', ')'), ('1', ')', '-'), (')', '-', 'simple'), ('-', 'simple', 'LR'), ('simple', 'LR', 'Action'), ('LR', 'Action', 'Go'), ('Action', 'Go', 'Item'), ('Go', 'Item', 'set'), ('Item', 'set', 'b'), ('set', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'A'), ('S', 'A', '0'), ('A', '0', 'S3'), ('0', 'S3', 'S4'), ('S3', 'S4', '1'), ('S4', '1', '2'), ('1', '2', '1'), ('2', '1', 'Accept'), ('1', 'Accept', '2'), ('Accept', '2', 'S3'), ('2', 'S3', 'S4'), ('S3', 'S4', '5'), ('S4', '5', '3'), ('5', '3', 'S3'), ('3', 'S3', 'S4'), ('S3', 'S4', '6'), ('S4', '6', '4'), ('6', '4', 'R3'), ('4', 'R3', 'R3'), ('R3', 'R3', 'R3'), ('R3', 'R3', '5'), ('R3', '5', 'R1'), ('5', 'R1', '6'), ('R1', '6', 'R2'), ('6', 'R2', 'R2'), ('R2', 'R2', 'R2'), ('R2', 'R2', 'S'), ('R2', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('SLR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('-', ':'), ('simple', 'JJ'), ('LR', 'NNP'), ('Action', 'NNP'), ('Go', 'NNP'), ('Item', 'NNP'), ('set', 'VBD'), ('b', 'RP'), ('$', '$'), ('S', 'NNP'), ('A', 'NNP'), ('0', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NNP'), ('2', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('5', 'CD'), ('3', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('6', 'CD'), ('4', 'CD'), ('R3', 'NNP'), ('R3', 'NNP'), ('R3', 'NNP'), ('5', 'CD'), ('R1', 'NNP'), ('6', 'CD'), ('R2', 'NNP'), ('R2', 'NNP'), ('R2', 'NNP'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP SLR/NNP)
  (/(
  1/CD
  )/)
  -/:
  (NP simple/JJ LR/NNP Action/NNP Go/NNP Item/NNP)
  set/VBD
  b/RP
  $/$
  (NP S/NNP A/NNP)
  0/CD
  (NP S3/NNP S4/NNP)
  1/CD
  2/CD
  1/CD
  (NP Accept/NNP)
  2/CD
  (NP S3/NNP S4/NNP)
  5/CD
  3/CD
  (NP S3/NNP S4/NNP)
  6/CD
  4/CD
  (NP R3/NNP R3/NNP R3/NNP)
  5/CD
  (NP R1/NNP)
  6/CD
  (NP R2/NNP R2/NNP R2/NNP S/NNP ’/NNP /NNP)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'SLR', 'simple LR Action Go Item', 'S A', 'S3 S4', 'Accept', 'S3 S4', 'S3 S4', 'R3 R3 R3', 'R1', 'R2 R2 R2 S ’ \uf0e0']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'LR Action Go Item')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('SLR', 'slr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simpl'), ('LR', 'lr'), ('Action', 'action'), ('Go', 'go'), ('Item', 'item'), ('set', 'set'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S3', 's3'), ('S4', 's4'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('6', '6'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('R2', 'r2'), ('R2', 'r2'), ('R2', 'r2'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('SLR', 'slr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simpl'), ('LR', 'lr'), ('Action', 'action'), ('Go', 'go'), ('Item', 'item'), ('set', 'set'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S3', 's3'), ('S4', 's4'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('6', '6'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('R2', 'r2'), ('R2', 'r2'), ('R2', 'r2'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('SLR', 'SLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simple'), ('LR', 'LR'), ('Action', 'Action'), ('Go', 'Go'), ('Item', 'Item'), ('set', 'set'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'A'), ('0', '0'), ('S3', 'S3'), ('S4', 'S4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'Accept'), ('2', '2'), ('S3', 'S3'), ('S4', 'S4'), ('5', '5'), ('3', '3'), ('S3', 'S3'), ('S4', 'S4'), ('6', '6'), ('4', '4'), ('R3', 'R3'), ('R3', 'R3'), ('R3', 'R3'), ('5', '5'), ('R1', 'R1'), ('6', '6'), ('R2', 'R2'), ('R2', 'R2'), ('R2', 'R2'), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('.', '.')]



============================ Sentence 200 =============================

S S. 


>> Tokens are: 
 ['S', 'S\uf0e0', '.']

>> Bigrams are: 
 [('S', 'S\uf0e0'), ('S\uf0e0', '.')]

>> Trigrams are: 
 [('S', 'S\uf0e0', '.')]

>> POS Tags are: 
 [('S', 'NNP'), ('S\uf0e0', 'NNP'), ('.', '.')]

 (S (NP S/NNP S/NNP) ./.) 


>> Noun Phrases are: 
 ['S S\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('S', 's'), ('S\uf0e0', 's\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S', 's'), ('S\uf0e0', 's\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('S', 'S'), ('S\uf0e0', 'S\uf0e0'), ('.', '.')]



============================ Sentence 201 =============================

AA A. 


>> Tokens are: 
 ['AA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('AA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('AA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('AA', 'NNP'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP AA/NNP A/NNP) ./.) 


>> Noun Phrases are: 
 ['AA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('AA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('AA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('AA', 'AA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 202 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 203 =============================

b  S’ S.  S A . 


>> Tokens are: 
 ['b', 'S', '’', '\uf0e0', 'S.', 'S\uf0e0', 'A', '.']

>> Bigrams are: 
 [('b', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', 'S.'), ('S.', 'S\uf0e0'), ('S\uf0e0', 'A'), ('A', '.')]

>> Trigrams are: 
 [('b', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', 'S.'), ('\uf0e0', 'S.', 'S\uf0e0'), ('S.', 'S\uf0e0', 'A'), ('S\uf0e0', 'A', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('S.', 'NNP'), ('S\uf0e0', 'NNP'), ('A', 'NNP'), ('.', '.')]

 (S (NP b/NN S/NNP ’/NNP /NNP S./NNP S/NNP A/NNP) ./.) 


>> Noun Phrases are: 
 ['b S ’ \uf0e0 S. S\uf0e0 A']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), ('S\uf0e0', 's\uf0e0'), ('A', 'a'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), ('S\uf0e0', 's\uf0e0'), ('A', 'a'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 'S.'), ('S\uf0e0', 'S\uf0e0'), ('A', 'A'), ('.', '.')]



============================ Sentence 204 =============================

A A. 


>> Tokens are: 
 ['A', 'A\uf0e0', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 205 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 206 =============================

b  A. 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 207 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 208 =============================

b  A a . 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 209 =============================

A A b.  A. 


>> Tokens are: 
 ['A', 'A\uf0e0', 'b.', 'A\uf0e0', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', 'A\uf0e0'), ('b.', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP b./NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0 b. A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 210 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 211 =============================

b  A a . 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 212 =============================

A A b.  A. 


>> Tokens are: 
 ['A', 'A\uf0e0', 'b.', 'A\uf0e0', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', 'A\uf0e0'), ('b.', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP b./NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0 b. A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 213 =============================

aA A. 


>> Tokens are: 
 ['aA', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 214 =============================

b  A a . 


>> Tokens are: 
 ['b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN A/NNP) ./.) 


>> Noun Phrases are: 
 ['b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 215 =============================

A A b.  S AA . 


>> Tokens are: 
 ['A', 'A\uf0e0', 'b.', 'S\uf0e0', 'AA', '.']

>> Bigrams are: 
 [('A', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', 'S\uf0e0'), ('S\uf0e0', 'AA'), ('AA', '.')]

>> Trigrams are: 
 [('A', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', 'S\uf0e0'), ('b.', 'S\uf0e0', 'AA'), ('S\uf0e0', 'AA', '.')]

>> POS Tags are: 
 [('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('S\uf0e0', 'NNP'), ('AA', 'NNP'), ('.', '.')]

 (S (NP A/DT A/NNP b./NN S/NNP AA/NNP) ./.) 


>> Noun Phrases are: 
 ['A A\uf0e0 b. S\uf0e0 AA']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('A', 'A'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'AA'), ('.', '.')]



============================ Sentence 216 =============================

A aA . 


>> Tokens are: 
 ['A\uf0e0', 'aA', '.']

>> Bigrams are: 
 [('A\uf0e0', 'aA'), ('aA', '.')]

>> Trigrams are: 
 [('A\uf0e0', 'aA', '.')]

>> POS Tags are: 
 [('A\uf0e0', 'NNP'), ('aA', 'NN'), ('.', '.')]

 (S (NP A/NNP aA/NN) ./.) 


>> Noun Phrases are: 
 ['A\uf0e0 aA']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('A\uf0e0', 'a\uf0e0'), ('aA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('A\uf0e0', 'a\uf0e0'), ('aA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('A\uf0e0', 'A\uf0e0'), ('aA', 'aA'), ('.', '.')]



============================ Sentence 217 =============================

3 6 5 3 3 4 4 4           S  AA A  aA | b                        Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  How to calculate look ahead? 


>> Tokens are: 
 ['3', '6', '5', '3', '3', '4', '4', '4', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'aA', '|', 'b', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'How', 'calculate', 'look', 'ahead', '?']

>> Bigrams are: 
 [('3', '6'), ('6', '5'), ('5', '3'), ('3', '3'), ('3', '4'), ('4', '4'), ('4', '4'), ('4', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'AA'), ('AA', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'aA'), ('aA', '|'), ('|', 'b'), ('b', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'Parsing'), ('Parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'How'), ('How', 'calculate'), ('calculate', 'look'), ('look', 'ahead'), ('ahead', '?')]

>> Trigrams are: 
 [('3', '6', '5'), ('6', '5', '3'), ('5', '3', '3'), ('3', '3', '4'), ('3', '4', '4'), ('4', '4', '4'), ('4', '4', 'S'), ('4', 'S', '\uf0e0'), ('S', '\uf0e0', 'AA'), ('\uf0e0', 'AA', 'A'), ('AA', 'A', '\uf0e0'), ('A', '\uf0e0', 'aA'), ('\uf0e0', 'aA', '|'), ('aA', '|', 'b'), ('|', 'b', 'Prof.'), ('b', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'Parsing'), ('predictive', 'Parsing', ')'), ('Parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'How'), ('›', 'How', 'calculate'), ('How', 'calculate', 'look'), ('calculate', 'look', 'ahead'), ('look', 'ahead', '?')]

>> POS Tags are: 
 [('3', 'CD'), ('6', 'CD'), ('5', 'CD'), ('3', 'CD'), ('3', 'CD'), ('4', 'CD'), ('4', 'CD'), ('4', 'CD'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('AA', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('aA', 'NN'), ('|', 'NN'), ('b', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('Parsing', 'NNP'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('How', 'NNP'), ('calculate', 'JJ'), ('look', 'NN'), ('ahead', 'RB'), ('?', '.')]

 (S
  3/CD
  6/CD
  5/CD
  3/CD
  3/CD
  4/CD
  4/CD
  4/CD
  (NP
    S/NNP
    /NNP
    AA/NNP
    A/NNP
    /NNP
    aA/NN
    |/NN
    b/NN
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ Parsing/NNP)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP How/NNP)
  (NP calculate/JJ look/NN)
  ahead/RB
  ?/.) 


>> Noun Phrases are: 
 ['S \uf0e0 AA A \uf0e0 aA | b Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive Parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› How', 'calculate look']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('How', 'how'), ('calculate', 'calcul'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('How', 'how'), ('calculate', 'calcul'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')]

>> Lemmatization: 
 [('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('AA', 'AA'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('aA', 'aA'), ('|', '|'), ('b', 'b'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'Parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('How', 'How'), ('calculate', 'calculate'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')]



============================ Sentence 218 =============================

How to calculate look ahead? 


>> Tokens are: 
 ['How', 'calculate', 'look', 'ahead', '?']

>> Bigrams are: 
 [('How', 'calculate'), ('calculate', 'look'), ('look', 'ahead'), ('ahead', '?')]

>> Trigrams are: 
 [('How', 'calculate', 'look'), ('calculate', 'look', 'ahead'), ('look', 'ahead', '?')]

>> POS Tags are: 
 [('How', 'WRB'), ('calculate', 'JJ'), ('look', 'NN'), ('ahead', 'RB'), ('?', '.')]

 (S How/WRB (NP calculate/JJ look/NN) ahead/RB ?/.) 


>> Noun Phrases are: 
 ['calculate look']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('How', 'how'), ('calculate', 'calcul'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('How', 'how'), ('calculate', 'calcul'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')]

>> Lemmatization: 
 [('How', 'How'), ('calculate', 'calculate'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')]



============================ Sentence 219 =============================

SCC C cC | d Closure(I) 	S’.S,$ 	S.CC, 	C.cC, 	C.d,   	S’			. 


>> Tokens are: 
 ['S\uf0e0CC', 'C\uf0e0', 'cC', '|', 'Closure', '(', 'I', ')', 'S', '’', '\uf0e0.S', ',', '$', 'S\uf0e0.CC', ',', 'C\uf0e0.cC', ',', 'C\uf0e0.d', ',', 'S', '’', '\uf0e0', '.']

>> Bigrams are: 
 [('S\uf0e0CC', 'C\uf0e0'), ('C\uf0e0', 'cC'), ('cC', '|'), ('|', 'Closure'), ('Closure', '('), ('(', 'I'), ('I', ')'), (')', 'S'), ('S', '’'), ('’', '\uf0e0.S'), ('\uf0e0.S', ','), (',', '$'), ('$', 'S\uf0e0.CC'), ('S\uf0e0.CC', ','), (',', 'C\uf0e0.cC'), ('C\uf0e0.cC', ','), (',', 'C\uf0e0.d'), ('C\uf0e0.d', ','), (',', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', '.')]

>> Trigrams are: 
 [('S\uf0e0CC', 'C\uf0e0', 'cC'), ('C\uf0e0', 'cC', '|'), ('cC', '|', 'Closure'), ('|', 'Closure', '('), ('Closure', '(', 'I'), ('(', 'I', ')'), ('I', ')', 'S'), (')', 'S', '’'), ('S', '’', '\uf0e0.S'), ('’', '\uf0e0.S', ','), ('\uf0e0.S', ',', '$'), (',', '$', 'S\uf0e0.CC'), ('$', 'S\uf0e0.CC', ','), ('S\uf0e0.CC', ',', 'C\uf0e0.cC'), (',', 'C\uf0e0.cC', ','), ('C\uf0e0.cC', ',', 'C\uf0e0.d'), (',', 'C\uf0e0.d', ','), ('C\uf0e0.d', ',', 'S'), (',', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', '.')]

>> POS Tags are: 
 [('S\uf0e0CC', 'NNP'), ('C\uf0e0', 'NNP'), ('cC', 'NN'), ('|', 'NN'), ('Closure', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.CC', 'NNP'), (',', ','), ('C\uf0e0.cC', 'NNP'), (',', ','), ('C\uf0e0.d', 'NNP'), (',', ','), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP SCC/NNP C/NNP cC/NN |/NN Closure/NNP)
  (/(
  I/PRP
  )/)
  (NP S/NNP ’/NNP .S/NNP)
  ,/,
  $/$
  (NP S.CC/NNP)
  ,/,
  (NP C.cC/NNP)
  ,/,
  (NP C.d/NNP)
  ,/,
  (NP S/NNP ’/NNP /NNP)
  ./.) 


>> Noun Phrases are: 
 ['S\uf0e0CC C\uf0e0 cC | Closure', 'S ’ \uf0e0.S', 'S\uf0e0.CC', 'C\uf0e0.cC', 'C\uf0e0.d', 'S ’ \uf0e0']

>> Named Entities are: 
 [('GPE', 'Closure'), ('PERSON', 'S')] 

>> Stemming using Porter Stemmer: 
 [('S\uf0e0CC', 's\uf0e0cc'), ('C\uf0e0', 'c\uf0e0'), ('cC', 'cc'), ('|', '|'), ('Closure', 'closur'), ('(', '('), ('I', 'i'), (')', ')'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.'), (',', ','), ('$', '$'), ('S\uf0e0.CC', 's\uf0e0.cc'), (',', ','), ('C\uf0e0.cC', 'c\uf0e0.cc'), (',', ','), ('C\uf0e0.d', 'c\uf0e0.d'), (',', ','), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S\uf0e0CC', 's\uf0e0cc'), ('C\uf0e0', 'c\uf0e0'), ('cC', 'cc'), ('|', '|'), ('Closure', 'closur'), ('(', '('), ('I', 'i'), (')', ')'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.s'), (',', ','), ('$', '$'), ('S\uf0e0.CC', 's\uf0e0.cc'), (',', ','), ('C\uf0e0.cC', 'c\uf0e0.cc'), (',', ','), ('C\uf0e0.d', 'c\uf0e0.d'), (',', ','), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('S\uf0e0CC', 'S\uf0e0CC'), ('C\uf0e0', 'C\uf0e0'), ('cC', 'cC'), ('|', '|'), ('Closure', 'Closure'), ('(', '('), ('I', 'I'), (')', ')'), ('S', 'S'), ('’', '’'), ('\uf0e0.S', '\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.CC', 'S\uf0e0.CC'), (',', ','), ('C\uf0e0.cC', 'C\uf0e0.cC'), (',', ','), ('C\uf0e0.d', 'C\uf0e0.d'), (',', ','), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('.', '.')]



============================ Sentence 220 =============================

S		,	$ 	A			. 


>> Tokens are: 
 ['S', ',', '$', 'A', '\uf0e0', '.']

>> Bigrams are: 
 [('S', ','), (',', '$'), ('$', 'A'), ('A', '\uf0e0'), ('\uf0e0', '.')]

>> Trigrams are: 
 [('S', ',', '$'), (',', '$', 'A'), ('$', 'A', '\uf0e0'), ('A', '\uf0e0', '.')]

>> POS Tags are: 
 [('S', 'NNP'), (',', ','), ('$', '$'), ('A', 'DT'), ('\uf0e0', 'NN'), ('.', '.')]

 (S (NP S/NNP) ,/, $/$ (NP A/DT /NN) ./.) 


>> Noun Phrases are: 
 ['S', 'A \uf0e0']

>> Named Entities are: 
 [('GPE', 'S')] 

>> Stemming using Porter Stemmer: 
 [('S', 's'), (',', ','), ('$', '$'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('S', 's'), (',', ','), ('$', '$'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('S', 'S'), (',', ','), ('$', '$'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('.', '.')]



============================ Sentence 221 =============================

X		,	     $ 	S			. 


>> Tokens are: 
 ['X', ',', '$', 'S', '\uf0e0', '.']

>> Bigrams are: 
 [('X', ','), (',', '$'), ('$', 'S'), ('S', '\uf0e0'), ('\uf0e0', '.')]

>> Trigrams are: 
 [('X', ',', '$'), (',', '$', 'S'), ('$', 'S', '\uf0e0'), ('S', '\uf0e0', '.')]

>> POS Tags are: 
 [('X', 'NN'), (',', ','), ('$', '$'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('.', '.')]

 (S (NP X/NN) ,/, $/$ (NP S/NNP /NNP) ./.) 


>> Noun Phrases are: 
 ['X', 'S \uf0e0']

>> Named Entities are: 
 [('GPE', 'X')] 

>> Stemming using Porter Stemmer: 
 [('X', 'x'), (',', ','), ('$', '$'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('X', 'x'), (',', ','), ('$', '$'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('X', 'X'), (',', ','), ('$', '$'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('.', '.')]



============================ Sentence 222 =============================

C	C	,	$ 	A			. 


>> Tokens are: 
 ['C', 'C', ',', '$', 'A', '\uf0e0', '.']

>> Bigrams are: 
 [('C', 'C'), ('C', ','), (',', '$'), ('$', 'A'), ('A', '\uf0e0'), ('\uf0e0', '.')]

>> Trigrams are: 
 [('C', 'C', ','), ('C', ',', '$'), (',', '$', 'A'), ('$', 'A', '\uf0e0'), ('A', '\uf0e0', '.')]

>> POS Tags are: 
 [('C', 'NNP'), ('C', 'NNP'), (',', ','), ('$', '$'), ('A', 'DT'), ('\uf0e0', 'NN'), ('.', '.')]

 (S (NP C/NNP C/NNP) ,/, $/$ (NP A/DT /NN) ./.) 


>> Noun Phrases are: 
 ['C C', 'A \uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('C', 'c'), ('C', 'c'), (',', ','), ('$', '$'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('C', 'c'), ('C', 'c'), (',', ','), ('$', '$'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('C', 'C'), ('C', 'C'), (',', ','), ('$', '$'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('.', '.')]



============================ Sentence 223 =============================

X		,	     c|d c|d    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: CLR(1)- canonical LR S  AA A  aA | b S’.S,$ S.AA,$  A.aA, a|b A.b, a|b  S’ S., $  S A.A,$ A.aA, $ A. 


>> Tokens are: 
 ['X', ',', 'c|d', 'c|d', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'CLR', '(', '1', ')', '-', 'canonical', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'aA', '|', 'b', 'S', '’', '\uf0e0.S', ',', '$', 'S\uf0e0.AA', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'S', '’', '\uf0e0', 'S.', ',', '$', 'S\uf0e0', 'A.A', ',', '$', 'A\uf0e0.aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('X', ','), (',', 'c|d'), ('c|d', 'c|d'), ('c|d', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'CLR'), ('CLR', '('), ('(', '1'), ('1', ')'), (')', '-'), ('-', 'canonical'), ('canonical', 'LR'), ('LR', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'AA'), ('AA', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'aA'), ('aA', '|'), ('|', 'b'), ('b', 'S'), ('S', '’'), ('’', '\uf0e0.S'), ('\uf0e0.S', ','), (',', '$'), ('$', 'S\uf0e0.AA'), ('S\uf0e0.AA', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0.b'), ('A\uf0e0.b', ','), (',', 'a|b'), ('a|b', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', 'S.'), ('S.', ','), (',', '$'), ('$', 'S\uf0e0'), ('S\uf0e0', 'A.A'), ('A.A', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('X', ',', 'c|d'), (',', 'c|d', 'c|d'), ('c|d', 'c|d', 'Prof.'), ('c|d', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'CLR'), (':', 'CLR', '('), ('CLR', '(', '1'), ('(', '1', ')'), ('1', ')', '-'), (')', '-', 'canonical'), ('-', 'canonical', 'LR'), ('canonical', 'LR', 'S'), ('LR', 'S', '\uf0e0'), ('S', '\uf0e0', 'AA'), ('\uf0e0', 'AA', 'A'), ('AA', 'A', '\uf0e0'), ('A', '\uf0e0', 'aA'), ('\uf0e0', 'aA', '|'), ('aA', '|', 'b'), ('|', 'b', 'S'), ('b', 'S', '’'), ('S', '’', '\uf0e0.S'), ('’', '\uf0e0.S', ','), ('\uf0e0.S', ',', '$'), (',', '$', 'S\uf0e0.AA'), ('$', 'S\uf0e0.AA', ','), ('S\uf0e0.AA', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0.b'), ('a|b', 'A\uf0e0.b', ','), ('A\uf0e0.b', ',', 'a|b'), (',', 'a|b', 'S'), ('a|b', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', 'S.'), ('\uf0e0', 'S.', ','), ('S.', ',', '$'), (',', '$', 'S\uf0e0'), ('$', 'S\uf0e0', 'A.A'), ('S\uf0e0', 'A.A', ','), ('A.A', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('X', 'NN'), (',', ','), ('c|d', 'JJ'), ('c|d', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('CLR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('-', ':'), ('canonical', 'JJ'), ('LR', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('AA', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('aA', 'NN'), ('|', 'NN'), ('b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('S.', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0', 'NNP'), ('A.A', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP X/NN)
  ,/,
  (NP c|d/JJ c|d/NN Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP CLR/NNP)
  (/(
  1/CD
  )/)
  -/:
  (NP
    canonical/JJ
    LR/NNP
    S/NNP
    /NNP
    AA/NNP
    A/NNP
    /NNP
    aA/NN
    |/NN
    b/NN
    S/NNP
    ’/NNP
    .S/NNP)
  ,/,
  $/$
  (NP S.AA/NNP)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  (NP a|b/NN A.b/NNP)
  ,/,
  (NP a|b/NN S/NNP ’/NNP /NNP S./NNP)
  ,/,
  $/$
  (NP S/NNP A.A/NNP)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  $/$
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['X', 'c|d c|d Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'CLR', 'canonical LR S \uf0e0 AA A \uf0e0 aA | b S ’ \uf0e0.S', 'S\uf0e0.AA', 'A\uf0e0.aA', 'a|b A\uf0e0.b', 'a|b S ’ \uf0e0 S.', 'S\uf0e0 A.A', 'A\uf0e0.aA', 'A\uf0e0']

>> Named Entities are: 
 [('GPE', 'X'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('X', 'x'), (',', ','), ('c|d', 'c|d'), ('c|d', 'c|d'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CLR', 'clr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canon'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 's\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('X', 'x'), (',', ','), ('c|d', 'c|d'), ('c|d', 'c|d'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CLR', 'clr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canon'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.s'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 's\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('X', 'X'), (',', ','), ('c|d', 'c|d'), ('c|d', 'c|d'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('CLR', 'CLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canonical'), ('LR', 'LR'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('AA', 'AA'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('aA', 'aA'), ('|', '|'), ('b', 'b'), ('S', 'S'), ('’', '’'), ('\uf0e0.S', '\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'S\uf0e0.AA'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 'S.'), (',', ','), ('$', '$'), ('S\uf0e0', 'S\uf0e0'), ('A.A', 'A.A'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 224 =============================

b, $  A.aA ,a|b A. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN) ,/, $/$ (NP A.aA/NNP) ,/, (NP a|b/JJ A/NNP) ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0.aA', 'a|b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 225 =============================

b, a|b   Aa.A, a|b A b., a|b  A. 


>> Tokens are: 
 ['b', ',', 'a|b', 'A\uf0e0a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', 'a|b'), ('a|b', 'A\uf0e0a.A'), ('A\uf0e0a.A', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', 'a|b'), (',', 'a|b', 'A\uf0e0a.A'), ('a|b', 'A\uf0e0a.A', ','), ('A\uf0e0a.A', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('a|b', 'NN'), ('A\uf0e0a.A', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  (NP a|b/NN Aa.A/NNP)
  ,/,
  (NP a|b/NN A/NNP b./NN)
  ,/,
  (NP a|b/JJ A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'a|b A\uf0e0a.A', 'a|b A\uf0e0 b.', 'a|b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'A\uf0e0a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 226 =============================

aA,$ A. 


>> Tokens are: 
 ['aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN) ,/, $/$ (NP A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 227 =============================

b, $  A a.A,$ A b. ,$  A.aA , a|b A.b , a|b  A a.A , a|b A b., a|b  S AA. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'A\uf0e0', 'a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'S\uf0e0', 'AA', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0.b'), ('A\uf0e0.b', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b'), ('a|b', 'S\uf0e0'), ('S\uf0e0', 'AA'), ('AA', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0.b'), ('a|b', 'A\uf0e0.b', ','), ('A\uf0e0.b', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b'), (',', 'a|b', 'S\uf0e0'), ('a|b', 'S\uf0e0', 'AA'), ('S\uf0e0', 'AA', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b', 'JJ'), ('S\uf0e0', 'NNP'), ('AA', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  $/$
  (NP A/NNP a.A/NN)
  ,/,
  $/$
  (NP A/NNP b./NN)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  (NP a|b/NN A.b/NNP)
  ,/,
  (NP a|b/NN A/NNP a.A/NN)
  ,/,
  (NP a|b/JJ A/NNP b./NN)
  ,/,
  (NP a|b/JJ S/NNP AA/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0 a.A', 'A\uf0e0 b.', 'A\uf0e0.aA', 'a|b A\uf0e0.b', 'a|b A\uf0e0 a.A', 'a|b A\uf0e0 b.', 'a|b S\uf0e0 AA']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'AA'), ('.', '.')]



============================ Sentence 228 =============================

,$   A aA.,a|b     3 8 5 6 3 7 4 4           Augmented grammar A aA.,$  9 A. 


>> Tokens are: 
 [',', '$', 'A\uf0e0', 'aA.', ',', 'a|b', '3', '8', '5', '6', '3', '7', '4', '4', 'Augmented', 'grammar', 'A\uf0e0', 'aA.', ',', '$', '9', 'A\uf0e0', '.']

>> Bigrams are: 
 [(',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', 'a|b'), ('a|b', '3'), ('3', '8'), ('8', '5'), ('5', '6'), ('6', '3'), ('3', '7'), ('7', '4'), ('4', '4'), ('4', 'Augmented'), ('Augmented', 'grammar'), ('grammar', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', '$'), ('$', '9'), ('9', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [(',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', 'a|b'), (',', 'a|b', '3'), ('a|b', '3', '8'), ('3', '8', '5'), ('8', '5', '6'), ('5', '6', '3'), ('6', '3', '7'), ('3', '7', '4'), ('7', '4', '4'), ('4', '4', 'Augmented'), ('4', 'Augmented', 'grammar'), ('Augmented', 'grammar', 'A\uf0e0'), ('grammar', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', '$'), (',', '$', '9'), ('$', '9', 'A\uf0e0'), ('9', 'A\uf0e0', '.')]

>> POS Tags are: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('a|b', 'VBD'), ('3', 'CD'), ('8', 'CD'), ('5', 'CD'), ('6', 'CD'), ('3', 'CD'), ('7', 'CD'), ('4', 'CD'), ('4', 'CD'), ('Augmented', 'NNP'), ('grammar', 'NN'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('$', '$'), ('9', 'CD'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  ,/,
  $/$
  (NP A/NNP aA./NN)
  ,/,
  a|b/VBD
  3/CD
  8/CD
  5/CD
  6/CD
  3/CD
  7/CD
  4/CD
  4/CD
  (NP Augmented/NNP grammar/NN A/NNP aA./NN)
  ,/,
  $/$
  9/CD
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['A\uf0e0 aA.', 'Augmented grammar A\uf0e0 aA.', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('Augmented', 'augment'), ('grammar', 'grammar'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('Augmented', 'augment'), ('grammar', 'grammar'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('Augmented', 'Augmented'), ('grammar', 'grammar'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 229 =============================

aA,$ A. 


>> Tokens are: 
 ['aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN) ,/, $/$ (NP A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 230 =============================

b, $  A a.A,$ A b. ,S  6 7     LR(1) item set     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: CLR(1)- canonical LR S  AA A  aA | b S’.S,$ S.AA,$  A.aA, a|b A.b, a|b  S’ S., $  S A.A,$ A.aA, $ A. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', 'S', '6', '7', 'LR', '(', '1', ')', 'item', 'set', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'CLR', '(', '1', ')', '-', 'canonical', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'aA', '|', 'b', 'S', '’', '\uf0e0.S', ',', '$', 'S\uf0e0.AA', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'S', '’', '\uf0e0', 'S.', ',', '$', 'S\uf0e0', 'A.A', ',', '$', 'A\uf0e0.aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'S'), ('S', '6'), ('6', '7'), ('7', 'LR'), ('LR', '('), ('(', '1'), ('1', ')'), (')', 'item'), ('item', 'set'), ('set', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'CLR'), ('CLR', '('), ('(', '1'), ('1', ')'), (')', '-'), ('-', 'canonical'), ('canonical', 'LR'), ('LR', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'AA'), ('AA', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'aA'), ('aA', '|'), ('|', 'b'), ('b', 'S'), ('S', '’'), ('’', '\uf0e0.S'), ('\uf0e0.S', ','), (',', '$'), ('$', 'S\uf0e0.AA'), ('S\uf0e0.AA', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0.b'), ('A\uf0e0.b', ','), (',', 'a|b'), ('a|b', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', 'S.'), ('S.', ','), (',', '$'), ('$', 'S\uf0e0'), ('S\uf0e0', 'A.A'), ('A.A', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'S'), (',', 'S', '6'), ('S', '6', '7'), ('6', '7', 'LR'), ('7', 'LR', '('), ('LR', '(', '1'), ('(', '1', ')'), ('1', ')', 'item'), (')', 'item', 'set'), ('item', 'set', 'Prof.'), ('set', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'CLR'), (':', 'CLR', '('), ('CLR', '(', '1'), ('(', '1', ')'), ('1', ')', '-'), (')', '-', 'canonical'), ('-', 'canonical', 'LR'), ('canonical', 'LR', 'S'), ('LR', 'S', '\uf0e0'), ('S', '\uf0e0', 'AA'), ('\uf0e0', 'AA', 'A'), ('AA', 'A', '\uf0e0'), ('A', '\uf0e0', 'aA'), ('\uf0e0', 'aA', '|'), ('aA', '|', 'b'), ('|', 'b', 'S'), ('b', 'S', '’'), ('S', '’', '\uf0e0.S'), ('’', '\uf0e0.S', ','), ('\uf0e0.S', ',', '$'), (',', '$', 'S\uf0e0.AA'), ('$', 'S\uf0e0.AA', ','), ('S\uf0e0.AA', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0.b'), ('a|b', 'A\uf0e0.b', ','), ('A\uf0e0.b', ',', 'a|b'), (',', 'a|b', 'S'), ('a|b', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', 'S.'), ('\uf0e0', 'S.', ','), ('S.', ',', '$'), (',', '$', 'S\uf0e0'), ('$', 'S\uf0e0', 'A.A'), ('S\uf0e0', 'A.A', ','), ('A.A', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('S', 'NNP'), ('6', 'CD'), ('7', 'CD'), ('LR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('item', 'NN'), ('set', 'VBN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('CLR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('-', ':'), ('canonical', 'JJ'), ('LR', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('AA', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('aA', 'NN'), ('|', 'NN'), ('b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('S.', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0', 'NNP'), ('A.A', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  $/$
  (NP A/NNP a.A/NN)
  ,/,
  $/$
  (NP A/NNP b./NN)
  ,/,
  (NP S/NNP)
  6/CD
  7/CD
  (NP LR/NNP)
  (/(
  1/CD
  )/)
  (NP item/NN)
  set/VBN
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP CLR/NNP)
  (/(
  1/CD
  )/)
  -/:
  (NP
    canonical/JJ
    LR/NNP
    S/NNP
    /NNP
    AA/NNP
    A/NNP
    /NNP
    aA/NN
    |/NN
    b/NN
    S/NNP
    ’/NNP
    .S/NNP)
  ,/,
  $/$
  (NP S.AA/NNP)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  (NP a|b/NN A.b/NNP)
  ,/,
  (NP a|b/NN S/NNP ’/NNP /NNP S./NNP)
  ,/,
  $/$
  (NP S/NNP A.A/NNP)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  $/$
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0 a.A', 'A\uf0e0 b.', 'S', 'LR', 'item', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'CLR', 'canonical LR S \uf0e0 AA A \uf0e0 aA | b S ’ \uf0e0.S', 'S\uf0e0.AA', 'A\uf0e0.aA', 'a|b A\uf0e0.b', 'a|b S ’ \uf0e0 S.', 'S\uf0e0 A.A', 'A\uf0e0.aA', 'A\uf0e0']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 's'), ('6', '6'), ('7', '7'), ('LR', 'lr'), ('(', '('), ('1', '1'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CLR', 'clr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canon'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 's\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 's'), ('6', '6'), ('7', '7'), ('LR', 'lr'), ('(', '('), ('1', '1'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('CLR', 'clr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canon'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.s'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 's\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 'S'), ('6', '6'), ('7', '7'), ('LR', 'LR'), ('(', '('), ('1', '1'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('CLR', 'CLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canonical'), ('LR', 'LR'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('AA', 'AA'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('aA', 'aA'), ('|', '|'), ('b', 'b'), ('S', 'S'), ('’', '’'), ('\uf0e0.S', '\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'S\uf0e0.AA'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 'S.'), (',', ','), ('$', '$'), ('S\uf0e0', 'S\uf0e0'), ('A.A', 'A.A'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 231 =============================

b, $  A.aA ,a|b A. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN) ,/, $/$ (NP A.aA/NNP) ,/, (NP a|b/JJ A/NNP) ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0.aA', 'a|b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 232 =============================

b, a|b   Aa.A, a|b A b., a|b  A. 


>> Tokens are: 
 ['b', ',', 'a|b', 'A\uf0e0a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', 'a|b'), ('a|b', 'A\uf0e0a.A'), ('A\uf0e0a.A', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', 'a|b'), (',', 'a|b', 'A\uf0e0a.A'), ('a|b', 'A\uf0e0a.A', ','), ('A\uf0e0a.A', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('a|b', 'NN'), ('A\uf0e0a.A', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  (NP a|b/NN Aa.A/NNP)
  ,/,
  (NP a|b/NN A/NNP b./NN)
  ,/,
  (NP a|b/JJ A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'a|b A\uf0e0a.A', 'a|b A\uf0e0 b.', 'a|b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'A\uf0e0a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 233 =============================

aA,$ A. 


>> Tokens are: 
 ['aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN) ,/, $/$ (NP A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 234 =============================

b, $  A a.A,$ A b. ,S  A.aA , a|b A.b , a|b  A a.A , a|b A b., a|b  S AA. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', 'S', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'A\uf0e0', 'a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'S\uf0e0', 'AA', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'S'), ('S', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0.b'), ('A\uf0e0.b', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b'), ('a|b', 'S\uf0e0'), ('S\uf0e0', 'AA'), ('AA', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'S'), (',', 'S', 'A\uf0e0.aA'), ('S', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0.b'), ('a|b', 'A\uf0e0.b', ','), ('A\uf0e0.b', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b'), (',', 'a|b', 'S\uf0e0'), ('a|b', 'S\uf0e0', 'AA'), ('S\uf0e0', 'AA', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('S', 'NNP'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b', 'JJ'), ('S\uf0e0', 'NNP'), ('AA', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  $/$
  (NP A/NNP a.A/NN)
  ,/,
  $/$
  (NP A/NNP b./NN)
  ,/,
  (NP S/NNP A.aA/NNP)
  ,/,
  (NP a|b/NN A.b/NNP)
  ,/,
  (NP a|b/NN A/NNP a.A/NN)
  ,/,
  (NP a|b/JJ A/NNP b./NN)
  ,/,
  (NP a|b/JJ S/NNP AA/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0 a.A', 'A\uf0e0 b.', 'S A\uf0e0.aA', 'a|b A\uf0e0.b', 'a|b A\uf0e0 a.A', 'a|b A\uf0e0 b.', 'a|b S\uf0e0 AA']

>> Named Entities are: 
 [('PERSON', 'S A\uf0e0.aA')] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 's'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 's'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 'S'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'AA'), ('.', '.')]



============================ Sentence 235 =============================

,$   A aA.,a|b     3 8 5 6 3 7 4 4           A aA.,$  9 	Item set	Action			Go to	 		a	b	$	S	A 	0	S3	S4		1	2 	1			Accept		 	2	S6	S7			5 	3	S3	S4			8 	4	R3	R3			 	5			R1		 	6	S6	S7			9 	7			R3		 	8	R2	R2			 	9			R2		  A. 


>> Tokens are: 
 [',', '$', 'A\uf0e0', 'aA.', ',', 'a|b', '3', '8', '5', '6', '3', '7', '4', '4', 'A\uf0e0', 'aA.', ',', '$', '9', 'Item', 'set', 'Action', 'Go', 'b', '$', 'S', 'A', '0', 'S3', 'S4', '1', '2', '1', 'Accept', '2', 'S6', 'S7', '5', '3', 'S3', 'S4', '8', '4', 'R3', 'R3', '5', 'R1', '6', 'S6', 'S7', '9', '7', 'R3', '8', 'R2', 'R2', '9', 'R2', 'A\uf0e0', '.']

>> Bigrams are: 
 [(',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', 'a|b'), ('a|b', '3'), ('3', '8'), ('8', '5'), ('5', '6'), ('6', '3'), ('3', '7'), ('7', '4'), ('4', '4'), ('4', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', '$'), ('$', '9'), ('9', 'Item'), ('Item', 'set'), ('set', 'Action'), ('Action', 'Go'), ('Go', 'b'), ('b', '$'), ('$', 'S'), ('S', 'A'), ('A', '0'), ('0', 'S3'), ('S3', 'S4'), ('S4', '1'), ('1', '2'), ('2', '1'), ('1', 'Accept'), ('Accept', '2'), ('2', 'S6'), ('S6', 'S7'), ('S7', '5'), ('5', '3'), ('3', 'S3'), ('S3', 'S4'), ('S4', '8'), ('8', '4'), ('4', 'R3'), ('R3', 'R3'), ('R3', '5'), ('5', 'R1'), ('R1', '6'), ('6', 'S6'), ('S6', 'S7'), ('S7', '9'), ('9', '7'), ('7', 'R3'), ('R3', '8'), ('8', 'R2'), ('R2', 'R2'), ('R2', '9'), ('9', 'R2'), ('R2', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [(',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', 'a|b'), (',', 'a|b', '3'), ('a|b', '3', '8'), ('3', '8', '5'), ('8', '5', '6'), ('5', '6', '3'), ('6', '3', '7'), ('3', '7', '4'), ('7', '4', '4'), ('4', '4', 'A\uf0e0'), ('4', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', '$'), (',', '$', '9'), ('$', '9', 'Item'), ('9', 'Item', 'set'), ('Item', 'set', 'Action'), ('set', 'Action', 'Go'), ('Action', 'Go', 'b'), ('Go', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'A'), ('S', 'A', '0'), ('A', '0', 'S3'), ('0', 'S3', 'S4'), ('S3', 'S4', '1'), ('S4', '1', '2'), ('1', '2', '1'), ('2', '1', 'Accept'), ('1', 'Accept', '2'), ('Accept', '2', 'S6'), ('2', 'S6', 'S7'), ('S6', 'S7', '5'), ('S7', '5', '3'), ('5', '3', 'S3'), ('3', 'S3', 'S4'), ('S3', 'S4', '8'), ('S4', '8', '4'), ('8', '4', 'R3'), ('4', 'R3', 'R3'), ('R3', 'R3', '5'), ('R3', '5', 'R1'), ('5', 'R1', '6'), ('R1', '6', 'S6'), ('6', 'S6', 'S7'), ('S6', 'S7', '9'), ('S7', '9', '7'), ('9', '7', 'R3'), ('7', 'R3', '8'), ('R3', '8', 'R2'), ('8', 'R2', 'R2'), ('R2', 'R2', '9'), ('R2', '9', 'R2'), ('9', 'R2', 'A\uf0e0'), ('R2', 'A\uf0e0', '.')]

>> POS Tags are: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('a|b', 'VBD'), ('3', 'CD'), ('8', 'CD'), ('5', 'CD'), ('6', 'CD'), ('3', 'CD'), ('7', 'CD'), ('4', 'CD'), ('4', 'CD'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('$', '$'), ('9', 'CD'), ('Item', 'NNP'), ('set', 'VBD'), ('Action', 'NNP'), ('Go', 'NNP'), ('b', 'VBD'), ('$', '$'), ('S', 'NNP'), ('A', 'NNP'), ('0', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NNP'), ('2', 'CD'), ('S6', 'NNP'), ('S7', 'NNP'), ('5', 'CD'), ('3', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('8', 'CD'), ('4', 'CD'), ('R3', 'NNP'), ('R3', 'NNP'), ('5', 'CD'), ('R1', 'NNP'), ('6', 'CD'), ('S6', 'NNP'), ('S7', 'NNP'), ('9', 'CD'), ('7', 'CD'), ('R3', 'NNP'), ('8', 'CD'), ('R2', 'NNP'), ('R2', 'NNP'), ('9', 'CD'), ('R2', 'NNP'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  ,/,
  $/$
  (NP A/NNP aA./NN)
  ,/,
  a|b/VBD
  3/CD
  8/CD
  5/CD
  6/CD
  3/CD
  7/CD
  4/CD
  4/CD
  (NP A/NNP aA./NN)
  ,/,
  $/$
  9/CD
  (NP Item/NNP)
  set/VBD
  (NP Action/NNP Go/NNP)
  b/VBD
  $/$
  (NP S/NNP A/NNP)
  0/CD
  (NP S3/NNP S4/NNP)
  1/CD
  2/CD
  1/CD
  (NP Accept/NNP)
  2/CD
  (NP S6/NNP S7/NNP)
  5/CD
  3/CD
  (NP S3/NNP S4/NNP)
  8/CD
  4/CD
  (NP R3/NNP R3/NNP)
  5/CD
  (NP R1/NNP)
  6/CD
  (NP S6/NNP S7/NNP)
  9/CD
  7/CD
  (NP R3/NNP)
  8/CD
  (NP R2/NNP R2/NNP)
  9/CD
  (NP R2/NNP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['A\uf0e0 aA.', 'A\uf0e0 aA.', 'Item', 'Action Go', 'S A', 'S3 S4', 'Accept', 'S6 S7', 'S3 S4', 'R3 R3', 'R1', 'S6 S7', 'R3', 'R2 R2', 'R2 A\uf0e0']

>> Named Entities are: 
 [('PERSON', 'Item'), ('PERSON', 'Action Go')] 

>> Stemming using Porter Stemmer: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S6', 's6'), ('S7', 's7'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('8', '8'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('S6', 's6'), ('S7', 's7'), ('9', '9'), ('7', '7'), ('R3', 'r3'), ('8', '8'), ('R2', 'r2'), ('R2', 'r2'), ('9', '9'), ('R2', 'r2'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S6', 's6'), ('S7', 's7'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('8', '8'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('S6', 's6'), ('S7', 's7'), ('9', '9'), ('7', '7'), ('R3', 'r3'), ('8', '8'), ('R2', 'r2'), ('R2', 'r2'), ('9', '9'), ('R2', 'r2'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [(',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('$', '$'), ('9', '9'), ('Item', 'Item'), ('set', 'set'), ('Action', 'Action'), ('Go', 'Go'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'A'), ('0', '0'), ('S3', 'S3'), ('S4', 'S4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'Accept'), ('2', '2'), ('S6', 'S6'), ('S7', 'S7'), ('5', '5'), ('3', '3'), ('S3', 'S3'), ('S4', 'S4'), ('8', '8'), ('4', '4'), ('R3', 'R3'), ('R3', 'R3'), ('5', '5'), ('R1', 'R1'), ('6', '6'), ('S6', 'S6'), ('S7', 'S7'), ('9', '9'), ('7', '7'), ('R3', 'R3'), ('8', '8'), ('R2', 'R2'), ('R2', 'R2'), ('9', '9'), ('R2', 'R2'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 236 =============================

aA,$ A. 


>> Tokens are: 
 ['aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN) ,/, $/$ (NP A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 237 =============================

b, $  A a.A,$ A b. ,S  6 7                            Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing Top down parsing Bottom up parsing (Shift reduce) Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  A aA.,a|b Example: LALR(1)- look ahead LR S  AA A  aA | b S’.S,$ S.AA,$  A.aA, a|b A.b, a|b  S’ S., $  S A.A,$ A.aA, $ A. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', 'S', '6', '7', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Parsing', 'Methods', 'Parsing', 'Top', 'parsing', 'Bottom', 'parsing', '(', 'Shift', 'reduce', ')', 'Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'A\uf0e0', 'aA.', ',', 'a|b', 'Example', ':', 'LALR', '(', '1', ')', '-', 'look', 'ahead', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'aA', '|', 'b', 'S', '’', '\uf0e0.S', ',', '$', 'S\uf0e0.AA', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'S', '’', '\uf0e0', 'S.', ',', '$', 'S\uf0e0', 'A.A', ',', '$', 'A\uf0e0.aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'S'), ('S', '6'), ('6', '7'), ('7', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Parsing'), ('Parsing', 'Methods'), ('Methods', 'Parsing'), ('Parsing', 'Top'), ('Top', 'parsing'), ('parsing', 'Bottom'), ('Bottom', 'parsing'), ('parsing', '('), ('(', 'Shift'), ('Shift', 'reduce'), ('reduce', ')'), (')', 'Back'), ('Back', 'tracking'), ('tracking', 'Parsing'), ('Parsing', 'without'), ('without', 'backtracking'), ('backtracking', '('), ('(', 'predictive'), ('predictive', 'Parsing'), ('Parsing', ')'), (')', 'LR'), ('LR', 'parsing'), ('parsing', 'Operator'), ('Operator', 'precedence'), ('precedence', 'LALR'), ('LALR', 'CLR'), ('CLR', 'SLR'), ('SLR', 'Recursive'), ('Recursive', 'descent'), ('descent', 'LL'), ('LL', '('), ('(', '1'), ('1', ')'), (')', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', 'a|b'), ('a|b', 'Example'), ('Example', ':'), (':', 'LALR'), ('LALR', '('), ('(', '1'), ('1', ')'), (')', '-'), ('-', 'look'), ('look', 'ahead'), ('ahead', 'LR'), ('LR', 'S'), ('S', '\uf0e0'), ('\uf0e0', 'AA'), ('AA', 'A'), ('A', '\uf0e0'), ('\uf0e0', 'aA'), ('aA', '|'), ('|', 'b'), ('b', 'S'), ('S', '’'), ('’', '\uf0e0.S'), ('\uf0e0.S', ','), (',', '$'), ('$', 'S\uf0e0.AA'), ('S\uf0e0.AA', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0.b'), ('A\uf0e0.b', ','), (',', 'a|b'), ('a|b', 'S'), ('S', '’'), ('’', '\uf0e0'), ('\uf0e0', 'S.'), ('S.', ','), (',', '$'), ('$', 'S\uf0e0'), ('S\uf0e0', 'A.A'), ('A.A', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'S'), (',', 'S', '6'), ('S', '6', '7'), ('6', '7', 'Prof.'), ('7', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Parsing'), ('›', 'Parsing', 'Methods'), ('Parsing', 'Methods', 'Parsing'), ('Methods', 'Parsing', 'Top'), ('Parsing', 'Top', 'parsing'), ('Top', 'parsing', 'Bottom'), ('parsing', 'Bottom', 'parsing'), ('Bottom', 'parsing', '('), ('parsing', '(', 'Shift'), ('(', 'Shift', 'reduce'), ('Shift', 'reduce', ')'), ('reduce', ')', 'Back'), (')', 'Back', 'tracking'), ('Back', 'tracking', 'Parsing'), ('tracking', 'Parsing', 'without'), ('Parsing', 'without', 'backtracking'), ('without', 'backtracking', '('), ('backtracking', '(', 'predictive'), ('(', 'predictive', 'Parsing'), ('predictive', 'Parsing', ')'), ('Parsing', ')', 'LR'), (')', 'LR', 'parsing'), ('LR', 'parsing', 'Operator'), ('parsing', 'Operator', 'precedence'), ('Operator', 'precedence', 'LALR'), ('precedence', 'LALR', 'CLR'), ('LALR', 'CLR', 'SLR'), ('CLR', 'SLR', 'Recursive'), ('SLR', 'Recursive', 'descent'), ('Recursive', 'descent', 'LL'), ('descent', 'LL', '('), ('LL', '(', '1'), ('(', '1', ')'), ('1', ')', 'Prof.'), (')', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'A\uf0e0'), ('›', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', 'a|b'), (',', 'a|b', 'Example'), ('a|b', 'Example', ':'), ('Example', ':', 'LALR'), (':', 'LALR', '('), ('LALR', '(', '1'), ('(', '1', ')'), ('1', ')', '-'), (')', '-', 'look'), ('-', 'look', 'ahead'), ('look', 'ahead', 'LR'), ('ahead', 'LR', 'S'), ('LR', 'S', '\uf0e0'), ('S', '\uf0e0', 'AA'), ('\uf0e0', 'AA', 'A'), ('AA', 'A', '\uf0e0'), ('A', '\uf0e0', 'aA'), ('\uf0e0', 'aA', '|'), ('aA', '|', 'b'), ('|', 'b', 'S'), ('b', 'S', '’'), ('S', '’', '\uf0e0.S'), ('’', '\uf0e0.S', ','), ('\uf0e0.S', ',', '$'), (',', '$', 'S\uf0e0.AA'), ('$', 'S\uf0e0.AA', ','), ('S\uf0e0.AA', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0.b'), ('a|b', 'A\uf0e0.b', ','), ('A\uf0e0.b', ',', 'a|b'), (',', 'a|b', 'S'), ('a|b', 'S', '’'), ('S', '’', '\uf0e0'), ('’', '\uf0e0', 'S.'), ('\uf0e0', 'S.', ','), ('S.', ',', '$'), (',', '$', 'S\uf0e0'), ('$', 'S\uf0e0', 'A.A'), ('S\uf0e0', 'A.A', ','), ('A.A', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('S', 'NNP'), ('6', 'CD'), ('7', 'CD'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Parsing', 'NNP'), ('Methods', 'NNP'), ('Parsing', 'NNP'), ('Top', 'NNP'), ('parsing', 'VBG'), ('Bottom', 'NNP'), ('parsing', 'NN'), ('(', '('), ('Shift', 'NNP'), ('reduce', 'VB'), (')', ')'), ('Back', 'RP'), ('tracking', 'VBG'), ('Parsing', 'VBG'), ('without', 'IN'), ('backtracking', 'VBG'), ('(', '('), ('predictive', 'JJ'), ('Parsing', 'NNP'), (')', ')'), ('LR', 'NNP'), ('parsing', 'VBG'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'NNP'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('a|b', 'JJ'), ('Example', 'NN'), (':', ':'), ('LALR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('-', ':'), ('look', 'NN'), ('ahead', 'RB'), ('LR', 'NNP'), ('S', 'NNP'), ('\uf0e0', 'NNP'), ('AA', 'NNP'), ('A', 'NNP'), ('\uf0e0', 'NNP'), ('aA', 'NN'), ('|', 'NN'), ('b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NN'), ('S', 'NNP'), ('’', 'NNP'), ('\uf0e0', 'NNP'), ('S.', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0', 'NNP'), ('A.A', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  $/$
  (NP A/NNP a.A/NN)
  ,/,
  $/$
  (NP A/NNP b./NN)
  ,/,
  (NP S/NNP)
  6/CD
  7/CD
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Parsing/NNP Methods/NNP Parsing/NNP Top/NNP)
  parsing/VBG
  (NP Bottom/NNP parsing/NN)
  (/(
  (NP Shift/NNP)
  reduce/VB
  )/)
  Back/RP
  tracking/VBG
  Parsing/VBG
  without/IN
  backtracking/VBG
  (/(
  (NP predictive/JJ Parsing/NNP)
  )/)
  (NP LR/NNP)
  parsing/VBG
  (NP
    Operator/NNP
    precedence/NN
    LALR/NNP
    CLR/NNP
    SLR/NNP
    Recursive/NNP
    descent/NN
    LL/NNP)
  (/(
  1/CD
  )/)
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP A/NNP aA./NN)
  ,/,
  (NP a|b/JJ Example/NN)
  :/:
  (NP LALR/NNP)
  (/(
  1/CD
  )/)
  -/:
  (NP look/NN)
  ahead/RB
  (NP
    LR/NNP
    S/NNP
    /NNP
    AA/NNP
    A/NNP
    /NNP
    aA/NN
    |/NN
    b/NN
    S/NNP
    ’/NNP
    .S/NNP)
  ,/,
  $/$
  (NP S.AA/NNP)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  (NP a|b/NN A.b/NNP)
  ,/,
  (NP a|b/NN S/NNP ’/NNP /NNP S./NNP)
  ,/,
  $/$
  (NP S/NNP A.A/NNP)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  $/$
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0 a.A', 'A\uf0e0 b.', 'S', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Parsing Methods Parsing Top', 'Bottom parsing', 'Shift', 'predictive Parsing', 'LR', 'Operator precedence LALR CLR SLR Recursive descent LL', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› A\uf0e0 aA.', 'a|b Example', 'LALR', 'look', 'LR S \uf0e0 AA A \uf0e0 aA | b S ’ \uf0e0.S', 'S\uf0e0.AA', 'A\uf0e0.aA', 'a|b A\uf0e0.b', 'a|b S ’ \uf0e0 S.', 'S\uf0e0 A.A', 'A\uf0e0.aA', 'A\uf0e0']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Parsing Methods Parsing'), ('PERSON', 'Bottom'), ('ORGANIZATION', 'Shift'), ('ORGANIZATION', 'LALR'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'LR')] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 's'), ('6', '6'), ('7', '7'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b', 'a|b'), ('Example', 'exampl'), (':', ':'), ('LALR', 'lalr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 's\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 's'), ('6', '6'), ('7', '7'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'pars'), ('Methods', 'method'), ('Parsing', 'pars'), ('Top', 'top'), ('parsing', 'pars'), ('Bottom', 'bottom'), ('parsing', 'pars'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduc'), (')', ')'), ('Back', 'back'), ('tracking', 'track'), ('Parsing', 'pars'), ('without', 'without'), ('backtracking', 'backtrack'), ('(', '('), ('predictive', 'predict'), ('Parsing', 'pars'), (')', ')'), ('LR', 'lr'), ('parsing', 'pars'), ('Operator', 'oper'), ('precedence', 'preced'), ('LALR', 'lalr'), ('CLR', 'clr'), ('SLR', 'slr'), ('Recursive', 'recurs'), ('descent', 'descent'), ('LL', 'll'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b', 'a|b'), ('Example', 'exampl'), (':', ':'), ('LALR', 'lalr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('aA', 'aa'), ('|', '|'), ('b', 'b'), ('S', 's'), ('’', '’'), ('\uf0e0.S', '\uf0e0.s'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 's\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 's'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 's.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('S', 'S'), ('6', '6'), ('7', '7'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Parsing', 'Parsing'), ('Methods', 'Methods'), ('Parsing', 'Parsing'), ('Top', 'Top'), ('parsing', 'parsing'), ('Bottom', 'Bottom'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'Shift'), ('reduce', 'reduce'), (')', ')'), ('Back', 'Back'), ('tracking', 'tracking'), ('Parsing', 'Parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'Parsing'), (')', ')'), ('LR', 'LR'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'Recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('Example', 'Example'), (':', ':'), ('LALR', 'LALR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'LR'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('AA', 'AA'), ('A', 'A'), ('\uf0e0', '\uf0e0'), ('aA', 'aA'), ('|', '|'), ('b', 'b'), ('S', 'S'), ('’', '’'), ('\uf0e0.S', '\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'S\uf0e0.AA'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S', 'S'), ('’', '’'), ('\uf0e0', '\uf0e0'), ('S.', 'S.'), (',', ','), ('$', '$'), ('S\uf0e0', 'S\uf0e0'), ('A.A', 'A.A'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 238 =============================

b, $  A.aA ,a|b A. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP b/NN) ,/, $/$ (NP A.aA/NNP) ,/, (NP a|b/JJ A/NNP) ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0.aA', 'a|b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 239 =============================

b, a|b   Aa.A, a|b A b., a|b  A. 


>> Tokens are: 
 ['b', ',', 'a|b', 'A\uf0e0a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', 'a|b'), ('a|b', 'A\uf0e0a.A'), ('A\uf0e0a.A', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', 'a|b'), (',', 'a|b', 'A\uf0e0a.A'), ('a|b', 'A\uf0e0a.A', ','), ('A\uf0e0a.A', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('a|b', 'NN'), ('A\uf0e0a.A', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  (NP a|b/NN Aa.A/NNP)
  ,/,
  (NP a|b/NN A/NNP b./NN)
  ,/,
  (NP a|b/JJ A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'a|b A\uf0e0a.A', 'a|b A\uf0e0 b.', 'a|b A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.A', 'A\uf0e0a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 240 =============================

aA,$ A. 


>> Tokens are: 
 ['aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN) ,/, $/$ (NP A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 241 =============================

b, $  A a.A,$ A b. ,$  A.aA , a|b A.b , a|b  A a.A , a|b A b., a|b  S AA. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'A\uf0e0', 'a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'S\uf0e0', 'AA', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', '$'), ('$', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b'), ('a|b', 'A\uf0e0.b'), ('A\uf0e0.b', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', 'a|b'), ('a|b', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b'), ('a|b', 'S\uf0e0'), ('S\uf0e0', 'AA'), ('AA', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', '$'), (',', '$', 'A\uf0e0.aA'), ('$', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b'), (',', 'a|b', 'A\uf0e0.b'), ('a|b', 'A\uf0e0.b', ','), ('A\uf0e0.b', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', 'a|b'), (',', 'a|b', 'A\uf0e0'), ('a|b', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b'), (',', 'a|b', 'S\uf0e0'), ('a|b', 'S\uf0e0', 'AA'), ('S\uf0e0', 'AA', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NN'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('a|b', 'JJ'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b', 'JJ'), ('S\uf0e0', 'NNP'), ('AA', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  $/$
  (NP A/NNP a.A/NN)
  ,/,
  $/$
  (NP A/NNP b./NN)
  ,/,
  $/$
  (NP A.aA/NNP)
  ,/,
  (NP a|b/NN A.b/NNP)
  ,/,
  (NP a|b/NN A/NNP a.A/NN)
  ,/,
  (NP a|b/JJ A/NNP b./NN)
  ,/,
  (NP a|b/JJ S/NNP AA/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0 a.A', 'A\uf0e0 b.', 'A\uf0e0.aA', 'a|b A\uf0e0.b', 'a|b A\uf0e0 a.A', 'a|b A\uf0e0 b.', 'a|b S\uf0e0 AA']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'a\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 's\uf0e0'), ('AA', 'aa'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'AA'), ('.', '.')]



============================ Sentence 242 =============================

,$       3 8 5 6 3 7 4 4           A aA.,$  9 A. 


>> Tokens are: 
 [',', '$', '3', '8', '5', '6', '3', '7', '4', '4', 'A\uf0e0', 'aA.', ',', '$', '9', 'A\uf0e0', '.']

>> Bigrams are: 
 [(',', '$'), ('$', '3'), ('3', '8'), ('8', '5'), ('5', '6'), ('6', '3'), ('3', '7'), ('7', '4'), ('4', '4'), ('4', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', '$'), ('$', '9'), ('9', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [(',', '$', '3'), ('$', '3', '8'), ('3', '8', '5'), ('8', '5', '6'), ('5', '6', '3'), ('6', '3', '7'), ('3', '7', '4'), ('7', '4', '4'), ('4', '4', 'A\uf0e0'), ('4', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', '$'), (',', '$', '9'), ('$', '9', 'A\uf0e0'), ('9', 'A\uf0e0', '.')]

>> POS Tags are: 
 [(',', ','), ('$', '$'), ('3', 'CD'), ('8', 'CD'), ('5', 'CD'), ('6', 'CD'), ('3', 'CD'), ('7', 'CD'), ('4', 'CD'), ('4', 'CD'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('$', '$'), ('9', 'CD'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  ,/,
  $/$
  3/CD
  8/CD
  5/CD
  6/CD
  3/CD
  7/CD
  4/CD
  4/CD
  (NP A/NNP aA./NN)
  ,/,
  $/$
  9/CD
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['A\uf0e0 aA.', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [(',', ','), ('$', '$'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [(',', ','), ('$', '$'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [(',', ','), ('$', '$'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 243 =============================

aA,$ A. 


>> Tokens are: 
 ['aA', ',', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('aA', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('aA', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S (NP aA/NN) ,/, $/$ (NP A/NNP) ./.) 


>> Noun Phrases are: 
 ['aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 244 =============================

b, $  A a.A,$ A b. ,$  6 7                       CLR  36 A.aA , a|b|$ A. 


>> Tokens are: 
 ['b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', '$', '6', '7', 'CLR', '36', 'A\uf0e0.aA', ',', 'a|b|', '$', 'A\uf0e0', '.']

>> Bigrams are: 
 [('b', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'a.A'), ('a.A', ','), (',', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', '$'), ('$', '6'), ('6', '7'), ('7', 'CLR'), ('CLR', '36'), ('36', 'A\uf0e0.aA'), ('A\uf0e0.aA', ','), (',', 'a|b|'), ('a|b|', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', '.')]

>> Trigrams are: 
 [('b', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'a.A'), ('A\uf0e0', 'a.A', ','), ('a.A', ',', '$'), (',', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', '$'), (',', '$', '6'), ('$', '6', '7'), ('6', '7', 'CLR'), ('7', 'CLR', '36'), ('CLR', '36', 'A\uf0e0.aA'), ('36', 'A\uf0e0.aA', ','), ('A\uf0e0.aA', ',', 'a|b|'), (',', 'a|b|', '$'), ('a|b|', '$', 'A\uf0e0'), ('$', 'A\uf0e0', '.')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('$', '$'), ('6', 'CD'), ('7', 'CD'), ('CLR', 'NNP'), ('36', 'CD'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b|', 'RB'), ('$', '$'), ('A\uf0e0', 'NNP'), ('.', '.')]

 (S
  (NP b/NN)
  ,/,
  $/$
  (NP A/NNP a.A/NN)
  ,/,
  $/$
  (NP A/NNP b./NN)
  ,/,
  $/$
  6/CD
  7/CD
  (NP CLR/NNP)
  36/CD
  (NP A.aA/NNP)
  ,/,
  a|b|/RB
  $/$
  (NP A/NNP)
  ./.) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0 a.A', 'A\uf0e0 b.', 'CLR', 'A\uf0e0.aA', 'A\uf0e0']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('6', '6'), ('7', '7'), ('CLR', 'clr'), ('36', '36'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('6', '6'), ('7', '7'), ('CLR', 'clr'), ('36', '36'), ('A\uf0e0.aA', 'a\uf0e0.aa'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('.', '.')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('$', '$'), ('6', '6'), ('7', '7'), ('CLR', 'CLR'), ('36', '36'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('.', '.')]



============================ Sentence 245 =============================

b, a|b|$  Aa.A, a|b|$ A b., a|b|$  47 A aA.,a|b|$  89    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: LALR(1)- look ahead LR  	Item set	Action			Go to	 		a	b	$	S	A 	0	S3	S4		1	2 	1			Accept		 	2	S6	S7			5 	3	S3	S4			8 	4	R3	R3			 	5			R1		 	6	S6	S7			9 	7			R3		 	8	R2	R2			 	9			R2		   	Item set	Action			Go to	 		a	b	$	S	A 	0	S36	S47		1	2 	1			Accept		 	2	S36	S47			5 	36	S36	S47			89 	47	R3	R3	R3 		 	5			R1		 	89	R2	R2	R2 		 						  CLR Parsing Table LALR Parsing Table     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Thank You                                       /docProps/thumbnail.jpeg 


>> Tokens are: 
 ['b', ',', 'a|b|', '$', 'A\uf0e0a.A', ',', 'a|b|', '$', 'A\uf0e0', 'b.', ',', 'a|b|', '$', '47', 'A\uf0e0', 'aA.', ',', 'a|b|', '$', '89', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Example', ':', 'LALR', '(', '1', ')', '-', 'look', 'ahead', 'LR', 'Item', 'set', 'Action', 'Go', 'b', '$', 'S', 'A', '0', 'S3', 'S4', '1', '2', '1', 'Accept', '2', 'S6', 'S7', '5', '3', 'S3', 'S4', '8', '4', 'R3', 'R3', '5', 'R1', '6', 'S6', 'S7', '9', '7', 'R3', '8', 'R2', 'R2', '9', 'R2', 'Item', 'set', 'Action', 'Go', 'b', '$', 'S', 'A', '0', 'S36', 'S47', '1', '2', '1', 'Accept', '2', 'S36', 'S47', '5', '36', 'S36', 'S47', '89', '47', 'R3', 'R3', 'R3', '5', 'R1', '89', 'R2', 'R2', 'R2', 'CLR', 'Parsing', 'Table', 'LALR', 'Parsing', 'Table', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹', '#', '›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹', '#', '›', 'Thank', 'You', '/docProps/thumbnail.jpeg']

>> Bigrams are: 
 [('b', ','), (',', 'a|b|'), ('a|b|', '$'), ('$', 'A\uf0e0a.A'), ('A\uf0e0a.A', ','), (',', 'a|b|'), ('a|b|', '$'), ('$', 'A\uf0e0'), ('A\uf0e0', 'b.'), ('b.', ','), (',', 'a|b|'), ('a|b|', '$'), ('$', '47'), ('47', 'A\uf0e0'), ('A\uf0e0', 'aA.'), ('aA.', ','), (',', 'a|b|'), ('a|b|', '$'), ('$', '89'), ('89', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', ':'), (':', 'LALR'), ('LALR', '('), ('(', '1'), ('1', ')'), (')', '-'), ('-', 'look'), ('look', 'ahead'), ('ahead', 'LR'), ('LR', 'Item'), ('Item', 'set'), ('set', 'Action'), ('Action', 'Go'), ('Go', 'b'), ('b', '$'), ('$', 'S'), ('S', 'A'), ('A', '0'), ('0', 'S3'), ('S3', 'S4'), ('S4', '1'), ('1', '2'), ('2', '1'), ('1', 'Accept'), ('Accept', '2'), ('2', 'S6'), ('S6', 'S7'), ('S7', '5'), ('5', '3'), ('3', 'S3'), ('S3', 'S4'), ('S4', '8'), ('8', '4'), ('4', 'R3'), ('R3', 'R3'), ('R3', '5'), ('5', 'R1'), ('R1', '6'), ('6', 'S6'), ('S6', 'S7'), ('S7', '9'), ('9', '7'), ('7', 'R3'), ('R3', '8'), ('8', 'R2'), ('R2', 'R2'), ('R2', '9'), ('9', 'R2'), ('R2', 'Item'), ('Item', 'set'), ('set', 'Action'), ('Action', 'Go'), ('Go', 'b'), ('b', '$'), ('$', 'S'), ('S', 'A'), ('A', '0'), ('0', 'S36'), ('S36', 'S47'), ('S47', '1'), ('1', '2'), ('2', '1'), ('1', 'Accept'), ('Accept', '2'), ('2', 'S36'), ('S36', 'S47'), ('S47', '5'), ('5', '36'), ('36', 'S36'), ('S36', 'S47'), ('S47', '89'), ('89', '47'), ('47', 'R3'), ('R3', 'R3'), ('R3', 'R3'), ('R3', '5'), ('5', 'R1'), ('R1', '89'), ('89', 'R2'), ('R2', 'R2'), ('R2', 'R2'), ('R2', 'CLR'), ('CLR', 'Parsing'), ('Parsing', 'Table'), ('Table', 'LALR'), ('LALR', 'Parsing'), ('Parsing', 'Table'), ('Table', 'Prof.'), ('Prof.', 'Jay'), ('Jay', 'R'), ('R', 'Dhamsaniya'), ('Dhamsaniya', '#'), ('#', '3130006'), ('3130006', '('), ('(', 'PS'), ('PS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '1'), ('1', '–'), ('–', 'Basic'), ('Basic', 'Probability'), ('Probability', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Prof.'), ('Prof.', 'Dixita'), ('Dixita', 'B'), ('B', 'Kagathara'), ('Kagathara', '#'), ('#', '2170701'), ('2170701', '('), ('(', 'CD'), ('CD', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '3'), ('3', '–'), ('–', 'Parsing'), ('Parsing', 'Theory'), ('Theory', '('), ('(', 'I'), ('I', ')'), (')', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Thank'), ('Thank', 'You'), ('You', '/docProps/thumbnail.jpeg')]

>> Trigrams are: 
 [('b', ',', 'a|b|'), (',', 'a|b|', '$'), ('a|b|', '$', 'A\uf0e0a.A'), ('$', 'A\uf0e0a.A', ','), ('A\uf0e0a.A', ',', 'a|b|'), (',', 'a|b|', '$'), ('a|b|', '$', 'A\uf0e0'), ('$', 'A\uf0e0', 'b.'), ('A\uf0e0', 'b.', ','), ('b.', ',', 'a|b|'), (',', 'a|b|', '$'), ('a|b|', '$', '47'), ('$', '47', 'A\uf0e0'), ('47', 'A\uf0e0', 'aA.'), ('A\uf0e0', 'aA.', ','), ('aA.', ',', 'a|b|'), (',', 'a|b|', '$'), ('a|b|', '$', '89'), ('$', '89', 'Prof.'), ('89', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', ':'), ('Example', ':', 'LALR'), (':', 'LALR', '('), ('LALR', '(', '1'), ('(', '1', ')'), ('1', ')', '-'), (')', '-', 'look'), ('-', 'look', 'ahead'), ('look', 'ahead', 'LR'), ('ahead', 'LR', 'Item'), ('LR', 'Item', 'set'), ('Item', 'set', 'Action'), ('set', 'Action', 'Go'), ('Action', 'Go', 'b'), ('Go', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'A'), ('S', 'A', '0'), ('A', '0', 'S3'), ('0', 'S3', 'S4'), ('S3', 'S4', '1'), ('S4', '1', '2'), ('1', '2', '1'), ('2', '1', 'Accept'), ('1', 'Accept', '2'), ('Accept', '2', 'S6'), ('2', 'S6', 'S7'), ('S6', 'S7', '5'), ('S7', '5', '3'), ('5', '3', 'S3'), ('3', 'S3', 'S4'), ('S3', 'S4', '8'), ('S4', '8', '4'), ('8', '4', 'R3'), ('4', 'R3', 'R3'), ('R3', 'R3', '5'), ('R3', '5', 'R1'), ('5', 'R1', '6'), ('R1', '6', 'S6'), ('6', 'S6', 'S7'), ('S6', 'S7', '9'), ('S7', '9', '7'), ('9', '7', 'R3'), ('7', 'R3', '8'), ('R3', '8', 'R2'), ('8', 'R2', 'R2'), ('R2', 'R2', '9'), ('R2', '9', 'R2'), ('9', 'R2', 'Item'), ('R2', 'Item', 'set'), ('Item', 'set', 'Action'), ('set', 'Action', 'Go'), ('Action', 'Go', 'b'), ('Go', 'b', '$'), ('b', '$', 'S'), ('$', 'S', 'A'), ('S', 'A', '0'), ('A', '0', 'S36'), ('0', 'S36', 'S47'), ('S36', 'S47', '1'), ('S47', '1', '2'), ('1', '2', '1'), ('2', '1', 'Accept'), ('1', 'Accept', '2'), ('Accept', '2', 'S36'), ('2', 'S36', 'S47'), ('S36', 'S47', '5'), ('S47', '5', '36'), ('5', '36', 'S36'), ('36', 'S36', 'S47'), ('S36', 'S47', '89'), ('S47', '89', '47'), ('89', '47', 'R3'), ('47', 'R3', 'R3'), ('R3', 'R3', 'R3'), ('R3', 'R3', '5'), ('R3', '5', 'R1'), ('5', 'R1', '89'), ('R1', '89', 'R2'), ('89', 'R2', 'R2'), ('R2', 'R2', 'R2'), ('R2', 'R2', 'CLR'), ('R2', 'CLR', 'Parsing'), ('CLR', 'Parsing', 'Table'), ('Parsing', 'Table', 'LALR'), ('Table', 'LALR', 'Parsing'), ('LALR', 'Parsing', 'Table'), ('Parsing', 'Table', 'Prof.'), ('Table', 'Prof.', 'Jay'), ('Prof.', 'Jay', 'R'), ('Jay', 'R', 'Dhamsaniya'), ('R', 'Dhamsaniya', '#'), ('Dhamsaniya', '#', '3130006'), ('#', '3130006', '('), ('3130006', '(', 'PS'), ('(', 'PS', ')'), ('PS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '1'), ('Unit', '1', '–'), ('1', '–', 'Basic'), ('–', 'Basic', 'Probability'), ('Basic', 'Probability', '‹'), ('Probability', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Prof.'), ('›', 'Prof.', 'Dixita'), ('Prof.', 'Dixita', 'B'), ('Dixita', 'B', 'Kagathara'), ('B', 'Kagathara', '#'), ('Kagathara', '#', '2170701'), ('#', '2170701', '('), ('2170701', '(', 'CD'), ('(', 'CD', ')'), ('CD', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '3'), ('Unit', '3', '–'), ('3', '–', 'Parsing'), ('–', 'Parsing', 'Theory'), ('Parsing', 'Theory', '('), ('Theory', '(', 'I'), ('(', 'I', ')'), ('I', ')', '‹'), (')', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Thank'), ('›', 'Thank', 'You'), ('Thank', 'You', '/docProps/thumbnail.jpeg')]

>> POS Tags are: 
 [('b', 'NN'), (',', ','), ('a|b|', 'JJ'), ('$', '$'), ('A\uf0e0a.A', 'NNP'), (',', ','), ('a|b|', 'RB'), ('$', '$'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), (',', ','), ('a|b|', 'RB'), ('$', '$'), ('47', 'CD'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('a|b|', 'RB'), ('$', '$'), ('89', 'CD'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NN'), (':', ':'), ('LALR', 'NNP'), ('(', '('), ('1', 'CD'), (')', ')'), ('-', ':'), ('look', 'NN'), ('ahead', 'RB'), ('LR', 'NNP'), ('Item', 'NNP'), ('set', 'VBD'), ('Action', 'NNP'), ('Go', 'NNP'), ('b', 'VBD'), ('$', '$'), ('S', 'NNP'), ('A', 'NNP'), ('0', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NNP'), ('2', 'CD'), ('S6', 'NNP'), ('S7', 'NNP'), ('5', 'CD'), ('3', 'CD'), ('S3', 'NNP'), ('S4', 'NNP'), ('8', 'CD'), ('4', 'CD'), ('R3', 'NNP'), ('R3', 'NNP'), ('5', 'CD'), ('R1', 'NNP'), ('6', 'CD'), ('S6', 'NNP'), ('S7', 'NNP'), ('9', 'CD'), ('7', 'CD'), ('R3', 'NNP'), ('8', 'CD'), ('R2', 'NNP'), ('R2', 'NNP'), ('9', 'CD'), ('R2', 'NNP'), ('Item', 'NNP'), ('set', 'VBD'), ('Action', 'NNP'), ('Go', 'NNP'), ('b', 'VBD'), ('$', '$'), ('S', 'NNP'), ('A', 'NNP'), ('0', 'CD'), ('S36', 'NNP'), ('S47', 'NNP'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NNP'), ('2', 'CD'), ('S36', 'NNP'), ('S47', 'NNP'), ('5', 'CD'), ('36', 'CD'), ('S36', 'NNP'), ('S47', 'NNP'), ('89', 'CD'), ('47', 'CD'), ('R3', 'NNP'), ('R3', 'NNP'), ('R3', 'NNP'), ('5', 'CD'), ('R1', 'NNP'), ('89', 'CD'), ('R2', 'NNP'), ('R2', 'NNP'), ('R2', 'NNP'), ('CLR', 'NNP'), ('Parsing', 'NNP'), ('Table', 'NNP'), ('LALR', 'NNP'), ('Parsing', 'NNP'), ('Table', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', '#'), ('3130006', 'CD'), ('(', '('), ('PS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'NNP'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', '#'), ('2170701', 'CD'), ('(', '('), ('CD', 'NN'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('3', 'CD'), ('–', 'NNP'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '('), ('I', 'PRP'), (')', ')'), ('‹', 'VBP'), ('#', '#'), ('›', 'NNP'), ('Thank', 'NNP'), ('You', 'PRP'), ('/docProps/thumbnail.jpeg', 'VBP')]

 (S
  (NP b/NN)
  ,/,
  a|b|/JJ
  $/$
  (NP Aa.A/NNP)
  ,/,
  a|b|/RB
  $/$
  (NP A/NNP b./NN)
  ,/,
  a|b|/RB
  $/$
  47/CD
  (NP A/NNP aA./NN)
  ,/,
  a|b|/RB
  $/$
  89/CD
  (NP Prof./NNP Jay/NNP R/NNP Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/JJ Example/NN)
  :/:
  (NP LALR/NNP)
  (/(
  1/CD
  )/)
  -/:
  (NP look/NN)
  ahead/RB
  (NP LR/NNP Item/NNP)
  set/VBD
  (NP Action/NNP Go/NNP)
  b/VBD
  $/$
  (NP S/NNP A/NNP)
  0/CD
  (NP S3/NNP S4/NNP)
  1/CD
  2/CD
  1/CD
  (NP Accept/NNP)
  2/CD
  (NP S6/NNP S7/NNP)
  5/CD
  3/CD
  (NP S3/NNP S4/NNP)
  8/CD
  4/CD
  (NP R3/NNP R3/NNP)
  5/CD
  (NP R1/NNP)
  6/CD
  (NP S6/NNP S7/NNP)
  9/CD
  7/CD
  (NP R3/NNP)
  8/CD
  (NP R2/NNP R2/NNP)
  9/CD
  (NP R2/NNP Item/NNP)
  set/VBD
  (NP Action/NNP Go/NNP)
  b/VBD
  $/$
  (NP S/NNP A/NNP)
  0/CD
  (NP S36/NNP S47/NNP)
  1/CD
  2/CD
  1/CD
  (NP Accept/NNP)
  2/CD
  (NP S36/NNP S47/NNP)
  5/CD
  36/CD
  (NP S36/NNP S47/NNP)
  89/CD
  47/CD
  (NP R3/NNP R3/NNP R3/NNP)
  5/CD
  (NP R1/NNP)
  89/CD
  (NP
    R2/NNP
    R2/NNP
    R2/NNP
    CLR/NNP
    Parsing/NNP
    Table/NNP
    LALR/NNP
    Parsing/NNP
    Table/NNP
    Prof./NNP
    Jay/NNP
    R/NNP
    Dhamsaniya/NNP)
  #/#
  3130006/CD
  (/(
  (NP PS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  1/CD
  (NP –/NNP Basic/NNP Probability/NNP ‹/NNP)
  #/#
  (NP ›/NNP Prof./NNP Dixita/NNP B/NNP Kagathara/NNP)
  #/#
  2170701/CD
  (/(
  (NP CD/NN)
  )/)
  /VBD
  (NP Unit/NNP)
  3/CD
  (NP –/NNP Parsing/NNP Theory/NNP)
  (/(
  I/PRP
  )/)
  ‹/VBP
  #/#
  (NP ›/NNP Thank/NNP)
  You/PRP
  /docProps/thumbnail.jpeg/VBP) 


>> Noun Phrases are: 
 ['b', 'A\uf0e0a.A', 'A\uf0e0 b.', 'A\uf0e0 aA.', 'Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Example', 'LALR', 'look', 'LR Item', 'Action Go', 'S A', 'S3 S4', 'Accept', 'S6 S7', 'S3 S4', 'R3 R3', 'R1', 'S6 S7', 'R3', 'R2 R2', 'R2 Item', 'Action Go', 'S A', 'S36 S47', 'Accept', 'S36 S47', 'S36 S47', 'R3 R3 R3', 'R1', 'R2 R2 R2 CLR Parsing Table LALR Parsing Table Prof. Jay R Dhamsaniya', 'PS', 'Unit', '– Basic Probability ‹', '› Prof. Dixita B Kagathara', 'CD', 'Unit', '– Parsing Theory', '› Thank']

>> Named Entities are: 
 [('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'LR Item'), ('PERSON', 'Action Go'), ('PERSON', 'Item'), ('PERSON', 'Action Go'), ('ORGANIZATION', 'Unit'), ('ORGANIZATION', 'Unit')] 

>> Stemming using Porter Stemmer: 
 [('b', 'b'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('47', '47'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('89', '89'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('LALR', 'lalr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'lr'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S6', 's6'), ('S7', 's7'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('8', '8'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('S6', 's6'), ('S7', 's7'), ('9', '9'), ('7', '7'), ('R3', 'r3'), ('8', '8'), ('R2', 'r2'), ('R2', 'r2'), ('9', '9'), ('R2', 'r2'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S36', 's36'), ('S47', 's47'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S36', 's36'), ('S47', 's47'), ('5', '5'), ('36', '36'), ('S36', 's36'), ('S47', 's47'), ('89', '89'), ('47', '47'), ('R3', 'r3'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('89', '89'), ('R2', 'r2'), ('R2', 'r2'), ('R2', 'r2'), ('CLR', 'clr'), ('Parsing', 'pars'), ('Table', 'tabl'), ('LALR', 'lalr'), ('Parsing', 'pars'), ('Table', 'tabl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Thank', 'thank'), ('You', 'you'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Stemming using Snowball Stemmer: 
 [('b', 'b'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0a.A', 'a\uf0e0a.a'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('47', '47'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aa.'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('89', '89'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), (':', ':'), ('LALR', 'lalr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'lr'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S6', 's6'), ('S7', 's7'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('8', '8'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('S6', 's6'), ('S7', 's7'), ('9', '9'), ('7', '7'), ('R3', 'r3'), ('8', '8'), ('R2', 'r2'), ('R2', 'r2'), ('9', '9'), ('R2', 'r2'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('b', 'b'), ('$', '$'), ('S', 's'), ('A', 'a'), ('0', '0'), ('S36', 's36'), ('S47', 's47'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S36', 's36'), ('S47', 's47'), ('5', '5'), ('36', '36'), ('S36', 's36'), ('S47', 's47'), ('89', '89'), ('47', '47'), ('R3', 'r3'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('89', '89'), ('R2', 'r2'), ('R2', 'r2'), ('R2', 'r2'), ('CLR', 'clr'), ('Parsing', 'pars'), ('Table', 'tabl'), ('LALR', 'lalr'), ('Parsing', 'pars'), ('Table', 'tabl'), ('Prof.', 'prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '–'), ('Basic', 'basic'), ('Probability', 'probabl'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '–'), ('Parsing', 'pars'), ('Theory', 'theori'), ('(', '('), ('I', 'i'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Thank', 'thank'), ('You', 'you'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Lemmatization: 
 [('b', 'b'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0a.A', 'A\uf0e0a.A'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('47', '47'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b|', 'a|b|'), ('$', '$'), ('89', '89'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), (':', ':'), ('LALR', 'LALR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'LR'), ('Item', 'Item'), ('set', 'set'), ('Action', 'Action'), ('Go', 'Go'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'A'), ('0', '0'), ('S3', 'S3'), ('S4', 'S4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'Accept'), ('2', '2'), ('S6', 'S6'), ('S7', 'S7'), ('5', '5'), ('3', '3'), ('S3', 'S3'), ('S4', 'S4'), ('8', '8'), ('4', '4'), ('R3', 'R3'), ('R3', 'R3'), ('5', '5'), ('R1', 'R1'), ('6', '6'), ('S6', 'S6'), ('S7', 'S7'), ('9', '9'), ('7', '7'), ('R3', 'R3'), ('8', '8'), ('R2', 'R2'), ('R2', 'R2'), ('9', '9'), ('R2', 'R2'), ('Item', 'Item'), ('set', 'set'), ('Action', 'Action'), ('Go', 'Go'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'A'), ('0', '0'), ('S36', 'S36'), ('S47', 'S47'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'Accept'), ('2', '2'), ('S36', 'S36'), ('S47', 'S47'), ('5', '5'), ('36', '36'), ('S36', 'S36'), ('S47', 'S47'), ('89', '89'), ('47', '47'), ('R3', 'R3'), ('R3', 'R3'), ('R3', 'R3'), ('5', '5'), ('R1', 'R1'), ('89', '89'), ('R2', 'R2'), ('R2', 'R2'), ('R2', 'R2'), ('CLR', 'CLR'), ('Parsing', 'Parsing'), ('Table', 'Table'), ('LALR', 'LALR'), ('Parsing', 'Parsing'), ('Table', 'Table'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'PS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('1', '1'), ('–', '–'), ('Basic', 'Basic'), ('Probability', 'Probability'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('3', '3'), ('–', '–'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Thank', 'Thank'), ('You', 'You'), ('/docProps/thumbnail.jpeg', '/docProps/thumbnail.jpeg')]

