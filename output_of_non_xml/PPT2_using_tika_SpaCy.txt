				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

PowerPoint Presentation  Unit-5  Deadlock firoz.sherasiya@darshan.ac.in 9879879861 


>> Tokens are: 
[PowerPoint, Presentation,  , Unit-5,  , Deadlock, firoz.sherasiya@darshan.ac.in, 9879879861] 

>> PoS Tags are: 
[('PowerPoint', 'PROPN'), ('Presentation', 'PROPN'), (' ', 'SPACE'), ('Unit-5', 'NOUN'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('firoz.sherasiya@darshan.ac.in', 'PROPN'), ('9879879861', 'NUM')] 

>> Dependency Tags are: 
[('PowerPoint', 'compound'), ('Presentation', 'nmod'), (' ', 'appos'), ('Unit-5', 'compound'), (' ', 'compound'), ('Deadlock', 'ROOT'), ('firoz.sherasiya@darshan.ac.in', 'appos'), ('9879879861', 'punct')]

>> Bigrams: 
[[PowerPoint, Presentation], [Presentation,  ], [ , Unit-5], [Unit-5,  ], [ , Deadlock], [Deadlock, firoz.sherasiya@darshan.ac.in], [firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Trigrams: 
[[PowerPoint, Presentation,  ], [Presentation,  , Unit-5], [ , Unit-5,  ], [Unit-5,  , Deadlock], [ , Deadlock, firoz.sherasiya@darshan.ac.in], [Deadlock, firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Noun Phrases are: 
[PowerPoint Presentation  Unit-5  Deadlock, firoz.sherasiya@darshan.ac.in]

>> Named Entities are: 
[('PowerPoint Presentation', 'ORG'), ('Deadlock firoz.sherasiya@darshan.ac.in 9879879861', 'ORG')]


============================ Sentence 2 =============================

Computer Engineering Department Prof. Firoz A Sherasiya Operating System (OS) GTU # 3140702   Darshan Institute of Engineering & Technology, Rajkot     Looping Outline Basic concepts of Deadlock Deadlock characteristics Deadlock ignorance Ostrich algorithm Deadlock detection and recovery Deadlock avoidance Banker’s algorithm Deadlock prevention     Basic concepts of Deadlock Section - 1      What is Deadlock? 


>> Tokens are: 
[Computer, Engineering, Department, Prof., Firoz, Sherasiya, Operating, System, (, OS, ), GTU, #, 3140702,   , Darshan, Institute, Engineering, &, Technology, ,, Rajkot,    , , Looping, Outline, Basic, concepts, Deadlock, Deadlock, characteristics, Deadlock, ignorance, Ostrich, algorithm, Deadlock, detection, recovery, Deadlock, avoidance, Banker, algorithm, Deadlock, prevention,     , Basic, concepts, Deadlock, Section, -, 1,      , Deadlock, ?] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('Operating', 'PROPN'), ('System', 'PROPN'), ('(', 'PUNCT'), ('OS', 'PROPN'), (')', 'PUNCT'), ('GTU', 'NOUN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('  ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('   ', 'SPACE'), ('\uf050', 'PROPN'), ('Looping', 'PROPN'), ('Outline', 'PROPN'), ('Basic', 'PROPN'), ('concepts', 'NOUN'), ('Deadlock', 'PROPN'), ('Deadlock', 'PROPN'), ('characteristics', 'NOUN'), ('Deadlock', 'PROPN'), ('ignorance', 'NOUN'), ('Ostrich', 'PROPN'), ('algorithm', 'NOUN'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('recovery', 'NOUN'), ('Deadlock', 'PROPN'), ('avoidance', 'NOUN'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('Deadlock', 'PROPN'), ('prevention', 'NOUN'), ('    ', 'SPACE'), ('Basic', 'PROPN'), ('concepts', 'NOUN'), ('Deadlock', 'PROPN'), ('Section', 'PROPN'), ('-', 'PUNCT'), ('1', 'NUM'), ('     ', 'SPACE'), ('Deadlock', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Engineering', 'compound'), ('Department', 'compound'), ('Prof.', 'compound'), ('Firoz', 'compound'), ('Sherasiya', 'compound'), ('Operating', 'compound'), ('System', 'ROOT'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('GTU', 'appos'), ('#', 'nmod'), ('3140702', 'nummod'), ('  ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), (',', 'punct'), ('Rajkot', 'appos'), ('   ', 'appos'), ('\uf050', 'prep'), ('Looping', 'compound'), ('Outline', 'compound'), ('Basic', 'compound'), ('concepts', 'appos'), ('Deadlock', 'compound'), ('Deadlock', 'compound'), ('characteristics', 'compound'), ('Deadlock', 'compound'), ('ignorance', 'pobj'), ('Ostrich', 'nmod'), ('algorithm', 'compound'), ('Deadlock', 'nmod'), ('detection', 'nmod'), ('recovery', 'compound'), ('Deadlock', 'compound'), ('avoidance', 'compound'), ('Banker', 'appos'), ('algorithm', 'compound'), ('Deadlock', 'compound'), ('prevention', 'appos'), ('    ', 'compound'), ('Basic', 'amod'), ('concepts', 'appos'), ('Deadlock', 'compound'), ('Section', 'pobj'), ('-', 'punct'), ('1', 'nummod'), ('     ', 'appos'), ('Deadlock', 'attr'), ('?', 'punct')]

>> Bigrams: 
[[Computer, Engineering], [Engineering, Department], [Department, Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, Operating], [Operating, System], [System, (], [(, OS], [OS, )], [), GTU], [GTU, #], [#, 3140702], [3140702,   ], [  , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ,], [,, Rajkot], [Rajkot,    ], [   , ], [, Looping], [Looping, Outline], [Outline, Basic], [Basic, concepts], [concepts, Deadlock], [Deadlock, Deadlock], [Deadlock, characteristics], [characteristics, Deadlock], [Deadlock, ignorance], [ignorance, Ostrich], [Ostrich, algorithm], [algorithm, Deadlock], [Deadlock, detection], [detection, recovery], [recovery, Deadlock], [Deadlock, avoidance], [avoidance, Banker], [Banker, algorithm], [algorithm, Deadlock], [Deadlock, prevention], [prevention,     ], [    , Basic], [Basic, concepts], [concepts, Deadlock], [Deadlock, Section], [Section, -], [-, 1], [1,      ], [     , Deadlock], [Deadlock, ?]]

>> Trigrams: 
[[Computer, Engineering, Department], [Engineering, Department, Prof.], [Department, Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, Operating], [Sherasiya, Operating, System], [Operating, System, (], [System, (, OS], [(, OS, )], [OS, ), GTU], [), GTU, #], [GTU, #, 3140702], [#, 3140702,   ], [3140702,   , Darshan], [  , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ,], [Technology, ,, Rajkot], [,, Rajkot,    ], [Rajkot,    , ], [   , , Looping], [, Looping, Outline], [Looping, Outline, Basic], [Outline, Basic, concepts], [Basic, concepts, Deadlock], [concepts, Deadlock, Deadlock], [Deadlock, Deadlock, characteristics], [Deadlock, characteristics, Deadlock], [characteristics, Deadlock, ignorance], [Deadlock, ignorance, Ostrich], [ignorance, Ostrich, algorithm], [Ostrich, algorithm, Deadlock], [algorithm, Deadlock, detection], [Deadlock, detection, recovery], [detection, recovery, Deadlock], [recovery, Deadlock, avoidance], [Deadlock, avoidance, Banker], [avoidance, Banker, algorithm], [Banker, algorithm, Deadlock], [algorithm, Deadlock, prevention], [Deadlock, prevention,     ], [prevention,     , Basic], [    , Basic, concepts], [Basic, concepts, Deadlock], [concepts, Deadlock, Section], [Deadlock, Section, -], [Section, -, 1], [-, 1,      ], [1,      , Deadlock], [     , Deadlock, ?]]

>> Noun Phrases are: 
[Computer Engineering Department Prof. Firoz A Sherasiya Operating System, OS, GTU, Darshan Institute, Engineering, Technology, Rajkot, Looping Outline Basic concepts, Deadlock Deadlock characteristics Deadlock ignorance, Ostrich algorithm Deadlock detection and recovery Deadlock avoidance Banker, algorithm Deadlock prevention,     Basic concepts, Deadlock Section, What, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('Looping Outline Basic', 'ORG'), ('Deadlock Deadlock', 'ORG'), ('Deadlock', 'PERSON'), ('Deadlock', 'PERSON'), ('Banker’s', 'ORG'), ('Deadlock', 'ORG'), ('Deadlock Section - 1      ', 'ORG'), ('Deadlock', 'PERSON')]


============================ Sentence 3 =============================

A set of processes is deadlocked if each process in the set is waiting for an event that only another process in the set can cause. 


>> Tokens are: 
[set, processes, deadlocked, process, set, waiting, event, process, set, cause, .] 

>> PoS Tags are: 
[('set', 'NOUN'), ('processes', 'NOUN'), ('deadlocked', 'VERB'), ('process', 'NOUN'), ('set', 'NOUN'), ('waiting', 'VERB'), ('event', 'NOUN'), ('process', 'NOUN'), ('set', 'NOUN'), ('cause', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('set', 'nsubjpass'), ('processes', 'pobj'), ('deadlocked', 'ROOT'), ('process', 'nsubj'), ('set', 'pobj'), ('waiting', 'advcl'), ('event', 'pobj'), ('process', 'nsubj'), ('set', 'pobj'), ('cause', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[set, processes], [processes, deadlocked], [deadlocked, process], [process, set], [set, waiting], [waiting, event], [event, process], [process, set], [set, cause], [cause, .]]

>> Trigrams: 
[[set, processes, deadlocked], [processes, deadlocked, process], [deadlocked, process, set], [process, set, waiting], [set, waiting, event], [waiting, event, process], [event, process, set], [process, set, cause], [set, cause, .]]

>> Noun Phrases are: 
[A set, processes, each process, the set, an event, only another process, the set]

>> Named Entities are: 
[]


============================ Sentence 4 =============================

Deadlocks are a set of blocked processes each holding a resource and waiting to acquire a resource held by another process. 


>> Tokens are: 
[Deadlocks, set, blocked, processes, holding, resource, waiting, acquire, resource, held, process, .] 

>> PoS Tags are: 
[('Deadlocks', 'NOUN'), ('set', 'NOUN'), ('blocked', 'VERB'), ('processes', 'NOUN'), ('holding', 'VERB'), ('resource', 'NOUN'), ('waiting', 'VERB'), ('acquire', 'VERB'), ('resource', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deadlocks', 'nsubj'), ('set', 'attr'), ('blocked', 'amod'), ('processes', 'pobj'), ('holding', 'acl'), ('resource', 'dobj'), ('waiting', 'conj'), ('acquire', 'xcomp'), ('resource', 'dobj'), ('held', 'acl'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deadlocks, set], [set, blocked], [blocked, processes], [processes, holding], [holding, resource], [resource, waiting], [waiting, acquire], [acquire, resource], [resource, held], [held, process], [process, .]]

>> Trigrams: 
[[Deadlocks, set, blocked], [set, blocked, processes], [blocked, processes, holding], [processes, holding, resource], [holding, resource, waiting], [resource, waiting, acquire], [waiting, acquire, resource], [acquire, resource, held], [resource, held, process], [held, process, .]]

>> Noun Phrases are: 
[Deadlocks, a set, blocked processes, a resource, a resource, another process]

>> Named Entities are: 
[]


============================ Sentence 5 =============================

	Exercise  	Give an real life example of deadlock? 


>> Tokens are: 
[	, Exercise,  	, real, life, example, deadlock, ?] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Exercise', 'PROPN'), (' \t', 'SPACE'), ('real', 'ADJ'), ('life', 'NOUN'), ('example', 'NOUN'), ('deadlock', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Exercise', 'compound'), (' \t', 'nsubj'), ('real', 'amod'), ('life', 'compound'), ('example', 'dobj'), ('deadlock', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[	, Exercise], [Exercise,  	], [ 	, real], [real, life], [life, example], [example, deadlock], [deadlock, ?]]

>> Trigrams: 
[[	, Exercise,  	], [Exercise,  	, real], [ 	, real, life], [real, life, example], [life, example, deadlock], [example, deadlock, ?]]

>> Noun Phrases are: 
[an real life example, deadlock]

>> Named Entities are: 
[]


============================ Sentence 6 =============================

  Resource Process Hold Resource Process Request P1 P2 R1 R2 Hold Hold Request Request DEADLOCK 


>> Tokens are: 
[  , Resource, Process, Hold, Resource, Process, Request, P1, P2, R1, R2, Hold, Hold, Request, Request, DEADLOCK] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Resource', 'PROPN'), ('Process', 'PROPN'), ('Hold', 'PROPN'), ('Resource', 'PROPN'), ('Process', 'PROPN'), ('Request', 'PROPN'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('R1', 'PROPN'), ('R2', 'PROPN'), ('Hold', 'PROPN'), ('Hold', 'VERB'), ('Request', 'NOUN'), ('Request', 'NOUN'), ('DEADLOCK', 'PROPN')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('Resource', 'compound'), ('Process', 'compound'), ('Hold', 'compound'), ('Resource', 'compound'), ('Process', 'compound'), ('Request', 'nsubj'), ('P1', 'compound'), ('P2', 'compound'), ('R1', 'appos'), ('R2', 'appos'), ('Hold', 'appos'), ('Hold', 'ROOT'), ('Request', 'compound'), ('Request', 'nsubj'), ('DEADLOCK', 'ccomp')]

>> Bigrams: 
[[  , Resource], [Resource, Process], [Process, Hold], [Hold, Resource], [Resource, Process], [Process, Request], [Request, P1], [P1, P2], [P2, R1], [R1, R2], [R2, Hold], [Hold, Hold], [Hold, Request], [Request, Request], [Request, DEADLOCK]]

>> Trigrams: 
[[  , Resource, Process], [Resource, Process, Hold], [Process, Hold, Resource], [Hold, Resource, Process], [Resource, Process, Request], [Process, Request, P1], [Request, P1, P2], [P1, P2, R1], [P2, R1, R2], [R1, R2, Hold], [R2, Hold, Hold], [Hold, Hold, Request], [Hold, Request, Request], [Request, Request, DEADLOCK]]

>> Noun Phrases are: 
[  Resource Process Hold Resource Process Request, P1 P2 R1, R2, Hold, Request Request]

>> Named Entities are: 
[('Resource Process Hold Resource Process Request P1', 'ORG'), ('R2 Hold Hold Request Request', 'PERSON')]


============================ Sentence 7 =============================

    Prof. 


>> Tokens are: 
[    , Prof.] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[    , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[    Prof.]

>> Named Entities are: 
[]


============================ Sentence 8 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 9 =============================

 Unit 5 – Deadlock ‹#›  Preemptable and non-preemptable resource Preemptable:- 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›,  , Preemptable, non, -, preemptable, resource, Preemptable:-] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('Preemptable', 'ADJ'), ('non', 'ADJ'), ('-', 'ADJ'), ('preemptable', 'ADJ'), ('resource', 'NOUN'), ('Preemptable:-', 'PROPN')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'dobj'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos'), ('Preemptable', 'amod'), ('non', 'conj'), ('-', 'conj'), ('preemptable', 'amod'), ('resource', 'appos'), ('Preemptable:-', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Preemptable], [Preemptable, non], [non, -], [-, preemptable], [preemptable, resource], [resource, Preemptable:-]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Preemptable], [ , Preemptable, non], [Preemptable, non, -], [non, -, preemptable], [-, preemptable, resource], [preemptable, resource, Preemptable:-]]

>> Noun Phrases are: 
[Unit, Deadlock, Preemptable and non-preemptable resource, Preemptable:-]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

Preemptive resources are those which can be taken away from a process without causing any ill effects to the process. 


>> Tokens are: 
[Preemptive, resources, taken, away, process, causing, ill, effects, process, .] 

>> PoS Tags are: 
[('Preemptive', 'ADJ'), ('resources', 'NOUN'), ('taken', 'VERB'), ('away', 'ADV'), ('process', 'NOUN'), ('causing', 'VERB'), ('ill', 'ADJ'), ('effects', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Preemptive', 'amod'), ('resources', 'nsubj'), ('taken', 'relcl'), ('away', 'advmod'), ('process', 'pobj'), ('causing', 'pcomp'), ('ill', 'amod'), ('effects', 'dobj'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Preemptive, resources], [resources, taken], [taken, away], [away, process], [process, causing], [causing, ill], [ill, effects], [effects, process], [process, .]]

>> Trigrams: 
[[Preemptive, resources, taken], [resources, taken, away], [taken, away, process], [away, process, causing], [process, causing, ill], [causing, ill, effects], [ill, effects, process], [effects, process, .]]

>> Noun Phrases are: 
[Preemptive resources, a process, any ill effects, the process]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

 Example:- Memory. 


>> Tokens are: 
[ , Example:-, Memory, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Example:-', 'PROPN'), ('Memory', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('Example:-', 'punct'), ('Memory', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ , Example:-], [Example:-, Memory], [Memory, .]]

>> Trigrams: 
[[ , Example:-, Memory], [Example:-, Memory, .]]

>> Noun Phrases are: 
[Memory]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

Non-preemptable:- Non-pre-emptive resources are those which cannot be taken away from the process without causing any ill effects to the process. 


>> Tokens are: 
[Non, -, preemptable:-, Non, -, pre, -, emptive, resources, taken, away, process, causing, ill, effects, process, .] 

>> PoS Tags are: 
[('Non', 'ADJ'), ('-', 'ADJ'), ('preemptable:-', 'ADJ'), ('Non', 'ADJ'), ('-', 'ADJ'), ('pre', 'ADJ'), ('-', 'ADJ'), ('emptive', 'ADJ'), ('resources', 'NOUN'), ('taken', 'VERB'), ('away', 'ADV'), ('process', 'NOUN'), ('causing', 'VERB'), ('ill', 'ADJ'), ('effects', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Non', 'amod'), ('-', 'punct'), ('preemptable:-', 'nmod'), ('Non', 'amod'), ('-', 'amod'), ('pre', 'amod'), ('-', 'amod'), ('emptive', 'amod'), ('resources', 'nsubj'), ('taken', 'relcl'), ('away', 'advmod'), ('process', 'pobj'), ('causing', 'pcomp'), ('ill', 'amod'), ('effects', 'dobj'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Non, -], [-, preemptable:-], [preemptable:-, Non], [Non, -], [-, pre], [pre, -], [-, emptive], [emptive, resources], [resources, taken], [taken, away], [away, process], [process, causing], [causing, ill], [ill, effects], [effects, process], [process, .]]

>> Trigrams: 
[[Non, -, preemptable:-], [-, preemptable:-, Non], [preemptable:-, Non, -], [Non, -, pre], [-, pre, -], [pre, -, emptive], [-, emptive, resources], [emptive, resources, taken], [resources, taken, away], [taken, away, process], [away, process, causing], [process, causing, ill], [causing, ill, effects], [ill, effects, process], [effects, process, .]]

>> Noun Phrases are: 
[Non-preemptable:- Non-pre-emptive resources, the process, any ill effects, the process]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

Example:- CD-ROM (CD recorder), Printer.     


>> Tokens are: 
[Example:-, CD, -, ROM, (, CD, recorder, ), ,, Printer, .,    ] 

>> PoS Tags are: 
[('Example:-', 'PROPN'), ('CD', 'NOUN'), ('-', 'PUNCT'), ('ROM', 'PROPN'), ('(', 'PUNCT'), ('CD', 'NOUN'), ('recorder', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Printer', 'PROPN'), ('.', 'PUNCT'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('Example:-', 'compound'), ('CD', 'compound'), ('-', 'punct'), ('ROM', 'ROOT'), ('(', 'punct'), ('CD', 'compound'), ('recorder', 'appos'), (')', 'punct'), (',', 'punct'), ('Printer', 'npadvmod'), ('.', 'punct'), ('   ', 'punct')]

>> Bigrams: 
[[Example:-, CD], [CD, -], [-, ROM], [ROM, (], [(, CD], [CD, recorder], [recorder, )], [), ,], [,, Printer], [Printer, .], [.,    ]]

>> Trigrams: 
[[Example:-, CD, -], [CD, -, ROM], [-, ROM, (], [ROM, (, CD], [(, CD, recorder], [CD, recorder, )], [recorder, ), ,], [), ,, Printer], [,, Printer, .], [Printer, .,    ]]

>> Noun Phrases are: 
[Example:- CD-ROM, (CD recorder]

>> Named Entities are: 
[]


============================ Sentence 14 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock v/s 


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, v, /, s] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('v', 'ADP'), ('/', 'SYM'), ('s', 'PROPN')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos'), ('Deadlock', 'nmod'), ('v', 'nmod'), ('/', 'punct'), ('s', 'parataxis')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, v], [v, /], [/, s]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, v], [Deadlock, v, /], [v, /, s]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 15 =============================

Starvation 	Deadlock	Starvation  		               Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[Starvation, 	, Deadlock, 	, Starvation,  		               , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('Starvation', 'PROPN'), ('\t', 'SPACE'), ('Deadlock', 'PROPN'), ('\t', 'SPACE'), ('Starvation', 'PROPN'), (' \t\t               ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Starvation', 'compound'), ('\t', 'compound'), ('Deadlock', 'compound'), ('\t', 'compound'), ('Starvation', 'compound'), (' \t\t               ', 'compound'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[Starvation, 	], [	, Deadlock], [Deadlock, 	], [	, Starvation], [Starvation,  		               ], [ 		               , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Starvation, 	, Deadlock], [	, Deadlock, 	], [Deadlock, 	, Starvation], [	, Starvation,  		               ], [Starvation,  		               , Prof.], [ 		               , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[Starvation 	Deadlock	Starvation  		               Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 16 =============================

Deadlock v/s Starvation 	Deadlock	Starvation  	All processes keep waiting for each other to complete and none get executed. 


>> Tokens are: 
[Deadlock, v, /, s, Starvation, 	, Deadlock, 	, Starvation,  	, processes, waiting, complete, executed, .] 

>> PoS Tags are: 
[('Deadlock', 'PROPN'), ('v', 'ADP'), ('/', 'SYM'), ('s', 'PROPN'), ('Starvation', 'PROPN'), ('\t', 'SPACE'), ('Deadlock', 'PROPN'), ('\t', 'SPACE'), ('Starvation', 'PROPN'), (' \t', 'SPACE'), ('processes', 'NOUN'), ('waiting', 'VERB'), ('complete', 'VERB'), ('executed', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deadlock', 'nmod'), ('v', 'nmod'), ('/', 'punct'), ('s', 'nmod'), ('Starvation', 'compound'), ('\t', 'compound'), ('Deadlock', 'compound'), ('\t', 'compound'), ('Starvation', 'compound'), (' \t', 'nsubj'), ('processes', 'appos'), ('waiting', 'xcomp'), ('complete', 'advcl'), ('executed', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Deadlock, v], [v, /], [/, s], [s, Starvation], [Starvation, 	], [	, Deadlock], [Deadlock, 	], [	, Starvation], [Starvation,  	], [ 	, processes], [processes, waiting], [waiting, complete], [complete, executed], [executed, .]]

>> Trigrams: 
[[Deadlock, v, /], [v, /, s], [/, s, Starvation], [s, Starvation, 	], [Starvation, 	, Deadlock], [	, Deadlock, 	], [Deadlock, 	, Starvation], [	, Starvation,  	], [Starvation,  	, processes], [ 	, processes, waiting], [processes, waiting, complete], [waiting, complete, executed], [complete, executed, .]]

>> Noun Phrases are: 
[All processes, none]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

	High priority process keep executing and low priority process are blocked. 


>> Tokens are: 
[	, High, priority, process, executing, low, priority, process, blocked, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('High', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('executing', 'NOUN'), ('low', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('blocked', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'amod'), ('High', 'amod'), ('priority', 'compound'), ('process', 'nsubj'), ('executing', 'dobj'), ('low', 'amod'), ('priority', 'compound'), ('process', 'nsubjpass'), ('blocked', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[	, High], [High, priority], [priority, process], [process, executing], [executing, low], [low, priority], [priority, process], [process, blocked], [blocked, .]]

>> Trigrams: 
[[	, High, priority], [High, priority, process], [priority, process, executing], [process, executing, low], [executing, low, priority], [low, priority, process], [priority, process, blocked], [process, blocked, .]]

>> Noun Phrases are: 
[	High priority process, executing, low priority process]

>> Named Entities are: 
[]


============================ Sentence 18 =============================

 	Resources are blocked by the process. 


>> Tokens are: 
[ 	, Resources, blocked, process, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Resources', 'NOUN'), ('blocked', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('Resources', 'nsubjpass'), ('blocked', 'ROOT'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, Resources], [Resources, blocked], [blocked, process], [process, .]]

>> Trigrams: 
[[ 	, Resources, blocked], [Resources, blocked, process], [blocked, process, .]]

>> Noun Phrases are: 
[ 	Resources, the process]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

	Resources are continuously utilized by the higher priority process. 


>> Tokens are: 
[	, Resources, continuously, utilized, higher, priority, process, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Resources', 'NOUN'), ('continuously', 'ADV'), ('utilized', 'VERB'), ('higher', 'ADJ'), ('priority', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Resources', 'nsubjpass'), ('continuously', 'advmod'), ('utilized', 'ROOT'), ('higher', 'amod'), ('priority', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Resources], [Resources, continuously], [continuously, utilized], [utilized, higher], [higher, priority], [priority, process], [process, .]]

>> Trigrams: 
[[	, Resources, continuously], [Resources, continuously, utilized], [continuously, utilized, higher], [utilized, higher, priority], [higher, priority, process], [priority, process, .]]

>> Noun Phrases are: 
[	Resources, the higher priority process]

>> Named Entities are: 
[]


============================ Sentence 20 =============================

 	Necessary conditions are mutual exclusion, hold and wait, no preemption, circular wait. 


>> Tokens are: 
[ 	, Necessary, conditions, mutual, exclusion, ,, hold, wait, ,, preemption, ,, circular, wait, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Necessary', 'ADJ'), ('conditions', 'NOUN'), ('mutual', 'ADJ'), ('exclusion', 'NOUN'), (',', 'PUNCT'), ('hold', 'VERB'), ('wait', 'VERB'), (',', 'PUNCT'), ('preemption', 'NOUN'), (',', 'PUNCT'), ('circular', 'ADJ'), ('wait', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('Necessary', 'amod'), ('conditions', 'nsubj'), ('mutual', 'amod'), ('exclusion', 'attr'), (',', 'punct'), ('hold', 'conj'), ('wait', 'conj'), (',', 'punct'), ('preemption', 'conj'), (',', 'punct'), ('circular', 'amod'), ('wait', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, Necessary], [Necessary, conditions], [conditions, mutual], [mutual, exclusion], [exclusion, ,], [,, hold], [hold, wait], [wait, ,], [,, preemption], [preemption, ,], [,, circular], [circular, wait], [wait, .]]

>> Trigrams: 
[[ 	, Necessary, conditions], [Necessary, conditions, mutual], [conditions, mutual, exclusion], [mutual, exclusion, ,], [exclusion, ,, hold], [,, hold, wait], [hold, wait, ,], [wait, ,, preemption], [,, preemption, ,], [preemption, ,, circular], [,, circular, wait], [circular, wait, .]]

>> Noun Phrases are: 
[ 	Necessary conditions, mutual exclusion, no preemption, circular wait]

>> Named Entities are: 
[('Necessary', 'NORP')]


============================ Sentence 21 =============================

	Priorities are assigned to the process. 


>> Tokens are: 
[	, Priorities, assigned, process, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Priorities', 'PROPN'), ('assigned', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Priorities', 'nsubjpass'), ('assigned', 'ROOT'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Priorities], [Priorities, assigned], [assigned, process], [process, .]]

>> Trigrams: 
[[	, Priorities, assigned], [Priorities, assigned, process], [assigned, process, .]]

>> Noun Phrases are: 
[	Priorities, the process]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

 	Also known as circular wait. 


>> Tokens are: 
[ 	, known, circular, wait, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('known', 'VERB'), ('circular', 'ADJ'), ('wait', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('known', 'acl'), ('circular', 'amod'), ('wait', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, known], [known, circular], [circular, wait], [wait, .]]

>> Trigrams: 
[[ 	, known, circular], [known, circular, wait], [circular, wait, .]]

>> Noun Phrases are: 
[circular wait]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

	Also known as lived lock. 


>> Tokens are: 
[	, known, lived, lock, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('known', 'VERB'), ('lived', 'ADJ'), ('lock', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('known', 'acl'), ('lived', 'amod'), ('lock', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, known], [known, lived], [lived, lock], [lock, .]]

>> Trigrams: 
[[	, known, lived], [known, lived, lock], [lived, lock, .]]

>> Noun Phrases are: 
[lived lock]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

 	It can be prevented by avoiding the necessary conditions for deadlock. 


>> Tokens are: 
[ 	, prevented, avoiding, necessary, conditions, deadlock, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('prevented', 'VERB'), ('avoiding', 'VERB'), ('necessary', 'ADJ'), ('conditions', 'NOUN'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'dep'), ('prevented', 'ROOT'), ('avoiding', 'pcomp'), ('necessary', 'amod'), ('conditions', 'dobj'), ('deadlock', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, prevented], [prevented, avoiding], [avoiding, necessary], [necessary, conditions], [conditions, deadlock], [deadlock, .]]

>> Trigrams: 
[[ 	, prevented, avoiding], [prevented, avoiding, necessary], [avoiding, necessary, conditions], [necessary, conditions, deadlock], [conditions, deadlock, .]]

>> Noun Phrases are: 
[It, the necessary conditions, deadlock]

>> Named Entities are: 
[]


============================ Sentence 25 =============================

	It can be prevented by Aging. 


>> Tokens are: 
[	, prevented, Aging, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('prevented', 'VERB'), ('Aging', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'dep'), ('prevented', 'ROOT'), ('Aging', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[	, prevented], [prevented, Aging], [Aging, .]]

>> Trigrams: 
[[	, prevented, Aging], [prevented, Aging, .]]

>> Noun Phrases are: 
[It, Aging]

>> Named Entities are: 
[('Aging', 'ORG')]


============================ Sentence 26 =============================

    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock characteristics Section - 2      Conditions that lead to deadlock (Deadlock characteristics) 


>> Tokens are: 
[    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, characteristics, Section, -, 2,      , Conditions, lead, deadlock, (, Deadlock, characteristics, )] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('characteristics', 'NOUN'), ('Section', 'PROPN'), ('-', 'PUNCT'), ('2', 'NUM'), ('     ', 'SPACE'), ('Conditions', 'PROPN'), ('lead', 'VERB'), ('deadlock', 'VERB'), ('(', 'PUNCT'), ('Deadlock', 'PROPN'), ('characteristics', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos'), ('Deadlock', 'compound'), ('characteristics', 'compound'), ('Section', 'nmod'), ('-', 'punct'), ('2', 'nummod'), ('     ', 'compound'), ('Conditions', 'appos'), ('lead', 'relcl'), ('deadlock', 'pobj'), ('(', 'punct'), ('Deadlock', 'compound'), ('characteristics', 'appos'), (')', 'punct')]

>> Bigrams: 
[[    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, characteristics], [characteristics, Section], [Section, -], [-, 2], [2,      ], [     , Conditions], [Conditions, lead], [lead, deadlock], [deadlock, (], [(, Deadlock], [Deadlock, characteristics], [characteristics, )]]

>> Trigrams: 
[[    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, characteristics], [Deadlock, characteristics, Section], [characteristics, Section, -], [Section, -, 2], [-, 2,      ], [2,      , Conditions], [     , Conditions, lead], [Conditions, lead, deadlock], [lead, deadlock, (], [deadlock, (, Deadlock], [(, Deadlock, characteristics], [Deadlock, characteristics, )]]

>> Noun Phrases are: 
[    Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock, Deadlock characteristics Section - 2      Conditions, (Deadlock characteristics]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Deadlock', 'ORG')]


============================ Sentence 27 =============================

Mutual exclusion Each resource is either currently assigned to exactly one process or is available. 


>> Tokens are: 
[Mutual, exclusion, resource, currently, assigned, exactly, process, available, .] 

>> PoS Tags are: 
[('Mutual', 'ADJ'), ('exclusion', 'NOUN'), ('resource', 'NOUN'), ('currently', 'ADV'), ('assigned', 'VERB'), ('exactly', 'ADV'), ('process', 'NOUN'), ('available', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Mutual', 'amod'), ('exclusion', 'ROOT'), ('resource', 'nsubjpass'), ('currently', 'advmod'), ('assigned', 'relcl'), ('exactly', 'advmod'), ('process', 'pobj'), ('available', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Mutual, exclusion], [exclusion, resource], [resource, currently], [currently, assigned], [assigned, exactly], [exactly, process], [process, available], [available, .]]

>> Trigrams: 
[[Mutual, exclusion, resource], [exclusion, resource, currently], [resource, currently, assigned], [currently, assigned, exactly], [assigned, exactly, process], [exactly, process, available], [process, available, .]]

>> Noun Phrases are: 
[Mutual exclusion, Each resource, exactly one process]

>> Named Entities are: 
[]


============================ Sentence 28 =============================

Only one process at a time can use a resource. 


>> Tokens are: 
[process, time, use, resource, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('time', 'NOUN'), ('use', 'VERB'), ('resource', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('time', 'pobj'), ('use', 'ROOT'), ('resource', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[process, time], [time, use], [use, resource], [resource, .]]

>> Trigrams: 
[[process, time, use], [time, use, resource], [use, resource, .]]

>> Noun Phrases are: 
[Only one process, a time, a resource]

>> Named Entities are: 
[('Only one', 'CARDINAL')]


============================ Sentence 29 =============================

Hold and wait Process currently holding resources granted earlier can request more resources. 


>> Tokens are: 
[Hold, wait, Process, currently, holding, resources, granted, earlier, request, resources, .] 

>> PoS Tags are: 
[('Hold', 'VERB'), ('wait', 'VERB'), ('Process', 'PROPN'), ('currently', 'ADV'), ('holding', 'VERB'), ('resources', 'NOUN'), ('granted', 'VERB'), ('earlier', 'ADV'), ('request', 'VERB'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Hold', 'csubj'), ('wait', 'conj'), ('Process', 'nsubj'), ('currently', 'advmod'), ('holding', 'ccomp'), ('resources', 'dobj'), ('granted', 'acl'), ('earlier', 'advmod'), ('request', 'ROOT'), ('resources', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Hold, wait], [wait, Process], [Process, currently], [currently, holding], [holding, resources], [resources, granted], [granted, earlier], [earlier, request], [request, resources], [resources, .]]

>> Trigrams: 
[[Hold, wait, Process], [wait, Process, currently], [Process, currently, holding], [currently, holding, resources], [holding, resources, granted], [resources, granted, earlier], [granted, earlier, request], [earlier, request, resources], [request, resources, .]]

>> Noun Phrases are: 
[Process, resources, more resources]

>> Named Entities are: 
[('Process', 'PERSON')]


============================ Sentence 30 =============================

No preemption Previously granted resources cannot be forcibly taken away from process. 


>> Tokens are: 
[preemption, Previously, granted, resources, forcibly, taken, away, process, .] 

>> PoS Tags are: 
[('preemption', 'NOUN'), ('Previously', 'ADV'), ('granted', 'VERB'), ('resources', 'NOUN'), ('forcibly', 'ADV'), ('taken', 'VERB'), ('away', 'ADV'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('preemption', 'nsubjpass'), ('Previously', 'advmod'), ('granted', 'amod'), ('resources', 'appos'), ('forcibly', 'advmod'), ('taken', 'ROOT'), ('away', 'advmod'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[preemption, Previously], [Previously, granted], [granted, resources], [resources, forcibly], [forcibly, taken], [taken, away], [away, process], [process, .]]

>> Trigrams: 
[[preemption, Previously, granted], [Previously, granted, resources], [granted, resources, forcibly], [resources, forcibly, taken], [forcibly, taken, away], [taken, away, process], [away, process, .]]

>> Noun Phrases are: 
[No preemption, Previously granted resources, process]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

Circular wait There must be a circular chain of 2 or more processes. 


>> Tokens are: 
[Circular, wait, circular, chain, 2, processes, .] 

>> PoS Tags are: 
[('Circular', 'ADJ'), ('wait', 'VERB'), ('circular', 'ADJ'), ('chain', 'NOUN'), ('2', 'NUM'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Circular', 'amod'), ('wait', 'ROOT'), ('circular', 'amod'), ('chain', 'attr'), ('2', 'nummod'), ('processes', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Circular, wait], [wait, circular], [circular, chain], [chain, 2], [2, processes], [processes, .]]

>> Trigrams: 
[[Circular, wait, circular], [wait, circular, chain], [circular, chain, 2], [chain, 2, processes], [2, processes, .]]

>> Noun Phrases are: 
[a circular chain, 2 or more processes]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 32 =============================

Each process is waiting for resource that is held by next member of the chain. 


>> Tokens are: 
[process, waiting, resource, held, member, chain, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('waiting', 'VERB'), ('resource', 'NOUN'), ('held', 'VERB'), ('member', 'NOUN'), ('chain', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('waiting', 'ROOT'), ('resource', 'pobj'), ('held', 'relcl'), ('member', 'pobj'), ('chain', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[process, waiting], [waiting, resource], [resource, held], [held, member], [member, chain], [chain, .]]

>> Trigrams: 
[[process, waiting, resource], [waiting, resource, held], [resource, held, member], [held, member, chain], [member, chain, .]]

>> Noun Phrases are: 
[Each process, resource, next member, the chain]

>> Named Entities are: 
[]


============================ Sentence 33 =============================

All four of these conditions must be present for a deadlock to occur. 


>> Tokens are: 
[conditions, present, deadlock, occur, .] 

>> PoS Tags are: 
[('conditions', 'NOUN'), ('present', 'ADJ'), ('deadlock', 'NOUN'), ('occur', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('conditions', 'pobj'), ('present', 'acomp'), ('deadlock', 'nsubj'), ('occur', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[conditions, present], [present, deadlock], [deadlock, occur], [occur, .]]

>> Trigrams: 
[[conditions, present, deadlock], [present, deadlock, occur], [deadlock, occur, .]]

>> Noun Phrases are: 
[these conditions, a deadlock]

>> Named Entities are: 
[('four', 'CARDINAL')]


============================ Sentence 34 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 35 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Strategies for dealing with deadlock Just ignore the problem Detection and recovery. 


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Strategies, dealing, deadlock, ignore, problem, Detection, recovery, .] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Strategies', 'PROPN'), ('dealing', 'VERB'), ('deadlock', 'NOUN'), ('ignore', 'VERB'), ('problem', 'NOUN'), ('Detection', 'PROPN'), ('recovery', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Strategies', 'appos'), ('dealing', 'pcomp'), ('deadlock', 'pobj'), ('ignore', 'ROOT'), ('problem', 'dobj'), ('Detection', 'appos'), ('recovery', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Strategies], [Strategies, dealing], [dealing, deadlock], [deadlock, ignore], [ignore, problem], [problem, Detection], [Detection, recovery], [recovery, .]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Strategies], [ , Strategies, dealing], [Strategies, dealing, deadlock], [dealing, deadlock, ignore], [deadlock, ignore, problem], [ignore, problem, Detection], [problem, Detection, recovery], [Detection, recovery, .]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock,  Strategies, deadlock, the problem, Detection, recovery]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 36 =============================

Let deadlocks occur, detect them and take action. 


>> Tokens are: 
[Let, deadlocks, occur, ,, detect, action, .] 

>> PoS Tags are: 
[('Let', 'VERB'), ('deadlocks', 'NOUN'), ('occur', 'VERB'), (',', 'PUNCT'), ('detect', 'VERB'), ('action', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Let', 'ROOT'), ('deadlocks', 'nsubj'), ('occur', 'ccomp'), (',', 'punct'), ('detect', 'conj'), ('action', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Let, deadlocks], [deadlocks, occur], [occur, ,], [,, detect], [detect, action], [action, .]]

>> Trigrams: 
[[Let, deadlocks, occur], [deadlocks, occur, ,], [occur, ,, detect], [,, detect, action], [detect, action, .]]

>> Noun Phrases are: 
[deadlocks, them, action]

>> Named Entities are: 
[]


============================ Sentence 37 =============================

Dynamic avoidance by careful resource allocation. 


>> Tokens are: 
[Dynamic, avoidance, careful, resource, allocation, .] 

>> PoS Tags are: 
[('Dynamic', 'ADJ'), ('avoidance', 'NOUN'), ('careful', 'ADJ'), ('resource', 'NOUN'), ('allocation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Dynamic', 'amod'), ('avoidance', 'ROOT'), ('careful', 'amod'), ('resource', 'compound'), ('allocation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Dynamic, avoidance], [avoidance, careful], [careful, resource], [resource, allocation], [allocation, .]]

>> Trigrams: 
[[Dynamic, avoidance, careful], [avoidance, careful, resource], [careful, resource, allocation], [resource, allocation, .]]

>> Noun Phrases are: 
[Dynamic avoidance, careful resource allocation]

>> Named Entities are: 
[]


============================ Sentence 38 =============================

Prevention, by structurally negating (killing) one of the four required conditions. 


>> Tokens are: 
[Prevention, ,, structurally, negating, (, killing, ), required, conditions, .] 

>> PoS Tags are: 
[('Prevention', 'PROPN'), (',', 'PUNCT'), ('structurally', 'ADV'), ('negating', 'NOUN'), ('(', 'PUNCT'), ('killing', 'VERB'), (')', 'PUNCT'), ('required', 'VERB'), ('conditions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Prevention', 'ROOT'), (',', 'punct'), ('structurally', 'advmod'), ('negating', 'pobj'), ('(', 'punct'), ('killing', 'pcomp'), (')', 'punct'), ('required', 'amod'), ('conditions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Prevention, ,], [,, structurally], [structurally, negating], [negating, (], [(, killing], [killing, )], [), required], [required, conditions], [conditions, .]]

>> Trigrams: 
[[Prevention, ,, structurally], [,, structurally, negating], [structurally, negating, (], [negating, (, killing], [(, killing, )], [killing, ), required], [), required, conditions], [required, conditions, .]]

>> Noun Phrases are: 
[Prevention, structurally negating, the four required conditions]

>> Named Entities are: 
[('one', 'CARDINAL'), ('four', 'CARDINAL')]


============================ Sentence 39 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 40 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock ignorance (Ostrich Algorithm) Section - 3      Deadlock ignorance (Ostrich Algorithm) 


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, ignorance, (, Ostrich, Algorithm, ), Section, -, 3,      , Deadlock, ignorance, (, Ostrich, Algorithm, )] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('ignorance', 'NOUN'), ('(', 'PUNCT'), ('Ostrich', 'PROPN'), ('Algorithm', 'PROPN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), ('     ', 'SPACE'), ('Deadlock', 'PROPN'), ('ignorance', 'NOUN'), ('(', 'PUNCT'), ('Ostrich', 'PROPN'), ('Algorithm', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'dep'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos'), ('Deadlock', 'compound'), ('ignorance', 'appos'), ('(', 'punct'), ('Ostrich', 'compound'), ('Algorithm', 'appos'), (')', 'punct'), ('Section', 'nmod'), ('-', 'punct'), ('3', 'nummod'), ('     ', 'compound'), ('Deadlock', 'compound'), ('ignorance', 'ROOT'), ('(', 'punct'), ('Ostrich', 'compound'), ('Algorithm', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, ignorance], [ignorance, (], [(, Ostrich], [Ostrich, Algorithm], [Algorithm, )], [), Section], [Section, -], [-, 3], [3,      ], [     , Deadlock], [Deadlock, ignorance], [ignorance, (], [(, Ostrich], [Ostrich, Algorithm], [Algorithm, )]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, ignorance], [Deadlock, ignorance, (], [ignorance, (, Ostrich], [(, Ostrich, Algorithm], [Ostrich, Algorithm, )], [Algorithm, ), Section], [), Section, -], [Section, -, 3], [-, 3,      ], [3,      , Deadlock], [     , Deadlock, ignorance], [Deadlock, ignorance, (], [ignorance, (, Ostrich], [(, Ostrich, Algorithm], [Ostrich, Algorithm, )]]

>> Noun Phrases are: 
[A Sherasiya, (OS, Unit, Deadlock, Deadlock ignorance, Ostrich Algorithm, Ostrich Algorithm]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Ostrich Algorithm', 'ORG'), ('Ostrich Algorithm', 'ORG')]


============================ Sentence 41 =============================

When storm approaches, an ostrich puts his head in the sand (ground) and pretend (imagine) that there is no problem at all. 


>> Tokens are: 
[storm, approaches, ,, ostrich, puts, head, sand, (, ground, ), pretend, (, imagine, ), problem, .] 

>> PoS Tags are: 
[('storm', 'NOUN'), ('approaches', 'VERB'), (',', 'PUNCT'), ('ostrich', 'NOUN'), ('puts', 'VERB'), ('head', 'NOUN'), ('sand', 'NOUN'), ('(', 'PUNCT'), ('ground', 'NOUN'), (')', 'PUNCT'), ('pretend', 'VERB'), ('(', 'PUNCT'), ('imagine', 'VERB'), (')', 'PUNCT'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('storm', 'nsubj'), ('approaches', 'advcl'), (',', 'punct'), ('ostrich', 'nsubj'), ('puts', 'ROOT'), ('head', 'dobj'), ('sand', 'pobj'), ('(', 'punct'), ('ground', 'appos'), (')', 'punct'), ('pretend', 'conj'), ('(', 'punct'), ('imagine', 'dobj'), (')', 'punct'), ('problem', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[storm, approaches], [approaches, ,], [,, ostrich], [ostrich, puts], [puts, head], [head, sand], [sand, (], [(, ground], [ground, )], [), pretend], [pretend, (], [(, imagine], [imagine, )], [), problem], [problem, .]]

>> Trigrams: 
[[storm, approaches, ,], [approaches, ,, ostrich], [,, ostrich, puts], [ostrich, puts, head], [puts, head, sand], [head, sand, (], [sand, (, ground], [(, ground, )], [ground, ), pretend], [), pretend, (], [pretend, (, imagine], [(, imagine, )], [imagine, ), problem], [), problem, .]]

>> Noun Phrases are: 
[storm, an ostrich, his head, the sand, (ground, no problem]

>> Named Entities are: 
[]


============================ Sentence 42 =============================

Ignore the deadlock and pretend that deadlock never occur. 


>> Tokens are: 
[Ignore, deadlock, pretend, deadlock, occur, .] 

>> PoS Tags are: 
[('Ignore', 'VERB'), ('deadlock', 'NOUN'), ('pretend', 'VERB'), ('deadlock', 'NOUN'), ('occur', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Ignore', 'ROOT'), ('deadlock', 'dobj'), ('pretend', 'conj'), ('deadlock', 'nsubj'), ('occur', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Ignore, deadlock], [deadlock, pretend], [pretend, deadlock], [deadlock, occur], [occur, .]]

>> Trigrams: 
[[Ignore, deadlock, pretend], [deadlock, pretend, deadlock], [pretend, deadlock, occur], [deadlock, occur, .]]

>> Noun Phrases are: 
[the deadlock, deadlock]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

Reasonable if  deadlocks occur very rarely  difficult to detect cost of prevention is high UNIX and Windows takes this approach       


>> Tokens are: 
[Reasonable,  , deadlocks, occur, rarely,  , difficult, detect, cost, prevention, high, UNIX, Windows, takes, approach,      ] 

>> PoS Tags are: 
[('Reasonable', 'ADJ'), (' ', 'SPACE'), ('deadlocks', 'NOUN'), ('occur', 'VERB'), ('rarely', 'ADV'), (' ', 'SPACE'), ('difficult', 'ADJ'), ('detect', 'VERB'), ('cost', 'NOUN'), ('prevention', 'NOUN'), ('high', 'ADJ'), ('UNIX', 'PROPN'), ('Windows', 'PROPN'), ('takes', 'VERB'), ('approach', 'NOUN'), ('     ', 'SPACE')] 

>> Dependency Tags are: 
[('Reasonable', 'nsubj'), (' ', 'compound'), ('deadlocks', 'nsubj'), ('occur', 'advcl'), ('rarely', 'advmod'), (' ', 'dobj'), ('difficult', 'amod'), ('detect', 'advcl'), ('cost', 'dobj'), ('prevention', 'pobj'), ('high', 'amod'), ('UNIX', 'attr'), ('Windows', 'conj'), ('takes', 'conj'), ('approach', 'compound'), ('     ', 'dobj')]

>> Bigrams: 
[[Reasonable,  ], [ , deadlocks], [deadlocks, occur], [occur, rarely], [rarely,  ], [ , difficult], [difficult, detect], [detect, cost], [cost, prevention], [prevention, high], [high, UNIX], [UNIX, Windows], [Windows, takes], [takes, approach], [approach,      ]]

>> Trigrams: 
[[Reasonable,  , deadlocks], [ , deadlocks, occur], [deadlocks, occur, rarely], [occur, rarely,  ], [rarely,  , difficult], [ , difficult, detect], [difficult, detect, cost], [detect, cost, prevention], [cost, prevention, high], [prevention, high, UNIX], [high, UNIX, Windows], [UNIX, Windows, takes], [Windows, takes, approach], [takes, approach,      ]]

>> Noun Phrases are: 
[ deadlocks, cost, prevention, high UNIX, Windows]

>> Named Entities are: 
[('Windows', 'ORG')]


============================ Sentence 44 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection and recovery Section - 4      Deadlock detection for single resource (RAG - Resource Allocation Graph) 


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, detection, recovery, Section, -, 4,      , Deadlock, detection, single, resource, (, RAG, -, Resource, Allocation, Graph, )] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('recovery', 'NOUN'), ('Section', 'PROPN'), ('-', 'PUNCT'), ('4', 'NUM'), ('     ', 'SPACE'), ('Deadlock', 'NOUN'), ('detection', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('RAG', 'PROPN'), ('-', 'PUNCT'), ('Resource', 'PROPN'), ('Allocation', 'PROPN'), ('Graph', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos'), ('Deadlock', 'nmod'), ('detection', 'nmod'), ('recovery', 'conj'), ('Section', 'nmod'), ('-', 'punct'), ('4', 'nummod'), ('     ', 'compound'), ('Deadlock', 'compound'), ('detection', 'appos'), ('single', 'amod'), ('resource', 'pobj'), ('(', 'punct'), ('RAG', 'compound'), ('-', 'punct'), ('Resource', 'compound'), ('Allocation', 'compound'), ('Graph', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, detection], [detection, recovery], [recovery, Section], [Section, -], [-, 4], [4,      ], [     , Deadlock], [Deadlock, detection], [detection, single], [single, resource], [resource, (], [(, RAG], [RAG, -], [-, Resource], [Resource, Allocation], [Allocation, Graph], [Graph, )]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, detection], [Deadlock, detection, recovery], [detection, recovery, Section], [recovery, Section, -], [Section, -, 4], [-, 4,      ], [4,      , Deadlock], [     , Deadlock, detection], [Deadlock, detection, single], [detection, single, resource], [single, resource, (], [resource, (, RAG], [(, RAG, -], [RAG, -, Resource], [-, Resource, Allocation], [Resource, Allocation, Graph], [Allocation, Graph, )]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock, Deadlock detection and recovery Section - 4      Deadlock detection, single resource, (RAG - Resource Allocation Graph]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Section - 4', 'LAW'), ('RAG - Resource Allocation Graph', 'ORG')]


============================ Sentence 45 =============================

We are starting from node D. Empty list L = () Add current node so Empty list = 


>> Tokens are: 
[starting, node, D., list, L, =, (, ), Add, current, node, list, =] 

>> PoS Tags are: 
[('starting', 'VERB'), ('node', 'NOUN'), ('D.', 'PROPN'), ('list', 'NOUN'), ('L', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), (')', 'PUNCT'), ('Add', 'VERB'), ('current', 'ADJ'), ('node', 'NOUN'), ('list', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('starting', 'ROOT'), ('node', 'amod'), ('D.', 'compound'), ('list', 'pobj'), ('L', 'npadvmod'), ('=', 'punct'), ('(', 'punct'), (')', 'punct'), ('Add', 'xcomp'), ('current', 'amod'), ('node', 'dobj'), ('list', 'dobj'), ('=', 'punct')]

>> Bigrams: 
[[starting, node], [node, D.], [D., list], [list, L], [L, =], [=, (], [(, )], [), Add], [Add, current], [current, node], [node, list], [list, =]]

>> Trigrams: 
[[starting, node, D.], [node, D., list], [D., list, L], [list, L, =], [L, =, (], [=, (, )], [(, ), Add], [), Add, current], [Add, current, node], [current, node, list], [node, list, =]]

>> Noun Phrases are: 
[We, node D. Empty list, current node, so Empty list]

>> Named Entities are: 
[('D. Empty', 'ORG')]


============================ Sentence 46 =============================

(D). 


>> Tokens are: 
[(, D, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('D', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('D', 'ROOT'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, D], [D, )], [), .]]

>> Trigrams: 
[[(, D, )], [D, ), .]]

>> Noun Phrases are: 
[(D]

>> Named Entities are: 
[]


============================ Sentence 47 =============================

From this node there is one outgoing arc to T so add T to list. 


>> Tokens are: 
[node, outgoing, arc, T, add, T, list, .] 

>> PoS Tags are: 
[('node', 'NOUN'), ('outgoing', 'ADJ'), ('arc', 'NOUN'), ('T', 'PROPN'), ('add', 'VERB'), ('T', 'PROPN'), ('list', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('node', 'pobj'), ('outgoing', 'amod'), ('arc', 'attr'), ('T', 'pobj'), ('add', 'conj'), ('T', 'dobj'), ('list', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[node, outgoing], [outgoing, arc], [arc, T], [T, add], [add, T], [T, list], [list, .]]

>> Trigrams: 
[[node, outgoing, arc], [outgoing, arc, T], [arc, T, add], [T, add, T], [add, T, list], [T, list, .]]

>> Noun Phrases are: 
[this node, one outgoing arc, T, T]

>> Named Entities are: 
[('one', 'CARDINAL')]


============================ Sentence 48 =============================

So list become L = 


>> Tokens are: 
[list, L, =] 

>> PoS Tags are: 
[('list', 'NOUN'), ('L', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('list', 'nsubj'), ('L', 'attr'), ('=', 'attr')]

>> Bigrams: 
[[list, L], [L, =]]

>> Trigrams: 
[[list, L, =]]

>> Noun Phrases are: 
[list, L]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

(D, T). 


>> Tokens are: 
[(, D, ,, T, ), .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('D', 'NOUN'), (',', 'PUNCT'), ('T', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('D', 'ROOT'), (',', 'punct'), ('T', 'npadvmod'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[(, D], [D, ,], [,, T], [T, )], [), .]]

>> Trigrams: 
[[(, D, ,], [D, ,, T], [,, T, )], [T, ), .]]

>> Noun Phrases are: 
[(D]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

Continue this step….so we get list as below 	L = 


>> Tokens are: 
[Continue, step….so, list, 	, L, =] 

>> PoS Tags are: 
[('Continue', 'VERB'), ('step….so', 'PROPN'), ('list', 'NOUN'), ('\t', 'SPACE'), ('L', 'PROPN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Continue', 'advcl'), ('step….so', 'dobj'), ('list', 'dobj'), ('\t', 'compound'), ('L', 'pobj'), ('=', 'punct')]

>> Bigrams: 
[[Continue, step….so], [step….so, list], [list, 	], [	, L], [L, =]]

>> Trigrams: 
[[Continue, step….so, list], [step….so, list, 	], [list, 	, L], [	, L, =]]

>> Noun Phrases are: 
[this step….so, we, list, 	L]

>> Named Entities are: 
[]


============================ Sentence 51 =============================

(D, T, E)………… L = (D, T, E, V, G, U, D) 


>> Tokens are: 
[(, D, ,, T, ,, E, ), ……, ……, L, =, (, D, ,, T, ,, E, ,, V, ,, G, ,, U, ,, D, )] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('D', 'NOUN'), (',', 'PUNCT'), ('T', 'PROPN'), (',', 'PUNCT'), ('E', 'PROPN'), (')', 'PUNCT'), ('……', 'PROPN'), ('……', 'PROPN'), ('L', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), ('D', 'NOUN'), (',', 'PUNCT'), ('T', 'PROPN'), (',', 'PUNCT'), ('E', 'PROPN'), (',', 'PUNCT'), ('V', 'NOUN'), (',', 'PUNCT'), ('G', 'NOUN'), (',', 'PUNCT'), ('U', 'NOUN'), (',', 'PUNCT'), ('D', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('D', 'ROOT'), (',', 'punct'), ('T', 'nmod'), (',', 'punct'), ('E', 'npadvmod'), (')', 'punct'), ('……', 'appos'), ('……', 'compound'), ('L', 'appos'), ('=', 'punct'), ('(', 'punct'), ('D', 'appos'), (',', 'punct'), ('T', 'conj'), (',', 'punct'), ('E', 'conj'), (',', 'punct'), ('V', 'conj'), (',', 'punct'), ('G', 'conj'), (',', 'punct'), ('U', 'conj'), (',', 'punct'), ('D', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[(, D], [D, ,], [,, T], [T, ,], [,, E], [E, )], [), ……], [……, ……], [……, L], [L, =], [=, (], [(, D], [D, ,], [,, T], [T, ,], [,, E], [E, ,], [,, V], [V, ,], [,, G], [G, ,], [,, U], [U, ,], [,, D], [D, )]]

>> Trigrams: 
[[(, D, ,], [D, ,, T], [,, T, ,], [T, ,, E], [,, E, )], [E, ), ……], [), ……, ……], [……, ……, L], [……, L, =], [L, =, (], [=, (, D], [(, D, ,], [D, ,, T], [,, T, ,], [T, ,, E], [,, E, ,], [E, ,, V], [,, V, ,], [V, ,, G], [,, G, ,], [G, ,, U], [,, U, ,], [U, ,, D], [,, D, )]]

>> Noun Phrases are: 
[(D, ……, …… L, (D, T, E, V, G, U]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

In the above step in list the node D appears twice, so deadlock. 


>> Tokens are: 
[step, list, node, D, appears, twice, ,, deadlock, .] 

>> PoS Tags are: 
[('step', 'NOUN'), ('list', 'NOUN'), ('node', 'NOUN'), ('D', 'PROPN'), ('appears', 'VERB'), ('twice', 'ADV'), (',', 'PUNCT'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('step', 'pobj'), ('list', 'pobj'), ('node', 'nsubj'), ('D', 'nsubj'), ('appears', 'ROOT'), ('twice', 'advmod'), (',', 'punct'), ('deadlock', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[step, list], [list, node], [node, D], [D, appears], [appears, twice], [twice, ,], [,, deadlock], [deadlock, .]]

>> Trigrams: 
[[step, list, node], [list, node, D], [node, D, appears], [D, appears, twice], [appears, twice, ,], [twice, ,, deadlock], [,, deadlock, .]]

>> Noun Phrases are: 
[the above step, list, the node, D]

>> Named Entities are: 
[]


============================ Sentence 53 =============================

R A S C D T E B V U F G W  DEADLOCK     


>> Tokens are: 
[R, S, C, D, T, E, B, V, U, F, G, W,  , DEADLOCK,    ] 

>> PoS Tags are: 
[('R', 'NOUN'), ('S', 'PROPN'), ('C', 'NOUN'), ('D', 'PROPN'), ('T', 'NOUN'), ('E', 'NOUN'), ('B', 'NOUN'), ('V', 'NOUN'), ('U', 'NOUN'), ('F', 'PROPN'), ('G', 'PROPN'), ('W', 'PROPN'), (' ', 'SPACE'), ('DEADLOCK', 'NOUN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('R', 'compound'), ('S', 'compound'), ('C', 'compound'), ('D', 'compound'), ('T', 'compound'), ('E', 'compound'), ('B', 'compound'), ('V', 'compound'), ('U', 'compound'), ('F', 'compound'), ('G', 'compound'), ('W', 'ROOT'), (' ', 'appos'), ('DEADLOCK', 'appos'), ('   ', 'punct')]

>> Bigrams: 
[[R, S], [S, C], [C, D], [D, T], [T, E], [E, B], [B, V], [V, U], [U, F], [F, G], [G, W], [W,  ], [ , DEADLOCK], [DEADLOCK,    ]]

>> Trigrams: 
[[R, S, C], [S, C, D], [C, D, T], [D, T, E], [T, E, B], [E, B, V], [B, V, U], [V, U, F], [U, F, G], [F, G, W], [G, W,  ], [W,  , DEADLOCK], [ , DEADLOCK,    ]]

>> Noun Phrases are: 
[R A S C D T E B V U F G W, DEADLOCK]

>> Named Entities are: 
[]


============================ Sentence 54 =============================

Prof. 


>> Tokens are: 
[Prof.] 

>> PoS Tags are: 
[('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('Prof.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Prof.]

>> Named Entities are: 
[]


============================ Sentence 55 =============================

Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 56 =============================

   Unit 5 – Deadlock ‹#›  Deadlock detection for single resource (RAG - Resource Allocation Graph) Algorithm for detecting deadlock for single resource For each node, N in the graph, perform the following five steps with N as the starting node. 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, detection, single, resource, (, RAG, -, Resource, Allocation, Graph, ), Algorithm, detecting, deadlock, single, resource, node, ,, N, graph, ,, perform, following, steps, N, starting, node, .] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('RAG', 'PROPN'), ('-', 'PUNCT'), ('Resource', 'PROPN'), ('Allocation', 'PROPN'), ('Graph', 'PROPN'), (')', 'PUNCT'), ('Algorithm', 'PROPN'), ('detecting', 'VERB'), ('deadlock', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('node', 'NOUN'), (',', 'PUNCT'), ('N', 'NUM'), ('graph', 'NOUN'), (',', 'PUNCT'), ('perform', 'VERB'), ('following', 'VERB'), ('steps', 'NOUN'), ('N', 'PROPN'), ('starting', 'VERB'), ('node', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('detection', 'appos'), ('single', 'amod'), ('resource', 'pobj'), ('(', 'punct'), ('RAG', 'compound'), ('-', 'punct'), ('Resource', 'compound'), ('Allocation', 'compound'), ('Graph', 'appos'), (')', 'punct'), ('Algorithm', 'appos'), ('detecting', 'pcomp'), ('deadlock', 'dobj'), ('single', 'amod'), ('resource', 'pobj'), ('node', 'pobj'), (',', 'punct'), ('N', 'appos'), ('graph', 'pobj'), (',', 'punct'), ('perform', 'ROOT'), ('following', 'amod'), ('steps', 'dobj'), ('N', 'pobj'), ('starting', 'amod'), ('node', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, detection], [detection, single], [single, resource], [resource, (], [(, RAG], [RAG, -], [-, Resource], [Resource, Allocation], [Allocation, Graph], [Graph, )], [), Algorithm], [Algorithm, detecting], [detecting, deadlock], [deadlock, single], [single, resource], [resource, node], [node, ,], [,, N], [N, graph], [graph, ,], [,, perform], [perform, following], [following, steps], [steps, N], [N, starting], [starting, node], [node, .]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, detection], [Deadlock, detection, single], [detection, single, resource], [single, resource, (], [resource, (, RAG], [(, RAG, -], [RAG, -, Resource], [-, Resource, Allocation], [Resource, Allocation, Graph], [Allocation, Graph, )], [Graph, ), Algorithm], [), Algorithm, detecting], [Algorithm, detecting, deadlock], [detecting, deadlock, single], [deadlock, single, resource], [single, resource, node], [resource, node, ,], [node, ,, N], [,, N, graph], [N, graph, ,], [graph, ,, perform], [,, perform, following], [perform, following, steps], [following, steps, N], [steps, N, starting], [N, starting, node], [starting, node, .]]

>> Noun Phrases are: 
[Unit, Deadlock,  Deadlock detection, single resource, (RAG - Resource Allocation Graph, Algorithm, deadlock, single resource, each node, the graph, the following five steps, N, the starting node]

>> Named Entities are: 
[('RAG - Resource Allocation Graph', 'ORG'), ('five', 'CARDINAL')]


============================ Sentence 57 =============================

Initialize L to the empty list, designate all arcs as unmarked. 


>> Tokens are: 
[Initialize, L, list, ,, designate, arcs, unmarked, .] 

>> PoS Tags are: 
[('Initialize', 'PROPN'), ('L', 'PROPN'), ('list', 'NOUN'), (',', 'PUNCT'), ('designate', 'VERB'), ('arcs', 'NOUN'), ('unmarked', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Initialize', 'compound'), ('L', 'nsubj'), ('list', 'pobj'), (',', 'punct'), ('designate', 'ROOT'), ('arcs', 'dobj'), ('unmarked', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Initialize, L], [L, list], [list, ,], [,, designate], [designate, arcs], [arcs, unmarked], [unmarked, .]]

>> Trigrams: 
[[Initialize, L, list], [L, list, ,], [list, ,, designate], [,, designate, arcs], [designate, arcs, unmarked], [arcs, unmarked, .]]

>> Noun Phrases are: 
[Initialize L, the empty list, all arcs]

>> Named Entities are: 
[('Initialize L', 'ORG')]


============================ Sentence 58 =============================

Add current node to end of L, check to see if node now appears in L two times. 


>> Tokens are: 
[Add, current, node, end, L, ,, check, node, appears, L, times, .] 

>> PoS Tags are: 
[('Add', 'VERB'), ('current', 'ADJ'), ('node', 'NOUN'), ('end', 'NOUN'), ('L', 'NOUN'), (',', 'PUNCT'), ('check', 'VERB'), ('node', 'NOUN'), ('appears', 'VERB'), ('L', 'PROPN'), ('times', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Add', 'advcl'), ('current', 'amod'), ('node', 'dobj'), ('end', 'advcl'), ('L', 'pobj'), (',', 'punct'), ('check', 'ROOT'), ('node', 'nsubj'), ('appears', 'ccomp'), ('L', 'pobj'), ('times', 'npadvmod'), ('.', 'punct')]

>> Bigrams: 
[[Add, current], [current, node], [node, end], [end, L], [L, ,], [,, check], [check, node], [node, appears], [appears, L], [L, times], [times, .]]

>> Trigrams: 
[[Add, current, node], [current, node, end], [node, end, L], [end, L, ,], [L, ,, check], [,, check, node], [check, node, appears], [node, appears, L], [appears, L, times], [L, times, .]]

>> Noun Phrases are: 
[current node, L, node, L]

>> Named Entities are: 
[('L two', 'CARDINAL')]


============================ Sentence 59 =============================

If it does, graph contains a cycle (listed in L), algorithm terminates. 


>> Tokens are: 
[,, graph, contains, cycle, (, listed, L, ), ,, algorithm, terminates, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('graph', 'NOUN'), ('contains', 'VERB'), ('cycle', 'NOUN'), ('(', 'PUNCT'), ('listed', 'VERB'), ('L', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('algorithm', 'NOUN'), ('terminates', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('graph', 'nsubj'), ('contains', 'ccomp'), ('cycle', 'dobj'), ('(', 'punct'), ('listed', 'acl'), ('L', 'pobj'), (')', 'punct'), (',', 'punct'), ('algorithm', 'nsubj'), ('terminates', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[,, graph], [graph, contains], [contains, cycle], [cycle, (], [(, listed], [listed, L], [L, )], [), ,], [,, algorithm], [algorithm, terminates], [terminates, .]]

>> Trigrams: 
[[,, graph, contains], [graph, contains, cycle], [contains, cycle, (], [cycle, (, listed], [(, listed, L], [listed, L, )], [L, ), ,], [), ,, algorithm], [,, algorithm, terminates], [algorithm, terminates, .]]

>> Noun Phrases are: 
[it, graph, a cycle, L, algorithm]

>> Named Entities are: 
[]


============================ Sentence 60 =============================

From given node, see if any unmarked outgoing arcs. 


>> Tokens are: 
[given, node, ,, unmarked, outgoing, arcs, .] 

>> PoS Tags are: 
[('given', 'VERB'), ('node', 'NOUN'), (',', 'PUNCT'), ('unmarked', 'ADJ'), ('outgoing', 'ADJ'), ('arcs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('given', 'pcomp'), ('node', 'dobj'), (',', 'punct'), ('unmarked', 'amod'), ('outgoing', 'amod'), ('arcs', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[given, node], [node, ,], [,, unmarked], [unmarked, outgoing], [outgoing, arcs], [arcs, .]]

>> Trigrams: 
[[given, node, ,], [node, ,, unmarked], [,, unmarked, outgoing], [unmarked, outgoing, arcs], [outgoing, arcs, .]]

>> Noun Phrases are: 
[node, if any unmarked outgoing arcs]

>> Named Entities are: 
[]


============================ Sentence 61 =============================

If so, go to step 4; if not, go to step 5. 


>> Tokens are: 
[,, step, 4, ;, ,, step, 5, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('step', 'VERB'), ('4', 'NUM'), (';', 'PUNCT'), (',', 'PUNCT'), ('step', 'VERB'), ('5', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('step', 'advcl'), ('4', 'nummod'), (';', 'punct'), (',', 'punct'), ('step', 'advcl'), ('5', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[,, step], [step, 4], [4, ;], [;, ,], [,, step], [step, 5], [5, .]]

>> Trigrams: 
[[,, step, 4], [step, 4, ;], [4, ;, ,], [;, ,, step], [,, step, 5], [step, 5, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('4', 'CARDINAL'), ('5', 'CARDINAL')]


============================ Sentence 62 =============================

Pick an unmarked outgoing arc at random and mark it. 


>> Tokens are: 
[Pick, unmarked, outgoing, arc, random, mark, .] 

>> PoS Tags are: 
[('Pick', 'VERB'), ('unmarked', 'ADJ'), ('outgoing', 'ADJ'), ('arc', 'NOUN'), ('random', 'ADJ'), ('mark', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Pick', 'ROOT'), ('unmarked', 'amod'), ('outgoing', 'amod'), ('arc', 'dobj'), ('random', 'pobj'), ('mark', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Pick, unmarked], [unmarked, outgoing], [outgoing, arc], [arc, random], [random, mark], [mark, .]]

>> Trigrams: 
[[Pick, unmarked, outgoing], [unmarked, outgoing, arc], [outgoing, arc, random], [arc, random, mark], [random, mark, .]]

>> Noun Phrases are: 
[an unmarked outgoing arc, it]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

Then follow it to the new current node and go to step 2. 


>> Tokens are: 
[follow, new, current, node, step, 2, .] 

>> PoS Tags are: 
[('follow', 'VERB'), ('new', 'ADJ'), ('current', 'ADJ'), ('node', 'NOUN'), ('step', 'VERB'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('follow', 'ROOT'), ('new', 'amod'), ('current', 'amod'), ('node', 'pobj'), ('step', 'advcl'), ('2', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[follow, new], [new, current], [current, node], [node, step], [step, 2], [2, .]]

>> Trigrams: 
[[follow, new, current], [new, current, node], [current, node, step], [node, step, 2], [step, 2, .]]

>> Noun Phrases are: 
[it, the new current node]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 64 =============================

If this is initial node, graph does not contain any cycles, algorithm terminates. 


>> Tokens are: 
[initial, node, ,, graph, contain, cycles, ,, algorithm, terminates, .] 

>> PoS Tags are: 
[('initial', 'ADJ'), ('node', 'NOUN'), (',', 'PUNCT'), ('graph', 'NOUN'), ('contain', 'VERB'), ('cycles', 'NOUN'), (',', 'PUNCT'), ('algorithm', 'NOUN'), ('terminates', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('initial', 'amod'), ('node', 'attr'), (',', 'punct'), ('graph', 'appos'), ('contain', 'ccomp'), ('cycles', 'dobj'), (',', 'punct'), ('algorithm', 'nsubj'), ('terminates', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[initial, node], [node, ,], [,, graph], [graph, contain], [contain, cycles], [cycles, ,], [,, algorithm], [algorithm, terminates], [terminates, .]]

>> Trigrams: 
[[initial, node, ,], [node, ,, graph], [,, graph, contain], [graph, contain, cycles], [contain, cycles, ,], [cycles, ,, algorithm], [,, algorithm, terminates], [algorithm, terminates, .]]

>> Noun Phrases are: 
[initial node, graph, any cycles, algorithm]

>> Named Entities are: 
[]


============================ Sentence 65 =============================

Otherwise, dead end. 


>> Tokens are: 
[,, dead, end, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('dead', 'ADJ'), ('end', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('dead', 'amod'), ('end', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[,, dead], [dead, end], [end, .]]

>> Trigrams: 
[[,, dead, end], [dead, end, .]]

>> Noun Phrases are: 
[Otherwise, dead end]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

Remove it, go back to previous node, make that one current node, go to step 2. 


>> Tokens are: 
[Remove, ,, previous, node, ,, current, node, ,, step, 2, .] 

>> PoS Tags are: 
[('Remove', 'VERB'), (',', 'PUNCT'), ('previous', 'ADJ'), ('node', 'NOUN'), (',', 'PUNCT'), ('current', 'ADJ'), ('node', 'NOUN'), (',', 'PUNCT'), ('step', 'VERB'), ('2', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Remove', 'advcl'), (',', 'punct'), ('previous', 'amod'), ('node', 'pobj'), (',', 'punct'), ('current', 'amod'), ('node', 'nsubj'), (',', 'punct'), ('step', 'advcl'), ('2', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Remove, ,], [,, previous], [previous, node], [node, ,], [,, current], [current, node], [node, ,], [,, step], [step, 2], [2, .]]

>> Trigrams: 
[[Remove, ,, previous], [,, previous, node], [previous, node, ,], [node, ,, current], [,, current, node], [current, node, ,], [node, ,, step], [,, step, 2], [step, 2, .]]

>> Noun Phrases are: 
[it, previous node, one current node]

>> Named Entities are: 
[('one', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 67 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 68 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for multiple resources 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	1  	Tape Drives	Plotters	Scanners	CD Roms 	2	1	0	0   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, detection, multiple, resources, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 4, 	, 2, 	, 3, 	, 1,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 2, 	, 1, 	, 0, 	, 0,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('multiple', 'ADJ'), ('resources', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('detection', 'appos'), ('multiple', 'amod'), ('resources', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('2', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'conj'), ('1', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'prep'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, detection], [detection, multiple], [multiple, resources], [resources, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 4], [4, 	], [	, 2], [2, 	], [	, 3], [3, 	], [	, 1], [1,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, detection], [Deadlock, detection, multiple], [detection, multiple, resources], [multiple, resources, 	], [resources, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2, 	], [2, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1,  	], [1,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock,  Deadlock detection, multiple resources, 	Tape Drives, Tape Drives]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 69 =============================

A = 


>> Tokens are: 
[=] 

>> PoS Tags are: 
[('=', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[A]

>> Named Entities are: 
[]


============================ Sentence 70 =============================

	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 71 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 72 =============================

	1	0 	P2	2	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, P2, 	, 2, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'conj'), ('0', 'appos'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'dobj'), ('2', 'nummod'), ('\t', 'conj'), ('0', 'punct'), ('\t', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 73 =============================

	1 	P3	0 


>> Tokens are: 
[	, 1, 	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('0', 'nummod')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P3], [	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[	1 	P3]

>> Named Entities are: 
[]


============================ Sentence 74 =============================

	1	2	0  C = R = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	2	0	0 


>> Tokens are: 
[	, 1, 	, 2, 	, 0,  , C, =, R, =, 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 2, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('C', 'NOUN'), ('=', 'SYM'), ('R', 'NOUN'), ('=', 'PUNCT'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'dep'), ('\t', 'appos'), ('0', 'punct'), (' ', 'compound'), ('C', 'compound'), ('=', 'punct'), ('R', 'appos'), ('=', 'punct'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'ROOT'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 2], [2, 	], [	, 0], [0,  ], [ , C], [C, =], [=, R], [R, =], [=, 	], [	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 2], [2, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0,  ], [0,  , C], [ , C, =], [C, =, R], [=, R, =], [R, =, 	], [=, 	, Process], [	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[0  C = R]

>> Named Entities are: 
[]


============================ Sentence 75 =============================

	1 	P2	1	0	1	1 	P3	2	1	0	0  total no of each resource no of resources that are available (free) 


>> Tokens are: 
[	, 1, 	, P2, 	, 1, 	, 0, 	, 1, 	, 1, 	, P3, 	, 2, 	, 1, 	, 0, 	, 0,  , total, resource, resources, available, (, free, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'dep'), ('P2', 'compound'), ('\t', 'dobj'), ('1', 'nummod'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P3', 'nsubj'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'pobj'), ('resources', 'pobj'), ('available', 'acomp'), ('(', 'punct'), ('free', 'parataxis'), (')', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P2], [P2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P3], [P3, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, available], [available, (], [(, free], [free, )]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P3], [	, P3, 	], [P3, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0], [	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, available], [resources, available, (], [available, (, free], [(, free, )]]

>> Noun Phrases are: 
[	1 	P2	1	0	1	1 	P3, each resource, resources]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 76 =============================

no of resources held by each process no of resources still needed by each process to proceed       T =     


>> Tokens are: 
[resources, held, process, resources, needed, process, proceed,       , T, =,    ] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('      ', 'SPACE'), ('T', 'PROPN'), ('=', 'NUM'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('      ', 'dobj'), ('T', 'compound'), ('=', 'punct'), ('   ', 'nummod')]

>> Bigrams: 
[[resources, held], [held, process], [process, resources], [resources, needed], [needed, process], [process, proceed], [proceed,       ], [      , T], [T, =], [=,    ]]

>> Trigrams: 
[[resources, held, process], [held, process, resources], [process, resources, needed], [resources, needed, process], [needed, process, proceed], [process, proceed,       ], [proceed,       , T], [      , T, =], [T, =,    ]]

>> Noun Phrases are: 
[resources, each process, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 77 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for multiple resources 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	1  	Tape Drives	Plotters	Scanners	CD Roms 	0 


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, detection, multiple, resources, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 4, 	, 2, 	, 3, 	, 1,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 0] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('multiple', 'ADJ'), ('resources', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'npadvmod'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('detection', 'appos'), ('multiple', 'amod'), ('resources', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('2', 'nmod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('1', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, detection], [detection, multiple], [multiple, resources], [resources, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 4], [4, 	], [	, 2], [2, 	], [	, 3], [3, 	], [	, 1], [1,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 0]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, detection], [Deadlock, detection, multiple], [detection, multiple, resources], [multiple, resources, 	], [resources, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2, 	], [2, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1,  	], [1,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 0]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Deadlock,  Deadlock detection, multiple resources, 	Tape Drives, Tape Drives]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 78 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 80 =============================

	0   


>> Tokens are: 
[	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, 0], [0,  ]]

>> Trigrams: 
[[	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 81 =============================

A = 


>> Tokens are: 
[=] 

>> PoS Tags are: 
[('=', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[A]

>> Named Entities are: 
[]


============================ Sentence 82 =============================

	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 83 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 84 =============================

	1	0 	P2	2	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, P2, 	, 2, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'conj'), ('0', 'appos'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'dobj'), ('2', 'nummod'), ('\t', 'conj'), ('0', 'punct'), ('\t', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 85 =============================

	1 	P3	2	2	2	0  C = R = 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	2	0	0 


>> Tokens are: 
[	, 1, 	, P3, 	, 2, 	, 2, 	, 2, 	, 0,  , C, =, R, =, 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 2, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('C', 'NOUN'), ('=', 'SYM'), ('R', 'NOUN'), ('=', 'PUNCT'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('0', 'punct'), (' ', 'compound'), ('C', 'compound'), ('=', 'punct'), ('R', 'appos'), ('=', 'punct'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P3], [P3, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, 0], [0,  ], [ , C], [C, =], [=, R], [R, =], [=, 	], [	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 2], [2, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P3], [	, P3, 	], [P3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0,  ], [0,  , C], [ , C, =], [C, =, R], [=, R, =], [R, =, 	], [=, 	, Process], [	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1 	P3, 0  C = R]

>> Named Entities are: 
[]


============================ Sentence 86 =============================

	1 	P2	1	0	1	1 	P3	2	1	0	0  total no of each resource no of resources that are available (free) 


>> Tokens are: 
[	, 1, 	, P2, 	, 1, 	, 0, 	, 1, 	, 1, 	, P3, 	, 2, 	, 1, 	, 0, 	, 0,  , total, resource, resources, available, (, free, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'dep'), ('P2', 'compound'), ('\t', 'dobj'), ('1', 'nummod'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P3', 'nsubj'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'pobj'), ('resources', 'pobj'), ('available', 'acomp'), ('(', 'punct'), ('free', 'parataxis'), (')', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P2], [P2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P3], [P3, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, available], [available, (], [(, free], [free, )]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P3], [	, P3, 	], [P3, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0], [	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, available], [resources, available, (], [available, (, free], [(, free, )]]

>> Noun Phrases are: 
[	1 	P2	1	0	1	1 	P3, each resource, resources]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 87 =============================

no of resources held by each process no of resources still needed by each process to proceed       T =       


>> Tokens are: 
[resources, held, process, resources, needed, process, proceed,       , T, =,      ] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('      ', 'SPACE'), ('T', 'NOUN'), ('=', 'NOUN'), ('     ', 'SPACE')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('      ', 'compound'), ('T', 'compound'), ('=', 'punct'), ('     ', 'dobj')]

>> Bigrams: 
[[resources, held], [held, process], [process, resources], [resources, needed], [needed, process], [process, proceed], [proceed,       ], [      , T], [T, =], [=,      ]]

>> Trigrams: 
[[resources, held, process], [held, process, resources], [process, resources, needed], [resources, needed, process], [needed, process, proceed], [process, proceed,       ], [proceed,       , T], [      , T, =], [T, =,      ]]

>> Noun Phrases are: 
[resources, each process, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 88 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock detection for multiple resources 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	1  	Tape Drives	Plotters	Scanners	CD Roms 	2	2	2	0   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, detection, multiple, resources, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 4, 	, 2, 	, 3, 	, 1,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 2, 	, 2, 	, 2, 	, 0,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('detection', 'NOUN'), ('multiple', 'ADJ'), ('resources', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'ROOT'), ('\uf077', 'relcl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('detection', 'appos'), ('multiple', 'amod'), ('resources', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('2', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'conj'), ('1', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'appos'), ('\t', 'compound'), ('2', 'appos'), ('\t', 'appos'), ('0', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, detection], [detection, multiple], [multiple, resources], [resources, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 4], [4, 	], [	, 2], [2, 	], [	, 3], [3, 	], [	, 1], [1,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, detection], [Deadlock, detection, multiple], [detection, multiple, resources], [multiple, resources, 	], [resources, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2, 	], [2, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1,  	], [1,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock,  Deadlock detection, multiple resources, Tape Drives]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 89 =============================

A = 


>> Tokens are: 
[=] 

>> PoS Tags are: 
[('=', 'PUNCT')] 

>> Dependency Tags are: 
[('=', 'punct')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[A]

>> Named Entities are: 
[]


============================ Sentence 90 =============================

	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 92 =============================

	1	0 	P2	2	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, P2, 	, 2, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'conj'), ('0', 'appos'), ('\t', 'ROOT'), ('P2', 'compound'), ('\t', 'dobj'), ('2', 'nummod'), ('\t', 'conj'), ('0', 'punct'), ('\t', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, P2], [P2, 	], [	, 2], [2, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, P2], [	, P2, 	], [P2, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 93 =============================

	1 	P3	0 


>> Tokens are: 
[	, 1, 	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('0', 'nummod')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P3], [	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[	1 	P3]

>> Named Entities are: 
[]


============================ Sentence 94 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 95 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 96 =============================

	0  C = R = 


>> Tokens are: 
[	, 0,  , C, =, R, =] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('C', 'NOUN'), ('=', 'SYM'), ('R', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('0', 'punct'), (' ', 'compound'), ('C', 'compound'), ('=', 'punct'), ('R', 'ROOT'), ('=', 'punct')]

>> Bigrams: 
[[	, 0], [0,  ], [ , C], [C, =], [=, R], [R, =]]

>> Trigrams: 
[[	, 0,  ], [0,  , C], [ , C, =], [C, =, R], [=, R, =]]

>> Noun Phrases are: 
[	0  C = R]

>> Named Entities are: 
[]


============================ Sentence 97 =============================

	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	2	0 


>> Tokens are: 
[	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'ROOT'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 2], [2, 	], [	, 0]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 2], [	, 2, 	], [2, 	, 0]]

>> Noun Phrases are: 
[	Process, 	Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[]


============================ Sentence 98 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 99 =============================

	1 	P2	1	0	1	1 	P3	2	1	0	0  total no of each resource no of resources that are available (free) 


>> Tokens are: 
[	, 1, 	, P2, 	, 1, 	, 0, 	, 1, 	, 1, 	, P3, 	, 2, 	, 1, 	, 0, 	, 0,  , total, resource, resources, available, (, free, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'dep'), ('P2', 'compound'), ('\t', 'dobj'), ('1', 'nummod'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P3', 'nsubj'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'pobj'), ('resources', 'pobj'), ('available', 'acomp'), ('(', 'punct'), ('free', 'parataxis'), (')', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P2], [P2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P3], [P3, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, available], [available, (], [(, free], [free, )]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P3], [	, P3, 	], [P3, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0], [	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, available], [resources, available, (], [available, (, free], [(, free, )]]

>> Noun Phrases are: 
[	1 	P2	1	0	1	1 	P3, each resource, resources]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 100 =============================

no of resources held by each process no of resources still needed by each process to proceed      T =   


>> Tokens are: 
[resources, held, process, resources, needed, process, proceed,      , T, =,  ] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('     ', 'SPACE'), ('T', 'PROPN'), ('=', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('     ', 'compound'), ('T', 'dobj'), ('=', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[resources, held], [held, process], [process, resources], [resources, needed], [needed, process], [process, proceed], [proceed,      ], [     , T], [T, =], [=,  ]]

>> Trigrams: 
[[resources, held, process], [held, process, resources], [process, resources, needed], [resources, needed, process], [needed, process, proceed], [process, proceed,      ], [proceed,      , T], [     , T, =], [T, =,  ]]

>> Noun Phrases are: 
[resources, each process, resources, each process,      T]

>> Named Entities are: 
[]


============================ Sentence 101 =============================

DEADLOCK     Prof. 


>> Tokens are: 
[DEADLOCK,     , Prof.] 

>> PoS Tags are: 
[('DEADLOCK', 'PROPN'), ('    ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('DEADLOCK', 'ROOT'), ('    ', 'compound'), ('Prof.', 'dobj')]

>> Bigrams: 
[[DEADLOCK,     ], [    , Prof.]]

>> Trigrams: 
[[DEADLOCK,     , Prof.]]

>> Noun Phrases are: 
[DEADLOCK,     Prof.]

>> Named Entities are: 
[]


============================ Sentence 102 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 103 =============================

 Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'npadvmod'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[Deadlock]

>> Named Entities are: 
[]


============================ Sentence 104 =============================

Deadlock recovery Recovery through pre-emption In this method resources are temporarily taken away from its current owner and give it to another process. 


>> Tokens are: 
[Deadlock, recovery, Recovery, pre, -, emption, method, resources, temporarily, taken, away, current, owner, process, .] 

>> PoS Tags are: 
[('Deadlock', 'PROPN'), ('recovery', 'NOUN'), ('Recovery', 'PROPN'), ('pre', 'ADJ'), ('-', 'NOUN'), ('emption', 'NOUN'), ('method', 'NOUN'), ('resources', 'NOUN'), ('temporarily', 'ADV'), ('taken', 'VERB'), ('away', 'ADV'), ('current', 'ADJ'), ('owner', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deadlock', 'compound'), ('recovery', 'compound'), ('Recovery', 'nsubjpass'), ('pre', 'pobj'), ('-', 'pobj'), ('emption', 'pobj'), ('method', 'compound'), ('resources', 'pobj'), ('temporarily', 'advmod'), ('taken', 'ROOT'), ('away', 'advmod'), ('current', 'amod'), ('owner', 'pobj'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Deadlock, recovery], [recovery, Recovery], [Recovery, pre], [pre, -], [-, emption], [emption, method], [method, resources], [resources, temporarily], [temporarily, taken], [taken, away], [away, current], [current, owner], [owner, process], [process, .]]

>> Trigrams: 
[[Deadlock, recovery, Recovery], [recovery, Recovery, pre], [Recovery, pre, -], [pre, -, emption], [-, emption, method], [emption, method, resources], [method, resources, temporarily], [resources, temporarily, taken], [temporarily, taken, away], [taken, away, current], [away, current, owner], [current, owner, process], [owner, process, .]]

>> Noun Phrases are: 
[Deadlock recovery Recovery, -, emption, this method resources, its current owner, it, another process]

>> Named Entities are: 
[('Deadlock recovery Recovery', 'WORK_OF_ART')]


============================ Sentence 105 =============================

The ability to take a resource away from a process, have another process use it, and then give it back without the process noticing it is highly dependent on the nature of the resource. 


>> Tokens are: 
[ability, resource, away, process, ,, process, use, ,, process, noticing, highly, dependent, nature, resource, .] 

>> PoS Tags are: 
[('ability', 'NOUN'), ('resource', 'NOUN'), ('away', 'ADV'), ('process', 'NOUN'), (',', 'PUNCT'), ('process', 'NOUN'), ('use', 'VERB'), (',', 'PUNCT'), ('process', 'NOUN'), ('noticing', 'NOUN'), ('highly', 'ADV'), ('dependent', 'ADJ'), ('nature', 'NOUN'), ('resource', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('ability', 'nsubj'), ('resource', 'dobj'), ('away', 'advmod'), ('process', 'pobj'), (',', 'punct'), ('process', 'nsubj'), ('use', 'ccomp'), (',', 'punct'), ('process', 'compound'), ('noticing', 'pobj'), ('highly', 'advmod'), ('dependent', 'acomp'), ('nature', 'pobj'), ('resource', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ability, resource], [resource, away], [away, process], [process, ,], [,, process], [process, use], [use, ,], [,, process], [process, noticing], [noticing, highly], [highly, dependent], [dependent, nature], [nature, resource], [resource, .]]

>> Trigrams: 
[[ability, resource, away], [resource, away, process], [away, process, ,], [process, ,, process], [,, process, use], [process, use, ,], [use, ,, process], [,, process, noticing], [process, noticing, highly], [noticing, highly, dependent], [highly, dependent, nature], [dependent, nature, resource], [nature, resource, .]]

>> Noun Phrases are: 
[The ability, a resource, a process, another process, it, it, the process noticing, it, the nature, the resource]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

Recovering this way is frequently difficult or impossible.   


>> Tokens are: 
[Recovering, way, frequently, difficult, impossible, .,  ] 

>> PoS Tags are: 
[('Recovering', 'VERB'), ('way', 'NOUN'), ('frequently', 'ADV'), ('difficult', 'ADJ'), ('impossible', 'ADJ'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Recovering', 'csubj'), ('way', 'dobj'), ('frequently', 'advmod'), ('difficult', 'acomp'), ('impossible', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Recovering, way], [way, frequently], [frequently, difficult], [difficult, impossible], [impossible, .], [.,  ]]

>> Trigrams: 
[[Recovering, way, frequently], [way, frequently, difficult], [frequently, difficult, impossible], [difficult, impossible, .], [impossible, .,  ]]

>> Noun Phrases are: 
[this way]

>> Named Entities are: 
[]


============================ Sentence 107 =============================

P1 P2 R1 R2 Hold Hold Request A First Checkpoints Second Checkpoints A A F1 F2 R B R   


>> Tokens are: 
[P1, P2, R1, R2, Hold, Hold, Request, Checkpoints, Second, Checkpoints, F1, F2, R, B, R,  ] 

>> PoS Tags are: 
[('P1', 'PROPN'), ('P2', 'PROPN'), ('R1', 'PROPN'), ('R2', 'PROPN'), ('Hold', 'PROPN'), ('Hold', 'VERB'), ('Request', 'NOUN'), ('Checkpoints', 'PROPN'), ('Second', 'PROPN'), ('Checkpoints', 'PROPN'), ('F1', 'PROPN'), ('F2', 'PROPN'), ('R', 'PROPN'), ('B', 'PROPN'), ('R', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('P1', 'compound'), ('P2', 'compound'), ('R1', 'nsubj'), ('R2', 'nmod'), ('Hold', 'appos'), ('Hold', 'ROOT'), ('Request', 'dobj'), ('Checkpoints', 'compound'), ('Second', 'compound'), ('Checkpoints', 'compound'), ('F1', 'compound'), ('F2', 'compound'), ('R', 'compound'), ('B', 'compound'), ('R', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[P1, P2], [P2, R1], [R1, R2], [R2, Hold], [Hold, Hold], [Hold, Request], [Request, Checkpoints], [Checkpoints, Second], [Second, Checkpoints], [Checkpoints, F1], [F1, F2], [F2, R], [R, B], [B, R], [R,  ]]

>> Trigrams: 
[[P1, P2, R1], [P2, R1, R2], [R1, R2, Hold], [R2, Hold, Hold], [Hold, Hold, Request], [Hold, Request, Checkpoints], [Request, Checkpoints, Second], [Checkpoints, Second, Checkpoints], [Second, Checkpoints, F1], [Checkpoints, F1, F2], [F1, F2, R], [F2, R, B], [R, B, R], [B, R,  ]]

>> Noun Phrases are: 
[P1 P2 R1, R2 Hold, Request, A First Checkpoints Second Checkpoints A A F1 F2 R B R]

>> Named Entities are: 
[('R2 Hold Hold Request', 'PERSON')]


============================ Sentence 108 =============================

A Recovery through rollback PCB (Process Control Block) and resource state are periodically saved at “checkpoint”. 


>> Tokens are: 
[Recovery, rollback, PCB, (, Process, Control, Block, ), resource, state, periodically, saved, “, checkpoint, ”, .] 

>> PoS Tags are: 
[('Recovery', 'PROPN'), ('rollback', 'NOUN'), ('PCB', 'PROPN'), ('(', 'PUNCT'), ('Process', 'PROPN'), ('Control', 'PROPN'), ('Block', 'PROPN'), (')', 'PUNCT'), ('resource', 'NOUN'), ('state', 'NOUN'), ('periodically', 'ADV'), ('saved', 'VERB'), ('“', 'PUNCT'), ('checkpoint', 'NOUN'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Recovery', 'nsubjpass'), ('rollback', 'compound'), ('PCB', 'pobj'), ('(', 'punct'), ('Process', 'compound'), ('Control', 'compound'), ('Block', 'appos'), (')', 'punct'), ('resource', 'compound'), ('state', 'nsubjpass'), ('periodically', 'advmod'), ('saved', 'ROOT'), ('“', 'punct'), ('checkpoint', 'pobj'), ('”', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Recovery, rollback], [rollback, PCB], [PCB, (], [(, Process], [Process, Control], [Control, Block], [Block, )], [), resource], [resource, state], [state, periodically], [periodically, saved], [saved, “], [“, checkpoint], [checkpoint, ”], [”, .]]

>> Trigrams: 
[[Recovery, rollback, PCB], [rollback, PCB, (], [PCB, (, Process], [(, Process, Control], [Process, Control, Block], [Control, Block, )], [Block, ), resource], [), resource, state], [resource, state, periodically], [state, periodically, saved], [periodically, saved, “], [saved, “, checkpoint], [“, checkpoint, ”], [checkpoint, ”, .]]

>> Noun Phrases are: 
[A Recovery, rollback PCB, (Process Control Block, resource state, checkpoint]

>> Named Entities are: 
[('Process Control Block', 'ORG')]


============================ Sentence 109 =============================

When deadlock is detected, rollback the preempted process up to the previous safe state before it acquired that resource. 


>> Tokens are: 
[deadlock, detected, ,, rollback, preempted, process, previous, safe, state, acquired, resource, .] 

>> PoS Tags are: 
[('deadlock', 'NOUN'), ('detected', 'VERB'), (',', 'PUNCT'), ('rollback', 'VERB'), ('preempted', 'ADJ'), ('process', 'NOUN'), ('previous', 'ADJ'), ('safe', 'ADJ'), ('state', 'NOUN'), ('acquired', 'VERB'), ('resource', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('deadlock', 'nsubjpass'), ('detected', 'advcl'), (',', 'punct'), ('rollback', 'ROOT'), ('preempted', 'amod'), ('process', 'dobj'), ('previous', 'amod'), ('safe', 'amod'), ('state', 'pobj'), ('acquired', 'advcl'), ('resource', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[deadlock, detected], [detected, ,], [,, rollback], [rollback, preempted], [preempted, process], [process, previous], [previous, safe], [safe, state], [state, acquired], [acquired, resource], [resource, .]]

>> Trigrams: 
[[deadlock, detected, ,], [detected, ,, rollback], [,, rollback, preempted], [rollback, preempted, process], [preempted, process, previous], [process, previous, safe], [previous, safe, state], [safe, state, acquired], [state, acquired, resource], [acquired, resource, .]]

>> Noun Phrases are: 
[deadlock, the preempted process, the previous safe state, it, that resource]

>> Named Entities are: 
[]


============================ Sentence 110 =============================

Discard the resource manipulation that occurred after that checkpoint. 


>> Tokens are: 
[Discard, resource, manipulation, occurred, checkpoint, .] 

>> PoS Tags are: 
[('Discard', 'PROPN'), ('resource', 'NOUN'), ('manipulation', 'NOUN'), ('occurred', 'VERB'), ('checkpoint', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Discard', 'ROOT'), ('resource', 'compound'), ('manipulation', 'appos'), ('occurred', 'relcl'), ('checkpoint', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Discard, resource], [resource, manipulation], [manipulation, occurred], [occurred, checkpoint], [checkpoint, .]]

>> Trigrams: 
[[Discard, resource, manipulation], [resource, manipulation, occurred], [manipulation, occurred, checkpoint], [occurred, checkpoint, .]]

>> Noun Phrases are: 
[Discard, the resource manipulation, that checkpoint]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

Start the process after it is determined it can run again. 


>> Tokens are: 
[Start, process, determined, run, .] 

>> PoS Tags are: 
[('Start', 'VERB'), ('process', 'NOUN'), ('determined', 'ADJ'), ('run', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Start', 'ROOT'), ('process', 'dobj'), ('determined', 'advcl'), ('run', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Start, process], [process, determined], [determined, run], [run, .]]

>> Trigrams: 
[[Start, process, determined], [process, determined, run], [determined, run, .]]

>> Noun Phrases are: 
[the process, it, it]

>> Named Entities are: 
[]


============================ Sentence 112 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock recovery Recovery through killing processes The simplest way to break a deadlock is to kill one or more processes. 


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, recovery, Recovery, killing, processes, simplest, way, break, deadlock, kill, processes, .] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('recovery', 'NOUN'), ('Recovery', 'PROPN'), ('killing', 'VERB'), ('processes', 'NOUN'), ('simplest', 'ADJ'), ('way', 'NOUN'), ('break', 'VERB'), ('deadlock', 'NOUN'), ('kill', 'VERB'), ('processes', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('recovery', 'compound'), ('Recovery', 'appos'), ('killing', 'pcomp'), ('processes', 'dobj'), ('simplest', 'amod'), ('way', 'dobj'), ('break', 'relcl'), ('deadlock', 'dobj'), ('kill', 'xcomp'), ('processes', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, recovery], [recovery, Recovery], [Recovery, killing], [killing, processes], [processes, simplest], [simplest, way], [way, break], [break, deadlock], [deadlock, kill], [kill, processes], [processes, .]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, recovery], [Deadlock, recovery, Recovery], [recovery, Recovery, killing], [Recovery, killing, processes], [killing, processes, simplest], [processes, simplest, way], [simplest, way, break], [way, break, deadlock], [break, deadlock, kill], [deadlock, kill, processes], [kill, processes, .]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock,  Deadlock recovery Recovery, processes, The simplest way, a deadlock, one or more processes]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Deadlock recovery Recovery', 'WORK_OF_ART'), ('one', 'CARDINAL')]


============================ Sentence 114 =============================

Kill all the process involved in deadlock Kill process one by one. 


>> Tokens are: 
[Kill, process, involved, deadlock, Kill, process, .] 

>> PoS Tags are: 
[('Kill', 'VERB'), ('process', 'NOUN'), ('involved', 'VERB'), ('deadlock', 'NOUN'), ('Kill', 'PROPN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Kill', 'ROOT'), ('process', 'dobj'), ('involved', 'acl'), ('deadlock', 'compound'), ('Kill', 'compound'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Kill, process], [process, involved], [involved, deadlock], [deadlock, Kill], [Kill, process], [process, .]]

>> Trigrams: 
[[Kill, process, involved], [process, involved, deadlock], [involved, deadlock, Kill], [deadlock, Kill, process], [Kill, process, .]]

>> Noun Phrases are: 
[all the process, deadlock Kill process]

>> Named Entities are: 
[('one', 'CARDINAL')]


============================ Sentence 115 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 116 =============================

After killing each process check for deadlock If deadlock recovered then stop killing more process Otherwise kill another process  P1 P2 R1 


>> Tokens are: 
[killing, process, check, deadlock, deadlock, recovered, stop, killing, process, kill, process,  , P1, P2, R1] 

>> PoS Tags are: 
[('killing', 'VERB'), ('process', 'NOUN'), ('check', 'VERB'), ('deadlock', 'NOUN'), ('deadlock', 'NOUN'), ('recovered', 'VERB'), ('stop', 'VERB'), ('killing', 'VERB'), ('process', 'NOUN'), ('kill', 'VERB'), ('process', 'NOUN'), (' ', 'SPACE'), ('P1', 'PROPN'), ('P2', 'PROPN'), ('R1', 'PROPN')] 

>> Dependency Tags are: 
[('killing', 'pcomp'), ('process', 'dobj'), ('check', 'ROOT'), ('deadlock', 'pobj'), ('deadlock', 'nsubj'), ('recovered', 'advcl'), ('stop', 'conj'), ('killing', 'xcomp'), ('process', 'dobj'), ('kill', 'conj'), ('process', 'dobj'), (' ', 'dobj'), ('P1', 'compound'), ('P2', 'compound'), ('R1', 'appos')]

>> Bigrams: 
[[killing, process], [process, check], [check, deadlock], [deadlock, deadlock], [deadlock, recovered], [recovered, stop], [stop, killing], [killing, process], [process, kill], [kill, process], [process,  ], [ , P1], [P1, P2], [P2, R1]]

>> Trigrams: 
[[killing, process, check], [process, check, deadlock], [check, deadlock, deadlock], [deadlock, deadlock, recovered], [deadlock, recovered, stop], [recovered, stop, killing], [stop, killing, process], [killing, process, kill], [process, kill, process], [kill, process,  ], [process,  , P1], [ , P1, P2], [P1, P2, R1]]

>> Noun Phrases are: 
[each process, deadlock, deadlock, more process, another process, P1 P2 R1]

>> Named Entities are: 
[]


============================ Sentence 117 =============================

R2 Hold 


>> Tokens are: 
[R2, Hold] 

>> PoS Tags are: 
[('R2', 'PROPN'), ('Hold', 'PROPN')] 

>> Dependency Tags are: 
[('R2', 'nmod'), ('Hold', 'ROOT')]

>> Bigrams: 
[[R2, Hold]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[R2 Hold]

>> Named Entities are: 
[('R2 Hold', 'PERSON')]


============================ Sentence 118 =============================

Hold Request P3 R3 Hold Request Request Hold Hold 


>> Tokens are: 
[Hold, Request, P3, R3, Hold, Request, Request, Hold, Hold] 

>> PoS Tags are: 
[('Hold', 'VERB'), ('Request', 'PROPN'), ('P3', 'VERB'), ('R3', 'NOUN'), ('Hold', 'VERB'), ('Request', 'NOUN'), ('Request', 'NOUN'), ('Hold', 'VERB'), ('Hold', 'VERB')] 

>> Dependency Tags are: 
[('Hold', 'dep'), ('Request', 'nsubj'), ('P3', 'compound'), ('R3', 'nsubj'), ('Hold', 'ROOT'), ('Request', 'compound'), ('Request', 'nsubj'), ('Hold', 'ccomp'), ('Hold', 'dep')]

>> Bigrams: 
[[Hold, Request], [Request, P3], [P3, R3], [R3, Hold], [Hold, Request], [Request, Request], [Request, Hold], [Hold, Hold]]

>> Trigrams: 
[[Hold, Request, P3], [Request, P3, R3], [P3, R3, Hold], [R3, Hold, Request], [Hold, Request, Request], [Request, Request, Hold], [Request, Hold, Hold]]

>> Noun Phrases are: 
[Request, Request Request]

>> Named Entities are: 
[]


============================ Sentence 119 =============================

   Prof. Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[   , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[   Prof. Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 120 =============================

 Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'npadvmod'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[Deadlock]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

Deadlock avoidance  (Banker’s algorithm) Section - 5      Safe and unsafe states A state is said to be safe if it is not deadlocked and there is some scheduling order in which every process can run to completion even if all of them suddenly request their maximum number of resources immediately. 


>> Tokens are: 
[Deadlock, avoidance,  , (, Banker, algorithm, ), Section, -, 5,      , Safe, unsafe, states, state, said, safe, deadlocked, scheduling, order, process, run, completion, suddenly, request, maximum, number, resources, immediately, .] 

>> PoS Tags are: 
[('Deadlock', 'PROPN'), ('avoidance', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), (')', 'PUNCT'), ('Section', 'NOUN'), ('-', 'PUNCT'), ('5', 'NUM'), ('     ', 'SPACE'), ('Safe', 'PROPN'), ('unsafe', 'ADJ'), ('states', 'NOUN'), ('state', 'NOUN'), ('said', 'VERB'), ('safe', 'ADJ'), ('deadlocked', 'VERB'), ('scheduling', 'NOUN'), ('order', 'NOUN'), ('process', 'NOUN'), ('run', 'VERB'), ('completion', 'NOUN'), ('suddenly', 'ADV'), ('request', 'VERB'), ('maximum', 'ADJ'), ('number', 'NOUN'), ('resources', 'NOUN'), ('immediately', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Deadlock', 'compound'), ('avoidance', 'nsubjpass'), (' ', 'appos'), ('(', 'punct'), ('Banker', 'appos'), ('algorithm', 'advmod'), (')', 'punct'), ('Section', 'appos'), ('-', 'punct'), ('5', 'nummod'), ('     ', 'appos'), ('Safe', 'appos'), ('unsafe', 'conj'), ('states', 'appos'), ('state', 'nsubjpass'), ('said', 'ROOT'), ('safe', 'acomp'), ('deadlocked', 'acomp'), ('scheduling', 'compound'), ('order', 'attr'), ('process', 'nsubj'), ('run', 'relcl'), ('completion', 'pobj'), ('suddenly', 'advmod'), ('request', 'advcl'), ('maximum', 'amod'), ('number', 'dobj'), ('resources', 'pobj'), ('immediately', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Deadlock, avoidance], [avoidance,  ], [ , (], [(, Banker], [Banker, algorithm], [algorithm, )], [), Section], [Section, -], [-, 5], [5,      ], [     , Safe], [Safe, unsafe], [unsafe, states], [states, state], [state, said], [said, safe], [safe, deadlocked], [deadlocked, scheduling], [scheduling, order], [order, process], [process, run], [run, completion], [completion, suddenly], [suddenly, request], [request, maximum], [maximum, number], [number, resources], [resources, immediately], [immediately, .]]

>> Trigrams: 
[[Deadlock, avoidance,  ], [avoidance,  , (], [ , (, Banker], [(, Banker, algorithm], [Banker, algorithm, )], [algorithm, ), Section], [), Section, -], [Section, -, 5], [-, 5,      ], [5,      , Safe], [     , Safe, unsafe], [Safe, unsafe, states], [unsafe, states, state], [states, state, said], [state, said, safe], [said, safe, deadlocked], [safe, deadlocked, scheduling], [deadlocked, scheduling, order], [scheduling, order, process], [order, process, run], [process, run, completion], [run, completion, suddenly], [completion, suddenly, request], [suddenly, request, maximum], [request, maximum, number], [maximum, number, resources], [number, resources, immediately], [resources, immediately, .]]

>> Noun Phrases are: 
[Deadlock avoidance, Banker, Section, Safe, states, A state, it, some scheduling order, every process, completion, them, their maximum number, resources]

>> Named Entities are: 
[('Deadlock', 'PERSON'), ('Banker’s', 'ORG')]


============================ Sentence 122 =============================

Total resources are 10  7 resources already allocated So there are 3 still free A need 6 resources more to complete it. 


>> Tokens are: 
[Total, resources, 10,  , 7, resources, allocated, 3, free, need, 6, resources, complete, .] 

>> PoS Tags are: 
[('Total', 'ADJ'), ('resources', 'NOUN'), ('10', 'NUM'), (' ', 'SPACE'), ('7', 'NUM'), ('resources', 'NOUN'), ('allocated', 'VERB'), ('3', 'NUM'), ('free', 'ADJ'), ('need', 'NOUN'), ('6', 'NUM'), ('resources', 'NOUN'), ('complete', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Total', 'amod'), ('resources', 'nsubj'), ('10', 'quantmod'), (' ', 'quantmod'), ('7', 'nummod'), ('resources', 'attr'), ('allocated', 'acl'), ('3', 'attr'), ('free', 'amod'), ('need', 'attr'), ('6', 'nummod'), ('resources', 'npadvmod'), ('complete', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[Total, resources], [resources, 10], [10,  ], [ , 7], [7, resources], [resources, allocated], [allocated, 3], [3, free], [free, need], [need, 6], [6, resources], [resources, complete], [complete, .]]

>> Trigrams: 
[[Total, resources, 10], [resources, 10,  ], [10,  , 7], [ , 7, resources], [7, resources, allocated], [resources, allocated, 3], [allocated, 3, free], [3, free, need], [free, need, 6], [need, 6, resources], [6, resources, complete], [resources, complete, .]]

>> Noun Phrases are: 
[Total resources, 10  7 resources, free A need, it]

>> Named Entities are: 
[('10', 'CARDINAL'), ('7', 'CARDINAL'), ('3', 'CARDINAL'), ('6', 'CARDINAL')]


============================ Sentence 123 =============================

 B need 2 resources more to complete it. 


>> Tokens are: 
[ , B, need, 2, resources, complete, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('B', 'NOUN'), ('need', 'VERB'), ('2', 'NUM'), ('resources', 'NOUN'), ('complete', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('B', 'nsubj'), ('need', 'ROOT'), ('2', 'nummod'), ('resources', 'dobj'), ('complete', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[ , B], [B, need], [need, 2], [2, resources], [resources, complete], [complete, .]]

>> Trigrams: 
[[ , B, need], [B, need, 2], [need, 2, resources], [2, resources, complete], [resources, complete, .]]

>> Noun Phrases are: 
[ B, 2 resources, it]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 124 =============================

C need 5 resources more to complete it. 


>> Tokens are: 
[C, need, 5, resources, complete, .] 

>> PoS Tags are: 
[('C', 'NOUN'), ('need', 'VERB'), ('5', 'NUM'), ('resources', 'NOUN'), ('complete', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('C', 'nsubj'), ('need', 'ROOT'), ('5', 'nummod'), ('resources', 'npadvmod'), ('complete', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[C, need], [need, 5], [5, resources], [resources, complete], [complete, .]]

>> Trigrams: 
[[C, need, 5], [need, 5, resources], [5, resources, complete], [resources, complete, .]]

>> Noun Phrases are: 
[C, it]

>> Named Entities are: 
[('5', 'CARDINAL')]


============================ Sentence 125 =============================

	Process	Has / Hold	Max required 	A	3	9 	B	2	4 	C	2	7 	Free : 


>> Tokens are: 
[	, Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 2, 	, 4, 	, C, 	, 2, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 2], [2, 	], [	, 4], [4, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 2], [	, 2, 	], [2, 	, 4], [	, 4, 	], [4, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[	Max, 	A	3	9 	B	2	4 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 126 =============================

3		      


>> Tokens are: 
[3, 		     ] 

>> PoS Tags are: 
[('3', 'NUM'), ('\t\t     ', 'SPACE')] 

>> Dependency Tags are: 
[('3', 'quantmod'), ('\t\t     ', 'ROOT')]

>> Bigrams: 
[[3, 		     ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 127 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 128 =============================

Safe state  	Process	Has / Hold	Max required 	A	3	9 	B	0	- 	C	2	7 	Free : 5		  	 


>> Tokens are: 
[Safe, state,  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 0, 	, -, 	, C, 	, 2, 	, 7, 	, Free, :, 5, 		  	] 

>> PoS Tags are: 
[('Safe', 'ADJ'), ('state', 'NOUN'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('5', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('Safe', 'amod'), ('state', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'appos'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct'), ('5', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[Safe, state], [state,  	], [ 	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 5], [5, 		  	]]

>> Trigrams: 
[[Safe, state,  	], [state,  	, Process], [ 	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 5], [:, 5, 		  	]]

>> Noun Phrases are: 
[	Max, 	- 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON'), ('5', 'CARDINAL')]


============================ Sentence 129 =============================

Process	Has / Hold	Max required 	A	3	9 	B	2	4 	C	2	7 	Free : 3		  	 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 2, 	, 4, 	, C, 	, 2, 	, 7, 	, Free, :, 3, 		  	] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('3', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct'), ('3', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 2], [2, 	], [	, 4], [4, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 3], [3, 		  	]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 2], [	, 2, 	], [2, 	, 4], [	, 4, 	], [4, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 3], [:, 3, 		  	]]

>> Noun Phrases are: 
[Process, 	Max, 	A	3	9 	B	2	4 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON'), ('3', 'CARDINAL')]


============================ Sentence 130 =============================

Process	Has / Hold	Max required 	A	3	9 	B	4	4 	C	2	7 	Free : 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 4, 	, 4, 	, C, 	, 2, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('4', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 4], [4, 	], [	, 4], [4, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 4], [	, 4, 	], [4, 	, 4], [	, 4, 	], [4, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[Process, 	Max, 	A	3	9 	B	4	4 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 131 =============================

1		  	Process	Has / Hold	Max required 	A	9	9 	B	0	- 	C	0 


>> Tokens are: 
[1, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 9, 	, 9, 	, B, 	, 0, 	, -, 	, C, 	, 0] 

>> PoS Tags are: 
[('1', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[1, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 9], [9, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 0]]

>> Trigrams: 
[[1, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 9], [	, 9, 	], [9, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 0]]

>> Noun Phrases are: 
[1		  	Process, 	Max]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Max', 'PERSON')]


============================ Sentence 132 =============================

	- 	Free : 1		  	Process	Has / Hold	Max required 	A	3	9 	B	0	- 	C	7	7 	Free : 0		  	 


>> Tokens are: 
[	, -, 	, Free, :, 1, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 0, 	, -, 	, C, 	, 7, 	, 7, 	, Free, :, 0, 		  	] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('1', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('7', 'PROPN'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('0', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('\t', 'nsubj'), ('Free', 'ROOT'), (':', 'punct'), ('1', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'appos'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'xcomp'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dep'), ('7', 'nummod'), ('\t', 'compound'), ('7', 'compound'), ('\t', 'compound'), ('Free', 'ccomp'), (':', 'punct'), ('0', 'punct'), ('\t\t  \t', 'punct')]

>> Bigrams: 
[[	, -], [-, 	], [	, Free], [Free, :], [:, 1], [1, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 7], [7, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 0], [0, 		  	]]

>> Trigrams: 
[[	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 1], [:, 1, 		  	], [1, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 7], [	, 7, 	], [7, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 0], [:, 0, 		  	]]

>> Noun Phrases are: 
[	- 	Free, 1		  	Process, 	Max]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Max', 'PERSON')]


============================ Sentence 133 =============================

Process	Has / Hold	Max required 	A	3	9 	B	0	- 	C	0 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 0, 	, -, 	, C, 	, 0] 

>> PoS Tags are: 
[('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 0]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 0]]

>> Noun Phrases are: 
[Process, 	Max]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 134 =============================

	- 	Free : 7		  2 4 5 7 6    Prof. 


>> Tokens are: 
[	, -, 	, Free, :, 7, 		  , 2, 4, 5, 7, 6,    , Prof.] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('7', 'NUM'), ('\t\t  ', 'SPACE'), ('2', 'NUM'), ('4', 'NUM'), ('5', 'NUM'), ('7', 'NUM'), ('6', 'NUM'), ('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('Free', 'ROOT'), (':', 'punct'), ('7', 'nummod'), ('\t\t  ', 'appos'), ('2', 'quantmod'), ('4', 'quantmod'), ('5', 'quantmod'), ('7', 'quantmod'), ('6', 'nummod'), ('   ', 'nummod'), ('Prof.', 'punct')]

>> Bigrams: 
[[	, -], [-, 	], [	, Free], [Free, :], [:, 7], [7, 		  ], [		  , 2], [2, 4], [4, 5], [5, 7], [7, 6], [6,    ], [   , Prof.]]

>> Trigrams: 
[[	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 7], [:, 7, 		  ], [7, 		  , 2], [		  , 2, 4], [2, 4, 5], [4, 5, 7], [5, 7, 6], [7, 6,    ], [6,    , Prof.]]

>> Noun Phrases are: 
[	- 	Free]

>> Named Entities are: 
[('7', 'CARDINAL'), ('6', 'CARDINAL')]


============================ Sentence 135 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 136 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'npadvmod'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Deadlock]

>> Named Entities are: 
[]


============================ Sentence 137 =============================

  Unsafe state 	Process	Has / Hold	Max required 	A	4	9 	B	4	4 	C	2	7 	Free : 0 


>> Tokens are: 
[  , Unsafe, state, 	, Process, 	, /, Hold, 	, Max, required, 	, 	, 4, 	, 9, 	, B, 	, 4, 	, 4, 	, C, 	, 2, 	, 7, 	, Free, :, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Unsafe', 'PROPN'), ('state', 'NOUN'), ('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('  ', 'nsubj'), ('Unsafe', 'compound'), ('state', 'compound'), ('\t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('4', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct'), ('0', 'punct')]

>> Bigrams: 
[[  , Unsafe], [Unsafe, state], [state, 	], [	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 4], [4, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 4], [4, 	], [	, 4], [4, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 0]]

>> Trigrams: 
[[  , Unsafe, state], [Unsafe, state, 	], [state, 	, Process], [	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 4], [	, 4, 	], [4, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 4], [	, 4, 	], [4, 	, 4], [	, 4, 	], [4, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 0]]

>> Noun Phrases are: 
[	Max, 	A	4	9 	B	4	4 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 138 =============================

		  	 


>> Tokens are: 
[		  	] 

>> PoS Tags are: 
[('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('\t\t  \t', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 139 =============================

Process	Has / Hold	Max required 	A	3	9 	B	2	4 	C	2	7 	Free : 3		  	 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 3, 	, 9, 	, B, 	, 2, 	, 4, 	, C, 	, 2, 	, 7, 	, Free, :, 3, 		  	] 

>> PoS Tags are: 
[('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('3', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct'), ('3', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 3], [3, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 2], [2, 	], [	, 4], [4, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 3], [3, 		  	]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 3], [	, 3, 	], [3, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 2], [	, 2, 	], [2, 	, 4], [	, 4, 	], [4, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 3], [:, 3, 		  	]]

>> Noun Phrases are: 
[Process, 	Max, 	A	3	9 	B	2	4 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON'), ('3', 'CARDINAL')]


============================ Sentence 140 =============================

Process	Has / Hold	Max required 	A	4	9 	B	2	4 	C	2	7 	Free : 2		  	 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 4, 	, 9, 	, B, 	, 2, 	, 4, 	, C, 	, 2, 	, 7, 	, Free, :, 2, 		  	] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('2', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct'), ('2', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 4], [4, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 2], [2, 	], [	, 4], [4, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 2], [2, 		  	]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 4], [	, 4, 	], [4, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 2], [	, 2, 	], [2, 	, 4], [	, 4, 	], [4, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 2], [:, 2, 		  	]]

>> Noun Phrases are: 
[Process, 	Max, 	A	4	9 	B	2	4 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON'), ('2', 'CARDINAL')]


============================ Sentence 141 =============================

Process	Has / Hold	Max required 	A	4	9 	B	0	- 	C	2	7 	Free : 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 4, 	, 9, 	, B, 	, 0, 	, -, 	, C, 	, 2, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('9', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'nmod'), ('9', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'appos'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 4], [4, 	], [	, 9], [9, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 4], [	, 4, 	], [4, 	, 9], [	, 9, 	], [9, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[Process, 	Max, 	- 	C	2	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 142 =============================

4		  1 2 4    Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock avoidance Deadlock can be avoided by allocating resources carefully. 


>> Tokens are: 
[4, 		  , 1, 2, 4,    , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, avoidance, Deadlock, avoided, allocating, resources, carefully, .] 

>> PoS Tags are: 
[('4', 'NUM'), ('\t\t  ', 'SPACE'), ('1', 'NUM'), ('2', 'NUM'), ('4', 'NUM'), ('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('avoidance', 'NOUN'), ('Deadlock', 'PROPN'), ('avoided', 'VERB'), ('allocating', 'VERB'), ('resources', 'NOUN'), ('carefully', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('4', 'nummod'), ('\t\t  ', 'quantmod'), ('1', 'quantmod'), ('2', 'quantmod'), ('4', 'compound'), ('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'dep'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'npadvmod'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('avoidance', 'compound'), ('Deadlock', 'nsubjpass'), ('avoided', 'ROOT'), ('allocating', 'pcomp'), ('resources', 'dobj'), ('carefully', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[4, 		  ], [		  , 1], [1, 2], [2, 4], [4,    ], [   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, avoidance], [avoidance, Deadlock], [Deadlock, avoided], [avoided, allocating], [allocating, resources], [resources, carefully], [carefully, .]]

>> Trigrams: 
[[4, 		  , 1], [		  , 1, 2], [1, 2, 4], [2, 4,    ], [4,    , Prof.], [   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, avoidance], [Deadlock, avoidance, Deadlock], [avoidance, Deadlock, avoided], [Deadlock, avoided, allocating], [avoided, allocating, resources], [allocating, resources, carefully], [resources, carefully, .]]

>> Noun Phrases are: 
[A Sherasiya, (OS, Unit,  Deadlock avoidance Deadlock, resources]

>> Named Entities are: 
[('4', 'CARDINAL'), ('Firoz', 'PERSON'), ('Deadlock', 'PERSON'), ('Deadlock', 'PERSON')]


============================ Sentence 143 =============================

Carefully analyze each resource request to see if it can be safely granted. 


>> Tokens are: 
[Carefully, analyze, resource, request, safely, granted, .] 

>> PoS Tags are: 
[('Carefully', 'ADV'), ('analyze', 'VERB'), ('resource', 'NOUN'), ('request', 'NOUN'), ('safely', 'ADV'), ('granted', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Carefully', 'advmod'), ('analyze', 'ROOT'), ('resource', 'compound'), ('request', 'dobj'), ('safely', 'advmod'), ('granted', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[Carefully, analyze], [analyze, resource], [resource, request], [request, safely], [safely, granted], [granted, .]]

>> Trigrams: 
[[Carefully, analyze, resource], [analyze, resource, request], [resource, request, safely], [request, safely, granted], [safely, granted, .]]

>> Noun Phrases are: 
[each resource request, it]

>> Named Entities are: 
[]


============================ Sentence 144 =============================

Need an algorithm that can always avoid deadlock by making right choice all the time (Banker’s algorithm). 


>> Tokens are: 
[Need, algorithm, avoid, deadlock, making, right, choice, time, (, Banker, algorithm, ), .] 

>> PoS Tags are: 
[('Need', 'VERB'), ('algorithm', 'NOUN'), ('avoid', 'VERB'), ('deadlock', 'NOUN'), ('making', 'VERB'), ('right', 'ADJ'), ('choice', 'NOUN'), ('time', 'NOUN'), ('(', 'PUNCT'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Need', 'ROOT'), ('algorithm', 'dobj'), ('avoid', 'relcl'), ('deadlock', 'dobj'), ('making', 'pcomp'), ('right', 'amod'), ('choice', 'dobj'), ('time', 'npadvmod'), ('(', 'punct'), ('Banker', 'appos'), ('algorithm', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Need, algorithm], [algorithm, avoid], [avoid, deadlock], [deadlock, making], [making, right], [right, choice], [choice, time], [time, (], [(, Banker], [Banker, algorithm], [algorithm, )], [), .]]

>> Trigrams: 
[[Need, algorithm, avoid], [algorithm, avoid, deadlock], [avoid, deadlock, making], [deadlock, making, right], [making, right, choice], [right, choice, time], [choice, time, (], [time, (, Banker], [(, Banker, algorithm], [Banker, algorithm, )], [algorithm, ), .]]

>> Noun Phrases are: 
[an algorithm, deadlock, right choice, (Banker, algorithm]

>> Named Entities are: 
[('Banker’s', 'ORG')]


============================ Sentence 145 =============================

Banker’s algorithm for single resource Banker’s algorithm for multiple resource 


>> Tokens are: 
[Banker, algorithm, single, resource, Banker, algorithm, multiple, resource] 

>> PoS Tags are: 
[('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN')] 

>> Dependency Tags are: 
[('Banker', 'nmod'), ('algorithm', 'amod'), ('single', 'amod'), ('resource', 'compound'), ('Banker', 'pobj'), ('algorithm', 'ROOT'), ('multiple', 'amod'), ('resource', 'pobj')]

>> Bigrams: 
[[Banker, algorithm], [algorithm, single], [single, resource], [resource, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource]]

>> Trigrams: 
[[Banker, algorithm, single], [algorithm, single, resource], [single, resource, Banker], [resource, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource]]

>> Noun Phrases are: 
[single resource Banker, multiple resource]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Banker’s', 'ORG')]


============================ Sentence 146 =============================

   Prof. Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[   , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[   Prof. Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 147 =============================

 Unit 5 – Deadlock ‹#›  Banker’s 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›,  , Banker] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Banker', 'PROPN')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'dobj'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Banker', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Banker]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Banker]]

>> Noun Phrases are: 
[Unit, Deadlock,  Banker]

>> Named Entities are: 
[('Banker’s', 'ORG')]


============================ Sentence 148 =============================

algorithm for single resource What the algorithm does is check to see if granting the request leads to an unsafe state. 


>> Tokens are: 
[algorithm, single, resource, algorithm, check, granting, request, leads, unsafe, state, .] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('algorithm', 'NOUN'), ('check', 'VERB'), ('granting', 'VERB'), ('request', 'NOUN'), ('leads', 'VERB'), ('unsafe', 'ADJ'), ('state', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'nsubj'), ('single', 'amod'), ('resource', 'pobj'), ('algorithm', 'nsubj'), ('check', 'ROOT'), ('granting', 'ccomp'), ('request', 'dobj'), ('leads', 'ccomp'), ('unsafe', 'amod'), ('state', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[algorithm, single], [single, resource], [resource, algorithm], [algorithm, check], [check, granting], [granting, request], [request, leads], [leads, unsafe], [unsafe, state], [state, .]]

>> Trigrams: 
[[algorithm, single, resource], [single, resource, algorithm], [resource, algorithm, check], [algorithm, check, granting], [check, granting, request], [granting, request, leads], [request, leads, unsafe], [leads, unsafe, state], [unsafe, state, .]]

>> Noun Phrases are: 
[algorithm, single resource, What, the algorithm, the request, an unsafe state]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

If it does, the request is denied. 


>> Tokens are: 
[,, request, denied, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('request', 'NOUN'), ('denied', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('request', 'nsubjpass'), ('denied', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[,, request], [request, denied], [denied, .]]

>> Trigrams: 
[[,, request, denied], [request, denied, .]]

>> Noun Phrases are: 
[it, the request]

>> Named Entities are: 
[]


============================ Sentence 150 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 151 =============================

If granting the request leads to a safe state, it is carried out. 


>> Tokens are: 
[granting, request, leads, safe, state, ,, carried, .] 

>> PoS Tags are: 
[('granting', 'VERB'), ('request', 'NOUN'), ('leads', 'VERB'), ('safe', 'ADJ'), ('state', 'NOUN'), (',', 'PUNCT'), ('carried', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('granting', 'csubj'), ('request', 'dobj'), ('leads', 'ccomp'), ('safe', 'amod'), ('state', 'pobj'), (',', 'punct'), ('carried', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[granting, request], [request, leads], [leads, safe], [safe, state], [state, ,], [,, carried], [carried, .]]

>> Trigrams: 
[[granting, request, leads], [request, leads, safe], [leads, safe, state], [safe, state, ,], [state, ,, carried], [,, carried, .]]

>> Noun Phrases are: 
[the request, a safe state, it]

>> Named Entities are: 
[]


============================ Sentence 152 =============================

If we have situation as per figure  then it is safe state  because with 10 free units  one by one all customers can be served. 


>> Tokens are: 
[situation, figure,  , safe, state,  , 10, free, units,  , customers, served, .] 

>> PoS Tags are: 
[('situation', 'NOUN'), ('figure', 'NOUN'), (' ', 'SPACE'), ('safe', 'ADJ'), ('state', 'NOUN'), (' ', 'SPACE'), ('10', 'NUM'), ('free', 'ADJ'), ('units', 'NOUN'), (' ', 'SPACE'), ('customers', 'NOUN'), ('served', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('situation', 'dobj'), ('figure', 'pobj'), (' ', 'pobj'), ('safe', 'amod'), ('state', 'compound'), (' ', 'attr'), ('10', 'nummod'), ('free', 'amod'), ('units', 'nsubj'), (' ', 'pcomp'), ('customers', 'nsubjpass'), ('served', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[situation, figure], [figure,  ], [ , safe], [safe, state], [state,  ], [ , 10], [10, free], [free, units], [units,  ], [ , customers], [customers, served], [served, .]]

>> Trigrams: 
[[situation, figure,  ], [figure,  , safe], [ , safe, state], [safe, state,  ], [state,  , 10], [ , 10, free], [10, free, units], [free, units,  ], [units,  , customers], [ , customers, served], [customers, served, .]]

>> Noun Phrases are: 
[we, situation, figure, it, 10 free units, all customers]

>> Named Entities are: 
[('10', 'CARDINAL'), ('one', 'CARDINAL'), ('one', 'CARDINAL')]


============================ Sentence 153 =============================

	Process	Has / Hold	Max required 	A	0 


>> Tokens are: 
[	, Process, 	, /, Hold, 	, Max, required, 	, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'compound'), ('\t', 'dobj'), ('0', 'nummod')]

>> Bigrams: 
[[	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 0]]

>> Trigrams: 
[[	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 0]]

>> Noun Phrases are: 
[	Max]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 154 =============================

	6 	B	0	5 	C	0 


>> Tokens are: 
[	, 6, 	, B, 	, 0, 	, 5, 	, C, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'compound'), ('5', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 6], [6, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 0]]

>> Trigrams: 
[[	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

	4 	D	0	7 	Free : 10		      


>> Tokens are: 
[	, 4, 	, D, 	, 0, 	, 7, 	, Free, :, 10, 		     ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('D', 'NOUN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('10', 'NUM'), ('\t\t     ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'compound'), ('7', 'compound'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct'), ('10', 'punct'), ('\t\t     ', 'punct')]

>> Bigrams: 
[[	, 4], [4, 	], [	, D], [D, 	], [	, 0], [0, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 10], [10, 		     ]]

>> Trigrams: 
[[	, 4, 	], [4, 	, D], [	, D, 	], [D, 	, 0], [	, 0, 	], [0, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 10], [:, 10, 		     ]]

>> Noun Phrases are: 
[	7 	Free]

>> Named Entities are: 
[('10', 'CARDINAL')]


============================ Sentence 156 =============================

Prof. 


>> Tokens are: 
[Prof.] 

>> PoS Tags are: 
[('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('Prof.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Prof.]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 158 =============================

 


>> Tokens are: 
[] 

>> PoS Tags are: 
[('\uf077', 'NUM')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

Unit 5 – Deadlock ‹#›  Banker’s algorithm for single resource (safe state)  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	0	- 	D	4	7 	Free : 


>> Tokens are: 
[Unit, 5, –, Deadlock, ‹#›,  , Banker, algorithm, single, resource, (, safe, state, ),  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 1, 	, 5, 	, C, 	, 0, 	, -, 	, D, 	, 4, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('safe', 'ADJ'), ('state', 'NOUN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Unit', 'nsubj'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Banker', 'appos'), ('algorithm', 'appos'), ('single', 'amod'), ('resource', 'pobj'), ('(', 'punct'), ('safe', 'amod'), ('state', 'appos'), (')', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'compound'), ('5', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('7', 'compound'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Banker], [Banker, algorithm], [algorithm, single], [single, resource], [resource, (], [(, safe], [safe, state], [state, )], [),  	], [ 	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, D], [D, 	], [	, 4], [4, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Banker], [ , Banker, algorithm], [Banker, algorithm, single], [algorithm, single, resource], [single, resource, (], [resource, (, safe], [(, safe, state], [safe, state, )], [state, ),  	], [),  	, Process], [ 	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 4], [	, 4, 	], [4, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[Unit, Deadlock,  Banker, algorithm, single resource, (safe state, 	Max, 	7 	Free]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Max', 'PERSON')]


============================ Sentence 160 =============================

4		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	2	4 	D	4	7 	Free : 2		  	 


>> Tokens are: 
[4, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 1, 	, 5, 	, C, 	, 2, 	, 4, 	, D, 	, 4, 	, 7, 	, Free, :, 2, 		  	] 

>> PoS Tags are: 
[('4', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('D', 'NOUN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('2', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('4', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'compound'), ('5', 'appos'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('7', 'appos'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct'), ('2', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[4, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 4], [4, 	], [	, D], [D, 	], [	, 4], [4, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 2], [2, 		  	]]

>> Trigrams: 
[[4, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 4], [	, 4, 	], [4, 	, D], [	, D, 	], [D, 	, 4], [	, 4, 	], [4, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 2], [:, 2, 		  	]]

>> Noun Phrases are: 
[4		  	Process, 	Max, 	A	1	6 	B	1	5 	C	2	4 	D	4	7 	Free]

>> Named Entities are: 
[('4', 'CARDINAL'), ('Max', 'PERSON'), ('2', 'CARDINAL')]


============================ Sentence 161 =============================

Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	4	4 	D	4	7 	Free : 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 1, 	, 5, 	, C, 	, 4, 	, 4, 	, D, 	, 4, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('D', 'NOUN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'compound'), ('5', 'appos'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('7', 'appos'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 4], [4, 	], [	, 4], [4, 	], [	, D], [D, 	], [	, 4], [4, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 4], [	, 4, 	], [4, 	, 4], [	, 4, 	], [4, 	, D], [	, D, 	], [D, 	, 4], [	, 4, 	], [4, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[Process, 	Max, 	A	1	6 	B	1	5 	C	4	4 	D	4	7 	Free]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 162 =============================

0 


>> Tokens are: 
[0] 

>> PoS Tags are: 
[('0', 'NUM')] 

>> Dependency Tags are: 
[('0', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 163 =============================

		  	 


>> Tokens are: 
[		  	] 

>> PoS Tags are: 
[('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('\t\t  \t', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 164 =============================

Process	Has / Hold	Max required 	A	1	6 	B	5	5 	C	0	- 	D	0 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 5, 	, 5, 	, C, 	, 0, 	, -, 	, D, 	, 0] 

>> PoS Tags are: 
[('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'conj'), ('5', 'nummod'), ('\t', 'compound'), ('5', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 5], [5, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, D], [D, 	], [	, 0]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 5], [	, 5, 	], [5, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 0]]

>> Noun Phrases are: 
[Process, 	Max]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 165 =============================

	- 	Free : 4		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	0	- 	D	7	7 	Free : 


>> Tokens are: 
[	, -, 	, Free, :, 4, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 1, 	, 5, 	, C, 	, 0, 	, -, 	, D, 	, 7, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('4', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('7', 'PROPN'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('\t', 'nsubj'), ('Free', 'ROOT'), (':', 'punct'), ('4', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'appos'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'xcomp'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'compound'), ('5', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'appos'), ('7', 'nummod'), ('\t', 'compound'), ('7', 'compound'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct')]

>> Bigrams: 
[[	, -], [-, 	], [	, Free], [Free, :], [:, 4], [4, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, D], [D, 	], [	, 7], [7, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 4], [:, 4, 		  	], [4, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 7], [	, 7, 	], [7, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[	- 	Free, 4		  	Process, 	Max, 	7 	Free]

>> Named Entities are: 
[('4', 'CARDINAL'), ('Max', 'PERSON')]


============================ Sentence 166 =============================

1		  	Process	Has / Hold	Max required 	A	1	6 	B	1	5 	C	0	- 	D	0 


>> Tokens are: 
[1, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 1, 	, 5, 	, C, 	, 0, 	, -, 	, D, 	, 0] 

>> PoS Tags are: 
[('1', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'compound'), ('5', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[1, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, D], [D, 	], [	, 0]]

>> Trigrams: 
[[1, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 0]]

>> Noun Phrases are: 
[1		  	Process, 	Max]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Max', 'PERSON')]


============================ Sentence 167 =============================

	- 	Free : 8		   2  3  4    Prof. 


>> Tokens are: 
[	, -, 	, Free, :, 8, 		   , 2,  , 3,  , 4,    , Prof.] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('8', 'NUM'), ('\t\t   ', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('3', 'NUM'), (' ', 'SPACE'), ('4', 'NUM'), ('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('Free', 'ROOT'), (':', 'punct'), ('8', 'nummod'), ('\t\t   ', 'appos'), ('2', 'nummod'), (' ', 'appos'), ('3', 'nummod'), (' ', 'quantmod'), ('4', 'compound'), ('   ', 'nummod'), ('Prof.', 'punct')]

>> Bigrams: 
[[	, -], [-, 	], [	, Free], [Free, :], [:, 8], [8, 		   ], [		   , 2], [2,  ], [ , 3], [3,  ], [ , 4], [4,    ], [   , Prof.]]

>> Trigrams: 
[[	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 8], [:, 8, 		   ], [8, 		   , 2], [		   , 2,  ], [2,  , 3], [ , 3,  ], [3,  , 4], [ , 4,    ], [4,    , Prof.]]

>> Noun Phrases are: 
[	- 	Free]

>> Named Entities are: 
[('3', 'CARDINAL'), ('4', 'CARDINAL')]


============================ Sentence 168 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 169 =============================

 Unit 5 – Deadlock ‹#›  Banker’s 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›,  , Banker] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Banker', 'PROPN')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'dobj'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Banker', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Banker]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Banker]]

>> Noun Phrases are: 
[Unit, Deadlock,  Banker]

>> Named Entities are: 
[('Banker’s', 'ORG')]


============================ Sentence 170 =============================

algorithm for single resource (safe state)  	Process	Has / Hold	Max required 	A	0	- 	B	0	- 	C	0	- 	D	0 


>> Tokens are: 
[algorithm, single, resource, (, safe, state, ),  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 0, 	, -, 	, B, 	, 0, 	, -, 	, C, 	, 0, 	, -, 	, D, 	, 0] 

>> PoS Tags are: 
[('algorithm', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('safe', 'ADJ'), ('state', 'NOUN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('algorithm', 'nsubj'), ('single', 'amod'), ('resource', 'pobj'), ('(', 'punct'), ('safe', 'amod'), ('state', 'appos'), (')', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'dobj'), ('0', 'nummod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[algorithm, single], [single, resource], [resource, (], [(, safe], [safe, state], [state, )], [),  	], [ 	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, D], [D, 	], [	, 0]]

>> Trigrams: 
[[algorithm, single, resource], [single, resource, (], [resource, (, safe], [(, safe, state], [safe, state, )], [state, ),  	], [),  	, Process], [ 	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 0]]

>> Noun Phrases are: 
[algorithm, single resource, (safe state, 	Max]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 171 =============================

	- 	Free : 10		  	Process	Has / Hold	Max required 	A	1	6 	B	0	- 	C	0	- 	D	0	- 	Free : 9		  	Process	Has / Hold	Max required 	A	6	6 	B	0	- 	C	0 


>> Tokens are: 
[	, -, 	, Free, :, 10, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 0, 	, -, 	, C, 	, 0, 	, -, 	, D, 	, 0, 	, -, 	, Free, :, 9, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 6, 	, 6, 	, B, 	, 0, 	, -, 	, C, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('10', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('9', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('\t', 'nsubj'), ('Free', 'dep'), (':', 'punct'), ('10', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'acl'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ROOT'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('Free', 'ccomp'), (':', 'punct'), ('9', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'appos'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'xcomp'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'conj'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, -], [-, 	], [	, Free], [Free, :], [:, 10], [10, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, D], [D, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, Free], [Free, :], [:, 9], [9, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 6], [6, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 0]]

>> Trigrams: 
[[	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 10], [:, 10, 		  	], [10, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 9], [:, 9, 		  	], [9, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 6], [	, 6, 	], [6, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 0]]

>> Noun Phrases are: 
[10		  	Process, 	Max, 9		  	Process, 	Max]

>> Named Entities are: 
[('10', 'CARDINAL'), ('Max', 'PERSON'), ('9', 'CARDINAL'), ('Max', 'PERSON'), ('6', 'CARDINAL')]


============================ Sentence 172 =============================

	- 	D	0	- 	Free : 4		   5   


>> Tokens are: 
[	, -, 	, D, 	, 0, 	, -, 	, Free, :, 4, 		   , 5,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('4', 'NUM'), ('\t\t   ', 'SPACE'), ('5', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'dep'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('Free', 'ROOT'), (':', 'punct'), ('4', 'nummod'), ('\t\t   ', 'quantmod'), ('5', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[	, -], [-, 	], [	, D], [D, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, Free], [Free, :], [:, 4], [4, 		   ], [		   , 5], [5,  ]]

>> Trigrams: 
[[	, -, 	], [-, 	, D], [	, D, 	], [D, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, Free], [	, Free, :], [Free, :, 4], [:, 4, 		   ], [4, 		   , 5], [		   , 5,  ]]

>> Noun Phrases are: 
[	- 	D	0	- 	Free]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 173 =============================

The order of execution is C, D, B, A. 


>> Tokens are: 
[order, execution, C, ,, D, ,, B, ,, A.] 

>> PoS Tags are: 
[('order', 'NOUN'), ('execution', 'NOUN'), ('C', 'NOUN'), (',', 'PUNCT'), ('D', 'PROPN'), (',', 'PUNCT'), ('B', 'NOUN'), (',', 'PUNCT'), ('A.', 'NOUN')] 

>> Dependency Tags are: 
[('order', 'nsubj'), ('execution', 'pobj'), ('C', 'attr'), (',', 'punct'), ('D', 'conj'), (',', 'punct'), ('B', 'conj'), (',', 'punct'), ('A.', 'punct')]

>> Bigrams: 
[[order, execution], [execution, C], [C, ,], [,, D], [D, ,], [,, B], [B, ,], [,, A.]]

>> Trigrams: 
[[order, execution, C], [execution, C, ,], [C, ,, D], [,, D, ,], [D, ,, B], [,, B, ,], [B, ,, A.]]

>> Noun Phrases are: 
[The order, execution, C, D, B]

>> Named Entities are: 
[]


============================ Sentence 174 =============================

So if we can find proper order of execution then there is no deadlock. 


>> Tokens are: 
[find, proper, order, execution, deadlock, .] 

>> PoS Tags are: 
[('find', 'VERB'), ('proper', 'ADJ'), ('order', 'NOUN'), ('execution', 'NOUN'), ('deadlock', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('find', 'advcl'), ('proper', 'amod'), ('order', 'dobj'), ('execution', 'pobj'), ('deadlock', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[find, proper], [proper, order], [order, execution], [execution, deadlock], [deadlock, .]]

>> Trigrams: 
[[find, proper, order], [proper, order, execution], [order, execution, deadlock], [execution, deadlock, .]]

>> Noun Phrases are: 
[we, proper order, execution, no deadlock]

>> Named Entities are: 
[]


============================ Sentence 175 =============================

   Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Banker’s algorithm for single resource (unsafe state)  	Process	Has / Hold	Max required 	A	1	6 	B	2	5 	C	2	4 	D	4	7 	Free : 


>> Tokens are: 
[   , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Banker, algorithm, single, resource, (, unsafe, state, ),  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 6, 	, B, 	, 2, 	, 5, 	, C, 	, 2, 	, 4, 	, D, 	, 4, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('single', 'ADJ'), ('resource', 'NOUN'), ('(', 'PUNCT'), ('unsafe', 'ADJ'), ('state', 'NOUN'), (')', 'PUNCT'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('D', 'NOUN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'compound'), ('Banker', 'appos'), ('algorithm', 'appos'), ('single', 'amod'), ('resource', 'pobj'), ('(', 'punct'), ('unsafe', 'amod'), ('state', 'appos'), (')', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'compound'), ('5', 'appos'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('7', 'appos'), ('\t', 'compound'), ('Free', 'dobj'), (':', 'punct')]

>> Bigrams: 
[[   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Banker], [Banker, algorithm], [algorithm, single], [single, resource], [resource, (], [(, unsafe], [unsafe, state], [state, )], [),  	], [ 	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 6], [6, 	], [	, B], [B, 	], [	, 2], [2, 	], [	, 5], [5, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 4], [4, 	], [	, D], [D, 	], [	, 4], [4, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Banker], [ , Banker, algorithm], [Banker, algorithm, single], [algorithm, single, resource], [single, resource, (], [resource, (, unsafe], [(, unsafe, state], [unsafe, state, )], [state, ),  	], [),  	, Process], [ 	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 6], [	, 6, 	], [6, 	, B], [	, B, 	], [B, 	, 2], [	, 2, 	], [2, 	, 5], [	, 5, 	], [5, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 4], [	, 4, 	], [4, 	, D], [	, D, 	], [D, 	, 4], [	, 4, 	], [4, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[   Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock,  Banker, algorithm, single resource, unsafe state, 	Max, 	A	1	6 	B	2	5 	C	2	4 	D	4	7 	Free]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Banker’s', 'ORG'), ('Max', 'PERSON')]


============================ Sentence 176 =============================

1		      Prof. Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[1, 		      , Prof., Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('1', 'NUM'), ('\t\t      ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'quantmod'), ('\t\t      ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[1, 		      ], [		      , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[1, 		      , Prof.], [		      , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[1		      Prof. Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 177 =============================

   Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 1, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  	], [‹#›,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 178 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 179 =============================

	1	1	2 	P3	3	1	0	0 


>> Tokens are: 
[	, 1, 	, 1, 	, 2, 	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 180 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 181 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 182 =============================

	1	0 


>> Tokens are: 
[	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('1', 'nummod'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 183 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 184 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 3, 	, 0, 	, 1, 	, 1, 	, P2, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('3', 'appos'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 3], [3, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 3], [	, 3, 	], [3, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 185 =============================

	1	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 186 =============================

	P3	1	1	1	0 


>> Tokens are: 
[	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 187 =============================

	P4	1	1	0 


>> Tokens are: 
[	, P4, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'ROOT'), ('1', 'nummod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 188 =============================

	1 	P5	0 


>> Tokens are: 
[	, 1, 	, P5, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P5', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P5], [P5, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P5], [	, P5, 	], [P5, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 189 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 190 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 191 =============================

	0  total no of each resource resources hold no of resources held by each process   	Tape Drives	Plotters	Scanners 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process,   	, Tape, Drives, 	, Plotters, 	, Scanners] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('  \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('  \t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process,   	], [  	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process,   	], [process,   	, Tape], [  	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners]]

>> Noun Phrases are: 
[each resource resources, resources, each process,   	Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[]


============================ Sentence 192 =============================

	CD Roms 	1	0	2	0  available (free) resources 


>> Tokens are: 
[	, CD, Roms, 	, 1, 	, 0, 	, 2, 	, 0,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'nsubj'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'appos'), ('0', 'punct'), (' ', 'appos'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ROOT')]

>> Bigrams: 
[[	, CD], [CD, Roms], [Roms, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 2], [2, 	], [	, 0], [0,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, CD, Roms], [CD, Roms, 	], [Roms, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0,  ], [0,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[	CD Roms 	1	0	2	0  available (free) resources]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 193 =============================

    Prof. 


>> Tokens are: 
[    , Prof.] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[    , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[    Prof.]

>> Named Entities are: 
[]


============================ Sentence 194 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'npadvmod'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 195 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'oprd'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[]


============================ Sentence 196 =============================

 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 


>> Tokens are: 
[ 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 1, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'ROOT'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 197 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 198 =============================

	1	1	2 	P3	3	1	0	0 


>> Tokens are: 
[	, 1, 	, 1, 	, 2, 	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 199 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 200 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 201 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 202 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 203 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 204 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 3, 	, 0, 	, 1, 	, 1, 	, P2, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('3', 'appos'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 3], [3, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 3], [	, 3, 	], [3, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 205 =============================

	1	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 206 =============================

	P3	1	1	1	0 


>> Tokens are: 
[	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 207 =============================

	P4	1	1	1	1 	P5	0 


>> Tokens are: 
[	, P4, 	, 1, 	, 1, 	, 1, 	, 1, 	, P5, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P5', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P5], [P5, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P5], [	, P5, 	], [P5, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 208 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 209 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 210 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	1	0 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 211 =============================

	1	0  available (free) resources 


>> Tokens are: 
[	, 1, 	, 0,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ROOT')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0,  ], [0,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[	1	0  available (free) resources]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 212 =============================

   Prof. 


>> Tokens are: 
[   , Prof.] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[   , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[   Prof.]

>> Named Entities are: 
[]


============================ Sentence 213 =============================

Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 214 =============================

   Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 1, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  	], [‹#›,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 215 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 216 =============================

	1	1	2 	P3	3	1	0	0 


>> Tokens are: 
[	, 1, 	, 1, 	, 2, 	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 217 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 218 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 219 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 220 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 221 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 222 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 3, 	, 0, 	, 1, 	, 1, 	, P2, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('3', 'appos'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 3], [3, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 3], [	, 3, 	], [3, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 223 =============================

	1	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 224 =============================

	P3	1	1	1	0 


>> Tokens are: 
[	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 225 =============================

	P4	-	-	-	- 	P5	0	0 


>> Tokens are: 
[	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P5', 'ROOT'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P4	-	-	-	- 	P5]

>> Named Entities are: 
[]


============================ Sentence 226 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 227 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	2 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 2] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('2', 'nummod')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 2]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 2]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 228 =============================

	1	2	1  available (free) resources         Prof. 


>> Tokens are: 
[	, 1, 	, 2, 	, 1,  , available, (, free, ), resources,         , Prof.] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'VERB'), ('        ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), (' ', 'nsubj'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ROOT'), ('        ', 'compound'), ('Prof.', 'dobj')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 2], [2, 	], [	, 1], [1,  ], [ , available], [available, (], [(, free], [free, )], [), resources], [resources,         ], [        , Prof.]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1,  ], [1,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources], [), resources,         ], [resources,         , Prof.]]

>> Noun Phrases are: 
[        Prof.]

>> Named Entities are: 
[]


============================ Sentence 229 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'npadvmod'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 230 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'oprd'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[]


============================ Sentence 231 =============================

 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[ 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 232 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 233 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 234 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 235 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 236 =============================

	1	1	2 	P3	3	1	0	0 


>> Tokens are: 
[	, 1, 	, 1, 	, 2, 	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 237 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 238 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 239 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 240 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 241 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 242 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	4	1	1	1 	P2	0	1	0	0 	P3	1	1	1	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 4, 	, 1, 	, 1, 	, 1, 	, P2, 	, 0, 	, 1, 	, 0, 	, 0, 	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'dobj'), ('1', 'nummod'), ('\t', 'conj'), ('1', 'appos'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'conj'), ('0', 'punct'), ('\t', 'dobj'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct'), ('\t', 'nmod'), ('0', 'punct'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 4], [4, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P2], [P2, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0], [0, 	], [	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 4], [	, 4, 	], [4, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0], [	, 0, 	], [0, 	, P3], [	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 243 =============================

	P4	-	-	-	- 	P5	0	0 


>> Tokens are: 
[	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P5', 'ROOT'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P4	-	-	-	- 	P5]

>> Named Entities are: 
[]


============================ Sentence 244 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 245 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	1	0	2	1  available (free) resources     


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 1, 	, 0, 	, 2, 	, 1,  , available, (, free, ), resources,    ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('   ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'dep'), ('0', 'punct'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'punct'), (' ', 'nmod'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'dobj'), ('   ', 'conj')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 2], [2, 	], [	, 1], [1,  ], [ , available], [available, (], [(, free], [free, )], [), resources], [resources,    ]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1,  ], [1,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources], [), resources,    ]]

>> Noun Phrases are: 
[each resource resources, resources, each process, 	2	1  available (free) resources]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 246 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 247 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'oprd'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[]


============================ Sentence 248 =============================

 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[ 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 249 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 250 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 251 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 252 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 253 =============================

	1	1	2 	P3	3	1	0	0 


>> Tokens are: 
[	, 1, 	, 1, 	, 2, 	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 254 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 255 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 256 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 257 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 258 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 259 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 260 =============================

	1	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 261 =============================

	P3	1	1	1	0 


>> Tokens are: 
[	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 262 =============================

	P4	-	-	-	- 	P5	0	0 


>> Tokens are: 
[	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P5', 'ROOT'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P4	-	-	-	- 	P5]

>> Named Entities are: 
[]


============================ Sentence 263 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 264 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	5 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 265 =============================

	1	3	2  available (free) resources 


>> Tokens are: 
[	, 1, 	, 3, 	, 2,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'appos'), ('2', 'nummod'), (' ', 'appos'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ROOT')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 3], [3, 	], [	, 2], [2,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2,  ], [2,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[	1	3	2  available (free) resources]

>> Named Entities are: 
[]


============================ Sentence 266 =============================

          Prof. 


>> Tokens are: 
[          , Prof.] 

>> PoS Tags are: 
[('          ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('          ', 'compound'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[          , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[          Prof.]

>> Named Entities are: 
[]


============================ Sentence 267 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya, #3140702 (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 268 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'oprd'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[]


============================ Sentence 269 =============================

 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[ 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 270 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 271 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 272 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 273 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 274 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 275 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 276 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 277 =============================

	P3	3	1	0	0 


>> Tokens are: 
[	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 278 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 279 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 280 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 281 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 282 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 283 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 284 =============================

	2	1	2 	P3	1	1	1	0 


>> Tokens are: 
[	, 2, 	, 1, 	, 2, 	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, 2], [2, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[	2	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 285 =============================

	P4	-	-	-	- 	P5	0	0 


>> Tokens are: 
[	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P5', 'ROOT'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P4	-	-	-	- 	P5]

>> Named Entities are: 
[]


============================ Sentence 286 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 287 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	5	0 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'dep'), ('0', 'punct')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 0]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 0]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 288 =============================

	2	0  available (free) resources 


>> Tokens are: 
[	, 2, 	, 0,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('2', 'nummod'), ('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ROOT')]

>> Bigrams: 
[[	, 2], [2, 	], [	, 0], [0,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, 2, 	], [2, 	, 0], [	, 0,  ], [0,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[	2	0  available (free) resources]

>> Named Entities are: 
[]


============================ Sentence 289 =============================

   Prof. 


>> Tokens are: 
[   , Prof.] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[   , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[   Prof.]

>> Named Entities are: 
[]


============================ Sentence 290 =============================

Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 291 =============================

   Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('0', 'appos')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  	], [‹#›,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 292 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 293 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 294 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 295 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 296 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 297 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 298 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 299 =============================

	P3	3	1	0	0 


>> Tokens are: 
[	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 300 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 301 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 302 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 303 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 304 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 305 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	1	1	1	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, -, 	, -, 	, -, 	, -, 	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P3], [	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 306 =============================

	P4	-	-	-	- 	P5	0	0 


>> Tokens are: 
[	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P5', 'ROOT'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P4	-	-	-	- 	P5]

>> Named Entities are: 
[]


============================ Sentence 307 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 308 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	5	2	3	2  available (free) resources 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 2, 	, 3, 	, 2,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'VERB')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' ', 'punct'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ccomp')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 2], [2, 	], [	, 3], [3, 	], [	, 2], [2,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 2], [	, 2, 	], [2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2,  ], [2,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 309 =============================

        Prof. 


>> Tokens are: 
[        , Prof.] 

>> PoS Tags are: 
[('        ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('        ', 'compound'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[        , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[        Prof.]

>> Named Entities are: 
[]


============================ Sentence 310 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'npadvmod'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 311 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'oprd'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[]


============================ Sentence 312 =============================

 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[ 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 313 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 314 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 315 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 316 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 317 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 318 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 319 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 320 =============================

	P3	0 


>> Tokens are: 
[	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 321 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 322 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 323 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 324 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 325 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 326 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 327 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 328 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 329 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	4	2	1	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, -, 	, -, 	, -, 	, -, 	, P3, 	, 4, 	, 2, 	, 1, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('2', 'nmod'), ('\t', 'nmod'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P3], [P3, 	], [	, 4], [4, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P3], [	, P3, 	], [P3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 330 =============================

	P4	-	-	-	- 	P5	0	0 


>> Tokens are: 
[	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P5', 'ROOT'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	P4	-	-	-	- 	P5]

>> Named Entities are: 
[]


============================ Sentence 331 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 332 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	2 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 2] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('2', 'nummod')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 2]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 2]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[]


============================ Sentence 333 =============================

	1	3	2  available (free) resources 


>> Tokens are: 
[	, 1, 	, 3, 	, 2,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('3', 'appos'), ('\t', 'appos'), ('2', 'nummod'), (' ', 'appos'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ROOT')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 3], [3, 	], [	, 2], [2,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2,  ], [2,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[	1	3	2  available (free) resources]

>> Named Entities are: 
[]


============================ Sentence 334 =============================

   Prof. 


>> Tokens are: 
[   , Prof.] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[   , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[   Prof.]

>> Named Entities are: 
[]


============================ Sentence 335 =============================

Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 336 =============================

   Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('0', 'appos')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  	], [‹#›,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 337 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 338 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 339 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 340 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 341 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 342 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 343 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 344 =============================

	P3	0 


>> Tokens are: 
[	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 345 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 346 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 347 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 348 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 349 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 350 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 351 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 352 =============================

	P5	2	1	1	0   


>> Tokens are: 
[	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 353 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	-	-	-	- 	P4	-	-	-	- 	P5	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, -, 	, -, 	, -, 	, -, 	, P3, 	, -, 	, -, 	, -, 	, -, 	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P4', 'nmod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('P5', 'appos'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P3], [P3, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P3], [	, P3, 	], [P3, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P4], [	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners, P5]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 354 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 355 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 356 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  available (free) resources 


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'conj'), ('3', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' ', 'punct'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'dobj')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  ], [2,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[each resource resources, resources, each process, available (free) resources]

>> Named Entities are: 
[]


============================ Sentence 357 =============================

          Prof. Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[          , Prof., Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('          ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('          ', 'compound'), ('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[          , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[          , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[          Prof. Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 358 =============================

   Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('0', 'appos')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  	], [‹#›,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 359 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 360 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 361 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 362 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 363 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 364 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 365 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 366 =============================

	P3	0 


>> Tokens are: 
[	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 367 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 368 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 369 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 370 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 371 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 372 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 373 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 374 =============================

	P5	0 


>> Tokens are: 
[	, P5, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 0]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 375 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 376 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 377 =============================

	0   


>> Tokens are: 
[	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, 0], [0,  ]]

>> Trigrams: 
[[	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 378 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	-	-	-	- 	P4	-	-	-	- 	P5	2	1	1	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	4	2	3	2  available (free) resources 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, -, 	, -, 	, -, 	, -, 	, P3, 	, -, 	, -, 	, -, 	, -, 	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 4, 	, 2, 	, 3, 	, 2,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P3', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P4', 'nmod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('4', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'ccomp'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' ', 'punct'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ccomp')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P3], [P3, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 4], [4, 	], [	, 2], [2, 	], [	, 3], [3, 	], [	, 2], [2,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P3], [	, P3, 	], [P3, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P4], [	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2, 	], [2, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2,  ], [2,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners, each resource resources, resources, each process, 	Tape Drives]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 379 =============================

   Prof. 


>> Tokens are: 
[   , Prof.] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[   , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[   Prof.]

>> Named Entities are: 
[]


============================ Sentence 380 =============================

Firoz A Sherasiya #3140702 (OS) 


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, )] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'npadvmod'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )]]

>> Noun Phrases are: 
[Firoz, A Sherasiya, (OS]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 381 =============================

   Unit 5 – Deadlock ‹#›  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	0 


>> Tokens are: 
[  , , Unit, 5, –, Deadlock, ‹#›,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 0] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'ROOT'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'compound'), ('P1', 'compound'), ('\t', 'appos'), ('0', 'appos')]

>> Bigrams: 
[[  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 0]]

>> Trigrams: 
[[  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  	], [‹#›,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 0]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 382 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 383 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 384 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 385 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 386 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 387 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 388 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 389 =============================

	P3	0 


>> Tokens are: 
[	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 390 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 391 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 392 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 393 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 394 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 395 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 396 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 397 =============================

	P5	0 


>> Tokens are: 
[	, P5, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P5', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P5], [P5, 	], [	, 0]]

>> Trigrams: 
[[	, P5, 	], [P5, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 398 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 399 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 400 =============================

	0   


>> Tokens are: 
[	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, 0], [0,  ]]

>> Trigrams: 
[[	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 401 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	-	-	-	- 	P2	-	-	-	- 	P3	-	-	-	- 	P4	-	-	-	- 	P5	-	-	-	-  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  available (free) resources 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, -, 	, -, 	, -, 	, -, 	, P2, 	, -, 	, -, 	, -, 	, -, 	, P3, 	, -, 	, -, 	, -, 	, -, 	, P4, 	, -, 	, -, 	, -, 	, -, 	, P5, 	, -, 	, -, 	, -, 	, -,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  , available, (, free, ), resources] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' ', 'SPACE'), ('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P2', 'nmod'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('P3', 'nmod'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('P4', 'nmod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('P5', 'nsubj'), ('\t', 'nmod'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), ('\t', 'appos'), ('-', 'punct'), (' ', 'nsubj'), ('total', 'advcl'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'ROOT'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'conj'), ('3', 'nummod'), ('\t', 'nmod'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' ', 'nsubj'), ('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'ccomp')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P2], [P2, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P3], [P3, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P4], [P4, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, P5], [P5, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-, 	], [	, -], [-,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  ], [ , available], [available, (], [(, free], [free, )], [), resources]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P2], [	, P2, 	], [P2, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P3], [	, P3, 	], [P3, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P4], [	, P4, 	], [P4, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, P5], [	, P5, 	], [P5, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -, 	], [-, 	, -], [	, -,  ], [-,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  ], [2,  , available], [ , available, (], [available, (, free], [(, free, )], [free, ), resources]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners, each resource resources, resources, each process]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 402 =============================

    Prof. 


>> Tokens are: 
[    , Prof.] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Prof.', 'PROPN')] 

>> Dependency Tags are: 
[('    ', 'compound'), ('Prof.', 'ROOT')]

>> Bigrams: 
[[    , Prof.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[    Prof.]

>> Named Entities are: 
[]


============================ Sentence 403 =============================

Firoz A Sherasiya #3140702 (OS)    


>> Tokens are: 
[Firoz, Sherasiya, #, 3140702, (, OS, ),   ] 

>> PoS Tags are: 
[('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Firoz', 'nmod'), ('Sherasiya', 'ROOT'), ('#', 'nmod'), ('3140702', 'nummod'), ('(', 'punct'), ('OS', 'npadvmod'), (')', 'punct'), ('  ', 'appos')]

>> Bigrams: 
[[Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ]]

>> Trigrams: 
[[Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ]]

>> Noun Phrases are: 
[Firoz A Sherasiya]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 404 =============================

 Unit 5 – Deadlock ‹#› 


>> Tokens are: 
[, Unit, 5, –, Deadlock, ‹#›] 

>> PoS Tags are: 
[('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'NOUN'), ('‹#›', 'PART')] 

>> Dependency Tags are: 
[('\uf077', 'ROOT'), ('Unit', 'oprd'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'appos')]

>> Bigrams: 
[[, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›]]

>> Trigrams: 
[[, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›]]

>> Noun Phrases are: 
[Unit, Deadlock]

>> Named Entities are: 
[]


============================ Sentence 405 =============================

 	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	1	1	0	0 


>> Tokens are: 
[ 	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 1, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'ROOT'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 406 =============================

	P2	0 


>> Tokens are: 
[	, P2, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P2', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 407 =============================

	1	1	2 	P3	3	1	0	0 


>> Tokens are: 
[	, 1, 	, 1, 	, 2, 	, P3, 	, 3, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'nummod'), ('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, P3], [P3, 	], [	, 3], [3, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P3], [	, P3, 	], [P3, 	, 3], [	, 3, 	], [3, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[	1	1	2 	P3]

>> Named Entities are: 
[]


============================ Sentence 408 =============================

	P4	0 


>> Tokens are: 
[	, P4, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 409 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 410 =============================

	1	1 	P5	2	1	1	0   


>> Tokens are: 
[	, 1, 	, 1, 	, P5, 	, 2, 	, 1, 	, 1, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('P5', 'nmod'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'nmod'), ('1', 'prep'), ('\t', 'ROOT'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 1], [1, 	], [	, P5], [P5, 	], [	, 2], [2, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P5], [	, P5, 	], [P5, 	, 2], [	, 2, 	], [2, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 411 =============================

no of resources still needed by each process to proceed Banker’s algorithm for multiple resource 	Tape Drives	Plotters	Scanners	CD Roms 	6	3	4	2  	Tape Drives	Plotters	Scanners	CD Roms 	5	3	2	2  	Process	Tape Drives	Plotters	Scanners	CD Roms 	P1	3	0	1	1 	P2	0 


>> Tokens are: 
[resources, needed, process, proceed, Banker, algorithm, multiple, resource, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 6, 	, 3, 	, 4, 	, 2,  	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 5, 	, 3, 	, 2, 	, 2,  	, Process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, P1, 	, 3, 	, 0, 	, 1, 	, 1, 	, P2, 	, 0] 

>> PoS Tags are: 
[('resources', 'NOUN'), ('needed', 'VERB'), ('process', 'NOUN'), ('proceed', 'VERB'), ('Banker', 'PROPN'), ('algorithm', 'NOUN'), ('multiple', 'ADJ'), ('resource', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), (' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('resources', 'pobj'), ('needed', 'acl'), ('process', 'pobj'), ('proceed', 'advcl'), ('Banker', 'dobj'), ('algorithm', 'dobj'), ('multiple', 'amod'), ('resource', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('4', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), (' \t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('5', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'compound'), (' \t', 'compound'), ('Process', 'compound'), ('\t', 'appos'), ('Tape', 'compound'), ('Drives', 'appos'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'appos'), ('\t', 'nmod'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('3', 'appos'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[resources, needed], [needed, process], [process, proceed], [proceed, Banker], [Banker, algorithm], [algorithm, multiple], [multiple, resource], [resource, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 6], [6, 	], [	, 3], [3, 	], [	, 4], [4, 	], [	, 2], [2,  	], [ 	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 5], [5, 	], [	, 3], [3, 	], [	, 2], [2, 	], [	, 2], [2,  	], [ 	, Process], [Process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, P1], [P1, 	], [	, 3], [3, 	], [	, 0], [0, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, P2], [P2, 	], [	, 0]]

>> Trigrams: 
[[resources, needed, process], [needed, process, proceed], [process, proceed, Banker], [proceed, Banker, algorithm], [Banker, algorithm, multiple], [algorithm, multiple, resource], [multiple, resource, 	], [resource, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 6], [	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 4], [	, 4, 	], [4, 	, 2], [	, 2,  	], [2,  	, Tape], [ 	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 5], [	, 5, 	], [5, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2,  	], [2,  	, Process], [ 	, Process, 	], [Process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, P1], [	, P1, 	], [P1, 	, 3], [	, 3, 	], [3, 	, 0], [	, 0, 	], [0, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, P2], [	, P2, 	], [P2, 	, 0]]

>> Noun Phrases are: 
[resources, each process, Banker, algorithm, multiple resource, Tape Drives, Tape Drives, 	Plotters	Scanners]

>> Named Entities are: 
[('Banker’s', 'ORG'), ('Process\tTape Drives\tPlotters\tScanners', 'PRODUCT')]


============================ Sentence 412 =============================

	1	0	0 


>> Tokens are: 
[	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('0', 'punct'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 413 =============================

	P3	1	1	1	0 


>> Tokens are: 
[	, P3, 	, 1, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P3', 'ROOT'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('1', 'nmod'), ('\t', 'appos'), ('1', 'prep'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, P3], [P3, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P3, 	], [P3, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[	P3]

>> Named Entities are: 
[]


============================ Sentence 414 =============================

	P4	1	1	0 


>> Tokens are: 
[	, P4, 	, 1, 	, 1, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('P4', 'nmod'), ('\t', 'ROOT'), ('1', 'nummod'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, P4], [P4, 	], [	, 1], [1, 	], [	, 1], [1, 	], [	, 0]]

>> Trigrams: 
[[	, P4, 	], [P4, 	, 1], [	, 1, 	], [1, 	, 1], [	, 1, 	], [1, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 415 =============================

	1 	P5	0 


>> Tokens are: 
[	, 1, 	, P5, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('P5', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('P5', 'compound'), ('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, P5], [P5, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, P5], [	, P5, 	], [P5, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 416 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 417 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 418 =============================

	0  total no of each resource resources hold no of resources held by each process 	Tape Drives	Plotters	Scanners	CD Roms 	1	0	2	0   


>> Tokens are: 
[	, 0,  , total, resource, resources, hold, resources, held, process, 	, Tape, Drives, 	, Plotters, 	, Scanners, 	, CD, Roms, 	, 1, 	, 0, 	, 2, 	, 0,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE'), ('total', 'VERB'), ('resource', 'NOUN'), ('resources', 'NOUN'), ('hold', 'VERB'), ('resources', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('\t', 'SPACE'), ('Tape', 'PROPN'), ('Drives', 'PROPN'), ('\t', 'SPACE'), ('Plotters', 'PROPN'), ('\t', 'SPACE'), ('Scanners', 'PROPN'), ('\t', 'SPACE'), ('CD', 'NOUN'), ('Roms', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('0', 'punct'), (' ', 'appos'), ('total', 'ROOT'), ('resource', 'compound'), ('resources', 'pobj'), ('hold', 'conj'), ('resources', 'pobj'), ('held', 'acl'), ('process', 'pobj'), ('\t', 'compound'), ('Tape', 'compound'), ('Drives', 'compound'), ('\t', 'compound'), ('Plotters', 'compound'), ('\t', 'compound'), ('Scanners', 'compound'), ('\t', 'compound'), ('CD', 'compound'), ('Roms', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'dep'), ('0', 'punct'), ('\t', 'compound'), ('2', 'prep'), ('\t', 'dobj'), ('0', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, 0], [0,  ], [ , total], [total, resource], [resource, resources], [resources, hold], [hold, resources], [resources, held], [held, process], [process, 	], [	, Tape], [Tape, Drives], [Drives, 	], [	, Plotters], [Plotters, 	], [	, Scanners], [Scanners, 	], [	, CD], [CD, Roms], [Roms, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 2], [2, 	], [	, 0], [0,  ]]

>> Trigrams: 
[[	, 0,  ], [0,  , total], [ , total, resource], [total, resource, resources], [resource, resources, hold], [resources, hold, resources], [hold, resources, held], [resources, held, process], [held, process, 	], [process, 	, Tape], [	, Tape, Drives], [Tape, Drives, 	], [Drives, 	, Plotters], [	, Plotters, 	], [Plotters, 	, Scanners], [	, Scanners, 	], [Scanners, 	, CD], [	, CD, Roms], [CD, Roms, 	], [Roms, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 2], [	, 2, 	], [2, 	, 0], [	, 0,  ]]

>> Noun Phrases are: 
[each resource resources, resources, each process]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 419 =============================

available (free) resources      Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock prevention Section - 6      Deadlock prevention Deadlock can be prevented by attacking the one of the four conditions that leads to deadlock. 


>> Tokens are: 
[available, (, free, ), resources,      , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, prevention, Section, -, 6,      , Deadlock, prevention, Deadlock, prevented, attacking, conditions, leads, deadlock, .] 

>> PoS Tags are: 
[('available', 'ADJ'), ('(', 'PUNCT'), ('free', 'ADJ'), (')', 'PUNCT'), ('resources', 'NOUN'), ('     ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('prevention', 'NOUN'), ('Section', 'PROPN'), ('-', 'PUNCT'), ('6', 'NUM'), ('     ', 'SPACE'), ('Deadlock', 'PROPN'), ('prevention', 'NOUN'), ('Deadlock', 'PROPN'), ('prevented', 'VERB'), ('attacking', 'VERB'), ('conditions', 'NOUN'), ('leads', 'VERB'), ('deadlock', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('available', 'amod'), ('(', 'punct'), ('free', 'amod'), (')', 'punct'), ('resources', 'compound'), ('     ', 'compound'), ('Prof.', 'compound'), ('Firoz', 'nsubj'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'nsubjpass'), ('\uf077', 'acl'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'appos'), ('Deadlock', 'compound'), ('prevention', 'compound'), ('Section', 'nmod'), ('-', 'punct'), ('6', 'nummod'), ('     ', 'compound'), ('Deadlock', 'compound'), ('prevention', 'compound'), ('Deadlock', 'appos'), ('prevented', 'ROOT'), ('attacking', 'pcomp'), ('conditions', 'pobj'), ('leads', 'relcl'), ('deadlock', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[available, (], [(, free], [free, )], [), resources], [resources,      ], [     , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, prevention], [prevention, Section], [Section, -], [-, 6], [6,      ], [     , Deadlock], [Deadlock, prevention], [prevention, Deadlock], [Deadlock, prevented], [prevented, attacking], [attacking, conditions], [conditions, leads], [leads, deadlock], [deadlock, .]]

>> Trigrams: 
[[available, (, free], [(, free, )], [free, ), resources], [), resources,      ], [resources,      , Prof.], [     , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, prevention], [Deadlock, prevention, Section], [prevention, Section, -], [Section, -, 6], [-, 6,      ], [6,      , Deadlock], [     , Deadlock, prevention], [Deadlock, prevention, Deadlock], [prevention, Deadlock, prevented], [Deadlock, prevented, attacking], [prevented, attacking, conditions], [attacking, conditions, leads], [conditions, leads, deadlock], [leads, deadlock, .]]

>> Noun Phrases are: 
[available (free) resources      Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock, Deadlock prevention Section - 6      Deadlock prevention Deadlock, the four conditions]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Deadlock', 'PERSON'), ('one', 'CARDINAL'), ('four', 'CARDINAL')]


============================ Sentence 420 =============================

Attacking the Mutual Exclusion Condition No deadlock if each resource can be assigned to more than one process. 


>> Tokens are: 
[Attacking, Mutual, Exclusion, Condition, deadlock, resource, assigned, process, .] 

>> PoS Tags are: 
[('Attacking', 'VERB'), ('Mutual', 'PROPN'), ('Exclusion', 'PROPN'), ('Condition', 'PROPN'), ('deadlock', 'NOUN'), ('resource', 'NOUN'), ('assigned', 'VERB'), ('process', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Attacking', 'ROOT'), ('Mutual', 'compound'), ('Exclusion', 'compound'), ('Condition', 'dobj'), ('deadlock', 'dobj'), ('resource', 'nsubjpass'), ('assigned', 'advcl'), ('process', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Attacking, Mutual], [Mutual, Exclusion], [Exclusion, Condition], [Condition, deadlock], [deadlock, resource], [resource, assigned], [assigned, process], [process, .]]

>> Trigrams: 
[[Attacking, Mutual, Exclusion], [Mutual, Exclusion, Condition], [Exclusion, Condition, deadlock], [Condition, deadlock, resource], [deadlock, resource, assigned], [resource, assigned, process], [assigned, process, .]]

>> Noun Phrases are: 
[the Mutual Exclusion Condition, No deadlock, each resource, more than one process]

>> Named Entities are: 
[('the Mutual Exclusion Condition No', 'ORG'), ('more than one', 'CARDINAL')]


============================ Sentence 421 =============================

We can not assign some resources to more than one process at a time such as CD-Recorder, Printer etc… 


>> Tokens are: 
[assign, resources, process, time, CD, -, Recorder, ,, Printer, etc, …] 

>> PoS Tags are: 
[('assign', 'VERB'), ('resources', 'NOUN'), ('process', 'NOUN'), ('time', 'NOUN'), ('CD', 'NOUN'), ('-', 'PUNCT'), ('Recorder', 'PROPN'), (',', 'PUNCT'), ('Printer', 'PROPN'), ('etc', 'X'), ('…', 'PUNCT')] 

>> Dependency Tags are: 
[('assign', 'ROOT'), ('resources', 'dobj'), ('process', 'pobj'), ('time', 'pobj'), ('CD', 'compound'), ('-', 'punct'), ('Recorder', 'pobj'), (',', 'punct'), ('Printer', 'compound'), ('etc', 'conj'), ('…', 'punct')]

>> Bigrams: 
[[assign, resources], [resources, process], [process, time], [time, CD], [CD, -], [-, Recorder], [Recorder, ,], [,, Printer], [Printer, etc], [etc, …]]

>> Trigrams: 
[[assign, resources, process], [resources, process, time], [process, time, CD], [time, CD, -], [CD, -, Recorder], [-, Recorder, ,], [Recorder, ,, Printer], [,, Printer, etc], [Printer, etc, …]]

>> Noun Phrases are: 
[We, some resources, more than one process, a time, CD-Recorder]

>> Named Entities are: 
[('more than one', 'CARDINAL')]


============================ Sentence 422 =============================

So this solution is not feasible. 


>> Tokens are: 
[solution, feasible, .] 

>> PoS Tags are: 
[('solution', 'NOUN'), ('feasible', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('solution', 'nsubj'), ('feasible', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[solution, feasible], [feasible, .]]

>> Trigrams: 
[[solution, feasible, .]]

>> Noun Phrases are: 
[this solution]

>> Named Entities are: 
[]


============================ Sentence 423 =============================

Attacking the Hold and Wait Condition Require processes to request all their resources before starting execution. 


>> Tokens are: 
[Attacking, Hold, Wait, Condition, Require, processes, request, resources, starting, execution, .] 

>> PoS Tags are: 
[('Attacking', 'VERB'), ('Hold', 'NOUN'), ('Wait', 'VERB'), ('Condition', 'NOUN'), ('Require', 'PROPN'), ('processes', 'NOUN'), ('request', 'VERB'), ('resources', 'NOUN'), ('starting', 'VERB'), ('execution', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Attacking', 'ROOT'), ('Hold', 'dobj'), ('Wait', 'compound'), ('Condition', 'compound'), ('Require', 'compound'), ('processes', 'conj'), ('request', 'advcl'), ('resources', 'dobj'), ('starting', 'pcomp'), ('execution', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Attacking, Hold], [Hold, Wait], [Wait, Condition], [Condition, Require], [Require, processes], [processes, request], [request, resources], [resources, starting], [starting, execution], [execution, .]]

>> Trigrams: 
[[Attacking, Hold, Wait], [Hold, Wait, Condition], [Wait, Condition, Require], [Condition, Require, processes], [Require, processes, request], [processes, request, resources], [request, resources, starting], [resources, starting, execution], [starting, execution, .]]

>> Noun Phrases are: 
[the Hold, Wait Condition Require processes, all their resources, execution]

>> Named Entities are: 
[]


============================ Sentence 424 =============================

A process is allowed to run if all resources it needed is available. 


>> Tokens are: 
[process, allowed, run, resources, needed, available, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('allowed', 'VERB'), ('run', 'VERB'), ('resources', 'NOUN'), ('needed', 'VERB'), ('available', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubjpass'), ('allowed', 'ROOT'), ('run', 'xcomp'), ('resources', 'nsubj'), ('needed', 'relcl'), ('available', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[process, allowed], [allowed, run], [run, resources], [resources, needed], [needed, available], [available, .]]

>> Trigrams: 
[[process, allowed, run], [allowed, run, resources], [run, resources, needed], [resources, needed, available], [needed, available, .]]

>> Noun Phrases are: 
[A process, all resources, it]

>> Named Entities are: 
[]


============================ Sentence 425 =============================

Otherwise nothing will be allocated and it will just wait. 


>> Tokens are: 
[allocated, wait, .] 

>> PoS Tags are: 
[('allocated', 'VERB'), ('wait', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('allocated', 'ROOT'), ('wait', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[allocated, wait], [wait, .]]

>> Trigrams: 
[[allocated, wait, .]]

>> Noun Phrases are: 
[nothing, it]

>> Named Entities are: 
[]


============================ Sentence 426 =============================

Problem with this strategy is that a process may not know required resources at start of run. 


>> Tokens are: 
[Problem, strategy, process, know, required, resources, start, run, .] 

>> PoS Tags are: 
[('Problem', 'NOUN'), ('strategy', 'NOUN'), ('process', 'NOUN'), ('know', 'VERB'), ('required', 'VERB'), ('resources', 'NOUN'), ('start', 'NOUN'), ('run', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Problem', 'nsubj'), ('strategy', 'pobj'), ('process', 'nsubj'), ('know', 'ccomp'), ('required', 'amod'), ('resources', 'dobj'), ('start', 'pobj'), ('run', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Problem, strategy], [strategy, process], [process, know], [know, required], [required, resources], [resources, start], [start, run], [run, .]]

>> Trigrams: 
[[Problem, strategy, process], [strategy, process, know], [process, know, required], [know, required, resources], [required, resources, start], [resources, start, run], [start, run, .]]

>> Noun Phrases are: 
[Problem, this strategy, a process, required resources, start, run]

>> Named Entities are: 
[]


============================ Sentence 427 =============================

Resource will not be used optimally. 


>> Tokens are: 
[Resource, optimally, .] 

>> PoS Tags are: 
[('Resource', 'PROPN'), ('optimally', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Resource', 'nsubjpass'), ('optimally', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Resource, optimally], [optimally, .]]

>> Trigrams: 
[[Resource, optimally, .]]

>> Noun Phrases are: 
[Resource]

>> Named Entities are: 
[('Resource', 'ORG')]


============================ Sentence 428 =============================

Attacking the No Preemption Condition When a process P0 request some resource R which is held by another process P1 then resource R is forcibly taken away from the process P1 and allocated to P0. 


>> Tokens are: 
[Attacking, Preemption, Condition, process, P0, request, resource, R, held, process, P1, resource, R, forcibly, taken, away, process, P1, allocated, P0, .] 

>> PoS Tags are: 
[('Attacking', 'VERB'), ('Preemption', 'PROPN'), ('Condition', 'PROPN'), ('process', 'NOUN'), ('P0', 'PROPN'), ('request', 'VERB'), ('resource', 'NOUN'), ('R', 'NOUN'), ('held', 'VERB'), ('process', 'NOUN'), ('P1', 'PROPN'), ('resource', 'NOUN'), ('R', 'NOUN'), ('forcibly', 'ADV'), ('taken', 'VERB'), ('away', 'ADV'), ('process', 'NOUN'), ('P1', 'PROPN'), ('allocated', 'VERB'), ('P0', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Attacking', 'advcl'), ('Preemption', 'compound'), ('Condition', 'dobj'), ('process', 'nsubj'), ('P0', 'nsubj'), ('request', 'advcl'), ('resource', 'compound'), ('R', 'dobj'), ('held', 'relcl'), ('process', 'pobj'), ('P1', 'nsubj'), ('resource', 'compound'), ('R', 'nsubjpass'), ('forcibly', 'advmod'), ('taken', 'ROOT'), ('away', 'advmod'), ('process', 'pobj'), ('P1', 'appos'), ('allocated', 'conj'), ('P0', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Attacking, Preemption], [Preemption, Condition], [Condition, process], [process, P0], [P0, request], [request, resource], [resource, R], [R, held], [held, process], [process, P1], [P1, resource], [resource, R], [R, forcibly], [forcibly, taken], [taken, away], [away, process], [process, P1], [P1, allocated], [allocated, P0], [P0, .]]

>> Trigrams: 
[[Attacking, Preemption, Condition], [Preemption, Condition, process], [Condition, process, P0], [process, P0, request], [P0, request, resource], [request, resource, R], [resource, R, held], [R, held, process], [held, process, P1], [process, P1, resource], [P1, resource, R], [resource, R, forcibly], [R, forcibly, taken], [forcibly, taken, away], [taken, away, process], [away, process, P1], [process, P1, allocated], [P1, allocated, P0], [allocated, P0, .]]

>> Noun Phrases are: 
[the No Preemption Condition, a process, P0, some resource R, another process, P1, resource R, the process, P1, P0]

>> Named Entities are: 
[('the No Preemption Condition When', 'ORG')]


============================ Sentence 429 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 430 =============================

Consider a process holds the printer, halfway through its job; taking the printer away from this process without having any ill effect is not possible. 


>> Tokens are: 
[Consider, process, holds, printer, ,, halfway, job, ;, taking, printer, away, process, having, ill, effect, possible, .] 

>> PoS Tags are: 
[('Consider', 'VERB'), ('process', 'NOUN'), ('holds', 'VERB'), ('printer', 'NOUN'), (',', 'PUNCT'), ('halfway', 'ADV'), ('job', 'NOUN'), (';', 'PUNCT'), ('taking', 'VERB'), ('printer', 'NOUN'), ('away', 'ADV'), ('process', 'NOUN'), ('having', 'VERB'), ('ill', 'ADJ'), ('effect', 'NOUN'), ('possible', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consider', 'ROOT'), ('process', 'nsubj'), ('holds', 'ccomp'), ('printer', 'dobj'), (',', 'punct'), ('halfway', 'advmod'), ('job', 'pobj'), (';', 'punct'), ('taking', 'advcl'), ('printer', 'dobj'), ('away', 'advmod'), ('process', 'pobj'), ('having', 'pcomp'), ('ill', 'amod'), ('effect', 'nsubj'), ('possible', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Consider, process], [process, holds], [holds, printer], [printer, ,], [,, halfway], [halfway, job], [job, ;], [;, taking], [taking, printer], [printer, away], [away, process], [process, having], [having, ill], [ill, effect], [effect, possible], [possible, .]]

>> Trigrams: 
[[Consider, process, holds], [process, holds, printer], [holds, printer, ,], [printer, ,, halfway], [,, halfway, job], [halfway, job, ;], [job, ;, taking], [;, taking, printer], [taking, printer, away], [printer, away, process], [away, process, having], [process, having, ill], [having, ill, effect], [ill, effect, possible], [effect, possible, .]]

>> Noun Phrases are: 
[a process, the printer, its job, the printer, this process, any ill effect]

>> Named Entities are: 
[]


============================ Sentence 431 =============================

This is not a possible option. 


>> Tokens are: 
[possible, option, .] 

>> PoS Tags are: 
[('possible', 'ADJ'), ('option', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('possible', 'amod'), ('option', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[possible, option], [option, .]]

>> Trigrams: 
[[possible, option, .]]

>> Noun Phrases are: 
[a possible option]

>> Named Entities are: 
[]


============================ Sentence 432 =============================

   Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›  Deadlock prevention Deadlock can be prevented by attacking the one of the four conditions that leads to deadlock. 


>> Tokens are: 
[   , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  , Deadlock, prevention, Deadlock, prevented, attacking, conditions, leads, deadlock, .] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE'), ('Deadlock', 'PROPN'), ('prevention', 'NOUN'), ('Deadlock', 'PROPN'), ('prevented', 'VERB'), ('attacking', 'VERB'), ('conditions', 'NOUN'), ('leads', 'VERB'), ('deadlock', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'dep'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'nmod'), ('‹#›', 'punct'), (' ', 'compound'), ('Deadlock', 'compound'), ('prevention', 'compound'), ('Deadlock', 'nsubjpass'), ('prevented', 'ROOT'), ('attacking', 'pcomp'), ('conditions', 'pobj'), ('leads', 'relcl'), ('deadlock', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[   , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ], [ , Deadlock], [Deadlock, prevention], [prevention, Deadlock], [Deadlock, prevented], [prevented, attacking], [attacking, conditions], [conditions, leads], [leads, deadlock], [deadlock, .]]

>> Trigrams: 
[[   , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ], [‹#›,  , Deadlock], [ , Deadlock, prevention], [Deadlock, prevention, Deadlock], [prevention, Deadlock, prevented], [Deadlock, prevented, attacking], [prevented, attacking, conditions], [attacking, conditions, leads], [conditions, leads, deadlock], [leads, deadlock, .]]

>> Noun Phrases are: 
[A Sherasiya, (OS, Unit, Deadlock ‹#›  Deadlock prevention Deadlock, the four conditions]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Deadlock', 'PERSON'), ('one', 'CARDINAL'), ('four', 'CARDINAL')]


============================ Sentence 433 =============================

Attacking the Circular Wait Condition Provide a global numbering of all the resources. 


>> Tokens are: 
[Attacking, Circular, Wait, Condition, Provide, global, numbering, resources, .] 

>> PoS Tags are: 
[('Attacking', 'VERB'), ('Circular', 'PROPN'), ('Wait', 'PROPN'), ('Condition', 'NOUN'), ('Provide', 'VERB'), ('global', 'ADJ'), ('numbering', 'NOUN'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Attacking', 'csubj'), ('Circular', 'compound'), ('Wait', 'compound'), ('Condition', 'dobj'), ('Provide', 'ROOT'), ('global', 'amod'), ('numbering', 'dobj'), ('resources', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Attacking, Circular], [Circular, Wait], [Wait, Condition], [Condition, Provide], [Provide, global], [global, numbering], [numbering, resources], [resources, .]]

>> Trigrams: 
[[Attacking, Circular, Wait], [Circular, Wait, Condition], [Wait, Condition, Provide], [Condition, Provide, global], [Provide, global, numbering], [global, numbering, resources], [numbering, resources, .]]

>> Noun Phrases are: 
[the Circular Wait Condition, a global numbering, all the resources]

>> Named Entities are: 
[]


============================ Sentence 434 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 435 =============================

Printer Scanner Plotter Tape Drive CD Rom Now the rule is that: processes can request resources whenever they want to, but all requests must be made in numerical order. 


>> Tokens are: 
[Printer, Scanner, Plotter, Tape, Drive, CD, Rom, rule, :, processes, request, resources, want, ,, requests, numerical, order, .] 

>> PoS Tags are: 
[('Printer', 'PROPN'), ('Scanner', 'PROPN'), ('Plotter', 'PROPN'), ('Tape', 'PROPN'), ('Drive', 'PROPN'), ('CD', 'PROPN'), ('Rom', 'PROPN'), ('rule', 'NOUN'), (':', 'PUNCT'), ('processes', 'NOUN'), ('request', 'VERB'), ('resources', 'NOUN'), ('want', 'VERB'), (',', 'PUNCT'), ('requests', 'NOUN'), ('numerical', 'ADJ'), ('order', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Printer', 'compound'), ('Scanner', 'compound'), ('Plotter', 'compound'), ('Tape', 'compound'), ('Drive', 'compound'), ('CD', 'compound'), ('Rom', 'npadvmod'), ('rule', 'nsubj'), (':', 'punct'), ('processes', 'nsubj'), ('request', 'ccomp'), ('resources', 'dobj'), ('want', 'advcl'), (',', 'punct'), ('requests', 'nsubjpass'), ('numerical', 'amod'), ('order', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Printer, Scanner], [Scanner, Plotter], [Plotter, Tape], [Tape, Drive], [Drive, CD], [CD, Rom], [Rom, rule], [rule, :], [:, processes], [processes, request], [request, resources], [resources, want], [want, ,], [,, requests], [requests, numerical], [numerical, order], [order, .]]

>> Trigrams: 
[[Printer, Scanner, Plotter], [Scanner, Plotter, Tape], [Plotter, Tape, Drive], [Tape, Drive, CD], [Drive, CD, Rom], [CD, Rom, rule], [Rom, rule, :], [rule, :, processes], [:, processes, request], [processes, request, resources], [request, resources, want], [resources, want, ,], [want, ,, requests], [,, requests, numerical], [requests, numerical, order], [numerical, order, .]]

>> Noun Phrases are: 
[the rule, processes, resources, they, all requests, numerical order]

>> Named Entities are: 
[('Plotter Tape Drive', 'PERSON')]


============================ Sentence 436 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 437 =============================

A process need not acquire them all at once. 


>> Tokens are: 
[process, need, acquire, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('need', 'AUX'), ('acquire', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('need', 'aux'), ('acquire', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[process, need], [need, acquire], [acquire, .]]

>> Trigrams: 
[[process, need, acquire], [need, acquire, .]]

>> Noun Phrases are: 
[A process, them]

>> Named Entities are: 
[]


============================ Sentence 438 =============================

Circular wait is prevented if a process holding resource n cannot wait for resource m, if m 


>> Tokens are: 
[Circular, wait, prevented, process, holding, resource, n, wait, resource, m, ,, m] 

>> PoS Tags are: 
[('Circular', 'ADJ'), ('wait', 'NOUN'), ('prevented', 'VERB'), ('process', 'NOUN'), ('holding', 'VERB'), ('resource', 'NOUN'), ('n', 'CCONJ'), ('wait', 'VERB'), ('resource', 'NOUN'), ('m', 'VERB'), (',', 'PUNCT'), ('m', 'VERB')] 

>> Dependency Tags are: 
[('Circular', 'amod'), ('wait', 'nsubjpass'), ('prevented', 'ROOT'), ('process', 'nsubj'), ('holding', 'acl'), ('resource', 'dobj'), ('n', 'amod'), ('wait', 'advcl'), ('resource', 'pobj'), ('m', 'punct'), (',', 'punct'), ('m', 'advcl')]

>> Bigrams: 
[[Circular, wait], [wait, prevented], [prevented, process], [process, holding], [holding, resource], [resource, n], [n, wait], [wait, resource], [resource, m], [m, ,], [,, m]]

>> Trigrams: 
[[Circular, wait, prevented], [wait, prevented, process], [prevented, process, holding], [process, holding, resource], [holding, resource, n], [resource, n, wait], [n, wait, resource], [wait, resource, m], [resource, m, ,], [m, ,, m]]

>> Noun Phrases are: 
[Circular wait, a process, resource, resource]

>> Named Entities are: 
[]


============================ Sentence 439 =============================

> n. 


>> Tokens are: 
[>, n.] 

>> PoS Tags are: 
[('>', 'X'), ('n.', 'NOUN')] 

>> Dependency Tags are: 
[('>', 'nmod'), ('n.', 'ROOT')]

>> Bigrams: 
[[>, n.]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[> n.]

>> Named Entities are: 
[]


============================ Sentence 440 =============================

A process may request 1st a CD ROM, then tape drive. 


>> Tokens are: 
[process, request, 1st, CD, ROM, ,, tape, drive, .] 

>> PoS Tags are: 
[('process', 'NOUN'), ('request', 'VERB'), ('1st', 'NOUN'), ('CD', 'PROPN'), ('ROM', 'NOUN'), (',', 'PUNCT'), ('tape', 'NOUN'), ('drive', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('process', 'nsubj'), ('request', 'ROOT'), ('1st', 'dobj'), ('CD', 'compound'), ('ROM', 'dobj'), (',', 'punct'), ('tape', 'compound'), ('drive', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[process, request], [request, 1st], [1st, CD], [CD, ROM], [ROM, ,], [,, tape], [tape, drive], [drive, .]]

>> Trigrams: 
[[process, request, 1st], [request, 1st, CD], [1st, CD, ROM], [CD, ROM, ,], [ROM, ,, tape], [,, tape, drive], [tape, drive, .]]

>> Noun Phrases are: 
[A process, 1st, a CD ROM]

>> Named Entities are: 
[('1st', 'DATE'), ('ROM', 'ORG')]


============================ Sentence 441 =============================

But it may not request 1st a tape drive, then CD ROM. 


>> Tokens are: 
[request, 1st, tape, drive, ,, CD, ROM, .] 

>> PoS Tags are: 
[('request', 'VERB'), ('1st', 'NOUN'), ('tape', 'NOUN'), ('drive', 'NOUN'), (',', 'PUNCT'), ('CD', 'NOUN'), ('ROM', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('request', 'ROOT'), ('1st', 'dobj'), ('tape', 'compound'), ('drive', 'dobj'), (',', 'punct'), ('CD', 'compound'), ('ROM', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[request, 1st], [1st, tape], [tape, drive], [drive, ,], [,, CD], [CD, ROM], [ROM, .]]

>> Trigrams: 
[[request, 1st, tape], [1st, tape, drive], [tape, drive, ,], [drive, ,, CD], [,, CD, ROM], [CD, ROM, .]]

>> Noun Phrases are: 
[it, 1st, a tape drive, CD ROM]

>> Named Entities are: 
[('ROM', 'ORG')]


============================ Sentence 442 =============================

Resource graph can never have cycle. 


>> Tokens are: 
[Resource, graph, cycle, .] 

>> PoS Tags are: 
[('Resource', 'NOUN'), ('graph', 'NOUN'), ('cycle', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Resource', 'compound'), ('graph', 'nsubj'), ('cycle', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Resource, graph], [graph, cycle], [cycle, .]]

>> Trigrams: 
[[Resource, graph, cycle], [graph, cycle, .]]

>> Noun Phrases are: 
[Resource graph, cycle]

>> Named Entities are: 
[]


============================ Sentence 443 =============================

    


>> Tokens are: 
[   ] 

>> PoS Tags are: 
[('   ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 444 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 445 =============================

Example Consider a system consisting of four resources of same type that are shared by three processes, each of which needs at most two resources. 


>> Tokens are: 
[Example, Consider, system, consisting, resources, type, shared, processes, ,, needs, resources, .] 

>> PoS Tags are: 
[('Example', 'PROPN'), ('Consider', 'VERB'), ('system', 'NOUN'), ('consisting', 'VERB'), ('resources', 'NOUN'), ('type', 'NOUN'), ('shared', 'VERB'), ('processes', 'NOUN'), (',', 'PUNCT'), ('needs', 'VERB'), ('resources', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'nsubj'), ('Consider', 'ROOT'), ('system', 'dobj'), ('consisting', 'acl'), ('resources', 'pobj'), ('type', 'pobj'), ('shared', 'relcl'), ('processes', 'pobj'), (',', 'punct'), ('needs', 'relcl'), ('resources', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Example, Consider], [Consider, system], [system, consisting], [consisting, resources], [resources, type], [type, shared], [shared, processes], [processes, ,], [,, needs], [needs, resources], [resources, .]]

>> Trigrams: 
[[Example, Consider, system], [Consider, system, consisting], [system, consisting, resources], [consisting, resources, type], [resources, type, shared], [type, shared, processes], [shared, processes, ,], [processes, ,, needs], [,, needs, resources], [needs, resources, .]]

>> Noun Phrases are: 
[Example, a system, four resources, same type, three processes, most two resources]

>> Named Entities are: 
[('four', 'CARDINAL'), ('three', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 446 =============================

Show the system is deadlock free. 


>> Tokens are: 
[system, deadlock, free, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('deadlock', 'NOUN'), ('free', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('deadlock', 'npadvmod'), ('free', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[system, deadlock], [deadlock, free], [free, .]]

>> Trigrams: 
[[system, deadlock, free], [deadlock, free, .]]

>> Noun Phrases are: 
[the system]

>> Named Entities are: 
[]


============================ Sentence 447 =============================

 	Process	Has / Hold	Max required 	A	0	- 	B	1	2 	C	2	7 	Free : 2		  	 


>> Tokens are: 
[ 	, Process, 	, /, Hold, 	, Max, required, 	, 	, 0, 	, -, 	, B, 	, 1, 	, 2, 	, C, 	, 2, 	, 7, 	, Free, :, 2, 		  	] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('2', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('Process', 'compound'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'dobj'), ('0', 'nummod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'conj'), ('2', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct'), ('2', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[ 	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 7], [7, 	], [	, Free], [Free, :], [:, 2], [2, 		  	]]

>> Trigrams: 
[[ 	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :], [Free, :, 2], [:, 2, 		  	]]

>> Noun Phrases are: 
[	Max, 	Free]

>> Named Entities are: 
[('Max', 'PERSON'), ('2', 'CARDINAL')]


============================ Sentence 448 =============================

Process	Has / Hold	Max required 	A	1	2 	B	1	2 	C	1	2 	Total : 4  &   


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 1, 	, 2, 	, B, 	, 1, 	, 2, 	, C, 	, 1, 	, 2, 	, Total, :, 4,  , &,  ] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('Total', 'NOUN'), (':', 'PUNCT'), ('4', 'NUM'), (' ', 'SPACE'), ('&', 'CCONJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'dobj'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'conj'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'compound'), ('Total', 'dobj'), (':', 'punct'), ('4', 'nummod'), (' ', 'appos'), ('&', 'cc'), (' ', 'conj')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, C], [C, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, Total], [Total, :], [:, 4], [4,  ], [ , &], [&,  ]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, C], [	, C, 	], [C, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, Total], [	, Total, :], [Total, :, 4], [:, 4,  ], [4,  , &], [ , &,  ]]

>> Noun Phrases are: 
[Process, 	Max, 	2 	Total]

>> Named Entities are: 
[('Max', 'PERSON'), ('4', 'CARDINAL')]


============================ Sentence 449 =============================

Free : 1		  	Process	Has / Hold	Max required 	A	2	2 	B	1	2 	C	1	2 	Free : 0 


>> Tokens are: 
[Free, :, 1, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 2, 	, 2, 	, B, 	, 1, 	, 2, 	, C, 	, 1, 	, 2, 	, Free, :, 0] 

>> PoS Tags are: 
[('Free', 'ADJ'), (':', 'PUNCT'), ('1', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('Free', 'amod'), (':', 'punct'), ('1', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'npadvmod'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('B', 'nmod'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'nmod'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'compound'), ('Free', 'ccomp'), (':', 'punct'), ('0', 'punct')]

>> Bigrams: 
[[Free, :], [:, 1], [1, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, B], [B, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, C], [C, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, Free], [Free, :], [:, 0]]

>> Trigrams: 
[[Free, :, 1], [:, 1, 		  	], [1, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, B], [	, B, 	], [B, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, C], [	, C, 	], [C, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, Free], [	, Free, :], [Free, :, 0]]

>> Noun Phrases are: 
[	Max]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Max', 'PERSON')]


============================ Sentence 450 =============================

		  	 


>> Tokens are: 
[		  	] 

>> PoS Tags are: 
[('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('\t\t  \t', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 451 =============================

Process	Has / Hold	Max required 	A	0	- 	B	0	- 	C	2	2 	Free : 2		  	 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 0, 	, -, 	, B, 	, 0, 	, -, 	, C, 	, 2, 	, 2, 	, Free, :, 2, 		  	] 

>> PoS Tags are: 
[('Process', 'PROPN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT'), ('2', 'NUM'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'dobj'), ('0', 'nummod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'dobj'), ('2', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'appos'), ('Free', 'dobj'), (':', 'punct'), ('2', 'nummod'), ('\t\t  \t', 'appos')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, Free], [Free, :], [:, 2], [2, 		  	]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, Free], [	, Free, :], [Free, :, 2], [:, 2, 		  	]]

>> Noun Phrases are: 
[Process, 	Max, Free]

>> Named Entities are: 
[('Max', 'PERSON'), ('2', 'CARDINAL')]


============================ Sentence 452 =============================

Process	Has / Hold	Max required 	A	0	- 	B	2	2 	C	7	7 	Free : 


>> Tokens are: 
[Process, 	, /, Hold, 	, Max, required, 	, 	, 0, 	, -, 	, B, 	, 2, 	, 2, 	, C, 	, 7, 	, 7, 	, Free, :] 

>> PoS Tags are: 
[('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('7', 'PROPN'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'dobj'), ('0', 'nummod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'appos'), ('2', 'nummod'), ('\t', 'nmod'), ('2', 'nummod'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('7', 'nummod'), ('\t', 'conj'), ('7', 'nummod'), ('\t', 'compound'), ('Free', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, B], [B, 	], [	, 2], [2, 	], [	, 2], [2, 	], [	, C], [C, 	], [	, 7], [7, 	], [	, 7], [7, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, B], [	, B, 	], [B, 	, 2], [	, 2, 	], [2, 	, 2], [	, 2, 	], [2, 	, C], [	, C, 	], [C, 	, 7], [	, 7, 	], [7, 	, 7], [	, 7, 	], [7, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[Process, 	Max, 	Free]

>> Named Entities are: 
[('Max', 'PERSON')]


============================ Sentence 453 =============================

1		  	Process	Has / Hold	Max required 	A	0	- 	B	0	- 	C	1	2 	Free : 


>> Tokens are: 
[1, 		  	, Process, 	, /, Hold, 	, Max, required, 	, 	, 0, 	, -, 	, B, 	, 0, 	, -, 	, C, 	, 1, 	, 2, 	, Free, :] 

>> PoS Tags are: 
[('1', 'NUM'), ('\t\t  \t', 'SPACE'), ('Process', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('Hold', 'VERB'), ('\t', 'SPACE'), ('Max', 'PROPN'), ('required', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('-', 'PUNCT'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('Free', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('1', 'nummod'), ('\t\t  \t', 'compound'), ('Process', 'nsubj'), ('\t', 'nsubj'), ('/', 'punct'), ('Hold', 'ROOT'), ('\t', 'compound'), ('Max', 'nsubj'), ('required', 'ccomp'), ('\t', 'nmod'), ('\t', 'dobj'), ('0', 'nummod'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'dobj'), ('0', 'punct'), ('\t', 'compound'), ('-', 'punct'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'compound'), ('Free', 'ccomp'), (':', 'punct')]

>> Bigrams: 
[[1, 		  	], [		  	, Process], [Process, 	], [	, /], [/, Hold], [Hold, 	], [	, Max], [Max, required], [required, 	], [	, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, B], [B, 	], [	, 0], [0, 	], [	, -], [-, 	], [	, C], [C, 	], [	, 1], [1, 	], [	, 2], [2, 	], [	, Free], [Free, :]]

>> Trigrams: 
[[1, 		  	, Process], [		  	, Process, 	], [Process, 	, /], [	, /, Hold], [/, Hold, 	], [Hold, 	, Max], [	, Max, required], [Max, required, 	], [required, 	, 	], [	, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, B], [	, B, 	], [B, 	, 0], [	, 0, 	], [0, 	, -], [	, -, 	], [-, 	, C], [	, C, 	], [C, 	, 1], [	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, Free], [	, Free, :]]

>> Noun Phrases are: 
[1		  	Process, 	Max]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Max', 'PERSON')]


============================ Sentence 454 =============================

3		      


>> Tokens are: 
[3, 		     ] 

>> PoS Tags are: 
[('3', 'NUM'), ('\t\t     ', 'SPACE')] 

>> Dependency Tags are: 
[('3', 'quantmod'), ('\t\t     ', 'ROOT')]

>> Bigrams: 
[[3, 		     ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 455 =============================

Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 456 =============================

Questions asked in GTU What is RAG? 


>> Tokens are: 
[Questions, asked, GTU, RAG, ?] 

>> PoS Tags are: 
[('Questions', 'NOUN'), ('asked', 'VERB'), ('GTU', 'NOUN'), ('RAG', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Questions', 'nsubj'), ('asked', 'ROOT'), ('GTU', 'pobj'), ('RAG', 'attr'), ('?', 'punct')]

>> Bigrams: 
[[Questions, asked], [asked, GTU], [GTU, RAG], [RAG, ?]]

>> Trigrams: 
[[Questions, asked, GTU], [asked, GTU, RAG], [GTU, RAG, ?]]

>> Noun Phrases are: 
[Questions, GTU, What, RAG]

>> Named Entities are: 
[('RAG', 'PERSON')]


============================ Sentence 457 =============================

Explain briefly. 


>> Tokens are: 
[Explain, briefly, .] 

>> PoS Tags are: 
[('Explain', 'VERB'), ('briefly', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Explain', 'ROOT'), ('briefly', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Explain, briefly], [briefly, .]]

>> Trigrams: 
[[Explain, briefly, .]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 458 =============================

What is Deadlock? 


>> Tokens are: 
[Deadlock, ?] 

>> PoS Tags are: 
[('Deadlock', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Deadlock', 'nsubj'), ('?', 'punct')]

>> Bigrams: 
[[Deadlock, ?]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[What, Deadlock]

>> Named Entities are: 
[('Deadlock', 'PERSON')]


============================ Sentence 459 =============================

List the conditions that lead to deadlock. 


>> Tokens are: 
[List, conditions, lead, deadlock, .] 

>> PoS Tags are: 
[('List', 'VERB'), ('conditions', 'NOUN'), ('lead', 'VERB'), ('deadlock', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('List', 'ROOT'), ('conditions', 'dobj'), ('lead', 'relcl'), ('deadlock', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[List, conditions], [conditions, lead], [lead, deadlock], [deadlock, .]]

>> Trigrams: 
[[List, conditions, lead], [conditions, lead, deadlock], [lead, deadlock, .]]

>> Noun Phrases are: 
[the conditions]

>> Named Entities are: 
[]


============================ Sentence 460 =============================

How Deadlock can be prevented? 


>> Tokens are: 
[Deadlock, prevented, ?] 

>> PoS Tags are: 
[('Deadlock', 'PROPN'), ('prevented', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Deadlock', 'nsubjpass'), ('prevented', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[Deadlock, prevented], [prevented, ?]]

>> Trigrams: 
[[Deadlock, prevented, ?]]

>> Noun Phrases are: 
[Deadlock]

>> Named Entities are: 
[]


============================ Sentence 461 =============================

Which are the necessary conditions for Deadlock? 


>> Tokens are: 
[necessary, conditions, Deadlock, ?] 

>> PoS Tags are: 
[('necessary', 'ADJ'), ('conditions', 'NOUN'), ('Deadlock', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('necessary', 'amod'), ('conditions', 'attr'), ('Deadlock', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[necessary, conditions], [conditions, Deadlock], [Deadlock, ?]]

>> Trigrams: 
[[necessary, conditions, Deadlock], [conditions, Deadlock, ?]]

>> Noun Phrases are: 
[the necessary conditions, Deadlock]

>> Named Entities are: 
[('Deadlock', 'PERSON')]


============================ Sentence 462 =============================

Explain Deadlock recovery in brief. 


>> Tokens are: 
[Explain, Deadlock, recovery, brief, .] 

>> PoS Tags are: 
[('Explain', 'VERB'), ('Deadlock', 'PROPN'), ('recovery', 'NOUN'), ('brief', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Explain', 'ROOT'), ('Deadlock', 'compound'), ('recovery', 'dobj'), ('brief', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Explain, Deadlock], [Deadlock, recovery], [recovery, brief], [brief, .]]

>> Trigrams: 
[[Explain, Deadlock, recovery], [Deadlock, recovery, brief], [recovery, brief, .]]

>> Noun Phrases are: 
[Deadlock recovery, brief]

>> Named Entities are: 
[]


============================ Sentence 463 =============================

Consider the snapshot of the system with Five Processes and Four types of resources A,B,C,D. Currently available set of resources is  (1,5,2,0). 


>> Tokens are: 
[Consider, snapshot, system, Processes, types, resources, ,, B, ,, C, ,, D., Currently, available, set, resources,  , (, 1,5,2,0, ), .] 

>> PoS Tags are: 
[('Consider', 'VERB'), ('snapshot', 'NOUN'), ('system', 'NOUN'), ('Processes', 'PROPN'), ('types', 'NOUN'), ('resources', 'NOUN'), (',', 'PUNCT'), ('B', 'PROPN'), (',', 'PUNCT'), ('C', 'PROPN'), (',', 'PUNCT'), ('D.', 'PROPN'), ('Currently', 'PROPN'), ('available', 'ADJ'), ('set', 'NOUN'), ('resources', 'NOUN'), (' ', 'SPACE'), ('(', 'PUNCT'), ('1,5,2,0', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consider', 'ROOT'), ('snapshot', 'dobj'), ('system', 'pobj'), ('Processes', 'pobj'), ('types', 'conj'), ('resources', 'nmod'), (',', 'punct'), ('B', 'conj'), (',', 'punct'), ('C', 'conj'), (',', 'punct'), ('D.', 'nmod'), ('Currently', 'advmod'), ('available', 'amod'), ('set', 'appos'), ('resources', 'pobj'), (' ', 'attr'), ('(', 'punct'), ('1,5,2,0', 'appos'), (')', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Consider, snapshot], [snapshot, system], [system, Processes], [Processes, types], [types, resources], [resources, ,], [,, B], [B, ,], [,, C], [C, ,], [,, D.], [D., Currently], [Currently, available], [available, set], [set, resources], [resources,  ], [ , (], [(, 1,5,2,0], [1,5,2,0, )], [), .]]

>> Trigrams: 
[[Consider, snapshot, system], [snapshot, system, Processes], [system, Processes, types], [Processes, types, resources], [types, resources, ,], [resources, ,, B], [,, B, ,], [B, ,, C], [,, C, ,], [C, ,, D.], [,, D., Currently], [D., Currently, available], [Currently, available, set], [available, set, resources], [set, resources,  ], [resources,  , (], [ , (, 1,5,2,0], [(, 1,5,2,0, )], [1,5,2,0, ), .]]

>> Noun Phrases are: 
[the snapshot, the system, Five Processes, Four types, resources A, B, C, D. Currently available set, resources]

>> Named Entities are: 
[('Five Processes', 'ORG'), ('Four', 'CARDINAL'), ('D.', 'NORP')]


============================ Sentence 464 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 465 =============================

Answer the following Questions using  bankers algorithm. 


>> Tokens are: 
[Answer, following, Questions,  , bankers, algorithm, .] 

>> PoS Tags are: 
[('Answer', 'VERB'), ('following', 'VERB'), ('Questions', 'NOUN'), (' ', 'SPACE'), ('bankers', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Answer', 'ROOT'), ('following', 'amod'), ('Questions', 'dobj'), (' ', 'compound'), ('bankers', 'dobj'), ('algorithm', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[Answer, following], [following, Questions], [Questions,  ], [ , bankers], [bankers, algorithm], [algorithm, .]]

>> Trigrams: 
[[Answer, following, Questions], [following, Questions,  ], [Questions,  , bankers], [ , bankers, algorithm], [bankers, algorithm, .]]

>> Noun Phrases are: 
[the following Questions,  bankers]

>> Named Entities are: 
[]


============================ Sentence 466 =============================

Find the content of Need Matrix. 


>> Tokens are: 
[Find, content, Need, Matrix, .] 

>> PoS Tags are: 
[('Find', 'VERB'), ('content', 'NOUN'), ('Need', 'PROPN'), ('Matrix', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Find', 'ROOT'), ('content', 'dobj'), ('Need', 'compound'), ('Matrix', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Find, content], [content, Need], [Need, Matrix], [Matrix, .]]

>> Trigrams: 
[[Find, content, Need], [content, Need, Matrix], [Need, Matrix, .]]

>> Noun Phrases are: 
[the content, Need Matrix]

>> Named Entities are: 
[]


============================ Sentence 467 =============================

Is the System in Safe State? 


>> Tokens are: 
[System, Safe, State, ?] 

>> PoS Tags are: 
[('System', 'PROPN'), ('Safe', 'PROPN'), ('State', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('System', 'nsubj'), ('Safe', 'compound'), ('State', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[System, Safe], [Safe, State], [State, ?]]

>> Trigrams: 
[[System, Safe, State], [Safe, State, ?]]

>> Noun Phrases are: 
[the System, Safe State]

>> Named Entities are: 
[]


============================ Sentence 468 =============================

If request from Process P1 arrives  for (0,4,2,0) can the request  be granted immediately 	Allocation						Max			 	Process	A	B	C	D		A	B	C	D 	P0	0 


>> Tokens are: 
[request, Process, P1, arrives,  , (, 0,4,2,0, ), request,  , granted, immediately, 	, Allocation, 						, Max, 			 	, Process, 	, 	, B, 	, C, 	, D, 		, 	, B, 	, C, 	, D, 	, P0, 	, 0] 

>> PoS Tags are: 
[('request', 'NOUN'), ('Process', 'PROPN'), ('P1', 'PROPN'), ('arrives', 'VERB'), (' ', 'SPACE'), ('(', 'PUNCT'), ('0,4,2,0', 'NUM'), (')', 'PUNCT'), ('request', 'NOUN'), (' ', 'SPACE'), ('granted', 'VERB'), ('immediately', 'ADV'), ('\t', 'SPACE'), ('Allocation', 'PROPN'), ('\t\t\t\t\t\t', 'SPACE'), ('Max', 'PROPN'), ('\t\t\t \t', 'SPACE'), ('Process', 'PROPN'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t\t', 'SPACE'), ('\t', 'SPACE'), ('B', 'PROPN'), ('\t', 'SPACE'), ('C', 'PROPN'), ('\t', 'SPACE'), ('D', 'PROPN'), ('\t', 'SPACE'), ('P0', 'PROPN'), ('\t', 'SPACE'), ('0', 'PUNCT')] 

>> Dependency Tags are: 
[('request', 'nsubj'), ('Process', 'compound'), ('P1', 'pobj'), ('arrives', 'advcl'), (' ', 'dobj'), ('(', 'punct'), ('0,4,2,0', 'pobj'), (')', 'punct'), ('request', 'nsubjpass'), (' ', 'nsubjpass'), ('granted', 'ROOT'), ('immediately', 'advmod'), ('\t', 'compound'), ('Allocation', 'compound'), ('\t\t\t\t\t\t', 'compound'), ('Max', 'compound'), ('\t\t\t \t', 'compound'), ('Process', 'nmod'), ('\t', 'appos'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'compound'), ('D', 'dative'), ('\t\t', 'advcl'), ('\t', 'compound'), ('B', 'compound'), ('\t', 'compound'), ('C', 'compound'), ('\t', 'compound'), ('D', 'compound'), ('\t', 'compound'), ('P0', 'compound'), ('\t', 'dobj'), ('0', 'nummod')]

>> Bigrams: 
[[request, Process], [Process, P1], [P1, arrives], [arrives,  ], [ , (], [(, 0,4,2,0], [0,4,2,0, )], [), request], [request,  ], [ , granted], [granted, immediately], [immediately, 	], [	, Allocation], [Allocation, 						], [						, Max], [Max, 			 	], [			 	, Process], [Process, 	], [	, 	], [	, B], [B, 	], [	, C], [C, 	], [	, D], [D, 		], [		, 	], [	, B], [B, 	], [	, C], [C, 	], [	, D], [D, 	], [	, P0], [P0, 	], [	, 0]]

>> Trigrams: 
[[request, Process, P1], [Process, P1, arrives], [P1, arrives,  ], [arrives,  , (], [ , (, 0,4,2,0], [(, 0,4,2,0, )], [0,4,2,0, ), request], [), request,  ], [request,  , granted], [ , granted, immediately], [granted, immediately, 	], [immediately, 	, Allocation], [	, Allocation, 						], [Allocation, 						, Max], [						, Max, 			 	], [Max, 			 	, Process], [			 	, Process, 	], [Process, 	, 	], [	, 	, B], [	, B, 	], [B, 	, C], [	, C, 	], [C, 	, D], [	, D, 		], [D, 		, 	], [		, 	, B], [	, B, 	], [B, 	, C], [	, C, 	], [C, 	, D], [	, D, 	], [D, 	, P0], [	, P0, 	], [P0, 	, 0]]

>> Noun Phrases are: 
[request, Process P1, the request, 	Allocation						Max			 	Process	A	B	C	D]

>> Named Entities are: 
[]


============================ Sentence 469 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 470 =============================

	1	2		0 


>> Tokens are: 
[	, 1, 	, 2, 		, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('1', 'nummod'), ('\t', 'appos'), ('2', 'nummod'), ('\t\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 2], [2, 		], [		, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 2], [	, 2, 		], [2, 		, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('0', 'CARDINAL')]


============================ Sentence 471 =============================

	0 


>> Tokens are: 
[	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('0', 'punct')]

>> Bigrams: 
[[	, 0]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 472 =============================

	1	2 	P1	1	0	0 


>> Tokens are: 
[	, 1, 	, 2, 	, P1, 	, 1, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P1', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('1', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'appos'), ('P1', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'dobj'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 2], [2, 	], [	, P1], [P1, 	], [	, 1], [1, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 2], [	, 2, 	], [2, 	, P1], [	, P1, 	], [P1, 	, 1], [	, 1, 	], [1, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 473 =============================

	0		1	7	5	0 	P2	1	3	5	4		2 


>> Tokens are: 
[	, 0, 		, 1, 	, 7, 	, 5, 	, 0, 	, P2, 	, 1, 	, 3, 	, 5, 	, 4, 		, 2] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('0', 'NUM'), ('\t\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('7', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('0', 'PUNCT'), ('\t', 'SPACE'), ('P2', 'PROPN'), ('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t\t', 'SPACE'), ('2', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'quantmod'), ('0', 'punct'), ('\t\t', 'quantmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('7', 'nummod'), ('\t', 'compound'), ('5', 'appos'), ('\t', 'conj'), ('0', 'punct'), ('\t', 'compound'), ('P2', 'compound'), ('\t', 'appos'), ('1', 'nummod'), ('\t', 'nmod'), ('3', 'nummod'), ('\t', 'conj'), ('5', 'nummod'), ('\t', 'quantmod'), ('4', 'quantmod'), ('\t\t', 'quantmod'), ('2', 'nummod')]

>> Bigrams: 
[[	, 0], [0, 		], [		, 1], [1, 	], [	, 7], [7, 	], [	, 5], [5, 	], [	, 0], [0, 	], [	, P2], [P2, 	], [	, 1], [1, 	], [	, 3], [3, 	], [	, 5], [5, 	], [	, 4], [4, 		], [		, 2]]

>> Trigrams: 
[[	, 0, 		], [0, 		, 1], [		, 1, 	], [1, 	, 7], [	, 7, 	], [7, 	, 5], [	, 5, 	], [5, 	, 0], [	, 0, 	], [0, 	, P2], [	, P2, 	], [P2, 	, 1], [	, 1, 	], [1, 	, 3], [	, 3, 	], [3, 	, 5], [	, 5, 	], [5, 	, 4], [	, 4, 		], [4, 		, 2]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 474 =============================

	3	5	6 	P3	0 


>> Tokens are: 
[	, 3, 	, 5, 	, 6, 	, P3, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('P3', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('3', 'punct'), ('\t', 'nmod'), ('5', 'nummod'), ('\t', 'nmod'), ('6', 'nummod'), ('\t', 'compound'), ('P3', 'appos'), ('\t', 'appos'), ('0', 'punct')]

>> Bigrams: 
[[	, 3], [3, 	], [	, 5], [5, 	], [	, 6], [6, 	], [	, P3], [P3, 	], [	, 0]]

>> Trigrams: 
[[	, 3, 	], [3, 	, 5], [	, 5, 	], [5, 	, 6], [	, 6, 	], [6, 	, P3], [	, P3, 	], [P3, 	, 0]]

>> Noun Phrases are: 
[3	5	6 	P3]

>> Named Entities are: 
[]


============================ Sentence 475 =============================

	6	3	2		0 


>> Tokens are: 
[	, 6, 	, 3, 	, 2, 		, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('3', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('6', 'nummod'), ('\t', 'appos'), ('3', 'nummod'), ('\t', 'conj'), ('2', 'nummod'), ('\t\t', 'appos'), ('0', 'appos')]

>> Bigrams: 
[[	, 6], [6, 	], [	, 3], [3, 	], [	, 2], [2, 		], [		, 0]]

>> Trigrams: 
[[	, 6, 	], [6, 	, 3], [	, 3, 	], [3, 	, 2], [	, 2, 		], [2, 		, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('0', 'CARDINAL')]


============================ Sentence 476 =============================

	6	5	2 	P4	0	0 


>> Tokens are: 
[	, 6, 	, 5, 	, 2, 	, P4, 	, 0, 	, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('2', 'NUM'), ('\t', 'SPACE'), ('P4', 'PROPN'), ('\t', 'SPACE'), ('0', 'NUM'), ('\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('6', 'nummod'), ('\t', 'conj'), ('5', 'nummod'), ('\t', 'compound'), ('2', 'compound'), ('\t', 'compound'), ('P4', 'compound'), ('\t', 'appos'), ('0', 'punct'), ('\t', 'conj'), ('0', 'punct')]

>> Bigrams: 
[[	, 6], [6, 	], [	, 5], [5, 	], [	, 2], [2, 	], [	, P4], [P4, 	], [	, 0], [0, 	], [	, 0]]

>> Trigrams: 
[[	, 6, 	], [6, 	, 5], [	, 5, 	], [5, 	, 2], [	, 2, 	], [2, 	, P4], [	, P4, 	], [P4, 	, 0], [	, 0, 	], [0, 	, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 477 =============================

	1	4		0 


>> Tokens are: 
[	, 1, 	, 4, 		, 0] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('1', 'NUM'), ('\t', 'SPACE'), ('4', 'NUM'), ('\t\t', 'SPACE'), ('0', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('1', 'nummod'), ('\t', 'ROOT'), ('4', 'punct'), ('\t\t', 'prep'), ('0', 'punct')]

>> Bigrams: 
[[	, 1], [1, 	], [	, 4], [4, 		], [		, 0]]

>> Trigrams: 
[[	, 1, 	], [1, 	, 4], [	, 4, 		], [4, 		, 0]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 478 =============================

	6	5	6     Prof. Firoz A Sherasiya #3140702 (OS)    Unit 5 – Deadlock ‹#›   


>> Tokens are: 
[	, 6, 	, 5, 	, 6,     , Prof., Firoz, Sherasiya, #, 3140702, (, OS, ),   , , Unit, 5, –, Deadlock, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('6', 'NUM'), ('\t', 'SPACE'), ('5', 'NUM'), ('\t', 'SPACE'), ('6', 'NUM'), ('    ', 'SPACE'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('#', 'NOUN'), ('3140702', 'NUM'), ('(', 'PUNCT'), ('OS', 'NOUN'), (')', 'PUNCT'), ('  ', 'SPACE'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('5', 'NUM'), ('–', 'PUNCT'), ('Deadlock', 'PROPN'), ('‹#›', 'PART'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'dep'), ('6', 'nummod'), ('\t', 'nmod'), ('5', 'nummod'), ('\t', 'conj'), ('6', 'nummod'), ('    ', 'nummod'), ('Prof.', 'compound'), ('Firoz', 'ROOT'), ('Sherasiya', 'appos'), ('#', 'nmod'), ('3140702', 'appos'), ('(', 'punct'), ('OS', 'appos'), (')', 'punct'), ('  ', 'appos'), ('\uf077', 'advmod'), ('Unit', 'appos'), ('5', 'nummod'), ('–', 'punct'), ('Deadlock', 'appos'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, 6], [6, 	], [	, 5], [5, 	], [	, 6], [6,     ], [    , Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya, #], [#, 3140702], [3140702, (], [(, OS], [OS, )], [),   ], [  , ], [, Unit], [Unit, 5], [5, –], [–, Deadlock], [Deadlock, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, 6, 	], [6, 	, 5], [	, 5, 	], [5, 	, 6], [	, 6,     ], [6,     , Prof.], [    , Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya, #], [Sherasiya, #, 3140702], [#, 3140702, (], [3140702, (, OS], [(, OS, )], [OS, ),   ], [),   , ], [  , , Unit], [, Unit, 5], [Unit, 5, –], [5, –, Deadlock], [–, Deadlock, ‹#›], [Deadlock, ‹#›,  ]]

>> Noun Phrases are: 
[	6	5	6     Prof. Firoz, A Sherasiya, (OS, Unit, Deadlock]

>> Named Entities are: 
[('Firoz', 'PERSON')]


============================ Sentence 479 =============================

Database Management Systems (DBMS) GTU # 3130703 firoz.sherasiya@darshan.ac.in 9879879861 


>> Tokens are: 
[Database, Management, Systems, (, DBMS, ), GTU, #, 3130703, firoz.sherasiya@darshan.ac.in, 9879879861] 

>> PoS Tags are: 
[('Database', 'PROPN'), ('Management', 'PROPN'), ('Systems', 'PROPN'), ('(', 'PUNCT'), ('DBMS', 'PROPN'), (')', 'PUNCT'), ('GTU', 'NOUN'), ('#', 'SYM'), ('3130703', 'NUM'), ('firoz.sherasiya@darshan.ac.in', 'NUM'), ('9879879861', 'NUM')] 

>> Dependency Tags are: 
[('Database', 'compound'), ('Management', 'compound'), ('Systems', 'nmod'), ('(', 'punct'), ('DBMS', 'appos'), (')', 'punct'), ('GTU', 'ROOT'), ('#', 'appos'), ('3130703', 'nummod'), ('firoz.sherasiya@darshan.ac.in', 'appos'), ('9879879861', 'punct')]

>> Bigrams: 
[[Database, Management], [Management, Systems], [Systems, (], [(, DBMS], [DBMS, )], [), GTU], [GTU, #], [#, 3130703], [3130703, firoz.sherasiya@darshan.ac.in], [firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Trigrams: 
[[Database, Management, Systems], [Management, Systems, (], [Systems, (, DBMS], [(, DBMS, )], [DBMS, ), GTU], [), GTU, #], [GTU, #, 3130703], [#, 3130703, firoz.sherasiya@darshan.ac.in], [3130703, firoz.sherasiya@darshan.ac.in, 9879879861]]

>> Noun Phrases are: 
[DBMS]

>> Named Entities are: 
[('DBMS', 'ORG')]


============================ Sentence 480 =============================

Computer Engineering Department Prof. Firoz A Sherasiya   Darshan Institute of Engineering & Technology, Rajkot    Thank You                                  /docProps/thumbnail.jpeg 


>> Tokens are: 
[Computer, Engineering, Department, Prof., Firoz, Sherasiya,   , Darshan, Institute, Engineering, &, Technology, ,, Rajkot,    , Thank,                                  , /docProps, /, thumbnail.jpeg] 

>> PoS Tags are: 
[('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Firoz', 'PROPN'), ('Sherasiya', 'PROPN'), ('  ', 'SPACE'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('   ', 'SPACE'), ('Thank', 'VERB'), ('                                 ', 'SPACE'), ('/docProps', 'X'), ('/', 'SYM'), ('thumbnail.jpeg', 'NOUN')] 

>> Dependency Tags are: 
[('Computer', 'compound'), ('Engineering', 'compound'), ('Department', 'compound'), ('Prof.', 'compound'), ('Firoz', 'compound'), ('Sherasiya', 'nsubj'), ('  ', 'appos'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), (',', 'punct'), ('Rajkot', 'appos'), ('   ', 'nummod'), ('Thank', 'ROOT'), ('                                 ', 'npadvmod'), ('/docProps', 'punct'), ('/', 'punct'), ('thumbnail.jpeg', 'npadvmod')]

>> Bigrams: 
[[Computer, Engineering], [Engineering, Department], [Department, Prof.], [Prof., Firoz], [Firoz, Sherasiya], [Sherasiya,   ], [  , Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ,], [,, Rajkot], [Rajkot,    ], [   , Thank], [Thank,                                  ], [                                 , /docProps], [/docProps, /], [/, thumbnail.jpeg]]

>> Trigrams: 
[[Computer, Engineering, Department], [Engineering, Department, Prof.], [Department, Prof., Firoz], [Prof., Firoz, Sherasiya], [Firoz, Sherasiya,   ], [Sherasiya,   , Darshan], [  , Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ,], [Technology, ,, Rajkot], [,, Rajkot,    ], [Rajkot,    , Thank], [   , Thank,                                  ], [Thank,                                  , /docProps], [                                 , /docProps, /], [/docProps, /, thumbnail.jpeg]]

>> Noun Phrases are: 
[Computer Engineering Department Prof. Firoz A Sherasiya, Darshan Institute, Engineering, Technology, Rajkot, You]

>> Named Entities are: 
[('Firoz', 'PERSON'), ('Darshan Institute of Engineering & Technology', 'ORG')]
