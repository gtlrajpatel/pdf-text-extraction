

========================== Sentence 1 ===========================

 Power 

Tokens are: 
>> ['Power'] 

 UPOS tags are: 
>> [('Power', 'NOUN')] 

 XPOS tags are: 
>> [('Power', 'NN')] 

 Lemmas are: 
>> [('Power', 'power')] 

 Dependency tags are: 
>> [(('Power', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 Point Presentation  Unit – 3 Parsing Theory (I) dixita.kagathara@darshan.ac.in +91 - 97277 47317 (CE Department) Computer Engineering Department Prof. Dixita B. Kagathara Compiler Design (CD) GTU # 2170701   Darshan Institute of Engineering & Technology, Rajkot     Looping Topics to be covered  Role of parser Context free grammar Derivation & Ambiguity Left recursion & Left factoring Classification of parsing Backtracking LL(1) parsing Recursive descent paring Shift reduce parsing Operator precedence parsing LR parsing             Role of Parser        Role of parser  Parser obtains a string of token from the lexical analyzer and reports  syntax error if any otherwise generates syntax tree. 

Tokens are: 
>> ['Point', 'Presentation', 'Unit', '–', '3', 'Parsing', 'Theory', '(', 'I', ')', 'dixita.kagathara@darshan.ac.in', '+91', '-', '97277', '47317', '(', 'CE', 'Department', ')', 'Computer', 'Engineering', 'Department', 'Prof.', 'Dixita', 'B.', 'Kagathara', 'Compiler', 'Design', '(', 'CD', ')', 'GTU', '#', '2170701', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', ',', 'Rajkot', '\uf050', 'Looping', 'Topics', 'to', 'be', 'covered', 'Role', 'of', 'parser', 'Context', 'free', 'grammar', 'Derivation', '&', 'Ambiguity', 'Left', 'recursion', '&', 'Left', 'factoring', 'Classification', 'of', 'parsing', 'Backtracking', 'LL', '(', '1', ')', 'parsing', 'Recursive', 'descent', 'paring', 'Shift', 'reduce', 'parsing', 'Operator', 'precedence', 'parsing', 'LR', 'parsing', 'Role', 'of', 'Parser', 'Role', 'of', 'parser', 'Parser', 'obtains', 'a', 'string', 'of', 'token', 'from', 'the', 'lexical', 'analyzer', 'and', 'reports', 'syntax', 'error', 'if', 'any', 'otherwise', 'generates', 'syntax', 'tree', '.'] 

 UPOS tags are: 
>> [('Point', 'NOUN'), ('Presentation', 'NOUN'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('dixita.kagathara@darshan.ac.in', 'X'), ('+91', 'NUM'), ('-', 'SYM'), ('97277', 'NUM'), ('47317', 'NUM'), ('(', 'PUNCT'), ('CE', 'PROPN'), ('Department', 'PROPN'), (')', 'PUNCT'), ('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('Department', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B.', 'PROPN'), ('Kagathara', 'PROPN'), ('Compiler', 'PROPN'), ('Design', 'PROPN'), ('(', 'PUNCT'), ('CD', 'PROPN'), (')', 'PUNCT'), ('GTU', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), (',', 'PUNCT'), ('Rajkot', 'PROPN'), ('\uf050', 'PUNCT'), ('Looping', 'PROPN'), ('Topics', 'PROPN'), ('to', 'PART'), ('be', 'AUX'), ('covered', 'VERB'), ('Role', 'NOUN'), ('of', 'ADP'), ('parser', 'NOUN'), ('Context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('Derivation', 'NOUN'), ('&', 'CCONJ'), ('Ambiguity', 'NOUN'), ('Left', 'VERB'), ('recursion', 'NOUN'), ('&', 'CCONJ'), ('Left', 'VERB'), ('factoring', 'VERB'), ('Classification', 'NOUN'), ('of', 'SCONJ'), ('parsing', 'VERB'), ('Backtracking', 'PROPN'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'VERB'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('paring', 'NOUN'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'PROPN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Role', 'PROPN'), ('of', 'ADP'), ('Parser', 'PROPN'), ('Role', 'PROPN'), ('of', 'ADP'), ('parser', 'NOUN'), ('Parser', 'PROPN'), ('obtains', 'VERB'), ('a', 'DET'), ('string', 'NOUN'), ('of', 'ADP'), ('token', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('lexical', 'ADJ'), ('analyzer', 'NOUN'), ('and', 'CCONJ'), ('reports', 'VERB'), ('syntax', 'NOUN'), ('error', 'NOUN'), ('if', 'SCONJ'), ('any', 'DET'), ('otherwise', 'ADV'), ('generates', 'VERB'), ('syntax', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Point', 'NN'), ('Presentation', 'NN'), ('Unit', 'NN'), ('–', ':'), ('3', 'CD'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('dixita.kagathara@darshan.ac.in', 'ADD'), ('+91', 'CD'), ('-', 'SYM'), ('97277', 'CD'), ('47317', 'CD'), ('(', '-LRB-'), ('CE', 'NNP'), ('Department', 'NNP'), (')', '-RRB-'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B.', 'NNP'), ('Kagathara', 'NNP'), ('Compiler', 'NNP'), ('Design', 'NNP'), ('(', '-LRB-'), ('CD', 'NNP'), (')', '-RRB-'), ('GTU', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('\uf050', ','), ('Looping', 'NNP'), ('Topics', 'NNPS'), ('to', 'TO'), ('be', 'VB'), ('covered', 'VBN'), ('Role', 'NN'), ('of', 'IN'), ('parser', 'NN'), ('Context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('Derivation', 'NN'), ('&', 'CC'), ('Ambiguity', 'NN'), ('Left', 'VBN'), ('recursion', 'NN'), ('&', 'CC'), ('Left', 'VBN'), ('factoring', 'VBG'), ('Classification', 'NN'), ('of', 'IN'), ('parsing', 'VBG'), ('Backtracking', 'NNP'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'VBG'), ('Recursive', 'JJ'), ('descent', 'NN'), ('paring', 'NN'), ('Shift', 'NN'), ('reduce', 'NN'), ('parsing', 'NN'), ('Operator', 'NNP'), ('precedence', 'NN'), ('parsing', 'NN'), ('LR', 'NN'), ('parsing', 'NN'), ('Role', 'NNP'), ('of', 'IN'), ('Parser', 'NNP'), ('Role', 'NNP'), ('of', 'IN'), ('parser', 'NN'), ('Parser', 'NNP'), ('obtains', 'VBZ'), ('a', 'DT'), ('string', 'NN'), ('of', 'IN'), ('token', 'NN'), ('from', 'IN'), ('the', 'DT'), ('lexical', 'JJ'), ('analyzer', 'NN'), ('and', 'CC'), ('reports', 'VBZ'), ('syntax', 'NN'), ('error', 'NN'), ('if', 'IN'), ('any', 'DT'), ('otherwise', 'RB'), ('generates', 'VBZ'), ('syntax', 'NN'), ('tree', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Point', 'point'), ('Presentation', 'presentation'), ('Unit', 'unit'), ('–', '-'), ('3', '3'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('dixita.kagathara@darshan.ac.in', 'dixita.kagathara@darshan.ac.in'), ('+91', '+91'), ('-', '-'), ('97277', '97277'), ('47317', '47317'), ('(', '('), ('CE', 'CE'), ('Department', 'Department'), (')', ')'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B.', 'B.'), ('Kagathara', 'Kagathara'), ('Compiler', 'Compiler'), ('Design', 'Design'), ('(', '('), ('CD', 'CD'), (')', ')'), ('GTU', 'GTU'), ('#', '#'), ('2170701', '2170701'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('\uf050', "''"), ('Looping', 'Looping'), ('Topics', 'topic'), ('to', 'to'), ('be', 'be'), ('covered', 'cover'), ('Role', 'role'), ('of', 'of'), ('parser', 'parser'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Derivation', 'derivation'), ('&', '&'), ('Ambiguity', 'ambiguity'), ('Left', 'Left'), ('recursion', 'recursion'), ('&', '&'), ('Left', 'Left'), ('factoring', 'factor'), ('Classification', 'classification'), ('of', 'of'), ('parsing', 'parse'), ('Backtracking', 'Backtracking'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parse'), ('Recursive', 'recursive'), ('descent', 'descent'), ('paring', 'paring'), ('Shift', 'shift'), ('reduce', 'reduce'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('LR', 'lr'), ('parsing', 'parsing'), ('Role', 'Role'), ('of', 'of'), ('Parser', 'Parser'), ('Role', 'Role'), ('of', 'of'), ('parser', 'parser'), ('Parser', 'Parser'), ('obtains', 'obtain'), ('a', 'a'), ('string', 'string'), ('of', 'of'), ('token', 'token'), ('from', 'from'), ('the', 'the'), ('lexical', 'lexical'), ('analyzer', 'analyzer'), ('and', 'and'), ('reports', 'report'), ('syntax', 'syntax'), ('error', 'error'), ('if', 'if'), ('any', 'any'), ('otherwise', 'otherwise'), ('generates', 'generate'), ('syntax', 'syntax'), ('tree', 'tree'), ('.', '.')] 

 Dependency tags are: 
>> [(('Point', 'Presentation'), 'compound'), (('Presentation', 'Unit'), 'compound'), (('Unit', 'root'), 'root'), (('–', 'Unit'), 'punct'), (('3', 'Theory'), 'nummod'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'dep'), ((')', 'I'), 'punct'), (('dixita.kagathara@darshan.ac.in', 'Unit'), 'appos'), (('+91', 'dixita.kagathara@darshan.ac.in'), 'dep'), (('-', '97277'), 'case'), (('97277', '+91'), 'nmod'), (('47317', 'Department'), 'dep'), (('(', 'Department'), 'punct'), (('CE', 'Department'), 'compound'), (('Department', '+91'), 'appos'), ((')', 'Department'), 'punct'), (('Computer', 'Department'), 'compound'), (('Engineering', 'Department'), 'compound'), (('Department', 'Unit'), 'conj'), (('Prof.', 'Unit'), 'conj'), (('Dixita', 'Prof.'), 'flat'), (('B.', 'Prof.'), 'flat'), (('Kagathara', 'Design'), 'compound'), (('Compiler', 'Design'), 'compound'), (('Design', 'Prof.'), 'appos'), (('(', 'CD'), 'punct'), (('CD', 'Design'), 'appos'), ((')', 'CD'), 'punct'), (('GTU', 'Institute'), 'compound'), (('#', 'Institute'), 'compound'), (('2170701', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'conj'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), ((',', 'Rajkot'), 'punct'), (('Rajkot', 'Engineering'), 'appos'), (('\uf050', 'Rajkot'), 'punct'), (('Looping', 'Topics'), 'compound'), (('Topics', 'Institute'), 'conj'), (('to', 'covered'), 'mark'), (('be', 'covered'), 'aux:pass'), (('covered', 'Topics'), 'acl'), (('Role', 'covered'), 'obj'), (('of', 'Derivation'), 'case'), (('parser', 'Context'), 'compound'), (('Context', 'Derivation'), 'compound'), (('free', 'Derivation'), 'amod'), (('grammar', 'Derivation'), 'compound'), (('Derivation', 'Role'), 'nmod'), (('&', 'recursion'), 'cc'), (('Ambiguity', 'recursion'), 'compound'), (('Left', 'recursion'), 'amod'), (('recursion', 'Derivation'), 'conj'), (('&', 'Classification'), 'cc'), (('Left', 'factoring'), 'compound'), (('factoring', 'Classification'), 'amod'), (('Classification', 'recursion'), 'conj'), (('of', 'parsing'), 'mark'), (('parsing', 'Classification'), 'acl'), (('Backtracking', 'parsing'), 'obj'), (('LL', 'Backtracking'), 'flat'), (('(', '1'), 'punct'), (('1', 'Backtracking'), 'dep'), ((')', '1'), 'punct'), (('parsing', 'parsing'), 'conj'), (('Recursive', 'reduce'), 'amod'), (('descent', 'paring'), 'compound'), (('paring', 'reduce'), 'compound'), (('Shift', 'precedence'), 'compound'), (('reduce', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'Role'), 'compound'), (('parsing', 'Role'), 'compound'), (('LR', 'Role'), 'compound'), (('parsing', 'Role'), 'compound'), (('Role', 'obtains'), 'nsubj'), (('of', 'Role'), 'case'), (('Parser', 'Role'), 'compound'), (('Role', 'Role'), 'nmod'), (('of', 'parser'), 'case'), (('parser', 'Role'), 'nmod'), (('Parser', 'Role'), 'nmod'), (('obtains', 'Unit'), 'parataxis'), (('a', 'string'), 'det'), (('string', 'obtains'), 'obj'), (('of', 'token'), 'case'), (('token', 'string'), 'nmod'), (('from', 'analyzer'), 'case'), (('the', 'analyzer'), 'det'), (('lexical', 'analyzer'), 'amod'), (('analyzer', 'token'), 'nmod'), (('and', 'reports'), 'cc'), (('reports', 'obtains'), 'conj'), (('syntax', 'error'), 'compound'), (('error', 'reports'), 'obj'), (('if', 'generates'), 'mark'), (('any', 'generates'), 'nsubj'), (('otherwise', 'generates'), 'advmod'), (('generates', 'reports'), 'advcl'), (('syntax', 'tree'), 'compound'), (('tree', 'generates'), 'obj'), (('.', 'obtains'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('+91', 'CARDINAL'), ('Dixita B. Kagathara Compiler Design', 'ORG'), ('2170701', 'CARDINAL'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('Rajkot', 'GPE')]

========================== Sentence 3 ===========================

 There are two types of parser:  Top-down parser  Bottom-up parser  Rest of front end Parse tree Token IR Lexical analyzer Symbol table Parser Get next token Source program Parsetree    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar        Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Nonterminal symbol: 

Tokens are: 
>> ['There', 'are', 'two', 'types', 'of', 'parser', ':', 'Top-down', 'parser', 'Bottom', '-', 'up', 'parser', 'Rest', 'of', 'front', 'end', 'Parse', 'tree', 'Token', 'IR', 'Lexical', 'analyzer', 'Symbol', 'table', 'Parser', 'Get', 'next', 'token', 'Source', 'program', 'Parsetree', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Context', 'free', 'grammar', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', 'is', 'a', '4', '-', 'tuple', 'where', ',', 'is', 'finite', 'set', 'of', 'non', 'terminals', ',', 'is', 'disjoint', 'finite', 'set', 'of', 'terminals', ',', 'is', 'an', 'element', 'of', 'and', 'it', '’s', 'a', 'start', 'symbol', ',', 'is', 'a', 'finite', 'set', 'formulas', 'of', 'the', 'form', 'where', 'and', 'Nonterminal', 'symbol', ':'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('are', 'VERB'), ('two', 'NUM'), ('types', 'NOUN'), ('of', 'ADP'), ('parser', 'NOUN'), (':', 'PUNCT'), ('Top-down', 'ADJ'), ('parser', 'NOUN'), ('Bottom', 'NOUN'), ('-', 'PUNCT'), ('up', 'ADP'), ('parser', 'NOUN'), ('Rest', 'NOUN'), ('of', 'ADP'), ('front', 'ADJ'), ('end', 'NOUN'), ('Parse', 'NOUN'), ('tree', 'NOUN'), ('Token', 'NOUN'), ('IR', 'NOUN'), ('Lexical', 'ADJ'), ('analyzer', 'NOUN'), ('Symbol', 'NOUN'), ('table', 'NOUN'), ('Parser', 'PROPN'), ('Get', 'VERB'), ('next', 'ADJ'), ('token', 'NOUN'), ('Source', 'NOUN'), ('program', 'NOUN'), ('Parsetree', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'SYM'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'SYM'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('Context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('A', 'DET'), ('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('CFG', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('4', 'NUM'), ('-', 'PUNCT'), ('tuple', 'NOUN'), ('where', 'SCONJ'), (',', 'PUNCT'), ('is', 'AUX'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('disjoint', 'ADJ'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('an', 'DET'), ('element', 'NOUN'), ('of', 'ADP'), ('and', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('start', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('finite', 'ADJ'), ('set', 'ADJ'), ('formulas', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('where', 'SCONJ'), ('and', 'CCONJ'), ('Nonterminal', 'ADJ'), ('symbol', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('are', 'VBP'), ('two', 'CD'), ('types', 'NNS'), ('of', 'IN'), ('parser', 'NN'), (':', ':'), ('Top-down', 'JJ'), ('parser', 'NN'), ('Bottom', 'NN'), ('-', 'HYPH'), ('up', 'RP'), ('parser', 'NN'), ('Rest', 'NN'), ('of', 'IN'), ('front', 'JJ'), ('end', 'NN'), ('Parse', 'NN'), ('tree', 'NN'), ('Token', 'NN'), ('IR', 'NN'), ('Lexical', 'JJ'), ('analyzer', 'NN'), ('Symbol', 'NN'), ('table', 'NN'), ('Parser', 'NNP'), ('Get', 'VB'), ('next', 'JJ'), ('token', 'NN'), ('Source', 'NN'), ('program', 'NN'), ('Parsetree', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('1', 'CD'), ('–', 'SYM'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', 'SYM'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('Context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'DT'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '-LRB-'), ('CFG', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('a', 'DT'), ('4', 'CD'), ('-', 'HYPH'), ('tuple', 'NN'), ('where', 'WRB'), (',', ','), ('is', 'VBZ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('disjoint', 'JJ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('an', 'DT'), ('element', 'NN'), ('of', 'IN'), ('and', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('finite', 'JJ'), ('set', 'JJ'), ('formulas', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('form', 'NN'), ('where', 'WRB'), ('and', 'CC'), ('Nonterminal', 'JJ'), ('symbol', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('There', 'there'), ('are', 'be'), ('two', 'two'), ('types', 'type'), ('of', 'of'), ('parser', 'parser'), (':', ':'), ('Top-down', 'top-down'), ('parser', 'parser'), ('Bottom', 'bottom'), ('-', '-'), ('up', 'up'), ('parser', 'parser'), ('Rest', 'Rest'), ('of', 'of'), ('front', 'front'), ('end', 'end'), ('Parse', 'parse'), ('tree', 'tree'), ('Token', 'token'), ('IR', 'IR'), ('Lexical', 'lexical'), ('analyzer', 'analyzer'), ('Symbol', 'symbol'), ('table', 'table'), ('Parser', 'Parser'), ('Get', 'get'), ('next', 'next'), ('token', 'token'), ('Source', 'source'), ('program', 'program'), ('Parsetree', 'Parsetree'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('is', 'be'), ('a', 'a'), ('4', '4'), ('-', '-'), ('tuple', 'tuple'), ('where', 'where'), (',', ','), ('is', 'be'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('an', 'a'), ('element', 'element'), ('of', 'of'), ('and', 'and'), ('it', 'it'), ('’s', 'be'), ('a', 'a'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('is', 'be'), ('a', 'a'), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formulas'), ('of', 'of'), ('the', 'the'), ('form', 'form'), ('where', 'where'), ('and', 'and'), ('Nonterminal', 'Nonterminal'), ('symbol', 'symbol'), (':', ':')] 

 Dependency tags are: 
>> [(('There', 'are'), 'expl'), (('are', 'root'), 'root'), (('two', 'types'), 'nummod'), (('types', 'are'), 'nsubj'), (('of', 'parser'), 'case'), (('parser', 'types'), 'nmod'), ((':', 'are'), 'punct'), (('Top-down', 'Bottom'), 'amod'), (('parser', 'Rest'), 'compound'), (('Bottom', 'Rest'), 'compound'), (('-', 'up'), 'punct'), (('up', 'Bottom'), 'compound:prt'), (('parser', 'Rest'), 'compound'), (('Rest', 'types'), 'appos'), (('of', 'Token'), 'case'), (('front', 'end'), 'amod'), (('end', 'Token'), 'compound'), (('Parse', 'Token'), 'compound'), (('tree', 'Token'), 'compound'), (('Token', 'Rest'), 'nmod'), (('IR', 'table'), 'compound'), (('Lexical', 'table'), 'amod'), (('analyzer', 'table'), 'compound'), (('Symbol', 'table'), 'compound'), (('table', 'Rest'), 'nmod'), (('Parser', 'Get'), 'nsubj'), (('Get', 'are'), 'parataxis'), (('next', 'program'), 'amod'), (('token', 'program'), 'compound'), (('Source', 'program'), 'compound'), (('program', 'Get'), 'obj'), (('Parsetree', 'program'), 'appos'), (('Prof.', 'Parsetree'), 'flat'), (('Jay', 'Parsetree'), 'flat'), (('R', 'Parsetree'), 'flat'), (('Dhamsaniya', 'Parsetree'), 'flat'), (('#', 'Parsetree'), 'compound'), (('3130006', 'Parsetree'), 'flat'), (('(', 'PS'), 'punct'), (('PS', 'Parsetree'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'punct'), (('Unit', 'program'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'case'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'nmod'), (('‹#›', 'Unit'), 'compound'), (('Prof.', 'Unit'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Unit'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Get'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Parsing'), 'case'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'nmod'), (('(', 'I'), 'punct'), (('I', 'Context'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Context'), 'compound'), (('Context', 'Context'), 'compound'), (('free', 'Context'), 'amod'), (('grammar', 'Context'), 'compound'), (('Context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'are'), 'parataxis'), (('A', 'grammar'), 'det'), (('context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'grammar'), 'appos'), (('(', 'CFG'), 'punct'), (('CFG', 'grammar'), 'appos'), ((')', 'CFG'), 'punct'), (('is', 'tuple'), 'cop'), (('a', 'tuple'), 'det'), (('4', 'tuple'), 'nummod'), (('-', 'tuple'), 'punct'), (('tuple', 'grammar'), 'acl:relcl'), (('where', 'set'), 'mark'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('finite', 'set'), 'amod'), (('set', 'tuple'), 'parataxis'), (('of', 'terminals'), 'case'), (('non', 'terminals'), 'compound'), (('terminals', 'set'), 'nmod'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('disjoint', 'set'), 'amod'), (('finite', 'set'), 'amod'), (('set', 'set'), 'conj'), (('of', 'terminals'), 'case'), (('terminals', 'set'), 'nmod'), ((',', 'element'), 'punct'), (('is', 'element'), 'cop'), (('an', 'element'), 'det'), (('element', 'set'), 'parataxis'), (('of', 'symbol'), 'mark'), (('and', 'symbol'), 'cc'), (('it', 'symbol'), 'nsubj'), (('’s', 'symbol'), 'cop'), (('a', 'symbol'), 'det'), (('start', 'symbol'), 'compound'), (('symbol', 'element'), 'conj'), ((',', 'formulas'), 'punct'), (('is', 'formulas'), 'cop'), (('a', 'formulas'), 'det'), (('finite', 'formulas'), 'amod'), (('set', 'formulas'), 'amod'), (('formulas', 'symbol'), 'parataxis'), (('of', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'formulas'), 'nmod'), (('where', 'symbol'), 'mark'), (('and', 'Nonterminal'), 'cc'), (('Nonterminal', 'symbol'), 'amod'), (('symbol', 'form'), 'acl:relcl'), ((':', 'are'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL')]

========================== Sentence 4 ===========================

 The name of syntax category of a language, e.g.---.-, noun, verb, etc. 

Tokens are: 
>> ['The', 'name', 'of', 'syntax', 'category', 'of', 'a', 'language', ',', 'e.g.', '---.', '-', ',', 'noun', ',', 'verb', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('name', 'NOUN'), ('of', 'ADP'), ('syntax', 'NOUN'), ('category', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('language', 'NOUN'), (',', 'PUNCT'), ('e.g.', 'ADV'), ('---.', 'NOUN'), ('-', 'PUNCT'), (',', 'PUNCT'), ('noun', 'NOUN'), (',', 'PUNCT'), ('verb', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('name', 'NN'), ('of', 'IN'), ('syntax', 'NN'), ('category', 'NN'), ('of', 'IN'), ('a', 'DT'), ('language', 'NN'), (',', ','), ('e.g.', 'FW'), ('---.', 'NN'), ('-', ','), (',', ','), ('noun', 'NN'), (',', ','), ('verb', 'NN'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('name', 'name'), ('of', 'of'), ('syntax', 'syntax'), ('category', 'category'), ('of', 'of'), ('a', 'a'), ('language', 'language'), (',', ','), ('e.g.', 'e.g.'), ('---.', '---.'), ('-', '-'), (',', ','), ('noun', 'noun'), (',', ','), ('verb', 'verb'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'name'), 'det'), (('name', 'root'), 'root'), (('of', 'category'), 'case'), (('syntax', 'category'), 'compound'), (('category', 'name'), 'nmod'), (('of', 'language'), 'case'), (('a', 'language'), 'det'), (('language', 'category'), 'nmod'), ((',', '---.'), 'punct'), (('e.g.', '---.'), 'advmod'), (('---.', 'language'), 'appos'), (('-', '---.'), 'punct'), ((',', 'noun'), 'punct'), (('noun', 'language'), 'conj'), ((',', 'verb'), 'punct'), (('verb', 'noun'), 'conj'), ((',', 'etc'), 'punct'), (('etc', 'language'), 'conj'), (('.', 'name'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 The It is written as a single capital letter, or as a name enclosed between < … >, e.g.---.-, A or <Noun>.  Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Terminal symbol:  A symbol in the alphabet. 

Tokens are: 
>> ['The', 'It', 'is', 'written', 'as', 'a', 'single', 'capital', 'letter', ',', 'or', 'as', 'a', 'name', 'enclosed', 'between', '<', '…', '>', ',', 'e.g.---.', '-', ',', 'A', 'or', '<', 'Noun', '>.', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', 'is', 'a', '4', '-', 'tuple', 'where', ',', 'is', 'finite', 'set', 'of', 'non', 'terminals', ',', 'is', 'disjoint', 'finite', 'set', 'of', 'terminals', ',', 'is', 'an', 'element', 'of', 'and', 'it', '’s', 'a', 'start', 'symbol', ',', 'is', 'a', 'finite', 'set', 'formulas', 'of', 'the', 'form', 'where', 'and', 'Terminal', 'symbol', ':', 'A', 'symbol', 'in', 'the', 'alphabet', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('It', 'PRON'), ('is', 'AUX'), ('written', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('single', 'ADJ'), ('capital', 'NOUN'), ('letter', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('as', 'ADP'), ('a', 'DET'), ('name', 'NOUN'), ('enclosed', 'VERB'), ('between', 'ADP'), ('<', 'PUNCT'), ('…', 'PUNCT'), ('>', 'PUNCT'), (',', 'PUNCT'), ('e.g.---.', 'PROPN'), ('-', 'PUNCT'), (',', 'PUNCT'), ('A', 'PROPN'), ('or', 'CCONJ'), ('<', 'PUNCT'), ('Noun', 'NOUN'), ('>.', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'SYM'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'SYM'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('A', 'DET'), ('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('CFG', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('4', 'NUM'), ('-', 'PUNCT'), ('tuple', 'NOUN'), ('where', 'SCONJ'), (',', 'PUNCT'), ('is', 'AUX'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('disjoint', 'ADJ'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('an', 'DET'), ('element', 'NOUN'), ('of', 'ADP'), ('and', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('start', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('finite', 'ADJ'), ('set', 'NOUN'), ('formulas', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('where', 'SCONJ'), ('and', 'CCONJ'), ('Terminal', 'PROPN'), ('symbol', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('symbol', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('alphabet', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('It', 'PRP'), ('is', 'VBZ'), ('written', 'VBN'), ('as', 'IN'), ('a', 'DT'), ('single', 'JJ'), ('capital', 'NN'), ('letter', 'NN'), (',', ','), ('or', 'CC'), ('as', 'IN'), ('a', 'DT'), ('name', 'NN'), ('enclosed', 'VBN'), ('between', 'IN'), ('<', '-LRB-'), ('…', ':'), ('>', '-RRB-'), (',', ','), ('e.g.---.', 'NNP'), ('-', ','), (',', ','), ('A', 'NNP'), ('or', 'CC'), ('<', '-LRB-'), ('Noun', 'NN'), ('>.', 'NFP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('1', 'CD'), ('–', 'SYM'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', 'SYM'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'DT'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '-LRB-'), ('CFG', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('a', 'DT'), ('4', 'CD'), ('-', 'HYPH'), ('tuple', 'NN'), ('where', 'WRB'), (',', ','), ('is', 'VBZ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('disjoint', 'JJ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('an', 'DT'), ('element', 'NN'), ('of', 'IN'), ('and', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('finite', 'JJ'), ('set', 'NN'), ('formulas', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('form', 'NN'), ('where', 'WRB'), ('and', 'CC'), ('Terminal', 'NNP'), ('symbol', 'NN'), (':', ':'), ('A', 'DT'), ('symbol', 'NN'), ('in', 'IN'), ('the', 'DT'), ('alphabet', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('It', 'it'), ('is', 'be'), ('written', 'write'), ('as', 'as'), ('a', 'a'), ('single', 'single'), ('capital', 'capital'), ('letter', 'letter'), (',', ','), ('or', 'or'), ('as', 'as'), ('a', 'a'), ('name', 'name'), ('enclosed', 'enclose'), ('between', 'between'), ('<', '<'), ('…', '…'), ('>', '>'), (',', ','), ('e.g.---.', 'e.g.---.'), ('-', '-'), (',', ','), ('A', 'A'), ('or', 'or'), ('<', '<'), ('Noun', 'noun'), ('>.', '>.'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('is', 'be'), ('a', 'a'), ('4', '4'), ('-', '-'), ('tuple', 'tuple'), ('where', 'where'), (',', ','), ('is', 'be'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('an', 'a'), ('element', 'element'), ('of', 'of'), ('and', 'and'), ('it', 'it'), ('’s', 'be'), ('a', 'a'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('is', 'be'), ('a', 'a'), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formulas'), ('of', 'of'), ('the', 'the'), ('form', 'form'), ('where', 'where'), ('and', 'and'), ('Terminal', 'Terminal'), ('symbol', 'symbol'), (':', ':'), ('A', 'a'), ('symbol', 'symbol'), ('in', 'in'), ('the', 'the'), ('alphabet', 'alphabet'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'It'), 'det'), (('It', 'written'), 'nsubj:pass'), (('is', 'written'), 'aux:pass'), (('written', 'root'), 'root'), (('as', 'letter'), 'case'), (('a', 'letter'), 'det'), (('single', 'letter'), 'amod'), (('capital', 'letter'), 'compound'), (('letter', 'written'), 'obl'), ((',', 'name'), 'punct'), (('or', 'name'), 'cc'), (('as', 'name'), 'case'), (('a', 'name'), 'det'), (('name', 'letter'), 'conj'), (('enclosed', 'name'), 'acl'), (('between', 'name'), 'case'), (('<', 'between'), 'punct'), (('…', 'e.g.---.'), 'punct'), (('>', 'e.g.---.'), 'punct'), ((',', 'e.g.---.'), 'punct'), (('e.g.---.', 'name'), 'conj'), (('-', 'e.g.---.'), 'punct'), ((',', 'A'), 'punct'), (('A', 'e.g.---.'), 'conj'), (('or', 'Noun'), 'cc'), (('<', 'Noun'), 'punct'), (('Noun', 'A'), 'conj'), (('>.', 'Noun'), 'punct'), (('Prof.', 'A'), 'conj'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('3130006', 'Prof.'), 'flat'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'punct'), (('Unit', 'written'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'case'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'nmod'), (('‹#›', 'Probability'), 'flat'), (('Prof.', 'Probability'), 'flat'), (('Dixita', '‹#›'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Unit'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'written'), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'Parsing'), 'case'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'nmod'), (('(', 'I'), 'punct'), (('I', 'grammar'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'grammar'), 'compound'), (('Context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'written'), 'parataxis'), (('A', 'grammar'), 'det'), (('context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'grammar'), 'appos'), (('(', 'CFG'), 'punct'), (('CFG', 'grammar'), 'appos'), ((')', 'CFG'), 'punct'), (('is', 'tuple'), 'cop'), (('a', 'tuple'), 'det'), (('4', 'tuple'), 'nummod'), (('-', 'tuple'), 'punct'), (('tuple', 'written'), 'parataxis'), (('where', 'set'), 'mark'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('finite', 'set'), 'amod'), (('set', 'tuple'), 'acl:relcl'), (('of', 'terminals'), 'case'), (('non', 'terminals'), 'compound'), (('terminals', 'set'), 'nmod'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('disjoint', 'set'), 'amod'), (('finite', 'set'), 'amod'), (('set', 'set'), 'conj'), (('of', 'terminals'), 'case'), (('terminals', 'set'), 'nmod'), ((',', 'element'), 'punct'), (('is', 'element'), 'cop'), (('an', 'element'), 'det'), (('element', 'set'), 'parataxis'), (('of', 'symbol'), 'mark'), (('and', 'symbol'), 'cc'), (('it', 'symbol'), 'nsubj'), (('’s', 'symbol'), 'cop'), (('a', 'symbol'), 'det'), (('start', 'symbol'), 'compound'), (('symbol', 'element'), 'conj'), ((',', 'formulas'), 'punct'), (('is', 'formulas'), 'cop'), (('a', 'formulas'), 'det'), (('finite', 'formulas'), 'amod'), (('set', 'formulas'), 'compound'), (('formulas', 'symbol'), 'parataxis'), (('of', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'formulas'), 'nmod'), (('where', 'symbol'), 'mark'), (('and', 'symbol'), 'cc'), (('Terminal', 'symbol'), 'compound'), (('symbol', 'form'), 'acl:relcl'), ((':', 'symbol'), 'punct'), (('A', 'symbol'), 'det'), (('symbol', 'form'), 'appos'), (('in', 'alphabet'), 'case'), (('the', 'alphabet'), 'det'), (('alphabet', 'symbol'), 'nmod'), (('.', 'written'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('4', 'CARDINAL')]

========================== Sentence 6 ===========================

 It is denoted by lower case letter and punctuation marks used in language. 

Tokens are: 
>> ['It', 'is', 'denoted', 'by', 'lower', 'case', 'letter', 'and', 'punctuation', 'marks', 'used', 'in', 'language', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('denoted', 'VERB'), ('by', 'ADP'), ('lower', 'ADJ'), ('case', 'NOUN'), ('letter', 'NOUN'), ('and', 'CCONJ'), ('punctuation', 'NOUN'), ('marks', 'NOUN'), ('used', 'VERB'), ('in', 'ADP'), ('language', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('denoted', 'VBN'), ('by', 'IN'), ('lower', 'JJR'), ('case', 'NN'), ('letter', 'NN'), ('and', 'CC'), ('punctuation', 'NN'), ('marks', 'NNS'), ('used', 'VBN'), ('in', 'IN'), ('language', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('denoted', 'denote'), ('by', 'by'), ('lower', 'low'), ('case', 'case'), ('letter', 'letter'), ('and', 'and'), ('punctuation', 'punctuation'), ('marks', 'mark'), ('used', 'use'), ('in', 'in'), ('language', 'language'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'denoted'), 'nsubj:pass'), (('is', 'denoted'), 'aux:pass'), (('denoted', 'root'), 'root'), (('by', 'letter'), 'case'), (('lower', 'letter'), 'amod'), (('case', 'letter'), 'compound'), (('letter', 'denoted'), 'obl'), (('and', 'marks'), 'cc'), (('punctuation', 'marks'), 'compound'), (('marks', 'letter'), 'conj'), (('used', 'marks'), 'acl'), (('in', 'language'), 'case'), (('language', 'used'), 'obl'), (('.', 'denoted'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 <Noun Phrase> → <Article><Noun> <Article> → a | an | the <Noun> → boy | apple         Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Start symbol: 

Tokens are: 
>> ['<', 'Noun', 'Phrase', '>', '→', '<', 'Article', '><', 'Noun', '>', '<', 'Article', '>', '→', 'a', '|', 'an', '|', 'the', '<', 'Noun', '>', '→', 'boy', '|', 'apple', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', 'is', 'a', '4', '-', 'tuple', 'where', ',', 'is', 'finite', 'set', 'of', 'non', 'terminals', ',', 'is', 'disjoint', 'finite', 'set', 'of', 'terminals', ',', 'is', 'an', 'element', 'of', 'and', 'it', '’s', 'a', 'start', 'symbol', ',', 'is', 'a', 'finite', 'set', 'formulas', 'of', 'the', 'form', 'where', 'and', 'Start', 'symbol', ':'] 

 UPOS tags are: 
>> [('<', 'PUNCT'), ('Noun', 'NOUN'), ('Phrase', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('<', 'PUNCT'), ('Article', 'NOUN'), ('><', 'PUNCT'), ('Noun', 'NOUN'), ('>', 'PUNCT'), ('<', 'PUNCT'), ('Article', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('a', 'NOUN'), ('|', 'PUNCT'), ('an', 'NOUN'), ('|', 'PUNCT'), ('the', 'DET'), ('<', 'PUNCT'), ('Noun', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('boy', 'NOUN'), ('|', 'PUNCT'), ('apple', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('A', 'DET'), ('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('CFG', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('4', 'NUM'), ('-', 'PUNCT'), ('tuple', 'NOUN'), ('where', 'SCONJ'), (',', 'PUNCT'), ('is', 'AUX'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('disjoint', 'ADJ'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('an', 'DET'), ('element', 'NOUN'), ('of', 'ADP'), ('and', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('start', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('finite', 'ADJ'), ('set', 'NOUN'), ('formulas', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('where', 'SCONJ'), ('and', 'CCONJ'), ('Start', 'NOUN'), ('symbol', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('<', '-LRB-'), ('Noun', 'NN'), ('Phrase', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('<', '-LRB-'), ('Article', 'NN'), ('><', ','), ('Noun', 'NN'), ('>', '-RRB-'), ('<', '-LRB-'), ('Article', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('a', 'NN'), ('|', 'NFP'), ('an', 'NN'), ('|', 'NFP'), ('the', 'DT'), ('<', '-LRB-'), ('Noun', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('boy', 'NN'), ('|', 'NFP'), ('apple', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'DT'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '-LRB-'), ('CFG', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('a', 'DT'), ('4', 'CD'), ('-', 'HYPH'), ('tuple', 'NN'), ('where', 'WRB'), (',', ','), ('is', 'VBZ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('disjoint', 'JJ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('an', 'DT'), ('element', 'NN'), ('of', 'IN'), ('and', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('finite', 'JJ'), ('set', 'NN'), ('formulas', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('form', 'NN'), ('where', 'WRB'), ('and', 'CC'), ('Start', 'NN'), ('symbol', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', "''"), ('<', '<'), ('Article', 'article'), ('><', '><'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'article'), ('>', '>'), ('→', "''"), ('a', 'a'), ('|', '|'), ('an', 'a'), ('|', '|'), ('the', 'the'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', "''"), ('boy', 'boy'), ('|', '|'), ('apple', 'apple'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('is', 'be'), ('a', 'a'), ('4', '4'), ('-', '-'), ('tuple', 'tuple'), ('where', 'where'), (',', ','), ('is', 'be'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('an', 'a'), ('element', 'element'), ('of', 'of'), ('and', 'and'), ('it', 'it'), ('’s', 'be'), ('a', 'a'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('is', 'be'), ('a', 'a'), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formulas'), ('of', 'of'), ('the', 'the'), ('form', 'form'), ('where', 'where'), ('and', 'and'), ('Start', 'start'), ('symbol', 'symbol'), (':', ':')] 

 Dependency tags are: 
>> [(('<', 'Phrase'), 'punct'), (('Noun', 'Phrase'), 'compound'), (('Phrase', 'root'), 'root'), (('>', 'Phrase'), 'punct'), (('→', 'Phrase'), 'punct'), (('<', 'Article'), 'punct'), (('Article', 'Phrase'), 'appos'), (('><', 'Article'), 'punct'), (('Noun', 'Article'), 'dep'), (('>', 'Noun'), 'punct'), (('<', 'Article'), 'punct'), (('Article', 'Article'), 'dep'), (('>', 'Article'), 'punct'), (('→', 'Article'), 'punct'), (('a', 'Article'), 'conj'), (('|', 'Article'), 'punct'), (('an', 'Phrase'), 'conj'), (('|', 'an'), 'punct'), (('the', 'boy'), 'det'), (('<', 'Noun'), 'punct'), (('Noun', 'boy'), 'compound'), (('>', 'Noun'), 'punct'), (('→', 'boy'), 'punct'), (('boy', 'Phrase'), 'conj'), (('|', 'Article'), 'punct'), (('apple', 'Prof.'), 'compound'), (('Prof.', 'boy'), 'compound'), (('Jay', 'Prof.'), 'compound'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Article'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Article'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Article'), 'conj'), (('‹#›', 'Unit'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Article'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Article'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'grammar'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Context'), 'compound'), (('Context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'Article'), 'conj'), (('A', 'grammar'), 'det'), (('context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'grammar'), 'appos'), (('(', 'CFG'), 'punct'), (('CFG', 'grammar'), 'appos'), ((')', 'CFG'), 'punct'), (('is', 'tuple'), 'cop'), (('a', 'tuple'), 'det'), (('4', 'tuple'), 'nummod'), (('-', 'tuple'), 'punct'), (('tuple', 'Phrase'), 'parataxis'), (('where', 'set'), 'mark'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('finite', 'set'), 'amod'), (('set', 'tuple'), 'parataxis'), (('of', 'terminals'), 'case'), (('non', 'terminals'), 'compound'), (('terminals', 'set'), 'nmod'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('disjoint', 'set'), 'amod'), (('finite', 'set'), 'amod'), (('set', 'set'), 'conj'), (('of', 'terminals'), 'case'), (('terminals', 'set'), 'nmod'), ((',', 'element'), 'punct'), (('is', 'element'), 'cop'), (('an', 'element'), 'det'), (('element', 'set'), 'parataxis'), (('of', 'symbol'), 'mark'), (('and', 'symbol'), 'cc'), (('it', 'symbol'), 'nsubj'), (('’s', 'symbol'), 'cop'), (('a', 'symbol'), 'det'), (('start', 'symbol'), 'compound'), (('symbol', 'element'), 'conj'), ((',', 'formulas'), 'punct'), (('is', 'formulas'), 'cop'), (('a', 'formulas'), 'det'), (('finite', 'formulas'), 'amod'), (('set', 'formulas'), 'compound'), (('formulas', 'symbol'), 'parataxis'), (('of', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'formulas'), 'nmod'), (('where', 'symbol'), 'mark'), (('and', 'Start'), 'cc'), (('Start', 'where'), 'conj'), (('symbol', 'form'), 'acl:relcl'), ((':', 'Phrase'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('4', 'CARDINAL')]

========================== Sentence 8 ===========================

 First nonterminal symbol of the grammar is called start symbol. 

Tokens are: 
>> ['First', 'nonterminal', 'symbol', 'of', 'the', 'grammar', 'is', 'called', 'start', 'symbol', '.'] 

 UPOS tags are: 
>> [('First', 'ADV'), ('nonterminal', 'ADJ'), ('symbol', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('grammar', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('start', 'NOUN'), ('symbol', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'RB'), ('nonterminal', 'JJ'), ('symbol', 'NN'), ('of', 'IN'), ('the', 'DT'), ('grammar', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('start', 'NN'), ('symbol', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), ('nonterminal', 'nonterminal'), ('symbol', 'symbol'), ('of', 'of'), ('the', 'the'), ('grammar', 'grammar'), ('is', 'be'), ('called', 'call'), ('start', 'start'), ('symbol', 'symbol'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'nonterminal'), 'advmod'), (('nonterminal', 'symbol'), 'amod'), (('symbol', 'called'), 'nsubj:pass'), (('of', 'grammar'), 'case'), (('the', 'grammar'), 'det'), (('grammar', 'symbol'), 'nmod'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('start', 'symbol'), 'compound'), (('symbol', 'called'), 'obj'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> [('First', 'ORDINAL')]

========================== Sentence 9 ===========================

 <Noun Phrase> → <Article><Noun> <Article> → a | an | the <Noun> → boy | apple     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Context free grammar A context free grammar (CFG) is a 4-tuple where,  is finite set of non terminals,  is disjoint finite set of terminals,  is an element of  and it’s a start symbol,  is a finite set formulas of the form  where  and    Production:   A production, also called a rewriting rule, is a rule of grammar. 

Tokens are: 
>> ['<', 'Noun', 'Phrase', '>', '→', '<', 'Article', '><', 'Noun', '>', '<', 'Article', '>', '→', 'a', '|', 'an', '|', 'the', '<', 'Noun', '>', '→', 'boy', '|', 'apple', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Context', 'free', 'grammar', 'A', 'context', 'free', 'grammar', '(', 'CFG', ')', 'is', 'a', '4', '-', 'tuple', 'where', ',', 'is', 'finite', 'set', 'of', 'non', 'terminals', ',', 'is', 'disjoint', 'finite', 'set', 'of', 'terminals', ',', 'is', 'an', 'element', 'of', 'and', 'it', '’s', 'a', 'start', 'symbol', ',', 'is', 'a', 'finite', 'set', 'formulas', 'of', 'the', 'form', 'where', 'and', 'Production', ':', 'A', 'production', ',', 'also', 'called', 'a', 'rewriting', 'rule', ',', 'is', 'a', 'rule', 'of', 'grammar', '.'] 

 UPOS tags are: 
>> [('<', 'PUNCT'), ('Noun', 'NOUN'), ('Phrase', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('<', 'PUNCT'), ('Article', 'NOUN'), ('><', 'PUNCT'), ('Noun', 'NOUN'), ('>', 'PUNCT'), ('<', 'PUNCT'), ('Article', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('a', 'NOUN'), ('|', 'PUNCT'), ('an', 'NOUN'), ('|', 'PUNCT'), ('the', 'DET'), ('<', 'PUNCT'), ('Noun', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('boy', 'NOUN'), ('|', 'PUNCT'), ('apple', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('A', 'DET'), ('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('CFG', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('4', 'NUM'), ('-', 'PUNCT'), ('tuple', 'NOUN'), ('where', 'SCONJ'), (',', 'PUNCT'), ('is', 'AUX'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('disjoint', 'ADJ'), ('finite', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('an', 'DET'), ('element', 'NOUN'), ('of', 'ADP'), ('and', 'CCONJ'), ('it', 'PRON'), ('’s', 'AUX'), ('a', 'DET'), ('start', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('finite', 'ADJ'), ('set', 'ADJ'), ('formulas', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('where', 'SCONJ'), ('and', 'CCONJ'), ('Production', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('production', 'NOUN'), (',', 'PUNCT'), ('also', 'ADV'), ('called', 'VERB'), ('a', 'DET'), ('rewriting', 'NOUN'), ('rule', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('rule', 'NOUN'), ('of', 'ADP'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('<', '-LRB-'), ('Noun', 'NN'), ('Phrase', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('<', '-LRB-'), ('Article', 'NN'), ('><', ','), ('Noun', 'NN'), ('>', '-RRB-'), ('<', '-LRB-'), ('Article', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('a', 'NN'), ('|', 'NFP'), ('an', 'NN'), ('|', 'NFP'), ('the', 'DT'), ('<', '-LRB-'), ('Noun', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('boy', 'NN'), ('|', 'NFP'), ('apple', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('A', 'DT'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('(', '-LRB-'), ('CFG', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('a', 'DT'), ('4', 'CD'), ('-', 'HYPH'), ('tuple', 'NN'), ('where', 'WRB'), (',', ','), ('is', 'VBZ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('disjoint', 'JJ'), ('finite', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('terminals', 'NNS'), (',', ','), ('is', 'VBZ'), ('an', 'DT'), ('element', 'NN'), ('of', 'IN'), ('and', 'CC'), ('it', 'PRP'), ('’s', 'VBZ'), ('a', 'DT'), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('finite', 'JJ'), ('set', 'JJ'), ('formulas', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('form', 'NN'), ('where', 'WRB'), ('and', 'CC'), ('Production', 'NN'), (':', ':'), ('A', 'DT'), ('production', 'NN'), (',', ','), ('also', 'RB'), ('called', 'VBN'), ('a', 'DT'), ('rewriting', 'NN'), ('rule', 'NN'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('rule', 'NN'), ('of', 'IN'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', "''"), ('<', '<'), ('Article', 'article'), ('><', '><'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'article'), ('>', '>'), ('→', "''"), ('a', 'a'), ('|', '|'), ('an', 'a'), ('|', '|'), ('the', 'the'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', "''"), ('boy', 'boy'), ('|', '|'), ('apple', 'apple'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('A', 'a'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('(', '('), ('CFG', 'CFG'), (')', ')'), ('is', 'be'), ('a', 'a'), ('4', '4'), ('-', '-'), ('tuple', 'tuple'), ('where', 'where'), (',', ','), ('is', 'be'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('disjoint', 'disjoint'), ('finite', 'finite'), ('set', 'set'), ('of', 'of'), ('terminals', 'terminal'), (',', ','), ('is', 'be'), ('an', 'a'), ('element', 'element'), ('of', 'of'), ('and', 'and'), ('it', 'it'), ('’s', 'be'), ('a', 'a'), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('is', 'be'), ('a', 'a'), ('finite', 'finite'), ('set', 'set'), ('formulas', 'formulas'), ('of', 'of'), ('the', 'the'), ('form', 'form'), ('where', 'where'), ('and', 'and'), ('Production', 'production'), (':', ':'), ('A', 'a'), ('production', 'production'), (',', ','), ('also', 'also'), ('called', 'call'), ('a', 'a'), ('rewriting', 'rewriting'), ('rule', 'rule'), (',', ','), ('is', 'be'), ('a', 'a'), ('rule', 'rule'), ('of', 'of'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('<', 'Phrase'), 'punct'), (('Noun', 'Phrase'), 'compound'), (('Phrase', 'root'), 'root'), (('>', 'Phrase'), 'punct'), (('→', 'Phrase'), 'punct'), (('<', 'Article'), 'punct'), (('Article', 'Phrase'), 'appos'), (('><', 'Article'), 'punct'), (('Noun', 'Article'), 'dep'), (('>', 'Noun'), 'punct'), (('<', 'Article'), 'punct'), (('Article', 'Article'), 'dep'), (('>', 'Article'), 'punct'), (('→', 'Article'), 'punct'), (('a', 'Article'), 'conj'), (('|', 'Article'), 'punct'), (('an', 'Phrase'), 'conj'), (('|', 'an'), 'punct'), (('the', 'boy'), 'det'), (('<', 'Noun'), 'punct'), (('Noun', 'boy'), 'compound'), (('>', 'Noun'), 'punct'), (('→', 'boy'), 'punct'), (('boy', 'Article'), 'conj'), (('|', 'Phrase'), 'punct'), (('apple', 'Prof.'), 'compound'), (('Prof.', 'boy'), 'compound'), (('Jay', 'Prof.'), 'compound'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Phrase'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Article'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Article'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', 'Article'), 'conj'), (('Prof.', 'Unit'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Article'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Article'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Article'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Article'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'an'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Context'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Context'), 'compound'), (('Context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'Article'), 'conj'), (('A', 'grammar'), 'det'), (('context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'grammar'), 'appos'), (('(', 'CFG'), 'punct'), (('CFG', 'grammar'), 'appos'), ((')', 'CFG'), 'punct'), (('is', 'tuple'), 'cop'), (('a', 'tuple'), 'det'), (('4', 'tuple'), 'nummod'), (('-', 'tuple'), 'punct'), (('tuple', 'Phrase'), 'parataxis'), (('where', 'set'), 'mark'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('finite', 'set'), 'amod'), (('set', 'tuple'), 'parataxis'), (('of', 'terminals'), 'case'), (('non', 'terminals'), 'compound'), (('terminals', 'set'), 'nmod'), ((',', 'set'), 'punct'), (('is', 'set'), 'cop'), (('disjoint', 'set'), 'amod'), (('finite', 'set'), 'amod'), (('set', 'set'), 'conj'), (('of', 'terminals'), 'case'), (('terminals', 'set'), 'nmod'), ((',', 'element'), 'punct'), (('is', 'element'), 'cop'), (('an', 'element'), 'det'), (('element', 'set'), 'parataxis'), (('of', 'symbol'), 'mark'), (('and', 'symbol'), 'cc'), (('it', 'symbol'), 'nsubj'), (('’s', 'symbol'), 'cop'), (('a', 'symbol'), 'det'), (('start', 'symbol'), 'compound'), (('symbol', 'element'), 'conj'), ((',', 'formulas'), 'punct'), (('is', 'formulas'), 'cop'), (('a', 'formulas'), 'det'), (('finite', 'formulas'), 'amod'), (('set', 'formulas'), 'amod'), (('formulas', 'element'), 'parataxis'), (('of', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'formulas'), 'nmod'), (('where', 'rule'), 'mark'), (('and', 'Production'), 'cc'), (('Production', 'production'), 'conj'), ((':', 'production'), 'punct'), (('A', 'production'), 'det'), (('production', 'rule'), 'nsubj'), ((',', 'production'), 'punct'), (('also', 'called'), 'advmod'), (('called', 'production'), 'acl'), (('a', 'rule'), 'det'), (('rewriting', 'rule'), 'compound'), (('rule', 'called'), 'obj'), ((',', 'rule'), 'punct'), (('is', 'rule'), 'cop'), (('a', 'rule'), 'det'), (('rule', 'form'), 'acl:relcl'), (('of', 'grammar'), 'case'), (('grammar', 'rule'), 'nmod'), (('.', 'Phrase'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('4', 'CARDINAL')]

========================== Sentence 10 ===========================

 It has the form of A nonterminal symbol → String of terminal and nonterminal symbols     <Noun Phrase> → <Article><Noun> <Article> → a | an | the <Noun> → boy | apple       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Grammar Write terminals, non terminals, start symbol, and productions for following grammar. 

Tokens are: 
>> ['It', 'has', 'the', 'form', 'of', 'A', 'nonterminal', 'symbol', '→', 'String', 'of', 'terminal', 'and', 'nonterminal', 'symbols', '<', 'Noun', 'Phrase', '>', '→', '<', 'Article', '><', 'Noun', '>', '<', 'Article', '>', '→', 'a', '|', 'an', '|', 'the', '<', 'Noun', '>', '→', 'boy', '|', 'apple', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Grammar', 'Write', 'terminals', ',', 'non', 'terminals', ',', 'start', 'symbol', ',', 'and', 'productions', 'for', 'following', 'grammar', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('has', 'VERB'), ('the', 'DET'), ('form', 'NOUN'), ('of', 'ADP'), ('A', 'DET'), ('nonterminal', 'ADJ'), ('symbol', 'NOUN'), ('→', 'PUNCT'), ('String', 'NOUN'), ('of', 'ADP'), ('terminal', 'ADJ'), ('and', 'CCONJ'), ('nonterminal', 'ADJ'), ('symbols', 'NOUN'), ('<', 'PUNCT'), ('Noun', 'NOUN'), ('Phrase', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('<', 'PUNCT'), ('Article', 'NOUN'), ('><', 'PUNCT'), ('Noun', 'NOUN'), ('>', 'PUNCT'), ('<', 'PUNCT'), ('Article', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('a', 'NOUN'), ('|', 'PUNCT'), ('an', 'NOUN'), ('|', 'PUNCT'), ('the', 'DET'), ('<', 'PUNCT'), ('Noun', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('boy', 'NOUN'), ('|', 'PUNCT'), ('apple', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'SYM'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Grammar', 'NOUN'), ('Write', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('non', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), ('start', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('productions', 'NOUN'), ('for', 'SCONJ'), ('following', 'VERB'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('has', 'VBZ'), ('the', 'DT'), ('form', 'NN'), ('of', 'IN'), ('A', 'DT'), ('nonterminal', 'JJ'), ('symbol', 'NN'), ('→', 'NFP'), ('String', 'NN'), ('of', 'IN'), ('terminal', 'JJ'), ('and', 'CC'), ('nonterminal', 'JJ'), ('symbols', 'NNS'), ('<', '-LRB-'), ('Noun', 'NN'), ('Phrase', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('<', '-LRB-'), ('Article', 'NN'), ('><', 'NFP'), ('Noun', 'NN'), ('>', '-RRB-'), ('<', '-LRB-'), ('Article', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('a', 'NN'), ('|', 'NFP'), ('an', 'NN'), ('|', 'NFP'), ('the', 'DT'), ('<', '-LRB-'), ('Noun', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('boy', 'NN'), ('|', 'NFP'), ('apple', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', 'SYM'), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Grammar', 'NN'), ('Write', 'NN'), ('terminals', 'NNS'), (',', ','), ('non', 'NN'), ('terminals', 'NNS'), (',', ','), ('start', 'NN'), ('symbol', 'NN'), (',', ','), ('and', 'CC'), ('productions', 'NNS'), ('for', 'IN'), ('following', 'VBG'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('has', 'have'), ('the', 'the'), ('form', 'form'), ('of', 'of'), ('A', 'a'), ('nonterminal', 'nonterminal'), ('symbol', 'symbol'), ('→', "''"), ('String', 'string'), ('of', 'of'), ('terminal', 'terminal'), ('and', 'and'), ('nonterminal', 'nonterminal'), ('symbols', 'symbol'), ('<', '<'), ('Noun', 'noun'), ('Phrase', 'phrase'), ('>', '>'), ('→', "''"), ('<', '<'), ('Article', 'article'), ('><', '><'), ('Noun', 'noun'), ('>', '>'), ('<', '<'), ('Article', 'article'), ('>', '>'), ('→', "''"), ('a', 'a'), ('|', '|'), ('an', 'a'), ('|', '|'), ('the', 'the'), ('<', '<'), ('Noun', 'noun'), ('>', '>'), ('→', "''"), ('boy', 'boy'), ('|', '|'), ('apple', 'apple'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Grammar', 'grammar'), ('Write', 'write'), ('terminals', 'terminal'), (',', ','), ('non', 'non'), ('terminals', 'terminal'), (',', ','), ('start', 'start'), ('symbol', 'symbol'), (',', ','), ('and', 'and'), ('productions', 'production'), ('for', 'for'), ('following', 'follow'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('the', 'form'), 'det'), (('form', 'has'), 'obj'), (('of', 'symbol'), 'case'), (('A', 'symbol'), 'det'), (('nonterminal', 'symbol'), 'amod'), (('symbol', 'form'), 'nmod'), (('→', 'String'), 'punct'), (('String', 'form'), 'nmod'), (('of', 'symbols'), 'case'), (('terminal', 'symbols'), 'amod'), (('and', 'nonterminal'), 'cc'), (('nonterminal', 'terminal'), 'conj'), (('symbols', 'String'), 'nmod'), (('<', 'Phrase'), 'punct'), (('Noun', 'Phrase'), 'compound'), (('Phrase', 'symbols'), 'appos'), (('>', 'Phrase'), 'punct'), (('→', 'Phrase'), 'punct'), (('<', 'Article'), 'punct'), (('Article', 'String'), 'dep'), (('><', 'Article'), 'punct'), (('Noun', 'Article'), 'dep'), (('>', 'Article'), 'punct'), (('<', 'Article'), 'punct'), (('Article', 'Article'), 'dep'), (('>', 'Article'), 'punct'), (('→', 'Article'), 'punct'), (('a', 'String'), 'conj'), (('|', 'an'), 'punct'), (('an', 'String'), 'conj'), (('|', 'an'), 'punct'), (('the', 'boy'), 'det'), (('<', 'Noun'), 'punct'), (('Noun', 'boy'), 'appos'), (('>', 'Noun'), 'punct'), (('→', 'boy'), 'punct'), (('boy', 'an'), 'appos'), (('|', 'has'), 'punct'), (('apple', 'Prof.'), 'compound'), (('Prof.', 'String'), 'conj'), (('Jay', 'String'), 'conj'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'has'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'form'), 'conj'), (('‹#›', 'form'), 'conj'), (('Prof.', '‹#›'), 'flat'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'CD'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Parsing'), 'case'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'nmod'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Unit'), 'appos'), ((':', 'terminals'), 'punct'), (('Grammar', 'terminals'), 'compound'), (('Write', 'terminals'), 'compound'), (('terminals', 'Example'), 'appos'), ((',', 'terminals'), 'punct'), (('non', 'terminals'), 'compound'), (('terminals', 'terminals'), 'conj'), ((',', 'symbol'), 'punct'), (('start', 'symbol'), 'compound'), (('symbol', 'terminals'), 'conj'), ((',', 'productions'), 'punct'), (('and', 'productions'), 'cc'), (('productions', 'terminals'), 'conj'), (('for', 'grammar'), 'case'), (('following', 'grammar'), 'amod'), (('grammar', 'productions'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 11 ===========================

 E  E O E| (E) | -E | id O  + | - | * | /  | ↑  Terminals: 	id + - * / ↑ ( ) 

Tokens are: 
>> ['E', '\uf0e0', 'E', 'O', 'E|', '(', 'E', ')', '|', '-', 'E', '|', 'id', 'O', '\uf0e0', '+', '|', '-', '|', '*', '|', '/', '|', '↑', 'Terminals', ':', 'id', '+', '-', '*', '/', '↑', '(', ')'] 

 UPOS tags are: 
>> [('E', 'NOUN'), ('\uf0e0', 'X'), ('E', 'NOUN'), ('O', 'X'), ('E|', 'X'), ('(', 'X'), ('E', 'NOUN'), (')', 'X'), ('|', 'PUNCT'), ('-', 'PUNCT'), ('E', 'X'), ('|', 'PUNCT'), ('id', 'X'), ('O', 'X'), ('\uf0e0', 'X'), ('+', 'PUNCT'), ('|', 'PUNCT'), ('-', 'PUNCT'), ('|', 'PUNCT'), ('*', 'PUNCT'), ('|', 'PUNCT'), ('/', 'PUNCT'), ('|', 'PUNCT'), ('↑', 'PUNCT'), ('Terminals', 'NOUN'), (':', 'PUNCT'), ('id', 'NOUN'), ('+', 'PUNCT'), ('-', 'PUNCT'), ('*', 'PUNCT'), ('/', 'PUNCT'), ('↑', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('E', 'GW'), ('\uf0e0', 'GW'), ('E', 'GW'), ('O', 'GW'), ('E|', 'GW'), ('(', 'GW'), ('E', 'NN'), (')', 'GW'), ('|', ':'), ('-', ':'), ('E', 'GW'), ('|', 'NFP'), ('id', 'GW'), ('O', 'GW'), ('\uf0e0', 'GW'), ('+', 'NFP'), ('|', 'NFP'), ('-', ','), ('|', 'NFP'), ('*', 'NFP'), ('|', 'NFP'), ('/', 'NFP'), ('|', 'NFP'), ('↑', 'NFP'), ('Terminals', 'NNS'), (':', ':'), ('id', 'NN'), ('+', 'NFP'), ('-', 'NFP'), ('*', 'NFP'), ('/', ','), ('↑', 'NFP'), ('(', '-LRB-'), (')', '-RRB-')] 

 Lemmas are: 
>> [('E', 'e'), ('\uf0e0', '\uf0e0'), ('E', 'e'), ('O', 'o'), ('E|', 'E|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-', '-'), ('E', 'E'), ('|', '|'), ('id', 'id'), ('O', 'o'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', "''"), ('Terminals', 'terminal'), (':', ':'), ('id', 'id'), ('+', '+'), ('-', '-'), ('*', '*'), ('/', '/'), ('↑', "''"), ('(', '('), (')', ')')] 

 Dependency tags are: 
>> [(('E', 'root'), 'root'), (('\uf0e0', 'E'), 'goeswith'), (('E', 'E'), 'goeswith'), (('O', 'E'), 'goeswith'), (('E|', 'E'), 'goeswith'), (('(', 'E'), 'goeswith'), (('E', 'E'), 'goeswith'), ((')', 'E'), 'goeswith'), (('|', 'E'), 'punct'), (('-', 'E'), 'punct'), (('E', 'E'), 'list'), (('|', 'E'), 'punct'), (('id', 'E'), 'goeswith'), (('O', 'E'), 'goeswith'), (('\uf0e0', 'E'), 'goeswith'), (('+', 'E'), 'punct'), (('|', 'E'), 'punct'), (('-', 'E'), 'punct'), (('|', 'E'), 'punct'), (('*', 'E'), 'punct'), (('|', 'Terminals'), 'punct'), (('/', 'Terminals'), 'punct'), (('|', 'Terminals'), 'punct'), (('↑', 'Terminals'), 'punct'), (('Terminals', 'E'), 'list'), ((':', 'Terminals'), 'punct'), (('id', 'Terminals'), 'appos'), (('+', 'id'), 'punct'), (('-', 'id'), 'punct'), (('*', 'Terminals'), 'punct'), (('/', 'id'), 'punct'), (('↑', 'Terminals'), 'punct'), (('(', 'Terminals'), 'punct'), ((')', 'Terminals'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 Non terminals: E, O Start symbol: 	E Productions: 	E  E O E| (E) | -E | id 		O  + | - | * | /  | ↑     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Derivation & Ambiguity        Derivation Derivation is used to find whether the string belongs to a given grammar or not. 

Tokens are: 
>> ['Non', 'terminals', ':', 'E', ',', 'O', 'Start', 'symbol', ':', 'E', 'Productions', ':', 'E', '\uf0e0', 'E', 'O', 'E|', '(', 'E', ')', '|', '-', 'E', '|', 'id', 'O', '\uf0e0', '+', '|', '-', '|', '*', '|', '/', '|', '↑', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Derivation', '&', 'Ambiguity', 'Derivation', 'Derivation', 'is', 'used', 'to', 'find', 'whether', 'the', 'string', 'belongs', 'to', 'a', 'given', 'grammar', 'or', 'not', '.'] 

 UPOS tags are: 
>> [('Non', 'NOUN'), ('terminals', 'NOUN'), (':', 'PUNCT'), ('E', 'PROPN'), (',', 'PUNCT'), ('O', 'NOUN'), ('Start', 'NOUN'), ('symbol', 'NOUN'), (':', 'PUNCT'), ('E', 'NOUN'), ('Productions', 'NOUN'), (':', 'PUNCT'), ('E', 'NOUN'), ('\uf0e0', 'X'), ('E', 'X'), ('O', 'X'), ('E|', 'PROPN'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('|', 'PUNCT'), ('-', 'PUNCT'), ('E', 'NOUN'), ('|', 'PUNCT'), ('id', 'NOUN'), ('O', 'PUNCT'), ('\uf0e0', 'NOUN'), ('+', 'SYM'), ('|', 'PUNCT'), ('-', 'PUNCT'), ('|', 'PUNCT'), ('*', 'PUNCT'), ('|', 'PUNCT'), ('/', 'PUNCT'), ('|', 'PUNCT'), ('↑', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Derivation', 'NOUN'), ('&', 'CCONJ'), ('Ambiguity', 'NOUN'), ('Derivation', 'NOUN'), ('Derivation', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('find', 'VERB'), ('whether', 'SCONJ'), ('the', 'DET'), ('string', 'NOUN'), ('belongs', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('given', 'VERB'), ('grammar', 'NOUN'), ('or', 'CCONJ'), ('not', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Non', 'NN'), ('terminals', 'NNS'), (':', ':'), ('E', 'NNP'), (',', ','), ('O', 'NN'), ('Start', 'NN'), ('symbol', 'NN'), (':', ':'), ('E', 'NN'), ('Productions', 'NNS'), (':', ':'), ('E', 'NN'), ('\uf0e0', 'FW'), ('E', 'FW'), ('O', 'FW'), ('E|', 'NNP'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('-', ':'), ('E', 'NN'), ('|', 'NFP'), ('id', 'NN'), ('O', ','), ('\uf0e0', 'NN'), ('+', 'SYM'), ('|', 'NFP'), ('-', ':'), ('|', 'NFP'), ('*', 'NFP'), ('|', 'NFP'), ('/', 'NFP'), ('|', 'NFP'), ('↑', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Derivation', 'NN'), ('&', 'CC'), ('Ambiguity', 'NN'), ('Derivation', 'NN'), ('Derivation', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('to', 'TO'), ('find', 'VB'), ('whether', 'IN'), ('the', 'DT'), ('string', 'NN'), ('belongs', 'VBZ'), ('to', 'IN'), ('a', 'DT'), ('given', 'VBN'), ('grammar', 'NN'), ('or', 'CC'), ('not', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Non', 'non'), ('terminals', 'terminal'), (':', ':'), ('E', 'E'), (',', ','), ('O', 'o'), ('Start', 'start'), ('symbol', 'symbol'), (':', ':'), ('E', 'e'), ('Productions', 'production'), (':', ':'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('E', 'E'), ('O', 'o'), ('E|', 'E|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-', '-'), ('E', 'e'), ('|', '|'), ('id', 'id'), ('O', 'o'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('|', '|'), ('-', '-'), ('|', '|'), ('*', '*'), ('|', '|'), ('/', '/'), ('|', '|'), ('↑', "''"), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Derivation', 'derivation'), ('&', '&'), ('Ambiguity', 'ambiguity'), ('Derivation', 'derivation'), ('Derivation', 'derivation'), ('is', 'be'), ('used', 'use'), ('to', 'to'), ('find', 'find'), ('whether', 'whether'), ('the', 'the'), ('string', 'string'), ('belongs', 'belong'), ('to', 'to'), ('a', 'a'), ('given', 'give'), ('grammar', 'grammar'), ('or', 'or'), ('not', 'not'), ('.', '.')] 

 Dependency tags are: 
>> [(('Non', 'terminals'), 'compound'), (('terminals', 'root'), 'root'), ((':', 'terminals'), 'punct'), (('E', 'terminals'), 'appos'), ((',', 'E'), 'punct'), (('O', 'symbol'), 'compound'), (('Start', 'symbol'), 'compound'), (('symbol', 'terminals'), 'appos'), ((':', 'symbol'), 'punct'), (('E', 'Productions'), 'compound'), (('Productions', 'symbol'), 'appos'), ((':', 'Productions'), 'punct'), (('E', 'Productions'), 'appos'), (('\uf0e0', 'E'), 'flat'), (('E', 'E'), 'flat'), (('O', 'E|'), 'compound'), (('E|', 'E'), 'dep'), (('(', 'E'), 'punct'), (('E', 'E|'), 'dep'), ((')', 'E'), 'punct'), (('|', 'E'), 'punct'), (('-', 'E'), 'punct'), (('E', 'terminals'), 'parataxis'), (('|', 'E'), 'punct'), (('id', 'E'), 'dep'), (('O', 'id'), 'punct'), (('\uf0e0', 'id'), 'appos'), (('+', 'id'), 'appos'), (('|', 'id'), 'punct'), (('-', 'id'), 'punct'), (('|', 'id'), 'punct'), (('*', 'id'), 'punct'), (('|', 'id'), 'punct'), (('/', 'Jay'), 'punct'), (('|', 'Prof.'), 'punct'), (('↑', 'Jay'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'E'), 'conj'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'compound'), (('‹#›', 'Kagathara'), 'compound'), (('Prof.', 'Kagathara'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Unit'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'Theory'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Derivation'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Derivation'), 'compound'), (('Derivation', 'used'), 'nsubj:pass'), (('&', 'Derivation'), 'cc'), (('Ambiguity', 'Derivation'), 'compound'), (('Derivation', 'Derivation'), 'compound'), (('Derivation', 'Derivation'), 'conj'), (('is', 'used'), 'aux:pass'), (('used', 'terminals'), 'parataxis'), (('to', 'find'), 'mark'), (('find', 'used'), 'xcomp'), (('whether', 'belongs'), 'mark'), (('the', 'string'), 'det'), (('string', 'belongs'), 'nsubj'), (('belongs', 'find'), 'ccomp'), (('to', 'grammar'), 'case'), (('a', 'grammar'), 'det'), (('given', 'grammar'), 'amod'), (('grammar', 'belongs'), 'obl'), (('or', 'not'), 'cc'), (('not', 'belongs'), 'conj'), (('.', 'terminals'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 13 ===========================

 Types of derivations are:  Leftmost derivation  Rightmost derivation     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Leftmost derivation  A derivation of a string  in a grammar  is a left most derivation if at every step the left most non terminal is replaced. 

Tokens are: 
>> ['Types', 'of', 'derivations', 'are', ':', 'Leftmost', 'derivation', 'Rightmost', 'derivation', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Leftmost', 'derivation', 'A', 'derivation', 'of', 'a', 'string', 'in', 'a', 'grammar', 'is', 'a', 'left', 'most', 'derivation', 'if', 'at', 'every', 'step', 'the', 'left', 'most', 'non', 'terminal', 'is', 'replaced', '.'] 

 UPOS tags are: 
>> [('Types', 'NOUN'), ('of', 'ADP'), ('derivations', 'NOUN'), ('are', 'AUX'), (':', 'PUNCT'), ('Leftmost', 'ADJ'), ('derivation', 'NOUN'), ('Rightmost', 'PROPN'), ('derivation', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'PROPN'), ('1', 'NUM'), ('–', 'SYM'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'SYM'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'PUNCT'), ('Leftmost', 'ADJ'), ('derivation', 'NOUN'), ('A', 'DET'), ('derivation', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('string', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('grammar', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('left', 'VERB'), ('most', 'ADJ'), ('derivation', 'NOUN'), ('if', 'SCONJ'), ('at', 'ADP'), ('every', 'DET'), ('step', 'NOUN'), ('the', 'DET'), ('left', 'VERB'), ('most', 'ADV'), ('non', 'ADJ'), ('terminal', 'NOUN'), ('is', 'AUX'), ('replaced', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Types', 'NNS'), ('of', 'IN'), ('derivations', 'NNS'), ('are', 'VBP'), (':', ':'), ('Leftmost', 'JJ'), ('derivation', 'NN'), ('Rightmost', 'NNP'), ('derivation', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NNP'), ('1', 'CD'), ('–', 'SYM'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', 'SYM'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', ','), ('Leftmost', 'JJ'), ('derivation', 'NN'), ('A', 'DT'), ('derivation', 'NN'), ('of', 'IN'), ('a', 'DT'), ('string', 'NN'), ('in', 'IN'), ('a', 'DT'), ('grammar', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('left', 'VBN'), ('most', 'JJS'), ('derivation', 'NN'), ('if', 'IN'), ('at', 'IN'), ('every', 'DT'), ('step', 'NN'), ('the', 'DT'), ('left', 'VBN'), ('most', 'RBS'), ('non', 'JJ'), ('terminal', 'NN'), ('is', 'VBZ'), ('replaced', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Types', 'type'), ('of', 'of'), ('derivations', 'derivation'), ('are', 'be'), (':', ':'), ('Leftmost', 'leftmost'), ('derivation', 'derivation'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Leftmost', 'leftmost'), ('derivation', 'derivation'), ('A', 'a'), ('derivation', 'derivation'), ('of', 'of'), ('a', 'a'), ('string', 'string'), ('in', 'in'), ('a', 'a'), ('grammar', 'grammar'), ('is', 'be'), ('a', 'a'), ('left', 'leave'), ('most', 'most'), ('derivation', 'derivation'), ('if', 'if'), ('at', 'at'), ('every', 'every'), ('step', 'step'), ('the', 'the'), ('left', 'leave'), ('most', 'most'), ('non', 'non'), ('terminal', 'terminal'), ('is', 'be'), ('replaced', 'replace'), ('.', '.')] 

 Dependency tags are: 
>> [(('Types', 'are'), 'nsubj'), (('of', 'derivations'), 'case'), (('derivations', 'Types'), 'nmod'), (('are', 'root'), 'root'), ((':', 'are'), 'punct'), (('Leftmost', 'derivation'), 'amod'), (('derivation', 'derivation'), 'compound'), (('Rightmost', 'derivation'), 'compound'), (('derivation', 'are'), 'nsubj'), (('Prof.', 'derivation'), 'appos'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'flat'), (('3130006', 'Prof.'), 'flat'), (('(', 'PS'), 'punct'), (('PS', 'Prof.'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'punct'), (('Unit', 'Prof.'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'case'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'nmod'), (('‹#›', 'Unit'), 'flat'), (('Prof.', 'Probability'), 'flat'), (('Dixita', '‹#›'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Unit'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Prof.'), 'parataxis'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Parsing'), 'case'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'nmod'), (('(', 'I'), 'punct'), (('I', 'derivation'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'derivation'), 'punct'), (('Leftmost', 'derivation'), 'amod'), (('derivation', 'derivation'), 'nsubj'), (('A', 'derivation'), 'det'), (('derivation', 'derivation'), 'appos'), (('of', 'string'), 'case'), (('a', 'string'), 'det'), (('string', 'derivation'), 'nmod'), (('in', 'grammar'), 'case'), (('a', 'grammar'), 'det'), (('grammar', 'string'), 'nmod'), (('is', 'derivation'), 'cop'), (('a', 'derivation'), 'det'), (('left', 'derivation'), 'amod'), (('most', 'derivation'), 'amod'), (('derivation', 'are'), 'parataxis'), (('if', 'replaced'), 'mark'), (('at', 'step'), 'case'), (('every', 'step'), 'det'), (('step', 'replaced'), 'obl'), (('the', 'terminal'), 'det'), (('left', 'terminal'), 'amod'), (('most', 'non'), 'advmod'), (('non', 'terminal'), 'amod'), (('terminal', 'replaced'), 'nsubj:pass'), (('is', 'replaced'), 'aux:pass'), (('replaced', 'derivation'), 'advcl'), (('.', 'derivation'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 14 ===========================

 Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a   		S 	S-S S*S-S a*S-S a*a-S 	a*a-a   a S - S a a S * S S Parse tree represents the structure of derivation   Leftmost Derivation Parse tree    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rightmost derivation  A derivation of a string  in a grammar  is a right most derivation if at every step the right most non terminal is replaced. 

Tokens are: 
>> ['Grammar', ':', 'S\uf0e0S+S', '|', 'S-S', '|', 'S*S', '|', 'S/S', '|', 'a', 'Output', 'string', ':', 'a*a-a', 'S', '\uf0e0S-S', '\uf0e0S*S-S', '\uf0e0a*', 'S-S', '\uf0e0a*a-S', '\uf0e0a*', 'a', '-', 'a', 'a', 'S', '-', 'S', 'a', 'a', 'S', '*', 'S', 'S', 'Parse', 'tree', 'represents', 'the', 'structure', 'of', 'derivation', 'Leftmost', 'Derivation', 'Parse', 'tree', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rightmost', 'derivation', 'A', 'derivation', 'of', 'a', 'string', 'in', 'a', 'grammar', 'is', 'a', 'right', 'most', 'derivation', 'if', 'at', 'every', 'step', 'the', 'right', 'most', 'non', 'terminal', 'is', 'replaced', '.'] 

 UPOS tags are: 
>> [('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0S+S', 'NOUN'), ('|', 'PUNCT'), ('S-S', 'NOUN'), ('|', 'PUNCT'), ('S*S', 'NOUN'), ('|', 'PUNCT'), ('S/S', 'NOUN'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a*a-a', 'PROPN'), ('S', 'PROPN'), ('\uf0e0S-S', 'NOUN'), ('\uf0e0S*S-S', 'X'), ('\uf0e0a*', 'X'), ('S-S', 'X'), ('\uf0e0a*a-S', 'X'), ('\uf0e0a*', 'X'), ('a', 'PUNCT'), ('-', 'PUNCT'), ('a', 'PUNCT'), ('a', 'PROPN'), ('S', 'NOUN'), ('-', 'PUNCT'), ('S', 'PART'), ('a', 'PUNCT'), ('a', 'PROPN'), ('S', 'NOUN'), ('*', 'PUNCT'), ('S', 'PROPN'), ('S', 'PART'), ('Parse', 'NOUN'), ('tree', 'NOUN'), ('represents', 'VERB'), ('the', 'DET'), ('structure', 'NOUN'), ('of', 'ADP'), ('derivation', 'NOUN'), ('Leftmost', 'ADJ'), ('Derivation', 'PROPN'), ('Parse', 'NOUN'), ('tree', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'PROPN'), ('Rightmost', 'ADJ'), ('derivation', 'NOUN'), ('A', 'DET'), ('derivation', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('string', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('grammar', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('right', 'ADJ'), ('most', 'ADJ'), ('derivation', 'NOUN'), ('if', 'SCONJ'), ('at', 'ADP'), ('every', 'DET'), ('step', 'NOUN'), ('the', 'DET'), ('right', 'ADJ'), ('most', 'ADV'), ('non', 'ADJ'), ('terminal', 'NOUN'), ('is', 'AUX'), ('replaced', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NN'), ('|', 'NFP'), ('S-S', 'NN'), ('|', 'NFP'), ('S*S', 'NN'), ('|', 'NFP'), ('S/S', 'NN'), ('|', 'NFP'), ('a', 'NFP'), ('Output', 'NN'), ('string', 'NN'), (':', ':'), ('a*a-a', 'NNP'), ('S', 'NNP'), ('\uf0e0S-S', 'NN'), ('\uf0e0S*S-S', 'GW'), ('\uf0e0a*', 'GW'), ('S-S', 'GW'), ('\uf0e0a*a-S', 'GW'), ('\uf0e0a*', 'GW'), ('a', '-RRB-'), ('-', ','), ('a', ','), ('a', 'NNP'), ('S', 'NN'), ('-', ','), ('S', 'POS'), ('a', ','), ('a', 'NNP'), ('S', 'NN'), ('*', 'NFP'), ('S', 'NNP'), ('S', 'POS'), ('Parse', 'NN'), ('tree', 'NN'), ('represents', 'VBZ'), ('the', 'DT'), ('structure', 'NN'), ('of', 'IN'), ('derivation', 'NN'), ('Leftmost', 'NNP'), ('Derivation', 'NNP'), ('Parse', 'NN'), ('tree', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NNP'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NNP'), ('Rightmost', 'JJ'), ('derivation', 'NN'), ('A', 'DT'), ('derivation', 'NN'), ('of', 'IN'), ('a', 'DT'), ('string', 'NN'), ('in', 'IN'), ('a', 'DT'), ('grammar', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('right', 'JJ'), ('most', 'JJS'), ('derivation', 'NN'), ('if', 'IN'), ('at', 'IN'), ('every', 'DT'), ('step', 'NN'), ('the', 'DT'), ('right', 'JJ'), ('most', 'RBS'), ('non', 'JJ'), ('terminal', 'NN'), ('is', 'VBZ'), ('replaced', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S*S', 's*s'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('a', 'a'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a*a-a', 'a*a-a'), ('S', 'S'), ('\uf0e0S-S', '\uf0e0s-s'), ('\uf0e0S*S-S', '\uf0e0s*s-s'), ('\uf0e0a*', '\uf0e0a*'), ('S-S', 's-s'), ('\uf0e0a*a-S', '\uf0e0a*a-s'), ('\uf0e0a*', '\uf0e0a*'), ('a', 'a'), ('-', '-'), ('a', 'a'), ('a', 'a'), ('S', 's'), ('-', '-'), ('S', "'s"), ('a', 'a'), ('a', 'a'), ('S', 's'), ('*', '*'), ('S', 'S'), ('S', "'s"), ('Parse', 'parse'), ('tree', 'tree'), ('represents', 'represent'), ('the', 'the'), ('structure', 'structure'), ('of', 'of'), ('derivation', 'derivation'), ('Leftmost', 'leftmost'), ('Derivation', 'Derivation'), ('Parse', 'parse'), ('tree', 'tree'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'CD'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Rightmost', 'Rightmost'), ('derivation', 'derivation'), ('A', 'a'), ('derivation', 'derivation'), ('of', 'of'), ('a', 'a'), ('string', 'string'), ('in', 'in'), ('a', 'a'), ('grammar', 'grammar'), ('is', 'be'), ('a', 'a'), ('right', 'right'), ('most', 'most'), ('derivation', 'derivation'), ('if', 'if'), ('at', 'at'), ('every', 'every'), ('step', 'step'), ('the', 'the'), ('right', 'right'), ('most', 'most'), ('non', 'non'), ('terminal', 'terminal'), ('is', 'be'), ('replaced', 'replace'), ('.', '.')] 

 Dependency tags are: 
>> [(('Grammar', 'root'), 'root'), ((':', 'Grammar'), 'punct'), (('S\uf0e0S+S', 'Grammar'), 'appos'), (('|', 'S\uf0e0S+S'), 'punct'), (('S-S', 'S\uf0e0S+S'), 'dep'), (('|', 'S-S'), 'punct'), (('S*S', 'S-S'), 'appos'), (('|', 'S*S'), 'punct'), (('S/S', 'S-S'), 'appos'), (('|', 'S\uf0e0S+S'), 'punct'), (('a', 'string'), 'punct'), (('Output', 'string'), 'compound'), (('string', 'S-S'), 'list'), ((':', 'S\uf0e0S+S'), 'punct'), (('a*a-a', 'string'), 'dep'), (('S', 'a*a-a'), 'flat'), (('\uf0e0S-S', 'a*a-a'), 'flat'), (('\uf0e0S*S-S', 'a*a-a'), 'flat'), (('\uf0e0a*', '\uf0e0S-S'), 'compound'), (('S-S', 'a*a-a'), 'conj'), (('\uf0e0a*a-S', 'a*a-a'), 'conj'), (('\uf0e0a*', 'a*a-a'), 'conj'), (('a', 'a*a-a'), 'punct'), (('-', 'S-S'), 'punct'), (('a', 'S'), 'det'), (('a', 'S'), 'compound'), (('S', 'S-S'), 'conj'), (('-', 'a'), 'punct'), (('S', 'S'), 'case'), (('a', 'tree'), 'det'), (('a', 'S'), 'compound'), (('S', 'tree'), 'compound'), (('*', 'tree'), 'punct'), (('S', 'tree'), 'nmod:poss'), (('S', 'S'), 'case'), (('Parse', 'tree'), 'compound'), (('tree', 'represents'), 'nsubj'), (('represents', 'Grammar'), 'appos'), (('the', 'structure'), 'det'), (('structure', 'represents'), 'obj'), (('of', 'tree'), 'case'), (('derivation', 'structure'), 'nmod'), (('Leftmost', 'Derivation'), 'amod'), (('Derivation', 'Parse'), 'compound'), (('Parse', 'tree'), 'compound'), (('tree', 'structure'), 'nmod'), (('Prof.', 'structure'), 'appos'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'PS'), 'punct'), (('Unit', 'Prof.'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'flat'), (('Prof.', '‹#›'), 'flat'), (('Dixita', '‹#›'), 'flat'), (('B', '‹#›'), 'flat'), (('Kagathara', '‹#›'), 'flat'), (('#', '‹#›'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'CD'), 'punct'), (('Unit', 'Theory'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'derivation'), 'compound'), (('(', 'I'), 'punct'), (('I', 'derivation'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'derivation'), 'compound'), (('Rightmost', 'derivation'), 'amod'), (('derivation', 'derivation'), 'nsubj'), (('A', 'derivation'), 'det'), (('derivation', 'derivation'), 'nsubj'), (('of', 'string'), 'case'), (('a', 'string'), 'det'), (('string', 'derivation'), 'nmod'), (('in', 'grammar'), 'case'), (('a', 'grammar'), 'det'), (('grammar', 'string'), 'nmod'), (('is', 'derivation'), 'cop'), (('a', 'derivation'), 'det'), (('right', 'derivation'), 'amod'), (('most', 'derivation'), 'amod'), (('derivation', 'Grammar'), 'parataxis'), (('if', 'replaced'), 'mark'), (('at', 'step'), 'case'), (('every', 'step'), 'det'), (('step', 'replaced'), 'obl'), (('the', 'terminal'), 'det'), (('right', 'terminal'), 'amod'), (('most', 'non'), 'advmod'), (('non', 'terminal'), 'amod'), (('terminal', 'replaced'), 'nsubj:pass'), (('is', 'replaced'), 'aux:pass'), (('replaced', 'derivation'), 'advcl'), (('.', 'derivation'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 15 ===========================

 It is all called canonical derivation. 

Tokens are: 
>> ['It', 'is', 'all', 'called', 'canonical', 'derivation', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('all', 'ADV'), ('called', 'VERB'), ('canonical', 'ADJ'), ('derivation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('all', 'RB'), ('called', 'VBN'), ('canonical', 'JJ'), ('derivation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('all', 'all'), ('called', 'call'), ('canonical', 'canonical'), ('derivation', 'derivation'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('all', 'called'), 'advmod'), (('called', 'root'), 'root'), (('canonical', 'derivation'), 'amod'), (('derivation', 'called'), 'xcomp'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a            S 		S*S 		 S*S-S 		 S*S-a 		 S*a-a 		 a*a-a  a S * S a a S - S S Rightmost Derivation Parse Tree    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise: Derivation Perform leftmost derivation and draw parse tree. 

Tokens are: 
>> ['Grammar', ':', 'S\uf0e0S+S', '|', 'S-S', '|', 'S*S', '|', 'S/S', '|', 'a', 'Output', 'string', ':', 'a*a-a', 'S', '\uf0e0S*S', '\uf0e0S*S-S', '\uf0e0S*S-a', '\uf0e0', 'S*a-a', '\uf0e0a*', 'a', '-', 'a', 'a', 'S', '*', 'S', 'a', 'a', 'S', '-', 'S', 'S', 'Rightmost', 'Derivation', 'Parse', 'Tree', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Exercise', ':', 'Derivation', 'Perform', 'leftmost', 'derivation', 'and', 'draw', 'parse', 'tree', '.'] 

 UPOS tags are: 
>> [('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0S+S', 'NOUN'), ('|', 'PUNCT'), ('S-S', 'NOUN'), ('|', 'PUNCT'), ('S*S', 'NOUN'), ('|', 'PUNCT'), ('S/S', 'NOUN'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a*a-a', 'NOUN'), ('S', 'NOUN'), ('\uf0e0S*S', 'X'), ('\uf0e0S*S-S', 'X'), ('\uf0e0S*S-a', 'X'), ('\uf0e0', 'X'), ('S*a-a', 'X'), ('\uf0e0a*', 'X'), ('a', 'PUNCT'), ('-', 'PUNCT'), ('a', 'PUNCT'), ('a', 'PROPN'), ('S', 'NOUN'), ('*', 'PUNCT'), ('S', 'PROPN'), ('a', 'PUNCT'), ('a', 'PROPN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('S', 'PROPN'), ('Rightmost', 'PROPN'), ('Derivation', 'NOUN'), ('Parse', 'X'), ('Tree', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Exercise', 'NOUN'), (':', 'PUNCT'), ('Derivation', 'NOUN'), ('Perform', 'VERB'), ('leftmost', 'NOUN'), ('derivation', 'NOUN'), ('and', 'CCONJ'), ('draw', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'NN'), ('|', 'NFP'), ('S-S', 'NN'), ('|', 'NFP'), ('S*S', 'NN'), ('|', 'NFP'), ('S/S', 'NN'), ('|', 'NFP'), ('a', 'NFP'), ('Output', 'NN'), ('string', 'NN'), (':', ':'), ('a*a-a', 'NN'), ('S', 'NN'), ('\uf0e0S*S', 'GW'), ('\uf0e0S*S-S', 'GW'), ('\uf0e0S*S-a', 'GW'), ('\uf0e0', 'GW'), ('S*a-a', 'GW'), ('\uf0e0a*', 'GW'), ('a', '-RRB-'), ('-', ','), ('a', ','), ('a', 'NNP'), ('S', 'NN'), ('*', 'NFP'), ('S', 'NNP'), ('a', '-RRB-'), ('a', 'NNP'), ('S', 'NNP'), ('-', ','), ('S', 'NNP'), ('S', 'NNP'), ('Rightmost', 'NNP'), ('Derivation', 'NN'), ('Parse', 'GW'), ('Tree', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Exercise', 'NN'), (':', ':'), ('Derivation', 'NN'), ('Perform', 'VB'), ('leftmost', 'NN'), ('derivation', 'NN'), ('and', 'CC'), ('draw', 'VB'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S-S', 's-s'), ('|', '|'), ('S*S', 's*s'), ('|', '|'), ('S/S', 's/s'), ('|', '|'), ('a', 'a'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a*a-a', 'a*a-a'), ('S', 's'), ('\uf0e0S*S', '\uf0e0s*s'), ('\uf0e0S*S-S', '\uf0e0s*s-s'), ('\uf0e0S*S-a', '\uf0e0S*S-a'), ('\uf0e0', '\uf0e0'), ('S*a-a', 'S*a-a'), ('\uf0e0a*', '\uf0e0a*'), ('a', 'a'), ('-', '-'), ('a', 'a'), ('a', 'a'), ('S', 's'), ('*', '*'), ('S', 'S'), ('a', 'a'), ('a', 'a'), ('S', 'S'), ('-', '-'), ('S', 'S'), ('S', 'S'), ('Rightmost', 'Rightmost'), ('Derivation', 'derivation'), ('Parse', 'parse'), ('Tree', 'tree'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Exercise', 'Exercise'), (':', ':'), ('Derivation', 'derivation'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('and', 'and'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')] 

 Dependency tags are: 
>> [(('Grammar', 'root'), 'root'), ((':', 'Grammar'), 'punct'), (('S\uf0e0S+S', 'Grammar'), 'appos'), (('|', 'S\uf0e0S+S'), 'punct'), (('S-S', 'Grammar'), 'appos'), (('|', 'S-S'), 'punct'), (('S*S', 'S-S'), 'appos'), (('|', 'S*S'), 'punct'), (('S/S', 'S-S'), 'list'), (('|', 'S\uf0e0S+S'), 'punct'), (('a', 'string'), 'punct'), (('Output', 'string'), 'compound'), (('string', 'S-S'), 'list'), ((':', 'S\uf0e0S+S'), 'punct'), (('a*a-a', 'S'), 'compound'), (('S', 'string'), 'appos'), (('\uf0e0S*S', 'S'), 'compound'), (('\uf0e0S*S-S', 'S'), 'compound'), (('\uf0e0S*S-a', 'S'), 'compound'), (('\uf0e0', 'S'), 'nmod'), (('S*a-a', 'S'), 'nmod'), (('\uf0e0a*', 'S'), 'nmod'), (('a', 'S'), 'punct'), (('-', 'S-S'), 'punct'), (('a', 'S'), 'det'), (('a', 'S'), 'compound'), (('S', 'S-S'), 'conj'), (('*', 'S'), 'punct'), (('S', 'S'), 'appos'), (('a', 'S'), 'punct'), (('a', 'S'), 'compound'), (('S', 'S'), 'appos'), (('-', 'S'), 'punct'), (('S', 'Derivation'), 'compound'), (('S', 'Derivation'), 'compound'), (('Rightmost', 'Derivation'), 'compound'), (('Derivation', 'S'), 'appos'), (('Parse', 'Derivation'), 'compound'), (('Tree', 'Derivation'), 'compound'), (('Prof.', 'Derivation'), 'compound'), (('Jay', 'Prof.'), 'compound'), (('R', 'Jay'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Derivation'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Kagathara'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Exercise'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Exercise'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Exercise'), 'compound'), (('Exercise', 'Unit'), 'appos'), ((':', 'Exercise'), 'punct'), (('Derivation', 'Exercise'), 'appos'), (('Perform', 'Derivation'), 'acl'), (('leftmost', 'derivation'), 'compound'), (('derivation', 'Perform'), 'obj'), (('and', 'draw'), 'cc'), (('draw', 'Perform'), 'conj'), (('parse', 'tree'), 'compound'), (('tree', 'draw'), 'obj'), (('.', 'Grammar'), 'punct')]

 Named Entities are: 
>> [('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 17 ===========================

 SA1B A0A | 𝜖 B0B | 1B | 𝜖  Output string: 1001 Perform leftmost derivation and draw parse tree. 

Tokens are: 
>> ['S\uf0e0A1B', 'A\uf0e00A', '|', '𝜖', 'B\uf0e00B', '|', '1B', '|', '𝜖', 'Output', 'string', ':', '1001', 'Perform', 'leftmost', 'derivation', 'and', 'draw', 'parse', 'tree', '.'] 

 UPOS tags are: 
>> [('S\uf0e0A1B', 'NOUN'), ('A\uf0e00A', 'NOUN'), ('|', 'PUNCT'), ('𝜖', 'X'), ('B\uf0e00B', 'X'), ('|', 'PUNCT'), ('1B', 'X'), ('|', 'PUNCT'), ('𝜖', 'PUNCT'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('1001', 'NUM'), ('Perform', 'VERB'), ('leftmost', 'NOUN'), ('derivation', 'NOUN'), ('and', 'CCONJ'), ('draw', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('S\uf0e0A1B', 'GW'), ('A\uf0e00A', 'GW'), ('|', 'NFP'), ('𝜖', 'GW'), ('B\uf0e00B', 'GW'), ('|', 'NFP'), ('1B', 'ADD'), ('|', 'NFP'), ('𝜖', 'NFP'), ('Output', 'NN'), ('string', 'NN'), (':', ':'), ('1001', 'CD'), ('Perform', 'VB'), ('leftmost', 'NN'), ('derivation', 'NN'), ('and', 'CC'), ('draw', 'VB'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('S\uf0e0A1B', 's\uf0e0a1b'), ('A\uf0e00A', 'a\uf0e00a'), ('|', '|'), ('𝜖', '𝜖'), ('B\uf0e00B', 'b\uf0e00b'), ('|', '|'), ('1B', '1b'), ('|', '|'), ('𝜖', "''"), ('Output', 'output'), ('string', 'string'), (':', ':'), ('1001', '1001'), ('Perform', 'perform'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('and', 'and'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')] 

 Dependency tags are: 
>> [(('S\uf0e0A1B', 'root'), 'root'), (('A\uf0e00A', 'S\uf0e0A1B'), 'goeswith'), (('|', 'S\uf0e0A1B'), 'goeswith'), (('𝜖', 'S\uf0e0A1B'), 'goeswith'), (('B\uf0e00B', 'S\uf0e0A1B'), 'goeswith'), (('|', 'S\uf0e0A1B'), 'punct'), (('1B', 'S\uf0e0A1B'), 'goeswith'), (('|', 'S\uf0e0A1B'), 'punct'), (('𝜖', 'S\uf0e0A1B'), 'punct'), (('Output', 'string'), 'compound'), (('string', 'S\uf0e0A1B'), 'list'), ((':', 'string'), 'punct'), (('1001', 'Perform'), 'nsubj'), (('Perform', 'string'), 'appos'), (('leftmost', 'derivation'), 'compound'), (('derivation', 'Perform'), 'obj'), (('and', 'draw'), 'cc'), (('draw', 'Perform'), 'conj'), (('parse', 'tree'), 'compound'), (('tree', 'draw'), 'obj'), (('.', 'S\uf0e0A1B'), 'punct')]

 Named Entities are: 
>> [('1001', 'CARDINAL')]

========================== Sentence 18 ===========================

 S0S1 | 01   Output string: 000111 Perform rightmost derivation and draw parse tree. 

Tokens are: 
>> ['S\uf0e00S1', '|', '01', 'Output', 'string', ':', '000111', 'Perform', 'rightmost', 'derivation', 'and', 'draw', 'parse', 'tree', '.'] 

 UPOS tags are: 
>> [('S\uf0e00S1', 'PROPN'), ('|', 'PUNCT'), ('01', 'NUM'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('000111', 'NUM'), ('Perform', 'VERB'), ('rightmost', 'NOUN'), ('derivation', 'NOUN'), ('and', 'CCONJ'), ('draw', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('S\uf0e00S1', 'NNP'), ('|', ','), ('01', 'CD'), ('Output', 'NN'), ('string', 'NN'), (':', ':'), ('000111', 'CD'), ('Perform', 'VB'), ('rightmost', 'NN'), ('derivation', 'NN'), ('and', 'CC'), ('draw', 'VB'), ('parse', 'NN'), ('tree', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('S\uf0e00S1', 'S\uf0e00S1'), ('|', '|'), ('01', '01'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('000111', '000111'), ('Perform', 'perform'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('and', 'and'), ('draw', 'draw'), ('parse', 'parse'), ('tree', 'tree'), ('.', '.')] 

 Dependency tags are: 
>> [(('S\uf0e00S1', 'root'), 'root'), (('|', 'S\uf0e00S1'), 'punct'), (('01', 'string'), 'nummod'), (('Output', 'string'), 'compound'), (('string', 'S\uf0e00S1'), 'appos'), ((':', 'Perform'), 'punct'), (('000111', 'Perform'), 'nsubj'), (('Perform', 'S\uf0e00S1'), 'parataxis'), (('rightmost', 'derivation'), 'compound'), (('derivation', 'Perform'), 'obj'), (('and', 'draw'), 'cc'), (('draw', 'Perform'), 'conj'), (('parse', 'tree'), 'compound'), (('tree', 'draw'), 'obj'), (('.', 'S\uf0e00S1'), 'punct')]

 Named Entities are: 
>> [('000111', 'CARDINAL')]

========================== Sentence 19 ===========================

 EE+E | E*E | id | (E) | -E Output string: id + id * id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Ambiguous grammar        Ambiguity Ambiguity, is a word, phrase, or statement which contains more than one meaning. 

Tokens are: 
>> ['E\uf0e0E+E', '|', 'E*E', '|', 'id', '|', '(', 'E', ')', '|', '-E', 'Output', 'string', ':', 'id', '+', 'id', '*', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Ambiguous', 'grammar', 'Ambiguity', 'Ambiguity', ',', 'is', 'a', 'word', ',', 'phrase', ',', 'or', 'statement', 'which', 'contains', 'more', 'than', 'one', 'meaning', '.'] 

 UPOS tags are: 
>> [('E\uf0e0E+E', 'NOUN'), ('|', 'PUNCT'), ('E*E', 'NOUN'), ('|', 'PUNCT'), ('id', 'NOUN'), ('|', 'PUNCT'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('|', 'PUNCT'), ('-E', 'PUNCT'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('id', 'NOUN'), ('+', 'SYM'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('Ambiguity', 'NOUN'), ('Ambiguity', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('word', 'NOUN'), (',', 'PUNCT'), ('phrase', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('statement', 'NOUN'), ('which', 'PRON'), ('contains', 'VERB'), ('more', 'ADJ'), ('than', 'ADP'), ('one', 'NUM'), ('meaning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('E\uf0e0E+E', 'NN'), ('|', 'NFP'), ('E*E', 'NN'), ('|', 'NFP'), ('id', 'NN'), ('|', 'NFP'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('-E', 'NFP'), ('Output', 'NN'), ('string', 'NN'), (':', ':'), ('id', 'NN'), ('+', 'SYM'), ('id', 'NN'), ('*', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'GW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Ambiguous', 'JJ'), ('grammar', 'NN'), ('Ambiguity', 'NN'), ('Ambiguity', 'NN'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('word', 'NN'), (',', ','), ('phrase', 'NN'), (',', ','), ('or', 'CC'), ('statement', 'NN'), ('which', 'WDT'), ('contains', 'VBZ'), ('more', 'JJR'), ('than', 'IN'), ('one', 'CD'), ('meaning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('E\uf0e0E+E', 'e\uf0e0e+e'), ('|', '|'), ('E*E', 'e*e'), ('|', '|'), ('id', 'id'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('-E', '-e'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Ambiguous', 'ambiguous'), ('grammar', 'grammar'), ('Ambiguity', 'ambiguity'), ('Ambiguity', 'ambiguity'), (',', ','), ('is', 'be'), ('a', 'a'), ('word', 'word'), (',', ','), ('phrase', 'phrase'), (',', ','), ('or', 'or'), ('statement', 'statement'), ('which', 'which'), ('contains', 'contain'), ('more', 'more'), ('than', 'than'), ('one', 'one'), ('meaning', 'meaning'), ('.', '.')] 

 Dependency tags are: 
>> [(('E\uf0e0E+E', 'root'), 'root'), (('|', 'E\uf0e0E+E'), 'punct'), (('E*E', 'E\uf0e0E+E'), 'appos'), (('|', 'id'), 'punct'), (('id', 'E\uf0e0E+E'), 'appos'), (('|', 'id'), 'punct'), (('(', 'E'), 'punct'), (('E', 'id'), 'appos'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('-E', 'string'), 'punct'), (('Output', 'string'), 'compound'), (('string', 'id'), 'list'), ((':', 'string'), 'punct'), (('id', 'string'), 'dep'), (('+', 'id'), 'cc'), (('id', 'id'), 'conj'), (('*', 'id'), 'punct'), (('id', 'id'), 'conj'), (('Prof.', 'id'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'id'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'id'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'E\uf0e0E+E'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'id'), 'conj'), (('‹#›', 'E\uf0e0E+E'), 'appos'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'nummod'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'id'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'word'), 'nsubj'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Ambiguity'), 'compound'), (('Ambiguous', 'Ambiguity'), 'amod'), (('grammar', 'Ambiguity'), 'compound'), (('Ambiguity', 'Ambiguity'), 'compound'), (('Ambiguity', 'word'), 'conj'), ((',', 'word'), 'punct'), (('is', 'word'), 'cop'), (('a', 'word'), 'det'), (('word', 'E\uf0e0E+E'), 'parataxis'), ((',', 'phrase'), 'punct'), (('phrase', 'word'), 'conj'), ((',', 'statement'), 'punct'), (('or', 'statement'), 'cc'), (('statement', 'word'), 'conj'), (('which', 'contains'), 'nsubj'), (('contains', 'statement'), 'acl:relcl'), (('more', 'one'), 'advmod'), (('than', 'more'), 'fixed'), (('one', 'meaning'), 'nummod'), (('meaning', 'contains'), 'obj'), (('.', 'word'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('more than one', 'CARDINAL')]

========================== Sentence 20 ===========================

 Chip A long thin piece of potato A small piece of silicon      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Ambiguity 

Tokens are: 
>> ['Chip', 'A', 'long', 'thin', 'piece', 'of', 'potato', 'A', 'small', 'piece', 'of', 'silicon', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Ambiguity'] 

 UPOS tags are: 
>> [('Chip', 'NOUN'), ('A', 'DET'), ('long', 'ADJ'), ('thin', 'ADJ'), ('piece', 'NOUN'), ('of', 'ADP'), ('potato', 'NOUN'), ('A', 'DET'), ('small', 'ADJ'), ('piece', 'NOUN'), ('of', 'ADP'), ('silicon', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Ambiguity', 'NOUN')] 

 XPOS tags are: 
>> [('Chip', 'NN'), ('A', 'DT'), ('long', 'JJ'), ('thin', 'JJ'), ('piece', 'NN'), ('of', 'IN'), ('potato', 'NN'), ('A', 'DT'), ('small', 'JJ'), ('piece', 'NN'), ('of', 'IN'), ('silicon', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Ambiguity', 'NN')] 

 Lemmas are: 
>> [('Chip', 'chip'), ('A', 'a'), ('long', 'long'), ('thin', 'thin'), ('piece', 'piece'), ('of', 'of'), ('potato', 'potato'), ('A', 'a'), ('small', 'small'), ('piece', 'piece'), ('of', 'of'), ('silicon', 'silicon'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Ambiguity', 'ambiguity')] 

 Dependency tags are: 
>> [(('Chip', 'root'), 'root'), (('A', 'piece'), 'det'), (('long', 'piece'), 'amod'), (('thin', 'piece'), 'amod'), (('piece', 'Chip'), 'appos'), (('of', 'potato'), 'case'), (('potato', 'piece'), 'nmod'), (('A', 'piece'), 'det'), (('small', 'piece'), 'amod'), (('piece', 'piece'), 'appos'), (('of', 'Prof.'), 'case'), (('silicon', 'Prof.'), 'compound'), (('Prof.', 'piece'), 'nmod'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'piece'), 'nmod'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'piece'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Chip'), 'list'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'appos'), (('#', 'Chip'), 'list'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Chip'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Chip'), 'parataxis'), (('(', 'I'), 'punct'), (('I', 'Ambiguity'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Ambiguity'), 'compound'), (('Ambiguity', 'Chip'), 'parataxis')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 21 ===========================

 In formal language grammar, ambiguity would arise if identical string can occur on the RHS of two or more productions. 

Tokens are: 
>> ['In', 'formal', 'language', 'grammar', ',', 'ambiguity', 'would', 'arise', 'if', 'identical', 'string', 'can', 'occur', 'on', 'the', 'RHS', 'of', 'two', 'or', 'more', 'productions', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('formal', 'ADJ'), ('language', 'NOUN'), ('grammar', 'NOUN'), (',', 'PUNCT'), ('ambiguity', 'NOUN'), ('would', 'AUX'), ('arise', 'VERB'), ('if', 'SCONJ'), ('identical', 'ADJ'), ('string', 'NOUN'), ('can', 'AUX'), ('occur', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('RHS', 'NOUN'), ('of', 'ADP'), ('two', 'NUM'), ('or', 'CCONJ'), ('more', 'ADJ'), ('productions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('formal', 'JJ'), ('language', 'NN'), ('grammar', 'NN'), (',', ','), ('ambiguity', 'NN'), ('would', 'MD'), ('arise', 'VB'), ('if', 'IN'), ('identical', 'JJ'), ('string', 'NN'), ('can', 'MD'), ('occur', 'VB'), ('on', 'IN'), ('the', 'DT'), ('RHS', 'NN'), ('of', 'IN'), ('two', 'CD'), ('or', 'CC'), ('more', 'JJR'), ('productions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('formal', 'formal'), ('language', 'language'), ('grammar', 'grammar'), (',', ','), ('ambiguity', 'ambiguity'), ('would', 'would'), ('arise', 'arise'), ('if', 'if'), ('identical', 'identical'), ('string', 'string'), ('can', 'can'), ('occur', 'occur'), ('on', 'on'), ('the', 'the'), ('RHS', 'RHS'), ('of', 'of'), ('two', 'two'), ('or', 'or'), ('more', 'more'), ('productions', 'production'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'grammar'), 'case'), (('formal', 'grammar'), 'amod'), (('language', 'grammar'), 'compound'), (('grammar', 'arise'), 'obl'), ((',', 'arise'), 'punct'), (('ambiguity', 'arise'), 'nsubj'), (('would', 'arise'), 'aux'), (('arise', 'root'), 'root'), (('if', 'occur'), 'mark'), (('identical', 'string'), 'amod'), (('string', 'occur'), 'nsubj'), (('can', 'occur'), 'aux'), (('occur', 'arise'), 'advcl'), (('on', 'RHS'), 'case'), (('the', 'RHS'), 'det'), (('RHS', 'occur'), 'obl'), (('of', 'productions'), 'case'), (('two', 'productions'), 'nummod'), (('or', 'more'), 'cc'), (('more', 'two'), 'conj'), (('productions', 'RHS'), 'nmod'), (('.', 'arise'), 'punct')]

 Named Entities are: 
>> [('RHS', 'ORG'), ('two', 'CARDINAL')]

========================== Sentence 22 ===========================

 Grammar: 	 	  can be derived from either N1 or N2     Replaced by  or  ? 

Tokens are: 
>> ['Grammar', ':', 'can', 'be', 'derived', 'from', 'either', 'N1', 'or', 'N2', 'Replaced', 'by', 'or', '?'] 

 UPOS tags are: 
>> [('Grammar', 'NOUN'), (':', 'PUNCT'), ('can', 'AUX'), ('be', 'AUX'), ('derived', 'VERB'), ('from', 'ADP'), ('either', 'CCONJ'), ('N1', 'NUM'), ('or', 'CCONJ'), ('N2', 'NOUN'), ('Replaced', 'VERB'), ('by', 'ADP'), ('or', 'CCONJ'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('Grammar', 'NN'), (':', ':'), ('can', 'MD'), ('be', 'VB'), ('derived', 'VBN'), ('from', 'IN'), ('either', 'CC'), ('N1', 'CD'), ('or', 'CC'), ('N2', 'NN'), ('Replaced', 'VBN'), ('by', 'IN'), ('or', 'CC'), ('?', '.')] 

 Lemmas are: 
>> [('Grammar', 'grammar'), (':', ':'), ('can', 'can'), ('be', 'be'), ('derived', 'derive'), ('from', 'from'), ('either', 'either'), ('N1', 'n1'), ('or', 'or'), ('N2', 'n2'), ('Replaced', 'replace'), ('by', 'by'), ('or', 'or'), ('?', '?')] 

 Dependency tags are: 
>> [(('Grammar', 'root'), 'root'), ((':', 'Grammar'), 'punct'), (('can', 'derived'), 'aux'), (('be', 'derived'), 'aux:pass'), (('derived', 'Grammar'), 'appos'), (('from', 'N1'), 'case'), (('either', 'N1'), 'cc:preconj'), (('N1', 'derived'), 'obl'), (('or', 'N2'), 'cc'), (('N2', 'N1'), 'conj'), (('Replaced', 'N1'), 'acl'), (('by', 'Replaced'), 'obl'), (('or', 'Replaced'), 'cc'), (('?', 'derived'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 23 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Ambiguous grammar Ambiguous grammar is one that produces more than one leftmost or more then one rightmost derivation for the same sentence. 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Ambiguous', 'grammar', 'Ambiguous', 'grammar', 'is', 'one', 'that', 'produces', 'more', 'than', 'one', 'leftmost', 'or', 'more', 'then', 'one', 'rightmost', 'derivation', 'for', 'the', 'same', 'sentence', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('is', 'AUX'), ('one', 'NUM'), ('that', 'PRON'), ('produces', 'VERB'), ('more', 'ADJ'), ('than', 'ADP'), ('one', 'NUM'), ('leftmost', 'ADJ'), ('or', 'CCONJ'), ('more', 'ADV'), ('then', 'ADV'), ('one', 'NUM'), ('rightmost', 'ADJ'), ('derivation', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Ambiguous', 'JJ'), ('grammar', 'NN'), ('Ambiguous', 'JJ'), ('grammar', 'NN'), ('is', 'VBZ'), ('one', 'CD'), ('that', 'WDT'), ('produces', 'VBZ'), ('more', 'JJR'), ('than', 'IN'), ('one', 'CD'), ('leftmost', 'JJ'), ('or', 'CC'), ('more', 'RBR'), ('then', 'RB'), ('one', 'CD'), ('rightmost', 'JJ'), ('derivation', 'NN'), ('for', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('sentence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Ambiguous', 'ambiguous'), ('grammar', 'grammar'), ('Ambiguous', 'ambiguous'), ('grammar', 'grammar'), ('is', 'be'), ('one', 'one'), ('that', 'that'), ('produces', 'produce'), ('more', 'more'), ('than', 'than'), ('one', 'one'), ('leftmost', 'leftmost'), ('or', 'or'), ('more', 'more'), ('then', 'then'), ('one', 'one'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('for', 'for'), ('the', 'the'), ('same', 'same'), ('sentence', 'sentence'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'one'), 'nsubj'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'dep'), (('–', 'Prof.'), 'punct'), (('Basic', 'Prof.'), 'amod'), (('Probability', 'Prof.'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Prof.'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', 'Prof.'), 'appos'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'grammar'), 'compound'), (('Ambiguous', 'grammar'), 'amod'), (('grammar', 'grammar'), 'compound'), (('Ambiguous', 'grammar'), 'amod'), (('grammar', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'root'), 'root'), (('that', 'produces'), 'nsubj'), (('produces', 'one'), 'acl:relcl'), (('more', 'one'), 'advmod'), (('than', 'more'), 'fixed'), (('one', 'leftmost'), 'nummod'), (('leftmost', 'derivation'), 'amod'), (('or', 'more'), 'cc'), (('more', 'leftmost'), 'conj'), (('then', 'derivation'), 'advmod'), (('one', 'derivation'), 'nummod'), (('rightmost', 'derivation'), 'amod'), (('derivation', 'produces'), 'obj'), (('for', 'sentence'), 'case'), (('the', 'sentence'), 'det'), (('same', 'sentence'), 'amod'), (('sentence', 'derivation'), 'nmod'), (('.', 'one'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('more than one leftmost or more then one', 'CARDINAL')]

========================== Sentence 24 ===========================

 Grammar: SS+S | S*S | (S) | a		Output string: a+a*a  	    S					   	    S 	S*S						S+S 	S+S*S					a+S 	a+S*S					a+S*S 	a+a*S					a+a*S 	a+a*a					a+a*a 

Tokens are: 
>> ['Grammar', ':', 'S\uf0e0S+S', '|', 'S*S', '|', '(', 'S', ')', '|', 'a', 'Output', 'string', ':', 'a+', 'a*a', 'S', 'S', '\uf0e0S*S', '\uf0e0S+S', '\uf0e0S+S*S', '\uf0e0a+S', '\uf0e0a+S*S', '\uf0e0a+S*S', '\uf0e0a', '+a*', 'S', '\uf0e0a', '+a*', 'S', '\uf0e0a', '+', 'a*a', '\uf0e0a', '+', 'a*a'] 

 UPOS tags are: 
>> [('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0S+S', 'NOUN'), ('|', 'PUNCT'), ('S*S', 'NOUN'), ('|', 'PUNCT'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a+', 'PUNCT'), ('a*a', 'NOUN'), ('S', 'PUNCT'), ('S', 'PUNCT'), ('\uf0e0S*S', 'X'), ('\uf0e0S+S', 'X'), ('\uf0e0S+S*S', 'X'), ('\uf0e0a+S', 'X'), ('\uf0e0a+S*S', 'X'), ('\uf0e0a+S*S', 'X'), ('\uf0e0a', 'X'), ('+a*', 'X'), ('S', 'PUNCT'), ('\uf0e0a', 'NOUN'), ('+a*', 'PUNCT'), ('S', 'PUNCT'), ('\uf0e0a', 'NOUN'), ('+', 'PUNCT'), ('a*a', 'X'), ('\uf0e0a', 'X'), ('+', 'PUNCT'), ('a*a', 'X')] 

 XPOS tags are: 
>> [('Grammar', 'NN'), (':', ':'), ('S\uf0e0S+S', 'GW'), ('|', 'NFP'), ('S*S', 'NN'), ('|', 'NFP'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('a', 'NFP'), ('Output', 'NN'), ('string', 'NN'), (':', ':'), ('a+', 'NFP'), ('a*a', 'NN'), ('S', ','), ('S', ':'), ('\uf0e0S*S', 'GW'), ('\uf0e0S+S', 'GW'), ('\uf0e0S+S*S', 'GW'), ('\uf0e0a+S', 'GW'), ('\uf0e0a+S*S', 'GW'), ('\uf0e0a+S*S', 'GW'), ('\uf0e0a', 'NN'), ('+a*', 'NN'), ('S', ','), ('\uf0e0a', 'NN'), ('+a*', 'NFP'), ('S', ','), ('\uf0e0a', 'NN'), ('+', ','), ('a*a', 'GW'), ('\uf0e0a', 'GW'), ('+', 'NFP'), ('a*a', 'NN')] 

 Lemmas are: 
>> [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0S+S', 's\uf0e0s+s'), ('|', '|'), ('S*S', 's*s'), ('|', '|'), ('(', '('), ('S', 's'), (')', ')'), ('|', '|'), ('a', 'a'), ('Output', 'output'), ('string', 'string'), (':', ':'), ('a+', 'a+'), ('a*a', 'a*a'), ('S', 'S'), ('S', 'S'), ('\uf0e0S*S', '\uf0e0s*s'), ('\uf0e0S+S', '\uf0e0s+s'), ('\uf0e0S+S*S', '\uf0e0s+s*s'), ('\uf0e0a+S', '\uf0e0a+s'), ('\uf0e0a+S*S', '\uf0e0a+s*s'), ('\uf0e0a+S*S', '\uf0e0a+s*s'), ('\uf0e0a', '\uf0e0a'), ('+a*', '+a*'), ('S', 'S'), ('\uf0e0a', '\uf0e0a'), ('+a*', '+a*'), ('S', 'S'), ('\uf0e0a', '\uf0e0a'), ('+', '+'), ('a*a', 'a*a'), ('\uf0e0a', '\uf0e0a'), ('+', '+'), ('a*a', 'a*a')] 

 Dependency tags are: 
>> [(('Grammar', 'root'), 'root'), ((':', 'Grammar'), 'punct'), (('S\uf0e0S+S', 'Grammar'), 'appos'), (('|', 'S\uf0e0S+S'), 'punct'), (('S*S', 'S\uf0e0S+S'), 'list'), (('|', 'S\uf0e0S+S'), 'punct'), (('(', 'S'), 'punct'), (('S', 'S\uf0e0S+S'), 'list'), ((')', 'S'), 'punct'), (('|', 'S\uf0e0S+S'), 'punct'), (('a', 'string'), 'punct'), (('Output', 'string'), 'compound'), (('string', 'Grammar'), 'list'), ((':', 'string'), 'punct'), (('a+', 'a*a'), 'punct'), (('a*a', 'Grammar'), 'list'), (('S', 'a*a'), 'punct'), (('S', 'a*a'), 'punct'), (('\uf0e0S*S', 'a*a'), 'appos'), (('\uf0e0S+S', '\uf0e0S*S'), 'goeswith'), (('\uf0e0S+S*S', '\uf0e0S*S'), 'goeswith'), (('\uf0e0a+S', '\uf0e0S*S'), 'goeswith'), (('\uf0e0a+S*S', '\uf0e0S*S'), 'goeswith'), (('\uf0e0a+S*S', '\uf0e0S*S'), 'goeswith'), (('\uf0e0a', '\uf0e0S*S'), 'goeswith'), (('+a*', '\uf0e0a'), 'compound'), (('S', '\uf0e0a'), 'punct'), (('\uf0e0a', 'a*a'), 'appos'), (('+a*', '\uf0e0a'), 'punct'), (('S', '\uf0e0a'), 'punct'), (('\uf0e0a', '\uf0e0a'), 'appos'), (('+', '\uf0e0a'), 'punct'), (('a*a', '\uf0e0a'), 'appos'), (('\uf0e0a', 'a*a'), 'goeswith'), (('+', 'a*a'), 'punct'), (('a*a', '\uf0e0a'), 'list')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 Here, Two leftmost derivation for string a+a*a is possible hence, above grammar is ambiguous. 

Tokens are: 
>> ['Here', ',', 'Two', 'leftmost', 'derivation', 'for', 'string', 'a', '+', 'a*a', 'is', 'possible', 'hence', ',', 'above', 'grammar', 'is', 'ambiguous', '.'] 

 UPOS tags are: 
>> [('Here', 'ADV'), (',', 'PUNCT'), ('Two', 'NUM'), ('leftmost', 'ADJ'), ('derivation', 'NOUN'), ('for', 'ADP'), ('string', 'NOUN'), ('a', 'DET'), ('+', 'SYM'), ('a*a', 'NOUN'), ('is', 'AUX'), ('possible', 'ADJ'), ('hence', 'ADV'), (',', 'PUNCT'), ('above', 'ADJ'), ('grammar', 'NOUN'), ('is', 'AUX'), ('ambiguous', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Here', 'RB'), (',', ','), ('Two', 'CD'), ('leftmost', 'JJ'), ('derivation', 'NN'), ('for', 'IN'), ('string', 'NN'), ('a', 'DT'), ('+', 'SYM'), ('a*a', 'NN'), ('is', 'VBZ'), ('possible', 'JJ'), ('hence', 'RB'), (',', ','), ('above', 'JJ'), ('grammar', 'NN'), ('is', 'VBZ'), ('ambiguous', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Here', 'here'), (',', ','), ('Two', 'two'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('for', 'for'), ('string', 'string'), ('a', 'a'), ('+', '+'), ('a*a', 'a*a'), ('is', 'be'), ('possible', 'possible'), ('hence', 'hence'), (',', ','), ('above', 'above'), ('grammar', 'grammar'), ('is', 'be'), ('ambiguous', 'ambiguous'), ('.', '.')] 

 Dependency tags are: 
>> [(('Here', 'possible'), 'advmod'), ((',', 'possible'), 'punct'), (('Two', 'derivation'), 'nummod'), (('leftmost', 'derivation'), 'amod'), (('derivation', 'possible'), 'nsubj'), (('for', 'string'), 'case'), (('string', 'derivation'), 'nmod'), (('a', 'a*a'), 'det'), (('+', 'a*a'), 'cc'), (('a*a', 'string'), 'conj'), (('is', 'possible'), 'cop'), (('possible', 'root'), 'root'), (('hence', 'possible'), 'advmod'), ((',', 'ambiguous'), 'punct'), (('above', 'grammar'), 'amod'), (('grammar', 'ambiguous'), 'nsubj'), (('is', 'ambiguous'), 'cop'), (('ambiguous', 'possible'), 'parataxis'), (('.', 'possible'), 'punct')]

 Named Entities are: 
>> [('Two', 'CARDINAL')]

========================== Sentence 26 ===========================

 a S * S a a S S + S a S + S a a S * S S    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise: Ambiguous Grammar Check Ambiguity in following grammars: S aS | Sa | 𝜖  (output string: aaaa) 

Tokens are: 
>> ['a', 'S', '*', 'S', 'a', 'a', 'S', 'S', '+', 'S', 'a', 'S', '+', 'S', 'a', 'a', 'S', '*', 'S', 'S', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Exercise', ':', 'Ambiguous', 'Grammar', 'Check', 'Ambiguity', 'in', 'following', 'grammars', ':', 'S\uf0e0', 'aS', '|', 'Sa', '|', '𝜖', '(', 'output', 'string', ':', 'aaaa', ')'] 

 UPOS tags are: 
>> [('a', 'DET'), ('S', 'NOUN'), ('*', 'PUNCT'), ('S', 'AUX'), ('a', 'DET'), ('a', 'PROPN'), ('S', 'PROPN'), ('S', 'PART'), ('+', 'SYM'), ('S', 'PART'), ('a', 'DET'), ('S', 'NOUN'), ('+', 'SYM'), ('S', 'NOUN'), ('a', 'DET'), ('a', 'DET'), ('S', 'NOUN'), ('*', 'PUNCT'), ('S', 'PROPN'), ('S', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Exercise', 'NOUN'), (':', 'PUNCT'), ('Ambiguous', 'ADJ'), ('Grammar', 'NOUN'), ('Check', 'NOUN'), ('Ambiguity', 'NOUN'), ('in', 'ADP'), ('following', 'VERB'), ('grammars', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0', 'PROPN'), ('aS', 'ADP'), ('|', 'PUNCT'), ('Sa', 'NOUN'), ('|', 'PUNCT'), ('𝜖', 'X'), ('(', 'PUNCT'), ('output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('aaaa', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('a', 'DT'), ('S', 'NN'), ('*', 'NFP'), ('S', 'VBZ'), ('a', 'DT'), ('a', 'NNP'), ('S', 'NNP'), ('S', 'POS'), ('+', 'SYM'), ('S', 'POS'), ('a', 'DT'), ('S', 'NN'), ('+', 'SYM'), ('S', 'NN'), ('a', 'DT'), ('a', 'DT'), ('S', 'NN'), ('*', 'NFP'), ('S', 'NNP'), ('S', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Exercise', 'NN'), (':', ':'), ('Ambiguous', 'JJ'), ('Grammar', 'NN'), ('Check', 'NN'), ('Ambiguity', 'NN'), ('in', 'IN'), ('following', 'VBG'), ('grammars', 'NNS'), (':', ':'), ('S\uf0e0', 'NNP'), ('aS', 'IN'), ('|', 'NFP'), ('Sa', 'NN'), ('|', 'NFP'), ('𝜖', 'ADD'), ('(', '-LRB-'), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('aaaa', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('a', 'a'), ('S', 's'), ('*', '*'), ('S', 'be'), ('a', 'a'), ('a', 'a'), ('S', 'S'), ('S', "'s"), ('+', '+'), ('S', "'s"), ('a', 'a'), ('S', 's'), ('+', '+'), ('S', 's'), ('a', 'a'), ('a', 'a'), ('S', 's'), ('*', '*'), ('S', 'S'), ('S', 'S'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Exercise', 'Exercise'), (':', ':'), ('Ambiguous', 'ambiguous'), ('Grammar', 'grammar'), ('Check', 'check'), ('Ambiguity', 'ambiguity'), ('in', 'in'), ('following', 'follow'), ('grammars', 'grammar'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('aS', 'as'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aaaa', 'aaaa'), (')', ')')] 

 Dependency tags are: 
>> [(('a', 'S'), 'det'), (('S', '#'), 'nsubj'), (('*', 'S'), 'punct'), (('S', 'S'), 'cop'), (('a', 'S'), 'det'), (('a', 'S'), 'compound'), (('S', '+'), 'compound'), (('S', 'S'), 'case'), (('+', 'S'), 'cc'), (('S', '+'), 'case'), (('a', 'S'), 'det'), (('S', 'S'), 'compound'), (('+', 'S'), 'case'), (('S', 'root'), 'root'), (('a', '#'), 'det'), (('a', '#'), 'det'), (('S', '#'), 'compound'), (('*', 'S'), 'punct'), (('S', '#'), 'compound'), (('S', 'Prof.'), 'compound'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'S'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Unit'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Unit'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Exercise'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Exercise'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Exercise'), 'compound'), (('Exercise', '#'), 'appos'), ((':', 'Exercise'), 'punct'), (('Ambiguous', 'Ambiguity'), 'amod'), (('Grammar', 'Ambiguity'), 'compound'), (('Check', 'Ambiguity'), 'compound'), (('Ambiguity', 'Exercise'), 'appos'), (('in', 'grammars'), 'case'), (('following', 'grammars'), 'amod'), (('grammars', 'Ambiguity'), 'nmod'), ((':', 'S\uf0e0'), 'punct'), (('S\uf0e0', 'Ambiguity'), 'appos'), (('aS', 'Sa'), 'case'), (('|', 'Sa'), 'punct'), (('Sa', 'S\uf0e0'), 'nmod'), (('|', 'Sa'), 'punct'), (('𝜖', 'S\uf0e0'), 'conj'), (('(', 'string'), 'punct'), (('output', 'string'), 'compound'), (('string', 'S\uf0e0'), 'dep'), ((':', 'string'), 'punct'), (('aaaa', 'string'), 'appos'), ((')', 'string'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 27 ===========================

 S aSbS | bSaS | 𝜖  (output string: abab) S SS+ | SS* | a (output string: aa+a*) <exp> → <exp> + <term> | <term> <term> → <term> * <letter> | <letter>  <letter> → a|b|c|…|z  (output string: a+b*c) 

Tokens are: 
>> ['S\uf0e0', 'aSbS', '|', 'b', 'SaS', '|', '𝜖', '(', 'output', 'string', ':', 'abab', ')', 'S\uf0e0', 'SS', '+', '|', 'SS', '*', '|', 'a', '(', 'output', 'string', ':', 'aa+', 'a*', ')', '<', 'exp', '>', '→', '<', 'exp', '>', '+', '<', 'term', '>', '|', '<', 'term', '>', '<', 'term', '>', '→', '<', 'term', '>', '*', '<', 'letter', '>', '|', '<', 'letter', '>', '<', 'letter', '>', '→', 'a|b|c|…|z', '(', 'output', 'string', ':', 'a+b*c', ')'] 

 UPOS tags are: 
>> [('S\uf0e0', 'NOUN'), ('aSbS', 'NOUN'), ('|', 'PUNCT'), ('b', 'X'), ('SaS', 'X'), ('|', 'PUNCT'), ('𝜖', 'X'), ('(', 'PUNCT'), ('output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('abab', 'NOUN'), (')', 'PUNCT'), ('S\uf0e0', 'X'), ('SS', 'NOUN'), ('+', 'PUNCT'), ('|', 'PUNCT'), ('SS', 'NOUN'), ('*', 'PUNCT'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('(', 'PUNCT'), ('output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('aa+', 'NOUN'), ('a*', 'NOUN'), (')', 'PUNCT'), ('<', 'PUNCT'), ('exp', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('<', 'PUNCT'), ('exp', 'NOUN'), ('>', 'PUNCT'), ('+', 'SYM'), ('<', 'PUNCT'), ('term', 'NOUN'), ('>', 'PUNCT'), ('|', 'PUNCT'), ('<', 'PUNCT'), ('term', 'NOUN'), ('>', 'PUNCT'), ('<', 'PUNCT'), ('term', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('<', 'PUNCT'), ('term', 'NOUN'), ('>', 'PUNCT'), ('*', 'PUNCT'), ('<', 'PUNCT'), ('letter', 'NOUN'), ('>', 'PUNCT'), ('|', 'PUNCT'), ('<', 'PUNCT'), ('letter', 'NOUN'), ('>', 'PUNCT'), ('<', 'PUNCT'), ('letter', 'NOUN'), ('>', 'PUNCT'), ('→', 'PUNCT'), ('a|b|c|…|z', 'NOUN'), ('(', 'PUNCT'), ('output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a+b*c', 'X'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('S\uf0e0', 'GW'), ('aSbS', 'GW'), ('|', 'NFP'), ('b', 'GW'), ('SaS', 'GW'), ('|', 'NFP'), ('𝜖', 'NN'), ('(', '-LRB-'), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('abab', 'NN'), (')', '-RRB-'), ('S\uf0e0', 'GW'), ('SS', 'NN'), ('+', 'NFP'), ('|', 'NFP'), ('SS', 'NN'), ('*', 'NFP'), ('|', 'NFP'), ('a', 'NFP'), ('(', '-LRB-'), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('aa+', 'NN'), ('a*', 'NN'), (')', '-RRB-'), ('<', '-LRB-'), ('exp', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('<', '-LRB-'), ('exp', 'NN'), ('>', '-RRB-'), ('+', 'SYM'), ('<', '-LRB-'), ('term', 'NN'), ('>', '-RRB-'), ('|', 'NFP'), ('<', '-LRB-'), ('term', 'NN'), ('>', '-RRB-'), ('<', '-LRB-'), ('term', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('<', '-LRB-'), ('term', 'NN'), ('>', '-RRB-'), ('*', 'NFP'), ('<', '-LRB-'), ('letter', 'NN'), ('>', '-RRB-'), ('|', 'NFP'), ('<', '-LRB-'), ('letter', 'NN'), ('>', '-RRB-'), ('<', '-LRB-'), ('letter', 'NN'), ('>', '-RRB-'), ('→', 'NFP'), ('a|b|c|…|z', 'NN'), ('(', '-LRB-'), ('output', 'NN'), ('string', 'NN'), (':', ':'), ('a+b*c', 'ADD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('S\uf0e0', 's\uf0e0'), ('aSbS', 'asbs'), ('|', '|'), ('b', 'b'), ('SaS', 'sas'), ('|', '|'), ('𝜖', '𝜖'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('abab', 'abab'), (')', ')'), ('S\uf0e0', 's\uf0e0'), ('SS', 'ss'), ('+', '+'), ('|', '|'), ('SS', 'ss'), ('*', '*'), ('|', '|'), ('a', 'a'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('aa+', 'aa+'), ('a*', 'a*'), (')', ')'), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('→', "''"), ('<', '<'), ('exp', 'exp'), ('>', '>'), ('+', '+'), ('<', '<'), ('term', 'term'), ('>', '>'), ('|', '|'), ('<', '<'), ('term', 'term'), ('>', '>'), ('<', '<'), ('term', 'term'), ('>', '>'), ('→', "''"), ('<', '<'), ('term', 'term'), ('>', '>'), ('*', '*'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('|', '|'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('<', '<'), ('letter', 'letter'), ('>', '>'), ('→', "''"), ('a|b|c|…|z', 'a|b|c|…|z'), ('(', '('), ('output', 'output'), ('string', 'string'), (':', ':'), ('a+b*c', 'a+b*c'), (')', ')')] 

 Dependency tags are: 
>> [(('S\uf0e0', 'root'), 'root'), (('aSbS', 'S\uf0e0'), 'goeswith'), (('|', 'S\uf0e0'), 'goeswith'), (('b', 'S\uf0e0'), 'goeswith'), (('SaS', 'S\uf0e0'), 'goeswith'), (('|', 'S\uf0e0'), 'punct'), (('𝜖', 'S\uf0e0'), 'goeswith'), (('(', 'string'), 'punct'), (('output', 'string'), 'compound'), (('string', 'S\uf0e0'), 'list'), ((':', 'string'), 'punct'), (('abab', 'string'), 'appos'), ((')', 'string'), 'punct'), (('S\uf0e0', 'SS'), 'compound'), (('SS', 'S\uf0e0'), 'list'), (('+', 'S\uf0e0'), 'punct'), (('|', 'S\uf0e0'), 'punct'), (('SS', 'S\uf0e0'), 'list'), (('*', 'SS'), 'punct'), (('|', 'S\uf0e0'), 'punct'), (('a', 'S\uf0e0'), 'punct'), (('(', 'string'), 'punct'), (('output', 'string'), 'compound'), (('string', 'S\uf0e0'), 'list'), ((':', 'string'), 'punct'), (('aa+', 'a*'), 'compound'), (('a*', 'string'), 'appos'), ((')', 'string'), 'punct'), (('<', 'exp'), 'punct'), (('exp', 'S\uf0e0'), 'list'), (('>', 'exp'), 'punct'), (('→', 'exp'), 'punct'), (('<', 'exp'), 'punct'), (('exp', 'S\uf0e0'), 'list'), (('>', 'exp'), 'punct'), (('+', 'term'), 'cc'), (('<', 'term'), 'punct'), (('term', 'S\uf0e0'), 'list'), (('>', 'term'), 'punct'), (('|', 'term'), 'punct'), (('<', 'term'), 'punct'), (('term', 'S\uf0e0'), 'list'), (('>', 'term'), 'punct'), (('<', 'term'), 'punct'), (('term', 'term'), 'appos'), (('>', 'term'), 'punct'), (('→', 'term'), 'punct'), (('<', 'term'), 'punct'), (('term', 'term'), 'appos'), (('>', 'term'), 'punct'), (('*', 'term'), 'punct'), (('<', 'letter'), 'punct'), (('letter', 'term'), 'appos'), (('>', 'letter'), 'punct'), (('|', 'letter'), 'punct'), (('<', 'letter'), 'punct'), (('letter', 'letter'), 'appos'), (('>', 'letter'), 'punct'), (('<', 'letter'), 'punct'), (('letter', 'letter'), 'appos'), (('>', 'letter'), 'punct'), (('→', 'letter'), 'punct'), (('a|b|c|…|z', 'letter'), 'appos'), (('(', 'string'), 'punct'), (('output', 'string'), 'compound'), (('string', 'a|b|c|…|z'), 'appos'), ((':', 'string'), 'punct'), (('a+b*c', 'string'), 'appos'), ((')', 'string'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 Prove that the CFG with productions: S  a | Sa | bSS | SSb | SbS  is ambiguous (Hint: consider output string yourself)     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['Prove', 'that', 'the', 'CFG', 'with', 'productions', ':', 'S', '\uf0e0', 'a', '|', 'Sa', '|', 'bSS', '|', 'SS', 'b', '|', 'SbS', 'is', 'ambiguous', '(', 'Hint', ':', 'consider', 'output', 'string', 'yourself', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›'] 

 UPOS tags are: 
>> [('Prove', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('CFG', 'NOUN'), ('with', 'ADP'), ('productions', 'NOUN'), (':', 'PUNCT'), ('S', 'PROPN'), ('\uf0e0', 'NOUN'), ('a', 'NOUN'), ('|', 'PUNCT'), ('Sa', 'NOUN'), ('|', 'PUNCT'), ('bSS', 'NOUN'), ('|', 'PUNCT'), ('SS', 'NOUN'), ('b', 'NOUN'), ('|', 'PUNCT'), ('SbS', 'NOUN'), ('is', 'AUX'), ('ambiguous', 'ADJ'), ('(', 'PUNCT'), ('Hint', 'NOUN'), (':', 'PUNCT'), ('consider', 'VERB'), ('output', 'NOUN'), ('string', 'NOUN'), ('yourself', 'PRON'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X')] 

 XPOS tags are: 
>> [('Prove', 'VB'), ('that', 'IN'), ('the', 'DT'), ('CFG', 'NN'), ('with', 'IN'), ('productions', 'NNS'), (':', ':'), ('S', 'NNP'), ('\uf0e0', 'NN'), ('a', 'NN'), ('|', 'NFP'), ('Sa', 'NN'), ('|', 'NFP'), ('bSS', 'NN'), ('|', 'NFP'), ('SS', 'NN'), ('b', 'NN'), ('|', 'NFP'), ('SbS', 'NN'), ('is', 'VBZ'), ('ambiguous', 'JJ'), ('(', '-LRB-'), ('Hint', 'NN'), (':', ':'), ('consider', 'VB'), ('output', 'NN'), ('string', 'NN'), ('yourself', 'PRP'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'ADD')] 

 Lemmas are: 
>> [('Prove', 'prove'), ('that', 'that'), ('the', 'the'), ('CFG', 'CFG'), ('with', 'with'), ('productions', 'production'), (':', ':'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('|', '|'), ('Sa', 'sa'), ('|', '|'), ('bSS', 'bSS'), ('|', '|'), ('SS', 'ss'), ('b', 'b'), ('|', '|'), ('SbS', 'sbs'), ('is', 'be'), ('ambiguous', 'ambiguous'), ('(', '('), ('Hint', 'hint'), (':', ':'), ('consider', 'consider'), ('output', 'output'), ('string', 'string'), ('yourself', 'yourself'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('Prove', 'root'), 'root'), (('that', 'ambiguous'), 'mark'), (('the', 'CFG'), 'det'), (('CFG', 'Prove'), 'obj'), (('with', 'productions'), 'case'), (('productions', 'CFG'), 'nmod'), ((':', 'CFG'), 'punct'), (('S', 'a'), 'compound'), (('\uf0e0', 'a'), 'compound'), (('a', 'CFG'), 'appos'), (('|', 'Sa'), 'punct'), (('Sa', 'bSS'), 'compound'), (('|', 'bSS'), 'punct'), (('bSS', 'a'), 'conj'), (('|', 'b'), 'punct'), (('SS', 'b'), 'compound'), (('b', 'bSS'), 'appos'), (('|', 'b'), 'punct'), (('SbS', 'ambiguous'), 'nsubj'), (('is', 'ambiguous'), 'cop'), (('ambiguous', 'Prove'), 'parataxis'), (('(', 'Hint'), 'punct'), (('Hint', 'ambiguous'), 'appos'), ((':', 'consider'), 'punct'), (('consider', 'ambiguous'), 'parataxis'), (('output', 'string'), 'compound'), (('string', 'consider'), 'obj'), (('yourself', 'consider'), 'obj'), ((')', 'consider'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'consider'), 'obj'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'PS'), 'punct'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'ambiguous'), 'parataxis'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Theory'), 'appos')]

 Named Entities are: 
>> [('CFG', 'ORG'), ('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 29 ===========================

 Left recursion & Left factoring        Left recursion A grammar is said to be left recursive if it has a non terminal  such that there is a derivation for some string  Algorithm to eliminate left recursion Arrange the non terminals in some order   For  do begin 	for  do begin  		replace each production of the form    			by the productions , 			where are all the current 				productions;  	 end  	 eliminate the immediate left recursion among the  - productions end     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['Left', 'recursion', '&', 'Left', 'factoring', 'Left', 'recursion', 'A', 'grammar', 'is', 'said', 'to', 'be', 'left', 'recursive', 'if', 'it', 'has', 'a', 'non', 'terminal', 'such', 'that', 'there', 'is', 'a', 'derivation', 'for', 'some', 'string', 'Algorithm', 'to', 'eliminate', 'left', 'recursion', 'Arrange', 'the', 'non', 'terminals', 'in', 'some', 'order', 'For', 'do', 'begin', 'for', 'do', 'begin', 'replace', 'each', 'production', 'of', 'the', 'form', 'by', 'the', 'productions', ',', 'where', 'are', 'all', 'the', 'current', 'productions', ';', 'end', 'eliminate', 'the', 'immediate', 'left', 'recursion', 'among', 'the', '-', 'productions', 'end', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›'] 

 UPOS tags are: 
>> [('Left', 'VERB'), ('recursion', 'NOUN'), ('&', 'CCONJ'), ('Left', 'VERB'), ('factoring', 'VERB'), ('Left', 'VERB'), ('recursion', 'NOUN'), ('A', 'DET'), ('grammar', 'NOUN'), ('is', 'AUX'), ('said', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('left', 'VERB'), ('recursive', 'NOUN'), ('if', 'SCONJ'), ('it', 'PRON'), ('has', 'VERB'), ('a', 'DET'), ('non', 'ADJ'), ('terminal', 'NOUN'), ('such', 'ADJ'), ('that', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('derivation', 'NOUN'), ('for', 'ADP'), ('some', 'DET'), ('string', 'NOUN'), ('Algorithm', 'NOUN'), ('to', 'PART'), ('eliminate', 'VERB'), ('left', 'VERB'), ('recursion', 'NOUN'), ('Arrange', 'VERB'), ('the', 'DET'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('in', 'ADP'), ('some', 'DET'), ('order', 'NOUN'), ('For', 'ADP'), ('do', 'AUX'), ('begin', 'VERB'), ('for', 'ADP'), ('do', 'AUX'), ('begin', 'VERB'), ('replace', 'VERB'), ('each', 'DET'), ('production', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('form', 'NOUN'), ('by', 'ADP'), ('the', 'DET'), ('productions', 'NOUN'), (',', 'PUNCT'), ('where', 'ADV'), ('are', 'AUX'), ('all', 'PRON'), ('the', 'DET'), ('current', 'ADJ'), ('productions', 'NOUN'), (';', 'PUNCT'), ('end', 'NOUN'), ('eliminate', 'VERB'), ('the', 'DET'), ('immediate', 'ADJ'), ('left', 'VERB'), ('recursion', 'NOUN'), ('among', 'ADP'), ('the', 'DET'), ('-', 'PUNCT'), ('productions', 'NOUN'), ('end', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X')] 

 XPOS tags are: 
>> [('Left', 'VBN'), ('recursion', 'NN'), ('&', 'CC'), ('Left', 'VBN'), ('factoring', 'VBG'), ('Left', 'VBN'), ('recursion', 'NN'), ('A', 'DT'), ('grammar', 'NN'), ('is', 'VBZ'), ('said', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('left', 'VBN'), ('recursive', 'NN'), ('if', 'IN'), ('it', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('non', 'JJ'), ('terminal', 'NN'), ('such', 'JJ'), ('that', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('derivation', 'NN'), ('for', 'IN'), ('some', 'DT'), ('string', 'NN'), ('Algorithm', 'NN'), ('to', 'TO'), ('eliminate', 'VB'), ('left', 'VBN'), ('recursion', 'NN'), ('Arrange', 'VB'), ('the', 'DT'), ('non', 'NN'), ('terminals', 'NNS'), ('in', 'IN'), ('some', 'DT'), ('order', 'NN'), ('For', 'IN'), ('do', 'VB'), ('begin', 'VB'), ('for', 'IN'), ('do', 'VB'), ('begin', 'VB'), ('replace', 'VB'), ('each', 'DT'), ('production', 'NN'), ('of', 'IN'), ('the', 'DT'), ('form', 'NN'), ('by', 'IN'), ('the', 'DT'), ('productions', 'NNS'), (',', ','), ('where', 'WRB'), ('are', 'VBP'), ('all', 'PDT'), ('the', 'DT'), ('current', 'JJ'), ('productions', 'NNS'), (';', ':'), ('end', 'NN'), ('eliminate', 'VB'), ('the', 'DT'), ('immediate', 'JJ'), ('left', 'VBN'), ('recursion', 'NN'), ('among', 'IN'), ('the', 'DT'), ('-', 'HYPH'), ('productions', 'NNS'), ('end', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'ADD')] 

 Lemmas are: 
>> [('Left', 'Left'), ('recursion', 'recursion'), ('&', '&'), ('Left', 'Left'), ('factoring', 'factor'), ('Left', 'Left'), ('recursion', 'recursion'), ('A', 'a'), ('grammar', 'grammar'), ('is', 'be'), ('said', 'say'), ('to', 'to'), ('be', 'be'), ('left', 'leave'), ('recursive', 'recursive'), ('if', 'if'), ('it', 'it'), ('has', 'have'), ('a', 'a'), ('non', 'non'), ('terminal', 'terminal'), ('such', 'such'), ('that', 'that'), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('derivation', 'derivation'), ('for', 'for'), ('some', 'some'), ('string', 'string'), ('Algorithm', 'algorithm'), ('to', 'to'), ('eliminate', 'eliminate'), ('left', 'leave'), ('recursion', 'recursion'), ('Arrange', 'arrange'), ('the', 'the'), ('non', 'non'), ('terminals', 'terminal'), ('in', 'in'), ('some', 'some'), ('order', 'order'), ('For', 'for'), ('do', 'do'), ('begin', 'begin'), ('for', 'for'), ('do', 'do'), ('begin', 'begin'), ('replace', 'replace'), ('each', 'each'), ('production', 'production'), ('of', 'of'), ('the', 'the'), ('form', 'form'), ('by', 'by'), ('the', 'the'), ('productions', 'production'), (',', ','), ('where', 'where'), ('are', 'be'), ('all', 'all'), ('the', 'the'), ('current', 'current'), ('productions', 'production'), (';', ';'), ('end', 'end'), ('eliminate', 'eliminate'), ('the', 'the'), ('immediate', 'immediate'), ('left', 'leave'), ('recursion', 'recursion'), ('among', 'among'), ('the', 'the'), ('-', '-'), ('productions', 'production'), ('end', 'end'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('Left', 'recursion'), 'amod'), (('recursion', 'said'), 'nsubj:pass'), (('&', 'factoring'), 'cc'), (('Left', 'factoring'), 'compound'), (('factoring', 'recursion'), 'acl'), (('Left', 'recursion'), 'amod'), (('recursion', 'recursion'), 'conj'), (('A', 'grammar'), 'det'), (('grammar', 'recursion'), 'appos'), (('is', 'said'), 'aux:pass'), (('said', 'root'), 'root'), (('to', 'left'), 'mark'), (('be', 'left'), 'aux:pass'), (('left', 'said'), 'xcomp'), (('recursive', 'left'), 'xcomp'), (('if', 'has'), 'mark'), (('it', 'has'), 'nsubj'), (('has', 'left'), 'advcl'), (('a', 'terminal'), 'det'), (('non', 'terminal'), 'amod'), (('terminal', 'has'), 'obj'), (('such', 'is'), 'mark'), (('that', 'such'), 'fixed'), (('there', 'is'), 'expl'), (('is', 'terminal'), 'acl'), (('a', 'derivation'), 'det'), (('derivation', 'is'), 'nsubj'), (('for', 'Algorithm'), 'case'), (('some', 'Algorithm'), 'det'), (('string', 'Algorithm'), 'compound'), (('Algorithm', 'derivation'), 'nmod'), (('to', 'eliminate'), 'mark'), (('eliminate', 'derivation'), 'acl'), (('left', 'recursion'), 'amod'), (('recursion', 'Arrange'), 'obj'), (('Arrange', 'eliminate'), 'xcomp'), (('the', 'terminals'), 'det'), (('non', 'terminals'), 'compound'), (('terminals', 'Arrange'), 'obj'), (('in', 'order'), 'case'), (('some', 'order'), 'det'), (('order', 'Arrange'), 'obl'), (('For', 'begin'), 'mark'), (('do', 'begin'), 'aux'), (('begin', 'order'), 'acl'), (('for', 'begin'), 'mark'), (('do', 'begin'), 'aux'), (('begin', 'begin'), 'advcl'), (('replace', 'begin'), 'xcomp'), (('each', 'production'), 'det'), (('production', 'replace'), 'obj'), (('of', 'form'), 'case'), (('the', 'form'), 'det'), (('form', 'production'), 'nmod'), (('by', 'productions'), 'case'), (('the', 'productions'), 'det'), (('productions', 'form'), 'nmod'), ((',', 'productions'), 'punct'), (('where', 'productions'), 'mark'), (('are', 'productions'), 'cop'), (('all', 'productions'), 'det:predet'), (('the', 'productions'), 'det'), (('current', 'productions'), 'amod'), (('productions', 'productions'), 'acl:relcl'), ((';', 'eliminate'), 'punct'), (('end', 'eliminate'), 'nsubj'), (('eliminate', 'productions'), 'parataxis'), (('the', 'recursion'), 'det'), (('immediate', 'recursion'), 'amod'), (('left', 'recursion'), 'amod'), (('recursion', 'eliminate'), 'obj'), (('among', 'end'), 'case'), (('the', 'productions'), 'det'), (('-', 'productions'), 'punct'), (('productions', 'end'), 'compound'), (('end', 'recursion'), 'nmod'), (('Prof.', 'end'), 'compound'), (('Jay', 'end'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'end'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'I'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 30 ===========================

 Left recursion elimination         𝜖    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Examples: Left recursion elimination EE+T | T 				ETE’ 				E’+TE’ | ε TT*F | F 				TFT’ 				T’*FT’ | ε  XX%Y | Z 				XZX’ 				X’%YX’ | ε       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise: Left recursion AAbd | Aa | a        BBe | b AAB | AC | a | b SA | B AABC | Acd | a | aa BBee | b ExpExp+term | Exp-term | term      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['Left', 'recursion', 'elimination', '\uf0e0', '𝜖', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Examples', ':', 'Left', 'recursion', 'elimination', 'E\uf0e0E+T', '|', 'T', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ε', 'T\uf0e0T*F', '|', 'F', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ε', 'X\uf0e0X', '%', 'Y', '|', 'Z', 'X\uf0e0ZX', '’', 'X’\uf0e0', '%YX', '’', '|', 'ε', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Exercise', ':', 'Left', 'recursion', 'A\uf0e0Abd', '|', 'Aa', '|', 'a', 'B', '\uf0e0Be', '|', 'b', 'A\uf0e0AB', '|', 'AC', '|', 'a', '|', 'b', 'S\uf0e0A', '|', 'B', 'A\uf0e0ABC', '|', 'Acd', '|', 'a', '|', 'aa', 'B\uf0e0Bee', '|', 'b', 'Exp\uf0e0Exp+term', '|', 'Exp-term', '|', 'term', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›'] 

 UPOS tags are: 
>> [('Left', 'VERB'), ('recursion', 'NOUN'), ('elimination', 'NOUN'), ('\uf0e0', 'PROPN'), ('𝜖', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Examples', 'NOUN'), (':', 'PUNCT'), ('Left', 'NOUN'), ('recursion', 'NOUN'), ('elimination', 'NOUN'), ('E\uf0e0E+T', 'X'), ('|', 'PUNCT'), ('T', 'X'), ('E\uf0e0TE', 'X'), ('’', 'X'), ('E’\uf0e0+TE', 'X'), ('’', 'X'), ('|', 'PUNCT'), ('ε', 'X'), ('T\uf0e0T*F', 'X'), ('|', 'PUNCT'), ('F', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ε', 'NOUN'), ('X\uf0e0X', 'NUM'), ('%', 'SYM'), ('Y', 'X'), ('|', 'PUNCT'), ('Z', 'X'), ('X\uf0e0ZX', 'X'), ('’', 'PUNCT'), ('X’\uf0e0', 'X'), ('%YX', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ε', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'X'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'X'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Exercise', 'NOUN'), (':', 'PUNCT'), ('Left', 'NOUN'), ('recursion', 'NOUN'), ('A\uf0e0Abd', 'X'), ('|', 'PUNCT'), ('Aa', 'NOUN'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('B', 'X'), ('\uf0e0Be', 'X'), ('|', 'PUNCT'), ('b', 'PUNCT'), ('A\uf0e0AB', 'NOUN'), ('|', 'PUNCT'), ('AC', 'NOUN'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('|', 'PUNCT'), ('b', 'PUNCT'), ('S\uf0e0A', 'PUNCT'), ('|', 'PUNCT'), ('B', 'PUNCT'), ('A\uf0e0ABC', 'NOUN'), ('|', 'PUNCT'), ('Acd', 'NOUN'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('|', 'PUNCT'), ('aa', 'PUNCT'), ('B\uf0e0Bee', 'PUNCT'), ('|', 'PUNCT'), ('b', 'PUNCT'), ('Exp\uf0e0Exp+term', 'NOUN'), ('|', 'PUNCT'), ('Exp-term', 'NOUN'), ('|', 'PUNCT'), ('term', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PUNCT'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X')] 

 XPOS tags are: 
>> [('Left', 'VBN'), ('recursion', 'NN'), ('elimination', 'NN'), ('\uf0e0', 'NNP'), ('𝜖', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Examples', 'NNS'), (':', ':'), ('Left', 'NN'), ('recursion', 'NN'), ('elimination', 'NN'), ('E\uf0e0E+T', 'GW'), ('|', 'NFP'), ('T', 'GW'), ('E\uf0e0TE', 'GW'), ('’', 'FW'), ('E’\uf0e0+TE', 'GW'), ('’', 'GW'), ('|', 'NFP'), ('ε', 'GW'), ('T\uf0e0T*F', 'GW'), ('|', 'NFP'), ('F', 'GW'), ('T\uf0e0FT', 'GW'), ('’', ':'), ('T’\uf0e0*', 'GW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ε', 'NN'), ('X\uf0e0X', 'CD'), ('%', 'NN'), ('Y', 'ADD'), ('|', 'NFP'), ('Z', 'FW'), ('X\uf0e0ZX', 'FW'), ('’', "''"), ('X’\uf0e0', 'GW'), ('%YX', 'NN'), ('’', "''"), ('|', 'NFP'), ('ε', 'NN'), ('Prof.', 'NN'), ('Jay', 'FW'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'FW'), ('B', 'GW'), ('Kagathara', 'ADD'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'GW'), ('Exercise', 'NN'), (':', ':'), ('Left', 'GW'), ('recursion', 'NN'), ('A\uf0e0Abd', 'GW'), ('|', 'NFP'), ('Aa', 'NN'), ('|', 'NFP'), ('a', 'NFP'), ('B', 'GW'), ('\uf0e0Be', 'GW'), ('|', 'NFP'), ('b', 'NFP'), ('A\uf0e0AB', 'NN'), ('|', 'NFP'), ('AC', 'NN'), ('|', 'NFP'), ('a', 'NFP'), ('|', 'NFP'), ('b', 'NFP'), ('S\uf0e0A', 'NFP'), ('|', 'NFP'), ('B', 'NFP'), ('A\uf0e0ABC', 'NN'), ('|', 'NFP'), ('Acd', 'NN'), ('|', 'NFP'), ('a', 'NFP'), ('|', 'NFP'), ('aa', 'NFP'), ('B\uf0e0Bee', 'NFP'), ('|', 'NFP'), ('b', 'NFP'), ('Exp\uf0e0Exp+term', 'NN'), ('|', 'NFP'), ('Exp-term', 'NN'), ('|', 'NFP'), ('term', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NFP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NFP'), ('Unit', 'NN'), ('1', 'CD'), ('–', 'NFP'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'GW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN')] 

 Lemmas are: 
>> [('Left', 'Left'), ('recursion', 'recursion'), ('elimination', 'elimination'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Examples', 'example'), (':', ':'), ('Left', 'Left'), ('recursion', 'recursion'), ('elimination', 'elimination'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 'T'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'s"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'s"), ('|', '|'), ('ε', 'ε'), ('T\uf0e0T*F', 't\uf0e0t*f'), ('|', '|'), ('F', 'F'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ε', 'ε'), ('X\uf0e0X', 'x\uf0e0x'), ('%', '%'), ('Y', 'Y'), ('|', '|'), ('Z', 'z'), ('X\uf0e0ZX', 'x\uf0e0zx'), ('’', "'"), ('X’\uf0e0', 'x’\uf0e0'), ('%YX', '%yx'), ('’', "'"), ('|', '|'), ('ε', 'ε'), ('Prof.', 'Prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Exercise', 'Exercise'), (':', ':'), ('Left', 'Left'), ('recursion', 'recursion'), ('A\uf0e0Abd', 'a\uf0e0abd'), ('|', '|'), ('Aa', 'aa'), ('|', '|'), ('a', 'a'), ('B', 'B'), ('\uf0e0Be', '\uf0e0Be'), ('|', '|'), ('b', 'b'), ('A\uf0e0AB', 'a\uf0e0ab'), ('|', '|'), ('AC', 'ac'), ('|', '|'), ('a', 'a'), ('|', '|'), ('b', 'b'), ('S\uf0e0A', 'S\uf0e0A'), ('|', '|'), ('B', 'B'), ('A\uf0e0ABC', 'a\uf0e0abc'), ('|', '|'), ('Acd', 'acd'), ('|', '|'), ('a', 'a'), ('|', '|'), ('aa', 'a'), ('B\uf0e0Bee', 'B\uf0e0Bee'), ('|', '|'), ('b', 'b'), ('Exp\uf0e0Exp+term', 'exp\uf0e0exp+term'), ('|', '|'), ('Exp-term', 'exp-term'), ('|', '|'), ('term', 'term'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('Left', 'elimination'), 'amod'), (('recursion', 'elimination'), 'compound'), (('elimination', 'root'), 'root'), (('\uf0e0', 'elimination'), 'flat'), (('𝜖', '\uf0e0'), 'flat'), (('Prof.', '\uf0e0'), 'flat'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'elimination'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'elimination'), 'appos'), (('1', 'Unit'), 'dep'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'elimination'), 'conj'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'elimination'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'elimination'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Examples'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Examples'), 'compound'), (('Examples', 'elimination'), 'conj'), ((':', 'elimination'), 'punct'), (('Left', 'Examples'), 'compound'), (('recursion', 'elimination'), 'compound'), (('elimination', 'elimination'), 'parataxis'), (('E\uf0e0E+T', 'elimination'), 'dep'), (('|', 'elimination'), 'punct'), (('T', 'elimination'), 'dep'), (('E\uf0e0TE', 'E’\uf0e0+TE'), 'compound'), (('’', 'E\uf0e0TE'), 'case'), (('E’\uf0e0+TE', 'elimination'), 'conj'), (('’', 'E’\uf0e0+TE'), 'case'), (('|', 'ε'), 'punct'), (('ε', 'elimination'), 'conj'), (('T\uf0e0T*F', 'elimination'), 'conj'), (('|', 'elimination'), 'punct'), (('F', 'elimination'), 'conj'), (('T\uf0e0FT', 'elimination'), 'conj'), (('’', 'elimination'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'elimination'), 'conj'), (('’', 'elimination'), 'punct'), (('|', '\uf0e0'), 'punct'), (('ε', 'elimination'), 'conj'), (('X\uf0e0X', '%'), 'nummod'), (('%', 'Y'), 'compound'), (('Y', 'ε'), 'dep'), (('|', 'elimination'), 'punct'), (('Z', 'elimination'), 'conj'), (('X\uf0e0ZX', '\uf0e0'), 'conj'), (('’', 'elimination'), 'punct'), (('X’\uf0e0', '%YX'), 'compound'), (('%YX', 'elimination'), 'conj'), (('’', 'elimination'), 'punct'), (('|', 'elimination'), 'punct'), (('ε', 'elimination'), 'conj'), (('Prof.', 'ε'), 'compound'), (('Jay', 'ε'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Dixita'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Exercise'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Exercise'), 'compound'), (('Exercise', 'Theory'), 'appos'), ((':', 'Exercise'), 'punct'), (('Left', 'recursion'), 'compound'), (('recursion', 'Exercise'), 'appos'), (('A\uf0e0Abd', 'recursion'), 'compound'), (('|', 'recursion'), 'punct'), (('Aa', 'recursion'), 'appos'), (('|', 'recursion'), 'punct'), (('a', 'A\uf0e0AB'), 'punct'), (('B', 'A\uf0e0AB'), 'compound'), (('\uf0e0Be', 'Aa'), 'compound'), (('|', 'A\uf0e0AB'), 'punct'), (('b', 'A\uf0e0AB'), 'punct'), (('A\uf0e0AB', 'Aa'), 'appos'), (('|', 'A\uf0e0AB'), 'punct'), (('AC', 'A\uf0e0AB'), 'appos'), (('|', 'AC'), 'punct'), (('a', 'A\uf0e0AB'), 'punct'), (('|', 'AC'), 'punct'), (('b', 'A\uf0e0ABC'), 'punct'), (('S\uf0e0A', 'A\uf0e0ABC'), 'punct'), (('|', 'A\uf0e0ABC'), 'punct'), (('B', 'A\uf0e0ABC'), 'punct'), (('A\uf0e0ABC', 'AC'), 'appos'), (('|', 'A\uf0e0ABC'), 'punct'), (('Acd', 'A\uf0e0ABC'), 'appos'), (('|', 'Acd'), 'punct'), (('a', 'Acd'), 'punct'), (('|', 'Acd'), 'punct'), (('aa', 'Acd'), 'punct'), (('B\uf0e0Bee', 'Exp\uf0e0Exp+term'), 'punct'), (('|', 'Exp\uf0e0Exp+term'), 'punct'), (('b', 'Exp\uf0e0Exp+term'), 'punct'), (('Exp\uf0e0Exp+term', 'Acd'), 'appos'), (('|', 'Exp\uf0e0Exp+term'), 'punct'), (('Exp-term', 'Exp\uf0e0Exp+term'), 'appos'), (('|', 'Exp-term'), 'punct'), (('term', 'Exp\uf0e0Exp+term'), 'appos'), (('Prof.', 'term'), 'compound'), (('Jay', 'Prof.'), 'appos'), (('R', 'Jay'), 'punct'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'PS'), 'punct'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Prof.'), 'flat'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'nummod'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'Probability'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'I'), 'discourse')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 31 ===========================

 Left factoring Left factoring is a grammar transformation that is useful for producing a grammar suitable for predictive parsing. 

Tokens are: 
>> ['Left', 'factoring', 'Left', 'factoring', 'is', 'a', 'grammar', 'transformation', 'that', 'is', 'useful', 'for', 'producing', 'a', 'grammar', 'suitable', 'for', 'predictive', 'parsing', '.'] 

 UPOS tags are: 
>> [('Left', 'VERB'), ('factoring', 'VERB'), ('Left', 'VERB'), ('factoring', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('grammar', 'NOUN'), ('transformation', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('useful', 'ADJ'), ('for', 'SCONJ'), ('producing', 'VERB'), ('a', 'DET'), ('grammar', 'NOUN'), ('suitable', 'ADJ'), ('for', 'ADP'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Left', 'VBN'), ('factoring', 'VBG'), ('Left', 'VBN'), ('factoring', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('grammar', 'NN'), ('transformation', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('useful', 'JJ'), ('for', 'IN'), ('producing', 'VBG'), ('a', 'DT'), ('grammar', 'NN'), ('suitable', 'JJ'), ('for', 'IN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Left', 'Left'), ('factoring', 'factor'), ('Left', 'Left'), ('factoring', 'factoring'), ('is', 'be'), ('a', 'a'), ('grammar', 'grammar'), ('transformation', 'transformation'), ('that', 'that'), ('is', 'be'), ('useful', 'useful'), ('for', 'for'), ('producing', 'produce'), ('a', 'a'), ('grammar', 'grammar'), ('suitable', 'suitable'), ('for', 'for'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('.', '.')] 

 Dependency tags are: 
>> [(('Left', 'factoring'), 'advmod'), (('factoring', 'transformation'), 'csubj'), (('Left', 'factoring'), 'amod'), (('factoring', 'factoring'), 'obj'), (('is', 'transformation'), 'cop'), (('a', 'transformation'), 'det'), (('grammar', 'transformation'), 'compound'), (('transformation', 'root'), 'root'), (('that', 'useful'), 'nsubj'), (('is', 'useful'), 'cop'), (('useful', 'transformation'), 'acl:relcl'), (('for', 'producing'), 'mark'), (('producing', 'useful'), 'advcl'), (('a', 'grammar'), 'det'), (('grammar', 'producing'), 'obj'), (('suitable', 'producing'), 'xcomp'), (('for', 'parsing'), 'case'), (('predictive', 'parsing'), 'amod'), (('parsing', 'suitable'), 'obl'), (('.', 'transformation'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 Algorithm to left factor a grammar Input: Grammar G Output: 

Tokens are: 
>> ['Algorithm', 'to', 'left', 'factor', 'a', 'grammar', 'Input', ':', 'Grammar', 'G', 'Output', ':'] 

 UPOS tags are: 
>> [('Algorithm', 'NOUN'), ('to', 'ADP'), ('left', 'VERB'), ('factor', 'NOUN'), ('a', 'DET'), ('grammar', 'NOUN'), ('Input', 'NOUN'), (':', 'PUNCT'), ('Grammar', 'NOUN'), ('G', 'NOUN'), ('Output', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Algorithm', 'NN'), ('to', 'IN'), ('left', 'VB'), ('factor', 'NN'), ('a', 'DT'), ('grammar', 'NN'), ('Input', 'NN'), (':', ':'), ('Grammar', 'NN'), ('G', 'NN'), ('Output', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Algorithm', 'algorithm'), ('to', 'to'), ('left', 'leave'), ('factor', 'factor'), ('a', 'a'), ('grammar', 'grammar'), ('Input', 'input'), (':', ':'), ('Grammar', 'grammar'), ('G', 'g'), ('Output', 'output'), (':', ':')] 

 Dependency tags are: 
>> [(('Algorithm', 'root'), 'root'), (('to', 'factor'), 'case'), (('left', 'factor'), 'amod'), (('factor', 'Algorithm'), 'nmod'), (('a', 'Input'), 'det'), (('grammar', 'Input'), 'compound'), (('Input', 'Algorithm'), 'appos'), ((':', 'Output'), 'punct'), (('Grammar', 'Output'), 'compound'), (('G', 'Output'), 'compound'), (('Output', 'Algorithm'), 'appos'), ((':', 'Algorithm'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 An equivalent left factored grammar. 

Tokens are: 
>> ['An', 'equivalent', 'left', 'factored', 'grammar', '.'] 

 UPOS tags are: 
>> [('An', 'DET'), ('equivalent', 'ADJ'), ('left', 'VERB'), ('factored', 'VERB'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('An', 'DT'), ('equivalent', 'JJ'), ('left', 'VBD'), ('factored', 'VBD'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('An', 'a'), ('equivalent', 'equivalent'), ('left', 'leave'), ('factored', 'factor'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('An', 'equivalent'), 'det'), (('equivalent', 'left'), 'nsubj'), (('left', 'factored'), 'nsubj'), (('factored', 'root'), 'root'), (('grammar', 'factored'), 'obj'), (('.', 'factored'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 34 ===========================

 Method: 

Tokens are: 
>> ['Method', ':'] 

 UPOS tags are: 
>> [('Method', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Method', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Method', 'method'), (':', ':')] 

 Dependency tags are: 
>> [(('Method', 'root'), 'root'), ((':', 'Method'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 For each non terminal A find the longest prefix  common to two or more of its alternatives. 

Tokens are: 
>> ['For', 'each', 'non', 'terminal', 'A', 'find', 'the', 'longest', 'prefix', 'common', 'to', 'two', 'or', 'more', 'of', 'its', 'alternatives', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('A', 'DET'), ('find', 'VERB'), ('the', 'DET'), ('longest', 'ADJ'), ('prefix', 'NOUN'), ('common', 'ADJ'), ('to', 'ADP'), ('two', 'NUM'), ('or', 'CCONJ'), ('more', 'ADJ'), ('of', 'ADP'), ('its', 'PRON'), ('alternatives', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('non', 'NN'), ('terminal', 'NN'), ('A', 'DT'), ('find', 'VB'), ('the', 'DT'), ('longest', 'JJS'), ('prefix', 'NN'), ('common', 'JJ'), ('to', 'IN'), ('two', 'CD'), ('or', 'CC'), ('more', 'JJR'), ('of', 'IN'), ('its', 'PRP$'), ('alternatives', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('non', 'non'), ('terminal', 'terminal'), ('A', 'a'), ('find', 'find'), ('the', 'the'), ('longest', 'long'), ('prefix', 'prefix'), ('common', 'common'), ('to', 'to'), ('two', 'two'), ('or', 'or'), ('more', 'more'), ('of', 'of'), ('its', 'its'), ('alternatives', 'alternative'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'terminal'), 'case'), (('each', 'terminal'), 'det'), (('non', 'terminal'), 'compound'), (('terminal', 'find'), 'obl'), (('A', 'find'), 'nsubj'), (('find', 'root'), 'root'), (('the', 'prefix'), 'det'), (('longest', 'prefix'), 'amod'), (('prefix', 'find'), 'obj'), (('common', 'prefix'), 'amod'), (('to', 'two'), 'case'), (('two', 'common'), 'obl'), (('or', 'more'), 'cc'), (('more', 'two'), 'conj'), (('of', 'alternatives'), 'case'), (('its', 'alternatives'), 'nmod:poss'), (('alternatives', 'two'), 'nmod'), (('.', 'find'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 36 ===========================

 If , i.e.---,  there is a non trivial common prefix, replace all the  productions where  represents all alternatives that do not begin with  by 	   Here A' is new non terminal. 

Tokens are: 
>> ['If', ',', 'i.e.', '---', ',', 'there', 'is', 'a', 'non', 'trivial', 'common', 'prefix', ',', 'replace', 'all', 'the', 'productions', 'where', 'represents', 'all', 'alternatives', 'that', 'do', 'not', 'begin', 'with', 'by', 'Here', 'A', "'", 'is', 'new', 'non', 'terminal', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), (',', 'PUNCT'), ('i.e.', 'ADV'), ('---', 'PUNCT'), (',', 'PUNCT'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('non', 'ADV'), ('trivial', 'ADJ'), ('common', 'ADJ'), ('prefix', 'NOUN'), (',', 'PUNCT'), ('replace', 'VERB'), ('all', 'PRON'), ('the', 'DET'), ('productions', 'NOUN'), ('where', 'SCONJ'), ('represents', 'VERB'), ('all', 'DET'), ('alternatives', 'NOUN'), ('that', 'PRON'), ('do', 'AUX'), ('not', 'PART'), ('begin', 'VERB'), ('with', 'ADP'), ('by', 'ADP'), ('Here', 'ADV'), ('A', 'DET'), ("'", 'PUNCT'), ('is', 'AUX'), ('new', 'ADJ'), ('non', 'X'), ('terminal', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), (',', ','), ('i.e.', 'FW'), ('---', ','), (',', ','), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('non', 'RB'), ('trivial', 'JJ'), ('common', 'JJ'), ('prefix', 'NN'), (',', ','), ('replace', 'VB'), ('all', 'PDT'), ('the', 'DT'), ('productions', 'NNS'), ('where', 'WRB'), ('represents', 'VBZ'), ('all', 'DT'), ('alternatives', 'NNS'), ('that', 'WDT'), ('do', 'VBP'), ('not', 'RB'), ('begin', 'VB'), ('with', 'IN'), ('by', 'IN'), ('Here', 'RB'), ('A', 'DT'), ("'", '``'), ('is', 'VBZ'), ('new', 'JJ'), ('non', 'FW'), ('terminal', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), (',', ','), ('i.e.', 'i.e.'), ('---', '---'), (',', ','), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('non', 'non'), ('trivial', 'trivial'), ('common', 'common'), ('prefix', 'prefix'), (',', ','), ('replace', 'replace'), ('all', 'all'), ('the', 'the'), ('productions', 'production'), ('where', 'where'), ('represents', 'represent'), ('all', 'all'), ('alternatives', 'alternative'), ('that', 'that'), ('do', 'do'), ('not', 'not'), ('begin', 'begin'), ('with', 'with'), ('by', 'by'), ('Here', 'here'), ('A', 'a'), ("'", "'"), ('is', 'be'), ('new', 'new'), ('non', 'non'), ('terminal', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'is'), 'mark'), ((',', 'If'), 'punct'), (('i.e.', 'is'), 'advmod'), (('---', 'i.e.'), 'punct'), ((',', 'is'), 'punct'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('a', 'prefix'), 'det'), (('non', 'trivial'), 'advmod'), (('trivial', 'prefix'), 'amod'), (('common', 'prefix'), 'amod'), (('prefix', 'is'), 'nsubj'), ((',', 'replace'), 'punct'), (('replace', 'is'), 'parataxis'), (('all', 'productions'), 'det:predet'), (('the', 'productions'), 'det'), (('productions', 'replace'), 'obj'), (('where', 'represents'), 'mark'), (('represents', 'productions'), 'acl:relcl'), (('all', 'alternatives'), 'det'), (('alternatives', 'represents'), 'obj'), (('that', 'begin'), 'nsubj'), (('do', 'begin'), 'aux'), (('not', 'begin'), 'advmod'), (('begin', 'alternatives'), 'acl:relcl'), (('with', 'begin'), 'obl'), (('by', 'Here'), 'case'), (('Here', 'begin'), 'obl'), (('A', 'terminal'), 'det'), (("'", 'terminal'), 'punct'), (('is', 'terminal'), 'cop'), (('new', 'terminal'), 'amod'), (('non', 'terminal'), 'compound'), (('terminal', 'begin'), 'obl'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> [("Here A'", 'ORG')]

========================== Sentence 37 ===========================

 Repeatedly apply this transformation until no two alternatives for a non-terminal have a common prefix. 

Tokens are: 
>> ['Repeatedly', 'apply', 'this', 'transformation', 'until', 'no', 'two', 'alternatives', 'for', 'a', 'non-terminal', 'have', 'a', 'common', 'prefix', '.'] 

 UPOS tags are: 
>> [('Repeatedly', 'ADV'), ('apply', 'VERB'), ('this', 'DET'), ('transformation', 'NOUN'), ('until', 'SCONJ'), ('no', 'DET'), ('two', 'NUM'), ('alternatives', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('non-terminal', 'ADJ'), ('have', 'VERB'), ('a', 'DET'), ('common', 'ADJ'), ('prefix', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Repeatedly', 'RB'), ('apply', 'VB'), ('this', 'DT'), ('transformation', 'NN'), ('until', 'IN'), ('no', 'DT'), ('two', 'CD'), ('alternatives', 'NNS'), ('for', 'IN'), ('a', 'DT'), ('non-terminal', 'JJ'), ('have', 'VBP'), ('a', 'DT'), ('common', 'JJ'), ('prefix', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Repeatedly', 'repeatedly'), ('apply', 'apply'), ('this', 'this'), ('transformation', 'transformation'), ('until', 'until'), ('no', 'no'), ('two', 'two'), ('alternatives', 'alternative'), ('for', 'for'), ('a', 'a'), ('non-terminal', 'non-terminal'), ('have', 'have'), ('a', 'a'), ('common', 'common'), ('prefix', 'prefix'), ('.', '.')] 

 Dependency tags are: 
>> [(('Repeatedly', 'apply'), 'advmod'), (('apply', 'root'), 'root'), (('this', 'transformation'), 'det'), (('transformation', 'apply'), 'obj'), (('until', 'have'), 'mark'), (('no', 'alternatives'), 'det'), (('two', 'alternatives'), 'nummod'), (('alternatives', 'have'), 'nsubj'), (('for', 'non-terminal'), 'case'), (('a', 'non-terminal'), 'det'), (('non-terminal', 'alternatives'), 'nmod'), (('have', 'apply'), 'advcl'), (('a', 'prefix'), 'det'), (('common', 'prefix'), 'amod'), (('prefix', 'have'), 'obj'), (('.', 'apply'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 38 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›     δ Left factoring elimination     δ   |             Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Left factoring elimination SaAB | aCD 			SaS’ 			S’AB | CD A xByA | xByAzA | a  			A xByAA’ | a 			A’ Є | zA  A aAB | aA |a 			AaA’ 			A’AB | A | 𝜖 			A’AA’’ | 𝜖 			A’’B | 𝜖      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise SiEtS | iEtSeS | a A ad | a | ab | abc | x     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing        Parsing Parsing is a technique that takes input string and produces output either a parse tree if string is valid sentence of grammar, or an error message indicating that string is not a valid. 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'δ', 'Left', 'factoring', 'elimination', 'δ', '|', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Left', 'factoring', 'elimination', 'S\uf0e0aAB', '|', 'aCD', 'S\uf0e0aS', '’', 'S’\uf0e0', 'AB', '|', 'CD', 'A\uf0e0', 'xByA', '|', 'xByAzA', '|', 'a', 'A\uf0e0', 'xByAA', '’', '|', 'a', 'A', '’\uf0e0', 'Є', '|', 'zA', 'A\uf0e0', 'a', 'AB', '|', 'a', 'A', '|a', 'A\uf0e0aA', '’', 'A’\uf0e0', 'AB', '|', 'A', '|', '𝜖', 'A’\uf0e0AA', '’’', '|', '𝜖', 'A', '’’\uf0e0', 'B', '|', '𝜖', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Exercise', 'S\uf0e0iEtS', '|', 'iEtSeS', '|', 'a', 'A\uf0e0', 'ad', '|', 'a', '|', 'ab', '|', 'abc', '|', 'x', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Parsing', 'Parsing', 'is', 'a', 'technique', 'that', 'takes', 'input', 'string', 'and', 'produces', 'output', 'either', 'a', 'parse', 'tree', 'if', 'string', 'is', 'valid', 'sentence', 'of', 'grammar', ',', 'or', 'an', 'error', 'message', 'indicating', 'that', 'string', 'is', 'not', 'a', 'valid', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NUM'), ('δ', 'NOUN'), ('Left', 'VERB'), ('factoring', 'NOUN'), ('elimination', 'NOUN'), ('δ', 'NOUN'), ('|', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Left', 'NOUN'), ('factoring', 'NOUN'), ('elimination', 'NOUN'), ('S\uf0e0aAB', 'X'), ('|', 'PUNCT'), ('aCD', 'X'), ('S\uf0e0aS', 'X'), ('’', 'X'), ('S’\uf0e0', 'X'), ('AB', 'X'), ('|', 'X'), ('CD', 'X'), ('A\uf0e0', 'X'), ('xByA', 'X'), ('|', 'X'), ('xByAzA', 'X'), ('|', 'PUNCT'), ('a', 'X'), ('A\uf0e0', 'X'), ('xByAA', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('A', 'X'), ('’\uf0e0', 'X'), ('Є', 'X'), ('|', 'PUNCT'), ('zA', 'X'), ('A\uf0e0', 'X'), ('a', 'PUNCT'), ('AB', 'X'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('A', 'PUNCT'), ('|a', 'PUNCT'), ('A\uf0e0aA', 'NOUN'), ('’', 'PUNCT'), ('A’\uf0e0', 'X'), ('AB', 'X'), ('|', 'PUNCT'), ('A', 'PUNCT'), ('|', 'PUNCT'), ('𝜖', 'PUNCT'), ('A’\uf0e0AA', 'NOUN'), ('’’', 'PUNCT'), ('|', 'PUNCT'), ('𝜖', 'PUNCT'), ('A', 'PUNCT'), ('’’\uf0e0', 'PUNCT'), ('B', 'PUNCT'), ('|', 'PUNCT'), ('𝜖', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'X'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'X'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Exercise', 'X'), ('S\uf0e0iEtS', 'X'), ('|', 'PUNCT'), ('iEtSeS', 'X'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('A\uf0e0', 'X'), ('ad', 'NOUN'), ('|', 'PUNCT'), ('a', 'PUNCT'), ('|', 'PUNCT'), ('ab', 'PUNCT'), ('|', 'PUNCT'), ('abc', 'PROPN'), ('|', 'PUNCT'), ('x', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Parsing', 'NOUN'), ('Parsing', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('technique', 'NOUN'), ('that', 'PRON'), ('takes', 'VERB'), ('input', 'NOUN'), ('string', 'NOUN'), ('and', 'CCONJ'), ('produces', 'VERB'), ('output', 'NOUN'), ('either', 'CCONJ'), ('a', 'DET'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('if', 'SCONJ'), ('string', 'NOUN'), ('is', 'AUX'), ('valid', 'ADJ'), ('sentence', 'NOUN'), ('of', 'ADP'), ('grammar', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('an', 'DET'), ('error', 'NOUN'), ('message', 'NOUN'), ('indicating', 'VERB'), ('that', 'DET'), ('string', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('a', 'DET'), ('valid', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'CD'), ('δ', 'NN'), ('Left', 'VBN'), ('factoring', 'NN'), ('elimination', 'NN'), ('δ', 'NN'), ('|', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Left', 'GW'), ('factoring', 'NN'), ('elimination', 'GW'), ('S\uf0e0aAB', 'GW'), ('|', 'NFP'), ('aCD', 'GW'), ('S\uf0e0aS', 'GW'), ('’', 'GW'), ('S’\uf0e0', 'GW'), ('AB', 'GW'), ('|', 'GW'), ('CD', 'GW'), ('A\uf0e0', 'GW'), ('xByA', 'GW'), ('|', 'GW'), ('xByAzA', 'GW'), ('|', 'NFP'), ('a', 'GW'), ('A\uf0e0', 'GW'), ('xByAA', 'NN'), ('’', ':'), ('|', 'NFP'), ('a', '-LRB-'), ('A', 'GW'), ('’\uf0e0', 'NN'), ('Є', 'GW'), ('|', 'NFP'), ('zA', 'GW'), ('A\uf0e0', 'GW'), ('a', 'NFP'), ('AB', 'GW'), ('|', 'NFP'), ('a', 'NFP'), ('A', 'NFP'), ('|a', 'NFP'), ('A\uf0e0aA', 'NN'), ('’', ':'), ('A’\uf0e0', 'GW'), ('AB', 'GW'), ('|', 'NFP'), ('A', 'NFP'), ('|', 'NFP'), ('𝜖', 'NFP'), ('A’\uf0e0AA', 'NN'), ('’’', '.'), ('|', 'NFP'), ('𝜖', 'NFP'), ('A', 'NFP'), ('’’\uf0e0', 'NFP'), ('B', 'NFP'), ('|', 'NFP'), ('𝜖', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'GW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NFP'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'GW'), ('B', 'GW'), ('Kagathara', 'GW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'GW'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'GW'), ('Exercise', 'GW'), ('S\uf0e0iEtS', 'GW'), ('|', 'NFP'), ('iEtSeS', 'NN'), ('|', 'NFP'), ('a', ':'), ('A\uf0e0', 'GW'), ('ad', 'NN'), ('|', 'NFP'), ('a', 'NFP'), ('|', 'NFP'), ('ab', 'NFP'), ('|', 'NFP'), ('abc', 'NNP'), ('|', 'NFP'), ('x', 'NFP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Parsing', 'NN'), ('Parsing', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('technique', 'NN'), ('that', 'WDT'), ('takes', 'VBZ'), ('input', 'NN'), ('string', 'NN'), ('and', 'CC'), ('produces', 'VBZ'), ('output', 'NN'), ('either', 'CC'), ('a', 'DT'), ('parse', 'NN'), ('tree', 'NN'), ('if', 'IN'), ('string', 'NN'), ('is', 'VBZ'), ('valid', 'JJ'), ('sentence', 'NN'), ('of', 'IN'), ('grammar', 'NN'), (',', ','), ('or', 'CC'), ('an', 'DT'), ('error', 'NN'), ('message', 'NN'), ('indicating', 'VBG'), ('that', 'DT'), ('string', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('valid', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('δ', 'δ'), ('Left', 'Left'), ('factoring', 'factoring'), ('elimination', 'elimination'), ('δ', 'δ'), ('|', '|'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Left', 'Left'), ('factoring', 'factoring'), ('elimination', 'elimination'), ('S\uf0e0aAB', 's\uf0e0aab'), ('|', '|'), ('aCD', 'acd'), ('S\uf0e0aS', 's\uf0e0as'), ('’', "'s"), ('S’\uf0e0', 's’\uf0e0'), ('AB', 'ab'), ('|', '|'), ('CD', 'CD'), ('A\uf0e0', 'a\uf0e0'), ('xByA', 'xbya'), ('|', '|'), ('xByAzA', 'xbyaza'), ('|', '|'), ('a', 'a'), ('A\uf0e0', 'a\uf0e0'), ('xByAA', 'xbyaa'), ('’', "'"), ('|', '|'), ('a', 'a'), ('A', 'a'), ('’\uf0e0', '’\uf0e0'), ('Є', 'є'), ('|', '|'), ('zA', 'zA'), ('A\uf0e0', 'a\uf0e0'), ('a', 'a'), ('AB', 'ab'), ('|', '|'), ('a', 'a'), ('A', 'a'), ('|a', '|a'), ('A\uf0e0aA', 'a\uf0e0aa'), ('’', "'"), ('A’\uf0e0', 'a’\uf0e0'), ('AB', 'ab'), ('|', '|'), ('A', 'a'), ('|', '|'), ('𝜖', "''"), ('A’\uf0e0AA', 'a’\uf0e0aa'), ('’’', "''"), ('|', '|'), ('𝜖', "''"), ('A', 'a'), ('’’\uf0e0', '’’\uf0e0'), ('B', 'B'), ('|', '|'), ('𝜖', "''"), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Exercise', 'Exercise'), ('S\uf0e0iEtS', 's\uf0e0iets'), ('|', '|'), ('iEtSeS', 'ietses'), ('|', '|'), ('a', 'a'), ('A\uf0e0', 'a\uf0e0'), ('ad', 'ad'), ('|', '|'), ('a', 'a'), ('|', '|'), ('ab', 'ab'), ('|', '|'), ('abc', 'abc'), ('|', '|'), ('x', 'x'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Parsing', 'parsing'), ('Parsing', 'parsing'), ('is', 'be'), ('a', 'a'), ('technique', 'technique'), ('that', 'that'), ('takes', 'take'), ('input', 'input'), ('string', 'string'), ('and', 'and'), ('produces', 'produce'), ('output', 'output'), ('either', 'either'), ('a', 'a'), ('parse', 'parse'), ('tree', 'tree'), ('if', 'if'), ('string', 'string'), ('is', 'be'), ('valid', 'valid'), ('sentence', 'sentence'), ('of', 'of'), ('grammar', 'grammar'), (',', ','), ('or', 'or'), ('an', 'a'), ('error', 'error'), ('message', 'message'), ('indicating', 'indicate'), ('that', 'that'), ('string', 'string'), ('is', 'be'), ('not', 'not'), ('a', 'a'), ('valid', 'valid'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'flat'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'conj'), (('(', 'I'), 'punct'), (('I', 'δ'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'δ'), 'nummod'), (('δ', 'Prof.'), 'conj'), (('Left', 'elimination'), 'amod'), (('factoring', 'elimination'), 'compound'), (('elimination', 'δ'), 'compound'), (('δ', 'Prof.'), 'conj'), (('|', 'δ'), 'punct'), (('Prof.', 'δ'), 'compound'), (('Jay', 'Prof.'), 'conj'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'conj'), (('‹#›', 'Prof.'), 'conj'), (('Prof.', 'Prof.'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'conj'), (('Kagathara', 'Prof.'), 'conj'), (('#', 'Prof.'), 'conj'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Prof.'), 'conj'), (('Theory', 'Prof.'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Prof.'), 'conj'), ((':', 'Example'), 'punct'), (('Left', 'elimination'), 'compound'), (('factoring', 'elimination'), 'compound'), (('elimination', 'Prof.'), 'parataxis'), (('S\uf0e0aAB', 'elimination'), 'compound'), (('|', 'elimination'), 'punct'), (('aCD', 'elimination'), 'compound'), (('S\uf0e0aS', 'elimination'), 'compound'), (('’', 'elimination'), 'compound'), (('S’\uf0e0', 'elimination'), 'compound'), (('AB', 'Prof.'), 'conj'), (('|', 'Prof.'), 'flat'), (('CD', 'Prof.'), 'flat'), (('A\uf0e0', 'Prof.'), 'conj'), (('xByA', 'Prof.'), 'flat'), (('|', 'Prof.'), 'conj'), (('xByAzA', 'Prof.'), 'conj'), (('|', 'a'), 'punct'), (('a', 'Prof.'), 'dep'), (('A\uf0e0', 'Prof.'), 'conj'), (('xByAA', 'Prof.'), 'conj'), (('’', 'Prof.'), 'punct'), (('|', 'Prof.'), 'punct'), (('a', 'Prof.'), 'conj'), (('A', 'Prof.'), 'conj'), (('’\uf0e0', 'Unit'), 'conj'), (('Є', 'Prof.'), 'conj'), (('|', 'zA'), 'punct'), (('zA', 'Prof.'), 'conj'), (('A\uf0e0', 'Prof.'), 'conj'), (('a', 'AB'), 'punct'), (('AB', 'Prof.'), 'dep'), (('|', 'Prof.'), 'punct'), (('a', 'Prof.'), 'punct'), (('A', 'Prof.'), 'punct'), (('|a', 'A\uf0e0aA'), 'punct'), (('A\uf0e0aA', 'Prof.'), 'conj'), (('’', 'A\uf0e0aA'), 'punct'), (('A’\uf0e0', 'A\uf0e0aA'), 'dep'), (('AB', 'A\uf0e0aA'), 'dep'), (('|', 'Prof.'), 'punct'), (('A', 'Unit'), 'punct'), (('|', 'Unit'), 'punct'), (('𝜖', 'A’\uf0e0AA'), 'punct'), (('A’\uf0e0AA', 'Prof.'), 'conj'), (('’’', 'Prof.'), 'punct'), (('|', 'Prof.'), 'punct'), (('𝜖', 'Prof.'), 'punct'), (('A', 'Prof.'), 'punct'), (('’’\uf0e0', 'Prof.'), 'punct'), (('B', 'Prof.'), 'punct'), (('|', '#'), 'punct'), (('𝜖', 'Prof.'), 'punct'), (('Prof.', 'Prof.'), 'conj'), (('Jay', 'Prof.'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Prof.'), 'punct'), (('Unit', 'Prof.'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Exercise'), 'compound'), (('Exercise', 'Theory'), 'dep'), (('S\uf0e0iEtS', 'Exercise'), 'compound'), (('|', 'Exercise'), 'punct'), (('iEtSeS', 'Exercise'), 'compound'), (('|', 'Prof.'), 'punct'), (('a', 'A\uf0e0'), 'det'), (('A\uf0e0', 'ad'), 'compound'), (('ad', 'iEtSeS'), 'compound'), (('|', 'A\uf0e0'), 'punct'), (('a', 'ad'), 'punct'), (('|', 'Prof.'), 'punct'), (('ab', 'abc'), 'punct'), (('|', 'abc'), 'punct'), (('abc', 'Prof.'), 'conj'), (('|', 'abc'), 'punct'), (('x', 'Prof.'), 'punct'), (('Prof.', 'abc'), 'compound'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'Prof.'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Parsing'), 'compound'), (('Parsing', 'technique'), 'compound'), (('Parsing', 'Parsing'), 'compound'), (('Parsing', 'technique'), 'nsubj'), (('is', 'technique'), 'cop'), (('a', 'technique'), 'det'), (('technique', 'Theory'), 'acl:relcl'), (('that', 'takes'), 'nsubj'), (('takes', 'technique'), 'acl:relcl'), (('input', 'string'), 'compound'), (('string', 'takes'), 'obj'), (('and', 'produces'), 'cc'), (('produces', 'technique'), 'conj'), (('output', 'produces'), 'obj'), (('either', 'tree'), 'cc:preconj'), (('a', 'tree'), 'det'), (('parse', 'tree'), 'compound'), (('tree', 'produces'), 'obj'), (('if', 'sentence'), 'mark'), (('string', 'sentence'), 'nsubj'), (('is', 'sentence'), 'cop'), (('valid', 'sentence'), 'amod'), (('sentence', 'produces'), 'advcl'), (('of', 'grammar'), 'case'), (('grammar', 'sentence'), 'nmod'), ((',', 'message'), 'punct'), (('or', 'message'), 'cc'), (('an', 'message'), 'det'), (('error', 'message'), 'compound'), (('message', 'sentence'), 'conj'), (('indicating', 'message'), 'acl'), (('that', 'string'), 'det'), (('string', 'valid'), 'nsubj'), (('is', 'valid'), 'cop'), (('not', 'valid'), 'advmod'), (('a', 'valid'), 'det'), (('valid', 'indicating'), 'ccomp'), (('.', 'Prof.'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 39 ===========================

 Types of parsing are: Top down parsing: 

Tokens are: 
>> ['Types', 'of', 'parsing', 'are', ':', 'Top', 'down', 'parsing', ':'] 

 UPOS tags are: 
>> [('Types', 'NOUN'), ('of', 'ADP'), ('parsing', 'NOUN'), ('are', 'AUX'), (':', 'PUNCT'), ('Top', 'ADJ'), ('down', 'ADP'), ('parsing', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Types', 'NNS'), ('of', 'IN'), ('parsing', 'NN'), ('are', 'VBP'), (':', ':'), ('Top', 'JJ'), ('down', 'RP'), ('parsing', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Types', 'type'), ('of', 'of'), ('parsing', 'parsing'), ('are', 'be'), (':', ':'), ('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), (':', ':')] 

 Dependency tags are: 
>> [(('Types', 'parsing'), 'nsubj'), (('of', 'parsing'), 'case'), (('parsing', 'Types'), 'nmod'), (('are', 'parsing'), 'cop'), ((':', 'parsing'), 'punct'), (('Top', 'parsing'), 'amod'), (('down', 'parsing'), 'case'), (('parsing', 'root'), 'root'), ((':', 'parsing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 In top down parsing parser build parse tree from top to bottom. 

Tokens are: 
>> ['In', 'top', 'down', 'parsing', 'parser', 'build', 'parse', 'tree', 'from', 'top', 'to', 'bottom', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('top', 'ADJ'), ('down', 'ADP'), ('parsing', 'NOUN'), ('parser', 'NOUN'), ('build', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('from', 'ADP'), ('top', 'NOUN'), ('to', 'ADP'), ('bottom', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('top', 'JJ'), ('down', 'RP'), ('parsing', 'NN'), ('parser', 'NN'), ('build', 'VB'), ('parse', 'NN'), ('tree', 'NN'), ('from', 'IN'), ('top', 'NN'), ('to', 'IN'), ('bottom', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('parser', 'parser'), ('build', 'build'), ('parse', 'parse'), ('tree', 'tree'), ('from', 'from'), ('top', 'top'), ('to', 'to'), ('bottom', 'bottom'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'parser'), 'case'), (('top', 'parser'), 'amod'), (('down', 'parser'), 'case'), (('parsing', 'parser'), 'compound'), (('parser', 'build'), 'obl'), (('build', 'root'), 'root'), (('parse', 'tree'), 'compound'), (('tree', 'build'), 'obj'), (('from', 'top'), 'case'), (('top', 'build'), 'obl'), (('to', 'bottom'), 'case'), (('bottom', 'build'), 'obl'), (('.', 'build'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 41 ===========================

 Bottom up parsing: Bottom up parser starts from leaves and work up to the root. 

Tokens are: 
>> ['Bottom', 'up', 'parsing', ':', 'Bottom', 'up', 'parser', 'starts', 'from', 'leaves', 'and', 'work', 'up', 'to', 'the', 'root', '.'] 

 UPOS tags are: 
>> [('Bottom', 'VERB'), ('up', 'ADP'), ('parsing', 'NOUN'), (':', 'PUNCT'), ('Bottom', 'VERB'), ('up', 'ADP'), ('parser', 'NOUN'), ('starts', 'VERB'), ('from', 'ADP'), ('leaves', 'NOUN'), ('and', 'CCONJ'), ('work', 'VERB'), ('up', 'ADP'), ('to', 'ADP'), ('the', 'DET'), ('root', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bottom', 'VB'), ('up', 'RP'), ('parsing', 'NN'), (':', ':'), ('Bottom', 'VB'), ('up', 'RP'), ('parser', 'NN'), ('starts', 'VBZ'), ('from', 'IN'), ('leaves', 'NNS'), ('and', 'CC'), ('work', 'VB'), ('up', 'RP'), ('to', 'IN'), ('the', 'DT'), ('root', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), (':', ':'), ('Bottom', 'bottom'), ('up', 'up'), ('parser', 'parser'), ('starts', 'start'), ('from', 'from'), ('leaves', 'leave'), ('and', 'and'), ('work', 'work'), ('up', 'up'), ('to', 'to'), ('the', 'the'), ('root', 'root'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bottom', 'root'), 'root'), (('up', 'Bottom'), 'compound:prt'), (('parsing', 'Bottom'), 'obj'), ((':', 'Bottom'), 'punct'), (('Bottom', 'Bottom'), 'parataxis'), (('up', 'Bottom'), 'compound:prt'), (('parser', 'starts'), 'nsubj'), (('starts', 'Bottom'), 'conj'), (('from', 'leaves'), 'case'), (('leaves', 'starts'), 'obl'), (('and', 'work'), 'cc'), (('work', 'starts'), 'conj'), (('up', 'work'), 'compound:prt'), (('to', 'root'), 'case'), (('the', 'root'), 'det'), (('root', 'work'), 'obl'), (('.', 'Bottom'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 42 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Classification of parsing methods Parsing Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Classification', 'of', 'parsing', 'methods', 'Parsing', 'Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Classification', 'NOUN'), ('of', 'ADP'), ('parsing', 'NOUN'), ('methods', 'NOUN'), ('Parsing', 'NOUN'), ('Top', 'NOUN'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Classification', 'NN'), ('of', 'IN'), ('parsing', 'NN'), ('methods', 'NNS'), ('Parsing', 'NN'), ('Top', 'NN'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Classification', 'classification'), ('of', 'of'), ('parsing', 'parsing'), ('methods', 'method'), ('Parsing', 'parsing'), ('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Prof.'), 'list'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Classification'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Classification'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Classification'), 'compound'), (('Classification', 'Prof.'), 'list'), (('of', 'methods'), 'case'), (('parsing', 'methods'), 'compound'), (('methods', 'Classification'), 'nmod'), (('Parsing', 'Top'), 'compound'), (('Top', 'Classification'), 'compound'), (('down', 'Top'), 'compound'), (('parsing', 'parsing'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'nmod'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 43 ===========================

 Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Backtracking 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Backtracking'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('LALR', 'PROPN'), ('CLR', 'NOUN'), ('SLR', 'NOUN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Backtracking', 'NOUN')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NN'), ('SLR', 'NN'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Backtracking', 'NN')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'slr'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Backtracking', 'backtracking')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'parsing'), 'punct'), (('predictive', 'parsing'), 'amod'), (('parsing', 'backtracking'), 'appos'), ((')', 'parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obj'), (('LALR', 'precedence'), 'compound'), (('CLR', 'descent'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'appos'), (('LL', 'precedence'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('Prof.', 'Dhamsaniya'), 'compound'), (('Jay', 'Dhamsaniya'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'LL'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'precedence'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', '#'), 'appos'), (('#', 'B'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Backtracking'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Backtracking'), 'compound'), (('Backtracking', 'Theory'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 44 ===========================

 In backtracking, expansion of nonterminal symbol we choose one alternative and if any mismatch occurs then we try another alternative. 

Tokens are: 
>> ['In', 'backtracking', ',', 'expansion', 'of', 'nonterminal', 'symbol', 'we', 'choose', 'one', 'alternative', 'and', 'if', 'any', 'mismatch', 'occurs', 'then', 'we', 'try', 'another', 'alternative', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('backtracking', 'NOUN'), (',', 'PUNCT'), ('expansion', 'NOUN'), ('of', 'ADP'), ('nonterminal', 'ADJ'), ('symbol', 'NOUN'), ('we', 'PRON'), ('choose', 'VERB'), ('one', 'NUM'), ('alternative', 'NOUN'), ('and', 'CCONJ'), ('if', 'SCONJ'), ('any', 'DET'), ('mismatch', 'NOUN'), ('occurs', 'VERB'), ('then', 'ADV'), ('we', 'PRON'), ('try', 'VERB'), ('another', 'DET'), ('alternative', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('backtracking', 'NN'), (',', ','), ('expansion', 'NN'), ('of', 'IN'), ('nonterminal', 'JJ'), ('symbol', 'NN'), ('we', 'PRP'), ('choose', 'VBP'), ('one', 'CD'), ('alternative', 'NN'), ('and', 'CC'), ('if', 'IN'), ('any', 'DT'), ('mismatch', 'NN'), ('occurs', 'VBZ'), ('then', 'RB'), ('we', 'PRP'), ('try', 'VBP'), ('another', 'DT'), ('alternative', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('backtracking', 'backtracking'), (',', ','), ('expansion', 'expansion'), ('of', 'of'), ('nonterminal', 'nonterminal'), ('symbol', 'symbol'), ('we', 'we'), ('choose', 'choose'), ('one', 'one'), ('alternative', 'alternative'), ('and', 'and'), ('if', 'if'), ('any', 'any'), ('mismatch', 'mismatch'), ('occurs', 'occur'), ('then', 'then'), ('we', 'we'), ('try', 'try'), ('another', 'another'), ('alternative', 'alternative'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'backtracking'), 'case'), (('backtracking', 'choose'), 'obl'), ((',', 'choose'), 'punct'), (('expansion', 'choose'), 'nsubj'), (('of', 'symbol'), 'case'), (('nonterminal', 'symbol'), 'amod'), (('symbol', 'expansion'), 'nmod'), (('we', 'choose'), 'nsubj'), (('choose', 'root'), 'root'), (('one', 'alternative'), 'nummod'), (('alternative', 'choose'), 'obj'), (('and', 'try'), 'cc'), (('if', 'occurs'), 'mark'), (('any', 'mismatch'), 'det'), (('mismatch', 'occurs'), 'nsubj'), (('occurs', 'try'), 'advcl'), (('then', 'try'), 'advmod'), (('we', 'try'), 'nsubj'), (('try', 'choose'), 'conj'), (('another', 'alternative'), 'det'), (('alternative', 'try'), 'obj'), (('.', 'choose'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 45 ===========================

 Grammar: S cAd		Input string: cad 	        A ab | a c A d S c A d S a b c A d S a Parsing done Make prediction Backtrack Make prediction    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Exercise E 5+T | 3-T T V | V*V | V+V V a | b String: 3-a+b     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['Grammar', ':', 'S\uf0e0', 'cAd', 'Input', 'string', ':', 'cad', 'A\uf0e0', 'ab', '|', 'a', 'c', 'A', 'd', 'S', 'c', 'A', 'd', 'S', 'a', 'b', 'c', 'A', 'd', 'S', 'a', 'Parsing', 'done', 'Make', 'prediction', 'Backtrack', 'Make', 'prediction', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Exercise', 'E\uf0e0', '5', '+', 'T', '|', '3', '-', 'T', 'T\uf0e0', 'V', '|', 'V*V', '|', 'V', '+V', 'V\uf0e0', 'a', '|', 'b', 'String', ':', '3', '-', 'a+b', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0', 'PROPN'), ('cAd', 'NOUN'), ('Input', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('cad', 'NOUN'), ('A\uf0e0', 'NOUN'), ('ab', 'NOUN'), ('|', 'PUNCT'), ('a', 'NOUN'), ('c', 'NOUN'), ('A', 'PROPN'), ('d', 'PROPN'), ('S', 'PROPN'), ('c', 'NOUN'), ('A', 'NOUN'), ('d', 'PROPN'), ('S', 'PART'), ('a', 'DET'), ('b', 'NOUN'), ('c', 'NOUN'), ('A', 'DET'), ('d', 'PROPN'), ('S', 'PART'), ('a', 'DET'), ('Parsing', 'NOUN'), ('done', 'VERB'), ('Make', 'VERB'), ('prediction', 'NOUN'), ('Backtrack', 'PROPN'), ('Make', 'VERB'), ('prediction', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Exercise', 'PROPN'), ('E\uf0e0', 'PROPN'), ('5', 'NUM'), ('+', 'SYM'), ('T', 'NUM'), ('|', 'PUNCT'), ('3', 'NUM'), ('-', 'PUNCT'), ('T', 'NUM'), ('T\uf0e0', 'NOUN'), ('V', 'NOUN'), ('|', 'PUNCT'), ('V*V', 'NOUN'), ('|', 'PUNCT'), ('V', 'NOUN'), ('+V', 'NUM'), ('V\uf0e0', 'NOUN'), ('a', 'NOUN'), ('|', 'PUNCT'), ('b', 'NOUN'), ('String', 'NOUN'), (':', 'PUNCT'), ('3', 'NUM'), ('-', 'PUNCT'), ('a+b', 'NUM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'NOUN'), ('Dhamsaniya', 'NOUN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('Grammar', 'NN'), (':', ':'), ('S\uf0e0', 'NNP'), ('cAd', 'NN'), ('Input', 'NN'), ('string', 'NN'), (':', ':'), ('cad', 'NN'), ('A\uf0e0', 'NN'), ('ab', 'NN'), ('|', 'NFP'), ('a', 'NN'), ('c', 'NN'), ('A', 'NNP'), ('d', 'NNP'), ('S', 'NNP'), ('c', 'NN'), ('A', 'NN'), ('d', 'NNP'), ('S', 'POS'), ('a', 'DT'), ('b', 'NN'), ('c', 'NN'), ('A', 'DT'), ('d', 'NNP'), ('S', 'POS'), ('a', 'DT'), ('Parsing', 'NN'), ('done', 'VBN'), ('Make', 'VB'), ('prediction', 'NN'), ('Backtrack', 'NNP'), ('Make', 'VB'), ('prediction', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Exercise', 'NNP'), ('E\uf0e0', 'NNP'), ('5', 'CD'), ('+', 'SYM'), ('T', 'CD'), ('|', 'NFP'), ('3', 'CD'), ('-', ','), ('T', 'CD'), ('T\uf0e0', 'NN'), ('V', 'NN'), ('|', 'NFP'), ('V*V', 'NN'), ('|', 'NFP'), ('V', 'NN'), ('+V', 'CD'), ('V\uf0e0', 'NN'), ('a', 'NN'), ('|', 'NFP'), ('b', 'NN'), ('String', 'NN'), (':', ':'), ('3', 'CD'), ('-', ','), ('a+b', 'CD'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NN'), ('Dhamsaniya', 'NN'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('Grammar', 'grammar'), (':', ':'), ('S\uf0e0', 'S\uf0e0'), ('cAd', 'cad'), ('Input', 'input'), ('string', 'string'), (':', ':'), ('cad', 'cad'), ('A\uf0e0', 'a\uf0e0'), ('ab', 'ab'), ('|', '|'), ('a', 'a'), ('c', 'c'), ('A', 'A'), ('d', 'd'), ('S', 'S'), ('c', 'c'), ('A', 'a'), ('d', 'd'), ('S', "'s"), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('A', 'a'), ('d', 'd'), ('S', "'s"), ('a', 'a'), ('Parsing', 'parsing'), ('done', 'do'), ('Make', 'make'), ('prediction', 'prediction'), ('Backtrack', 'Backtrack'), ('Make', 'make'), ('prediction', 'prediction'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Exercise', 'Exercise'), ('E\uf0e0', 'E\uf0e0'), ('5', '5'), ('+', '+'), ('T', 'T'), ('|', '|'), ('3', '3'), ('-', '-'), ('T', 'T'), ('T\uf0e0', 't\uf0e0'), ('V', 'V'), ('|', '|'), ('V*V', 'V*V'), ('|', '|'), ('V', 'V'), ('+V', '+V'), ('V\uf0e0', 'v\uf0e0'), ('a', 'a'), ('|', '|'), ('b', 'b'), ('String', 'string'), (':', ':'), ('3', '3'), ('-', '-'), ('a+b', 'a+b'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('Grammar', 'root'), 'root'), ((':', 'Grammar'), 'punct'), (('S\uf0e0', 'string'), 'compound'), (('cAd', 'string'), 'compound'), (('Input', 'string'), 'compound'), (('string', 'Grammar'), 'appos'), ((':', 'string'), 'punct'), (('cad', 'ab'), 'compound'), (('A\uf0e0', 'ab'), 'compound'), (('ab', 'string'), 'appos'), (('|', 'ab'), 'punct'), (('a', 'c'), 'compound'), (('c', 'string'), 'appos'), (('A', 'd'), 'compound'), (('d', 'c'), 'compound'), (('S', 'c'), 'compound'), (('c', 'c'), 'conj'), (('A', 'd'), 'compound'), (('d', 'c'), 'nmod:poss'), (('S', 'd'), 'case'), (('a', 'c'), 'det'), (('b', 'c'), 'compound'), (('c', 'c'), 'conj'), (('A', 'd'), 'det'), (('d', 'Parsing'), 'nmod:poss'), (('S', 'd'), 'case'), (('a', 'Parsing'), 'det'), (('Parsing', 'done'), 'nsubj:pass'), (('done', 'Make'), 'xcomp'), (('Make', 'Grammar'), 'appos'), (('prediction', 'Backtrack'), 'compound'), (('Backtrack', 'Make'), 'obj'), (('Make', 'Make'), 'xcomp'), (('prediction', 'Make'), 'obj'), (('Prof.', 'Make'), 'obj'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Make'), 'obj'), (('3130006', '#'), 'nummod'), (('(', 'Unit'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Unit'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Exercise'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Exercise'), 'compound'), (('Exercise', 'Theory'), 'appos'), (('E\uf0e0', 'Exercise'), 'appos'), (('5', 'T'), 'compound'), (('+', 'T'), 'compound'), (('T', 'E\uf0e0'), 'nummod'), (('|', 'E\uf0e0'), 'punct'), (('3', 'T'), 'compound'), (('-', 'V'), 'punct'), (('T', 'V'), 'nummod'), (('T\uf0e0', 'V'), 'appos'), (('V', 'E\uf0e0'), 'appos'), (('|', 'V'), 'punct'), (('V*V', 'V'), 'appos'), (('|', 'V'), 'punct'), (('V', 'V'), 'appos'), (('+V', 'a'), 'nummod'), (('V\uf0e0', 'V'), 'appos'), (('a', 'V'), 'appos'), (('|', 'a'), 'punct'), (('b', 'String'), 'compound'), (('String', 'V'), 'appos'), ((':', 'String'), 'punct'), (('3', 'String'), 'nummod'), (('-', 'a+b'), 'punct'), (('a+b', 'String'), 'nummod'), (('Prof.', 'String'), 'appos'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Theory'), 'appos'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 46 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  LL(1) parser (predictive parser) LL(1) is non recursive top down parser. 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'LL', '(', '1', ')', 'parser', '(', 'predictive', 'parser', ')', 'LL', '(', '1', ')', 'is', 'non', 'recursive', 'top', 'down', 'parser', '.'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'PROPN'), ('precedence', 'NOUN'), ('LALR', 'PROPN'), ('CLR', 'PROPN'), ('SLR', 'PROPN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NUM'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parser', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('parser', 'NOUN'), (')', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('is', 'AUX'), ('non', 'ADV'), ('recursive', 'ADJ'), ('top', 'NOUN'), ('down', 'ADP'), ('parser', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'CD'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parser', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('parser', 'NN'), (')', '-RRB-'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('is', 'VBZ'), ('non', 'RB'), ('recursive', 'JJ'), ('top', 'NN'), ('down', 'RP'), ('parser', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('(', '('), ('predictive', 'predictive'), ('parser', 'parser'), (')', ')'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('is', 'be'), ('non', 'non'), ('recursive', 'recursive'), ('top', 'top'), ('down', 'down'), ('parser', 'parser'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'parsing'), 'punct'), (('predictive', 'parsing'), 'amod'), (('parsing', 'backtracking'), 'appos'), ((')', 'parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obl'), (('LALR', 'precedence'), 'compound'), (('CLR', 'SLR'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'conj'), (('LL', 'descent'), 'appos'), (('(', '1'), 'punct'), (('1', 'Prof.'), 'nummod'), ((')', '1'), 'punct'), (('Prof.', 'LL'), 'appos'), (('Jay', 'Prof.'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'LL'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'precedence'), 'appos'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'precedence'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nmod:tmod'), ((')', 'I'), 'punct'), (('‹#›', 'LL'), 'nummod'), (('LL', 'Theory'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('parser', 'LL'), 'appos'), (('(', 'parser'), 'punct'), (('predictive', 'parser'), 'amod'), (('parser', 'parser'), 'appos'), ((')', 'parser'), 'punct'), (('LL', 'parser'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'appos'), ((')', '1'), 'punct'), (('is', 'parser'), 'cop'), (('non', 'recursive'), 'advmod'), (('recursive', 'parser'), 'amod'), (('top', 'parser'), 'compound'), (('down', 'parser'), 'case'), (('parser', 'LL'), 'nmod'), (('.', 'parser'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 48 ===========================

 First L indicates input is scanned from left to right. 

Tokens are: 
>> ['First', 'L', 'indicates', 'input', 'is', 'scanned', 'from', 'left', 'to', 'right', '.'] 

 UPOS tags are: 
>> [('First', 'ADJ'), ('L', 'PROPN'), ('indicates', 'VERB'), ('input', 'NOUN'), ('is', 'AUX'), ('scanned', 'VERB'), ('from', 'ADP'), ('left', 'VERB'), ('to', 'ADP'), ('right', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'JJ'), ('L', 'NNP'), ('indicates', 'VBZ'), ('input', 'NN'), ('is', 'VBZ'), ('scanned', 'VBN'), ('from', 'IN'), ('left', 'VBN'), ('to', 'IN'), ('right', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), ('L', 'L'), ('indicates', 'indicate'), ('input', 'input'), ('is', 'be'), ('scanned', 'scan'), ('from', 'from'), ('left', 'leave'), ('to', 'to'), ('right', 'right'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'L'), 'amod'), (('L', 'indicates'), 'nsubj'), (('indicates', 'root'), 'root'), (('input', 'scanned'), 'nsubj:pass'), (('is', 'scanned'), 'aux:pass'), (('scanned', 'indicates'), 'ccomp'), (('from', 'left'), 'case'), (('left', 'scanned'), 'obl'), (('to', 'right'), 'case'), (('right', 'left'), 'obl'), (('.', 'indicates'), 'punct')]

 Named Entities are: 
>> [('First L', 'ORG')]

========================== Sentence 49 ===========================

 The second L means it uses leftmost derivation for input string   1 means it uses only input symbol to predict the parsing process. 

Tokens are: 
>> ['The', 'second', 'L', 'means', 'it', 'uses', 'leftmost', 'derivation', 'for', 'input', 'string', '1', 'means', 'it', 'uses', 'only', 'input', 'symbol', 'to', 'predict', 'the', 'parsing', 'process', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('second', 'ADJ'), ('L', 'PROPN'), ('means', 'VERB'), ('it', 'PRON'), ('uses', 'VERB'), ('leftmost', 'ADJ'), ('derivation', 'NOUN'), ('for', 'ADP'), ('input', 'NOUN'), ('string', 'NOUN'), ('1', 'NUM'), ('means', 'VERB'), ('it', 'PRON'), ('uses', 'VERB'), ('only', 'ADJ'), ('input', 'NOUN'), ('symbol', 'NOUN'), ('to', 'PART'), ('predict', 'VERB'), ('the', 'DET'), ('parsing', 'NOUN'), ('process', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('second', 'JJ'), ('L', 'NNP'), ('means', 'VBZ'), ('it', 'PRP'), ('uses', 'VBZ'), ('leftmost', 'JJ'), ('derivation', 'NN'), ('for', 'IN'), ('input', 'NN'), ('string', 'NN'), ('1', 'CD'), ('means', 'VBZ'), ('it', 'PRP'), ('uses', 'VBZ'), ('only', 'JJ'), ('input', 'NN'), ('symbol', 'NN'), ('to', 'TO'), ('predict', 'VB'), ('the', 'DT'), ('parsing', 'NN'), ('process', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('second', 'second'), ('L', 'L'), ('means', 'mean'), ('it', 'it'), ('uses', 'use'), ('leftmost', 'leftmost'), ('derivation', 'derivation'), ('for', 'for'), ('input', 'input'), ('string', 'string'), ('1', '1'), ('means', 'mean'), ('it', 'it'), ('uses', 'use'), ('only', 'only'), ('input', 'input'), ('symbol', 'symbol'), ('to', 'to'), ('predict', 'predict'), ('the', 'the'), ('parsing', 'parsing'), ('process', 'process'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'L'), 'det'), (('second', 'L'), 'amod'), (('L', 'means'), 'nsubj'), (('means', 'root'), 'root'), (('it', 'uses'), 'nsubj'), (('uses', 'means'), 'ccomp'), (('leftmost', 'derivation'), 'amod'), (('derivation', 'uses'), 'obj'), (('for', 'string'), 'case'), (('input', 'string'), 'compound'), (('string', 'derivation'), 'nmod'), (('1', 'string'), 'nummod'), (('means', 'means'), 'ccomp'), (('it', 'uses'), 'nsubj'), (('uses', 'means'), 'ccomp'), (('only', 'symbol'), 'amod'), (('input', 'symbol'), 'compound'), (('symbol', 'uses'), 'obj'), (('to', 'predict'), 'mark'), (('predict', 'uses'), 'advcl'), (('the', 'process'), 'det'), (('parsing', 'process'), 'compound'), (('process', 'predict'), 'obj'), (('.', 'means'), 'punct')]

 Named Entities are: 
>> [('second', 'ORDINAL'), ('1', 'CARDINAL')]

========================== Sentence 50 ===========================

 Predictive parsing program Parsing table M INPUT OUTPUT   Stack  	a	+	b	$	  	X 	Y 	Z 	$     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  LL(1) parsing (predictive parsing) 

Tokens are: 
>> ['Predictive', 'parsing', 'program', 'Parsing', 'table', 'M', 'INPUT', 'OUTPUT', 'Stack', 'a', '+', 'b', '$', 'X', 'Y', 'Z', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'LL', '(', '1', ')', 'parsing', '(', 'predictive', 'parsing', ')'] 

 UPOS tags are: 
>> [('Predictive', 'ADJ'), ('parsing', 'NOUN'), ('program', 'NOUN'), ('Parsing', 'NOUN'), ('table', 'NOUN'), ('M', 'NOUN'), ('INPUT', 'NOUN'), ('OUTPUT', 'NOUN'), ('Stack', 'NOUN'), ('a', 'SYM'), ('+', 'SYM'), ('b', 'NOUN'), ('$', 'SYM'), ('X', 'NUM'), ('Y', 'NOUN'), ('Z', 'NOUN'), ('$', 'SYM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NUM'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Predictive', 'JJ'), ('parsing', 'NN'), ('program', 'NN'), ('Parsing', 'NN'), ('table', 'NN'), ('M', 'NN'), ('INPUT', 'NN'), ('OUTPUT', 'NN'), ('Stack', 'NN'), ('a', 'SYM'), ('+', 'SYM'), ('b', 'NN'), ('$', '$'), ('X', 'CD'), ('Y', 'NN'), ('Z', 'NN'), ('$', '$'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'CD'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('parsing', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Predictive', 'predictive'), ('parsing', 'parsing'), ('program', 'program'), ('Parsing', 'parsing'), ('table', 'table'), ('M', 'm'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('Stack', 'stack'), ('a', 'a'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'X'), ('Y', 'Y'), ('Z', 'z'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')')] 

 Dependency tags are: 
>> [(('Predictive', 'program'), 'amod'), (('parsing', 'program'), 'compound'), (('program', 'root'), 'root'), (('Parsing', 'table'), 'compound'), (('table', 'program'), 'compound'), (('M', 'Stack'), 'compound'), (('INPUT', 'Stack'), 'compound'), (('OUTPUT', 'Stack'), 'compound'), (('Stack', 'program'), 'list'), (('a', '$'), 'nummod'), (('+', 'b'), 'cc'), (('b', '$'), 'compound'), (('$', 'Stack'), 'appos'), (('X', '$'), 'nummod'), (('Y', '$'), 'nummod'), (('Z', '$'), 'appos'), (('$', '$'), 'appos'), (('Prof.', '$'), 'nummod'), (('Jay', 'R'), 'compound'), (('R', '$'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'program'), 'list'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'LL'), 'nummod'), (('LL', 'Theory'), 'appos'), (('(', 'parsing'), 'punct'), (('1', 'LL'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'LL'), 'appos'), (('(', 'parsing'), 'punct'), (('predictive', 'parsing'), 'amod'), (('parsing', 'parsing'), 'appos'), ((')', 'parsing'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 51 ===========================

 Steps to construct LL(1) parser Remove left recursion / Perform left factoring (if any). 

Tokens are: 
>> ['Steps', 'to', 'construct', 'LL', '(', '1', ')', 'parser', 'Remove', 'left', 'recursion', '/', 'Perform', 'left', 'factoring', '(', 'if', 'any', ')', '.'] 

 UPOS tags are: 
>> [('Steps', 'NOUN'), ('to', 'PART'), ('construct', 'VERB'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parser', 'NOUN'), ('Remove', 'VERB'), ('left', 'VERB'), ('recursion', 'NOUN'), ('/', 'SYM'), ('Perform', 'VERB'), ('left', 'VERB'), ('factoring', 'NOUN'), ('(', 'PUNCT'), ('if', 'SCONJ'), ('any', 'DET'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Steps', 'NNS'), ('to', 'TO'), ('construct', 'VB'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('parser', 'NN'), ('Remove', 'VB'), ('left', 'VBN'), ('recursion', 'NN'), ('/', ','), ('Perform', 'VB'), ('left', 'VBN'), ('factoring', 'NN'), ('(', '-LRB-'), ('if', 'IN'), ('any', 'DT'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Steps', 'step'), ('to', 'to'), ('construct', 'construct'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parser', 'parser'), ('Remove', 'remove'), ('left', 'leave'), ('recursion', 'recursion'), ('/', '/'), ('Perform', 'perform'), ('left', 'leave'), ('factoring', 'factoring'), ('(', '('), ('if', 'if'), ('any', 'any'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Steps', 'root'), 'root'), (('to', 'construct'), 'mark'), (('construct', 'Steps'), 'acl'), (('LL', 'parser'), 'compound'), (('(', '1'), 'punct'), (('1', 'parser'), 'nummod'), ((')', '1'), 'punct'), (('parser', 'Remove'), 'nsubj'), (('Remove', 'construct'), 'xcomp'), (('left', 'Remove'), 'xcomp'), (('recursion', 'left'), 'obj'), (('/', 'Perform'), 'cc'), (('Perform', 'left'), 'conj'), (('left', 'factoring'), 'amod'), (('factoring', 'Perform'), 'obj'), (('(', 'any'), 'punct'), (('if', 'any'), 'mark'), (('any', 'factoring'), 'nmod'), ((')', 'any'), 'punct'), (('.', 'Steps'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 Compute FIRST and FOLLOW of non terminals. 

Tokens are: 
>> ['Compute', 'FIRST', 'and', 'FOLLOW', 'of', 'non', 'terminals', '.'] 

 UPOS tags are: 
>> [('Compute', 'VERB'), ('FIRST', 'ADJ'), ('and', 'CCONJ'), ('FOLLOW', 'VERB'), ('of', 'ADP'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Compute', 'VB'), ('FIRST', 'JJ'), ('and', 'CC'), ('FOLLOW', 'VB'), ('of', 'IN'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Compute', 'compute'), ('FIRST', 'first'), ('and', 'and'), ('FOLLOW', 'follow'), ('of', 'of'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Compute', 'root'), 'root'), (('FIRST', 'Compute'), 'obj'), (('and', 'FOLLOW'), 'cc'), (('FOLLOW', 'Compute'), 'conj'), (('of', 'terminals'), 'case'), (('non', 'terminals'), 'compound'), (('terminals', 'FOLLOW'), 'obl'), (('.', 'Compute'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 Construct predictive parsing table. 

Tokens are: 
>> ['Construct', 'predictive', 'parsing', 'table', '.'] 

 UPOS tags are: 
>> [('Construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('.', '.')] 

 Dependency tags are: 
>> [(('Construct', 'root'), 'root'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'obj'), (('.', 'Construct'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 Parse the input string using parsing table. 

Tokens are: 
>> ['Parse', 'the', 'input', 'string', 'using', 'parsing', 'table', '.'] 

 UPOS tags are: 
>> [('Parse', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('string', 'NOUN'), ('using', 'VERB'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Parse', 'VB'), ('the', 'DT'), ('input', 'NN'), ('string', 'NN'), ('using', 'VBG'), ('parsing', 'NN'), ('table', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Parse', 'parse'), ('the', 'the'), ('input', 'input'), ('string', 'string'), ('using', 'use'), ('parsing', 'parsing'), ('table', 'table'), ('.', '.')] 

 Dependency tags are: 
>> [(('Parse', 'root'), 'root'), (('the', 'string'), 'det'), (('input', 'string'), 'compound'), (('string', 'Parse'), 'obj'), (('using', 'string'), 'acl'), (('parsing', 'table'), 'compound'), (('table', 'using'), 'obj'), (('.', 'Parse'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 55 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to compute first of non terminal 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rules', 'to', 'compute', 'first', 'of', 'non', 'terminal'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Rules', 'NOUN'), ('to', 'PART'), ('compute', 'VERB'), ('first', 'ADJ'), ('of', 'ADP'), ('non', 'NOUN'), ('terminal', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Rules', 'NNS'), ('to', 'TO'), ('compute', 'VB'), ('first', 'JJ'), ('of', 'IN'), ('non', 'NN'), ('terminal', 'NN')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Rules', 'rule'), ('to', 'to'), ('compute', 'compute'), ('first', 'first'), ('of', 'of'), ('non', 'non'), ('terminal', 'terminal')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'list'), (('(', 'I'), 'punct'), (('I', 'Rules'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Rules'), 'compound'), (('Rules', 'Prof.'), 'list'), (('to', 'compute'), 'mark'), (('compute', 'Rules'), 'acl'), (('first', 'compute'), 'obj'), (('of', 'terminal'), 'case'), (('non', 'terminal'), 'compound'), (('terminal', 'first'), 'obl')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('first', 'ORDINAL')]

========================== Sentence 56 ===========================

 If and  is terminal, add  to . 

Tokens are: 
>> ['If', 'and', 'is', 'terminal', ',', 'add', 'to', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('and', 'CCONJ'), ('is', 'AUX'), ('terminal', 'ADJ'), (',', 'PUNCT'), ('add', 'VERB'), ('to', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('and', 'CC'), ('is', 'VBZ'), ('terminal', 'JJ'), (',', ','), ('add', 'VB'), ('to', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('and', 'and'), ('is', 'be'), ('terminal', 'terminal'), (',', ','), ('add', 'add'), ('to', 'to'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'terminal'), 'mark'), (('and', 'terminal'), 'cc'), (('is', 'terminal'), 'cop'), (('terminal', 'add'), 'advcl'), ((',', 'add'), 'punct'), (('add', 'root'), 'root'), (('to', 'add'), 'advmod'), (('.', 'add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 If , add to . 

Tokens are: 
>> ['If', ',', 'add', 'to', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), (',', 'PUNCT'), ('add', 'VERB'), ('to', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), (',', ','), ('add', 'VB'), ('to', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), (',', ','), ('add', 'add'), ('to', 'to'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'add'), 'mark'), ((',', 'add'), 'punct'), (('add', 'root'), 'root'), (('to', 'add'), 'obl'), (('.', 'add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 If  is nonterminal and is a production, then place  in  if for some , a is in , and 𝜖 is in all of that is . 

Tokens are: 
>> ['If', 'is', 'nonterminal', 'and', 'is', 'a', 'production', ',', 'then', 'place', 'in', 'if', 'for', 'some', ',', 'a', 'is', 'in', ',', 'and', '𝜖', 'is', 'in', 'all', 'of', 'that', 'is', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('is', 'AUX'), ('nonterminal', 'ADJ'), ('and', 'CCONJ'), ('is', 'AUX'), ('a', 'DET'), ('production', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('place', 'VERB'), ('in', 'ADP'), ('if', 'SCONJ'), ('for', 'ADP'), ('some', 'DET'), (',', 'PUNCT'), ('a', 'DET'), ('is', 'AUX'), ('in', 'ADP'), (',', 'PUNCT'), ('and', 'CCONJ'), ('𝜖', 'PRON'), ('is', 'AUX'), ('in', 'ADP'), ('all', 'DET'), ('of', 'ADP'), ('that', 'PRON'), ('is', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('is', 'VBZ'), ('nonterminal', 'JJ'), ('and', 'CC'), ('is', 'VBZ'), ('a', 'DT'), ('production', 'NN'), (',', ','), ('then', 'RB'), ('place', 'VB'), ('in', 'RP'), ('if', 'IN'), ('for', 'IN'), ('some', 'DT'), (',', ','), ('a', 'DT'), ('is', 'VBZ'), ('in', 'IN'), (',', ','), ('and', 'CC'), ('𝜖', 'PRP'), ('is', 'VBZ'), ('in', 'IN'), ('all', 'DT'), ('of', 'IN'), ('that', 'DT'), ('is', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('is', 'be'), ('nonterminal', 'nonterminal'), ('and', 'and'), ('is', 'be'), ('a', 'a'), ('production', 'production'), (',', ','), ('then', 'then'), ('place', 'place'), ('in', 'in'), ('if', 'if'), ('for', 'for'), ('some', 'some'), (',', ','), ('a', 'a'), ('is', 'be'), ('in', 'in'), (',', ','), ('and', 'and'), ('𝜖', '𝜖'), ('is', 'be'), ('in', 'in'), ('all', 'all'), ('of', 'of'), ('that', 'that'), ('is', 'be'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'nonterminal'), 'mark'), (('is', 'nonterminal'), 'cop'), (('nonterminal', 'place'), 'advcl'), (('and', 'production'), 'cc'), (('is', 'production'), 'cop'), (('a', 'production'), 'det'), (('production', 'nonterminal'), 'conj'), ((',', 'place'), 'punct'), (('then', 'place'), 'advmod'), (('place', 'root'), 'root'), (('in', 'place'), 'compound:prt'), (('if', 'in'), 'mark'), (('for', 'some'), 'case'), (('some', 'in'), 'obl'), ((',', 'in'), 'punct'), (('a', 'in'), 'nsubj'), (('is', 'in'), 'cop'), (('in', 'place'), 'advcl'), ((',', 'is'), 'punct'), (('and', 'all'), 'cc'), (('𝜖', 'all'), 'nsubj'), (('is', 'all'), 'cop'), (('in', 'all'), 'case'), (('all', 'in'), 'conj'), (('of', 'that'), 'case'), (('that', 'all'), 'nmod'), (('is', 'all'), 'cop'), (('.', 'place'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 If 𝜖 is in  for all then add 𝜖 to . 

Tokens are: 
>> ['If', '𝜖', 'is', 'in', 'for', 'all', 'then', 'add', '𝜖', 'to', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('𝜖', 'PRON'), ('is', 'AUX'), ('in', 'ADV'), ('for', 'ADP'), ('all', 'DET'), ('then', 'ADV'), ('add', 'VERB'), ('𝜖', 'NOUN'), ('to', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('𝜖', 'PRP'), ('is', 'VBZ'), ('in', 'RB'), ('for', 'IN'), ('all', 'DT'), ('then', 'RB'), ('add', 'VB'), ('𝜖', 'NN'), ('to', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('𝜖', '𝜖'), ('is', 'be'), ('in', 'in'), ('for', 'for'), ('all', 'all'), ('then', 'then'), ('add', 'add'), ('𝜖', '𝜖'), ('to', 'to'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'in'), 'mark'), (('𝜖', 'in'), 'nsubj'), (('is', 'in'), 'cop'), (('in', 'add'), 'advcl'), (('for', 'all'), 'case'), (('all', 'in'), 'obl'), (('then', 'add'), 'advmod'), (('add', 'root'), 'root'), (('𝜖', 'add'), 'obj'), (('to', 'add'), 'obl'), (('.', 'add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 Everything in  is surely in  If  does not derive 𝜖, then we do nothing more to , but if , then we add  and so on. 

Tokens are: 
>> ['Everything', 'in', 'is', 'surely', 'in', 'If', 'does', 'not', 'derive', '𝜖', ',', 'then', 'we', 'do', 'nothing', 'more', 'to', ',', 'but', 'if', ',', 'then', 'we', 'add', 'and', 'so', 'on', '.'] 

 UPOS tags are: 
>> [('Everything', 'PRON'), ('in', 'ADP'), ('is', 'AUX'), ('surely', 'ADV'), ('in', 'ADP'), ('If', 'SCONJ'), ('does', 'AUX'), ('not', 'PART'), ('derive', 'VERB'), ('𝜖', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('we', 'PRON'), ('do', 'VERB'), ('nothing', 'PRON'), ('more', 'ADV'), ('to', 'PART'), (',', 'PUNCT'), ('but', 'CCONJ'), ('if', 'SCONJ'), (',', 'PUNCT'), ('then', 'ADV'), ('we', 'PRON'), ('add', 'VERB'), ('and', 'CCONJ'), ('so', 'ADV'), ('on', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Everything', 'NN'), ('in', 'IN'), ('is', 'VBZ'), ('surely', 'RB'), ('in', 'IN'), ('If', 'IN'), ('does', 'VBZ'), ('not', 'RB'), ('derive', 'VB'), ('𝜖', 'NN'), (',', ','), ('then', 'RB'), ('we', 'PRP'), ('do', 'VBP'), ('nothing', 'NN'), ('more', 'RBR'), ('to', 'TO'), (',', ','), ('but', 'CC'), ('if', 'IN'), (',', ','), ('then', 'RB'), ('we', 'PRP'), ('add', 'VBP'), ('and', 'CC'), ('so', 'RB'), ('on', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Everything', 'everything'), ('in', 'in'), ('is', 'be'), ('surely', 'surely'), ('in', 'in'), ('If', 'if'), ('does', 'do'), ('not', 'not'), ('derive', 'derive'), ('𝜖', '𝜖'), (',', ','), ('then', 'then'), ('we', 'we'), ('do', 'do'), ('nothing', 'nothing'), ('more', 'more'), ('to', 'to'), (',', ','), ('but', 'but'), ('if', 'if'), (',', ','), ('then', 'then'), ('we', 'we'), ('add', 'add'), ('and', 'and'), ('so', 'so'), ('on', 'on'), ('.', '.')] 

 Dependency tags are: 
>> [(('Everything', 'in'), 'nsubj'), (('in', 'Everything'), 'nmod'), (('is', 'in'), 'cop'), (('surely', 'in'), 'advmod'), (('in', 'root'), 'root'), (('If', 'derive'), 'mark'), (('does', 'derive'), 'aux'), (('not', 'derive'), 'advmod'), (('derive', 'do'), 'advcl'), (('𝜖', 'derive'), 'obj'), ((',', 'do'), 'punct'), (('then', 'do'), 'advmod'), (('we', 'do'), 'nsubj'), (('do', 'in'), 'parataxis'), (('nothing', 'do'), 'obj'), (('more', 'do'), 'advmod'), (('to', 'do'), 'xcomp'), ((',', 'add'), 'punct'), (('but', 'add'), 'cc'), (('if', 'add'), 'mark'), ((',', 'if'), 'punct'), (('then', 'add'), 'advmod'), (('we', 'add'), 'nsubj'), (('add', 'do'), 'conj'), (('and', 'so'), 'cc'), (('so', 'on'), 'advmod'), (('on', 'add'), 'conj'), (('.', 'do'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 61 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to compute first of non terminal Simplification of Rule 3 If  , 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rules', 'to', 'compute', 'first', 'of', 'non', 'terminal', 'Simplification', 'of', 'Rule', '3', 'If', ','] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Rules', 'NOUN'), ('to', 'PART'), ('compute', 'VERB'), ('first', 'ADJ'), ('of', 'ADP'), ('non', 'NOUN'), ('terminal', 'ADJ'), ('Simplification', 'NOUN'), ('of', 'ADP'), ('Rule', 'NOUN'), ('3', 'NUM'), ('If', 'SCONJ'), (',', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Rules', 'NNS'), ('to', 'TO'), ('compute', 'VB'), ('first', 'JJ'), ('of', 'IN'), ('non', 'NN'), ('terminal', 'JJ'), ('Simplification', 'NN'), ('of', 'IN'), ('Rule', 'NN'), ('3', 'CD'), ('If', 'IN'), (',', ',')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Rules', 'rule'), ('to', 'to'), ('compute', 'compute'), ('first', 'first'), ('of', 'of'), ('non', 'non'), ('terminal', 'terminal'), ('Simplification', 'simplification'), ('of', 'of'), ('Rule', 'rule'), ('3', '3'), ('If', 'if'), (',', ',')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Rules'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Rules'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Rules'), 'compound'), (('Rules', 'Prof.'), 'list'), (('to', 'compute'), 'mark'), (('compute', 'Rules'), 'acl'), (('first', 'compute'), 'obj'), (('of', 'Simplification'), 'case'), (('non', 'Simplification'), 'det'), (('terminal', 'Simplification'), 'amod'), (('Simplification', 'first'), 'obl'), (('of', 'Rule'), 'case'), (('Rule', 'Simplification'), 'nmod'), (('3', 'Rule'), 'nummod'), (('If', 'Rule'), 'case'), ((',', 'Rules'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('first', 'ORDINAL'), ('3', 'CARDINAL')]

========================== Sentence 62 ===========================

 If  does not derives 

Tokens are: 
>> ['If', 'does', 'not', 'derives'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('does', 'AUX'), ('not', 'PART'), ('derives', 'VERB')] 

 XPOS tags are: 
>> [('If', 'IN'), ('does', 'VBZ'), ('not', 'RB'), ('derives', 'VBZ')] 

 Lemmas are: 
>> [('If', 'if'), ('does', 'do'), ('not', 'not'), ('derives', 'derive')] 

 Dependency tags are: 
>> [(('If', 'derives'), 'mark'), (('does', 'derives'), 'aux'), (('not', 'derives'), 'advmod'), (('derives', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 If  derives 

Tokens are: 
>> ['If', 'derives'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('derives', 'VERB')] 

 XPOS tags are: 
>> [('If', 'IN'), ('derives', 'VBZ')] 

 Lemmas are: 
>> [('If', 'if'), ('derives', 'derive')] 

 Dependency tags are: 
>> [(('If', 'derives'), 'mark'), (('derives', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 64 ===========================

 If  & Y2 derives ∈ 

Tokens are: 
>> ['If', '&', 'Y2', 'derives', '∈'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('&', 'CCONJ'), ('Y2', 'PROPN'), ('derives', 'VERB'), ('∈', 'NOUN')] 

 XPOS tags are: 
>> [('If', 'IN'), ('&', 'CC'), ('Y2', 'NNP'), ('derives', 'VBZ'), ('∈', 'NN')] 

 Lemmas are: 
>> [('If', 'if'), ('&', '&'), ('Y2', 'Y2'), ('derives', 'derive'), ('∈', '∈')] 

 Dependency tags are: 
>> [(('If', 'derives'), 'mark'), (('&', 'Y2'), 'cc'), (('Y2', 'If'), 'conj'), (('derives', 'root'), 'root'), (('∈', 'derives'), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 65 ===========================

 If  , Y2 & Y3 derives ∈ 

Tokens are: 
>> ['If', ',', 'Y2', '&', 'Y3', 'derives', '∈'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), (',', 'PUNCT'), ('Y2', 'PROPN'), ('&', 'CCONJ'), ('Y3', 'PROPN'), ('derives', 'VERB'), ('∈', 'NOUN')] 

 XPOS tags are: 
>> [('If', 'IN'), (',', ','), ('Y2', 'NNP'), ('&', 'CC'), ('Y3', 'NNP'), ('derives', 'VBZ'), ('∈', 'NN')] 

 Lemmas are: 
>> [('If', 'if'), (',', ','), ('Y2', 'Y2'), ('&', '&'), ('Y3', 'Y3'), ('derives', 'derive'), ('∈', '∈')] 

 Dependency tags are: 
>> [(('If', 'derives'), 'mark'), ((',', 'derives'), 'punct'), (('Y2', 'derives'), 'nsubj'), (('&', 'Y3'), 'cc'), (('Y3', 'Y2'), 'conj'), (('derives', 'root'), 'root'), (('∈', 'derives'), 'obj')]

 Named Entities are: 
>> [('Y2 & Y3', 'ORG')]

========================== Sentence 66 ===========================

 If  , Y2 , Y3 ….. 

Tokens are: 
>> ['If', ',', 'Y2', ',', 'Y3', '…..'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), (',', 'PUNCT'), ('Y2', 'NUM'), (',', 'PUNCT'), ('Y3', 'NUM'), ('…..', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), (',', ','), ('Y2', 'CD'), (',', ','), ('Y3', 'CD'), ('…..', '.')] 

 Lemmas are: 
>> [('If', 'if'), (',', ','), ('Y2', 'y2'), (',', ','), ('Y3', 'y3'), ('…..', '…..')] 

 Dependency tags are: 
>> [(('If', 'Y2'), 'mark'), ((',', 'Y2'), 'punct'), (('Y2', 'root'), 'root'), ((',', 'Y2'), 'punct'), (('Y3', 'Y2'), 'parataxis'), (('…..', 'Y2'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 67 ===========================

 YK all derives ∈  (note: if all non terminals derives ∈ then add ∈ to FIRST(A))     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to compute FOLLOW of non terminal Place S is start symbol) 

Tokens are: 
>> ['YK', 'all', 'derives', '∈', '(', 'note', ':', 'if', 'all', 'non', 'terminals', 'derives', '∈', 'then', 'add', '∈', 'to', 'FIRST', '(', 'A', ')', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rules', 'to', 'compute', 'FOLLOW', 'of', 'non', 'terminal', 'Place', 'S', 'is', 'start', 'symbol', ')'] 

 UPOS tags are: 
>> [('YK', 'PROPN'), ('all', 'DET'), ('derives', 'VERB'), ('∈', 'NOUN'), ('(', 'PUNCT'), ('note', 'NOUN'), (':', 'PUNCT'), ('if', 'SCONJ'), ('all', 'DET'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('derives', 'VERB'), ('∈', 'NOUN'), ('then', 'ADV'), ('add', 'VERB'), ('∈', 'NOUN'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Rules', 'NOUN'), ('to', 'PART'), ('compute', 'VERB'), ('FOLLOW', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('Place', 'NOUN'), ('S', 'PART'), ('is', 'AUX'), ('start', 'NOUN'), ('symbol', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('YK', 'NNP'), ('all', 'DT'), ('derives', 'VBZ'), ('∈', 'NN'), ('(', '-LRB-'), ('note', 'NN'), (':', ':'), ('if', 'IN'), ('all', 'DT'), ('non', 'NN'), ('terminals', 'NNS'), ('derives', 'VBZ'), ('∈', 'NN'), ('then', 'RB'), ('add', 'VB'), ('∈', 'NN'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Rules', 'NNS'), ('to', 'TO'), ('compute', 'VB'), ('FOLLOW', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminal', 'NN'), ('Place', 'NN'), ('S', 'POS'), ('is', 'VBZ'), ('start', 'NN'), ('symbol', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('YK', 'YK'), ('all', 'all'), ('derives', 'derive'), ('∈', '∈'), ('(', '('), ('note', 'note'), (':', ':'), ('if', 'if'), ('all', 'all'), ('non', 'non'), ('terminals', 'terminal'), ('derives', 'derive'), ('∈', '∈'), ('then', 'then'), ('add', 'add'), ('∈', '∈'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('A', 'a'), (')', ')'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Rules', 'rule'), ('to', 'to'), ('compute', 'compute'), ('FOLLOW', 'follow'), ('of', 'of'), ('non', 'non'), ('terminal', 'terminal'), ('Place', 'place'), ('S', "'s"), ('is', 'be'), ('start', 'start'), ('symbol', 'symbol'), (')', ')')] 

 Dependency tags are: 
>> [(('YK', 'derives'), 'nsubj'), (('all', 'YK'), 'det'), (('derives', 'root'), 'root'), (('∈', 'derives'), 'obj'), (('(', 'note'), 'punct'), (('note', 'derives'), 'parataxis'), ((':', 'derives'), 'punct'), (('if', 'derives'), 'mark'), (('all', 'terminals'), 'det'), (('non', 'terminals'), 'compound'), (('terminals', 'derives'), 'nsubj'), (('derives', 'add'), 'advcl'), (('∈', 'derives'), 'obj'), (('then', 'add'), 'advmod'), (('add', 'derives'), 'parataxis'), (('∈', 'add'), 'obj'), (('to', 'FIRST'), 'case'), (('FIRST', 'add'), 'obl'), (('(', 'A'), 'punct'), (('A', 'add'), 'nummod'), ((')', 'A'), 'punct'), ((')', 'A'), 'punct'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'add'), 'obj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Rules'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Rules'), 'compound'), (('Rules', 'Theory'), 'appos'), (('to', 'compute'), 'mark'), (('compute', 'Rules'), 'acl'), (('FOLLOW', 'compute'), 'obj'), (('of', 'Place'), 'case'), (('non', 'Place'), 'det'), (('terminal', 'Place'), 'compound'), (('Place', 'symbol'), 'nmod:poss'), (('S', 'Place'), 'case'), (('is', 'symbol'), 'cop'), (('start', 'symbol'), 'compound'), (('symbol', 'Rules'), 'parataxis'), ((')', 'symbol'), 'punct')]

 Named Entities are: 
>> [('3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 68 ===========================

 If then everything in  except for 𝜖 is placed in 

Tokens are: 
>> ['If', 'then', 'everything', 'in', 'except', 'for', '𝜖', 'is', 'placed', 'in'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('then', 'ADV'), ('everything', 'PRON'), ('in', 'ADP'), ('except', 'ADP'), ('for', 'ADP'), ('𝜖', 'NOUN'), ('is', 'AUX'), ('placed', 'VERB'), ('in', 'ADV')] 

 XPOS tags are: 
>> [('If', 'IN'), ('then', 'RB'), ('everything', 'NN'), ('in', 'IN'), ('except', 'IN'), ('for', 'IN'), ('𝜖', 'NN'), ('is', 'VBZ'), ('placed', 'VBN'), ('in', 'RB')] 

 Lemmas are: 
>> [('If', 'if'), ('then', 'then'), ('everything', 'everything'), ('in', 'in'), ('except', 'except'), ('for', 'for'), ('𝜖', '𝜖'), ('is', 'be'), ('placed', 'place'), ('in', 'in')] 

 Dependency tags are: 
>> [(('If', 'then'), 'mark'), (('then', 'placed'), 'advmod'), (('everything', 'placed'), 'nsubj:pass'), (('in', 'everything'), 'nmod'), (('except', '𝜖'), 'case'), (('for', '𝜖'), 'case'), (('𝜖', 'everything'), 'nmod'), (('is', 'placed'), 'aux:pass'), (('placed', 'root'), 'root'), (('in', 'placed'), 'advmod')]

 Named Entities are: 
>> []

========================== Sentence 69 ===========================

 If there is a production or a production  where  contains  then everything in     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['If', 'there', 'is', 'a', 'production', 'or', 'a', 'production', 'where', 'contains', 'then', 'everything', 'in', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#', '›'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('there', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('production', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('production', 'NOUN'), ('where', 'SCONJ'), ('contains', 'VERB'), ('then', 'ADV'), ('everything', 'PRON'), ('in', 'ADP'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#', 'X'), ('›', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('there', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('production', 'NN'), ('or', 'CC'), ('a', 'DT'), ('production', 'NN'), ('where', 'WRB'), ('contains', 'VBZ'), ('then', 'RB'), ('everything', 'NN'), ('in', 'IN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#', 'ADD'), ('›', '-RRB-')] 

 Lemmas are: 
>> [('If', 'if'), ('there', 'there'), ('is', 'be'), ('a', 'a'), ('production', 'production'), ('or', 'or'), ('a', 'a'), ('production', 'production'), ('where', 'where'), ('contains', 'contain'), ('then', 'then'), ('everything', 'everything'), ('in', 'in'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#', '‹#'), ('›', "''")] 

 Dependency tags are: 
>> [(('If', 'is'), 'mark'), (('there', 'is'), 'expl'), (('is', 'root'), 'root'), (('a', 'production'), 'det'), (('production', 'is'), 'nsubj'), (('or', 'production'), 'cc'), (('a', 'production'), 'det'), (('production', 'production'), 'conj'), (('where', 'contains'), 'mark'), (('contains', 'production'), 'acl:relcl'), (('then', 'contains'), 'advmod'), (('everything', 'contains'), 'obj'), (('in', 'Prof.'), 'case'), (('Prof.', 'everything'), 'nmod'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'everything'), 'nmod'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'appos'), (('Kagathara', '#'), 'appos'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', '‹#'), 'punct'), (('I', '‹#'), 'nummod'), ((')', 'I'), 'punct'), (('‹#', 'Theory'), 'appos'), (('›', '‹#'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 70 ===========================

 How to apply rules to find FOLLOW of non terminal? 

Tokens are: 
>> ['How', 'to', 'apply', 'rules', 'to', 'find', 'FOLLOW', 'of', 'non', 'terminal', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('to', 'PART'), ('apply', 'VERB'), ('rules', 'NOUN'), ('to', 'PART'), ('find', 'VERB'), ('FOLLOW', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('to', 'TO'), ('apply', 'VB'), ('rules', 'NNS'), ('to', 'TO'), ('find', 'VB'), ('FOLLOW', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminal', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('to', 'to'), ('apply', 'apply'), ('rules', 'rule'), ('to', 'to'), ('find', 'find'), ('FOLLOW', 'follow'), ('of', 'of'), ('non', 'non'), ('terminal', 'terminal'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'apply'), 'advmod'), (('to', 'apply'), 'mark'), (('apply', 'root'), 'root'), (('rules', 'apply'), 'obj'), (('to', 'find'), 'mark'), (('find', 'apply'), 'advcl'), (('FOLLOW', 'find'), 'obj'), (('of', 'terminal'), 'case'), (('non', 'terminal'), 'det'), (('terminal', 'FOLLOW'), 'nmod'), (('?', 'apply'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 71 ===========================

 𝜖  𝜖      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to construct predictive parsing table For each production  of the grammar, do steps 2 and 3. 

Tokens are: 
>> ['𝜖', '𝜖', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rules', 'to', 'construct', 'predictive', 'parsing', 'table', 'For', 'each', 'production', 'of', 'the', 'grammar', ',', 'do', 'steps', '2', 'and', '3', '.'] 

 UPOS tags are: 
>> [('𝜖', 'PROPN'), ('𝜖', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'VERB'), ('Rules', 'NOUN'), ('to', 'PART'), ('construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('For', 'ADP'), ('each', 'DET'), ('production', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('grammar', 'NOUN'), (',', 'PUNCT'), ('do', 'VERB'), ('steps', 'NOUN'), ('2', 'NUM'), ('and', 'CCONJ'), ('3', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('𝜖', 'NNP'), ('𝜖', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NNP'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'VBZ'), ('Rules', 'NNS'), ('to', 'TO'), ('construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('For', 'IN'), ('each', 'DT'), ('production', 'NN'), ('of', 'IN'), ('the', 'DT'), ('grammar', 'NN'), (',', ','), ('do', 'VB'), ('steps', 'NNS'), ('2', 'CD'), ('and', 'CC'), ('3', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('𝜖', '𝜖'), ('𝜖', '𝜖'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', 'rin'), ('Rules', 'rule'), ('to', 'to'), ('construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('For', 'for'), ('each', 'each'), ('production', 'production'), ('of', 'of'), ('the', 'the'), ('grammar', 'grammar'), (',', ','), ('do', 'do'), ('steps', 'step'), ('2', '2'), ('and', 'and'), ('3', '3'), ('.', '.')] 

 Dependency tags are: 
>> [(('𝜖', '‹#›'), 'nsubj'), (('𝜖', '𝜖'), 'flat'), (('Prof.', '𝜖'), 'flat'), (('Jay', '𝜖'), 'flat'), (('R', '𝜖'), 'flat'), (('Dhamsaniya', '𝜖'), 'flat'), (('#', '𝜖'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '𝜖'), 'appos'), (('1', 'Unit'), 'dep'), (('–', '𝜖'), 'punct'), (('Basic', '‹#›'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', '𝜖'), 'appos'), (('Prof.', '𝜖'), 'appos'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '𝜖'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '𝜖'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'root'), 'root'), (('Rules', '‹#›'), 'obj'), (('to', 'construct'), 'mark'), (('construct', 'Rules'), 'acl'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'construct'), 'obj'), (('For', 'production'), 'case'), (('each', 'production'), 'det'), (('production', 'table'), 'nmod'), (('of', 'grammar'), 'case'), (('the', 'grammar'), 'det'), (('grammar', 'production'), 'nmod'), ((',', 'do'), 'punct'), (('do', 'construct'), 'conj'), (('steps', 'do'), 'obj'), (('2', 'steps'), 'nummod'), (('and', '3'), 'cc'), (('3', '2'), 'conj'), (('.', '‹#›'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 72 ===========================

 For each terminal  in , Add  to . 

Tokens are: 
>> ['For', 'each', 'terminal', 'in', ',', 'Add', 'to', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('terminal', 'NOUN'), ('in', 'ADP'), (',', 'PUNCT'), ('Add', 'VERB'), ('to', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('terminal', 'NN'), ('in', 'IN'), (',', ','), ('Add', 'VB'), ('to', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('terminal', 'terminal'), ('in', 'in'), (',', ','), ('Add', 'add'), ('to', 'to'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'terminal'), 'case'), (('each', 'terminal'), 'det'), (('terminal', 'Add'), 'obl'), (('in', 'terminal'), 'nmod'), ((',', 'Add'), 'punct'), (('Add', 'root'), 'root'), (('to', 'Add'), 'advmod'), (('.', 'Add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 73 ===========================

 If  is in , Add  to  for each terminal  in . 

Tokens are: 
>> ['If', 'is', 'in', ',', 'Add', 'to', 'for', 'each', 'terminal', 'in', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('is', 'AUX'), ('in', 'ADV'), (',', 'PUNCT'), ('Add', 'VERB'), ('to', 'ADP'), ('for', 'ADP'), ('each', 'DET'), ('terminal', 'NOUN'), ('in', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('is', 'VBZ'), ('in', 'RB'), (',', ','), ('Add', 'VB'), ('to', 'IN'), ('for', 'IN'), ('each', 'DT'), ('terminal', 'NN'), ('in', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('is', 'be'), ('in', 'in'), (',', ','), ('Add', 'add'), ('to', 'to'), ('for', 'for'), ('each', 'each'), ('terminal', 'terminal'), ('in', 'in'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'in'), 'mark'), (('is', 'in'), 'cop'), (('in', 'Add'), 'advcl'), ((',', 'Add'), 'punct'), (('Add', 'root'), 'root'), (('to', 'Add'), 'obl'), (('for', 'terminal'), 'case'), (('each', 'terminal'), 'det'), (('terminal', 'Add'), 'obl'), (('in', 'terminal'), 'nmod'), (('.', 'Add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 If  is in , and  is in , add  to . 

Tokens are: 
>> ['If', 'is', 'in', ',', 'and', 'is', 'in', ',', 'add', 'to', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('is', 'AUX'), ('in', 'ADV'), (',', 'PUNCT'), ('and', 'CCONJ'), ('is', 'AUX'), ('in', 'ADV'), (',', 'PUNCT'), ('add', 'VERB'), ('to', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('is', 'VBZ'), ('in', 'RB'), (',', ','), ('and', 'CC'), ('is', 'VBZ'), ('in', 'RB'), (',', ','), ('add', 'VB'), ('to', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('is', 'be'), ('in', 'in'), (',', ','), ('and', 'and'), ('is', 'be'), ('in', 'in'), (',', ','), ('add', 'add'), ('to', 'to'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'in'), 'mark'), (('is', 'in'), 'cop'), (('in', 'add'), 'advcl'), ((',', 'in'), 'punct'), (('and', 'in'), 'cc'), (('is', 'in'), 'cop'), (('in', 'in'), 'conj'), ((',', 'add'), 'punct'), (('add', 'root'), 'root'), (('to', 'add'), 'obl'), (('.', 'add'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 75 ===========================

 Make each undefined entry of M be error. 

Tokens are: 
>> ['Make', 'each', 'undefined', 'entry', 'of', 'M', 'be', 'error', '.'] 

 UPOS tags are: 
>> [('Make', 'VERB'), ('each', 'DET'), ('undefined', 'ADJ'), ('entry', 'NOUN'), ('of', 'ADP'), ('M', 'NOUN'), ('be', 'AUX'), ('error', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Make', 'VB'), ('each', 'DT'), ('undefined', 'JJ'), ('entry', 'NN'), ('of', 'IN'), ('M', 'NN'), ('be', 'VB'), ('error', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Make', 'make'), ('each', 'each'), ('undefined', 'undefined'), ('entry', 'entry'), ('of', 'of'), ('M', 'm'), ('be', 'be'), ('error', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('Make', 'root'), 'root'), (('each', 'entry'), 'det'), (('undefined', 'entry'), 'amod'), (('entry', 'Make'), 'obj'), (('of', 'M'), 'case'), (('M', 'entry'), 'nmod'), (('be', 'error'), 'cop'), (('error', 'Make'), 'parataxis'), (('.', 'Make'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 76 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 1: Not required  Step 2: Compute FIRST First(S) Sa 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'S', ')', 'S\uf0e0a'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Not', 'PART'), ('required', 'VERB'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'PROPN'), ('FIRST', 'ADJ'), ('First', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('S\uf0e0a', 'PROPN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('1', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'VBN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NNP'), ('FIRST', 'JJ'), ('First', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('S\uf0e0a', 'NNP')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('1', '1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'require'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'Compute'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0a', 'S\uf0e0a')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Prof.'), 'appos'), (('Kagathara', 'Prof.'), 'appos'), (('#', 'Prof.'), 'list'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'list'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'appos'), (('Example', 'Prof.'), 'list'), (('-', 'Example'), 'punct'), (('1', 'Example'), 'appos'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', 'Prof.'), 'list'), (('1', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Not', 'required'), 'advmod'), (('required', 'Step'), 'amod'), (('Step', 'Step'), 'appos'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'Step'), 'appos'), (('FIRST', 'First'), 'amod'), (('First', 'Step'), 'appos'), (('(', 'S\uf0e0a'), 'punct'), (('S', 'S\uf0e0a'), 'nummod'), ((')', 'S\uf0e0a'), 'punct'), (('S\uf0e0a', 'First'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL')]

========================== Sentence 77 ===========================

 Ba  First(B) BbB 					B𝜖  SaBa 	BbB | ϵ 	 	S		a	B	a  	A		  	B		𝜖  	A		  Rule 1 add  to  Rule 2 add  to  FIRST(B)={ b   , 𝜖 } 	NT	First  	S	{ a }  	B	{b,𝜖}   	B		b	B  	A		  Rule 1 add  to   FIRST(S)={ a }     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 2: Compute FOLLOW Follow(S)   Follow(B) SaBa 				BbB   SaBa 	BbB | ϵ 	 Follow(B)={ a   	B		b	B  Follow(S)={ $ }  	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	S		a	B	a  	A 			B  Rule 3 Follow(A)=follow(B) 	A			B	  Rule 2 First(   Rule 1: Place $ in FOLLOW(S)    }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 3: Prepare predictive parsing table      SaBa a=FIRST(aBa)={ a } M[S,a]= 

Tokens are: 
>> ['Ba', 'First', '(', 'B', ')', 'B\uf0e0bB', 'B\uf0e0𝜖', 'S\uf0e0aBa', 'B\uf0e0b', 'B', '|', 'ϵ', 'S', '\uf0e0', 'a', 'B', 'a', 'A', '\uf0e0', 'B', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'Rule', '2', 'add', 'to', 'FIRST', '(', 'B', ')', '={', 'b', ',', '𝜖', '}', 'NT', 'First', 'S', '{', 'a', '}', 'B', '{b', ',', '𝜖}', 'B', '\uf0e0', 'b', 'B', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'FIRST', '(', 'S', ')', '=', '{', 'a', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'Follow', '(', 'S', ')', 'Follow', '(', 'B', ')', 'S\uf0e0aBa', 'B\uf0e0bB', 'S\uf0e0aBa', 'B\uf0e0bB', '|', 'ϵ', 'Follow', '(', 'B', ')', '=', '{', 'a', 'B', '\uf0e0', 'b', 'B', 'Follow', '(', 'S', ')', '=', '{', '$', '}', 'NT', 'First', 'Follow', 'S', '{a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', 'a}', 'S', '\uf0e0', 'a', 'B', 'a', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'A', '\uf0e0', 'B', 'Rule', '2', 'First', '(', 'Rule', '1', ':', 'Place', '$', 'in', 'FOLLOW', '(', 'S', ')', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'S\uf0e0aBa', 'a=', 'FIRST', '(', 'a', 'Ba', ')', '=', '{', 'a', '}', 'M[', 'S', ',', 'a]', '='] 

 UPOS tags are: 
>> [('Ba', 'PROPN'), ('First', 'PROPN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('B\uf0e0bB', 'PROPN'), ('B\uf0e0𝜖', 'PROPN'), ('S\uf0e0aBa', 'PROPN'), ('B\uf0e0b', 'PROPN'), ('B', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'X'), ('S', 'NOUN'), ('\uf0e0', 'NUM'), ('a', 'DET'), ('B', 'NOUN'), ('a', 'PUNCT'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('\uf0e0', 'NOUN'), ('𝜖', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('Rule', 'NOUN'), ('2', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('b', 'NUM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('NT', 'ADV'), ('First', 'ADJ'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a', 'DET'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('B', 'NOUN'), ('\uf0e0', 'NOUN'), ('b', 'NOUN'), ('B', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('a', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'NOUN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('1', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('S\uf0e0aBa', 'PROPN'), ('B\uf0e0bB', 'NOUN'), ('S\uf0e0aBa', 'NOUN'), ('B\uf0e0bB', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('a', 'DET'), ('B', 'NOUN'), ('\uf0e0', 'NOUN'), ('b', 'NUM'), ('B', 'NOUN'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'NOUN'), ('S', 'PART'), ('{a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('a}', 'PROPN'), ('S', 'PART'), ('\uf0e0', 'NOUN'), ('a', 'DET'), ('B', 'NOUN'), ('a', 'DET'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('=follow', 'PROPN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('2', 'NUM'), ('First', 'NOUN'), ('(', 'PUNCT'), ('Rule', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Place', 'NOUN'), ('$', 'SYM'), ('in', 'ADP'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('1', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('S\uf0e0aBa', 'PROPN'), ('a=', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('a', 'DET'), ('Ba', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('a', 'NOUN'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('S', 'NOUN'), (',', 'PUNCT'), ('a]', 'X'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('Ba', 'NNP'), ('First', 'NNP'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('B\uf0e0bB', 'NNP'), ('B\uf0e0𝜖', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0b', 'NNP'), ('B', 'NN'), ('|', 'NFP'), ('ϵ', 'ADD'), ('S', 'NN'), ('\uf0e0', 'CD'), ('a', 'DT'), ('B', 'NN'), ('a', '-LRB-'), ('A', 'NN'), ('\uf0e0', 'NN'), ('B', 'NN'), ('\uf0e0', 'NN'), ('𝜖', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('Rule', 'NN'), ('2', 'CD'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('B', 'NN'), (')', '-RRB-'), ('={', ','), ('b', 'CD'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('NT', 'RB'), ('First', 'JJ'), ('S', 'NN'), ('{', ','), ('a', 'DT'), ('}', ','), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('B', 'NN'), ('\uf0e0', 'NN'), ('b', 'NN'), ('B', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('a', 'NN'), ('}', ','), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NN'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('1', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('Follow', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('Follow', 'NN'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0bB', 'NN'), ('S\uf0e0aBa', 'NN'), ('B\uf0e0bB', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('Follow', 'NN'), ('(', '-LRB-'), ('B', 'NN'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('a', 'DT'), ('B', 'NN'), ('\uf0e0', 'NN'), ('b', 'CD'), ('B', 'NN'), ('Follow', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('$', '$'), ('}', ','), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'NN'), ('S', 'POS'), ('{a}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', ','), ('a}', 'NNP'), ('S', 'POS'), ('\uf0e0', 'NN'), ('a', 'DT'), ('B', 'NN'), ('a', 'DT'), ('A', 'DT'), ('\uf0e0', 'NN'), ('B', 'NN'), ('Rule', 'NN'), ('3', 'CD'), ('Follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('=follow', 'NNP'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('A', 'DT'), ('\uf0e0', 'NN'), ('B', 'NN'), ('Rule', 'NN'), ('2', 'CD'), ('First', 'NN'), ('(', '-LRB-'), ('Rule', 'NN'), ('1', 'CD'), (':', ':'), ('Place', 'NN'), ('$', '$'), ('in', 'IN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('}', ','), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('1', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('S\uf0e0aBa', 'NNP'), ('a=', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('a', 'DT'), ('Ba', 'NN'), (')', '-RRB-'), ('=', ','), ('{', ','), ('a', 'NN'), ('}', ','), ('M[', 'NN'), ('S', 'NN'), (',', ','), ('a]', 'ADD'), ('=', ',')] 

 Lemmas are: 
>> [('Ba', 'Ba'), ('First', 'First'), ('(', '('), ('B', 'b'), (')', ')'), ('B\uf0e0bB', 'B\uf0e0bB'), ('B\uf0e0𝜖', 'B\uf0e0𝜖'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0b', 'B\uf0e0b'), ('B', 'b'), ('|', '|'), ('ϵ', 'ϵ'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('B', 'b'), ('a', 'a'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('𝜖', '𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('={', '={'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'not'), ('First', 'first'), ('S', 's'), ('{', '{'), ('a', 'a'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('a', 'a'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('1', '1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0bB', 'b\uf0e0bb'), ('S\uf0e0aBa', 's\uf0e0aba'), ('B\uf0e0bB', 'b\uf0e0bb'), ('|', '|'), ('ϵ', "''"), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '='), ('{', '{'), ('a', 'a'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('B', 'b'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', "'s"), ('{a}', '{a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('a}', 'a}'), ('S', "'s"), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('B', 'b'), ('a', 'a'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('2', '2'), ('First', 'first'), ('(', '('), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('in', 'in'), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('1', '1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('a', 'a'), ('Ba', 'ba'), (')', ')'), ('=', '='), ('{', '{'), ('a', 'a'), ('}', '}'), ('M[', 'M['), ('S', 's'), (',', ','), ('a]', 'a]'), ('=', '=')] 

 Dependency tags are: 
>> [(('Ba', 'root'), 'root'), (('First', 'Ba'), 'flat'), (('(', 'B'), 'punct'), (('B', 'B\uf0e0bB'), 'nummod'), ((')', 'B'), 'punct'), (('B\uf0e0bB', 'Ba'), 'flat'), (('B\uf0e0𝜖', 'B\uf0e0bB'), 'flat'), (('S\uf0e0aBa', 'B\uf0e0bB'), 'flat'), (('B\uf0e0b', 'B'), 'compound'), (('B', 'B\uf0e0bB'), 'flat'), (('|', 'B'), 'punct'), (('ϵ', 'S'), 'compound'), (('S', 'B'), 'dep'), (('\uf0e0', 'S'), 'punct'), (('a', 'B'), 'det'), (('B', 'S'), 'dep'), (('a', 'B'), 'punct'), (('A', 'B'), 'compound'), (('\uf0e0', 'B'), 'compound'), (('B', 'B'), 'nmod'), (('\uf0e0', '𝜖'), 'compound'), (('𝜖', 'B'), 'conj'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'add'), 'obj'), (('1', 'Rule'), 'nummod'), (('add', 'Ba'), 'conj'), (('to', 'Rule'), 'case'), (('Rule', 'add'), 'obl'), (('2', 'Rule'), 'nummod'), (('add', 'add'), 'parataxis'), (('to', 'FIRST'), 'case'), (('FIRST', 'B'), 'amod'), (('(', 'B'), 'punct'), (('B', 'add'), 'dep'), ((')', 'B'), 'punct'), (('={', 'b'), 'punct'), (('b', 'B'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', 'b'), 'conj'), (('}', 'S'), 'punct'), (('NT', 'S'), 'advmod'), (('First', 'S'), 'amod'), (('S', 'Ba'), 'conj'), (('{', 'S'), 'punct'), (('a', '{b'), 'det'), (('}', '{b'), 'punct'), (('B', '{b'), 'compound'), (('{b', 'S'), 'conj'), ((',', 'B'), 'punct'), (('𝜖}', 'B'), 'compound'), (('B', 'B'), 'compound'), (('\uf0e0', 'B'), 'compound'), (('b', 'B'), 'compound'), (('B', '{b'), 'conj'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'add'), 'dep'), (('1', 'Rule'), 'nummod'), (('add', 'Ba'), 'conj'), (('to', 'FIRST'), 'case'), (('FIRST', 'add'), 'obl'), (('(', 'S'), 'punct'), (('S', 'add'), 'dep'), ((')', 'S'), 'punct'), (('=', 'Ba'), 'punct'), (('{', 'a'), 'punct'), (('a', 'Ba'), 'conj'), (('}', 'a'), 'punct'), (('Prof.', 'a'), 'dep'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Ba'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Ba'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'CD'), 'compound'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Ba'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Ba'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Ba'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'dep'), (('-', '1'), 'case'), (('1', 'Example'), 'nmod'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Ba'), 'conj'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'Follow'), 'compound'), (('FOLLOW', 'Follow'), 'compound'), (('Follow', 'Step'), 'compound'), (('(', 'S'), 'punct'), (('S', 'Follow'), 'dep'), ((')', 'S'), 'punct'), (('Follow', 'Follow'), 'conj'), (('(', 'B'), 'punct'), (('B', 'B\uf0e0bB'), 'nummod'), ((')', 'B'), 'punct'), (('S\uf0e0aBa', 'B\uf0e0bB'), 'compound'), (('B\uf0e0bB', 'B\uf0e0bB'), 'compound'), (('S\uf0e0aBa', 'B\uf0e0bB'), 'compound'), (('B\uf0e0bB', 'Follow'), 'nmod'), (('|', 'B\uf0e0bB'), 'punct'), (('ϵ', 'Follow'), 'punct'), (('Follow', 'Ba'), 'conj'), (('(', 'B'), 'punct'), (('B', 'Follow'), 'dep'), ((')', 'B'), 'punct'), (('=', 'Follow'), 'punct'), (('{', 'B'), 'punct'), (('a', '\uf0e0'), 'det'), (('B', '\uf0e0'), 'compound'), (('\uf0e0', 'B'), 'compound'), (('b', 'B'), 'nummod'), (('B', 'Ba'), 'conj'), (('Follow', 'B'), 'compound'), (('(', 'S'), 'punct'), (('S', 'Follow'), 'dep'), ((')', 'S'), 'punct'), (('=', 'S'), 'punct'), (('{', '$'), 'punct'), (('$', 'Follow'), 'dep'), (('}', '$'), 'punct'), (('NT', '{a}'), 'advmod'), (('First', 'Follow'), 'amod'), (('Follow', '{a}'), 'nmod:poss'), (('S', 'Follow'), 'case'), (('{a}', '$'), 'conj'), (('{', '$'), 'punct'), (('$', '{a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', '$'), 'nummod'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'conj'), (('{', '\uf0e0'), 'punct'), (('a}', '\uf0e0'), 'nmod:poss'), (('S', 'a}'), 'case'), (('\uf0e0', '𝜖}'), 'conj'), (('a', 'B'), 'det'), (('B', '\uf0e0'), 'conj'), (('a', 'Rule'), 'det'), (('A', 'Rule'), 'det'), (('\uf0e0', 'B'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'B'), 'nmod'), (('3', 'Rule'), 'nummod'), (('Follow', 'Rule'), 'compound'), (('(', 'A'), 'punct'), (('A', '=follow'), 'nummod'), ((')', 'A'), 'punct'), (('=follow', 'Rule'), 'conj'), (('(', 'B'), 'punct'), (('B', 'Rule'), 'nummod'), ((')', 'B'), 'punct'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', '=follow'), 'compound'), (('2', 'First'), 'nummod'), (('First', 'Rule'), 'compound'), (('(', 'Rule'), 'punct'), (('Rule', 'Rule'), 'dep'), (('1', 'Rule'), 'nummod'), ((':', 'Place'), 'punct'), (('Place', 'Rule'), 'compound'), (('$', 'Place'), 'dep'), (('in', 'FOLLOW'), 'case'), (('FOLLOW', '$'), 'nmod'), (('(', 'S'), 'punct'), (('S', '$'), 'dep'), ((')', 'S'), 'punct'), (('}', '#'), 'punct'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Place'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', '1'), 'case'), (('1', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'parataxis'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('S\uf0e0aBa', 'table'), 'appos'), (('a=', 'S\uf0e0aBa'), 'flat'), (('FIRST', 'S\uf0e0aBa'), 'amod'), (('(', 'Ba'), 'punct'), (('a', 'Ba'), 'det'), (('Ba', 'S\uf0e0aBa'), 'appos'), ((')', 'Ba'), 'punct'), (('=', 'a'), 'punct'), (('{', 'a'), 'punct'), (('a', 'table'), 'appos'), (('}', 'a'), 'punct'), (('M[', 'S'), 'compound'), (('S', 'a'), 'conj'), ((',', 'a]'), 'punct'), (('a]', 'S'), 'appos'), (('=', 'a]'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 78 ===========================

 Sa 

Tokens are: 
>> ['S\uf0e0a'] 

 UPOS tags are: 
>> [('S\uf0e0a', 'PROPN')] 

 XPOS tags are: 
>> [('S\uf0e0a', 'NNP')] 

 Lemmas are: 
>> [('S\uf0e0a', 'S\uf0e0a')] 

 Dependency tags are: 
>> [(('S\uf0e0a', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 79 ===========================

 Ba  Sa 

Tokens are: 
>> ['Ba', 'S\uf0e0a'] 

 UPOS tags are: 
>> [('Ba', 'PROPN'), ('S\uf0e0a', 'PROPN')] 

 XPOS tags are: 
>> [('Ba', 'NNP'), ('S\uf0e0a', 'NNP')] 

 Lemmas are: 
>> [('Ba', 'Ba'), ('S\uf0e0a', 'S\uf0e0a')] 

 Dependency tags are: 
>> [(('Ba', 'root'), 'root'), (('S\uf0e0a', 'Ba'), 'flat')]

 Named Entities are: 
>> [('Ba  S\uf0e0a', 'PERSON')]

========================== Sentence 80 ===========================

 Ba 	BbB | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	NT	Input Symbol		 		a	b	$ 	S	SaBa		 	B			  Rule: 2 A  a = first() M[A,a] = A      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 3: Prepare predictive parsing table      BbB a=FIRST(bB)={ b } M[B,b]= 

Tokens are: 
>> ['Ba', 'B\uf0e0b', 'B', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', 'a}', 'NT', 'Input', 'Symbol', 'a', 'b', '$', 'S', 'S\uf0e0aBa', 'B', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0bB', 'a=', 'FIRST', '(', 'bB', ')', '={', 'b', '}', 'M[', 'B', ',', 'b]', '='] 

 UPOS tags are: 
>> [('Ba', 'PROPN'), ('B\uf0e0b', 'PROPN'), ('B', 'PROPN'), ('|', 'PUNCT'), ('ϵ', 'AUX'), ('NT', 'PART'), ('First', 'ADV'), ('Follow', 'VERB'), ('S', 'PART'), ('{a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'PROPN'), ('{', 'PUNCT'), ('a}', 'PROPN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'NOUN'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NOUN'), ('S\uf0e0aBa', 'PROPN'), ('B', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('=', 'PUNCT'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'PUNCT'), ('A', 'PROPN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('1', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('B\uf0e0bB', 'PROPN'), ('a=', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('bB', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('b', 'NOUN'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('B', 'NOUN'), (',', 'PUNCT'), ('b]', 'X'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('Ba', 'NNP'), ('B\uf0e0b', 'NNP'), ('B', 'NNP'), ('|', ','), ('ϵ', 'VB'), ('NT', 'RB'), ('First', 'RB'), ('Follow', 'VB'), ('S', 'POS'), ('{a}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NNP'), ('{', ','), ('a}', 'NNP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('a', 'NN'), ('b', 'NN'), ('$', '$'), ('S', 'NN'), ('S\uf0e0aBa', 'NNP'), ('B', 'NN'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('=', ','), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', '-LRB-'), ('A', 'NNP'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('1', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('B\uf0e0bB', 'NNP'), ('a=', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('bB', 'NN'), (')', '-RRB-'), ('={', ','), ('b', 'NN'), ('}', ','), ('M[', 'NN'), ('B', 'NN'), (',', ','), ('b]', 'ADD'), ('=', ',')] 

 Lemmas are: 
>> [('Ba', 'Ba'), ('B\uf0e0b', 'B\uf0e0b'), ('B', 'B'), ('|', '|'), ('ϵ', 'be'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', "'s"), ('{a}', '{a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('a}', 'a}'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B', 'b'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('1', '1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0bB', 'B\uf0e0bB'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('bB', 'bb'), (')', ')'), ('={', '={'), ('b', 'b'), ('}', '}'), ('M[', 'M['), ('B', 'b'), (',', ','), ('b]', 'b]'), ('=', '=')] 

 Dependency tags are: 
>> [(('Ba', 'Follow'), 'nsubj'), (('B\uf0e0b', 'Ba'), 'flat'), (('B', 'Ba'), 'flat'), (('|', 'Ba'), 'punct'), (('ϵ', 'Follow'), 'aux'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'root'), 'root'), (('S', 'Follow'), 'case'), (('{a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', '{a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', 'B'), 'compound'), ((',', '$'), 'punct'), (('𝜖}', '$'), 'conj'), (('{', '$'), 'punct'), (('a}', 'Symbol'), 'compound'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', '$'), 'conj'), (('a', '$'), 'compound'), (('b', '$'), 'compound'), (('$', 'Symbol'), 'compound'), (('S', '$'), 'nummod'), (('S\uf0e0aBa', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', '$'), 'conj'), ((':', 'Rule'), 'punct'), (('2', 'a'), 'nummod'), (('A\uf0e0', 'a'), 'compound'), (('a', '$'), 'conj'), (('=', '$'), 'punct'), (('first', '$'), 'conj'), (('(', 'A'), 'punct'), ((')', 'A'), 'punct'), (('M[', 'A'), 'punct'), (('A', '$'), 'conj'), ((',', 'a'), 'punct'), (('a', 'A'), 'dep'), ((']', 'A'), 'punct'), (('=', '$'), 'punct'), (('A\uf0e0', '$'), 'conj'), (('Prof.', 'Follow'), 'conj'), (('Jay', 'Dhamsaniya'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '$'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', '1'), 'case'), (('1', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('B\uf0e0bB', 'table'), 'appos'), (('a=', 'table'), 'appos'), (('FIRST', 'table'), 'amod'), (('(', 'bB'), 'punct'), (('bB', 'b'), 'appos'), ((')', 'bB'), 'punct'), (('={', 'b'), 'punct'), (('b', 'table'), 'appos'), (('}', 'b'), 'punct'), (('M[', 'B'), 'compound'), (('B', 'b'), 'appos'), ((',', 'B'), 'punct'), (('b]', 'B'), 'appos'), (('=', 'b'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 81 ===========================

 BbB  SaBa 	BbB | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	NT	Input Symbol		 		a	b	$ 	S	SaBa		 	B		BbB	  Rule: 2 A  a = first() M[A,a] = A      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-1: LL(1) parsing   Step 3: Prepare predictive parsing table      Bϵ b=FOLLOW(B)={ a } M[B,a]= 

Tokens are: 
>> ['B\uf0e0bB', 'S\uf0e0aBa', 'B\uf0e0b', 'B', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', 'a}', 'NT', 'Input', 'Symbol', 'a', 'b', '$', 'S', 'S\uf0e0aBa', 'B', 'B\uf0e0bB', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '1', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0ϵ', 'b=', 'FOLLOW', '(', 'B', ')', '={', 'a', '}', 'M[', 'B', ',', 'a]', '='] 

 UPOS tags are: 
>> [('B\uf0e0bB', 'PROPN'), ('S\uf0e0aBa', 'PROPN'), ('B\uf0e0b', 'PROPN'), ('B', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'ADV'), ('Follow', 'VERB'), ('S', 'PART'), ('{a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('a}', 'PROPN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'PUNCT'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NOUN'), ('S\uf0e0aBa', 'PROPN'), ('B', 'NOUN'), ('B\uf0e0bB', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('=', 'PUNCT'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'X'), ('A', 'NOUN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('B\uf0e0ϵ', 'PROPN'), ('b=', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('a', 'PUNCT'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('B', 'NOUN'), (',', 'PUNCT'), ('a]', 'X'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('B\uf0e0bB', 'NNP'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0b', 'NNP'), ('B', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'RB'), ('Follow', 'VB'), ('S', 'POS'), ('{a}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('a}', 'NNP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('a', ','), ('b', 'NN'), ('$', '$'), ('S', 'NN'), ('S\uf0e0aBa', 'NNP'), ('B', 'NN'), ('B\uf0e0bB', 'NN'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('=', ','), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'GW'), ('A', 'NN'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('1', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('B\uf0e0ϵ', 'NNP'), ('b=', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('B', 'NN'), (')', '-RRB-'), ('={', ','), ('a', '-RRB-'), ('}', ','), ('M[', 'NN'), ('B', 'NN'), (',', ','), ('a]', 'ADD'), ('=', ',')] 

 Lemmas are: 
>> [('B\uf0e0bB', 'B\uf0e0bB'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0b', 'B\uf0e0b'), ('B', 'B'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', "'s"), ('{a}', '{a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('a}', 'a}'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B', 'b'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'a'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('1', '1'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0ϵ', 'B\uf0e0ϵ'), ('b=', 'b='), ('FOLLOW', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('={', '={'), ('a', 'a'), ('}', '}'), ('M[', 'M['), ('B', 'b'), (',', ','), ('a]', 'a]'), ('=', '=')] 

 Dependency tags are: 
>> [(('B\uf0e0bB', 'Follow'), 'nsubj'), (('S\uf0e0aBa', 'B\uf0e0bB'), 'flat'), (('B\uf0e0b', 'B\uf0e0bB'), 'flat'), (('B', 'B\uf0e0bB'), 'flat'), (('|', 'B\uf0e0bB'), 'punct'), (('ϵ', 'B\uf0e0bB'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'root'), 'root'), (('S', 'Follow'), 'case'), (('{a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', '{a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', 'B'), 'compound'), ((',', '$'), 'punct'), (('𝜖}', '$'), 'conj'), (('{', '$'), 'punct'), (('a}', 'Symbol'), 'compound'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', '$'), 'conj'), (('a', '$'), 'det'), (('b', '$'), 'compound'), (('$', 'Symbol'), 'compound'), (('S', '$'), 'nummod'), (('S\uf0e0aBa', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('B\uf0e0bB', 'Rule'), 'compound'), (('Rule', 'Symbol'), 'appos'), ((':', 'Rule'), 'punct'), (('2', 'a'), 'nummod'), (('A\uf0e0', 'a'), 'compound'), (('a', 'Rule'), 'appos'), (('=', 'a'), 'punct'), (('first', 'a'), 'amod'), (('(', 'M['), 'punct'), ((')', 'M['), 'punct'), (('M[', 'A'), 'compound'), (('A', 'B\uf0e0bB'), 'appos'), ((',', 'a'), 'punct'), (('a', 'A'), 'appos'), ((']', 'a'), 'punct'), (('=', '$'), 'punct'), (('A\uf0e0', '$'), 'conj'), (('Prof.', 'A\uf0e0'), 'flat'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'A\uf0e0'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', 'Example'), 'punct'), (('1', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'parataxis'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('B\uf0e0ϵ', 'table'), 'appos'), (('b=', 'FOLLOW'), 'compound'), (('FOLLOW', 'table'), 'appos'), (('(', 'B'), 'punct'), (('B', 'FOLLOW'), 'appos'), ((')', 'B'), 'punct'), (('={', 'B'), 'punct'), (('a', 'B'), 'punct'), (('}', 'B'), 'punct'), (('M[', 'B'), 'compound'), (('B', 'table'), 'appos'), ((',', 'B'), 'punct'), (('a]', 'B'), 'appos'), (('=', 'Prepare'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 82 ===========================

 B𝜖   SaBa 	BbB | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{a}  	NT	Input Symbol		 		a	b	$ 	S	SaBa	Error	Error 	B	Bϵ	BbB	Error   Rule: 3 

Tokens are: 
>> ['B\uf0e0𝜖', 'S\uf0e0aBa', 'B\uf0e0b', 'B', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', 'a}', 'NT', 'Input', 'Symbol', 'a', 'b', '$', 'S', 'S\uf0e0aBa', 'Error', 'Error', 'B', 'B\uf0e0ϵ', 'B\uf0e0bB', 'Error', 'Rule', ':', '3'] 

 UPOS tags are: 
>> [('B\uf0e0𝜖', 'NOUN'), ('S\uf0e0aBa', 'PROPN'), ('B\uf0e0b', 'X'), ('B', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('NT', 'PART'), ('First', 'ADV'), ('Follow', 'VERB'), ('S', 'PART'), ('{a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('a}', 'NOUN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'NOUN'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NOUN'), ('S\uf0e0aBa', 'NOUN'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('B', 'NOUN'), ('B\uf0e0ϵ', 'NOUN'), ('B\uf0e0bB', 'NOUN'), ('Error', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('B\uf0e0𝜖', 'NN'), ('S\uf0e0aBa', 'NNP'), ('B\uf0e0b', 'GW'), ('B', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('NT', 'RB'), ('First', 'RB'), ('Follow', 'VB'), ('S', 'POS'), ('{a}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('a}', 'NN'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('a', 'NN'), ('b', 'NN'), ('$', '$'), ('S', 'NN'), ('S\uf0e0aBa', 'NN'), ('Error', 'NN'), ('Error', 'NN'), ('B', 'NN'), ('B\uf0e0ϵ', 'NN'), ('B\uf0e0bB', 'NN'), ('Error', 'NN'), ('Rule', 'NN'), (':', ':'), ('3', 'CD')] 

 Lemmas are: 
>> [('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('S\uf0e0aBa', 'S\uf0e0aBa'), ('B\uf0e0b', 'b\uf0e0b'), ('B', 'B'), ('|', '|'), ('ϵ', 'ϵ'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', "'s"), ('{a}', '{a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('a}', 'a}'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 's'), ('S\uf0e0aBa', 's\uf0e0aba'), ('Error', 'error'), ('Error', 'error'), ('B', 'b'), ('B\uf0e0ϵ', 'b\uf0e0ϵ'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Error', 'error'), ('Rule', 'rule'), (':', ':'), ('3', '3')] 

 Dependency tags are: 
>> [(('B\uf0e0𝜖', 'S\uf0e0aBa'), 'compound'), (('S\uf0e0aBa', 'Follow'), 'nsubj'), (('B\uf0e0b', 'S\uf0e0aBa'), 'flat'), (('B', 'S\uf0e0aBa'), 'goeswith'), (('|', 'S\uf0e0aBa'), 'punct'), (('ϵ', 'S\uf0e0aBa'), 'goeswith'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'root'), 'root'), (('S', '{a}'), 'case'), (('{a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', '{a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', '$'), 'nummod'), ((',', '$'), 'punct'), (('𝜖}', '$'), 'appos'), (('{', 'Symbol'), 'punct'), (('a}', 'Symbol'), 'nsubj'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', '$'), 'appos'), (('a', 'Symbol'), 'punct'), (('b', '$'), 'compound'), (('$', 'Symbol'), 'appos'), (('S', '$'), 'nummod'), (('S\uf0e0aBa', '$'), 'nummod'), (('Error', 'B'), 'compound'), (('Error', 'B'), 'compound'), (('B', '$'), 'appos'), (('B\uf0e0ϵ', 'Rule'), 'case'), (('B\uf0e0bB', 'Rule'), 'compound'), (('Error', 'Rule'), 'compound'), (('Rule', 'Symbol'), 'conj'), ((':', 'Rule'), 'punct'), (('3', 'Rule'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 83 ===========================

 A  b = follow(A) M[A,b] = A        Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 1: Not required  Step 2: Compute FIRST First(S) SaB 					S𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	S		𝜖  	A		  Rule 2 add  to  FIRST(S)={ a   , 𝜖 } 	NT	First  	S	{ a, 𝜖 }  	B	{b,𝜖}   	S		a	B  	A		  Rule 1 add  to  	C	{c,𝜖}       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 1: Not required  Step 2: Compute FIRST First(B) BbC 					B𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	B		𝜖  	A		  Rule 2 add  to  FIRST(B)={ b   , 𝜖 } 	NT	First  	S	{ a, 𝜖 }  	B	{b,𝜖}  	B		b	C  	A		  Rule 1 add  to  	C	{c,𝜖}       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 1: Not required  Step 2: Compute FIRST First(C) CcS 					C𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	C		𝜖  	A		  Rule 2 add  to  FIRST(B)={ c   , 𝜖 } 	NT	First  	S	{ a, 𝜖 }  	B	{b,𝜖}  	C		c	S  	A		  Rule 1 add  to  	C	{c,𝜖}      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing Step 2: Compute FOLLOW Follow(S)  CcS       BbC 					SaB       ={$} 	C		c	S  Follow(S)={ $ }  	NT	First 	Follow  	S	{a,𝜖}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  	A 			B  Rule 3 Follow(A)=follow(B) Rule 1: Place $ in FOLLOW(S)   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 Follow(S)= 

Tokens are: 
>> ['A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'S', ')', 'S\uf0e0aB', 'S\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'S', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '2', 'add', 'to', 'FIRST', '(', 'S', ')', '={', 'a', ',', '𝜖', '}', 'NT', 'First', 'S', '{', 'a', ',', '𝜖', '}', 'B', '{b', ',', '𝜖}', 'S', '\uf0e0', 'a', 'B', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'C', '{c', ',', '𝜖}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'B', ')', 'B\uf0e0bC', 'B\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'B', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '2', 'add', 'to', 'FIRST', '(', 'B', ')', '={', 'b', ',', '𝜖', '}', 'NT', 'First', 'S', '{', 'a', ',', '𝜖', '}', 'B', '{b', ',', '𝜖}', 'B', '\uf0e0', 'b', 'C', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'C', '{c', ',', '𝜖}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '1', ':', 'Not', 'required', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'C', ')', 'C\uf0e0cS', 'C\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'C', '\uf0e0', '𝜖', 'A', '\uf0e0', 'Rule', '2', 'add', 'to', 'FIRST', '(', 'B', ')', '={', 'c', ',', '𝜖', '}', 'NT', 'First', 'S', '{', 'a', ',', '𝜖', '}', 'B', '{b', ',', '𝜖}', 'C', '\uf0e0', 'c', 'S', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'C', '{c', ',', '𝜖}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'Follow', '(', 'S', ')', 'C\uf0e0cS', 'B\uf0e0bC', 'S\uf0e0aB', '={', '$', '}', 'C', '\uf0e0', 'c', 'S', 'Follow', '(', 'S', ')', '=', '{', '$', '}', 'NT', 'First', 'Follow', 'S', '{a', ',', '𝜖}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'Rule', '1', ':', 'Place', '$', 'in', 'FOLLOW', '(', 'S', ')', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'Follow', '(', 'S', ')', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('b', 'NUM'), ('=', 'PUNCT'), ('follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('b', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Not', 'ADV'), ('required', 'VERB'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FIRST', 'ADJ'), ('First', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('S\uf0e0aB', 'X'), ('S\uf0e0𝜖', 'X'), ('S\uf0e0aB', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B\uf0e0bC', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('S', 'NOUN'), ('\uf0e0', 'PUNCT'), ('𝜖', 'PUNCT'), ('A', 'PUNCT'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('2', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('a', 'PROPN'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('NT', 'PART'), ('First', 'PROPN'), ('S', 'PART'), ('{', 'PUNCT'), ('a', 'PROPN'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('S', 'PART'), ('\uf0e0', 'NOUN'), ('a', 'DET'), ('B', 'NOUN'), ('A', 'PUNCT'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('C', 'PROPN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PUNCT'), ('Dhamsaniya', 'NOUN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Not', 'ADV'), ('required', 'VERB'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FIRST', 'ADJ'), ('First', 'NOUN'), ('(', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('B\uf0e0bC', 'NOUN'), ('B\uf0e0𝜖', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B\uf0e0bC', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B', 'PUNCT'), ('\uf0e0', 'PUNCT'), ('𝜖', 'PUNCT'), ('A', 'PUNCT'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('2', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('={', 'PUNCT'), ('b', 'NOUN'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('NT', 'PART'), ('First', 'NOUN'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a', 'NOUN'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('B', 'NOUN'), ('\uf0e0', 'NOUN'), ('b', 'PUNCT'), ('C', 'PUNCT'), ('A', 'PUNCT'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PUNCT'), ('Dhamsaniya', 'NOUN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Not', 'ADV'), ('required', 'VERB'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FIRST', 'ADJ'), ('First', 'NOUN'), ('(', 'PUNCT'), ('C', 'NOUN'), (')', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('C\uf0e0𝜖', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B\uf0e0bC', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C', 'PUNCT'), ('\uf0e0', 'PUNCT'), ('𝜖', 'PUNCT'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('2', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('c', 'NOUN'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('NT', 'PART'), ('First', 'NOUN'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a', 'NOUN'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('C', 'NOUN'), ('\uf0e0', 'NOUN'), ('c', 'NOUN'), ('S', 'PUNCT'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PUNCT'), ('Dhamsaniya', 'NOUN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'NOUN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'VERB'), ('FOLLOW', 'VERB'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('B\uf0e0bC', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('={', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('\uf0e0', 'NOUN'), ('c', 'PUNCT'), ('S', 'PUNCT'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('NT', 'PART'), ('First', 'ADV'), ('Follow', 'VERB'), ('S', 'PART'), ('{a', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('=follow', 'NOUN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('Rule', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Place', 'NOUN'), ('$', 'SYM'), ('in', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('S\uf0e0aB', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B\uf0e0bC', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('Follow', 'VERB'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('b', 'CD'), ('=', ','), ('follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'VBN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'JJ'), ('First', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('S\uf0e0aB', 'GW'), ('S\uf0e0𝜖', 'GW'), ('S\uf0e0aB', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B\uf0e0bC', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('S', 'NN'), ('\uf0e0', 'NFP'), ('𝜖', 'NFP'), ('A', 'NFP'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('2', 'CD'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('={', 'NFP'), ('a', 'NNP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('NT', 'RB'), ('First', 'NNP'), ('S', 'POS'), ('{', ','), ('a', 'NNP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('S', 'POS'), ('\uf0e0', 'NN'), ('a', 'DT'), ('B', 'NN'), ('A', ','), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'LS'), ('add', 'VB'), ('to', 'IN'), ('C', 'NNP'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', ','), ('Dhamsaniya', 'NN'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'VBN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'JJ'), ('First', 'NN'), ('(', '-LRB-'), ('B', 'NN'), (')', '-RRB-'), ('B\uf0e0bC', 'NN'), ('B\uf0e0𝜖', 'NN'), ('S\uf0e0aB', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B\uf0e0bC', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B', 'NFP'), ('\uf0e0', 'NFP'), ('𝜖', 'NFP'), ('A', 'NFP'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('2', 'LS'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('={', ','), ('b', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('NT', 'RB'), ('First', 'NN'), ('S', 'NN'), ('{', ','), ('a', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('B', 'NN'), ('\uf0e0', 'NN'), ('b', ','), ('C', ','), ('A', ','), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', ','), ('Dhamsaniya', 'NN'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Not', 'RB'), ('required', 'VBN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'JJ'), ('First', 'NN'), ('(', '-LRB-'), ('C', 'NN'), (')', '-RRB-'), ('C\uf0e0cS', 'NN'), ('C\uf0e0𝜖', 'NN'), ('S\uf0e0aB', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B\uf0e0bC', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C', ','), ('\uf0e0', 'NFP'), ('𝜖', 'NFP'), ('A', 'DT'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('2', 'LS'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('B', 'NN'), (')', '-RRB-'), ('={', ','), ('c', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('NT', 'RB'), ('First', 'NN'), ('S', 'NN'), ('{', ','), ('a', 'NN'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('C', 'NN'), ('\uf0e0', 'NN'), ('c', 'NN'), ('S', ','), ('A', 'NN'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', ','), ('Dhamsaniya', 'NN'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NN'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'VB'), ('FOLLOW', 'VB'), ('Follow', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('C\uf0e0cS', 'NN'), ('B\uf0e0bC', 'NN'), ('S\uf0e0aB', 'NN'), ('={', ','), ('$', 'SYM'), ('}', ','), ('C', 'NN'), ('\uf0e0', 'NN'), ('c', ','), ('S', ','), ('Follow', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('=', ','), ('{', ','), ('$', '$'), ('}', ','), ('NT', 'RB'), ('First', 'RB'), ('Follow', 'VB'), ('S', 'POS'), ('{a', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', ','), ('$', '$'), ('}', ','), ('A', 'DT'), ('\uf0e0', 'NN'), ('B', 'NN'), ('Rule', 'NN'), ('3', 'CD'), ('Follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('=follow', 'NN'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('Rule', 'NN'), ('1', 'CD'), (':', ':'), ('Place', 'NN'), ('$', '$'), ('in', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('S\uf0e0aB', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B\uf0e0bC', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('Follow', 'VB'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('=', 'NFP')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'require'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', "''"), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'caus'), ('|', '|'), ('ϵ', "''"), ('S', 's'), ('\uf0e0', "''"), ('𝜖', "''"), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('S', 's'), (')', ')'), ('={', '={'), ('a', 'a'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'not'), ('First', 'First'), ('S', "'s"), ('{', '{'), ('a', 'a'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('S', "'s"), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('C', 'C'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'require'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', "''"), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'caus'), ('|', '|'), ('ϵ', "''"), ('B', 'B'), ('\uf0e0', "''"), ('𝜖', "''"), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('={', '={'), ('b', 'b'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'not'), ('First', 'first'), ('S', 's'), ('{', '{'), ('a', 'a'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'C'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Not', 'not'), ('required', 'require'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('C', 'c'), (')', ')'), ('C\uf0e0cS', 'caus'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', "''"), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'caus'), ('|', '|'), ('ϵ', "''"), ('C', 'C'), ('\uf0e0', "''"), ('𝜖', "''"), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('B', 'b'), (')', ')'), ('={', '={'), ('c', 'c'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('NT', 'not'), ('First', 'first'), ('S', 's'), ('{', '{'), ('a', 'a'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 'S'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('C\uf0e0cS', 'caus'), ('B\uf0e0bC', 'b\uf0e0bc'), ('S\uf0e0aB', 's\uf0e0ab'), ('={', '={'), ('$', '$'), ('}', '}'), ('C', 'c'), ('\uf0e0', '\uf0e0'), ('c', 'c'), ('S', 'S'), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', "'s"), ('{a', '{a'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('in', 'in'), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', "''"), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'caus'), ('|', '|'), ('ϵ', "''"), ('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'b'), 'compound'), (('b', 'root'), 'root'), (('=', 'b'), 'punct'), (('follow', 'b'), 'compound'), (('(', 'A'), 'punct'), (('A', 'M['), 'dep'), ((')', 'A'), 'punct'), (('M[', 'follow'), 'conj'), (('A', 'M['), 'flat'), ((',', 'b'), 'punct'), (('b', 'M['), 'conj'), ((']', 'b'), 'punct'), (('=', 'A\uf0e0'), 'punct'), (('A\uf0e0', 'Prof.'), 'compound'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'R'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'M['), 'conj'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', '#'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'M['), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'conj'), (('‹#›', 'B'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'CD'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'M['), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'M['), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'M['), 'conj'), (('-', '2'), 'case'), (('2', 'Example'), 'nmod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'dep'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'b'), 'conj'), (('1', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Not', 'required'), 'advmod'), (('required', 'Step'), 'amod'), (('Step', 'Step'), 'appos'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'Step'), 'compound'), (('FIRST', 'First'), 'amod'), (('First', 'Compute'), 'obj'), (('(', 'S'), 'punct'), (('S', 'First'), 'dep'), ((')', 'S'), 'punct'), (('S\uf0e0aB', 'S\uf0e0𝜖'), 'compound'), (('S\uf0e0𝜖', 'S\uf0e0aB'), 'compound'), (('S\uf0e0aB', 'B\uf0e0bC'), 'compound'), (('|', 'B\uf0e0bC'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('B\uf0e0bC', 'C\uf0e0cS'), 'compound'), (('|', 'C\uf0e0cS'), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('C\uf0e0cS', 'A\uf0e0'), 'conj'), (('|', 'M['), 'punct'), (('ϵ', 'S'), 'punct'), (('S', 'A\uf0e0'), 'conj'), (('\uf0e0', 'S'), 'punct'), (('𝜖', 'Rule'), 'punct'), (('A', 'Rule'), 'punct'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'add'), 'conj'), (('2', 'add'), 'nsubj'), (('add', 'b'), 'conj'), (('to', 'FIRST'), 'case'), (('FIRST', 'S'), 'amod'), (('(', 'S'), 'punct'), (('S', 'a'), 'dep'), ((')', 'S'), 'punct'), (('={', 'a'), 'punct'), (('a', 'M['), 'conj'), ((',', '𝜖'), 'punct'), (('𝜖', 'a'), 'conj'), (('}', 'First'), 'punct'), (('NT', 'First'), 'advmod'), (('First', 'a'), 'conj'), (('S', 'First'), 'case'), (('{', 'a'), 'punct'), (('a', 'M['), 'conj'), ((',', '𝜖'), 'punct'), (('𝜖', 'B'), 'conj'), (('}', 'B'), 'punct'), (('B', '{b'), 'compound'), (('{b', 'A\uf0e0'), 'conj'), ((',', '\uf0e0'), 'punct'), (('𝜖}', '\uf0e0'), 'nmod:poss'), (('S', '𝜖}'), 'case'), (('\uf0e0', 'add'), 'dep'), (('a', 'B'), 'det'), (('B', 'Rule'), 'compound'), (('A', 'Rule'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', '\uf0e0'), 'conj'), (('1', 'add'), 'dep'), (('add', '='), 'conj'), (('to', 'C'), 'case'), (('C', 'add'), 'obl'), (('{c', 'C'), 'flat'), ((',', 'Prof.'), 'punct'), (('𝜖}', 'Prof.'), 'compound'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'dep'), (('R', '#'), 'punct'), (('Dhamsaniya', '#'), 'compound'), (('#', 'C'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'C'), 'parataxis'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'follow'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'B'), 'parataxis'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'A\uf0e0'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Example'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'b'), 'conj'), (('-', 'b'), 'punct'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', '1'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'dep'), (('1', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Not', 'Step'), 'advmod'), (('required', 'Step'), 'amod'), (('Step', 'Step'), 'compound'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'First'), 'compound'), (('FIRST', 'First'), 'amod'), (('First', 'S\uf0e0aB'), 'compound'), (('(', 'B'), 'punct'), (('B', 'First'), 'dep'), ((')', 'B'), 'punct'), (('B\uf0e0bC', 'S\uf0e0aB'), 'punct'), (('B\uf0e0𝜖', 'S\uf0e0aB'), 'compound'), (('S\uf0e0aB', 'Step'), 'conj'), (('|', 'M['), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('B\uf0e0bC', 'First'), 'conj'), (('|', 'M['), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('C\uf0e0cS', 'Compute'), 'conj'), (('|', 'b'), 'punct'), (('ϵ', 'M['), 'punct'), (('B', 'M['), 'punct'), (('\uf0e0', 'Step'), 'punct'), (('𝜖', 'M['), 'punct'), (('A', 'Rule'), 'punct'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'C\uf0e0cS'), 'compound'), (('2', 'add'), 'nsubj'), (('add', 'Rule'), 'parataxis'), (('to', 'FIRST'), 'case'), (('FIRST', 'add'), 'obl'), (('(', 'B'), 'punct'), (('B', 'b'), 'dep'), ((')', 'B'), 'punct'), (('={', 'b'), 'punct'), (('b', 'add'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', 'b'), 'conj'), (('}', 'First'), 'punct'), (('NT', 'First'), 'advmod'), (('First', 'S'), 'compound'), (('S', 'b'), 'conj'), (('{', 'a'), 'punct'), (('a', '𝜖'), 'conj'), ((',', '𝜖'), 'punct'), (('𝜖', 'b'), 'conj'), (('}', '{b'), 'punct'), (('B', '{b'), 'compound'), (('{b', 'b'), 'conj'), ((',', '\uf0e0'), 'punct'), (('𝜖}', '\uf0e0'), 'compound'), (('B', '\uf0e0'), 'compound'), (('\uf0e0', 'add'), 'conj'), (('b', 'add'), 'punct'), (('C', 'Rule'), 'punct'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'b'), 'conj'), (('1', 'Rule'), 'nummod'), (('add', 'Rule'), 'parataxis'), (('to', 'C'), 'case'), (('C', 'add'), 'obl'), (('{c', 'C'), 'compound'), ((',', 'C'), 'punct'), (('𝜖}', 'Prof.'), 'compound'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'conj'), (('R', '#'), 'punct'), (('Dhamsaniya', '#'), 'compound'), (('#', 'C'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'parataxis'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'parataxis'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'parataxis'), (('1', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Not', 'Step'), 'advmod'), (('required', 'Step'), 'amod'), (('Step', 'Step'), 'compound'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'First'), 'compound'), (('FIRST', 'First'), 'amod'), (('First', 'S\uf0e0aB'), 'compound'), (('(', 'C'), 'punct'), (('C', 'First'), 'dep'), ((')', 'C'), 'punct'), (('C\uf0e0cS', 'S\uf0e0aB'), 'compound'), (('C\uf0e0𝜖', 'S\uf0e0aB'), 'compound'), (('S\uf0e0aB', 'B\uf0e0bC'), 'compound'), (('|', 'B\uf0e0bC'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('B\uf0e0bC', 'C\uf0e0cS'), 'compound'), (('|', 'B\uf0e0bC'), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('C\uf0e0cS', 'add'), 'dep'), (('|', 'C\uf0e0cS'), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('C', 'C\uf0e0cS'), 'punct'), (('\uf0e0', 'C\uf0e0cS'), 'punct'), (('𝜖', 'Rule'), 'punct'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'Step'), 'conj'), (('2', 'add'), 'nsubj'), (('add', 'Rule'), 'parataxis'), (('to', 'FIRST'), 'case'), (('FIRST', 'add'), 'obl'), (('(', 'B'), 'punct'), (('B', 'add'), 'dep'), ((')', 'B'), 'punct'), (('={', 'c'), 'punct'), (('c', 'B'), 'conj'), ((',', '𝜖'), 'punct'), (('𝜖', 'c'), 'conj'), (('}', 'S'), 'punct'), (('NT', 'S'), 'advmod'), (('First', 'S'), 'compound'), (('S', 'c'), 'conj'), (('{', 'a'), 'punct'), (('a', 'S'), 'conj'), ((',', '𝜖'), 'punct'), (('𝜖', '{b'), 'compound'), (('}', '{b'), 'punct'), (('B', '{b'), 'compound'), (('{b', 'a'), 'conj'), ((',', 'C'), 'punct'), (('𝜖}', 'C'), 'compound'), (('C', '{b'), 'compound'), (('\uf0e0', 'c'), 'case'), (('c', 'C'), 'nmod'), (('S', 'Rule'), 'punct'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'c'), 'compound'), (('1', 'Rule'), 'nummod'), (('add', 'Rule'), 'conj'), (('to', 'C'), 'case'), (('C', 'add'), 'obl'), (('{c', 'C'), 'case'), ((',', '𝜖}'), 'punct'), (('𝜖}', 'Prof.'), 'compound'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'C'), 'conj'), (('R', '#'), 'punct'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'parataxis'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'PS'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'nmod'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'parataxis'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'LL'), 'conj'), (('2', 'Step'), 'nummod'), ((':', 'Compute'), 'punct'), (('Compute', 'Step'), 'parataxis'), (('FOLLOW', 'Compute'), 'obj'), (('Follow', 'FOLLOW'), 'obj'), (('(', 'S'), 'punct'), (('S', 'FOLLOW'), 'dep'), ((')', 'S'), 'punct'), (('C\uf0e0cS', 'S\uf0e0aB'), 'compound'), (('B\uf0e0bC', 'S\uf0e0aB'), 'compound'), (('S\uf0e0aB', 'FOLLOW'), 'nsubj'), (('={', '$'), 'punct'), (('$', 'S\uf0e0aB'), 'parataxis'), (('}', '$'), 'punct'), (('C', '\uf0e0'), 'compound'), (('\uf0e0', '$'), 'conj'), (('c', '$'), 'punct'), (('S', 'Follow'), 'punct'), (('Follow', '$'), 'conj'), (('(', 'S'), 'punct'), (('S', 'Follow'), 'dep'), ((')', 'S'), 'punct'), (('=', 'Follow'), 'punct'), (('{', '$'), 'punct'), (('$', 'Follow'), 'conj'), (('}', '$'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', '$'), 'parataxis'), (('S', '{a'), 'case'), (('{a', 'Follow'), 'obj'), ((',', '𝜖}'), 'punct'), (('𝜖}', '{a'), 'conj'), (('{', '$'), 'punct'), (('$', '{a'), 'conj'), (('}', '$'), 'punct'), (('B', '$'), 'compound'), (('{b', '$'), 'punct'), ((',', '𝜖}'), 'punct'), (('𝜖}', '{b'), 'conj'), (('{', '$'), 'punct'), (('$', '$'), 'conj'), (('}', '$'), 'punct'), (('C', '$'), 'compound'), (('{c', '$'), 'punct'), ((',', '𝜖}'), 'punct'), (('𝜖}', '{c'), 'conj'), (('{', '$'), 'punct'), (('$', 'C'), 'conj'), (('}', '$'), 'punct'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', '$'), 'appos'), (('3', 'Follow'), 'nummod'), (('Follow', '=follow'), 'compound'), (('(', 'A'), 'punct'), (('A', 'Rule'), 'nummod'), ((')', 'A'), 'punct'), (('=follow', 'Rule'), 'conj'), (('(', 'B'), 'punct'), (('B', 'Rule'), 'nummod'), ((')', 'B'), 'punct'), (('Rule', '=follow'), 'conj'), (('1', 'Rule'), 'nummod'), ((':', 'Rule'), 'punct'), (('Place', '$'), 'appos'), (('$', 'Rule'), 'compound'), (('in', '$'), 'nummod'), (('FOLLOW', '$'), 'appos'), (('(', 'S'), 'punct'), (('S', 'S\uf0e0aB'), 'compound'), ((')', 'S'), 'punct'), (('S\uf0e0aB', '$'), 'appos'), (('|', 'S\uf0e0aB'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('B\uf0e0bC', 'S\uf0e0aB'), 'appos'), (('|', 'B\uf0e0bC'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('C\uf0e0cS', 'B\uf0e0bC'), 'appos'), (('|', 'C\uf0e0cS'), 'punct'), (('ϵ', 'Follow'), 'punct'), (('Follow', 'C\uf0e0cS'), 'acl:relcl'), (('(', 'S'), 'punct'), (('S', 'Follow'), 'dep'), ((')', 'S'), 'punct'), (('=', 'Place'), 'punct')]

 Named Entities are: 


========================== Sentence 84 ===========================

 Follow(C)  	B		b	C  	A 			B  Rule 3 Follow(A)=follow(B) Follow(C)= 

Tokens are: 
>> ['Follow', '(', 'C', ')', 'B', '\uf0e0', 'b', 'C', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'Follow', '(', 'C', ')', '='] 

 UPOS tags are: 
>> [('Follow', 'VERB'), ('(', 'PUNCT'), ('C', 'PROPN'), (')', 'PUNCT'), ('B', 'NOUN'), ('\uf0e0', 'NOUN'), ('b', 'NUM'), ('C', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('B', 'NUM'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('=follow', 'PROPN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('C', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('Follow', 'VB'), ('(', '-LRB-'), ('C', 'NNP'), (')', '-RRB-'), ('B', 'NN'), ('\uf0e0', 'NN'), ('b', 'CD'), ('C', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('B', 'CD'), ('Rule', 'NN'), ('3', 'CD'), ('Follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('=follow', 'NNP'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('Follow', 'NN'), ('(', '-LRB-'), ('C', 'NN'), (')', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('Follow', 'follow'), ('(', '('), ('C', 'C'), (')', ')'), ('B', 'b'), ('\uf0e0', '\uf0e0'), ('b', 'b'), ('C', 'c'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('C', 'c'), (')', ')'), ('=', '=')] 

 Dependency tags are: 
>> [(('Follow', 'root'), 'root'), (('(', 'C'), 'punct'), (('C', 'Follow'), 'appos'), ((')', 'C'), 'punct'), (('B', 'Follow'), 'obj'), (('\uf0e0', 'Follow'), 'obj'), (('b', 'C'), 'nummod'), (('C', '\uf0e0'), 'appos'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'nummod'), (('Rule', 'C'), 'appos'), (('3', 'Follow'), 'nummod'), (('Follow', '=follow'), 'compound'), (('(', 'A'), 'punct'), (('A', '=follow'), 'nummod'), ((')', 'A'), 'punct'), (('=follow', 'Rule'), 'appos'), (('(', 'B'), 'punct'), (('B', 'Follow'), 'nummod'), ((')', 'B'), 'punct'), (('Follow', '=follow'), 'appos'), (('(', 'C'), 'punct'), (('C', 'Follow'), 'appos'), ((')', 'C'), 'punct'), (('=', 'Follow'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 85 ===========================

 Follow(B)   ={$} 	S		a	B  	A 			B  Rule 3 Follow(A)=follow(B) Follow(B)= 

Tokens are: 
>> ['Follow', '(', 'B', ')', '={', '$', '}', 'S', '\uf0e0', 'a', 'B', 'A', '\uf0e0', 'B', 'Rule', '3', 'Follow', '(', 'A', ')', '=follow', '(', 'B', ')', 'Follow', '(', 'B', ')', '='] 

 UPOS tags are: 
>> [('Follow', 'VERB'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('={', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('S', 'NOUN'), ('\uf0e0', 'NOUN'), ('a', 'DET'), ('B', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('=follow', 'PROPN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('Follow', 'NOUN'), ('(', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('Follow', 'VB'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('={', ','), ('$', '$'), ('}', ','), ('S', 'NN'), ('\uf0e0', 'NN'), ('a', 'DT'), ('B', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('B', 'NN'), ('Rule', 'NN'), ('3', 'CD'), ('Follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('=follow', 'NNP'), ('(', '-LRB-'), ('B', 'LS'), (')', '-RRB-'), ('Follow', 'NN'), ('(', '-LRB-'), ('B', 'NN'), (')', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('={', '={'), ('$', '$'), ('}', '}'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('B', 'b'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('Follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('=follow', '=follow'), ('(', '('), ('B', 'b'), (')', ')'), ('Follow', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('=', '=')] 

 Dependency tags are: 
>> [(('Follow', 'root'), 'root'), (('(', 'B'), 'punct'), (('B', '$'), 'nummod'), ((')', 'B'), 'punct'), (('={', '$'), 'punct'), (('$', 'Follow'), 'parataxis'), (('}', '$'), 'punct'), (('S', '$'), 'nummod'), (('\uf0e0', '$'), 'nmod'), (('a', 'B'), 'det'), (('B', '$'), 'appos'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', '$'), 'appos'), (('3', 'Follow'), 'nummod'), (('Follow', 'Rule'), 'appos'), (('(', 'A'), 'punct'), (('A', '=follow'), 'nummod'), ((')', 'A'), 'punct'), (('=follow', 'Rule'), 'conj'), (('(', 'B'), 'punct'), (('B', 'Follow'), 'nummod'), ((')', 'B'), 'punct'), (('Follow', '=follow'), 'appos'), (('(', 'B'), 'punct'), (('B', 'Follow'), 'appos'), ((')', 'B'), 'punct'), (('=', 'Follow'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 86 ===========================

 Follow(S)   ={$}       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      SaB a=FIRST(aB)={ a } M[S,a]= 

Tokens are: 
>> ['Follow', '(', 'S', ')', '={', '$', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'S\uf0e0aB', 'a=', 'FIRST', '(', 'aB', ')', '=', '{', 'a', '}', 'M[', 'S', ',', 'a]', '='] 

 UPOS tags are: 
>> [('Follow', 'VERB'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('S\uf0e0aB', 'PROPN'), ('a=', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('aB', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('a', 'NOUN'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('S', 'NOUN'), (',', 'PUNCT'), ('a]', 'X'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('Follow', 'VB'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('={', ','), ('$', '$'), ('}', ','), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('S\uf0e0aB', 'NNP'), ('a=', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('aB', 'NN'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('a', 'NN'), ('}', ','), ('M[', 'NN'), ('S', 'NN'), (',', ','), ('a]', 'ADD'), ('=', ',')] 

 Lemmas are: 
>> [('Follow', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('={', '={'), ('$', '$'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('S\uf0e0aB', 'S\uf0e0aB'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('aB', 'ab'), (')', ')'), ('=', '='), ('{', '{'), ('a', 'a'), ('}', '}'), ('M[', 'M['), ('S', 's'), (',', ','), ('a]', 'a]'), ('=', '=')] 

 Dependency tags are: 
>> [(('Follow', 'root'), 'root'), (('(', 'S'), 'punct'), (('S', 'Follow'), 'dep'), ((')', 'S'), 'punct'), (('={', '$'), 'punct'), (('$', 'Follow'), 'obj'), (('}', '$'), 'punct'), (('Prof.', '$'), 'appos'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '$'), 'conj'), (('-', '2'), 'case'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'parsing'), 'compound'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', '$'), 'parataxis'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('S\uf0e0aB', 'table'), 'appos'), (('a=', 'table'), 'appos'), (('FIRST', 'table'), 'amod'), (('(', 'aB'), 'punct'), (('aB', 'FIRST'), 'appos'), ((')', 'aB'), 'punct'), (('=', 'a'), 'punct'), (('{', 'a'), 'punct'), (('a', 'table'), 'appos'), (('}', 'a'), 'punct'), (('M[', 'a'), 'appos'), (('S', 'M['), 'dep'), ((',', 'S'), 'punct'), (('a]', 'S'), 'appos'), (('=', 'a]'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 87 ===========================

 SaB  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			 	B				 	C				  Rule: 2 A  a = first() M[A,a] = A   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a,𝜖}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      S𝜖 b=FOLLOW(S)={ $ } M[S,$]= 

Tokens are: 
>> ['S\uf0e0aB', 'NT', 'Input', 'Symbol', 'a', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'B', 'C', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{a', ',', '𝜖}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'S\uf0e0𝜖', 'b=', 'FOLLOW', '(', 'S', ')', '=', '{', '$', '}', 'M[', 'S', ',', '$', ']', '='] 

 UPOS tags are: 
>> [('S\uf0e0aB', 'PROPN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'DET'), ('b', 'NOUN'), ('c', 'NOUN'), ('$', 'SYM'), ('S', 'NUM'), ('S\uf0e0aB', 'NOUN'), ('B', 'NOUN'), ('C', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'NOUN'), ('a', 'NOUN'), ('=', 'SYM'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'NOUN'), ('A', 'NOUN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B\uf0e0bC', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('S', 'NOUN'), ('{a', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('S\uf0e0𝜖', 'PROPN'), ('b=', 'PUNCT'), ('FOLLOW', 'VERB'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('S', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('S\uf0e0aB', 'NNP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('a', 'DT'), ('b', 'NN'), ('c', 'NN'), ('$', '$'), ('S', 'CD'), ('S\uf0e0aB', 'NN'), ('B', 'NN'), ('C', 'NN'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NN'), ('a', 'NN'), ('=', 'SYM'), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'NN'), ('A', 'NN'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ':'), ('A\uf0e0', 'GW'), ('S\uf0e0aB', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B\uf0e0bC', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NFP'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('S', 'NN'), ('{a', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', ','), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('S\uf0e0𝜖', 'NNP'), ('b=', ','), ('FOLLOW', 'VB'), ('(', '-LRB-'), ('S', 'NN'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('$', '$'), ('}', ','), ('M[', 'NN'), ('S', 'NN'), (',', ','), ('$', '$'), (']', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('S\uf0e0aB', 'S\uf0e0aB'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 's\uf0e0ab'), ('B', 'b'), ('C', 'c'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'a\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'a'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'a\uf0e0'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', "''"), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{a', '{a'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('S\uf0e0𝜖', 'S\uf0e0𝜖'), ('b=', 'b='), ('FOLLOW', 'follow'), ('(', '('), ('S', 's'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M[', 'M['), ('S', 's'), (',', ','), ('$', '$'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('S\uf0e0aB', 'Symbol'), 'nsubj'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', 'root'), 'root'), (('a', 'c'), 'det'), (('b', 'c'), 'compound'), (('c', 'Symbol'), 'compound'), (('$', 'Rule'), 'compound'), (('S', '$'), 'nummod'), (('S\uf0e0aB', 'B'), 'compound'), (('B', 'Rule'), 'compound'), (('C', 'Rule'), 'compound'), (('Rule', 'Symbol'), 'conj'), ((':', 'Rule'), 'punct'), (('2', 'a'), 'nummod'), (('A\uf0e0', 'a'), 'compound'), (('a', '='), 'nsubj'), (('=', 'Symbol'), 'parataxis'), (('first', '='), 'obj'), (('(', 'A'), 'punct'), ((')', 'M['), 'punct'), (('M[', 'A'), 'compound'), (('A', '='), 'obj'), ((',', 'a'), 'punct'), (('a', 'A'), 'appos'), ((']', 'a'), 'punct'), (('=', 'Symbol'), 'punct'), (('A\uf0e0', 'A'), 'appos'), (('S\uf0e0aB', 'A\uf0e0'), 'dep'), (('|', 'A\uf0e0'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('B\uf0e0bC', 'S\uf0e0aB'), 'dep'), (('|', 'B\uf0e0bC'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('C\uf0e0cS', 'Symbol'), 'punct'), (('|', 'Symbol'), 'punct'), (('ϵ', 'Follow'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'Symbol'), 'parataxis'), (('S', 'Follow'), 'obj'), (('{a', 'Follow'), 'obj'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'conj'), (('{', '$'), 'punct'), (('$', '{a'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', 'B'), 'compound'), ((',', '$'), 'punct'), (('𝜖}', '$'), 'conj'), (('{', '$'), 'punct'), (('$', '$'), 'conj'), (('}', '$'), 'punct'), (('C', '$'), 'compound'), (('{c', '$'), 'appos'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'compound'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', '$'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', 'Example'), 'punct'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'parataxis'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('S\uf0e0𝜖', 'table'), 'appos'), (('b=', 'FOLLOW'), 'punct'), (('FOLLOW', 'Prepare'), 'parataxis'), (('(', 'S'), 'punct'), (('S', 'FOLLOW'), 'dep'), ((')', 'S'), 'punct'), (('=', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'FOLLOW'), 'dep'), (('}', '$'), 'punct'), (('M[', '$'), 'appos'), (('S', '$'), 'appos'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), ((']', '$'), 'punct'), (('=', 'Symbol'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 88 ===========================

 S𝜖  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B				 	C				   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 3 

Tokens are: 
>> ['S\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'a', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'C', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', 'a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'Rule', ':', '3'] 

 UPOS tags are: 
>> [('S\uf0e0𝜖', 'NOUN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'NOUN'), ('b', 'NOUN'), ('c', 'NOUN'), ('$', 'SYM'), ('S', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('S\uf0e0𝜖', 'NOUN'), ('B', 'NOUN'), ('C', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('B\uf0e0bC', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'NOUN'), ('Follow', 'VERB'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('S\uf0e0𝜖', 'GW'), ('NT', 'RB'), ('Input', 'GW'), ('Symbol', 'NN'), ('a', 'NN'), ('b', 'NN'), ('c', 'NN'), ('$', '$'), ('S', 'GW'), ('S\uf0e0aB', 'GW'), ('S\uf0e0𝜖', 'GW'), ('B', 'GW'), ('C', 'GW'), ('S\uf0e0aB', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('B\uf0e0bC', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'NN'), ('Follow', 'VB'), ('S', 'NN'), ('{', 'NFP'), ('a}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', ':'), ('Rule', 'NN'), (':', ':'), ('3', 'CD')] 

 Lemmas are: 
>> [('S\uf0e0𝜖', 's\uf0e0𝜖'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', "''"), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'caus'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('a}', 'a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3')] 

 Dependency tags are: 
>> [(('S\uf0e0𝜖', 'Symbol'), 'compound'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', 'root'), 'root'), (('a', 'b'), 'compound'), (('b', 'Symbol'), 'appos'), (('c', '$'), 'compound'), (('$', 'b'), 'appos'), (('S', '$'), 'nummod'), (('S\uf0e0aB', '$'), 'goeswith'), (('S\uf0e0𝜖', '$'), 'nmod'), (('B', '$'), 'nmod'), (('C', '$'), 'appos'), (('S\uf0e0aB', '$'), 'nmod'), (('|', '$'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'punct'), (('B\uf0e0bC', 'Symbol'), 'list'), (('|', 'B\uf0e0bC'), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('C\uf0e0cS', 'Symbol'), 'parataxis'), (('|', 'C\uf0e0cS'), 'punct'), (('ϵ', 'First'), 'punct'), (('NT', 'First'), 'advmod'), (('First', 'Symbol'), 'parataxis'), (('Follow', 'First'), 'obj'), (('S', 'Follow'), 'obj'), (('{', 'a}'), 'punct'), (('a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', 'a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'appos'), (('{b', '$'), 'goeswith'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'list'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('C', '$'), 'appos'), (('{c', '$'), 'appos'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'appos'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('Rule', '$'), 'appos'), ((':', 'Rule'), 'punct'), (('3', 'Rule'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 89 ===========================

 A  b = follow(A) M[A,b] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      BbC a=FIRST(bC)={ b } M[B,b]= 

Tokens are: 
>> ['A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0bC', 'a=', 'FIRST', '(', 'bC', ')', '={', 'b', '}', 'M[', 'B', ',', 'b]', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('b', 'PROPN'), ('=', 'SYM'), ('follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('b', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('B\uf0e0bC', 'PROPN'), ('a=', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('bC', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('b', 'NOUN'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('B', 'NOUN'), (',', 'PUNCT'), ('b]', 'X'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('b', 'NNP'), ('=', 'SYM'), ('follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('B\uf0e0bC', 'NNP'), ('a=', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('bC', 'NN'), (')', '-RRB-'), ('={', ','), ('b', 'NN'), ('}', ','), ('M[', 'NN'), ('B', 'NN'), (',', ','), ('b]', 'ADD'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0bC', 'B\uf0e0bC'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('bC', 'bc'), (')', ')'), ('={', '={'), ('b', 'b'), ('}', '}'), ('M[', 'M['), ('B', 'b'), (',', ','), ('b]', 'b]'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'b'), 'compound'), (('b', '='), 'nsubj'), (('=', 'root'), 'root'), (('follow', '='), 'obj'), (('(', 'A'), 'punct'), (('A', 'M['), 'nummod'), ((')', 'A'), 'punct'), (('M[', '='), 'obj'), (('A', 'M['), 'flat'), ((',', 'b'), 'punct'), (('b', 'M['), 'appos'), ((']', 'b'), 'punct'), (('=', '='), 'punct'), (('A\uf0e0', '='), 'parataxis'), (('Prof.', 'A\uf0e0'), 'flat'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'M['), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '='), 'parataxis'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '='), 'parataxis'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '='), 'parataxis'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '='), 'parataxis'), (('-', '2'), 'case'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'parsing'), 'compound'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', '='), 'parataxis'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('B\uf0e0bC', 'table'), 'appos'), (('a=', 'B\uf0e0bC'), 'flat'), (('FIRST', 'table'), 'amod'), (('(', 'bC'), 'punct'), (('bC', 'B\uf0e0bC'), 'nmod:tmod'), ((')', 'bC'), 'punct'), (('={', 'b'), 'punct'), (('b', 'table'), 'appos'), (('}', 'b'), 'punct'), (('M[', 'B'), 'compound'), (('B', 'b'), 'appos'), ((',', 'B'), 'punct'), (('b]', 'B'), 'appos'), (('=', 'b'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 90 ===========================

 BbC  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B		BbC		 	C				   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 2 

Tokens are: 
>> ['B\uf0e0bC', 'NT', 'Input', 'Symbol', 'a', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'B\uf0e0bC', 'C', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', 'a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'Rule', ':', '2'] 

 UPOS tags are: 
>> [('B\uf0e0bC', 'NOUN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'NOUN'), ('b', 'NOUN'), ('c', 'NOUN'), ('$', 'X'), ('S', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('S\uf0e0𝜖', 'NOUN'), ('B', 'X'), ('B\uf0e0bC', 'X'), ('C', 'X'), ('S\uf0e0aB', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('B\uf0e0bC', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'NOUN'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM')] 

 XPOS tags are: 
>> [('B\uf0e0bC', 'GW'), ('NT', 'RB'), ('Input', 'GW'), ('Symbol', 'NN'), ('a', 'NN'), ('b', 'NN'), ('c', 'NN'), ('$', 'GW'), ('S', 'GW'), ('S\uf0e0aB', 'GW'), ('S\uf0e0𝜖', 'GW'), ('B', 'GW'), ('B\uf0e0bC', 'GW'), ('C', 'GW'), ('S\uf0e0aB', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('B\uf0e0bC', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NN'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('S', 'NN'), ('{', 'NFP'), ('a}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', ':'), ('Rule', 'NN'), (':', ':'), ('2', 'CD')] 

 Lemmas are: 
>> [('B\uf0e0bC', 'b\uf0e0bc'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'B'), ('B\uf0e0bC', 'b\uf0e0bc'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'caus'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('a}', 'a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2')] 

 Dependency tags are: 
>> [(('B\uf0e0bC', 'Symbol'), 'compound'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', 'root'), 'root'), (('a', 'b'), 'compound'), (('b', 'Symbol'), 'appos'), (('c', 'b'), 'appos'), (('$', 'b'), 'appos'), (('S', '$'), 'goeswith'), (('S\uf0e0aB', '$'), 'goeswith'), (('S\uf0e0𝜖', '$'), 'nmod'), (('B', '$'), 'goeswith'), (('B\uf0e0bC', '$'), 'goeswith'), (('C', '$'), 'goeswith'), (('S\uf0e0aB', '$'), 'goeswith'), (('|', '$'), 'punct'), (('ϵ', 'B\uf0e0bC'), 'compound'), (('B\uf0e0bC', 'C\uf0e0cS'), 'compound'), (('|', 'C\uf0e0cS'), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('C\uf0e0cS', 'Symbol'), 'list'), (('|', 'C\uf0e0cS'), 'punct'), (('ϵ', 'C\uf0e0cS'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'nsubj'), (('Follow', 'Symbol'), 'parataxis'), (('S', 'Follow'), 'obj'), (('{', 'a}'), 'punct'), (('a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', 'a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'appos'), (('{b', '$'), 'list'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'list'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('C', '$'), 'appos'), (('{c', '$'), 'appos'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'appos'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('Rule', '$'), 'appos'), ((':', 'Rule'), 'punct'), (('2', 'Rule'), 'appos')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 91 ===========================

 A  a = first() M[A,a] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      B𝜖 b=FOLLOW(B)={ $ } M[B,$]= 

Tokens are: 
>> ['A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'B\uf0e0𝜖', 'b=', 'FOLLOW', '(', 'B', ')', '={', '$', '}', 'M', '[', 'B', ',', '$', ']', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('a', 'PROPN'), ('=', 'SYM'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'SYM'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('B\uf0e0𝜖', 'NOUN'), ('b=', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('B', 'NUM'), (')', 'PUNCT'), ('={', 'PUNCT'), ('$', 'SYM'), ('}', 'NUM'), ('M', 'NUM'), ('[', 'PUNCT'), ('B', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('a', 'NNP'), ('=', 'SYM'), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', 'SYM'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('B\uf0e0𝜖', 'NN'), ('b=', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('B', 'CD'), (')', '-RRB-'), ('={', ','), ('$', '$'), ('}', 'CD'), ('M', 'CD'), ('[', '-LRB-'), ('B', 'CD'), (',', ','), ('$', '$'), (']', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('b=', 'b='), ('FOLLOW', 'follow'), ('(', '('), ('B', 'b'), (')', ')'), ('={', '={'), ('$', '$'), ('}', '}'), ('M', 'm'), ('[', '['), ('B', 'b'), (',', ','), ('$', '$'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', '='), 'nsubj'), (('a', 'A\uf0e0'), 'flat'), (('=', 'root'), 'root'), (('first', 'M['), 'amod'), (('(', 'M['), 'punct'), ((')', 'M['), 'punct'), (('M[', '='), 'obj'), (('A', 'M['), 'flat'), ((',', 'M['), 'punct'), (('a', 'M['), 'appos'), ((']', 'a'), 'punct'), (('=', '='), 'conj'), (('A\uf0e0', '='), 'obj'), (('Prof.', 'A\uf0e0'), 'flat'), (('Jay', 'A\uf0e0'), 'flat'), (('R', 'A\uf0e0'), 'flat'), (('Dhamsaniya', 'A\uf0e0'), 'flat'), (('#', 'A\uf0e0'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A\uf0e0'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'A\uf0e0'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'A\uf0e0'), 'parataxis'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', '2'), 'case'), (('2', 'Example'), 'nmod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', 'A\uf0e0'), 'list'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('B\uf0e0𝜖', 'FOLLOW'), 'compound'), (('b=', 'FOLLOW'), 'compound'), (('FOLLOW', 'table'), 'appos'), (('(', 'B'), 'punct'), (('B', 'FOLLOW'), 'appos'), ((')', 'B'), 'punct'), (('={', '$'), 'punct'), (('$', 'table'), 'appos'), (('}', 'M'), 'compound'), (('M', '$'), 'nummod'), (('[', 'B'), 'punct'), (('B', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'B'), 'conj'), ((']', 'B'), 'punct'), (('=', '='), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 92 ===========================

 B𝜖  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B		BbC		B𝜖 	C				   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 3 

Tokens are: 
>> ['B\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'a', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'B\uf0e0bC', 'B\uf0e0𝜖', 'C', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', 'a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'Rule', ':', '3'] 

 UPOS tags are: 
>> [('B\uf0e0𝜖', 'NOUN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'NOUN'), ('b', 'NOUN'), ('c', 'NOUN'), ('$', 'SYM'), ('S', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('S\uf0e0𝜖', 'NOUN'), ('B', 'X'), ('B\uf0e0bC', 'X'), ('B\uf0e0𝜖', 'X'), ('C', 'X'), ('S\uf0e0aB', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('B\uf0e0bC', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NOUN'), ('{b', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NOUN'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('B\uf0e0𝜖', 'GW'), ('NT', 'RB'), ('Input', 'GW'), ('Symbol', 'NN'), ('a', 'NN'), ('b', 'NN'), ('c', 'NN'), ('$', 'SYM'), ('S', 'GW'), ('S\uf0e0aB', 'GW'), ('S\uf0e0𝜖', 'GW'), ('B', 'GW'), ('B\uf0e0bC', 'GW'), ('B\uf0e0𝜖', 'GW'), ('C', 'GW'), ('S\uf0e0aB', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('B\uf0e0bC', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NFP'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('S', 'NN'), ('{', 'NFP'), ('a}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('B', 'NN'), ('{b', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('C', 'NN'), ('{c', 'NN'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', ':'), ('Rule', 'NN'), (':', ':'), ('3', 'CD')] 

 Lemmas are: 
>> [('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'B'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('a}', 'a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3')] 

 Dependency tags are: 
>> [(('B\uf0e0𝜖', 'Symbol'), 'compound'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', 'root'), 'root'), (('a', 'b'), 'compound'), (('b', 'Symbol'), 'appos'), (('c', '$'), 'compound'), (('$', 'b'), 'appos'), (('S', '$'), 'goeswith'), (('S\uf0e0aB', '$'), 'goeswith'), (('S\uf0e0𝜖', '$'), 'goeswith'), (('B', '$'), 'goeswith'), (('B\uf0e0bC', '$'), 'goeswith'), (('B\uf0e0𝜖', '$'), 'goeswith'), (('C', '$'), 'goeswith'), (('S\uf0e0aB', '$'), 'goeswith'), (('|', '$'), 'punct'), (('ϵ', '$'), 'nmod'), (('B\uf0e0bC', '$'), 'goeswith'), (('|', '$'), 'punct'), (('ϵ', '$'), 'punct'), (('C\uf0e0cS', 'Symbol'), 'punct'), (('|', 'Symbol'), 'punct'), (('ϵ', 'Follow'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'nsubj'), (('Follow', 'Symbol'), 'parataxis'), (('S', 'Follow'), 'obj'), (('{', 'a}'), 'punct'), (('a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', 'a}'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'appos'), (('{b', '$'), 'list'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'list'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('C', '$'), 'appos'), (('{c', '$'), 'appos'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'appos'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('Rule', '$'), 'appos'), ((':', 'Rule'), 'punct'), (('3', 'Rule'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 93 ===========================

 A  b = follow(A) M[A,b] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      CcS a=FIRST(cS)={ c } M[C,c]= 

Tokens are: 
>> ['A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'C\uf0e0cS', 'a=', 'FIRST', '(', 'cS', ')', '={', 'c', '}', 'M[', 'C', ',', 'c]', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('b', 'PROPN'), ('=', 'SYM'), ('follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('b', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('C\uf0e0cS', 'PROPN'), ('a=', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('cS', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('c', 'NOUN'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('C', 'PROPN'), (',', 'PUNCT'), ('c]', 'X'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('b', 'NNP'), ('=', 'SYM'), ('follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('2', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('C\uf0e0cS', 'NNP'), ('a=', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('cS', 'NN'), (')', '-RRB-'), ('={', ','), ('c', 'NN'), ('}', ','), ('M[', 'NN'), ('C', 'NNP'), (',', ','), ('c]', 'ADD'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('C\uf0e0cS', 'C\uf0e0cS'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('cS', 'cs'), (')', ')'), ('={', '={'), ('c', 'c'), ('}', '}'), ('M[', 'M['), ('C', 'C'), (',', ','), ('c]', 'c]'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'b'), 'compound'), (('b', '='), 'nsubj'), (('=', 'root'), 'root'), (('follow', '='), 'obj'), (('(', 'A'), 'punct'), (('A', 'M['), 'nummod'), ((')', 'A'), 'punct'), (('M[', '='), 'obj'), (('A', 'M['), 'flat'), ((',', 'b'), 'punct'), (('b', 'M['), 'appos'), ((']', 'M['), 'punct'), (('=', '='), 'punct'), (('A\uf0e0', '='), 'parataxis'), (('Prof.', 'A\uf0e0'), 'flat'), (('Jay', 'A\uf0e0'), 'flat'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'A\uf0e0'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '='), 'parataxis'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'A\uf0e0'), 'conj'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', '2'), 'case'), (('2', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', '='), 'parataxis'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('C\uf0e0cS', 'table'), 'appos'), (('a=', 'C\uf0e0cS'), 'flat'), (('FIRST', 'table'), 'amod'), (('(', 'cS'), 'punct'), (('cS', 'c'), 'appos'), ((')', 'cS'), 'punct'), (('={', 'c'), 'punct'), (('c', 'table'), 'appos'), (('}', 'c'), 'punct'), (('M[', 'c'), 'appos'), (('C', 'M['), 'appos'), ((',', 'c]'), 'punct'), (('c]', 'C'), 'appos'), (('=', 'Prepare'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 94 ===========================

 CcS  	NT	Input Symbol			 		a	b	c	$ 	S	SaB			S𝜖 	B		BbC		B𝜖 	C			CcS	   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 2 

Tokens are: 
>> ['C\uf0e0cS', 'NT', 'Input', 'Symbol', 'a', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'S\uf0e0𝜖', 'B', 'B\uf0e0bC', 'B\uf0e0𝜖', 'C', 'C\uf0e0cS', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'Rule', ':', '2'] 

 UPOS tags are: 
>> [('C\uf0e0cS', 'NOUN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'NOUN'), ('b', 'NOUN'), ('c', 'NOUN'), ('$', 'SYM'), ('S', 'NOUN'), ('S\uf0e0aB', 'NOUN'), ('S\uf0e0𝜖', 'NOUN'), ('B', 'X'), ('B\uf0e0bC', 'X'), ('B\uf0e0𝜖', 'X'), ('C', 'X'), ('C\uf0e0cS', 'X'), ('S\uf0e0aB', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('B\uf0e0bC', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('S', 'NOUN'), ('{a}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM')] 

 XPOS tags are: 
>> [('C\uf0e0cS', 'GW'), ('NT', 'RB'), ('Input', 'GW'), ('Symbol', 'NN'), ('a', 'NN'), ('b', 'NN'), ('c', 'NN'), ('$', '$'), ('S', 'GW'), ('S\uf0e0aB', 'GW'), ('S\uf0e0𝜖', 'GW'), ('B', 'GW'), ('B\uf0e0bC', 'GW'), ('B\uf0e0𝜖', 'GW'), ('C', 'GW'), ('C\uf0e0cS', 'GW'), ('S\uf0e0aB', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('B\uf0e0bC', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NFP'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('S', 'NN'), ('{a}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('C', 'NN'), ('{c', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', ':'), ('Rule', 'NN'), (':', ':'), ('2', 'CD')] 

 Lemmas are: 
>> [('C\uf0e0cS', 'caus'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 's'), ('S\uf0e0aB', 's\uf0e0ab'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'B'), ('B\uf0e0bC', 'b\uf0e0bc'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('C\uf0e0cS', 'c\uf0e0cs'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{a}', '{a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2')] 

 Dependency tags are: 
>> [(('C\uf0e0cS', 'Symbol'), 'compound'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', 'root'), 'root'), (('a', 'b'), 'det'), (('b', 'Symbol'), 'appos'), (('c', '$'), 'compound'), (('$', 'b'), 'appos'), (('S', '$'), 'goeswith'), (('S\uf0e0aB', '$'), 'goeswith'), (('S\uf0e0𝜖', '$'), 'goeswith'), (('B', '$'), 'goeswith'), (('B\uf0e0bC', '$'), 'goeswith'), (('B\uf0e0𝜖', '$'), 'goeswith'), (('C', '$'), 'goeswith'), (('C\uf0e0cS', '$'), 'goeswith'), (('S\uf0e0aB', '$'), 'goeswith'), (('|', '$'), 'punct'), (('ϵ', '$'), 'goeswith'), (('B\uf0e0bC', '$'), 'goeswith'), (('|', 'Symbol'), 'punct'), (('ϵ', '$'), 'punct'), (('C\uf0e0cS', 'Symbol'), 'punct'), (('|', 'Symbol'), 'punct'), (('ϵ', 'Follow'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'nsubj'), (('Follow', 'Symbol'), 'parataxis'), (('S', '{a}'), 'compound'), (('{a}', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('$', 'Follow'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', 'B'), 'compound'), ((',', '$'), 'punct'), (('𝜖}', '$'), 'list'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('C', '$'), 'appos'), (('{c', 'C'), 'nummod'), ((',', '𝜖}'), 'punct'), (('𝜖}', '$'), 'appos'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('Rule', '$'), 'appos'), ((':', 'Rule'), 'punct'), (('2', 'Rule'), 'appos')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 95 ===========================

 A  a = first() M[A,a] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-2: LL(1) parsing    Step 3: Prepare predictive parsing table      C𝜖 b=FOLLOW(C)={ $ } M[C,$]= 

Tokens are: 
>> ['A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '2', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Prepare', 'predictive', 'parsing', 'table', 'C\uf0e0𝜖', 'b=', 'FOLLOW', '(', 'C', ')', '=', '{', '$', '}', 'M[', 'C', ',', '$', ']', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('a', 'PROPN'), ('=', 'SYM'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a', 'NUM'), (']', 'PUNCT'), ('=', 'SYM'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'SYM'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'SYM'), ('Parsing', 'NOUN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('2', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Prepare', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('C\uf0e0𝜖', 'NOUN'), ('b=', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('C', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'SYM'), ('M[', 'SYM'), ('C', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('a', 'NNP'), ('=', 'SYM'), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('a', 'LS'), (']', '-RRB-'), ('=', 'SYM'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', 'SYM'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', 'SYM'), ('Parsing', 'NN'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('2', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Prepare', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('C\uf0e0𝜖', 'NN'), ('b=', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('C', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('{', 'NFP'), ('$', '$'), ('}', 'SYM'), ('M[', 'SYM'), ('C', 'NN'), (',', ','), ('$', '$'), (']', '-RRB-'), ('=', ':')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('2', '2'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Prepare', 'prepare'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('b=', 'b='), ('FOLLOW', 'follow'), ('(', '('), ('C', 'c'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), ('}', '}'), ('M[', 'M['), ('C', 'c'), (',', ','), ('$', '$'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', '='), 'nsubj'), (('a', 'A\uf0e0'), 'flat'), (('=', 'root'), 'root'), (('first', 'M['), 'amod'), (('(', 'M['), 'punct'), ((')', 'M['), 'punct'), (('M[', '='), 'obj'), (('A', 'M['), 'flat'), ((',', 'M['), 'punct'), (('a', '='), 'nummod'), ((']', 'a'), 'punct'), (('=', '='), 'conj'), (('A\uf0e0', '='), 'obj'), (('Prof.', 'A\uf0e0'), 'flat'), (('Jay', 'A\uf0e0'), 'flat'), (('R', 'A\uf0e0'), 'flat'), (('Dhamsaniya', 'A\uf0e0'), 'flat'), (('#', 'A\uf0e0'), 'flat'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A\uf0e0'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'case'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'nmod'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Unit'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'Parsing'), 'case'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'nmod'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '='), 'parataxis'), (('-', '2'), 'case'), (('2', 'Example'), 'nmod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', '='), 'parataxis'), (('3', 'Step'), 'nummod'), ((':', 'Prepare'), 'punct'), (('Prepare', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Prepare'), 'obj'), (('C\uf0e0𝜖', 'table'), 'appos'), (('b=', 'FOLLOW'), 'compound'), (('FOLLOW', 'table'), 'appos'), (('(', 'C'), 'punct'), (('C', 'FOLLOW'), 'appos'), ((')', 'C'), 'punct'), (('=', 'Prepare'), 'parataxis'), (('{', '$'), 'punct'), (('$', '='), 'appos'), (('}', '$'), 'nummod'), (('M[', '$'), 'appos'), (('C', '$'), 'appos'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), ((']', '$'), 'punct'), (('=', '='), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 96 ===========================

 C𝜖  	NT	Input Symbol			 		a	b	c	$ 	S	SaB	Error	Error	S𝜖 	B	Error	BbB	Error	B𝜖 	C	Error	Error	CcS	C𝜖   SaB | ϵ 	BbC | ϵ CcS | ϵ 	 	NT	First 	Follow  	S	{a}	{$} 	B	{b,𝜖}	{$} 	C	{c,𝜖}	{$}  Rule: 3 

Tokens are: 
>> ['C\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'a', 'b', 'c', '$', 'S', 'S\uf0e0aB', 'Error', 'Error', 'S\uf0e0𝜖', 'B', 'Error', 'B\uf0e0bB', 'Error', 'B\uf0e0𝜖', 'C', 'Error', 'Error', 'C\uf0e0cS', 'C\uf0e0𝜖', 'S\uf0e0aB', '|', 'ϵ', 'B\uf0e0bC', '|', 'ϵ', 'C\uf0e0cS', '|', 'ϵ', 'NT', 'First', 'Follow', 'S', '{', 'a}', '{', '$', '}', 'B', '{b', ',', '𝜖}', '{', '$', '}', 'C', '{c', ',', '𝜖}', '{', '$', '}', 'Rule', ':', '3'] 

 UPOS tags are: 
>> [('C\uf0e0𝜖', 'PROPN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('a', 'DET'), ('b', 'NOUN'), ('c', 'NOUN'), ('$', 'SYM'), ('S', 'NUM'), ('S\uf0e0aB', 'NOUN'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('S\uf0e0𝜖', 'NOUN'), ('B', 'NOUN'), ('Error', 'NOUN'), ('B\uf0e0bB', 'NOUN'), ('Error', 'NOUN'), ('B\uf0e0𝜖', 'NOUN'), ('C', 'X'), ('Error', 'X'), ('Error', 'X'), ('C\uf0e0cS', 'X'), ('C\uf0e0𝜖', 'X'), ('S\uf0e0aB', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('B\uf0e0bC', 'X'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('C\uf0e0cS', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('S', 'NOUN'), ('{', 'PUNCT'), ('a}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('B', 'NUM'), ('{b', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('C', 'NOUN'), ('{c', 'NUM'), (',', 'PUNCT'), ('𝜖}', 'NOUN'), ('{', 'PUNCT'), ('$', 'SYM'), ('}', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('3', 'NUM')] 

 XPOS tags are: 
>> [('C\uf0e0𝜖', 'NNP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('a', 'DT'), ('b', 'NN'), ('c', 'NN'), ('$', '$'), ('S', 'CD'), ('S\uf0e0aB', 'GW'), ('Error', 'NN'), ('Error', 'NN'), ('S\uf0e0𝜖', 'GW'), ('B', 'GW'), ('Error', 'GW'), ('B\uf0e0bB', 'GW'), ('Error', 'GW'), ('B\uf0e0𝜖', 'GW'), ('C', 'GW'), ('Error', 'GW'), ('Error', 'GW'), ('C\uf0e0cS', 'GW'), ('C\uf0e0𝜖', 'GW'), ('S\uf0e0aB', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('B\uf0e0bC', 'GW'), ('|', 'NFP'), ('ϵ', 'NFP'), ('C\uf0e0cS', 'NFP'), ('|', 'NFP'), ('ϵ', 'NFP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('S', 'NN'), ('{', 'NFP'), ('a}', 'NFP'), ('{', 'NFP'), ('$', '$'), ('}', 'NFP'), ('B', 'CD'), ('{b', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', '-LRB-'), ('C', 'NN'), ('{c', 'CD'), (',', ','), ('𝜖}', 'NN'), ('{', 'NFP'), ('$', '$'), ('}', ':'), ('Rule', 'NN'), (':', ':'), ('3', 'CD')] 

 Lemmas are: 
>> [('C\uf0e0𝜖', 'C\uf0e0𝜖'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('a', 'a'), ('b', 'b'), ('c', 'c'), ('$', '$'), ('S', 'S'), ('S\uf0e0aB', 's\uf0e0ab'), ('Error', 'error'), ('Error', 'error'), ('S\uf0e0𝜖', 's\uf0e0𝜖'), ('B', 'b'), ('Error', 'error'), ('B\uf0e0bB', 'b\uf0e0bb'), ('Error', 'error'), ('B\uf0e0𝜖', 'b\uf0e0𝜖'), ('C', 'c'), ('Error', 'error'), ('Error', 'error'), ('C\uf0e0cS', 'c\uf0e0cs'), ('C\uf0e0𝜖', 'c\uf0e0𝜖'), ('S\uf0e0aB', 's\uf0e0ab'), ('|', '|'), ('ϵ', 'ϵ'), ('B\uf0e0bC', 'b\uf0e0bc'), ('|', '|'), ('ϵ', "''"), ('C\uf0e0cS', 'C\uf0e0cS'), ('|', '|'), ('ϵ', "''"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('S', 's'), ('{', '{'), ('a}', 'a}'), ('{', '{'), ('$', '$'), ('}', '}'), ('B', 'b'), ('{b', '{b'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('C', 'c'), ('{c', '{c'), (',', ','), ('𝜖}', '𝜖}'), ('{', '{'), ('$', '$'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('3', '3')] 

 Dependency tags are: 
>> [(('C\uf0e0𝜖', 'Symbol'), 'nsubj'), (('NT', 'Symbol'), 'advmod'), (('Input', 'Symbol'), 'compound'), (('Symbol', 'root'), 'root'), (('a', 'b'), 'det'), (('b', 'Symbol'), 'compound'), (('c', '$'), 'compound'), (('$', 'Symbol'), 'appos'), (('S', '$'), 'nummod'), (('S\uf0e0aB', 'Error'), 'compound'), (('Error', 'Error'), 'compound'), (('Error', 'Symbol'), 'list'), (('S\uf0e0𝜖', 'Error'), 'appos'), (('B', 'S\uf0e0𝜖'), 'compound'), (('Error', 'S\uf0e0𝜖'), 'goeswith'), (('B\uf0e0bB', 'S\uf0e0𝜖'), 'goeswith'), (('Error', 'S\uf0e0𝜖'), 'goeswith'), (('B\uf0e0𝜖', 'S\uf0e0𝜖'), 'goeswith'), (('C', 'B\uf0e0𝜖'), 'goeswith'), (('Error', 'B\uf0e0𝜖'), 'goeswith'), (('Error', 'B\uf0e0𝜖'), 'goeswith'), (('C\uf0e0cS', 'B\uf0e0𝜖'), 'goeswith'), (('C\uf0e0𝜖', 'B\uf0e0𝜖'), 'goeswith'), (('S\uf0e0aB', 'B\uf0e0𝜖'), 'goeswith'), (('|', 'Symbol'), 'punct'), (('ϵ', '$'), 'goeswith'), (('B\uf0e0bC', 'Symbol'), 'list'), (('|', 'Symbol'), 'punct'), (('ϵ', 'Symbol'), 'punct'), (('C\uf0e0cS', 'Symbol'), 'punct'), (('|', 'Symbol'), 'punct'), (('ϵ', 'Follow'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'nsubj'), (('Follow', 'Symbol'), 'parataxis'), (('S', 'Follow'), 'obj'), (('{', '$'), 'punct'), (('a}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'Follow'), 'appos'), (('}', '$'), 'punct'), (('B', '$'), 'nummod'), (('{b', 'B'), 'compound'), ((',', '$'), 'punct'), (('𝜖}', '$'), 'list'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('C', '$'), 'appos'), (('{c', 'C'), 'nummod'), ((',', 'C'), 'punct'), (('𝜖}', '$'), 'appos'), (('{', '$'), 'punct'), (('$', '$'), 'appos'), (('}', '$'), 'punct'), (('Rule', '$'), 'appos'), ((':', 'Rule'), 'punct'), (('3', 'Rule'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 97 ===========================

 A  b = follow(A) M[A,b] = A           Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing EE+T | T TT*F | F F(E) | id Step 1: Remove left recursion 	ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FIRST First(E) ETE’   First(T) TFT’  First(F) F(E) 					Fid   ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  	E		T	E’  	A		Y1	Y2  Rule 3 First(A)= 

Tokens are: 
>> ['A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'E\uf0e0E+T', '|', 'T', 'T\uf0e0T*F', '|', 'F', 'F\uf0e0(', 'E', ')', '|', 'id', 'Step', '1', ':', 'Remove', 'left', 'recursion', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'E', ')', 'E\uf0e0TE’', 'First', '(', 'T', ')', 'T\uf0e0FT', '’', 'First', '(', 'F', ')', 'F\uf0e0(', 'E', ')', 'F\uf0e0id', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'E', '\uf0e0', 'T', 'E’', 'A', '\uf0e0', 'Y1', 'Y2', 'Rule', '3', 'First', '(', 'A', ')', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('b', 'NUM'), ('=', 'PUNCT'), ('follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('b', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('E\uf0e0E+T', 'NOUN'), ('|', 'PUNCT'), ('T', 'NOUN'), ('T\uf0e0T*F', 'NOUN'), ('|', 'PUNCT'), ('F', 'NOUN'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Remove', 'VERB'), ('left', 'VERB'), ('recursion', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'NOUN'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'X'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FIRST', 'NOUN'), ('First', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('E\uf0e0TE’', 'X'), ('First', 'NOUN'), ('(', 'PUNCT'), ('T', 'NOUN'), (')', 'PUNCT'), ('T\uf0e0FT', 'NOUN'), ('’', 'X'), ('First', 'NOUN'), ('(', 'PUNCT'), ('F', 'NOUN'), (')', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'X'), ('F\uf0e0id', 'X'), ('E\uf0e0TE', 'X'), ('’', 'X'), ('E’\uf0e0+TE', 'X'), ('’', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’\uf0e0*FT', 'X'), ('’', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'X'), ('E', 'X'), ('\uf0e0', 'X'), ('T', 'X'), ('E’', 'X'), ('A', 'X'), ('\uf0e0', 'X'), ('Y1', 'X'), ('Y2', 'X'), ('Rule', 'X'), ('3', 'X'), ('First', 'X'), ('(', 'PUNCT'), ('A', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('b', 'CD'), ('=', ','), ('follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('b', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('E\uf0e0E+T', 'NN'), ('|', ','), ('T', 'NN'), ('T\uf0e0T*F', 'NN'), ('|', ','), ('F', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Remove', 'VB'), ('left', 'VBN'), ('recursion', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', ','), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’\uf0e0*', 'FW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'GW'), ('B', 'GW'), ('Kagathara', 'GW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'GW'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'GW'), ('FIRST', 'NN'), ('First', 'NN'), ('(', '-LRB-'), ('E', 'GW'), (')', '-RRB-'), ('E\uf0e0TE’', 'GW'), ('First', 'GW'), ('(', '-LRB-'), ('T', 'GW'), (')', '-RRB-'), ('T\uf0e0FT', 'NN'), ('’', 'GW'), ('First', 'NN'), ('(', '-LRB-'), ('F', 'GW'), (')', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'GW'), (')', 'GW'), ('F\uf0e0id', 'GW'), ('E\uf0e0TE', 'GW'), ('’', 'GW'), ('E’\uf0e0+TE', 'GW'), ('’', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('T\uf0e0FT', 'GW'), ('’', 'GW'), ('T’\uf0e0*FT', 'NN'), ('’', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', ':'), ('id', 'GW'), ('E', 'GW'), ('\uf0e0', 'GW'), ('T', 'GW'), ('E’', 'GW'), ('A', 'GW'), ('\uf0e0', 'GW'), ('Y1', 'GW'), ('Y2', 'GW'), ('Rule', 'GW'), ('3', 'GW'), ('First', 'GW'), ('(', '-LRB-'), ('A', 'NN'), (')', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('E\uf0e0E+T', 'e\uf0e0e+t'), ('|', '|'), ('T', 'T'), ('T\uf0e0T*F', 't\uf0e0t*f'), ('|', '|'), ('F', 'f'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Remove', 'remove'), ('left', 'leave'), ('recursion', 'recursion'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', "''"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('E', 'e'), (')', ')'), ('E\uf0e0TE’', 'e\uf0e0te’'), ('First', 'first'), ('(', '('), ('T', 'T'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('First', 'first'), ('(', '('), ('F', 'f'), (')', ')'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('F\uf0e0id', 'f\uf0e0id'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'s"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'s"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'s"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('E', 'E'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Y1', 'y1'), ('Y2', 'y2'), ('Rule', 'rule'), ('3', '3'), ('First', 'first'), ('(', '('), ('A', 'a'), (')', ')'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'root'), 'root'), (('b', 'A\uf0e0'), 'nummod'), (('=', 'b'), 'punct'), (('follow', 'b'), 'appos'), (('(', 'A'), 'punct'), (('A', 'M['), 'nummod'), ((')', 'A'), 'punct'), (('M[', 'follow'), 'conj'), (('A', 'M['), 'flat'), ((',', 'b'), 'punct'), (('b', 'M['), 'dep'), ((']', 'b'), 'punct'), (('=', 'M['), 'punct'), (('A\uf0e0', 'M['), 'conj'), (('Prof.', 'M['), 'conj'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'M['), 'conj'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A\uf0e0'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'A\uf0e0'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'B'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A\uf0e0'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'A\uf0e0'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'A\uf0e0'), 'conj'), (('-', '3'), 'case'), (('3', 'Example'), 'nmod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'E\uf0e0E+T'), 'compound'), (('E\uf0e0E+T', 'A\uf0e0'), 'appos'), (('|', 'E\uf0e0E+T'), 'punct'), (('T', 'T\uf0e0T*F'), 'compound'), (('T\uf0e0T*F', 'M['), 'conj'), (('|', 'F'), 'punct'), (('F', 'M['), 'conj'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'F'), 'appos'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'A\uf0e0'), 'conj'), (('Step', 'id'), 'appos'), (('1', 'Step'), 'nummod'), ((':', 'Remove'), 'punct'), (('Remove', 'A\uf0e0'), 'parataxis'), (('left', 'Remove'), 'xcomp'), (('recursion', 'left'), 'obj'), (('E\uf0e0TE', 'recursion'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'appos'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'E’\uf0e0+TE'), 'punct'), (('ϵ', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', 'E’\uf0e0+TE'), 'conj'), (('’', 'T\uf0e0FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'T\uf0e0FT'), 'dep'), (('’', 'FT'), 'punct'), (('|', 'E'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'FT'), 'appos'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'A\uf0e0'), 'conj'), (('Prof.', 'id'), 'compound'), (('Jay', 'id'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', 'Example'), 'appos'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'Step'), 'appos'), (('FIRST', 'Step'), 'compound'), (('First', 'Compute'), 'appos'), (('(', 'E'), 'punct'), (('E', 'First'), 'appos'), ((')', 'E'), 'punct'), (('E\uf0e0TE’', 'E'), 'compound'), (('First', 'E'), 'compound'), (('(', 'T'), 'punct'), (('T', 'First'), 'appos'), ((')', 'T'), 'punct'), (('T\uf0e0FT', 'First'), 'compound'), (('’', 'T\uf0e0FT'), 'case'), (('First', 'First'), 'appos'), (('(', 'F'), 'punct'), (('F', 'First'), 'appos'), ((')', 'F'), 'flat'), (('F\uf0e0(', 'F'), 'flat'), (('E', 'F'), 'flat'), ((')', 'F'), 'punct'), (('F\uf0e0id', 'E'), 'compound'), (('E\uf0e0TE', 'E'), 'compound'), (('’', 'E\uf0e0TE'), 'case'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'compound'), (('’', 'E\uf0e0TE'), 'case'), (('|', 'T\uf0e0FT'), 'punct'), (('ϵ', 'T’\uf0e0*FT'), 'compound'), (('T\uf0e0FT', 'T’\uf0e0*FT'), 'compound'), (('’', 'T\uf0e0FT'), 'case'), (('T’\uf0e0*FT', 'E’\uf0e0+TE'), 'appos'), (('’', 'T’\uf0e0*FT'), 'case'), (('|', 'E'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'T’\uf0e0*FT'), 'appos'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'E'), 'compound'), (('E', 'id'), 'goeswith'), (('\uf0e0', 'id'), 'goeswith'), (('T', 'id'), 'goeswith'), (('E’', 'id'), 'flat'), (('A', 'id'), 'goeswith'), (('\uf0e0', 'id'), 'goeswith'), (('Y1', 'Rule'), 'compound'), (('Y2', 'Rule'), 'compound'), (('Rule', 'id'), 'appos'), (('3', 'Rule'), 'compound'), (('First', 'Rule'), 'compound'), (('(', 'A'), 'punct'), (('A', 'Rule'), 'appos'), ((')', 'A'), 'punct'), (('=', 'id'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('First', 'ORDINAL'), ('3', 'CARDINAL')]

========================== Sentence 98 ===========================

 First(Y1) 	T		F	T’  	A		Y1	Y2  Rule 3 First(A)=First(Y1) FIRST(E)=FIRST(T) FIRST(T)= 

Tokens are: 
>> ['First', '(', 'Y1', ')', 'T', '\uf0e0', 'F', 'T’', 'A', '\uf0e0', 'Y1', 'Y2', 'Rule', '3', 'First', '(', 'A', ')', '=', 'First', '(', 'Y1', ')', 'FIRST', '(', 'E', ')', '=', 'FIRST', '(', 'T)', 'FIRST', '(', 'T)', '='] 

 UPOS tags are: 
>> [('First', 'ADV'), ('(', 'PUNCT'), ('Y1', 'NUM'), (')', 'PUNCT'), ('T', 'NOUN'), ('\uf0e0', 'NOUN'), ('F', 'PROPN'), ('T’', 'PROPN'), ('A', 'DET'), ('\uf0e0', 'PROPN'), ('Y1', 'PROPN'), ('Y2', 'PROPN'), ('Rule', 'NOUN'), ('3', 'NUM'), ('First', 'PROPN'), ('(', 'PUNCT'), ('A', 'PROPN'), (')', 'PUNCT'), ('=', 'SYM'), ('First', 'PROPN'), ('(', 'PUNCT'), ('Y1', 'PROPN'), (')', 'PUNCT'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('T)', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('T)', 'PROPN'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'RB'), ('(', '-LRB-'), ('Y1', 'CD'), (')', '-RRB-'), ('T', 'NN'), ('\uf0e0', 'NN'), ('F', 'NNP'), ('T’', 'NNP'), ('A', 'DT'), ('\uf0e0', 'NNP'), ('Y1', 'NNP'), ('Y2', 'NNP'), ('Rule', 'NN'), ('3', 'CD'), ('First', 'NNP'), ('(', '-LRB-'), ('A', 'NNP'), (')', '-RRB-'), ('=', 'SYM'), ('First', 'NNP'), ('(', '-LRB-'), ('Y1', 'NNP'), (')', '-RRB-'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('=', ','), ('FIRST', 'JJ'), ('(', '-LRB-'), ('T)', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('T)', 'NNP'), ('=', ':')] 

 Lemmas are: 
>> [('First', 'first'), ('(', '('), ('Y1', 'y1'), (')', ')'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T’', 'T’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Y1', 'Y1'), ('Y2', 'Y2'), ('Rule', 'rule'), ('3', '3'), ('First', 'First'), ('(', '('), ('A', 'A'), (')', ')'), ('=', '='), ('First', 'First'), ('(', '('), ('Y1', 'Y1'), (')', ')'), ('FIRST', 'first'), ('(', '('), ('E', 'e'), (')', ')'), ('=', '='), ('FIRST', 'first'), ('(', '('), ('T)', 'T)'), ('FIRST', 'first'), ('(', '('), ('T)', 'T)'), ('=', '=')] 

 Dependency tags are: 
>> [(('First', '\uf0e0'), 'advmod'), (('(', 'Y1'), 'punct'), (('Y1', '\uf0e0'), 'nummod'), ((')', 'Y1'), 'punct'), (('T', '\uf0e0'), 'compound'), (('\uf0e0', 'root'), 'root'), (('F', '\uf0e0'), 'compound'), (('T’', 'F'), 'flat'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Y1', 'Rule'), 'compound'), (('Y2', 'Rule'), 'compound'), (('Rule', '\uf0e0'), 'appos'), (('3', 'First'), 'nummod'), (('First', 'Rule'), 'appos'), (('(', 'A'), 'punct'), (('A', 'Rule'), 'appos'), ((')', 'A'), 'punct'), (('=', '\uf0e0'), 'parataxis'), (('First', '='), 'obj'), (('(', 'Y1'), 'punct'), (('Y1', 'First'), 'appos'), ((')', 'Y1'), 'punct'), (('FIRST', 'First'), 'amod'), (('(', 'E'), 'punct'), (('E', 'FIRST'), 'appos'), ((')', 'E'), 'punct'), (('=', 'FIRST'), 'punct'), (('FIRST', '\uf0e0'), 'appos'), (('(', 'T)'), 'punct'), (('T)', 'FIRST'), 'appos'), (('FIRST', 'T)'), 'amod'), (('(', 'T)'), 'punct'), (('T)', 'T)'), 'dep'), (('=', 'T)'), 'punct')]

 Named Entities are: 
>> [('First', 'ORDINAL')]

========================== Sentence 99 ===========================

 FIRST(F) 	F		(	E	)  	A		  	F		id  	A		  Rule 1 add  to  Rule 1 add  to  FIRST(F)={ (   , id } 	NT	First  	E	{ (,id }  	E’	  	T	{ (,id }  	T’	  	F	{ (,id }     = {(, id } = {(, id }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FIRST First(E’) E’+TE’    E’𝜖    	A		  	E’		  	A		  Rule 1 add  to  Rule 2 add  to  FIRST(E’)={ + , 𝜖 } 	E’		+	T	E’  	NT	First  	E	{ (,id }  	E’	{ +, 𝜖 }  	T	{ (,id }  	T’	  	F	{ (,id }  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FIRST First(T’) T’*FT’    T’𝜖    	A		  	T’		  	A		  Rule 1 add  to  Rule 2 add  to  FIRST(T’)={ * , 𝜖 } 	T’		*	F	T’  	NT	First  	E	{ (,id }  	E’	{ +, 𝜖 }  	T	{ (,id }  	T’	{ *, 𝜖 }  	F	{ (,id }  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(E)  F(E) 	   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	  	T	{ (,id }	  	T’	{ *, 𝜖 }	  	F	{ (,id }	  Rule 1: Place $ in FOLLOW(E) FOLLOW(E)={ $, 	F 		(	E	)  	A 			B	  Rule 2  ) }  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(E’) ETE’    E’+TE’ 	  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	  	T’	{ *, 𝜖 }	  	F	{ (,id }	  FOLLOW(E’)={ $,) 	E 		T	E’  	A 			B  Rule 3   	E’		+T	E’  	A 			B  Rule 3  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(T) ETE’    	  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	  	T’	{ *, 𝜖 }	  	F	{ (,id }	  FOLLOW(T)={ +, 	E 			T	E’  	A 			B	  $, )  	E			T	E’  	A 			B	  Rule 3  Rule 2  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(T) E’+TE’  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	  	F	{ (,id }	  FOLLOW(T)={ +, 	E’ 		+	T	E’  	A 			B	  $, )  Rule 3  Rule 2  	E’ 		+	T	E’  	A 			B	  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(T’) TFT’    T’*FT’ 	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	  FOLLOW(T’)={+ $,) 	T		F	T’  	A 			B  Rule 3   	T’		*F	T’  	A 			B  Rule 3  ETE’ 	E’+ 

Tokens are: 
>> ['FIRST', '(', 'F', ')', 'F', '\uf0e0', '(', 'E', ')', 'A', '\uf0e0', 'F', '\uf0e0', 'id', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'Rule', '1', 'add', 'to', 'FIRST', '(', 'F', ')', '={', '(', ',', 'id', '}', 'NT', 'First', 'E', '{', '(', ',', 'id', '}', 'E’', 'T', '{', '(', ',', 'id', '}', 'T’', 'F', '{', '(', ',', 'id', '}', '=', '{', '(', ',', 'id', '}', '=', '{', '(', ',', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'E', '’', ')', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'A', '\uf0e0', 'E', '’', '\uf0e0', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'Rule', '2', 'add', 'to', 'FIRST', '(', 'E', '’', ')', '=', '{', '+', ',', '𝜖', '}', 'E’', '\uf0e0', '+', 'T', 'E’', 'NT', 'First', 'E', '{', '(', ',', 'id', '}', 'E’', '{', '+', ',', '𝜖', '}', 'T', '{', '(', ',', 'id', '}', 'T’', 'F', '{', '(', ',', 'id', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FIRST', 'First', '(', 'T', '’)', 'T’\uf0e0*', 'FT', '’', 'T’\uf0e0𝜖', 'A', '\uf0e0', 'T', '’', '\uf0e0', 'A', '\uf0e0', 'Rule', '1', 'add', 'to', 'Rule', '2', 'add', 'to', 'FIRST', '(', 'T', '’', ')', '=', '{', '*', ',', '𝜖', '}', 'T', '’', '\uf0e0', '*', 'F', 'T’', 'NT', 'First', 'E', '{', '(', ',', 'id', '}', 'E’', '{', '+', ',', '𝜖', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'E', ')', 'F\uf0e0(', 'E', ')', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'Rule', '1', ':', 'Place', '$', 'in', 'FOLLOW', '(', 'E', ')', 'FOLLOW', '(', 'E', ')', '={', '$', ',', 'F', '\uf0e0', '(', 'E', ')', 'A', '\uf0e0', 'B', 'Rule', '2', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'E', '’)', 'E\uf0e0TE', '’', 'E’\uf0e0+TE’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'E', '’', ')', '=', '{', '$', ',', ')', 'E', '\uf0e0', 'T', 'E’', 'A', '\uf0e0', 'B', 'Rule', '3', 'E’', '\uf0e0', '+', 'T', 'E’', 'A', '\uf0e0', 'B', 'Rule', '3', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'T)', 'E\uf0e0TE', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', 'T', '’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'T', ')', '={', '+', ',', 'E', '\uf0e0', 'T', 'E’', 'A', '\uf0e0', 'B', '$', ',', ')', 'E', '\uf0e0', 'T', 'E’', 'A', '\uf0e0', 'B', 'Rule', '3', 'Rule', '2', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'T)', 'E’\uf0e0+TE’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'T', ')', '={', '+', ',', 'E’', '\uf0e0', '+', 'T', 'E’', 'A', '\uf0e0', 'B', '$', ',', ')', 'Rule', '3', 'Rule', '2', 'E’', '\uf0e0', '+', 'T', 'E’', 'A', '\uf0e0', 'B', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'T', '’)', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'T', '’', ')', '=', '{', '+', '$', ',', ')', 'T', '\uf0e0', 'F', 'T’', 'A', '\uf0e0', 'B', 'Rule', '3', 'T', '’', '\uf0e0', '*', 'F', 'T’', 'A', '\uf0e0', 'B', 'Rule', '3', 'E\uf0e0TE', '’', 'E’\uf0e0+'] 

 UPOS tags are: 
>> [('FIRST', 'ADV'), ('(', 'PUNCT'), ('F', 'PROPN'), (')', 'PUNCT'), ('F', 'PROPN'), ('\uf0e0', 'PROPN'), ('(', 'PUNCT'), ('E', 'NUM'), (')', 'PUNCT'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('F', 'PROPN'), ('\uf0e0', 'NOUN'), ('id', 'NOUN'), ('A', 'PUNCT'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('F', 'PROPN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('=', 'SYM'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('=', 'SYM'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FIRST', 'ADJ'), ('First', 'PROPN'), ('(', 'PUNCT'), ('E', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('E’\uf0e0+TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('A', 'DET'), ('\uf0e0', 'X'), ('E', 'X'), ('’', 'PUNCT'), ('\uf0e0', 'X'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('Rule', 'NOUN'), ('2', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('E', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('E’', 'PROPN'), ('\uf0e0', 'X'), ('+', 'SYM'), ('T', 'NOUN'), ('E’', 'NOUN'), ('NT', 'X'), ('First', 'ADJ'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FIRST', 'ADJ'), ('First', 'NOUN'), ('(', 'PUNCT'), ('T', 'NOUN'), ('’)', 'PUNCT'), ('T’\uf0e0*', 'NOUN'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('T’\uf0e0𝜖', 'NOUN'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('T', 'PUNCT'), ('’', 'PUNCT'), ('\uf0e0', 'NOUN'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('Rule', 'NOUN'), ('1', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('Rule', 'NOUN'), ('2', 'NUM'), ('add', 'VERB'), ('to', 'ADP'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('T', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'PROPN'), ('}', 'PUNCT'), ('T', 'PROPN'), ('’', 'PUNCT'), ('\uf0e0', 'X'), ('*', 'PUNCT'), ('F', 'PROPN'), ('T’', 'X'), ('NT', 'X'), ('First', 'ADJ'), ('E', 'X'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('T', 'NOUN'), ('’', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('F', 'PROPN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('F\uf0e0(', 'NOUN'), ('E', 'NOUN'), (')', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('T', 'NOUN'), ('’', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Rule', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Place', 'NOUN'), ('$', 'SYM'), ('in', 'NUM'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), ('F', 'PROPN'), ('\uf0e0', 'NUM'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('2', 'NUM'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'NOUN'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), ('’)', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE’', 'X'), ('NT', 'X'), ('First', 'ADJ'), ('Follow', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('T', 'NOUN'), ('’', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('E', 'NOUN'), ('\uf0e0', 'X'), ('T', 'X'), ('E’', 'X'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('B', 'X'), ('Rule', 'X'), ('3', 'NUM'), ('E’', 'X'), ('\uf0e0', 'X'), ('+', 'PUNCT'), ('T', 'X'), ('E’', 'NOUN'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('B', 'X'), ('Rule', 'X'), ('3', 'X'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T)', 'PROPN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('NT', 'X'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('T', 'NOUN'), ('’', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('E', 'NOUN'), ('\uf0e0', 'NOUN'), ('T', 'NOUN'), ('E’', 'NOUN'), ('A', 'PUNCT'), ('\uf0e0', 'NOUN'), ('B', 'X'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('E', 'NOUN'), ('\uf0e0', 'X'), ('T', 'X'), ('E’', 'X'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('B', 'X'), ('Rule', 'X'), ('3', 'NUM'), ('Rule', 'NOUN'), ('2', 'NUM'), ('E\uf0e0TE', 'NOUN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*FT', 'NOUN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T)', 'NOUN'), ('E’\uf0e0+TE’', 'X'), ('NT', 'X'), ('First', 'NOUN'), ('Follow', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('E’', 'NOUN'), ('\uf0e0', 'NUM'), ('+', 'SYM'), ('T', 'NUM'), ('E’', 'NOUN'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Rule', 'NOUN'), ('2', 'NUM'), ('E’', 'X'), ('\uf0e0', 'X'), ('+', 'SYM'), ('T', 'PUNCT'), ('E’', 'NOUN'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('B', 'X'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T', 'NOUN'), ('’)', 'PUNCT'), ('T\uf0e0FT', 'NOUN'), ('’', 'PUNCT'), ('T’\uf0e0*', 'NOUN'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'SYM'), ('{', 'PUNCT'), ('+', 'SYM'), ('$', 'SYM'), (',', 'NUM'), (')', 'PUNCT'), ('T', 'NOUN'), ('\uf0e0', 'NOUN'), ('F', 'PROPN'), ('T’', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('3', 'NUM'), ('T', 'NOUN'), ('’', 'PUNCT'), ('\uf0e0', 'NOUN'), ('*', 'PUNCT'), ('F', 'PROPN'), ('T’', 'X'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('B', 'NOUN'), ('Rule', 'NOUN'), ('3', 'NUM'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+', 'X')] 

 XPOS tags are: 
>> [('FIRST', 'RB'), ('(', '-LRB-'), ('F', 'NNP'), (')', '-RRB-'), ('F', 'NNP'), ('\uf0e0', 'NNP'), ('(', '-LRB-'), ('E', 'LS'), (')', '-RRB-'), ('A', 'DT'), ('\uf0e0', 'NN'), ('F', 'NNP'), ('\uf0e0', 'NN'), ('id', 'NN'), ('A', ','), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('F', 'NNP'), (')', '-RRB-'), ('={', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('NT', 'RB'), ('First', 'JJ'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('E’', 'NN'), ('T', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('T’', 'NN'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('=', 'SYM'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('=', 'SYM'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'JJ'), ('First', 'NNP'), ('(', '-LRB-'), ('E', 'NN'), ('’', "''"), (')', '-RRB-'), ('E’\uf0e0+TE', 'NNP'), ('’', "''"), ('E’\uf0e0𝜖', 'FW'), ('A', 'DT'), ('\uf0e0', 'FW'), ('E', 'FW'), ('’', "''"), ('\uf0e0', 'FW'), ('A', 'DT'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('Rule', 'NN'), ('2', 'CD'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('E', 'NN'), ('’', "''"), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('+', 'SYM'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('E’', 'NNP'), ('\uf0e0', 'FW'), ('+', 'SYM'), ('T', 'NN'), ('E’', 'NN'), ('NT', 'LS'), ('First', 'JJ'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('T', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('T’', 'NN'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’\uf0e0*', 'FW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FIRST', 'JJ'), ('First', 'NN'), ('(', '-LRB-'), ('T', 'NN'), ('’)', ','), ('T’\uf0e0*', 'NN'), ('FT', 'NN'), ('’', "''"), ('T’\uf0e0𝜖', 'NN'), ('A', ','), ('\uf0e0', 'FW'), ('T', ','), ('’', "''"), ('\uf0e0', 'NN'), ('A', 'NN'), ('\uf0e0', 'NN'), ('Rule', 'NN'), ('1', 'CD'), ('add', 'VB'), ('to', 'IN'), ('Rule', 'NN'), ('2', 'CD'), ('add', 'VB'), ('to', 'IN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('T', 'NN'), ('’', "''"), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('𝜖', 'NNP'), ('}', 'NFP'), ('T', 'NNP'), ('’', "''"), ('\uf0e0', 'FW'), ('*', 'NFP'), ('F', 'NNP'), ('T’', 'FW'), ('NT', 'LS'), ('First', 'JJ'), ('E', 'FW'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('T', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('T', 'NN'), ('’', "''"), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', 'NFP'), ('F', 'NNP'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’\uf0e0*', 'FW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'LS'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('F\uf0e0(', 'NN'), ('E', 'NN'), (')', '-RRB-'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('T', 'NN'), ('’', "''"), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('Rule', 'NN'), ('1', 'CD'), (':', ':'), ('Place', 'NN'), ('$', '$'), ('in', 'CD'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('={', 'NFP'), ('$', '$'), (',', ','), ('F', 'NNP'), ('\uf0e0', 'CD'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('A', 'NN'), ('\uf0e0', 'NN'), ('B', 'NN'), ('Rule', 'NN'), ('2', 'CD'), (')', '-RRB-'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'NN'), ('’', "''"), ('T’\uf0e0*', 'GW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('E', 'NN'), ('’)', '``'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('E’\uf0e0+TE’', 'FW'), ('NT', 'LS'), ('First', 'JJ'), ('Follow', 'NN'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('T', 'NN'), ('’', "''"), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', 'NFP'), ('F', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('E', 'NN'), ('’', "''"), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('E', 'NN'), ('\uf0e0', 'GW'), ('T', 'GW'), ('E’', 'GW'), ('A', '-LRB-'), ('\uf0e0', 'GW'), ('B', 'GW'), ('Rule', 'GW'), ('3', 'CD'), ('E’', 'GW'), ('\uf0e0', 'GW'), ('+', 'NFP'), ('T', 'GW'), ('E’', 'NN'), ('A', ':'), ('\uf0e0', 'GW'), ('B', 'GW'), ('Rule', 'GW'), ('3', 'NN'), ('E\uf0e0TE', 'GW'), ('’', ','), ('E’\uf0e0+TE', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('T\uf0e0FT', 'GW'), ('’', ','), ('T’\uf0e0*FT', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'GW'), (')', '-RRB-'), ('|', ','), ('id', 'NN'), ('}', ','), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'GW'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T)', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', '-LRB-'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('T', 'NN'), ('’', "''"), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('F', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T', 'NN'), (')', '-RRB-'), ('={', ','), ('+', 'SYM'), (',', ','), ('E', 'NN'), ('\uf0e0', 'NN'), ('T', 'NN'), ('E’', 'NN'), ('A', ','), ('\uf0e0', 'NN'), ('B', 'GW'), ('$', 'SYM'), (',', ','), (')', '-RRB-'), ('E', 'NN'), ('\uf0e0', 'GW'), ('T', 'GW'), ('E’', 'GW'), ('A', ','), ('\uf0e0', 'GW'), ('B', 'GW'), ('Rule', 'GW'), ('3', 'CD'), ('Rule', 'NN'), ('2', 'CD'), ('E\uf0e0TE', 'NN'), ('’', ','), ('E’\uf0e0+TE', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('T\uf0e0FT', 'GW'), ('’', ','), ('T’\uf0e0*FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'GW'), (')', '-RRB-'), ('|', ','), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T)', 'NN'), ('E’\uf0e0+TE’', 'GW'), ('NT', 'NN'), ('First', 'NN'), ('Follow', 'NN'), ('E', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', '-RRB-'), ('{', 'NFP'), ('$', '$'), (',', '-RRB-'), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('F', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T', 'NN'), (')', '-RRB-'), ('={', 'NFP'), ('+', 'SYM'), (',', ','), ('E’', 'NN'), ('\uf0e0', 'CD'), ('+', 'SYM'), ('T', 'CD'), ('E’', 'NN'), ('A', 'NN'), ('\uf0e0', 'NN'), ('B', 'NN'), ('$', '$'), (',', ','), (')', '-RRB-'), ('Rule', 'NN'), ('3', 'CD'), ('Rule', 'NN'), ('2', 'CD'), ('E’', 'GW'), ('\uf0e0', 'GW'), ('+', 'SYM'), ('T', ','), ('E’', 'NN'), ('A', ','), ('\uf0e0', 'GW'), ('B', 'GW'), ('E\uf0e0TE', 'GW'), ('’', ','), ('E’\uf0e0+TE', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('T\uf0e0FT', 'NN'), ('’', ','), ('T’\uf0e0*FT', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T', 'NN'), ('’)', '``'), ('T\uf0e0FT', 'NN'), ('’', "''"), ('T’\uf0e0*', 'NN'), ('FT', 'NN'), ('’', "''"), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', '-LRB-'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T', 'NN'), ('’', "''"), (')', '-RRB-'), ('=', 'SYM'), ('{', ','), ('+', 'SYM'), ('$', '$'), (',', 'CD'), (')', '-RRB-'), ('T', 'NN'), ('\uf0e0', 'NN'), ('F', 'NNP'), ('T’', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('B', 'NN'), ('Rule', 'NN'), ('3', 'CD'), ('T', 'NN'), ('’', "''"), ('\uf0e0', 'NN'), ('*', 'NFP'), ('F', 'NNP'), ('T’', 'FW'), ('A', '-LRB-'), ('\uf0e0', 'FW'), ('B', 'NN'), ('Rule', 'NN'), ('3', 'CD'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('E’\uf0e0+', 'ADD')] 

 Lemmas are: 
>> [('FIRST', 'first'), ('(', '('), ('F', 'F'), (')', ')'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'E'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('id', 'id'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('F', 'F'), (')', ')'), ('={', '={'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('NT', 'not'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E’', 'e’'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T’', 't’'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FIRST', 'first'), ('First', 'First'), ('(', '('), ('E', 'e'), ('’', "'"), (')', ')'), ('E’\uf0e0+TE', 'E’\uf0e0+TE'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('E', 'E'), ('’', "'"), ('\uf0e0', '\uf0e0'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('E', 'e'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('E’', 'E’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E’', 'e’'), ('NT', 'not'), ('First', 'first'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T’', 't’'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FIRST', 'first'), ('First', 'first'), ('(', '('), ('T', 'T'), ('’)', '’)'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('’', "'"), ('\uf0e0', '\uf0e0'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('Rule', 'rule'), ('1', '1'), ('add', 'add'), ('to', 'to'), ('Rule', 'rule'), ('2', '2'), ('add', 'add'), ('to', 'to'), ('FIRST', 'first'), ('(', '('), ('T', 'T'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('’', "'"), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T’', 't’'), ('NT', 'not'), ('First', 'first'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', "'"), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'F'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'e'), (')', ')'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', "'"), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('Rule', 'rule'), ('1', '1'), (':', ':'), ('Place', 'place'), ('$', '$'), ('in', 'in'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), (')', ')'), ('={', '={'), ('$', '$'), (',', ','), ('F', 'F'), ('\uf0e0', '\uf0e0'), ('(', '('), ('E', 'e'), (')', ')'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('2', '2'), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), ('’)', '’)'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE’', 'e’\uf0e0+te’'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', "'"), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('E', 'e'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'rule'), ('3', '3'), ('E’', 'e’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'rule'), ('3', '3'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T)', 'T)'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('T', 'T'), ('’', "'"), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 'T'), (')', ')'), ('={', '={'), ('+', '+'), (',', ','), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('$', '$'), (',', ','), (')', ')'), ('E', 'e'), ('\uf0e0', '\uf0e0'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T)', 't)'), ('E’\uf0e0+TE’', 'e’\uf0e0+te’'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 'T'), (')', ')'), ('={', '={'), ('+', '+'), (',', ','), ('E’', 'e’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E’', 'e’'), ('\uf0e0', '\uf0e0'), ('+', '+'), ('T', 'T'), ('E’', 'e’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('T', 'T'), ('’)', '’)'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('T', 'T'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('$', '$'), (',', ','), (')', ')'), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'F'), ('T’', 't’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('T', 'T'), ('’', "'"), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T’', 't’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('Rule', 'rule'), ('3', '3'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+', 'e’\uf0e0+')] 

 Dependency tags are: 
>> [(('FIRST', 'F'), 'dislocated'), (('(', 'F'), 'punct'), (('F', 'root'), 'root'), ((')', 'F'), 'punct'), (('F', '\uf0e0'), 'compound'), (('\uf0e0', '\uf0e0'), 'flat'), (('(', 'E'), 'punct'), (('E', '\uf0e0'), 'dep'), ((')', 'E'), 'punct'), (('A', '\uf0e0'), 'det'), (('\uf0e0', 'id'), 'compound'), (('F', '\uf0e0'), 'conj'), (('\uf0e0', 'Rule'), 'compound'), (('id', 'F'), 'conj'), (('A', 'Rule'), 'punct'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'id'), 'conj'), (('1', 'Rule'), 'dep'), (('add', '\uf0e0'), 'conj'), (('to', 'Rule'), 'case'), (('Rule', '\uf0e0'), 'nmod'), (('1', 'Rule'), 'nummod'), (('add', 'add'), 'ccomp'), (('to', 'FIRST'), 'case'), (('FIRST', 'F'), 'amod'), (('(', 'F'), 'punct'), (('F', 'add'), 'dep'), ((')', 'F'), 'punct'), (('={', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'conj'), (('}', 'E'), 'punct'), (('NT', 'E'), 'advmod'), (('First', 'E'), 'amod'), (('E', 'id'), 'conj'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E'), 'conj'), (('}', 'T'), 'punct'), (('E’', 'T'), 'compound'), (('T', 'id'), 'conj'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'id'), 'conj'), (('}', 'F'), 'punct'), (('T’', 'F'), 'compound'), (('F', 'id'), 'conj'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '='), 'nsubj'), (('}', '='), 'punct'), (('=', 'add'), 'conj'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '='), 'nsubj'), (('}', '='), 'punct'), (('=', '='), 'ccomp'), (('{', '='), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '='), 'obj'), (('}', 'Jay'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'conj'), (('3130006', 'PS'), 'dep'), (('(', 'PS'), 'punct'), (('PS', '#'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'PS'), 'punct'), (('Unit', 'id'), 'conj'), (('1', 'PS'), 'dep'), (('–', 'F'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', '#'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'CD'), 'compound'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '='), 'obj'), (('3', 'CD'), 'dep'), (('–', '='), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Example'), 'dislocated'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '='), 'conj'), (('-', 'Example'), 'punct'), (('3', 'Step'), 'dep'), ((':', 'Step'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', '='), 'obj'), (('2', 'Step'), 'dep'), ((':', 'Step'), 'punct'), (('Compute', 'First'), 'compound'), (('FIRST', 'First'), 'amod'), (('First', 'E'), 'compound'), (('(', 'E'), 'punct'), (('E', 'E’\uf0e0+TE'), 'compound'), (('’', 'E'), 'punct'), ((')', 'E'), 'punct'), (('E’\uf0e0+TE', 'E'), 'compound'), (('’', 'E'), 'punct'), (('E’\uf0e0𝜖', 'E'), 'compound'), (('A', 'E'), 'det'), (('\uf0e0', 'E'), 'compound'), (('E', 'add'), 'dep'), (('’', '\uf0e0'), 'punct'), (('\uf0e0', 'add'), 'nsubj'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'add'), 'nsubj'), (('1', 'add'), 'nsubj'), (('add', '='), 'conj'), (('to', 'Rule'), 'case'), (('Rule', 'add'), 'obl'), (('2', 'Rule'), 'nummod'), (('add', 'add'), 'conj'), (('to', 'E'), 'case'), (('FIRST', 'E'), 'amod'), (('(', 'E'), 'punct'), (('E', 'add'), 'dep'), (('’', 'E'), 'punct'), ((')', 'E'), 'punct'), (('=', '𝜖'), 'punct'), (('{', '+'), 'punct'), (('+', '𝜖'), 'cc'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'conj'), (('}', 'E’'), 'punct'), (('E’', '\uf0e0'), 'compound'), (('\uf0e0', 'F'), 'conj'), (('+', 'T'), 'cc'), (('T', 'E’'), 'compound'), (('E’', 'E'), 'compound'), (('NT', 'E'), 'cc'), (('First', 'E'), 'amod'), (('E', 'add'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E’'), 'compound'), (('}', 'E’'), 'punct'), (('E’', 'F'), 'conj'), (('{', '𝜖'), 'punct'), (('+', '𝜖'), 'cc'), ((',', '𝜖'), 'punct'), (('𝜖', 'T'), 'nsubj'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'id'), 'conj'), (('}', 'F'), 'punct'), (('T’', 'F'), 'compound'), (('F', 'id'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E’\uf0e0+TE'), 'compound'), (('}', 'E’\uf0e0+TE'), 'punct'), (('E\uf0e0TE', 'E’\uf0e0+TE'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'ϵ'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'T\uf0e0FT'), 'compound'), (('T\uf0e0FT', 'FT'), 'compound'), (('’', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'F'), 'conj'), (('’', 'FT'), 'punct'), (('|', '#'), 'punct'), (('ϵ', '#'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'FT'), 'dep'), ((')', 'E’\uf0e0+TE'), 'punct'), (('|', 'id'), 'punct'), (('id', 'F'), 'conj'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Unit'), 'compound'), (('3130006', 'PS'), 'dep'), (('(', 'PS'), 'punct'), (('PS', 'Jay'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'id'), 'dep'), (('1', 'Unit'), 'nummod'), (('–', '#'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '#'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', '#'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'CD'), 'compound'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Example'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Example'), 'dislocated'), (('3', 'Unit'), 'nummod'), (('–', '#'), 'punct'), (('Parsing', 'Example'), 'compound'), (('Theory', 'Example'), 'dislocated'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'F'), 'conj'), (('-', 'Example'), 'punct'), (('3', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'dep'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'First'), 'compound'), (('FIRST', 'First'), 'amod'), (('First', 'T'), 'conj'), (('(', 'T'), 'punct'), (('T', 'FT'), 'compound'), (('’)', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'Rule'), 'compound'), (('’', 'FT'), 'punct'), (('T’\uf0e0𝜖', '\uf0e0'), 'compound'), (('A', '\uf0e0'), 'case'), (('\uf0e0', 'FT'), 'conj'), (('T', 'FT'), 'punct'), (('’', 'FT'), 'punct'), (('\uf0e0', 'Rule'), 'compound'), (('A', 'Rule'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('Rule', 'add'), 'nsubj'), (('1', 'Rule'), 'nummod'), (('add', 'Step'), 'compound'), (('to', 'Rule'), 'case'), (('Rule', 'add'), 'obl'), (('2', 'Rule'), 'nummod'), (('add', 'add'), 'conj'), (('to', 'FIRST'), 'case'), (('FIRST', 'T'), 'amod'), (('(', 'T'), 'punct'), (('T', 'add'), 'dep'), (('’', 'T'), 'punct'), ((')', 'T'), 'punct'), (('=', '𝜖'), 'punct'), (('{', '𝜖'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'F'), 'conj'), (('}', 'T'), 'punct'), (('T', '𝜖'), 'conj'), (('’', 'T'), 'punct'), (('\uf0e0', 'T'), 'compound'), (('*', 'F'), 'punct'), (('F', 'id'), 'compound'), (('T’', 'E'), 'compound'), (('NT', 'E'), 'cc'), (('First', 'E'), 'amod'), (('E', 'F'), 'conj'), (('{', 'E'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E’'), 'compound'), (('}', 'E’'), 'punct'), (('E’', '𝜖'), 'compound'), (('{', '𝜖'), 'punct'), (('+', '𝜖'), 'cc'), ((',', '𝜖'), 'punct'), (('𝜖', 'T'), 'nsubj'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'id'), 'conj'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('’', 'id'), 'punct'), (('{', 'F'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'F'), 'compound'), (('}', 'F'), 'punct'), (('F', 'id'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E’\uf0e0+TE'), 'compound'), (('}', 'E’\uf0e0+TE'), 'punct'), (('E\uf0e0TE', 'E’\uf0e0+TE'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'ϵ'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'T\uf0e0FT'), 'compound'), (('T\uf0e0FT', 'FT'), 'compound'), (('’', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'E'), 'compound'), (('’', 'FT'), 'punct'), (('|', 'F\uf0e0('), 'punct'), (('ϵ', 'E'), 'dep'), (('F\uf0e0(', '#'), 'compound'), (('E', 'F\uf0e0('), 'dep'), ((')', 'E’\uf0e0+TE'), 'punct'), (('|', 'id'), 'punct'), (('id', 'F'), 'conj'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Unit'), 'compound'), (('3130006', 'PS'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'id'), 'dep'), (('1', 'Unit'), 'nummod'), (('–', '#'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '#'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Unit'), 'compound'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'B'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Example'), 'compound'), (('3', 'Unit'), 'nummod'), (('–', 'Example'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Example'), 'dislocated'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Unit'), 'dislocated'), (('-', 'Example'), 'punct'), (('3', 'Step'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'dislocated'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'E'), 'compound'), (('(', 'E'), 'punct'), (('E', 'E'), 'compound'), ((')', 'E'), 'punct'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'Follow'), 'dep'), ((')', 'E'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'nsubj'), (('Follow', 'E'), 'compound'), (('E', 'Step'), 'compound'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E'), 'compound'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'compound'), ((',', 'E’'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', 'T'), 'dep'), (('{', '+'), 'punct'), (('+', '𝜖'), 'cc'), ((',', '𝜖'), 'punct'), (('𝜖', 'T'), 'nummod'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'compound'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('’', 'id'), 'punct'), (('{', '𝜖'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'F'), 'compound'), (('}', 'F'), 'punct'), (('F', 'id'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Rule'), 'compound'), (('}', 'Rule'), 'punct'), (('Rule', '$'), 'compound'), (('1', 'Rule'), 'nummod'), ((':', 'id'), 'punct'), (('Place', '$'), 'compound'), (('$', 'id'), 'compound'), (('in', 'E'), 'case'), (('FOLLOW', 'E'), 'compound'), (('(', 'E'), 'punct'), (('E', '$'), 'dep'), ((')', 'E'), 'punct'), (('FOLLOW', '$'), 'conj'), (('(', 'E'), 'punct'), (('E', '$'), 'dep'), ((')', 'E'), 'punct'), (('={', '$'), 'punct'), (('$', 'Place'), 'conj'), ((',', 'F'), 'punct'), (('F', '$'), 'compound'), (('\uf0e0', 'F'), 'nummod'), (('(', 'E'), 'punct'), (('E', '$'), 'dep'), ((')', 'E'), 'punct'), (('A', 'Rule'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'E'), 'conj'), (('2', 'Rule'), 'nummod'), ((')', 'Rule'), 'punct'), (('}', 'E’\uf0e0+TE'), 'punct'), (('E\uf0e0TE', 'E’\uf0e0+TE'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', '$'), 'dep'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'FT'), 'compound'), (('T\uf0e0FT', 'ϵ'), 'compound'), (('’', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'E\uf0e0TE'), 'dep'), (('’', 'FT'), 'punct'), (('|', 'Unit'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', '$'), 'dep'), ((')', 'FT'), 'punct'), (('|', 'E'), 'punct'), (('id', '$'), 'compound'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'compound'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Probability'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'id'), 'dep'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '#'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'CD'), 'compound'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Example'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Example'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Example'), 'dislocated'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Unit'), 'dislocated'), (('-', 'Example'), 'punct'), (('3', 'LL'), 'dep'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'compound'), (('2', 'Step'), 'nummod'), ((':', 'FOLLOW'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'Step'), 'compound'), (('(', 'E\uf0e0TE'), 'punct'), (('E', 'E\uf0e0TE'), 'compound'), (('’)', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', 'E'), 'compound'), (('’', 'E\uf0e0TE'), 'punct'), (('E’\uf0e0+TE’', 'E\uf0e0TE'), 'compound'), (('NT', 'E'), 'cc'), (('First', 'E'), 'amod'), (('Follow', 'E'), 'compound'), (('E', 'FOLLOW'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E\uf0e0TE'), 'compound'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'compound'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', 'id'), 'nsubj'), (('{', '$'), 'punct'), (('+', '𝜖'), 'cc'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'nummod'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'compound'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', '$'), 'compound'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('’', 'id'), 'punct'), (('{', '𝜖'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T'), 'compound'), (('}', 'F'), 'punct'), (('F', '𝜖'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'compound'), (('}', 'id'), 'punct'), (('FOLLOW', 'E'), 'compound'), (('(', 'E'), 'punct'), (('E', 'id'), 'dep'), (('’', 'E'), 'punct'), ((')', 'E'), 'punct'), (('=', 'F'), 'punct'), (('{', '$'), 'punct'), (('$', 'F'), 'compound'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('E', 'Rule'), 'compound'), (('\uf0e0', 'T'), 'compound'), (('T', 'E’'), 'compound'), (('E’', '\uf0e0'), 'compound'), (('A', '\uf0e0'), 'case'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', '$'), 'compound'), (('3', 'E’'), 'compound'), (('E’', '\uf0e0'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('+', 'T'), 'punct'), (('T', 'E’'), 'compound'), (('E’', 'Rule'), 'compound'), (('A', 'Rule'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'Rule'), 'compound'), (('3', 'E\uf0e0TE'), 'compound'), (('E\uf0e0TE', 'Rule'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'Rule'), 'compound'), (('’', 'Rule'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'T’\uf0e0*FT'), 'compound'), (('T\uf0e0FT', 'ϵ'), 'compound'), (('’', 'ϵ'), 'punct'), (('T’\uf0e0*FT', 'Rule'), 'dep'), (('’', 'T’\uf0e0*FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', '#'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'T’\uf0e0*FT'), 'compound'), (('}', 'id'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'compound'), (('R', 'Jay'), 'compound'), (('Dhamsaniya', 'Jay'), 'compound'), (('#', 'id'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Example'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Unit'), 'compound'), (('-', 'Example'), 'punct'), (('3', 'LL'), 'dep'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'compound'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'E\uf0e0TE'), 'compound'), (('(', 'E\uf0e0TE'), 'punct'), (('T)', 'E\uf0e0TE'), 'compound'), (('E\uf0e0TE', 'Follow'), 'dep'), (('’', 'E\uf0e0TE'), 'punct'), (('NT', 'First'), 'advmod'), (('First', 'Follow'), 'nsubj'), (('Follow', 'Step'), 'compound'), (('E', 'Follow'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', '$'), 'dep'), (('{', '+'), 'punct'), (('+', '𝜖'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'nummod'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', '$'), 'dep'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'T'), 'punct'), (('T', 'id'), 'dep'), (('’', 'id'), 'punct'), (('{', '𝜖'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T'), 'dep'), (('}', '𝜖'), 'punct'), (('F', '𝜖'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'id'), 'punct'), (('FOLLOW', 'id'), 'conj'), (('(', 'T'), 'punct'), (('T', 'FOLLOW'), 'dep'), ((')', 'T'), 'punct'), (('={', 'E'), 'punct'), (('+', 'E'), 'advmod'), ((',', 'E'), 'punct'), (('E', 'id'), 'conj'), (('\uf0e0', 'E’'), 'compound'), (('T', 'E’'), 'compound'), (('E’', '$'), 'compound'), (('A', '$'), 'det'), (('\uf0e0', '$'), 'compound'), (('B', '$'), 'compound'), (('$', 'E'), 'dep'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('E', 'E’'), 'compound'), (('\uf0e0', 'T'), 'compound'), (('T', 'E’'), 'compound'), (('E’', '\uf0e0'), 'compound'), (('A', '\uf0e0'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'Rule'), 'compound'), (('3', 'Rule'), 'nummod'), (('Rule', 'E'), 'compound'), (('2', 'E\uf0e0TE'), 'nummod'), (('E\uf0e0TE', 'Rule'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'T’\uf0e0*FT'), 'compound'), (('T\uf0e0FT', 'ϵ'), 'compound'), (('’', 'T’\uf0e0*FT'), 'punct'), (('T’\uf0e0*FT', 'Rule'), 'compound'), (('’', 'T’\uf0e0*FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'Jay'), 'compound'), (('F\uf0e0(', 'ϵ'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'ϵ'), 'punct'), (('|', 'id'), 'punct'), (('id', 'T’\uf0e0*FT'), 'compound'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'parataxis'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'dep'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'compound'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'Step'), 'compound'), (('(', 'T)'), 'punct'), (('T)', 'E'), 'compound'), (('E’\uf0e0+TE’', 'T)'), 'compound'), (('NT', 'First'), 'advmod'), (('First', 'E'), 'compound'), (('Follow', 'E'), 'compound'), (('E', 'FOLLOW'), 'dep'), (('{', 'E'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E'), 'compound'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'compound'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', '$'), 'dep'), (('{', '𝜖'), 'punct'), (('+', '𝜖'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'dep'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('$', '𝜖'), 'compound'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', '$'), 'compound'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', '$'), 'dep'), (('{', 'T’'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'conj'), (('}', '𝜖'), 'punct'), (('F', '𝜖'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'parataxis'), (('}', 'id'), 'punct'), (('FOLLOW', 'id'), 'conj'), (('(', 'T'), 'punct'), (('T', 'FOLLOW'), 'dep'), ((')', 'T'), 'punct'), (('={', 'T'), 'punct'), (('+', 'E’'), 'dep'), ((',', 'E’'), 'punct'), (('E’', 'id'), 'conj'), (('\uf0e0', 'E’'), 'nummod'), (('+', 'T'), 'cc'), (('T', 'E’'), 'nummod'), (('E’', 'E’'), 'dep'), (('A', '$'), 'compound'), (('\uf0e0', '$'), 'compound'), (('B', '$'), 'compound'), (('$', 'E’'), 'compound'), ((',', 'Rule'), 'punct'), ((')', '$'), 'punct'), (('Rule', '$'), 'compound'), (('3', 'Rule'), 'nummod'), (('Rule', 'Rule'), 'compound'), (('2', 'E’'), 'compound'), (('E’', '\uf0e0'), 'compound'), (('\uf0e0', 'Rule'), 'compound'), (('+', 'Rule'), 'advmod'), (('T', 'E’'), 'punct'), (('E’', '+'), 'compound'), (('A', 'E’'), 'compound'), (('\uf0e0', 'A'), 'compound'), (('B', 'A'), 'compound'), (('E\uf0e0TE', 'A'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'A'), 'dep'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'A'), 'compound'), (('T\uf0e0FT', 'ϵ'), 'compound'), (('’', 'ϵ'), 'punct'), (('T’\uf0e0*FT', 'T\uf0e0FT'), 'compound'), (('’', 'T’\uf0e0*FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'id'), 'dep'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'T\uf0e0FT'), 'compound'), (('}', 'id'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'compound'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'LL'), 'conj'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'Step'), 'appos'), (('(', 'T\uf0e0FT'), 'punct'), (('T', 'T\uf0e0FT'), 'compound'), (('’)', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', 'FOLLOW'), 'appos'), (('’', 'T\uf0e0FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'T\uf0e0FT'), 'conj'), (('’', 'FT'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'FOLLOW'), 'parataxis'), (('E', 'Follow'), 'obj'), (('{', 'Follow'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'parataxis'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', '𝜖'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'nummod'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'parataxis'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T', '$'), 'parataxis'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'parataxis'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'advmod'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T’', '$'), 'parataxis'), (('{', 'T’'), 'punct'), (('*', 'T’'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'conj'), (('}', '𝜖'), 'punct'), (('{', '𝜖'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', '𝜖'), 'parataxis'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'appos'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('FOLLOW', 'id'), 'conj'), (('(', 'T'), 'punct'), (('T', 'id'), 'dep'), (('’', 'T'), 'punct'), ((')', 'T'), 'punct'), (('=', 'id'), 'parataxis'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), (('$', '='), 'conj'), ((',', '$'), 'nummod'), ((')', '$'), 'punct'), (('T', 'F'), 'punct'), (('\uf0e0', '$'), 'appos'), (('F', '\uf0e0'), 'conj'), (('T’', 'F'), 'flat'), (('A', 'Rule'), 'det'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'F'), 'appos'), (('3', 'T'), 'nummod'), (('T', 'Rule'), 'appos'), (('’', 'Rule'), 'punct'), (('\uf0e0', 'F'), 'punct'), (('*', 'F'), 'punct'), (('F', 'Rule'), 'appos'), (('T’', 'F'), 'flat'), (('A', 'Rule'), 'punct'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'F'), 'appos'), (('3', 'E\uf0e0TE'), 'nummod'), (('E\uf0e0TE', 'Rule'), 'appos'), (('’', 'Rule'), 'punct'), (('E’\uf0e0+', 'Rule'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL')]

========================== Sentence 100 ===========================

 TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(F) TFT’  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	  FOLLOW(F)={ *, 	T 			F	T’  	A 			B	   + ,$ , )  	T			F	T’  	A 			B	  Rule 3  Rule 2  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 2: Compute FOLLOW FOLLOW(F) T’*FT’    	   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  FOLLOW(F)={ *,+, 	T’ 		*	F	T’  	A 			B	  $, )  Rule 3  Rule 2  	T’ 		*	F	T’  	A 			B	  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  }     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        ETE’ a=FIRST(TE’)={ (,id } M[E,(]=ETE’ M[E,id]=ETE’  	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  Rule: 2 

Tokens are: 
>> ['TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'F', ')', 'T\uf0e0FT', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', 'FOLLOW', '(', 'F', ')', '={', '*', ',', 'T', '\uf0e0', 'F', 'T’', 'A', '\uf0e0', 'B', '+', ',', '$', ',', ')', 'T', '\uf0e0', 'F', 'T’', 'A', '\uf0e0', 'B', 'Rule', '3', 'Rule', '2', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '2', ':', 'Compute', 'FOLLOW', 'FOLLOW', '(', 'F', ')', 'T’\uf0e0*', 'FT', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'FOLLOW', '(', 'F', ')', '={', '*', ',', '+', ',', 'T’', '\uf0e0', '*', 'F', 'T’', 'A', '\uf0e0', 'B', '$', ',', ')', 'Rule', '3', 'Rule', '2', 'T', '’', '\uf0e0', '*', 'F', 'T’', 'A', '\uf0e0', 'B', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'E\uf0e0TE', '’', 'a=', 'FIRST', '(', 'TE', '’', ')', '=', '{', '(', ',', 'id', '}', 'M[E', ',', '(', ']', '=E\uf0e0TE', '’', 'M[', 'E,', 'id', ']', '=E\uf0e0TE', '’', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'Rule', ':', '2'] 

 UPOS tags are: 
>> [('TE', 'PROPN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('F', 'PROPN'), (')', 'PUNCT'), ('T\uf0e0FT', 'NOUN'), ('’', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'NUM'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('F', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('T', 'NOUN'), ('\uf0e0', 'NOUN'), ('F', 'NOUN'), ('T’', 'X'), ('A', 'NOUN'), ('\uf0e0', 'PUNCT'), ('B', 'NOUN'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('T', 'NOUN'), ('\uf0e0', 'PUNCT'), ('F', 'NOUN'), ('T’', 'X'), ('A', 'PUNCT'), ('\uf0e0', 'X'), ('B', 'X'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Rule', 'NOUN'), ('2', 'NUM'), ('E\uf0e0TE', 'NOUN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’\uf0e0*FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'X'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Compute', 'NOUN'), ('FOLLOW', 'NOUN'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('F', 'NOUN'), (')', 'PUNCT'), ('T’\uf0e0*', 'NOUN'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('F', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('T’', 'PROPN'), ('\uf0e0', 'PROPN'), ('*', 'PUNCT'), ('F', 'PROPN'), ('T’', 'X'), ('A', 'DET'), ('\uf0e0', 'X'), ('B', 'NOUN'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('Rule', 'NOUN'), ('3', 'NUM'), ('Rule', 'NOUN'), ('2', 'NUM'), ('T', 'PROPN'), ('’', 'PUNCT'), ('\uf0e0', 'NOUN'), ('*', 'PUNCT'), ('F', 'X'), ('T’', 'X'), ('A', 'X'), ('\uf0e0', 'X'), ('B', 'X'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('a=', 'X'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('TE', 'PROPN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('M[E', 'PROPN'), (',', 'PUNCT'), ('(', 'PUNCT'), (']', 'PUNCT'), ('=E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('M[', 'X'), ('E,', 'X'), ('id', 'NOUN'), (']', 'PUNCT'), ('=E\uf0e0TE', 'NOUN'), ('’', 'PUNCT'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM')] 

 XPOS tags are: 
>> [('TE', 'NNP'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’\uf0e0*FT', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'LS'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'GW'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('F', 'NNP'), (')', '-RRB-'), ('T\uf0e0FT', 'NN'), ('’', "''"), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', '-LRB-'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', 'CD'), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('F', 'NN'), (')', '-RRB-'), ('={', ','), ('*', 'NFP'), (',', ','), ('T', 'NN'), ('\uf0e0', 'NN'), ('F', 'NN'), ('T’', 'FW'), ('A', 'NN'), ('\uf0e0', ','), ('B', 'NN'), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('T', 'NN'), ('\uf0e0', ','), ('F', 'NN'), ('T’', 'FW'), ('A', '-LRB-'), ('\uf0e0', 'GW'), ('B', 'GW'), ('Rule', 'NN'), ('3', 'CD'), ('Rule', 'NN'), ('2', 'CD'), ('E\uf0e0TE', 'NN'), ('’', ','), ('E’\uf0e0+TE', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('T\uf0e0FT', 'GW'), ('’', 'GW'), ('T’\uf0e0*FT', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'FW'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'GW'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Compute', 'NN'), ('FOLLOW', 'NN'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('F', 'NN'), (')', '-RRB-'), ('T’\uf0e0*', 'NN'), ('FT', 'NN'), ('’', "''"), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', ','), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', ','), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('F', 'NN'), (')', '-RRB-'), ('={', ','), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('T’', 'NNP'), ('\uf0e0', 'NNP'), ('*', 'NFP'), ('F', 'NNP'), ('T’', 'FW'), ('A', 'DT'), ('\uf0e0', 'FW'), ('B', 'NN'), ('$', '$'), (',', ','), (')', '-RRB-'), ('Rule', 'NN'), ('3', 'CD'), ('Rule', 'NN'), ('2', 'CD'), ('T', 'NNP'), ('’', "''"), ('\uf0e0', 'NN'), ('*', 'NFP'), ('F', 'FW'), ('T’', 'FW'), ('A', 'FW'), ('\uf0e0', 'FW'), ('B', 'FW'), ('E\uf0e0TE', 'FW'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', '-LRB-'), ('T\uf0e0FT', 'FW'), ('’', ','), ('T’\uf0e0*FT', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'LS'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('a=', 'FW'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('TE', 'NNP'), ('’', "''"), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('M[E', 'NNP'), (',', ','), ('(', '-LRB-'), (']', '-RRB-'), ('=E\uf0e0TE', 'FW'), ('’', "''"), ('M[', 'FW'), ('E,', 'FW'), ('id', 'NN'), (']', '-RRB-'), ('=E\uf0e0TE', 'NN'), ('’', '``'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', '-LRB-'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('Rule', 'NN'), (':', ':'), ('2', 'CD')] 

 Lemmas are: 
>> [('TE', 'TE'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'F'), (')', ')'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('={', '={'), ('*', '*'), (',', ','), ('T', 'T'), ('\uf0e0', '\uf0e0'), ('F', 'f'), ('T’', 't’'), ('A', 'a'), ('\uf0e0', "''"), ('B', 'b'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('T', 'T'), ('\uf0e0', "''"), ('F', 'f'), ('T’', 't’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Compute', 'compute'), ('FOLLOW', 'follow'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('FOLLOW', 'follow'), ('(', '('), ('F', 'f'), (')', ')'), ('={', '={'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('T’', 'T’'), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T’', 't’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'b'), ('$', '$'), (',', ','), (')', ')'), ('Rule', 'rule'), ('3', '3'), ('Rule', 'rule'), ('2', '2'), ('T', 'T'), ('’', "'"), ('\uf0e0', '\uf0e0'), ('*', '*'), ('F', 'F'), ('T’', 't’'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('B', 'B'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', "''"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('TE', 'TE'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M[E', 'M[E'), (',', ','), ('(', '('), (']', ']'), ('=E\uf0e0TE', '=e\uf0e0te'), ('’', "'"), ('M[', 'M['), ('E,', 'E,'), ('id', 'id'), (']', ']'), ('=E\uf0e0TE', '=e\uf0e0te'), ('’', "'"), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('Rule', 'rule'), (':', ':'), ('2', '2')] 

 Dependency tags are: 
>> [(('TE', 'root'), 'root'), (('’', 'TE'), 'punct'), (('|', 'TE'), 'punct'), (('ϵ', 'TE'), 'flat'), (('T\uf0e0FT', 'TE'), 'flat'), (('’', 'T\uf0e0FT'), 'punct'), (('T’\uf0e0*FT', 'T\uf0e0FT'), 'flat'), (('’', 'T’\uf0e0*FT'), 'punct'), (('|', 'T’\uf0e0*FT'), 'punct'), (('ϵ', 'E'), 'dep'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'id'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'TE'), 'conj'), (('}', 'id'), 'punct'), (('Prof.', 'id'), 'conj'), (('Jay', 'id'), 'flat'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', 'PS'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'TE'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'TE'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'TE'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'TE'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'TE'), 'conj'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'TE'), 'punct'), (('LL', 'Step'), 'compound'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'TE'), 'conj'), (('2', 'Step'), 'compound'), ((':', 'TE'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'F'), 'compound'), (('(', 'F'), 'punct'), (('F', 'T\uf0e0FT'), 'compound'), ((')', 'F'), 'punct'), (('T\uf0e0FT', 'Step'), 'appos'), (('’', 'Follow'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'amod'), (('Follow', 'E'), 'compound'), (('E', 'TE'), 'conj'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '$'), 'dep'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'TE'), 'conj'), ((',', 'E’'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', 'TE'), 'conj'), (('{', '+'), 'punct'), (('+', '𝜖'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'nummod'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'TE'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', 'T’\uf0e0*FT'), 'conj'), (('{', 'ϵ'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'ϵ'), 'conj'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'advmod'), ((',', '$'), 'punct'), (('$', 'ϵ'), 'conj'), ((',', 'T’'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', 'TE'), 'conj'), (('{', 'T’'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'nummod'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'T\uf0e0FT'), 'conj'), ((',', '$'), 'dep'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', 'TE'), 'conj'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'TE'), 'conj'), (('}', 'id'), 'punct'), (('FOLLOW', 'F'), 'compound'), (('(', 'F'), 'punct'), (('F', 'id'), 'dep'), ((')', 'F'), 'punct'), (('={', 'F'), 'punct'), (('*', 'F'), 'punct'), ((',', 'F'), 'punct'), (('T', 'F'), 'dep'), (('\uf0e0', 'F'), 'compound'), (('F', 'TE'), 'conj'), (('T’', 'A'), 'compound'), (('A', 'F'), 'dep'), (('\uf0e0', 'B'), 'punct'), (('B', 'F'), 'dep'), (('+', '$'), 'advmod'), ((',', '$'), 'punct'), (('$', 'F'), 'conj'), ((',', 'T'), 'punct'), ((')', '$'), 'punct'), (('T', '$'), 'dep'), (('\uf0e0', 'T'), 'punct'), (('F', 'TE'), 'conj'), (('T’', 'F'), 'dep'), (('A', 'Rule'), 'punct'), (('\uf0e0', 'Rule'), 'compound'), (('B', 'Rule'), 'compound'), (('Rule', 'F'), 'dep'), (('3', 'Rule'), 'nummod'), (('Rule', 'Rule'), 'compound'), (('2', 'E\uf0e0TE'), 'nummod'), (('E\uf0e0TE', 'Rule'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'Rule'), 'dep'), (('’', 'Rule'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'TE'), 'conj'), (('T\uf0e0FT', 'ϵ'), 'dep'), (('’', 'T\uf0e0FT'), 'case'), (('T’\uf0e0*FT', 'ϵ'), 'dep'), (('’', 'ϵ'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'TE'), 'dep'), ((')', 'Rule'), 'punct'), (('|', 'id'), 'punct'), (('id', 'TE'), 'conj'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'id'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'dep'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'LL'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'TE'), 'conj'), (('2', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Compute', 'FOLLOW'), 'compound'), (('FOLLOW', 'FOLLOW'), 'compound'), (('FOLLOW', 'Step'), 'compound'), (('(', 'F'), 'punct'), (('F', 'FOLLOW'), 'dep'), ((')', 'F'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'FOLLOW'), 'dep'), (('’', 'FT'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'amod'), (('Follow', 'FT'), 'compound'), (('E', 'Follow'), 'obj'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', '$'), 'conj'), (('{', '+'), 'punct'), (('+', '𝜖'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'nummod'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', '$'), 'dep'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', '$'), 'dep'), (('{', 'T’'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'dep'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', '𝜖'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'id'), 'punct'), (('{', 'F'), 'punct'), (('*', '$'), 'punct'), ((',', '+'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'F'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'FOLLOW'), 'punct'), (('FOLLOW', '$'), 'dep'), (('(', 'F'), 'punct'), (('F', 'FOLLOW'), 'dep'), ((')', 'F'), 'punct'), (('={', 'FOLLOW'), 'punct'), (('*', '\uf0e0'), 'punct'), ((',', '+'), 'punct'), (('+', '\uf0e0'), 'dep'), ((',', '+'), 'punct'), (('T’', '\uf0e0'), 'compound'), (('\uf0e0', 'FOLLOW'), 'conj'), (('*', 'F'), 'punct'), (('F', '\uf0e0'), 'compound'), (('T’', 'F'), 'dep'), (('A', '$'), 'det'), (('\uf0e0', '$'), 'compound'), (('B', '$'), 'compound'), (('$', '\uf0e0'), 'dep'), ((',', 'Rule'), 'punct'), ((')', '$'), 'punct'), (('Rule', '\uf0e0'), 'compound'), (('3', 'Rule'), 'nummod'), (('Rule', 'Rule'), 'compound'), (('2', 'T'), 'nummod'), (('T', 'Rule'), 'compound'), (('’', 'T'), 'punct'), (('\uf0e0', 'Rule'), 'punct'), (('*', 'F'), 'punct'), (('F', '\uf0e0'), 'compound'), (('T’', 'F'), 'dep'), (('A', 'F'), 'dep'), (('\uf0e0', 'B'), 'compound'), (('B', 'E’\uf0e0+TE'), 'compound'), (('E\uf0e0TE', 'E’\uf0e0+TE'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'F'), 'nmod'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'T\uf0e0FT'), 'punct'), (('ϵ', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', 'E’\uf0e0+TE'), 'conj'), (('’', 'T\uf0e0FT'), 'punct'), (('T’\uf0e0*FT', 'T\uf0e0FT'), 'conj'), (('’', 'T\uf0e0FT'), 'punct'), (('|', 'F\uf0e0('), 'punct'), (('ϵ', 'F\uf0e0('), 'dep'), (('F\uf0e0(', 'id'), 'dep'), (('E', 'F\uf0e0('), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'T\uf0e0FT'), 'conj'), (('}', 'id'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'compound'), (('Dhamsaniya', 'Jay'), 'compound'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Construct'), 'punct'), (('Construct', 'Step'), 'parataxis'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'obj'), (('E\uf0e0TE', 'table'), 'appos'), (('’', 'table'), 'punct'), (('a=', 'table'), 'appos'), (('FIRST', 'table'), 'amod'), (('(', 'TE'), 'punct'), (('TE', 'FIRST'), 'appos'), (('’', 'TE'), 'punct'), ((')', 'TE'), 'punct'), (('=', 'table'), 'punct'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '='), 'parataxis'), (('}', 'id'), 'punct'), (('M[E', 'id'), 'conj'), ((',', 'id'), 'punct'), (('(', '=E\uf0e0TE'), 'punct'), ((']', '=E\uf0e0TE'), 'punct'), (('=E\uf0e0TE', 'id'), 'conj'), (('’', '=E\uf0e0TE'), 'punct'), (('M[', 'id'), 'compound'), (('E,', 'id'), 'compound'), (('id', 'id'), 'conj'), ((']', 'id'), 'punct'), (('=E\uf0e0TE', 'id'), 'punct'), (('’', 'Follow'), 'punct'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'id'), 'parataxis'), (('E', 'Follow'), 'obj'), (('{', 'Follow'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'parataxis'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', 'E’'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'nummod'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'parataxis'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T', '$'), 'dep'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'parataxis'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T’', '$'), 'dep'), (('{', 'T’'), 'punct'), (('*', 'T’'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'nummod'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'T’'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'appos'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', 'id'), 'punct'), ((',', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'Rule'), 'punct'), (('Rule', '$'), 'appos'), ((':', 'Rule'), 'punct'), (('2', 'Rule'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL')]

========================== Sentence 101 ===========================

 A  a = first() M[A,a] = A  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’						 	T						 	T’						 	F						    ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        E’+TE’ a=FIRST(+TE’)={ + } M[E’,+]=E’+TE’  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’				 	T						 	T’						 	F						  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        E’𝜖 b=FOLLOW(E’)={ $,) } M[E’,$]=E’𝜖 M[E’,)]= 

Tokens are: 
>> ['A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'T', 'T’', 'F', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'E’\uf0e0+TE', '’', 'a=', 'FIRST', '(', '+', 'TE', '’', ')', '=', '{', '+', '}', 'M[', 'E', '’', ',', '+]=E’\uf0e0+TE’', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'T', 'T’', 'F', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'E’\uf0e0𝜖', 'b=', 'FOLLOW', '(', 'E’', ')', '=', '{', '$', ',', ')', '}', 'M', '[', 'E', '’', ',', '$', ']', '=E', '’\uf0e0𝜖', 'M[', 'E', '’', ',', ')', ']', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('a', 'PROPN'), ('=', 'PUNCT'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'PUNCT'), ('A', 'NOUN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'X'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’', 'X'), ('T', 'X'), ('T’', 'X'), ('F', 'X'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('E’\uf0e0+TE', 'PROPN'), ('’', 'PUNCT'), ('a=', 'X'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('+', 'SYM'), ('TE', 'X'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), ('}', 'PUNCT'), ('M[', 'X'), ('E', 'X'), ('’', 'PUNCT'), (',', 'PUNCT'), ('+]=E’\uf0e0+TE’', 'PUNCT'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'PROPN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’', 'X'), ('E’\uf0e0+TE', 'PROPN'), ('’', 'PUNCT'), ('T', 'X'), ('T’', 'X'), ('F', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'PROPN'), ('a', 'PUNCT'), ('=', 'PUNCT'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'X'), ('A', 'PROPN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('E’\uf0e0𝜖', 'PROPN'), ('b=', 'X'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('E’', 'PROPN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('M', 'NUM'), ('[', 'PUNCT'), ('E', 'NOUN'), ('’', 'PUNCT'), (',', 'PUNCT'), ('$', 'SYM'), (']', 'PUNCT'), ('=E', 'NOUN'), ('’\uf0e0𝜖', 'PUNCT'), ('M[', 'X'), ('E', 'X'), ('’', 'PUNCT'), (',', 'PUNCT'), (')', 'PUNCT'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('a', 'NNP'), ('=', ','), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', '-LRB-'), ('A', 'NN'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'FW'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E\uf0e0TE', 'FW'), ('’', "''"), ('E’', 'FW'), ('T', 'FW'), ('T’', 'FW'), ('F', 'FW'), ('E\uf0e0TE', 'FW'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', ','), ('T\uf0e0FT', 'FW'), ('’', ','), ('T’\uf0e0*FT', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'NFP'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('E’\uf0e0+TE', 'NNP'), ('’', "''"), ('a=', 'FW'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('+', 'SYM'), ('TE', 'FW'), ('’', "''"), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('+', 'SYM'), ('}', 'NFP'), ('M[', 'FW'), ('E', 'FW'), ('’', "''"), (',', ','), ('+]=E’\uf0e0+TE’', 'NFP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’', 'FW'), ('E’\uf0e0+TE', 'NNP'), ('’', "''"), ('T', 'FW'), ('T’', 'FW'), ('F', 'NN'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('a', ','), ('=', ','), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'FW'), ('A', 'NNP'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', ','), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', 'FW'), ('T’\uf0e0*', 'FW'), ('FT', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('E’\uf0e0𝜖', 'NNP'), ('b=', 'FW'), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('E’', 'NNP'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('M', 'CD'), ('[', '-LRB-'), ('E', 'NN'), ('’', "''"), (',', ','), ('$', '$'), (']', '-RRB-'), ('=E', 'NN'), ('’\uf0e0𝜖', '-LRB-'), ('M[', 'FW'), ('E', 'FW'), ('’', "''"), (',', ','), (')', '-RRB-'), (']', '-RRB-'), ('=', 'NFP')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'a'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’', 'e’'), ('T', 'T'), ('T’', 't’'), ('F', 'F'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', "''"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'"), ('|', '|'), ('ϵ', "''"), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('E’\uf0e0+TE', 'E’\uf0e0+TE'), ('’', "'"), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('+', '+'), ('TE', 'TE'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('+', '+'), ('}', '}'), ('M[', 'M['), ('E', 'E'), ('’', "'"), (',', ','), ('+]=E’\uf0e0+TE’', '+]=E’\uf0e0+TE’'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’', 'e’'), ('E’\uf0e0+TE', 'E’\uf0e0+TE'), ('’', "'"), ('T', 'T'), ('T’', 't’'), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('E’\uf0e0𝜖', 'E’\uf0e0𝜖'), ('b=', 'b='), ('FOLLOW', 'follow'), ('(', '('), ('E’', 'E’'), (')', ')'), ('=', '='), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'm'), ('[', '['), ('E', 'e'), ('’', "'"), (',', ','), ('$', '$'), (']', ']'), ('=E', '=E'), ('’\uf0e0𝜖', '’\uf0e0𝜖'), ('M[', 'M['), ('E', 'E'), ('’', "'"), (',', ','), (')', ')'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'root'), 'root'), (('a', 'A\uf0e0'), 'flat'), (('=', 'A\uf0e0'), 'punct'), (('first', 'A\uf0e0'), 'amod'), (('(', 'A'), 'punct'), ((')', 'A'), 'punct'), (('M[', 'A'), 'punct'), (('A', 'first'), 'conj'), ((',', 'a'), 'punct'), (('a', 'A'), 'dep'), ((']', 'a'), 'punct'), (('=', 'A'), 'punct'), (('A\uf0e0', 'id'), 'compound'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'A'), 'conj'), (('+', 'id'), 'cc'), (('*', 'id'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'A'), 'conj'), (('E', '$'), 'flat'), (('E\uf0e0TE', 'E\uf0e0TE'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'conj'), (('’', 'E\uf0e0TE'), 'punct'), (('E’', 'E\uf0e0TE'), 'conj'), (('T', 'E\uf0e0TE'), 'conj'), (('T’', 'E\uf0e0TE'), 'conj'), (('F', 'E’\uf0e0+TE'), 'compound'), (('E\uf0e0TE', 'E’\uf0e0+TE'), 'dep'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', '$'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'T\uf0e0FT'), 'punct'), (('ϵ', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', '$'), 'conj'), (('’', 'T’\uf0e0*FT'), 'punct'), (('T’\uf0e0*FT', '$'), 'conj'), (('’', 'T’\uf0e0*FT'), 'punct'), (('|', '$'), 'punct'), (('ϵ', 'E'), 'punct'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'A'), 'conj'), ((')', 'E'), 'punct'), (('|', 'A\uf0e0'), 'punct'), (('id', 'A\uf0e0'), 'conj'), (('Prof.', 'id'), 'dep'), (('Jay', 'id'), 'dep'), (('R', '#'), 'dep'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'A\uf0e0'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'A\uf0e0'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'id'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', 'A'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'A'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'A'), 'conj'), (('-', 'Example'), 'punct'), (('3', 'A'), 'dep'), ((':', 'A'), 'punct'), (('LL', 'Step'), 'compound'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'A'), 'conj'), (('3', 'Step'), 'nummod'), ((':', 'A\uf0e0'), 'punct'), (('Construct', 'A\uf0e0'), 'conj'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'obj'), (('E’\uf0e0+TE', 'table'), 'dep'), (('’', 'E’\uf0e0+TE'), 'punct'), (('a=', 'table'), 'conj'), (('FIRST', 'TE'), 'amod'), (('(', 'TE'), 'punct'), (('+', 'TE'), 'cc'), (('TE', 'A'), 'conj'), (('’', 'TE'), 'punct'), ((')', 'TE'), 'punct'), (('=', 'A'), 'conj'), (('{', 'A'), 'punct'), (('+', 'M['), 'dep'), (('}', 'A'), 'punct'), (('M[', 'A\uf0e0'), 'conj'), (('E', 'M['), 'flat'), (('’', 'E'), 'punct'), ((',', 'A\uf0e0'), 'punct'), (('+]=E’\uf0e0+TE’', 'A\uf0e0'), 'punct'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'A\uf0e0'), 'conj'), (('+', 'id'), 'cc'), (('*', '$'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'A'), 'conj'), (('E', '$'), 'flat'), (('E\uf0e0TE', '$'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'dep'), (('’', 'E’'), 'punct'), (('E’', 'E\uf0e0TE'), 'conj'), (('E’\uf0e0+TE', 'E’'), 'flat'), (('’', 'E’\uf0e0+TE'), 'punct'), (('T', 'Rule'), 'compound'), (('T’', 'Rule'), 'dep'), (('F', 'Rule'), 'compound'), (('Rule', 'E\uf0e0TE'), 'conj'), ((':', 'Rule'), 'punct'), (('2', 'A\uf0e0'), 'nummod'), (('A\uf0e0', 'Rule'), 'dep'), (('a', 'A\uf0e0'), 'punct'), (('=', 'A\uf0e0'), 'punct'), (('first', 'M['), 'amod'), (('(', 'M['), 'punct'), ((')', 'M['), 'punct'), (('M[', 'Follow'), 'dep'), (('A', 'M['), 'flat'), ((',', 'a'), 'punct'), (('a', 'M['), 'dep'), ((']', 'a'), 'punct'), (('=', 'A\uf0e0'), 'punct'), (('A\uf0e0', 'Follow'), 'nsubj'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'A\uf0e0'), 'conj'), (('E', 'Follow'), 'obj'), (('{', 'Follow'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', '𝜖'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'dep'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'dep'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T', '$'), 'dep'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', '$'), 'dep'), (('{', 'T’'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'conj'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '𝜖'), 'parataxis'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', 'id'), 'punct'), ((',', '+'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'F'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'parataxis'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'E’\uf0e0+TE'), 'punct'), (('ϵ', 'E’\uf0e0+TE'), 'conj'), (('T\uf0e0FT', 'ϵ'), 'flat'), (('’', 'ϵ'), 'case'), (('T’\uf0e0*', 'ϵ'), 'flat'), (('FT', 'T’\uf0e0*'), 'compound'), (('’', 'T’\uf0e0*'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'E’\uf0e0+TE'), 'conj'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'E’\uf0e0+TE'), 'conj'), (('Prof.', 'id'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nmod:tmod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Construct'), 'punct'), (('Construct', 'Step'), 'parataxis'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'obj'), (('E’\uf0e0𝜖', 'table'), 'appos'), (('b=', 'table'), 'appos'), (('FOLLOW', 'table'), 'appos'), (('(', 'E’'), 'punct'), (('E’', 'FOLLOW'), 'appos'), ((')', 'E’'), 'punct'), (('=', 'table'), 'punct'), (('{', '$'), 'punct'), (('$', 'table'), 'appos'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'M'), 'punct'), (('M', '$'), 'appos'), (('[', 'E'), 'punct'), (('E', 'M'), 'appos'), (('’', 'E'), 'punct'), ((',', '$'), 'punct'), (('$', 'E'), 'appos'), ((']', '$'), 'punct'), (('=E', '$'), 'appos'), (('’\uf0e0𝜖', 'M['), 'punct'), (('M[', '$'), 'dep'), (('E', 'M['), 'flat'), (('’', 'M['), 'punct'), ((',', 'M['), 'punct'), ((')', 'E'), 'punct'), ((']', 'E'), 'punct'), (('=', 'M'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 102 ===========================

 E’𝜖  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T						 	T’						 	F						  Rule: 3 

Tokens are: 
>> ['E’\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T’', 'F', 'Rule', ':', '3'] 

 UPOS tags are: 
>> [('E’\uf0e0𝜖', 'AUX'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’', 'PROPN'), ('E’\uf0e0+TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T’', 'X'), ('F', 'X'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('3', 'X')] 

 XPOS tags are: 
>> [('E’\uf0e0𝜖', 'VB'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’', 'NNP'), ('E’\uf0e0+TE', 'NNP'), ('’', "''"), ('E’\uf0e0𝜖', 'FW'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T’', 'FW'), ('F', 'FW'), ('Rule', 'NN'), (':', ':'), ('3', 'ADD')] 

 Lemmas are: 
>> [('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’', 'E’'), ('E’\uf0e0+TE', 'E’\uf0e0+TE'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T’', 't’'), ('F', 'F'), ('Rule', 'rule'), (':', ':'), ('3', '3')] 

 Dependency tags are: 
>> [(('E’\uf0e0𝜖', 'id'), 'aux'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'root'), 'root'), (('+', 'id'), 'advmod'), (('*', '$'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'id'), 'list'), (('E', '$'), 'nummod'), (('E\uf0e0TE', '$'), 'flat'), (('’', '$'), 'punct'), (('E\uf0e0TE', 'id'), 'list'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’', 'E’\uf0e0+TE'), 'compound'), (('E’\uf0e0+TE', '$'), 'appos'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0𝜖', 'E’\uf0e0+TE'), 'flat'), (('E’\uf0e0𝜖', 'E’\uf0e0+TE'), 'flat'), (('T', 'E’\uf0e0+TE'), 'flat'), (('T’', 'Rule'), 'compound'), (('F', 'Rule'), 'compound'), (('Rule', 'id'), 'list'), ((':', 'Rule'), 'punct'), (('3', 'Rule'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 103 ===========================

 A  b = follow(A) M[A,b] = A    	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        TFT’ a=FIRST(FT’)={ (,id } M[T,(]=TFT’ M[T,id]= 

Tokens are: 
>> ['A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'T\uf0e0FT', '’', 'a=', 'FIRST', '(', 'FT', '’', ')', '={', '(', ',', 'id', '}', 'M[', 'T', ',', '(', ']', '=', 'T\uf0e0FT', '’', 'M[', 'T', ',', 'id', ']', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('b', 'NUM'), ('=', 'PUNCT'), ('follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('M[', 'NOUN'), ('A', 'NOUN'), (',', 'PUNCT'), ('b', 'NUM'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('First', 'ADV'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'X'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('T\uf0e0FT', 'PROPN'), ('’', 'PUNCT'), ('a=', 'PROPN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('FT', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('={', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('M[', 'X'), ('T', 'X'), (',', 'PUNCT'), ('(', 'PUNCT'), (']', 'PUNCT'), ('=', 'PUNCT'), ('T\uf0e0FT', 'NOUN'), ('’', 'PUNCT'), ('M[', 'X'), ('T', 'X'), (',', 'PUNCT'), ('id', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('b', 'CD'), ('=', ','), ('follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('M[', 'NN'), ('A', 'NN'), (',', ','), ('b', 'LS'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('First', 'RB'), ('Follow', 'VB'), ('E', 'NN'), ('{', ','), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', ','), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', ','), ('T’\uf0e0*', 'FW'), ('FT', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'GW'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('T\uf0e0FT', 'NNP'), ('’', "''"), ('a=', 'NNP'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('FT', 'NN'), ('’', "''"), (')', '-RRB-'), ('={', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('M[', 'FW'), ('T', 'FW'), (',', ','), ('(', '-LRB-'), (']', '-RRB-'), ('=', ','), ('T\uf0e0FT', 'NN'), ('’', "''"), ('M[', 'FW'), ('T', 'NN'), (',', ','), ('id', 'NN'), (']', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M[', 'M['), ('A', 'a'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', "'"), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('FT', 'ft'), ('’', "'"), (')', ')'), ('={', '={'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('M[', 'M['), ('T', 'T'), (',', ','), ('(', '('), (']', ']'), ('=', '='), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('M[', 'M['), ('T', 'T'), (',', ','), ('id', 'id'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'b'), 'compound'), (('b', 'root'), 'root'), (('=', 'b'), 'punct'), (('follow', 'b'), 'appos'), (('(', 'A'), 'punct'), (('A', 'A'), 'nummod'), ((')', 'A'), 'punct'), (('M[', 'A'), 'compound'), (('A', 'follow'), 'conj'), ((',', 'b'), 'punct'), (('b', 'Follow'), 'nummod'), ((']', 'b'), 'punct'), (('=', 'A'), 'punct'), (('A\uf0e0', 'Follow'), 'nsubj'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'b'), 'parataxis'), (('E', 'Follow'), 'obj'), (('{', 'E'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'parataxis'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', 'id'), 'punct'), (('}', 'E’'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', 'E’'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', 'id'), 'conj'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', 'id'), 'conj'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'id'), 'conj'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T’', 'follow'), 'conj'), (('{', '$'), 'punct'), (('*', '$'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'conj'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'follow'), 'conj'), ((',', '$'), 'punct'), ((')', 'id'), 'punct'), (('}', '$'), 'punct'), (('F', 'A'), 'conj'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'A\uf0e0'), 'parataxis'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', 'id'), 'punct'), ((',', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'A'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'b'), 'punct'), (('E\uf0e0TE', 'A'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'parataxis'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'E’\uf0e0+TE'), 'punct'), (('ϵ', 'E’\uf0e0+TE'), 'flat'), (('T\uf0e0FT', 'E’\uf0e0+TE'), 'flat'), (('’', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'E’\uf0e0+TE'), 'conj'), (('’', 'FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'id'), 'dep'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'A\uf0e0'), 'conj'), (('Prof.', 'id'), 'flat'), (('Jay', 'id'), 'flat'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Construct'), 'punct'), (('Construct', 'Step'), 'appos'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'obj'), (('T\uf0e0FT', 'table'), 'appos'), (('’', 'table'), 'punct'), (('a=', 'table'), 'appos'), (('FIRST', 'table'), 'amod'), (('(', 'FT'), 'punct'), (('FT', 'FIRST'), 'appos'), (('’', 'FT'), 'punct'), ((')', 'FT'), 'punct'), (('={', 'FT'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'table'), 'appos'), (('}', 'id'), 'punct'), (('M[', 'id'), 'dep'), (('T', 'id'), 'dep'), ((',', 'id'), 'punct'), (('(', 'T\uf0e0FT'), 'punct'), ((']', 'T\uf0e0FT'), 'punct'), (('=', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', 'id'), 'dep'), (('’', 'T\uf0e0FT'), 'punct'), (('M[', 'T\uf0e0FT'), 'flat'), (('T', 'T\uf0e0FT'), 'dep'), ((',', 'id'), 'punct'), (('id', 'T\uf0e0FT'), 'conj'), ((']', 'id'), 'punct'), (('=', 'id'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 104 ===========================

 TFT’   	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’						 	F						    	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id  Rule: 2 

Tokens are: 
>> ['T\uf0e0FT', '’', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T’', 'F', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Rule', ':', '2'] 

 UPOS tags are: 
>> [('T\uf0e0FT', 'PROPN'), ('’', 'PUNCT'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’', 'X'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’', 'PROPN'), ('F', 'X'), ('NT', 'X'), ('First', 'ADJ'), ('Follow', 'NOUN'), ('E', 'X'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'NOUN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’\uf0e0*FT', 'X'), ('’', 'X'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'X')] 

 XPOS tags are: 
>> [('T\uf0e0FT', 'NNP'), ('’', '``'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’', 'FW'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('E’\uf0e0𝜖', 'FW'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’', 'NNP'), ('F', 'FW'), ('NT', 'LS'), ('First', 'JJ'), ('Follow', 'NN'), ('E', 'FW'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', '-RRB-'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('𝜖', 'CD'), ('}', 'NFP'), ('{', 'NFP'), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', '-RRB-'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', 'NFP'), ('E\uf0e0TE', 'NN'), ('’', 'HYPH'), ('E’\uf0e0+TE', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('T\uf0e0FT', 'GW'), ('’', 'GW'), ('T’\uf0e0*FT', 'NN'), ('’', 'GW'), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Rule', 'NN'), (':', ':'), ('2', 'ADD')] 

 Lemmas are: 
>> [('T\uf0e0FT', 'T\uf0e0FT'), ('’', "'"), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’', 'e’'), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’', 'T’'), ('F', 'F'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'E'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’\uf0e0*FT', 't’\uf0e0*ft'), ('’', "'s"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Rule', 'rule'), (':', ':'), ('2', '2')] 

 Dependency tags are: 
>> [(('T\uf0e0FT', 'root'), 'root'), (('’', 'id'), 'punct'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'T\uf0e0FT'), 'appos'), (('+', 'id'), 'punct'), (('*', 'id'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'id'), 'conj'), (('E', '$'), 'nummod'), (('E\uf0e0TE', '$'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'conj'), (('’', 'E’'), 'punct'), (('E’', 'E\uf0e0TE'), 'appos'), (('E’\uf0e0+TE', 'E’'), 'flat'), (('’', 'E’'), 'punct'), (('E’\uf0e0𝜖', 'E\uf0e0TE'), 'flat'), (('E’\uf0e0𝜖', 'E\uf0e0TE'), 'flat'), (('T', 'E\uf0e0TE'), 'flat'), (('T\uf0e0FT', 'E’'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('T\uf0e0FT', 'E\uf0e0TE'), 'appos'), (('’', 'id'), 'punct'), (('T’', 'id'), 'conj'), (('F', 'id'), 'conj'), (('NT', 'E'), 'advmod'), (('First', 'E'), 'amod'), (('Follow', 'id'), 'conj'), (('E', 'id'), 'conj'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'id'), 'parataxis'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', 'id'), 'punct'), (('}', 'id'), 'punct'), (('E’', 'T\uf0e0FT'), 'parataxis'), (('{', 'T\uf0e0FT'), 'punct'), (('+', 'E’'), 'advmod'), ((',', 'T\uf0e0FT'), 'punct'), (('𝜖', 'T\uf0e0FT'), 'list'), (('}', 'T\uf0e0FT'), 'punct'), (('{', 'T\uf0e0FT'), 'punct'), (('$', 'T\uf0e0FT'), 'list'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', 'T\uf0e0FT'), 'list'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'appos'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('+', '$'), 'advmod'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', '$'), 'appos'), (('{', 'T’'), 'punct'), (('*', 'T’'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'nummod'), (('}', 'T’'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'advmod'), ((',', '$'), 'punct'), (('$', 'T’'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'appos'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', 'id'), 'punct'), ((',', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'appos'), (('’', 'E\uf0e0TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'E\uf0e0TE'), 'flat'), (('T\uf0e0FT', 'ϵ'), 'flat'), (('’', 'ϵ'), 'case'), (('T’\uf0e0*FT', 'ϵ'), 'flat'), (('’', 'T\uf0e0FT'), 'case'), (('|', 'E'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'T’\uf0e0*FT'), 'appos'), ((')', 'E'), 'punct'), (('|', 'Rule'), 'punct'), (('id', 'Rule'), 'compound'), (('Rule', 'T\uf0e0FT'), 'list'), ((':', 'Rule'), 'punct'), (('2', 'Rule'), 'appos')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 105 ===========================

 A  a = first() M[A,a] = A     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table        T’*FT’ a=FIRST(*FT’)={ * } M[T’,*]=T’*FT’  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’			T’*FT’			 	F						  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table       T’𝜖 b=FOLLOW(T’)={ +,$,) } M[T’,+]=T’𝜖 M[T’,$]=T’𝜖 M[T’,)]= 

Tokens are: 
>> ['A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'T’\uf0e0*FT', '’', 'a=', 'FIRST', '(', '*', 'FT', '’', ')', '=', '{', '*', '}', 'M', '[', 'T', '’', ',', '*]=', 'T’\uf0e0*', 'FT', '’', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T’', 'T’\uf0e0*', 'FT', '’', 'F', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'T', '’\uf0e0𝜖', 'b=', 'FOLLOW', '(', 'T’', ')', '={', '+', ',', '$', ',', ')', '}', 'M', '[', 'T', '’', ',', '+]', '=', 'T’\uf0e0𝜖', 'M[', 'T', '’', ',', '$', ']', '=', 'T', '’\uf0e0𝜖', 'M[', 'T', '’', ',', ')', ']', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('a', 'PROPN'), ('=', 'SYM'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'VERB'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('T’\uf0e0*FT', 'PROPN'), ('’', 'PUNCT'), ('a=', 'NOUN'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('*', 'PUNCT'), ('FT', 'NOUN'), ('’', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), ('}', 'PUNCT'), ('M', 'NUM'), ('[', 'PUNCT'), ('T', 'PROPN'), ('’', 'PUNCT'), (',', 'PUNCT'), ('*]=', 'PUNCT'), ('T’\uf0e0*', 'NOUN'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'X'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’', 'X'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('F', 'NOUN'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'PROPN'), ('a', 'PUNCT'), ('=', 'SYM'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'X'), ('A', 'PROPN'), (',', 'PUNCT'), ('a', 'SYM'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'NOUN'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('T', 'NOUN'), ('’\uf0e0𝜖', 'NOUN'), ('b=', 'PUNCT'), ('FOLLOW', 'NOUN'), ('(', 'PUNCT'), ('T’', 'NOUN'), (')', 'PUNCT'), ('={', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('M', 'NUM'), ('[', 'PUNCT'), ('T', 'X'), ('’', 'PUNCT'), (',', 'PUNCT'), ('+]', 'PUNCT'), ('=', 'PUNCT'), ('T’\uf0e0𝜖', 'X'), ('M[', 'X'), ('T', 'X'), ('’', 'PUNCT'), (',', 'PUNCT'), ('$', 'SYM'), (']', 'PUNCT'), ('=', 'PUNCT'), ('T', 'X'), ('’\uf0e0𝜖', 'X'), ('M[', 'X'), ('T', 'X'), ('’', 'PUNCT'), (',', 'PUNCT'), (')', 'PUNCT'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('a', 'NNP'), ('=', 'SYM'), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'NNP'), ('A', 'NNP'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ':'), ('A\uf0e0', 'NNP'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'VB'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('T’\uf0e0*FT', 'NNP'), ('’', "''"), ('a=', 'NN'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('*', 'NFP'), ('FT', 'NN'), ('’', "''"), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('*', 'NFP'), ('}', 'NFP'), ('M', 'CD'), ('[', '-LRB-'), ('T', 'NNP'), ('’', "''"), (',', ','), ('*]=', 'NFP'), ('T’\uf0e0*', 'NN'), ('FT', 'NN'), ('’', "''"), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'FW'), ('E\uf0e0TE', 'FW'), ('’', '``'), ('E\uf0e0TE', 'FW'), ('’', '``'), ('E’', 'FW'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('E’\uf0e0𝜖', 'FW'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’', 'FW'), ('T’\uf0e0*', 'FW'), ('FT', 'FW'), ('’', "''"), ('F', 'NN'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('a', ','), ('=', 'SYM'), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'FW'), ('A', 'NNP'), (',', ','), ('a', 'SYM'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', 'GW'), ('T’\uf0e0*', 'FW'), ('FT', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'GW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('T', 'NN'), ('’\uf0e0𝜖', 'NN'), ('b=', ','), ('FOLLOW', 'NN'), ('(', '-LRB-'), ('T’', 'NN'), (')', '-RRB-'), ('={', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('M', 'CD'), ('[', '-LRB-'), ('T', 'FW'), ('’', "''"), (',', ','), ('+]', 'NFP'), ('=', ','), ('T’\uf0e0𝜖', 'FW'), ('M[', 'FW'), ('T', 'FW'), ('’', "''"), (',', ','), ('$', '$'), (']', '-RRB-'), ('=', ','), ('T', 'FW'), ('’\uf0e0𝜖', 'FW'), ('M[', 'FW'), ('T', 'GW'), ('’', "''"), (',', ','), (')', '-RRB-'), (']', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('T’\uf0e0*FT', 'T’\uf0e0*FT'), ('’', "'"), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('*', '*'), ('FT', 'ft'), ('’', "'"), (')', ')'), ('=', '='), ('{', '{'), ('*', '*'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 'T'), ('’', "'"), (',', ','), ('*]=', '*]='), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’', 'e’'), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’', 't’'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('F', 'f'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('T', 'T'), ('’\uf0e0𝜖', '’\uf0e0𝜖'), ('b=', 'b='), ('FOLLOW', 'follow'), ('(', '('), ('T’', 't’'), (')', ')'), ('={', '={'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('M', 'm'), ('[', '['), ('T', 'T'), ('’', "'"), (',', ','), ('+]', '+]'), ('=', '='), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('M[', 'M['), ('T', 'T'), ('’', "'"), (',', ','), ('$', '$'), (']', ']'), ('=', '='), ('T', 'T'), ('’\uf0e0𝜖', '’\uf0e0𝜖'), ('M[', 'M['), ('T', 'T'), ('’', "'"), (',', ','), (')', ')'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', '='), 'nsubj'), (('a', '='), 'nsubj'), (('=', 'root'), 'root'), (('first', '='), 'obj'), (('(', 'M['), 'punct'), ((')', 'M['), 'punct'), (('M[', '='), 'obj'), (('A', 'M['), 'flat'), ((',', 'a'), 'punct'), (('a', 'M['), 'dep'), ((']', 'a'), 'punct'), (('=', 'M['), 'punct'), (('A\uf0e0', 'Prof.'), 'compound'), (('Prof.', 'Dhamsaniya'), 'compound'), (('Jay', 'Dhamsaniya'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'M['), 'conj'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'M['), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'A\uf0e0'), 'conj'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'M['), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'M['), 'conj'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'M['), 'conj'), (('-', '3'), 'case'), (('3', 'Example'), 'nmod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'dep'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'M['), 'conj'), (('3', 'Step'), 'nummod'), ((':', 'M['), 'punct'), (('Construct', 'Step'), 'dep'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'obj'), (('T’\uf0e0*FT', 'table'), 'compound'), (('’', 'table'), 'punct'), (('a=', 'M['), 'conj'), (('FIRST', 'M['), 'conj'), (('(', 'FT'), 'punct'), (('*', 'FT'), 'punct'), (('FT', 'M'), 'dep'), (('’', 'FT'), 'punct'), ((')', 'FT'), 'punct'), (('=', 'M['), 'punct'), (('{', 'M'), 'punct'), (('*', 'M'), 'punct'), (('}', 'M'), 'punct'), (('M', 'M['), 'conj'), (('[', 'T'), 'punct'), (('T', 'M'), 'dep'), (('’', 'T'), 'punct'), ((',', 'FT'), 'punct'), (('*]=', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'M['), 'conj'), (('’', 'FT'), 'punct'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'M['), 'conj'), (('+', 'id'), 'cc'), (('*', '$'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'M['), 'conj'), (('E', '$'), 'flat'), (('E\uf0e0TE', '$'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'dep'), (('’', 'E’'), 'punct'), (('E’', 'E\uf0e0TE'), 'compound'), (('E’\uf0e0+TE', 'E’'), 'flat'), (('’', 'E’'), 'punct'), (('E’\uf0e0𝜖', 'E\uf0e0TE'), 'flat'), (('E’\uf0e0𝜖', 'E\uf0e0TE'), 'flat'), (('T', 'T\uf0e0FT'), 'compound'), (('T\uf0e0FT', 'E\uf0e0TE'), 'flat'), (('’', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', 'T\uf0e0FT'), 'compound'), (('’', 'FT'), 'punct'), (('T’', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'T\uf0e0FT'), 'compound'), (('’', 'FT'), 'punct'), (('F', 'Rule'), 'compound'), (('Rule', 'FT'), 'dep'), ((':', 'Rule'), 'punct'), (('2', 'Rule'), 'dep'), (('A\uf0e0', '2'), 'flat'), (('a', '='), 'punct'), (('=', 'Rule'), 'parataxis'), (('first', '='), 'obj'), (('(', 'M['), 'punct'), ((')', 'M['), 'punct'), (('M[', '='), 'dep'), (('A', 'M['), 'flat'), ((',', 'a'), 'punct'), (('a', 'A'), 'dep'), ((']', 'a'), 'punct'), (('=', '='), 'punct'), (('A\uf0e0', 'Follow'), 'nsubj'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', '='), 'conj'), (('E', 'Follow'), 'obj'), (('{', 'Follow'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'A\uf0e0'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', '𝜖'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'dep'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'dep'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'A\uf0e0'), 'punct'), (('T', '$'), 'dep'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', '$'), 'dep'), (('{', 'T’'), 'punct'), (('*', '𝜖'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'conj'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '𝜖'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', 'id'), 'punct'), ((',', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'F'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'compound'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'parataxis'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'E’\uf0e0+TE'), 'punct'), (('ϵ', 'E’\uf0e0+TE'), 'compound'), (('T\uf0e0FT', 'ϵ'), 'flat'), (('’', 'T\uf0e0FT'), 'case'), (('T’\uf0e0*', 'T\uf0e0FT'), 'flat'), (('FT', 'ϵ'), 'flat'), (('’', 'FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'id'), 'dep'), (('F\uf0e0(', 'ϵ'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'ϵ'), 'punct'), (('|', 'id'), 'punct'), (('id', 'E\uf0e0TE'), 'parataxis'), (('Prof.', 'id'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Prof.'), 'flat'), (('B', 'Kagathara'), 'compound'), (('Kagathara', 'Prof.'), 'compound'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'LL'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Construct', 'table'), 'compound'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Step'), 'appos'), (('T', 'table'), 'punct'), (('’\uf0e0𝜖', 'table'), 'appos'), (('b=', 'table'), 'punct'), (('FOLLOW', 'table'), 'conj'), (('(', 'T’'), 'punct'), (('T’', 'FOLLOW'), 'appos'), ((')', 'T’'), 'punct'), (('={', 'T’'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'table'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'M'), 'punct'), (('M', '$'), 'appos'), (('[', 'T'), 'punct'), (('T', 'M'), 'appos'), (('’', 'T'), 'punct'), ((',', 'T'), 'punct'), (('+]', 'T’\uf0e0𝜖'), 'punct'), (('=', 'T’\uf0e0𝜖'), 'punct'), (('T’\uf0e0𝜖', 'M'), 'appos'), (('M[', 'T’\uf0e0𝜖'), 'flat'), (('T', 'T’\uf0e0𝜖'), 'flat'), (('’', 'T'), 'punct'), ((',', '$'), 'punct'), (('$', 'T’\uf0e0𝜖'), 'appos'), ((']', '$'), 'punct'), (('=', 'T'), 'punct'), (('T', '$'), 'dep'), (('’\uf0e0𝜖', 'T'), 'flat'), (('M[', '’\uf0e0𝜖'), 'flat'), (('T', '’\uf0e0𝜖'), 'dep'), (('’', 'M['), 'punct'), ((',', 'M['), 'punct'), ((')', '’\uf0e0𝜖'), 'punct'), ((']', '’\uf0e0𝜖'), 'punct'), (('=', 'M['), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 106 ===========================

 T’𝜖  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’		T’𝜖	T’*FT’		T’𝜖	T’𝜖 	F						  Rule: 3 

Tokens are: 
>> ['T’\uf0e0𝜖', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T’', 'T’\uf0e0𝜖', 'T’\uf0e0*', 'FT', '’', 'T’\uf0e0𝜖', 'T’\uf0e0𝜖', 'F', 'Rule', ':', '3'] 

 UPOS tags are: 
>> [('T’\uf0e0𝜖', 'AUX'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'NOUN'), ('E\uf0e0TE', 'NOUN'), ('’', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’', 'NOUN'), ('E’\uf0e0+TE', 'NOUN'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T\uf0e0FT', 'NOUN'), ('’', 'PUNCT'), ('T’', 'X'), ('T’\uf0e0𝜖', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0𝜖', 'NOUN'), ('T’\uf0e0𝜖', 'X'), ('F', 'X'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('3', 'X')] 

 XPOS tags are: 
>> [('T’\uf0e0𝜖', 'VB'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NN'), ('E\uf0e0TE', 'NN'), ('’', "''"), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’', 'NN'), ('E’\uf0e0+TE', 'NN'), ('’', "''"), ('E’\uf0e0𝜖', 'GW'), ('E’\uf0e0𝜖', 'GW'), ('T', ','), ('T\uf0e0FT', 'GW'), ('’', "''"), ('T\uf0e0FT', 'NN'), ('’', ':'), ('T’', 'GW'), ('T’\uf0e0𝜖', 'GW'), ('T’\uf0e0*', 'GW'), ('FT', 'GW'), ('’', ':'), ('T’\uf0e0𝜖', 'GW'), ('T’\uf0e0𝜖', 'GW'), ('F', 'GW'), ('Rule', 'NN'), (':', ':'), ('3', 'ADD')] 

 Lemmas are: 
>> [('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’', 'e’'), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’', 't’'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('F', 'F'), ('Rule', 'rule'), (':', ':'), ('3', '3')] 

 Dependency tags are: 
>> [(('T’\uf0e0𝜖', 'id'), 'aux'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'root'), 'root'), (('+', 'id'), 'advmod'), (('*', 'id'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'id'), 'list'), (('E', '$'), 'nummod'), (('E\uf0e0TE', '$'), 'appos'), (('’', '$'), 'punct'), (('E\uf0e0TE', 'id'), 'list'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’', 'E’\uf0e0+TE'), 'compound'), (('E’\uf0e0+TE', 'id'), 'list'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0𝜖', 'E’\uf0e0+TE'), 'compound'), (('E’\uf0e0𝜖', 'E’\uf0e0+TE'), 'appos'), (('T', 'E’\uf0e0+TE'), 'punct'), (('T\uf0e0FT', 'E’\uf0e0+TE'), 'appos'), (('’', 'E’\uf0e0+TE'), 'punct'), (('T\uf0e0FT', 'id'), 'list'), (('’', 'id'), 'punct'), (('T’', 'T\uf0e0FT'), 'appos'), (('T’\uf0e0𝜖', 'T’'), 'goeswith'), (('T’\uf0e0*', 'T’'), 'goeswith'), (('FT', 'T’\uf0e0𝜖'), 'compound'), (('’', 'T’\uf0e0𝜖'), 'punct'), (('T’\uf0e0𝜖', 'Rule'), 'compound'), (('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), 'compound'), (('F', 'Rule'), 'compound'), (('Rule', 'id'), 'list'), ((':', 'Rule'), 'punct'), (('3', 'Rule'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 107 ===========================

 A  b = follow(A) M[A,b] = A     	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table         F(E) a=FIRST((E))={ ( } M[F,(]=F(E)  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’		T’𝜖	T’*FT’		T’𝜖	T’𝜖 	F				F(E)		  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 3: Construct predictive parsing table         Fid a=FIRST(id)={ id } M[F,id]= 

Tokens are: 
>> ['A\uf0e0', 'b', '=', 'follow', '(', 'A', ')', 'M[', 'A', ',', 'b', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'F\uf0e0(', 'E', ')', 'a=', 'FIRST', '(', '(', 'E', ')', ')', '=', '{', '(', '}', 'M', '[', 'F', ',', '(', ']', '=', 'F\uf0e0(', 'E', ')', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T’', 'T’\uf0e0𝜖', 'T’\uf0e0*', 'FT', '’', 'T’\uf0e0𝜖', 'T’\uf0e0𝜖', 'F', 'F\uf0e0(', 'E', ')', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '3', ':', 'Construct', 'predictive', 'parsing', 'table', 'F\uf0e0id', 'a=', 'FIRST', '(', 'id', ')', '=', '{', 'id', '}', 'M[', 'F', ',', 'id', ']', '='] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('b', 'NUM'), ('=', 'PUNCT'), ('follow', 'NOUN'), ('(', 'PUNCT'), ('A', 'NUM'), (')', 'PUNCT'), ('M[', 'NOUN'), ('A', 'PROPN'), (',', 'PUNCT'), ('b', 'NUM'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('First', 'ADV'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'PUNCT'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'NOUN'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('F\uf0e0(', 'PROPN'), ('E', 'NOUN'), (')', 'PUNCT'), ('a=', 'NUM'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('(', 'PUNCT'), ('}', 'PUNCT'), ('M', 'NUM'), ('[', 'PUNCT'), ('F', 'PROPN'), (',', 'PUNCT'), ('(', 'PUNCT'), (']', 'PUNCT'), ('=', 'PUNCT'), ('F\uf0e0(', 'NOUN'), ('E', 'NOUN'), (')', 'PUNCT'), ('NT', 'X'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'X'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E\uf0e0TE', 'X'), ('’', 'PUNCT'), ('E’', 'X'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’', 'X'), ('T’\uf0e0𝜖', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'X'), ('T’\uf0e0𝜖', 'X'), ('T’\uf0e0𝜖', 'X'), ('F', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'PROPN'), ('a', 'PUNCT'), ('=', 'PUNCT'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'X'), ('A', 'NOUN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Construct', 'NOUN'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('F\uf0e0id', 'PROPN'), ('a=', 'PUNCT'), ('FIRST', 'ADJ'), ('(', 'PUNCT'), ('id', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('M[', 'NOUN'), ('F', 'NOUN'), (',', 'PUNCT'), ('id', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('b', 'CD'), ('=', ','), ('follow', 'NN'), ('(', '-LRB-'), ('A', 'LS'), (')', '-RRB-'), ('M[', 'NN'), ('A', 'NNP'), (',', ','), ('b', 'LS'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('First', 'RB'), ('Follow', 'VB'), ('E', 'NN'), ('{', ','), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', ','), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’\uf0e0*', 'FW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('F\uf0e0(', 'NNP'), ('E', 'NN'), (')', '-RRB-'), ('a=', 'CD'), ('FIRST', 'JJ'), ('(', '-LRB-'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('(', '-LRB-'), ('}', 'NFP'), ('M', 'CD'), ('[', '-LRB-'), ('F', 'NNP'), (',', ','), ('(', '-LRB-'), (']', '-RRB-'), ('=', ','), ('F\uf0e0(', 'NN'), ('E', 'NN'), (')', '-RRB-'), ('NT', 'NN'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'FW'), ('E\uf0e0TE', 'FW'), ('’', '``'), ('E\uf0e0TE', 'FW'), ('’', "''"), ('E’', 'FW'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('E’\uf0e0𝜖', 'FW'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T\uf0e0FT', 'FW'), ('’', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’', 'FW'), ('T’\uf0e0𝜖', 'FW'), ('T’\uf0e0*', 'GW'), ('FT', 'GW'), ('’', 'GW'), ('T’\uf0e0𝜖', 'FW'), ('T’\uf0e0𝜖', 'FW'), ('F', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'FW'), (')', '-RRB-'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('a', '-RRB-'), ('=', ','), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', 'FW'), ('A', 'NN'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', ','), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', ','), ('{', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('T’\uf0e0*', 'FW'), ('FT', 'NN'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'NN'), (')', '-RRB-'), ('|', ','), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Construct', 'NN'), ('predictive', 'JJ'), ('parsing', 'NN'), ('table', 'NN'), ('F\uf0e0id', 'NNP'), ('a=', ','), ('FIRST', 'JJ'), ('(', '-LRB-'), ('id', 'NN'), (')', '-RRB-'), ('=', ','), ('{', 'NFP'), ('id', 'NN'), ('}', '-LRB-'), ('M[', 'NN'), ('F', 'NN'), (',', ','), ('id', 'NN'), (']', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('b', 'b'), ('=', '='), ('follow', 'follow'), ('(', '('), ('A', 'a'), (')', ')'), ('M[', 'M['), ('A', 'A'), (',', ','), ('b', 'b'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', "''"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('F\uf0e0(', 'F\uf0e0('), ('E', 'e'), (')', ')'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('(', '('), ('E', 'e'), (')', ')'), (')', ')'), ('=', '='), ('{', '{'), ('(', '('), ('}', '}'), ('M', 'm'), ('[', '['), ('F', 'F'), (',', ','), ('(', '('), (']', ']'), ('=', '='), ('F\uf0e0(', 'f\uf0e0('), ('E', 'e'), (')', ')'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('E’', 'e’'), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’', 't’'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'s"), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'a'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Construct', 'construct'), ('predictive', 'predictive'), ('parsing', 'parsing'), ('table', 'table'), ('F\uf0e0id', 'F\uf0e0id'), ('a=', 'a='), ('FIRST', 'first'), ('(', '('), ('id', 'id'), (')', ')'), ('=', '='), ('{', '{'), ('id', 'id'), ('}', '}'), ('M[', 'M['), ('F', 'f'), (',', ','), ('id', 'id'), (']', ']'), ('=', '=')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'b'), 'compound'), (('b', 'root'), 'root'), (('=', 'b'), 'punct'), (('follow', 'b'), 'appos'), (('(', 'A'), 'punct'), (('A', 'M['), 'dep'), ((')', 'A'), 'punct'), (('M[', 'A'), 'dep'), (('A', 'Follow'), 'dep'), ((',', 'b'), 'punct'), (('b', 'Follow'), 'dep'), ((']', 'b'), 'punct'), (('=', 'A'), 'punct'), (('A\uf0e0', 'Follow'), 'nsubj'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'b'), 'parataxis'), (('E', 'Follow'), 'obj'), (('{', 'Follow'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E’'), 'punct'), (('E’', '$'), 'conj'), (('{', '𝜖'), 'punct'), (('+', '𝜖'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'conj'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('$', '$'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T'), 'punct'), (('T', '$'), 'dep'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '$'), 'conj'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T’', '$'), 'conj'), (('{', 'T’'), 'punct'), (('*', '$'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'conj'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'E’'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'conj'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', '$'), 'punct'), ((',', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', 'b'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'A\uf0e0'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'T\uf0e0FT'), 'punct'), (('ϵ', 'T\uf0e0FT'), 'punct'), (('T\uf0e0FT', 'E’\uf0e0+TE'), 'conj'), (('’', 'FT'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'T\uf0e0FT'), 'dep'), (('’', 'FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', '$'), 'conj'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'b'), 'conj'), (('Prof.', 'id'), 'dep'), (('Jay', 'id'), 'dep'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'compound'), (('(', 'PS'), 'punct'), (('PS', 'A'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'M['), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'A\uf0e0'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'follow'), 'conj'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'Probability'), 'dep'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'A'), 'conj'), (('2170701', '#'), 'compound'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'b'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Example'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Follow'), 'conj'), (('-', 'b'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'compound'), (('(', '1'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Follow'), 'conj'), (('3', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Construct', 'table'), 'compound'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Step'), 'appos'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'table'), 'dep'), ((')', 'E'), 'punct'), (('a=', 'FIRST'), 'nummod'), (('FIRST', 'E'), 'amod'), (('(', 'E'), 'punct'), (('(', 'E'), 'punct'), (('E', 'Follow'), 'dep'), ((')', 'E'), 'punct'), ((')', 'E'), 'punct'), (('=', 'A'), 'punct'), (('{', 'M'), 'punct'), (('(', 'M'), 'punct'), (('}', 'M'), 'punct'), (('M', '='), 'dep'), (('[', 'F'), 'punct'), (('F', 'M'), 'dep'), ((',', 'F'), 'punct'), (('(', 'E'), 'punct'), ((']', 'F'), 'punct'), (('=', 'M'), 'punct'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'M'), 'dep'), ((')', 'E'), 'punct'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'F'), 'conj'), (('+', 'id'), 'cc'), (('*', 'id'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'Follow'), 'conj'), (('E', '$'), 'compound'), (('E\uf0e0TE', '$'), 'compound'), (('’', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'dep'), (('’', 'E\uf0e0TE'), 'punct'), (('E’', 'E\uf0e0TE'), 'compound'), (('E’\uf0e0+TE', '$'), 'conj'), (('’', 'E\uf0e0TE'), 'punct'), (('E’\uf0e0𝜖', '$'), 'compound'), (('E’\uf0e0𝜖', '$'), 'dep'), (('T', 'T\uf0e0FT'), 'compound'), (('T\uf0e0FT', 'T\uf0e0FT'), 'nmod:poss'), (('’', 'T\uf0e0FT'), 'case'), (('T\uf0e0FT', 'E’\uf0e0𝜖'), 'conj'), (('’', 'T\uf0e0FT'), 'punct'), (('T’', 'T’\uf0e0𝜖'), 'compound'), (('T’\uf0e0𝜖', 'T\uf0e0FT'), 'compound'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'T’\uf0e0𝜖'), 'compound'), (('’', 'FT'), 'case'), (('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), 'compound'), (('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), 'compound'), (('F', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'T’\uf0e0𝜖'), 'dep'), ((')', 'E'), 'punct'), (('Rule', 'T’\uf0e0𝜖'), 'compound'), ((':', 'Rule'), 'punct'), (('2', 'A\uf0e0'), 'nummod'), (('A\uf0e0', 'Rule'), 'compound'), (('a', 'A\uf0e0'), 'punct'), (('=', 'A\uf0e0'), 'punct'), (('first', 'Rule'), 'amod'), (('(', 'M['), 'punct'), ((')', 'A'), 'punct'), (('M[', 'first'), 'dep'), (('A', 'M['), 'flat'), ((',', 'a'), 'punct'), (('a', 'A'), 'dep'), ((']', 'a'), 'punct'), (('=', 'follow'), 'conj'), (('A\uf0e0', 'Follow'), 'nsubj'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'Follow'), 'conj'), (('E', 'Follow'), 'obj'), (('{', 'Follow'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Follow'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', '𝜖'), 'advmod'), ((',', '𝜖'), 'punct'), (('𝜖', 'E’'), 'dep'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('$', 'E’'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T', '$'), 'dep'), (('{', 'T'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'T'), 'dep'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'T'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', '$'), 'punct'), (('T’', '$'), 'dep'), (('{', 'T’'), 'punct'), (('*', 'T’'), 'punct'), ((',', '𝜖'), 'punct'), (('𝜖', 'T’'), 'conj'), (('}', '𝜖'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '𝜖'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'parataxis'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', 'id'), 'punct'), ((',', '$'), 'punct'), (('+', '$'), 'cc'), ((',', '$'), 'punct'), (('$', 'F'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'dep'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'parataxis'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'E’\uf0e0+TE'), 'punct'), (('ϵ', 'E’\uf0e0+TE'), 'compound'), (('T\uf0e0FT', 'E\uf0e0TE'), 'flat'), (('’', 'ϵ'), 'punct'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'E\uf0e0TE'), 'dep'), (('’', 'FT'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'FT'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'E'), 'compound'), (('Prof.', 'id'), 'compound'), (('Jay', 'id'), 'compound'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'Jay'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Unit'), 'compound'), (('Prof.', 'Kagathara'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '‹#›'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'Example'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Construct', 'table'), 'compound'), (('predictive', 'table'), 'amod'), (('parsing', 'table'), 'compound'), (('table', 'Step'), 'appos'), (('F\uf0e0id', 'table'), 'appos'), (('a=', 'table'), 'punct'), (('FIRST', 'table'), 'amod'), (('(', 'id'), 'punct'), (('id', 'table'), 'appos'), ((')', 'id'), 'punct'), (('=', 'id'), 'punct'), (('{', 'id'), 'punct'), (('id', 'table'), 'appos'), (('}', 'F'), 'punct'), (('M[', 'F'), 'compound'), (('F', 'id'), 'appos'), ((',', 'id'), 'punct'), (('id', 'F'), 'appos'), ((']', 'F'), 'punct'), (('=', 'id'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 108 ===========================

 Fid  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’			ETE’		 	E’		E’+TE’			E’𝜖	E’𝜖 	T	TFT’			TFT’		 	T’		T’𝜖	T’*FT’		T’𝜖	T’𝜖 	F	Fid			F(E)		  Rule: 2 A  a = first() M[A,a] = A   	NT	First	Follow  	E	{ (,id }	{ $,) }  	E’	{ +, 𝜖 }	{ $,) }  	T	{ (,id }	{ +,$,) }  	T’	{ *, 𝜖 }	{ +,$,) }  	F	{ (,id }	{*,+,$,)}  ETE’ 	E’+TE’ | ϵ 	TFT’ 	T’*FT’ | ϵ 	F(E) | id     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 4: Make each undefined entry of table be Error  	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’	Error	Error	ETE’	Error	Error 	E’	Error	E’+TE’	Error	Error	E’𝜖	E’𝜖 	T	TFT’	Error	Error	TFT’	Error	Error 	T’	Error	T’𝜖	T’*FT’	Error	T’𝜖	T’𝜖 	F	Fid	Error	Error	F(E)	Error	Error     Prof. 

Tokens are: 
>> ['F\uf0e0id', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'E\uf0e0TE', '’', 'E’', 'E’\uf0e0+TE', '’', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'T\uf0e0FT', '’', 'T’', 'T’\uf0e0𝜖', 'T’\uf0e0*', 'FT', '’', 'T’\uf0e0𝜖', 'T’\uf0e0𝜖', 'F', 'F\uf0e0id', 'F\uf0e0(', 'E', ')', 'Rule', ':', '2', 'A\uf0e0', 'a', '=', 'first', '(', ')', 'M[', 'A', ',', 'a', ']', '=', 'A\uf0e0', 'NT', 'First', 'Follow', 'E', '{', '(', ',', 'id', '}', '{', '$', ',', ')', '}', 'E’', '{', '+', ',', '𝜖', '}', '{', '$', ',', ')', '}', 'T', '{', '(', ',', 'id', '}', '{', '+', ',', '$', ',', ')', '}', 'T’', '{', '*', ',', '𝜖', '}', '{', '+', ',', '$', ',', ')', '}', 'F', '{', '(', ',', 'id', '}', '{', '*', ',', '+', ',', '$', ',', ')', '}', 'E\uf0e0TE', '’', 'E’\uf0e0+TE', '’', '|', 'ϵ', 'T\uf0e0FT', '’', 'T’\uf0e0*', 'FT', '’', '|', 'ϵ', 'F\uf0e0(', 'E', ')', '|', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '4', ':', 'Make', 'each', 'undefined', 'entry', 'of', 'table', 'be', 'Error', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'Error', 'Error', 'E\uf0e0TE', '’', 'Error', 'Error', 'E’', 'Error', 'E’\uf0e0+TE', '’', 'Error', 'Error', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'Error', 'Error', 'T\uf0e0FT', '’', 'Error', 'Error', 'T’', 'Error', 'T’\uf0e0𝜖', 'T’\uf0e0*', 'FT', '’', 'Error', 'T’\uf0e0𝜖', 'T’\uf0e0𝜖', 'F', 'F\uf0e0id', 'Error', 'Error', 'F\uf0e0(', 'E', ')', 'Error', 'Error', 'Prof', '.'] 

 UPOS tags are: 
>> [('F\uf0e0id', 'PROPN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'PROPN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’', 'X'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’', 'X'), ('T’\uf0e0𝜖', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('T’\uf0e0𝜖', 'X'), ('T’\uf0e0𝜖', 'X'), ('F', 'X'), ('F\uf0e0id', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('Rule', 'NOUN'), (':', 'PUNCT'), ('2', 'NUM'), ('A\uf0e0', 'PROPN'), ('a', 'PUNCT'), ('=', 'PUNCT'), ('first', 'ADJ'), ('(', 'PUNCT'), (')', 'PUNCT'), ('M[', 'PUNCT'), ('A', 'NOUN'), (',', 'PUNCT'), ('a', 'NOUN'), (']', 'PUNCT'), ('=', 'PUNCT'), ('A\uf0e0', 'PROPN'), ('NT', 'PART'), ('First', 'ADJ'), ('Follow', 'VERB'), ('E', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E’', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('𝜖', 'NUM'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('T’', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('𝜖', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('(', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('$', 'SYM'), (',', 'PUNCT'), (')', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('E’\uf0e0+TE', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('T\uf0e0FT', 'X'), ('’', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'X'), ('’', 'PUNCT'), ('|', 'PUNCT'), ('ϵ', 'X'), ('F\uf0e0(', 'X'), ('E', 'X'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('4', 'NUM'), (':', 'PUNCT'), ('Make', 'VERB'), ('each', 'DET'), ('undefined', 'ADJ'), ('entry', 'NOUN'), ('of', 'ADP'), ('table', 'NOUN'), ('be', 'AUX'), ('Error', 'NOUN'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PART'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PART'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('E’', 'PROPN'), ('Error', 'PROPN'), ('E’\uf0e0+TE', 'PROPN'), ('’', 'PUNCT'), ('Error', 'PROPN'), ('Error', 'NOUN'), ('E’\uf0e0𝜖', 'X'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T\uf0e0FT', 'X'), ('’', 'PUNCT'), ('Error', 'PROPN'), ('Error', 'NOUN'), ('T\uf0e0FT', 'PROPN'), ('’', 'PUNCT'), ('Error', 'PROPN'), ('Error', 'NOUN'), ('T’', 'X'), ('Error', 'PROPN'), ('T’\uf0e0𝜖', 'X'), ('T’\uf0e0*', 'X'), ('FT', 'NOUN'), ('’', 'PUNCT'), ('Error', 'PROPN'), ('T’\uf0e0𝜖', 'PROPN'), ('T’\uf0e0𝜖', 'PROPN'), ('F', 'PROPN'), ('F\uf0e0id', 'PROPN'), ('Error', 'PROPN'), ('Error', 'NOUN'), ('F\uf0e0(', 'PROPN'), ('E', 'NOUN'), (')', 'PUNCT'), ('Error', 'PROPN'), ('Error', 'PROPN'), ('Prof', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('F\uf0e0id', 'NNP'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NNP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('E’', 'FW'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('E’\uf0e0𝜖', 'FW'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T\uf0e0FT', 'FW'), ('’', 'FW'), ('T\uf0e0FT', 'FW'), ('’', 'FW'), ('T’', 'FW'), ('T’\uf0e0𝜖', 'FW'), ('T’\uf0e0*', 'FW'), ('FT', 'FW'), ('’', "''"), ('T’\uf0e0𝜖', 'FW'), ('T’\uf0e0𝜖', 'FW'), ('F', 'FW'), ('F\uf0e0id', 'FW'), ('F\uf0e0(', 'FW'), ('E', 'FW'), (')', '-RRB-'), ('Rule', 'NN'), (':', ':'), ('2', 'CD'), ('A\uf0e0', 'NNP'), ('a', ','), ('=', ','), ('first', 'JJ'), ('(', '-LRB-'), (')', '-RRB-'), ('M[', ','), ('A', 'NN'), (',', ','), ('a', 'NN'), (']', '-RRB-'), ('=', 'NFP'), ('A\uf0e0', 'NNP'), ('NT', 'RB'), ('First', 'JJ'), ('Follow', 'VB'), ('E', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('E’', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('𝜖', 'CD'), ('}', 'NFP'), ('{', '-LRB-'), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T', 'NN'), ('{', 'NFP'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', ','), ('{', 'NFP'), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', ','), ('T’', 'NN'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('𝜖', 'NN'), ('}', ','), ('{', 'NFP'), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-RRB-'), ('(', '-LRB-'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('+', 'SYM'), (',', ','), ('$', '$'), (',', ','), (')', '-RRB-'), ('}', 'NFP'), ('E\uf0e0TE', 'NNP'), ('’', '``'), ('E’\uf0e0+TE', 'FW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'FW'), ('T\uf0e0FT', 'FW'), ('’', 'FW'), ('T’\uf0e0*', 'FW'), ('FT', 'GW'), ('’', "''"), ('|', 'NFP'), ('ϵ', 'GW'), ('F\uf0e0(', 'GW'), ('E', 'FW'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'FW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', ','), ('3', 'CD'), (':', ':'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('4', 'CD'), (':', ':'), ('Make', 'VB'), ('each', 'DT'), ('undefined', 'JJ'), ('entry', 'NN'), ('of', 'IN'), ('table', 'NN'), ('be', 'VB'), ('Error', 'NN'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', 'POS'), ('Error', 'NN'), ('Error', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', 'POS'), ('Error', 'NN'), ('Error', 'NN'), ('E’', 'NNP'), ('Error', 'NNP'), ('E’\uf0e0+TE', 'NNP'), ('’', "''"), ('Error', 'NNP'), ('Error', 'NN'), ('E’\uf0e0𝜖', 'FW'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T\uf0e0FT', 'FW'), ('’', "''"), ('Error', 'NNP'), ('Error', 'NN'), ('T\uf0e0FT', 'NNP'), ('’', "''"), ('Error', 'NNP'), ('Error', 'NN'), ('T’', 'FW'), ('Error', 'NNP'), ('T’\uf0e0𝜖', 'FW'), ('T’\uf0e0*', 'FW'), ('FT', 'NN'), ('’', '``'), ('Error', 'NNP'), ('T’\uf0e0𝜖', 'NNP'), ('T’\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('Error', 'NNP'), ('Error', 'NN'), ('F\uf0e0(', 'NNP'), ('E', 'NN'), (')', '-RRB-'), ('Error', 'NNP'), ('Error', 'NNP'), ('Prof', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('F\uf0e0id', 'F\uf0e0id'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'E'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’', 'e’'), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’', 't’'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0id', 'f\uf0e0id'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('Rule', 'rule'), (':', ':'), ('2', '2'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('=', '='), ('first', 'first'), ('(', '('), (')', ')'), ('M[', 'M['), ('A', 'a'), (',', ','), ('a', 'a'), (']', ']'), ('=', '='), ('A\uf0e0', 'A\uf0e0'), ('NT', 'not'), ('First', 'first'), ('Follow', 'follow'), ('E', 'e'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E’', 'e’'), ('{', '{'), ('+', '+'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T', 'T'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('T’', 't’'), ('{', '{'), ('*', '*'), (',', ','), ('𝜖', '𝜖'), ('}', '}'), ('{', '{'), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('F', 'f'), ('{', '{'), ('(', '('), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('+', '+'), (',', ','), ('$', '$'), (',', ','), (')', ')'), ('}', '}'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('|', '|'), ('ϵ', 'ϵ'), ('F\uf0e0(', 'f\uf0e0('), ('E', 'E'), (')', ')'), ('|', '|'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Make', 'make'), ('each', 'each'), ('undefined', 'undefined'), ('entry', 'entry'), ('of', 'of'), ('table', 'table'), ('be', 'be'), ('Error', 'error'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'s"), ('Error', 'error'), ('Error', 'error'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'s"), ('Error', 'error'), ('Error', 'error'), ('E’', 'E’'), ('Error', 'Error'), ('E’\uf0e0+TE', 'E’\uf0e0+TE'), ('’', "'"), ('Error', 'Error'), ('Error', 'error'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'"), ('Error', 'Error'), ('Error', 'error'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', "'"), ('Error', 'Error'), ('Error', 'error'), ('T’', 't’'), ('Error', 'Error'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('T’\uf0e0*', 't’\uf0e0*'), ('FT', 'ft'), ('’', "'"), ('Error', 'Error'), ('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), ('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('Error', 'Error'), ('Error', 'error'), ('F\uf0e0(', 'F\uf0e0('), ('E', 'e'), (')', ')'), ('Error', 'Error'), ('Error', 'Error'), ('Prof', 'Prof'), ('.', '.')] 

 Dependency tags are: 
>> [(('F\uf0e0id', 'root'), 'root'), (('NT', 'F\uf0e0id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'F\uf0e0id'), 'conj'), (('+', 'id'), 'punct'), (('*', '$'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'id'), 'conj'), (('E', '$'), 'flat'), (('E\uf0e0TE', '$'), 'flat'), (('’', 'E\uf0e0TE'), 'punct'), (('E\uf0e0TE', '$'), 'conj'), (('’', 'E\uf0e0TE'), 'punct'), (('E’', 'E\uf0e0TE'), 'flat'), (('E’\uf0e0+TE', '$'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0𝜖', '$'), 'conj'), (('E’\uf0e0𝜖', '$'), 'conj'), (('T', '$'), 'conj'), (('T\uf0e0FT', 'T\uf0e0FT'), 'flat'), (('’', 'T\uf0e0FT'), 'case'), (('T\uf0e0FT', '$'), 'conj'), (('’', 'T\uf0e0FT'), 'case'), (('T’', 'T’\uf0e0𝜖'), 'compound'), (('T’\uf0e0𝜖', 'FT'), 'compound'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'id'), 'conj'), (('’', 'FT'), 'punct'), (('T’\uf0e0𝜖', 'id'), 'conj'), (('T’\uf0e0𝜖', 'id'), 'conj'), (('F', 'T’\uf0e0𝜖'), 'compound'), (('F\uf0e0id', 'E'), 'compound'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'Rule'), 'dep'), ((')', 'E'), 'punct'), (('Rule', '$'), 'conj'), ((':', 'Rule'), 'punct'), (('2', 'A\uf0e0'), 'nummod'), (('A\uf0e0', 'Rule'), 'dep'), (('a', 'A\uf0e0'), 'punct'), (('=', 'id'), 'punct'), (('first', 'Rule'), 'amod'), (('(', 'A'), 'punct'), ((')', 'A'), 'punct'), (('M[', 'A'), 'punct'), (('A', 'id'), 'conj'), ((',', 'a'), 'punct'), (('a', 'A'), 'dep'), ((']', 'a'), 'punct'), (('=', 'id'), 'punct'), (('A\uf0e0', 'id'), 'conj'), (('NT', 'Follow'), 'advmod'), (('First', 'Follow'), 'advmod'), (('Follow', 'id'), 'conj'), (('E', 'Follow'), 'obj'), (('{', 'id'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'id'), 'conj'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'id'), 'punct'), (('E’', '$'), 'conj'), (('{', 'E’'), 'punct'), (('+', 'E’'), 'dep'), ((',', '𝜖'), 'punct'), (('𝜖', '$'), 'nummod'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('$', '$'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'id'), 'punct'), (('T', '$'), 'conj'), (('{', '$'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '$'), 'conj'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('+', '$'), 'conj'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'T’'), 'punct'), (('T’', '$'), 'conj'), (('{', '$'), 'punct'), (('*', '$'), 'punct'), ((',', '$'), 'punct'), (('𝜖', '$'), 'conj'), (('}', '$'), 'punct'), (('{', '$'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F'), 'punct'), (('F', '$'), 'dep'), (('{', 'F'), 'punct'), (('(', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', 'F'), 'dep'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', '$'), 'punct'), ((',', '+'), 'punct'), (('+', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'id'), 'conj'), ((',', '$'), 'punct'), ((')', '$'), 'punct'), (('}', 'F\uf0e0id'), 'punct'), (('E\uf0e0TE', '$'), 'conj'), (('’', 'E’\uf0e0+TE'), 'punct'), (('E’\uf0e0+TE', 'E\uf0e0TE'), 'parataxis'), (('’', 'E’\uf0e0+TE'), 'punct'), (('|', 'E’\uf0e0+TE'), 'punct'), (('ϵ', 'E’\uf0e0+TE'), 'conj'), (('T\uf0e0FT', 'ϵ'), 'flat'), (('’', 'T\uf0e0FT'), 'case'), (('T’\uf0e0*', 'E’\uf0e0+TE'), 'conj'), (('FT', 'T’\uf0e0*'), 'compound'), (('’', 'T’\uf0e0*'), 'punct'), (('|', 'ϵ'), 'punct'), (('ϵ', 'id'), 'dep'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'ϵ'), 'dep'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', '$'), 'conj'), (('Prof.', 'id'), 'compound'), (('Jay', 'Prof.'), 'flat'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Prof.'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', 'B'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'parataxis'), (('-', 'Example'), 'punct'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'Step'), 'nummod'), ((')', '1'), 'punct'), (('parsing', 'Step'), 'compound'), (('Step', 'LL'), 'conj'), (('4', 'Step'), 'nummod'), ((':', 'Make'), 'punct'), (('Make', 'Step'), 'parataxis'), (('each', 'entry'), 'det'), (('undefined', 'entry'), 'amod'), (('entry', 'Make'), 'obj'), (('of', 'table'), 'case'), (('table', 'entry'), 'nmod'), (('be', 'Error'), 'cop'), (('Error', 'Make'), 'parataxis'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'Error'), 'parataxis'), (('+', '$'), 'advmod'), (('*', '$'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'id'), 'conj'), (('E', '$'), 'nummod'), (('E\uf0e0TE', 'Error'), 'nmod:poss'), (('’', 'E\uf0e0TE'), 'case'), (('Error', '$'), 'compound'), (('Error', '$'), 'conj'), (('E\uf0e0TE', 'Error'), 'nmod:poss'), (('’', 'E\uf0e0TE'), 'case'), (('Error', 'Error'), 'compound'), (('Error', 'Error'), 'appos'), (('E’', 'Error'), 'compound'), (('Error', 'Error'), 'appos'), (('E’\uf0e0+TE', 'Error'), 'flat'), (('’', 'Error'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'Error'), 'appos'), (('E’\uf0e0𝜖', 'Error'), 'flat'), (('E’\uf0e0𝜖', 'Error'), 'flat'), (('T', 'Error'), 'compound'), (('T\uf0e0FT', 'T'), 'flat'), (('’', 'T'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'Error'), 'appos'), (('T\uf0e0FT', 'Error'), 'flat'), (('’', 'T\uf0e0FT'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'Error'), 'compound'), (('T’', 'Error'), 'flat'), (('Error', 'Error'), 'compound'), (('T’\uf0e0𝜖', 'Error'), 'flat'), (('T’\uf0e0*', 'Error'), 'flat'), (('FT', 'Error'), 'flat'), (('’', 'Error'), 'punct'), (('Error', 'FT'), 'appos'), (('T’\uf0e0𝜖', 'Error'), 'flat'), (('T’\uf0e0𝜖', 'Error'), 'flat'), (('F', 'Error'), 'flat'), (('F\uf0e0id', 'F'), 'flat'), (('Error', 'Error'), 'compound'), (('Error', 'F'), 'appos'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'Error'), 'appos'), ((')', 'Error'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'Error'), 'conj'), (('Prof', 'Error'), 'flat'), (('.', 'Error'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL'), ('first', 'ORDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('4', 'CARDINAL')]

========================== Sentence 109 ===========================

 Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example-3: LL(1) parsing Step 4: Parse the string : id + id * id $  	STACK	INPUT	OUTPUT  	E$	id+id*id$	  	TE’$	id+id*id$	ETE’  	FT’E’$	id+id*id$	TFT’  	id 

Tokens are: 
>> ['Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', '-', '3', ':', 'LL', '(', '1', ')', 'parsing', 'Step', '4', ':', 'Parse', 'the', 'string', ':', 'id', '+', 'id', '*', 'id', '$', 'STACK', 'INPUT', 'OUTPUT', 'E$', 'id', '+', 'id*id', '$', 'TE', '’$', 'id', '+', 'id*id$', 'E\uf0e0TE', '’', 'FT’E', '’$', 'id', '+', 'id*id$', 'T\uf0e0FT', '’', 'id'] 

 UPOS tags are: 
>> [('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('-', 'SYM'), ('3', 'NUM'), (':', 'PUNCT'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), ('Step', 'NOUN'), ('4', 'NUM'), (':', 'PUNCT'), ('Parse', 'VERB'), ('the', 'DET'), ('string', 'NOUN'), (':', 'PUNCT'), ('id', 'NOUN'), ('+', 'SYM'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('STACK', 'NOUN'), ('INPUT', 'NOUN'), ('OUTPUT', 'NOUN'), ('E$', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('id*id', 'NOUN'), ('$', 'SYM'), ('TE', 'NOUN'), ('’$', 'NUM'), ('id', 'NOUN'), ('+', 'SYM'), ('id*id$', 'NOUN'), ('E\uf0e0TE', 'NOUN'), ('’', 'PUNCT'), ('FT’E', 'NOUN'), ('’$', 'PUNCT'), ('id', 'NOUN'), ('+', 'SYM'), ('id*id$', 'NOUN'), ('T\uf0e0FT', 'NOUN'), ('’', 'PART'), ('id', 'NOUN')] 

 XPOS tags are: 
>> [('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), ('-', 'SYM'), ('3', 'CD'), (':', ':'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), ('Step', 'NN'), ('4', 'CD'), (':', ':'), ('Parse', 'VB'), ('the', 'DT'), ('string', 'NN'), (':', ':'), ('id', 'NN'), ('+', 'SYM'), ('id', 'NN'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('STACK', 'NN'), ('INPUT', 'NN'), ('OUTPUT', 'NN'), ('E$', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('id*id', 'NN'), ('$', '$'), ('TE', 'NN'), ('’$', 'CD'), ('id', 'NN'), ('+', 'SYM'), ('id*id$', 'NN'), ('E\uf0e0TE', 'NN'), ('’', '``'), ('FT’E', 'NN'), ('’$', ','), ('id', 'NN'), ('+', 'SYM'), ('id*id$', 'NN'), ('T\uf0e0FT', 'NN'), ('’', 'POS'), ('id', 'NN')] 

 Lemmas are: 
>> [('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), ('-', '-'), ('3', '3'), (':', ':'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('parsing', 'parsing'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'parse'), ('the', 'the'), ('string', 'string'), (':', ':'), ('id', 'id'), ('+', '+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('STACK', 'stack'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('E$', 'e$'), ('id', 'id'), ('+', '+'), ('id*id', 'id*id'), ('$', '$'), ('TE', 'te'), ('’$', '’or'), ('id', 'id'), ('+', '+'), ('id*id$', 'ido'), ('E\uf0e0TE', 'e\uf0e0te'), ('’', "'"), ('FT’E', 'ft’e'), ('’$', "''"), ('id', 'id'), ('+', '+'), ('id*id$', 'ido'), ('T\uf0e0FT', 't\uf0e0ft'), ('’', "'s"), ('id', 'id')] 

 Dependency tags are: 
>> [(('Jay', 'root'), 'root'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Jay'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '#'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '#'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '#'), 'parataxis'), (('-', '3'), 'case'), (('3', 'Example'), 'nummod'), ((':', 'Example'), 'punct'), (('LL', 'Example'), 'appos'), (('(', 'parsing'), 'punct'), (('1', 'parsing'), 'nummod'), ((')', 'parsing'), 'punct'), (('parsing', 'Step'), 'appos'), (('Step', '#'), 'parataxis'), (('4', 'Step'), 'nummod'), ((':', 'Parse'), 'punct'), (('Parse', 'Step'), 'appos'), (('the', 'string'), 'det'), (('string', 'Parse'), 'obj'), ((':', 'id'), 'punct'), (('id', 'string'), 'appos'), (('+', 'id'), 'cc'), (('id', 'id'), 'conj'), (('*', 'id'), 'punct'), (('id', 'id'), 'conj'), (('$', 'id'), 'compound'), (('STACK', '$'), 'nummod'), (('INPUT', 'id'), 'compound'), (('OUTPUT', 'id'), 'compound'), (('E$', 'id'), 'compound'), (('id', 'id'), 'appos'), (('+', '$'), 'cc'), (('id*id', '$'), 'compound'), (('$', 'id'), 'compound'), (('TE', '$'), 'nummod'), (('’$', '$'), 'nummod'), (('id', '$'), 'appos'), (('+', 'id*id$'), 'cc'), (('id*id$', 'id'), 'compound'), (('E\uf0e0TE', 'id'), 'compound'), (('’', 'FT’E'), 'punct'), (('FT’E', 'id'), 'compound'), (('’$', 'FT’E'), 'punct'), (('id', 'id'), 'appos'), (('+', 'id'), 'cc'), (('id*id$', 'id'), 'compound'), (('T\uf0e0FT', 'id'), 'nmod:poss'), (('’', 'T\uf0e0FT'), 'case'), (('id', 'id'), 'conj')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('4', 'CARDINAL')]

========================== Sentence 110 ===========================

 T’E’$	id+id*id$	Fid  	T’E’$	+id*id$	  	+TE’$	+id*id$	E’+TE’  	E’$	+id*id$	T’𝜖  	id 

Tokens are: 
>> ['T’E', '’$', 'id', '+id*id$', 'F\uf0e0id', 'T’E', '’$', '+', 'id*id', '$', '+', 'TE', '’$', '+', 'id*id', '$', 'E’\uf0e0+TE', '’', 'E’$', '+', 'id*id', '$', 'T’\uf0e0𝜖', 'id'] 

 UPOS tags are: 
>> [('T’E', 'NOUN'), ('’$', 'PUNCT'), ('id', 'NOUN'), ('+id*id$', 'PUNCT'), ('F\uf0e0id', 'X'), ('T’E', 'X'), ('’$', 'X'), ('+', 'PUNCT'), ('id*id', 'NOUN'), ('$', 'SYM'), ('+', 'PUNCT'), ('TE', 'NOUN'), ('’$', 'NOUN'), ('+', 'SYM'), ('id*id', 'NOUN'), ('$', 'SYM'), ('E’\uf0e0+TE', 'NOUN'), ('’', 'PUNCT'), ('E’$', 'NOUN'), ('+', 'PUNCT'), ('id*id', 'NOUN'), ('$', 'SYM'), ('T’\uf0e0𝜖', 'NOUN'), ('id', 'NOUN')] 

 XPOS tags are: 
>> [('T’E', 'NN'), ('’$', ','), ('id', 'NN'), ('+id*id$', 'NFP'), ('F\uf0e0id', 'GW'), ('T’E', 'GW'), ('’$', 'GW'), ('+', ','), ('id*id', 'NN'), ('$', 'SYM'), ('+', ','), ('TE', 'NN'), ('’$', 'NN'), ('+', 'SYM'), ('id*id', 'NN'), ('$', '$'), ('E’\uf0e0+TE', 'NN'), ('’', ','), ('E’$', 'NN'), ('+', ','), ('id*id', 'NN'), ('$', '$'), ('T’\uf0e0𝜖', 'NN'), ('id', 'NN')] 

 Lemmas are: 
>> [('T’E', 't’e'), ('’$', "''"), ('id', 'id'), ('+id*id$', '+id*id'), ('F\uf0e0id', 'f\uf0e0id'), ('T’E', 'T’E'), ('’$', '’S'), ('+', '+'), ('id*id', 'id*id'), ('$', '$'), ('+', '+'), ('TE', 'te'), ('’$', "a'"), ('+', '+'), ('id*id', 'id*id'), ('$', '$'), ('E’\uf0e0+TE', 'e’\uf0e0+te'), ('’', "'"), ('E’$', 'E’$'), ('+', '+'), ('id*id', 'id*id'), ('$', '$'), ('T’\uf0e0𝜖', 't’\uf0e0𝜖'), ('id', 'id')] 

 Dependency tags are: 
>> [(('T’E', 'id'), 'compound'), (('’$', 'T’E'), 'punct'), (('id', 'root'), 'root'), (('+id*id$', 'id'), 'punct'), (('F\uf0e0id', 'id'), 'appos'), (('T’E', 'id'), 'appos'), (('’$', 'F\uf0e0id'), 'goeswith'), (('+', 'id'), 'punct'), (('id*id', '$'), 'compound'), (('$', 'id'), 'list'), (('+', '$'), 'punct'), (('TE', '$'), 'appos'), (('’$', '$'), 'appos'), (('+', '$'), 'cc'), (('id*id', '$'), 'compound'), (('$', '$'), 'appos'), (('E’\uf0e0+TE', '$'), 'nummod'), (('’', '$'), 'punct'), (('E’$', '$'), 'list'), (('+', 'id'), 'punct'), (('id*id', '$'), 'compound'), (('$', 'id'), 'compound'), (('T’\uf0e0𝜖', '$'), 'nummod'), (('id', 'id'), 'list')]

 Named Entities are: 
>> []

========================== Sentence 111 ===========================

 T’E’$	id$	Fid  	TE’ 

Tokens are: 
>> ['T’E', '’$', 'id', '$', 'F\uf0e0id', 'TE', '’'] 

 UPOS tags are: 
>> [('T’E', 'PROPN'), ('’$', 'NOUN'), ('id', 'NOUN'), ('$', 'SYM'), ('F\uf0e0id', 'PROPN'), ('TE', 'PROPN'), ('’', 'PUNCT')] 

 XPOS tags are: 
>> [('T’E', 'NNP'), ('’$', 'NN'), ('id', 'NN'), ('$', '$'), ('F\uf0e0id', 'NNP'), ('TE', 'NNP'), ('’', "''")] 

 Lemmas are: 
>> [('T’E', 'T’E'), ('’$', "a'"), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'F\uf0e0id'), ('TE', 'TE'), ('’', "'")] 

 Dependency tags are: 
>> [(('T’E', 'id'), 'compound'), (('’$', 'id'), 'compound'), (('id', 'root'), 'root'), (('$', 'id'), 'appos'), (('F\uf0e0id', '$'), 'flat'), (('TE', '$'), 'flat'), (('’', 'id'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 112 ===========================

 $	id*id$	  	T’E’$	$	  	FT’E’$	id*id$	TFT’  	E’$	$	T’𝜖  	FT’E’ 

Tokens are: 
>> ['$', 'id', '*', 'id', '$', 'T’E', '’$', '$', 'FT’E', '’$', 'id', '*', 'id$', 'T\uf0e0FT', '’', 'E’$', '$', 'T', '’\uf0e0𝜖', 'FT’E', '’'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('T’E', 'NUM'), ('’$', 'NUM'), ('$', 'SYM'), ('FT’E', 'NUM'), ('’$', 'NUM'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id$', 'PUNCT'), ('T\uf0e0FT', 'PROPN'), ('’', 'PART'), ('E’$', 'PROPN'), ('$', 'SYM'), ('T', 'NUM'), ('’\uf0e0𝜖', 'PUNCT'), ('FT’E', 'PROPN'), ('’', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('id', 'NN'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('T’E', 'CD'), ('’$', 'CD'), ('$', '$'), ('FT’E', 'CD'), ('’$', 'CD'), ('id', 'NN'), ('*', 'NFP'), ('id$', '-LRB-'), ('T\uf0e0FT', 'NNP'), ('’', 'POS'), ('E’$', 'NNP'), ('$', '$'), ('T', 'CD'), ('’\uf0e0𝜖', '-LRB-'), ('FT’E', 'NNP'), ('’', "''")] 

 Lemmas are: 
>> [('$', '$'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('T’E', 't’e'), ('’$', '’or'), ('$', '$'), ('FT’E', 'ft’e'), ('’$', '’or'), ('id', 'id'), ('*', '*'), ('id$', 'id$'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', "'s"), ('E’$', 'E’$'), ('$', '$'), ('T', 'T'), ('’\uf0e0𝜖', '’\uf0e0𝜖'), ('FT’E', 'FT’E'), ('’', "'")] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('id', '$'), 'flat'), (('*', '$'), 'punct'), (('id', '$'), 'appos'), (('$', '$'), 'appos'), (('T’E', '’$'), 'compound'), (('’$', '$'), 'nummod'), (('$', '$'), 'appos'), (('FT’E', '$'), 'nummod'), (('’$', '$'), 'nummod'), (('id', '$'), 'appos'), (('*', 'id'), 'punct'), (('id$', '$'), 'punct'), (('T\uf0e0FT', 'E’$'), 'nmod:poss'), (('’', 'T\uf0e0FT'), 'case'), (('E’$', 'id'), 'appos'), (('$', 'id'), 'appos'), (('T', '$'), 'nummod'), (('’\uf0e0𝜖', 'FT’E'), 'punct'), (('FT’E', '$'), 'appos'), (('’', 'FT’E'), 'punct')]

 Named Entities are: 
>> [('T’E', 'MONEY'), ('FT’E', 'MONEY')]

========================== Sentence 113 ===========================

 $	id$	  	$	$	E’𝜖  	*FT’E’$	*id$	T*FT’ 

Tokens are: 
>> ['$', 'id', '$', '$', '$', 'E’\uf0e0𝜖', '*', 'FT’E', '’$', '*', 'id$', 'T\uf0e0*', 'FT', '’'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('id', 'NOUN'), ('$', 'SYM'), ('$', 'SYM'), ('$', 'SYM'), ('E’\uf0e0𝜖', 'NUM'), ('*', 'PUNCT'), ('FT’E', 'NOUN'), ('’$', 'PUNCT'), ('*', 'PUNCT'), ('id$', 'PUNCT'), ('T\uf0e0*', 'NOUN'), ('FT', 'NOUN'), ('’', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('id', 'NN'), ('$', '$'), ('$', '$'), ('$', '$'), ('E’\uf0e0𝜖', 'CD'), ('*', 'NFP'), ('FT’E', 'NN'), ('’$', ','), ('*', 'NFP'), ('id$', '-LRB-'), ('T\uf0e0*', 'NN'), ('FT', 'NN'), ('’', "''")] 

 Lemmas are: 
>> [('$', '$'), ('id', 'id'), ('$', '$'), ('$', '$'), ('$', '$'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('*', '*'), ('FT’E', 'ft’e'), ('’$', "''"), ('*', '*'), ('id$', 'id$'), ('T\uf0e0*', 't\uf0e0*'), ('FT', 'ft'), ('’', "'")] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('id', '$'), 'flat'), (('$', '$'), 'appos'), (('$', '$'), 'compound'), (('$', '$'), 'appos'), (('E’\uf0e0𝜖', '$'), 'nummod'), (('*', 'FT’E'), 'punct'), (('FT’E', '$'), 'list'), (('’$', 'FT’E'), 'punct'), (('*', 'FT'), 'punct'), (('id$', 'FT'), 'punct'), (('T\uf0e0*', 'FT'), 'compound'), (('FT', '$'), 'appos'), (('’', 'FT'), 'punct')]

 Named Entities are: 
>> [('$\t  \t$\t$\tE’\uf0e0𝜖', 'MONEY')]

========================== Sentence 114 ===========================

 T’E’$	*id$	  	id 

Tokens are: 
>> ['T’E', '’$', '*', 'id$', 'id'] 

 UPOS tags are: 
>> [('T’E', 'PROPN'), ('’$', 'NOUN'), ('*', 'PUNCT'), ('id$', 'NOUN'), ('id', 'NOUN')] 

 XPOS tags are: 
>> [('T’E', 'NNP'), ('’$', 'NN'), ('*', 'NFP'), ('id$', 'NN'), ('id', 'NN')] 

 Lemmas are: 
>> [('T’E', 'T’E'), ('’$', "a'"), ('*', '*'), ('id$', 'id$'), ('id', 'id')] 

 Dependency tags are: 
>> [(('T’E', '’$'), 'compound'), (('’$', 'id'), 'compound'), (('*', 'id'), 'punct'), (('id$', 'id'), 'compound'), (('id', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 115 ===========================

 T’E’$	id*id$	Fid                                              	NT	Input Symbol					 		id	+	*	(	)	$ 	E	ETE’	Error	Error	ETE’	Error	Error 	E’	Error	E’+TE’	Error	Error	E’𝜖	E’𝜖 	T	TFT’	Error	Error	TFT’	Error	Error 	T’	Error	T’𝜖	T’*FT’	Error	T’𝜖	T’𝜖 	F	Fid	Error	Error	F(E)	Error	Error     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing methods Parsing Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['T’E', '’$', 'id', '*', 'id', '$', 'F\uf0e0id', 'NT', 'Input', 'Symbol', 'id', '+', '*', '(', ')', '$', 'E', 'E\uf0e0TE', '’', 'Error', 'Error', 'E\uf0e0TE', '’', 'Error', 'Error', 'E’', 'Error', 'E’\uf0e0+TE', '’', 'Error', 'Error', 'E’\uf0e0𝜖', 'E’\uf0e0𝜖', 'T', 'T\uf0e0FT', '’', 'Error', 'Error', 'T\uf0e0FT', '’', 'Error', 'Error', 'T’', 'Error', 'T’\uf0e0𝜖', 'T’\uf0e0*', 'FT', '’', 'Error', 'T’\uf0e0𝜖', 'T’\uf0e0𝜖', 'F', 'F\uf0e0id', 'Error', 'Error', 'F\uf0e0(', 'E', ')', 'Error', 'Error', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'methods', 'Parsing', 'Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('T’E', 'PROPN'), ('’$', 'NOUN'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('F\uf0e0id', 'NUM'), ('NT', 'PART'), ('Input', 'NOUN'), ('Symbol', 'NOUN'), ('id', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('(', 'PUNCT'), (')', 'PUNCT'), ('$', 'SYM'), ('E', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('E\uf0e0TE', 'PROPN'), ('’', 'PUNCT'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('E’', 'PROPN'), ('Error', 'NOUN'), ('E’\uf0e0+TE', 'PROPN'), ('’', 'PUNCT'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('E’\uf0e0𝜖', 'PROPN'), ('E’\uf0e0𝜖', 'X'), ('T', 'X'), ('T\uf0e0FT', 'PROPN'), ('’', 'PUNCT'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('T\uf0e0FT', 'PROPN'), ('’', 'PUNCT'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('T’', 'X'), ('Error', 'PROPN'), ('T’\uf0e0𝜖', 'PROPN'), ('T’\uf0e0*', 'PROPN'), ('FT', 'PROPN'), ('’', 'PUNCT'), ('Error', 'NOUN'), ('T’\uf0e0𝜖', 'PROPN'), ('T’\uf0e0𝜖', 'PROPN'), ('F', 'PROPN'), ('F\uf0e0id', 'PROPN'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('F\uf0e0(', 'PROPN'), ('E', 'PROPN'), (')', 'PUNCT'), ('Error', 'NOUN'), ('Error', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('methods', 'NOUN'), ('Parsing', 'NOUN'), ('Top', 'NOUN'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('T’E', 'NNP'), ('’$', 'NN'), ('id', 'NN'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('F\uf0e0id', 'CD'), ('NT', 'RB'), ('Input', 'NN'), ('Symbol', 'NN'), ('id', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('(', '-LRB-'), (')', '-RRB-'), ('$', '$'), ('E', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('Error', 'NN'), ('Error', 'NN'), ('E\uf0e0TE', 'NNP'), ('’', "''"), ('Error', 'NN'), ('Error', 'NN'), ('E’', 'NNP'), ('Error', 'NN'), ('E’\uf0e0+TE', 'NNP'), ('’', "''"), ('Error', 'NN'), ('Error', 'NN'), ('E’\uf0e0𝜖', 'NNP'), ('E’\uf0e0𝜖', 'FW'), ('T', 'FW'), ('T\uf0e0FT', 'NNP'), ('’', "''"), ('Error', 'NN'), ('Error', 'NN'), ('T\uf0e0FT', 'NNP'), ('’', "''"), ('Error', 'NN'), ('Error', 'NN'), ('T’', 'FW'), ('Error', 'NNP'), ('T’\uf0e0𝜖', 'NNP'), ('T’\uf0e0*', 'NNP'), ('FT', 'NNP'), ('’', "''"), ('Error', 'NN'), ('T’\uf0e0𝜖', 'NNP'), ('T’\uf0e0𝜖', 'NNP'), ('F', 'NNP'), ('F\uf0e0id', 'NNP'), ('Error', 'NN'), ('Error', 'NN'), ('F\uf0e0(', 'NNP'), ('E', 'NNP'), (')', '-RRB-'), ('Error', 'NN'), ('Error', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('methods', 'NNS'), ('Parsing', 'NN'), ('Top', 'NN'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('T’E', 'T’E'), ('’$', "a'"), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('F\uf0e0id', 'f\uf0e0id'), ('NT', 'not'), ('Input', 'input'), ('Symbol', 'symbol'), ('id', 'id'), ('+', '+'), ('*', '*'), ('(', '('), (')', ')'), ('$', '$'), ('E', 'e'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('Error', 'error'), ('Error', 'error'), ('E\uf0e0TE', 'E\uf0e0TE'), ('’', "'"), ('Error', 'error'), ('Error', 'error'), ('E’', 'E’'), ('Error', 'error'), ('E’\uf0e0+TE', 'E’\uf0e0+TE'), ('’', "'"), ('Error', 'error'), ('Error', 'error'), ('E’\uf0e0𝜖', 'E’\uf0e0𝜖'), ('E’\uf0e0𝜖', 'e’\uf0e0𝜖'), ('T', 'T'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', "'"), ('Error', 'error'), ('Error', 'error'), ('T\uf0e0FT', 'T\uf0e0FT'), ('’', "'"), ('Error', 'error'), ('Error', 'error'), ('T’', 't’'), ('Error', 'Error'), ('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), ('T’\uf0e0*', 'T’\uf0e0*'), ('FT', 'FT'), ('’', "'"), ('Error', 'error'), ('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), ('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), ('F', 'F'), ('F\uf0e0id', 'F\uf0e0id'), ('Error', 'error'), ('Error', 'error'), ('F\uf0e0(', 'F\uf0e0('), ('E', 'E'), (')', ')'), ('Error', 'error'), ('Error', 'error'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('methods', 'method'), ('Parsing', 'parsing'), ('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('T’E', 'id'), 'compound'), (('’$', 'id'), 'compound'), (('id', 'root'), 'root'), (('*', 'id'), 'punct'), (('id', 'id'), 'appos'), (('$', 'id'), 'appos'), (('F\uf0e0id', '$'), 'nummod'), (('NT', 'id'), 'advmod'), (('Input', 'id'), 'compound'), (('Symbol', 'id'), 'compound'), (('id', 'id'), 'conj'), (('+', 'id'), 'cc'), (('*', '$'), 'punct'), (('(', '$'), 'punct'), ((')', '$'), 'punct'), (('$', 'id'), 'appos'), (('E', 'E\uf0e0TE'), 'compound'), (('E\uf0e0TE', '$'), 'flat'), (('’', '$'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', '$'), 'appos'), (('E\uf0e0TE', '$'), 'appos'), (('’', 'E\uf0e0TE'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'id'), 'conj'), (('E’', 'Error'), 'compound'), (('Error', 'Error'), 'appos'), (('E’\uf0e0+TE', 'Error'), 'appos'), (('’', 'Error'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'id'), 'conj'), (('E’\uf0e0𝜖', 'Error'), 'appos'), (('E’\uf0e0𝜖', 'Error'), 'appos'), (('T', 'Error'), 'appos'), (('T\uf0e0FT', 'T'), 'flat'), (('’', 'Error'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', 'id'), 'conj'), (('T\uf0e0FT', 'Error'), 'compound'), (('’', 'T\uf0e0FT'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', '$'), 'conj'), (('T’', 'Error'), 'punct'), (('Error', 'Error'), 'compound'), (('T’\uf0e0𝜖', 'FT'), 'compound'), (('T’\uf0e0*', 'FT'), 'compound'), (('FT', 'Error'), 'flat'), (('’', 'FT'), 'punct'), (('Error', '$'), 'conj'), (('T’\uf0e0𝜖', 'T’\uf0e0𝜖'), 'compound'), (('T’\uf0e0𝜖', 'id'), 'conj'), (('F', 'Error'), 'compound'), (('F\uf0e0id', 'Error'), 'compound'), (('Error', 'Error'), 'compound'), (('Error', '$'), 'conj'), (('F\uf0e0(', 'E'), 'compound'), (('E', 'Error'), 'appos'), ((')', 'E'), 'punct'), (('Error', 'Error'), 'compound'), (('Error', '$'), 'conj'), (('Prof.', 'Error'), 'compound'), (('Jay', 'Prof.'), 'flat'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Error'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'methods'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'methods'), 'compound'), (('Parsing', 'methods'), 'compound'), (('methods', 'Theory'), 'appos'), (('Parsing', 'methods'), 'compound'), (('Top', 'methods'), 'compound'), (('down', 'methods'), 'compound'), (('parsing', 'parsing'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'methods'), 'conj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 116 ===========================

 Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#', '›'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('LALR', 'NOUN'), ('CLR', 'NOUN'), ('SLR', 'NOUN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#', 'X'), ('›', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('LALR', 'NN'), ('CLR', 'NN'), ('SLR', 'NN'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#', 'ADD'), ('›', '-RRB-')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'lalr'), ('CLR', 'CLR'), ('SLR', 'slr'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#', '‹#'), ('›', "''")] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'parsing'), 'punct'), (('predictive', 'parsing'), 'amod'), (('parsing', 'backtracking'), 'appos'), ((')', 'parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obj'), (('LALR', 'precedence'), 'compound'), (('CLR', 'descent'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'appos'), (('LL', 'descent'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'R'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'tracking'), 'parataxis'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'tracking'), 'parataxis'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'appos'), (('Kagathara', '#'), 'appos'), (('#', 'B'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', '‹#'), 'punct'), (('I', '‹#'), 'nummod'), ((')', 'I'), 'punct'), (('‹#', 'Theory'), 'appos'), (('›', '‹#'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 117 ===========================

 Recursive descent parsing A top down parsing that executes a set of recursive procedure to process the input without backtracking is called recursive descent parser. 

Tokens are: 
>> ['Recursive', 'descent', 'parsing', 'A', 'top', 'down', 'parsing', 'that', 'executes', 'a', 'set', 'of', 'recursive', 'procedure', 'to', 'process', 'the', 'input', 'without', 'backtracking', 'is', 'called', 'recursive', 'descent', 'parser', '.'] 

 UPOS tags are: 
>> [('Recursive', 'ADJ'), ('descent', 'NOUN'), ('parsing', 'VERB'), ('A', 'DET'), ('top', 'NOUN'), ('down', 'ADP'), ('parsing', 'NOUN'), ('that', 'PRON'), ('executes', 'VERB'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('recursive', 'ADJ'), ('procedure', 'NOUN'), ('to', 'PART'), ('process', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('without', 'SCONJ'), ('backtracking', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('recursive', 'ADJ'), ('descent', 'NOUN'), ('parser', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Recursive', 'JJ'), ('descent', 'NN'), ('parsing', 'VBG'), ('A', 'DT'), ('top', 'NN'), ('down', 'RP'), ('parsing', 'NN'), ('that', 'WDT'), ('executes', 'VBZ'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('recursive', 'JJ'), ('procedure', 'NN'), ('to', 'TO'), ('process', 'VB'), ('the', 'DT'), ('input', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('recursive', 'JJ'), ('descent', 'NN'), ('parser', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Recursive', 'recursive'), ('descent', 'descent'), ('parsing', 'parse'), ('A', 'a'), ('top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('that', 'that'), ('executes', 'execute'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('recursive', 'recursive'), ('procedure', 'procedure'), ('to', 'to'), ('process', 'process'), ('the', 'the'), ('input', 'input'), ('without', 'without'), ('backtracking', 'backtracking'), ('is', 'be'), ('called', 'call'), ('recursive', 'recursive'), ('descent', 'descent'), ('parser', 'parser'), ('.', '.')] 

 Dependency tags are: 
>> [(('Recursive', 'descent'), 'amod'), (('descent', 'root'), 'root'), (('parsing', 'descent'), 'acl'), (('A', 'parsing'), 'det'), (('top', 'parsing'), 'compound'), (('down', 'parsing'), 'compound:prt'), (('parsing', 'parsing'), 'obj'), (('that', 'executes'), 'nsubj'), (('executes', 'parsing'), 'acl:relcl'), (('a', 'set'), 'det'), (('set', 'executes'), 'obj'), (('of', 'procedure'), 'case'), (('recursive', 'procedure'), 'amod'), (('procedure', 'set'), 'nmod'), (('to', 'process'), 'mark'), (('process', 'executes'), 'advcl'), (('the', 'input'), 'det'), (('input', 'process'), 'obj'), (('without', 'called'), 'mark'), (('backtracking', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'process'), 'advcl'), (('recursive', 'parser'), 'amod'), (('descent', 'parser'), 'compound'), (('parser', 'called'), 'xcomp'), (('.', 'descent'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 118 ===========================

 There is a procedure for each non terminal in the grammar. 

Tokens are: 
>> ['There', 'is', 'a', 'procedure', 'for', 'each', 'non', 'terminal', 'in', 'the', 'grammar', '.'] 

 UPOS tags are: 
>> [('There', 'PRON'), ('is', 'VERB'), ('a', 'DET'), ('procedure', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('There', 'EX'), ('is', 'VBZ'), ('a', 'DT'), ('procedure', 'NN'), ('for', 'IN'), ('each', 'DT'), ('non', 'NN'), ('terminal', 'NN'), ('in', 'IN'), ('the', 'DT'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('There', 'there'), ('is', 'be'), ('a', 'a'), ('procedure', 'procedure'), ('for', 'for'), ('each', 'each'), ('non', 'non'), ('terminal', 'terminal'), ('in', 'in'), ('the', 'the'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('There', 'is'), 'expl'), (('is', 'root'), 'root'), (('a', 'procedure'), 'det'), (('procedure', 'is'), 'nsubj'), (('for', 'terminal'), 'case'), (('each', 'terminal'), 'det'), (('non', 'terminal'), 'compound'), (('terminal', 'procedure'), 'nmod'), (('in', 'grammar'), 'case'), (('the', 'grammar'), 'det'), (('grammar', 'terminal'), 'nmod'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 119 ===========================

 Consider RHS of any production rule as definition of the procedure. 

Tokens are: 
>> ['Consider', 'RHS', 'of', 'any', 'production', 'rule', 'as', 'definition', 'of', 'the', 'procedure', '.'] 

 UPOS tags are: 
>> [('Consider', 'VERB'), ('RHS', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('production', 'NOUN'), ('rule', 'NOUN'), ('as', 'ADP'), ('definition', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('procedure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Consider', 'VB'), ('RHS', 'NN'), ('of', 'IN'), ('any', 'DT'), ('production', 'NN'), ('rule', 'NN'), ('as', 'IN'), ('definition', 'NN'), ('of', 'IN'), ('the', 'DT'), ('procedure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Consider', 'consider'), ('RHS', 'RHS'), ('of', 'of'), ('any', 'any'), ('production', 'production'), ('rule', 'rule'), ('as', 'as'), ('definition', 'definition'), ('of', 'of'), ('the', 'the'), ('procedure', 'procedure'), ('.', '.')] 

 Dependency tags are: 
>> [(('Consider', 'root'), 'root'), (('RHS', 'Consider'), 'obj'), (('of', 'rule'), 'case'), (('any', 'rule'), 'det'), (('production', 'rule'), 'compound'), (('rule', 'RHS'), 'nmod'), (('as', 'definition'), 'case'), (('definition', 'Consider'), 'obl'), (('of', 'procedure'), 'case'), (('the', 'procedure'), 'det'), (('procedure', 'definition'), 'nmod'), (('.', 'Consider'), 'punct')]

 Named Entities are: 
>> [('RHS', 'ORG')]

========================== Sentence 120 ===========================

 As it reads expected input symbol, it advances input pointer to next position. 

Tokens are: 
>> ['As', 'it', 'reads', 'expected', 'input', 'symbol', ',', 'it', 'advances', 'input', 'pointer', 'to', 'next', 'position', '.'] 

 UPOS tags are: 
>> [('As', 'SCONJ'), ('it', 'PRON'), ('reads', 'VERB'), ('expected', 'VERB'), ('input', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('advances', 'VERB'), ('input', 'NOUN'), ('pointer', 'NOUN'), ('to', 'ADP'), ('next', 'ADJ'), ('position', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('it', 'PRP'), ('reads', 'VBZ'), ('expected', 'VBN'), ('input', 'NN'), ('symbol', 'NN'), (',', ','), ('it', 'PRP'), ('advances', 'VBZ'), ('input', 'NN'), ('pointer', 'NN'), ('to', 'IN'), ('next', 'JJ'), ('position', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('it', 'it'), ('reads', 'read'), ('expected', 'expect'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('it', 'it'), ('advances', 'advance'), ('input', 'input'), ('pointer', 'pointer'), ('to', 'to'), ('next', 'next'), ('position', 'position'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'reads'), 'mark'), (('it', 'reads'), 'nsubj'), (('reads', 'advances'), 'advcl'), (('expected', 'symbol'), 'amod'), (('input', 'symbol'), 'compound'), (('symbol', 'reads'), 'obj'), ((',', 'advances'), 'punct'), (('it', 'advances'), 'nsubj'), (('advances', 'root'), 'root'), (('input', 'pointer'), 'compound'), (('pointer', 'advances'), 'obj'), (('to', 'position'), 'case'), (('next', 'position'), 'amod'), (('position', 'advances'), 'obl'), (('.', 'advances'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 121 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Recursive descent parsing Procedure E { 	If lookahead=num  	{ 		Match(num); 		T(); 	} 	Else 		Error(); 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Recursive', 'descent', 'parsing', 'Procedure', 'E', '{', 'If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('parsing', 'NOUN'), ('Procedure', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('If', 'SCONJ'), ('lookahead=num', 'NOUN'), ('{', 'PUNCT'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('num', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), ('T', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Recursive', 'JJ'), ('descent', 'NN'), ('parsing', 'NN'), ('Procedure', 'NN'), ('E', 'NN'), ('{', 'NFP'), ('If', 'IN'), ('lookahead=num', 'NN'), ('{', 'NFP'), ('Match', 'NN'), ('(', '-LRB-'), ('num', 'NN'), (')', '-RRB-'), (';', ','), ('T', 'NNP'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ',')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Recursive', 'recursive'), ('descent', 'descent'), ('parsing', 'parsing'), ('Procedure', 'procedure'), ('E', 'e'), ('{', '{'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Prof.'), 'list'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Prof.'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', 'Prof.'), 'appos'), (('#', 'Prof.'), 'list'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'list'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'appos'), (('Example', 'Prof.'), 'list'), ((':', 'Example'), 'punct'), (('Recursive', 'Procedure'), 'amod'), (('descent', 'Procedure'), 'compound'), (('parsing', 'Procedure'), 'compound'), (('Procedure', 'Example'), 'appos'), (('E', 'Example'), 'appos'), (('{', 'E'), 'punct'), (('If', 'lookahead=num'), 'mark'), (('lookahead=num', 'Match'), 'compound'), (('{', 'Match'), 'punct'), (('Match', 'E'), 'appos'), (('(', 'num'), 'punct'), (('num', 'Match'), 'appos'), ((')', 'num'), 'punct'), ((';', 'Match'), 'punct'), (('T', 'Match'), 'appos'), (('(', 'T'), 'punct'), ((')', 'T'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'Error'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'T'), 'appos'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Prof.'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 122 ===========================

 If lookahead=$ 	{ 		Declare success; 	} 	Else 		Error(); }  Procedure T { 	If lookahead=’*’  	{ 		Match(‘*’); 

Tokens are: 
>> ['If', 'lookahead', '=', '$', '{', 'Declare', 'success', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'T', '{', 'If', 'lookahead', '=’*’', '{', 'Match', '(', '‘', '*', '’', ')', ';'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('lookahead', 'NOUN'), ('=', 'PUNCT'), ('$', 'SYM'), ('{', 'PUNCT'), ('Declare', 'VERB'), ('success', 'NOUN'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Procedure', 'NOUN'), ('T', 'NOUN'), ('{', 'PUNCT'), ('If', 'SCONJ'), ('lookahead', 'NOUN'), ('=’*’', 'PUNCT'), ('{', 'PUNCT'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('‘', 'PUNCT'), ('*', 'PUNCT'), ('’', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('lookahead', 'NN'), ('=', ','), ('$', '$'), ('{', ','), ('Declare', 'VB'), ('success', 'NN'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Procedure', 'NN'), ('T', 'NN'), ('{', 'NFP'), ('If', 'IN'), ('lookahead', 'NN'), ('=’*’', ','), ('{', 'NFP'), ('Match', 'NN'), ('(', '-LRB-'), ('‘', '``'), ('*', 'NFP'), ('’', "''"), (')', '-RRB-'), (';', ',')] 

 Lemmas are: 
>> [('If', 'if'), ('lookahead', 'lookahead'), ('=', '='), ('$', '$'), ('{', '{'), ('Declare', 'declare'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedure'), ('T', 'T'), ('{', '{'), ('If', 'if'), ('lookahead', 'lookahead'), ('=’*’', '=’*’'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('‘', "'"), ('*', '*'), ('’', "'"), (')', ')'), (';', ';')] 

 Dependency tags are: 
>> [(('If', 'lookahead'), 'mark'), (('lookahead', 'Declare'), 'advcl'), (('=', 'Declare'), 'punct'), (('$', 'Declare'), 'nsubj'), (('{', '$'), 'punct'), (('Declare', 'root'), 'root'), (('success', 'Declare'), 'obj'), ((';', 'Declare'), 'punct'), (('}', 'Error'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'Declare'), 'obj'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'Procedure'), 'punct'), (('Procedure', 'Error'), 'appos'), (('T', 'Procedure'), 'appos'), (('{', 'Procedure'), 'punct'), (('If', 'lookahead'), 'mark'), (('lookahead', 'Match'), 'nsubj'), (('=’*’', 'lookahead'), 'punct'), (('{', 'Match'), 'punct'), (('Match', 'Declare'), 'parataxis'), (('(', 'Match'), 'punct'), (('‘', 'Match'), 'punct'), (('*', 'Match'), 'punct'), (('’', 'Match'), 'punct'), ((')', 'Match'), 'punct'), ((';', 'Declare'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 123 ===========================

 If lookahead=num  		{ 			Match(num); 			T(); 		} 		Else 			Error();   	} 	Else 		NULL } Proceduce Match(token t) { 	If lookahead=t 	lookahead=next_token; 	Else 		Error(); } Procedure Error { 	Print(“Error”); } 	 	E  	T 	3	*	4	$   num T num * T | 𝜖  Success    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Recursive descent parsing Procedure E { 	If lookahead=num  	{ 		Match(num); 		T(); 	} 	Else 		Error(); 

Tokens are: 
>> ['If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Else', 'NULL', '}', 'Proceduce', 'Match', '(', 'token', 't)', '{', 'If', 'lookahead=t', 'lookahead=next_token', ';', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'Error', '{', 'Print', '(', '“', 'Error', '”', ')', ';', '}', 'E\uf0e0', 'T\uf0e0', '3', '*', '4', '$', 'num', 'T', 'num', '*', 'T', '|', '𝜖', 'Success', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Recursive', 'descent', 'parsing', 'Procedure', 'E', '{', 'If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('lookahead=num', 'NOUN'), ('{', 'PUNCT'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('num', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), ('T', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('NULL', 'NOUN'), ('}', 'PUNCT'), ('Proceduce', 'ADJ'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('token', 'NOUN'), ('t)', 'PUNCT'), ('{', 'PUNCT'), ('If', 'SCONJ'), ('lookahead=t', 'PROPN'), ('lookahead=next_token', 'PROPN'), (';', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Procedure', 'NOUN'), ('Error', 'NOUN'), ('{', 'PUNCT'), ('Print', 'NOUN'), ('(', 'PUNCT'), ('“', 'PUNCT'), ('Error', 'NOUN'), ('”', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0', 'PROPN'), ('T\uf0e0', 'PROPN'), ('3', 'NUM'), ('*', 'PUNCT'), ('4', 'NUM'), ('$', 'SYM'), ('num', 'NOUN'), ('T', 'NOUN'), ('num', 'NOUN'), ('*', 'PUNCT'), ('T', 'NOUN'), ('|', 'PUNCT'), ('𝜖', 'PROPN'), ('Success', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('parsing', 'NOUN'), ('Procedure', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('If', 'SCONJ'), ('lookahead=num', 'NOUN'), ('{', 'PUNCT'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('num', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), ('T', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('lookahead=num', 'NN'), ('{', ','), ('Match', 'NN'), ('(', '-LRB-'), ('num', 'NN'), (')', '-RRB-'), (';', ','), ('T', 'NNP'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('NULL', 'NN'), ('}', 'NFP'), ('Proceduce', 'JJ'), ('Match', 'NN'), ('(', '-LRB-'), ('token', 'NN'), ('t)', '-RRB-'), ('{', 'NFP'), ('If', 'IN'), ('lookahead=t', 'NNP'), ('lookahead=next_token', 'NNP'), (';', ','), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Procedure', 'NN'), ('Error', 'NN'), ('{', 'NFP'), ('Print', 'NN'), ('(', '-LRB-'), ('“', '``'), ('Error', 'NN'), ('”', "''"), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('E\uf0e0', 'NNP'), ('T\uf0e0', 'NNP'), ('3', 'CD'), ('*', 'NFP'), ('4', 'CD'), ('$', '$'), ('num', 'NN'), ('T', 'NN'), ('num', 'NN'), ('*', 'NFP'), ('T', 'NN'), ('|', 'NFP'), ('𝜖', 'NNP'), ('Success', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Recursive', 'JJ'), ('descent', 'NN'), ('parsing', 'NN'), ('Procedure', 'NN'), ('E', 'NN'), ('{', 'NFP'), ('If', 'IN'), ('lookahead=num', 'NN'), ('{', 'NFP'), ('Match', 'NN'), ('(', '-LRB-'), ('num', 'NN'), (')', '-RRB-'), (';', ','), ('T', 'NNP'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ',')] 

 Lemmas are: 
>> [('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('NULL', 'null'), ('}', '}'), ('Proceduce', 'proceduce'), ('Match', 'Match'), ('(', '('), ('token', 'token'), ('t)', 't)'), ('{', '{'), ('If', 'if'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedure'), ('Error', 'error'), ('{', '{'), ('Print', 'print'), ('(', '('), ('“', "''"), ('Error', 'error'), ('”', "''"), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'E\uf0e0'), ('T\uf0e0', 'T\uf0e0'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('num', 'num'), ('T', 'T'), ('num', 'num'), ('*', '*'), ('T', 'T'), ('|', '|'), ('𝜖', '𝜖'), ('Success', 'success'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Recursive', 'recursive'), ('descent', 'descent'), ('parsing', 'parsing'), ('Procedure', 'procedure'), ('E', 'e'), ('{', '{'), ('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';')] 

 Dependency tags are: 
>> [(('If', 'lookahead=num'), 'mark'), (('lookahead=num', 'Match'), 'nsubj'), (('{', 'Match'), 'punct'), (('Match', 'root'), 'root'), (('(', 'num'), 'punct'), (('num', 'Match'), 'appos'), ((')', 'num'), 'punct'), ((';', 'Match'), 'punct'), (('T', 'Match'), 'conj'), (('(', 'T'), 'punct'), ((')', 'T'), 'punct'), ((';', 'Match'), 'punct'), (('}', 'Error'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'Match'), 'conj'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'NULL'), 'punct'), (('Else', 'NULL'), 'amod'), (('NULL', 'Error'), 'conj'), (('}', 'NULL'), 'punct'), (('Proceduce', 'Match'), 'amod'), (('Match', 'Error'), 'conj'), (('(', 'token'), 'punct'), (('token', 'Match'), 'appos'), (('t)', 'token'), 'punct'), (('{', 'Match'), 'punct'), (('If', 'lookahead=t'), 'mark'), (('lookahead=t', 'Match'), 'nmod'), (('lookahead=next_token', 'lookahead=t'), 'flat'), ((';', 'lookahead=t'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'Error'), 'conj'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'Error'), 'punct'), (('Procedure', 'Error'), 'compound'), (('Error', 'Error'), 'conj'), (('{', 'Print'), 'punct'), (('Print', 'Error'), 'conj'), (('(', 'Error'), 'punct'), (('“', 'Error'), 'punct'), (('Error', 'Print'), 'appos'), (('”', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'E\uf0e0'), 'punct'), (('}', 'E\uf0e0'), 'punct'), (('E\uf0e0', 'Error'), 'conj'), (('T\uf0e0', 'E\uf0e0'), 'flat'), (('3', 'E\uf0e0'), 'flat'), (('*', '$'), 'punct'), (('4', '$'), 'nummod'), (('$', 'E\uf0e0'), 'dep'), (('num', '$'), 'nummod'), (('T', '$'), 'compound'), (('num', '$'), 'appos'), (('*', 'T'), 'punct'), (('T', '$'), 'appos'), (('|', 'Success'), 'punct'), (('𝜖', 'Success'), 'compound'), (('Success', 'Error'), 'conj'), (('Prof', 'Success'), 'flat'), (('.', 'Success'), 'punct'), (('Jay', 'Error'), 'conj'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'dep'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), ((':', 'Example'), 'punct'), (('Recursive', 'Procedure'), 'amod'), (('descent', 'Procedure'), 'compound'), (('parsing', 'Procedure'), 'compound'), (('Procedure', 'Example'), 'appos'), (('E', 'Procedure'), 'appos'), (('{', 'Procedure'), 'punct'), (('If', 'lookahead=num'), 'mark'), (('lookahead=num', 'Match'), 'compound'), (('{', 'lookahead=num'), 'punct'), (('Match', 'Procedure'), 'compound'), (('(', 'num'), 'punct'), (('num', 'Match'), 'appos'), ((')', 'num'), 'punct'), ((';', 'Match'), 'punct'), (('T', 'Match'), 'dep'), (('(', 'T'), 'punct'), ((')', 'T'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'Error'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'T'), 'appos'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 124 ===========================

 If lookahead=$ 	{ 		Declare success; 	} 	Else 		Error(); }  Procedure T { 	If lookahead=’*’  	{ 		Match(‘*’); 

Tokens are: 
>> ['If', 'lookahead', '=', '$', '{', 'Declare', 'success', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'T', '{', 'If', 'lookahead', '=’*’', '{', 'Match', '(', '‘', '*', '’', ')', ';'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('lookahead', 'NOUN'), ('=', 'PUNCT'), ('$', 'SYM'), ('{', 'PUNCT'), ('Declare', 'VERB'), ('success', 'NOUN'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Procedure', 'NOUN'), ('T', 'NOUN'), ('{', 'PUNCT'), ('If', 'SCONJ'), ('lookahead', 'NOUN'), ('=’*’', 'PUNCT'), ('{', 'PUNCT'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('‘', 'PUNCT'), ('*', 'PUNCT'), ('’', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('lookahead', 'NN'), ('=', ','), ('$', '$'), ('{', ','), ('Declare', 'VB'), ('success', 'NN'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Procedure', 'NN'), ('T', 'NN'), ('{', 'NFP'), ('If', 'IN'), ('lookahead', 'NN'), ('=’*’', ','), ('{', 'NFP'), ('Match', 'NN'), ('(', '-LRB-'), ('‘', '``'), ('*', 'NFP'), ('’', "''"), (')', '-RRB-'), (';', ',')] 

 Lemmas are: 
>> [('If', 'if'), ('lookahead', 'lookahead'), ('=', '='), ('$', '$'), ('{', '{'), ('Declare', 'declare'), ('success', 'success'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedure'), ('T', 'T'), ('{', '{'), ('If', 'if'), ('lookahead', 'lookahead'), ('=’*’', '=’*’'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('‘', "'"), ('*', '*'), ('’', "'"), (')', ')'), (';', ';')] 

 Dependency tags are: 
>> [(('If', 'lookahead'), 'mark'), (('lookahead', 'Declare'), 'advcl'), (('=', 'Declare'), 'punct'), (('$', 'Declare'), 'nsubj'), (('{', '$'), 'punct'), (('Declare', 'root'), 'root'), (('success', 'Declare'), 'obj'), ((';', 'Declare'), 'punct'), (('}', 'Error'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'Declare'), 'obj'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'Procedure'), 'punct'), (('Procedure', 'Error'), 'appos'), (('T', 'Procedure'), 'appos'), (('{', 'Procedure'), 'punct'), (('If', 'lookahead'), 'mark'), (('lookahead', 'Match'), 'nsubj'), (('=’*’', 'lookahead'), 'punct'), (('{', 'Match'), 'punct'), (('Match', 'Declare'), 'parataxis'), (('(', 'Match'), 'punct'), (('‘', 'Match'), 'punct'), (('*', 'Match'), 'punct'), (('’', 'Match'), 'punct'), ((')', 'Match'), 'punct'), ((';', 'Declare'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 125 ===========================

 If lookahead=num  		{ 			Match(num); 			T(); 		} 		Else 			Error();   	} 	Else 		NULL } Proceduce Match(token t) { 	If lookahead=t 	lookahead=next_token; 	Else 		Error(); } Procedure Error { 	Print(“Error”); } 	 	E  	T num T num * T | 𝜖 Success 	3	4	*	$  Error 	3	*	4	$     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['If', 'lookahead=num', '{', 'Match', '(', 'num', ')', ';', 'T', '(', ')', ';', '}', 'Else', 'Error', '(', ')', ';', '}', 'Else', 'NULL', '}', 'Proceduce', 'Match', '(', 'token', 't)', '{', 'If', 'lookahead=t', 'lookahead=next_token', ';', 'Else', 'Error', '(', ')', ';', '}', 'Procedure', 'Error', '{', 'Print', '(', '“', 'Error', '”', ')', ';', '}', 'E\uf0e0', 'T\uf0e0', 'num', 'T', 'num', '*', 'T', '|', '𝜖', 'Success', '3', '4', '*', '$', 'Error', '3', '*', '4', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('lookahead=num', 'NOUN'), ('{', 'PUNCT'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('num', 'NOUN'), (')', 'PUNCT'), (';', 'PUNCT'), ('T', 'PROPN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Else', 'ADJ'), ('NULL', 'NOUN'), ('}', 'PUNCT'), ('Proceduce', 'ADJ'), ('Match', 'NOUN'), ('(', 'PUNCT'), ('token', 'NOUN'), ('t)', 'PUNCT'), ('{', 'PUNCT'), ('If', 'SCONJ'), ('lookahead=t', 'NOUN'), ('lookahead=next_token', 'PROPN'), (';', 'PUNCT'), ('Else', 'ADJ'), ('Error', 'NOUN'), ('(', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('Procedure', 'NOUN'), ('Error', 'NOUN'), ('{', 'PUNCT'), ('Print', 'NOUN'), ('(', 'PUNCT'), ('“', 'PUNCT'), ('Error', 'NOUN'), ('”', 'PUNCT'), (')', 'PUNCT'), (';', 'PUNCT'), ('}', 'PUNCT'), ('E\uf0e0', 'PROPN'), ('T\uf0e0', 'NOUN'), ('num', 'NOUN'), ('T', 'NOUN'), ('num', 'NOUN'), ('*', 'PUNCT'), ('T', 'NOUN'), ('|', 'PUNCT'), ('𝜖', 'PUNCT'), ('Success', 'NOUN'), ('3', 'NUM'), ('4', 'NUM'), ('*', 'PUNCT'), ('$', 'SYM'), ('Error', 'NOUN'), ('3', 'NUM'), ('*', 'PUNCT'), ('4', 'NUM'), ('$', 'SYM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('If', 'IN'), ('lookahead=num', 'NN'), ('{', ','), ('Match', 'NN'), ('(', '-LRB-'), ('num', 'NN'), (')', '-RRB-'), (';', ','), ('T', 'NNP'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Else', 'JJ'), ('NULL', 'NN'), ('}', 'NFP'), ('Proceduce', 'JJ'), ('Match', 'NN'), ('(', '-LRB-'), ('token', 'NN'), ('t)', '-RRB-'), ('{', 'NFP'), ('If', 'IN'), ('lookahead=t', 'NN'), ('lookahead=next_token', 'NNP'), (';', ','), ('Else', 'JJ'), ('Error', 'NN'), ('(', '-LRB-'), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('Procedure', 'NN'), ('Error', 'NN'), ('{', 'NFP'), ('Print', 'NN'), ('(', '-LRB-'), ('“', '``'), ('Error', 'NN'), ('”', "''"), (')', '-RRB-'), (';', ','), ('}', 'NFP'), ('E\uf0e0', 'NNP'), ('T\uf0e0', 'NN'), ('num', 'NN'), ('T', 'NN'), ('num', 'NN'), ('*', 'NFP'), ('T', 'NN'), ('|', 'NFP'), ('𝜖', 'NFP'), ('Success', 'NN'), ('3', 'CD'), ('4', 'CD'), ('*', 'NFP'), ('$', '$'), ('Error', 'NN'), ('3', 'CD'), ('*', 'NFP'), ('4', 'CD'), ('$', '$'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('If', 'if'), ('lookahead=num', 'lookahead=num'), ('{', '{'), ('Match', 'Match'), ('(', '('), ('num', 'num'), (')', ')'), (';', ';'), ('T', 'T'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Else', 'Else'), ('NULL', 'null'), ('}', '}'), ('Proceduce', 'proceduce'), ('Match', 'Match'), ('(', '('), ('token', 'token'), ('t)', 't)'), ('{', '{'), ('If', 'if'), ('lookahead=t', 'lookahead=t'), ('lookahead=next_token', 'lookahead=next_token'), (';', ';'), ('Else', 'Else'), ('Error', 'error'), ('(', '('), (')', ')'), (';', ';'), ('}', '}'), ('Procedure', 'procedure'), ('Error', 'error'), ('{', '{'), ('Print', 'print'), ('(', '('), ('“', "''"), ('Error', 'error'), ('”', "''"), (')', ')'), (';', ';'), ('}', '}'), ('E\uf0e0', 'E\uf0e0'), ('T\uf0e0', 't\uf0e0'), ('num', 'num'), ('T', 'T'), ('num', 'num'), ('*', '*'), ('T', 'T'), ('|', '|'), ('𝜖', "''"), ('Success', 'success'), ('3', '3'), ('4', '4'), ('*', '*'), ('$', '$'), ('Error', 'error'), ('3', '3'), ('*', '*'), ('4', '4'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('If', 'lookahead=num'), 'mark'), (('lookahead=num', 'Match'), 'compound'), (('{', 'Match'), 'punct'), (('Match', 'root'), 'root'), (('(', 'num'), 'punct'), (('num', 'Match'), 'appos'), ((')', 'num'), 'punct'), ((';', 'Match'), 'punct'), (('T', 'Match'), 'conj'), (('(', 'T'), 'punct'), ((')', 'T'), 'punct'), ((';', 'Match'), 'punct'), (('}', 'Error'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'Match'), 'conj'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'NULL'), 'punct'), (('Else', 'NULL'), 'amod'), (('NULL', 'Error'), 'conj'), (('}', 'Match'), 'punct'), (('Proceduce', 'Match'), 'amod'), (('Match', 'Error'), 'conj'), (('(', 'token'), 'punct'), (('token', 'Match'), 'appos'), (('t)', 'token'), 'punct'), (('{', 'Match'), 'punct'), (('If', 'lookahead=next_token'), 'mark'), (('lookahead=t', 'lookahead=next_token'), 'compound'), (('lookahead=next_token', 'Match'), 'nmod'), ((';', 'lookahead=next_token'), 'punct'), (('Else', 'Error'), 'amod'), (('Error', 'lookahead=next_token'), 'appos'), (('(', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'Error'), 'punct'), (('}', 'Error'), 'punct'), (('Procedure', 'Error'), 'compound'), (('Error', 'Error'), 'conj'), (('{', 'Print'), 'punct'), (('Print', 'Error'), 'appos'), (('(', 'Error'), 'punct'), (('“', 'Error'), 'punct'), (('Error', 'Print'), 'appos'), (('”', 'Error'), 'punct'), ((')', 'Error'), 'punct'), ((';', 'E\uf0e0'), 'punct'), (('}', 'E\uf0e0'), 'punct'), (('E\uf0e0', 'Error'), 'conj'), (('T\uf0e0', 'E\uf0e0'), 'compound'), (('num', 'E\uf0e0'), 'dep'), (('T', 'num'), 'compound'), (('num', 'T'), 'compound'), (('*', 'T'), 'punct'), (('T', 'num'), 'appos'), (('|', 'T'), 'punct'), (('𝜖', 'Success'), 'punct'), (('Success', 'E\uf0e0'), 'conj'), (('3', '4'), 'compound'), (('4', '$'), 'nummod'), (('*', '$'), 'punct'), (('$', 'Success'), 'appos'), (('Error', '$'), 'compound'), (('3', '$'), 'nummod'), (('*', '$'), 'punct'), (('4', '$'), 'nummod'), (('$', '$'), 'appos'), (('Prof.', '$'), 'nummod'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Methods'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Unit'), 'appos'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 126 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 127 ===========================

 Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Handle & Handle pruning Handle: A “handle” of a string is a substring of the string that matches the right side of a production, and whose reduction to the non terminal of the production is one step along the reverse of rightmost derivation. 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Handle', '&', 'Handle', 'pruning', 'Handle', ':', 'A', '“', 'handle', '”', 'of', 'a', 'string', 'is', 'a', 'substring', 'of', 'the', 'string', 'that', 'matches', 'the', 'right', 'side', 'of', 'a', 'production', ',', 'and', 'whose', 'reduction', 'to', 'the', 'non', 'terminal', 'of', 'the', 'production', 'is', 'one', 'step', 'along', 'the', 'reverse', 'of', 'rightmost', 'derivation', '.'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('Parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('LALR', 'PROPN'), ('CLR', 'PROPN'), ('SLR', 'NOUN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Handle', 'NOUN'), ('&', 'CCONJ'), ('Handle', 'NOUN'), ('pruning', 'NOUN'), ('Handle', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('“', 'PUNCT'), ('handle', 'NOUN'), ('”', 'PUNCT'), ('of', 'ADP'), ('a', 'DET'), ('string', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('substring', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('string', 'NOUN'), ('that', 'PRON'), ('matches', 'VERB'), ('the', 'DET'), ('right', 'ADJ'), ('side', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('production', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('whose', 'PRON'), ('reduction', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('production', 'NOUN'), ('is', 'AUX'), ('one', 'NUM'), ('step', 'NOUN'), ('along', 'ADP'), ('the', 'DET'), ('reverse', 'NOUN'), ('of', 'ADP'), ('rightmost', 'ADJ'), ('derivation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('Parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NN'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Handle', 'NN'), ('&', 'CC'), ('Handle', 'NN'), ('pruning', 'NN'), ('Handle', 'NN'), (':', ':'), ('A', 'DT'), ('“', '``'), ('handle', 'NN'), ('”', "''"), ('of', 'IN'), ('a', 'DT'), ('string', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('substring', 'NN'), ('of', 'IN'), ('the', 'DT'), ('string', 'NN'), ('that', 'WDT'), ('matches', 'VBZ'), ('the', 'DT'), ('right', 'JJ'), ('side', 'NN'), ('of', 'IN'), ('a', 'DT'), ('production', 'NN'), (',', ','), ('and', 'CC'), ('whose', 'WP$'), ('reduction', 'NN'), ('to', 'IN'), ('the', 'DT'), ('non', 'NN'), ('terminal', 'NN'), ('of', 'IN'), ('the', 'DT'), ('production', 'NN'), ('is', 'VBZ'), ('one', 'CD'), ('step', 'NN'), ('along', 'IN'), ('the', 'DT'), ('reverse', 'NN'), ('of', 'IN'), ('rightmost', 'JJ'), ('derivation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'slr'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Handle', 'handle'), ('&', '&'), ('Handle', 'handle'), ('pruning', 'pruning'), ('Handle', 'handle'), (':', ':'), ('A', 'a'), ('“', "''"), ('handle', 'handle'), ('”', "''"), ('of', 'of'), ('a', 'a'), ('string', 'string'), ('is', 'be'), ('a', 'a'), ('substring', 'substring'), ('of', 'of'), ('the', 'the'), ('string', 'string'), ('that', 'that'), ('matches', 'match'), ('the', 'the'), ('right', 'right'), ('side', 'side'), ('of', 'of'), ('a', 'a'), ('production', 'production'), (',', ','), ('and', 'and'), ('whose', 'whose'), ('reduction', 'reduction'), ('to', 'to'), ('the', 'the'), ('non', 'non'), ('terminal', 'terminal'), ('of', 'of'), ('the', 'the'), ('production', 'production'), ('is', 'be'), ('one', 'one'), ('step', 'step'), ('along', 'along'), ('the', 'the'), ('reverse', 'reverse'), ('of', 'of'), ('rightmost', 'rightmost'), ('derivation', 'derivation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'Parsing'), 'punct'), (('predictive', 'Parsing'), 'amod'), (('Parsing', 'backtracking'), 'appos'), ((')', 'Parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obj'), (('LALR', 'precedence'), 'compound'), (('CLR', 'descent'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'conj'), (('LL', 'descent'), 'compound'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'tracking'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'precedence'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'tracking'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Handle'), 'compound'), (('Handle', 'Theory'), 'appos'), (('&', 'Handle'), 'cc'), (('Handle', 'Handle'), 'compound'), (('pruning', 'Handle'), 'compound'), (('Handle', 'Handle'), 'conj'), ((':', 'Handle'), 'punct'), (('A', 'handle'), 'det'), (('“', 'handle'), 'punct'), (('handle', 'substring'), 'nsubj'), (('”', 'handle'), 'punct'), (('of', 'string'), 'case'), (('a', 'string'), 'det'), (('string', 'handle'), 'nmod'), (('is', 'substring'), 'cop'), (('a', 'substring'), 'det'), (('substring', 'Handle'), 'acl:relcl'), (('of', 'string'), 'case'), (('the', 'string'), 'det'), (('string', 'substring'), 'nmod'), (('that', 'matches'), 'nsubj'), (('matches', 'string'), 'acl:relcl'), (('the', 'side'), 'det'), (('right', 'side'), 'amod'), (('side', 'matches'), 'obj'), (('of', 'production'), 'case'), (('a', 'production'), 'det'), (('production', 'side'), 'nmod'), ((',', 'step'), 'punct'), (('and', 'step'), 'cc'), (('whose', 'reduction'), 'nmod:poss'), (('reduction', 'step'), 'nsubj'), (('to', 'terminal'), 'case'), (('the', 'terminal'), 'det'), (('non', 'terminal'), 'compound'), (('terminal', 'reduction'), 'nmod'), (('of', 'production'), 'case'), (('the', 'production'), 'det'), (('production', 'terminal'), 'nmod'), (('is', 'step'), 'cop'), (('one', 'step'), 'nummod'), (('step', 'matches'), 'conj'), (('along', 'reverse'), 'case'), (('the', 'reverse'), 'det'), (('reverse', 'step'), 'nmod'), (('of', 'derivation'), 'case'), (('rightmost', 'derivation'), 'amod'), (('derivation', 'reverse'), 'nmod'), (('.', 'substring'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('one', 'CARDINAL')]

========================== Sentence 128 ===========================

 Handle pruning: 

Tokens are: 
>> ['Handle', 'pruning', ':'] 

 UPOS tags are: 
>> [('Handle', 'VERB'), ('pruning', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Handle', 'VB'), ('pruning', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Handle', 'handle'), ('pruning', 'pruning'), (':', ':')] 

 Dependency tags are: 
>> [(('Handle', 'root'), 'root'), (('pruning', 'Handle'), 'obj'), ((':', 'Handle'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 129 ===========================

 The process of discovering a handle and reducing it to appropriate left hand side non terminal is known as handle pruning. 

Tokens are: 
>> ['The', 'process', 'of', 'discovering', 'a', 'handle', 'and', 'reducing', 'it', 'to', 'appropriate', 'left', 'hand', 'side', 'non', 'terminal', 'is', 'known', 'as', 'handle', 'pruning', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('process', 'NOUN'), ('of', 'SCONJ'), ('discovering', 'VERB'), ('a', 'DET'), ('handle', 'NOUN'), ('and', 'CCONJ'), ('reducing', 'VERB'), ('it', 'PRON'), ('to', 'ADP'), ('appropriate', 'ADJ'), ('left', 'ADJ'), ('hand', 'NOUN'), ('side', 'NOUN'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('is', 'AUX'), ('known', 'VERB'), ('as', 'ADP'), ('handle', 'NOUN'), ('pruning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('process', 'NN'), ('of', 'IN'), ('discovering', 'VBG'), ('a', 'DT'), ('handle', 'NN'), ('and', 'CC'), ('reducing', 'VBG'), ('it', 'PRP'), ('to', 'IN'), ('appropriate', 'JJ'), ('left', 'JJ'), ('hand', 'NN'), ('side', 'NN'), ('non', 'NN'), ('terminal', 'NN'), ('is', 'VBZ'), ('known', 'VBN'), ('as', 'IN'), ('handle', 'NN'), ('pruning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('process', 'process'), ('of', 'of'), ('discovering', 'discover'), ('a', 'a'), ('handle', 'handle'), ('and', 'and'), ('reducing', 'reduce'), ('it', 'it'), ('to', 'to'), ('appropriate', 'appropriate'), ('left', 'left'), ('hand', 'hand'), ('side', 'side'), ('non', 'non'), ('terminal', 'terminal'), ('is', 'be'), ('known', 'know'), ('as', 'as'), ('handle', 'handle'), ('pruning', 'pruning'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'process'), 'det'), (('process', 'known'), 'nsubj:pass'), (('of', 'discovering'), 'mark'), (('discovering', 'process'), 'acl'), (('a', 'handle'), 'det'), (('handle', 'discovering'), 'obj'), (('and', 'reducing'), 'cc'), (('reducing', 'discovering'), 'conj'), (('it', 'reducing'), 'obj'), (('to', 'terminal'), 'case'), (('appropriate', 'terminal'), 'amod'), (('left', 'hand'), 'amod'), (('hand', 'side'), 'compound'), (('side', 'terminal'), 'compound'), (('non', 'terminal'), 'compound'), (('terminal', 'reducing'), 'obl'), (('is', 'known'), 'aux:pass'), (('known', 'root'), 'root'), (('as', 'pruning'), 'case'), (('handle', 'pruning'), 'compound'), (('pruning', 'known'), 'obl'), (('.', 'known'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 130 ===========================

 EE+E EE*E Eid String: id1+id2*id3 

Tokens are: 
>> ['E\uf0e0E+E', 'E\uf0e0E*E', 'E\uf0e0id', 'String', ':', 'id1+id2*id3'] 

 UPOS tags are: 
>> [('E\uf0e0E+E', 'PROPN'), ('E\uf0e0E*E', 'PROPN'), ('E\uf0e0id', 'PROPN'), ('String', 'NOUN'), (':', 'PUNCT'), ('id1+id2*id3', 'X')] 

 XPOS tags are: 
>> [('E\uf0e0E+E', 'NNP'), ('E\uf0e0E*E', 'NNP'), ('E\uf0e0id', 'NNP'), ('String', 'NN'), (':', ':'), ('id1+id2*id3', 'ADD')] 

 Lemmas are: 
>> [('E\uf0e0E+E', 'E\uf0e0E+E'), ('E\uf0e0E*E', 'E\uf0e0E*E'), ('E\uf0e0id', 'E\uf0e0id'), ('String', 'string'), (':', ':'), ('id1+id2*id3', 'id1+id2*id3')] 

 Dependency tags are: 
>> [(('E\uf0e0E+E', 'root'), 'root'), (('E\uf0e0E*E', 'E\uf0e0E+E'), 'flat'), (('E\uf0e0id', 'E\uf0e0E+E'), 'flat'), (('String', 'E\uf0e0E+E'), 'list'), ((':', 'String'), 'punct'), (('id1+id2*id3', 'String'), 'appos')]

 Named Entities are: 
>> []

========================== Sentence 131 ===========================

 Right sentential form	Handle	Production  	id1+id2*id3	id1	Eid   	E+id2*id3	id2	Eid  	E+E*id3	id3	Eid  	E+E*E	E*E	EE*E  	E+E	E+E	EE+E   	E		                 Rightmost Derivation E E+E E+E*E E+E*id3 E+id2*id3 id1+id2*id3    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['Right', 'sentential', 'form', 'Handle', 'Production', 'id1+id2*id3', 'id1', 'E\uf0e0id', 'E+id2*id3', 'id2', 'E\uf0e0id', 'E+E*id3', 'id3', 'E\uf0e0id', 'E+E*E', 'E*E', 'E\uf0e0E*E', 'E+E', 'E+E', 'E\uf0e0E+E', 'E', 'Rightmost', 'Derivation', 'E', 'E+E', 'E+E*E', 'E+E*id3', 'E+id2*id3', 'id1+id2*id3', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›'] 

 UPOS tags are: 
>> [('Right', 'ADJ'), ('sentential', 'ADJ'), ('form', 'NOUN'), ('Handle', 'NOUN'), ('Production', 'NOUN'), ('id1+id2*id3', 'X'), ('id1', 'PUNCT'), ('E\uf0e0id', 'X'), ('E+id2*id3', 'X'), ('id2', 'X'), ('E\uf0e0id', 'X'), ('E+E*id3', 'X'), ('id3', 'X'), ('E\uf0e0id', 'X'), ('E+E*E', 'X'), ('E*E', 'X'), ('E\uf0e0E*E', 'X'), ('E+E', 'X'), ('E+E', 'X'), ('E\uf0e0E+E', 'X'), ('E', 'X'), ('Rightmost', 'X'), ('Derivation', 'X'), ('E', 'X'), ('E+E', 'X'), ('E+E*E', 'X'), ('E+E*id3', 'X'), ('E+id2*id3', 'X'), ('id1+id2*id3', 'X'), ('Prof.', 'X'), ('Jay', 'X'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'X'), ('Prof.', 'NOUN'), ('Dixita', 'X'), ('B', 'X'), ('Kagathara', 'X'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X')] 

 XPOS tags are: 
>> [('Right', 'JJ'), ('sentential', 'JJ'), ('form', 'NN'), ('Handle', 'NN'), ('Production', 'NN'), ('id1+id2*id3', 'FW'), ('id1', ','), ('E\uf0e0id', 'FW'), ('E+id2*id3', 'FW'), ('id2', 'FW'), ('E\uf0e0id', 'FW'), ('E+E*id3', 'FW'), ('id3', 'FW'), ('E\uf0e0id', 'FW'), ('E+E*E', 'FW'), ('E*E', 'FW'), ('E\uf0e0E*E', 'FW'), ('E+E', 'FW'), ('E+E', 'FW'), ('E\uf0e0E+E', 'FW'), ('E', 'FW'), ('Rightmost', 'FW'), ('Derivation', 'FW'), ('E', 'FW'), ('E+E', 'FW'), ('E+E*E', 'FW'), ('E+E*id3', 'FW'), ('E+id2*id3', 'FW'), ('id1+id2*id3', 'FW'), ('Prof.', 'FW'), ('Jay', 'FW'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'FW'), ('Prof.', 'NN'), ('Dixita', 'FW'), ('B', 'GW'), ('Kagathara', 'FW'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN')] 

 Lemmas are: 
>> [('Right', 'right'), ('sentential', 'sentential'), ('form', 'form'), ('Handle', 'handle'), ('Production', 'production'), ('id1+id2*id3', 'id1+id2*id3'), ('id1', 'id1'), ('E\uf0e0id', 'e\uf0e0id'), ('E+id2*id3', 'e+id2*id3'), ('id2', 'id2'), ('E\uf0e0id', 'e\uf0e0id'), ('E+E*id3', 'e+e*id3'), ('id3', 'id3'), ('E\uf0e0id', 'e\uf0e0id'), ('E+E*E', 'e+e*e'), ('E*E', 'e*e'), ('E\uf0e0E*E', 'e\uf0e0e*e'), ('E+E', 'e+e'), ('E+E', 'e+e'), ('E\uf0e0E+E', 'e\uf0e0e+e'), ('E', 'E'), ('Rightmost', 'rightmost'), ('Derivation', 'derivation'), ('E', 'E'), ('E+E', 'e+e'), ('E+E*E', 'e+e*e'), ('E+E*id3', 'e+e*id3'), ('E+id2*id3', 'e+id2*id3'), ('id1+id2*id3', 'id1+id2*id3'), ('Prof.', 'Prof.'), ('Jay', 'jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('Right', 'form'), 'amod'), (('sentential', 'form'), 'amod'), (('form', 'Production'), 'compound'), (('Handle', 'Production'), 'compound'), (('Production', 'root'), 'root'), (('id1+id2*id3', 'Production'), 'list'), (('id1', 'E\uf0e0id'), 'punct'), (('E\uf0e0id', 'Production'), 'appos'), (('E+id2*id3', 'id2'), 'compound'), (('id2', 'E\uf0e0id'), 'compound'), (('E\uf0e0id', 'id3'), 'compound'), (('E+E*id3', 'id3'), 'compound'), (('id3', 'form'), 'list'), (('E\uf0e0id', 'id3'), 'compound'), (('E+E*E', 'id3'), 'appos'), (('E*E', 'id3'), 'appos'), (('E\uf0e0E*E', 'id3'), 'appos'), (('E+E', 'E\uf0e0E*E'), 'compound'), (('E+E', 'E\uf0e0E*E'), 'compound'), (('E\uf0e0E+E', 'E'), 'compound'), (('E', 'form'), 'conj'), (('Rightmost', 'Derivation'), 'compound'), (('Derivation', 'E'), 'compound'), (('E', 'Derivation'), 'flat'), (('E+E', 'Derivation'), 'flat'), (('E+E*E', 'Derivation'), 'flat'), (('E+E*id3', 'Derivation'), 'appos'), (('E+id2*id3', 'E+E*id3'), 'flat'), (('id1+id2*id3', 'Production'), 'list'), (('Prof.', 'Production'), 'conj'), (('Jay', 'Production'), 'conj'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Probability'), 'appos'), (('B', '#'), 'compound'), (('Kagathara', 'Dixita'), 'flat'), (('#', 'Dixita'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Theory'), 'appos')]

 Named Entities are: 
>> [('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 132 ===========================

 Shift reduce parser 

Tokens are: 
>> ['Shift', 'reduce', 'parser'] 

 UPOS tags are: 
>> [('Shift', 'NOUN'), ('reduce', 'VERB'), ('parser', 'NOUN')] 

 XPOS tags are: 
>> [('Shift', 'NN'), ('reduce', 'VB'), ('parser', 'NN')] 

 Lemmas are: 
>> [('Shift', 'shift'), ('reduce', 'reduce'), ('parser', 'parser')] 

 Dependency tags are: 
>> [(('Shift', 'reduce'), 'nsubj'), (('reduce', 'root'), 'root'), (('parser', 'reduce'), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 133 ===========================

 The shift reduce parser performs following basic operations: Shift: Moving of the symbols from input buffer onto the stack, this action is called shift. 

Tokens are: 
>> ['The', 'shift', 'reduce', 'parser', 'performs', 'following', 'basic', 'operations', ':', 'Shift', ':', 'Moving', 'of', 'the', 'symbols', 'from', 'input', 'buffer', 'onto', 'the', 'stack', ',', 'this', 'action', 'is', 'called', 'shift', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('shift', 'NOUN'), ('reduce', 'VERB'), ('parser', 'NOUN'), ('performs', 'VERB'), ('following', 'VERB'), ('basic', 'ADJ'), ('operations', 'NOUN'), (':', 'PUNCT'), ('Shift', 'NOUN'), (':', 'PUNCT'), ('Moving', 'VERB'), ('of', 'ADP'), ('the', 'DET'), ('symbols', 'NOUN'), ('from', 'ADP'), ('input', 'NOUN'), ('buffer', 'NOUN'), ('onto', 'ADP'), ('the', 'DET'), ('stack', 'NOUN'), (',', 'PUNCT'), ('this', 'DET'), ('action', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('shift', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('shift', 'NN'), ('reduce', 'VBP'), ('parser', 'NN'), ('performs', 'VBZ'), ('following', 'VBG'), ('basic', 'JJ'), ('operations', 'NNS'), (':', ':'), ('Shift', 'NN'), (':', ':'), ('Moving', 'VBG'), ('of', 'IN'), ('the', 'DT'), ('symbols', 'NNS'), ('from', 'IN'), ('input', 'NN'), ('buffer', 'NN'), ('onto', 'IN'), ('the', 'DT'), ('stack', 'NN'), (',', ','), ('this', 'DT'), ('action', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('shift', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('shift', 'shift'), ('reduce', 'reduce'), ('parser', 'parser'), ('performs', 'perform'), ('following', 'follow'), ('basic', 'basic'), ('operations', 'operation'), (':', ':'), ('Shift', 'shift'), (':', ':'), ('Moving', 'move'), ('of', 'of'), ('the', 'the'), ('symbols', 'symbol'), ('from', 'from'), ('input', 'input'), ('buffer', 'buffer'), ('onto', 'onto'), ('the', 'the'), ('stack', 'stack'), (',', ','), ('this', 'this'), ('action', 'action'), ('is', 'be'), ('called', 'call'), ('shift', 'shift'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'shift'), 'det'), (('shift', 'reduce'), 'nsubj'), (('reduce', 'root'), 'root'), (('parser', 'reduce'), 'obj'), (('performs', 'reduce'), 'ccomp'), (('following', 'operations'), 'case'), (('basic', 'operations'), 'amod'), (('operations', 'performs'), 'obl'), ((':', 'Shift'), 'punct'), (('Shift', 'operations'), 'appos'), ((':', 'Shift'), 'punct'), (('Moving', 'Shift'), 'acl'), (('of', 'symbols'), 'case'), (('the', 'symbols'), 'det'), (('symbols', 'Moving'), 'obl'), (('from', 'buffer'), 'case'), (('input', 'buffer'), 'compound'), (('buffer', 'symbols'), 'nmod'), (('onto', 'stack'), 'case'), (('the', 'stack'), 'det'), (('stack', 'buffer'), 'nmod'), ((',', 'called'), 'punct'), (('this', 'action'), 'det'), (('action', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'Shift'), 'parataxis'), (('shift', 'called'), 'xcomp'), (('.', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 134 ===========================

 Reduce: 

Tokens are: 
>> ['Reduce', ':'] 

 UPOS tags are: 
>> [('Reduce', 'VERB'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Reduce', 'VB'), (':', ':')] 

 Lemmas are: 
>> [('Reduce', 'reduce'), (':', ':')] 

 Dependency tags are: 
>> [(('Reduce', 'root'), 'root'), ((':', 'Reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 135 ===========================

 If handle appears on the top of the stack then reduction of it by appropriate rule is done. 

Tokens are: 
>> ['If', 'handle', 'appears', 'on', 'the', 'top', 'of', 'the', 'stack', 'then', 'reduction', 'of', 'it', 'by', 'appropriate', 'rule', 'is', 'done', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('handle', 'NOUN'), ('appears', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('top', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('stack', 'NOUN'), ('then', 'ADV'), ('reduction', 'NOUN'), ('of', 'ADP'), ('it', 'PRON'), ('by', 'ADP'), ('appropriate', 'ADJ'), ('rule', 'NOUN'), ('is', 'AUX'), ('done', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('handle', 'NN'), ('appears', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('top', 'NN'), ('of', 'IN'), ('the', 'DT'), ('stack', 'NN'), ('then', 'RB'), ('reduction', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('by', 'IN'), ('appropriate', 'JJ'), ('rule', 'NN'), ('is', 'VBZ'), ('done', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('handle', 'handle'), ('appears', 'appear'), ('on', 'on'), ('the', 'the'), ('top', 'top'), ('of', 'of'), ('the', 'the'), ('stack', 'stack'), ('then', 'then'), ('reduction', 'reduction'), ('of', 'of'), ('it', 'it'), ('by', 'by'), ('appropriate', 'appropriate'), ('rule', 'rule'), ('is', 'be'), ('done', 'do'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'appears'), 'mark'), (('handle', 'appears'), 'nsubj'), (('appears', 'done'), 'advcl'), (('on', 'top'), 'case'), (('the', 'top'), 'det'), (('top', 'appears'), 'obl'), (('of', 'stack'), 'case'), (('the', 'stack'), 'det'), (('stack', 'top'), 'nmod'), (('then', 'done'), 'advmod'), (('reduction', 'done'), 'nsubj:pass'), (('of', 'it'), 'case'), (('it', 'reduction'), 'nmod'), (('by', 'rule'), 'case'), (('appropriate', 'rule'), 'amod'), (('rule', 'reduction'), 'nmod'), (('is', 'done'), 'aux:pass'), (('done', 'root'), 'root'), (('.', 'done'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 136 ===========================

 This action is called reduce action. 

Tokens are: 
>> ['This', 'action', 'is', 'called', 'reduce', 'action', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('action', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('reduce', 'VERB'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('action', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('reduce', 'VB'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('action', 'action'), ('is', 'be'), ('called', 'call'), ('reduce', 'reduce'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'action'), 'det'), (('action', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('reduce', 'called'), 'xcomp'), (('action', 'reduce'), 'obj'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 137 ===========================

 Accept: 

Tokens are: 
>> ['Accept', ':'] 

 UPOS tags are: 
>> [('Accept', 'VERB'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Accept', 'VB'), (':', ':')] 

 Lemmas are: 
>> [('Accept', 'accep'), (':', ':')] 

 Dependency tags are: 
>> [(('Accept', 'root'), 'root'), ((':', 'Accept'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 138 ===========================

 If stack contains start symbol only and input buffer is empty at the same time then that action is called accept. 

Tokens are: 
>> ['If', 'stack', 'contains', 'start', 'symbol', 'only', 'and', 'input', 'buffer', 'is', 'empty', 'at', 'the', 'same', 'time', 'then', 'that', 'action', 'is', 'called', 'accept', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('stack', 'NOUN'), ('contains', 'VERB'), ('start', 'NOUN'), ('symbol', 'NOUN'), ('only', 'ADV'), ('and', 'CCONJ'), ('input', 'NOUN'), ('buffer', 'NOUN'), ('is', 'AUX'), ('empty', 'ADJ'), ('at', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('time', 'NOUN'), ('then', 'ADV'), ('that', 'DET'), ('action', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('accept', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('stack', 'NN'), ('contains', 'VBZ'), ('start', 'NN'), ('symbol', 'NN'), ('only', 'RB'), ('and', 'CC'), ('input', 'NN'), ('buffer', 'NN'), ('is', 'VBZ'), ('empty', 'JJ'), ('at', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('time', 'NN'), ('then', 'RB'), ('that', 'DT'), ('action', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('accept', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('stack', 'stack'), ('contains', 'contain'), ('start', 'start'), ('symbol', 'symbol'), ('only', 'only'), ('and', 'and'), ('input', 'input'), ('buffer', 'buffer'), ('is', 'be'), ('empty', 'empty'), ('at', 'at'), ('the', 'the'), ('same', 'same'), ('time', 'time'), ('then', 'then'), ('that', 'that'), ('action', 'action'), ('is', 'be'), ('called', 'call'), ('accept', 'accept'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'contains'), 'mark'), (('stack', 'contains'), 'nsubj'), (('contains', 'called'), 'advcl'), (('start', 'symbol'), 'compound'), (('symbol', 'contains'), 'obj'), (('only', 'contains'), 'advmod'), (('and', 'empty'), 'cc'), (('input', 'buffer'), 'compound'), (('buffer', 'empty'), 'nsubj'), (('is', 'empty'), 'cop'), (('empty', 'contains'), 'conj'), (('at', 'time'), 'case'), (('the', 'time'), 'det'), (('same', 'time'), 'amod'), (('time', 'empty'), 'obl'), (('then', 'called'), 'advmod'), (('that', 'action'), 'det'), (('action', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('accept', 'called'), 'xcomp'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 139 ===========================

 Error: A situation in which parser cannot either shift or reduce the symbols, it cannot even perform accept action then it is called error action. 

Tokens are: 
>> ['Error', ':', 'A', 'situation', 'in', 'which', 'parser', 'cannot', 'either', 'shift', 'or', 'reduce', 'the', 'symbols', ',', 'it', 'cannot', 'even', 'perform', 'accept', 'action', 'then', 'it', 'is', 'called', 'error', 'action', '.'] 

 UPOS tags are: 
>> [('Error', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('situation', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('parser', 'NOUN'), ('cannot', 'AUX'), ('either', 'CCONJ'), ('shift', 'VERB'), ('or', 'CCONJ'), ('reduce', 'VERB'), ('the', 'DET'), ('symbols', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('cannot', 'AUX'), ('even', 'ADV'), ('perform', 'VERB'), ('accept', 'VERB'), ('action', 'NOUN'), ('then', 'ADV'), ('it', 'PRON'), ('is', 'AUX'), ('called', 'VERB'), ('error', 'NOUN'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Error', 'NN'), (':', ':'), ('A', 'DT'), ('situation', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('parser', 'NN'), ('cannot', 'MD'), ('either', 'CC'), ('shift', 'VB'), ('or', 'CC'), ('reduce', 'VB'), ('the', 'DT'), ('symbols', 'NNS'), (',', ','), ('it', 'PRP'), ('cannot', 'MD'), ('even', 'RB'), ('perform', 'VB'), ('accept', 'VB'), ('action', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('is', 'VBZ'), ('called', 'VBN'), ('error', 'NN'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Error', 'error'), (':', ':'), ('A', 'a'), ('situation', 'situation'), ('in', 'in'), ('which', 'which'), ('parser', 'parser'), ('cannot', 'cannot'), ('either', 'either'), ('shift', 'shift'), ('or', 'or'), ('reduce', 'reduce'), ('the', 'the'), ('symbols', 'symbol'), (',', ','), ('it', 'it'), ('cannot', 'cannot'), ('even', 'even'), ('perform', 'perform'), ('accept', 'accept'), ('action', 'action'), ('then', 'then'), ('it', 'it'), ('is', 'be'), ('called', 'call'), ('error', 'error'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('Error', 'root'), 'root'), ((':', 'Error'), 'punct'), (('A', 'situation'), 'det'), (('situation', 'perform'), 'nsubj'), (('in', 'which'), 'case'), (('which', 'shift'), 'obl'), (('parser', 'shift'), 'nsubj'), (('cannot', 'shift'), 'aux'), (('either', 'shift'), 'cc:preconj'), (('shift', 'situation'), 'acl:relcl'), (('or', 'reduce'), 'cc'), (('reduce', 'shift'), 'conj'), (('the', 'symbols'), 'det'), (('symbols', 'reduce'), 'obj'), ((',', 'perform'), 'punct'), (('it', 'perform'), 'nsubj'), (('cannot', 'perform'), 'aux'), (('even', 'perform'), 'advmod'), (('perform', 'Error'), 'appos'), (('accept', 'perform'), 'xcomp'), (('action', 'accept'), 'obj'), (('then', 'called'), 'advmod'), (('it', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'perform'), 'parataxis'), (('error', 'action'), 'compound'), (('action', 'called'), 'obj'), (('.', 'Error'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 140 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Shift reduce parser 	Stack 	Input Buffer	Action  	$	id+id*id$	Shift    	$id	+id*id$	Reduce Fid  	$F	+id*id$	Reduce TF  	$T	+id*id$	Reduce ET  	$E	+id*id$	Shift   	$E+	id*id$	Shift   	$E+id	*id$	Reduce Fid  	$E+F	*id$	Reduce TF  	$E+T	*id$	Shift   	$E+T*	id$	Shift   	$E+T*id	$	Reduce Fid   	$E+T*F	$	Reduce TT*F   	$E+T	$	Reduce EE+T  	$E	$	Accept                                               Grammar: EE+T | T TT*F | F Fid String: id+id*id    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Viable Prefix 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Shift', 'reduce', 'parser', 'Stack', 'Input', 'Buffer', 'Action', '$', 'id', '+id*id', '$', 'Shift', '$', 'id', '+', 'id*id', '$', 'Reduce', 'F\uf0e0id', '$', 'F', '+id*id', '$', 'Reduce', 'T\uf0e0F', '$', 'T', '+id*id', '$', 'Reduce', 'E\uf0e0T', '$', 'E', '+id*id', '$', 'Shift', '$', 'E+', 'id', '*', 'id', '$', 'Shift', '$', 'E+id', '*', 'id$', 'Reduce', 'F\uf0e0id', '$', 'E+F', '*id$', 'Reduce', 'T\uf0e0F', '$', 'E+T', '*id', '$', 'Shift', '$', 'E+T*', 'id', '$', 'Shift', '$', 'E+T*id', '$', 'Reduce', 'F\uf0e0id', '$', 'E+T*F', '$', 'Reduce', 'T\uf0e0T*F', '$', 'E+T', '$', 'Reduce', 'E\uf0e0E', '+T', '$', 'E', '$', 'Accept', 'Grammar', ':', 'E\uf0e0E+T', '|', 'T', 'T\uf0e0T*F', '|', 'F', 'F\uf0e0id', 'String', ':', 'id', '+id*id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Viable', 'Prefix'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), ('parser', 'NOUN'), ('Stack', 'NOUN'), ('Input', 'NOUN'), ('Buffer', 'NOUN'), ('Action', 'NOUN'), ('$', 'SYM'), ('id', 'NOUN'), ('+id*id', 'PUNCT'), ('$', 'SYM'), ('Shift', 'NOUN'), ('$', 'SYM'), ('id', 'NOUN'), ('+', 'SYM'), ('id*id', 'NOUN'), ('$', 'SYM'), ('Reduce', 'NOUN'), ('F\uf0e0id', 'NOUN'), ('$', 'SYM'), ('F', 'NOUN'), ('+id*id', 'PUNCT'), ('$', 'SYM'), ('Reduce', 'NOUN'), ('T\uf0e0F', 'NOUN'), ('$', 'SYM'), ('T', 'NUM'), ('+id*id', 'NUM'), ('$', 'SYM'), ('Reduce', 'NOUN'), ('E\uf0e0T', 'NOUN'), ('$', 'SYM'), ('E', 'NOUN'), ('+id*id', 'PUNCT'), ('$', 'SYM'), ('Shift', 'NOUN'), ('$', 'SYM'), ('E+', 'NUM'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('Shift', 'NOUN'), ('$', 'SYM'), ('E+id', 'NUM'), ('*', 'PUNCT'), ('id$', 'NOUN'), ('Reduce', 'VERB'), ('F\uf0e0id', 'PROPN'), ('$', 'SYM'), ('E+F', 'NUM'), ('*id$', 'PUNCT'), ('Reduce', 'VERB'), ('T\uf0e0F', 'NOUN'), ('$', 'SYM'), ('E+T', 'NUM'), ('*id', 'PUNCT'), ('$', 'SYM'), ('Shift', 'NOUN'), ('$', 'SYM'), ('E+T*', 'NUM'), ('id', 'NOUN'), ('$', 'SYM'), ('Shift', 'NOUN'), ('$', 'SYM'), ('E+T*id', 'NUM'), ('$', 'SYM'), ('Reduce', 'NOUN'), ('F\uf0e0id', 'PROPN'), ('$', 'SYM'), ('E+T*F', 'NOUN'), ('$', 'SYM'), ('Reduce', 'NOUN'), ('T\uf0e0T*F', 'NOUN'), ('$', 'SYM'), ('E+T', 'NUM'), ('$', 'SYM'), ('Reduce', 'NOUN'), ('E\uf0e0E', 'PROPN'), ('+T', 'NOUN'), ('$', 'SYM'), ('E', 'NOUN'), ('$', 'SYM'), ('Accept', 'NOUN'), ('Grammar', 'NOUN'), (':', 'PUNCT'), ('E\uf0e0E+T', 'PROPN'), ('|', 'PUNCT'), ('T', 'NOUN'), ('T\uf0e0T*F', 'NOUN'), ('|', 'PUNCT'), ('F', 'NOUN'), ('F\uf0e0id', 'X'), ('String', 'NOUN'), (':', 'PUNCT'), ('id', 'NOUN'), ('+id*id', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Viable', 'ADJ'), ('Prefix', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Shift', 'NN'), ('reduce', 'NN'), ('parser', 'NN'), ('Stack', 'NN'), ('Input', 'NN'), ('Buffer', 'NN'), ('Action', 'NN'), ('$', '$'), ('id', 'NN'), ('+id*id', 'NFP'), ('$', '$'), ('Shift', 'NN'), ('$', '$'), ('id', 'NN'), ('+', 'SYM'), ('id*id', 'NN'), ('$', '$'), ('Reduce', 'NN'), ('F\uf0e0id', 'NN'), ('$', '$'), ('F', 'NN'), ('+id*id', 'NFP'), ('$', '$'), ('Reduce', 'NN'), ('T\uf0e0F', 'NN'), ('$', '$'), ('T', 'CD'), ('+id*id', 'CD'), ('$', '$'), ('Reduce', 'NN'), ('E\uf0e0T', 'NN'), ('$', '$'), ('E', 'NN'), ('+id*id', 'NFP'), ('$', '$'), ('Shift', 'NN'), ('$', '$'), ('E+', 'CD'), ('id', 'NN'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('Shift', 'NN'), ('$', '$'), ('E+id', 'CD'), ('*', 'NFP'), ('id$', 'NN'), ('Reduce', 'VB'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('E+F', 'CD'), ('*id$', 'NFP'), ('Reduce', 'VB'), ('T\uf0e0F', 'NN'), ('$', '$'), ('E+T', 'CD'), ('*id', 'NFP'), ('$', '$'), ('Shift', 'NN'), ('$', '$'), ('E+T*', 'CD'), ('id', 'NN'), ('$', '$'), ('Shift', 'NN'), ('$', '$'), ('E+T*id', 'CD'), ('$', '$'), ('Reduce', 'NN'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('E+T*F', 'NN'), ('$', '$'), ('Reduce', 'NN'), ('T\uf0e0T*F', 'NN'), ('$', '$'), ('E+T', 'CD'), ('$', '$'), ('Reduce', 'NN'), ('E\uf0e0E', 'NNP'), ('+T', 'NN'), ('$', '$'), ('E', 'NN'), ('$', '$'), ('Accept', 'NN'), ('Grammar', 'NN'), (':', ':'), ('E\uf0e0E+T', 'NNP'), ('|', ','), ('T', 'NN'), ('T\uf0e0T*F', 'NN'), ('|', ','), ('F', 'NN'), ('F\uf0e0id', 'GW'), ('String', 'NN'), (':', ':'), ('id', 'NN'), ('+id*id', ','), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'GW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Viable', 'JJ'), ('Prefix', 'NN')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Shift', 'shift'), ('reduce', 'reduce'), ('parser', 'parser'), ('Stack', 'stack'), ('Input', 'input'), ('Buffer', 'buffer'), ('Action', 'action'), ('$', '$'), ('id', 'id'), ('+id*id', '+id*id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('id', 'id'), ('+', '+'), ('id*id', 'id*id'), ('$', '$'), ('Reduce', 'reduce'), ('F\uf0e0id', 'f\uf0e0id'), ('$', '$'), ('F', 'f'), ('+id*id', '+id*id'), ('$', '$'), ('Reduce', 'reduce'), ('T\uf0e0F', 't\uf0e0f'), ('$', '$'), ('T', 'T'), ('+id*id', '+id*id'), ('$', '$'), ('Reduce', 'reduce'), ('E\uf0e0T', 'e\uf0e0t'), ('$', '$'), ('E', 'e'), ('+id*id', '+id*id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+', 'e+'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+id', 'e+id'), ('*', '*'), ('id$', 'id$'), ('Reduce', 'reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('E+F', 'e+f'), ('*id$', '*id'), ('Reduce', 'reduce'), ('T\uf0e0F', 't\uf0e0f'), ('$', '$'), ('E+T', 'e+t'), ('*id', '*id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+T*', 'e+t*'), ('id', 'id'), ('$', '$'), ('Shift', 'shift'), ('$', '$'), ('E+T*id', 'e+t*id'), ('$', '$'), ('Reduce', 'reduce'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('E+T*F', 'e+t*f'), ('$', '$'), ('Reduce', 'reduce'), ('T\uf0e0T*F', 't\uf0e0t*f'), ('$', '$'), ('E+T', 'e+t'), ('$', '$'), ('Reduce', 'reduce'), ('E\uf0e0E', 'E\uf0e0E'), ('+T', '+t'), ('$', '$'), ('E', 'e'), ('$', '$'), ('Accept', 'accept'), ('Grammar', 'grammar'), (':', ':'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0T*F', 't\uf0e0t*f'), ('|', '|'), ('F', 'f'), ('F\uf0e0id', 'f\uf0e0id'), ('String', 'string'), (':', ':'), ('id', 'id'), ('+id*id', '+id*id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Viable', 'viable'), ('Prefix', 'prefix')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'Unit'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Prof.'), 'appos'), ((':', 'Example'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'Example'), 'appos'), (('parser', 'Example'), 'appos'), (('Stack', 'Input'), 'compound'), (('Input', '$'), 'compound'), (('Buffer', 'Action'), 'compound'), (('Action', '$'), 'compound'), (('$', 'Prof.'), 'appos'), (('id', '$'), 'compound'), (('+id*id', '$'), 'punct'), (('$', '$'), 'appos'), (('Shift', '$'), 'compound'), (('$', '$'), 'appos'), (('id', '$'), 'compound'), (('+', '$'), 'cc'), (('id*id', '$'), 'compound'), (('$', 'Prof.'), 'conj'), (('Reduce', '$'), 'compound'), (('F\uf0e0id', '$'), 'compound'), (('$', '$'), 'appos'), (('F', '$'), 'compound'), (('+id*id', '$'), 'punct'), (('$', '$'), 'compound'), (('Reduce', '$'), 'compound'), (('T\uf0e0F', '$'), 'compound'), (('$', '$'), 'appos'), (('T', '$'), 'nummod'), (('+id*id', '$'), 'nummod'), (('$', '$'), 'appos'), (('Reduce', '$'), 'compound'), (('E\uf0e0T', '$'), 'compound'), (('$', '$'), 'appos'), (('E', '$'), 'compound'), (('+id*id', '$'), 'punct'), (('$', '$'), 'compound'), (('Shift', '$'), 'compound'), (('$', 'id'), 'compound'), (('E+', '$'), 'nummod'), (('id', '$'), 'appos'), (('*', 'id'), 'punct'), (('id', 'Prof.'), 'conj'), (('$', 'id'), 'compound'), (('Shift', '$'), 'compound'), (('$', '$'), 'appos'), (('E+id', '$'), 'nummod'), (('*', 'id$'), 'punct'), (('id$', 'Reduce'), 'nsubj'), (('Reduce', 'Prof.'), 'parataxis'), (('F\uf0e0id', '$'), 'compound'), (('$', 'Reduce'), 'obj'), (('E+F', '$'), 'nummod'), (('*id$', 'Reduce'), 'punct'), (('Reduce', 'Reduce'), 'parataxis'), (('T\uf0e0F', '$'), 'compound'), (('$', 'Reduce'), 'obj'), (('E+T', '$'), 'nummod'), (('*id', '$'), 'punct'), (('$', '$'), 'appos'), (('Shift', '$'), 'compound'), (('$', 'id'), 'compound'), (('E+T*', '$'), 'nummod'), (('id', '$'), 'appos'), (('$', 'id'), 'compound'), (('Shift', '$'), 'compound'), (('$', '$'), 'compound'), (('E+T*id', '$'), 'nummod'), (('$', '$'), 'compound'), (('Reduce', '$'), 'compound'), (('F\uf0e0id', '$'), 'compound'), (('$', '$'), 'appos'), (('E+T*F', '$'), 'nummod'), (('$', '$'), 'compound'), (('Reduce', '$'), 'compound'), (('T\uf0e0T*F', '$'), 'compound'), (('$', '$'), 'appos'), (('E+T', '$'), 'nummod'), (('$', '$'), 'compound'), (('Reduce', '$'), 'compound'), (('E\uf0e0E', '$'), 'compound'), (('+T', '$'), 'compound'), (('$', '$'), 'appos'), (('E', '$'), 'nummod'), (('$', '$'), 'appos'), (('Accept', '$'), 'compound'), (('Grammar', '$'), 'appos'), ((':', 'E\uf0e0E+T'), 'punct'), (('E\uf0e0E+T', 'Grammar'), 'appos'), (('|', 'E\uf0e0E+T'), 'punct'), (('T', 'T\uf0e0T*F'), 'compound'), (('T\uf0e0T*F', 'E\uf0e0E+T'), 'appos'), (('|', 'T\uf0e0T*F'), 'punct'), (('F', 'T\uf0e0T*F'), 'appos'), (('F\uf0e0id', 'F'), 'compound'), (('String', 'F'), 'appos'), ((':', 'String'), 'punct'), (('id', 'String'), 'appos'), (('+id*id', 'id'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'id'), 'appos'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'Jay'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', 'Probability'), 'appos'), (('#', 'B'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Prefix'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Prefix'), 'compound'), (('Viable', 'Prefix'), 'amod'), (('Prefix', 'Theory'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('E+F', 'MONEY'), ('E+T', 'MONEY'), ('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 141 ===========================

 The set of prefixes of right sentential forms that can appear on the stack of a shift-reduce parser are called viable prefixes. 

Tokens are: 
>> ['The', 'set', 'of', 'prefixes', 'of', 'right', 'sentential', 'forms', 'that', 'can', 'appear', 'on', 'the', 'stack', 'of', 'a', 'shift', '-', 'reduce', 'parser', 'are', 'called', 'viable', 'prefixes', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('prefixes', 'NOUN'), ('of', 'ADP'), ('right', 'ADJ'), ('sentential', 'ADJ'), ('forms', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('appear', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('stack', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('shift', 'NOUN'), ('-', 'PUNCT'), ('reduce', 'NOUN'), ('parser', 'NOUN'), ('are', 'AUX'), ('called', 'VERB'), ('viable', 'ADJ'), ('prefixes', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('set', 'NN'), ('of', 'IN'), ('prefixes', 'NNS'), ('of', 'IN'), ('right', 'JJ'), ('sentential', 'JJ'), ('forms', 'NNS'), ('that', 'WDT'), ('can', 'MD'), ('appear', 'VB'), ('on', 'IN'), ('the', 'DT'), ('stack', 'NN'), ('of', 'IN'), ('a', 'DT'), ('shift', 'NN'), ('-', 'HYPH'), ('reduce', 'NN'), ('parser', 'NN'), ('are', 'VBP'), ('called', 'VBN'), ('viable', 'JJ'), ('prefixes', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('set', 'set'), ('of', 'of'), ('prefixes', 'prefixe'), ('of', 'of'), ('right', 'right'), ('sentential', 'sentential'), ('forms', 'form'), ('that', 'that'), ('can', 'can'), ('appear', 'appear'), ('on', 'on'), ('the', 'the'), ('stack', 'stack'), ('of', 'of'), ('a', 'a'), ('shift', 'shift'), ('-', '-'), ('reduce', 'reduce'), ('parser', 'parser'), ('are', 'be'), ('called', 'call'), ('viable', 'viable'), ('prefixes', 'prefixe'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'set'), 'det'), (('set', 'called'), 'nsubj:pass'), (('of', 'prefixes'), 'case'), (('prefixes', 'set'), 'nmod'), (('of', 'forms'), 'case'), (('right', 'forms'), 'amod'), (('sentential', 'forms'), 'amod'), (('forms', 'prefixes'), 'nmod'), (('that', 'appear'), 'nsubj'), (('can', 'appear'), 'aux'), (('appear', 'forms'), 'acl:relcl'), (('on', 'stack'), 'case'), (('the', 'stack'), 'det'), (('stack', 'appear'), 'obl'), (('of', 'parser'), 'case'), (('a', 'parser'), 'det'), (('shift', 'reduce'), 'compound'), (('-', 'reduce'), 'punct'), (('reduce', 'parser'), 'compound'), (('parser', 'stack'), 'nmod'), (('are', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('viable', 'prefixes'), 'amod'), (('prefixes', 'called'), 'obj'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 142 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Prof.'), 'list'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'list'), (('(', 'I'), 'punct'), (('I', 'Methods'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Prof.'), 'list'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 143 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 144 ===========================

 Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence parsing Operator Grammar: A Grammar in which there is no Є in RHS of any production or no adjacent non terminals is called operator  grammar. 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'parsing', 'Operator', 'Grammar', ':', 'A', 'Grammar', 'in', 'which', 'there', 'is', 'no', 'Є', 'in', 'RHS', 'of', 'any', 'production', 'or', 'no', 'adjacent', 'non', 'terminals', 'is', 'called', 'operator', 'grammar', '.'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('Parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'PROPN'), ('precedence', 'NOUN'), ('LALR', 'PROPN'), ('CLR', 'PROPN'), ('SLR', 'PROPN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'SYM'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'SYM'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'PROPN'), ('Operator', 'PROPN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'PROPN'), ('Grammar', 'PROPN'), (':', 'PUNCT'), ('A', 'DET'), ('Grammar', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('there', 'PRON'), ('is', 'VERB'), ('no', 'DET'), ('Є', 'NOUN'), ('in', 'ADP'), ('RHS', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('production', 'NOUN'), ('or', 'CCONJ'), ('no', 'DET'), ('adjacent', 'ADJ'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('operator', 'NOUN'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('Parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', 'SYM'), ('Basic', 'NNP'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', 'SYM'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('parsing', 'NN'), ('Operator', 'NNP'), ('Grammar', 'NNP'), (':', ':'), ('A', 'DT'), ('Grammar', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('Є', 'NN'), ('in', 'IN'), ('RHS', 'NN'), ('of', 'IN'), ('any', 'DT'), ('production', 'NN'), ('or', 'CC'), ('no', 'DT'), ('adjacent', 'JJ'), ('non', 'NN'), ('terminals', 'NNS'), ('is', 'VBZ'), ('called', 'VBN'), ('operator', 'NN'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('Grammar', 'Grammar'), (':', ':'), ('A', 'a'), ('Grammar', 'grammar'), ('in', 'in'), ('which', 'which'), ('there', 'there'), ('is', 'be'), ('no', 'no'), ('Є', 'є'), ('in', 'in'), ('RHS', 'RHS'), ('of', 'of'), ('any', 'any'), ('production', 'production'), ('or', 'or'), ('no', 'no'), ('adjacent', 'adjacent'), ('non', 'non'), ('terminals', 'terminal'), ('is', 'be'), ('called', 'call'), ('operator', 'operator'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'Parsing'), 'punct'), (('predictive', 'Parsing'), 'amod'), (('Parsing', 'backtracking'), 'appos'), ((')', 'Parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obl'), (('LALR', 'precedence'), 'compound'), (('CLR', 'SLR'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'conj'), (('LL', 'descent'), 'appos'), (('(', '1'), 'punct'), (('1', 'descent'), 'dep'), ((')', '1'), 'punct'), (('Prof.', 'descent'), 'appos'), (('Jay', 'Prof.'), 'flat'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'LL'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'tracking'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'case'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'nmod'), (('‹#›', 'Unit'), 'compound'), (('Prof.', 'Probability'), 'flat'), (('Dixita', '‹#›'), 'flat'), (('B', 'Prof.'), 'flat'), (('Kagathara', 'Prof.'), 'flat'), (('#', 'tracking'), 'obl:tmod'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'precedence'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Parsing'), 'case'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'nmod'), (('(', 'I'), 'punct'), (('I', 'precedence'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'Theory'), 'appos'), (('parsing', 'Grammar'), 'compound'), (('Operator', 'Grammar'), 'compound'), (('Grammar', 'precedence'), 'appos'), ((':', 'Grammar'), 'punct'), (('A', 'Grammar'), 'det'), (('Grammar', 'precedence'), 'appos'), (('in', 'which'), 'case'), (('which', 'is'), 'obl'), (('there', 'is'), 'expl'), (('is', 'Grammar'), 'acl:relcl'), (('no', 'Є'), 'det'), (('Є', 'is'), 'nsubj'), (('in', 'RHS'), 'case'), (('RHS', 'Є'), 'nmod'), (('of', 'production'), 'case'), (('any', 'production'), 'det'), (('production', 'RHS'), 'nmod'), (('or', 'terminals'), 'cc'), (('no', 'terminals'), 'det'), (('adjacent', 'terminals'), 'amod'), (('non', 'terminals'), 'compound'), (('terminals', 'production'), 'conj'), (('is', 'called'), 'aux:pass'), (('called', 'is'), 'conj'), (('operator', 'grammar'), 'compound'), (('grammar', 'called'), 'obj'), (('.', 'tracking'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 145 ===========================

 Example: 	E EAE | (E) | id 		A + | * | - Above grammar is not operator grammar because right side EAE has consecutive non terminals. 

Tokens are: 
>> ['Example', ':', 'E\uf0e0', 'EAE', '|', '(', 'E', ')', '|', 'id', 'A\uf0e0', '+', '|', '*', '|', '-', 'Above', 'grammar', 'is', 'not', 'operator', 'grammar', 'because', 'right', 'side', 'EAE', 'has', 'consecutive', 'non', 'terminals', '.'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':', 'PUNCT'), ('E\uf0e0', 'PROPN'), ('EAE', 'NOUN'), ('|', 'PUNCT'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('|', 'PUNCT'), ('id', 'NOUN'), ('A\uf0e0', 'NOUN'), ('+', 'SYM'), ('|', 'PUNCT'), ('*', 'PUNCT'), ('|', 'PUNCT'), ('-', 'PUNCT'), ('Above', 'ADJ'), ('grammar', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('operator', 'NOUN'), ('grammar', 'NOUN'), ('because', 'SCONJ'), ('right', 'ADJ'), ('side', 'NOUN'), ('EAE', 'PROPN'), ('has', 'VERB'), ('consecutive', 'ADJ'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':', ':'), ('E\uf0e0', 'NNP'), ('EAE', 'NN'), ('|', 'NFP'), ('(', '-LRB-'), ('E', 'NN'), (')', '-RRB-'), ('|', 'NFP'), ('id', 'NN'), ('A\uf0e0', 'NN'), ('+', 'SYM'), ('|', 'NFP'), ('*', 'NFP'), ('|', 'NFP'), ('-', 'NFP'), ('Above', 'JJ'), ('grammar', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('operator', 'NN'), ('grammar', 'NN'), ('because', 'IN'), ('right', 'JJ'), ('side', 'NN'), ('EAE', 'NNP'), ('has', 'VBZ'), ('consecutive', 'JJ'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Example', 'example'), (':', ':'), ('E\uf0e0', 'E\uf0e0'), ('EAE', 'eae'), ('|', '|'), ('(', '('), ('E', 'e'), (')', ')'), ('|', '|'), ('id', 'id'), ('A\uf0e0', 'a\uf0e0'), ('+', '+'), ('|', '|'), ('*', '*'), ('|', '|'), ('-', '-'), ('Above', 'above'), ('grammar', 'grammar'), ('is', 'be'), ('not', 'not'), ('operator', 'operator'), ('grammar', 'grammar'), ('because', 'because'), ('right', 'right'), ('side', 'side'), ('EAE', 'EAE'), ('has', 'have'), ('consecutive', 'consecutive'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Example', 'root'), 'root'), ((':', 'Example'), 'punct'), (('E\uf0e0', 'EAE'), 'compound'), (('EAE', 'Example'), 'appos'), (('|', 'EAE'), 'punct'), (('(', 'E'), 'punct'), (('E', 'EAE'), 'appos'), ((')', 'E'), 'punct'), (('|', 'id'), 'punct'), (('id', 'EAE'), 'list'), (('A\uf0e0', 'id'), 'compound'), (('+', 'id'), 'advmod'), (('|', 'id'), 'punct'), (('*', 'EAE'), 'punct'), (('|', 'EAE'), 'punct'), (('-', 'EAE'), 'punct'), (('Above', 'grammar'), 'amod'), (('grammar', 'grammar'), 'nsubj'), (('is', 'grammar'), 'cop'), (('not', 'grammar'), 'advmod'), (('operator', 'grammar'), 'compound'), (('grammar', 'Example'), 'parataxis'), (('because', 'has'), 'mark'), (('right', 'EAE'), 'amod'), (('side', 'EAE'), 'compound'), (('EAE', 'has'), 'nsubj'), (('has', 'grammar'), 'advcl'), (('consecutive', 'terminals'), 'amod'), (('non', 'terminals'), 'compound'), (('terminals', 'has'), 'obj'), (('.', 'Example'), 'punct')]

 Named Entities are: 
>> [('EAE', 'ORG')]

========================== Sentence 146 ===========================

 In operator precedence parsing we define following disjoint relations:  	Relation 	Meaning  	a<.b	a “yields precedence to” b  	a=b	a “has the same precedence as” b  	a.>b	a “takes precedence over” b     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['In', 'operator', 'precedence', 'parsing', 'we', 'define', 'following', 'disjoint', 'relations', ':', 'Relation', 'Meaning', 'a', '<.b', 'a', '“', 'yields', 'precedence', 'to', '”', 'b', 'a=b', 'a', '“', 'has', 'the', 'same', 'precedence', 'as', '”', 'b', 'a.>b', 'a', '“', 'takes', 'precedence', 'over', '”', 'b', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('we', 'PRON'), ('define', 'VERB'), ('following', 'VERB'), ('disjoint', 'ADJ'), ('relations', 'NOUN'), (':', 'PUNCT'), ('Relation', 'NOUN'), ('Meaning', 'VERB'), ('a', 'DET'), ('<.b', 'NOUN'), ('a', 'DET'), ('“', 'PUNCT'), ('yields', 'NOUN'), ('precedence', 'NOUN'), ('to', 'ADP'), ('”', 'PUNCT'), ('b', 'NOUN'), ('a=b', 'PUNCT'), ('a', 'DET'), ('“', 'PUNCT'), ('has', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('precedence', 'NOUN'), ('as', 'ADP'), ('”', 'PUNCT'), ('b', 'NOUN'), ('a.>b', 'PUNCT'), ('a', 'DET'), ('“', 'PUNCT'), ('takes', 'VERB'), ('precedence', 'NOUN'), ('over', 'ADP'), ('”', 'PUNCT'), ('b', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'PUNCT'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X')] 

 XPOS tags are: 
>> [('In', 'IN'), ('operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('we', 'PRP'), ('define', 'VBP'), ('following', 'VBG'), ('disjoint', 'JJ'), ('relations', 'NNS'), (':', ':'), ('Relation', 'NN'), ('Meaning', 'VBG'), ('a', 'DT'), ('<.b', 'NN'), ('a', 'DT'), ('“', '``'), ('yields', 'NNS'), ('precedence', 'NN'), ('to', 'IN'), ('”', '``'), ('b', 'NN'), ('a=b', ','), ('a', 'DT'), ('“', '``'), ('has', 'VBZ'), ('the', 'DT'), ('same', 'JJ'), ('precedence', 'NN'), ('as', 'IN'), ('”', '``'), ('b', 'NN'), ('a.>b', "''"), ('a', 'DT'), ('“', '``'), ('takes', 'VBZ'), ('precedence', 'NN'), ('over', 'IN'), ('”', "''"), ('b', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', ','), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'ADD')] 

 Lemmas are: 
>> [('In', 'in'), ('operator', 'operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('we', 'we'), ('define', 'define'), ('following', 'follow'), ('disjoint', 'disjoint'), ('relations', 'relation'), (':', ':'), ('Relation', 'relation'), ('Meaning', 'mean'), ('a', 'a'), ('<.b', '<.b'), ('a', 'a'), ('“', "''"), ('yields', 'yield'), ('precedence', 'precedence'), ('to', 'to'), ('”', "''"), ('b', 'b'), ('a=b', 'a=b'), ('a', 'a'), ('“', "''"), ('has', 'have'), ('the', 'the'), ('same', 'same'), ('precedence', 'precedence'), ('as', 'as'), ('”', "''"), ('b', 'b'), ('a.>b', 'a.>b'), ('a', 'a'), ('“', "''"), ('takes', 'take'), ('precedence', 'precedence'), ('over', 'over'), ('”', "''"), ('b', 'b'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', "''"), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('In', 'parsing'), 'case'), (('operator', 'precedence'), 'compound'), (('precedence', 'parsing'), 'compound'), (('parsing', 'define'), 'obl'), (('we', 'define'), 'nsubj'), (('define', 'root'), 'root'), (('following', 'relations'), 'amod'), (('disjoint', 'relations'), 'amod'), (('relations', 'define'), 'obj'), ((':', 'Relation'), 'punct'), (('Relation', 'relations'), 'appos'), (('Meaning', 'Relation'), 'acl'), (('a', '<.b'), 'det'), (('<.b', 'Meaning'), 'obj'), (('a', 'precedence'), 'det'), (('“', 'precedence'), 'punct'), (('yields', 'precedence'), 'compound'), (('precedence', 'Meaning'), 'obj'), (('to', 'b'), 'case'), (('”', 'b'), 'punct'), (('b', 'precedence'), 'nmod'), (('a=b', 'has'), 'punct'), (('a', 'has'), 'nsubj'), (('“', 'has'), 'punct'), (('has', 'Meaning'), 'parataxis'), (('the', 'precedence'), 'det'), (('same', 'precedence'), 'amod'), (('precedence', 'has'), 'obj'), (('as', 'b'), 'case'), (('”', 'b'), 'punct'), (('b', 'precedence'), 'nmod'), (('a.>b', 'b'), 'punct'), (('a', 'takes'), 'det'), (('“', 'takes'), 'punct'), (('takes', 'b'), 'appos'), (('precedence', 'takes'), 'obj'), (('over', 'takes'), 'compound:prt'), (('”', 'takes'), 'punct'), (('b', 'takes'), 'obl'), (('Prof.', 'takes'), 'obj'), (('Jay', 'Prof.'), 'flat'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'PS'), 'punct'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Theory'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 147 ===========================

 Precedence & associativity of operators 	Operator	Precedence	Associative 	↑	1	right  	*, /	2	left 	+, -	3	left     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Steps of operator precedence parsing Find Leading and trailing of non terminal Establish relation Creation of table Parse the string     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Leading & Trailing Leading:- 

Tokens are: 
>> ['Precedence', '&', 'associativity', 'of', 'operators', 'Operator', 'Precedence', 'Associative', '↑', '1', 'right', '*', ',', '/', '2', 'left', '+', ',', '-', '3', 'left', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Steps', 'of', 'operator', 'precedence', 'parsing', 'Find', 'Leading', 'and', 'trailing', 'of', 'non', 'terminal', 'Establish', 'relation', 'Creation', 'of', 'table', 'Parse', 'the', 'string', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Leading', '&', 'Trailing', 'Leading', ':', '-'] 

 UPOS tags are: 
>> [('Precedence', 'NOUN'), ('&', 'CCONJ'), ('associativity', 'NOUN'), ('of', 'ADP'), ('operators', 'NOUN'), ('Operator', 'PROPN'), ('Precedence', 'NOUN'), ('Associative', 'ADJ'), ('↑', 'PUNCT'), ('1', 'NUM'), ('right', 'NOUN'), ('*', 'PUNCT'), (',', 'PUNCT'), ('/', 'SYM'), ('2', 'NUM'), ('left', 'VERB'), ('+', 'SYM'), (',', 'PUNCT'), ('-', 'SYM'), ('3', 'NUM'), ('left', 'VERB'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Steps', 'NOUN'), ('of', 'ADP'), ('operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('Find', 'NOUN'), ('Leading', 'VERB'), ('and', 'CCONJ'), ('trailing', 'NOUN'), ('of', 'ADP'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('Establish', 'NOUN'), ('relation', 'NOUN'), ('Creation', 'NOUN'), ('of', 'ADP'), ('table', 'NOUN'), ('Parse', 'VERB'), ('the', 'DET'), ('string', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Leading', 'VERB'), ('&', 'CCONJ'), ('Trailing', 'VERB'), ('Leading', 'VERB'), (':', 'PUNCT'), ('-', 'PUNCT')] 

 XPOS tags are: 
>> [('Precedence', 'NN'), ('&', 'CC'), ('associativity', 'NN'), ('of', 'IN'), ('operators', 'NNS'), ('Operator', 'NNP'), ('Precedence', 'NN'), ('Associative', 'JJ'), ('↑', ','), ('1', 'CD'), ('right', 'NN'), ('*', 'NFP'), (',', ','), ('/', ','), ('2', 'CD'), ('left', 'VBN'), ('+', 'SYM'), (',', ','), ('-', 'SYM'), ('3', 'CD'), ('left', 'VBN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Steps', 'NNS'), ('of', 'IN'), ('operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('Find', 'NN'), ('Leading', 'VBG'), ('and', 'CC'), ('trailing', 'NN'), ('of', 'IN'), ('non', 'NN'), ('terminal', 'NN'), ('Establish', 'NN'), ('relation', 'NN'), ('Creation', 'NN'), ('of', 'IN'), ('table', 'NN'), ('Parse', 'VB'), ('the', 'DT'), ('string', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Leading', 'VBG'), ('&', 'CC'), ('Trailing', 'VBG'), ('Leading', 'VBG'), (':', ':'), ('-', ',')] 

 Lemmas are: 
>> [('Precedence', 'precedence'), ('&', '&'), ('associativity', 'associativity'), ('of', 'of'), ('operators', 'operator'), ('Operator', 'Operator'), ('Precedence', 'precedence'), ('Associative', 'associative'), ('↑', "''"), ('1', '1'), ('right', 'right'), ('*', '*'), (',', ','), ('/', '/'), ('2', '2'), ('left', 'leave'), ('+', '+'), (',', ','), ('-', '-'), ('3', '3'), ('left', 'leave'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Steps', 'step'), ('of', 'of'), ('operator', 'operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Find', 'find'), ('Leading', 'lead'), ('and', 'and'), ('trailing', 'trailing'), ('of', 'of'), ('non', 'non'), ('terminal', 'terminal'), ('Establish', 'establish'), ('relation', 'relation'), ('Creation', 'creation'), ('of', 'of'), ('table', 'table'), ('Parse', 'parse'), ('the', 'the'), ('string', 'string'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('Leading', 'lead'), (':', ':'), ('-', '-')] 

 Dependency tags are: 
>> [(('Precedence', 'root'), 'root'), (('&', 'associativity'), 'cc'), (('associativity', 'Precedence'), 'conj'), (('of', 'Operator'), 'case'), (('operators', 'Operator'), 'compound'), (('Operator', 'Precedence'), 'nmod'), (('Precedence', 'Operator'), 'punct'), (('Associative', 'Precedence'), 'amod'), (('↑', 'Associative'), 'punct'), (('1', 'right'), 'nummod'), (('right', 'Precedence'), 'conj'), (('*', 'right'), 'punct'), ((',', 'left'), 'punct'), (('/', '2'), 'punct'), (('2', 'left'), 'obl:npmod'), (('left', 'right'), 'conj'), (('+', 'left'), 'advmod'), ((',', 'left'), 'punct'), (('-', '3'), 'case'), (('3', 'left'), 'obl'), (('left', 'right'), 'conj'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'left'), 'obj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Precedence'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Precedence'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Precedence'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Precedence'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Steps'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Steps'), 'compound'), (('Steps', 'Precedence'), 'conj'), (('of', 'precedence'), 'case'), (('operator', 'precedence'), 'compound'), (('precedence', 'Steps'), 'nmod'), (('parsing', 'Find'), 'compound'), (('Find', 'Steps'), 'nmod'), (('Leading', 'Find'), 'acl'), (('and', 'trailing'), 'cc'), (('trailing', 'Leading'), 'conj'), (('of', 'Creation'), 'case'), (('non', 'terminal'), 'compound'), (('terminal', 'Creation'), 'compound'), (('Establish', 'Creation'), 'compound'), (('relation', 'Creation'), 'compound'), (('Creation', 'Leading'), 'obl'), (('of', 'table'), 'case'), (('table', 'Creation'), 'nmod'), (('Parse', 'Creation'), 'compound'), (('the', 'string'), 'det'), (('string', 'Parse'), 'obj'), (('Prof.', 'string'), 'appos'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'string'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Theory'), 'appos'), (('Leading', '‹#›'), 'acl'), (('&', 'Trailing'), 'cc'), (('Trailing', 'Leading'), 'conj'), (('Leading', 'Leading'), 'conj'), ((':', 'Leading'), 'punct'), (('-', 'Precedence'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('2', 'CARDINAL'), ('3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 148 ===========================

 Leading of a non terminal is the first terminal or operator in production of that non terminal. 

Tokens are: 
>> ['Leading', 'of', 'a', 'non', 'terminal', 'is', 'the', 'first', 'terminal', 'or', 'operator', 'in', 'production', 'of', 'that', 'non', 'terminal', '.'] 

 UPOS tags are: 
>> [('Leading', 'VERB'), ('of', 'ADP'), ('a', 'DET'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('first', 'ADJ'), ('terminal', 'NOUN'), ('or', 'CCONJ'), ('operator', 'NOUN'), ('in', 'ADP'), ('production', 'NOUN'), ('of', 'ADP'), ('that', 'DET'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Leading', 'VBG'), ('of', 'IN'), ('a', 'DT'), ('non', 'NN'), ('terminal', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('first', 'JJ'), ('terminal', 'NN'), ('or', 'CC'), ('operator', 'NN'), ('in', 'IN'), ('production', 'NN'), ('of', 'IN'), ('that', 'DT'), ('non', 'NN'), ('terminal', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Leading', 'lead'), ('of', 'of'), ('a', 'a'), ('non', 'non'), ('terminal', 'terminal'), ('is', 'be'), ('the', 'the'), ('first', 'first'), ('terminal', 'terminal'), ('or', 'or'), ('operator', 'operator'), ('in', 'in'), ('production', 'production'), ('of', 'of'), ('that', 'that'), ('non', 'non'), ('terminal', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Leading', 'terminal'), 'csubj'), (('of', 'terminal'), 'case'), (('a', 'terminal'), 'det'), (('non', 'terminal'), 'compound'), (('terminal', 'Leading'), 'obl'), (('is', 'terminal'), 'cop'), (('the', 'terminal'), 'det'), (('first', 'terminal'), 'amod'), (('terminal', 'root'), 'root'), (('or', 'operator'), 'cc'), (('operator', 'terminal'), 'conj'), (('in', 'production'), 'case'), (('production', 'terminal'), 'nmod'), (('of', 'terminal'), 'case'), (('that', 'terminal'), 'det'), (('non', 'terminal'), 'compound'), (('terminal', 'production'), 'nmod'), (('.', 'terminal'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL')]

========================== Sentence 149 ===========================

 Trailing:- 

Tokens are: 
>> ['Trailing', ':', '-'] 

 UPOS tags are: 
>> [('Trailing', 'VERB'), (':', 'PUNCT'), ('-', 'PUNCT')] 

 XPOS tags are: 
>> [('Trailing', 'VBG'), (':', ':'), ('-', ',')] 

 Lemmas are: 
>> [('Trailing', 'trail'), (':', ':'), ('-', '-')] 

 Dependency tags are: 
>> [(('Trailing', 'root'), 'root'), ((':', 'Trailing'), 'punct'), (('-', 'Trailing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 150 ===========================

 Trailing of a non terminal is the last terminal or operator in production of that non terminal. 

Tokens are: 
>> ['Trailing', 'of', 'a', 'non', 'terminal', 'is', 'the', 'last', 'terminal', 'or', 'operator', 'in', 'production', 'of', 'that', 'non', 'terminal', '.'] 

 UPOS tags are: 
>> [('Trailing', 'VERB'), ('of', 'ADP'), ('a', 'DET'), ('non', 'ADJ'), ('terminal', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('last', 'ADJ'), ('terminal', 'NOUN'), ('or', 'CCONJ'), ('operator', 'NOUN'), ('in', 'ADP'), ('production', 'NOUN'), ('of', 'ADP'), ('that', 'DET'), ('non', 'NOUN'), ('terminal', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Trailing', 'VBG'), ('of', 'IN'), ('a', 'DT'), ('non', 'JJ'), ('terminal', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('last', 'JJ'), ('terminal', 'NN'), ('or', 'CC'), ('operator', 'NN'), ('in', 'IN'), ('production', 'NN'), ('of', 'IN'), ('that', 'DT'), ('non', 'NN'), ('terminal', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Trailing', 'trail'), ('of', 'of'), ('a', 'a'), ('non', 'non'), ('terminal', 'terminal'), ('is', 'be'), ('the', 'the'), ('last', 'last'), ('terminal', 'terminal'), ('or', 'or'), ('operator', 'operator'), ('in', 'in'), ('production', 'production'), ('of', 'of'), ('that', 'that'), ('non', 'non'), ('terminal', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Trailing', 'terminal'), 'csubj'), (('of', 'terminal'), 'case'), (('a', 'terminal'), 'det'), (('non', 'terminal'), 'amod'), (('terminal', 'Trailing'), 'obl'), (('is', 'terminal'), 'cop'), (('the', 'terminal'), 'det'), (('last', 'terminal'), 'amod'), (('terminal', 'root'), 'root'), (('or', 'operator'), 'cc'), (('operator', 'terminal'), 'conj'), (('in', 'production'), 'case'), (('production', 'terminal'), 'nmod'), (('of', 'terminal'), 'case'), (('that', 'terminal'), 'det'), (('non', 'terminal'), 'compound'), (('terminal', 'production'), 'nmod'), (('.', 'terminal'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 151 ===========================

 Example: 	EE+T | T 		TT*F | F 		Fid  	Non terminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}           Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to establish a relation 

Tokens are: 
>> ['Example', ':', 'E\uf0e0E+T', '|', 'T', 'T\uf0e0T*F', '|', 'F', 'F\uf0e0id', 'Non', 'terminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id}', '{', '+', ',', '*', ',', 'id}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id}', '{', 'id', '}', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rules', 'to', 'establish', 'a', 'relation'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':', 'PUNCT'), ('E\uf0e0E+T', 'PROPN'), ('|', 'PUNCT'), ('T', 'PROPN'), ('T\uf0e0T*F', 'NOUN'), ('|', 'PUNCT'), ('F', 'PROPN'), ('F\uf0e0id', 'X'), ('Non', 'X'), ('terminal', 'X'), ('Leading', 'VERB'), ('Trailing', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NUM'), ('T', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('id}', 'NOUN'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'X'), ('Dhamsaniya', 'X'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Rules', 'NOUN'), ('to', 'PART'), ('establish', 'VERB'), ('a', 'DET'), ('relation', 'NOUN')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':', ':'), ('E\uf0e0E+T', 'NNP'), ('|', 'NFP'), ('T', 'NNP'), ('T\uf0e0T*F', 'NN'), ('|', 'NFP'), ('F', 'NNP'), ('F\uf0e0id', 'GW'), ('Non', 'GW'), ('terminal', 'GW'), ('Leading', 'VBG'), ('Trailing', 'NN'), ('E', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'CD'), ('T', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('F', 'NN'), ('{', 'NFP'), ('id}', 'NN'), ('{', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'FW'), ('Dhamsaniya', 'FW'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Rules', 'NNS'), ('to', 'TO'), ('establish', 'VB'), ('a', 'DT'), ('relation', 'NN')] 

 Lemmas are: 
>> [('Example', 'example'), (':', ':'), ('E\uf0e0E+T', 'E\uf0e0E+T'), ('|', '|'), ('T', 'T'), ('T\uf0e0T*F', 't\uf0e0t*f'), ('|', '|'), ('F', 'F'), ('F\uf0e0id', 'f\uf0e0id'), ('Non', 'non'), ('terminal', 'terminal'), ('Leading', 'lead'), ('Trailing', 'trailing'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id}', 'id}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'r'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Rules', 'rule'), ('to', 'to'), ('establish', 'establish'), ('a', 'a'), ('relation', 'relation')] 

 Dependency tags are: 
>> [(('Example', 'root'), 'root'), ((':', 'Example'), 'punct'), (('E\uf0e0E+T', 'Example'), 'appos'), (('|', 'E\uf0e0E+T'), 'punct'), (('T', 'T\uf0e0T*F'), 'compound'), (('T\uf0e0T*F', 'E\uf0e0E+T'), 'dep'), (('|', 'E\uf0e0E+T'), 'punct'), (('F', 'T\uf0e0T*F'), 'appos'), (('F\uf0e0id', 'F'), 'goeswith'), (('Non', 'F'), 'goeswith'), (('terminal', 'E\uf0e0E+T'), 'conj'), (('Leading', 'E'), 'amod'), (('Trailing', 'E'), 'compound'), (('E', 'E\uf0e0E+T'), 'conj'), (('{', 'E\uf0e0E+T'), 'punct'), (('+', 'E'), 'conj'), ((',', 'E\uf0e0E+T'), 'punct'), (('*', 'id}'), 'punct'), ((',', 'id}'), 'punct'), (('id}', 'E\uf0e0E+T'), 'conj'), (('{', 'id}'), 'punct'), (('+', 'id}'), 'dep'), ((',', 'id}'), 'punct'), (('*', 'id}'), 'punct'), ((',', 'T'), 'punct'), (('id}', 'T'), 'nummod'), (('T', 'E\uf0e0E+T'), 'conj'), (('{', 'E\uf0e0E+T'), 'punct'), (('*', 'E\uf0e0E+T'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E\uf0e0E+T'), 'conj'), (('}', 'id'), 'punct'), (('{', 'E\uf0e0E+T'), 'punct'), (('*', 'E\uf0e0E+T'), 'punct'), ((',', 'id'), 'punct'), (('id', 'E\uf0e0E+T'), 'conj'), (('}', 'id'), 'punct'), (('F', 'E\uf0e0E+T'), 'conj'), (('{', 'F'), 'punct'), (('id}', 'E\uf0e0E+T'), 'conj'), (('{', 'id'), 'punct'), (('id', 'E\uf0e0E+T'), 'conj'), (('}', 'id'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'E\uf0e0E+T'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'E\uf0e0E+T'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'E\uf0e0E+T'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'B'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Rules'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Rules'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Rules'), 'compound'), (('Rules', 'Unit'), 'appos'), (('to', 'establish'), 'mark'), (('establish', 'Rules'), 'acl'), (('a', 'relation'), 'det'), (('relation', 'establish'), 'obj')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 152 ===========================

 For a = b, , where  is  or a single non terminal  [e.g.--- : (E)] a <.b [e.g.--- : +T] a .>b [e.g.--- : E+] 

Tokens are: 
>> ['For', 'a', '=', 'b', ',', ',', 'where', 'is', 'or', 'a', 'single', 'non', 'terminal', '[', 'e.g.', '---', ':', '(', 'E', ')', ']', 'a', '<.b', '[', 'e.g.', '---', ':', '+', 'T', ']', 'a', '.>b', '[', 'e.g.', '---', ':', 'E', '+', ']'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('a', 'DET'), ('=', 'SYM'), ('b', 'NOUN'), (',', 'PUNCT'), (',', 'PUNCT'), ('where', 'ADV'), ('is', 'AUX'), ('or', 'CCONJ'), ('a', 'DET'), ('single', 'ADJ'), ('non', 'X'), ('terminal', 'NOUN'), ('[', 'PUNCT'), ('e.g.', 'ADV'), ('---', 'PUNCT'), (':', 'PUNCT'), ('(', 'PUNCT'), ('E', 'PROPN'), (')', 'PUNCT'), (']', 'PUNCT'), ('a', 'DET'), ('<.b', 'NOUN'), ('[', 'PUNCT'), ('e.g.', 'ADV'), ('---', 'PUNCT'), (':', 'PUNCT'), ('+', 'SYM'), ('T', 'NUM'), (']', 'PUNCT'), ('a', 'DET'), ('.>b', 'NOUN'), ('[', 'PUNCT'), ('e.g.', 'ADV'), ('---', 'PUNCT'), (':', 'PUNCT'), ('E', 'NOUN'), ('+', 'SYM'), (']', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('a', 'DT'), ('=', 'SYM'), ('b', 'NN'), (',', ','), (',', ','), ('where', 'WRB'), ('is', 'VBZ'), ('or', 'CC'), ('a', 'DT'), ('single', 'JJ'), ('non', 'FW'), ('terminal', 'NN'), ('[', '-LRB-'), ('e.g.', 'FW'), ('---', ':'), (':', ':'), ('(', '-LRB-'), ('E', 'NNP'), (')', '-RRB-'), (']', '-RRB-'), ('a', 'DT'), ('<.b', 'NN'), ('[', '-LRB-'), ('e.g.', 'FW'), ('---', ':'), (':', ':'), ('+', 'SYM'), ('T', 'CD'), (']', '-RRB-'), ('a', 'DT'), ('.>b', 'NN'), ('[', '-LRB-'), ('e.g.', 'FW'), ('---', ':'), (':', ':'), ('E', 'NN'), ('+', 'SYM'), (']', '-RRB-')] 

 Lemmas are: 
>> [('For', 'for'), ('a', 'a'), ('=', '='), ('b', 'b'), (',', ','), (',', ','), ('where', 'where'), ('is', 'be'), ('or', 'or'), ('a', 'a'), ('single', 'single'), ('non', 'non'), ('terminal', 'terminal'), ('[', '['), ('e.g.', 'e.g.'), ('---', '---'), (':', ':'), ('(', '('), ('E', 'E'), (')', ')'), (']', ']'), ('a', 'a'), ('<.b', '<.b'), ('[', '['), ('e.g.', 'e.g.'), ('---', '---'), (':', ':'), ('+', '+'), ('T', 'T'), (']', ']'), ('a', 'a'), ('.>b', '.>b'), ('[', '['), ('e.g.', 'e.g.'), ('---', '---'), (':', ':'), ('E', 'e'), ('+', '+'), (']', ']')] 

 Dependency tags are: 
>> [(('For', '='), 'mark'), (('a', 'b'), 'det'), (('=', 'terminal'), 'advcl'), (('b', '='), 'obj'), ((',', 'terminal'), 'punct'), ((',', 'terminal'), 'punct'), (('where', 'terminal'), 'advmod'), (('is', 'terminal'), 'cop'), (('or', 'terminal'), 'cc'), (('a', 'terminal'), 'det'), (('single', 'terminal'), 'amod'), (('non', 'terminal'), 'compound'), (('terminal', 'root'), 'root'), (('[', 'e.g.'), 'punct'), (('e.g.', 'terminal'), 'advmod'), (('---', 'e.g.'), 'punct'), ((':', 'E'), 'punct'), (('(', 'E'), 'punct'), (('E', 'terminal'), 'appos'), ((')', 'E'), 'punct'), ((']', 'E'), 'punct'), (('a', '<.b'), 'det'), (('<.b', 'terminal'), 'appos'), (('[', 'T'), 'punct'), (('e.g.', 'T'), 'advmod'), (('---', 'T'), 'punct'), ((':', 'T'), 'punct'), (('+', 'T'), 'advmod'), (('T', '<.b'), 'dep'), ((']', 'T'), 'punct'), (('a', '.>b'), 'det'), (('.>b', '<.b'), 'appos'), (('[', 'E'), 'punct'), (('e.g.', 'E'), 'advmod'), (('---', 'E'), 'punct'), ((':', 'E'), 'punct'), (('E', '.>b'), 'appos'), (('+', 'E'), 'dep'), ((']', 'E'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 153 ===========================

 $ <. Leading (start symbol) Trailing (start symbol) .> $      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing       a <.b     	Nonterminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}  Step 1: Find Leading & Trailing of NT  Step 2: Establish Relation  E E	 Step3: Creation of Table  	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', 'Leading', '(', 'start', 'symbol', ')', 'Trailing', '(', 'start', 'symbol', ')', '.>', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Operator', 'precedence', 'parsing', 'a', '<.b', 'Nonterminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id}', '{', '+', ',', '*', ',', 'id}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Step', '1', ':', 'Find', 'Leading', '&', 'Trailing', 'of', 'NT', 'Step', '2', ':', 'Establish', 'Relation', 'E\uf0e0', 'E', 'Step3', ':', 'Creation', 'of', 'Table', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('Leading', 'VERB'), ('(', 'PUNCT'), ('start', 'NOUN'), ('symbol', 'NOUN'), (')', 'PUNCT'), ('Trailing', 'NOUN'), ('(', 'PUNCT'), ('start', 'NOUN'), ('symbol', 'NOUN'), (')', 'PUNCT'), ('.>', 'PUNCT'), ('$', 'SYM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'VERB'), ('a', 'DET'), ('<.b', 'NOUN'), ('Nonterminal', 'NOUN'), ('Leading', 'VERB'), ('Trailing', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NUM'), ('T', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Find', 'VERB'), ('Leading', 'VERB'), ('&', 'CCONJ'), ('Trailing', 'NOUN'), ('of', 'ADP'), ('NT', 'ADV'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Establish', 'VERB'), ('Relation', 'NOUN'), ('E\uf0e0', 'NOUN'), ('E', 'NOUN'), ('Step3', 'NOUN'), (':', 'PUNCT'), ('Creation', 'NOUN'), ('of', 'ADP'), ('Table', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('+', 'SYM'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('Leading', 'VBG'), ('(', '-LRB-'), ('start', 'NN'), ('symbol', 'NN'), (')', '-RRB-'), ('Trailing', 'NN'), ('(', '-LRB-'), ('start', 'NN'), ('symbol', 'NN'), (')', '-RRB-'), ('.>', ','), ('$', '$'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'VBG'), ('a', 'DT'), ('<.b', 'NN'), ('Nonterminal', 'NN'), ('Leading', 'VBG'), ('Trailing', 'NN'), ('E', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'CD'), ('T', 'NN'), ('{', ','), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', ','), ('{', ','), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('F', 'NN'), ('{', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Find', 'VB'), ('Leading', 'VBG'), ('&', 'CC'), ('Trailing', 'NN'), ('of', 'IN'), ('NT', 'RB'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Establish', 'VB'), ('Relation', 'NN'), ('E\uf0e0', 'NN'), ('E', 'NN'), ('Step3', 'NN'), (':', ':'), ('Creation', 'NN'), ('of', 'IN'), ('Table', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('+', 'SYM'), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', 'NFP'), ('.>', 'NFP'), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('Leading', 'lead'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('Trailing', 'trailing'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.>', '.>'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parse'), ('a', 'a'), ('<.b', '<.b'), ('Nonterminal', 'nonterminal'), ('Leading', 'lead'), ('Trailing', 'trailing'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trailing'), ('of', 'of'), ('NT', 'not'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relation'), ('E\uf0e0', 'e\uf0e0'), ('E', 'e'), ('Step3', 'step3'), (':', ':'), ('Creation', 'creation'), ('of', 'of'), ('Table', 'table'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '$'), 'nummod'), (('Leading', '$'), 'acl'), (('(', 'symbol'), 'punct'), (('start', 'symbol'), 'compound'), (('symbol', 'Trailing'), 'appos'), ((')', 'symbol'), 'punct'), (('Trailing', '$'), 'appos'), (('(', 'symbol'), 'punct'), (('start', 'symbol'), 'compound'), (('symbol', 'Trailing'), 'appos'), ((')', 'symbol'), 'punct'), (('.>', '$'), 'punct'), (('$', 'Trailing'), 'conj'), (('Prof.', '$'), 'compound'), (('Jay', '$'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'conj'), (('‹#›', '$'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '$'), 'parataxis'), ((':', '$'), 'punct'), (('Operator', 'precedence'), 'compound'), (('precedence', '$'), 'parataxis'), (('parsing', 'precedence'), 'acl'), (('a', 'Nonterminal'), 'det'), (('<.b', 'Nonterminal'), 'compound'), (('Nonterminal', 'E'), 'compound'), (('Leading', 'E'), 'amod'), (('Trailing', 'E'), 'compound'), (('E', 'parsing'), 'obj'), (('{', 'E'), 'punct'), (('+', 'id}'), 'advmod'), ((',', 'id}'), 'punct'), (('*', 'id}'), 'punct'), ((',', 'id}'), 'punct'), (('id}', '$'), 'conj'), (('{', 'id}'), 'punct'), (('+', 'id}'), 'advmod'), ((',', '$'), 'punct'), (('*', 'T'), 'punct'), ((',', 'T'), 'punct'), (('id}', '$'), 'conj'), (('T', '$'), 'conj'), (('{', '$'), 'punct'), (('*', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('}', 'id'), 'punct'), (('{', '$'), 'punct'), (('*', '$'), 'punct'), ((',', '$'), 'punct'), (('id', '$'), 'conj'), (('}', 'id'), 'punct'), (('F', 'id'), 'appos'), (('{', 'F'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('}', 'id'), 'punct'), (('Step', 'id'), 'appos'), (('1', 'Step'), 'nummod'), ((':', 'Find'), 'punct'), (('Find', 'id'), 'parataxis'), (('Leading', 'Find'), 'xcomp'), (('&', 'Trailing'), 'cc'), (('Trailing', 'Leading'), 'conj'), (('of', 'Step'), 'case'), (('NT', 'Step'), 'advmod'), (('Step', 'Leading'), 'obl'), (('2', 'Step'), 'nummod'), ((':', 'Establish'), 'punct'), (('Establish', 'Find'), 'parataxis'), (('Relation', 'Establish'), 'obj'), (('E\uf0e0', 'E'), 'punct'), (('E', 'Establish'), 'obj'), (('Step3', 'E'), 'appos'), ((':', 'Creation'), 'punct'), (('Creation', 'Step3'), 'appos'), (('of', 'Table'), 'case'), (('Table', 'Creation'), 'nmod'), (('+', 'Creation'), 'dep'), (('*', 'id'), 'punct'), (('id', 'Creation'), 'conj'), (('$', 'Creation'), 'conj'), (('+', '$'), 'flat'), (('.>', '$'), 'punct'), (('<.', '<.'), 'compound'), (('<.', '$'), 'conj'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', '<.'), 'appos'), (('.>', '<.'), 'punct'), (('id', '<.'), 'appos'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL')]

========================== Sentence 154 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				                   +T	 | T	 T T *F	 | F	 F id    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing       a .>b     	Nonterminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}  Step2: Establish Relation  E  Step3: Creation of Table  	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', '<.', '<.', '+', 'T', '|', 'T', 'T\uf0e0', 'T', '*', 'F', '|', 'F', 'F\uf0e0', 'id', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Operator', 'precedence', 'parsing', 'a', '.>b', 'Nonterminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id}', '{', '+', ',', '*', ',', 'id}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Step2', ':', 'Establish', 'Relation', 'E\uf0e0', 'Step3', ':', 'Creation', 'of', 'Table', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('+', 'SYM'), ('T', 'NOUN'), ('|', 'PUNCT'), ('T', 'NOUN'), ('T\uf0e0', 'NOUN'), ('T', 'NOUN'), ('*', 'PUNCT'), ('F', 'NOUN'), ('|', 'PUNCT'), ('F', 'PROPN'), ('F\uf0e0', 'NOUN'), ('id', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'NOUN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'X'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('a', 'DET'), ('.>b', 'NOUN'), ('Nonterminal', 'NOUN'), ('Leading', 'VERB'), ('Trailing', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NUM'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NUM'), ('T', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Step2', 'NOUN'), (':', 'PUNCT'), ('Establish', 'NOUN'), ('Relation', 'NOUN'), ('E\uf0e0', 'NOUN'), ('Step3', 'NOUN'), (':', 'PUNCT'), ('Creation', 'NOUN'), ('of', 'ADP'), ('Table', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('+', 'SYM'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'CD'), ('+', 'SYM'), ('T', 'NN'), ('|', ','), ('T', 'NN'), ('T\uf0e0', 'NN'), ('T', 'NN'), ('*', 'NFP'), ('F', 'NN'), ('|', 'NFP'), ('F', 'NNP'), ('F\uf0e0', 'NN'), ('id', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NN'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'ADD'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'GW'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('a', 'DT'), ('.>b', 'NN'), ('Nonterminal', 'NN'), ('Leading', 'VBG'), ('Trailing', 'NN'), ('E', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'CD'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'CD'), ('T', 'NN'), ('{', ':'), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', 'NFP'), ('F', 'NN'), ('{', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('{', 'NFP'), ('id', 'NN'), ('}', 'NFP'), ('Step2', 'NN'), (':', ':'), ('Establish', 'NN'), ('Relation', 'NN'), ('E\uf0e0', 'NN'), ('Step3', 'NN'), (':', ':'), ('Creation', 'NN'), ('of', 'IN'), ('Table', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('+', 'SYM'), ('.>', ':'), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', 'NFP'), ('.>', 'NFP'), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', 'NFP'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('+', '+'), ('T', 'T'), ('|', '|'), ('T', 'T'), ('T\uf0e0', 't\uf0e0'), ('T', 'T'), ('*', '*'), ('F', 'f'), ('|', '|'), ('F', 'F'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('a', 'a'), ('.>b', '.>b'), ('Nonterminal', 'nonterminal'), ('Leading', 'lead'), ('Trailing', 'trailing'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step2', 'step2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relation'), ('E\uf0e0', 'e\uf0e0'), ('Step3', 'step3'), (':', ':'), ('Creation', 'creation'), ('of', 'of'), ('Table', 'table'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('<.', '$'), 'nummod'), (('+', '$'), 'punct'), (('T', '$'), 'appos'), (('|', '$'), 'punct'), (('T', 'T'), 'compound'), (('T\uf0e0', 'T'), 'compound'), (('T', '$'), 'appos'), (('*', '$'), 'punct'), (('F', '$'), 'appos'), (('|', '$'), 'punct'), (('F', 'id'), 'compound'), (('F\uf0e0', 'id'), 'compound'), (('id', '$'), 'appos'), (('Prof.', 'id'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'id'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'conj'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '$'), 'parataxis'), ((':', '$'), 'punct'), (('Operator', 'precedence'), 'compound'), (('precedence', '$'), 'parataxis'), (('parsing', '$'), 'parataxis'), (('a', 'Nonterminal'), 'det'), (('.>b', 'Nonterminal'), 'compound'), (('Nonterminal', 'E'), 'compound'), (('Leading', 'E'), 'amod'), (('Trailing', 'E'), 'compound'), (('E', '$'), 'parataxis'), (('{', '$'), 'punct'), (('+', '$'), 'conj'), ((',', '$'), 'punct'), (('*', '$'), 'punct'), ((',', '$'), 'punct'), (('id}', '$'), 'conj'), (('{', '$'), 'punct'), (('+', 'id}'), 'dep'), ((',', '$'), 'punct'), (('*', '$'), 'punct'), ((',', '$'), 'punct'), (('id}', 'T'), 'nummod'), (('T', '$'), 'conj'), (('{', 'T'), 'punct'), (('*', 'id'), 'punct'), ((',', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', '$'), 'punct'), ((',', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('}', 'id'), 'punct'), (('F', 'id'), 'appos'), (('{', 'F'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('}', 'id'), 'punct'), (('Step2', 'id'), 'appos'), ((':', 'Step2'), 'punct'), (('Establish', 'Relation'), 'compound'), (('Relation', '$'), 'parataxis'), (('E\uf0e0', 'Relation'), 'compound'), (('Step3', 'Relation'), 'appos'), ((':', 'Creation'), 'punct'), (('Creation', 'Relation'), 'appos'), (('of', 'Table'), 'case'), (('Table', 'Creation'), 'nmod'), (('+', 'id'), 'cc'), (('*', 'id'), 'punct'), (('id', 'Creation'), 'conj'), (('$', 'id'), 'appos'), (('+', '$'), 'flat'), (('.>', '$'), 'punct'), (('<.', '<.'), 'appos'), (('<.', '$'), 'appos'), (('.>', '<.'), 'punct'), (('*', '$'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', 'id'), 'compound'), (('.>', '<.'), 'punct'), (('id', '$'), 'parataxis'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 155 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				                E+ T| T	 T  T*	 F| F	 F id Step 1: Find Leading & Trailing of NT     Prof. 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'E+', 'T|', 'T', 'T\uf0e0', 'T*', 'F|', 'F', 'F\uf0e0', 'id', 'Step', '1', ':', 'Find', 'Leading', '&', 'Trailing', 'of', 'NT', 'Prof', '.'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NOUN'), ('E+', 'NOUN'), ('T|', 'PROPN'), ('T', 'NOUN'), ('T\uf0e0', 'PROPN'), ('T*', 'NOUN'), ('F|', 'NOUN'), ('F', 'NOUN'), ('F\uf0e0', 'NOUN'), ('id', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Find', 'VERB'), ('Leading', 'VERB'), ('&', 'CCONJ'), ('Trailing', 'VERB'), ('of', 'ADP'), ('NT', 'ADV'), ('Prof', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'NN'), ('E+', 'NN'), ('T|', 'NNP'), ('T', 'NN'), ('T\uf0e0', 'NNP'), ('T*', 'NN'), ('F|', 'NN'), ('F', 'NN'), ('F\uf0e0', 'NN'), ('id', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Find', 'VB'), ('Leading', 'VBG'), ('&', 'CC'), ('Trailing', 'VBG'), ('of', 'IN'), ('NT', 'RB'), ('Prof', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('E+', 'e+'), ('T|', 'T|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T*', 't*'), ('F|', 'F|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('of', 'of'), ('NT', 'not'), ('Prof', 'Prof'), ('.', '.')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('<.', '$'), 'punct'), (('E+', '$'), 'appos'), (('T|', 'T'), 'compound'), (('T', 'T\uf0e0'), 'compound'), (('T\uf0e0', 'T*'), 'compound'), (('T*', '$'), 'parataxis'), (('F|', 'F'), 'compound'), (('F', '$'), 'list'), (('F\uf0e0', 'id'), 'compound'), (('id', 'F'), 'appos'), (('Step', 'id'), 'appos'), (('1', 'Step'), 'nummod'), ((':', 'Find'), 'punct'), (('Find', '$'), 'parataxis'), (('Leading', 'Find'), 'xcomp'), (('&', 'Trailing'), 'cc'), (('Trailing', 'Leading'), 'conj'), (('of', 'Prof'), 'case'), (('NT', 'Prof'), 'advmod'), (('Prof', 'Leading'), 'obl'), (('.', '$'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL')]

========================== Sentence 156 ===========================

 Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing  	Nonterminal 	Leading	Trailing  	E	{+,*,id}	{+,*,id}  	T	{*,id}	{*,id}  	F	{id}	{id}  Step 2: Establish Relation  E  Step 3: Creation of Table  	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Operator', 'precedence', 'parsing', 'Nonterminal', 'Leading', 'Trailing', 'E', '{', '+', ',', '*', ',', 'id}', '{', '+', ',', '*', ',', 'id}', 'T', '{', '*', ',', 'id', '}', '{', '*', ',', 'id', '}', 'F', '{', 'id', '}', '{', 'id', '}', 'Step', '2', ':', 'Establish', 'Relation', 'E\uf0e0', 'Step', '3', ':', 'Creation', 'of', 'Table', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('Nonterminal', 'NOUN'), ('Leading', 'VERB'), ('Trailing', 'NOUN'), ('E', 'NOUN'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NUM'), ('{', 'PUNCT'), ('+', 'SYM'), (',', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id}', 'NUM'), ('T', 'NOUN'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('*', 'PUNCT'), (',', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('F', 'NOUN'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('{', 'PUNCT'), ('id', 'NOUN'), ('}', 'PUNCT'), ('Step', 'NOUN'), ('2', 'NUM'), (':', 'PUNCT'), ('Establish', 'NOUN'), ('Relation', 'NOUN'), ('E\uf0e0', 'NOUN'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Creation', 'NOUN'), ('of', 'ADP'), ('Table', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('+', 'SYM'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('Nonterminal', 'NN'), ('Leading', 'VBG'), ('Trailing', 'NN'), ('E', 'NN'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'CD'), ('{', ','), ('+', 'SYM'), (',', ','), ('*', 'NFP'), (',', ','), ('id}', 'CD'), ('T', 'NN'), ('{', ':'), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', ':'), ('{', 'NFP'), ('*', 'NFP'), (',', ','), ('id', 'NN'), ('}', '-LRB-'), ('F', 'NN'), ('{', '-LRB-'), ('id', 'NN'), ('}', '-RRB-'), ('{', '-LRB-'), ('id', 'NN'), ('}', 'NFP'), ('Step', 'NN'), ('2', 'CD'), (':', ':'), ('Establish', 'NN'), ('Relation', 'NN'), ('E\uf0e0', 'NN'), ('Step', 'NN'), ('3', 'CD'), (':', ':'), ('Creation', 'NN'), ('of', 'IN'), ('Table', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('+', 'SYM'), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', 'NFP'), ('.>', 'NFP'), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Nonterminal', 'nonterminal'), ('Leading', 'lead'), ('Trailing', 'trailing'), ('E', 'e'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('{', '{'), ('+', '+'), (',', ','), ('*', '*'), (',', ','), ('id}', 'id}'), ('T', 'T'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('{', '{'), ('*', '*'), (',', ','), ('id', 'id'), ('}', '}'), ('F', 'f'), ('{', '{'), ('id', 'id'), ('}', '}'), ('{', '{'), ('id', 'id'), ('}', '}'), ('Step', 'step'), ('2', '2'), (':', ':'), ('Establish', 'establish'), ('Relation', 'relation'), ('E\uf0e0', 'e\uf0e0'), ('Step', 'step'), ('3', '3'), (':', ':'), ('Creation', 'creation'), ('of', 'of'), ('Table', 'table'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('Jay', 'root'), 'root'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', 'Jay'), 'flat'), (('#', 'Jay'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Jay'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Jay'), 'list'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Jay'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Jay'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Jay'), 'list'), ((':', 'Example'), 'punct'), (('Operator', 'precedence'), 'compound'), (('precedence', 'Example'), 'appos'), (('parsing', 'Jay'), 'appos'), (('Nonterminal', 'Jay'), 'appos'), (('Leading', 'E'), 'amod'), (('Trailing', 'E'), 'compound'), (('E', '#'), 'conj'), (('{', 'Jay'), 'punct'), (('+', '#'), 'conj'), ((',', 'Jay'), 'punct'), (('*', 'Jay'), 'punct'), ((',', 'Jay'), 'punct'), (('id}', 'Jay'), 'list'), (('{', 'Jay'), 'punct'), (('+', '#'), 'conj'), ((',', 'Jay'), 'punct'), (('*', 'Jay'), 'punct'), ((',', 'Jay'), 'punct'), (('id}', '#'), 'appos'), (('T', '#'), 'conj'), (('{', 'T'), 'punct'), (('*', '#'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Jay'), 'list'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('*', '#'), 'punct'), ((',', 'id'), 'punct'), (('id', 'Jay'), 'list'), (('}', 'F'), 'punct'), (('F', 'id'), 'appos'), (('{', 'id'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('{', 'id'), 'punct'), (('id', 'F'), 'appos'), (('}', 'id'), 'punct'), (('Step', 'id'), 'appos'), (('2', 'Step'), 'nummod'), ((':', 'Relation'), 'punct'), (('Establish', 'Relation'), 'compound'), (('Relation', 'Step'), 'appos'), (('E\uf0e0', 'Relation'), 'appos'), (('Step', 'Relation'), 'appos'), (('3', 'Step'), 'nummod'), ((':', 'Creation'), 'punct'), (('Creation', 'Relation'), 'appos'), (('of', 'Table'), 'case'), (('Table', 'Creation'), 'nmod'), (('+', 'id'), 'cc'), (('*', 'id'), 'punct'), (('id', 'Creation'), 'appos'), (('$', 'id'), 'appos'), (('+', '$'), 'flat'), (('.>', '$'), 'punct'), (('<.', '<.'), 'appos'), (('<.', '$'), 'appos'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', '<.'), 'appos'), (('.>', '<.'), 'punct'), (('id', '<.'), 'appos'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', 'Jay'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 157 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				        E+ T| T	 T  T*	 F| F	 F id    Step 1: Find Leading & Trailing of NT  $<. Leading (start symbol) $ <.  Trailing (start symbol) .> $      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing  Assign precedence operator between terminals String:  id+id*id	 $ id+id*id $ $ <. id+id*id$ $ <. id .> +id*id$ $ <. id .> + <.  id*id$ $ <. id .> + <.  id .> *id$ $ <. id .> + <.  id .> *<. id$ $ <. id .> + <.  id .> *<. id .> $  	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'E+', 'T|', 'T', 'T\uf0e0', 'T*', 'F|', 'F', 'F\uf0e0', 'id', 'Step', '1', ':', 'Find', 'Leading', '&', 'Trailing', 'of', 'NT', '$', '<.', 'Leading', '(', 'start', 'symbol', ')', '$', '<.', 'Trailing', '(', 'start', 'symbol', ')', '.>', '$', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Operator', 'precedence', 'parsing', 'Assign', 'precedence', 'operator', 'between', 'terminals', 'String', ':', 'id', '+id*', 'id', '$', 'id', '+', 'id*', 'id', '$', '$', '<.', 'id', '+id*id$', '$', '<.', 'id', '.>', '+', 'id*id$', '$', '<.', 'id', '.>', '+', '<.', 'id', '*', 'id', '$', '$', '<.', 'id', '.>', '+', '<.', 'id', '.>', '*', 'id$', '$', '<.', 'id', '.>', '+', '<.', 'id', '.>', '*<.', 'id', '$', '$', '<.', 'id', '.>', '+', '<.', 'id', '.>', '*<.', 'id', '.>', '$', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('E+', 'PROPN'), ('T|', 'PROPN'), ('T', 'PROPN'), ('T\uf0e0', 'PROPN'), ('T*', 'NOUN'), ('F|', 'NOUN'), ('F', 'NOUN'), ('F\uf0e0', 'NOUN'), ('id', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Find', 'VERB'), ('Leading', 'VERB'), ('&', 'CCONJ'), ('Trailing', 'VERB'), ('of', 'ADP'), ('NT', 'ADV'), ('$', 'SYM'), ('<.', 'NUM'), ('Leading', 'VERB'), ('(', 'PUNCT'), ('start', 'NOUN'), ('symbol', 'NOUN'), (')', 'PUNCT'), ('$', 'SYM'), ('<.', 'NUM'), ('Trailing', 'NOUN'), ('(', 'PUNCT'), ('start', 'NOUN'), ('symbol', 'NOUN'), (')', 'PUNCT'), ('.>', 'PUNCT'), ('$', 'SYM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('Assign', 'NOUN'), ('precedence', 'NOUN'), ('operator', 'NOUN'), ('between', 'ADP'), ('terminals', 'NOUN'), ('String', 'NOUN'), (':', 'PUNCT'), ('id', 'NOUN'), ('+id*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('id', 'NOUN'), ('+', 'SYM'), ('id*', 'NUM'), ('id', 'NOUN'), ('$', 'SYM'), ('$', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('+id*id$', 'PUNCT'), ('$', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('+', 'SYM'), ('id*id$', 'NOUN'), ('$', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('+', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('$', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('+', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('id$', 'PUNCT'), ('$', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('+', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('*<.', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('$', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('+', 'SYM'), ('<.', 'NUM'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('*<.', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('$', 'SYM'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('+', 'SYM'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'CD'), ('E+', 'NNP'), ('T|', 'NNP'), ('T', 'NNP'), ('T\uf0e0', 'NNP'), ('T*', 'NN'), ('F|', 'NN'), ('F', 'NN'), ('F\uf0e0', 'NN'), ('id', 'NN'), ('Step', 'NN'), ('1', 'CD'), (':', ':'), ('Find', 'VB'), ('Leading', 'VBG'), ('&', 'CC'), ('Trailing', 'VBG'), ('of', 'IN'), ('NT', 'RB'), ('$', '$'), ('<.', 'CD'), ('Leading', 'VBG'), ('(', '-LRB-'), ('start', 'NN'), ('symbol', 'NN'), (')', '-RRB-'), ('$', '$'), ('<.', 'CD'), ('Trailing', 'NN'), ('(', '-LRB-'), ('start', 'NN'), ('symbol', 'NN'), (')', '-RRB-'), ('.>', ','), ('$', '$'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('Assign', 'NN'), ('precedence', 'NN'), ('operator', 'NN'), ('between', 'IN'), ('terminals', 'NNS'), ('String', 'NN'), (':', ':'), ('id', 'NN'), ('+id*', 'NFP'), ('id', 'NN'), ('$', '$'), ('id', 'NN'), ('+', 'SYM'), ('id*', 'CD'), ('id', 'NN'), ('$', '$'), ('$', '$'), ('<.', 'CD'), ('id', 'NN'), ('+id*id$', 'NFP'), ('$', '$'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('+', 'SYM'), ('id*id$', 'NNS'), ('$', '$'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('+', 'SYM'), ('<.', 'CD'), ('id', 'NN'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('$', '$'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('+', 'SYM'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('*', 'NFP'), ('id$', '-LRB-'), ('$', '$'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('+', 'SYM'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('*<.', 'NFP'), ('id', 'NN'), ('$', '$'), ('$', '$'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('+', 'SYM'), ('<.', 'CD'), ('id', 'NN'), ('.>', ','), ('*<.', 'NFP'), ('id', 'NN'), ('.>', ','), ('$', '$'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('+', 'SYM'), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', ','), ('.>', ','), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('E+', 'E+'), ('T|', 'T|'), ('T', 'T'), ('T\uf0e0', 'T\uf0e0'), ('T*', 't*'), ('F|', 'F|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('Step', 'step'), ('1', '1'), (':', ':'), ('Find', 'find'), ('Leading', 'lead'), ('&', '&'), ('Trailing', 'trail'), ('of', 'of'), ('NT', 'not'), ('$', '$'), ('<.', '<.'), ('Leading', 'lead'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('$', '$'), ('<.', '<.'), ('Trailing', 'trailing'), ('(', '('), ('start', 'start'), ('symbol', 'symbol'), (')', ')'), ('.>', '.>'), ('$', '$'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('Assign', 'assign'), ('precedence', 'precedence'), ('operator', 'operator'), ('between', 'between'), ('terminals', 'terminal'), ('String', 'string'), (':', ':'), ('id', 'id'), ('+id*', '+id*'), ('id', 'id'), ('$', '$'), ('id', 'id'), ('+', '+'), ('id*', 'id*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<.', '<.'), ('id', 'id'), ('+id*id$', '+id*id'), ('$', '$'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('+', '+'), ('id*id$', 'ido'), ('$', '$'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('+', '+'), ('<.', '<.'), ('id', 'id'), ('*', '*'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('+', '+'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('*', '*'), ('id$', 'id$'), ('$', '$'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('+', '+'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('*<.', '*<.'), ('id', 'id'), ('$', '$'), ('$', '$'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('+', '+'), ('<.', '<.'), ('id', 'id'), ('.>', '.>'), ('*<.', '*<.'), ('id', 'id'), ('.>', '.>'), ('$', '$'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('E+', '$'), 'appos'), (('T|', 'T'), 'compound'), (('T', 'T\uf0e0'), 'compound'), (('T\uf0e0', 'T*'), 'compound'), (('T*', 'F'), 'compound'), (('F|', 'F'), 'compound'), (('F', 'id'), 'compound'), (('F\uf0e0', 'id'), 'compound'), (('id', 'Step'), 'compound'), (('Step', '$'), 'appos'), (('1', 'Step'), 'nummod'), ((':', 'Find'), 'punct'), (('Find', '$'), 'parataxis'), (('Leading', 'Find'), 'xcomp'), (('&', 'Trailing'), 'cc'), (('Trailing', 'Leading'), 'conj'), (('of', '$'), 'case'), (('NT', '$'), 'advmod'), (('$', 'Leading'), 'obl'), (('<.', '$'), 'nummod'), (('Leading', '$'), 'acl'), (('(', 'symbol'), 'punct'), (('start', 'symbol'), 'compound'), (('symbol', '$'), 'appos'), ((')', 'symbol'), 'punct'), (('$', '$'), 'conj'), (('<.', 'Trailing'), 'compound'), (('Trailing', '$'), 'appos'), (('(', 'symbol'), 'punct'), (('start', 'symbol'), 'compound'), (('symbol', '$'), 'appos'), ((')', 'symbol'), 'punct'), (('.>', '$'), 'punct'), (('$', '$'), 'conj'), (('Prof.', '$'), 'compound'), (('Jay', '$'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'conj'), (('‹#›', '$'), 'conj'), (('Prof.', '$'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '$'), 'parataxis'), ((':', 'Example'), 'punct'), (('Operator', 'precedence'), 'compound'), (('precedence', 'Assign'), 'compound'), (('parsing', 'Assign'), 'compound'), (('Assign', 'operator'), 'compound'), (('precedence', 'operator'), 'compound'), (('operator', '$'), 'parataxis'), (('between', 'String'), 'case'), (('terminals', 'String'), 'compound'), (('String', 'operator'), 'nmod'), ((':', '$'), 'punct'), (('id', 'String'), 'appos'), (('+id*', '$'), 'punct'), (('id', '$'), 'conj'), (('$', '$'), 'appos'), (('id', '$'), 'compound'), (('+', 'id'), 'cc'), (('id*', 'id'), 'nummod'), (('id', '$'), 'appos'), (('$', 'id'), 'compound'), (('$', '$'), 'compound'), (('<.', 'id'), 'nummod'), (('id', '$'), 'appos'), (('+id*id$', '$'), 'punct'), (('$', 'id'), 'compound'), (('<.', '$'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('+', '$'), 'cc'), (('id*id$', '$'), 'compound'), (('$', 'id'), 'compound'), (('<.', '$'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('+', 'id'), 'cc'), (('<.', 'id'), 'nummod'), (('id', '$'), 'conj'), (('*', '$'), 'punct'), (('id', 'id'), 'compound'), (('$', 'id'), 'appos'), (('$', '$'), 'compound'), (('<.', '$'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('+', 'id'), 'cc'), (('<.', 'id'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('*', '$'), 'punct'), (('id$', '$'), 'punct'), (('$', 'id'), 'appos'), (('<.', '$'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('+', 'id'), 'cc'), (('<.', 'id'), 'nummod'), (('id', 'id'), 'appos'), (('.>', 'id'), 'punct'), (('*<.', 'id'), 'punct'), (('id', 'id'), 'appos'), (('$', 'id'), 'appos'), (('$', '$'), 'compound'), (('<.', '$'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('+', 'id'), 'cc'), (('<.', 'id'), 'nummod'), (('id', '$'), 'appos'), (('.>', 'id'), 'punct'), (('*<.', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('.>', 'id'), 'punct'), (('$', 'id'), 'appos'), (('+', '$'), 'nummod'), (('*', 'id'), 'punct'), (('id', '$'), 'appos'), (('$', 'id'), 'appos'), (('+', '$'), 'nummod'), (('.>', '$'), 'punct'), (('<.', '<.'), 'appos'), (('<.', 'id'), 'appos'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', 'id'), 'compound'), (('.>', '<.'), 'punct'), (('id', '$'), 'parataxis'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 158 ===========================

 $	<.	<.	<.	   Step 4: Parse the string using precedence table     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: Operator precedence parsing 	$ <. Id .> + <. Id .> * <. Id .> 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'Step', '4', ':', 'Parse', 'the', 'string', 'using', 'precedence', 'table', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'Operator', 'precedence', 'parsing', '$', '<.', 'Id', '.>', '+', '<.', 'Id', '.>', '*', '<.', 'Id', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('Step', 'NOUN'), ('4', 'NUM'), (':', 'PUNCT'), ('Parse', 'VERB'), ('the', 'DET'), ('string', 'NOUN'), ('using', 'VERB'), ('precedence', 'NOUN'), ('table', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('parsing', 'NOUN'), ('$', 'SYM'), ('<.', 'NUM'), ('Id', 'NOUN'), ('.>', 'PUNCT'), ('+', 'SYM'), ('<.', 'NUM'), ('Id', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('<.', 'NOUN'), ('Id', 'NOUN'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'CD'), ('Step', 'NN'), ('4', 'CD'), (':', ':'), ('Parse', 'VB'), ('the', 'DT'), ('string', 'NN'), ('using', 'VBG'), ('precedence', 'NN'), ('table', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('Operator', 'NN'), ('precedence', 'NN'), ('parsing', 'NN'), ('$', '$'), ('<.', 'CD'), ('Id', 'NN'), ('.>', ','), ('+', 'SYM'), ('<.', 'CD'), ('Id', 'NN'), ('.>', ','), ('*', 'NFP'), ('<.', 'NN'), ('Id', 'NN'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'parse'), ('the', 'the'), ('string', 'string'), ('using', 'use'), ('precedence', 'precedence'), ('table', 'table'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('parsing', 'parsing'), ('$', '$'), ('<.', '<.'), ('Id', 'id'), ('.>', '.>'), ('+', '+'), ('<.', '<.'), ('Id', 'id'), ('.>', '.>'), ('*', '*'), ('<.', '<.'), ('Id', 'id'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '<.'), 'compound'), (('<.', 'Step'), 'nummod'), (('Step', '$'), 'appos'), (('4', 'Step'), 'nummod'), ((':', '$'), 'punct'), (('Parse', '$'), 'parataxis'), (('the', 'string'), 'det'), (('string', 'Parse'), 'obj'), (('using', 'string'), 'acl'), (('precedence', 'table'), 'compound'), (('table', 'using'), 'obj'), (('Prof.', 'table'), 'appos'), (('Jay', 'table'), 'appos'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'table'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'parataxis'), (('(', 'I'), 'punct'), (('I', 'Example'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', '$'), 'parataxis'), ((':', 'Example'), 'punct'), (('Operator', 'precedence'), 'compound'), (('precedence', 'Example'), 'appos'), (('parsing', 'precedence'), 'compound'), (('$', 'precedence'), 'appos'), (('<.', '$'), 'nummod'), (('Id', 'precedence'), 'appos'), (('.>', 'Id'), 'punct'), (('+', 'Id'), 'cc'), (('<.', 'Id'), 'nummod'), (('Id', '$'), 'parataxis'), (('.>', 'Id'), 'punct'), (('*', 'Id'), 'punct'), (('<.', 'Id'), 'compound'), (('Id', '$'), 'parataxis'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('4', 'CARDINAL'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('#2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 159 ===========================

 $	Handle id is obtained between <. and .> 

Tokens are: 
>> ['$', 'Handle', 'id', 'is', 'obtained', 'between', '<.', 'and', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('Handle', 'NOUN'), ('id', 'NOUN'), ('is', 'AUX'), ('obtained', 'VERB'), ('between', 'ADP'), ('<.', 'NOUN'), ('and', 'CCONJ'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('Handle', 'NN'), ('id', 'NN'), ('is', 'VBZ'), ('obtained', 'VBN'), ('between', 'IN'), ('<.', 'NN'), ('and', 'CC'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('Handle', 'handle'), ('id', 'id'), ('is', 'be'), ('obtained', 'obtain'), ('between', 'between'), ('<.', '<.'), ('and', 'and'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'id'), 'compound'), (('Handle', '$'), 'flat'), (('id', 'obtained'), 'nsubj:pass'), (('is', 'obtained'), 'aux:pass'), (('obtained', 'root'), 'root'), (('between', '<.'), 'case'), (('<.', 'obtained'), 'obl'), (('and', '<.'), 'cc'), (('.>', 'obtained'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 160 ===========================

 Reduce this by Fid  	$ F + <. 

Tokens are: 
>> ['Reduce', 'this', 'by', 'F\uf0e0id', '$', 'F', '+', '<.'] 

 UPOS tags are: 
>> [('Reduce', 'VERB'), ('this', 'PRON'), ('by', 'ADP'), ('F\uf0e0id', 'PROPN'), ('$', 'SYM'), ('F', 'NOUN'), ('+', 'SYM'), ('<.', 'NOUN')] 

 XPOS tags are: 
>> [('Reduce', 'VB'), ('this', 'DT'), ('by', 'IN'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NN'), ('+', 'SYM'), ('<.', 'NN')] 

 Lemmas are: 
>> [('Reduce', 'reduce'), ('this', 'this'), ('by', 'by'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('<.', '<.')] 

 Dependency tags are: 
>> [(('Reduce', 'root'), 'root'), (('this', 'Reduce'), 'obj'), (('by', '$'), 'case'), (('F\uf0e0id', '$'), 'compound'), (('$', 'Reduce'), 'obl'), (('F', '$'), 'compound'), (('+', '<.'), 'cc'), (('<.', '$'), 'appos')]

 Named Entities are: 
>> []

========================== Sentence 161 ===========================

 Id .> * <. Id .> 

Tokens are: 
>> ['Id', '.>', '*', '<.', 'Id', '.>'] 

 UPOS tags are: 
>> [('Id', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('<.', 'NOUN'), ('Id', 'NOUN'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('Id', 'NN'), ('.>', ','), ('*', 'NFP'), ('<.', 'NN'), ('Id', 'NN'), ('.>', '.')] 

 Lemmas are: 
>> [('Id', 'id'), ('.>', '.>'), ('*', '*'), ('<.', '<.'), ('Id', 'id'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('Id', 'root'), 'root'), (('.>', 'Id'), 'punct'), (('*', 'Id'), 'punct'), (('<.', 'Id'), 'compound'), (('Id', 'Id'), 'appos'), (('.>', 'Id'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 162 ===========================

 $	Handle id is obtained between <. and .> 

Tokens are: 
>> ['$', 'Handle', 'id', 'is', 'obtained', 'between', '<.', 'and', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('Handle', 'NOUN'), ('id', 'NOUN'), ('is', 'AUX'), ('obtained', 'VERB'), ('between', 'ADP'), ('<.', 'NOUN'), ('and', 'CCONJ'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('Handle', 'NN'), ('id', 'NN'), ('is', 'VBZ'), ('obtained', 'VBN'), ('between', 'IN'), ('<.', 'NN'), ('and', 'CC'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('Handle', 'handle'), ('id', 'id'), ('is', 'be'), ('obtained', 'obtain'), ('between', 'between'), ('<.', '<.'), ('and', 'and'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'id'), 'compound'), (('Handle', '$'), 'flat'), (('id', 'obtained'), 'nsubj:pass'), (('is', 'obtained'), 'aux:pass'), (('obtained', 'root'), 'root'), (('between', '<.'), 'case'), (('<.', 'obtained'), 'obl'), (('and', '<.'), 'cc'), (('.>', 'obtained'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 163 ===========================

 Reduce this by Fid  	$ F + F * <. Id .> 

Tokens are: 
>> ['Reduce', 'this', 'by', 'F\uf0e0id', '$', 'F', '+', 'F', '*', '<.', 'Id', '.>'] 

 UPOS tags are: 
>> [('Reduce', 'VERB'), ('this', 'PRON'), ('by', 'ADP'), ('F\uf0e0id', 'PROPN'), ('$', 'SYM'), ('F', 'NOUN'), ('+', 'SYM'), ('F', 'NOUN'), ('*', 'PUNCT'), ('<.', 'NOUN'), ('Id', 'NOUN'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('Reduce', 'VB'), ('this', 'DT'), ('by', 'IN'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NN'), ('+', 'SYM'), ('F', 'NN'), ('*', 'NFP'), ('<.', 'NN'), ('Id', 'NN'), ('.>', '.')] 

 Lemmas are: 
>> [('Reduce', 'reduce'), ('this', 'this'), ('by', 'by'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('F', 'f'), ('*', '*'), ('<.', '<.'), ('Id', 'id'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('Reduce', 'root'), 'root'), (('this', 'Reduce'), 'obj'), (('by', '$'), 'case'), (('F\uf0e0id', '$'), 'compound'), (('$', 'Reduce'), 'obl'), (('F', '$'), 'compound'), (('+', 'F'), 'cc'), (('F', '$'), 'conj'), (('*', 'Id'), 'punct'), (('<.', 'Id'), 'compound'), (('Id', 'Reduce'), 'obl'), (('.>', 'Reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 164 ===========================

 $	Handle id is obtained between <. and .> 

Tokens are: 
>> ['$', 'Handle', 'id', 'is', 'obtained', 'between', '<.', 'and', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('Handle', 'NOUN'), ('id', 'NOUN'), ('is', 'AUX'), ('obtained', 'VERB'), ('between', 'ADP'), ('<.', 'NOUN'), ('and', 'CCONJ'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('Handle', 'NN'), ('id', 'NN'), ('is', 'VBZ'), ('obtained', 'VBN'), ('between', 'IN'), ('<.', 'NN'), ('and', 'CC'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('Handle', 'handle'), ('id', 'id'), ('is', 'be'), ('obtained', 'obtain'), ('between', 'between'), ('<.', '<.'), ('and', 'and'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'id'), 'compound'), (('Handle', '$'), 'flat'), (('id', 'obtained'), 'nsubj:pass'), (('is', 'obtained'), 'aux:pass'), (('obtained', 'root'), 'root'), (('between', '<.'), 'case'), (('<.', 'obtained'), 'obl'), (('and', '<.'), 'cc'), (('.>', 'obtained'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 165 ===========================

 Reduce this by Fid  	$ F + F * F $	Perform appropriate reductions of all nonterminals. 

Tokens are: 
>> ['Reduce', 'this', 'by', 'F\uf0e0id', '$', 'F', '+', 'F', '*', 'F', '$', 'Perform', 'appropriate', 'reductions', 'of', 'all', 'nonterminals', '.'] 

 UPOS tags are: 
>> [('Reduce', 'VERB'), ('this', 'PRON'), ('by', 'ADP'), ('F\uf0e0id', 'PROPN'), ('$', 'SYM'), ('F', 'NOUN'), ('+', 'SYM'), ('F', 'NOUN'), ('*', 'PUNCT'), ('F', 'PROPN'), ('$', 'SYM'), ('Perform', 'VERB'), ('appropriate', 'ADJ'), ('reductions', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('nonterminals', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Reduce', 'VB'), ('this', 'DT'), ('by', 'IN'), ('F\uf0e0id', 'NNP'), ('$', '$'), ('F', 'NN'), ('+', 'SYM'), ('F', 'NN'), ('*', 'NFP'), ('F', 'NNP'), ('$', '$'), ('Perform', 'VB'), ('appropriate', 'JJ'), ('reductions', 'NNS'), ('of', 'IN'), ('all', 'DT'), ('nonterminals', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Reduce', 'reduce'), ('this', 'this'), ('by', 'by'), ('F\uf0e0id', 'F\uf0e0id'), ('$', '$'), ('F', 'f'), ('+', '+'), ('F', 'f'), ('*', '*'), ('F', 'F'), ('$', '$'), ('Perform', 'perform'), ('appropriate', 'appropriate'), ('reductions', 'reduction'), ('of', 'of'), ('all', 'all'), ('nonterminals', 'nonterminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Reduce', 'root'), 'root'), (('this', 'Reduce'), 'obj'), (('by', '$'), 'case'), (('F\uf0e0id', '$'), 'compound'), (('$', 'Reduce'), 'obl'), (('F', '$'), 'compound'), (('+', 'F'), 'cc'), (('F', '$'), 'appos'), (('*', '$'), 'punct'), (('F', '$'), 'compound'), (('$', 'Perform'), 'nsubj'), (('Perform', 'Reduce'), 'parataxis'), (('appropriate', 'reductions'), 'amod'), (('reductions', 'Perform'), 'obj'), (('of', 'nonterminals'), 'case'), (('all', 'nonterminals'), 'det'), (('nonterminals', 'reductions'), 'nmod'), (('.', 'Reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 166 ===========================

 $ E + T * F $	Remove all non terminals. 

Tokens are: 
>> ['$', 'E', '+', 'T', '*', 'F', '$', 'Remove', 'all', 'non', 'terminals', '.'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('E', 'NUM'), ('+', 'SYM'), ('T', 'NUM'), ('*', 'PUNCT'), ('F', 'PROPN'), ('$', 'SYM'), ('Remove', 'VERB'), ('all', 'DET'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('E', 'CD'), ('+', 'SYM'), ('T', 'CD'), ('*', 'NFP'), ('F', 'NNP'), ('$', '$'), ('Remove', 'VB'), ('all', 'DT'), ('non', 'NN'), ('terminals', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('$', '$'), ('E', 'E'), ('+', '+'), ('T', 'T'), ('*', '*'), ('F', 'F'), ('$', '$'), ('Remove', 'remove'), ('all', 'all'), ('non', 'non'), ('terminals', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('E', '$'), 'nummod'), (('+', 'T'), 'case'), (('T', '$'), 'nummod'), (('*', '$'), 'punct'), (('F', '$'), 'compound'), (('$', '$'), 'parataxis'), (('Remove', '$'), 'parataxis'), (('all', 'terminals'), 'det'), (('non', 'terminals'), 'compound'), (('terminals', 'Remove'), 'obj'), (('.', '$'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 167 ===========================

 $  +  *  $	Place relation between  operators  	$ <. + <. * >$ 

Tokens are: 
>> ['$', '+', '*', '$', 'Place', 'relation', 'between', 'operators', '$', '<.', '+', '<.', '*', '>$'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('+', 'SYM'), ('*', 'PUNCT'), ('$', 'SYM'), ('Place', 'NOUN'), ('relation', 'NOUN'), ('between', 'ADP'), ('operators', 'NOUN'), ('$', 'SYM'), ('<.', 'NUM'), ('+', 'SYM'), ('<.', 'NUM'), ('*', 'PUNCT'), ('>$', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('+', 'SYM'), ('*', 'NFP'), ('$', '$'), ('Place', 'NN'), ('relation', 'NN'), ('between', 'IN'), ('operators', 'NNS'), ('$', '$'), ('<.', 'CD'), ('+', 'SYM'), ('<.', 'CD'), ('*', 'NFP'), ('>$', '.')] 

 Lemmas are: 
>> [('$', '$'), ('+', '+'), ('*', '*'), ('$', '$'), ('Place', 'place'), ('relation', 'relation'), ('between', 'between'), ('operators', 'operator'), ('$', '$'), ('<.', '<.'), ('+', '+'), ('<.', '<.'), ('*', '*'), ('>$', '>$')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('+', '$'), 'nummod'), (('*', '$'), 'punct'), (('$', 'relation'), 'compound'), (('Place', '$'), 'nummod'), (('relation', '$'), 'appos'), (('between', 'operators'), 'case'), (('operators', 'relation'), 'nmod'), (('$', 'operators'), 'appos'), (('<.', '$'), 'nummod'), (('+', '<.'), 'case'), (('<.', '$'), 'nummod'), (('*', '$'), 'punct'), (('>$', '$'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 168 ===========================

 The * operator is surrounded by <. and .>. 

Tokens are: 
>> ['The', '*', 'operator', 'is', 'surrounded', 'by', '<.', 'and', '.>.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('*', 'PUNCT'), ('operator', 'NOUN'), ('is', 'AUX'), ('surrounded', 'VERB'), ('by', 'ADP'), ('<.', 'NOUN'), ('and', 'CCONJ'), ('.>.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('*', 'NFP'), ('operator', 'NN'), ('is', 'VBZ'), ('surrounded', 'VBN'), ('by', 'IN'), ('<.', 'NN'), ('and', 'CC'), ('.>.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('*', '*'), ('operator', 'operator'), ('is', 'be'), ('surrounded', 'surround'), ('by', 'by'), ('<.', '<.'), ('and', 'and'), ('.>.', '.>.')] 

 Dependency tags are: 
>> [(('The', 'operator'), 'det'), (('*', 'operator'), 'punct'), (('operator', 'surrounded'), 'nsubj:pass'), (('is', 'surrounded'), 'aux:pass'), (('surrounded', 'root'), 'root'), (('by', '<.'), 'case'), (('<.', 'surrounded'), 'obl'), (('and', 'surrounded'), 'cc'), (('.>.', 'surrounded'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 169 ===========================

 This indicates * becomes handle so reduce by TT*F.  	$ <. + >$	+ becomes handle. 

Tokens are: 
>> ['This', 'indicates', '*', 'becomes', 'handle', 'so', 'reduce', 'by', 'T\uf0e0T*F.', '$', '<.', '+', '>$', '+', 'becomes', 'handle', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('indicates', 'VERB'), ('*', 'PUNCT'), ('becomes', 'VERB'), ('handle', 'NOUN'), ('so', 'ADV'), ('reduce', 'VERB'), ('by', 'ADP'), ('T\uf0e0T*F.', 'PROPN'), ('$', 'SYM'), ('<.', 'NUM'), ('+', 'SYM'), ('>$', 'SYM'), ('+', 'SYM'), ('becomes', 'VERB'), ('handle', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('indicates', 'VBZ'), ('*', 'NFP'), ('becomes', 'VBZ'), ('handle', 'NN'), ('so', 'RB'), ('reduce', 'VB'), ('by', 'IN'), ('T\uf0e0T*F.', 'NNP'), ('$', '$'), ('<.', 'CD'), ('+', 'SYM'), ('>$', 'SYM'), ('+', 'SYM'), ('becomes', 'VBZ'), ('handle', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('indicates', 'indicate'), ('*', '*'), ('becomes', 'become'), ('handle', 'handle'), ('so', 'so'), ('reduce', 'reduce'), ('by', 'by'), ('T\uf0e0T*F.', 'T\uf0e0T*F.'), ('$', '$'), ('<.', '<.'), ('+', '+'), ('>$', '>$'), ('+', '+'), ('becomes', 'become'), ('handle', 'handle'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'indicates'), 'nsubj'), (('indicates', 'becomes'), 'parataxis'), (('*', 'indicates'), 'punct'), (('becomes', 'root'), 'root'), (('handle', 'becomes'), 'xcomp'), (('so', 'reduce'), 'advmod'), (('reduce', 'becomes'), 'parataxis'), (('by', 'T\uf0e0T*F.'), 'case'), (('T\uf0e0T*F.', 'reduce'), 'obl'), (('$', 'reduce'), 'obl'), (('<.', '$'), 'nummod'), (('+', '>$'), 'cc'), (('>$', '$'), 'conj'), (('+', 'becomes'), 'cc'), (('becomes', 'reduce'), 'conj'), (('handle', 'becomes'), 'xcomp'), (('.', 'becomes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 170 ===========================

 Hence reduce by EE+T.    	$  $	Parsing Done           Step 4: Parse the string using precedence table  Scan the input string until first .> is encountered. 

Tokens are: 
>> ['Hence', 'reduce', 'by', 'E\uf0e0E+T.', '$', '$', 'Parsing', 'Done', 'Step', '4', ':', 'Parse', 'the', 'string', 'using', 'precedence', 'table', 'Scan', 'the', 'input', 'string', 'until', 'first', '.>', 'is', 'encountered', '.'] 

 UPOS tags are: 
>> [('Hence', 'ADV'), ('reduce', 'VERB'), ('by', 'ADP'), ('E\uf0e0E+T.', 'PROPN'), ('$', 'SYM'), ('$', 'SYM'), ('Parsing', 'NOUN'), ('Done', 'VERB'), ('Step', 'NOUN'), ('4', 'NUM'), (':', 'PUNCT'), ('Parse', 'VERB'), ('the', 'DET'), ('string', 'NOUN'), ('using', 'VERB'), ('precedence', 'NOUN'), ('table', 'NOUN'), ('Scan', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('string', 'NOUN'), ('until', 'ADP'), ('first', 'ADV'), ('.>', 'PUNCT'), ('is', 'AUX'), ('encountered', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Hence', 'RB'), ('reduce', 'VB'), ('by', 'IN'), ('E\uf0e0E+T.', 'NNP'), ('$', '$'), ('$', '$'), ('Parsing', 'NN'), ('Done', 'VBN'), ('Step', 'NN'), ('4', 'CD'), (':', ':'), ('Parse', 'VB'), ('the', 'DT'), ('string', 'NN'), ('using', 'VBG'), ('precedence', 'NN'), ('table', 'NN'), ('Scan', 'VB'), ('the', 'DT'), ('input', 'NN'), ('string', 'NN'), ('until', 'IN'), ('first', 'RB'), ('.>', ','), ('is', 'VBZ'), ('encountered', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Hence', 'hence'), ('reduce', 'reduce'), ('by', 'by'), ('E\uf0e0E+T.', 'E\uf0e0E+T.'), ('$', '$'), ('$', '$'), ('Parsing', 'parsing'), ('Done', 'do'), ('Step', 'step'), ('4', '4'), (':', ':'), ('Parse', 'parse'), ('the', 'the'), ('string', 'string'), ('using', 'use'), ('precedence', 'precedence'), ('table', 'table'), ('Scan', 'scan'), ('the', 'the'), ('input', 'input'), ('string', 'string'), ('until', 'until'), ('first', 'first'), ('.>', '.>'), ('is', 'be'), ('encountered', 'encounter'), ('.', '.')] 

 Dependency tags are: 
>> [(('Hence', 'reduce'), 'advmod'), (('reduce', 'root'), 'root'), (('by', '$'), 'case'), (('E\uf0e0E+T.', '$'), 'compound'), (('$', 'reduce'), 'obl'), (('$', '$'), 'compound'), (('Parsing', '$'), 'nummod'), (('Done', '$'), 'acl'), (('Step', 'Done'), 'xcomp'), (('4', 'Step'), 'nummod'), ((':', 'Parse'), 'punct'), (('Parse', 'reduce'), 'parataxis'), (('the', 'string'), 'det'), (('string', 'Parse'), 'obj'), (('using', 'string'), 'acl'), (('precedence', 'table'), 'compound'), (('table', 'using'), 'obj'), (('Scan', 'Parse'), 'parataxis'), (('the', 'string'), 'det'), (('input', 'string'), 'compound'), (('string', 'Scan'), 'obj'), (('until', 'first'), 'case'), (('first', 'Scan'), 'obl'), (('.>', 'encountered'), 'punct'), (('is', 'encountered'), 'aux:pass'), (('encountered', 'Scan'), 'advcl'), (('.', 'reduce'), 'punct')]

 Named Entities are: 
>> [('4', 'CARDINAL'), ('first', 'ORDINAL')]

========================== Sentence 171 ===========================

 Scan backward until <. is encountered. 

Tokens are: 
>> ['Scan', 'backward', 'until', '<.', 'is', 'encountered', '.'] 

 UPOS tags are: 
>> [('Scan', 'VERB'), ('backward', 'ADV'), ('until', 'SCONJ'), ('<.', 'PRON'), ('is', 'AUX'), ('encountered', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Scan', 'VB'), ('backward', 'RB'), ('until', 'IN'), ('<.', 'PRP'), ('is', 'VBZ'), ('encountered', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Scan', 'scan'), ('backward', 'backward'), ('until', 'until'), ('<.', '<.'), ('is', 'be'), ('encountered', 'encounter'), ('.', '.')] 

 Dependency tags are: 
>> [(('Scan', 'root'), 'root'), (('backward', 'Scan'), 'advmod'), (('until', 'encountered'), 'mark'), (('<.', 'encountered'), 'nsubj:pass'), (('is', 'encountered'), 'aux:pass'), (('encountered', 'Scan'), 'advcl'), (('.', 'Scan'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 172 ===========================

 The handle is string between <. and  .>    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function Algorithm for constructing precedence functions Create functions  and  for each  that is terminal or . 

Tokens are: 
>> ['The', 'handle', 'is', 'string', 'between', '<.', 'and', '.>', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'Algorithm', 'for', 'constructing', 'precedence', 'functions', 'Create', 'functions', 'and', 'for', 'each', 'that', 'is', 'terminal', 'or', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('handle', 'NOUN'), ('is', 'AUX'), ('string', 'NOUN'), ('between', 'ADP'), ('<.', 'PROPN'), ('and', 'CCONJ'), ('.>', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'PROPN'), ('‹#›', 'PROPN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'PROPN'), ('Operator', 'PROPN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('Algorithm', 'NOUN'), ('for', 'SCONJ'), ('constructing', 'VERB'), ('precedence', 'NOUN'), ('functions', 'NOUN'), ('Create', 'VERB'), ('functions', 'NOUN'), ('and', 'CCONJ'), ('for', 'ADP'), ('each', 'DET'), ('that', 'PRON'), ('is', 'AUX'), ('terminal', 'ADJ'), ('or', 'CCONJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('handle', 'NN'), ('is', 'VBZ'), ('string', 'NN'), ('between', 'IN'), ('<.', 'NNP'), ('and', 'CC'), ('.>', ','), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NNP'), ('‹#›', 'NNP'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NNP'), ('Operator', 'NNP'), ('precedence', 'NN'), ('function', 'NN'), ('Algorithm', 'NN'), ('for', 'IN'), ('constructing', 'VBG'), ('precedence', 'NN'), ('functions', 'NNS'), ('Create', 'VB'), ('functions', 'NNS'), ('and', 'CC'), ('for', 'IN'), ('each', 'DT'), ('that', 'WDT'), ('is', 'VBZ'), ('terminal', 'JJ'), ('or', 'CC'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('handle', 'handle'), ('is', 'be'), ('string', 'string'), ('between', 'between'), ('<.', '<.'), ('and', 'and'), ('.>', '.>'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'Probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('Algorithm', 'algorithm'), ('for', 'for'), ('constructing', 'construct'), ('precedence', 'precedence'), ('functions', 'function'), ('Create', 'create'), ('functions', 'function'), ('and', 'and'), ('for', 'for'), ('each', 'each'), ('that', 'that'), ('is', 'be'), ('terminal', 'terminal'), ('or', 'or'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'handle'), 'det'), (('handle', 'string'), 'nsubj'), (('is', 'string'), 'cop'), (('string', 'root'), 'root'), (('between', '<.'), 'case'), (('<.', 'string'), 'nmod'), (('and', 'Prof.'), 'cc'), (('.>', 'Prof.'), 'punct'), (('Prof.', '<.'), 'conj'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', 'Prof.'), 'flat'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'string'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'string'), 'punct'), (('Basic', '‹#›'), 'amod'), (('Probability', '‹#›'), 'compound'), (('‹#›', 'string'), 'conj'), (('Prof.', 'string'), 'conj'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', 'string'), 'conj'), (('#', 'string'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'string'), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'Algorithm'), 'compound'), (('precedence', 'Algorithm'), 'compound'), (('function', 'Algorithm'), 'compound'), (('Algorithm', 'string'), 'parataxis'), (('for', 'constructing'), 'mark'), (('constructing', 'Algorithm'), 'acl'), (('precedence', 'functions'), 'compound'), (('functions', 'constructing'), 'obj'), (('Create', 'constructing'), 'xcomp'), (('functions', 'Create'), 'obj'), (('and', 'each'), 'cc'), (('for', 'each'), 'case'), (('each', 'functions'), 'conj'), (('that', 'terminal'), 'nsubj'), (('is', 'terminal'), 'cop'), (('terminal', 'each'), 'acl:relcl'), (('or', 'terminal'), 'cc'), (('.', 'string'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 173 ===========================

 Partition the symbols in as many as groups possible, in such a way that  and  are in the same group if . 

Tokens are: 
>> ['Partition', 'the', 'symbols', 'in', 'as', 'many', 'as', 'groups', 'possible', ',', 'in', 'such', 'a', 'way', 'that', 'and', 'are', 'in', 'the', 'same', 'group', 'if', '.'] 

 UPOS tags are: 
>> [('Partition', 'VERB'), ('the', 'DET'), ('symbols', 'NOUN'), ('in', 'ADP'), ('as', 'ADV'), ('many', 'ADJ'), ('as', 'ADP'), ('groups', 'NOUN'), ('possible', 'ADJ'), (',', 'PUNCT'), ('in', 'ADP'), ('such', 'DET'), ('a', 'DET'), ('way', 'NOUN'), ('that', 'PRON'), ('and', 'CCONJ'), ('are', 'AUX'), ('in', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('group', 'NOUN'), ('if', 'SCONJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Partition', 'VB'), ('the', 'DT'), ('symbols', 'NNS'), ('in', 'IN'), ('as', 'RB'), ('many', 'JJ'), ('as', 'IN'), ('groups', 'NNS'), ('possible', 'JJ'), (',', ','), ('in', 'IN'), ('such', 'PDT'), ('a', 'DT'), ('way', 'NN'), ('that', 'WDT'), ('and', 'CC'), ('are', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('group', 'NN'), ('if', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('Partition', 'partition'), ('the', 'the'), ('symbols', 'symbol'), ('in', 'in'), ('as', 'as'), ('many', 'many'), ('as', 'as'), ('groups', 'group'), ('possible', 'possible'), (',', ','), ('in', 'in'), ('such', 'such'), ('a', 'a'), ('way', 'way'), ('that', 'that'), ('and', 'and'), ('are', 'be'), ('in', 'in'), ('the', 'the'), ('same', 'same'), ('group', 'group'), ('if', 'if'), ('.', '.')] 

 Dependency tags are: 
>> [(('Partition', 'root'), 'root'), (('the', 'symbols'), 'det'), (('symbols', 'Partition'), 'obj'), (('in', 'many'), 'case'), (('as', 'many'), 'advmod'), (('many', 'symbols'), 'nmod'), (('as', 'groups'), 'case'), (('groups', 'many'), 'obl'), (('possible', 'groups'), 'amod'), ((',', 'way'), 'punct'), (('in', 'way'), 'case'), (('such', 'way'), 'det:predet'), (('a', 'way'), 'det'), (('way', 'Partition'), 'obl'), (('that', 'group'), 'nsubj'), (('and', 'group'), 'cc'), (('are', 'group'), 'cop'), (('in', 'group'), 'case'), (('the', 'group'), 'det'), (('same', 'group'), 'amod'), (('group', 'way'), 'acl:relcl'), (('if', 'group'), 'mark'), (('.', 'Partition'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 174 ===========================

 Create a directed graph whose nodes are in the groups, next for each symbols do:  if , place an edge from the group of  to the group of  if , place an edge from the group of  to the group of  If the constructed graph has a cycle then no precedence functions exist. 

Tokens are: 
>> ['Create', 'a', 'directed', 'graph', 'whose', 'nodes', 'are', 'in', 'the', 'groups', ',', 'next', 'for', 'each', 'symbols', 'do', ':', 'if', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'to', 'the', 'group', 'of', 'if', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'to', 'the', 'group', 'of', 'If', 'the', 'constructed', 'graph', 'has', 'a', 'cycle', 'then', 'no', 'precedence', 'functions', 'exist', '.'] 

 UPOS tags are: 
>> [('Create', 'VERB'), ('a', 'DET'), ('directed', 'VERB'), ('graph', 'NOUN'), ('whose', 'PRON'), ('nodes', 'NOUN'), ('are', 'AUX'), ('in', 'ADP'), ('the', 'DET'), ('groups', 'NOUN'), (',', 'PUNCT'), ('next', 'ADV'), ('for', 'ADP'), ('each', 'DET'), ('symbols', 'NOUN'), ('do', 'VERB'), (':', 'PUNCT'), ('if', 'SCONJ'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('if', 'SCONJ'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('If', 'SCONJ'), ('the', 'DET'), ('constructed', 'VERB'), ('graph', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('cycle', 'NOUN'), ('then', 'ADV'), ('no', 'DET'), ('precedence', 'NOUN'), ('functions', 'NOUN'), ('exist', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Create', 'VB'), ('a', 'DT'), ('directed', 'VBN'), ('graph', 'NN'), ('whose', 'WP$'), ('nodes', 'NNS'), ('are', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('groups', 'NNS'), (',', ','), ('next', 'RB'), ('for', 'IN'), ('each', 'DT'), ('symbols', 'NNS'), ('do', 'VBP'), (':', ':'), ('if', 'IN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('if', 'IN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('If', 'IN'), ('the', 'DT'), ('constructed', 'VBN'), ('graph', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('cycle', 'NN'), ('then', 'RB'), ('no', 'DT'), ('precedence', 'NN'), ('functions', 'NNS'), ('exist', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('Create', 'create'), ('a', 'a'), ('directed', 'direct'), ('graph', 'graph'), ('whose', 'whose'), ('nodes', 'node'), ('are', 'be'), ('in', 'in'), ('the', 'the'), ('groups', 'group'), (',', ','), ('next', 'next'), ('for', 'for'), ('each', 'each'), ('symbols', 'symbol'), ('do', 'do'), (':', ':'), ('if', 'if'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('if', 'if'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('If', 'if'), ('the', 'the'), ('constructed', 'construct'), ('graph', 'graph'), ('has', 'have'), ('a', 'a'), ('cycle', 'cycle'), ('then', 'then'), ('no', 'no'), ('precedence', 'precedence'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')] 

 Dependency tags are: 
>> [(('Create', 'root'), 'root'), (('a', 'graph'), 'det'), (('directed', 'graph'), 'amod'), (('graph', 'Create'), 'obj'), (('whose', 'nodes'), 'nmod:poss'), (('nodes', 'groups'), 'nsubj'), (('are', 'groups'), 'cop'), (('in', 'groups'), 'case'), (('the', 'groups'), 'det'), (('groups', 'graph'), 'acl:relcl'), ((',', 'Create'), 'punct'), (('next', 'Create'), 'advmod'), (('for', 'symbols'), 'case'), (('each', 'symbols'), 'det'), (('symbols', 'next'), 'nmod'), (('do', 'Create'), 'parataxis'), ((':', 'Create'), 'punct'), (('if', 'place'), 'mark'), ((',', 'if'), 'punct'), (('place', 'Create'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'group'), 'case'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'if'), 'case'), (('if', 'place'), 'mark'), ((',', 'place'), 'punct'), (('place', 'place'), 'conj'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'group'), 'case'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'has'), 'mark'), (('If', 'has'), 'mark'), (('the', 'graph'), 'det'), (('constructed', 'graph'), 'amod'), (('graph', 'has'), 'nsubj'), (('has', 'exist'), 'advcl'), (('a', 'cycle'), 'det'), (('cycle', 'has'), 'obj'), (('then', 'exist'), 'advmod'), (('no', 'functions'), 'det'), (('precedence', 'functions'), 'compound'), (('functions', 'exist'), 'nsubj'), (('exist', 'Create'), 'parataxis'), (('.', 'Create'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 175 ===========================

 When there are no cycles collect the length of the longest paths from the groups of  and respectively. 

Tokens are: 
>> ['When', 'there', 'are', 'no', 'cycles', 'collect', 'the', 'length', 'of', 'the', 'longest', 'paths', 'from', 'the', 'groups', 'of', 'and', 'respectively', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('no', 'DET'), ('cycles', 'NOUN'), ('collect', 'VERB'), ('the', 'DET'), ('length', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('longest', 'ADJ'), ('paths', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('groups', 'NOUN'), ('of', 'ADP'), ('and', 'CCONJ'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('there', 'EX'), ('are', 'VBP'), ('no', 'DT'), ('cycles', 'NNS'), ('collect', 'VB'), ('the', 'DT'), ('length', 'NN'), ('of', 'IN'), ('the', 'DT'), ('longest', 'JJS'), ('paths', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('groups', 'NNS'), ('of', 'IN'), ('and', 'CC'), ('respectively', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('there', 'there'), ('are', 'be'), ('no', 'no'), ('cycles', 'cycle'), ('collect', 'collect'), ('the', 'the'), ('length', 'length'), ('of', 'of'), ('the', 'the'), ('longest', 'long'), ('paths', 'path'), ('from', 'from'), ('the', 'the'), ('groups', 'group'), ('of', 'of'), ('and', 'and'), ('respectively', 'respectively'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'collect'), 'advcl'), (('no', 'cycles'), 'det'), (('cycles', 'are'), 'nsubj'), (('collect', 'root'), 'root'), (('the', 'length'), 'det'), (('length', 'collect'), 'obj'), (('of', 'paths'), 'case'), (('the', 'paths'), 'det'), (('longest', 'paths'), 'amod'), (('paths', 'length'), 'nmod'), (('from', 'groups'), 'case'), (('the', 'groups'), 'det'), (('groups', 'paths'), 'nmod'), (('of', 'groups'), 'nmod'), (('and', 'respectively'), 'cc'), (('respectively', 'of'), 'conj'), (('.', 'collect'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 176 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function Create functions fa and ga for each a that is terminal or $. 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'Create', 'functions', 'fa', 'and', 'ga', 'for', 'each', 'a', 'that', 'is', 'terminal', 'or', '$.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'PROPN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('Create', 'VERB'), ('functions', 'NOUN'), ('fa', 'NOUN'), ('and', 'CCONJ'), ('ga', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('a', 'DET'), ('that', 'PRON'), ('is', 'AUX'), ('terminal', 'ADJ'), ('or', 'CCONJ'), ('$.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NNP'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('Create', 'VB'), ('functions', 'NNS'), ('fa', 'NN'), ('and', 'CC'), ('ga', 'NN'), ('for', 'IN'), ('each', 'DT'), ('a', 'DT'), ('that', 'WDT'), ('is', 'VBZ'), ('terminal', 'JJ'), ('or', 'CC'), ('$.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('Create', 'create'), ('functions', 'function'), ('fa', 'fa'), ('and', 'and'), ('ga', 'ga'), ('for', 'for'), ('each', 'each'), ('a', 'a'), ('that', 'that'), ('is', 'be'), ('terminal', 'terminal'), ('or', 'or'), ('$.', '$.')] 

 Dependency tags are: 
>> [(('Prof.', 'Create'), 'nsubj'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'list'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'list'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'appos'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Create'), 'nsubj'), (('Create', 'root'), 'root'), (('functions', 'fa'), 'compound'), (('fa', 'Create'), 'obj'), (('and', 'ga'), 'cc'), (('ga', 'fa'), 'conj'), (('for', 'a'), 'case'), (('each', 'a'), 'det'), (('a', 'Create'), 'obl'), (('that', 'terminal'), 'nsubj'), (('is', 'terminal'), 'cop'), (('terminal', 'a'), 'acl:relcl'), (('or', 'terminal'), 'cc'), (('$.', 'Create'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 177 ===========================

 E E+T | T 	T T*F | F	F id f+ f* fid f$ g+ g* gid g$    Prof. 

Tokens are: 
>> ['E\uf0e0', 'E+T', '|', 'T', 'T\uf0e0', 'T*F', '|', 'F', 'F\uf0e0', 'id', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.'] 

 UPOS tags are: 
>> [('E\uf0e0', 'NOUN'), ('E+T', 'NOUN'), ('|', 'PUNCT'), ('T', 'NOUN'), ('T\uf0e0', 'NOUN'), ('T*F', 'NOUN'), ('|', 'PUNCT'), ('F', 'NOUN'), ('F\uf0e0', 'NOUN'), ('id', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'PUNCT'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('E\uf0e0', 'NN'), ('E+T', 'NN'), ('|', ','), ('T', 'NN'), ('T\uf0e0', 'NN'), ('T*F', 'NN'), ('|', ','), ('F', 'NN'), ('F\uf0e0', 'NN'), ('id', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', ','), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('E\uf0e0', 'e\uf0e0'), ('E+T', 'e+t'), ('|', '|'), ('T', 'T'), ('T\uf0e0', 't\uf0e0'), ('T*F', 't*f'), ('|', '|'), ('F', 'f'), ('F\uf0e0', 'f\uf0e0'), ('id', 'id'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'prof'), ('.', '.')] 

 Dependency tags are: 
>> [(('E\uf0e0', 'E+T'), 'compound'), (('E+T', 'root'), 'root'), (('|', 'E+T'), 'punct'), (('T', 'T*F'), 'compound'), (('T\uf0e0', 'T*F'), 'compound'), (('T*F', 'E+T'), 'list'), (('|', 'E+T'), 'punct'), (('F', 'id'), 'compound'), (('F\uf0e0', 'id'), 'compound'), (('id', 'E+T'), 'list'), (('f+', 'f*'), 'compound'), (('f*', 'id'), 'nmod'), (('fid', 'E+T'), 'punct'), (('f$', 'g+'), 'compound'), (('g+', 'g*'), 'compound'), (('g*', 'Prof'), 'compound'), (('gid', 'Prof'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', 'E+T'), 'list'), (('.', 'E+T'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 178 ===========================

 Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function Partition the symbols in as many as groups possible, in such a way that fa and gb are in the same group if a = b.  f+ f* fid f$ g+ g* gid g$ 	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'Partition', 'the', 'symbols', 'in', 'as', 'many', 'as', 'groups', 'possible', ',', 'in', 'such', 'a', 'way', 'that', 'fa', 'and', 'gb', 'are', 'in', 'the', 'same', 'group', 'if', 'a', '=', 'b.', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('Partition', 'NOUN'), ('the', 'DET'), ('symbols', 'NOUN'), ('in', 'ADP'), ('as', 'ADV'), ('many', 'ADJ'), ('as', 'ADP'), ('groups', 'NOUN'), ('possible', 'ADJ'), (',', 'PUNCT'), ('in', 'ADP'), ('such', 'DET'), ('a', 'DET'), ('way', 'NOUN'), ('that', 'PRON'), ('fa', 'NOUN'), ('and', 'CCONJ'), ('gb', 'NOUN'), ('are', 'AUX'), ('in', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('group', 'NOUN'), ('if', 'SCONJ'), ('a', 'NOUN'), ('=', 'PUNCT'), ('b.', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('+', 'PUNCT'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('+', 'SYM'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('Partition', 'NN'), ('the', 'DT'), ('symbols', 'NNS'), ('in', 'IN'), ('as', 'RB'), ('many', 'JJ'), ('as', 'IN'), ('groups', 'NNS'), ('possible', 'JJ'), (',', ','), ('in', 'IN'), ('such', 'PDT'), ('a', 'DT'), ('way', 'NN'), ('that', 'WDT'), ('fa', 'NN'), ('and', 'CC'), ('gb', 'NN'), ('are', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('group', 'NN'), ('if', 'IN'), ('a', 'NN'), ('=', ','), ('b.', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('+', ','), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('+', 'SYM'), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', ','), ('.>', ','), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('Partition', 'partition'), ('the', 'the'), ('symbols', 'symbol'), ('in', 'in'), ('as', 'as'), ('many', 'many'), ('as', 'as'), ('groups', 'group'), ('possible', 'possible'), (',', ','), ('in', 'in'), ('such', 'such'), ('a', 'a'), ('way', 'way'), ('that', 'that'), ('fa', 'fa'), ('and', 'and'), ('gb', 'gb'), ('are', 'be'), ('in', 'in'), ('the', 'the'), ('same', 'same'), ('group', 'group'), ('if', 'if'), ('a', 'a'), ('=', '='), ('b.', 'bear'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('Jay', 'root'), 'root'), (('R', 'Jay'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '#'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Partition'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'Partition'), 'compound'), (('precedence', 'Partition'), 'compound'), (('function', 'Partition'), 'compound'), (('Partition', '#'), 'conj'), (('the', 'symbols'), 'det'), (('symbols', 'Partition'), 'appos'), (('in', 'many'), 'case'), (('as', 'many'), 'advmod'), (('many', 'symbols'), 'nmod'), (('as', 'groups'), 'case'), (('groups', 'symbols'), 'nmod'), (('possible', 'groups'), 'amod'), ((',', 'way'), 'punct'), (('in', 'way'), 'case'), (('such', 'way'), 'det:predet'), (('a', 'way'), 'det'), (('way', 'symbols'), 'nmod'), (('that', 'group'), 'mark'), (('fa', 'group'), 'nsubj'), (('and', 'gb'), 'cc'), (('gb', 'fa'), 'conj'), (('are', 'group'), 'cop'), (('in', 'group'), 'case'), (('the', 'group'), 'det'), (('same', 'group'), 'amod'), (('group', 'way'), 'acl:relcl'), (('if', 'a'), 'mark'), (('a', 'b.'), 'nsubj'), (('=', 'group'), 'punct'), (('b.', 'group'), 'advcl'), (('f+', 'group'), 'nsubj'), (('f*', 'b.'), 'obj'), (('fid', 'f$'), 'det'), (('f$', 'f*'), 'obj'), (('g+', 'g$'), 'case'), (('g*', 'g$'), 'case'), (('gid', 'g$'), 'compound'), (('g$', 'f$'), 'obj'), (('+', 'id'), 'punct'), (('*', 'id'), 'punct'), (('id', 'f$'), 'conj'), (('$', 'id'), 'flat'), (('+', '$'), 'flat'), (('.>', '$'), 'punct'), (('<.', '<.'), 'compound'), (('<.', '$'), 'conj'), (('.>', '<.'), 'punct'), (('*', '#'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', 'id'), 'discourse'), (('.>', 'id'), 'punct'), (('id', 'id'), 'parataxis'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', 'Jay'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 179 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				  .    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb   f+ f* fid f$ g+ g* gid g$ f+ .> g+ f+  g+ f* .> g+ f*  g+ fid .> g+ fid  g+ f$ <. g+ f$  g+ 	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', '<.', '<.', '.', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'if', 'a', '<·', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'gb', 'to', 'the', 'group', 'of', 'fa', 'if', 'a', '·>', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'fa', 'to', 'the', 'group', 'of', 'gb', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'f+', '.>', 'g+', 'f+', '\uf0e0', 'g+', 'f*', '.>', 'g+', 'f*', '\uf0e0', 'g+', 'fid', '.>', 'g+', 'fid', '\uf0e0', 'g+', 'f$', '<.', 'g+', 'f$', '\uf0df', 'g+', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('.', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('<·', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('·>', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('f+', 'NOUN'), ('.>', 'PUNCT'), ('g+', 'VERB'), ('f+', 'VERB'), ('\uf0e0', 'VERB'), ('g+', 'VERB'), ('f*', 'PRON'), ('.>', 'PUNCT'), ('g+', 'VERB'), ('f*', 'PRON'), ('\uf0e0', 'VERB'), ('g+', 'NOUN'), ('fid', 'NOUN'), ('.>', 'PUNCT'), ('g+', 'VERB'), ('fid', 'PRON'), ('\uf0e0', 'VERB'), ('g+', 'NOUN'), ('f$', 'NOUN'), ('<.', 'NOUN'), ('g+', 'NOUN'), ('f$', 'NOUN'), ('\uf0df', 'DET'), ('g+', 'NOUN'), ('+', 'PUNCT'), ('*', 'PUNCT'), ('id', 'ADP'), ('$', 'SYM'), ('+', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'LS'), ('.', '.'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('if', 'IN'), ('a', 'DT'), ('<·', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('if', 'IN'), ('a', 'DT'), ('·>', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('f+', 'NN'), ('.>', ','), ('g+', 'VB'), ('f+', 'VB'), ('\uf0e0', 'VB'), ('g+', 'VB'), ('f*', 'PRP'), ('.>', ','), ('g+', 'VB'), ('f*', 'PRP'), ('\uf0e0', 'VB'), ('g+', 'NN'), ('fid', 'NN'), ('.>', ','), ('g+', 'VB'), ('fid', 'PRP'), ('\uf0e0', 'VB'), ('g+', 'NN'), ('f$', 'NN'), ('<.', 'NN'), ('g+', 'NN'), ('f$', 'NN'), ('\uf0df', 'DT'), ('g+', 'NN'), ('+', ','), ('*', 'NFP'), ('id', 'IN'), ('$', '$'), ('+', ','), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', ','), ('.>', ','), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', '.'), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('.', '.'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('if', 'if'), ('a', 'a'), ('<·', '<·'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('if', 'if'), ('a', 'a'), ('·>', '·>'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('f+', 'f+'), ('.>', '.>'), ('g+', 'g+'), ('f+', 'f+'), ('\uf0e0', 'be'), ('g+', 'g+'), ('f*', 'f*'), ('.>', '.>'), ('g+', 'g+'), ('f*', 'f*'), ('\uf0e0', 'be'), ('g+', 'g+'), ('fid', 'fid'), ('.>', '.>'), ('g+', 'g+'), ('fid', 'fid'), ('\uf0e0', 'be'), ('g+', 'g+'), ('f$', 'fe'), ('<.', '<.'), ('g+', 'g+'), ('f$', 'fe'), ('\uf0df', '\uf0df'), ('g+', 'g+'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('.', '$'), 'punct'), (('Prof.', '$'), 'appos'), (('Jay', 'Prof.'), 'flat'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'function'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'function'), 'compound'), (('function', '$'), 'conj'), (('if', 'b'), 'mark'), (('a', 'b'), 'det'), (('<·', 'b'), 'compound'), (('b', 'place'), 'obl'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('if', 'b'), 'mark'), (('a', 'b'), 'det'), (('·>', 'b'), 'compound'), (('b', 'place'), 'advcl'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('f+', 'f*'), 'compound'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'nsubj'), (('f$', 'g+'), 'nsubj'), (('g+', 'g*'), 'nsubj'), (('g*', 'f+'), 'det'), (('gid', 'f+'), 'det'), (('g$', 'f+'), 'nsubj'), (('f+', '\uf0e0'), 'obl'), (('.>', '\uf0e0'), 'punct'), (('g+', '\uf0e0'), 'nsubj'), (('f+', '\uf0e0'), 'nsubj'), (('\uf0e0', '$'), 'parataxis'), (('g+', '\uf0e0'), 'ccomp'), (('f*', '\uf0e0'), 'punct'), (('.>', '\uf0e0'), 'punct'), (('g+', '\uf0e0'), 'mark'), (('f*', 'fid'), 'nsubj'), (('\uf0e0', 'g+'), 'cop'), (('g+', 'fid'), 'det'), (('fid', '\uf0e0'), 'parataxis'), (('.>', 'fid'), 'punct'), (('g+', 'f$'), 'mark'), (('fid', 'f$'), 'nsubj'), (('\uf0e0', 'f$'), 'cop'), (('g+', 'f$'), 'det'), (('f$', 'fid'), 'case'), (('<.', 'f$'), 'case'), (('g+', 'f$'), 'det'), (('f$', 'f$'), 'obl'), (('\uf0df', 'g+'), 'punct'), (('g+', 'f$'), 'conj'), (('+', '$'), 'punct'), (('*', '$'), 'punct'), (('id', '$'), 'punct'), (('$', 'f$'), 'conj'), (('+', '$'), 'punct'), (('.>', '$'), 'punct'), (('<.', '<.'), 'punct'), (('<.', '$'), 'conj'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', 'id'), 'discourse'), (('.>', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('<.', 'MONEY'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 180 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				  f g    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb   f+ f* fid f$ g+ g* gid g$ f+ <. g* f+  g* f* .> g* f*  g* fid .> g* fid  g* f$ <. g* f$  g* 	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'f', 'g', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'if', 'a', '<·', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'gb', 'to', 'the', 'group', 'of', 'fa', 'if', 'a', '·>', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'fa', 'to', 'the', 'group', 'of', 'gb', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'f+', '<.', 'g*', 'f+', '\uf0df', 'g*', 'f*', '.>', 'g*', 'f*', '\uf0e0', 'g*', 'fid', '.>', 'g*', 'fid', '\uf0e0', 'g*', 'f$', '<.', 'g*', 'f$', '\uf0df', 'g*', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('f', 'PROPN'), ('g', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('<·', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('·>', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'PRON'), ('f+', 'VERB'), ('<.', 'VERB'), ('g*', 'VERB'), ('f+', 'VERB'), ('\uf0df', 'VERB'), ('g*', 'VERB'), ('f*', 'PRON'), ('.>', 'PUNCT'), ('g*', 'VERB'), ('f*', 'PRON'), ('\uf0e0', 'VERB'), ('g*', 'VERB'), ('fid', 'PRON'), ('.>', 'PUNCT'), ('g*', 'VERB'), ('fid', 'PRON'), ('\uf0e0', 'VERB'), ('g*', 'NOUN'), ('f$', 'ADP'), ('<.', 'NOUN'), ('g*', 'NOUN'), ('f$', 'ADP'), ('\uf0df', 'DET'), ('g*', 'NOUN'), ('+', 'PUNCT'), ('*', 'PUNCT'), ('id', 'ADP'), ('$', 'SYM'), ('+', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'CD'), ('f', 'NNP'), ('g', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('if', 'IN'), ('a', 'DT'), ('<·', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('if', 'IN'), ('a', 'DT'), ('·>', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VBP'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'PRP'), ('f+', 'VB'), ('<.', 'VB'), ('g*', 'VB'), ('f+', 'VB'), ('\uf0df', 'VB'), ('g*', 'VB'), ('f*', 'PRP'), ('.>', ','), ('g*', 'VB'), ('f*', 'PRP'), ('\uf0e0', 'VB'), ('g*', 'VB'), ('fid', 'PRP'), ('.>', ','), ('g*', 'VB'), ('fid', 'PRP'), ('\uf0e0', 'VB'), ('g*', 'NN'), ('f$', 'IN'), ('<.', 'NN'), ('g*', 'NN'), ('f$', 'IN'), ('\uf0df', 'DT'), ('g*', 'NN'), ('+', ','), ('*', 'NFP'), ('id', 'IN'), ('$', '$'), ('+', ','), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', ','), ('.>', ','), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('f', 'for'), ('g', 'gram'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('if', 'if'), ('a', 'a'), ('<·', '<·'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('if', 'if'), ('a', 'a'), ('·>', '·>'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'g$'), ('f+', 'f+'), ('<.', '<.'), ('g*', 'g*'), ('f+', 'f+'), ('\uf0df', 'be'), ('g*', 'g*'), ('f*', 'f*'), ('.>', '.>'), ('g*', 'g*'), ('f*', 'f*'), ('\uf0e0', 'be'), ('g*', 'g*'), ('fid', 'fid'), ('.>', '.>'), ('g*', 'g*'), ('fid', 'fid'), ('\uf0e0', 'be'), ('g*', 'g*'), ('f$', 'fe'), ('<.', '<.'), ('g*', 'g*'), ('f$', 'fe'), ('\uf0df', '\uf0df'), ('g*', 'g*'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('<.', '$'), 'nummod'), (('f', 'g'), 'case'), (('g', '$'), 'nmod'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'appos'), (('‹#›', '$'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'conj'), (('(', 'I'), 'punct'), (('I', 'function'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'function'), 'compound'), (('function', '$'), 'conj'), (('if', 'place'), 'mark'), (('a', 'b'), 'det'), (('<·', 'b'), 'compound'), (('b', 'place'), 'nsubj'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('if', 'place'), 'mark'), (('a', 'b'), 'det'), (('·>', 'b'), 'compound'), (('b', 'place'), 'nsubj'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('f+', 'f*'), 'case'), (('f*', 'group'), 'nmod'), (('fid', 'f$'), 'nsubj'), (('f$', 'f*'), 'obj'), (('g+', 'gid'), 'det'), (('g*', 'gid'), 'det'), (('gid', 'f$'), 'obj'), (('g$', 'f+'), 'nsubj'), (('f+', 'gid'), 'nsubj'), (('<.', 'g*'), 'advmod'), (('g*', 'f+'), 'advmod'), (('f+', '\uf0df'), 'advmod'), (('\uf0df', 'g*'), 'aux:pass'), (('g*', '\uf0df'), 'advmod'), (('f*', '\uf0df'), 'punct'), (('.>', '\uf0df'), 'punct'), (('g*', 'g*'), 'mark'), (('f*', '\uf0e0'), 'nsubj'), (('\uf0e0', 'g*'), 'ccomp'), (('g*', 'fid'), 'det'), (('fid', '\uf0e0'), 'punct'), (('.>', '\uf0e0'), 'punct'), (('g*', '\uf0e0'), 'mark'), (('fid', 'g*'), 'nsubj'), (('\uf0e0', 'g*'), 'cop'), (('g*', 'g*'), 'ccomp'), (('f$', 'g*'), 'case'), (('<.', 'g*'), 'det'), (('g*', 'g*'), 'obl'), (('f$', 'g*'), 'case'), (('\uf0df', 'g*'), 'det'), (('g*', 'g*'), 'obl'), (('+', '$'), 'punct'), (('*', '$'), 'punct'), (('id', '$'), 'punct'), (('$', 'g*'), 'conj'), (('+', '$'), 'punct'), (('.>', '$'), 'punct'), (('<.', '<.'), 'punct'), (('<.', '$'), 'conj'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', '<.'), 'parataxis'), (('.>', '<.'), 'punct'), (('id', '<.'), 'conj'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 181 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				  f g    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb  f+ f* fid f$ g+ g* gid g$ f+ <. gid f+  gid f* <. gid f*  gid f$ <. gid f$  gid 	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'f', 'g', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'if', 'a', '<·', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'gb', 'to', 'the', 'group', 'of', 'fa', 'if', 'a', '·>', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'fa', 'to', 'the', 'group', 'of', 'gb', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'f+', '<.', 'gid', 'f+', '\uf0df', 'gid', 'f*', '<.', 'gid', 'f*', '\uf0df', 'gid', 'f$', '<.', 'gid', 'f$', '\uf0df', 'gid', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('f', 'PROPN'), ('g', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('<·', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('·>', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('f+', 'VERB'), ('<.', 'NOUN'), ('gid', 'NOUN'), ('f+', 'VERB'), ('\uf0df', 'NOUN'), ('gid', 'NOUN'), ('f*', 'PRON'), ('<.', 'NOUN'), ('gid', 'NOUN'), ('f*', 'ADP'), ('\uf0df', 'NOUN'), ('gid', 'NOUN'), ('f$', 'NOUN'), ('<.', 'NOUN'), ('gid', 'NOUN'), ('f$', 'NOUN'), ('\uf0df', 'NOUN'), ('gid', 'NOUN'), ('+', 'PUNCT'), ('*', 'PUNCT'), ('id', 'ADP'), ('$', 'SYM'), ('+', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'CD'), ('f', 'NNP'), ('g', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('if', 'IN'), ('a', 'DT'), ('<·', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('if', 'IN'), ('a', 'DT'), ('·>', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VBP'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('f+', 'VB'), ('<.', 'NN'), ('gid', 'NN'), ('f+', 'VB'), ('\uf0df', 'NN'), ('gid', 'NN'), ('f*', 'PRP'), ('<.', 'NN'), ('gid', 'NN'), ('f*', 'IN'), ('\uf0df', 'NN'), ('gid', 'NN'), ('f$', 'NN'), ('<.', 'NN'), ('gid', 'NN'), ('f$', 'NN'), ('\uf0df', 'NN'), ('gid', 'NN'), ('+', ','), ('*', 'NFP'), ('id', 'IN'), ('$', '$'), ('+', ','), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', ','), ('.>', ','), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', '.'), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('f', 'for'), ('g', 'gram'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('if', 'if'), ('a', 'a'), ('<·', '<·'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('if', 'if'), ('a', 'a'), ('·>', '·>'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('f+', 'f+'), ('<.', '<.'), ('gid', 'gid'), ('f+', 'f+'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f*', 'f*'), ('<.', '<.'), ('gid', 'gid'), ('f*', 'f*'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('f$', 'fe'), ('<.', '<.'), ('gid', 'gid'), ('f$', 'fe'), ('\uf0df', '\uf0df'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('<.', '$'), 'nummod'), (('f', 'g'), 'case'), (('g', '$'), 'nmod'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'appos'), (('‹#›', '$'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'conj'), (('(', 'I'), 'punct'), (('I', 'function'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', '$'), 'conj'), (('if', 'place'), 'mark'), (('a', 'b'), 'det'), (('<·', 'b'), 'compound'), (('b', 'place'), 'nsubj'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('if', 'b'), 'mark'), (('a', 'b'), 'det'), (('·>', 'b'), 'compound'), (('b', 'place'), 'nsubj'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('f+', 'f*'), 'compound'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'compound'), (('f$', 'g+'), 'nsubj'), (('g+', 'g$'), 'det'), (('g*', 'g$'), 'det'), (('gid', 'g$'), 'compound'), (('g$', 'gb'), 'nmod'), (('f+', 'g$'), 'det'), (('<.', 'gid'), 'det'), (('gid', 'f+'), 'obj'), (('f+', 'gid'), 'det'), (('\uf0df', 'gid'), 'det'), (('gid', 'gid'), 'obj'), (('f*', 'gid'), 'nsubj'), (('<.', 'gid'), 'det'), (('gid', 'gid'), 'nsubj'), (('f*', 'gid'), 'case'), (('\uf0df', 'gid'), 'det'), (('gid', 'gid'), 'nsubj'), (('f$', 'gid'), 'nsubj'), (('<.', 'f$'), 'det'), (('gid', 'f$'), 'nsubj'), (('f$', 'f$'), 'obj'), (('\uf0df', 'gid'), 'case'), (('gid', 'f$'), 'obj'), (('+', '$'), 'punct'), (('*', '$'), 'punct'), (('id', '$'), 'punct'), (('$', 'gid'), 'obj'), (('+', '$'), 'punct'), (('.>', '$'), 'punct'), (('<.', '<.'), 'punct'), (('<.', '$'), 'conj'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', 'id'), 'discourse'), (('.>', 'id'), 'punct'), (('id', '$'), 'parataxis'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 182 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				  f g    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function if a <· b, place an edge from the group of gb to the group of fa    if a ·> b, place an edge from the group of fa to the group of gb  f+ f* fid g+ g* gid 	 	+	*	id	$  	+	.>	<.	<.	.> 	*	.>	.>	<.	.> 	id	.>	.>	 	.> 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'f', 'g', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', 'if', 'a', '<·', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'gb', 'to', 'the', 'group', 'of', 'fa', 'if', 'a', '·>', 'b', ',', 'place', 'an', 'edge', 'from', 'the', 'group', 'of', 'fa', 'to', 'the', 'group', 'of', 'gb', 'f+', 'f*', 'fid', 'g+', 'g*', 'gid', '+', '*', 'id', '$', '+', '.>', '<.', '<.', '.>', '*', '.>', '.>', '<.', '.>', 'id', '.>', '.>', '.>'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'NUM'), ('<.', 'NUM'), ('f', 'PROPN'), ('g', 'NOUN'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('<·', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('if', 'SCONJ'), ('a', 'DET'), ('·>', 'NOUN'), ('b', 'NOUN'), (',', 'PUNCT'), ('place', 'VERB'), ('an', 'DET'), ('edge', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('gb', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('+', 'SYM'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('*', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('<.', 'NOUN'), ('.>', 'PUNCT'), ('id', 'NOUN'), ('.>', 'PUNCT'), ('.>', 'PUNCT'), ('.>', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'CD'), ('<.', 'CD'), ('f', 'NNP'), ('g', 'NN'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('if', 'IN'), ('a', 'DT'), ('<·', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('if', 'IN'), ('a', 'DT'), ('·>', 'NN'), ('b', 'NN'), (',', ','), ('place', 'VB'), ('an', 'DT'), ('edge', 'NN'), ('from', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('fa', 'NN'), ('to', 'IN'), ('the', 'DT'), ('group', 'NN'), ('of', 'IN'), ('gb', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('+', ','), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('+', 'SYM'), ('.>', ','), ('<.', 'NN'), ('<.', 'NN'), ('.>', ','), ('*', 'NFP'), ('.>', ','), ('.>', ','), ('<.', 'NN'), ('.>', ','), ('id', 'NN'), ('.>', ','), ('.>', '.'), ('.>', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('f', 'for'), ('g', 'gram'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('if', 'if'), ('a', 'a'), ('<·', '<·'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('if', 'if'), ('a', 'a'), ('·>', '·>'), ('b', 'b'), (',', ','), ('place', 'place'), ('an', 'a'), ('edge', 'edge'), ('from', 'from'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('fa', 'fa'), ('to', 'to'), ('the', 'the'), ('group', 'group'), ('of', 'of'), ('gb', 'gb'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('+', '+'), ('.>', '.>'), ('<.', '<.'), ('<.', '<.'), ('.>', '.>'), ('*', '*'), ('.>', '.>'), ('.>', '.>'), ('<.', '<.'), ('.>', '.>'), ('id', 'id'), ('.>', '.>'), ('.>', '.>'), ('.>', '.>')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '<.'), 'compound'), (('<.', '$'), 'nummod'), (('<.', '$'), 'nummod'), (('f', 'g'), 'case'), (('g', '$'), 'nmod'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', '$'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '$'), 'appos'), (('‹#›', '$'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', '$'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '$'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', '$'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '$'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', '$'), 'appos'), (('function', '$'), 'parataxis'), (('if', 'b'), 'mark'), (('a', 'b'), 'det'), (('<·', 'b'), 'compound'), (('b', 'place'), 'obl'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('if', 'b'), 'mark'), (('a', 'b'), 'det'), (('·>', 'b'), 'compound'), (('b', 'place'), 'nsubj'), ((',', 'place'), 'punct'), (('place', '$'), 'parataxis'), (('an', 'edge'), 'det'), (('edge', 'place'), 'obj'), (('from', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'edge'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'group'), 'nmod'), (('to', 'group'), 'case'), (('the', 'group'), 'det'), (('group', 'group'), 'nmod'), (('of', 'gb'), 'case'), (('gb', 'group'), 'nmod'), (('f+', 'fid'), 'compound'), (('f*', 'fid'), 'compound'), (('fid', 'gid'), 'compound'), (('g+', 'gid'), 'case'), (('g*', 'gid'), 'compound'), (('gid', 'id'), 'nmod'), (('+', 'id'), 'cc'), (('*', 'id'), 'punct'), (('id', 'gb'), 'conj'), (('$', 'id'), 'flat'), (('+', '$'), 'flat'), (('.>', '$'), 'punct'), (('<.', '<.'), 'compound'), (('<.', '$'), 'conj'), (('.>', '<.'), 'punct'), (('*', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('.>', '<.'), 'punct'), (('<.', 'id'), 'discourse'), (('.>', 'id'), 'punct'), (('id', 'id'), 'appos'), (('.>', 'id'), 'punct'), (('.>', 'id'), 'punct'), (('.>', '$'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 183 ===========================

 $	<.	<.	<.	   	 				  	 				  	 				  f+ <. g$ f+  g$ f* <. g$ f*  g$ fid <. g$ fid  g$ f g f$ g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2			  	 g				   f+ f* fid f$ g+ g* gid g$ 

Tokens are: 
>> ['$', '<.', '<.', '<.', 'f+', '<.', 'g$', 'f+', '\uf0e0', 'g$', 'f*', '<.', 'g$', 'f*', '\uf0e0', 'g$', 'fid', '<.', 'g$', 'fid', '\uf0e0', 'g$', 'f', 'g', 'f$', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', 'g', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$'] 

 UPOS tags are: 
>> [('$', 'SYM'), ('<.', 'NUM'), ('<.', 'PRON'), ('<.', 'NOUN'), ('f+', 'NOUN'), ('<.', 'NOUN'), ('g$', 'NOUN'), ('f+', 'NOUN'), ('\uf0e0', 'NOUN'), ('g$', 'PRON'), ('f*', 'PRON'), ('<.', 'NOUN'), ('g$', 'NOUN'), ('f*', 'PRON'), ('\uf0e0', 'NOUN'), ('g$', 'NOUN'), ('fid', 'NOUN'), ('<.', 'NOUN'), ('g$', 'NOUN'), ('fid', 'NOUN'), ('\uf0e0', 'NOUN'), ('g$', 'NOUN'), ('f', 'NOUN'), ('g', 'NOUN'), ('f$', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'NOUN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PUNCT'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'DET'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'NOUN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NOUN'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'PRON'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'PUNCT'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('g', 'NOUN'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'DET'), ('f$', 'DET'), ('g+', 'NOUN'), ('g*', 'DET'), ('gid', 'NOUN'), ('g$', 'PUNCT')] 

 XPOS tags are: 
>> [('$', '$'), ('<.', 'CD'), ('<.', 'PRP'), ('<.', 'NN'), ('f+', 'NN'), ('<.', 'NN'), ('g$', 'NN'), ('f+', 'NN'), ('\uf0e0', 'NN'), ('g$', 'PRP'), ('f*', 'PRP'), ('<.', 'NN'), ('g$', 'NN'), ('f*', 'PRP'), ('\uf0e0', 'NN'), ('g$', 'NN'), ('fid', 'NN'), ('<.', 'NN'), ('g$', 'NN'), ('fid', 'NN'), ('\uf0e0', 'NN'), ('g$', 'NN'), ('f', 'NN'), ('g', 'NN'), ('f$', 'NN'), ('g$', 'NN'), ('Prof', 'NN'), ('.', ','), ('Jay', 'NNP'), ('R', ','), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'DT'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NN'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'NN'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'PRP'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', ','), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('g', 'NN'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'DT'), ('f$', 'DT'), ('g+', 'NN'), ('g*', 'DT'), ('gid', 'NN'), ('g$', '.')] 

 Lemmas are: 
>> [('$', '$'), ('<.', '<.'), ('<.', '<.'), ('<.', '<.'), ('f+', 'f+'), ('<.', '<.'), ('g$', 'goot'), ('f+', 'f+'), ('\uf0e0', '\uf0e0'), ('g$', 'g$'), ('f*', 'f*'), ('<.', '<.'), ('g$', 'goot'), ('f*', 'f*'), ('\uf0e0', '\uf0e0'), ('g$', 'goot'), ('fid', 'fid'), ('<.', '<.'), ('g$', 'goot'), ('fid', 'fid'), ('\uf0e0', '\uf0e0'), ('g$', 'goot'), ('f', 'f'), ('g', 'gram'), ('f$', 'fe'), ('g$', 'goot'), ('Prof', 'prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'I'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'gram'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'i$'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'gour')] 

 Dependency tags are: 
>> [(('$', 'root'), 'root'), (('<.', '$'), 'nummod'), (('<.', '$'), 'punct'), (('<.', '$'), 'appos'), (('f+', '$'), 'nmod'), (('<.', 'g$'), 'case'), (('g$', '$'), 'nmod'), (('f+', '\uf0e0'), 'case'), (('\uf0e0', 'g$'), 'obj'), (('g$', 'g$'), 'nsubj'), (('f*', 'g$'), 'nsubj'), (('<.', 'g$'), 'advmod'), (('g$', '$'), 'parataxis'), (('f*', 'fid'), 'case'), (('\uf0e0', 'fid'), 'det'), (('g$', 'fid'), 'compound'), (('fid', 'g$'), 'obj'), (('<.', 'fid'), 'det'), (('g$', 'fid'), 'compound'), (('fid', 'fid'), 'obj'), (('\uf0e0', 'g$'), 'case'), (('g$', 'fid'), 'nmod'), (('f', 'Prof'), 'nsubj'), (('g', 'Prof'), 'nsubj'), (('f$', 'Prof'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', 'g$'), 'nmod'), (('.', 'Jay'), 'punct'), (('Jay', 'Prof'), 'nsubj'), (('R', '#'), 'punct'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Jay'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'det'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'nsubj'), (('‹#›', 'Probability'), 'obj'), (('Prof.', 'B'), 'det'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'case'), (('#', 'Probability'), 'nmod'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'compound'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'parataxis'), ((')', 'I'), 'punct'), (('‹#›', 'function'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Theory'), 'conj'), (('+', 'id'), 'punct'), (('*', 'id'), 'punct'), (('id', 'function'), 'nsubj'), (('$', 'id'), 'obj'), (('f', '$'), 'flat'), (('2', 'g'), 'nummod'), (('g', '$'), 'appos'), (('f+', 'f*'), 'case'), (('f*', '$'), 'conj'), (('fid', 'g+'), 'case'), (('f$', 'g+'), 'det'), (('g+', 'f*'), 'nmod'), (('g*', 'gid'), 'det'), (('gid', 'g+'), 'obj'), (('g$', 'id'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 184 ===========================

 If the constructed graph has a cycle then no precedence functions exist. 

Tokens are: 
>> ['If', 'the', 'constructed', 'graph', 'has', 'a', 'cycle', 'then', 'no', 'precedence', 'functions', 'exist', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('constructed', 'VERB'), ('graph', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('cycle', 'NOUN'), ('then', 'ADV'), ('no', 'DET'), ('precedence', 'NOUN'), ('functions', 'NOUN'), ('exist', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('constructed', 'VBN'), ('graph', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('cycle', 'NN'), ('then', 'RB'), ('no', 'DT'), ('precedence', 'NN'), ('functions', 'NNS'), ('exist', 'VBP'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('constructed', 'construct'), ('graph', 'graph'), ('has', 'have'), ('a', 'a'), ('cycle', 'cycle'), ('then', 'then'), ('no', 'no'), ('precedence', 'precedence'), ('functions', 'function'), ('exist', 'exist'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'has'), 'mark'), (('the', 'graph'), 'det'), (('constructed', 'graph'), 'amod'), (('graph', 'has'), 'nsubj'), (('has', 'exist'), 'advcl'), (('a', 'cycle'), 'det'), (('cycle', 'has'), 'obj'), (('then', 'exist'), 'advmod'), (('no', 'functions'), 'det'), (('precedence', 'functions'), 'compound'), (('functions', 'exist'), 'nsubj'), (('exist', 'root'), 'root'), (('.', 'exist'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 185 ===========================

 When there are no cycles collect the length of the longest paths from the groups of fa and gb respectively. 

Tokens are: 
>> ['When', 'there', 'are', 'no', 'cycles', 'collect', 'the', 'length', 'of', 'the', 'longest', 'paths', 'from', 'the', 'groups', 'of', 'fa', 'and', 'gb', 'respectively', '.'] 

 UPOS tags are: 
>> [('When', 'SCONJ'), ('there', 'PRON'), ('are', 'VERB'), ('no', 'DET'), ('cycles', 'NOUN'), ('collect', 'VERB'), ('the', 'DET'), ('length', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('longest', 'ADJ'), ('paths', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('groups', 'NOUN'), ('of', 'ADP'), ('fa', 'NOUN'), ('and', 'CCONJ'), ('gb', 'NOUN'), ('respectively', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('When', 'WRB'), ('there', 'EX'), ('are', 'VBP'), ('no', 'DT'), ('cycles', 'NNS'), ('collect', 'VB'), ('the', 'DT'), ('length', 'NN'), ('of', 'IN'), ('the', 'DT'), ('longest', 'JJS'), ('paths', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('groups', 'NNS'), ('of', 'IN'), ('fa', 'NN'), ('and', 'CC'), ('gb', 'NN'), ('respectively', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('When', 'when'), ('there', 'there'), ('are', 'be'), ('no', 'no'), ('cycles', 'cycle'), ('collect', 'collect'), ('the', 'the'), ('length', 'length'), ('of', 'of'), ('the', 'the'), ('longest', 'long'), ('paths', 'path'), ('from', 'from'), ('the', 'the'), ('groups', 'group'), ('of', 'of'), ('fa', 'fa'), ('and', 'and'), ('gb', 'gb'), ('respectively', 'respectively'), ('.', '.')] 

 Dependency tags are: 
>> [(('When', 'are'), 'mark'), (('there', 'are'), 'expl'), (('are', 'collect'), 'advcl'), (('no', 'cycles'), 'det'), (('cycles', 'are'), 'nsubj'), (('collect', 'root'), 'root'), (('the', 'length'), 'det'), (('length', 'collect'), 'obj'), (('of', 'paths'), 'case'), (('the', 'paths'), 'det'), (('longest', 'paths'), 'amod'), (('paths', 'length'), 'nmod'), (('from', 'groups'), 'case'), (('the', 'groups'), 'det'), (('groups', 'paths'), 'nmod'), (('of', 'fa'), 'case'), (('fa', 'groups'), 'nmod'), (('and', 'gb'), 'cc'), (('gb', 'fa'), 'conj'), (('respectively', 'gb'), 'advmod'), (('.', 'collect'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 186 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2			  	 g	1			   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2	4		  	 g	1			   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function  	 	+	*	id	$  	f 	2	4		  	 g	1	3		   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2	4	4	  	 g	1	3		   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function 	 	+	*	id	$  	f 	2	4	4	  	 g	1	3	5	   f+ f* fid f$ g+ g* gid g$    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Operator precedence function  	 	+	*	id	$  	f 	2	4	4	0  	 g	1	3	5	0  f+ f* fid f$ g+ g* gid g$      Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', 'g', '1', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', 'g', '1', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', 'g', '1', '3', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', '4', 'g', '1', '3', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', '4', 'g', '1', '3', '5', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Operator', 'precedence', 'function', '+', '*', 'id', '$', 'f', '2', '4', '4', '0', 'g', '1', '3', '5', '0', 'f+', 'f*', 'fid', 'f$', 'g+', 'g*', 'gid', 'g$', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'PROPN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('g', 'NOUN'), ('1', 'NUM'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('g', 'NOUN'), ('1', 'NUM'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('g', 'NOUN'), ('1', 'NUM'), ('3', 'NUM'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('g', 'NOUN'), ('1', 'NUM'), ('3', 'NUM'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('g', 'NOUN'), ('1', 'NUM'), ('3', 'NUM'), ('5', 'NUM'), ('f+', 'NOUN'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('function', 'NOUN'), ('+', 'SYM'), ('*', 'PUNCT'), ('id', 'NOUN'), ('$', 'SYM'), ('f', 'NOUN'), ('2', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('0', 'NUM'), ('g', 'NOUN'), ('1', 'NUM'), ('3', 'NUM'), ('5', 'NUM'), ('0', 'NUM'), ('f+', 'NUM'), ('f*', 'NOUN'), ('fid', 'NOUN'), ('f$', 'NOUN'), ('g+', 'NOUN'), ('g*', 'NOUN'), ('gid', 'NOUN'), ('g$', 'NOUN'), ('Prof', 'PROPN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NNP'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('g', 'NN'), ('1', 'CD'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('4', 'CD'), ('g', 'NN'), ('1', 'CD'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('4', 'CD'), ('g', 'NN'), ('1', 'CD'), ('3', 'CD'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('4', 'CD'), ('4', 'CD'), ('g', 'NNS'), ('1', 'CD'), ('3', 'CD'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('4', 'CD'), ('4', 'CD'), ('g', 'NNS'), ('1', 'CD'), ('3', 'CD'), ('5', 'CD'), ('f+', 'NN'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('function', 'NN'), ('+', 'SYM'), ('*', 'NFP'), ('id', 'NN'), ('$', '$'), ('f', 'NN'), ('2', 'CD'), ('4', 'CD'), ('4', 'CD'), ('0', 'CD'), ('g', 'NNS'), ('1', 'CD'), ('3', 'CD'), ('5', 'CD'), ('0', 'CD'), ('f+', 'CD'), ('f*', 'NN'), ('fid', 'NN'), ('f$', 'NN'), ('g+', 'NN'), ('g*', 'NN'), ('gid', 'NN'), ('g$', 'NN'), ('Prof', 'NNP'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('g', 'gram'), ('1', '1'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'gram'), ('1', '1'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('g', 'gram'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'gram'), ('1', '1'), ('3', '3'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('g', 'gram'), ('1', '1'), ('3', '3'), ('5', '5'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('function', 'function'), ('+', '+'), ('*', '*'), ('id', 'id'), ('$', '$'), ('f', 'f'), ('2', '2'), ('4', '4'), ('4', '4'), ('0', '0'), ('g', 'gram'), ('1', '1'), ('3', '3'), ('5', '5'), ('0', '0'), ('f+', 'f+'), ('f*', 'f*'), ('fid', 'fid'), ('f$', 'fe'), ('g+', 'g+'), ('g*', 'g*'), ('gid', 'gid'), ('g$', 'goot'), ('Prof', 'Prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'flat'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'conj'), (('(', 'I'), 'punct'), (('I', 'function'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'function'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Prof.'), 'conj'), (('+', 'function'), 'dep'), (('*', '$'), 'punct'), (('id', '$'), 'conj'), (('$', 'Prof.'), 'conj'), (('f', 'g'), 'compound'), (('2', 'g'), 'nummod'), (('g', '$'), 'dep'), (('1', 'g'), 'nummod'), (('f+', 'g'), 'conj'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'compound'), (('f$', 'Prof.'), 'conj'), (('g+', 'Prof.'), 'conj'), (('g*', 'gid'), 'compound'), (('gid', 'g$'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', '$'), 'conj'), (('.', 'Prof.'), 'punct'), (('Jay', 'Prof.'), 'conj'), (('R', '#'), 'compound'), (('Dhamsaniya', 'Prof.'), 'conj'), (('#', 'Prof.'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Prof.'), 'conj'), (('‹#›', 'Prof.'), 'conj'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'conj'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'dep'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Prof.'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'Prof.'), 'conj'), (('precedence', 'function'), 'compound'), (('function', 'Prof.'), 'conj'), (('+', 'id'), 'cc'), (('*', '$'), 'punct'), (('id', 'Prof.'), 'conj'), (('$', 'id'), 'compound'), (('f', '$'), 'compound'), (('2', 'g'), 'nummod'), (('4', 'g'), 'nummod'), (('g', '$'), 'dep'), (('1', 'g'), 'nummod'), (('f+', '$'), 'dep'), (('f*', 'Prof.'), 'conj'), (('fid', 'Prof.'), 'conj'), (('f$', 'Prof.'), 'conj'), (('g+', 'Prof.'), 'conj'), (('g*', 'gid'), 'compound'), (('gid', 'Prof.'), 'conj'), (('g$', 'Prof'), 'compound'), (('Prof', 'Prof.'), 'conj'), (('.', 'Prof'), 'punct'), (('Jay', 'Prof.'), 'conj'), (('R', '#'), 'compound'), (('Dhamsaniya', 'Prof.'), 'conj'), (('#', 'Prof.'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Prof.'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'function'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Theory'), 'conj'), (('+', 'id'), 'cc'), (('*', '$'), 'punct'), (('id', '$'), 'conj'), (('$', 'function'), 'compound'), (('f', '$'), 'compound'), (('2', 'g'), 'nummod'), (('4', 'g'), 'nummod'), (('g', '$'), 'dep'), (('1', 'g'), 'nummod'), (('3', 'f+'), 'nummod'), (('f+', 'f*'), 'compound'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'compound'), (('f$', '$'), 'conj'), (('g+', 'g*'), 'compound'), (('g*', 'gid'), 'compound'), (('gid', 'Prof'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', 'f$'), 'conj'), (('.', 'Prof.'), 'punct'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'function'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Theory'), 'conj'), (('+', '$'), 'advmod'), (('*', '$'), 'punct'), (('id', 'function'), 'compound'), (('$', 'id'), 'compound'), (('f', '$'), 'compound'), (('2', '$'), 'nummod'), (('4', 'g'), 'nummod'), (('4', 'g'), 'nummod'), (('g', '$'), 'dep'), (('1', 'g'), 'nummod'), (('3', 'f+'), 'nummod'), (('f+', 'fid'), 'compound'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'compound'), (('f$', 'g'), 'conj'), (('g+', 'g*'), 'compound'), (('g*', 'gid'), 'compound'), (('gid', 'Prof'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', 'f$'), 'conj'), (('.', 'Prof'), 'punct'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'function'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Theory'), 'conj'), (('+', 'function'), 'cc'), (('*', '$'), 'punct'), (('id', 'function'), 'compound'), (('$', 'id'), 'compound'), (('f', '$'), 'compound'), (('2', '$'), 'nummod'), (('4', 'g'), 'nummod'), (('4', 'g'), 'nummod'), (('g', '$'), 'dep'), (('1', 'f+'), 'nummod'), (('3', 'f+'), 'nummod'), (('5', 'f+'), 'nummod'), (('f+', 'g'), 'compound'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'compound'), (('f$', 'g'), 'conj'), (('g+', 'gid'), 'compound'), (('g*', 'Prof'), 'compound'), (('gid', 'Prof'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', 'f$'), 'conj'), (('.', 'f$'), 'punct'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'parataxis'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Operator'), 'compound'), (('Operator', 'function'), 'compound'), (('precedence', 'function'), 'compound'), (('function', 'Theory'), 'parataxis'), (('+', 'function'), 'cc'), (('*', '$'), 'punct'), (('id', 'function'), 'compound'), (('$', 'id'), 'compound'), (('f', '$'), 'compound'), (('2', 'g'), 'nummod'), (('4', 'g'), 'nummod'), (('4', 'g'), 'nummod'), (('0', 'g'), 'nummod'), (('g', '$'), 'appos'), (('1', '5'), 'compound'), (('3', 'f*'), 'nummod'), (('5', 'f*'), 'nummod'), (('0', 'f*'), 'nummod'), (('f+', 'f$'), 'nummod'), (('f*', 'f$'), 'compound'), (('fid', 'f$'), 'compound'), (('f$', 'g'), 'appos'), (('g+', 'Prof'), 'compound'), (('g*', 'Prof'), 'compound'), (('gid', 'Prof'), 'compound'), (('g$', 'Prof'), 'compound'), (('Prof', 'f$'), 'appos'), (('.', 'f$'), 'punct'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', 'Probability'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Methods'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Theory'), 'appos'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 187 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 188 ===========================

 Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  LR parser LR parsing is most efficient method of bottom up parsing which can be used to parse large class of context free grammar. 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'LR', 'parser', 'LR', 'parsing', 'is', 'most', 'efficient', 'method', 'of', 'bottom', 'up', 'parsing', 'which', 'can', 'be', 'used', 'to', 'parse', 'large', 'class', 'of', 'context', 'free', 'grammar', '.'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('Parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'PROPN'), ('precedence', 'NOUN'), ('LALR', 'PROPN'), ('CLR', 'PROPN'), ('SLR', 'PROPN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'PROPN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B', 'PROPN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'PROPN'), ('Theory', 'PROPN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'X'), ('LR', 'NOUN'), ('parser', 'NOUN'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('is', 'AUX'), ('most', 'ADV'), ('efficient', 'ADJ'), ('method', 'NOUN'), ('of', 'ADP'), ('bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('which', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('to', 'PART'), ('parse', 'VERB'), ('large', 'ADJ'), ('class', 'NOUN'), ('of', 'ADP'), ('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('Parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NNP'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NNP'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NNP'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ':'), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NNP'), ('Dixita', 'NNP'), ('B', 'NNP'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ':'), ('Parsing', 'NNP'), ('Theory', 'NNP'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'FW'), ('LR', 'NN'), ('parser', 'NN'), ('LR', 'NN'), ('parsing', 'NN'), ('is', 'VBZ'), ('most', 'RBS'), ('efficient', 'JJ'), ('method', 'NN'), ('of', 'IN'), ('bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('which', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('parse', 'VB'), ('large', 'JJ'), ('class', 'NN'), ('of', 'IN'), ('context', 'NN'), ('free', 'JJ'), ('grammar', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'SLR'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'B'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'Parsing'), ('Theory', 'Theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('LR', 'lr'), ('parser', 'parser'), ('LR', 'lr'), ('parsing', 'parsing'), ('is', 'be'), ('most', 'most'), ('efficient', 'efficient'), ('method', 'method'), ('of', 'of'), ('bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('which', 'which'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('to', 'to'), ('parse', 'parse'), ('large', 'large'), ('class', 'class'), ('of', 'of'), ('context', 'context'), ('free', 'free'), ('grammar', 'grammar'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'method'), 'advcl'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'precedence'), 'compound'), (('(', 'Parsing'), 'punct'), (('predictive', 'Parsing'), 'amod'), (('Parsing', 'backtracking'), 'appos'), ((')', 'Parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obl'), (('LALR', 'descent'), 'compound'), (('CLR', 'SLR'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'conj'), (('LL', 'descent'), 'appos'), (('(', '1'), 'punct'), (('1', 'descent'), 'dep'), ((')', '1'), 'punct'), (('Prof.', 'descent'), 'compound'), (('Jay', 'Dhamsaniya'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'LL'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'tracking'), 'obj'), (('1', 'Unit'), 'nummod'), (('–', 'Probability'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'precedence'), 'conj'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'Kagathara'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'precedence'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Theory'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', '‹#›'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'parser'), 'compound'), (('LR', 'parser'), 'compound'), (('parser', 'method'), 'nsubj'), (('LR', 'parsing'), 'compound'), (('parsing', 'method'), 'nsubj'), (('is', 'method'), 'cop'), (('most', 'efficient'), 'advmod'), (('efficient', 'method'), 'amod'), (('method', 'root'), 'root'), (('of', 'parsing'), 'case'), (('bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'method'), 'nmod'), (('which', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'parsing'), 'acl:relcl'), (('to', 'parse'), 'mark'), (('parse', 'used'), 'xcomp'), (('large', 'class'), 'amod'), (('class', 'parse'), 'obj'), (('of', 'grammar'), 'case'), (('context', 'grammar'), 'compound'), (('free', 'grammar'), 'amod'), (('grammar', 'class'), 'nmod'), (('.', 'method'), 'punct')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 189 ===========================

 The technique is called LR(k) parsing: 

Tokens are: 
>> ['The', 'technique', 'is', 'called', 'LR', '(', 'k', ')', 'parsing', ':'] 

 UPOS tags are: 
>> [('The', 'DET'), ('technique', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('LR', 'PROPN'), ('(', 'PUNCT'), ('k', 'NUM'), (')', 'PUNCT'), ('parsing', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('technique', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('LR', 'NNP'), ('(', '-LRB-'), ('k', 'CD'), (')', '-RRB-'), ('parsing', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('The', 'the'), ('technique', 'technique'), ('is', 'be'), ('called', 'call'), ('LR', 'LR'), ('(', '('), ('k', 'k'), (')', ')'), ('parsing', 'parsing'), (':', ':')] 

 Dependency tags are: 
>> [(('The', 'technique'), 'det'), (('technique', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('LR', 'parsing'), 'compound'), (('(', 'k'), 'punct'), (('k', 'LR'), 'appos'), ((')', 'k'), 'punct'), (('parsing', 'called'), 'xcomp'), ((':', 'called'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 190 ===========================

 The “L” is for left to right scanning of input symbol,  The “R” for constructing right most derivation in reverse,  The “k” for the number of input symbols of look ahead that are used in making parsing decision. 

Tokens are: 
>> ['The', '“', 'L', '”', 'is', 'for', 'left', 'to', 'right', 'scanning', 'of', 'input', 'symbol', ',', 'The', '“', 'R', '”', 'for', 'constructing', 'right', 'most', 'derivation', 'in', 'reverse', ',', 'The', '“', 'k', '”', 'for', 'the', 'number', 'of', 'input', 'symbols', 'of', 'look', 'ahead', 'that', 'are', 'used', 'in', 'making', 'parsing', 'decision', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('“', 'PUNCT'), ('L', 'PROPN'), ('”', 'PUNCT'), ('is', 'AUX'), ('for', 'ADP'), ('left', 'VERB'), ('to', 'ADP'), ('right', 'ADJ'), ('scanning', 'NOUN'), ('of', 'ADP'), ('input', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), ('The', 'DET'), ('“', 'PUNCT'), ('R', 'PROPN'), ('”', 'PUNCT'), ('for', 'SCONJ'), ('constructing', 'VERB'), ('right', 'ADJ'), ('most', 'ADJ'), ('derivation', 'NOUN'), ('in', 'ADP'), ('reverse', 'NOUN'), (',', 'PUNCT'), ('The', 'DET'), ('“', 'PUNCT'), ('k', 'NOUN'), ('”', 'PUNCT'), ('for', 'ADP'), ('the', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('input', 'NOUN'), ('symbols', 'NOUN'), ('of', 'ADP'), ('look', 'NOUN'), ('ahead', 'ADV'), ('that', 'PRON'), ('are', 'AUX'), ('used', 'VERB'), ('in', 'SCONJ'), ('making', 'VERB'), ('parsing', 'NOUN'), ('decision', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('“', '``'), ('L', 'NNP'), ('”', "''"), ('is', 'VBZ'), ('for', 'IN'), ('left', 'VBN'), ('to', 'IN'), ('right', 'JJ'), ('scanning', 'NN'), ('of', 'IN'), ('input', 'NN'), ('symbol', 'NN'), (',', ','), ('The', 'DT'), ('“', '``'), ('R', 'NNP'), ('”', "''"), ('for', 'IN'), ('constructing', 'VBG'), ('right', 'JJ'), ('most', 'JJS'), ('derivation', 'NN'), ('in', 'IN'), ('reverse', 'NN'), (',', ','), ('The', 'DT'), ('“', '``'), ('k', 'NN'), ('”', "''"), ('for', 'IN'), ('the', 'DT'), ('number', 'NN'), ('of', 'IN'), ('input', 'NN'), ('symbols', 'NNS'), ('of', 'IN'), ('look', 'NN'), ('ahead', 'RB'), ('that', 'WDT'), ('are', 'VBP'), ('used', 'VBN'), ('in', 'IN'), ('making', 'VBG'), ('parsing', 'NN'), ('decision', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('“', "''"), ('L', 'L'), ('”', "''"), ('is', 'be'), ('for', 'for'), ('left', 'leave'), ('to', 'to'), ('right', 'right'), ('scanning', 'scanning'), ('of', 'of'), ('input', 'input'), ('symbol', 'symbol'), (',', ','), ('The', 'the'), ('“', "''"), ('R', 'R'), ('”', "''"), ('for', 'for'), ('constructing', 'construct'), ('right', 'right'), ('most', 'most'), ('derivation', 'derivation'), ('in', 'in'), ('reverse', 'reverse'), (',', ','), ('The', 'the'), ('“', "''"), ('k', 'k'), ('”', "''"), ('for', 'for'), ('the', 'the'), ('number', 'number'), ('of', 'of'), ('input', 'input'), ('symbols', 'symbol'), ('of', 'of'), ('look', 'look'), ('ahead', 'ahead'), ('that', 'that'), ('are', 'be'), ('used', 'use'), ('in', 'in'), ('making', 'make'), ('parsing', 'parsing'), ('decision', 'decision'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'L'), 'det'), (('“', 'L'), 'punct'), (('L', 'left'), 'nsubj'), (('”', 'L'), 'punct'), (('is', 'left'), 'aux:pass'), (('for', 'left'), 'case'), (('left', 'root'), 'root'), (('to', 'scanning'), 'case'), (('right', 'scanning'), 'amod'), (('scanning', 'left'), 'obl'), (('of', 'symbol'), 'case'), (('input', 'symbol'), 'compound'), (('symbol', 'scanning'), 'nmod'), ((',', 'R'), 'punct'), (('The', 'R'), 'det'), (('“', 'R'), 'punct'), (('R', 'symbol'), 'appos'), (('”', 'R'), 'punct'), (('for', 'constructing'), 'mark'), (('constructing', 'left'), 'advcl'), (('right', 'derivation'), 'amod'), (('most', 'derivation'), 'amod'), (('derivation', 'constructing'), 'obj'), (('in', 'reverse'), 'case'), (('reverse', 'derivation'), 'nmod'), ((',', 'k'), 'punct'), (('The', 'k'), 'det'), (('“', 'k'), 'punct'), (('k', 'derivation'), 'appos'), (('”', 'k'), 'punct'), (('for', 'number'), 'case'), (('the', 'number'), 'det'), (('number', 'constructing'), 'obl'), (('of', 'symbols'), 'case'), (('input', 'symbols'), 'compound'), (('symbols', 'number'), 'nmod'), (('of', 'look'), 'case'), (('look', 'symbols'), 'nmod'), (('ahead', 'look'), 'advmod'), (('that', 'used'), 'nsubj:pass'), (('are', 'used'), 'aux:pass'), (('used', 'symbols'), 'acl:relcl'), (('in', 'making'), 'mark'), (('making', 'used'), 'advcl'), (('parsing', 'decision'), 'compound'), (('decision', 'making'), 'obj'), (('.', 'left'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 191 ===========================

 LR parsing program INPUT OUTPUT 	a	+	b	$	  	X 	Y 	Z 	$  Parsing Table Action Goto    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['LR', 'parsing', 'program', 'INPUT', 'OUTPUT', 'a', '+', 'b', '$', 'X', 'Y', 'Z', '$', 'Parsing', 'Table', 'Action', 'Goto', 'Prof', '.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('LR', 'NOUN'), ('parsing', 'NOUN'), ('program', 'NOUN'), ('INPUT', 'NOUN'), ('OUTPUT', 'NOUN'), ('a', 'SYM'), ('+', 'SYM'), ('b', 'NOUN'), ('$', 'SYM'), ('X', 'NUM'), ('Y', 'NOUN'), ('Z', 'NOUN'), ('$', 'SYM'), ('Parsing', 'NOUN'), ('Table', 'NOUN'), ('Action', 'NOUN'), ('Goto', 'NOUN'), ('Prof', 'NOUN'), ('.', 'PUNCT'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('LR', 'NN'), ('parsing', 'NN'), ('program', 'NN'), ('INPUT', 'NN'), ('OUTPUT', 'NN'), ('a', 'SYM'), ('+', 'SYM'), ('b', 'NN'), ('$', '$'), ('X', 'CD'), ('Y', 'NN'), ('Z', 'NN'), ('$', '$'), ('Parsing', 'NN'), ('Table', 'NN'), ('Action', 'NN'), ('Goto', 'NN'), ('Prof', 'NN'), ('.', '.'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('LR', 'lr'), ('parsing', 'parsing'), ('program', 'program'), ('INPUT', 'input'), ('OUTPUT', 'output'), ('a', 'a'), ('+', '+'), ('b', 'b'), ('$', '$'), ('X', 'X'), ('Y', 'Y'), ('Z', 'z'), ('$', '$'), ('Parsing', 'parsing'), ('Table', 'table'), ('Action', 'action'), ('Goto', 'goto'), ('Prof', 'prof'), ('.', '.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('LR', 'program'), 'compound'), (('parsing', 'program'), 'compound'), (('program', 'root'), 'root'), (('INPUT', 'OUTPUT'), 'compound'), (('OUTPUT', 'program'), 'list'), (('a', '$'), 'nummod'), (('+', '$'), 'cc'), (('b', '$'), 'compound'), (('$', 'OUTPUT'), 'list'), (('X', '$'), 'nummod'), (('Y', '$'), 'nummod'), (('Z', 'Prof'), 'compound'), (('$', 'Prof'), 'compound'), (('Parsing', '$'), 'compound'), (('Table', 'Action'), 'compound'), (('Action', 'Prof'), 'compound'), (('Goto', 'Prof'), 'compound'), (('Prof', 'program'), 'list'), (('.', 'program'), 'punct'), (('Jay', '#'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'program'), 'list'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'program'), 'list'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Methods'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Methods'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Unit'), 'appos'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 192 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 193 ===========================

 Back tracking Parsing without backtracking (predictive parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Computation of closure & go to function X Xb  Closure(I): 		X  X b Goto(I,X) 		X X b	  . .    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Steps to construct SLR parser Construct Canonical set of LR(0) items Construct SLR parsing table Parse the input string     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: SLR(1)- simple LR S  AA A  aA | b S’.S S. AA A. aA A. b  S’ S.  S A . A A. aA A. b  A. aA A. b  A a . A A b.  A. aA A. b  A a . A A b.  A. aA A. b  A a . A A b.  S AA . 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Computation', 'of', 'closure', '&', 'go', 'to', 'function', 'X\uf0e0', 'Xb', 'Closure', '(', 'I', ')', ':', 'X\uf0e0', 'X', 'b', 'Goto', '(', 'I', ',', 'X', ')', 'X\uf0e0', 'X', 'b', '.', '.', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Steps', 'to', 'construct', 'SLR', 'parser', 'Construct', 'Canonical', 'set', 'of', 'LR', '(', '0', ')', 'items', 'Construct', 'SLR', 'parsing', 'table', 'Parse', 'the', 'input', 'string', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'SLR', '(', '1', ')', '-', 'simple', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'a', 'A', '|', 'b', 'S’\uf0e0.S', 'S\uf0e0.', 'AA', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'S’\uf0e0', 'S.', 'S\uf0e0', 'A', '.', 'A', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0', 'a', '.', 'A', 'A\uf0e0', 'b.', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0', 'a', '.', 'A', 'A\uf0e0', 'b.', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0', 'a', '.', 'A', 'A\uf0e0', 'b.', 'S\uf0e0', 'AA', '.'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('LALR', 'PROPN'), ('CLR', 'PROPN'), ('SLR', 'NOUN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Computation', 'NOUN'), ('of', 'ADP'), ('closure', 'NOUN'), ('&', 'CCONJ'), ('go', 'VERB'), ('to', 'ADP'), ('function', 'NOUN'), ('X\uf0e0', 'PROPN'), ('Xb', 'PROPN'), ('Closure', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), (':', 'PUNCT'), ('X\uf0e0', 'PROPN'), ('X', 'NOUN'), ('b', 'NOUN'), ('Goto', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (',', 'PUNCT'), ('X', 'NOUN'), (')', 'PUNCT'), ('X\uf0e0', 'NUM'), ('X', 'NOUN'), ('b', 'NUM'), ('.', 'PUNCT'), ('.', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Steps', 'NOUN'), ('to', 'PART'), ('construct', 'VERB'), ('SLR', 'NOUN'), ('parser', 'NOUN'), ('Construct', 'NOUN'), ('Canonical', 'ADJ'), ('set', 'NOUN'), ('of', 'ADP'), ('LR', 'NOUN'), ('(', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT'), ('items', 'NOUN'), ('Construct', 'NOUN'), ('SLR', 'NOUN'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('Parse', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('string', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('SLR', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('-', 'PUNCT'), ('simple', 'ADJ'), ('LR', 'NOUN'), ('S', 'NOUN'), ('\uf0e0', 'NOUN'), ('AA', 'NOUN'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('a', 'NOUN'), ('A', 'NOUN'), ('|', 'PUNCT'), ('b', 'NOUN'), ('S’\uf0e0.S', 'NOUN'), ('S\uf0e0.', 'NOUN'), ('AA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('S’\uf0e0', 'NOUN'), ('S.', 'NOUN'), ('S\uf0e0', 'PROPN'), ('A', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0', 'NOUN'), ('b.', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0', 'NOUN'), ('b.', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0', 'NOUN'), ('b.', 'NOUN'), ('S\uf0e0', 'PROPN'), ('AA', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('LALR', 'NNP'), ('CLR', 'NNP'), ('SLR', 'NN'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Computation', 'NN'), ('of', 'IN'), ('closure', 'NN'), ('&', 'CC'), ('go', 'VB'), ('to', 'IN'), ('function', 'NN'), ('X\uf0e0', 'NNP'), ('Xb', 'NNP'), ('Closure', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), (':', ':'), ('X\uf0e0', 'NNP'), ('X', 'NN'), ('b', 'NN'), ('Goto', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (',', ','), ('X', 'NN'), (')', '-RRB-'), ('X\uf0e0', 'CD'), ('X', 'NN'), ('b', 'LS'), ('.', '.'), ('.', '.'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Steps', 'NNS'), ('to', 'TO'), ('construct', 'VB'), ('SLR', 'NN'), ('parser', 'NN'), ('Construct', 'NN'), ('Canonical', 'JJ'), ('set', 'NN'), ('of', 'IN'), ('LR', 'NN'), ('(', '-LRB-'), ('0', 'CD'), (')', '-RRB-'), ('items', 'NNS'), ('Construct', 'NN'), ('SLR', 'NN'), ('parsing', 'NN'), ('table', 'NN'), ('Parse', 'VB'), ('the', 'DT'), ('input', 'NN'), ('string', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('SLR', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('-', ','), ('simple', 'JJ'), ('LR', 'NN'), ('S', 'NN'), ('\uf0e0', 'NN'), ('AA', 'NN'), ('A', 'NN'), ('\uf0e0', 'NN'), ('a', 'NN'), ('A', 'NN'), ('|', ','), ('b', 'NN'), ('S’\uf0e0.S', 'NN'), ('S\uf0e0.', 'NN'), ('AA', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('S’\uf0e0', 'NN'), ('S.', 'NN'), ('S\uf0e0', 'NNP'), ('A', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0', 'NN'), ('b.', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0', 'NN'), ('b.', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0', 'NN'), ('b.', 'NN'), ('S\uf0e0', 'NNP'), ('AA', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'LALR'), ('CLR', 'CLR'), ('SLR', 'slr'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Computation', 'computation'), ('of', 'of'), ('closure', 'closure'), ('&', '&'), ('go', 'go'), ('to', 'to'), ('function', 'function'), ('X\uf0e0', 'X\uf0e0'), ('Xb', 'Xb'), ('Closure', 'closure'), ('(', '('), ('I', 'i'), (')', ')'), (':', ':'), ('X\uf0e0', 'X\uf0e0'), ('X', 'x'), ('b', 'b'), ('Goto', 'goto'), ('(', '('), ('I', 'i'), (',', ','), ('X', 'x'), (')', ')'), ('X\uf0e0', 'x\uf0e0'), ('X', 'x'), ('b', 'b'), ('.', '.'), ('.', '.'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Steps', 'step'), ('to', 'to'), ('construct', 'construct'), ('SLR', 'slr'), ('parser', 'parser'), ('Construct', 'construct'), ('Canonical', 'canonical'), ('set', 'set'), ('of', 'of'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('Construct', 'construct'), ('SLR', 'slr'), ('parsing', 'parsing'), ('table', 'table'), ('Parse', 'parse'), ('the', 'the'), ('input', 'input'), ('string', 'string'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('SLR', 'SLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simple'), ('LR', 'lr'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('A', 'a'), ('|', '|'), ('b', 'b'), ('S’\uf0e0.S', 'sum.'), ('S\uf0e0.', 's\uf0e0.'), ('AA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('S’\uf0e0', 's’\uf0e0'), ('S.', 'S.'), ('S\uf0e0', 'S\uf0e0'), ('A', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'aa'), ('.', '.')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'parsing'), 'punct'), (('predictive', 'parsing'), 'amod'), (('parsing', 'backtracking'), 'appos'), ((')', 'parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obl'), (('LALR', 'precedence'), 'compound'), (('CLR', 'SLR'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'LL'), 'compound'), (('LL', 'precedence'), 'conj'), (('(', '1'), 'punct'), (('1', 'LL'), 'dep'), ((')', '1'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'tracking'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'tracking'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'B'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'tracking'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'tracking'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Computation'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Computation'), 'compound'), (('Computation', 'Theory'), 'conj'), (('of', 'closure'), 'case'), (('closure', 'Computation'), 'nmod'), (('&', 'go'), 'cc'), (('go', 'tracking'), 'conj'), (('to', 'function'), 'case'), (('function', 'go'), 'obl'), (('X\uf0e0', 'Closure'), 'compound'), (('Xb', 'Closure'), 'compound'), (('Closure', 'function'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Closure'), 'dep'), ((')', 'I'), 'punct'), ((':', 'tracking'), 'punct'), (('X\uf0e0', 'Goto'), 'compound'), (('X', 'b'), 'compound'), (('b', 'Goto'), 'compound'), (('Goto', 'tracking'), 'conj'), (('(', 'X'), 'punct'), (('I', 'X'), 'nummod'), ((',', 'I'), 'punct'), (('X', 'Goto'), 'dep'), ((')', 'X'), 'punct'), (('X\uf0e0', 'X'), 'nummod'), (('X', 'b'), 'compound'), (('b', 'tracking'), 'dep'), (('.', 'b'), 'punct'), (('.', 'tracking'), 'punct'), (('Prof.', 'tracking'), 'conj'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'tracking'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'tracking'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Steps'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Steps'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Steps'), 'compound'), (('Steps', 'tracking'), 'conj'), (('to', 'construct'), 'mark'), (('construct', 'Steps'), 'acl'), (('SLR', 'Construct'), 'compound'), (('parser', 'Construct'), 'compound'), (('Construct', 'set'), 'compound'), (('Canonical', 'set'), 'amod'), (('set', 'construct'), 'obj'), (('of', 'items'), 'case'), (('LR', 'items'), 'compound'), (('(', '0'), 'punct'), (('0', 'items'), 'nummod'), ((')', '0'), 'punct'), (('items', 'set'), 'nmod'), (('Construct', 'table'), 'compound'), (('SLR', 'table'), 'compound'), (('parsing', 'table'), 'compound'), (('table', 'set'), 'conj'), (('Parse', 'table'), 'compound'), (('the', 'string'), 'det'), (('input', 'string'), 'compound'), (('string', 'Parse'), 'obj'), (('Prof.', 'string'), 'compound'), (('Jay', 'string'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'string'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'B'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'dep'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), ((':', 'Example'), 'punct'), (('SLR', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'SLR'), 'dep'), ((')', '1'), 'punct'), (('-', 'LR'), 'punct'), (('simple', 'LR'), 'amod'), (('LR', 'Example'), 'appos'), (('S', 'LR'), 'compound'), (('\uf0e0', 'LR'), 'compound'), (('AA', 'LR'), 'appos'), (('A', '\uf0e0'), 'compound'), (('\uf0e0', 'AA'), 'compound'), (('a', 'b'), 'compound'), (('A', '\uf0e0'), 'compound'), (('|', 'b'), 'punct'), (('b', 'A'), 'compound'), (('S’\uf0e0.S', 'b'), 'compound'), (('S\uf0e0.', 'b'), 'compound'), (('AA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'AA'), 'conj'), (('S’\uf0e0', 'b'), 'compound'), (('S.', 'b'), 'compound'), (('S\uf0e0', 'A'), 'compound'), (('A', 'b'), 'nmod'), (('.', 'b'), 'punct'), (('A', 'b'), 'det'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b'), 'appos'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b'), 'nmod'), (('A\uf0e0', 'a'), 'compound'), (('a', 'b'), 'appos'), (('.', 'b'), 'punct'), (('A', 'A\uf0e0'), 'det'), (('A\uf0e0', 'b'), 'compound'), (('b.', 'A\uf0e0'), 'dep'), (('A\uf0e0.', 'b.'), 'flat'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b.'), 'nmod'), (('A\uf0e0', 'a'), 'compound'), (('a', 'b'), 'appos'), (('.', 'b.'), 'punct'), (('A', 'A\uf0e0'), 'det'), (('A\uf0e0', 'b.'), 'compound'), (('b.', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b.'), 'appos'), (('A\uf0e0', 'a'), 'compound'), (('a', 'b'), 'appos'), (('.', 'b.'), 'punct'), (('A', 'b.'), 'det'), (('A\uf0e0', 'b.'), 'compound'), (('b.', 'b'), 'appos'), (('S\uf0e0', 'b.'), 'compound'), (('AA', 'b.'), 'appos'), (('.', 'tracking'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('0', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 194 ===========================

 A aA .     3 6 5 3 3 4 4 4           Augmented grammar  LR(0) item set     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Rules to construct SLR parsing table Construct , the collection of sets of LR(0) items for  Stateis constructed from . 

Tokens are: 
>> ['A\uf0e0', 'aA', '.', '3', '6', '5', '3', '3', '4', '4', '4', 'Augmented', 'grammar', 'LR', '(', '0', ')', 'item', 'set', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Rules', 'to', 'construct', 'SLR', 'parsing', 'table', 'Construct', ',', 'the', 'collection', 'of', 'sets', 'of', 'LR', '(', '0', ')', 'items', 'for', 'Stateis', 'constructed', 'from', '.'] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('aA', 'NOUN'), ('.', 'PUNCT'), ('3', 'NUM'), ('6', 'NUM'), ('5', 'NUM'), ('3', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('Augmented', 'VERB'), ('grammar', 'NOUN'), ('LR', 'NOUN'), ('(', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT'), ('item', 'NOUN'), ('set', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Rules', 'NOUN'), ('to', 'PART'), ('construct', 'VERB'), ('SLR', 'PROPN'), ('parsing', 'NOUN'), ('table', 'NOUN'), ('Construct', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('collection', 'NOUN'), ('of', 'ADP'), ('sets', 'NOUN'), ('of', 'ADP'), ('LR', 'NOUN'), ('(', 'PUNCT'), ('0', 'NUM'), (')', 'PUNCT'), ('items', 'NOUN'), ('for', 'ADP'), ('Stateis', 'PROPN'), ('constructed', 'VERB'), ('from', 'ADP'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('aA', 'NN'), ('.', '.'), ('3', 'CD'), ('6', 'CD'), ('5', 'CD'), ('3', 'CD'), ('3', 'CD'), ('4', 'CD'), ('4', 'CD'), ('4', 'CD'), ('Augmented', 'VBN'), ('grammar', 'NN'), ('LR', 'NN'), ('(', '-LRB-'), ('0', 'CD'), (')', '-RRB-'), ('item', 'NN'), ('set', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Rules', 'NNS'), ('to', 'TO'), ('construct', 'VB'), ('SLR', 'NNP'), ('parsing', 'NN'), ('table', 'NN'), ('Construct', 'NN'), (',', ','), ('the', 'DT'), ('collection', 'NN'), ('of', 'IN'), ('sets', 'NNS'), ('of', 'IN'), ('LR', 'NN'), ('(', '-LRB-'), ('0', 'CD'), (')', '-RRB-'), ('items', 'NNS'), ('for', 'IN'), ('Stateis', 'NNP'), ('constructed', 'VBN'), ('from', 'IN'), ('.', '.')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('aA', 'aa'), ('.', '.'), ('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('Augmented', 'augment'), ('grammar', 'grammar'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Rules', 'rule'), ('to', 'to'), ('construct', 'construct'), ('SLR', 'SLR'), ('parsing', 'parsing'), ('table', 'table'), ('Construct', 'construct'), (',', ','), ('the', 'the'), ('collection', 'collection'), ('of', 'of'), ('sets', 'set'), ('of', 'of'), ('LR', 'lr'), ('(', '('), ('0', '0'), (')', ')'), ('items', 'item'), ('for', 'for'), ('Stateis', 'Statei'), ('constructed', 'construct'), ('from', 'from'), ('.', '.')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'root'), 'root'), (('aA', 'A\uf0e0'), 'flat'), (('.', 'aA'), 'punct'), (('3', 'LR'), 'nummod'), (('6', '5'), 'compound'), (('5', 'LR'), 'nummod'), (('3', 'LR'), 'nummod'), (('3', 'LR'), 'nummod'), (('4', 'LR'), 'nummod'), (('4', 'LR'), 'nummod'), (('4', 'LR'), 'nummod'), (('Augmented', 'LR'), 'amod'), (('grammar', 'LR'), 'compound'), (('LR', 'aA'), 'list'), (('(', 'set'), 'punct'), (('0', 'set'), 'nummod'), ((')', 'LR'), 'punct'), (('item', 'set'), 'compound'), (('set', 'LR'), 'appos'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'set'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'aA'), 'appos'), (('‹#›', 'aA'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'aA'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'aA'), 'list'), (('3', 'Unit'), 'nummod'), (('–', 'aA'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Rules'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Rules'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Rules'), 'compound'), (('Rules', 'aA'), 'parataxis'), (('to', 'construct'), 'mark'), (('construct', 'Rules'), 'acl'), (('SLR', 'table'), 'compound'), (('parsing', 'table'), 'compound'), (('table', 'Construct'), 'compound'), (('Construct', 'construct'), 'obj'), ((',', 'collection'), 'punct'), (('the', 'collection'), 'det'), (('collection', 'Construct'), 'appos'), (('of', 'sets'), 'case'), (('sets', 'collection'), 'nmod'), (('of', 'items'), 'case'), (('LR', 'items'), 'compound'), (('(', '0'), 'punct'), (('0', 'LR'), 'appos'), ((')', '0'), 'punct'), (('items', 'collection'), 'nmod'), (('for', 'Stateis'), 'case'), (('Stateis', 'items'), 'nmod'), (('constructed', 'items'), 'acl'), (('from', 'constructed'), 'obl'), (('.', 'A\uf0e0'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('0', 'CARDINAL')]

========================== Sentence 195 ===========================

 The parsing actions for state  are determined as follow : 

Tokens are: 
>> ['The', 'parsing', 'actions', 'for', 'state', 'are', 'determined', 'as', 'follow', ':'] 

 UPOS tags are: 
>> [('The', 'DET'), ('parsing', 'NOUN'), ('actions', 'NOUN'), ('for', 'ADP'), ('state', 'NOUN'), ('are', 'AUX'), ('determined', 'VERB'), ('as', 'ADP'), ('follow', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('parsing', 'NN'), ('actions', 'NNS'), ('for', 'IN'), ('state', 'NN'), ('are', 'VBP'), ('determined', 'VBN'), ('as', 'IN'), ('follow', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('The', 'the'), ('parsing', 'parsing'), ('actions', 'action'), ('for', 'for'), ('state', 'state'), ('are', 'be'), ('determined', 'determine'), ('as', 'as'), ('follow', 'follow'), (':', ':')] 

 Dependency tags are: 
>> [(('The', 'actions'), 'det'), (('parsing', 'actions'), 'compound'), (('actions', 'determined'), 'nsubj:pass'), (('for', 'state'), 'case'), (('state', 'actions'), 'nmod'), (('are', 'determined'), 'aux:pass'), (('determined', 'root'), 'root'), (('as', 'follow'), 'case'), (('follow', 'determined'), 'obl'), ((':', 'determined'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 196 ===========================

 If is in  and GOTO  , then set to “shift j”. 

Tokens are: 
>> ['If', 'is', 'in', 'and', 'GOTO', ',', 'then', 'set', 'to', '“', 'shift', 'j”', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('is', 'AUX'), ('in', 'ADP'), ('and', 'CCONJ'), ('GOTO', 'NOUN'), (',', 'PUNCT'), ('then', 'ADV'), ('set', 'VERB'), ('to', 'ADP'), ('“', 'PUNCT'), ('shift', 'VERB'), ('j”', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('is', 'VBZ'), ('in', 'IN'), ('and', 'CC'), ('GOTO', 'NN'), (',', ','), ('then', 'RB'), ('set', 'VB'), ('to', 'IN'), ('“', '``'), ('shift', 'VB'), ('j”', "''"), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('is', 'be'), ('in', 'in'), ('and', 'and'), ('GOTO', 'goto'), (',', ','), ('then', 'then'), ('set', 'set'), ('to', 'to'), ('“', "''"), ('shift', 'shift'), ('j”', 'j'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'in'), 'mark'), (('is', 'in'), 'cop'), (('in', 'set'), 'advcl'), (('and', 'GOTO'), 'cc'), (('GOTO', 'in'), 'conj'), ((',', 'set'), 'punct'), (('then', 'set'), 'advmod'), (('set', 'root'), 'root'), (('to', 'shift'), 'case'), (('“', 'shift'), 'punct'), (('shift', 'set'), 'obl'), (('j”', 'shift'), 'punct'), (('.', 'set'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 197 ===========================

 Here a must be terminal. 

Tokens are: 
>> ['Here', 'a', 'must', 'be', 'terminal', '.'] 

 UPOS tags are: 
>> [('Here', 'ADV'), ('a', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('terminal', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Here', 'RB'), ('a', 'DT'), ('must', 'MD'), ('be', 'VB'), ('terminal', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('Here', 'here'), ('a', 'a'), ('must', 'must'), ('be', 'be'), ('terminal', 'terminal'), ('.', '.')] 

 Dependency tags are: 
>> [(('Here', 'root'), 'root'), (('a', 'terminal'), 'nsubj'), (('must', 'terminal'), 'aux'), (('be', 'terminal'), 'cop'), (('terminal', 'Here'), 'parataxis'), (('.', 'Here'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 198 ===========================

 If is in , then set to “reduce 

Tokens are: 
>> ['If', 'is', 'in', ',', 'then', 'set', 'to', '“', 'reduce'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('is', 'AUX'), ('in', 'ADV'), (',', 'PUNCT'), ('then', 'ADV'), ('set', 'VERB'), ('to', 'PART'), ('“', 'PUNCT'), ('reduce', 'VERB')] 

 XPOS tags are: 
>> [('If', 'IN'), ('is', 'VBZ'), ('in', 'RB'), (',', ','), ('then', 'RB'), ('set', 'VB'), ('to', 'TO'), ('“', '``'), ('reduce', 'VB')] 

 Lemmas are: 
>> [('If', 'if'), ('is', 'be'), ('in', 'in'), (',', ','), ('then', 'then'), ('set', 'set'), ('to', 'to'), ('“', "''"), ('reduce', 'reduce')] 

 Dependency tags are: 
>> [(('If', 'in'), 'mark'), (('is', 'in'), 'cop'), (('in', 'set'), 'advcl'), ((',', 'set'), 'punct'), (('then', 'set'), 'advmod'), (('set', 'root'), 'root'), (('to', 'reduce'), 'mark'), (('“', 'reduce'), 'punct'), (('reduce', 'set'), 'xcomp')]

 Named Entities are: 
>> []

========================== Sentence 199 ===========================

 A ” for all a in ; here A may not be S’. 

Tokens are: 
>> ['A\uf0e0', '”', 'for', 'all', 'a', 'in', ';', 'here', 'A', 'may', 'not', 'be', 'S’', '.'] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('”', 'PUNCT'), ('for', 'ADP'), ('all', 'DET'), ('a', 'DET'), ('in', 'NOUN'), (';', 'PUNCT'), ('here', 'ADV'), ('A', 'PRON'), ('may', 'AUX'), ('not', 'PART'), ('be', 'AUX'), ('S’', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('”', "''"), ('for', 'IN'), ('all', 'PDT'), ('a', 'DT'), ('in', 'NN'), (';', ','), ('here', 'RB'), ('A', 'DT'), ('may', 'MD'), ('not', 'RB'), ('be', 'VB'), ('S’', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('”', "''"), ('for', 'for'), ('all', 'all'), ('a', 'a'), ('in', 'in'), (';', ';'), ('here', 'here'), ('A', 'a'), ('may', 'may'), ('not', 'not'), ('be', 'be'), ('S’', 'be'), ('.', '.')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'root'), 'root'), (('”', 'A\uf0e0'), 'punct'), (('for', 'in'), 'case'), (('all', 'in'), 'det:predet'), (('a', 'in'), 'det'), (('in', 'A\uf0e0'), 'nmod'), ((';', 'here'), 'punct'), (('here', 'A\uf0e0'), 'parataxis'), (('A', 'S’'), 'nsubj'), (('may', 'S’'), 'aux'), (('not', 'S’'), 'advmod'), (('be', 'S’'), 'cop'), (('S’', 'here'), 'cop'), (('.', 'A\uf0e0'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 200 ===========================

 If is in , then set action to “accept”. 

Tokens are: 
>> ['If', 'is', 'in', ',', 'then', 'set', 'action', 'to', '“', 'accept', '”', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('is', 'AUX'), ('in', 'ADV'), (',', 'PUNCT'), ('then', 'ADV'), ('set', 'VERB'), ('action', 'NOUN'), ('to', 'PART'), ('“', 'PUNCT'), ('accept', 'VERB'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('is', 'VBZ'), ('in', 'RB'), (',', ','), ('then', 'RB'), ('set', 'VB'), ('action', 'NN'), ('to', 'TO'), ('“', '``'), ('accept', 'VB'), ('”', "''"), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('is', 'be'), ('in', 'in'), (',', ','), ('then', 'then'), ('set', 'set'), ('action', 'action'), ('to', 'to'), ('“', "''"), ('accept', 'accept'), ('”', "''"), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'in'), 'mark'), (('is', 'in'), 'cop'), (('in', 'set'), 'advcl'), ((',', 'set'), 'punct'), (('then', 'set'), 'advmod'), (('set', 'root'), 'root'), (('action', 'set'), 'obj'), (('to', 'accept'), 'mark'), (('“', 'accept'), 'punct'), (('accept', 'set'), 'xcomp'), (('”', 'accept'), 'punct'), (('.', 'set'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 201 ===========================

 The goto transitions for state i are constructed for all non terminals A using the All entries not defined by rules 2 and 3 are made error. 

Tokens are: 
>> ['The', 'goto', 'transitions', 'for', 'state', 'i', 'are', 'constructed', 'for', 'all', 'non', 'terminals', 'A', 'using', 'the', 'All', 'entries', 'not', 'defined', 'by', 'rules', '2', 'and', '3', 'are', 'made', 'error', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goto', 'NOUN'), ('transitions', 'NOUN'), ('for', 'ADP'), ('state', 'NOUN'), ('i', 'PRON'), ('are', 'AUX'), ('constructed', 'VERB'), ('for', 'ADP'), ('all', 'DET'), ('non', 'NOUN'), ('terminals', 'NOUN'), ('A', 'DET'), ('using', 'VERB'), ('the', 'DET'), ('All', 'DET'), ('entries', 'NOUN'), ('not', 'ADV'), ('defined', 'VERB'), ('by', 'ADP'), ('rules', 'NOUN'), ('2', 'NUM'), ('and', 'CCONJ'), ('3', 'NUM'), ('are', 'AUX'), ('made', 'VERB'), ('error', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goto', 'NN'), ('transitions', 'NNS'), ('for', 'IN'), ('state', 'NN'), ('i', 'PRP'), ('are', 'VBP'), ('constructed', 'VBN'), ('for', 'IN'), ('all', 'DT'), ('non', 'NN'), ('terminals', 'NNS'), ('A', 'DT'), ('using', 'VBG'), ('the', 'DT'), ('All', 'DT'), ('entries', 'NNS'), ('not', 'RB'), ('defined', 'VBN'), ('by', 'IN'), ('rules', 'NNS'), ('2', 'CD'), ('and', 'CC'), ('3', 'CD'), ('are', 'VBP'), ('made', 'VBN'), ('error', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('goto', 'goto'), ('transitions', 'transition'), ('for', 'for'), ('state', 'state'), ('i', 'I'), ('are', 'be'), ('constructed', 'construct'), ('for', 'for'), ('all', 'all'), ('non', 'non'), ('terminals', 'terminal'), ('A', 'a'), ('using', 'use'), ('the', 'the'), ('All', 'all'), ('entries', 'entry'), ('not', 'not'), ('defined', 'define'), ('by', 'by'), ('rules', 'rule'), ('2', '2'), ('and', 'and'), ('3', '3'), ('are', 'be'), ('made', 'make'), ('error', 'error'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'transitions'), 'det'), (('goto', 'transitions'), 'compound'), (('transitions', 'constructed'), 'nsubj:pass'), (('for', 'state'), 'case'), (('state', 'transitions'), 'nmod'), (('i', 'constructed'), 'nsubj:pass'), (('are', 'constructed'), 'aux:pass'), (('constructed', 'root'), 'root'), (('for', 'terminals'), 'case'), (('all', 'terminals'), 'det'), (('non', 'terminals'), 'compound'), (('terminals', 'constructed'), 'obl'), (('A', 'using'), 'mark'), (('using', 'constructed'), 'advcl'), (('the', 'entries'), 'det'), (('All', 'entries'), 'det'), (('entries', 'using'), 'obj'), (('not', 'defined'), 'advmod'), (('defined', 'entries'), 'acl'), (('by', 'rules'), 'case'), (('rules', 'defined'), 'obl'), (('2', 'rules'), 'nummod'), (('and', '3'), 'cc'), (('3', '2'), 'conj'), (('are', 'made'), 'aux:pass'), (('made', 'constructed'), 'conj'), (('error', 'made'), 'xcomp'), (('.', 'constructed'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 202 ===========================

 Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: SLR(1)- simple LR 		Action			Go to	 	Item set	a	b	$	S	A 	0	S3 	S4		1	2 	1			Accept 		 	2	S3 	S4 			5 	3	S3 	S4 			6 	4	R3 	R3	R3		 	5			R1 		 	6	R2 	R2 	R2 		  S’. S S. AA A. aA A. b  S’ S.  S A . A A. aA A. b  A. aA A. b  A a . A A b.  A. aA A. b  A a . A A b.  A. aA A. b  A a . A A b.  S AA . 

Tokens are: 
>> ['Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'SLR', '(', '1', ')', '-', 'simple', 'LR', 'Action', 'Go', 'to', 'Item', 'set', 'a', 'b', '$', 'S', 'A', '0', 'S3', 'S4', '1', '2', '1', 'Accept', '2', 'S3', 'S4', '5', '3', 'S3', 'S4', '6', '4', 'R3', 'R3', 'R3', '5', 'R1', '6', 'R2', 'R2', 'R2', 'S’\uf0e0.', 'S', 'S\uf0e0.', 'AA', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'S’\uf0e0', 'S.', 'S\uf0e0', 'A', '.', 'A', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0', 'a', '.', 'A', 'A\uf0e0', 'b.', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0', 'a', '.', 'A', 'A\uf0e0', 'b.', 'A\uf0e0.', 'aA', 'A\uf0e0.', 'b', 'A\uf0e0', 'a', '.', 'A', 'A\uf0e0', 'b.', 'S\uf0e0', 'AA', '.'] 

 UPOS tags are: 
>> [('Prof.', 'PROPN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('SLR', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('-', 'PUNCT'), ('simple', 'ADJ'), ('LR', 'NOUN'), ('Action', 'NOUN'), ('Go', 'VERB'), ('to', 'ADP'), ('Item', 'NOUN'), ('set', 'VERB'), ('a', 'DET'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NUM'), ('A', 'DET'), ('0', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('Accept', 'NOUN'), ('2', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('5', 'NUM'), ('3', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('6', 'NUM'), ('4', 'NUM'), ('R3', 'NOUN'), ('R3', 'NOUN'), ('R3', 'NOUN'), ('5', 'NUM'), ('R1', 'NOUN'), ('6', 'NUM'), ('R2', 'NOUN'), ('R2', 'NOUN'), ('R2', 'NOUN'), ('S’\uf0e0.', 'NOUN'), ('S', 'NOUN'), ('S\uf0e0.', 'NOUN'), ('AA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('S’\uf0e0', 'NOUN'), ('S.', 'NOUN'), ('S\uf0e0', 'PROPN'), ('A', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0', 'PROPN'), ('b.', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0', 'PROPN'), ('b.', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('b', 'NOUN'), ('A\uf0e0', 'PROPN'), ('a', 'NOUN'), ('.', 'PUNCT'), ('A', 'DET'), ('A\uf0e0', 'PROPN'), ('b.', 'NOUN'), ('S\uf0e0', 'PROPN'), ('AA', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Prof.', 'NNP'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('SLR', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('-', ','), ('simple', 'JJ'), ('LR', 'NN'), ('Action', 'NN'), ('Go', 'VB'), ('to', 'IN'), ('Item', 'NN'), ('set', 'VB'), ('a', 'DT'), ('b', 'NN'), ('$', '$'), ('S', 'CD'), ('A', 'DT'), ('0', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NN'), ('2', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('5', 'CD'), ('3', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('6', 'CD'), ('4', 'CD'), ('R3', 'NN'), ('R3', 'NN'), ('R3', 'NN'), ('5', 'CD'), ('R1', 'NN'), ('6', 'CD'), ('R2', 'NN'), ('R2', 'NN'), ('R2', 'NN'), ('S’\uf0e0.', 'NN'), ('S', 'NN'), ('S\uf0e0.', 'NN'), ('AA', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('S’\uf0e0', 'NN'), ('S.', 'NN'), ('S\uf0e0', 'NNP'), ('A', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), ('A\uf0e0.', 'NN'), ('b', 'NN'), ('A\uf0e0', 'NNP'), ('a', 'NN'), ('.', '.'), ('A', 'DT'), ('A\uf0e0', 'NNP'), ('b.', 'NN'), ('S\uf0e0', 'NNP'), ('AA', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('SLR', 'slr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('simple', 'simple'), ('LR', 'lr'), ('Action', 'action'), ('Go', 'go'), ('to', 'to'), ('Item', 'item'), ('set', 'set'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S3', 's3'), ('S4', 's4'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('6', '6'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('R2', 'R2'), ('R2', 'R2'), ('R2', 'R2'), ('S’\uf0e0.', 's’\uf0e0.'), ('S', 's'), ('S\uf0e0.', 's\uf0e0.'), ('AA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('S’\uf0e0', 's’\uf0e0'), ('S.', 'S.'), ('S\uf0e0', 'S\uf0e0'), ('A', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), ('A\uf0e0', 'A\uf0e0'), ('a', 'a'), ('.', '.'), ('A', 'a'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'aa'), ('.', '.')] 

 Dependency tags are: 
>> [(('Prof.', 'root'), 'root'), (('Jay', 'Prof.'), 'flat'), (('R', 'Prof.'), 'flat'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'dep'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Kagathara'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Prof.'), 'appos'), ((':', 'Example'), 'punct'), (('SLR', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'SLR'), 'dep'), ((')', '1'), 'punct'), (('-', 'Prof.'), 'punct'), (('simple', 'Action'), 'amod'), (('LR', 'Action'), 'compound'), (('Action', 'Go'), 'nsubj'), (('Go', 'Prof.'), 'parataxis'), (('to', 'Item'), 'case'), (('Item', 'Go'), 'obl'), (('set', 'Go'), 'parataxis'), (('a', 'b'), 'det'), (('b', 'set'), 'obj'), (('$', 'set'), 'obj'), (('S', '$'), 'nummod'), (('A', 'S4'), 'det'), (('0', 'S4'), 'nummod'), (('S3', 'S4'), 'compound'), (('S4', '$'), 'appos'), (('1', 'Accept'), 'nummod'), (('2', 'Accept'), 'nummod'), (('1', 'Accept'), 'nummod'), (('Accept', 'S4'), 'appos'), (('2', 'S4'), 'nummod'), (('S3', 'S4'), 'compound'), (('S4', 'Accept'), 'appos'), (('5', 'S4'), 'nummod'), (('3', 'S4'), 'nummod'), (('S3', 'S4'), 'compound'), (('S4', 'S4'), 'appos'), (('6', 'R3'), 'nummod'), (('4', 'R3'), 'nummod'), (('R3', 'R3'), 'compound'), (('R3', 'S4'), 'compound'), (('R3', 'R3'), 'compound'), (('5', 'R1'), 'nummod'), (('R1', 'R3'), 'compound'), (('6', 'R1'), 'nummod'), (('R2', 'R1'), 'compound'), (('R2', 'R1'), 'compound'), (('R2', 'R2'), 'compound'), (('S’\uf0e0.', 'S\uf0e0.'), 'compound'), (('S', 'AA'), 'compound'), (('S\uf0e0.', 'R2'), 'compound'), (('AA', 'R2'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'AA'), 'appos'), (('S’\uf0e0', 'b'), 'compound'), (('S.', 'b'), 'compound'), (('S\uf0e0', 'A'), 'compound'), (('A', 'b'), 'nmod'), (('.', 'b'), 'punct'), (('A', 'b'), 'det'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'A'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b'), 'nmod'), (('A\uf0e0', 'a'), 'compound'), (('a', 'b'), 'appos'), (('.', 'b'), 'punct'), (('A', 'A\uf0e0'), 'det'), (('A\uf0e0', 'b'), 'compound'), (('b.', 'A\uf0e0'), 'dep'), (('A\uf0e0.', 'b.'), 'flat'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b.'), 'nmod'), (('A\uf0e0', 'a'), 'compound'), (('a', 'b'), 'appos'), (('.', 'b.'), 'punct'), (('A', 'A\uf0e0'), 'det'), (('A\uf0e0', 'b.'), 'compound'), (('b.', 'b'), 'appos'), (('A\uf0e0.', 'b.'), 'flat'), (('aA', 'b'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', 'b.'), 'appos'), (('A\uf0e0', 'a'), 'compound'), (('a', 'b'), 'appos'), (('.', 'b.'), 'punct'), (('A', 'A\uf0e0'), 'det'), (('A\uf0e0', 'a'), 'compound'), (('b.', 'A\uf0e0'), 'dep'), (('S\uf0e0', 'b.'), 'compound'), (('AA', 'b.'), 'appos'), (('.', 'Prof.'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 203 ===========================

 A aA .     3 6 5 3 3 4 4 4           S  AA A  aA | b                        Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['A\uf0e0', 'aA', '.', '3', '6', '5', '3', '3', '4', '4', '4', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'a', 'A', '|', 'b', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('A\uf0e0', 'PROPN'), ('aA', 'NUM'), ('.', 'PUNCT'), ('3', 'NUM'), ('6', 'NUM'), ('5', 'NUM'), ('3', 'NUM'), ('3', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('S', 'NOUN'), ('\uf0e0', 'NOUN'), ('AA', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('a', 'DET'), ('A', 'NOUN'), ('|', 'PUNCT'), ('b', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'NOUN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('A\uf0e0', 'NNP'), ('aA', 'LS'), ('.', '.'), ('3', 'CD'), ('6', 'CD'), ('5', 'CD'), ('3', 'CD'), ('3', 'CD'), ('4', 'CD'), ('4', 'CD'), ('4', 'CD'), ('S', 'NNS'), ('\uf0e0', 'NN'), ('AA', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('a', 'DT'), ('A', 'NN'), ('|', 'NFP'), ('b', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NN'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('A\uf0e0', 'A\uf0e0'), ('aA', 'aA'), ('.', '.'), ('3', '3'), ('6', '6'), ('5', '5'), ('3', '3'), ('3', '3'), ('4', '4'), ('4', '4'), ('4', '4'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('A', 'a'), ('|', '|'), ('b', 'b'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('A\uf0e0', 'root'), 'root'), (('aA', 'A\uf0e0'), 'nummod'), (('.', 'aA'), 'punct'), (('3', 'A\uf0e0'), 'nummod'), (('6', '3'), 'compound'), (('5', '3'), 'compound'), (('3', '5'), 'compound'), (('3', '4'), 'compound'), (('4', '5'), 'nummod'), (('4', 'S'), 'nummod'), (('4', 'S'), 'nummod'), (('S', '\uf0e0'), 'compound'), (('\uf0e0', 'AA'), 'compound'), (('AA', '3'), 'appos'), (('A', '\uf0e0'), 'det'), (('\uf0e0', 'AA'), 'appos'), (('a', 'b'), 'det'), (('A', '\uf0e0'), 'appos'), (('|', 'A'), 'punct'), (('b', '\uf0e0'), 'appos'), (('Prof.', '#'), 'compound'), (('Jay', '#'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'AA'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', '3'), 'appos'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Prof.'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Methods'), 'compound'), (('(', 'I'), 'punct'), (('I', 'Methods'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Unit'), 'appos'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 204 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 205 ===========================

 Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#› 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#', '›'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('Parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('LALR', 'NOUN'), ('CLR', 'NOUN'), ('SLR', 'NOUN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#', 'X'), ('›', 'PUNCT')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('Parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('LALR', 'NN'), ('CLR', 'NN'), ('SLR', 'NN'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'CD'), (')', '-RRB-'), ('‹#', 'ADD'), ('›', '-RRB-')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'lalr'), ('CLR', 'CLR'), ('SLR', 'slr'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#', '‹#'), ('›', "''")] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'Parsing'), 'punct'), (('predictive', 'Parsing'), 'amod'), (('Parsing', 'backtracking'), 'appos'), ((')', 'Parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obj'), (('LALR', 'precedence'), 'compound'), (('CLR', 'descent'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'appos'), (('LL', 'descent'), 'appos'), (('(', '1'), 'punct'), (('1', 'LL'), 'nummod'), ((')', '1'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'R'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'tracking'), 'parataxis'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'tracking'), 'parataxis'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'appos'), (('Kagathara', '#'), 'appos'), (('#', 'B'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', '‹#'), 'punct'), (('I', '‹#'), 'nummod'), ((')', 'I'), 'punct'), (('‹#', 'Theory'), 'appos'), (('›', '‹#'), 'punct')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]

========================== Sentence 206 ===========================

 How to calculate look ahead? 

Tokens are: 
>> ['How', 'to', 'calculate', 'look', 'ahead', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('to', 'PART'), ('calculate', 'VERB'), ('look', 'VERB'), ('ahead', 'ADV'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('to', 'TO'), ('calculate', 'VB'), ('look', 'VB'), ('ahead', 'RB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('to', 'to'), ('calculate', 'calculate'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'look'), 'advmod'), (('to', 'calculate'), 'mark'), (('calculate', 'look'), 'csubj'), (('look', 'root'), 'root'), (('ahead', 'look'), 'advmod'), (('?', 'look'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 207 ===========================

 How to calculate look ahead? 

Tokens are: 
>> ['How', 'to', 'calculate', 'look', 'ahead', '?'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('to', 'PART'), ('calculate', 'VERB'), ('look', 'VERB'), ('ahead', 'ADV'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('to', 'TO'), ('calculate', 'VB'), ('look', 'VB'), ('ahead', 'RB'), ('?', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('to', 'to'), ('calculate', 'calculate'), ('look', 'look'), ('ahead', 'ahead'), ('?', '?')] 

 Dependency tags are: 
>> [(('How', 'look'), 'advmod'), (('to', 'calculate'), 'mark'), (('calculate', 'look'), 'csubj'), (('look', 'root'), 'root'), (('ahead', 'look'), 'advmod'), (('?', 'look'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 208 ===========================

 SCC C cC | d Closure(I) 	S’.S,$ 	S.CC, 	C.cC, 	C.d,   	S’			.	S		,	$ 	A			.	X		,	     $ 	S			.	C	C	,	$ 	A			.	X		,	     c|d c|d    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: CLR(1)- canonical LR S  AA A  aA | b S’.S,$ S.AA,$  A.aA, a|b A.b, a|b  S’ S., $  S A.A,$ A.aA, $ A. b, $  A.aA ,a|b A. b, a|b   Aa.A, a|b A b., a|b  A. aA,$ A. b, $  A a.A,$ A b. ,$  A.aA , a|b A.b , a|b  A a.A , a|b A b., a|b  S AA. ,$   A aA.,a|b     3 8 5 6 3 7 4 4           Augmented grammar A aA.,$  9 A. aA,$ A. b, $  A a.A,$ A b. ,S  6 7     LR(1) item set     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: CLR(1)- canonical LR S  AA A  aA | b S’.S,$ S.AA,$  A.aA, a|b A.b, a|b  S’ S., $  S A.A,$ A.aA, $ A. b, $  A.aA ,a|b A. b, a|b   Aa.A, a|b A b., a|b  A. aA,$ A. b, $  A a.A,$ A b. ,S  A.a 

Tokens are: 
>> ['S\uf0e0CC', 'C\uf0e0', 'cC', '|', 'd', 'Closure', '(', 'I', ')', 'S’\uf0e0.S', ',', '$', 'S\uf0e0.CC', ',', 'C\uf0e0.cC', ',', 'C\uf0e0.d', ',', 'S’', '\uf0e0', '.', 'S', ',', '$', 'A', '\uf0e0', '.', 'X', ',', '$', 'S', '\uf0e0', '.', 'C', 'C', ',', '$', 'A', '\uf0e0', '.', 'X', ',', 'c|d', 'c|d', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'CLR', '(', '1', ')', '-', 'canonical', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'a', 'A', '|', 'b', 'S’\uf0e0.S', ',', '$', 'S\uf0e0.AA', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'S’\uf0e0', 'S.', ',', '$', 'S\uf0e0', 'A.A', ',', '$', 'A\uf0e0.aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.', 'b', ',', 'a|b', 'A\uf0e0a.', 'A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'A\uf0e0.', 'aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'A\uf0e0', 'a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'S\uf0e0', 'AA', '.', ',', '$', 'A\uf0e0', 'aA.', ',', 'a|b', '3', '8', '5', '6', '3', '7', '4', '4', 'Augmented', 'grammar', 'A\uf0e0', 'aA.', ',', '$', '9', 'A\uf0e0.', 'aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', 'S', '6', '7', 'LR', '(', '1', ')', 'item', 'set', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'CLR', '(', '1', ')', '-', 'canonical', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'a', 'A', '|', 'b', 'S’\uf0e0.S', ',', '$', 'S\uf0e0.AA', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'S’\uf0e0', 'S.', ',', '$', 'S\uf0e0', 'A.A', ',', '$', 'A\uf0e0.aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.', 'b', ',', 'a|b', 'A\uf0e0a.', 'A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'A\uf0e0.', 'aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', 'S', 'A\uf0e0.a'] 

 UPOS tags are: 
>> [('S\uf0e0CC', 'PROPN'), ('C\uf0e0', 'PROPN'), ('cC', 'NOUN'), ('|', 'PUNCT'), ('d', 'PROPN'), ('Closure', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('S’\uf0e0.S', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0.CC', 'PROPN'), (',', 'PUNCT'), ('C\uf0e0.cC', 'PROPN'), (',', 'PUNCT'), ('C\uf0e0.d', 'PROPN'), (',', 'PUNCT'), ('S’', 'PROPN'), ('\uf0e0', 'PROPN'), ('.', 'PUNCT'), ('S', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A', 'SYM'), ('\uf0e0', 'NUM'), ('.', 'PUNCT'), ('X', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('S', 'NUM'), ('\uf0e0', 'NUM'), ('.', 'PUNCT'), ('C', 'NOUN'), ('C', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A', 'SYM'), ('\uf0e0', 'NUM'), ('.', 'PUNCT'), ('X', 'PROPN'), (',', 'PUNCT'), ('c|d', 'PROPN'), ('c|d', 'PROPN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('CLR', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('-', 'PUNCT'), ('canonical', 'ADJ'), ('LR', 'PROPN'), ('S', 'NOUN'), ('\uf0e0', 'NOUN'), ('AA', 'NOUN'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('a', 'NOUN'), ('A', 'NOUN'), ('|', 'PUNCT'), ('b', 'NOUN'), ('S’\uf0e0.S', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0.AA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('S’\uf0e0', 'PROPN'), ('S.', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0', 'NUM'), ('A.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.', 'PROPN'), ('b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0a.', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('b.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NUM'), ('A\uf0e0.', 'PROPN'), ('aA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('a.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('b.', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('a.A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('b.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NUM'), ('S\uf0e0', 'PROPN'), ('AA', 'NOUN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('aA.', 'NUM'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('3', 'NUM'), ('8', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('3', 'NUM'), ('7', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('Augmented', 'VERB'), ('grammar', 'NOUN'), ('A\uf0e0', 'PROPN'), ('aA.', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('9', 'NUM'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('a.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('b.', 'NOUN'), (',', 'PUNCT'), ('S', 'PROPN'), ('6', 'NUM'), ('7', 'NUM'), ('LR', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('item', 'NOUN'), ('set', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('CLR', 'PROPN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('-', 'PUNCT'), ('canonical', 'ADJ'), ('LR', 'PROPN'), ('S', 'NOUN'), ('\uf0e0', 'NOUN'), ('AA', 'NOUN'), ('A', 'NOUN'), ('\uf0e0', 'NOUN'), ('a', 'NOUN'), ('A', 'NOUN'), ('|', 'PUNCT'), ('b', 'NOUN'), ('S’\uf0e0.S', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0.AA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('S’\uf0e0', 'PROPN'), ('S.', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0', 'NUM'), ('A.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.', 'PROPN'), ('b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0a.', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('b.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NUM'), ('A\uf0e0.', 'PROPN'), ('aA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('a.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('b.', 'NOUN'), (',', 'PUNCT'), ('S', 'PROPN'), ('A\uf0e0.a', 'PROPN')] 

 XPOS tags are: 
>> [('S\uf0e0CC', 'NNP'), ('C\uf0e0', 'NNP'), ('cC', 'NN'), ('|', ','), ('d', 'NNP'), ('Closure', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('S’\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.CC', 'NNP'), (',', ','), ('C\uf0e0.cC', 'NNP'), (',', ','), ('C\uf0e0.d', 'NNP'), (',', ','), ('S’', 'NNP'), ('\uf0e0', 'NNP'), ('.', '.'), ('S', 'NNP'), (',', ','), ('$', '$'), ('A', 'SYM'), ('\uf0e0', 'CD'), ('.', '.'), ('X', 'NN'), (',', ','), ('$', '$'), ('S', 'CD'), ('\uf0e0', 'CD'), ('.', '.'), ('C', 'NN'), ('C', 'NN'), (',', ','), ('$', '$'), ('A', 'SYM'), ('\uf0e0', 'CD'), ('.', '.'), ('X', 'NNP'), (',', ','), ('c|d', 'NNP'), ('c|d', 'NNP'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('CLR', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('-', ','), ('canonical', 'JJ'), ('LR', 'NNP'), ('S', 'NN'), ('\uf0e0', 'NN'), ('AA', 'NN'), ('A', 'NN'), ('\uf0e0', 'NN'), ('a', 'NN'), ('A', 'NN'), ('|', ','), ('b', 'NN'), ('S’\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('S’\uf0e0', 'NNP'), ('S.', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0', 'CD'), ('A.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.', 'NNP'), ('b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0a.', 'NNP'), ('A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('b.', 'NNP'), (',', ','), ('a|b', 'CD'), ('A\uf0e0.', 'NNP'), ('aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('b.', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('a.A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('b.', 'NNP'), (',', ','), ('a|b', 'CD'), ('S\uf0e0', 'NNP'), ('AA', 'NN'), ('.', '.'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('aA.', 'CD'), (',', ','), ('a|b', 'NNP'), ('3', 'CD'), ('8', 'CD'), ('5', 'CD'), ('6', 'CD'), ('3', 'CD'), ('7', 'CD'), ('4', 'CD'), ('4', 'CD'), ('Augmented', 'VBN'), ('grammar', 'NN'), ('A\uf0e0', 'NNP'), ('aA.', 'NNP'), (',', ','), ('$', '$'), ('9', 'CD'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('b.', 'NN'), (',', ','), ('S', 'NNP'), ('6', 'CD'), ('7', 'CD'), ('LR', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('item', 'NN'), ('set', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('CLR', 'NNP'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('-', ','), ('canonical', 'JJ'), ('LR', 'NNP'), ('S', 'NN'), ('\uf0e0', 'NN'), ('AA', 'NN'), ('A', 'NN'), ('\uf0e0', 'NN'), ('a', 'NN'), ('A', 'NN'), ('|', ','), ('b', 'NN'), ('S’\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('S’\uf0e0', 'NNP'), ('S.', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0', 'CD'), ('A.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.', 'NNP'), ('b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0a.', 'NNP'), ('A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('b.', 'NNP'), (',', ','), ('a|b', 'CD'), ('A\uf0e0.', 'NNP'), ('aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('b.', 'NN'), (',', ','), ('S', 'NNP'), ('A\uf0e0.a', 'NNP')] 

 Lemmas are: 
>> [('S\uf0e0CC', 'S\uf0e0CC'), ('C\uf0e0', 'C\uf0e0'), ('cC', 'cc'), ('|', '|'), ('d', 'd'), ('Closure', 'closure'), ('(', '('), ('I', 'i'), (')', ')'), ('S’\uf0e0.S', 'S’\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.CC', 'S\uf0e0.CC'), (',', ','), ('C\uf0e0.cC', 'C\uf0e0.cC'), (',', ','), ('C\uf0e0.d', 'C\uf0e0.d'), (',', ','), ('S’', 'be'), ('\uf0e0', '\uf0e0'), ('.', '.'), ('S', 'S'), (',', ','), ('$', '$'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('.', '.'), ('X', 'x'), (',', ','), ('$', '$'), ('S', 'S'), ('\uf0e0', '\uf0e0'), ('.', '.'), ('C', 'c'), ('C', 'c'), (',', ','), ('$', '$'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('.', '.'), ('X', 'X'), (',', ','), ('c|d', 'c|d'), ('c|d', 'c|d'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('CLR', 'CLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canonical'), ('LR', 'LR'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('A', 'a'), ('|', '|'), ('b', 'b'), ('S’\uf0e0.S', 'S’\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'S\uf0e0.AA'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S’\uf0e0', 'S’\uf0e0'), ('S.', 'S.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.', 'A\uf0e0.'), ('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.', 'A\uf0e0a.'), ('A', 'A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.', 'A\uf0e0.'), ('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'aa'), ('.', '.'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('Augmented', 'augment'), ('grammar', 'grammar'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), (',', ','), ('S', 'S'), ('6', '6'), ('7', '7'), ('LR', 'lr'), ('(', '('), ('1', '1'), (')', ')'), ('item', 'item'), ('set', 'set'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('CLR', 'CLR'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('canonical', 'canonical'), ('LR', 'LR'), ('S', 's'), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('A', 'a'), ('|', '|'), ('b', 'b'), ('S’\uf0e0.S', 'S’\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'S\uf0e0.AA'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S’\uf0e0', 'S’\uf0e0'), ('S.', 'S.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.', 'A\uf0e0.'), ('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.', 'A\uf0e0a.'), ('A', 'A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.', 'A\uf0e0.'), ('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), (',', ','), ('S', 'S'), ('A\uf0e0.a', 'A\uf0e0.a')] 

 Dependency tags are: 
>> [(('S\uf0e0CC', 'root'), 'root'), (('C\uf0e0', 'S\uf0e0CC'), 'flat'), (('cC', 'S\uf0e0CC'), 'flat'), (('|', 'cC'), 'punct'), (('d', 'Closure'), 'compound'), (('Closure', 'S\uf0e0CC'), 'flat'), (('(', 'I'), 'punct'), (('I', 'S’\uf0e0.S'), 'dep'), ((')', 'I'), 'punct'), (('S’\uf0e0.S', 'Closure'), 'conj'), ((',', '$'), 'punct'), (('$', 'S’\uf0e0.S'), 'conj'), (('S\uf0e0.CC', 'C\uf0e0.cC'), 'flat'), ((',', 'C\uf0e0.cC'), 'punct'), (('C\uf0e0.cC', '$'), 'conj'), ((',', 'C\uf0e0.cC'), 'punct'), (('C\uf0e0.d', 'C\uf0e0.cC'), 'compound'), ((',', '\uf0e0'), 'punct'), (('S’', '\uf0e0'), 'compound'), (('\uf0e0', '$'), 'conj'), (('.', 'S\uf0e0CC'), 'punct'), (('S', 'S’\uf0e0.S'), 'conj'), ((',', '$'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('A', '\uf0e0'), 'compound'), (('\uf0e0', '$'), 'nummod'), (('.', 'S\uf0e0CC'), 'punct'), (('X', 'S’\uf0e0.S'), 'conj'), ((',', '$'), 'punct'), (('$', 'X'), 'conj'), (('S', '\uf0e0'), 'compound'), (('\uf0e0', '$'), 'nummod'), (('.', 'S\uf0e0CC'), 'punct'), (('C', 'S\uf0e0CC'), 'conj'), (('C', 'C'), 'compound'), ((',', '$'), 'punct'), (('$', 'C'), 'dep'), (('A', '\uf0e0'), 'compound'), (('\uf0e0', '$'), 'nummod'), (('.', 'S’\uf0e0.S'), 'punct'), (('X', 'S\uf0e0CC'), 'conj'), ((',', 'c|d'), 'punct'), (('c|d', 'S\uf0e0CC'), 'conj'), (('c|d', 'c|d'), 'compound'), (('Prof.', 'S\uf0e0CC'), 'conj'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'S\uf0e0CC'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'S\uf0e0CC'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'S\uf0e0CC'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'S\uf0e0CC'), 'conj'), (('‹#›', 'S\uf0e0CC'), 'conj'), (('Prof.', 'S\uf0e0CC'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', 'S\uf0e0CC'), 'conj'), (('Kagathara', 'S\uf0e0CC'), 'conj'), (('#', 'S\uf0e0CC'), 'conj'), (('2170701', 'CD'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'S\uf0e0CC'), 'conj'), (('3', 'Unit'), 'compound'), (('–', 'S\uf0e0CC'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'S\uf0e0CC'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'dep'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'S\uf0e0CC'), 'conj'), ((':', 'Example'), 'punct'), (('CLR', 'Example'), 'dep'), (('(', '1'), 'punct'), (('1', 'CLR'), 'dep'), ((')', '1'), 'punct'), (('-', 'LR'), 'punct'), (('canonical', 'LR'), 'amod'), (('LR', 'S\uf0e0CC'), 'conj'), (('S', 'S\uf0e0CC'), 'conj'), (('\uf0e0', 'S\uf0e0CC'), 'conj'), (('AA', 'S\uf0e0CC'), 'dep'), (('A', '$'), 'conj'), (('\uf0e0', 'S’\uf0e0.S'), 'conj'), (('a', 'S’\uf0e0.S'), 'conj'), (('A', 'S’\uf0e0.S'), 'conj'), (('|', 'b'), 'punct'), (('b', 'S\uf0e0CC'), 'conj'), (('S’\uf0e0.S', 'b'), 'dep'), ((',', '$'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('S\uf0e0.AA', '$'), 'flat'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('A\uf0e0.aA', '$'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0.b', 'S’\uf0e0.S'), 'conj'), ((',', 'a|b'), 'punct'), (('a|b', 'S\uf0e0CC'), 'conj'), (('S’\uf0e0', '$'), 'conj'), (('S.', 'S\uf0e0CC'), 'flat'), ((',', '$'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('S\uf0e0', '$'), 'nummod'), (('A.A', '$'), 'dep'), ((',', '$'), 'punct'), (('$', 'S’\uf0e0.S'), 'conj'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('A\uf0e0.aA', '$'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'b'), 'compound'), (('A\uf0e0.', 'S’\uf0e0.S'), 'conj'), (('b', 'S’\uf0e0.S'), 'conj'), ((',', 'a|b'), 'punct'), (('a|b', 'S\uf0e0CC'), 'conj'), (('A\uf0e0a.', 'S\uf0e0CC'), 'conj'), (('A', 'S’\uf0e0.S'), 'conj'), ((',', 'a|b'), 'punct'), (('a|b', 'S\uf0e0CC'), 'conj'), (('A\uf0e0', 'S\uf0e0CC'), 'conj'), (('b.', '$'), 'conj'), ((',', 'A\uf0e0.'), 'punct'), (('a|b', 'A\uf0e0.'), 'compound'), (('A\uf0e0.', '$'), 'conj'), (('aA', '$'), 'conj'), ((',', 'S\uf0e0CC'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('A\uf0e0', '$'), 'nummod'), (('a.A', '$'), 'compound'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('A\uf0e0', '$'), 'nummod'), (('b.', '$'), 'compound'), ((',', '$'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('A\uf0e0.aA', '$'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0.b', '$'), 'compound'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0', 'a|b'), 'compound'), (('a.A', '$'), 'conj'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0', 'a|b'), 'compound'), (('b.', 'a|b'), 'compound'), ((',', 'AA'), 'punct'), (('a|b', 'AA'), 'nummod'), (('S\uf0e0', 'AA'), 'compound'), (('AA', 'b.'), 'conj'), (('.', 'S\uf0e0CC'), 'punct'), ((',', 'S\uf0e0CC'), 'punct'), (('$', 'S\uf0e0CC'), 'conj'), (('A\uf0e0', '$'), 'nummod'), (('aA.', '$'), 'nummod'), ((',', '$'), 'punct'), (('a|b', '$'), 'dep'), (('3', 'a|b'), 'compound'), (('8', '$'), 'nummod'), (('5', '$'), 'nummod'), (('6', 'grammar'), 'nummod'), (('3', 'grammar'), 'nummod'), (('7', 'grammar'), 'nummod'), (('4', 'grammar'), 'nummod'), (('4', 'grammar'), 'nummod'), (('Augmented', 'grammar'), 'amod'), (('grammar', 'a|b'), 'compound'), (('A\uf0e0', 'grammar'), 'compound'), (('aA.', 'grammar'), 'compound'), ((',', '$'), 'punct'), (('$', 'grammar'), 'compound'), (('9', '$'), 'nummod'), (('A\uf0e0.', '$'), 'compound'), (('aA', '$'), 'compound'), ((',', '$'), 'punct'), (('$', '$'), 'compound'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', 'aA'), 'compound'), (('A\uf0e0', '$'), 'nummod'), (('a.A', '$'), 'compound'), ((',', '$'), 'punct'), (('$', '$'), 'compound'), (('A\uf0e0', '$'), 'nummod'), (('b.', '$'), 'compound'), ((',', 'b.'), 'punct'), (('S', '$'), 'compound'), (('6', 'LR'), 'nummod'), (('7', 'LR'), 'nummod'), (('LR', '$'), 'compound'), (('(', '1'), 'punct'), (('1', 'item'), 'nummod'), ((')', '1'), 'punct'), (('item', 'set'), 'compound'), (('set', 'b.'), 'appos'), (('Prof.', 'set'), 'compound'), (('Jay', 'set'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'set'), 'compound'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'compound'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Prof.'), 'parataxis'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'compound'), (('‹#›', 'Probability'), 'compound'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', 'B'), 'compound'), (('#', 'B'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'compound'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'B'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'Theory'), 'appos'), ((':', 'Example'), 'punct'), (('CLR', 'Example'), 'appos'), (('(', '1'), 'punct'), (('1', 'CLR'), 'dep'), ((')', '1'), 'punct'), (('-', 'LR'), 'punct'), (('canonical', 'LR'), 'amod'), (('LR', 'Example'), 'appos'), (('S', 'LR'), 'compound'), (('\uf0e0', 'LR'), 'compound'), (('AA', 'LR'), 'compound'), (('A', 'AA'), 'compound'), (('\uf0e0', 'AA'), 'compound'), (('a', 'AA'), 'compound'), (('A', 'a'), 'compound'), (('|', 'A'), 'punct'), (('b', '\uf0e0'), 'compound'), (('S’\uf0e0.S', 'b'), 'compound'), ((',', 'b'), 'punct'), (('$', 'b'), 'appos'), (('S\uf0e0.AA', '$'), 'flat'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('a|b', '$'), 'appos'), (('A\uf0e0.b', '$'), 'appos'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'appos'), (('S’\uf0e0', 'a|b'), 'flat'), (('S.', 'a|b'), 'flat'), ((',', '$'), 'punct'), (('$', 'a|b'), 'parataxis'), (('S\uf0e0', '$'), 'nummod'), (('A.A', '$'), 'appos'), ((',', 'A.A'), 'punct'), (('$', 'A.A'), 'appos'), (('A\uf0e0.aA', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('a|b', '$'), 'appos'), (('A\uf0e0.', 'a|b'), 'flat'), (('b', 'a|b'), 'flat'), ((',', 'b'), 'punct'), (('a|b', 'b'), 'compound'), (('A\uf0e0a.', 'a|b'), 'flat'), (('A', 'a|b'), 'flat'), ((',', 'A\uf0e0a.'), 'punct'), (('a|b', 'A\uf0e0a.'), 'compound'), (('A\uf0e0', 'a|b'), 'flat'), (('b.', 'a|b'), 'flat'), ((',', 'b.'), 'punct'), (('a|b', 'A\uf0e0.'), 'nummod'), (('A\uf0e0.', 'b.'), 'appos'), (('aA', 'A\uf0e0.'), 'appos'), ((',', 'aA'), 'punct'), (('$', 'aA'), 'appos'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('a.A', '$'), 'appos'), ((',', '$'), 'punct'), (('$', 'a.A'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('b.', '$'), 'appos'), ((',', 'S'), 'punct'), (('S', 'b.'), 'appos'), (('A\uf0e0.a', 'S'), 'flat')]

 Named Entities are: 
>> [('S\uf0e0.CC', 'MONEY'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('A\uf0e0.aA', 'MONEY'), ('9', 'MONEY'), ('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('A\uf0e0.aA', 'MONEY')]

========================== Sentence 209 ===========================

 A , a|b A.b , a|b  A a.A , a|b A b., a|b  S AA. ,$   A aA.,a|b     3 8 5 6 3 7 4 4           A aA.,$  9 	Item set	Action			Go to	 		a	b	$	S	A 	0	S3	S4		1	2 	1			Accept		 	2	S6	S7			5 	3	S3	S4			8 	4	R3	R3			 	5			R1		 	6	S6	S7			9 	7			R3		 	8	R2	R2			 	9			R2		  A. aA,$ A. b, $  A a.A,$ A b. ,S  6 7                            Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Parsing Methods Parsing 

Tokens are: 
>> ['A', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'A\uf0e0', 'a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'S\uf0e0', 'AA', '.', ',', '$', 'A\uf0e0', 'aA.', ',', 'a|b', '3', '8', '5', '6', '3', '7', '4', '4', 'A\uf0e0', 'aA.', ',', '$', '9', 'Item', 'set', 'Action', 'Go', 'to', 'a', 'b', '$', 'S', 'A', '0', 'S3', 'S4', '1', '2', '1', 'Accept', '2', 'S6', 'S7', '5', '3', 'S3', 'S4', '8', '4', 'R3', 'R3', '5', 'R1', '6', 'S6', 'S7', '9', '7', 'R3', '8', 'R2', 'R2', '9', 'R2', 'A\uf0e0.', 'aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', 'S', '6', '7', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Parsing', 'Methods', 'Parsing'] 

 UPOS tags are: 
>> [('A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('a.A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('b.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('S\uf0e0', 'PROPN'), ('AA', 'NOUN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('aA.', 'NUM'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('3', 'NUM'), ('8', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('3', 'NUM'), ('7', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('A\uf0e0', 'PROPN'), ('aA.', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('9', 'NUM'), ('Item', 'NOUN'), ('set', 'NOUN'), ('Action', 'NOUN'), ('Go', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NUM'), ('A', 'DET'), ('0', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('Accept', 'NOUN'), ('2', 'NUM'), ('S6', 'NOUN'), ('S7', 'PROPN'), ('5', 'NUM'), ('3', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('8', 'NUM'), ('4', 'NUM'), ('R3', 'NOUN'), ('R3', 'NOUN'), ('5', 'NUM'), ('R1', 'NOUN'), ('6', 'NUM'), ('S6', 'NOUN'), ('S7', 'NUM'), ('9', 'NUM'), ('7', 'NUM'), ('R3', 'NOUN'), ('8', 'NUM'), ('R2', 'NOUN'), ('R2', 'NOUN'), ('9', 'NUM'), ('R2', 'NOUN'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('a.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('b.', 'NOUN'), (',', 'PUNCT'), ('S', 'PROPN'), ('6', 'NUM'), ('7', 'NUM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Parsing', 'NOUN'), ('Methods', 'NOUN'), ('Parsing', 'NOUN')] 

 XPOS tags are: 
>> [('A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('a.A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('b.', 'NNP'), (',', ','), ('a|b', 'NNP'), ('S\uf0e0', 'NNP'), ('AA', 'NN'), ('.', '.'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('aA.', 'CD'), (',', ','), ('a|b', 'NNP'), ('3', 'CD'), ('8', 'CD'), ('5', 'CD'), ('6', 'CD'), ('3', 'CD'), ('7', 'CD'), ('4', 'CD'), ('4', 'CD'), ('A\uf0e0', 'NNP'), ('aA.', 'NN'), (',', ','), ('$', '$'), ('9', 'CD'), ('Item', 'NN'), ('set', 'NN'), ('Action', 'NN'), ('Go', 'VB'), ('to', 'IN'), ('a', 'DT'), ('b', 'NN'), ('$', '$'), ('S', 'CD'), ('A', 'DT'), ('0', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NN'), ('2', 'CD'), ('S6', 'NN'), ('S7', 'NNP'), ('5', 'CD'), ('3', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('8', 'CD'), ('4', 'CD'), ('R3', 'NN'), ('R3', 'NN'), ('5', 'CD'), ('R1', 'NN'), ('6', 'CD'), ('S6', 'NN'), ('S7', 'CD'), ('9', 'CD'), ('7', 'CD'), ('R3', 'NN'), ('8', 'CD'), ('R2', 'NN'), ('R2', 'NN'), ('9', 'CD'), ('R2', 'NN'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('b.', 'NN'), (',', ','), ('S', 'NNP'), ('6', 'CD'), ('7', 'CD'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Parsing', 'NN'), ('Methods', 'NNS'), ('Parsing', 'NN')] 

 Lemmas are: 
>> [('A', 'A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'aa'), ('.', '.'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aa.'), (',', ','), ('$', '$'), ('9', '9'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('to', 'to'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S6', 's6'), ('S7', 'S7'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('8', '8'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('S6', 's6'), ('S7', 's7'), ('9', '9'), ('7', '7'), ('R3', 'r3'), ('8', '8'), ('R2', 'R2'), ('R2', 'R2'), ('9', '9'), ('R2', 'R2'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), (',', ','), ('S', 'S'), ('6', '6'), ('7', '7'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Parsing', 'parsing'), ('Methods', 'method'), ('Parsing', 'parsing')] 

 Dependency tags are: 
>> [(('A', 'root'), 'root'), ((',', 'A'), 'punct'), (('a|b', 'A'), 'flat'), (('A\uf0e0.b', 'A'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'A'), 'appos'), (('A\uf0e0', 'a|b'), 'flat'), (('a.A', 'a|b'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'A'), 'conj'), (('A\uf0e0', 'a|b'), 'flat'), (('b.', 'A'), 'list'), ((',', 'a|b'), 'punct'), (('a|b', 'A'), 'conj'), (('S\uf0e0', 'a|b'), 'flat'), (('AA', 'a|b'), 'flat'), (('.', 'A'), 'punct'), ((',', '$'), 'punct'), (('$', 'A'), 'list'), (('A\uf0e0', 'aA.'), 'compound'), (('aA.', '$'), 'nummod'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('3', 'a|b'), 'nummod'), (('8', 'a|b'), 'nummod'), (('5', 'a|b'), 'nummod'), (('6', '7'), 'nummod'), (('3', '7'), 'nummod'), (('7', 'aA.'), 'nummod'), (('4', 'aA.'), 'nummod'), (('4', 'aA.'), 'nummod'), (('A\uf0e0', 'aA.'), 'compound'), (('aA.', 'A'), 'appos'), ((',', 'aA.'), 'punct'), (('$', 'aA.'), 'appos'), (('9', '$'), 'nummod'), (('Item', 'Action'), 'compound'), (('set', 'Action'), 'compound'), (('Action', 'Go'), 'nsubj'), (('Go', 'A'), 'parataxis'), (('to', '$'), 'case'), (('a', '$'), 'det'), (('b', 'Go'), 'obl'), (('$', 'Go'), 'obl'), (('S', '$'), 'nummod'), (('A', 'S4'), 'det'), (('0', 'S4'), 'nummod'), (('S3', 'S4'), 'compound'), (('S4', '$'), 'appos'), (('1', 'Accept'), 'nummod'), (('2', 'Accept'), 'nummod'), (('1', 'Accept'), 'nummod'), (('Accept', 'S4'), 'appos'), (('2', 'S7'), 'nummod'), (('S6', 'S7'), 'compound'), (('S7', 'A'), 'appos'), (('5', 'S4'), 'nummod'), (('3', 'S3'), 'nummod'), (('S3', 'S4'), 'compound'), (('S4', 'A'), 'parataxis'), (('8', 'R3'), 'nummod'), (('4', 'R3'), 'nummod'), (('R3', 'R3'), 'compound'), (('R3', 'A'), 'parataxis'), (('5', 'R3'), 'nummod'), (('R1', 'R3'), 'appos'), (('6', 'R1'), 'nummod'), (('S6', 'R3'), 'compound'), (('S7', 'R3'), 'nummod'), (('9', 'R3'), 'nummod'), (('7', 'R3'), 'nummod'), (('R3', 'A'), 'parataxis'), (('8', 'R3'), 'nummod'), (('R2', 'A'), 'appos'), (('R2', 'A'), 'parataxis'), (('9', 'A\uf0e0.'), 'nummod'), (('R2', 'A\uf0e0.'), 'compound'), (('A\uf0e0.', 'R2'), 'appos'), (('aA', 'A\uf0e0.'), 'appos'), ((',', 'aA'), 'punct'), (('$', 'A'), 'parataxis'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('a.A', '$'), 'appos'), ((',', 'a.A'), 'punct'), (('$', 'A'), 'parataxis'), (('A\uf0e0', '$'), 'nummod'), (('b.', '$'), 'appos'), ((',', 'b.'), 'punct'), (('S', '$'), 'appos'), (('6', 'Prof.'), 'nummod'), (('7', 'Prof.'), 'nummod'), (('Prof.', 'Dhamsaniya'), 'compound'), (('Jay', 'Dhamsaniya'), 'compound'), (('R', 'Dhamsaniya'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'S'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', '#'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Kagathara'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Theory'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Methods'), 'compound'), (('Parsing', 'Methods'), 'compound'), (('Methods', 'Theory'), 'appos'), (('Parsing', 'Methods'), 'appos')]

 Named Entities are: 
>> [('3', 'CARDINAL')]

========================== Sentence 210 ===========================

 Top down parsing Bottom up parsing (Shift reduce) 

Tokens are: 
>> ['Top', 'down', 'parsing', 'Bottom', 'up', 'parsing', '(', 'Shift', 'reduce', ')'] 

 UPOS tags are: 
>> [('Top', 'VERB'), ('down', 'ADP'), ('parsing', 'NOUN'), ('Bottom', 'NOUN'), ('up', 'ADP'), ('parsing', 'NOUN'), ('(', 'PUNCT'), ('Shift', 'NOUN'), ('reduce', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Top', 'VB'), ('down', 'RP'), ('parsing', 'NN'), ('Bottom', 'NN'), ('up', 'RP'), ('parsing', 'NN'), ('(', '-LRB-'), ('Shift', 'NN'), ('reduce', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Top', 'top'), ('down', 'down'), ('parsing', 'parsing'), ('Bottom', 'bottom'), ('up', 'up'), ('parsing', 'parsing'), ('(', '('), ('Shift', 'shift'), ('reduce', 'reduce'), (')', ')')] 

 Dependency tags are: 
>> [(('Top', 'root'), 'root'), (('down', 'Top'), 'compound:prt'), (('parsing', 'Bottom'), 'compound'), (('Bottom', 'parsing'), 'compound'), (('up', 'parsing'), 'compound'), (('parsing', 'Top'), 'obj'), (('(', 'reduce'), 'punct'), (('Shift', 'reduce'), 'compound'), (('reduce', 'parsing'), 'appos'), ((')', 'reduce'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 211 ===========================

 Back tracking Parsing without backtracking (predictive Parsing) LR parsing Operator precedence LALR  CLR  SLR  Recursive  descent  LL(1)       Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara  #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  A aA.,a|b Example: LALR(1)- look ahead LR S  AA A  aA | b S’.S,$ S.AA,$  A.aA, a|b A.b, a|b  S’ S., $  S A.A,$ A.aA, $ A. b, $  A.aA ,a|b A. b, a|b   Aa.A, a|b A b., a|b  A. aA,$ A. b, $  A a.A,$ A b. ,$  A.aA , a|b A.b , a|b  A a.A , a|b A b., a|b  S AA. ,$       3 8 5 6 3 7 4 4           A aA.,$  9 A. aA,$ A. b, $  A a.A,$ A b. ,$  6 7                       CLR  36 A.a 

Tokens are: 
>> ['Back', 'tracking', 'Parsing', 'without', 'backtracking', '(', 'predictive', 'Parsing', ')', 'LR', 'parsing', 'Operator', 'precedence', 'LALR', 'CLR', 'SLR', 'Recursive', 'descent', 'LL', '(', '1', ')', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'A\uf0e0', 'aA.', ',', 'a|b', 'Example', ':', 'LALR', '(', '1', ')', '-', 'look', 'ahead', 'LR', 'S', '\uf0e0', 'AA', 'A', '\uf0e0', 'a', 'A', '|', 'b', 'S’\uf0e0.S', ',', '$', 'S\uf0e0.AA', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'S’\uf0e0', 'S.', ',', '$', 'S\uf0e0', 'A.A', ',', '$', 'A\uf0e0.aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.', 'b', ',', 'a|b', 'A\uf0e0a.', 'A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'A\uf0e0.', 'aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', '$', 'A\uf0e0.aA', ',', 'a|b', 'A\uf0e0.b', ',', 'a|b', 'A\uf0e0', 'a.A', ',', 'a|b', 'A\uf0e0', 'b.', ',', 'a|b', 'S\uf0e0', 'AA', '.', ',', '$', '3', '8', '5', '6', '3', '7', '4', '4', 'A\uf0e0', 'aA.', ',', '$', '9', 'A\uf0e0.', 'aA', ',', '$', 'A\uf0e0.', 'b', ',', '$', 'A\uf0e0', 'a.A', ',', '$', 'A\uf0e0', 'b.', ',', '$', '6', '7', 'CLR', '36', 'A\uf0e0.a'] 

 UPOS tags are: 
>> [('Back', 'ADV'), ('tracking', 'VERB'), ('Parsing', 'NOUN'), ('without', 'ADP'), ('backtracking', 'NOUN'), ('(', 'PUNCT'), ('predictive', 'ADJ'), ('Parsing', 'NOUN'), (')', 'PUNCT'), ('LR', 'NOUN'), ('parsing', 'NOUN'), ('Operator', 'NOUN'), ('precedence', 'NOUN'), ('LALR', 'NOUN'), ('CLR', 'NOUN'), ('SLR', 'NOUN'), ('Recursive', 'ADJ'), ('descent', 'NOUN'), ('LL', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('A\uf0e0', 'PROPN'), ('aA.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('LALR', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('-', 'PUNCT'), ('look', 'NOUN'), ('ahead', 'ADV'), ('LR', 'PROPN'), ('S', 'PART'), ('\uf0e0', 'PROPN'), ('AA', 'NOUN'), ('A', 'DET'), ('\uf0e0', 'NOUN'), ('a', 'DET'), ('A', 'NOUN'), ('|', 'PUNCT'), ('b', 'NOUN'), ('S’\uf0e0.S', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0.AA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('S’\uf0e0', 'PROPN'), ('S.', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('S\uf0e0', 'NUM'), ('A.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.', 'PROPN'), ('b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0a.', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('b.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.', 'PROPN'), ('aA', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('a.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('b.', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.aA', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0.b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('a.A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('A\uf0e0', 'PROPN'), ('b.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('S\uf0e0', 'PROPN'), ('AA', 'NOUN'), ('.', 'PUNCT'), (',', 'PUNCT'), ('$', 'SYM'), ('3', 'NUM'), ('8', 'NUM'), ('5', 'NUM'), ('6', 'NUM'), ('3', 'NUM'), ('7', 'NUM'), ('4', 'NUM'), ('4', 'NUM'), ('A\uf0e0', 'PROPN'), ('aA.', 'PROPN'), (',', 'PUNCT'), ('$', 'SYM'), ('9', 'NUM'), ('A\uf0e0.', 'NOUN'), ('aA', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0.', 'NUM'), ('b', 'NUM'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('a.A', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('A\uf0e0', 'NUM'), ('b.', 'NOUN'), (',', 'PUNCT'), ('$', 'SYM'), ('6', 'NUM'), ('7', 'NUM'), ('CLR', 'NOUN'), ('36', 'NUM'), ('A\uf0e0.a', 'NOUN')] 

 XPOS tags are: 
>> [('Back', 'RB'), ('tracking', 'VBG'), ('Parsing', 'NN'), ('without', 'IN'), ('backtracking', 'NN'), ('(', '-LRB-'), ('predictive', 'JJ'), ('Parsing', 'NN'), (')', '-RRB-'), ('LR', 'NN'), ('parsing', 'NN'), ('Operator', 'NN'), ('precedence', 'NN'), ('LALR', 'NN'), ('CLR', 'NN'), ('SLR', 'NN'), ('Recursive', 'JJ'), ('descent', 'NN'), ('LL', 'NN'), ('(', '-LRB-'), ('1', 'LS'), (')', '-RRB-'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('A\uf0e0', 'NNP'), ('aA.', 'NNP'), (',', ','), ('a|b', 'NN'), ('Example', 'NN'), (':', ':'), ('LALR', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('-', ','), ('look', 'NN'), ('ahead', 'RB'), ('LR', 'NNP'), ('S', 'POS'), ('\uf0e0', 'NNP'), ('AA', 'NN'), ('A', 'DT'), ('\uf0e0', 'NN'), ('a', 'DT'), ('A', 'NN'), ('|', 'NFP'), ('b', 'NN'), ('S’\uf0e0.S', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('S’\uf0e0', 'NNP'), ('S.', 'NNP'), (',', ','), ('$', '$'), ('S\uf0e0', 'CD'), ('A.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.', 'NNP'), ('b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0a.', 'NNP'), ('A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('b.', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.', 'NNP'), ('aA', 'NNP'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('b.', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0.b', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('a.A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('A\uf0e0', 'NNP'), ('b.', 'NNP'), (',', ','), ('a|b', 'NNP'), ('S\uf0e0', 'NNP'), ('AA', 'NN'), ('.', '.'), (',', ','), ('$', '$'), ('3', 'CD'), ('8', 'CD'), ('5', 'CD'), ('6', 'CD'), ('3', 'CD'), ('7', 'CD'), ('4', 'CD'), ('4', 'CD'), ('A\uf0e0', 'NNP'), ('aA.', 'NNP'), (',', ','), ('$', '$'), ('9', 'CD'), ('A\uf0e0.', 'NN'), ('aA', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0.', 'CD'), ('b', 'CD'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('a.A', 'NN'), (',', ','), ('$', '$'), ('A\uf0e0', 'CD'), ('b.', 'NN'), (',', ','), ('$', '$'), ('6', 'CD'), ('7', 'CD'), ('CLR', 'NN'), ('36', 'CD'), ('A\uf0e0.a', 'NN')] 

 Lemmas are: 
>> [('Back', 'back'), ('tracking', 'track'), ('Parsing', 'parsing'), ('without', 'without'), ('backtracking', 'backtracking'), ('(', '('), ('predictive', 'predictive'), ('Parsing', 'parsing'), (')', ')'), ('LR', 'lr'), ('parsing', 'parsing'), ('Operator', 'Operator'), ('precedence', 'precedence'), ('LALR', 'lalr'), ('CLR', 'CLR'), ('SLR', 'slr'), ('Recursive', 'recursive'), ('descent', 'descent'), ('LL', 'LL'), ('(', '('), ('1', '1'), (')', ')'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('Example', 'example'), (':', ':'), ('LALR', 'lalr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'LR'), ('S', "'s"), ('\uf0e0', '\uf0e0'), ('AA', 'aa'), ('A', 'a'), ('\uf0e0', '\uf0e0'), ('a', 'a'), ('A', 'a'), ('|', '|'), ('b', 'b'), ('S’\uf0e0.S', 'S’\uf0e0.S'), (',', ','), ('$', '$'), ('S\uf0e0.AA', 'S\uf0e0.AA'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('S’\uf0e0', 'S’\uf0e0'), ('S.', 'S.'), (',', ','), ('$', '$'), ('S\uf0e0', 's\uf0e0'), ('A.A', 'a.a'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.', 'A\uf0e0.'), ('b', 'b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0a.', 'A\uf0e0a.'), ('A', 'A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.', 'A\uf0e0.'), ('aA', 'aA'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), (',', ','), ('$', '$'), ('A\uf0e0.aA', 'A\uf0e0.aA'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0.b', 'A\uf0e0.b'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('a.A', 'a.A'), (',', ','), ('a|b', 'a|b'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'bear'), (',', ','), ('a|b', 'a|b'), ('S\uf0e0', 'S\uf0e0'), ('AA', 'aa'), ('.', '.'), (',', ','), ('$', '$'), ('3', '3'), ('8', '8'), ('5', '5'), ('6', '6'), ('3', '3'), ('7', '7'), ('4', '4'), ('4', '4'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('$', '$'), ('9', '9'), ('A\uf0e0.', 'a\uf0e0.'), ('aA', 'aa'), (',', ','), ('$', '$'), ('A\uf0e0.', 'a\uf0e0.'), ('b', 'b'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('a.A', 'a.A'), (',', ','), ('$', '$'), ('A\uf0e0', 'a\uf0e0'), ('b.', 'bear'), (',', ','), ('$', '$'), ('6', '6'), ('7', '7'), ('CLR', 'CLR'), ('36', '36'), ('A\uf0e0.a', 'a\uf0e0.a')] 

 Dependency tags are: 
>> [(('Back', 'tracking'), 'advmod'), (('tracking', 'root'), 'root'), (('Parsing', 'tracking'), 'obj'), (('without', 'backtracking'), 'case'), (('backtracking', 'tracking'), 'obl'), (('(', 'Parsing'), 'punct'), (('predictive', 'Parsing'), 'amod'), (('Parsing', 'backtracking'), 'appos'), ((')', 'Parsing'), 'punct'), (('LR', 'precedence'), 'compound'), (('parsing', 'Operator'), 'compound'), (('Operator', 'precedence'), 'compound'), (('precedence', 'tracking'), 'obj'), (('LALR', 'precedence'), 'compound'), (('CLR', 'SLR'), 'compound'), (('SLR', 'descent'), 'compound'), (('Recursive', 'descent'), 'amod'), (('descent', 'precedence'), 'conj'), (('LL', 'descent'), 'compound'), (('(', '1'), 'punct'), (('1', 'Jay'), 'dep'), ((')', '1'), 'punct'), (('Prof.', 'Jay'), 'compound'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'tracking'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'tracking'), 'conj'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'tracking'), 'conj'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'appos'), (('Dixita', 'B'), 'compound'), (('B', 'Prof.'), 'compound'), (('Kagathara', '#'), 'compound'), (('#', 'B'), 'compound'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'tracking'), 'conj'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'tracking'), 'conj'), (('(', 'I'), 'punct'), (('I', '‹#›'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'A\uf0e0'), 'compound'), (('A\uf0e0', 'tracking'), 'conj'), (('aA.', 'A\uf0e0'), 'flat'), ((',', 'Example'), 'punct'), (('a|b', 'Example'), 'compound'), (('Example', 'tracking'), 'conj'), ((':', 'tracking'), 'punct'), (('LALR', 'tracking'), 'dep'), (('(', '1'), 'punct'), (('1', 'LALR'), 'dep'), ((')', '1'), 'punct'), (('-', 'look'), 'punct'), (('look', 'tracking'), 'dep'), (('ahead', 'look'), 'advmod'), (('LR', '\uf0e0'), 'nmod:poss'), (('S', 'LR'), 'case'), (('\uf0e0', 'look'), 'dep'), (('AA', 'look'), 'dep'), (('A', '\uf0e0'), 'det'), (('\uf0e0', 'tracking'), 'dep'), (('a', 'b'), 'det'), (('A', 'b'), 'compound'), (('|', 'b'), 'punct'), (('b', 'tracking'), 'dep'), (('S’\uf0e0.S', 'b'), 'dep'), ((',', '$'), 'punct'), (('$', 'b'), 'appos'), (('S\uf0e0.AA', '$'), 'flat'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0.b', '$'), 'conj'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('S’\uf0e0', 'a|b'), 'flat'), (('S.', 'a|b'), 'flat'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('S\uf0e0', '$'), 'nummod'), (('A.A', '$'), 'dep'), ((',', '$'), 'punct'), (('$', '$'), 'dep'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'conj'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0.', '$'), 'flat'), (('b', '$'), 'conj'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0a.', 'a|b'), 'flat'), (('A', 'a|b'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'a|b'), 'compound'), (('A\uf0e0', 'a|b'), 'flat'), (('b.', 'a|b'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'a|b'), 'compound'), (('A\uf0e0.', 'a|b'), 'flat'), (('aA', 'a|b'), 'flat'), ((',', '$'), 'punct'), (('$', 'a|b'), 'parataxis'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('a.A', '$'), 'appos'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('b.', '$'), 'appos'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0.aA', '$'), 'flat'), ((',', '$'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0.b', '$'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', '$'), 'conj'), (('A\uf0e0', 'a|b'), 'flat'), (('a.A', 'a|b'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'a|b'), 'flat'), (('A\uf0e0', 'a|b'), 'flat'), (('b.', 'a|b'), 'flat'), ((',', 'a|b'), 'punct'), (('a|b', 'a|b'), 'compound'), (('S\uf0e0', 'a|b'), 'flat'), (('AA', 'a|b'), 'flat'), (('.', 'a|b'), 'punct'), ((',', '$'), 'punct'), (('$', 'a|b'), 'parataxis'), (('3', '$'), 'nummod'), (('8', '$'), 'nummod'), (('5', '$'), 'nummod'), (('6', '7'), 'compound'), (('3', 'A\uf0e0'), 'nummod'), (('7', 'A\uf0e0'), 'nummod'), (('4', 'A\uf0e0'), 'nummod'), (('4', 'A\uf0e0'), 'nummod'), (('A\uf0e0', 'aA.'), 'appos'), (('aA.', '$'), 'appos'), ((',', 'aA.'), 'punct'), (('$', 'aA.'), 'appos'), (('9', '$'), 'nummod'), (('A\uf0e0.', '$'), 'appos'), (('aA', '$'), 'appos'), ((',', 'aA'), 'punct'), (('$', 'aA'), 'appos'), (('A\uf0e0.', 'b'), 'compound'), (('b', '$'), 'nummod'), ((',', '$'), 'punct'), (('$', '$'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('a.A', '$'), 'appos'), ((',', '$'), 'punct'), (('$', 'a.A'), 'appos'), (('A\uf0e0', '$'), 'nummod'), (('b.', '$'), 'appos'), ((',', '$'), 'punct'), (('$', 'b.'), 'appos'), (('6', '$'), 'nummod'), (('7', 'CLR'), 'nummod'), (('CLR', '$'), 'appos'), (('36', 'CLR'), 'nummod'), (('A\uf0e0.a', 'CLR'), 'appos')]

 Named Entities are: 
>> [('#3130006', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL'), ('A\uf0e0.aA', 'MONEY'), ('9', 'MONEY'), ('A\uf0e0', 'MONEY'), ('6', 'MONEY')]

========================== Sentence 212 ===========================

 A , a|b|$ A. b, a|b|$  Aa.A, a|b|$ A b., a|b|$  47 A aA.,a|b|$  89    Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Example: LALR(1)- look ahead LR  	Item set	Action			Go to	 		a	b	$	S	A 	0	S3	S4		1	2 	1			Accept		 	2	S6	S7			5 	3	S3	S4			8 	4	R3	R3			 	5			R1		 	6	S6	S7			9 	7			R3		 	8	R2	R2			 	9			R2		   	Item set	Action			Go to	 		a	b	$	S	A 	0	S36	S47		1	2 	1			Accept		 	2	S36	S47			5 	36	S36	S47			89 	47	R3	R3	R3 		 	5			R1		 	89	R2	R2	R2 		 						  CLR Parsing Table LALR Parsing Table     Prof. Jay R Dhamsaniya #3130006 (PS)      Unit 1 – Basic Probability ‹#›   Prof. Dixita B Kagathara #2170701 (CD)      Unit 3 – Parsing Theory (I) ‹#›  Thank You                                       /docProps/thumbnail.jpeg 

Tokens are: 
>> ['A', ',', 'a|b', '|$', 'A\uf0e0.', 'b', ',', 'a|b', '|$', 'A\uf0e0a.', 'A', ',', 'a|b', '|$', 'A\uf0e0', 'b.', ',', 'a|b', '|$', '47', 'A\uf0e0', 'aA.', ',', 'a|b', '|$', '89', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Example', ':', 'LALR', '(', '1', ')', '-', 'look', 'ahead', 'LR', 'Item', 'set', 'Action', 'Go', 'to', 'a', 'b', '$', 'S', 'A', '0', 'S3', 'S4', '1', '2', '1', 'Accept', '2', 'S6', 'S7', '5', '3', 'S3', 'S4', '8', '4', 'R3', 'R3', '5', 'R1', '6', 'S6', 'S7', '9', '7', 'R3', '8', 'R2', 'R2', '9', 'R2', 'Item', 'set', 'Action', 'Go', 'to', 'a', 'b', '$', 'S', 'A', '0', 'S36', 'S47', '1', '2', '1', 'Accept', '2', 'S36', 'S47', '5', '36', 'S36', 'S47', '89', '47', 'R3', 'R3', 'R3', '5', 'R1', '89', 'R2', 'R2', 'R2', 'CLR', 'Parsing', 'Table', 'LALR', 'Parsing', 'Table', 'Prof.', 'Jay', 'R', 'Dhamsaniya', '#', '3130006', '(', 'PS', ')', '\uf077', 'Unit', '1', '–', 'Basic', 'Probability', '‹#›', 'Prof.', 'Dixita', 'B', 'Kagathara', '#', '2170701', '(', 'CD', ')', '\uf077', 'Unit', '3', '–', 'Parsing', 'Theory', '(', 'I', ')', '‹#›', 'Thank', 'You', '/docProps/thumbnail.jpeg'] 

 UPOS tags are: 
>> [('A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'PROPN'), ('|$', 'PROPN'), ('A\uf0e0.', 'PROPN'), ('b', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NOUN'), ('|$', 'NOUN'), ('A\uf0e0a.', 'PROPN'), ('A', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NOUN'), ('|$', 'NOUN'), ('A\uf0e0', 'PROPN'), ('b.', 'X'), (',', 'PUNCT'), ('a|b', 'NOUN'), ('|$', 'NOUN'), ('47', 'NUM'), ('A\uf0e0', 'PROPN'), ('aA.', 'PROPN'), (',', 'PUNCT'), ('a|b', 'NUM'), ('|$', 'NOUN'), ('89', 'NUM'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'NOUN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('LALR', 'NOUN'), ('(', 'PUNCT'), ('1', 'NUM'), (')', 'PUNCT'), ('-', 'PUNCT'), ('look', 'VERB'), ('ahead', 'ADV'), ('LR', 'NOUN'), ('Item', 'NOUN'), ('set', 'NOUN'), ('Action', 'NOUN'), ('Go', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NUM'), ('A', 'DET'), ('0', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('Accept', 'NOUN'), ('2', 'NUM'), ('S6', 'NOUN'), ('S7', 'NUM'), ('5', 'NUM'), ('3', 'NUM'), ('S3', 'NOUN'), ('S4', 'NOUN'), ('8', 'NUM'), ('4', 'NUM'), ('R3', 'NOUN'), ('R3', 'NOUN'), ('5', 'NUM'), ('R1', 'NOUN'), ('6', 'NUM'), ('S6', 'NOUN'), ('S7', 'NUM'), ('9', 'NUM'), ('7', 'NUM'), ('R3', 'NOUN'), ('8', 'NUM'), ('R2', 'NOUN'), ('R2', 'NOUN'), ('9', 'NUM'), ('R2', 'NOUN'), ('Item', 'NOUN'), ('set', 'NOUN'), ('Action', 'NOUN'), ('Go', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('b', 'NOUN'), ('$', 'SYM'), ('S', 'NUM'), ('A', 'DET'), ('0', 'NUM'), ('S36', 'NOUN'), ('S47', 'NOUN'), ('1', 'NUM'), ('2', 'NUM'), ('1', 'NUM'), ('Accept', 'NOUN'), ('2', 'NUM'), ('S36', 'NOUN'), ('S47', 'NOUN'), ('5', 'NUM'), ('36', 'NUM'), ('S36', 'NOUN'), ('S47', 'NOUN'), ('89', 'NUM'), ('47', 'NUM'), ('R3', 'NOUN'), ('R3', 'NOUN'), ('R3', 'NOUN'), ('5', 'NUM'), ('R1', 'NOUN'), ('89', 'NUM'), ('R2', 'NOUN'), ('R2', 'NOUN'), ('R2', 'NOUN'), ('CLR', 'NOUN'), ('Parsing', 'NOUN'), ('Table', 'NOUN'), ('LALR', 'NOUN'), ('Parsing', 'NOUN'), ('Table', 'NOUN'), ('Prof.', 'NOUN'), ('Jay', 'PROPN'), ('R', 'PROPN'), ('Dhamsaniya', 'PROPN'), ('#', 'SYM'), ('3130006', 'NUM'), ('(', 'PUNCT'), ('PS', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('1', 'NUM'), ('–', 'PUNCT'), ('Basic', 'ADJ'), ('Probability', 'NOUN'), ('‹#›', 'NOUN'), ('Prof.', 'NOUN'), ('Dixita', 'PROPN'), ('B', 'NOUN'), ('Kagathara', 'PROPN'), ('#', 'SYM'), ('2170701', 'NUM'), ('(', 'PUNCT'), ('CD', 'NOUN'), (')', 'PUNCT'), ('\uf077', 'NUM'), ('Unit', 'NOUN'), ('3', 'NUM'), ('–', 'PUNCT'), ('Parsing', 'NOUN'), ('Theory', 'NOUN'), ('(', 'PUNCT'), ('I', 'NUM'), (')', 'PUNCT'), ('‹#›', 'NOUN'), ('Thank', 'VERB'), ('You', 'PRON'), ('/docProps/thumbnail.jpeg', 'X')] 

 XPOS tags are: 
>> [('A', 'NNP'), (',', ','), ('a|b', 'NNP'), ('|$', 'NNP'), ('A\uf0e0.', 'NNP'), ('b', 'NNP'), (',', ','), ('a|b', 'NN'), ('|$', 'NN'), ('A\uf0e0a.', 'NNP'), ('A', 'NNP'), (',', ','), ('a|b', 'NN'), ('|$', 'NN'), ('A\uf0e0', 'NNP'), ('b.', 'FW'), (',', ','), ('a|b', 'NN'), ('|$', 'NN'), ('47', 'CD'), ('A\uf0e0', 'NNP'), ('aA.', 'NNP'), (',', ','), ('a|b', 'CD'), ('|$', 'NN'), ('89', 'CD'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NN'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Example', 'NN'), (':', ':'), ('LALR', 'NN'), ('(', '-LRB-'), ('1', 'CD'), (')', '-RRB-'), ('-', ','), ('look', 'VB'), ('ahead', 'RB'), ('LR', 'NN'), ('Item', 'NN'), ('set', 'NN'), ('Action', 'NN'), ('Go', 'VB'), ('to', 'IN'), ('a', 'DT'), ('b', 'NN'), ('$', '$'), ('S', 'CD'), ('A', 'DT'), ('0', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NN'), ('2', 'CD'), ('S6', 'NN'), ('S7', 'CD'), ('5', 'CD'), ('3', 'CD'), ('S3', 'NN'), ('S4', 'NN'), ('8', 'CD'), ('4', 'CD'), ('R3', 'NN'), ('R3', 'NN'), ('5', 'CD'), ('R1', 'NN'), ('6', 'CD'), ('S6', 'NN'), ('S7', 'CD'), ('9', 'CD'), ('7', 'CD'), ('R3', 'NN'), ('8', 'CD'), ('R2', 'NN'), ('R2', 'NN'), ('9', 'CD'), ('R2', 'NN'), ('Item', 'NN'), ('set', 'NN'), ('Action', 'NN'), ('Go', 'VB'), ('to', 'IN'), ('a', 'DT'), ('b', 'NN'), ('$', '$'), ('S', 'CD'), ('A', 'DT'), ('0', 'CD'), ('S36', 'NN'), ('S47', 'NN'), ('1', 'CD'), ('2', 'CD'), ('1', 'CD'), ('Accept', 'NN'), ('2', 'CD'), ('S36', 'NN'), ('S47', 'NN'), ('5', 'CD'), ('36', 'CD'), ('S36', 'NN'), ('S47', 'NN'), ('89', 'CD'), ('47', 'CD'), ('R3', 'NN'), ('R3', 'NN'), ('R3', 'NN'), ('5', 'CD'), ('R1', 'NN'), ('89', 'CD'), ('R2', 'NN'), ('R2', 'NN'), ('R2', 'NN'), ('CLR', 'NN'), ('Parsing', 'NN'), ('Table', 'NN'), ('LALR', 'NN'), ('Parsing', 'NN'), ('Table', 'NN'), ('Prof.', 'NN'), ('Jay', 'NNP'), ('R', 'NNP'), ('Dhamsaniya', 'NNP'), ('#', 'NN'), ('3130006', 'CD'), ('(', '-LRB-'), ('PS', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('1', 'CD'), ('–', ','), ('Basic', 'JJ'), ('Probability', 'NN'), ('‹#›', 'NN'), ('Prof.', 'NN'), ('Dixita', 'NNP'), ('B', 'NN'), ('Kagathara', 'NNP'), ('#', 'NN'), ('2170701', 'CD'), ('(', '-LRB-'), ('CD', 'NN'), (')', '-RRB-'), ('\uf077', 'CD'), ('Unit', 'NN'), ('3', 'CD'), ('–', ','), ('Parsing', 'NN'), ('Theory', 'NN'), ('(', '-LRB-'), ('I', 'LS'), (')', '-RRB-'), ('‹#›', 'NN'), ('Thank', 'VBP'), ('You', 'PRP'), ('/docProps/thumbnail.jpeg', 'ADD')] 

 Lemmas are: 
>> [('A', 'A'), (',', ','), ('a|b', 'a|b'), ('|$', '|$'), ('A\uf0e0.', 'A\uf0e0.'), ('b', 'b'), (',', ','), ('a|b', 'a|b'), ('|$', '|'), ('A\uf0e0a.', 'A\uf0e0a.'), ('A', 'A'), (',', ','), ('a|b', 'a|b'), ('|$', '|'), ('A\uf0e0', 'A\uf0e0'), ('b.', 'b.'), (',', ','), ('a|b', 'a|b'), ('|$', '|'), ('47', '47'), ('A\uf0e0', 'A\uf0e0'), ('aA.', 'aA.'), (',', ','), ('a|b', 'a|b'), ('|$', '|'), ('89', '89'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Example', 'example'), (':', ':'), ('LALR', 'lalr'), ('(', '('), ('1', '1'), (')', ')'), ('-', '-'), ('look', 'look'), ('ahead', 'ahead'), ('LR', 'lr'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('to', 'to'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'a'), ('0', '0'), ('S3', 's3'), ('S4', 's4'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S6', 's6'), ('S7', 's7'), ('5', '5'), ('3', '3'), ('S3', 's3'), ('S4', 's4'), ('8', '8'), ('4', '4'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('6', '6'), ('S6', 's6'), ('S7', 's7'), ('9', '9'), ('7', '7'), ('R3', 'r3'), ('8', '8'), ('R2', 'R2'), ('R2', 'R2'), ('9', '9'), ('R2', 'R2'), ('Item', 'item'), ('set', 'set'), ('Action', 'action'), ('Go', 'go'), ('to', 'to'), ('a', 'a'), ('b', 'b'), ('$', '$'), ('S', 'S'), ('A', 'a'), ('0', '0'), ('S36', 's36'), ('S47', 's47'), ('1', '1'), ('2', '2'), ('1', '1'), ('Accept', 'accept'), ('2', '2'), ('S36', 's36'), ('S47', 's47'), ('5', '5'), ('36', '36'), ('S36', 's36'), ('S47', 's47'), ('89', '89'), ('47', '47'), ('R3', 'r3'), ('R3', 'r3'), ('R3', 'r3'), ('5', '5'), ('R1', 'r1'), ('89', '89'), ('R2', 'R2'), ('R2', 'R2'), ('R2', 'R2'), ('CLR', 'CLR'), ('Parsing', 'parsing'), ('Table', 'table'), ('LALR', 'lalr'), ('Parsing', 'parsing'), ('Table', 'table'), ('Prof.', 'Prof.'), ('Jay', 'Jay'), ('R', 'R'), ('Dhamsaniya', 'Dhamsaniya'), ('#', '#'), ('3130006', '3130006'), ('(', '('), ('PS', 'ps'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('1', '1'), ('–', '-'), ('Basic', 'basic'), ('Probability', 'probability'), ('‹#›', '‹#›'), ('Prof.', 'Prof.'), ('Dixita', 'Dixita'), ('B', 'b'), ('Kagathara', 'Kagathara'), ('#', '#'), ('2170701', '2170701'), ('(', '('), ('CD', 'cd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('3', '3'), ('–', '-'), ('Parsing', 'parsing'), ('Theory', 'theory'), ('(', '('), ('I', 'i'), (')', ')'), ('‹#›', '‹#›'), ('Thank', 'thank'), ('You', 'you'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')] 

 Dependency tags are: 
>> [(('A', 'root'), 'root'), ((',', 'A'), 'punct'), (('a|b', 'A'), 'flat'), (('|$', 'A'), 'flat'), (('A\uf0e0.', 'a|b'), 'flat'), (('b', 'A'), 'flat'), ((',', '|$'), 'punct'), (('a|b', '|$'), 'compound'), (('|$', 'A'), 'appos'), (('A\uf0e0a.', '|$'), 'flat'), (('A', '|$'), 'flat'), ((',', '|$'), 'punct'), (('a|b', '|$'), 'compound'), (('|$', 'A'), 'conj'), (('A\uf0e0', '|$'), 'compound'), (('b.', '|$'), 'dep'), ((',', '|$'), 'punct'), (('a|b', '|$'), 'compound'), (('|$', 'A'), 'conj'), (('47', '|$'), 'nummod'), (('A\uf0e0', 'aA.'), 'compound'), (('aA.', '|$'), 'conj'), ((',', 'aA.'), 'punct'), (('a|b', '|$'), 'nummod'), (('|$', 'aA.'), 'appos'), (('89', '|$'), 'nummod'), (('Prof.', '|$'), 'compound'), (('Jay', 'R'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'A'), 'conj'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'A'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'A'), 'conj'), (('‹#›', 'A'), 'appos'), (('Prof.', 'A'), 'conj'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', 'A'), 'conj'), (('#', 'A'), 'conj'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', 'Unit'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'A'), 'parataxis'), (('3', 'Unit'), 'nummod'), (('–', 'A'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'A'), 'conj'), (('(', 'I'), 'punct'), (('I', 'Example'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'Example'), 'compound'), (('Example', 'A'), 'parataxis'), ((':', 'Example'), 'punct'), (('LALR', 'A'), 'parataxis'), (('(', '1'), 'punct'), (('1', 'LALR'), 'nummod'), ((')', '1'), 'punct'), (('-', 'look'), 'punct'), (('look', 'A'), 'parataxis'), (('ahead', 'look'), 'advmod'), (('LR', 'Action'), 'compound'), (('Item', 'Action'), 'compound'), (('set', 'Action'), 'compound'), (('Action', 'Go'), 'compound'), (('Go', 'A'), 'parataxis'), (('to', '$'), 'case'), (('a', '$'), 'det'), (('b', 'Go'), 'obl'), (('$', 'Go'), 'obl'), (('S', '$'), 'nummod'), (('A', 'S4'), 'det'), (('0', 'S4'), 'nummod'), (('S3', 'S4'), 'compound'), (('S4', 'A'), 'parataxis'), (('1', 'S4'), 'nummod'), (('2', 'Accept'), 'nummod'), (('1', 'Accept'), 'nummod'), (('Accept', 'A'), 'parataxis'), (('2', 'S6'), 'compound'), (('S6', 'Accept'), 'compound'), (('S7', 'A'), 'dep'), (('5', 'S4'), 'nummod'), (('3', 'S3'), 'nummod'), (('S3', 'A'), 'parataxis'), (('S4', 'A'), 'parataxis'), (('8', 'S4'), 'nummod'), (('4', 'R3'), 'nummod'), (('R3', 'S4'), 'compound'), (('R3', 'A'), 'parataxis'), (('5', 'R3'), 'nummod'), (('R1', 'R3'), 'compound'), (('6', 'S6'), 'nummod'), (('S6', 'R3'), 'compound'), (('S7', 'R3'), 'nummod'), (('9', 'R3'), 'nummod'), (('7', 'R3'), 'nummod'), (('R3', 'A'), 'parataxis'), (('8', 'R3'), 'nummod'), (('R2', 'A'), 'parataxis'), (('R2', 'A'), 'parataxis'), (('9', 'Item'), 'nummod'), (('R2', 'Item'), 'compound'), (('Item', 'Action'), 'compound'), (('set', 'Action'), 'compound'), (('Action', 'A'), 'conj'), (('Go', 'A'), 'parataxis'), (('to', '$'), 'case'), (('a', '$'), 'det'), (('b', 'Go'), 'obl'), (('$', 'Go'), 'obl'), (('S', '$'), 'nummod'), (('A', 'S47'), 'det'), (('0', 'S36'), 'nummod'), (('S36', 'S47'), 'compound'), (('S47', '$'), 'appos'), (('1', 'Accept'), 'nummod'), (('2', 'Accept'), 'nummod'), (('1', 'Accept'), 'nummod'), (('Accept', 'S47'), 'appos'), (('2', 'S47'), 'nummod'), (('S36', 'S47'), 'compound'), (('S47', 'Accept'), 'appos'), (('5', 'S47'), 'nummod'), (('36', 'S47'), 'nummod'), (('S36', 'S47'), 'compound'), (('S47', 'S47'), 'appos'), (('89', 'R3'), 'nummod'), (('47', 'R3'), 'nummod'), (('R3', 'R3'), 'compound'), (('R3', 'S47'), 'compound'), (('R3', 'S47'), 'compound'), (('5', 'R1'), 'nummod'), (('R1', 'R2'), 'compound'), (('89', 'R2'), 'nummod'), (('R2', 'R3'), 'compound'), (('R2', 'R3'), 'compound'), (('R2', 'Table'), 'compound'), (('CLR', 'Table'), 'compound'), (('Parsing', 'Table'), 'compound'), (('Table', 'R2'), 'compound'), (('LALR', 'Table'), 'compound'), (('Parsing', 'Table'), 'compound'), (('Table', 'Table'), 'appos'), (('Prof.', 'Table'), 'compound'), (('Jay', 'Dhamsaniya'), 'compound'), (('R', '#'), 'compound'), (('Dhamsaniya', '#'), 'compound'), (('#', 'Table'), 'appos'), (('3130006', '#'), 'nummod'), (('(', 'PS'), 'punct'), (('PS', 'Unit'), 'appos'), ((')', 'PS'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', '#'), 'appos'), (('1', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Basic', 'Probability'), 'amod'), (('Probability', 'Unit'), 'appos'), (('‹#›', 'Probability'), 'appos'), (('Prof.', 'Probability'), 'compound'), (('Dixita', 'B'), 'compound'), (('B', '#'), 'compound'), (('Kagathara', 'Probability'), 'appos'), (('#', 'Probability'), 'appos'), (('2170701', '#'), 'nummod'), (('(', 'CD'), 'punct'), (('CD', '#'), 'appos'), ((')', 'CD'), 'punct'), (('\uf077', 'Unit'), 'nummod'), (('Unit', 'Kagathara'), 'appos'), (('3', 'Unit'), 'nummod'), (('–', 'Unit'), 'punct'), (('Parsing', 'Theory'), 'compound'), (('Theory', 'Unit'), 'appos'), (('(', 'I'), 'punct'), (('I', 'Thank'), 'nummod'), ((')', 'I'), 'punct'), (('‹#›', 'A'), 'parataxis'), (('Thank', 'Theory'), 'parataxis'), (('You', 'Thank'), 'obj'), (('/docProps/thumbnail.jpeg', 'Thank'), 'obj')]

 Named Entities are: 
>> [('3', 'CARDINAL'), ('1', 'CARDINAL'), ('2170701', 'CARDINAL'), ('3', 'CARDINAL')]