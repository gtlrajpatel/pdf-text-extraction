

========================== Sentence 1 ===========================

 OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-2 Stream ciphers and block ciphers      1  Unit-2 Stream ciphers and block ciphers Block Cipher structure Data Encryption standard (DES) 

Tokens are: 
>> ['OOPC', '++', 'UNIT', '-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav@darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', 'UNIT', '-', '2', 'Stream', 'ciphers', 'and', 'block', 'ciphers', '1', 'Unit', '-2', 'Stream', 'ciphers', 'and', 'block', 'ciphers', 'Block', 'Cipher', 'structure', 'Data', 'Encryption', 'standard', '(', 'DES', ')'] 

 UPOS tags are: 
>> [('OOPC', 'PROPN'), ('++', 'NUM'), ('UNIT', 'NOUN'), ('-1', 'NOUN'), ('Prof.', 'PROPN'), ('Rupesh', 'PROPN'), ('G.', 'PROPN'), ('Vaishnav', 'PROPN'), ('rupesh.vaishnav@darshan.ac.in', 'X'), ('94280-37452', 'NUM'), ('Information', 'NOUN'), ('&', 'CCONJ'), ('Network', 'PROPN'), ('Security', 'PROPN'), ('(', 'PUNCT'), ('2170709', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('UNIT', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), ('Stream', 'NOUN'), ('ciphers', 'NOUN'), ('and', 'CCONJ'), ('block', 'NOUN'), ('ciphers', 'NOUN'), ('1', 'NUM'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Stream', 'NOUN'), ('ciphers', 'NOUN'), ('and', 'CCONJ'), ('block', 'NOUN'), ('ciphers', 'NOUN'), ('Block', 'NOUN'), ('Cipher', 'NOUN'), ('structure', 'NOUN'), ('Data', 'NOUN'), ('Encryption', 'NOUN'), ('standard', 'NOUN'), ('(', 'PUNCT'), ('DES', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('OOPC', 'NNP'), ('++', 'CD'), ('UNIT', 'NN'), ('-1', 'NN'), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav@darshan.ac.in', 'ADD'), ('94280-37452', 'CD'), ('Information', 'NN'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NNP'), ('(', '-LRB-'), ('2170709', 'CD'), (')', '-RRB-'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('UNIT', 'NN'), ('-', ','), ('2', 'CD'), ('Stream', 'NN'), ('ciphers', 'NNS'), ('and', 'CC'), ('block', 'NN'), ('ciphers', 'NNS'), ('1', 'CD'), ('Unit', 'NN'), ('-2', 'CD'), ('Stream', 'NN'), ('ciphers', 'NNS'), ('and', 'CC'), ('block', 'NN'), ('ciphers', 'NNS'), ('Block', 'NN'), ('Cipher', 'NN'), ('structure', 'NN'), ('Data', 'NN'), ('Encryption', 'NN'), ('standard', 'NN'), ('(', '-LRB-'), ('DES', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('OOPC', 'OOPC'), ('++', '++'), ('UNIT', 'unit'), ('-1', '-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav@darshan.ac.in', 'rupesh.vaishnav@darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'information'), ('&', '&'), ('Network', 'Network'), ('Security', 'Security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('UNIT', 'unit'), ('-', '-'), ('2', '2'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('and', 'and'), ('block', 'block'), ('ciphers', 'cipher'), ('1', '1'), ('Unit', 'unit'), ('-2', '-2'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('and', 'and'), ('block', 'block'), ('ciphers', 'cipher'), ('Block', 'block'), ('Cipher', 'cipher'), ('structure', 'structure'), ('Data', 'data'), ('Encryption', 'encryption'), ('standard', 'standard'), ('(', '('), ('DES', 'DES'), (')', ')')] 

 Dependency tags are: 
>> [(('OOPC', 'root'), 'root'), (('++', 'UNIT'), 'nummod'), (('UNIT', '-1'), 'compound'), (('-1', 'Prof.'), 'compound'), (('Prof.', 'OOPC'), 'list'), (('Rupesh', 'OOPC'), 'flat'), (('G.', 'Vaishnav'), 'compound'), (('Vaishnav', 'OOPC'), 'list'), (('rupesh.vaishnav@darshan.ac.in', 'OOPC'), 'list'), (('94280-37452', 'OOPC'), 'list'), (('Information', 'OOPC'), 'list'), (('&', 'Security'), 'cc'), (('Network', 'Security'), 'compound'), (('Security', 'Information'), 'conj'), (('(', 'Institute'), 'punct'), (('2170709', 'Institute'), 'nummod'), ((')', '2170709'), 'punct'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'OOPC'), 'list'), (('of', 'UNIT'), 'case'), (('Engineering', 'UNIT'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('UNIT', 'Institute'), 'nmod'), (('-', 'Institute'), 'punct'), (('2', 'ciphers'), 'nummod'), (('Stream', 'ciphers'), 'compound'), (('ciphers', 'Institute'), 'appos'), (('and', 'ciphers'), 'cc'), (('block', 'ciphers'), 'compound'), (('ciphers', 'ciphers'), 'conj'), (('1', 'Unit'), 'nummod'), (('Unit', 'ciphers'), 'compound'), (('-2', 'Unit'), 'nummod'), (('Stream', 'ciphers'), 'compound'), (('ciphers', 'ciphers'), 'appos'), (('and', 'Block'), 'cc'), (('block', 'Block'), 'compound'), (('ciphers', 'Block'), 'compound'), (('Block', 'structure'), 'compound'), (('Cipher', 'structure'), 'compound'), (('structure', 'standard'), 'compound'), (('Data', 'standard'), 'compound'), (('Encryption', 'standard'), 'compound'), (('standard', 'ciphers'), 'appos'), (('(', 'DES'), 'punct'), (('DES', 'standard'), 'appos'), ((')', 'DES'), 'punct')]

 Named Entities are: 
>> [('Rupesh G. Vaishnav', 'PERSON'), ('94280-37452 Information & Network Security', 'ORG'), ('2170709', 'CARDINAL'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('UNIT-2 Stream', 'ORG'), ('1', 'CARDINAL'), ('Block Cipher', 'ORG')]

========================== Sentence 2 ===========================

 Design principles of block cipher AES with structure AES Transformation functions Key expansion  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 2  Stream Cipher 

Tokens are: 
>> ['Design', 'principles', 'of', 'block', 'cipher', 'AES', 'with', 'structure', 'AES', 'Transformation', 'functions', 'Key', 'expansion', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'X.800', 'and', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')', '2', 'Stream', 'Cipher'] 

 UPOS tags are: 
>> [('Design', 'NOUN'), ('principles', 'NOUN'), ('of', 'ADP'), ('block', 'NOUN'), ('cipher', 'NOUN'), ('AES', 'NOUN'), ('with', 'ADP'), ('structure', 'NOUN'), ('AES', 'PROPN'), ('Transformation', 'NOUN'), ('functions', 'NOUN'), ('Key', 'ADJ'), ('expansion', 'NOUN'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('X.800', 'PROPN'), ('and', 'CCONJ'), ('RFC', 'PROPN'), ('2828', 'NUM'), ('International', 'ADJ'), ('Telecommunication', 'ADJ'), ('Union', 'PROPN'), ('(', 'PUNCT'), ('ITU', 'PROPN'), (')', 'PUNCT'), ('2', 'NUM'), ('Stream', 'NOUN'), ('Cipher', 'PROPN')] 

 XPOS tags are: 
>> [('Design', 'NN'), ('principles', 'NNS'), ('of', 'IN'), ('block', 'NN'), ('cipher', 'NN'), ('AES', 'NN'), ('with', 'IN'), ('structure', 'NN'), ('AES', 'NNP'), ('Transformation', 'NN'), ('functions', 'NNS'), ('Key', 'JJ'), ('expansion', 'NN'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('X.800', 'NNP'), ('and', 'CC'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '-LRB-'), ('ITU', 'NNP'), (')', '-RRB-'), ('2', 'CD'), ('Stream', 'NN'), ('Cipher', 'NNP')] 

 Lemmas are: 
>> [('Design', 'design'), ('principles', 'principle'), ('of', 'of'), ('block', 'block'), ('cipher', 'cipher'), ('AES', 'aes'), ('with', 'with'), ('structure', 'structure'), ('AES', 'AES'), ('Transformation', 'transformation'), ('functions', 'function'), ('Key', 'key'), ('expansion', 'expansion'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('X.800', 'X.800'), ('and', 'and'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')'), ('2', '2'), ('Stream', 'stream'), ('Cipher', 'Cipher')] 

 Dependency tags are: 
>> [(('Design', 'principles'), 'compound'), (('principles', 'root'), 'root'), (('of', 'AES'), 'case'), (('block', 'AES'), 'compound'), (('cipher', 'AES'), 'compound'), (('AES', 'principles'), 'nmod'), (('with', 'functions'), 'case'), (('structure', 'functions'), 'compound'), (('AES', 'functions'), 'compound'), (('Transformation', 'functions'), 'compound'), (('functions', 'principles'), 'nmod'), (('Key', 'Unit'), 'amod'), (('expansion', 'Unit'), 'compound'), (('Unit', 'functions'), 'appos'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'principles'), 'conj'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('X.800', 'Institute'), 'nmod'), (('and', 'RFC'), 'cc'), (('RFC', 'Union'), 'compound'), (('2828', 'Union'), 'nummod'), (('International', 'Union'), 'amod'), (('Telecommunication', 'Union'), 'amod'), (('Union', 'Cipher'), 'compound'), (('(', 'ITU'), 'punct'), (('ITU', 'Union'), 'appos'), ((')', 'ITU'), 'punct'), (('2', 'Cipher'), 'nummod'), (('Stream', 'Cipher'), 'compound'), (('Cipher', 'X.800'), 'appos')]

 Named Entities are: 
>> [('AES', 'ORG'), ('AES Transformation', 'ORG'), ('Key expansion  Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('X.800', 'CARDINAL'), ('RFC 2828 International Telecommunication Union', 'ORG'), ('2', 'CARDINAL')]

========================== Sentence 3 ===========================

 A stream cipher is one that encrypts a digital data stream one bit or one byte at a time. 

Tokens are: 
>> ['A', 'stream', 'cipher', 'is', 'one', 'that', 'encrypts', 'a', 'digital', 'data', 'stream', 'one', 'bit', 'or', 'one', 'byte', 'at', 'a', 'time', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('stream', 'NOUN'), ('cipher', 'NOUN'), ('is', 'AUX'), ('one', 'NUM'), ('that', 'PRON'), ('encrypts', 'VERB'), ('a', 'DET'), ('digital', 'ADJ'), ('data', 'NOUN'), ('stream', 'NOUN'), ('one', 'NUM'), ('bit', 'NOUN'), ('or', 'CCONJ'), ('one', 'NUM'), ('byte', 'NOUN'), ('at', 'ADP'), ('a', 'DET'), ('time', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('stream', 'NN'), ('cipher', 'NN'), ('is', 'VBZ'), ('one', 'CD'), ('that', 'WDT'), ('encrypts', 'VBZ'), ('a', 'DT'), ('digital', 'JJ'), ('data', 'NN'), ('stream', 'NN'), ('one', 'CD'), ('bit', 'NN'), ('or', 'CC'), ('one', 'CD'), ('byte', 'NN'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('stream', 'stream'), ('cipher', 'cipher'), ('is', 'be'), ('one', 'one'), ('that', 'that'), ('encrypts', 'encrypt'), ('a', 'a'), ('digital', 'digital'), ('data', 'datum'), ('stream', 'stream'), ('one', 'one'), ('bit', 'bit'), ('or', 'or'), ('one', 'one'), ('byte', 'byte'), ('at', 'at'), ('a', 'a'), ('time', 'time'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'cipher'), 'det'), (('stream', 'cipher'), 'compound'), (('cipher', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'root'), 'root'), (('that', 'encrypts'), 'nsubj'), (('encrypts', 'one'), 'acl:relcl'), (('a', 'stream'), 'det'), (('digital', 'stream'), 'amod'), (('data', 'stream'), 'compound'), (('stream', 'encrypts'), 'obj'), (('one', 'bit'), 'nummod'), (('bit', 'encrypts'), 'obj'), (('or', 'byte'), 'cc'), (('one', 'byte'), 'nummod'), (('byte', 'stream'), 'conj'), (('at', 'time'), 'case'), (('a', 'time'), 'det'), (('time', 'encrypts'), 'obl'), (('.', 'one'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 4 ===========================

 Examples of classical stream ciphers are Autokeyed Vigenère cipher ,A5/1,  RC4 and Vernam cipher. 

Tokens are: 
>> ['Examples', 'of', 'classical', 'stream', 'ciphers', 'are', 'Autokeyed', 'Vigenère', 'cipher', ',', 'A5/1', ',', 'RC4', 'and', 'Vernam', 'cipher', '.'] 

 UPOS tags are: 
>> [('Examples', 'NOUN'), ('of', 'ADP'), ('classical', 'ADJ'), ('stream', 'NOUN'), ('ciphers', 'NOUN'), ('are', 'AUX'), ('Autokeyed', 'VERB'), ('Vigenère', 'PROPN'), ('cipher', 'NOUN'), (',', 'PUNCT'), ('A5/1', 'PROPN'), (',', 'PUNCT'), ('RC4', 'PROPN'), ('and', 'CCONJ'), ('Vernam', 'PROPN'), ('cipher', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Examples', 'NNS'), ('of', 'IN'), ('classical', 'JJ'), ('stream', 'NN'), ('ciphers', 'NNS'), ('are', 'VBP'), ('Autokeyed', 'VBN'), ('Vigenère', 'NNP'), ('cipher', 'NN'), (',', ','), ('A5/1', 'NNP'), (',', ','), ('RC4', 'NNP'), ('and', 'CC'), ('Vernam', 'NNP'), ('cipher', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Examples', 'example'), ('of', 'of'), ('classical', 'classical'), ('stream', 'stream'), ('ciphers', 'cipher'), ('are', 'be'), ('Autokeyed', 'autokey'), ('Vigenère', 'Vigenère'), ('cipher', 'cipher'), (',', ','), ('A5/1', 'A5/1'), (',', ','), ('RC4', 'RC4'), ('and', 'and'), ('Vernam', 'Vernam'), ('cipher', 'cipher'), ('.', '.')] 

 Dependency tags are: 
>> [(('Examples', 'Autokeyed'), 'nsubj:pass'), (('of', 'ciphers'), 'case'), (('classical', 'ciphers'), 'amod'), (('stream', 'ciphers'), 'compound'), (('ciphers', 'Examples'), 'nmod'), (('are', 'Autokeyed'), 'aux:pass'), (('Autokeyed', 'root'), 'root'), (('Vigenère', 'cipher'), 'compound'), (('cipher', 'Autokeyed'), 'obj'), ((',', 'A5/1'), 'punct'), (('A5/1', 'cipher'), 'conj'), ((',', 'RC4'), 'punct'), (('RC4', 'cipher'), 'conj'), (('and', 'cipher'), 'cc'), (('Vernam', 'cipher'), 'compound'), (('cipher', 'cipher'), 'conj'), (('.', 'Autokeyed'), 'punct')]

 Named Entities are: 
>> [('Autokeyed Vigenère', 'PRODUCT'), ('A5/1', 'PRODUCT'), ('RC4', 'PRODUCT'), ('Vernam', 'PRODUCT')]

========================== Sentence 5 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Block Cipher 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Block', 'Cipher'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Block', 'NOUN'), ('Cipher', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Block', 'NN'), ('Cipher', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Block', 'block'), ('Cipher', 'cipher')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Cipher'), 'case'), (('Engineering', 'Cipher'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Cipher'), 'compound'), (('Block', 'Cipher'), 'compound'), (('Cipher', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 6 ===========================

 A  block cipher is one in which a block of plaintext is treated as a whole and used to produce a ciphertext block of equal length. 

Tokens are: 
>> ['A', 'block', 'cipher', 'is', 'one', 'in', 'which', 'a', 'block', 'of', 'plaintext', 'is', 'treated', 'as', 'a', 'whole', 'and', 'used', 'to', 'produce', 'a', 'ciphertext', 'block', 'of', 'equal', 'length', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('block', 'NOUN'), ('cipher', 'NOUN'), ('is', 'AUX'), ('one', 'NUM'), ('in', 'ADP'), ('which', 'PRON'), ('a', 'DET'), ('block', 'NOUN'), ('of', 'ADP'), ('plaintext', 'NOUN'), ('is', 'AUX'), ('treated', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('whole', 'NOUN'), ('and', 'CCONJ'), ('used', 'VERB'), ('to', 'PART'), ('produce', 'VERB'), ('a', 'DET'), ('ciphertext', 'NOUN'), ('block', 'NOUN'), ('of', 'ADP'), ('equal', 'ADJ'), ('length', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('block', 'NN'), ('cipher', 'NN'), ('is', 'VBZ'), ('one', 'CD'), ('in', 'IN'), ('which', 'WDT'), ('a', 'DT'), ('block', 'NN'), ('of', 'IN'), ('plaintext', 'NN'), ('is', 'VBZ'), ('treated', 'VBN'), ('as', 'IN'), ('a', 'DT'), ('whole', 'NN'), ('and', 'CC'), ('used', 'VBN'), ('to', 'TO'), ('produce', 'VB'), ('a', 'DT'), ('ciphertext', 'NN'), ('block', 'NN'), ('of', 'IN'), ('equal', 'JJ'), ('length', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('block', 'block'), ('cipher', 'cipher'), ('is', 'be'), ('one', 'one'), ('in', 'in'), ('which', 'which'), ('a', 'a'), ('block', 'block'), ('of', 'of'), ('plaintext', 'plaintext'), ('is', 'be'), ('treated', 'treat'), ('as', 'as'), ('a', 'a'), ('whole', 'whole'), ('and', 'and'), ('used', 'use'), ('to', 'to'), ('produce', 'produce'), ('a', 'a'), ('ciphertext', 'ciphertext'), ('block', 'block'), ('of', 'of'), ('equal', 'equal'), ('length', 'length'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'cipher'), 'det'), (('block', 'cipher'), 'compound'), (('cipher', 'one'), 'nsubj'), (('is', 'one'), 'cop'), (('one', 'root'), 'root'), (('in', 'which'), 'case'), (('which', 'treated'), 'obl'), (('a', 'block'), 'det'), (('block', 'treated'), 'nsubj:pass'), (('of', 'plaintext'), 'case'), (('plaintext', 'block'), 'nmod'), (('is', 'treated'), 'aux:pass'), (('treated', 'one'), 'acl:relcl'), (('as', 'whole'), 'case'), (('a', 'whole'), 'det'), (('whole', 'treated'), 'obl'), (('and', 'used'), 'cc'), (('used', 'treated'), 'conj'), (('to', 'produce'), 'mark'), (('produce', 'used'), 'xcomp'), (('a', 'block'), 'det'), (('ciphertext', 'block'), 'compound'), (('block', 'produce'), 'obj'), (('of', 'length'), 'case'), (('equal', 'length'), 'amod'), (('length', 'block'), 'nmod'), (('.', 'one'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 Typically, a block size of 64 or 128 bits is used. 

Tokens are: 
>> ['Typically', ',', 'a', 'block', 'size', 'of', '64', 'or', '128', 'bits', 'is', 'used', '.'] 

 UPOS tags are: 
>> [('Typically', 'ADV'), (',', 'PUNCT'), ('a', 'DET'), ('block', 'NOUN'), ('size', 'NOUN'), ('of', 'ADP'), ('64', 'NUM'), ('or', 'CCONJ'), ('128', 'NUM'), ('bits', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Typically', 'RB'), (',', ','), ('a', 'DT'), ('block', 'NN'), ('size', 'NN'), ('of', 'IN'), ('64', 'CD'), ('or', 'CC'), ('128', 'CD'), ('bits', 'NNS'), ('is', 'VBZ'), ('used', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Typically', 'typically'), (',', ','), ('a', 'a'), ('block', 'block'), ('size', 'size'), ('of', 'of'), ('64', '64'), ('or', 'or'), ('128', '128'), ('bits', 'bit'), ('is', 'be'), ('used', 'use'), ('.', '.')] 

 Dependency tags are: 
>> [(('Typically', 'used'), 'advmod'), ((',', 'used'), 'punct'), (('a', 'size'), 'det'), (('block', 'size'), 'compound'), (('size', 'used'), 'nsubj:pass'), (('of', 'bits'), 'case'), (('64', 'bits'), 'nummod'), (('or', '128'), 'cc'), (('128', '64'), 'conj'), (('bits', 'size'), 'nmod'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> [('64', 'CARDINAL'), ('128', 'CARDINAL')]

========================== Sentence 8 ===========================

 Examples are Feistel Cipher, DES, Triple DES and AES    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Diffusion and Confusion Diffusion hides the relationship between the ciphertext and the plaintext. 

Tokens are: 
>> ['Examples', 'are', 'Feistel', 'Cipher', ',', 'DES', ',', 'Triple', 'DES', 'and', 'AES', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffusion', 'and', 'Confusion', 'Diffusion', 'hides', 'the', 'relationship', 'between', 'the', 'ciphertext', 'and', 'the', 'plaintext', '.'] 

 UPOS tags are: 
>> [('Examples', 'NOUN'), ('are', 'AUX'), ('Feistel', 'PROPN'), ('Cipher', 'PROPN'), (',', 'PUNCT'), ('DES', 'PROPN'), (',', 'PUNCT'), ('Triple', 'PROPN'), ('DES', 'PROPN'), ('and', 'CCONJ'), ('AES', 'PROPN'), ('Unit', 'PROPN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Diffusion', 'PROPN'), ('and', 'CCONJ'), ('Confusion', 'PROPN'), ('Diffusion', 'PROPN'), ('hides', 'VERB'), ('the', 'DET'), ('relationship', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('ciphertext', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('plaintext', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Examples', 'NNS'), ('are', 'VBP'), ('Feistel', 'NNP'), ('Cipher', 'NNP'), (',', ','), ('DES', 'NNP'), (',', ','), ('Triple', 'NNP'), ('DES', 'NNP'), ('and', 'CC'), ('AES', 'NNP'), ('Unit', 'NNP'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Diffusion', 'NNP'), ('and', 'CC'), ('Confusion', 'NNP'), ('Diffusion', 'NNP'), ('hides', 'VBZ'), ('the', 'DT'), ('relationship', 'NN'), ('between', 'IN'), ('the', 'DT'), ('ciphertext', 'NN'), ('and', 'CC'), ('the', 'DT'), ('plaintext', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Examples', 'example'), ('are', 'be'), ('Feistel', 'Feistel'), ('Cipher', 'Cipher'), (',', ','), ('DES', 'DES'), (',', ','), ('Triple', 'Triple'), ('DES', 'DES'), ('and', 'and'), ('AES', 'AES'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Diffusion', 'Diffusion'), ('and', 'and'), ('Confusion', 'Confusion'), ('Diffusion', 'Diffusion'), ('hides', 'hide'), ('the', 'the'), ('relationship', 'relationship'), ('between', 'between'), ('the', 'the'), ('ciphertext', 'ciphertext'), ('and', 'and'), ('the', 'the'), ('plaintext', 'plaintext'), ('.', '.')] 

 Dependency tags are: 
>> [(('Examples', 'Feistel'), 'nsubj'), (('are', 'Feistel'), 'cop'), (('Feistel', 'root'), 'root'), (('Cipher', 'Feistel'), 'flat'), ((',', 'DES'), 'punct'), (('DES', 'Feistel'), 'conj'), ((',', 'DES'), 'punct'), (('Triple', 'DES'), 'compound'), (('DES', 'Feistel'), 'conj'), (('and', 'Unit'), 'cc'), (('AES', 'Unit'), 'compound'), (('Unit', 'Institute'), 'compound'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Feistel'), 'conj'), (('of', 'Diffusion'), 'case'), (('Engineering', 'Diffusion'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Diffusion'), 'compound'), (('Diffusion', 'Institute'), 'nmod'), (('and', 'hides'), 'cc'), (('Confusion', 'Diffusion'), 'compound'), (('Diffusion', 'hides'), 'nsubj'), (('hides', 'Feistel'), 'conj'), (('the', 'relationship'), 'det'), (('relationship', 'hides'), 'obj'), (('between', 'ciphertext'), 'case'), (('the', 'ciphertext'), 'det'), (('ciphertext', 'relationship'), 'nmod'), (('and', 'plaintext'), 'cc'), (('the', 'plaintext'), 'det'), (('plaintext', 'ciphertext'), 'conj'), (('.', 'Feistel'), 'punct')]

 Named Entities are: 
>> [('Feistel Cipher', 'ORG'), ('DES', 'ORG'), ('Triple DES', 'ORG'), ('AES    Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 9 ===========================

 This is achieved by having each plaintext digit affect the value of many ciphertext digits. 

Tokens are: 
>> ['This', 'is', 'achieved', 'by', 'having', 'each', 'plaintext', 'digit', 'affect', 'the', 'value', 'of', 'many', 'ciphertext', 'digits', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('achieved', 'VERB'), ('by', 'SCONJ'), ('having', 'VERB'), ('each', 'DET'), ('plaintext', 'NOUN'), ('digit', 'NOUN'), ('affect', 'VERB'), ('the', 'DET'), ('value', 'NOUN'), ('of', 'ADP'), ('many', 'ADJ'), ('ciphertext', 'NOUN'), ('digits', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('achieved', 'VBN'), ('by', 'IN'), ('having', 'VBG'), ('each', 'DT'), ('plaintext', 'NN'), ('digit', 'NN'), ('affect', 'VB'), ('the', 'DT'), ('value', 'NN'), ('of', 'IN'), ('many', 'JJ'), ('ciphertext', 'NN'), ('digits', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('achieved', 'achieve'), ('by', 'by'), ('having', 'have'), ('each', 'each'), ('plaintext', 'plaintext'), ('digit', 'digit'), ('affect', 'affect'), ('the', 'the'), ('value', 'value'), ('of', 'of'), ('many', 'many'), ('ciphertext', 'ciphertext'), ('digits', 'digit'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'achieved'), 'nsubj:pass'), (('is', 'achieved'), 'aux:pass'), (('achieved', 'root'), 'root'), (('by', 'having'), 'mark'), (('having', 'achieved'), 'advcl'), (('each', 'digit'), 'det'), (('plaintext', 'digit'), 'compound'), (('digit', 'having'), 'obj'), (('affect', 'having'), 'ccomp'), (('the', 'value'), 'det'), (('value', 'affect'), 'obj'), (('of', 'digits'), 'case'), (('many', 'digits'), 'amod'), (('ciphertext', 'digits'), 'compound'), (('digits', 'value'), 'nmod'), (('.', 'achieved'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 Confusion hides the relationship between the ciphertext and the key. 

Tokens are: 
>> ['Confusion', 'hides', 'the', 'relationship', 'between', 'the', 'ciphertext', 'and', 'the', 'key', '.'] 

 UPOS tags are: 
>> [('Confusion', 'NOUN'), ('hides', 'VERB'), ('the', 'DET'), ('relationship', 'NOUN'), ('between', 'ADP'), ('the', 'DET'), ('ciphertext', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Confusion', 'NN'), ('hides', 'VBZ'), ('the', 'DT'), ('relationship', 'NN'), ('between', 'IN'), ('the', 'DT'), ('ciphertext', 'NN'), ('and', 'CC'), ('the', 'DT'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Confusion', 'confusion'), ('hides', 'hide'), ('the', 'the'), ('relationship', 'relationship'), ('between', 'between'), ('the', 'the'), ('ciphertext', 'ciphertext'), ('and', 'and'), ('the', 'the'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Confusion', 'hides'), 'nsubj'), (('hides', 'root'), 'root'), (('the', 'relationship'), 'det'), (('relationship', 'hides'), 'obj'), (('between', 'ciphertext'), 'case'), (('the', 'ciphertext'), 'det'), (('ciphertext', 'relationship'), 'nmod'), (('and', 'key'), 'cc'), (('the', 'key'), 'det'), (('key', 'ciphertext'), 'conj'), (('.', 'hides'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 This is achieved by the use of a complex substitution algorithm. 

Tokens are: 
>> ['This', 'is', 'achieved', 'by', 'the', 'use', 'of', 'a', 'complex', 'substitution', 'algorithm', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('achieved', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('use', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('complex', 'ADJ'), ('substitution', 'NOUN'), ('algorithm', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('achieved', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('use', 'NN'), ('of', 'IN'), ('a', 'DT'), ('complex', 'JJ'), ('substitution', 'NN'), ('algorithm', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('achieved', 'achieve'), ('by', 'by'), ('the', 'the'), ('use', 'use'), ('of', 'of'), ('a', 'a'), ('complex', 'complex'), ('substitution', 'substitution'), ('algorithm', 'algorithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'achieved'), 'nsubj:pass'), (('is', 'achieved'), 'aux:pass'), (('achieved', 'root'), 'root'), (('by', 'use'), 'case'), (('the', 'use'), 'det'), (('use', 'achieved'), 'obl'), (('of', 'algorithm'), 'case'), (('a', 'algorithm'), 'det'), (('complex', 'algorithm'), 'amod'), (('substitution', 'algorithm'), 'compound'), (('algorithm', 'use'), 'nmod'), (('.', 'achieved'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   Round 1   Plaintext (2w bits)   F   w bits w bits R0 L0 K1  R1 L1       Rn+1 Ln+1  Round i    F   Ki  Ri Li        Round n    F   Kn  Ln Rn Rn   Ln   Ciphertext (2w bits) 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Round', '1', 'Plaintext', '(', '2', 'w', 'bits', ')', 'F', 'w', 'bits', 'w', 'bits', 'R0', 'L0', 'K1', 'R1', 'L1', 'Rn+1', 'Ln+1', 'Round', 'i', 'F', 'Ki', 'Ri', 'Li', 'Round', 'n', 'F', 'Kn', 'Ln', 'Rn', 'Rn', 'Ln', 'Ciphertext', '(', '2', 'w', 'bits', ')'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Round', 'PROPN'), ('1', 'NUM'), ('Plaintext', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), ('w', 'NOUN'), ('bits', 'NOUN'), (')', 'PUNCT'), ('F', 'NOUN'), ('w', 'NOUN'), ('bits', 'NOUN'), ('w', 'NOUN'), ('bits', 'NOUN'), ('R0', 'NOUN'), ('L0', 'NUM'), ('K1', 'NUM'), ('R1', 'NOUN'), ('L1', 'NOUN'), ('Rn+1', 'NOUN'), ('Ln+1', 'PROPN'), ('Round', 'PROPN'), ('i', 'NUM'), ('F', 'PROPN'), ('Ki', 'PROPN'), ('Ri', 'PROPN'), ('Li', 'PROPN'), ('Round', 'PROPN'), ('n', 'PROPN'), ('F', 'PROPN'), ('Kn', 'PROPN'), ('Ln', 'PROPN'), ('Rn', 'PROPN'), ('Rn', 'PROPN'), ('Ln', 'PROPN'), ('Ciphertext', 'PROPN'), ('(', 'PUNCT'), ('2', 'NUM'), ('w', 'NOUN'), ('bits', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Round', 'NNP'), ('1', 'CD'), ('Plaintext', 'NN'), ('(', '-LRB-'), ('2', 'CD'), ('w', 'NN'), ('bits', 'NNS'), (')', '-RRB-'), ('F', 'NN'), ('w', 'NN'), ('bits', 'NNS'), ('w', 'NN'), ('bits', 'NNS'), ('R0', 'NN'), ('L0', 'CD'), ('K1', 'CD'), ('R1', 'NN'), ('L1', 'NN'), ('Rn+1', 'NN'), ('Ln+1', 'NNP'), ('Round', 'NNP'), ('i', 'LS'), ('F', 'NNP'), ('Ki', 'NNP'), ('Ri', 'NNP'), ('Li', 'NNP'), ('Round', 'NNP'), ('n', 'NNP'), ('F', 'NNP'), ('Kn', 'NNP'), ('Ln', 'NNP'), ('Rn', 'NNP'), ('Rn', 'NNP'), ('Ln', 'NNP'), ('Ciphertext', 'NNP'), ('(', '-LRB-'), ('2', 'CD'), ('w', 'NN'), ('bits', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Round', 'Round'), ('1', '1'), ('Plaintext', 'plaintext'), ('(', '('), ('2', '2'), ('w', 'with'), ('bits', 'bit'), (')', ')'), ('F', 'f'), ('w', 'with'), ('bits', 'bit'), ('w', 'with'), ('bits', 'bit'), ('R0', 'r0'), ('L0', 'L0'), ('K1', 'k1'), ('R1', 'r1'), ('L1', 'l1'), ('Rn+1', 'rn+1'), ('Ln+1', 'Ln+1'), ('Round', 'Round'), ('i', 'i'), ('F', 'F'), ('Ki', 'Ki'), ('Ri', 'Ri'), ('Li', 'Li'), ('Round', 'Round'), ('n', 'n'), ('F', 'F'), ('Kn', 'Kn'), ('Ln', 'Ln'), ('Rn', 'Rn'), ('Rn', 'Rn'), ('Ln', 'Ln'), ('Ciphertext', 'Ciphertext'), ('(', '('), ('2', '2'), ('w', 'with'), ('bits', 'bit'), (')', ')')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Round'), 'case'), (('Engineering', 'Round'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Round'), 'compound'), (('Round', 'Institute'), 'nmod'), (('1', 'Plaintext'), 'nummod'), (('Plaintext', 'Institute'), 'conj'), (('(', 'bits'), 'punct'), (('2', 'F'), 'nummod'), (('w', 'bits'), 'case'), (('bits', '2'), 'nmod'), ((')', 'bits'), 'punct'), (('F', 'Institute'), 'parataxis'), (('w', 'bits'), 'case'), (('bits', 'F'), 'nmod'), (('w', 'R0'), 'case'), (('bits', 'R0'), 'compound'), (('R0', 'F'), 'nmod'), (('L0', 'L1'), 'nummod'), (('K1', 'R1'), 'nummod'), (('R1', 'L1'), 'compound'), (('L1', 'Round'), 'compound'), (('Rn+1', 'Round'), 'compound'), (('Ln+1', 'Round'), 'compound'), (('Round', 'F'), 'appos'), (('i', 'n'), 'nummod'), (('F', 'n'), 'compound'), (('Ki', 'n'), 'compound'), (('Ri', 'n'), 'compound'), (('Li', 'n'), 'compound'), (('Round', 'n'), 'compound'), (('n', 'F'), 'appos'), (('F', 'Ln'), 'compound'), (('Kn', 'n'), 'compound'), (('Ln', 'n'), 'compound'), (('Rn', 'Ciphertext'), 'compound'), (('Rn', 'Ln'), 'compound'), (('Ln', 'Ciphertext'), 'compound'), (('Ciphertext', 'n'), 'appos'), (('(', 'bits'), 'punct'), (('2', 'Ciphertext'), 'nummod'), (('w', 'bits'), 'case'), (('bits', '2'), 'nmod'), ((')', 'bits'), 'punct')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('1', 'CARDINAL'), ('2w', 'QUANTITY'), ('2', 'CARDINAL')]

========================== Sentence 13 ===========================

 Feistel Cipher Structure  Or Block Cipher Structure   Feistel Cipher Structure 

Tokens are: 
>> ['Feistel', 'Cipher', 'Structure', 'Or', 'Block', 'Cipher', 'Structure', 'Feistel', 'Cipher', 'Structure'] 

 UPOS tags are: 
>> [('Feistel', 'ADJ'), ('Cipher', 'NOUN'), ('Structure', 'NOUN'), ('Or', 'CCONJ'), ('Block', 'NOUN'), ('Cipher', 'NOUN'), ('Structure', 'NOUN'), ('Feistel', 'NOUN'), ('Cipher', 'NOUN'), ('Structure', 'NOUN')] 

 XPOS tags are: 
>> [('Feistel', 'JJ'), ('Cipher', 'NN'), ('Structure', 'NN'), ('Or', 'CC'), ('Block', 'NN'), ('Cipher', 'NN'), ('Structure', 'NN'), ('Feistel', 'NN'), ('Cipher', 'NN'), ('Structure', 'NN')] 

 Lemmas are: 
>> [('Feistel', 'Feistel'), ('Cipher', 'cipher'), ('Structure', 'structure'), ('Or', 'or'), ('Block', 'block'), ('Cipher', 'cipher'), ('Structure', 'structure'), ('Feistel', 'feistel'), ('Cipher', 'cipher'), ('Structure', 'structure')] 

 Dependency tags are: 
>> [(('Feistel', 'Structure'), 'amod'), (('Cipher', 'Structure'), 'compound'), (('Structure', 'root'), 'root'), (('Or', 'Structure'), 'cc'), (('Block', 'Structure'), 'compound'), (('Cipher', 'Structure'), 'compound'), (('Structure', 'Structure'), 'conj'), (('Feistel', 'Structure'), 'compound'), (('Cipher', 'Structure'), 'compound'), (('Structure', 'Structure'), 'conj')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 Input plaintext block of length 2w bits key K = n bits , Sub-keys: K1, K2, …, Kn (Derived from K) 

Tokens are: 
>> ['Input', 'plaintext', 'block', 'of', 'length', '2', 'w', 'bits', 'key', 'K', '=', 'n', 'bits', ',', 'Sub', '-keys', ':', 'K1', ',', 'K2', ',', '…', ',', 'Kn', '(', 'Derived', 'from', 'K', ')'] 

 UPOS tags are: 
>> [('Input', 'NOUN'), ('plaintext', 'NOUN'), ('block', 'NOUN'), ('of', 'ADP'), ('length', 'NOUN'), ('2', 'NUM'), ('w', 'NOUN'), ('bits', 'NOUN'), ('key', 'ADJ'), ('K', 'NOUN'), ('=', 'SYM'), ('n', 'NOUN'), ('bits', 'NOUN'), (',', 'PUNCT'), ('Sub', 'NOUN'), ('-keys', 'NOUN'), (':', 'PUNCT'), ('K1', 'NUM'), (',', 'PUNCT'), ('K2', 'NUM'), (',', 'PUNCT'), ('…', 'PUNCT'), (',', 'PUNCT'), ('Kn', 'PROPN'), ('(', 'PUNCT'), ('Derived', 'VERB'), ('from', 'ADP'), ('K', 'NUM'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Input', 'NN'), ('plaintext', 'NN'), ('block', 'NN'), ('of', 'IN'), ('length', 'NN'), ('2', 'CD'), ('w', 'NN'), ('bits', 'NNS'), ('key', 'JJ'), ('K', 'NN'), ('=', 'SYM'), ('n', 'NN'), ('bits', 'NNS'), (',', ','), ('Sub', 'NN'), ('-keys', 'NNS'), (':', ':'), ('K1', 'CD'), (',', ','), ('K2', 'CD'), (',', ','), ('…', ':'), (',', ','), ('Kn', 'NNP'), ('(', '-LRB-'), ('Derived', 'VBN'), ('from', 'IN'), ('K', 'CD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Input', 'input'), ('plaintext', 'plaintext'), ('block', 'block'), ('of', 'of'), ('length', 'length'), ('2', '2'), ('w', 'with'), ('bits', 'bit'), ('key', 'key'), ('K', 'k'), ('=', '='), ('n', 'n'), ('bits', 'bit'), (',', ','), ('Sub', 'sub'), ('-keys', '-key'), (':', ':'), ('K1', 'k1'), (',', ','), ('K2', 'k2'), (',', ','), ('…', '…'), (',', ','), ('Kn', 'Kn'), ('(', '('), ('Derived', 'derive'), ('from', 'from'), ('K', 'k'), (')', ')')] 

 Dependency tags are: 
>> [(('Input', 'block'), 'compound'), (('plaintext', 'block'), 'compound'), (('block', 'root'), 'root'), (('of', 'length'), 'case'), (('length', 'block'), 'nmod'), (('2', 'length'), 'nummod'), (('w', 'bits'), 'case'), (('bits', 'K'), 'compound'), (('key', 'K'), 'amod'), (('K', 'block'), 'appos'), (('=', 'block'), 'parataxis'), (('n', 'bits'), 'compound'), (('bits', '='), 'obj'), ((',', '-keys'), 'punct'), (('Sub', '-keys'), 'compound'), (('-keys', 'block'), 'list'), ((':', 'K1'), 'punct'), (('K1', '-keys'), 'appos'), ((',', 'K2'), 'punct'), (('K2', 'K1'), 'conj'), ((',', 'K1'), 'punct'), (('…', 'Kn'), 'punct'), ((',', 'Kn'), 'punct'), (('Kn', 'K1'), 'conj'), (('(', 'Derived'), 'punct'), (('Derived', 'Kn'), 'acl'), (('from', 'K'), 'case'), (('K', 'Derived'), 'obl'), ((')', 'Derived'), 'punct')]

 Named Entities are: 
>> [('2w bits', 'QUANTITY')]

========================== Sentence 15 ===========================

 All rounds have the same structure. 

Tokens are: 
>> ['All', 'rounds', 'have', 'the', 'same', 'structure', '.'] 

 UPOS tags are: 
>> [('All', 'DET'), ('rounds', 'NOUN'), ('have', 'VERB'), ('the', 'DET'), ('same', 'ADJ'), ('structure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('All', 'DT'), ('rounds', 'NNS'), ('have', 'VBP'), ('the', 'DT'), ('same', 'JJ'), ('structure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('All', 'all'), ('rounds', 'round'), ('have', 'have'), ('the', 'the'), ('same', 'same'), ('structure', 'structure'), ('.', '.')] 

 Dependency tags are: 
>> [(('All', 'rounds'), 'det'), (('rounds', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('the', 'structure'), 'det'), (('same', 'structure'), 'amod'), (('structure', 'have'), 'obj'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 A substitution is performed by taking exclusive-OR on left half(Li) of the data and the output of round function F which has inputs right half(Ri) and sub key ki. 

Tokens are: 
>> ['A', 'substitution', 'is', 'performed', 'by', 'taking', 'exclusive', '-', 'OR', 'on', 'left', 'half', '(', 'Li', ')', 'of', 'the', 'data', 'and', 'the', 'output', 'of', 'round', 'function', 'F', 'which', 'has', 'inputs', 'right', 'half', '(', 'Ri', ')', 'and', 'sub', 'key', 'ki', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('substitution', 'NOUN'), ('is', 'AUX'), ('performed', 'VERB'), ('by', 'SCONJ'), ('taking', 'VERB'), ('exclusive', 'ADJ'), ('-', 'PUNCT'), ('OR', 'CCONJ'), ('on', 'ADP'), ('left', 'VERB'), ('half', 'NOUN'), ('(', 'PUNCT'), ('Li', 'PROPN'), (')', 'PUNCT'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('round', 'ADJ'), ('function', 'NOUN'), ('F', 'PROPN'), ('which', 'PRON'), ('has', 'VERB'), ('inputs', 'NOUN'), ('right', 'ADV'), ('half', 'NOUN'), ('(', 'PUNCT'), ('Ri', 'PROPN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('sub', 'ADJ'), ('key', 'ADJ'), ('ki', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('substitution', 'NN'), ('is', 'VBZ'), ('performed', 'VBN'), ('by', 'IN'), ('taking', 'VBG'), ('exclusive', 'JJ'), ('-', ','), ('OR', 'CC'), ('on', 'IN'), ('left', 'VBN'), ('half', 'NN'), ('(', '-LRB-'), ('Li', 'NNP'), (')', '-RRB-'), ('of', 'IN'), ('the', 'DT'), ('data', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('output', 'NN'), ('of', 'IN'), ('round', 'JJ'), ('function', 'NN'), ('F', 'NNP'), ('which', 'WDT'), ('has', 'VBZ'), ('inputs', 'NNS'), ('right', 'RB'), ('half', 'NN'), ('(', '-LRB-'), ('Ri', 'NNP'), (')', '-RRB-'), ('and', 'CC'), ('sub', 'JJ'), ('key', 'JJ'), ('ki', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('substitution', 'substitution'), ('is', 'be'), ('performed', 'perform'), ('by', 'by'), ('taking', 'take'), ('exclusive', 'exclusive'), ('-', '-'), ('OR', 'or'), ('on', 'on'), ('left', 'leave'), ('half', 'half'), ('(', '('), ('Li', 'Li'), (')', ')'), ('of', 'of'), ('the', 'the'), ('data', 'datum'), ('and', 'and'), ('the', 'the'), ('output', 'output'), ('of', 'of'), ('round', 'round'), ('function', 'function'), ('F', 'F'), ('which', 'which'), ('has', 'have'), ('inputs', 'input'), ('right', 'right'), ('half', 'half'), ('(', '('), ('Ri', 'Ri'), (')', ')'), ('and', 'and'), ('sub', 'sub'), ('key', 'key'), ('ki', 'ki'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'substitution'), 'det'), (('substitution', 'performed'), 'nsubj:pass'), (('is', 'performed'), 'aux:pass'), (('performed', 'root'), 'root'), (('by', 'taking'), 'mark'), (('taking', 'performed'), 'advcl'), (('exclusive', 'taking'), 'xcomp'), (('-', 'half'), 'punct'), (('OR', 'left'), 'cc'), (('on', 'left'), 'advmod'), (('left', 'half'), 'amod'), (('half', 'taking'), 'obj'), (('(', 'Li'), 'punct'), (('Li', 'half'), 'appos'), ((')', 'Li'), 'punct'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'half'), 'nmod'), (('and', 'output'), 'cc'), (('the', 'output'), 'det'), (('output', 'half'), 'conj'), (('of', 'function'), 'case'), (('round', 'function'), 'amod'), (('function', 'output'), 'nmod'), (('F', 'function'), 'appos'), (('which', 'has'), 'nsubj'), (('has', 'function'), 'acl:relcl'), (('inputs', 'has'), 'obj'), (('right', 'half'), 'advmod'), (('half', 'has'), 'obj'), (('(', 'Ri'), 'punct'), (('Ri', 'half'), 'appos'), ((')', 'Ri'), 'punct'), (('and', 'ki'), 'cc'), (('sub', 'ki'), 'amod'), (('key', 'ki'), 'amod'), (('ki', 'half'), 'conj'), (('.', 'performed'), 'punct')]

 Named Entities are: 
>> [('half', 'CARDINAL')]

========================== Sentence 17 ===========================

 A permutation is performed that consists of interchange of two halves of data. 

Tokens are: 
>> ['A', 'permutation', 'is', 'performed', 'that', 'consists', 'of', 'interchange', 'of', 'two', 'halves', 'of', 'data', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('permutation', 'NOUN'), ('is', 'AUX'), ('performed', 'VERB'), ('that', 'PRON'), ('consists', 'VERB'), ('of', 'ADP'), ('interchange', 'NOUN'), ('of', 'ADP'), ('two', 'NUM'), ('halves', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('permutation', 'NN'), ('is', 'VBZ'), ('performed', 'VBN'), ('that', 'WDT'), ('consists', 'VBZ'), ('of', 'IN'), ('interchange', 'NN'), ('of', 'IN'), ('two', 'CD'), ('halves', 'NNS'), ('of', 'IN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('permutation', 'permutation'), ('is', 'be'), ('performed', 'perform'), ('that', 'that'), ('consists', 'consist'), ('of', 'of'), ('interchange', 'interchange'), ('of', 'of'), ('two', 'two'), ('halves', 'halve'), ('of', 'of'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'permutation'), 'det'), (('permutation', 'performed'), 'nsubj:pass'), (('is', 'performed'), 'aux:pass'), (('performed', 'root'), 'root'), (('that', 'consists'), 'nsubj'), (('consists', 'performed'), 'ccomp'), (('of', 'interchange'), 'case'), (('interchange', 'consists'), 'obl'), (('of', 'halves'), 'case'), (('two', 'halves'), 'nummod'), (('halves', 'interchange'), 'nmod'), (('of', 'data'), 'case'), (('data', 'halves'), 'nmod'), (('.', 'performed'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 18 ===========================

 This structure is called Substitution-Permutation Network (SPN)   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Feistel Network Factors Block size: Common block size of 64-bit. 

Tokens are: 
>> ['This', 'structure', 'is', 'called', 'Substitution', '-', 'Permutation', 'Network', '(', 'SPN', ')', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Feistel', 'Network', 'Factors', 'Block', 'size', ':', 'Common', 'block', 'size', 'of', '64', '-', 'bit', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('structure', 'NOUN'), ('is', 'AUX'), ('called', 'VERB'), ('Substitution', 'PROPN'), ('-', 'PUNCT'), ('Permutation', 'PROPN'), ('Network', 'PROPN'), ('(', 'PUNCT'), ('SPN', 'NOUN'), (')', 'PUNCT'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Feistel', 'PROPN'), ('Network', 'PROPN'), ('Factors', 'PROPN'), ('Block', 'PROPN'), ('size', 'NOUN'), (':', 'PUNCT'), ('Common', 'ADJ'), ('block', 'NOUN'), ('size', 'NOUN'), ('of', 'ADP'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('structure', 'NN'), ('is', 'VBZ'), ('called', 'VBN'), ('Substitution', 'NNP'), ('-', 'HYPH'), ('Permutation', 'NNP'), ('Network', 'NNP'), ('(', '-LRB-'), ('SPN', 'NN'), (')', '-RRB-'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Feistel', 'NNP'), ('Network', 'NNP'), ('Factors', 'NNPS'), ('Block', 'NNP'), ('size', 'NN'), (':', ':'), ('Common', 'JJ'), ('block', 'NN'), ('size', 'NN'), ('of', 'IN'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('structure', 'structure'), ('is', 'be'), ('called', 'call'), ('Substitution', 'substitution'), ('-', '-'), ('Permutation', 'permutation'), ('Network', 'Network'), ('(', '('), ('SPN', 'spn'), (')', ')'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Feistel', 'Feistel'), ('Network', 'Network'), ('Factors', 'factor'), ('Block', 'Block'), ('size', 'size'), (':', ':'), ('Common', 'common'), ('block', 'block'), ('size', 'size'), ('of', 'of'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'structure'), 'det'), (('structure', 'called'), 'nsubj:pass'), (('is', 'called'), 'aux:pass'), (('called', 'root'), 'root'), (('Substitution', 'Network'), 'compound'), (('-', 'Network'), 'punct'), (('Permutation', 'Network'), 'compound'), (('Network', 'Unit'), 'compound'), (('(', 'SPN'), 'punct'), (('SPN', 'Unit'), 'compound'), ((')', 'SPN'), 'punct'), (('Unit', 'Institute'), 'compound'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'called'), 'parataxis'), (('of', 'size'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'size'), 'compound'), (('Feistel', 'size'), 'compound'), (('Network', 'Block'), 'compound'), (('Factors', 'Block'), 'compound'), (('Block', 'size'), 'compound'), (('size', 'Institute'), 'nmod'), ((':', 'size'), 'punct'), (('Common', 'size'), 'amod'), (('block', 'size'), 'compound'), (('size', 'size'), 'appos'), (('of', 'bit'), 'case'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'size'), 'nmod'), (('.', 'called'), 'punct')]

 Named Entities are: 
>> [('Substitution-Permutation Network', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('64', 'CARDINAL')]

========================== Sentence 19 ===========================

 However, the new algorithms uses a 128-bit, 256-bit block size. 

Tokens are: 
>> ['However', ',', 'the', 'new', 'algorithms', 'uses', 'a', '128', '-', 'bit', ',', '256', '-', 'bit', 'block', 'size', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('new', 'ADJ'), ('algorithms', 'NOUN'), ('uses', 'VERB'), ('a', 'DET'), ('128', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), (',', 'PUNCT'), ('256', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('block', 'NOUN'), ('size', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('the', 'DT'), ('new', 'JJ'), ('algorithms', 'NNS'), ('uses', 'VBZ'), ('a', 'DT'), ('128', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), (',', ','), ('256', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('block', 'NN'), ('size', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('the', 'the'), ('new', 'new'), ('algorithms', 'algorithm'), ('uses', 'use'), ('a', 'a'), ('128', '128'), ('-', '-'), ('bit', 'bit'), (',', ','), ('256', '256'), ('-', '-'), ('bit', 'bit'), ('block', 'block'), ('size', 'size'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'uses'), 'advmod'), ((',', 'uses'), 'punct'), (('the', 'algorithms'), 'det'), (('new', 'algorithms'), 'amod'), (('algorithms', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('a', 'size'), 'det'), (('128', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'size'), 'compound'), ((',', 'size'), 'punct'), (('256', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'block'), 'compound'), (('block', 'size'), 'compound'), (('size', 'uses'), 'obj'), (('.', 'uses'), 'punct')]

 Named Entities are: 
>> [('128-bit', 'QUANTITY'), ('256-bit', 'QUANTITY')]

========================== Sentence 20 ===========================

 Key size: Key sizes of 64 bits or less are now widely considered to be insufficient, These days at least 128 bit, more better, e.g.---.- 192 or 256 bit Number of rounds: A typical size is 16 rounds. 

Tokens are: 
>> ['Key', 'size', ':', 'Key', 'sizes', 'of', '64', 'bits', 'or', 'less', 'are', 'now', 'widely', 'considered', 'to', 'be', 'insufficient', ',', 'These', 'days', 'at', 'least', '128', 'bit', ',', 'more', 'better', ',', 'e.g.', '---.', '-', '192', 'or', '256', 'bit', 'Number', 'of', 'rounds', ':', 'A', 'typical', 'size', 'is', '16', 'rounds', '.'] 

 UPOS tags are: 
>> [('Key', 'ADJ'), ('size', 'NOUN'), (':', 'PUNCT'), ('Key', 'ADJ'), ('sizes', 'NOUN'), ('of', 'ADP'), ('64', 'NUM'), ('bits', 'NOUN'), ('or', 'CCONJ'), ('less', 'ADJ'), ('are', 'AUX'), ('now', 'ADV'), ('widely', 'ADV'), ('considered', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('insufficient', 'ADJ'), (',', 'PUNCT'), ('These', 'DET'), ('days', 'NOUN'), ('at', 'ADP'), ('least', 'ADJ'), ('128', 'NUM'), ('bit', 'NOUN'), (',', 'PUNCT'), ('more', 'ADV'), ('better', 'ADJ'), (',', 'PUNCT'), ('e.g.', 'ADV'), ('---.', 'NUM'), ('-', 'SYM'), ('192', 'NUM'), ('or', 'CCONJ'), ('256', 'NUM'), ('bit', 'NOUN'), ('Number', 'NOUN'), ('of', 'ADP'), ('rounds', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('typical', 'ADJ'), ('size', 'NOUN'), ('is', 'AUX'), ('16', 'NUM'), ('rounds', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Key', 'JJ'), ('size', 'NN'), (':', ':'), ('Key', 'JJ'), ('sizes', 'NNS'), ('of', 'IN'), ('64', 'CD'), ('bits', 'NNS'), ('or', 'CC'), ('less', 'JJR'), ('are', 'VBP'), ('now', 'RB'), ('widely', 'RB'), ('considered', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('insufficient', 'JJ'), (',', ','), ('These', 'DT'), ('days', 'NNS'), ('at', 'IN'), ('least', 'JJS'), ('128', 'CD'), ('bit', 'NN'), (',', ','), ('more', 'RBR'), ('better', 'JJR'), (',', ','), ('e.g.', 'FW'), ('---.', 'CD'), ('-', 'SYM'), ('192', 'CD'), ('or', 'CC'), ('256', 'CD'), ('bit', 'NN'), ('Number', 'NN'), ('of', 'IN'), ('rounds', 'NNS'), (':', ':'), ('A', 'DT'), ('typical', 'JJ'), ('size', 'NN'), ('is', 'VBZ'), ('16', 'CD'), ('rounds', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Key', 'key'), ('size', 'size'), (':', ':'), ('Key', 'key'), ('sizes', 'size'), ('of', 'of'), ('64', '64'), ('bits', 'bit'), ('or', 'or'), ('less', 'less'), ('are', 'be'), ('now', 'now'), ('widely', 'widely'), ('considered', 'consider'), ('to', 'to'), ('be', 'be'), ('insufficient', 'insufficient'), (',', ','), ('These', 'this'), ('days', 'day'), ('at', 'at'), ('least', 'least'), ('128', '128'), ('bit', 'bit'), (',', ','), ('more', 'more'), ('better', 'good'), (',', ','), ('e.g.', 'e.g.'), ('---.', '---.'), ('-', '-'), ('192', '192'), ('or', 'or'), ('256', '256'), ('bit', 'bit'), ('Number', 'number'), ('of', 'of'), ('rounds', 'round'), (':', ':'), ('A', 'a'), ('typical', 'typical'), ('size', 'size'), ('is', 'be'), ('16', '16'), ('rounds', 'round'), ('.', '.')] 

 Dependency tags are: 
>> [(('Key', 'size'), 'amod'), (('size', 'root'), 'root'), ((':', 'size'), 'punct'), (('Key', 'sizes'), 'amod'), (('sizes', 'considered'), 'nsubj:pass'), (('of', 'bits'), 'case'), (('64', 'bits'), 'nummod'), (('bits', 'sizes'), 'nmod'), (('or', 'less'), 'cc'), (('less', 'bits'), 'conj'), (('are', 'considered'), 'aux:pass'), (('now', 'considered'), 'advmod'), (('widely', 'considered'), 'advmod'), (('considered', 'size'), 'appos'), (('to', 'insufficient'), 'mark'), (('be', 'insufficient'), 'cop'), (('insufficient', 'considered'), 'xcomp'), ((',', 'bit'), 'punct'), (('These', 'days'), 'det'), (('days', 'better'), 'obl:tmod'), (('at', 'least'), 'case'), (('least', '128'), 'nmod'), (('128', 'bit'), 'nummod'), (('bit', 'insufficient'), 'obl'), ((',', 'better'), 'punct'), (('more', 'better'), 'advmod'), (('better', 'size'), 'amod'), ((',', 'bit'), 'punct'), (('e.g.', 'Number'), 'advmod'), (('---.', 'Number'), 'nummod'), (('-', '192'), 'case'), (('192', '---.'), 'nmod'), (('or', '256'), 'cc'), (('256', '---.'), 'conj'), (('bit', 'Number'), 'compound'), (('Number', 'better'), 'conj'), (('of', 'rounds'), 'case'), (('rounds', 'Number'), 'nmod'), ((':', 'rounds'), 'punct'), (('A', 'size'), 'det'), (('typical', 'size'), 'amod'), (('size', 'rounds'), 'nsubj'), (('is', 'rounds'), 'cop'), (('16', 'rounds'), 'nummod'), (('rounds', 'Number'), 'parataxis'), (('.', 'size'), 'punct')]

 Named Entities are: 
>> [('64 bits', 'QUANTITY'), ('at least 128', 'CARDINAL'), ('256 bit', 'QUANTITY'), ('16', 'CARDINAL')]

========================== Sentence 21 ===========================

 Round function F: Again, greater complexity generally means greater resistance to cryptanalysis. 

Tokens are: 
>> ['Round', 'function', 'F', ':', 'Again', ',', 'greater', 'complexity', 'generally', 'means', 'greater', 'resistance', 'to', 'cryptanalysis', '.'] 

 UPOS tags are: 
>> [('Round', 'ADJ'), ('function', 'NOUN'), ('F', 'PROPN'), (':', 'PUNCT'), ('Again', 'ADV'), (',', 'PUNCT'), ('greater', 'ADJ'), ('complexity', 'NOUN'), ('generally', 'ADV'), ('means', 'VERB'), ('greater', 'ADJ'), ('resistance', 'NOUN'), ('to', 'ADP'), ('cryptanalysis', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Round', 'JJ'), ('function', 'NN'), ('F', 'NNP'), (':', ':'), ('Again', 'RB'), (',', ','), ('greater', 'JJR'), ('complexity', 'NN'), ('generally', 'RB'), ('means', 'VBZ'), ('greater', 'JJR'), ('resistance', 'NN'), ('to', 'IN'), ('cryptanalysis', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Round', 'round'), ('function', 'function'), ('F', 'F'), (':', ':'), ('Again', 'again'), (',', ','), ('greater', 'great'), ('complexity', 'complexity'), ('generally', 'generally'), ('means', 'mean'), ('greater', 'great'), ('resistance', 'resistance'), ('to', 'to'), ('cryptanalysis', 'cryptanalysis'), ('.', '.')] 

 Dependency tags are: 
>> [(('Round', 'function'), 'amod'), (('function', 'root'), 'root'), (('F', 'function'), 'appos'), ((':', 'function'), 'punct'), (('Again', 'means'), 'advmod'), ((',', 'means'), 'punct'), (('greater', 'complexity'), 'amod'), (('complexity', 'means'), 'nsubj'), (('generally', 'means'), 'advmod'), (('means', 'function'), 'parataxis'), (('greater', 'resistance'), 'amod'), (('resistance', 'means'), 'obj'), (('to', 'cryptanalysis'), 'case'), (('cryptanalysis', 'resistance'), 'nmod'), (('.', 'function'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 Subkey generation algorithm: Greater complexity in this algorithm should lead to greater difficulty of cryptanalysis. 

Tokens are: 
>> ['Subkey', 'generation', 'algorithm', ':', 'Greater', 'complexity', 'in', 'this', 'algorithm', 'should', 'lead', 'to', 'greater', 'difficulty', 'of', 'cryptanalysis', '.'] 

 UPOS tags are: 
>> [('Subkey', 'NOUN'), ('generation', 'NOUN'), ('algorithm', 'NOUN'), (':', 'PUNCT'), ('Greater', 'ADJ'), ('complexity', 'NOUN'), ('in', 'ADP'), ('this', 'DET'), ('algorithm', 'NOUN'), ('should', 'AUX'), ('lead', 'VERB'), ('to', 'ADP'), ('greater', 'ADJ'), ('difficulty', 'NOUN'), ('of', 'ADP'), ('cryptanalysis', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Subkey', 'NN'), ('generation', 'NN'), ('algorithm', 'NN'), (':', ':'), ('Greater', 'JJR'), ('complexity', 'NN'), ('in', 'IN'), ('this', 'DT'), ('algorithm', 'NN'), ('should', 'MD'), ('lead', 'VB'), ('to', 'IN'), ('greater', 'JJR'), ('difficulty', 'NN'), ('of', 'IN'), ('cryptanalysis', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Subkey', 'subkey'), ('generation', 'generation'), ('algorithm', 'algorithm'), (':', ':'), ('Greater', 'Great'), ('complexity', 'complexity'), ('in', 'in'), ('this', 'this'), ('algorithm', 'algorithm'), ('should', 'should'), ('lead', 'lead'), ('to', 'to'), ('greater', 'great'), ('difficulty', 'difficulty'), ('of', 'of'), ('cryptanalysis', 'cryptanalysis'), ('.', '.')] 

 Dependency tags are: 
>> [(('Subkey', 'generation'), 'compound'), (('generation', 'algorithm'), 'compound'), (('algorithm', 'root'), 'root'), ((':', 'algorithm'), 'punct'), (('Greater', 'complexity'), 'amod'), (('complexity', 'lead'), 'nsubj'), (('in', 'algorithm'), 'case'), (('this', 'algorithm'), 'det'), (('algorithm', 'complexity'), 'nmod'), (('should', 'lead'), 'aux'), (('lead', 'algorithm'), 'parataxis'), (('to', 'difficulty'), 'case'), (('greater', 'difficulty'), 'amod'), (('difficulty', 'lead'), 'obl'), (('of', 'cryptanalysis'), 'case'), (('cryptanalysis', 'difficulty'), 'nmod'), (('.', 'algorithm'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 23 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   Feistel Encryption & Decryption 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Feistel', 'Encryption', '&', 'Decryption'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Feistel', 'PROPN'), ('Encryption', 'NOUN'), ('&', 'CCONJ'), ('Decryption', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Feistel', 'NNP'), ('Encryption', 'NN'), ('&', 'CC'), ('Decryption', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Feistel', 'Feistel'), ('Encryption', 'encryption'), ('&', '&'), ('Decryption', 'decryption')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('Feistel', 'Encryption'), 'compound'), (('Encryption', 'Institute'), 'nmod'), (('&', 'Decryption'), 'cc'), (('Decryption', 'Encryption'), 'conj')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('Feistel Encryption & Decryption', 'ORG')]

========================== Sentence 24 ===========================

 Prove that o/p of first round of Decryption is equal to 32-bit swap of i/p of 16th round of Encryption  LD1=RE15 & RD1=LE15   On Encryption Side:   On Decryption Side:   XOR Associativity Property              Data Encryption Standard (DES) Type: Block Cipher Block Size : 64-bit Key Size: 64-bit, with only 56-bit effective Number of Rounds: 16    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Initial Permutation Round 1 Round 2 Round 16 32-bit swap Inverse Initial Permutation Permuted choice 2 Permuted choice 1 Left circular shift Permuted choice 2 Left circular shift Permuted choice 2 Left circular shift         64-bit plaintext         64-bit key         64-bit ciphertext 64 56 64 64 56 56 56 56 48 K1 48 K2 48 K16 DES Encryption Algorithm   DES Encryption Algorithm (Cont…) 

Tokens are: 
>> ['Prove', 'that', 'o/p', 'of', 'first', 'round', 'of', 'Decryption', 'is', 'equal', 'to', '32', '-', 'bit', 'swap', 'of', 'i/p', 'of', '16th', 'round', 'of', 'Encryption', 'LD1=RE15', '&', 'RD1=LE15', 'On', 'Encryption', 'Side', ':', 'On', 'Decryption', 'Side', ':', 'XOR', 'Associativity', 'Property', 'Data', 'Encryption', 'Standard', '(', 'DES', ')', 'Type', ':', 'Block', 'Cipher', 'Block', 'Size', ':', '64', '-', 'bit', 'Key', 'Size', ':', '64', '-', 'bit', ',', 'with', 'only', '56', '-', 'bit', 'effective', 'Number', 'of', 'Rounds', ':', '16', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Initial', 'Permutation', 'Round', '1', 'Round', '2', 'Round', '16', '32', '-', 'bit', 'swap', 'Inverse', 'Initial', 'Permutation', 'Permuted', 'choice', '2', 'Permuted', 'choice', '1', 'Left', 'circular', 'shift', 'Permuted', 'choice', '2', 'Left', 'circular', 'shift', 'Permuted', 'choice', '2', 'Left', 'circular', 'shift', '64', '-', 'bit', 'plaintext', '64', '-', 'bit', 'key', '64', '-', 'bit', 'ciphertext', '64', '56', '64', '64', '56', '56', '56', '56', '48', 'K1', '48', 'K2', '48', 'K16', 'DES', 'Encryption', 'Algorithm', 'DES', 'Encryption', 'Algorithm', '(', 'Cont', '…', ')'] 

 UPOS tags are: 
>> [('Prove', 'VERB'), ('that', 'SCONJ'), ('o/p', 'NOUN'), ('of', 'ADP'), ('first', 'ADJ'), ('round', 'NOUN'), ('of', 'ADP'), ('Decryption', 'NOUN'), ('is', 'AUX'), ('equal', 'ADJ'), ('to', 'ADP'), ('32', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('swap', 'NOUN'), ('of', 'ADP'), ('i/p', 'NOUN'), ('of', 'ADP'), ('16th', 'ADJ'), ('round', 'NOUN'), ('of', 'ADP'), ('Encryption', 'NOUN'), ('LD1=RE15', 'NOUN'), ('&', 'CCONJ'), ('RD1=LE15', 'NOUN'), ('On', 'ADP'), ('Encryption', 'NOUN'), ('Side', 'NOUN'), (':', 'PUNCT'), ('On', 'ADP'), ('Decryption', 'NOUN'), ('Side', 'NOUN'), (':', 'PUNCT'), ('XOR', 'PROPN'), ('Associativity', 'NOUN'), ('Property', 'NOUN'), ('Data', 'NOUN'), ('Encryption', 'PROPN'), ('Standard', 'PROPN'), ('(', 'PUNCT'), ('DES', 'PROPN'), (')', 'PUNCT'), ('Type', 'NOUN'), (':', 'PUNCT'), ('Block', 'NOUN'), ('Cipher', 'NOUN'), ('Block', 'NOUN'), ('Size', 'NOUN'), (':', 'PUNCT'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('Key', 'ADJ'), ('Size', 'NOUN'), (':', 'PUNCT'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('only', 'ADV'), ('56', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('effective', 'ADJ'), ('Number', 'NOUN'), ('of', 'ADP'), ('Rounds', 'NOUN'), (':', 'PUNCT'), ('16', 'NUM'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Initial', 'ADJ'), ('Permutation', 'PROPN'), ('Round', 'PROPN'), ('1', 'NUM'), ('Round', 'PROPN'), ('2', 'NUM'), ('Round', 'PROPN'), ('16', 'NUM'), ('32', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('swap', 'NOUN'), ('Inverse', 'NOUN'), ('Initial', 'ADJ'), ('Permutation', 'NOUN'), ('Permuted', 'VERB'), ('choice', 'NOUN'), ('2', 'NUM'), ('Permuted', 'VERB'), ('choice', 'NOUN'), ('1', 'NUM'), ('Left', 'ADJ'), ('circular', 'ADJ'), ('shift', 'NOUN'), ('Permuted', 'VERB'), ('choice', 'NOUN'), ('2', 'NUM'), ('Left', 'ADJ'), ('circular', 'ADJ'), ('shift', 'NOUN'), ('Permuted', 'VERB'), ('choice', 'NOUN'), ('2', 'NUM'), ('Left', 'ADJ'), ('circular', 'ADJ'), ('shift', 'NOUN'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('plaintext', 'NOUN'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('key', 'ADJ'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('ciphertext', 'NOUN'), ('64', 'NUM'), ('56', 'NUM'), ('64', 'NUM'), ('64', 'NUM'), ('56', 'NUM'), ('56', 'NUM'), ('56', 'NUM'), ('56', 'NUM'), ('48', 'NUM'), ('K1', 'NOUN'), ('48', 'NUM'), ('K2', 'NOUN'), ('48', 'NUM'), ('K16', 'PROPN'), ('DES', 'PROPN'), ('Encryption', 'PROPN'), ('Algorithm', 'PROPN'), ('DES', 'PROPN'), ('Encryption', 'PROPN'), ('Algorithm', 'PROPN'), ('(', 'PUNCT'), ('Cont', 'NOUN'), ('…', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Prove', 'VB'), ('that', 'IN'), ('o/p', 'NN'), ('of', 'IN'), ('first', 'JJ'), ('round', 'NN'), ('of', 'IN'), ('Decryption', 'NN'), ('is', 'VBZ'), ('equal', 'JJ'), ('to', 'IN'), ('32', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('swap', 'NN'), ('of', 'IN'), ('i/p', 'NN'), ('of', 'IN'), ('16th', 'JJ'), ('round', 'NN'), ('of', 'IN'), ('Encryption', 'NN'), ('LD1=RE15', 'NN'), ('&', 'CC'), ('RD1=LE15', 'NN'), ('On', 'IN'), ('Encryption', 'NN'), ('Side', 'NN'), (':', ':'), ('On', 'IN'), ('Decryption', 'NN'), ('Side', 'NN'), (':', ':'), ('XOR', 'NNP'), ('Associativity', 'NN'), ('Property', 'NN'), ('Data', 'NN'), ('Encryption', 'NNP'), ('Standard', 'NNP'), ('(', '-LRB-'), ('DES', 'NNP'), (')', '-RRB-'), ('Type', 'NN'), (':', ':'), ('Block', 'NN'), ('Cipher', 'NN'), ('Block', 'NN'), ('Size', 'NN'), (':', ':'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('Key', 'JJ'), ('Size', 'NN'), (':', ':'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), (',', ','), ('with', 'IN'), ('only', 'RB'), ('56', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('effective', 'JJ'), ('Number', 'NN'), ('of', 'IN'), ('Rounds', 'NNS'), (':', ':'), ('16', 'CD'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Initial', 'JJ'), ('Permutation', 'NNP'), ('Round', 'NNP'), ('1', 'CD'), ('Round', 'NNP'), ('2', 'CD'), ('Round', 'NNP'), ('16', 'CD'), ('32', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('swap', 'NN'), ('Inverse', 'NN'), ('Initial', 'JJ'), ('Permutation', 'NN'), ('Permuted', 'VBN'), ('choice', 'NN'), ('2', 'CD'), ('Permuted', 'VBN'), ('choice', 'NN'), ('1', 'CD'), ('Left', 'JJ'), ('circular', 'JJ'), ('shift', 'NN'), ('Permuted', 'VBN'), ('choice', 'NN'), ('2', 'CD'), ('Left', 'JJ'), ('circular', 'JJ'), ('shift', 'NN'), ('Permuted', 'VBN'), ('choice', 'NN'), ('2', 'CD'), ('Left', 'JJ'), ('circular', 'JJ'), ('shift', 'NN'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('plaintext', 'NN'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('key', 'JJ'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('ciphertext', 'NN'), ('64', 'CD'), ('56', 'CD'), ('64', 'CD'), ('64', 'CD'), ('56', 'CD'), ('56', 'CD'), ('56', 'CD'), ('56', 'CD'), ('48', 'CD'), ('K1', 'NN'), ('48', 'CD'), ('K2', 'NN'), ('48', 'CD'), ('K16', 'NNP'), ('DES', 'NNP'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('DES', 'NNP'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '-LRB-'), ('Cont', 'NN'), ('…', '.'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Prove', 'prove'), ('that', 'that'), ('o/p', 'o/p'), ('of', 'of'), ('first', 'first'), ('round', 'round'), ('of', 'of'), ('Decryption', 'decryption'), ('is', 'be'), ('equal', 'equal'), ('to', 'to'), ('32', '32'), ('-', '-'), ('bit', 'bit'), ('swap', 'swap'), ('of', 'of'), ('i/p', 'i/p'), ('of', 'of'), ('16th', '16th'), ('round', 'round'), ('of', 'of'), ('Encryption', 'encryption'), ('LD1=RE15', 'ld1=re15'), ('&', '&'), ('RD1=LE15', 'rd1=le15'), ('On', 'on'), ('Encryption', 'encryption'), ('Side', 'side'), (':', ':'), ('On', 'on'), ('Decryption', 'decryption'), ('Side', 'side'), (':', ':'), ('XOR', 'XOR'), ('Associativity', 'associativity'), ('Property', 'property'), ('Data', 'data'), ('Encryption', 'Encryption'), ('Standard', 'Standard'), ('(', '('), ('DES', 'DES'), (')', ')'), ('Type', 'type'), (':', ':'), ('Block', 'block'), ('Cipher', 'cipher'), ('Block', 'block'), ('Size', 'size'), (':', ':'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('Key', 'key'), ('Size', 'size'), (':', ':'), ('64', '64'), ('-', '-'), ('bit', 'bit'), (',', ','), ('with', 'with'), ('only', 'only'), ('56', '56'), ('-', '-'), ('bit', 'bit'), ('effective', 'effective'), ('Number', 'number'), ('of', 'of'), ('Rounds', 'round'), (':', ':'), ('16', '16'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Initial', 'Initial'), ('Permutation', 'permutation'), ('Round', 'Round'), ('1', '1'), ('Round', 'Round'), ('2', '2'), ('Round', 'Round'), ('16', '16'), ('32', '32'), ('-', '-'), ('bit', 'bit'), ('swap', 'swap'), ('Inverse', 'inverse'), ('Initial', 'Initial'), ('Permutation', 'permutation'), ('Permuted', 'permute'), ('choice', 'choice'), ('2', '2'), ('Permuted', 'permute'), ('choice', 'choice'), ('1', '1'), ('Left', 'Left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'permute'), ('choice', 'choice'), ('2', '2'), ('Left', 'Left'), ('circular', 'circular'), ('shift', 'shift'), ('Permuted', 'permute'), ('choice', 'choice'), ('2', '2'), ('Left', 'Left'), ('circular', 'circular'), ('shift', 'shift'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('plaintext', 'plaintext'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('key', 'key'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('ciphertext', 'ciphertext'), ('64', '64'), ('56', '56'), ('64', '64'), ('64', '64'), ('56', '56'), ('56', '56'), ('56', '56'), ('56', '56'), ('48', '48'), ('K1', 'k1'), ('48', '48'), ('K2', 'k2'), ('48', '48'), ('K16', 'K16'), ('DES', 'DES'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('DES', 'DES'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('Cont', 'cont'), ('…', '…'), (')', ')')] 

 Dependency tags are: 
>> [(('Prove', 'root'), 'root'), (('that', 'equal'), 'mark'), (('o/p', 'equal'), 'nsubj'), (('of', 'round'), 'case'), (('first', 'round'), 'amod'), (('round', 'o/p'), 'nmod'), (('of', 'Decryption'), 'case'), (('Decryption', 'round'), 'nmod'), (('is', 'equal'), 'cop'), (('equal', 'Prove'), 'ccomp'), (('to', 'swap'), 'case'), (('32', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'swap'), 'compound'), (('swap', 'equal'), 'obl'), (('of', 'i/p'), 'case'), (('i/p', 'swap'), 'nmod'), (('of', 'round'), 'case'), (('16th', 'round'), 'amod'), (('round', 'i/p'), 'nmod'), (('of', 'LD1=RE15'), 'case'), (('Encryption', 'round'), 'nmod'), (('LD1=RE15', 'round'), 'nmod'), (('&', 'RD1=LE15'), 'cc'), (('RD1=LE15', 'LD1=RE15'), 'conj'), (('On', 'Side'), 'case'), (('Encryption', 'Side'), 'compound'), (('Side', 'LD1=RE15'), 'nmod'), ((':', 'Side'), 'punct'), (('On', 'Side'), 'case'), (('Decryption', 'Side'), 'compound'), (('Side', 'Side'), 'nmod'), ((':', 'Side'), 'punct'), (('XOR', 'Side'), 'compound'), (('Associativity', 'Property'), 'compound'), (('Property', 'Standard'), 'compound'), (('Data', 'Standard'), 'compound'), (('Encryption', 'Standard'), 'compound'), (('Standard', 'Type'), 'compound'), (('(', 'DES'), 'punct'), (('DES', 'Type'), 'appos'), ((')', 'DES'), 'punct'), (('Type', 'Side'), 'appos'), ((':', 'Type'), 'punct'), (('Block', 'Size'), 'compound'), (('Cipher', 'Block'), 'compound'), (('Block', 'Size'), 'compound'), (('Size', 'Type'), 'appos'), ((':', 'Size'), 'punct'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'Key'), 'obl:npmod'), (('Key', 'Size'), 'amod'), (('Size', 'Size'), 'appos'), ((':', 'Size'), 'punct'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'Size'), 'appos'), ((',', 'Size'), 'punct'), (('with', 'Number'), 'case'), (('only', 'bit'), 'advmod'), (('56', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'effective'), 'obl:npmod'), (('effective', 'Number'), 'amod'), (('Number', 'Size'), 'nmod'), (('of', 'Rounds'), 'case'), (('Rounds', 'Number'), 'nmod'), ((':', 'Number'), 'punct'), (('16', 'Unit'), 'nummod'), (('Unit', 'Institute'), 'compound'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Number'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Round'), 'compound'), (('Initial', 'Round'), 'amod'), (('Permutation', 'Round'), 'compound'), (('Round', 'Institute'), 'conj'), (('1', 'Round'), 'nummod'), (('Round', 'Round'), 'compound'), (('2', 'Round'), 'nummod'), (('Round', 'Round'), 'compound'), (('16', 'bit'), 'nummod'), (('32', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'Inverse'), 'compound'), (('swap', 'Inverse'), 'compound'), (('Inverse', 'Round'), 'compound'), (('Initial', 'choice'), 'amod'), (('Permutation', 'choice'), 'compound'), (('Permuted', 'choice'), 'amod'), (('choice', 'Inverse'), 'compound'), (('2', 'choice'), 'nummod'), (('Permuted', 'choice'), 'amod'), (('choice', 'choice'), 'conj'), (('1', 'shift'), 'nummod'), (('Left', 'shift'), 'amod'), (('circular', 'shift'), 'amod'), (('shift', 'choice'), 'compound'), (('Permuted', 'choice'), 'amod'), (('choice', 'choice'), 'conj'), (('2', 'choice'), 'nummod'), (('Left', 'shift'), 'amod'), (('circular', 'shift'), 'amod'), (('shift', 'choice'), 'compound'), (('Permuted', 'choice'), 'amod'), (('choice', 'choice'), 'conj'), (('2', 'shift'), 'nummod'), (('Left', 'shift'), 'amod'), (('circular', 'shift'), 'amod'), (('shift', 'plaintext'), 'compound'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'plaintext'), 'compound'), (('plaintext', 'choice'), 'appos'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'bit'), 'compound'), (('key', 'ciphertext'), 'amod'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'ciphertext'), 'compound'), (('ciphertext', 'plaintext'), 'appos'), (('64', 'ciphertext'), 'nummod'), (('56', '64'), 'compound'), (('64', '64'), 'compound'), (('64', 'ciphertext'), 'nummod'), (('56', 'ciphertext'), 'nummod'), (('56', 'K1'), 'nummod'), (('56', 'K1'), 'nummod'), (('56', 'K1'), 'nummod'), (('48', 'K1'), 'nummod'), (('K1', 'ciphertext'), 'appos'), (('48', 'K2'), 'nummod'), (('K2', 'Algorithm'), 'compound'), (('48', 'Algorithm'), 'nummod'), (('K16', 'Algorithm'), 'compound'), (('DES', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'Algorithm'), 'compound'), (('DES', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'K1'), 'appos'), (('(', 'Cont'), 'punct'), (('Cont', 'Algorithm'), 'appos'), (('…', 'Cont'), 'punct'), ((')', 'Cont'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('32-bit', 'QUANTITY'), ('16th', 'ORDINAL'), ('64', 'CARDINAL'), ('64', 'CARDINAL'), ('56', 'CARDINAL'), ('16', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('16', 'CARDINAL'), ('32', 'CARDINAL'), ('2', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('2', 'CARDINAL'), ('64', 'CARDINAL')]

========================== Sentence 25 ===========================

 First, the 64-bit plaintext passes through an initial permutation (IP) that rearranges the bits to produce the permuted input. 

Tokens are: 
>> ['First', ',', 'the', '64', '-', 'bit', 'plaintext', 'passes', 'through', 'an', 'initial', 'permutation', '(', 'IP', ')', 'that', 'rearranges', 'the', 'bits', 'to', 'produce', 'the', 'permuted', 'input', '.'] 

 UPOS tags are: 
>> [('First', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('plaintext', 'NOUN'), ('passes', 'VERB'), ('through', 'ADP'), ('an', 'DET'), ('initial', 'ADJ'), ('permutation', 'NOUN'), ('(', 'PUNCT'), ('IP', 'NOUN'), (')', 'PUNCT'), ('that', 'PRON'), ('rearranges', 'VERB'), ('the', 'DET'), ('bits', 'NOUN'), ('to', 'PART'), ('produce', 'VERB'), ('the', 'DET'), ('permuted', 'VERB'), ('input', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('First', 'RB'), (',', ','), ('the', 'DT'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('plaintext', 'NN'), ('passes', 'VBZ'), ('through', 'IN'), ('an', 'DT'), ('initial', 'JJ'), ('permutation', 'NN'), ('(', '-LRB-'), ('IP', 'NN'), (')', '-RRB-'), ('that', 'WDT'), ('rearranges', 'VBZ'), ('the', 'DT'), ('bits', 'NNS'), ('to', 'TO'), ('produce', 'VB'), ('the', 'DT'), ('permuted', 'VBN'), ('input', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('First', 'first'), (',', ','), ('the', 'the'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('plaintext', 'plaintext'), ('passes', 'pass'), ('through', 'through'), ('an', 'a'), ('initial', 'initial'), ('permutation', 'permutation'), ('(', '('), ('IP', 'ip'), (')', ')'), ('that', 'that'), ('rearranges', 'rearrange'), ('the', 'the'), ('bits', 'bit'), ('to', 'to'), ('produce', 'produce'), ('the', 'the'), ('permuted', 'permute'), ('input', 'input'), ('.', '.')] 

 Dependency tags are: 
>> [(('First', 'passes'), 'advmod'), ((',', 'passes'), 'punct'), (('the', 'plaintext'), 'det'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'plaintext'), 'compound'), (('plaintext', 'passes'), 'nsubj'), (('passes', 'root'), 'root'), (('through', 'permutation'), 'case'), (('an', 'permutation'), 'det'), (('initial', 'permutation'), 'amod'), (('permutation', 'passes'), 'obl'), (('(', 'IP'), 'punct'), (('IP', 'permutation'), 'appos'), ((')', 'IP'), 'punct'), (('that', 'rearranges'), 'nsubj'), (('rearranges', 'permutation'), 'acl:relcl'), (('the', 'bits'), 'det'), (('bits', 'rearranges'), 'obj'), (('to', 'produce'), 'mark'), (('produce', 'bits'), 'acl'), (('the', 'input'), 'det'), (('permuted', 'input'), 'amod'), (('input', 'produce'), 'obj'), (('.', 'passes'), 'punct')]

 Named Entities are: 
>> [('First', 'ORDINAL'), ('64-bit', 'QUANTITY')]

========================== Sentence 26 ===========================

 This is followed by a phase consisting of sixteen rounds of the same function, which involves both permutation and substitution functions. 

Tokens are: 
>> ['This', 'is', 'followed', 'by', 'a', 'phase', 'consisting', 'of', 'sixteen', 'rounds', 'of', 'the', 'same', 'function', ',', 'which', 'involves', 'both', 'permutation', 'and', 'substitution', 'functions', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('followed', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('phase', 'NOUN'), ('consisting', 'VERB'), ('of', 'ADP'), ('sixteen', 'NUM'), ('rounds', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('function', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('involves', 'VERB'), ('both', 'CCONJ'), ('permutation', 'NOUN'), ('and', 'CCONJ'), ('substitution', 'NOUN'), ('functions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('followed', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('phase', 'NN'), ('consisting', 'VBG'), ('of', 'IN'), ('sixteen', 'CD'), ('rounds', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('function', 'NN'), (',', ','), ('which', 'WDT'), ('involves', 'VBZ'), ('both', 'CC'), ('permutation', 'NN'), ('and', 'CC'), ('substitution', 'NN'), ('functions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('followed', 'follow'), ('by', 'by'), ('a', 'a'), ('phase', 'phase'), ('consisting', 'consist'), ('of', 'of'), ('sixteen', 'sixteen'), ('rounds', 'round'), ('of', 'of'), ('the', 'the'), ('same', 'same'), ('function', 'function'), (',', ','), ('which', 'which'), ('involves', 'involve'), ('both', 'both'), ('permutation', 'permutation'), ('and', 'and'), ('substitution', 'substitution'), ('functions', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'followed'), 'nsubj:pass'), (('is', 'followed'), 'aux:pass'), (('followed', 'root'), 'root'), (('by', 'phase'), 'case'), (('a', 'phase'), 'det'), (('phase', 'followed'), 'obl'), (('consisting', 'phase'), 'acl'), (('of', 'rounds'), 'case'), (('sixteen', 'rounds'), 'nummod'), (('rounds', 'consisting'), 'obl'), (('of', 'function'), 'case'), (('the', 'function'), 'det'), (('same', 'function'), 'amod'), (('function', 'rounds'), 'nmod'), ((',', 'involves'), 'punct'), (('which', 'involves'), 'nsubj'), (('involves', 'function'), 'acl:relcl'), (('both', 'permutation'), 'cc:preconj'), (('permutation', 'functions'), 'compound'), (('and', 'substitution'), 'cc'), (('substitution', 'permutation'), 'conj'), (('functions', 'involves'), 'obj'), (('.', 'followed'), 'punct')]

 Named Entities are: 
>> [('sixteen', 'CARDINAL')]

========================== Sentence 27 ===========================

 Finally, the preoutput is passed through a permutation that is the inverse of the initial permutation function, to produce the 64-bit ciphertext. 

Tokens are: 
>> ['Finally', ',', 'the', 'preoutput', 'is', 'passed', 'through', 'a', 'permutation', 'that', 'is', 'the', 'inverse', 'of', 'the', 'initial', 'permutation', 'function', ',', 'to', 'produce', 'the', '64', '-', 'bit', 'ciphertext', '.'] 

 UPOS tags are: 
>> [('Finally', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('preoutput', 'NOUN'), ('is', 'AUX'), ('passed', 'VERB'), ('through', 'ADP'), ('a', 'DET'), ('permutation', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('inverse', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('initial', 'ADJ'), ('permutation', 'NOUN'), ('function', 'NOUN'), (',', 'PUNCT'), ('to', 'PART'), ('produce', 'VERB'), ('the', 'DET'), ('64', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('ciphertext', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Finally', 'RB'), (',', ','), ('the', 'DT'), ('preoutput', 'NN'), ('is', 'VBZ'), ('passed', 'VBN'), ('through', 'IN'), ('a', 'DT'), ('permutation', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('the', 'DT'), ('inverse', 'NN'), ('of', 'IN'), ('the', 'DT'), ('initial', 'JJ'), ('permutation', 'NN'), ('function', 'NN'), (',', ','), ('to', 'TO'), ('produce', 'VB'), ('the', 'DT'), ('64', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('ciphertext', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Finally', 'finally'), (',', ','), ('the', 'the'), ('preoutput', 'preoutput'), ('is', 'be'), ('passed', 'pass'), ('through', 'through'), ('a', 'a'), ('permutation', 'permutation'), ('that', 'that'), ('is', 'be'), ('the', 'the'), ('inverse', 'inverse'), ('of', 'of'), ('the', 'the'), ('initial', 'initial'), ('permutation', 'permutation'), ('function', 'function'), (',', ','), ('to', 'to'), ('produce', 'produce'), ('the', 'the'), ('64', '64'), ('-', '-'), ('bit', 'bit'), ('ciphertext', 'ciphertext'), ('.', '.')] 

 Dependency tags are: 
>> [(('Finally', 'passed'), 'advmod'), ((',', 'passed'), 'punct'), (('the', 'preoutput'), 'det'), (('preoutput', 'passed'), 'nsubj:pass'), (('is', 'passed'), 'aux:pass'), (('passed', 'root'), 'root'), (('through', 'permutation'), 'case'), (('a', 'permutation'), 'det'), (('permutation', 'passed'), 'obl'), (('that', 'inverse'), 'nsubj'), (('is', 'inverse'), 'cop'), (('the', 'inverse'), 'det'), (('inverse', 'permutation'), 'acl:relcl'), (('of', 'function'), 'case'), (('the', 'function'), 'det'), (('initial', 'function'), 'amod'), (('permutation', 'function'), 'compound'), (('function', 'inverse'), 'nmod'), ((',', 'produce'), 'punct'), (('to', 'produce'), 'mark'), (('produce', 'inverse'), 'advcl'), (('the', 'ciphertext'), 'det'), (('64', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'ciphertext'), 'compound'), (('ciphertext', 'produce'), 'obj'), (('.', 'passed'), 'punct')]

 Named Entities are: 
>> [('64-bit', 'QUANTITY')]

========================== Sentence 28 ===========================

 The 56-bit key is passed through a permutation function. 

Tokens are: 
>> ['The', '56', '-', 'bit', 'key', 'is', 'passed', 'through', 'a', 'permutation', 'function', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('56', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('key', 'NOUN'), ('is', 'AUX'), ('passed', 'VERB'), ('through', 'ADP'), ('a', 'DET'), ('permutation', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('56', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('key', 'NN'), ('is', 'VBZ'), ('passed', 'VBN'), ('through', 'IN'), ('a', 'DT'), ('permutation', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('56', '56'), ('-', '-'), ('bit', 'bit'), ('key', 'key'), ('is', 'be'), ('passed', 'pass'), ('through', 'through'), ('a', 'a'), ('permutation', 'permutation'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'key'), 'det'), (('56', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'key'), 'compound'), (('key', 'passed'), 'nsubj:pass'), (('is', 'passed'), 'aux:pass'), (('passed', 'root'), 'root'), (('through', 'function'), 'case'), (('a', 'function'), 'det'), (('permutation', 'function'), 'compound'), (('function', 'passed'), 'obl'), (('.', 'passed'), 'punct')]

 Named Entities are: 
>> [('56-bit', 'QUANTITY')]

========================== Sentence 29 ===========================

 For each of the sixteen rounds, a subkey (Ki) is produced by the combination of a left circular shift and a permutation. 

Tokens are: 
>> ['For', 'each', 'of', 'the', 'sixteen', 'rounds', ',', 'a', 'subkey', '(', 'Ki', ')', 'is', 'produced', 'by', 'the', 'combination', 'of', 'a', 'left', 'circular', 'shift', 'and', 'a', 'permutation', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('sixteen', 'NUM'), ('rounds', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('subkey', 'NOUN'), ('(', 'PUNCT'), ('Ki', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('produced', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('combination', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('left', 'VERB'), ('circular', 'ADJ'), ('shift', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('permutation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('of', 'IN'), ('the', 'DT'), ('sixteen', 'CD'), ('rounds', 'NNS'), (',', ','), ('a', 'DT'), ('subkey', 'NN'), ('(', '-LRB-'), ('Ki', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('produced', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('combination', 'NN'), ('of', 'IN'), ('a', 'DT'), ('left', 'VBN'), ('circular', 'JJ'), ('shift', 'NN'), ('and', 'CC'), ('a', 'DT'), ('permutation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('of', 'of'), ('the', 'the'), ('sixteen', 'sixteen'), ('rounds', 'round'), (',', ','), ('a', 'a'), ('subkey', 'subkey'), ('(', '('), ('Ki', 'Ki'), (')', ')'), ('is', 'be'), ('produced', 'produce'), ('by', 'by'), ('the', 'the'), ('combination', 'combination'), ('of', 'of'), ('a', 'a'), ('left', 'leave'), ('circular', 'circular'), ('shift', 'shift'), ('and', 'and'), ('a', 'a'), ('permutation', 'permutation'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'each'), 'case'), (('each', 'produced'), 'obl'), (('of', 'rounds'), 'case'), (('the', 'rounds'), 'det'), (('sixteen', 'rounds'), 'nummod'), (('rounds', 'each'), 'nmod'), ((',', 'produced'), 'punct'), (('a', 'subkey'), 'det'), (('subkey', 'produced'), 'nsubj:pass'), (('(', 'Ki'), 'punct'), (('Ki', 'subkey'), 'appos'), ((')', 'Ki'), 'punct'), (('is', 'produced'), 'aux:pass'), (('produced', 'root'), 'root'), (('by', 'combination'), 'case'), (('the', 'combination'), 'det'), (('combination', 'produced'), 'obl'), (('of', 'shift'), 'case'), (('a', 'shift'), 'det'), (('left', 'shift'), 'amod'), (('circular', 'shift'), 'amod'), (('shift', 'combination'), 'nmod'), (('and', 'permutation'), 'cc'), (('a', 'permutation'), 'det'), (('permutation', 'shift'), 'conj'), (('.', 'produced'), 'punct')]

 Named Entities are: 
>> [('sixteen', 'CARDINAL')]

========================== Sentence 30 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  DES Single Round   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   32-bits  32-bits  28-bits  28-bits  Expansion/ permutation (E table)  XOR  Substitution/choice (S-box) Permutation (P)  XOR     Left Shift (S) Left Shift (S)  Permutation/ compression (Permuted choice 2)   48 Ki 48 48 32 32      confusion step is the S-box substitution, while the diffusion step is where the output of the S-boxes is rearranged according to the P-box permutation rules. 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'DES', 'Single', 'Round', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '32', '-', 'bits', '32', '-', 'bits', '28', '-', 'bits', '28', '-', 'bits', 'Expansion', '/', 'permutation', '(', 'E', 'table', ')', 'XOR', 'Substitution', '/', 'choice', '(', 'S-', 'box', ')', 'Permutation', '(', 'P', ')', 'XOR', 'Left', 'Shift', '(', 'S)', 'Left', 'Shift', '(', 'S)', 'Permutation', '/', 'compression', '(', 'Permuted', 'choice', '2', ')', '48', 'Ki', '48', '48', '32', '32', 'confusion', 'step', 'is', 'the', 'S-box', 'substitution', ',', 'while', 'the', 'diffusion', 'step', 'is', 'where', 'the', 'output', 'of', 'the', 'S-boxes', 'is', 'rearranged', 'according', 'to', 'the', 'P-box', 'permutation', 'rules', '.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('DES', 'PROPN'), ('Single', 'ADJ'), ('Round', 'ADJ'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('32', 'NUM'), ('-', 'PUNCT'), ('bits', 'NOUN'), ('32', 'NUM'), ('-', 'SYM'), ('bits', 'NOUN'), ('28', 'NUM'), ('-', 'SYM'), ('bits', 'NOUN'), ('28', 'NUM'), ('-', 'PUNCT'), ('bits', 'NOUN'), ('Expansion', 'NOUN'), ('/', 'SYM'), ('permutation', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), ('table', 'NOUN'), (')', 'PUNCT'), ('XOR', 'NOUN'), ('Substitution', 'NOUN'), ('/', 'SYM'), ('choice', 'NOUN'), ('(', 'PUNCT'), ('S-', 'NOUN'), ('box', 'NOUN'), (')', 'PUNCT'), ('Permutation', 'NOUN'), ('(', 'PUNCT'), ('P', 'NOUN'), (')', 'PUNCT'), ('XOR', 'NOUN'), ('Left', 'VERB'), ('Shift', 'NOUN'), ('(', 'PUNCT'), ('S)', 'PROPN'), ('Left', 'ADJ'), ('Shift', 'NOUN'), ('(', 'PUNCT'), ('S)', 'PROPN'), ('Permutation', 'NOUN'), ('/', 'SYM'), ('compression', 'NOUN'), ('(', 'PUNCT'), ('Permuted', 'VERB'), ('choice', 'NOUN'), ('2', 'NUM'), (')', 'PUNCT'), ('48', 'NUM'), ('Ki', 'NOUN'), ('48', 'NUM'), ('48', 'NUM'), ('32', 'NUM'), ('32', 'NUM'), ('confusion', 'NOUN'), ('step', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('S-box', 'PROPN'), ('substitution', 'NOUN'), (',', 'PUNCT'), ('while', 'SCONJ'), ('the', 'DET'), ('diffusion', 'NOUN'), ('step', 'NOUN'), ('is', 'AUX'), ('where', 'SCONJ'), ('the', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('S-boxes', 'PROPN'), ('is', 'AUX'), ('rearranged', 'VERB'), ('according', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('P-box', 'PROPN'), ('permutation', 'NOUN'), ('rules', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('DES', 'NNP'), ('Single', 'JJ'), ('Round', 'JJ'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('32', 'CD'), ('-', ','), ('bits', 'NNS'), ('32', 'CD'), ('-', 'SYM'), ('bits', 'NNS'), ('28', 'CD'), ('-', 'SYM'), ('bits', 'NNS'), ('28', 'CD'), ('-', ','), ('bits', 'NNS'), ('Expansion', 'NN'), ('/', ','), ('permutation', 'NN'), ('(', '-LRB-'), ('E', 'NN'), ('table', 'NN'), (')', '-RRB-'), ('XOR', 'NN'), ('Substitution', 'NN'), ('/', ','), ('choice', 'NN'), ('(', '-LRB-'), ('S-', 'NN'), ('box', 'NN'), (')', '-RRB-'), ('Permutation', 'NN'), ('(', '-LRB-'), ('P', 'NN'), (')', '-RRB-'), ('XOR', 'NN'), ('Left', 'VBN'), ('Shift', 'NN'), ('(', '-LRB-'), ('S)', 'NNP'), ('Left', 'JJ'), ('Shift', 'NN'), ('(', '-LRB-'), ('S)', 'NNP'), ('Permutation', 'NN'), ('/', ','), ('compression', 'NN'), ('(', '-LRB-'), ('Permuted', 'VBN'), ('choice', 'NN'), ('2', 'CD'), (')', '-RRB-'), ('48', 'CD'), ('Ki', 'NN'), ('48', 'CD'), ('48', 'CD'), ('32', 'CD'), ('32', 'CD'), ('confusion', 'NN'), ('step', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('S-box', 'NNP'), ('substitution', 'NN'), (',', ','), ('while', 'IN'), ('the', 'DT'), ('diffusion', 'NN'), ('step', 'NN'), ('is', 'VBZ'), ('where', 'WRB'), ('the', 'DT'), ('output', 'NN'), ('of', 'IN'), ('the', 'DT'), ('S-boxes', 'NNPS'), ('is', 'VBZ'), ('rearranged', 'VBN'), ('according', 'VBG'), ('to', 'IN'), ('the', 'DT'), ('P-box', 'NNP'), ('permutation', 'NN'), ('rules', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('DES', 'DES'), ('Single', 'single'), ('Round', 'round'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('32', '32'), ('-', '-'), ('bits', 'bit'), ('32', '32'), ('-', '-'), ('bits', 'bit'), ('28', '28'), ('-', '-'), ('bits', 'bit'), ('28', '28'), ('-', '-'), ('bits', 'bit'), ('Expansion', 'expansion'), ('/', '/'), ('permutation', 'permutation'), ('(', '('), ('E', 'e'), ('table', 'table'), (')', ')'), ('XOR', 'xor'), ('Substitution', 'substitution'), ('/', '/'), ('choice', 'choice'), ('(', '('), ('S-', 's-'), ('box', 'box'), (')', ')'), ('Permutation', 'permutation'), ('(', '('), ('P', 'p'), (')', ')'), ('XOR', 'xor'), ('Left', 'Left'), ('Shift', 'shift'), ('(', '('), ('S)', 'S)'), ('Left', 'Left'), ('Shift', 'shift'), ('(', '('), ('S)', 'S)'), ('Permutation', 'permutation'), ('/', '/'), ('compression', 'compression'), ('(', '('), ('Permuted', 'permute'), ('choice', 'choice'), ('2', '2'), (')', ')'), ('48', '48'), ('Ki', 'ki'), ('48', '48'), ('48', '48'), ('32', '32'), ('32', '32'), ('confusion', 'confusion'), ('step', 'step'), ('is', 'be'), ('the', 'the'), ('S-box', 'S-box'), ('substitution', 'substitution'), (',', ','), ('while', 'while'), ('the', 'the'), ('diffusion', 'diffusion'), ('step', 'step'), ('is', 'be'), ('where', 'where'), ('the', 'the'), ('output', 'output'), ('of', 'of'), ('the', 'the'), ('S-boxes', 'S-boxes'), ('is', 'be'), ('rearranged', 'rearrange'), ('according', 'accord'), ('to', 'to'), ('the', 'the'), ('P-box', 'P-box'), ('permutation', 'permutation'), ('rules', 'rule'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Unit'), 'case'), (('Engineering', 'Unit'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Unit'), 'compound'), (('DES', 'Unit'), 'compound'), (('Single', 'Unit'), 'amod'), (('Round', 'Unit'), 'amod'), (('Unit', 'Institute'), 'nmod'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Institute'), 'conj'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('32', '‹#›'), 'nummod'), (('-', 'Institute'), 'punct'), (('bits', 'Institute'), 'conj'), (('32', 'bits'), 'nummod'), (('-', 'bits'), 'case'), (('bits', '32'), 'nmod'), (('28', '32'), 'nmod'), (('-', 'bits'), 'case'), (('bits', '28'), 'nmod'), (('28', 'bits'), 'nummod'), (('-', 'Expansion'), 'punct'), (('bits', 'Expansion'), 'compound'), (('Expansion', 'Institute'), 'conj'), (('/', 'permutation'), 'cc'), (('permutation', 'Expansion'), 'conj'), (('(', 'table'), 'punct'), (('E', 'table'), 'compound'), (('table', 'Expansion'), 'appos'), ((')', 'table'), 'punct'), (('XOR', 'Substitution'), 'compound'), (('Substitution', 'Expansion'), 'conj'), (('/', 'choice'), 'punct'), (('choice', 'Substitution'), 'conj'), (('(', 'box'), 'punct'), (('S-', 'box'), 'compound'), (('box', 'Permutation'), 'appos'), ((')', 'box'), 'punct'), (('Permutation', 'Substitution'), 'appos'), (('(', 'P'), 'punct'), (('P', 'Permutation'), 'appos'), ((')', 'P'), 'punct'), (('XOR', 'Shift'), 'compound'), (('Left', 'Shift'), 'amod'), (('Shift', 'Permutation'), 'compound'), (('(', 'Shift'), 'punct'), (('S)', 'Shift'), 'compound'), (('Left', 'Shift'), 'amod'), (('Shift', 'Shift'), 'appos'), (('(', 'Permutation'), 'punct'), (('S)', 'Permutation'), 'compound'), (('Permutation', 'Shift'), 'appos'), (('/', 'compression'), 'cc'), (('compression', 'Permutation'), 'conj'), (('(', 'choice'), 'punct'), (('Permuted', 'choice'), 'amod'), (('choice', 'Permutation'), 'appos'), (('2', 'choice'), 'dep'), ((')', 'choice'), 'punct'), (('48', 'step'), 'nummod'), (('Ki', 'step'), 'compound'), (('48', '32'), 'compound'), (('48', '32'), 'compound'), (('32', '32'), 'compound'), (('32', 'step'), 'nummod'), (('confusion', 'step'), 'compound'), (('step', 'substitution'), 'nsubj'), (('is', 'substitution'), 'cop'), (('the', 'substitution'), 'det'), (('S-box', 'substitution'), 'compound'), (('substitution', 'Unit'), 'parataxis'), ((',', 'substitution'), 'punct'), (('while', 'where'), 'mark'), (('the', 'step'), 'det'), (('diffusion', 'step'), 'compound'), (('step', 'where'), 'nsubj'), (('is', 'substitution'), 'cop'), (('where', 'substitution'), 'advcl'), (('the', 'output'), 'det'), (('output', 'rearranged'), 'nsubj:pass'), (('of', 'S-boxes'), 'case'), (('the', 'S-boxes'), 'det'), (('S-boxes', 'output'), 'nmod'), (('is', 'rearranged'), 'aux:pass'), (('rearranged', 'where'), 'acl:relcl'), (('according', 'rules'), 'case'), (('to', 'according'), 'fixed'), (('the', 'rules'), 'det'), (('P-box', 'rules'), 'compound'), (('permutation', 'rules'), 'compound'), (('rules', 'rearranged'), 'obl'), (('.', 'substitution'), 'punct')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('DES Single Round   Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('28', 'CARDINAL'), ('28', 'CARDINAL'), ('2', 'CARDINAL'), ('48', 'CARDINAL'), ('48', 'CARDINAL'), ('48', 'CARDINAL'), ('32', 'CARDINAL'), ('32', 'CARDINAL'), ('P-box', 'ORG')]

========================== Sentence 31 ===========================

 14  DES Single Round (Cont…) 

Tokens are: 
>> ['14', 'DES', 'Single', 'Round', '(', 'Cont', '…', ')'] 

 UPOS tags are: 
>> [('14', 'NUM'), ('DES', 'PROPN'), ('Single', 'ADJ'), ('Round', 'PROPN'), ('(', 'PUNCT'), ('Cont', 'NOUN'), ('…', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('14', 'CD'), ('DES', 'NNP'), ('Single', 'NNP'), ('Round', 'NNP'), ('(', '-LRB-'), ('Cont', 'NN'), ('…', ':'), (')', '-RRB-')] 

 Lemmas are: 
>> [('14', '14'), ('DES', 'DES'), ('Single', 'single'), ('Round', 'Round'), ('(', '('), ('Cont', 'cont'), ('…', '…'), (')', ')')] 

 Dependency tags are: 
>> [(('14', 'Round'), 'nummod'), (('DES', 'Round'), 'compound'), (('Single', 'Round'), 'amod'), (('Round', 'root'), 'root'), (('(', 'Cont'), 'punct'), (('Cont', 'Round'), 'appos'), (('…', 'Cont'), 'punct'), ((')', 'Round'), 'punct')]

 Named Entities are: 
>> [('14', 'CARDINAL')]

========================== Sentence 32 ===========================

 Key Transformation Permutation of selection of sub-key from original key Expansion Permutation (E-table) 

Tokens are: 
>> ['Key', 'Transformation', 'Permutation', 'of', 'selection', 'of', 'sub-key', 'from', 'original', 'key', 'Expansion', 'Permutation', '(', 'E-table', ')'] 

 UPOS tags are: 
>> [('Key', 'ADJ'), ('Transformation', 'NOUN'), ('Permutation', 'NOUN'), ('of', 'ADP'), ('selection', 'NOUN'), ('of', 'ADP'), ('sub-key', 'NOUN'), ('from', 'ADP'), ('original', 'ADJ'), ('key', 'ADJ'), ('Expansion', 'NOUN'), ('Permutation', 'PROPN'), ('(', 'PUNCT'), ('E-table', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Key', 'JJ'), ('Transformation', 'NN'), ('Permutation', 'NN'), ('of', 'IN'), ('selection', 'NN'), ('of', 'IN'), ('sub-key', 'NN'), ('from', 'IN'), ('original', 'JJ'), ('key', 'JJ'), ('Expansion', 'NN'), ('Permutation', 'NNP'), ('(', '-LRB-'), ('E-table', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Key', 'key'), ('Transformation', 'transformation'), ('Permutation', 'permutation'), ('of', 'of'), ('selection', 'selection'), ('of', 'of'), ('sub-key', 'sub-key'), ('from', 'from'), ('original', 'original'), ('key', 'key'), ('Expansion', 'expansion'), ('Permutation', 'permutation'), ('(', '('), ('E-table', 'E-table'), (')', ')')] 

 Dependency tags are: 
>> [(('Key', 'Permutation'), 'amod'), (('Transformation', 'Permutation'), 'compound'), (('Permutation', 'root'), 'root'), (('of', 'selection'), 'case'), (('selection', 'Permutation'), 'nmod'), (('of', 'sub-key'), 'case'), (('sub-key', 'selection'), 'nmod'), (('from', 'Permutation'), 'case'), (('original', 'Permutation'), 'amod'), (('key', 'Permutation'), 'amod'), (('Expansion', 'Permutation'), 'compound'), (('Permutation', 'Permutation'), 'nmod'), (('(', 'E-table'), 'punct'), (('E-table', 'Permutation'), 'appos'), ((')', 'E-table'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 Right half is expanded from 32-bits to 48-bits S-box Substitution Accepts 48-bits from XOR operation and produce 32-bits using 8 substitution boxes (each S-boxes has a 6-bit i/p and 4-bit o/p). 

Tokens are: 
>> ['Right', 'half', 'is', 'expanded', 'from', '32', '-', 'bits', 'to', '48', '-', 'bits', 'S-box', 'Substitution', 'Accepts', '48', '-', 'bits', 'from', 'XOR', 'operation', 'and', 'produce', '32', '-', 'bits', 'using', '8', 'substitution', 'boxes', '(', 'each', 'S-boxes', 'has', 'a', '6', '-', 'bit', 'i/', 'p', 'and', '4', '-', 'bit', 'o', '/', 'p', ')', '.'] 

 UPOS tags are: 
>> [('Right', 'ADJ'), ('half', 'NOUN'), ('is', 'AUX'), ('expanded', 'VERB'), ('from', 'ADP'), ('32', 'NUM'), ('-', 'PUNCT'), ('bits', 'NOUN'), ('to', 'ADP'), ('48', 'NUM'), ('-', 'PUNCT'), ('bits', 'NOUN'), ('S-box', 'PROPN'), ('Substitution', 'NOUN'), ('Accepts', 'VERB'), ('48', 'NUM'), ('-', 'PUNCT'), ('bits', 'NOUN'), ('from', 'ADP'), ('XOR', 'NOUN'), ('operation', 'NOUN'), ('and', 'CCONJ'), ('produce', 'VERB'), ('32', 'NUM'), ('-', 'PUNCT'), ('bits', 'NOUN'), ('using', 'VERB'), ('8', 'NUM'), ('substitution', 'NOUN'), ('boxes', 'NOUN'), ('(', 'PUNCT'), ('each', 'DET'), ('S-boxes', 'PROPN'), ('has', 'VERB'), ('a', 'DET'), ('6', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('i/', 'NOUN'), ('p', 'NOUN'), ('and', 'CCONJ'), ('4', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('o', 'NOUN'), ('/', 'SYM'), ('p', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Right', 'JJ'), ('half', 'NN'), ('is', 'VBZ'), ('expanded', 'VBN'), ('from', 'IN'), ('32', 'CD'), ('-', 'HYPH'), ('bits', 'NNS'), ('to', 'IN'), ('48', 'CD'), ('-', 'HYPH'), ('bits', 'NNS'), ('S-box', 'NNP'), ('Substitution', 'NN'), ('Accepts', 'VBZ'), ('48', 'CD'), ('-', 'HYPH'), ('bits', 'NNS'), ('from', 'IN'), ('XOR', 'NN'), ('operation', 'NN'), ('and', 'CC'), ('produce', 'VBP'), ('32', 'CD'), ('-', 'HYPH'), ('bits', 'NNS'), ('using', 'VBG'), ('8', 'CD'), ('substitution', 'NN'), ('boxes', 'NNS'), ('(', '-LRB-'), ('each', 'DT'), ('S-boxes', 'NNP'), ('has', 'VBZ'), ('a', 'DT'), ('6', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('i/', 'NN'), ('p', 'NN'), ('and', 'CC'), ('4', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('o', 'NN'), ('/', ','), ('p', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Right', 'right'), ('half', 'half'), ('is', 'be'), ('expanded', 'expand'), ('from', 'from'), ('32', '32'), ('-', '-'), ('bits', 'bit'), ('to', 'to'), ('48', '48'), ('-', '-'), ('bits', 'bit'), ('S-box', 'S-box'), ('Substitution', 'substitution'), ('Accepts', 'accept'), ('48', '48'), ('-', '-'), ('bits', 'bit'), ('from', 'from'), ('XOR', 'xor'), ('operation', 'operation'), ('and', 'and'), ('produce', 'produce'), ('32', '32'), ('-', '-'), ('bits', 'bit'), ('using', 'use'), ('8', '8'), ('substitution', 'substitution'), ('boxes', 'box'), ('(', '('), ('each', 'each'), ('S-boxes', 'S-boxes'), ('has', 'have'), ('a', 'a'), ('6', '6'), ('-', '-'), ('bit', 'bit'), ('i/', 'i/'), ('p', 'p'), ('and', 'and'), ('4', '4'), ('-', '-'), ('bit', 'bit'), ('o', 'o'), ('/', '/'), ('p', 'p'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Right', 'half'), 'amod'), (('half', 'expanded'), 'nsubj:pass'), (('is', 'expanded'), 'aux:pass'), (('expanded', 'root'), 'root'), (('from', 'bits'), 'case'), (('32', 'bits'), 'nummod'), (('-', 'bits'), 'punct'), (('bits', 'expanded'), 'obl'), (('to', 'bits'), 'case'), (('48', 'bits'), 'nummod'), (('-', 'bits'), 'punct'), (('bits', 'bits'), 'nmod'), (('S-box', 'Substitution'), 'compound'), (('Substitution', 'Accepts'), 'nsubj'), (('Accepts', 'expanded'), 'conj'), (('48', 'bits'), 'nummod'), (('-', 'bits'), 'punct'), (('bits', 'Accepts'), 'obj'), (('from', 'operation'), 'case'), (('XOR', 'operation'), 'compound'), (('operation', 'Accepts'), 'obl'), (('and', 'produce'), 'cc'), (('produce', 'Accepts'), 'conj'), (('32', 'bits'), 'nummod'), (('-', 'bits'), 'punct'), (('bits', 'produce'), 'obj'), (('using', 'produce'), 'advcl'), (('8', 'boxes'), 'nummod'), (('substitution', 'boxes'), 'compound'), (('boxes', 'using'), 'obj'), (('(', 'has'), 'punct'), (('each', 'S-boxes'), 'det'), (('S-boxes', 'has'), 'nsubj'), (('has', 'boxes'), 'parataxis'), (('a', 'p'), 'det'), (('6', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'p'), 'nmod:npmod'), (('i/', 'p'), 'compound'), (('p', 'has'), 'obj'), (('and', 'p'), 'cc'), (('4', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'o'), 'compound'), (('o', 'p'), 'conj'), (('/', 'p'), 'cc'), (('p', 'o'), 'conj'), ((')', 'has'), 'punct'), (('.', 'expanded'), 'punct')]

 Named Entities are: 
>> [('Right half', 'CARDINAL'), ('32-bits', 'QUANTITY'), ('48-bits', 'QUANTITY'), ('48', 'CARDINAL'), ('32-bits', 'QUANTITY'), ('8', 'CARDINAL'), ('6-bit', 'QUANTITY'), ('4-bit', 'QUANTITY')]

========================== Sentence 34 ===========================

 P-Box Permutation XOR and Swap  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Role of S-box   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Role of S-box (Cont…) 

Tokens are: 
>> ['P-', 'Box', 'Permutation', 'XOR', 'and', 'Swap', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Role', 'of', 'S-box', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Role', 'of', 'S-box', '(', 'Cont', '…', ')'] 

 UPOS tags are: 
>> [('P-', 'PROPN'), ('Box', 'PROPN'), ('Permutation', 'PROPN'), ('XOR', 'PROPN'), ('and', 'CCONJ'), ('Swap', 'PROPN'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Role', 'PROPN'), ('of', 'ADP'), ('S-box', 'PROPN'), ('Unit', 'PROPN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Role', 'PROPN'), ('of', 'ADP'), ('S-box', 'PROPN'), ('(', 'PUNCT'), ('Cont', 'PROPN'), ('…', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('P-', 'NNP'), ('Box', 'NNP'), ('Permutation', 'NNP'), ('XOR', 'NNP'), ('and', 'CC'), ('Swap', 'NNP'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Role', 'NNP'), ('of', 'IN'), ('S-box', 'NNP'), ('Unit', 'NNP'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Role', 'NNP'), ('of', 'IN'), ('S-box', 'NNP'), ('(', '-LRB-'), ('Cont', 'NNP'), ('…', ':'), (')', '-RRB-')] 

 Lemmas are: 
>> [('P-', 'P-'), ('Box', 'box'), ('Permutation', 'permutation'), ('XOR', 'XOR'), ('and', 'and'), ('Swap', 'swap'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Role', 'Role'), ('of', 'of'), ('S-box', 'S-box'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Role', 'Role'), ('of', 'of'), ('S-box', 'S-box'), ('(', '('), ('Cont', 'Cont'), ('…', '…'), (')', ')')] 

 Dependency tags are: 
>> [(('P-', 'Box'), 'compound'), (('Box', 'XOR'), 'compound'), (('Permutation', 'XOR'), 'compound'), (('XOR', 'Institute'), 'compound'), (('and', 'Unit'), 'cc'), (('Swap', 'Unit'), 'compound'), (('Unit', 'XOR'), 'conj'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'root'), 'root'), (('of', 'Role'), 'case'), (('Engineering', 'Role'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Role'), 'compound'), (('Role', 'Institute'), 'nmod'), (('of', 'Unit'), 'case'), (('S-box', 'Unit'), 'compound'), (('Unit', 'Role'), 'nmod'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Role'), 'nmod'), (('of', 'Role'), 'case'), (('Engineering', 'Role'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Role'), 'compound'), (('Role', 'Institute'), 'nmod'), (('of', 'S-box'), 'case'), (('S-box', 'Role'), 'nmod'), (('(', 'Cont'), 'punct'), (('Cont', 'Role'), 'appos'), (('…', 'Cont'), 'punct'), ((')', 'Cont'), 'punct')]

 Named Entities are: 
>> [('Swap  Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('S-box   Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 35 ===========================

 The outer two bits of each group select one row of an S-box. 

Tokens are: 
>> ['The', 'outer', 'two', 'bits', 'of', 'each', 'group', 'select', 'one', 'row', 'of', 'an', 'S-box', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('outer', 'ADJ'), ('two', 'NUM'), ('bits', 'NOUN'), ('of', 'ADP'), ('each', 'DET'), ('group', 'NOUN'), ('select', 'VERB'), ('one', 'NUM'), ('row', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('S-box', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('outer', 'JJ'), ('two', 'CD'), ('bits', 'NNS'), ('of', 'IN'), ('each', 'DT'), ('group', 'NN'), ('select', 'VBP'), ('one', 'CD'), ('row', 'NN'), ('of', 'IN'), ('an', 'DT'), ('S-box', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('outer', 'outer'), ('two', 'two'), ('bits', 'bit'), ('of', 'of'), ('each', 'each'), ('group', 'group'), ('select', 'select'), ('one', 'one'), ('row', 'row'), ('of', 'of'), ('an', 'a'), ('S-box', 'S-box'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'bits'), 'det'), (('outer', 'bits'), 'amod'), (('two', 'bits'), 'nummod'), (('bits', 'select'), 'nsubj'), (('of', 'group'), 'case'), (('each', 'group'), 'det'), (('group', 'bits'), 'nmod'), (('select', 'root'), 'root'), (('one', 'row'), 'nummod'), (('row', 'select'), 'obj'), (('of', 'S-box'), 'case'), (('an', 'S-box'), 'det'), (('S-box', 'row'), 'nmod'), (('.', 'select'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('one', 'CARDINAL')]

========================== Sentence 36 ===========================

 Inner four bits selects one column of an S-box. 

Tokens are: 
>> ['Inner', 'four', 'bits', 'selects', 'one', 'column', 'of', 'an', 'S-box', '.'] 

 UPOS tags are: 
>> [('Inner', 'ADJ'), ('four', 'NUM'), ('bits', 'NOUN'), ('selects', 'VERB'), ('one', 'NUM'), ('column', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('S-box', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Inner', 'JJ'), ('four', 'CD'), ('bits', 'NNS'), ('selects', 'VBZ'), ('one', 'CD'), ('column', 'NN'), ('of', 'IN'), ('an', 'DT'), ('S-box', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Inner', 'Inner'), ('four', 'four'), ('bits', 'bit'), ('selects', 'select'), ('one', 'one'), ('column', 'column'), ('of', 'of'), ('an', 'a'), ('S-box', 'S-box'), ('.', '.')] 

 Dependency tags are: 
>> [(('Inner', 'bits'), 'amod'), (('four', 'bits'), 'nummod'), (('bits', 'selects'), 'nsubj'), (('selects', 'root'), 'root'), (('one', 'column'), 'nummod'), (('column', 'selects'), 'obj'), (('of', 'S-box'), 'case'), (('an', 'S-box'), 'det'), (('S-box', 'column'), 'nmod'), (('.', 'selects'), 'punct')]

 Named Entities are: 
>> [('four', 'CARDINAL'), ('one', 'CARDINAL')]

========================== Sentence 37 ===========================

 Example:         S-box 1 	0	1	1	0	0	1  Row Column    Input Output 	1	0	0	1   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   17  Avalanche Effect Desirable property of any encryption algorithm is that a change in one bit of the plaintext or of the key should produce a change in many bits of cipher text. 

Tokens are: 
>> ['Example', ':', 'S-box', '1', '0', '1', '1', '0', '0', '1', 'Row', 'Column', 'Input', 'Output', '1', '0', '0', '1', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '17', 'Avalanche', 'Effect', 'Desirable', 'property', 'of', 'any', 'encryption', 'algorithm', 'is', 'that', 'a', 'change', 'in', 'one', 'bit', 'of', 'the', 'plaintext', 'or', 'of', 'the', 'key', 'should', 'produce', 'a', 'change', 'in', 'many', 'bits', 'of', 'cipher', 'text', '.'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':', 'PUNCT'), ('S-box', 'PROPN'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('Row', 'NOUN'), ('Column', 'NOUN'), ('Input', 'NOUN'), ('Output', 'NOUN'), ('1', 'NUM'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('17', 'NUM'), ('Avalanche', 'PROPN'), ('Effect', 'PROPN'), ('Desirable', 'ADJ'), ('property', 'NOUN'), ('of', 'ADP'), ('any', 'DET'), ('encryption', 'NOUN'), ('algorithm', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('a', 'DET'), ('change', 'NOUN'), ('in', 'ADP'), ('one', 'NUM'), ('bit', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('plaintext', 'NOUN'), ('or', 'CCONJ'), ('of', 'ADP'), ('the', 'DET'), ('key', 'NOUN'), ('should', 'AUX'), ('produce', 'VERB'), ('a', 'DET'), ('change', 'NOUN'), ('in', 'ADP'), ('many', 'ADJ'), ('bits', 'NOUN'), ('of', 'ADP'), ('cipher', 'NOUN'), ('text', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':', ':'), ('S-box', 'NNP'), ('1', 'CD'), ('0', 'CD'), ('1', 'CD'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('Row', 'NN'), ('Column', 'NN'), ('Input', 'NN'), ('Output', 'NN'), ('1', 'CD'), ('0', 'CD'), ('0', 'CD'), ('1', 'CD'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('17', 'CD'), ('Avalanche', 'NNP'), ('Effect', 'NNP'), ('Desirable', 'JJ'), ('property', 'NN'), ('of', 'IN'), ('any', 'DT'), ('encryption', 'NN'), ('algorithm', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('a', 'DT'), ('change', 'NN'), ('in', 'IN'), ('one', 'CD'), ('bit', 'NN'), ('of', 'IN'), ('the', 'DT'), ('plaintext', 'NN'), ('or', 'CC'), ('of', 'IN'), ('the', 'DT'), ('key', 'NN'), ('should', 'MD'), ('produce', 'VB'), ('a', 'DT'), ('change', 'NN'), ('in', 'IN'), ('many', 'JJ'), ('bits', 'NNS'), ('of', 'IN'), ('cipher', 'NN'), ('text', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Example', 'example'), (':', ':'), ('S-box', 'S-box'), ('1', '1'), ('0', '0'), ('1', '1'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Row', 'row'), ('Column', 'column'), ('Input', 'input'), ('Output', 'output'), ('1', '1'), ('0', '0'), ('0', '0'), ('1', '1'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('17', '17'), ('Avalanche', 'Avalanche'), ('Effect', 'Effect'), ('Desirable', 'desirable'), ('property', 'property'), ('of', 'of'), ('any', 'any'), ('encryption', 'encryption'), ('algorithm', 'algorithm'), ('is', 'be'), ('that', 'that'), ('a', 'a'), ('change', 'change'), ('in', 'in'), ('one', 'one'), ('bit', 'bit'), ('of', 'of'), ('the', 'the'), ('plaintext', 'plaintext'), ('or', 'or'), ('of', 'of'), ('the', 'the'), ('key', 'key'), ('should', 'should'), ('produce', 'produce'), ('a', 'a'), ('change', 'change'), ('in', 'in'), ('many', 'many'), ('bits', 'bit'), ('of', 'of'), ('cipher', 'cipher'), ('text', 'text'), ('.', '.')] 

 Dependency tags are: 
>> [(('Example', 'is'), 'nsubj'), ((':', 'Example'), 'punct'), (('S-box', 'Example'), 'appos'), (('1', 'S-box'), 'dep'), (('0', '1'), 'compound'), (('1', 'S-box'), 'dep'), (('1', '1'), 'compound'), (('0', '1'), 'compound'), (('0', 'Column'), 'nummod'), (('1', 'Column'), 'nummod'), (('Row', 'Column'), 'compound'), (('Column', 'Output'), 'compound'), (('Input', 'Output'), 'compound'), (('Output', 'Example'), 'appos'), (('1', 'Output'), 'dep'), (('0', '1'), 'compound'), (('0', 'Unit'), 'nummod'), (('1', 'Unit'), 'nummod'), (('Unit', 'Institute'), 'compound'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Output'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'compound'), (('17', 'property'), 'nummod'), (('Avalanche', 'Effect'), 'compound'), (('Effect', 'property'), 'compound'), (('Desirable', 'property'), 'amod'), (('property', 'Institute'), 'conj'), (('of', 'algorithm'), 'case'), (('any', 'algorithm'), 'det'), (('encryption', 'algorithm'), 'compound'), (('algorithm', 'property'), 'nmod'), (('is', 'root'), 'root'), (('that', 'produce'), 'mark'), (('a', 'change'), 'det'), (('change', 'produce'), 'nsubj'), (('in', 'bit'), 'case'), (('one', 'bit'), 'nummod'), (('bit', 'change'), 'nmod'), (('of', 'plaintext'), 'case'), (('the', 'plaintext'), 'det'), (('plaintext', 'bit'), 'nmod'), (('or', 'key'), 'cc'), (('of', 'key'), 'case'), (('the', 'key'), 'det'), (('key', 'plaintext'), 'conj'), (('should', 'produce'), 'aux'), (('produce', 'is'), 'ccomp'), (('a', 'change'), 'det'), (('change', 'produce'), 'obj'), (('in', 'bits'), 'case'), (('many', 'bits'), 'amod'), (('bits', 'change'), 'nmod'), (('of', 'text'), 'case'), (('cipher', 'text'), 'compound'), (('text', 'bits'), 'nmod'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL'), ('0', 'CARDINAL'), ('1', 'CARDINAL'), ('17', 'CARDINAL')]

========================== Sentence 38 ===========================

 DES performs strong avalanche effect. 

Tokens are: 
>> ['DES', 'performs', 'strong', 'avalanche', 'effect', '.'] 

 UPOS tags are: 
>> [('DES', 'PROPN'), ('performs', 'VERB'), ('strong', 'ADJ'), ('avalanche', 'NOUN'), ('effect', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('DES', 'NNP'), ('performs', 'VBZ'), ('strong', 'JJ'), ('avalanche', 'NN'), ('effect', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('DES', 'DES'), ('performs', 'perform'), ('strong', 'strong'), ('avalanche', 'avalanche'), ('effect', 'effect'), ('.', '.')] 

 Dependency tags are: 
>> [(('DES', 'performs'), 'nsubj'), (('performs', 'root'), 'root'), (('strong', 'effect'), 'amod'), (('avalanche', 'effect'), 'compound'), (('effect', 'performs'), 'obj'), (('.', 'performs'), 'punct')]

 Named Entities are: 
>> [('DES', 'ORG')]

========================== Sentence 39 ===========================

 Although the two plaintext blocks differ only in the rightmost bit, the ciphertext blocks differ in 29 bits. 

Tokens are: 
>> ['Although', 'the', 'two', 'plaintext', 'blocks', 'differ', 'only', 'in', 'the', 'rightmost', 'bit', ',', 'the', 'ciphertext', 'blocks', 'differ', 'in', '29', 'bits', '.'] 

 UPOS tags are: 
>> [('Although', 'SCONJ'), ('the', 'DET'), ('two', 'NUM'), ('plaintext', 'NOUN'), ('blocks', 'NOUN'), ('differ', 'VERB'), ('only', 'ADV'), ('in', 'ADP'), ('the', 'DET'), ('rightmost', 'ADJ'), ('bit', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('ciphertext', 'NOUN'), ('blocks', 'NOUN'), ('differ', 'VERB'), ('in', 'ADP'), ('29', 'NUM'), ('bits', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Although', 'IN'), ('the', 'DT'), ('two', 'CD'), ('plaintext', 'NN'), ('blocks', 'NNS'), ('differ', 'VBP'), ('only', 'RB'), ('in', 'IN'), ('the', 'DT'), ('rightmost', 'JJ'), ('bit', 'NN'), (',', ','), ('the', 'DT'), ('ciphertext', 'NN'), ('blocks', 'NNS'), ('differ', 'VBP'), ('in', 'IN'), ('29', 'CD'), ('bits', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Although', 'although'), ('the', 'the'), ('two', 'two'), ('plaintext', 'plaintext'), ('blocks', 'block'), ('differ', 'differ'), ('only', 'only'), ('in', 'in'), ('the', 'the'), ('rightmost', 'rightmost'), ('bit', 'bit'), (',', ','), ('the', 'the'), ('ciphertext', 'ciphertext'), ('blocks', 'block'), ('differ', 'differ'), ('in', 'in'), ('29', '29'), ('bits', 'bit'), ('.', '.')] 

 Dependency tags are: 
>> [(('Although', 'differ'), 'mark'), (('the', 'blocks'), 'det'), (('two', 'blocks'), 'nummod'), (('plaintext', 'blocks'), 'compound'), (('blocks', 'differ'), 'nsubj'), (('differ', 'differ'), 'advcl'), (('only', 'bit'), 'advmod'), (('in', 'bit'), 'case'), (('the', 'bit'), 'det'), (('rightmost', 'bit'), 'amod'), (('bit', 'differ'), 'obl'), ((',', 'differ'), 'punct'), (('the', 'blocks'), 'det'), (('ciphertext', 'blocks'), 'compound'), (('blocks', 'differ'), 'nsubj'), (('differ', 'root'), 'root'), (('in', 'bits'), 'case'), (('29', 'bits'), 'nummod'), (('bits', 'differ'), 'obl'), (('.', 'differ'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('29', 'CARDINAL')]

========================== Sentence 40 ===========================

 This means that changing approximately 1.5 % of the plaintext creates a change of approximately 45 % in the ciphertext. 

Tokens are: 
>> ['This', 'means', 'that', 'changing', 'approximately', '1.5', '%', 'of', 'the', 'plaintext', 'creates', 'a', 'change', 'of', 'approximately', '45', '%', 'in', 'the', 'ciphertext', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('means', 'VERB'), ('that', 'SCONJ'), ('changing', 'VERB'), ('approximately', 'ADV'), ('1.5', 'NUM'), ('%', 'SYM'), ('of', 'ADP'), ('the', 'DET'), ('plaintext', 'NOUN'), ('creates', 'VERB'), ('a', 'DET'), ('change', 'NOUN'), ('of', 'ADP'), ('approximately', 'ADV'), ('45', 'NUM'), ('%', 'SYM'), ('in', 'ADP'), ('the', 'DET'), ('ciphertext', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('means', 'VBZ'), ('that', 'IN'), ('changing', 'VBG'), ('approximately', 'RB'), ('1.5', 'CD'), ('%', 'NN'), ('of', 'IN'), ('the', 'DT'), ('plaintext', 'NN'), ('creates', 'VBZ'), ('a', 'DT'), ('change', 'NN'), ('of', 'IN'), ('approximately', 'RB'), ('45', 'CD'), ('%', 'NN'), ('in', 'IN'), ('the', 'DT'), ('ciphertext', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('means', 'mean'), ('that', 'that'), ('changing', 'change'), ('approximately', 'approximately'), ('1.5', '1.5'), ('%', '%'), ('of', 'of'), ('the', 'the'), ('plaintext', 'plaintext'), ('creates', 'create'), ('a', 'a'), ('change', 'change'), ('of', 'of'), ('approximately', 'approximately'), ('45', '45'), ('%', '%'), ('in', 'in'), ('the', 'the'), ('ciphertext', 'ciphertext'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'means'), 'nsubj'), (('means', 'root'), 'root'), (('that', 'creates'), 'mark'), (('changing', 'creates'), 'csubj'), (('approximately', '1.5'), 'advmod'), (('1.5', '%'), 'nummod'), (('%', 'changing'), 'obj'), (('of', 'plaintext'), 'case'), (('the', 'plaintext'), 'det'), (('plaintext', '%'), 'nmod'), (('creates', 'means'), 'ccomp'), (('a', 'change'), 'det'), (('change', 'creates'), 'obj'), (('of', '%'), 'case'), (('approximately', '45'), 'advmod'), (('45', '%'), 'nummod'), (('%', 'change'), 'nmod'), (('in', 'ciphertext'), 'case'), (('the', 'ciphertext'), 'det'), (('ciphertext', '%'), 'nmod'), (('.', 'means'), 'punct')]

 Named Entities are: 
>> [('approximately 1.5 %', 'PERCENT'), ('approximately 45 %', 'PERCENT')]

========================== Sentence 41 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES (Advanced Encryption Standard) 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'AES', '(', 'Advanced', 'Encryption', 'Standard', ')'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('AES', 'PROPN'), ('(', 'PUNCT'), ('Advanced', 'ADJ'), ('Encryption', 'PROPN'), ('Standard', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('AES', 'NNP'), ('(', '-LRB-'), ('Advanced', 'NNP'), ('Encryption', 'NNP'), ('Standard', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('AES', 'AES'), ('(', '('), ('Advanced', 'Advanced'), ('Encryption', 'Encryption'), ('Standard', 'Standard'), (')', ')')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'AES'), 'case'), (('Engineering', 'AES'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'AES'), 'compound'), (('AES', 'Institute'), 'nmod'), (('(', 'Standard'), 'punct'), (('Advanced', 'Standard'), 'amod'), (('Encryption', 'Standard'), 'compound'), (('Standard', 'AES'), 'appos'), ((')', 'Standard'), 'punct')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('AES', 'ORG')]

========================== Sentence 42 ===========================

 The Rijndael proposal for AES defined a cipher in which the block length and the key length can be independently specified to be 128, 192, or 256 bits. 

Tokens are: 
>> ['The', 'Rijndael', 'proposal', 'for', 'AES', 'defined', 'a', 'cipher', 'in', 'which', 'the', 'block', 'length', 'and', 'the', 'key', 'length', 'can', 'be', 'independently', 'specified', 'to', 'be', '128', ',', '192', ',', 'or', '256', 'bits', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Rijndael', 'PROPN'), ('proposal', 'NOUN'), ('for', 'ADP'), ('AES', 'PROPN'), ('defined', 'VERB'), ('a', 'DET'), ('cipher', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('block', 'NOUN'), ('length', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('key', 'ADJ'), ('length', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('independently', 'ADV'), ('specified', 'VERB'), ('to', 'PART'), ('be', 'AUX'), ('128', 'NUM'), (',', 'PUNCT'), ('192', 'NUM'), (',', 'PUNCT'), ('or', 'CCONJ'), ('256', 'NUM'), ('bits', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Rijndael', 'NNP'), ('proposal', 'NN'), ('for', 'IN'), ('AES', 'NNP'), ('defined', 'VBD'), ('a', 'DT'), ('cipher', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('block', 'NN'), ('length', 'NN'), ('and', 'CC'), ('the', 'DT'), ('key', 'JJ'), ('length', 'NN'), ('can', 'MD'), ('be', 'VB'), ('independently', 'RB'), ('specified', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('128', 'CD'), (',', ','), ('192', 'CD'), (',', ','), ('or', 'CC'), ('256', 'CD'), ('bits', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('Rijndael', 'Rijndael'), ('proposal', 'proposal'), ('for', 'for'), ('AES', 'AES'), ('defined', 'define'), ('a', 'a'), ('cipher', 'cipher'), ('in', 'in'), ('which', 'which'), ('the', 'the'), ('block', 'block'), ('length', 'length'), ('and', 'and'), ('the', 'the'), ('key', 'key'), ('length', 'length'), ('can', 'can'), ('be', 'be'), ('independently', 'independently'), ('specified', 'specify'), ('to', 'to'), ('be', 'be'), ('128', '128'), (',', ','), ('192', '192'), (',', ','), ('or', 'or'), ('256', '256'), ('bits', 'bit'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'proposal'), 'det'), (('Rijndael', 'proposal'), 'compound'), (('proposal', 'defined'), 'nsubj'), (('for', 'AES'), 'case'), (('AES', 'proposal'), 'nmod'), (('defined', 'root'), 'root'), (('a', 'cipher'), 'det'), (('cipher', 'defined'), 'obj'), (('in', 'which'), 'case'), (('which', 'specified'), 'obl'), (('the', 'length'), 'det'), (('block', 'length'), 'compound'), (('length', 'specified'), 'nsubj:pass'), (('and', 'length'), 'cc'), (('the', 'length'), 'det'), (('key', 'length'), 'amod'), (('length', 'length'), 'conj'), (('can', 'specified'), 'aux'), (('be', 'specified'), 'aux:pass'), (('independently', 'specified'), 'advmod'), (('specified', 'cipher'), 'acl:relcl'), (('to', 'bits'), 'mark'), (('be', 'bits'), 'cop'), (('128', 'bits'), 'nummod'), ((',', '192'), 'punct'), (('192', '128'), 'conj'), ((',', '256'), 'punct'), (('or', '256'), 'cc'), (('256', '128'), 'conj'), (('bits', 'specified'), 'obl'), (('.', 'defined'), 'punct')]

 Named Entities are: 
>> [('Rijndael', 'GPE'), ('AES', 'ORG'), ('128', 'CARDINAL'), ('192', 'CARDINAL'), ('256', 'CARDINAL')]

========================== Sentence 43 ===========================

 AES designed to have characteristics  Resistance against all known attacks Speed and code compactness on a wide range of platforms Design simplicity 	Key size (words/ bytes/ bits) 

Tokens are: 
>> ['AES', 'designed', 'to', 'have', 'characteristics', 'Resistance', 'against', 'all', 'known', 'attacks', 'Speed', 'and', 'code', 'compactness', 'on', 'a', 'wide', 'range', 'of', 'platforms', 'Design', 'simplicity', 'Key', 'size', '(', 'words', '/', 'bytes', '/', 'bits', ')'] 

 UPOS tags are: 
>> [('AES', 'PROPN'), ('designed', 'VERB'), ('to', 'PART'), ('have', 'VERB'), ('characteristics', 'NOUN'), ('Resistance', 'NOUN'), ('against', 'ADP'), ('all', 'DET'), ('known', 'VERB'), ('attacks', 'NOUN'), ('Speed', 'NOUN'), ('and', 'CCONJ'), ('code', 'NOUN'), ('compactness', 'NOUN'), ('on', 'ADP'), ('a', 'DET'), ('wide', 'ADJ'), ('range', 'NOUN'), ('of', 'ADP'), ('platforms', 'NOUN'), ('Design', 'NOUN'), ('simplicity', 'NOUN'), ('Key', 'ADJ'), ('size', 'NOUN'), ('(', 'PUNCT'), ('words', 'NOUN'), ('/', 'SYM'), ('bytes', 'NOUN'), ('/', 'SYM'), ('bits', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('AES', 'NNP'), ('designed', 'VBD'), ('to', 'TO'), ('have', 'VB'), ('characteristics', 'NNS'), ('Resistance', 'NN'), ('against', 'IN'), ('all', 'DT'), ('known', 'VBN'), ('attacks', 'NNS'), ('Speed', 'NN'), ('and', 'CC'), ('code', 'NN'), ('compactness', 'NN'), ('on', 'IN'), ('a', 'DT'), ('wide', 'JJ'), ('range', 'NN'), ('of', 'IN'), ('platforms', 'NNS'), ('Design', 'NN'), ('simplicity', 'NN'), ('Key', 'JJ'), ('size', 'NN'), ('(', '-LRB-'), ('words', 'NNS'), ('/', ','), ('bytes', 'NNS'), ('/', ','), ('bits', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('AES', 'AES'), ('designed', 'design'), ('to', 'to'), ('have', 'have'), ('characteristics', 'characteristic'), ('Resistance', 'resistance'), ('against', 'against'), ('all', 'all'), ('known', 'know'), ('attacks', 'attack'), ('Speed', 'speed'), ('and', 'and'), ('code', 'code'), ('compactness', 'compactness'), ('on', 'on'), ('a', 'a'), ('wide', 'wide'), ('range', 'range'), ('of', 'of'), ('platforms', 'platform'), ('Design', 'design'), ('simplicity', 'simplicity'), ('Key', 'key'), ('size', 'size'), ('(', '('), ('words', 'word'), ('/', '/'), ('bytes', 'byte'), ('/', '/'), ('bits', 'bit'), (')', ')')] 

 Dependency tags are: 
>> [(('AES', 'designed'), 'nsubj'), (('designed', 'root'), 'root'), (('to', 'have'), 'mark'), (('have', 'designed'), 'xcomp'), (('characteristics', 'Resistance'), 'compound'), (('Resistance', 'have'), 'obj'), (('against', 'Speed'), 'case'), (('all', 'Speed'), 'det'), (('known', 'Speed'), 'amod'), (('attacks', 'Speed'), 'compound'), (('Speed', 'Resistance'), 'nmod'), (('and', 'compactness'), 'cc'), (('code', 'compactness'), 'compound'), (('compactness', 'Speed'), 'conj'), (('on', 'range'), 'case'), (('a', 'range'), 'det'), (('wide', 'range'), 'amod'), (('range', 'have'), 'obl'), (('of', 'simplicity'), 'case'), (('platforms', 'simplicity'), 'compound'), (('Design', 'simplicity'), 'compound'), (('simplicity', 'range'), 'nmod'), (('Key', 'size'), 'amod'), (('size', 'range'), 'nmod'), (('(', 'words'), 'punct'), (('words', 'size'), 'appos'), (('/', 'bytes'), 'punct'), (('bytes', 'words'), 'conj'), (('/', 'bits'), 'cc'), (('bits', 'words'), 'conj'), ((')', 'words'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 44 ===========================

 4/16/128	6/24/192	8/32/256 

Tokens are: 
>> ['4/16/128', '6/24/192', '8/32/256'] 

 UPOS tags are: 
>> [('4/16/128', 'NUM'), ('6/24/192', 'NUM'), ('8/32/256', 'NUM')] 

 XPOS tags are: 
>> [('4/16/128', 'CD'), ('6/24/192', 'CD'), ('8/32/256', 'CD')] 

 Lemmas are: 
>> [('4/16/128', '4/16/128'), ('6/24/192', '6/24/192'), ('8/32/256', '8/32/256')] 

 Dependency tags are: 
>> [(('4/16/128', 'root'), 'root'), (('6/24/192', '4/16/128'), 'nmod:tmod'), (('8/32/256', '4/16/128'), 'nmod:tmod')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 Block size (words/ bytes/ bits) 

Tokens are: 
>> ['Block', 'size', '(', 'words', '/', 'bytes', '/', 'bits', ')'] 

 UPOS tags are: 
>> [('Block', 'NOUN'), ('size', 'NOUN'), ('(', 'PUNCT'), ('words', 'NOUN'), ('/', 'SYM'), ('bytes', 'NOUN'), ('/', 'SYM'), ('bits', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Block', 'NN'), ('size', 'NN'), ('(', '-LRB-'), ('words', 'NNS'), ('/', ','), ('bytes', 'NNS'), ('/', ','), ('bits', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Block', 'block'), ('size', 'size'), ('(', '('), ('words', 'word'), ('/', '/'), ('bytes', 'byte'), ('/', '/'), ('bits', 'bit'), (')', ')')] 

 Dependency tags are: 
>> [(('Block', 'size'), 'compound'), (('size', 'root'), 'root'), (('(', 'words'), 'punct'), (('words', 'size'), 'appos'), (('/', 'bytes'), 'cc'), (('bytes', 'words'), 'conj'), (('/', 'bits'), 'cc'), (('bits', 'words'), 'conj'), ((')', 'words'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 46 ===========================

 4/16/128	4/16/128	4/16/128 

Tokens are: 
>> ['4/16/128', '4/16/128', '4/16/128'] 

 UPOS tags are: 
>> [('4/16/128', 'NUM'), ('4/16/128', 'NUM'), ('4/16/128', 'NUM')] 

 XPOS tags are: 
>> [('4/16/128', 'CD'), ('4/16/128', 'CD'), ('4/16/128', 'CD')] 

 Lemmas are: 
>> [('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128')] 

 Dependency tags are: 
>> [(('4/16/128', 'root'), 'root'), (('4/16/128', '4/16/128'), 'list'), (('4/16/128', '4/16/128'), 'list')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 Round key size (words/ bytes/ bits) 

Tokens are: 
>> ['Round', 'key', 'size', '(', 'words', '/', 'bytes', '/', 'bits', ')'] 

 UPOS tags are: 
>> [('Round', 'ADJ'), ('key', 'ADJ'), ('size', 'NOUN'), ('(', 'PUNCT'), ('words', 'NOUN'), ('/', 'SYM'), ('bytes', 'NOUN'), ('/', 'SYM'), ('bits', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Round', 'JJ'), ('key', 'JJ'), ('size', 'NN'), ('(', '-LRB-'), ('words', 'NNS'), ('/', ','), ('bytes', 'NNS'), ('/', ','), ('bits', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Round', 'round'), ('key', 'key'), ('size', 'size'), ('(', '('), ('words', 'word'), ('/', '/'), ('bytes', 'byte'), ('/', '/'), ('bits', 'bit'), (')', ')')] 

 Dependency tags are: 
>> [(('Round', 'size'), 'amod'), (('key', 'size'), 'amod'), (('size', 'root'), 'root'), (('(', 'words'), 'punct'), (('words', 'size'), 'appos'), (('/', 'bytes'), 'cc'), (('bytes', 'words'), 'conj'), (('/', 'bits'), 'cc'), (('bits', 'words'), 'conj'), ((')', 'words'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 48 ===========================

 4/16/128	4/16/128	4/16/128  	Number of Rounds	10	12	14   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES (Advanced Encryption Standard)      AES Plaintext (128 bits) Ciphertext (128 bits)  Key (128-256 bits) 

Tokens are: 
>> ['4/16/128', '4/16/128', '4/16/128', 'Number', 'of', 'Rounds', '10', '12', '14', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'AES', '(', 'Advanced', 'Encryption', 'Standard', ')', 'AES', 'Plaintext', '(', '128', 'bits', ')', 'Ciphertext', '(', '128', 'bits', ')', 'Key', '(', '128-256', 'bits', ')'] 

 UPOS tags are: 
>> [('4/16/128', 'NUM'), ('4/16/128', 'NUM'), ('4/16/128', 'NUM'), ('Number', 'NOUN'), ('of', 'ADP'), ('Rounds', 'NOUN'), ('10', 'NUM'), ('12', 'NUM'), ('14', 'NUM'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('AES', 'PROPN'), ('(', 'PUNCT'), ('Advanced', 'ADJ'), ('Encryption', 'PROPN'), ('Standard', 'PROPN'), (')', 'PUNCT'), ('AES', 'NOUN'), ('Plaintext', 'NOUN'), ('(', 'PUNCT'), ('128', 'NUM'), ('bits', 'NOUN'), (')', 'PUNCT'), ('Ciphertext', 'NOUN'), ('(', 'PUNCT'), ('128', 'NUM'), ('bits', 'NOUN'), (')', 'PUNCT'), ('Key', 'NOUN'), ('(', 'PUNCT'), ('128-256', 'NUM'), ('bits', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('4/16/128', 'CD'), ('4/16/128', 'CD'), ('4/16/128', 'CD'), ('Number', 'NN'), ('of', 'IN'), ('Rounds', 'NNS'), ('10', 'CD'), ('12', 'CD'), ('14', 'CD'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('AES', 'NNP'), ('(', '-LRB-'), ('Advanced', 'NNP'), ('Encryption', 'NNP'), ('Standard', 'NNP'), (')', '-RRB-'), ('AES', 'NN'), ('Plaintext', 'NN'), ('(', '-LRB-'), ('128', 'CD'), ('bits', 'NNS'), (')', '-RRB-'), ('Ciphertext', 'NN'), ('(', '-LRB-'), ('128', 'CD'), ('bits', 'NNS'), (')', '-RRB-'), ('Key', 'NN'), ('(', '-LRB-'), ('128-256', 'CD'), ('bits', 'NNS'), (')', '-RRB-')] 

 Lemmas are: 
>> [('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('4/16/128', '4/16/128'), ('Number', 'number'), ('of', 'of'), ('Rounds', 'round'), ('10', '10'), ('12', '12'), ('14', '14'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('AES', 'AES'), ('(', '('), ('Advanced', 'Advanced'), ('Encryption', 'Encryption'), ('Standard', 'Standard'), (')', ')'), ('AES', 'aes'), ('Plaintext', 'plaintext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Ciphertext', 'ciphertext'), ('(', '('), ('128', '128'), ('bits', 'bit'), (')', ')'), ('Key', 'key'), ('(', '('), ('128-256', '128-256'), ('bits', 'bit'), (')', ')')] 

 Dependency tags are: 
>> [(('4/16/128', 'root'), 'root'), (('4/16/128', '4/16/128'), 'appos'), (('4/16/128', '4/16/128'), 'list'), (('Number', '4/16/128'), 'appos'), (('of', 'Rounds'), 'case'), (('Rounds', 'Number'), 'nmod'), (('10', 'Unit'), 'nummod'), (('12', 'Unit'), 'nummod'), (('14', 'Unit'), 'nummod'), (('Unit', 'Institute'), 'compound'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', '4/16/128'), 'appos'), (('of', 'AES'), 'case'), (('Engineering', 'AES'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'AES'), 'compound'), (('AES', 'Institute'), 'nmod'), (('(', 'Standard'), 'punct'), (('Advanced', 'Standard'), 'amod'), (('Encryption', 'Standard'), 'compound'), (('Standard', 'AES'), 'appos'), ((')', 'Standard'), 'punct'), (('AES', 'Plaintext'), 'compound'), (('Plaintext', 'AES'), 'appos'), (('(', 'bits'), 'punct'), (('128', 'bits'), 'nummod'), (('bits', 'Plaintext'), 'appos'), ((')', 'bits'), 'punct'), (('Ciphertext', 'Plaintext'), 'appos'), (('(', 'bits'), 'punct'), (('128', 'bits'), 'nummod'), (('bits', 'Ciphertext'), 'appos'), ((')', 'bits'), 'punct'), (('Key', 'Ciphertext'), 'appos'), (('(', 'bits'), 'punct'), (('128-256', 'bits'), 'nummod'), (('bits', 'Key'), 'appos'), ((')', 'bits'), 'punct')]

 Named Entities are: 
>> [('10', 'CARDINAL'), ('12', 'CARDINAL'), ('14', 'CARDINAL'), ('128', 'CARDINAL'), ('128', 'CARDINAL'), ('128-256', 'CARDINAL')]

========================== Sentence 49 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›   AES Structure Initialization Expand 16-byte key to get the actual key block to be used. 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'AES', 'Structure', 'Initialization', 'Expand', '16', '-', 'byte', 'key', 'to', 'get', 'the', 'actual', 'key', 'block', 'to', 'be', 'used', '.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('AES', 'PROPN'), ('Structure', 'NOUN'), ('Initialization', 'NOUN'), ('Expand', 'VERB'), ('16', 'NUM'), ('-', 'PUNCT'), ('byte', 'NOUN'), ('key', 'NOUN'), ('to', 'PART'), ('get', 'VERB'), ('the', 'DET'), ('actual', 'ADJ'), ('key', 'ADJ'), ('block', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('used', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('AES', 'NNP'), ('Structure', 'NN'), ('Initialization', 'NN'), ('Expand', 'VB'), ('16', 'CD'), ('-', 'HYPH'), ('byte', 'NN'), ('key', 'NN'), ('to', 'TO'), ('get', 'VB'), ('the', 'DT'), ('actual', 'JJ'), ('key', 'JJ'), ('block', 'NN'), ('to', 'TO'), ('be', 'VB'), ('used', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('AES', 'AES'), ('Structure', 'structure'), ('Initialization', 'initialization'), ('Expand', 'expand'), ('16', '16'), ('-', '-'), ('byte', 'byte'), ('key', 'key'), ('to', 'to'), ('get', 'get'), ('the', 'the'), ('actual', 'actual'), ('key', 'key'), ('block', 'block'), ('to', 'to'), ('be', 'be'), ('used', 'use'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Expand'), 'nsubj'), (('of', 'Initialization'), 'case'), (('Engineering', 'Initialization'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Initialization'), 'compound'), (('AES', 'Structure'), 'compound'), (('Structure', 'Initialization'), 'compound'), (('Initialization', 'Institute'), 'nmod'), (('Expand', 'root'), 'root'), (('16', 'byte'), 'nummod'), (('-', 'byte'), 'punct'), (('byte', 'key'), 'compound'), (('key', 'Expand'), 'obj'), (('to', 'get'), 'mark'), (('get', 'Expand'), 'advcl'), (('the', 'block'), 'det'), (('actual', 'block'), 'amod'), (('key', 'block'), 'amod'), (('block', 'get'), 'obj'), (('to', 'used'), 'mark'), (('be', 'used'), 'aux:pass'), (('used', 'get'), 'advcl'), (('.', 'Expand'), 'punct')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('16', 'CARDINAL')]

========================== Sentence 50 ===========================

 Initialize 16-byte plaintext block called as state. 

Tokens are: 
>> ['Initialize', '16', '-', 'byte', 'plaintext', 'block', 'called', 'as', 'state', '.'] 

 UPOS tags are: 
>> [('Initialize', 'VERB'), ('16', 'NUM'), ('-', 'PUNCT'), ('byte', 'NOUN'), ('plaintext', 'NOUN'), ('block', 'NOUN'), ('called', 'VERB'), ('as', 'ADP'), ('state', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Initialize', 'VB'), ('16', 'CD'), ('-', 'HYPH'), ('byte', 'NN'), ('plaintext', 'NN'), ('block', 'NN'), ('called', 'VBN'), ('as', 'IN'), ('state', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Initialize', 'initialize'), ('16', '16'), ('-', '-'), ('byte', 'byte'), ('plaintext', 'plaintext'), ('block', 'block'), ('called', 'call'), ('as', 'as'), ('state', 'state'), ('.', '.')] 

 Dependency tags are: 
>> [(('Initialize', 'root'), 'root'), (('16', 'byte'), 'nummod'), (('-', 'byte'), 'punct'), (('byte', 'block'), 'compound'), (('plaintext', 'block'), 'compound'), (('block', 'Initialize'), 'obj'), (('called', 'block'), 'acl'), (('as', 'state'), 'case'), (('state', 'called'), 'obl'), (('.', 'Initialize'), 'punct')]

 Named Entities are: 
>> [('16-byte', 'QUANTITY')]

========================== Sentence 51 ===========================

 XOR the state with the key block. 

Tokens are: 
>> ['XOR', 'the', 'state', 'with', 'the', 'key', 'block', '.'] 

 UPOS tags are: 
>> [('XOR', 'VERB'), ('the', 'DET'), ('state', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('key', 'ADJ'), ('block', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('XOR', 'VB'), ('the', 'DT'), ('state', 'NN'), ('with', 'IN'), ('the', 'DT'), ('key', 'JJ'), ('block', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('XOR', 'xor'), ('the', 'the'), ('state', 'state'), ('with', 'with'), ('the', 'the'), ('key', 'key'), ('block', 'block'), ('.', '.')] 

 Dependency tags are: 
>> [(('XOR', 'root'), 'root'), (('the', 'state'), 'det'), (('state', 'XOR'), 'obj'), (('with', 'block'), 'case'), (('the', 'block'), 'det'), (('key', 'block'), 'amod'), (('block', 'XOR'), 'obl'), (('.', 'XOR'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 For each round Apply S-box Rotate rows of state Mix columns Add Round key: XOR the state with key block. 

Tokens are: 
>> ['For', 'each', 'round', 'Apply', 'S-box', 'Rotate', 'rows', 'of', 'state', 'Mix', 'columns', 'Add', 'Round', 'key', ':', 'XOR', 'the', 'state', 'with', 'key', 'block', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('each', 'DET'), ('round', 'NOUN'), ('Apply', 'VERB'), ('S-box', 'PROPN'), ('Rotate', 'VERB'), ('rows', 'NOUN'), ('of', 'ADP'), ('state', 'NOUN'), ('Mix', 'NOUN'), ('columns', 'NOUN'), ('Add', 'VERB'), ('Round', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('XOR', 'VERB'), ('the', 'DET'), ('state', 'NOUN'), ('with', 'ADP'), ('key', 'ADJ'), ('block', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('each', 'DT'), ('round', 'NN'), ('Apply', 'VB'), ('S-box', 'NNP'), ('Rotate', 'VB'), ('rows', 'NNS'), ('of', 'IN'), ('state', 'NN'), ('Mix', 'NN'), ('columns', 'NNS'), ('Add', 'VB'), ('Round', 'JJ'), ('key', 'NN'), (':', ':'), ('XOR', 'VB'), ('the', 'DT'), ('state', 'NN'), ('with', 'IN'), ('key', 'JJ'), ('block', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('each', 'each'), ('round', 'round'), ('Apply', 'apply'), ('S-box', 'S-box'), ('Rotate', 'rotate'), ('rows', 'row'), ('of', 'of'), ('state', 'state'), ('Mix', 'mix'), ('columns', 'column'), ('Add', 'add'), ('Round', 'round'), ('key', 'key'), (':', ':'), ('XOR', 'xor'), ('the', 'the'), ('state', 'state'), ('with', 'with'), ('key', 'key'), ('block', 'block'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'round'), 'case'), (('each', 'round'), 'det'), (('round', 'Apply'), 'obl'), (('Apply', 'root'), 'root'), (('S-box', 'Rotate'), 'nsubj'), (('Rotate', 'Apply'), 'ccomp'), (('rows', 'Rotate'), 'obj'), (('of', 'columns'), 'case'), (('state', 'columns'), 'compound'), (('Mix', 'columns'), 'compound'), (('columns', 'rows'), 'nmod'), (('Add', 'Rotate'), 'parataxis'), (('Round', 'key'), 'amod'), (('key', 'Add'), 'obj'), ((':', 'XOR'), 'punct'), (('XOR', 'Add'), 'parataxis'), (('the', 'state'), 'det'), (('state', 'XOR'), 'obj'), (('with', 'block'), 'case'), (('key', 'block'), 'amod'), (('block', 'XOR'), 'obl'), (('.', 'Apply'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 Data Units in AES      Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Block to State & State to Block    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  Plain Text to State    Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES Structure 

Tokens are: 
>> ['Data', 'Units', 'in', 'AES', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Block', 'to', 'State', '&', 'State', 'to', 'Block', 'Unit', '-', '2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Plain', 'Text', 'to', 'State', 'Unit', '-', '2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'AES', 'Structure'] 

 UPOS tags are: 
>> [('Data', 'NOUN'), ('Units', 'NOUN'), ('in', 'ADP'), ('AES', 'PROPN'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Block', 'NOUN'), ('to', 'ADP'), ('State', 'NOUN'), ('&', 'CCONJ'), ('State', 'NOUN'), ('to', 'ADP'), ('Block', 'NOUN'), ('Unit', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Plain', 'ADJ'), ('Text', 'NOUN'), ('to', 'ADP'), ('State', 'PROPN'), ('Unit', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('AES', 'NOUN'), ('Structure', 'NOUN')] 

 XPOS tags are: 
>> [('Data', 'NN'), ('Units', 'NNS'), ('in', 'IN'), ('AES', 'NNP'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Block', 'NN'), ('to', 'IN'), ('State', 'NN'), ('&', 'CC'), ('State', 'NN'), ('to', 'IN'), ('Block', 'NN'), ('Unit', 'NN'), ('-', ','), ('2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Plain', 'JJ'), ('Text', 'NN'), ('to', 'IN'), ('State', 'NNP'), ('Unit', 'NN'), ('-', ','), ('2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('AES', 'NN'), ('Structure', 'NN')] 

 Lemmas are: 
>> [('Data', 'data'), ('Units', 'unit'), ('in', 'in'), ('AES', 'AES'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Block', 'block'), ('to', 'to'), ('State', 'state'), ('&', '&'), ('State', 'state'), ('to', 'to'), ('Block', 'block'), ('Unit', 'unit'), ('-', '-'), ('2', '2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Plain', 'Plain'), ('Text', 'text'), ('to', 'to'), ('State', 'State'), ('Unit', 'unit'), ('-', '-'), ('2', '2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('AES', 'aes'), ('Structure', 'structure')] 

 Dependency tags are: 
>> [(('Data', 'Units'), 'compound'), (('Units', 'root'), 'root'), (('in', 'Unit'), 'case'), (('AES', 'Unit'), 'compound'), (('Unit', 'Units'), 'nmod'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Units'), 'nmod'), (('of', 'Block'), 'case'), (('Engineering', 'Block'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Block'), 'compound'), (('Block', 'Institute'), 'nmod'), (('to', 'Unit'), 'case'), (('State', 'Unit'), 'compound'), (('&', 'State'), 'cc'), (('State', 'State'), 'conj'), (('to', 'Block'), 'case'), (('Block', 'State'), 'nmod'), (('Unit', 'Block'), 'nmod'), (('-', 'Institute'), 'punct'), (('2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Units'), 'parataxis'), (('of', 'Text'), 'case'), (('Engineering', 'Text'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Text'), 'compound'), (('Plain', 'Text'), 'amod'), (('Text', 'Institute'), 'nmod'), (('to', 'Unit'), 'case'), (('State', 'Unit'), 'compound'), (('Unit', 'Text'), 'nmod'), (('-', 'Text'), 'punct'), (('2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Text'), 'appos'), (('of', 'Structure'), 'case'), (('Engineering', 'Structure'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Structure'), 'compound'), (('AES', 'Structure'), 'compound'), (('Structure', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('AES      Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('Block    Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('State    Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 54 ===========================

 The first N-1 rounds consist of four distinct transformation functions. 

Tokens are: 
>> ['The', 'first', 'N-1', 'rounds', 'consist', 'of', 'four', 'distinct', 'transformation', 'functions', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('N-1', 'NOUN'), ('rounds', 'NOUN'), ('consist', 'VERB'), ('of', 'ADP'), ('four', 'NUM'), ('distinct', 'ADJ'), ('transformation', 'NOUN'), ('functions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('N-1', 'NN'), ('rounds', 'NNS'), ('consist', 'VBP'), ('of', 'IN'), ('four', 'CD'), ('distinct', 'JJ'), ('transformation', 'NN'), ('functions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('N-1', 'n-1'), ('rounds', 'round'), ('consist', 'consist'), ('of', 'of'), ('four', 'four'), ('distinct', 'distinct'), ('transformation', 'transformation'), ('functions', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'rounds'), 'det'), (('first', 'rounds'), 'amod'), (('N-1', 'rounds'), 'compound'), (('rounds', 'consist'), 'nsubj'), (('consist', 'root'), 'root'), (('of', 'functions'), 'case'), (('four', 'functions'), 'nummod'), (('distinct', 'functions'), 'amod'), (('transformation', 'functions'), 'compound'), (('functions', 'consist'), 'obl'), (('.', 'consist'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('N-1', 'ORG'), ('four', 'CARDINAL')]

========================== Sentence 55 ===========================

 The 16 input bytes are substituted using an S-box SubBytes Each of the four rows of the matrix is shifted to the left ShiftRows Each column of four bytes is now transformed using a special mathematical function. 

Tokens are: 
>> ['The', '16', 'input', 'bytes', 'are', 'substituted', 'using', 'an', 'S-box', 'SubBytes', 'Each', 'of', 'the', 'four', 'rows', 'of', 'the', 'matrix', 'is', 'shifted', 'to', 'the', 'left', 'ShiftRows', 'Each', 'column', 'of', 'four', 'bytes', 'is', 'now', 'transformed', 'using', 'a', 'special', 'mathematical', 'function', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('16', 'NUM'), ('input', 'NOUN'), ('bytes', 'NOUN'), ('are', 'AUX'), ('substituted', 'VERB'), ('using', 'VERB'), ('an', 'DET'), ('S-box', 'PROPN'), ('SubBytes', 'PROPN'), ('Each', 'DET'), ('of', 'ADP'), ('the', 'DET'), ('four', 'NUM'), ('rows', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('matrix', 'NOUN'), ('is', 'AUX'), ('shifted', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('left', 'ADJ'), ('ShiftRows', 'PROPN'), ('Each', 'DET'), ('column', 'NOUN'), ('of', 'ADP'), ('four', 'NUM'), ('bytes', 'NOUN'), ('is', 'AUX'), ('now', 'ADV'), ('transformed', 'VERB'), ('using', 'VERB'), ('a', 'DET'), ('special', 'ADJ'), ('mathematical', 'ADJ'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('16', 'CD'), ('input', 'NN'), ('bytes', 'NNS'), ('are', 'VBP'), ('substituted', 'VBN'), ('using', 'VBG'), ('an', 'DT'), ('S-box', 'NNP'), ('SubBytes', 'NNP'), ('Each', 'DT'), ('of', 'IN'), ('the', 'DT'), ('four', 'CD'), ('rows', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('matrix', 'NN'), ('is', 'VBZ'), ('shifted', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('left', 'JJ'), ('ShiftRows', 'NNPS'), ('Each', 'DT'), ('column', 'NN'), ('of', 'IN'), ('four', 'CD'), ('bytes', 'NNS'), ('is', 'VBZ'), ('now', 'RB'), ('transformed', 'VBN'), ('using', 'VBG'), ('a', 'DT'), ('special', 'JJ'), ('mathematical', 'JJ'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('16', '16'), ('input', 'input'), ('bytes', 'byte'), ('are', 'be'), ('substituted', 'substitute'), ('using', 'use'), ('an', 'a'), ('S-box', 'S-box'), ('SubBytes', 'SubBytes'), ('Each', 'each'), ('of', 'of'), ('the', 'the'), ('four', 'four'), ('rows', 'row'), ('of', 'of'), ('the', 'the'), ('matrix', 'matrix'), ('is', 'be'), ('shifted', 'shift'), ('to', 'to'), ('the', 'the'), ('left', 'left'), ('ShiftRows', 'ShiftRow'), ('Each', 'each'), ('column', 'column'), ('of', 'of'), ('four', 'four'), ('bytes', 'byte'), ('is', 'be'), ('now', 'now'), ('transformed', 'transform'), ('using', 'use'), ('a', 'a'), ('special', 'special'), ('mathematical', 'mathematical'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'bytes'), 'det'), (('16', 'input'), 'nummod'), (('input', 'bytes'), 'compound'), (('bytes', 'substituted'), 'nsubj:pass'), (('are', 'substituted'), 'aux:pass'), (('substituted', 'root'), 'root'), (('using', 'substituted'), 'advcl'), (('an', 'SubBytes'), 'det'), (('S-box', 'SubBytes'), 'compound'), (('SubBytes', 'using'), 'obj'), (('Each', 'shifted'), 'nsubj:pass'), (('of', 'rows'), 'case'), (('the', 'rows'), 'det'), (('four', 'rows'), 'nummod'), (('rows', 'Each'), 'nmod'), (('of', 'matrix'), 'case'), (('the', 'matrix'), 'det'), (('matrix', 'rows'), 'nmod'), (('is', 'shifted'), 'aux:pass'), (('shifted', 'substituted'), 'conj'), (('to', 'ShiftRows'), 'case'), (('the', 'ShiftRows'), 'det'), (('left', 'ShiftRows'), 'amod'), (('ShiftRows', 'shifted'), 'obl'), (('Each', 'column'), 'det'), (('column', 'transformed'), 'nsubj:pass'), (('of', 'bytes'), 'case'), (('four', 'bytes'), 'nummod'), (('bytes', 'column'), 'nmod'), (('is', 'transformed'), 'aux:pass'), (('now', 'transformed'), 'advmod'), (('transformed', 'ShiftRows'), 'acl:relcl'), (('using', 'transformed'), 'advcl'), (('a', 'function'), 'det'), (('special', 'function'), 'amod'), (('mathematical', 'function'), 'amod'), (('function', 'using'), 'obj'), (('.', 'substituted'), 'punct')]

 Named Entities are: 
>> [('16', 'CARDINAL'), ('four', 'CARDINAL'), ('ShiftRows', 'PRODUCT'), ('four bytes', 'QUANTITY')]

========================== Sentence 56 ===========================

 MixColumns 

Tokens are: 
>> ['MixColumns'] 

 UPOS tags are: 
>> [('MixColumns', 'PROPN')] 

 XPOS tags are: 
>> [('MixColumns', 'NNPS')] 

 Lemmas are: 
>> [('MixColumns', 'MixColumns')] 

 Dependency tags are: 
>> [(('MixColumns', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 The 16 bytes of the matrix are now considered as 128 bits and are XORed to the 128 bits of the round key. 

Tokens are: 
>> ['The', '16', 'bytes', 'of', 'the', 'matrix', 'are', 'now', 'considered', 'as', '128', 'bits', 'and', 'are', 'XORed', 'to', 'the', '128', 'bits', 'of', 'the', 'round', 'key', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('16', 'NUM'), ('bytes', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('matrix', 'NOUN'), ('are', 'AUX'), ('now', 'ADV'), ('considered', 'VERB'), ('as', 'ADP'), ('128', 'NUM'), ('bits', 'NOUN'), ('and', 'CCONJ'), ('are', 'AUX'), ('XORed', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('128', 'NUM'), ('bits', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('round', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('16', 'CD'), ('bytes', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('matrix', 'NN'), ('are', 'VBP'), ('now', 'RB'), ('considered', 'VBN'), ('as', 'IN'), ('128', 'CD'), ('bits', 'NNS'), ('and', 'CC'), ('are', 'VBP'), ('XORed', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('128', 'CD'), ('bits', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('round', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('16', '16'), ('bytes', 'byte'), ('of', 'of'), ('the', 'the'), ('matrix', 'matrix'), ('are', 'be'), ('now', 'now'), ('considered', 'consider'), ('as', 'as'), ('128', '128'), ('bits', 'bit'), ('and', 'and'), ('are', 'be'), ('XORed', 'xor'), ('to', 'to'), ('the', 'the'), ('128', '128'), ('bits', 'bit'), ('of', 'of'), ('the', 'the'), ('round', 'round'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'bytes'), 'det'), (('16', 'bytes'), 'nummod'), (('bytes', 'considered'), 'nsubj:pass'), (('of', 'matrix'), 'case'), (('the', 'matrix'), 'det'), (('matrix', 'bytes'), 'nmod'), (('are', 'considered'), 'aux:pass'), (('now', 'considered'), 'advmod'), (('considered', 'root'), 'root'), (('as', 'bits'), 'case'), (('128', 'bits'), 'nummod'), (('bits', 'considered'), 'obl'), (('and', 'XORed'), 'cc'), (('are', 'XORed'), 'aux:pass'), (('XORed', 'considered'), 'conj'), (('to', 'bits'), 'case'), (('the', 'bits'), 'det'), (('128', 'bits'), 'nummod'), (('bits', 'XORed'), 'obl'), (('of', 'key'), 'case'), (('the', 'key'), 'det'), (('round', 'key'), 'amod'), (('key', 'bits'), 'nmod'), (('.', 'considered'), 'punct')]

 Named Entities are: 
>> [('16 bytes', 'QUANTITY'), ('128 bits', 'QUANTITY'), ('128', 'CARDINAL')]

========================== Sentence 58 ===========================

 Add 

Tokens are: 
>> ['Add'] 

 UPOS tags are: 
>> [('Add', 'VERB')] 

 XPOS tags are: 
>> [('Add', 'VB')] 

 Lemmas are: 
>> [('Add', 'add')] 

 Dependency tags are: 
>> [(('Add', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 Round 

Tokens are: 
>> ['Round'] 

 UPOS tags are: 
>> [('Round', 'PROPN')] 

 XPOS tags are: 
>> [('Round', 'NNP')] 

 Lemmas are: 
>> [('Round', 'Round')] 

 Dependency tags are: 
>> [(('Round', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 Key  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  SubByte Transformation 

Tokens are: 
>> ['Key', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'SubByte', 'Transformation'] 

 UPOS tags are: 
>> [('Key', 'ADJ'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('SubByte', 'PROPN'), ('Transformation', 'NOUN')] 

 XPOS tags are: 
>> [('Key', 'JJ'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('SubByte', 'NNP'), ('Transformation', 'NN')] 

 Lemmas are: 
>> [('Key', 'key'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('SubByte', 'SubByte'), ('Transformation', 'transformation')] 

 Dependency tags are: 
>> [(('Key', 'Unit'), 'amod'), (('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Transformation'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Transformation'), 'compound'), (('SubByte', 'Transformation'), 'compound'), (('Transformation', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Key  Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 61 ===========================

 The forward substitute byte transformation, called SubBytes, is a simple table lookup   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  ShiftRows 

Tokens are: 
>> ['The', 'forward', 'substitute', 'byte', 'transformation', ',', 'called', 'SubBytes', ',', 'is', 'a', 'simple', 'table', 'lookup', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'ShiftRows'] 

 UPOS tags are: 
>> [('The', 'DET'), ('forward', 'ADJ'), ('substitute', 'NOUN'), ('byte', 'NOUN'), ('transformation', 'NOUN'), (',', 'PUNCT'), ('called', 'VERB'), ('SubBytes', 'PROPN'), (',', 'PUNCT'), ('is', 'AUX'), ('a', 'DET'), ('simple', 'ADJ'), ('table', 'NOUN'), ('lookup', 'NOUN'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('ShiftRows', 'PROPN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('forward', 'JJ'), ('substitute', 'NN'), ('byte', 'NN'), ('transformation', 'NN'), (',', ','), ('called', 'VBN'), ('SubBytes', 'NNP'), (',', ','), ('is', 'VBZ'), ('a', 'DT'), ('simple', 'JJ'), ('table', 'NN'), ('lookup', 'NN'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('ShiftRows', 'NNPS')] 

 Lemmas are: 
>> [('The', 'the'), ('forward', 'forward'), ('substitute', 'substitute'), ('byte', 'byte'), ('transformation', 'transformation'), (',', ','), ('called', 'call'), ('SubBytes', 'SubBytes'), (',', ','), ('is', 'be'), ('a', 'a'), ('simple', 'simple'), ('table', 'table'), ('lookup', 'lookup'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('ShiftRows', 'ShiftRow')] 

 Dependency tags are: 
>> [(('The', 'transformation'), 'det'), (('forward', 'substitute'), 'amod'), (('substitute', 'transformation'), 'compound'), (('byte', 'transformation'), 'compound'), (('transformation', 'Unit'), 'nsubj'), ((',', 'transformation'), 'punct'), (('called', 'transformation'), 'acl'), (('SubBytes', 'called'), 'xcomp'), ((',', 'transformation'), 'punct'), (('is', 'Unit'), 'cop'), (('a', 'Unit'), 'det'), (('simple', 'Unit'), 'amod'), (('table', 'Unit'), 'compound'), (('lookup', 'Unit'), 'compound'), (('Unit', 'root'), 'root'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'ShiftRows'), 'case'), (('Engineering', 'ShiftRows'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'ShiftRows'), 'compound'), (('ShiftRows', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('SubBytes', 'PRODUCT')]

========================== Sentence 62 ===========================

 The first row of State is not altered. 

Tokens are: 
>> ['The', 'first', 'row', 'of', 'State', 'is', 'not', 'altered', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('row', 'NOUN'), ('of', 'ADP'), ('State', 'NOUN'), ('is', 'AUX'), ('not', 'PART'), ('altered', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('row', 'NN'), ('of', 'IN'), ('State', 'NN'), ('is', 'VBZ'), ('not', 'RB'), ('altered', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('row', 'row'), ('of', 'of'), ('State', 'state'), ('is', 'be'), ('not', 'not'), ('altered', 'alter'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'row'), 'det'), (('first', 'row'), 'amod'), (('row', 'altered'), 'nsubj:pass'), (('of', 'State'), 'case'), (('State', 'row'), 'nmod'), (('is', 'altered'), 'aux:pass'), (('not', 'altered'), 'advmod'), (('altered', 'root'), 'root'), (('.', 'altered'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('State', 'ORG')]

========================== Sentence 63 ===========================

 For the second row, a 1-byte circular left shift is performed. 

Tokens are: 
>> ['For', 'the', 'second', 'row', ',', 'a', '1', '-', 'byte', 'circular', 'left', 'shift', 'is', 'performed', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('the', 'DET'), ('second', 'ADJ'), ('row', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('1', 'NUM'), ('-', 'PUNCT'), ('byte', 'NOUN'), ('circular', 'ADJ'), ('left', 'VERB'), ('shift', 'NOUN'), ('is', 'AUX'), ('performed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('the', 'DT'), ('second', 'JJ'), ('row', 'NN'), (',', ','), ('a', 'DT'), ('1', 'CD'), ('-', 'HYPH'), ('byte', 'NN'), ('circular', 'JJ'), ('left', 'VBN'), ('shift', 'NN'), ('is', 'VBZ'), ('performed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('the', 'the'), ('second', 'second'), ('row', 'row'), (',', ','), ('a', 'a'), ('1', '1'), ('-', '-'), ('byte', 'byte'), ('circular', 'circular'), ('left', 'leave'), ('shift', 'shift'), ('is', 'be'), ('performed', 'perform'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'row'), 'case'), (('the', 'row'), 'det'), (('second', 'row'), 'amod'), (('row', 'performed'), 'obl'), ((',', 'performed'), 'punct'), (('a', 'shift'), 'det'), (('1', 'byte'), 'nummod'), (('-', 'byte'), 'punct'), (('byte', 'shift'), 'compound'), (('circular', 'shift'), 'amod'), (('left', 'shift'), 'amod'), (('shift', 'performed'), 'nsubj:pass'), (('is', 'performed'), 'aux:pass'), (('performed', 'root'), 'root'), (('.', 'performed'), 'punct')]

 Named Entities are: 
>> [('second', 'ORDINAL'), ('1-byte', 'QUANTITY')]

========================== Sentence 64 ===========================

 For the third row, a 2-byte circular left shift is performed. 

Tokens are: 
>> ['For', 'the', 'third', 'row', ',', 'a', '2', '-', 'byte', 'circular', 'left', 'shift', 'is', 'performed', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('the', 'DET'), ('third', 'ADJ'), ('row', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('2', 'NUM'), ('-', 'PUNCT'), ('byte', 'NOUN'), ('circular', 'ADJ'), ('left', 'VERB'), ('shift', 'NOUN'), ('is', 'AUX'), ('performed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('the', 'DT'), ('third', 'JJ'), ('row', 'NN'), (',', ','), ('a', 'DT'), ('2', 'CD'), ('-', 'HYPH'), ('byte', 'NN'), ('circular', 'JJ'), ('left', 'VBN'), ('shift', 'NN'), ('is', 'VBZ'), ('performed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('the', 'the'), ('third', 'third'), ('row', 'row'), (',', ','), ('a', 'a'), ('2', '2'), ('-', '-'), ('byte', 'byte'), ('circular', 'circular'), ('left', 'leave'), ('shift', 'shift'), ('is', 'be'), ('performed', 'perform'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'row'), 'case'), (('the', 'row'), 'det'), (('third', 'row'), 'amod'), (('row', 'performed'), 'obl'), ((',', 'performed'), 'punct'), (('a', 'shift'), 'det'), (('2', 'byte'), 'nummod'), (('-', 'byte'), 'punct'), (('byte', 'shift'), 'compound'), (('circular', 'shift'), 'amod'), (('left', 'shift'), 'amod'), (('shift', 'performed'), 'nsubj:pass'), (('is', 'performed'), 'aux:pass'), (('performed', 'root'), 'root'), (('.', 'performed'), 'punct')]

 Named Entities are: 
>> [('third', 'ORDINAL'), ('2-byte', 'QUANTITY')]

========================== Sentence 65 ===========================

 For the fourth row, a 3-byte circular left shift is performed. 

Tokens are: 
>> ['For', 'the', 'fourth', 'row', ',', 'a', '3', '-', 'byte', 'circular', 'left', 'shift', 'is', 'performed', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('the', 'DET'), ('fourth', 'ADJ'), ('row', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('3', 'NUM'), ('-', 'PUNCT'), ('byte', 'NOUN'), ('circular', 'ADJ'), ('left', 'VERB'), ('shift', 'NOUN'), ('is', 'AUX'), ('performed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('the', 'DT'), ('fourth', 'JJ'), ('row', 'NN'), (',', ','), ('a', 'DT'), ('3', 'CD'), ('-', 'HYPH'), ('byte', 'NN'), ('circular', 'JJ'), ('left', 'VBN'), ('shift', 'NN'), ('is', 'VBZ'), ('performed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('the', 'the'), ('fourth', 'fourth'), ('row', 'row'), (',', ','), ('a', 'a'), ('3', '3'), ('-', '-'), ('byte', 'byte'), ('circular', 'circular'), ('left', 'leave'), ('shift', 'shift'), ('is', 'be'), ('performed', 'perform'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'row'), 'case'), (('the', 'row'), 'det'), (('fourth', 'row'), 'amod'), (('row', 'performed'), 'obl'), ((',', 'performed'), 'punct'), (('a', 'shift'), 'det'), (('3', 'byte'), 'nummod'), (('-', 'byte'), 'punct'), (('byte', 'shift'), 'compound'), (('circular', 'shift'), 'amod'), (('left', 'shift'), 'amod'), (('shift', 'performed'), 'nsubj:pass'), (('is', 'performed'), 'aux:pass'), (('performed', 'root'), 'root'), (('.', 'performed'), 'punct')]

 Named Entities are: 
>> [('fourth', 'ORDINAL'), ('3-byte', 'QUANTITY')]

========================== Sentence 66 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  MixColumns 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'MixColumns'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('MixColumns', 'PROPN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('MixColumns', 'NNPS')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('MixColumns', 'MixColumns')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'MixColumns'), 'case'), (('Engineering', 'MixColumns'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'MixColumns'), 'compound'), (('MixColumns', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 67 ===========================

 Each byte of a column is mapped into a new value that is a function of all four bytes in that column. 

Tokens are: 
>> ['Each', 'byte', 'of', 'a', 'column', 'is', 'mapped', 'into', 'a', 'new', 'value', 'that', 'is', 'a', 'function', 'of', 'all', 'four', 'bytes', 'in', 'that', 'column', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('byte', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('column', 'NOUN'), ('is', 'AUX'), ('mapped', 'VERB'), ('into', 'ADP'), ('a', 'DET'), ('new', 'ADJ'), ('value', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('function', 'NOUN'), ('of', 'ADP'), ('all', 'DET'), ('four', 'NUM'), ('bytes', 'NOUN'), ('in', 'ADP'), ('that', 'DET'), ('column', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('byte', 'NN'), ('of', 'IN'), ('a', 'DT'), ('column', 'NN'), ('is', 'VBZ'), ('mapped', 'VBN'), ('into', 'IN'), ('a', 'DT'), ('new', 'JJ'), ('value', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('a', 'DT'), ('function', 'NN'), ('of', 'IN'), ('all', 'DT'), ('four', 'CD'), ('bytes', 'NNS'), ('in', 'IN'), ('that', 'DT'), ('column', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('byte', 'byte'), ('of', 'of'), ('a', 'a'), ('column', 'column'), ('is', 'be'), ('mapped', 'map'), ('into', 'into'), ('a', 'a'), ('new', 'new'), ('value', 'value'), ('that', 'that'), ('is', 'be'), ('a', 'a'), ('function', 'function'), ('of', 'of'), ('all', 'all'), ('four', 'four'), ('bytes', 'byte'), ('in', 'in'), ('that', 'that'), ('column', 'column'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'byte'), 'det'), (('byte', 'mapped'), 'nsubj:pass'), (('of', 'column'), 'case'), (('a', 'column'), 'det'), (('column', 'byte'), 'nmod'), (('is', 'mapped'), 'aux:pass'), (('mapped', 'root'), 'root'), (('into', 'value'), 'case'), (('a', 'value'), 'det'), (('new', 'value'), 'amod'), (('value', 'mapped'), 'obl'), (('that', 'function'), 'nsubj'), (('is', 'function'), 'cop'), (('a', 'function'), 'det'), (('function', 'value'), 'acl:relcl'), (('of', 'bytes'), 'case'), (('all', 'bytes'), 'det'), (('four', 'bytes'), 'nummod'), (('bytes', 'function'), 'nmod'), (('in', 'column'), 'case'), (('that', 'column'), 'det'), (('column', 'bytes'), 'nmod'), (('.', 'mapped'), 'punct')]

 Named Entities are: 
>> [('four', 'CARDINAL')]

========================== Sentence 68 ===========================

 Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AddRound 

Tokens are: 
>> ['Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'AddRound'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('AddRound', 'PROPN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('AddRound', 'NNP')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('AddRound', 'AddRound')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('AddRound', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 69 ===========================

 Key 

Tokens are: 
>> ['Key'] 

 UPOS tags are: 
>> [('Key', 'NOUN')] 

 XPOS tags are: 
>> [('Key', 'NN')] 

 Lemmas are: 
>> [('Key', 'key')] 

 Dependency tags are: 
>> [(('Key', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 70 ===========================

 In the forward add round key transformation, the 128 bits of State are bitwise XORed with the 128 bits of the round key. 

Tokens are: 
>> ['In', 'the', 'forward', 'add', 'round', 'key', 'transformation', ',', 'the', '128', 'bits', 'of', 'State', 'are', 'bitwise', 'XORed', 'with', 'the', '128', 'bits', 'of', 'the', 'round', 'key', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('forward', 'ADJ'), ('add', 'VERB'), ('round', 'ADJ'), ('key', 'ADJ'), ('transformation', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('128', 'NUM'), ('bits', 'NOUN'), ('of', 'ADP'), ('State', 'NOUN'), ('are', 'AUX'), ('bitwise', 'NOUN'), ('XORed', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('128', 'NUM'), ('bits', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('round', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('forward', 'JJ'), ('add', 'VB'), ('round', 'JJ'), ('key', 'JJ'), ('transformation', 'NN'), (',', ','), ('the', 'DT'), ('128', 'CD'), ('bits', 'NNS'), ('of', 'IN'), ('State', 'NN'), ('are', 'VBP'), ('bitwise', 'NN'), ('XORed', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('128', 'CD'), ('bits', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('round', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('forward', 'forward'), ('add', 'add'), ('round', 'round'), ('key', 'key'), ('transformation', 'transformation'), (',', ','), ('the', 'the'), ('128', '128'), ('bits', 'bit'), ('of', 'of'), ('State', 'state'), ('are', 'be'), ('bitwise', 'bitwise'), ('XORed', 'xor'), ('with', 'with'), ('the', 'the'), ('128', '128'), ('bits', 'bit'), ('of', 'of'), ('the', 'the'), ('round', 'round'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'forward'), 'case'), (('the', 'forward'), 'det'), (('forward', 'add'), 'obl'), (('add', 'bitwise'), 'advcl'), (('round', 'transformation'), 'amod'), (('key', 'transformation'), 'amod'), (('transformation', 'add'), 'obj'), ((',', 'bitwise'), 'punct'), (('the', 'bits'), 'det'), (('128', 'bits'), 'nummod'), (('bits', 'bitwise'), 'nsubj'), (('of', 'State'), 'case'), (('State', 'bits'), 'nmod'), (('are', 'bitwise'), 'cop'), (('bitwise', 'root'), 'root'), (('XORed', 'bitwise'), 'acl'), (('with', 'bits'), 'case'), (('the', 'bits'), 'det'), (('128', 'bits'), 'nummod'), (('bits', 'XORed'), 'obl'), (('of', 'key'), 'case'), (('the', 'key'), 'det'), (('round', 'key'), 'amod'), (('key', 'bits'), 'nmod'), (('.', 'bitwise'), 'punct')]

 Named Entities are: 
>> [('128', 'CARDINAL'), ('State', 'ORG'), ('128', 'CARDINAL')]

========================== Sentence 71 ===========================

 State Round Key  Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#›  AES Overall Structure   Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#› 

Tokens are: 
>> ['State', 'Round', 'Key', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'AES', 'Overall', 'Structure', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›'] 

 UPOS tags are: 
>> [('State', 'NOUN'), ('Round', 'ADJ'), ('Key', 'ADJ'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('AES', 'PROPN'), ('Overall', 'ADJ'), ('Structure', 'NOUN'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN')] 

 XPOS tags are: 
>> [('State', 'NN'), ('Round', 'JJ'), ('Key', 'JJ'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('AES', 'NNP'), ('Overall', 'JJ'), ('Structure', 'NN'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN')] 

 Lemmas are: 
>> [('State', 'state'), ('Round', 'round'), ('Key', 'key'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('AES', 'AES'), ('Overall', 'overall'), ('Structure', 'structure'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('State', 'Unit'), 'compound'), (('Round', 'Unit'), 'amod'), (('Key', 'Unit'), 'amod'), (('Unit', 'root'), 'root'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'list'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('AES', 'Unit'), 'compound'), (('Overall', 'Unit'), 'amod'), (('Structure', 'Unit'), 'compound'), (('Unit', 'Institute'), 'appos'), (('-2', 'Unit'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Institute'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('State Round Key  Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG'), ('AES Overall Structure   Unit-2                                                                                 Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 72 ===========================

 The AES key expansion algorithm takes as input a four-word (16-byte) key and produces a linear array of 44 words (176 bytes). 

Tokens are: 
>> ['The', 'AES', 'key', 'expansion', 'algorithm', 'takes', 'as', 'input', 'a', 'four', '-', 'word', '(', '16', '-', 'byte', ')', 'key', 'and', 'produces', 'a', 'linear', 'array', 'of', '44', 'words', '(', '176', 'bytes', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('AES', 'PROPN'), ('key', 'ADJ'), ('expansion', 'NOUN'), ('algorithm', 'NOUN'), ('takes', 'VERB'), ('as', 'ADP'), ('input', 'VERB'), ('a', 'DET'), ('four', 'NUM'), ('-', 'PUNCT'), ('word', 'NOUN'), ('(', 'PUNCT'), ('16', 'NUM'), ('-', 'SYM'), ('byte', 'NOUN'), (')', 'PUNCT'), ('key', 'NOUN'), ('and', 'CCONJ'), ('produces', 'VERB'), ('a', 'DET'), ('linear', 'ADJ'), ('array', 'NOUN'), ('of', 'ADP'), ('44', 'NUM'), ('words', 'NOUN'), ('(', 'PUNCT'), ('176', 'NUM'), ('bytes', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('AES', 'NNP'), ('key', 'JJ'), ('expansion', 'NN'), ('algorithm', 'NN'), ('takes', 'VBZ'), ('as', 'IN'), ('input', 'VB'), ('a', 'DT'), ('four', 'CD'), ('-', 'HYPH'), ('word', 'NN'), ('(', '-LRB-'), ('16', 'CD'), ('-', 'SYM'), ('byte', 'NN'), (')', '-RRB-'), ('key', 'NN'), ('and', 'CC'), ('produces', 'VBZ'), ('a', 'DT'), ('linear', 'JJ'), ('array', 'NN'), ('of', 'IN'), ('44', 'CD'), ('words', 'NNS'), ('(', '-LRB-'), ('176', 'CD'), ('bytes', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('AES', 'AES'), ('key', 'key'), ('expansion', 'expansion'), ('algorithm', 'algorithm'), ('takes', 'take'), ('as', 'as'), ('input', 'input'), ('a', 'a'), ('four', 'four'), ('-', '-'), ('word', 'word'), ('(', '('), ('16', '16'), ('-', '-'), ('byte', 'byte'), (')', ')'), ('key', 'key'), ('and', 'and'), ('produces', 'produce'), ('a', 'a'), ('linear', 'linear'), ('array', 'array'), ('of', 'of'), ('44', '44'), ('words', 'word'), ('(', '('), ('176', '176'), ('bytes', 'byte'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'algorithm'), 'det'), (('AES', 'algorithm'), 'compound'), (('key', 'expansion'), 'amod'), (('expansion', 'algorithm'), 'compound'), (('algorithm', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('as', 'input'), 'mark'), (('input', 'takes'), 'obl'), (('a', 'key'), 'det'), (('four', 'word'), 'nummod'), (('-', 'word'), 'punct'), (('word', 'key'), 'compound'), (('(', 'key'), 'punct'), (('16', 'key'), 'nummod'), (('-', 'byte'), 'case'), (('byte', '16'), 'nmod'), ((')', 'byte'), 'punct'), (('key', 'input'), 'obj'), (('and', 'produces'), 'cc'), (('produces', 'takes'), 'conj'), (('a', 'array'), 'det'), (('linear', 'array'), 'amod'), (('array', 'produces'), 'obj'), (('of', 'words'), 'case'), (('44', 'words'), 'nummod'), (('words', 'array'), 'nmod'), (('(', 'bytes'), 'punct'), (('176', 'bytes'), 'nummod'), (('bytes', 'words'), 'appos'), ((')', 'bytes'), 'punct'), (('.', 'takes'), 'punct')]

 Named Entities are: 
>> [('AES', 'ORG'), ('four', 'CARDINAL'), ('16-byte', 'QUANTITY'), ('44', 'CARDINAL'), ('176 bytes', 'QUANTITY')]

========================== Sentence 73 ===========================

 Each added word w[i] depends on the immediately preceding word, w[i - 1]. 

Tokens are: 
>> ['Each', 'added', 'word', 'w', '[', 'i', ']', 'depends', 'on', 'the', 'immediately', 'preceding', 'word', ',', 'w', '[', 'i', '-', '1', ']', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('added', 'VERB'), ('word', 'NOUN'), ('w', 'NOUN'), ('[', 'PUNCT'), ('i', 'NUM'), (']', 'PUNCT'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('immediately', 'ADV'), ('preceding', 'VERB'), ('word', 'NOUN'), (',', 'PUNCT'), ('w', 'NOUN'), ('[', 'PUNCT'), ('i', 'NUM'), ('-', 'SYM'), ('1', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('added', 'VBN'), ('word', 'NN'), ('w', 'NN'), ('[', '-LRB-'), ('i', 'CD'), (']', '-RRB-'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('immediately', 'RB'), ('preceding', 'VBG'), ('word', 'NN'), (',', ','), ('w', 'NN'), ('[', '-LRB-'), ('i', 'CD'), ('-', 'SYM'), ('1', 'CD'), (']', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('added', 'add'), ('word', 'word'), ('w', 'with'), ('[', '['), ('i', 'i'), (']', ']'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('immediately', 'immediately'), ('preceding', 'precede'), ('word', 'word'), (',', ','), ('w', 'with'), ('[', '['), ('i', 'i'), ('-', '-'), ('1', '1'), (']', ']'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'word'), 'det'), (('added', 'word'), 'amod'), (('word', 'depends'), 'nsubj'), (('w', 'i'), 'case'), (('[', 'i'), 'punct'), (('i', 'word'), 'appos'), ((']', 'i'), 'punct'), (('depends', 'root'), 'root'), (('on', 'word'), 'case'), (('the', 'word'), 'det'), (('immediately', 'preceding'), 'advmod'), (('preceding', 'word'), 'amod'), (('word', 'depends'), 'obl'), ((',', 'word'), 'punct'), (('w', 'i'), 'case'), (('[', 'i'), 'punct'), (('i', 'depends'), 'dep'), (('-', '1'), 'case'), (('1', 'i'), 'nmod'), ((']', 'i'), 'punct'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 In three out of four cases, a simple XOR is used. 

Tokens are: 
>> ['In', 'three', 'out', 'of', 'four', 'cases', ',', 'a', 'simple', 'XOR', 'is', 'used', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('three', 'NUM'), ('out', 'ADP'), ('of', 'ADP'), ('four', 'NUM'), ('cases', 'NOUN'), (',', 'PUNCT'), ('a', 'DET'), ('simple', 'ADJ'), ('XOR', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('three', 'CD'), ('out', 'IN'), ('of', 'IN'), ('four', 'CD'), ('cases', 'NNS'), (',', ','), ('a', 'DT'), ('simple', 'JJ'), ('XOR', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('three', 'three'), ('out', 'out'), ('of', 'of'), ('four', 'four'), ('cases', 'case'), (',', ','), ('a', 'a'), ('simple', 'simple'), ('XOR', 'xor'), ('is', 'be'), ('used', 'use'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'three'), 'case'), (('three', 'used'), 'obl'), (('out', 'cases'), 'case'), (('of', 'four'), 'case'), (('four', 'cases'), 'nummod'), (('cases', 'three'), 'nmod'), ((',', 'used'), 'punct'), (('a', 'XOR'), 'det'), (('simple', 'XOR'), 'amod'), (('XOR', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> [('three', 'CARDINAL'), ('four', 'CARDINAL')]

========================== Sentence 75 ===========================

 AES Key Expansion   Key Expansion Example     Unit-2                                                                                 Darshan Institute of Engineering & Technology            ‹#› 

Tokens are: 
>> ['AES', 'Key', 'Expansion', 'Key', 'Expansion', 'Example', 'Unit', '-2', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›'] 

 UPOS tags are: 
>> [('AES', 'PROPN'), ('Key', 'ADJ'), ('Expansion', 'NOUN'), ('Key', 'ADJ'), ('Expansion', 'NOUN'), ('Example', 'NOUN'), ('Unit', 'NOUN'), ('-2', 'NUM'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN')] 

 XPOS tags are: 
>> [('AES', 'NNP'), ('Key', 'JJ'), ('Expansion', 'NN'), ('Key', 'JJ'), ('Expansion', 'NN'), ('Example', 'NN'), ('Unit', 'NN'), ('-2', 'CD'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN')] 

 Lemmas are: 
>> [('AES', 'AES'), ('Key', 'key'), ('Expansion', 'expansion'), ('Key', 'key'), ('Expansion', 'expansion'), ('Example', 'example'), ('Unit', 'unit'), ('-2', '-2'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('AES', 'Expansion'), 'compound'), (('Key', 'Expansion'), 'amod'), (('Expansion', 'root'), 'root'), (('Key', 'Unit'), 'amod'), (('Expansion', 'Unit'), 'compound'), (('Example', 'Unit'), 'compound'), (('Unit', 'Expansion'), 'list'), (('-2', 'Institute'), 'nummod'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Darshan Institute of Engineering & Technology', 'ORG')]