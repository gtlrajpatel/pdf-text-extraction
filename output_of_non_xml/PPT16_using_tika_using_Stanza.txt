

========================== Sentence 1 ===========================

 OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-4 Asymmetric Ciphers      1  Outline Public Key Cryptosystems with Applications Requirements and Cryptanalysis RSA algorithm RSA computational aspects and security Diffie-Hillman Key Exchange algorithm Man-in-Middle attack   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 

Tokens are: 
>> ['OOPC', '++', 'UNIT', '-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav@darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', 'UNIT', '-4', 'Asymmetric', 'Ciphers', '1', 'Outline', 'Public', 'Key', 'Cryptosystems', 'with', 'Applications', 'Requirements', 'and', 'Cryptanalysis', 'RSA', 'algorithm', 'RSA', 'computational', 'aspects', 'and', 'security', 'Diffie-Hillman', 'Key', 'Exchange', 'algorithm', 'Man-in', '-', 'Middle', 'attack', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'X.800', 'and', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')'] 

 UPOS tags are: 
>> [('OOPC', 'PROPN'), ('++', 'NUM'), ('UNIT', 'NOUN'), ('-1', 'PUNCT'), ('Prof.', 'PROPN'), ('Rupesh', 'PROPN'), ('G.', 'PROPN'), ('Vaishnav', 'PROPN'), ('rupesh.vaishnav@darshan.ac.in', 'X'), ('94280-37452', 'NUM'), ('Information', 'NOUN'), ('&', 'CCONJ'), ('Network', 'PROPN'), ('Security', 'PROPN'), ('(', 'PUNCT'), ('2170709', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('UNIT', 'NOUN'), ('-4', 'NUM'), ('Asymmetric', 'ADJ'), ('Ciphers', 'PROPN'), ('1', 'NUM'), ('Outline', 'NOUN'), ('Public', 'ADJ'), ('Key', 'ADJ'), ('Cryptosystems', 'PROPN'), ('with', 'ADP'), ('Applications', 'PROPN'), ('Requirements', 'NOUN'), ('and', 'CCONJ'), ('Cryptanalysis', 'PROPN'), ('RSA', 'PROPN'), ('algorithm', 'NOUN'), ('RSA', 'PROPN'), ('computational', 'ADJ'), ('aspects', 'NOUN'), ('and', 'CCONJ'), ('security', 'NOUN'), ('Diffie-Hillman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('algorithm', 'NOUN'), ('Man-in', 'PROPN'), ('-', 'PUNCT'), ('Middle', 'ADJ'), ('attack', 'PROPN'), ('Unit', 'PROPN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('X.800', 'PROPN'), ('and', 'CCONJ'), ('RFC', 'PROPN'), ('2828', 'NUM'), ('International', 'ADJ'), ('Telecommunication', 'ADJ'), ('Union', 'PROPN'), ('(', 'PUNCT'), ('ITU', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('OOPC', 'NNP'), ('++', 'CD'), ('UNIT', 'NN'), ('-1', ','), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav@darshan.ac.in', 'ADD'), ('94280-37452', 'CD'), ('Information', 'NN'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NNP'), ('(', '-LRB-'), ('2170709', 'CD'), (')', '-RRB-'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('UNIT', 'NN'), ('-4', 'CD'), ('Asymmetric', 'JJ'), ('Ciphers', 'NNPS'), ('1', 'CD'), ('Outline', 'NN'), ('Public', 'JJ'), ('Key', 'JJ'), ('Cryptosystems', 'NNPS'), ('with', 'IN'), ('Applications', 'NNPS'), ('Requirements', 'NNS'), ('and', 'CC'), ('Cryptanalysis', 'NNP'), ('RSA', 'NNP'), ('algorithm', 'NN'), ('RSA', 'NNP'), ('computational', 'JJ'), ('aspects', 'NNS'), ('and', 'CC'), ('security', 'NN'), ('Diffie-Hillman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('algorithm', 'NN'), ('Man-in', 'NNP'), ('-', ','), ('Middle', 'NNP'), ('attack', 'NNP'), ('Unit', 'NNP'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('X.800', 'NNP'), ('and', 'CC'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '-LRB-'), ('ITU', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('OOPC', 'OOPC'), ('++', '++'), ('UNIT', 'unit'), ('-1', '-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav@darshan.ac.in', 'rupesh.vaishnav@darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'information'), ('&', '&'), ('Network', 'Network'), ('Security', 'Security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('UNIT', 'unit'), ('-4', '-4'), ('Asymmetric', 'Asymmetric'), ('Ciphers', 'Ciphers'), ('1', '1'), ('Outline', 'outline'), ('Public', 'Public'), ('Key', 'key'), ('Cryptosystems', 'Cryptosystem'), ('with', 'with'), ('Applications', 'application'), ('Requirements', 'requirement'), ('and', 'and'), ('Cryptanalysis', 'Cryptanalysis'), ('RSA', 'RSA'), ('algorithm', 'algorithm'), ('RSA', 'RSA'), ('computational', 'computational'), ('aspects', 'aspect'), ('and', 'and'), ('security', 'security'), ('Diffie-Hillman', 'Diffie-Hillman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('algorithm', 'algorithm'), ('Man-in', 'Man-in'), ('-', '-'), ('Middle', 'Middle'), ('attack', 'attack'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('X.800', 'X.800'), ('and', 'and'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')')] 

 Dependency tags are: 
>> [(('OOPC', 'root'), 'root'), (('++', 'UNIT'), 'nummod'), (('UNIT', 'OOPC'), 'appos'), (('-1', 'Prof.'), 'punct'), (('Prof.', 'OOPC'), 'appos'), (('Rupesh', 'Prof.'), 'flat'), (('G.', 'Prof.'), 'flat'), (('Vaishnav', 'Prof.'), 'flat'), (('rupesh.vaishnav@darshan.ac.in', 'Prof.'), 'flat'), (('94280-37452', 'Prof.'), 'list'), (('Information', 'Prof.'), 'conj'), (('&', 'Security'), 'cc'), (('Network', 'Security'), 'compound'), (('Security', 'Information'), 'conj'), (('(', '2170709'), 'punct'), (('2170709', 'Security'), 'appos'), ((')', '2170709'), 'punct'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'OOPC'), 'appos'), (('of', 'UNIT'), 'case'), (('Engineering', 'UNIT'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('UNIT', 'Institute'), 'nmod'), (('-4', 'Ciphers'), 'nummod'), (('Asymmetric', 'Ciphers'), 'amod'), (('Ciphers', 'Prof.'), 'conj'), (('1', 'Ciphers'), 'nummod'), (('Outline', 'Cryptosystems'), 'compound'), (('Public', 'Cryptosystems'), 'amod'), (('Key', 'Cryptosystems'), 'amod'), (('Cryptosystems', 'Ciphers'), 'appos'), (('with', 'Requirements'), 'case'), (('Applications', 'Requirements'), 'compound'), (('Requirements', 'Cryptosystems'), 'nmod'), (('and', 'algorithm'), 'cc'), (('Cryptanalysis', 'algorithm'), 'compound'), (('RSA', 'algorithm'), 'compound'), (('algorithm', 'Requirements'), 'conj'), (('RSA', 'aspects'), 'compound'), (('computational', 'aspects'), 'amod'), (('aspects', 'algorithm'), 'compound'), (('and', 'algorithm'), 'cc'), (('security', 'Exchange'), 'compound'), (('Diffie-Hillman', 'Exchange'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'algorithm'), 'compound'), (('algorithm', 'aspects'), 'conj'), (('Man-in', 'algorithm'), 'appos'), (('-', 'algorithm'), 'punct'), (('Middle', 'attack'), 'amod'), (('attack', 'Unit'), 'compound'), (('Unit', 'Institute'), 'appos'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Ciphers'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Man-in'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'X.800'), 'compound'), (('X.800', 'Institute'), 'nmod'), (('and', 'RFC'), 'cc'), (('RFC', 'Union'), 'compound'), (('2828', 'Union'), 'nummod'), (('International', 'Union'), 'amod'), (('Telecommunication', 'Union'), 'amod'), (('Union', 'X.800'), 'conj'), (('(', 'ITU'), 'punct'), (('ITU', 'Union'), 'appos'), ((')', 'ITU'), 'punct')]

 Named Entities are: 
>> [('Rupesh G. Vaishnav', 'PERSON'), ('94280-37452 Information & Network Security', 'ORG'), ('2170709', 'CARDINAL'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('1', 'CARDINAL'), ('RSA', 'ORG'), ('Diffie-Hillman Key Exchange', 'ORG'), ('Man-in-Middle attack   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('X.800', 'CARDINAL'), ('RFC 2828 International Telecommunication Union', 'ORG'), ('ITU', 'ORG')]

========================== Sentence 2 ===========================

 2  Symmetric key Encryption      Plaintext input Plaintext output Encryption Algorithm (e.g.---.- AES) Decryption Algorithm (reverse of encryption algorithm) 

Tokens are: 
>> ['2', 'Symmetric', 'key', 'Encryption', 'Plaintext', 'input', 'Plaintext', 'output', 'Encryption', 'Algorithm', '(', 'e.g.---.-', 'AES', ')', 'Decryption', 'Algorithm', '(', 'reverse', 'of', 'encryption', 'algorithm', ')'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('Symmetric', 'ADJ'), ('key', 'ADJ'), ('Encryption', 'NOUN'), ('Plaintext', 'NOUN'), ('input', 'NOUN'), ('Plaintext', 'NOUN'), ('output', 'NOUN'), ('Encryption', 'NOUN'), ('Algorithm', 'NOUN'), ('(', 'PUNCT'), ('e.g.---.-', 'PUNCT'), ('AES', 'NOUN'), (')', 'PUNCT'), ('Decryption', 'NOUN'), ('Algorithm', 'NOUN'), ('(', 'PUNCT'), ('reverse', 'NOUN'), ('of', 'ADP'), ('encryption', 'NOUN'), ('algorithm', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'CD'), ('Symmetric', 'JJ'), ('key', 'JJ'), ('Encryption', 'NN'), ('Plaintext', 'NN'), ('input', 'NN'), ('Plaintext', 'NN'), ('output', 'NN'), ('Encryption', 'NN'), ('Algorithm', 'NN'), ('(', '-LRB-'), ('e.g.---.-', '-LRB-'), ('AES', 'NN'), (')', '-RRB-'), ('Decryption', 'NN'), ('Algorithm', 'NN'), ('(', '-LRB-'), ('reverse', 'NN'), ('of', 'IN'), ('encryption', 'NN'), ('algorithm', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('2', '2'), ('Symmetric', 'Symmetric'), ('key', 'key'), ('Encryption', 'encryption'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encryption'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.---.-', 'e.g.---.-'), ('AES', 'aes'), (')', ')'), ('Decryption', 'decryption'), ('Algorithm', 'algorithm'), ('(', '('), ('reverse', 'reverse'), ('of', 'of'), ('encryption', 'encryption'), ('algorithm', 'algorithm'), (')', ')')] 

 Dependency tags are: 
>> [(('2', 'input'), 'nummod'), (('Symmetric', 'input'), 'amod'), (('key', 'input'), 'amod'), (('Encryption', 'Plaintext'), 'compound'), (('Plaintext', 'input'), 'compound'), (('input', 'root'), 'root'), (('Plaintext', 'output'), 'compound'), (('output', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'input'), 'list'), (('(', 'AES'), 'punct'), (('e.g.---.-', 'AES'), 'punct'), (('AES', 'Algorithm'), 'appos'), ((')', 'AES'), 'punct'), (('Decryption', 'Algorithm'), 'compound'), (('Algorithm', 'Algorithm'), 'appos'), (('(', 'reverse'), 'punct'), (('reverse', 'Algorithm'), 'appos'), (('of', 'algorithm'), 'case'), (('encryption', 'algorithm'), 'compound'), (('algorithm', 'reverse'), 'nmod'), ((')', 'reverse'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 3 ===========================

 Secret key shared by sender and recipient X  Secret key shared by sender and recipient K Transmitted cipher text  Y = E(K, X) K X  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›      Plaintext input Plaintext output Encryption Algorithm (e.g.---.- RSA) Decryption Algorithm X  Transmitted cipher text  Y = E(PUa, X) X Bob’s Public key ring Alice   Ted  Mike  Joy Alice’s public key PUa Alice’s private key PRa Asymmetric key Encryption with Public Key Bob Alice 

Tokens are: 
>> ['Secret', 'key', 'shared', 'by', 'sender', 'and', 'recipient', 'X', 'Secret', 'key', 'shared', 'by', 'sender', 'and', 'recipient', 'K', 'Transmitted', 'cipher', 'text', 'Y', '=', 'E', '(', 'K', ',', 'X', ')', 'K', 'X', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Plaintext', 'input', 'Plaintext', 'output', 'Encryption', 'Algorithm', '(', 'e.g.---.-', 'RSA', ')', 'Decryption', 'Algorithm', 'X', 'Transmitted', 'cipher', 'text', 'Y', '=', 'E', '(', 'PUa', ',', 'X', ')', 'X', 'Bob', '’s', 'Public', 'key', 'ring', 'Alice', 'Ted', 'Mike', 'Joy', 'Alice', '’s', 'public', 'key', 'PUa', 'Alice', '’s', 'private', 'key', 'PRa', 'Asymmetric', 'key', 'Encryption', 'with', 'Public', 'Key', 'Bob', 'Alice'] 

 UPOS tags are: 
>> [('Secret', 'ADJ'), ('key', 'NOUN'), ('shared', 'VERB'), ('by', 'ADP'), ('sender', 'NOUN'), ('and', 'CCONJ'), ('recipient', 'NOUN'), ('X', 'NOUN'), ('Secret', 'ADJ'), ('key', 'NOUN'), ('shared', 'VERB'), ('by', 'ADP'), ('sender', 'NOUN'), ('and', 'CCONJ'), ('recipient', 'NOUN'), ('K', 'NUM'), ('Transmitted', 'VERB'), ('cipher', 'NOUN'), ('text', 'NOUN'), ('Y', 'NOUN'), ('=', 'SYM'), ('E', 'NOUN'), ('(', 'PUNCT'), ('K', 'NUM'), (',', 'PUNCT'), ('X', 'NOUN'), (')', 'PUNCT'), ('K', 'NUM'), ('X', 'NOUN'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Plaintext', 'PROPN'), ('input', 'NOUN'), ('Plaintext', 'PROPN'), ('output', 'NOUN'), ('Encryption', 'PROPN'), ('Algorithm', 'PROPN'), ('(', 'PUNCT'), ('e.g.---.-', 'PUNCT'), ('RSA', 'PROPN'), (')', 'PUNCT'), ('Decryption', 'NOUN'), ('Algorithm', 'NOUN'), ('X', 'PUNCT'), ('Transmitted', 'VERB'), ('cipher', 'NOUN'), ('text', 'NOUN'), ('Y', 'NOUN'), ('=', 'SYM'), ('E', 'PROPN'), ('(', 'PUNCT'), ('PUa', 'PROPN'), (',', 'PUNCT'), ('X', 'NUM'), (')', 'PUNCT'), ('X', 'PUNCT'), ('Bob', 'PROPN'), ('’s', 'PART'), ('Public', 'ADJ'), ('key', 'ADJ'), ('ring', 'NOUN'), ('Alice', 'PROPN'), ('Ted', 'PROPN'), ('Mike', 'PROPN'), ('Joy', 'PROPN'), ('Alice', 'PROPN'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'ADJ'), ('PUa', 'PROPN'), ('Alice', 'PROPN'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'ADJ'), ('PRa', 'PROPN'), ('Asymmetric', 'ADJ'), ('key', 'ADJ'), ('Encryption', 'PROPN'), ('with', 'ADP'), ('Public', 'ADJ'), ('Key', 'PROPN'), ('Bob', 'PROPN'), ('Alice', 'PROPN')] 

 XPOS tags are: 
>> [('Secret', 'JJ'), ('key', 'NN'), ('shared', 'VBN'), ('by', 'IN'), ('sender', 'NN'), ('and', 'CC'), ('recipient', 'NN'), ('X', 'NN'), ('Secret', 'JJ'), ('key', 'NN'), ('shared', 'VBN'), ('by', 'IN'), ('sender', 'NN'), ('and', 'CC'), ('recipient', 'NN'), ('K', 'CD'), ('Transmitted', 'VBN'), ('cipher', 'NN'), ('text', 'NN'), ('Y', 'NN'), ('=', 'SYM'), ('E', 'NN'), ('(', '-LRB-'), ('K', 'CD'), (',', ','), ('X', 'NN'), (')', '-RRB-'), ('K', 'CD'), ('X', 'NN'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Plaintext', 'NNP'), ('input', 'NN'), ('Plaintext', 'NNP'), ('output', 'NN'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '-LRB-'), ('e.g.---.-', '-LRB-'), ('RSA', 'NNP'), (')', '-RRB-'), ('Decryption', 'NN'), ('Algorithm', 'NN'), ('X', ','), ('Transmitted', 'VBN'), ('cipher', 'NN'), ('text', 'NN'), ('Y', 'NN'), ('=', 'SYM'), ('E', 'NNP'), ('(', '-LRB-'), ('PUa', 'NNP'), (',', ','), ('X', 'CD'), (')', '-RRB-'), ('X', ','), ('Bob', 'NNP'), ('’s', 'POS'), ('Public', 'JJ'), ('key', 'JJ'), ('ring', 'NN'), ('Alice', 'NNP'), ('Ted', 'NNP'), ('Mike', 'NNP'), ('Joy', 'NNP'), ('Alice', 'NNP'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'JJ'), ('PUa', 'NNP'), ('Alice', 'NNP'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'JJ'), ('PRa', 'NNP'), ('Asymmetric', 'JJ'), ('key', 'JJ'), ('Encryption', 'NNP'), ('with', 'IN'), ('Public', 'JJ'), ('Key', 'NNP'), ('Bob', 'NNP'), ('Alice', 'NNP')] 

 Lemmas are: 
>> [('Secret', 'Secret'), ('key', 'key'), ('shared', 'share'), ('by', 'by'), ('sender', 'sender'), ('and', 'and'), ('recipient', 'recipient'), ('X', 'x'), ('Secret', 'Secret'), ('key', 'key'), ('shared', 'share'), ('by', 'by'), ('sender', 'sender'), ('and', 'and'), ('recipient', 'recipient'), ('K', 'k'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'Y'), ('=', '='), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('X', 'x'), (')', ')'), ('K', 'k'), ('X', 'x'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Plaintext', 'Plaintext'), ('input', 'input'), ('Plaintext', 'Plaintext'), ('output', 'output'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('e.g.---.-', 'e.g.---.-'), ('RSA', 'RSA'), (')', ')'), ('Decryption', 'decryption'), ('Algorithm', 'algorithm'), ('X', 'X'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'Y'), ('=', '='), ('E', 'E'), ('(', '('), ('PUa', 'PUa'), (',', ','), ('X', 'X'), (')', ')'), ('X', 'X'), ('Bob', 'Bob'), ('’s', "'s"), ('Public', 'Public'), ('key', 'key'), ('ring', 'ring'), ('Alice', 'Alice'), ('Ted', 'Ted'), ('Mike', 'Mike'), ('Joy', 'Joy'), ('Alice', 'Alice'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('PUa', 'PUa'), ('Alice', 'Alice'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('PRa', 'PRa'), ('Asymmetric', 'Asymmetric'), ('key', 'key'), ('Encryption', 'Encryption'), ('with', 'with'), ('Public', 'Public'), ('Key', 'Key'), ('Bob', 'Bob'), ('Alice', 'Alice')] 

 Dependency tags are: 
>> [(('Secret', 'key'), 'amod'), (('key', '='), 'nsubj'), (('shared', 'key'), 'acl'), (('by', 'sender'), 'case'), (('sender', 'shared'), 'obl'), (('and', 'recipient'), 'cc'), (('recipient', 'sender'), 'conj'), (('X', 'key'), 'compound'), (('Secret', 'key'), 'amod'), (('key', 'sender'), 'conj'), (('shared', 'key'), 'acl'), (('by', 'sender'), 'case'), (('sender', 'shared'), 'obl'), (('and', 'K'), 'cc'), (('recipient', 'K'), 'compound'), (('K', 'sender'), 'conj'), (('Transmitted', 'text'), 'amod'), (('cipher', 'text'), 'compound'), (('text', 'Y'), 'compound'), (('Y', '='), 'nsubj'), (('=', 'root'), 'root'), (('E', '='), 'obj'), (('(', 'K'), 'punct'), (('K', 'E'), 'dep'), ((',', 'X'), 'punct'), (('X', 'K'), 'compound'), ((')', 'X'), 'punct'), (('K', 'Unit'), 'nummod'), (('X', 'Unit'), 'compound'), (('Unit', 'Institute'), 'compound'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'E'), 'conj'), (('of', 'input'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'input'), 'compound'), (('Plaintext', 'input'), 'compound'), (('input', 'Institute'), 'nmod'), (('Plaintext', 'Algorithm'), 'compound'), (('output', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'input'), 'compound'), (('(', 'RSA'), 'punct'), (('e.g.---.-', 'RSA'), 'punct'), (('RSA', 'Algorithm'), 'appos'), ((')', 'RSA'), 'punct'), (('Decryption', 'Algorithm'), 'compound'), (('Algorithm', 'Algorithm'), 'appos'), (('X', 'Algorithm'), 'punct'), (('Transmitted', 'text'), 'amod'), (('cipher', 'text'), 'compound'), (('text', 'Algorithm'), 'compound'), (('Y', '='), 'obj'), (('=', 'text'), 'acl'), (('E', '='), 'obj'), (('(', 'PUa'), 'punct'), (('PUa', '='), 'dep'), ((',', 'X'), 'punct'), (('X', 'PUa'), 'dep'), ((')', 'PUa'), 'punct'), (('X', 'ring'), 'punct'), (('Bob', 'ring'), 'nmod:poss'), (('’s', 'Bob'), 'case'), (('Public', 'ring'), 'amod'), (('key', 'ring'), 'amod'), (('ring', '='), 'obj'), (('Alice', 'ring'), 'flat'), (('Ted', 'Alice'), 'flat'), (('Mike', 'Alice'), 'flat'), (('Joy', 'Alice'), 'flat'), (('Alice', 'Alice'), 'flat'), (('’s', 'Alice'), 'case'), (('public', 'Alice'), 'amod'), (('key', 'Alice'), 'amod'), (('PUa', 'Alice'), 'compound'), (('Alice', 'Encryption'), 'nmod:poss'), (('’s', 'Alice'), 'case'), (('private', 'Encryption'), 'amod'), (('key', 'Encryption'), 'amod'), (('PRa', 'Encryption'), 'compound'), (('Asymmetric', 'Encryption'), 'amod'), (('key', 'Encryption'), 'amod'), (('Encryption', 'ring'), 'appos'), (('with', 'Bob'), 'case'), (('Public', 'Key'), 'amod'), (('Key', 'Bob'), 'compound'), (('Bob', 'Encryption'), 'nmod'), (('Alice', 'Bob'), 'flat')]

 Named Entities are: 
>> [('X  Secret', 'PRODUCT'), ('Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('Joy Alice', 'PERSON'), ('PUa Alice', 'PERSON'), ('Bob Alice', 'PERSON')]

========================== Sentence 4 ===========================

 The entire encrypted message serves as a confidentiality. 

Tokens are: 
>> ['The', 'entire', 'encrypted', 'message', 'serves', 'as', 'a', 'confidentiality', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('entire', 'ADJ'), ('encrypted', 'VERB'), ('message', 'NOUN'), ('serves', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('confidentiality', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('entire', 'JJ'), ('encrypted', 'VBN'), ('message', 'NN'), ('serves', 'VBZ'), ('as', 'IN'), ('a', 'DT'), ('confidentiality', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('entire', 'entire'), ('encrypted', 'encrypt'), ('message', 'message'), ('serves', 'serve'), ('as', 'as'), ('a', 'a'), ('confidentiality', 'confidentiality'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'message'), 'det'), (('entire', 'message'), 'amod'), (('encrypted', 'message'), 'amod'), (('message', 'serves'), 'nsubj'), (('serves', 'root'), 'root'), (('as', 'confidentiality'), 'case'), (('a', 'confidentiality'), 'det'), (('confidentiality', 'serves'), 'obl'), (('.', 'serves'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 4      Plaintext input Plaintext output Encryption Algorithm (e.g.---.- RSA) Decryption Algorithm X  Transmitted cipher text  Y = E(PRb, X) X Alice’s Public key ring Bob   Ted  Mike  Joy Bob’s public key PUb Bob’s private key PRb Asymmetric key Encryption with Private Key Bob Alice 

Tokens are: 
>> ['4', 'Plaintext', 'input', 'Plaintext', 'output', 'Encryption', 'Algorithm', '(', 'e.g.---.-', 'RSA', ')', 'Decryption', 'Algorithm', 'X', 'Transmitted', 'cipher', 'text', 'Y', '=', 'E(', 'PRb', ',', 'X', ')', 'X', 'Alice', '’s', 'Public', 'key', 'ring', 'Bob', 'Ted', 'Mike', 'Joy', 'Bob', '’s', 'public', 'key', 'PUb', 'Bob', '’s', 'private', 'key', 'PRb', 'Asymmetric', 'key', 'Encryption', 'with', 'Private', 'Key', 'Bob', 'Alice'] 

 UPOS tags are: 
>> [('4', 'NUM'), ('Plaintext', 'NOUN'), ('input', 'NOUN'), ('Plaintext', 'PROPN'), ('output', 'NOUN'), ('Encryption', 'NOUN'), ('Algorithm', 'NOUN'), ('(', 'PUNCT'), ('e.g.---.-', 'PUNCT'), ('RSA', 'PROPN'), (')', 'PUNCT'), ('Decryption', 'NOUN'), ('Algorithm', 'NOUN'), ('X', 'PUNCT'), ('Transmitted', 'VERB'), ('cipher', 'NOUN'), ('text', 'NOUN'), ('Y', 'NOUN'), ('=', 'SYM'), ('E(', 'PROPN'), ('PRb', 'PROPN'), (',', 'PUNCT'), ('X', 'NUM'), (')', 'PUNCT'), ('X', 'PROPN'), ('Alice', 'PROPN'), ('’s', 'PART'), ('Public', 'ADJ'), ('key', 'ADJ'), ('ring', 'NOUN'), ('Bob', 'PROPN'), ('Ted', 'PROPN'), ('Mike', 'PROPN'), ('Joy', 'PROPN'), ('Bob', 'PROPN'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'ADJ'), ('PUb', 'NOUN'), ('Bob', 'PROPN'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'ADJ'), ('PRb', 'NOUN'), ('Asymmetric', 'ADJ'), ('key', 'ADJ'), ('Encryption', 'NOUN'), ('with', 'ADP'), ('Private', 'ADJ'), ('Key', 'ADJ'), ('Bob', 'PROPN'), ('Alice', 'PROPN')] 

 XPOS tags are: 
>> [('4', 'CD'), ('Plaintext', 'NN'), ('input', 'NN'), ('Plaintext', 'NNP'), ('output', 'NN'), ('Encryption', 'NN'), ('Algorithm', 'NN'), ('(', '-LRB-'), ('e.g.---.-', '-LRB-'), ('RSA', 'NNP'), (')', '-RRB-'), ('Decryption', 'NN'), ('Algorithm', 'NN'), ('X', ','), ('Transmitted', 'VBN'), ('cipher', 'NN'), ('text', 'NN'), ('Y', 'NN'), ('=', 'SYM'), ('E(', 'NNP'), ('PRb', 'NNP'), (',', ','), ('X', 'CD'), (')', '-RRB-'), ('X', 'NNP'), ('Alice', 'NNP'), ('’s', 'POS'), ('Public', 'JJ'), ('key', 'JJ'), ('ring', 'NN'), ('Bob', 'NNP'), ('Ted', 'NNP'), ('Mike', 'NNP'), ('Joy', 'NNP'), ('Bob', 'NNP'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'JJ'), ('PUb', 'NN'), ('Bob', 'NNP'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'JJ'), ('PRb', 'NN'), ('Asymmetric', 'JJ'), ('key', 'JJ'), ('Encryption', 'NN'), ('with', 'IN'), ('Private', 'JJ'), ('Key', 'NNP'), ('Bob', 'NNP'), ('Alice', 'NNP')] 

 Lemmas are: 
>> [('4', '4'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'Plaintext'), ('output', 'output'), ('Encryption', 'encryption'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.---.-', 'e.g.---.-'), ('RSA', 'RSA'), (')', ')'), ('Decryption', 'decryption'), ('Algorithm', 'algorithm'), ('X', 'X'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'Y'), ('=', '='), ('E(', 'E('), ('PRb', 'PRb'), (',', ','), ('X', 'X'), (')', ')'), ('X', 'X'), ('Alice', 'Alice'), ('’s', "'s"), ('Public', 'Public'), ('key', 'key'), ('ring', 'ring'), ('Bob', 'Bob'), ('Ted', 'Ted'), ('Mike', 'Mike'), ('Joy', 'Joy'), ('Bob', 'Bob'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('PUb', 'pub'), ('Bob', 'Bob'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('PRb', 'prb'), ('Asymmetric', 'Asymmetric'), ('key', 'key'), ('Encryption', 'encryption'), ('with', 'with'), ('Private', 'private'), ('Key', 'key'), ('Bob', 'Bob'), ('Alice', 'Alice')] 

 Dependency tags are: 
>> [(('4', 'input'), 'nummod'), (('Plaintext', 'input'), 'compound'), (('input', 'root'), 'root'), (('Plaintext', 'Algorithm'), 'compound'), (('output', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'input'), 'conj'), (('(', 'RSA'), 'punct'), (('e.g.---.-', 'RSA'), 'punct'), (('RSA', 'Algorithm'), 'appos'), ((')', 'RSA'), 'punct'), (('Decryption', 'Algorithm'), 'compound'), (('Algorithm', 'Algorithm'), 'appos'), (('X', 'Algorithm'), 'punct'), (('Transmitted', 'Algorithm'), 'amod'), (('cipher', 'text'), 'compound'), (('text', 'Algorithm'), 'appos'), (('Y', '='), 'nsubj'), (('=', 'Algorithm'), 'parataxis'), (('E(', 'PRb'), 'compound'), (('PRb', '='), 'obj'), ((',', 'PRb'), 'punct'), (('X', 'PRb'), 'appos'), ((')', 'X'), 'punct'), (('X', 'Alice'), 'compound'), (('Alice', 'ring'), 'nmod:poss'), (('’s', 'Alice'), 'case'), (('Public', 'ring'), 'amod'), (('key', 'ring'), 'amod'), (('ring', 'Algorithm'), 'conj'), (('Bob', 'ring'), 'nmod:poss'), (('Ted', 'Bob'), 'flat'), (('Mike', 'Bob'), 'flat'), (('Joy', 'Bob'), 'flat'), (('Bob', 'PUb'), 'nmod:poss'), (('’s', 'Bob'), 'case'), (('public', 'PUb'), 'amod'), (('key', 'PUb'), 'amod'), (('PUb', 'ring'), 'appos'), (('Bob', 'Encryption'), 'nmod:poss'), (('’s', 'Bob'), 'case'), (('private', 'Encryption'), 'amod'), (('key', 'Encryption'), 'amod'), (('PRb', 'Encryption'), 'compound'), (('Asymmetric', 'Encryption'), 'amod'), (('key', 'Encryption'), 'amod'), (('Encryption', 'PUb'), 'appos'), (('with', 'Bob'), 'case'), (('Private', 'Bob'), 'amod'), (('Key', 'Bob'), 'amod'), (('Bob', 'Encryption'), 'nmod'), (('Alice', 'Bob'), 'flat')]

 Named Entities are: 
>> [('4', 'CARDINAL'), ('Bob   Ted', 'PERSON'), ('Joy Bob', 'PERSON'), ('PUb Bob', 'PERSON'), ('Bob Alice', 'PERSON')]

========================== Sentence 6 ===========================

 The entire encrypted message serves as a digital signature. 

Tokens are: 
>> ['The', 'entire', 'encrypted', 'message', 'serves', 'as', 'a', 'digital', 'signature', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('entire', 'ADJ'), ('encrypted', 'VERB'), ('message', 'NOUN'), ('serves', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('entire', 'JJ'), ('encrypted', 'VBN'), ('message', 'NN'), ('serves', 'VBZ'), ('as', 'IN'), ('a', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('entire', 'entire'), ('encrypted', 'encrypt'), ('message', 'message'), ('serves', 'serve'), ('as', 'as'), ('a', 'a'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'message'), 'det'), (('entire', 'message'), 'amod'), (('encrypted', 'message'), 'amod'), (('message', 'serves'), 'nsubj'), (('serves', 'root'), 'root'), (('as', 'signature'), 'case'), (('a', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'serves'), 'obl'), (('.', 'serves'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 Authentication and Confidentiality Message source Encryption Algorithm Encryption Algorithm Decryption Algorithm Decryption Algorithm Message Dest. X Y Y X Z Key pair source Key pair source   PRa PUa PRb PUb  Source A  Source B Z = E(PUb, E(PRa, X)) 

Tokens are: 
>> ['Authentication', 'and', 'Confidentiality', 'Message', 'source', 'Encryption', 'Algorithm', 'Encryption', 'Algorithm', 'Decryption', 'Algorithm', 'Decryption', 'Algorithm', 'Message', 'Dest.', 'X', 'Y', 'Y', 'X', 'Z', 'Key', 'pair', 'source', 'Key', 'pair', 'source', 'PRa', 'PUa', 'PRb', 'PUb', 'Source', 'A', 'Source', 'B', 'Z', '=', 'E', '(', 'PUb', ',', 'E(', 'PRa', ',', 'X', ')', ')'] 

 UPOS tags are: 
>> [('Authentication', 'NOUN'), ('and', 'CCONJ'), ('Confidentiality', 'NOUN'), ('Message', 'NOUN'), ('source', 'NOUN'), ('Encryption', 'NOUN'), ('Algorithm', 'NOUN'), ('Encryption', 'NOUN'), ('Algorithm', 'NOUN'), ('Decryption', 'NOUN'), ('Algorithm', 'NOUN'), ('Decryption', 'NOUN'), ('Algorithm', 'NOUN'), ('Message', 'NOUN'), ('Dest.', 'NOUN'), ('X', 'NOUN'), ('Y', 'NOUN'), ('Y', 'NOUN'), ('X', 'NOUN'), ('Z', 'NOUN'), ('Key', 'ADJ'), ('pair', 'NOUN'), ('source', 'NOUN'), ('Key', 'ADJ'), ('pair', 'NOUN'), ('source', 'NOUN'), ('PRa', 'NOUN'), ('PUa', 'NOUN'), ('PRb', 'NOUN'), ('PUb', 'NOUN'), ('Source', 'NOUN'), ('A', 'DET'), ('Source', 'NOUN'), ('B', 'NOUN'), ('Z', 'NOUN'), ('=', 'PUNCT'), ('E', 'PROPN'), ('(', 'PUNCT'), ('PUb', 'NOUN'), (',', 'PUNCT'), ('E(', 'PROPN'), ('PRa', 'PROPN'), (',', 'PUNCT'), ('X', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Authentication', 'NN'), ('and', 'CC'), ('Confidentiality', 'NN'), ('Message', 'NN'), ('source', 'NN'), ('Encryption', 'NN'), ('Algorithm', 'NN'), ('Encryption', 'NN'), ('Algorithm', 'NN'), ('Decryption', 'NN'), ('Algorithm', 'NN'), ('Decryption', 'NN'), ('Algorithm', 'NN'), ('Message', 'NN'), ('Dest.', 'NN'), ('X', 'NN'), ('Y', 'NN'), ('Y', 'NN'), ('X', 'NN'), ('Z', 'NN'), ('Key', 'JJ'), ('pair', 'NN'), ('source', 'NN'), ('Key', 'JJ'), ('pair', 'NN'), ('source', 'NN'), ('PRa', 'NN'), ('PUa', 'NN'), ('PRb', 'NN'), ('PUb', 'NN'), ('Source', 'NN'), ('A', 'DT'), ('Source', 'NN'), ('B', 'NN'), ('Z', 'NN'), ('=', ','), ('E', 'NNP'), ('(', '-LRB-'), ('PUb', 'NN'), (',', ','), ('E(', 'NNP'), ('PRa', 'NNP'), (',', ','), ('X', 'NN'), (')', '-RRB-'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Authentication', 'authentication'), ('and', 'and'), ('Confidentiality', 'confidentiality'), ('Message', 'message'), ('source', 'source'), ('Encryption', 'encryption'), ('Algorithm', 'algorithm'), ('Encryption', 'encryption'), ('Algorithm', 'algorithm'), ('Decryption', 'decryption'), ('Algorithm', 'algorithm'), ('Decryption', 'decryption'), ('Algorithm', 'algorithm'), ('Message', 'message'), ('Dest.', 'dest.'), ('X', 'x'), ('Y', 'Y'), ('Y', 'Y'), ('X', 'x'), ('Z', 'z'), ('Key', 'key'), ('pair', 'pair'), ('source', 'source'), ('Key', 'key'), ('pair', 'pair'), ('source', 'source'), ('PRa', 'pra'), ('PUa', 'pua'), ('PRb', 'prb'), ('PUb', 'pub'), ('Source', 'source'), ('A', 'a'), ('Source', 'source'), ('B', 'b'), ('Z', 'z'), ('=', '='), ('E', 'E'), ('(', '('), ('PUb', 'pub'), (',', ','), ('E(', 'E('), ('PRa', 'PRa'), (',', ','), ('X', 'x'), (')', ')'), (')', ')')] 

 Dependency tags are: 
>> [(('Authentication', 'root'), 'root'), (('and', 'Message'), 'cc'), (('Confidentiality', 'Message'), 'compound'), (('Message', 'Authentication'), 'conj'), (('source', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'Algorithm'), 'compound'), (('Encryption', 'Algorithm'), 'compound'), (('Algorithm', 'Authentication'), 'conj'), (('Decryption', 'Algorithm'), 'compound'), (('Algorithm', 'Algorithm'), 'compound'), (('Decryption', 'Message'), 'compound'), (('Algorithm', 'Message'), 'compound'), (('Message', 'Authentication'), 'list'), (('Dest.', 'Message'), 'compound'), (('X', 'Y'), 'compound'), (('Y', 'Y'), 'compound'), (('Y', 'Message'), 'appos'), (('X', 'Z'), 'compound'), (('Z', 'Y'), 'compound'), (('Key', 'source'), 'amod'), (('pair', 'source'), 'compound'), (('source', 'source'), 'compound'), (('Key', 'source'), 'amod'), (('pair', 'source'), 'compound'), (('source', 'Authentication'), 'conj'), (('PRa', 'source'), 'compound'), (('PUa', 'Source'), 'compound'), (('PRb', 'Source'), 'compound'), (('PUb', 'Source'), 'compound'), (('Source', 'source'), 'appos'), (('A', 'Z'), 'det'), (('Source', 'Z'), 'compound'), (('B', 'Z'), 'compound'), (('Z', 'Source'), 'appos'), (('=', 'Z'), 'punct'), (('E', 'Z'), 'appos'), (('(', 'PUb'), 'punct'), (('PUb', 'E'), 'appos'), ((',', 'PUb'), 'punct'), (('E(', 'PUb'), 'appos'), (('PRa', 'PUb'), 'appos'), ((',', 'X'), 'punct'), (('X', 'PRa'), 'appos'), ((')', 'PUb'), 'punct'), ((')', 'PUb'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 X = D(PUa, D(PRB, Z)) 

Tokens are: 
>> ['X', '=', 'D', '(', 'PUa', ',', 'D(', 'PRB', ',', 'Z', ')', ')'] 

 UPOS tags are: 
>> [('X', 'PROPN'), ('=', 'PUNCT'), ('D', 'PROPN'), ('(', 'PUNCT'), ('PUa', 'PROPN'), (',', 'PUNCT'), ('D(', 'PROPN'), ('PRB', 'PROPN'), (',', 'PUNCT'), ('Z', 'PROPN'), (')', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('X', 'NNP'), ('=', ','), ('D', 'NNP'), ('(', '-LRB-'), ('PUa', 'NNP'), (',', ','), ('D(', 'NNP'), ('PRB', 'NNP'), (',', ','), ('Z', 'NNP'), (')', '-RRB-'), (')', '-RRB-')] 

 Lemmas are: 
>> [('X', 'X'), ('=', '='), ('D', 'D'), ('(', '('), ('PUa', 'PUa'), (',', ','), ('D(', 'D('), ('PRB', 'PRB'), (',', ','), ('Z', 'Z'), (')', ')'), (')', ')')] 

 Dependency tags are: 
>> [(('X', 'root'), 'root'), (('=', 'X'), 'punct'), (('D', 'X'), 'appos'), (('(', 'PUa'), 'punct'), (('PUa', 'D'), 'parataxis'), ((',', 'PRB'), 'punct'), (('D(', 'PRB'), 'compound'), (('PRB', 'PUa'), 'conj'), ((',', 'Z'), 'punct'), (('Z', 'PUa'), 'conj'), ((')', 'PUa'), 'punct'), ((')', 'PUa'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›   6  Applications for Public-Key Cryptosystems Encryption/decryption: 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '6', 'Applications', 'for', 'Public-', 'Key', 'Cryptosystems', 'Encryption', '/', 'decryption', ':'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'ADJ'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('6', 'NUM'), ('Applications', 'NOUN'), ('for', 'ADP'), ('Public-', 'PROPN'), ('Key', 'ADJ'), ('Cryptosystems', 'PROPN'), ('Encryption', 'PROPN'), ('/', 'SYM'), ('decryption', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'JJ'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('6', 'CD'), ('Applications', 'NNS'), ('for', 'IN'), ('Public-', 'NNP'), ('Key', 'NNP'), ('Cryptosystems', 'NNPS'), ('Encryption', 'NNP'), ('/', ','), ('decryption', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('6', '6'), ('Applications', 'application'), ('for', 'for'), ('Public-', 'Public-'), ('Key', 'key'), ('Cryptosystems', 'Cryptosystem'), ('Encryption', 'Encryption'), ('/', '/'), ('decryption', 'decryption'), (':', ':')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-4', 'Unit'), 'nummod'), (('Asymmertic', 'Institute'), 'amod'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('6', 'Applications'), 'nummod'), (('Applications', 'Institute'), 'nmod'), (('for', 'Encryption'), 'case'), (('Public-', 'Encryption'), 'compound'), (('Key', 'Cryptosystems'), 'amod'), (('Cryptosystems', 'Encryption'), 'compound'), (('Encryption', 'Applications'), 'nmod'), (('/', 'decryption'), 'cc'), (('decryption', 'Encryption'), 'conj'), ((':', 'Unit'), 'punct')]

 Named Entities are: 
>> [('6', 'CARDINAL')]

========================== Sentence 10 ===========================

 The sender encrypts a message with the recipient’s public key. 

Tokens are: 
>> ['The', 'sender', 'encrypts', 'a', 'message', 'with', 'the', 'recipient', '’s', 'public', 'key', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('sender', 'NOUN'), ('encrypts', 'VERB'), ('a', 'DET'), ('message', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('recipient', 'NOUN'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('sender', 'NN'), ('encrypts', 'VBZ'), ('a', 'DT'), ('message', 'NN'), ('with', 'IN'), ('the', 'DT'), ('recipient', 'NN'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('sender', 'sender'), ('encrypts', 'encrypt'), ('a', 'a'), ('message', 'message'), ('with', 'with'), ('the', 'the'), ('recipient', 'recipient'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'sender'), 'det'), (('sender', 'encrypts'), 'nsubj'), (('encrypts', 'root'), 'root'), (('a', 'message'), 'det'), (('message', 'encrypts'), 'obj'), (('with', 'key'), 'case'), (('the', 'recipient'), 'det'), (('recipient', 'key'), 'nmod:poss'), (('’s', 'recipient'), 'case'), (('public', 'key'), 'amod'), (('key', 'message'), 'nmod'), (('.', 'encrypts'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 Digital signature: The sender “signs” a message with its private key. 

Tokens are: 
>> ['Digital', 'signature', ':', 'The', 'sender', '“', 'signs', '”', 'a', 'message', 'with', 'its', 'private', 'key', '.'] 

 UPOS tags are: 
>> [('Digital', 'ADJ'), ('signature', 'NOUN'), (':', 'PUNCT'), ('The', 'DET'), ('sender', 'NOUN'), ('“', 'PUNCT'), ('signs', 'NOUN'), ('”', 'PUNCT'), ('a', 'DET'), ('message', 'NOUN'), ('with', 'ADP'), ('its', 'PRON'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Digital', 'JJ'), ('signature', 'NN'), (':', ':'), ('The', 'DT'), ('sender', 'NN'), ('“', '``'), ('signs', 'NNS'), ('”', "''"), ('a', 'DT'), ('message', 'NN'), ('with', 'IN'), ('its', 'PRP$'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Digital', 'digital'), ('signature', 'signature'), (':', ':'), ('The', 'the'), ('sender', 'sender'), ('“', "''"), ('signs', 'sign'), ('”', "''"), ('a', 'a'), ('message', 'message'), ('with', 'with'), ('its', 'its'), ('private', 'private'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Digital', 'signature'), 'amod'), (('signature', 'root'), 'root'), ((':', 'signature'), 'punct'), (('The', 'sender'), 'det'), (('sender', 'signature'), 'appos'), (('“', 'signs'), 'punct'), (('signs', 'sender'), 'appos'), (('”', 'signs'), 'punct'), (('a', 'message'), 'det'), (('message', 'signs'), 'appos'), (('with', 'key'), 'case'), (('its', 'key'), 'nmod:poss'), (('private', 'key'), 'amod'), (('key', 'message'), 'nmod'), (('.', 'signature'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 Signing is achieved by a cryptographic algorithm applied to the message or to a small block of data that is a function of the message. 

Tokens are: 
>> ['Signing', 'is', 'achieved', 'by', 'a', 'cryptographic', 'algorithm', 'applied', 'to', 'the', 'message', 'or', 'to', 'a', 'small', 'block', 'of', 'data', 'that', 'is', 'a', 'function', 'of', 'the', 'message', '.'] 

 UPOS tags are: 
>> [('Signing', 'NOUN'), ('is', 'AUX'), ('achieved', 'VERB'), ('by', 'ADP'), ('a', 'DET'), ('cryptographic', 'ADJ'), ('algorithm', 'NOUN'), ('applied', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('or', 'CCONJ'), ('to', 'ADP'), ('a', 'DET'), ('small', 'ADJ'), ('block', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('function', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Signing', 'NN'), ('is', 'VBZ'), ('achieved', 'VBN'), ('by', 'IN'), ('a', 'DT'), ('cryptographic', 'JJ'), ('algorithm', 'NN'), ('applied', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('message', 'NN'), ('or', 'CC'), ('to', 'IN'), ('a', 'DT'), ('small', 'JJ'), ('block', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('that', 'WDT'), ('is', 'VBZ'), ('a', 'DT'), ('function', 'NN'), ('of', 'IN'), ('the', 'DT'), ('message', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Signing', 'signing'), ('is', 'be'), ('achieved', 'achieve'), ('by', 'by'), ('a', 'a'), ('cryptographic', 'cryptographic'), ('algorithm', 'algorithm'), ('applied', 'apply'), ('to', 'to'), ('the', 'the'), ('message', 'message'), ('or', 'or'), ('to', 'to'), ('a', 'a'), ('small', 'small'), ('block', 'block'), ('of', 'of'), ('data', 'datum'), ('that', 'that'), ('is', 'be'), ('a', 'a'), ('function', 'function'), ('of', 'of'), ('the', 'the'), ('message', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('Signing', 'achieved'), 'nsubj:pass'), (('is', 'achieved'), 'aux:pass'), (('achieved', 'root'), 'root'), (('by', 'algorithm'), 'case'), (('a', 'algorithm'), 'det'), (('cryptographic', 'algorithm'), 'amod'), (('algorithm', 'achieved'), 'obl'), (('applied', 'algorithm'), 'acl'), (('to', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'applied'), 'obl'), (('or', 'block'), 'cc'), (('to', 'block'), 'case'), (('a', 'block'), 'det'), (('small', 'block'), 'amod'), (('block', 'message'), 'conj'), (('of', 'data'), 'case'), (('data', 'block'), 'nmod'), (('that', 'function'), 'nsubj'), (('is', 'function'), 'cop'), (('a', 'function'), 'det'), (('function', 'block'), 'acl:relcl'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'function'), 'nmod'), (('.', 'achieved'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 Key exchange: Two sides cooperate to exchange a session key. 

Tokens are: 
>> ['Key', 'exchange', ':', 'Two', 'sides', 'cooperate', 'to', 'exchange', 'a', 'session', 'key', '.'] 

 UPOS tags are: 
>> [('Key', 'ADJ'), ('exchange', 'NOUN'), (':', 'PUNCT'), ('Two', 'NUM'), ('sides', 'NOUN'), ('cooperate', 'VERB'), ('to', 'PART'), ('exchange', 'VERB'), ('a', 'DET'), ('session', 'NOUN'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Key', 'JJ'), ('exchange', 'NN'), (':', ':'), ('Two', 'CD'), ('sides', 'NNS'), ('cooperate', 'VBP'), ('to', 'TO'), ('exchange', 'VB'), ('a', 'DT'), ('session', 'NN'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Key', 'key'), ('exchange', 'exchange'), (':', ':'), ('Two', 'two'), ('sides', 'side'), ('cooperate', 'cooperate'), ('to', 'to'), ('exchange', 'exchange'), ('a', 'a'), ('session', 'session'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Key', 'exchange'), 'amod'), (('exchange', 'root'), 'root'), ((':', 'exchange'), 'punct'), (('Two', 'sides'), 'nummod'), (('sides', 'cooperate'), 'nsubj'), (('cooperate', 'exchange'), 'parataxis'), (('to', 'exchange'), 'mark'), (('exchange', 'cooperate'), 'xcomp'), (('a', 'key'), 'det'), (('session', 'key'), 'compound'), (('key', 'exchange'), 'obj'), (('.', 'exchange'), 'punct')]

 Named Entities are: 
>> [('Two', 'CARDINAL')]

========================== Sentence 14 ===========================

 Several different approaches are possible, involving the private key(s) of one or both parties. 

Tokens are: 
>> ['Several', 'different', 'approaches', 'are', 'possible', ',', 'involving', 'the', 'private', 'key', '(', 's', ')', 'of', 'one', 'or', 'both', 'parties', '.'] 

 UPOS tags are: 
>> [('Several', 'ADJ'), ('different', 'ADJ'), ('approaches', 'NOUN'), ('are', 'AUX'), ('possible', 'ADJ'), (',', 'PUNCT'), ('involving', 'VERB'), ('the', 'DET'), ('private', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('s', 'ADJ'), (')', 'PUNCT'), ('of', 'ADP'), ('one', 'NUM'), ('or', 'CCONJ'), ('both', 'DET'), ('parties', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Several', 'JJ'), ('different', 'JJ'), ('approaches', 'NNS'), ('are', 'VBP'), ('possible', 'JJ'), (',', ','), ('involving', 'VBG'), ('the', 'DT'), ('private', 'JJ'), ('key', 'NN'), ('(', '-LRB-'), ('s', 'AFX'), (')', '-RRB-'), ('of', 'IN'), ('one', 'CD'), ('or', 'CC'), ('both', 'DT'), ('parties', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Several', 'several'), ('different', 'different'), ('approaches', 'approach'), ('are', 'be'), ('possible', 'possible'), (',', ','), ('involving', 'involve'), ('the', 'the'), ('private', 'private'), ('key', 'key'), ('(', '('), ('s', 's'), (')', ')'), ('of', 'of'), ('one', 'one'), ('or', 'or'), ('both', 'both'), ('parties', 'party'), ('.', '.')] 

 Dependency tags are: 
>> [(('Several', 'approaches'), 'amod'), (('different', 'approaches'), 'amod'), (('approaches', 'possible'), 'nsubj'), (('are', 'possible'), 'cop'), (('possible', 'root'), 'root'), ((',', 'involving'), 'punct'), (('involving', 'possible'), 'advcl'), (('the', 'key'), 'det'), (('private', 'key'), 'amod'), (('key', 'involving'), 'obj'), (('(', 'key'), 'punct'), (('s', 'key'), 'amod'), ((')', 'key'), 'punct'), (('of', 'one'), 'case'), (('one', 'key'), 'nmod'), (('or', 'parties'), 'cc'), (('both', 'parties'), 'det'), (('parties', 'one'), 'conj'), (('.', 'possible'), 'punct')]

 Named Entities are: 
>> [('one', 'CARDINAL')]

========================== Sentence 15 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Algorithm RSA is a block cipher in which the Plaintext and Ciphertext are represented as integers between 0 and n-1 for some n. 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'RSA', 'Algorithm', 'RSA', 'is', 'a', 'block', 'cipher', 'in', 'which', 'the', 'Plaintext', 'and', 'Ciphertext', 'are', 'represented', 'as', 'integers', 'between', '0', 'and', 'n-1', 'for', 'some', 'n.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('RSA', 'PROPN'), ('Algorithm', 'PROPN'), ('RSA', 'PROPN'), ('is', 'AUX'), ('a', 'DET'), ('block', 'NOUN'), ('cipher', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('the', 'DET'), ('Plaintext', 'PROPN'), ('and', 'CCONJ'), ('Ciphertext', 'PROPN'), ('are', 'AUX'), ('represented', 'VERB'), ('as', 'ADP'), ('integers', 'NOUN'), ('between', 'ADP'), ('0', 'NUM'), ('and', 'CCONJ'), ('n-1', 'NOUN'), ('for', 'ADP'), ('some', 'DET'), ('n.', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('RSA', 'NNP'), ('Algorithm', 'NNP'), ('RSA', 'NNP'), ('is', 'VBZ'), ('a', 'DT'), ('block', 'NN'), ('cipher', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('the', 'DT'), ('Plaintext', 'NNP'), ('and', 'CC'), ('Ciphertext', 'NNP'), ('are', 'VBP'), ('represented', 'VBN'), ('as', 'IN'), ('integers', 'NNS'), ('between', 'IN'), ('0', 'CD'), ('and', 'CC'), ('n-1', 'NNS'), ('for', 'IN'), ('some', 'DT'), ('n.', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('RSA', 'RSA'), ('Algorithm', 'Algorithm'), ('RSA', 'RSA'), ('is', 'be'), ('a', 'a'), ('block', 'block'), ('cipher', 'cipher'), ('in', 'in'), ('which', 'which'), ('the', 'the'), ('Plaintext', 'Plaintext'), ('and', 'and'), ('Ciphertext', 'Ciphertext'), ('are', 'be'), ('represented', 'represent'), ('as', 'as'), ('integers', 'integer'), ('between', 'between'), ('0', '0'), ('and', 'and'), ('n-1', 'n-1'), ('for', 'for'), ('some', 'some'), ('n.', 'n.')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-4', 'Unit'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'cipher'), 'nsubj'), (('of', 'RSA'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Algorithm'), 'compound'), (('RSA', 'RSA'), 'compound'), (('Algorithm', 'RSA'), 'compound'), (('RSA', 'Institute'), 'nmod'), (('is', 'cipher'), 'cop'), (('a', 'cipher'), 'det'), (('block', 'cipher'), 'compound'), (('cipher', 'root'), 'root'), (('in', 'which'), 'case'), (('which', 'represented'), 'obl'), (('the', 'Plaintext'), 'det'), (('Plaintext', 'represented'), 'nsubj:pass'), (('and', 'Ciphertext'), 'cc'), (('Ciphertext', 'Plaintext'), 'conj'), (('are', 'represented'), 'aux:pass'), (('represented', 'cipher'), 'acl:relcl'), (('as', 'integers'), 'case'), (('integers', 'represented'), 'obl'), (('between', '0'), 'case'), (('0', 'integers'), 'nmod'), (('and', 'n-1'), 'cc'), (('n-1', '0'), 'conj'), (('for', 'n.'), 'case'), (('some', 'n.'), 'det'), (('n.', 'represented'), 'obl')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('RSA Algorithm RSA', 'ORG'), ('Plaintext', 'FAC'), ('Ciphertext', 'LOC')]

========================== Sentence 16 ===========================

 Large messages can be broken up into a number of blocks. 

Tokens are: 
>> ['Large', 'messages', 'can', 'be', 'broken', 'up', 'into', 'a', 'number', 'of', 'blocks', '.'] 

 UPOS tags are: 
>> [('Large', 'ADJ'), ('messages', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('broken', 'VERB'), ('up', 'ADP'), ('into', 'ADP'), ('a', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('blocks', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Large', 'JJ'), ('messages', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('broken', 'VBN'), ('up', 'RP'), ('into', 'IN'), ('a', 'DT'), ('number', 'NN'), ('of', 'IN'), ('blocks', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Large', 'large'), ('messages', 'message'), ('can', 'can'), ('be', 'be'), ('broken', 'break'), ('up', 'up'), ('into', 'into'), ('a', 'a'), ('number', 'number'), ('of', 'of'), ('blocks', 'block'), ('.', '.')] 

 Dependency tags are: 
>> [(('Large', 'messages'), 'amod'), (('messages', 'broken'), 'nsubj:pass'), (('can', 'broken'), 'aux'), (('be', 'broken'), 'aux:pass'), (('broken', 'root'), 'root'), (('up', 'broken'), 'compound:prt'), (('into', 'number'), 'case'), (('a', 'number'), 'det'), (('number', 'broken'), 'obl'), (('of', 'blocks'), 'case'), (('blocks', 'number'), 'nmod'), (('.', 'broken'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 Each block would then be represented by an integer. 

Tokens are: 
>> ['Each', 'block', 'would', 'then', 'be', 'represented', 'by', 'an', 'integer', '.'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('block', 'NOUN'), ('would', 'AUX'), ('then', 'ADV'), ('be', 'AUX'), ('represented', 'VERB'), ('by', 'ADP'), ('an', 'DET'), ('integer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('block', 'NN'), ('would', 'MD'), ('then', 'RB'), ('be', 'VB'), ('represented', 'VBN'), ('by', 'IN'), ('an', 'DT'), ('integer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('block', 'block'), ('would', 'would'), ('then', 'then'), ('be', 'be'), ('represented', 'represent'), ('by', 'by'), ('an', 'a'), ('integer', 'integer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Each', 'block'), 'det'), (('block', 'represented'), 'nsubj:pass'), (('would', 'represented'), 'aux'), (('then', 'represented'), 'advmod'), (('be', 'represented'), 'aux:pass'), (('represented', 'root'), 'root'), (('by', 'integer'), 'case'), (('an', 'integer'), 'det'), (('integer', 'represented'), 'obl'), (('.', 'represented'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 Step-1: Generate Public key and Private key Step-2: Encrypt message using Public key Step-3: Decrypt message using Private key     Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-1: Generate Public key and Private key Select two large prime numbers:  p and q Calculate modulus : n = p * q Calculate Euler’s totient function : φ(n) = (p-1) * (q-1) 

Tokens are: 
>> ['Step', '-', '1', ':', 'Generate', 'Public', 'key', 'and', 'Private', 'key', 'Step', '-', '2', ':', 'Encrypt', 'message', 'using', 'Public', 'key', 'Step', '-3', ':', 'Decrypt', 'message', 'using', 'Private', 'key', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Step', '-', '1', ':', 'Generate', 'Public', 'key', 'and', 'Private', 'key', 'Select', 'two', 'large', 'prime', 'numbers', ':', 'p', 'and', 'q', 'Calculate', 'modulus', ':', 'n', '=', 'p', '*', 'q', 'Calculate', 'Euler', '’s', 'totient', 'function', ':', 'φ(', 'n', ')', '=', '(', 'p-', '1', ')', '*', '(', 'q-', '1', ')'] 

 UPOS tags are: 
>> [('Step', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), (':', 'PUNCT'), ('Generate', 'VERB'), ('Public', 'ADJ'), ('key', 'ADJ'), ('and', 'CCONJ'), ('Private', 'ADJ'), ('key', 'ADJ'), ('Step', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), (':', 'PUNCT'), ('Encrypt', 'VERB'), ('message', 'NOUN'), ('using', 'VERB'), ('Public', 'ADJ'), ('key', 'ADJ'), ('Step', 'NOUN'), ('-3', 'NUM'), (':', 'PUNCT'), ('Decrypt', 'VERB'), ('message', 'NOUN'), ('using', 'VERB'), ('Private', 'ADJ'), ('key', 'ADJ'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Step', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), (':', 'PUNCT'), ('Generate', 'VERB'), ('Public', 'ADJ'), ('key', 'ADJ'), ('and', 'CCONJ'), ('Private', 'ADJ'), ('key', 'ADJ'), ('Select', 'ADJ'), ('two', 'NUM'), ('large', 'ADJ'), ('prime', 'ADJ'), ('numbers', 'NOUN'), (':', 'PUNCT'), ('p', 'NOUN'), ('and', 'CCONJ'), ('q', 'NOUN'), ('Calculate', 'NOUN'), ('modulus', 'NOUN'), (':', 'PUNCT'), ('n', 'NOUN'), ('=', 'SYM'), ('p', 'NOUN'), ('*', 'PUNCT'), ('q', 'NOUN'), ('Calculate', 'VERB'), ('Euler', 'PROPN'), ('’s', 'PART'), ('totient', 'NOUN'), ('function', 'NOUN'), (':', 'PUNCT'), ('φ(', 'SYM'), ('n', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('p-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('*', 'PUNCT'), ('(', 'PUNCT'), ('q-', 'PROPN'), ('1', 'NUM'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Step', 'NN'), ('-', ','), ('1', 'CD'), (':', ':'), ('Generate', 'VB'), ('Public', 'JJ'), ('key', 'JJ'), ('and', 'CC'), ('Private', 'JJ'), ('key', 'JJ'), ('Step', 'NN'), ('-', 'HYPH'), ('2', 'CD'), (':', ':'), ('Encrypt', 'VB'), ('message', 'NN'), ('using', 'VBG'), ('Public', 'JJ'), ('key', 'JJ'), ('Step', 'NN'), ('-3', 'CD'), (':', ':'), ('Decrypt', 'VB'), ('message', 'NN'), ('using', 'VBG'), ('Private', 'JJ'), ('key', 'JJ'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Step', 'NN'), ('-', ','), ('1', 'CD'), (':', ':'), ('Generate', 'VB'), ('Public', 'JJ'), ('key', 'JJ'), ('and', 'CC'), ('Private', 'JJ'), ('key', 'JJ'), ('Select', 'JJ'), ('two', 'CD'), ('large', 'JJ'), ('prime', 'JJ'), ('numbers', 'NNS'), (':', ':'), ('p', 'NN'), ('and', 'CC'), ('q', 'NN'), ('Calculate', 'NN'), ('modulus', 'NN'), (':', ':'), ('n', 'NN'), ('=', 'SYM'), ('p', 'NN'), ('*', 'NFP'), ('q', 'NN'), ('Calculate', 'VB'), ('Euler', 'NNP'), ('’s', 'POS'), ('totient', 'NN'), ('function', 'NN'), (':', ':'), ('φ(', 'SYM'), ('n', 'NN'), (')', '-RRB-'), ('=', ','), ('(', '-LRB-'), ('p-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('*', 'NFP'), ('(', '-LRB-'), ('q-', 'NNP'), ('1', 'CD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Step', 'step'), ('-', '-'), ('1', '1'), (':', ':'), ('Generate', 'generate'), ('Public', 'Public'), ('key', 'key'), ('and', 'and'), ('Private', 'private'), ('key', 'key'), ('Step', 'step'), ('-', '-'), ('2', '2'), (':', ':'), ('Encrypt', 'encrypt'), ('message', 'message'), ('using', 'use'), ('Public', 'Public'), ('key', 'key'), ('Step', 'step'), ('-3', '-3'), (':', ':'), ('Decrypt', 'decrypt'), ('message', 'message'), ('using', 'use'), ('Private', 'private'), ('key', 'key'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Step', 'step'), ('-', '-'), ('1', '1'), (':', ':'), ('Generate', 'generate'), ('Public', 'Public'), ('key', 'key'), ('and', 'and'), ('Private', 'private'), ('key', 'key'), ('Select', 'select'), ('two', 'two'), ('large', 'large'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('and', 'and'), ('q', 'q'), ('Calculate', 'calculate'), ('modulus', 'modulus'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('Calculate', 'calculate'), ('Euler', 'Euler'), ('’s', "'s"), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-', 'p-'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')')] 

 Dependency tags are: 
>> [(('Step', 'root'), 'root'), (('-', 'Step'), 'punct'), (('1', 'Step'), 'nummod'), ((':', 'Step'), 'punct'), (('Generate', 'Step'), 'appos'), (('Public', 'Step'), 'amod'), (('key', 'Step'), 'amod'), (('and', 'Private'), 'cc'), (('Private', 'key'), 'conj'), (('key', 'Step'), 'amod'), (('Step', 'Generate'), 'obj'), (('-', 'Step'), 'punct'), (('2', 'Step'), 'nummod'), ((':', 'Generate'), 'punct'), (('Encrypt', 'Generate'), 'parataxis'), (('message', 'Encrypt'), 'obj'), (('using', 'message'), 'acl'), (('Public', 'Step'), 'amod'), (('key', 'Step'), 'amod'), (('Step', 'using'), 'obj'), (('-3', 'Step'), 'nummod'), ((':', 'Decrypt'), 'punct'), (('Decrypt', 'Generate'), 'parataxis'), (('message', 'Decrypt'), 'obj'), (('using', 'message'), 'acl'), (('Private', 'Unit'), 'amod'), (('key', 'Unit'), 'amod'), (('Unit', 'using'), 'obj'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Step'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Step'), 'compound'), (('Step', 'Institute'), 'nmod'), (('-', 'Step'), 'punct'), (('1', 'Step'), 'nummod'), ((':', 'Generate'), 'punct'), (('Generate', 'Step'), 'parataxis'), (('Public', 'numbers'), 'amod'), (('key', 'numbers'), 'amod'), (('and', 'Private'), 'cc'), (('Private', 'key'), 'conj'), (('key', 'numbers'), 'amod'), (('Select', 'numbers'), 'amod'), (('two', 'numbers'), 'nummod'), (('large', 'numbers'), 'amod'), (('prime', 'numbers'), 'amod'), (('numbers', 'Generate'), 'obj'), ((':', 'numbers'), 'punct'), (('p', 'modulus'), 'appos'), (('and', 'q'), 'cc'), (('q', 'p'), 'conj'), (('Calculate', 'modulus'), 'compound'), (('modulus', 'numbers'), 'appos'), ((':', 'modulus'), 'punct'), (('n', '='), 'nsubj'), (('=', 'modulus'), 'parataxis'), (('p', '='), 'obj'), (('*', 'Calculate'), 'punct'), (('q', 'Calculate'), 'obj'), (('Calculate', '='), 'parataxis'), (('Euler', 'function'), 'nmod:poss'), (('’s', 'Euler'), 'case'), (('totient', 'function'), 'compound'), (('function', 'Calculate'), 'obj'), ((':', 'function'), 'punct'), (('φ(', 'n'), 'nummod'), (('n', 'function'), 'appos'), ((')', 'n'), 'punct'), (('=', 'p-'), 'punct'), (('(', 'p-'), 'punct'), (('p-', 'Calculate'), 'dep'), (('1', 'p-'), 'dep'), ((')', 'p-'), 'punct'), (('*', 'q-'), 'punct'), (('(', 'q-'), 'punct'), (('q-', 'p-'), 'conj'), (('1', 'q-'), 'dep'), ((')', 'q-'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('2', 'CARDINAL'), ('Private key     Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('1', 'CARDINAL'), ('two', 'CARDINAL')]

========================== Sentence 19 ===========================

 Select e such that e is relatively prime to φ(n) and 1 < e < φ(n) 

Tokens are: 
>> ['Select', 'e', 'such', 'that', 'e', 'is', 'relatively', 'prime', 'to', 'φ(', 'n', ')', 'and', '1', '<', 'e', '<', 'φ', '(', 'n', ')'] 

 UPOS tags are: 
>> [('Select', 'VERB'), ('e', 'NOUN'), ('such', 'ADJ'), ('that', 'SCONJ'), ('e', 'NOUN'), ('is', 'AUX'), ('relatively', 'ADV'), ('prime', 'ADJ'), ('to', 'ADP'), ('φ(', 'PROPN'), ('n', 'NOUN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('1', 'NUM'), ('<', 'PUNCT'), ('e', 'NOUN'), ('<', 'PUNCT'), ('φ', 'NOUN'), ('(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Select', 'VB'), ('e', 'NN'), ('such', 'JJ'), ('that', 'IN'), ('e', 'NN'), ('is', 'VBZ'), ('relatively', 'RB'), ('prime', 'JJ'), ('to', 'IN'), ('φ(', 'NNP'), ('n', 'NN'), (')', '-RRB-'), ('and', 'CC'), ('1', 'CD'), ('<', '-LRB-'), ('e', 'NN'), ('<', '-LRB-'), ('φ', 'NN'), ('(', '-LRB-'), ('n', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Select', 'select'), ('e', 'e'), ('such', 'such'), ('that', 'that'), ('e', 'e'), ('is', 'be'), ('relatively', 'relatively'), ('prime', 'prime'), ('to', 'to'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('and', 'and'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')')] 

 Dependency tags are: 
>> [(('Select', 'root'), 'root'), (('e', 'Select'), 'obj'), (('such', 'prime'), 'mark'), (('that', 'such'), 'fixed'), (('e', 'prime'), 'nsubj'), (('is', 'prime'), 'cop'), (('relatively', 'prime'), 'advmod'), (('prime', 'Select'), 'ccomp'), (('to', 'n'), 'case'), (('φ(', 'n'), 'compound'), (('n', 'prime'), 'obl'), ((')', 'prime'), 'punct'), (('and', 'e'), 'cc'), (('1', 'e'), 'nummod'), (('<', 'e'), 'punct'), (('e', 'prime'), 'conj'), (('<', 'φ'), 'punct'), (('φ', 'e'), 'appos'), (('(', 'n'), 'punct'), (('n', 'φ'), 'appos'), ((')', 'φ'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 Determine d such that d * e ≡ 1 (mod φ(n)) 

Tokens are: 
>> ['Determine', 'd', 'such', 'that', 'd', '*', 'e', '≡', '1', '(', 'mod', 'φ(', 'n', ')', ')'] 

 UPOS tags are: 
>> [('Determine', 'VERB'), ('d', 'NOUN'), ('such', 'ADJ'), ('that', 'SCONJ'), ('d', 'NOUN'), ('*', 'PUNCT'), ('e', 'NOUN'), ('≡', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('mod', 'NOUN'), ('φ(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Determine', 'VB'), ('d', 'NN'), ('such', 'JJ'), ('that', 'IN'), ('d', 'NN'), ('*', 'NFP'), ('e', 'NN'), ('≡', 'NN'), ('1', 'CD'), ('(', '-LRB-'), ('mod', 'NN'), ('φ(', ','), ('n', 'NN'), (')', '-RRB-'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Determine', 'determine'), ('d', 'd'), ('such', 'such'), ('that', 'that'), ('d', 'd'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), (')', ')')] 

 Dependency tags are: 
>> [(('Determine', 'root'), 'root'), (('d', 'Determine'), 'obj'), (('such', 'e'), 'case'), (('that', 'such'), 'fixed'), (('d', 'e'), 'compound'), (('*', 'e'), 'punct'), (('e', 'd'), 'appos'), (('≡', 'e'), 'compound'), (('1', '≡'), 'nummod'), (('(', 'mod'), 'punct'), (('mod', '≡'), 'appos'), (('φ(', 'n'), 'punct'), (('n', 'mod'), 'appos'), ((')', 'mod'), 'punct'), ((')', 'mod'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 Publickey : PU = { e, n } Privatekey : PR = { d, n }  Two numbers are relatively prime if they have no common factors other than 1. 

Tokens are: 
>> ['Publickey', ':', 'PU', '=', '{', 'e', ',', 'n', '}', 'Privatekey', ':', 'PR', '=', '{', 'd', ',', 'n', '}', 'Two', 'numbers', 'are', 'relatively', 'prime', 'if', 'they', 'have', 'no', 'common', 'factors', 'other', 'than', '1', '.'] 

 UPOS tags are: 
>> [('Publickey', 'PROPN'), (':', 'PUNCT'), ('PU', 'PROPN'), ('=', 'SYM'), ('{', 'PUNCT'), ('e', 'PROPN'), (',', 'PUNCT'), ('n', 'PROPN'), ('}', 'PUNCT'), ('Privatekey', 'PROPN'), (':', 'PUNCT'), ('PR', 'PROPN'), ('=', 'SYM'), ('{', 'PUNCT'), ('d', 'NOUN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'PUNCT'), ('Two', 'NUM'), ('numbers', 'NOUN'), ('are', 'AUX'), ('relatively', 'ADV'), ('prime', 'ADJ'), ('if', 'SCONJ'), ('they', 'PRON'), ('have', 'VERB'), ('no', 'DET'), ('common', 'ADJ'), ('factors', 'NOUN'), ('other', 'ADJ'), ('than', 'ADP'), ('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Publickey', 'NNP'), (':', ':'), ('PU', 'NNP'), ('=', 'SYM'), ('{', ','), ('e', 'NNP'), (',', ','), ('n', 'NNP'), ('}', ','), ('Privatekey', 'NNP'), (':', ':'), ('PR', 'NNP'), ('=', 'SYM'), ('{', ':'), ('d', 'NN'), (',', ','), ('n', 'NN'), ('}', ','), ('Two', 'CD'), ('numbers', 'NNS'), ('are', 'VBP'), ('relatively', 'RB'), ('prime', 'JJ'), ('if', 'IN'), ('they', 'PRP'), ('have', 'VBP'), ('no', 'DT'), ('common', 'JJ'), ('factors', 'NNS'), ('other', 'JJ'), ('than', 'IN'), ('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Publickey', 'Publickey'), (':', ':'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('Privatekey', 'Privatekey'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('d', 'd'), (',', ','), ('n', 'n'), ('}', '}'), ('Two', 'two'), ('numbers', 'number'), ('are', 'be'), ('relatively', 'relatively'), ('prime', 'prime'), ('if', 'if'), ('they', 'they'), ('have', 'have'), ('no', 'no'), ('common', 'common'), ('factors', 'factor'), ('other', 'other'), ('than', 'than'), ('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('Publickey', 'root'), 'root'), ((':', 'Publickey'), 'punct'), (('PU', '='), 'nsubj'), (('=', 'Publickey'), 'appos'), (('{', '='), 'punct'), (('e', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'e'), 'list'), (('}', 'n'), 'punct'), (('Privatekey', 'e'), 'list'), ((':', '='), 'punct'), (('PR', '='), 'nsubj'), (('=', '='), 'parataxis'), (('{', 'd'), 'punct'), (('d', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'd'), 'appos'), (('}', 'prime'), 'punct'), (('Two', 'numbers'), 'nummod'), (('numbers', 'prime'), 'nsubj'), (('are', 'prime'), 'cop'), (('relatively', 'prime'), 'advmod'), (('prime', 'Publickey'), 'parataxis'), (('if', 'have'), 'mark'), (('they', 'have'), 'nsubj'), (('have', 'prime'), 'advcl'), (('no', 'factors'), 'det'), (('common', 'factors'), 'amod'), (('factors', 'have'), 'obj'), (('other', 'factors'), 'amod'), (('than', '1'), 'case'), (('1', 'other'), 'obl'), (('.', 'Publickey'), 'punct')]

 Named Entities are: 
>> [('Two', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 22 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-1: Generate Public key and Private key Select two large prime numbers:  p = 3 and q = 11 Calculate modulus : n = p * q, n = 33 Calculate Euler’s totient function : φ(n) = (p-1) * (q-1) 	φ(n) = ( 3 – 1 )  * ( 11 – 1 ) = 20 Select e such that e is relatively prime to φ(n) and 1 < e < φ(n) 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Step', '-', '1', ':', 'Generate', 'Public', 'key', 'and', 'Private', 'key', 'Select', 'two', 'large', 'prime', 'numbers', ':', 'p', '=', '3', 'and', 'q', '=', '11', 'Calculate', 'modulus', ':', 'n', '=', 'p', '*', 'q', ',', 'n', '=', '33', 'Calculate', 'Euler', '’s', 'totient', 'function', ':', 'φ(', 'n', ')', '=', '(', 'p-', '1', ')', '*', '(', 'q-', '1', ')', 'φ(', 'n', ')', '=', '(', '3', '–', '1', ')', '*', '(', '11', '–', '1', ')', '=', '20', 'Select', 'e', 'such', 'that', 'e', 'is', 'relatively', 'prime', 'to', 'φ(', 'n', ')', 'and', '1', '<', 'e', '<', 'φ', '(', 'n', ')'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('Step', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), (':', 'PUNCT'), ('Generate', 'VERB'), ('Public', 'ADJ'), ('key', 'ADJ'), ('and', 'CCONJ'), ('Private', 'ADJ'), ('key', 'ADJ'), ('Select', 'ADJ'), ('two', 'NUM'), ('large', 'ADJ'), ('prime', 'ADJ'), ('numbers', 'NOUN'), (':', 'PUNCT'), ('p', 'NOUN'), ('=', 'SYM'), ('3', 'NUM'), ('and', 'CCONJ'), ('q', 'NOUN'), ('=', 'SYM'), ('11', 'NUM'), ('Calculate', 'NOUN'), ('modulus', 'NOUN'), (':', 'PUNCT'), ('n', 'NOUN'), ('=', 'SYM'), ('p', 'NOUN'), ('*', 'PUNCT'), ('q', 'NOUN'), (',', 'PUNCT'), ('n', 'NOUN'), ('=', 'SYM'), ('33', 'NUM'), ('Calculate', 'NOUN'), ('Euler', 'PROPN'), ('’s', 'PART'), ('totient', 'NOUN'), ('function', 'NOUN'), (':', 'PUNCT'), ('φ(', 'SYM'), ('n', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('(', 'PUNCT'), ('p-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('*', 'PUNCT'), ('(', 'PUNCT'), ('q-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('φ(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('(', 'PUNCT'), ('3', 'NUM'), ('–', 'SYM'), ('1', 'NUM'), (')', 'PUNCT'), ('*', 'PUNCT'), ('(', 'PUNCT'), ('11', 'NUM'), ('–', 'SYM'), ('1', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('20', 'NUM'), ('Select', 'ADJ'), ('e', 'NOUN'), ('such', 'ADJ'), ('that', 'SCONJ'), ('e', 'NOUN'), ('is', 'AUX'), ('relatively', 'ADV'), ('prime', 'ADJ'), ('to', 'ADP'), ('φ(', 'NOUN'), ('n', 'NOUN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('1', 'NUM'), ('<', 'PUNCT'), ('e', 'NOUN'), ('<', 'PUNCT'), ('φ', 'NOUN'), ('(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('Step', 'NN'), ('-', ','), ('1', 'CD'), (':', ':'), ('Generate', 'VB'), ('Public', 'JJ'), ('key', 'JJ'), ('and', 'CC'), ('Private', 'JJ'), ('key', 'JJ'), ('Select', 'JJ'), ('two', 'CD'), ('large', 'JJ'), ('prime', 'JJ'), ('numbers', 'NNS'), (':', ':'), ('p', 'NN'), ('=', 'SYM'), ('3', 'CD'), ('and', 'CC'), ('q', 'NN'), ('=', 'SYM'), ('11', 'CD'), ('Calculate', 'NN'), ('modulus', 'NN'), (':', ':'), ('n', 'NN'), ('=', 'SYM'), ('p', 'NN'), ('*', 'NFP'), ('q', 'NN'), (',', ','), ('n', 'NN'), ('=', 'SYM'), ('33', 'CD'), ('Calculate', 'NN'), ('Euler', 'NNP'), ('’s', 'POS'), ('totient', 'NN'), ('function', 'NN'), (':', ':'), ('φ(', 'SYM'), ('n', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('(', '-LRB-'), ('p-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('*', 'NFP'), ('(', '-LRB-'), ('q-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('φ(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('(', '-LRB-'), ('3', 'CD'), ('–', 'SYM'), ('1', 'CD'), (')', '-RRB-'), ('*', 'NFP'), ('(', '-LRB-'), ('11', 'CD'), ('–', 'SYM'), ('1', 'CD'), (')', '-RRB-'), ('=', 'SYM'), ('20', 'CD'), ('Select', 'JJ'), ('e', 'NN'), ('such', 'JJ'), ('that', 'IN'), ('e', 'NN'), ('is', 'VBZ'), ('relatively', 'RB'), ('prime', 'JJ'), ('to', 'IN'), ('φ(', 'NN'), ('n', 'NN'), (')', '-RRB-'), ('and', 'CC'), ('1', 'CD'), ('<', '-LRB-'), ('e', 'NN'), ('<', '-LRB-'), ('φ', 'NN'), ('(', '-LRB-'), ('n', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Step', 'step'), ('-', '-'), ('1', '1'), (':', ':'), ('Generate', 'generate'), ('Public', 'Public'), ('key', 'key'), ('and', 'and'), ('Private', 'private'), ('key', 'key'), ('Select', 'select'), ('two', 'two'), ('large', 'large'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('=', '='), ('3', '3'), ('and', 'and'), ('q', 'q'), ('=', '='), ('11', '11'), ('Calculate', 'calculate'), ('modulus', 'modulus'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), (',', ','), ('n', 'n'), ('=', '='), ('33', '33'), ('Calculate', 'calculate'), ('Euler', 'Euler'), ('’s', "'s"), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-', 'p-'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('3', '3'), ('–', '-'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('11', '11'), ('–', '-'), ('1', '1'), (')', ')'), ('=', '='), ('20', '20'), ('Select', 'select'), ('e', 'e'), ('such', 'such'), ('that', 'that'), ('e', 'e'), ('is', 'be'), ('relatively', 'relatively'), ('prime', 'prime'), ('to', 'to'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('and', 'and'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-4', 'Unit'), 'nummod'), (('Asymmertic', 'Ciphers'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Step'), 'case'), (('Engineering', 'Step'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Step'), 'compound'), (('Step', 'Institute'), 'appos'), (('-', 'Step'), 'punct'), (('1', 'Step'), 'dep'), ((':', 'Generate'), 'punct'), (('Generate', 'Unit'), 'parataxis'), (('Public', 'numbers'), 'amod'), (('key', 'numbers'), 'amod'), (('and', 'Private'), 'cc'), (('Private', 'key'), 'conj'), (('key', 'numbers'), 'amod'), (('Select', 'numbers'), 'amod'), (('two', 'numbers'), 'nummod'), (('large', 'numbers'), 'amod'), (('prime', 'numbers'), 'amod'), (('numbers', 'Generate'), 'obj'), ((':', 'Unit'), 'punct'), (('p', '='), 'nsubj'), (('=', 'Unit'), 'parataxis'), (('3', '='), 'obj'), (('and', 'q'), 'cc'), (('q', '3'), 'conj'), (('=', '='), 'conj'), (('11', 'modulus'), 'nummod'), (('Calculate', 'modulus'), 'compound'), (('modulus', '='), 'obj'), ((':', 'Unit'), 'punct'), (('n', '='), 'nsubj'), (('=', 'modulus'), 'appos'), (('p', '='), 'obj'), (('*', 'q'), 'punct'), (('q', '='), 'obj'), ((',', '='), 'punct'), (('n', '='), 'nsubj'), (('=', 'Generate'), 'conj'), (('33', 'Calculate'), 'nummod'), (('Calculate', 'function'), 'compound'), (('Euler', 'function'), 'nmod:poss'), (('’s', 'Euler'), 'case'), (('totient', 'function'), 'compound'), (('function', '='), 'obj'), ((':', 'function'), 'punct'), (('φ(', 'n'), 'nummod'), (('n', 'function'), 'appos'), ((')', 'n'), 'punct'), (('=', 'Generate'), 'conj'), (('(', 'p-'), 'punct'), (('p-', '='), 'dep'), (('1', 'p-'), 'dep'), ((')', 'p-'), 'punct'), (('*', 'q-'), 'punct'), (('(', 'q-'), 'punct'), (('q-', '='), 'dep'), (('1', 'q-'), 'dep'), ((')', 'q-'), 'punct'), (('φ(', 'n'), 'punct'), (('n', 'q-'), 'dep'), ((')', 'n'), 'punct'), (('=', 'q-'), 'parataxis'), (('(', '3'), 'punct'), (('3', '='), 'dep'), (('–', '1'), 'case'), (('1', '3'), 'nmod'), ((')', '3'), 'punct'), (('*', '11'), 'punct'), (('(', '11'), 'punct'), (('11', '='), 'dep'), (('–', '1'), 'case'), (('1', '11'), 'nmod'), ((')', '11'), 'punct'), (('=', '='), 'conj'), (('20', 'e'), 'nummod'), (('Select', 'e'), 'amod'), (('e', '='), 'obj'), (('such', 'prime'), 'mark'), (('that', 'such'), 'fixed'), (('e', 'prime'), 'nsubj'), (('is', 'prime'), 'cop'), (('relatively', 'prime'), 'advmod'), (('prime', 'e'), 'acl:relcl'), (('to', 'n'), 'case'), (('φ(', 'n'), 'compound'), (('n', 'prime'), 'obl'), ((')', 'prime'), 'punct'), (('and', 'e'), 'cc'), (('1', 'e'), 'nummod'), (('<', 'e'), 'punct'), (('e', 'prime'), 'conj'), (('<', 'φ'), 'punct'), (('φ', 'e'), 'appos'), (('(', 'n'), 'punct'), (('n', 'φ'), 'appos'), ((')', 'n'), 'punct')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('1', 'CARDINAL'), ('two', 'CARDINAL'), ('20', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 23 ===========================

 We have several choices for e : 7, 11, 13, 17, 19 Let’s take e = 7 Determine d such that d * e ≡ 1 (mod φ(n)) ? * 7 ≡ 1 (mod 20), 3 * 7 ≡ 1 (mod 20) 

Tokens are: 
>> ['We', 'have', 'several', 'choices', 'for', 'e', ':', '7', ',', '11', ',', '13', ',', '17', ',', '19', 'Let', '’s', 'take', 'e', '=', '7', 'Determine', 'd', 'such', 'that', 'd', '*', 'e', '≡', '1', '(', 'mod', 'φ', '(', 'n', ')', ')', '?', '*', '7', '≡', '1', '(', 'mod', '20', ')', ',', '3', '*', '7', '≡', '1', '(', 'mod', '20', ')'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('have', 'VERB'), ('several', 'ADJ'), ('choices', 'NOUN'), ('for', 'ADP'), ('e', 'NOUN'), (':', 'PUNCT'), ('7', 'NUM'), (',', 'PUNCT'), ('11', 'NUM'), (',', 'PUNCT'), ('13', 'NUM'), (',', 'PUNCT'), ('17', 'NUM'), (',', 'PUNCT'), ('19', 'NUM'), ('Let', 'VERB'), ('’s', 'PRON'), ('take', 'VERB'), ('e', 'NOUN'), ('=', 'SYM'), ('7', 'NUM'), ('Determine', 'NOUN'), ('d', 'NOUN'), ('such', 'ADJ'), ('that', 'SCONJ'), ('d', 'NOUN'), ('*', 'PUNCT'), ('e', 'NOUN'), ('≡', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('mod', 'NOUN'), ('φ', 'NOUN'), ('(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('?', 'PUNCT'), ('*', 'PUNCT'), ('7', 'NUM'), ('≡', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('mod', 'NOUN'), ('20', 'NUM'), (')', 'PUNCT'), (',', 'PUNCT'), ('3', 'NUM'), ('*', 'PUNCT'), ('7', 'NUM'), ('≡', 'NOUN'), ('1', 'NUM'), ('(', 'PUNCT'), ('mod', 'NOUN'), ('20', 'NUM'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('have', 'VBP'), ('several', 'JJ'), ('choices', 'NNS'), ('for', 'IN'), ('e', 'NN'), (':', ':'), ('7', 'CD'), (',', ','), ('11', 'CD'), (',', ','), ('13', 'CD'), (',', ','), ('17', 'CD'), (',', ','), ('19', 'CD'), ('Let', 'VB'), ('’s', 'PRP'), ('take', 'VB'), ('e', 'NN'), ('=', 'SYM'), ('7', 'CD'), ('Determine', 'NN'), ('d', 'NN'), ('such', 'JJ'), ('that', 'IN'), ('d', 'NN'), ('*', 'NFP'), ('e', 'NN'), ('≡', 'NN'), ('1', 'CD'), ('(', '-LRB-'), ('mod', 'NN'), ('φ', 'NN'), ('(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), (')', '-RRB-'), ('?', '.'), ('*', 'NFP'), ('7', 'CD'), ('≡', 'NN'), ('1', 'CD'), ('(', '-LRB-'), ('mod', 'NN'), ('20', 'CD'), (')', '-RRB-'), (',', ','), ('3', 'CD'), ('*', 'NFP'), ('7', 'CD'), ('≡', 'NN'), ('1', 'CD'), ('(', '-LRB-'), ('mod', 'NN'), ('20', 'CD'), (')', '-RRB-')] 

 Lemmas are: 
>> [('We', 'we'), ('have', 'have'), ('several', 'several'), ('choices', 'choice'), ('for', 'for'), ('e', 'e'), (':', ':'), ('7', '7'), (',', ','), ('11', '11'), (',', ','), ('13', '13'), (',', ','), ('17', '17'), (',', ','), ('19', '19'), ('Let', 'let'), ('’s', 'us'), ('take', 'take'), ('e', 'e'), ('=', '='), ('7', '7'), ('Determine', 'determine'), ('d', 'd'), ('such', 'such'), ('that', 'that'), ('d', 'd'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('?', '?'), ('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), (',', ','), ('3', '3'), ('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')')] 

 Dependency tags are: 
>> [(('We', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('several', 'choices'), 'amod'), (('choices', 'have'), 'obj'), (('for', 'e'), 'case'), (('e', 'choices'), 'nmod'), ((':', 'have'), 'punct'), (('7', 'e'), 'nummod'), ((',', '7'), 'punct'), (('11', '7'), 'nummod'), ((',', '7'), 'punct'), (('13', '7'), 'conj'), ((',', '7'), 'punct'), (('17', '13'), 'compound'), ((',', 'Let'), 'punct'), (('19', 'Let'), 'nsubj'), (('Let', 'have'), 'parataxis'), (('’s', 'Let'), 'obj'), (('take', 'Let'), 'xcomp'), (('e', 'take'), 'obj'), (('=', 'take'), 'xcomp'), (('7', 'd'), 'nummod'), (('Determine', 'd'), 'compound'), (('d', '='), 'obj'), (('such', '≡'), 'case'), (('that', 'such'), 'fixed'), (('d', '≡'), 'compound'), (('*', 'e'), 'punct'), (('e', '≡'), 'compound'), (('≡', 'd'), 'appos'), (('1', '≡'), 'nummod'), (('(', 'φ'), 'punct'), (('mod', 'φ'), 'compound'), (('φ', '≡'), 'appos'), (('(', 'n'), 'punct'), (('n', 'φ'), 'appos'), ((')', 'n'), 'punct'), ((')', 'φ'), 'punct'), (('?', '≡'), 'punct'), (('*', '≡'), 'punct'), (('7', '≡'), 'nummod'), (('≡', 'φ'), 'appos'), (('1', '≡'), 'nummod'), (('(', 'mod'), 'punct'), (('mod', '≡'), 'appos'), (('20', 'mod'), 'nummod'), ((')', 'mod'), 'punct'), ((',', '≡'), 'punct'), (('3', '≡'), 'nummod'), (('*', '≡'), 'punct'), (('7', '≡'), 'nummod'), (('≡', '≡'), 'appos'), (('1', '≡'), 'nummod'), (('(', 'mod'), 'punct'), (('mod', '≡'), 'appos'), (('20', 'mod'), 'nummod'), ((')', 'mod'), 'punct')]

 Named Entities are: 
>> [('7', 'CARDINAL'), ('11', 'CARDINAL'), ('13', 'CARDINAL'), ('1', 'CARDINAL'), ('20', 'CARDINAL'), ('20', 'CARDINAL')]

========================== Sentence 24 ===========================

 Public key : PU = { e, n } , PU = { 7, 33 } Private key : PR = { d, n }, PR = { 3, 33 }   This is equivalent to finding d which satisfies de = 1 + j.φ(n) where j is any integer. 

Tokens are: 
>> ['Public', 'key', ':', 'PU', '=', '{', 'e', ',', 'n', '}', ',', 'PU', '=', '{', '7', ',', '33', '}', 'Private', 'key', ':', 'PR', '=', '{', 'd', ',', 'n', '}', ',', 'PR', '=', '{', '3', ',', '33', '}', 'This', 'is', 'equivalent', 'to', 'finding', 'd', 'which', 'satisfies', 'de', '=', '1', '+', 'j.φ', '(', 'n', ')', 'where', 'j', 'is', 'any', 'integer', '.'] 

 UPOS tags are: 
>> [('Public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('e', 'PROPN'), (',', 'PUNCT'), ('n', 'PROPN'), ('}', 'PUNCT'), (',', 'PUNCT'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('7', 'NUM'), (',', 'PUNCT'), ('33', 'NUM'), ('}', 'PUNCT'), ('Private', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('d', 'PROPN'), (',', 'PUNCT'), ('n', 'PROPN'), ('}', 'PUNCT'), (',', 'PUNCT'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('3', 'NUM'), (',', 'PUNCT'), ('33', 'NUM'), ('}', 'PUNCT'), ('This', 'PRON'), ('is', 'AUX'), ('equivalent', 'ADJ'), ('to', 'SCONJ'), ('finding', 'VERB'), ('d', 'NOUN'), ('which', 'PRON'), ('satisfies', 'VERB'), ('de', 'PROPN'), ('=', 'SYM'), ('1', 'NUM'), ('+', 'SYM'), ('j.φ', 'NOUN'), ('(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), ('where', 'SCONJ'), ('j', 'NOUN'), ('is', 'AUX'), ('any', 'DET'), ('integer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Public', 'JJ'), ('key', 'NN'), (':', ':'), ('PU', 'NN'), ('=', 'SYM'), ('{', ':'), ('e', 'NNP'), (',', ','), ('n', 'NNP'), ('}', ':'), (',', ','), ('PU', 'NN'), ('=', 'SYM'), ('{', ':'), ('7', 'CD'), (',', ','), ('33', 'CD'), ('}', ':'), ('Private', 'JJ'), ('key', 'NN'), (':', ':'), ('PR', 'NN'), ('=', 'SYM'), ('{', ':'), ('d', 'NNP'), (',', ','), ('n', 'NNP'), ('}', ':'), (',', ','), ('PR', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('3', 'CD'), (',', ','), ('33', 'CD'), ('}', '-RRB-'), ('This', 'DT'), ('is', 'VBZ'), ('equivalent', 'JJ'), ('to', 'IN'), ('finding', 'VBG'), ('d', 'NN'), ('which', 'WDT'), ('satisfies', 'VBZ'), ('de', 'NNP'), ('=', 'SYM'), ('1', 'CD'), ('+', 'SYM'), ('j.φ', 'NN'), ('(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), ('where', 'WRB'), ('j', 'NN'), ('is', 'VBZ'), ('any', 'DT'), ('integer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Public', 'Public'), ('key', 'key'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Private', 'private'), ('key', 'key'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('d', 'd'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'pr'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('This', 'this'), ('is', 'be'), ('equivalent', 'equivalent'), ('to', 'to'), ('finding', 'find'), ('d', 'd'), ('which', 'which'), ('satisfies', 'satisfy'), ('de', 'de'), ('=', '='), ('1', '1'), ('+', '+'), ('j.φ', 'j.φ'), ('(', '('), ('n', 'n'), (')', ')'), ('where', 'where'), ('j', 'j'), ('is', 'be'), ('any', 'any'), ('integer', 'integer'), ('.', '.')] 

 Dependency tags are: 
>> [(('Public', 'key'), 'amod'), (('key', 'root'), 'root'), ((':', 'key'), 'punct'), (('PU', '='), 'nsubj'), (('=', 'key'), 'appos'), (('{', 'e'), 'punct'), (('e', '='), 'appos'), ((',', 'e'), 'punct'), (('n', 'e'), 'conj'), (('}', 'e'), 'punct'), ((',', '='), 'punct'), (('PU', '='), 'nsubj'), (('=', 'key'), 'parataxis'), (('{', '7'), 'punct'), (('7', '='), 'dep'), ((',', '33'), 'punct'), (('33', '7'), 'conj'), (('}', 'key'), 'punct'), (('Private', 'key'), 'amod'), (('key', '='), 'appos'), ((':', 'key'), 'punct'), (('PR', '='), 'nsubj'), (('=', 'key'), 'appos'), (('{', 'd'), 'punct'), (('d', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'd'), 'conj'), (('}', 'd'), 'punct'), ((',', '='), 'punct'), (('PR', '='), 'nsubj'), (('=', '='), 'parataxis'), (('{', '3'), 'compound'), (('3', '='), 'dep'), ((',', '33'), 'punct'), (('33', '3'), 'conj'), (('}', '33'), 'punct'), (('This', 'equivalent'), 'nsubj'), (('is', 'equivalent'), 'cop'), (('equivalent', '='), 'conj'), (('to', 'finding'), 'mark'), (('finding', 'equivalent'), 'advcl'), (('d', 'finding'), 'obj'), (('which', 'satisfies'), 'nsubj'), (('satisfies', 'd'), 'acl:relcl'), (('de', '='), 'obj'), (('=', 'satisfies'), 'xcomp'), (('1', '='), 'obj'), (('+', 'j.φ'), 'cc'), (('j.φ', '='), 'obj'), (('(', 'n'), 'punct'), (('n', 'j.φ'), 'appos'), ((')', 'n'), 'punct'), (('where', 'integer'), 'mark'), (('j', 'integer'), 'nsubj'), (('is', 'integer'), 'cop'), (('any', 'integer'), 'det'), (('integer', 'j.φ'), 'acl:relcl'), (('.', 'key'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 We can rewrite this as     d = (1 + j. φ(n)) / e  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-2 : Encrypt Message  Encryption Using Public key: C = Me mod n Ciphertext Input Message Publickey 

Tokens are: 
>> ['We', 'can', 'rewrite', 'this', 'as', 'd', '=', '(', '1', '+', 'j.', 'φ(', 'n', ')', ')', '/', 'e', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Step', '-', '2', ':', 'Encrypt', 'Message', 'Encryption', 'Using', 'Public', 'key', ':', 'C', '=', 'Me', 'mod', 'n', 'Ciphertext', 'Input', 'Message', 'Publickey'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('can', 'AUX'), ('rewrite', 'VERB'), ('this', 'PRON'), ('as', 'ADP'), ('d', 'NOUN'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('1', 'NUM'), ('+', 'SYM'), ('j.', 'NOUN'), ('φ(', 'NOUN'), ('n', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('/', 'PUNCT'), ('e', 'NOUN'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'ADJ'), ('Ciphers', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'NOUN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Step', 'NOUN'), ('-', 'PUNCT'), ('2', 'NUM'), (':', 'PUNCT'), ('Encrypt', 'NOUN'), ('Message', 'NOUN'), ('Encryption', 'NOUN'), ('Using', 'VERB'), ('Public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('C', 'NOUN'), ('=', 'PUNCT'), ('Me', 'PRON'), ('mod', 'NOUN'), ('n', 'NOUN'), ('Ciphertext', 'NOUN'), ('Input', 'NOUN'), ('Message', 'NOUN'), ('Publickey', 'PROPN')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('can', 'MD'), ('rewrite', 'VB'), ('this', 'DT'), ('as', 'IN'), ('d', 'NN'), ('=', ','), ('(', '-LRB-'), ('1', 'CD'), ('+', 'SYM'), ('j.', 'NN'), ('φ(', 'NN'), ('n', 'NN'), (')', '-RRB-'), (')', '-RRB-'), ('/', ','), ('e', 'NN'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'JJ'), ('Ciphers', 'NNS'), ('Darshan', 'NNP'), ('Institute', 'NN'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Step', 'NN'), ('-', ','), ('2', 'CD'), (':', ':'), ('Encrypt', 'NN'), ('Message', 'NN'), ('Encryption', 'NN'), ('Using', 'VBG'), ('Public', 'JJ'), ('key', 'NN'), (':', ':'), ('C', 'NN'), ('=', ','), ('Me', 'PRP'), ('mod', 'NN'), ('n', 'NN'), ('Ciphertext', 'NN'), ('Input', 'NN'), ('Message', 'NN'), ('Publickey', 'NNP')] 

 Lemmas are: 
>> [('We', 'we'), ('can', 'can'), ('rewrite', 'rewrite'), ('this', 'this'), ('as', 'as'), ('d', 'd'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j.', 'j.'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'cipher'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Step', 'step'), ('-', '-'), ('2', '2'), (':', ':'), ('Encrypt', 'encrypt'), ('Message', 'message'), ('Encryption', 'encryption'), ('Using', 'use'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('C', 'c'), ('=', '='), ('Me', 'I'), ('mod', 'mod'), ('n', 'n'), ('Ciphertext', 'ciphertext'), ('Input', 'input'), ('Message', 'message'), ('Publickey', 'Publickey')] 

 Dependency tags are: 
>> [(('We', 'rewrite'), 'nsubj'), (('can', 'rewrite'), 'aux'), (('rewrite', 'root'), 'root'), (('this', 'rewrite'), 'obj'), (('as', 'd'), 'case'), (('d', 'rewrite'), 'obl'), (('=', 'rewrite'), 'punct'), (('(', 'n'), 'punct'), (('1', 'n'), 'nummod'), (('+', 'j.'), 'cc'), (('j.', 'n'), 'compound'), (('φ(', 'n'), 'compound'), (('n', 'd'), 'appos'), ((')', 'n'), 'punct'), ((')', 'n'), 'punct'), (('/', 'Unit'), 'punct'), (('e', 'Unit'), 'compound'), (('Unit', 'Ciphers'), 'compound'), (('-4', 'Ciphers'), 'nummod'), (('Asymmertic', 'Ciphers'), 'amod'), (('Ciphers', 'rewrite'), 'parataxis'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Ciphers'), 'appos'), (('of', 'Step'), 'case'), (('Engineering', 'Step'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Step'), 'compound'), (('Step', 'Institute'), 'nmod'), (('-', 'Step'), 'punct'), (('2', 'Step'), 'nummod'), ((':', 'Encryption'), 'punct'), (('Encrypt', 'Encryption'), 'compound'), (('Message', 'Encryption'), 'compound'), (('Encryption', 'rewrite'), 'parataxis'), (('Using', 'Encryption'), 'acl'), (('Public', 'key'), 'amod'), (('key', 'Using'), 'obj'), ((':', 'C'), 'punct'), (('C', 'Encryption'), 'appos'), (('=', 'C'), 'punct'), (('Me', 'C'), 'conj'), (('mod', 'Message'), 'compound'), (('n', 'Message'), 'compound'), (('Ciphertext', 'Message'), 'compound'), (('Input', 'Message'), 'compound'), (('Message', 'C'), 'appos'), (('Publickey', 'Message'), 'appos')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 For message M = 14 C = 147 mod 33 C = [(141 mod 33) X (142 mod 33) X (144 mod 33)] mod 33 C = (14 X 31 X 4) mod 33 = 1736 mod 33 C = 20 PU = { e, n } , PU = { 7, 33 }  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-3 : Decrypt Message  Encryption Using Public key: M = Cd mod n Plaintext Message Cipher Message Privatekey For Ciphertext C = 20 M = 203 mod 33 M = [(201 mod 33) X (202 mod 33)] mod 33 M = (20 X 4) mod 33 = 80 mod 33 M = 14 PR = { d, n } , PR = { 3, 33 }  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Example RSA Algorithm 147 mod 33 = 20  Plaintext 14 Plaintext 14 203 mod 33 = 14  Ciphertext 20 PU = 7, 33 PR = 3, 33 Encryption Decryption      Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Example Find n, φ(n), e, d for p=7 and q= 19 then demonstrate encryption and decryption for M = 6 n = p * q = 7 * 19 = 133 φ(n) = ( p – 1 ) * ( q – 1) = 108 Finding e relatively prime to 108 e = 2 => GCD( 2, 108 ) = 2 (no) e = 3 => GCD( 3, 108 ) = 3 (no) e = 5 => GCD( 5, 108 ) = 1 (Yes) 

Tokens are: 
>> ['For', 'message', 'M', '=', '14', 'C', '=', '147', 'mod', '33', 'C', '=', '[', '(', '141', 'mod', '33', ')', 'X', '(', '142', 'mod', '33', ')', 'X', '(', '144', 'mod', '33', ')', ']', 'mod', '33', 'C', '=', '(', '14', 'X', '31', 'X', '4', ')', 'mod', '33', '=', '1736', 'mod', '33', 'C', '=', '20', 'PU', '=', '{', 'e', ',', 'n', '}', ',', 'PU', '=', '{', '7', ',', '33', '}', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Step', '-', '3', ':', 'Decrypt', 'Message', 'Encryption', 'Using', 'Public', 'key', ':', 'M', '=', 'Cd', 'mod', 'n', 'Plaintext', 'Message', 'Cipher', 'Message', 'Privatekey', 'For', 'Ciphertext', 'C', '=', '20', 'M', '=', '203', 'mod', '33', 'M', '=', '[', '(', '201', 'mod', '33', ')', 'X', '(', '202', 'mod', '33', ')', ']', 'mod', '33', 'M', '=', '(', '20', 'X', '4', ')', 'mod', '33', '=', '80', 'mod', '33', 'M', '=', '14', 'PR', '=', '{', 'd', ',', 'n', '}', ',', 'PR', '=', '{', '3', ',', '33', '}', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Example', 'RSA', 'Algorithm', '147', 'mod', '33', '=', '20', 'Plaintext', '14', 'Plaintext', '14', '203', 'mod', '33', '=', '14', 'Ciphertext', '20', 'PU', '=', '7', ',', '33', 'PR', '=', '3', ',', '33', 'Encryption', 'Decryption', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'RSA', 'Example', 'Find', 'n', ',', 'φ', '(', 'n', ')', ',', 'e', ',', 'd', 'for', 'p=7', 'and', 'q=', '19', 'then', 'demonstrate', 'encryption', 'and', 'decryption', 'for', 'M', '=', '6', 'n', '=', 'p', '*', 'q', '=', '7', '*', '19', '=', '133', 'φ', '(', 'n', ')', '=', '(', 'p', '–', '1', ')', '*', '(', 'q', '–', '1', ')', '=', '108', 'Finding', 'e', 'relatively', 'prime', 'to', '108', 'e', '=', '2', '=>', 'GCD', '(', '2', ',', '108', ')', '=', '2', '(', 'no', ')', 'e', '=', '3', '=>', 'GCD', '(', '3', ',', '108', ')', '=', '3', '(', 'no', ')', 'e', '=', '5', '=>', 'GCD', '(', '5', ',', '108', ')', '=', '1', '(', 'Yes', ')'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('message', 'NOUN'), ('M', 'NOUN'), ('=', 'SYM'), ('14', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('147', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('[', 'PUNCT'), ('(', 'PUNCT'), ('141', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), (')', 'PUNCT'), ('X', 'NOUN'), ('(', 'PUNCT'), ('142', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), (')', 'PUNCT'), ('X', 'NOUN'), ('(', 'PUNCT'), ('144', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), (')', 'PUNCT'), (']', 'PUNCT'), ('mod', 'NOUN'), ('33', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), ('14', 'NUM'), ('X', 'SYM'), ('31', 'NUM'), ('X', 'SYM'), ('4', 'NUM'), (')', 'PUNCT'), ('mod', 'NOUN'), ('33', 'NUM'), ('=', 'SYM'), ('1736', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('20', 'NUM'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('e', 'NOUN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'SYM'), (',', 'PUNCT'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('7', 'NUM'), (',', 'PUNCT'), ('33', 'NUM'), ('}', 'PUNCT'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'ADJ'), ('Ciphers', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'NOUN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Step', 'NOUN'), ('-', 'SYM'), ('3', 'NUM'), (':', 'PUNCT'), ('Decrypt', 'NOUN'), ('Message', 'NOUN'), ('Encryption', 'NOUN'), ('Using', 'VERB'), ('Public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('M', 'NOUN'), ('=', 'SYM'), ('Cd', 'NOUN'), ('mod', 'NOUN'), ('n', 'NOUN'), ('Plaintext', 'NOUN'), ('Message', 'NOUN'), ('Cipher', 'NOUN'), ('Message', 'NOUN'), ('Privatekey', 'NOUN'), ('For', 'ADP'), ('Ciphertext', 'NOUN'), ('C', 'NOUN'), ('=', 'SYM'), ('20', 'NUM'), ('M', 'NUM'), ('=', 'SYM'), ('203', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('M', 'NOUN'), ('=', 'SYM'), ('[', 'PUNCT'), ('(', 'PUNCT'), ('201', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), (')', 'PUNCT'), ('X', 'NOUN'), ('(', 'PUNCT'), ('202', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), (')', 'PUNCT'), (']', 'PUNCT'), ('mod', 'NOUN'), ('33', 'NUM'), ('M', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), ('20', 'NUM'), ('X', 'SYM'), ('4', 'NUM'), (')', 'PUNCT'), ('mod', 'NOUN'), ('33', 'NUM'), ('=', 'SYM'), ('80', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('M', 'NOUN'), ('=', 'SYM'), ('14', 'NUM'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('d', 'PROPN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'PUNCT'), (',', 'PUNCT'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('3', 'NUM'), (',', 'PUNCT'), ('33', 'NUM'), ('}', 'PUNCT'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Example', 'NOUN'), ('RSA', 'PROPN'), ('Algorithm', 'NOUN'), ('147', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('=', 'SYM'), ('20', 'NUM'), ('Plaintext', 'NOUN'), ('14', 'NUM'), ('Plaintext', 'NOUN'), ('14', 'NUM'), ('203', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('=', 'SYM'), ('14', 'NUM'), ('Ciphertext', 'NOUN'), ('20', 'NUM'), ('PU', 'NOUN'), ('=', 'SYM'), ('7', 'NUM'), (',', 'PUNCT'), ('33', 'NUM'), ('PR', 'NOUN'), ('=', 'SYM'), ('3', 'NUM'), (',', 'PUNCT'), ('33', 'NUM'), ('Encryption', 'NOUN'), ('Decryption', 'NOUN'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('RSA', 'PROPN'), ('Example', 'NOUN'), ('Find', 'NOUN'), ('n', 'PROPN'), (',', 'PUNCT'), ('φ', 'NOUN'), ('(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('e', 'NOUN'), (',', 'PUNCT'), ('d', 'NOUN'), ('for', 'ADP'), ('p=7', 'NOUN'), ('and', 'CCONJ'), ('q=', 'NOUN'), ('19', 'NUM'), ('then', 'ADV'), ('demonstrate', 'VERB'), ('encryption', 'NOUN'), ('and', 'CCONJ'), ('decryption', 'NOUN'), ('for', 'ADP'), ('M', 'NOUN'), ('=', 'SYM'), ('6', 'NUM'), ('n', 'NOUN'), ('=', 'SYM'), ('p', 'NOUN'), ('*', 'PUNCT'), ('q', 'NOUN'), ('=', 'SYM'), ('7', 'NUM'), ('*', 'PUNCT'), ('19', 'NUM'), ('=', 'SYM'), ('133', 'NUM'), ('φ', 'NOUN'), ('(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('(', 'PUNCT'), ('p', 'NOUN'), ('–', 'SYM'), ('1', 'NUM'), (')', 'PUNCT'), ('*', 'PUNCT'), ('(', 'PUNCT'), ('q', 'NOUN'), ('–', 'SYM'), ('1', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('108', 'NUM'), ('Finding', 'NOUN'), ('e', 'NOUN'), ('relatively', 'ADV'), ('prime', 'ADJ'), ('to', 'ADP'), ('108', 'NUM'), ('e', 'NOUN'), ('=', 'SYM'), ('2', 'NUM'), ('=>', 'SYM'), ('GCD', 'NOUN'), ('(', 'PUNCT'), ('2', 'NUM'), (',', 'PUNCT'), ('108', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('2', 'NUM'), ('(', 'PUNCT'), ('no', 'DET'), (')', 'PUNCT'), ('e', 'NOUN'), ('=', 'SYM'), ('3', 'NUM'), ('=>', 'SYM'), ('GCD', 'NOUN'), ('(', 'PUNCT'), ('3', 'NUM'), (',', 'PUNCT'), ('108', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('3', 'NUM'), ('(', 'PUNCT'), ('no', 'DET'), (')', 'PUNCT'), ('e', 'NOUN'), ('=', 'SYM'), ('5', 'NUM'), ('=>', 'SYM'), ('GCD', 'NOUN'), ('(', 'PUNCT'), ('5', 'NUM'), (',', 'PUNCT'), ('108', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('1', 'NUM'), ('(', 'PUNCT'), ('Yes', 'INTJ'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('message', 'NN'), ('M', 'NN'), ('=', 'SYM'), ('14', 'CD'), ('C', 'NN'), ('=', 'SYM'), ('147', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NN'), ('=', 'SYM'), ('[', '-LRB-'), ('(', '-LRB-'), ('141', 'CD'), ('mod', 'NN'), ('33', 'CD'), (')', '-RRB-'), ('X', 'NN'), ('(', '-LRB-'), ('142', 'CD'), ('mod', 'NN'), ('33', 'CD'), (')', '-RRB-'), ('X', 'NN'), ('(', '-LRB-'), ('144', 'CD'), ('mod', 'NN'), ('33', 'CD'), (')', '-RRB-'), (']', '-RRB-'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NN'), ('=', 'SYM'), ('(', '-LRB-'), ('14', 'CD'), ('X', 'SYM'), ('31', 'CD'), ('X', 'SYM'), ('4', 'CD'), (')', '-RRB-'), ('mod', 'NN'), ('33', 'CD'), ('=', 'SYM'), ('1736', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NNS'), ('=', 'SYM'), ('20', 'CD'), ('PU', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('e', 'NN'), (',', ','), ('n', 'NN'), ('}', 'SYM'), (',', ','), ('PU', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('7', 'CD'), (',', ','), ('33', 'CD'), ('}', ','), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'JJ'), ('Ciphers', 'NNS'), ('Darshan', 'NNP'), ('Institute', 'NN'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Step', 'NN'), ('-', 'SYM'), ('3', 'CD'), (':', ':'), ('Decrypt', 'NN'), ('Message', 'NN'), ('Encryption', 'NN'), ('Using', 'VBG'), ('Public', 'JJ'), ('key', 'NN'), (':', ':'), ('M', 'NN'), ('=', 'SYM'), ('Cd', 'NN'), ('mod', 'NN'), ('n', 'NN'), ('Plaintext', 'NN'), ('Message', 'NN'), ('Cipher', 'NN'), ('Message', 'NN'), ('Privatekey', 'NN'), ('For', 'IN'), ('Ciphertext', 'NN'), ('C', 'NN'), ('=', 'SYM'), ('20', 'CD'), ('M', 'CD'), ('=', 'SYM'), ('203', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNS'), ('=', 'SYM'), ('[', '-LRB-'), ('(', '-LRB-'), ('201', 'CD'), ('mod', 'NN'), ('33', 'CD'), (')', '-RRB-'), ('X', 'NN'), ('(', '-LRB-'), ('202', 'CD'), ('mod', 'NN'), ('33', 'CD'), (')', '-RRB-'), (']', '-RRB-'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNS'), ('=', 'SYM'), ('(', '-LRB-'), ('20', 'CD'), ('X', 'SYM'), ('4', 'CD'), (')', '-RRB-'), ('mod', 'NN'), ('33', 'CD'), ('=', 'SYM'), ('80', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNS'), ('=', 'SYM'), ('14', 'CD'), ('PR', 'NN'), ('=', 'SYM'), ('{', ':'), ('d', 'NNP'), (',', ','), ('n', 'NN'), ('}', ':'), (',', ','), ('PR', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('3', 'CD'), (',', ','), ('33', 'CD'), ('}', ','), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Example', 'NN'), ('RSA', 'NNP'), ('Algorithm', 'NN'), ('147', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('=', 'SYM'), ('20', 'CD'), ('Plaintext', 'NN'), ('14', 'CD'), ('Plaintext', 'NN'), ('14', 'CD'), ('203', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('=', 'SYM'), ('14', 'CD'), ('Ciphertext', 'NN'), ('20', 'CD'), ('PU', 'NN'), ('=', 'SYM'), ('7', 'CD'), (',', ','), ('33', 'CD'), ('PR', 'NN'), ('=', 'SYM'), ('3', 'CD'), (',', ','), ('33', 'CD'), ('Encryption', 'NN'), ('Decryption', 'NN'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('RSA', 'NNP'), ('Example', 'NN'), ('Find', 'NN'), ('n', 'NNP'), (',', ','), ('φ', 'NN'), ('(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), (',', ','), ('e', 'NN'), (',', ','), ('d', 'NN'), ('for', 'IN'), ('p=7', 'NN'), ('and', 'CC'), ('q=', 'NN'), ('19', 'CD'), ('then', 'RB'), ('demonstrate', 'VB'), ('encryption', 'NN'), ('and', 'CC'), ('decryption', 'NN'), ('for', 'IN'), ('M', 'NN'), ('=', 'SYM'), ('6', 'CD'), ('n', 'NN'), ('=', 'SYM'), ('p', 'NN'), ('*', 'NFP'), ('q', 'NN'), ('=', 'SYM'), ('7', 'CD'), ('*', 'NFP'), ('19', 'CD'), ('=', 'SYM'), ('133', 'CD'), ('φ', 'NN'), ('(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('(', '-LRB-'), ('p', 'NN'), ('–', 'SYM'), ('1', 'CD'), (')', '-RRB-'), ('*', 'NFP'), ('(', '-LRB-'), ('q', 'NN'), ('–', 'SYM'), ('1', 'CD'), (')', '-RRB-'), ('=', 'SYM'), ('108', 'CD'), ('Finding', 'NN'), ('e', 'NN'), ('relatively', 'RB'), ('prime', 'JJ'), ('to', 'IN'), ('108', 'CD'), ('e', 'NN'), ('=', 'SYM'), ('2', 'CD'), ('=>', 'SYM'), ('GCD', 'NN'), ('(', '-LRB-'), ('2', 'CD'), (',', ','), ('108', 'CD'), (')', '-RRB-'), ('=', 'SYM'), ('2', 'CD'), ('(', '-LRB-'), ('no', 'DT'), (')', '-RRB-'), ('e', 'NN'), ('=', 'SYM'), ('3', 'CD'), ('=>', 'SYM'), ('GCD', 'NN'), ('(', '-LRB-'), ('3', 'CD'), (',', ','), ('108', 'CD'), (')', '-RRB-'), ('=', 'SYM'), ('3', 'CD'), ('(', '-LRB-'), ('no', 'DT'), (')', '-RRB-'), ('e', 'NN'), ('=', 'SYM'), ('5', 'CD'), ('=>', 'SYM'), ('GCD', 'NN'), ('(', '-LRB-'), ('5', 'CD'), (',', ','), ('108', 'CD'), (')', '-RRB-'), ('=', 'SYM'), ('1', 'CD'), ('(', '-LRB-'), ('Yes', 'UH'), (')', '-RRB-')] 

 Lemmas are: 
>> [('For', 'for'), ('message', 'message'), ('M', 'm'), ('=', '='), ('14', '14'), ('C', 'c'), ('=', '='), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('[', '['), ('(', '('), ('141', '141'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('142', '142'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('144', '144'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('(', '('), ('14', '14'), ('X', 'x'), ('31', '31'), ('X', 'x'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('1736', '1736'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('20', '20'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'cipher'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Step', 'step'), ('-', '-'), ('3', '3'), (':', ':'), ('Decrypt', 'decrypt'), ('Message', 'message'), ('Encryption', 'encryption'), ('Using', 'use'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('M', 'm'), ('=', '='), ('Cd', 'Cd'), ('mod', 'mod'), ('n', 'n'), ('Plaintext', 'plaintext'), ('Message', 'message'), ('Cipher', 'cipher'), ('Message', 'message'), ('Privatekey', 'privatekey'), ('For', 'for'), ('Ciphertext', 'ciphertext'), ('C', 'c'), ('=', '='), ('20', '20'), ('M', 'm'), ('=', '='), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('[', '['), ('(', '('), ('201', '201'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('202', '202'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('(', '('), ('20', '20'), ('X', 'x'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('80', '80'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('14', '14'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('d', 'd'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'pr'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Example', 'example'), ('RSA', 'RSA'), ('Algorithm', 'algorithm'), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('20', '20'), ('Plaintext', 'plaintext'), ('14', '14'), ('Plaintext', 'plaintext'), ('14', '14'), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('14', '14'), ('Ciphertext', 'ciphertext'), ('20', '20'), ('PU', 'pu'), ('=', '='), ('7', '7'), (',', ','), ('33', '33'), ('PR', 'pr'), ('=', '='), ('3', '3'), (',', ','), ('33', '33'), ('Encryption', 'encryption'), ('Decryption', 'decryption'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('RSA', 'RSA'), ('Example', 'example'), ('Find', 'find'), ('n', 'n'), (',', ','), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (',', ','), ('e', 'e'), (',', ','), ('d', 'd'), ('for', 'for'), ('p=7', 'p=7'), ('and', 'and'), ('q=', 'q='), ('19', '19'), ('then', 'then'), ('demonstrate', 'demonstrate'), ('encryption', 'encryption'), ('and', 'and'), ('decryption', 'decryption'), ('for', 'for'), ('M', 'm'), ('=', '='), ('6', '6'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('=', '='), ('7', '7'), ('*', '*'), ('19', '19'), ('=', '='), ('133', '133'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p', 'p'), ('–', '-'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('q', 'q'), ('–', '-'), ('1', '1'), (')', ')'), ('=', '='), ('108', '108'), ('Finding', 'find'), ('e', 'e'), ('relatively', 'relatively'), ('prime', 'prime'), ('to', 'to'), ('108', '108'), ('e', 'e'), ('=', '='), ('2', '2'), ('=>', '=>'), ('GCD', 'gcd'), ('(', '('), ('2', '2'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('2', '2'), ('(', '('), ('no', 'no'), (')', ')'), ('e', 'e'), ('=', '='), ('3', '3'), ('=>', '=>'), ('GCD', 'gcd'), ('(', '('), ('3', '3'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('3', '3'), ('(', '('), ('no', 'no'), (')', ')'), ('e', 'e'), ('=', '='), ('5', '5'), ('=>', '=>'), ('GCD', 'gcd'), ('(', '('), ('5', '5'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('1', '1'), ('(', '('), ('Yes', 'yes'), (')', ')')] 

 Dependency tags are: 
>> [(('For', 'M'), 'case'), (('message', 'M'), 'compound'), (('M', '='), 'nsubj'), (('=', 'root'), 'root'), (('14', 'M'), 'nummod'), (('C', '='), 'nsubj'), (('=', '='), 'ccomp'), (('147', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('33', 'mod'), 'nummod'), (('C', '='), 'nsubj'), (('=', '='), 'conj'), (('[', 'mod'), 'punct'), (('(', 'mod'), 'punct'), (('141', 'mod'), 'nummod'), (('mod', 'X'), 'dep'), (('33', 'mod'), 'dep'), ((')', 'mod'), 'punct'), (('X', '='), 'obj'), (('(', 'mod'), 'punct'), (('142', 'mod'), 'nummod'), (('mod', 'X'), 'dep'), (('33', 'mod'), 'dep'), ((')', 'mod'), 'punct'), (('X', '='), 'obj'), (('(', 'mod'), 'punct'), (('144', 'mod'), 'nummod'), (('mod', 'X'), 'dep'), (('33', 'mod'), 'dep'), ((')', 'mod'), 'punct'), ((']', 'mod'), 'punct'), (('mod', '='), 'obj'), (('33', 'mod'), 'dep'), (('C', '='), 'dep'), (('=', 'mod'), 'conj'), (('(', '14'), 'punct'), (('14', '='), 'dep'), (('X', '31'), 'case'), (('31', '14'), 'nmod'), (('X', '4'), 'case'), (('4', '14'), 'nmod'), ((')', '4'), 'punct'), (('mod', '='), 'obj'), (('33', '='), 'dep'), (('=', '='), 'conj'), (('1736', 'mod'), 'compound'), (('mod', '='), 'obj'), (('33', 'C'), 'nummod'), (('C', '='), 'obj'), (('=', '='), 'conj'), (('20', '='), 'dep'), (('PU', '='), 'nsubj'), (('=', '='), 'conj'), (('{', 'e'), 'dep'), (('e', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'e'), 'conj'), (('}', 'n'), 'dep'), ((',', '='), 'punct'), (('PU', '='), 'nsubj'), (('=', '='), 'conj'), (('{', '7'), 'dep'), (('7', '='), 'dep'), ((',', '33'), 'punct'), (('33', '7'), 'conj'), (('}', 'Unit'), 'punct'), (('Unit', '7'), 'dep'), (('-4', 'Ciphers'), 'dep'), (('Asymmertic', 'Ciphers'), 'amod'), (('Ciphers', 'Unit'), 'conj'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Ciphers'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', 'Step'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Step'), 'compound'), (('Step', 'Institute'), 'dep'), (('-', '3'), 'case'), (('3', 'Step'), 'nmod'), ((':', 'Encryption'), 'punct'), (('Decrypt', 'Encryption'), 'compound'), (('Message', 'Encryption'), 'compound'), (('Encryption', '='), 'nsubj'), (('Using', 'Encryption'), 'acl'), (('Public', 'key'), 'amod'), (('key', 'Using'), 'obj'), ((':', '='), 'punct'), (('M', '='), 'nsubj'), (('=', '='), 'conj'), (('Cd', '='), 'obj'), (('mod', 'n'), 'compound'), (('n', 'Message'), 'compound'), (('Plaintext', 'Message'), 'compound'), (('Message', 'Privatekey'), 'compound'), (('Cipher', 'Privatekey'), 'compound'), (('Message', 'Privatekey'), 'compound'), (('Privatekey', '='), 'obj'), (('For', 'Ciphertext'), 'case'), (('Ciphertext', '='), 'obl'), (('C', '='), 'nsubj'), (('=', '='), 'conj'), (('20', 'M'), 'nummod'), (('M', '='), 'dep'), (('=', '='), 'conj'), (('203', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('33', 'M'), 'nummod'), (('M', '='), 'obj'), (('=', '='), 'conj'), (('[', 'mod'), 'punct'), (('(', 'mod'), 'punct'), (('201', 'mod'), 'nummod'), (('mod', 'X'), 'appos'), (('33', 'mod'), 'dep'), ((')', 'mod'), 'punct'), (('X', 'mod'), 'compound'), (('(', 'mod'), 'punct'), (('202', 'mod'), 'nummod'), (('mod', '='), 'dep'), (('33', 'mod'), 'dep'), ((')', 'mod'), 'punct'), ((']', 'mod'), 'punct'), (('mod', '='), 'obj'), (('33', 'M'), 'nummod'), (('M', '='), 'nsubj'), (('=', '='), 'conj'), (('(', '20'), 'punct'), (('20', 'mod'), 'nummod'), (('X', '4'), 'case'), (('4', '20'), 'nmod'), ((')', '4'), 'punct'), (('mod', '='), 'obj'), (('33', '='), 'nsubj'), (('=', '='), 'conj'), (('80', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('33', 'M'), 'nummod'), (('M', '='), 'nsubj'), (('=', '='), 'parataxis'), (('14', '='), 'dep'), (('PR', '='), 'nsubj'), (('=', '='), 'conj'), (('{', 'd'), 'punct'), (('d', '='), 'dep'), ((',', 'n'), 'punct'), (('n', 'd'), 'conj'), (('}', '='), 'punct'), ((',', '='), 'punct'), (('PR', '='), 'nsubj'), (('=', 'd'), 'conj'), (('{', '='), 'obj'), (('3', '='), 'dep'), ((',', '33'), 'punct'), (('33', '3'), 'conj'), (('}', 'Unit'), 'punct'), (('Unit', '='), 'dep'), (('-4', 'Ciphers'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'conj'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Example'), 'compound'), (('Example', 'Institute'), 'dep'), (('RSA', 'Algorithm'), 'compound'), (('Algorithm', '='), 'dep'), (('147', 'mod'), 'nummod'), (('mod', '='), 'dep'), (('33', '='), 'nsubj'), (('=', 'Example'), 'parataxis'), (('20', 'Plaintext'), 'nummod'), (('Plaintext', '='), 'obj'), (('14', 'Plaintext'), 'nummod'), (('Plaintext', 'Plaintext'), 'compound'), (('14', 'mod'), 'nummod'), (('203', 'mod'), 'nummod'), (('mod', 'Plaintext'), 'conj'), (('33', '='), 'nsubj'), (('=', '='), 'parataxis'), (('14', 'Ciphertext'), 'nummod'), (('Ciphertext', '='), 'obj'), (('20', '='), 'dep'), (('PU', '='), 'nsubj'), (('=', '='), 'conj'), (('7', '='), 'obj'), ((',', '33'), 'punct'), (('33', 'PR'), 'nummod'), (('PR', '='), 'nsubj'), (('=', '='), 'conj'), (('3', '='), 'obj'), ((',', 'Unit'), 'punct'), (('33', 'Unit'), 'nummod'), (('Encryption', 'Unit'), 'compound'), (('Decryption', 'Unit'), 'compound'), (('Unit', '='), 'obj'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'conj'), (('of', '‹#›'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('RSA', 'n'), 'compound'), (('Example', 'n'), 'compound'), (('Find', 'n'), 'compound'), (('n', 'Institute'), 'nmod'), ((',', 'φ'), 'punct'), (('φ', 'n'), 'conj'), (('(', 'n'), 'punct'), (('n', 'φ'), 'dep'), ((')', 'n'), 'punct'), ((',', 'e'), 'punct'), (('e', 'φ'), 'conj'), ((',', 'd'), 'punct'), (('d', 'e'), 'conj'), (('for', 'p=7'), 'case'), (('p=7', 'd'), 'nmod'), (('and', 'q='), 'cc'), (('q=', 'p=7'), 'conj'), (('19', 'q='), 'dep'), (('then', 'demonstrate'), 'advmod'), (('demonstrate', 'e'), 'parataxis'), (('encryption', 'demonstrate'), 'obj'), (('and', 'decryption'), 'cc'), (('decryption', 'encryption'), 'conj'), (('for', 'M'), 'case'), (('M', '='), 'obl'), (('=', 'demonstrate'), 'advcl'), (('6', 'n'), 'nummod'), (('n', '='), 'obj'), (('=', '='), 'conj'), (('p', '='), 'obj'), (('*', '='), 'punct'), (('q', '='), 'nsubj'), (('=', '='), 'parataxis'), (('7', '='), 'dep'), (('*', '='), 'punct'), (('19', '='), 'dep'), (('=', '='), 'parataxis'), (('133', 'φ'), 'nummod'), (('φ', '='), 'obj'), (('(', 'n'), 'punct'), (('n', 'φ'), 'appos'), ((')', 'n'), 'punct'), (('=', '='), 'conj'), (('(', 'p'), 'punct'), (('p', '='), 'dep'), (('–', '1'), 'case'), (('1', 'p'), 'nmod'), ((')', 'p'), 'punct'), (('*', 'q'), 'punct'), (('(', 'q'), 'punct'), (('q', '='), 'dep'), (('–', '1'), 'case'), (('1', 'q'), 'nmod'), ((')', 'q'), 'punct'), (('=', 'q'), 'parataxis'), (('108', 'Finding'), 'nummod'), (('Finding', '='), 'obj'), (('e', '='), 'obj'), (('relatively', 'prime'), 'advmod'), (('prime', 'e'), 'amod'), (('to', 'e'), 'case'), (('108', 'e'), 'nummod'), (('e', 'prime'), 'obl'), (('=', 'Finding'), 'conj'), (('2', '='), 'obj'), (('=>', 'GCD'), 'case'), (('GCD', '='), 'obj'), (('(', '2'), 'punct'), (('2', '='), 'dep'), ((',', '108'), 'punct'), (('108', '2'), 'conj'), ((')', '108'), 'punct'), (('=', '='), 'conj'), (('2', '='), 'obj'), (('(', 'e'), 'punct'), (('no', 'e'), 'det'), ((')', 'no'), 'punct'), (('e', '='), 'nsubj'), (('=', 'e'), 'acl:relcl'), (('3', '='), 'obj'), (('=>', 'GCD'), 'case'), (('GCD', '='), 'obj'), (('(', '3'), 'punct'), (('3', '='), 'dep'), ((',', '108'), 'punct'), (('108', '3'), 'conj'), ((')', '108'), 'punct'), (('=', '='), 'conj'), (('3', '='), 'obj'), (('(', 'e'), 'punct'), (('no', 'e'), 'det'), ((')', 'no'), 'punct'), (('e', '='), 'nsubj'), (('=', 'e'), 'acl'), (('5', 'GCD'), 'nummod'), (('=>', 'GCD'), 'compound'), (('GCD', '='), 'obj'), (('(', '5'), 'punct'), (('5', '='), 'dep'), ((',', '108'), 'punct'), (('108', '5'), 'conj'), ((')', '5'), 'punct'), (('=', '='), 'conj'), (('1', '='), 'obj'), (('(', 'Yes'), 'punct'), (('Yes', '='), 'discourse'), ((')', 'Yes'), 'punct')]

 Named Entities are: 
>> [('141', 'CARDINAL'), ('20', 'CARDINAL'), ('7', 'CARDINAL'), ('33', 'CARDINAL'), ('3', 'CARDINAL'), ('33', 'CARDINAL')]

========================== Sentence 27 ===========================

 Finding d such that (d * e ) mod φ(n) = 1 

Tokens are: 
>> ['Finding', 'd', 'such', 'that', '(', 'd', '*', 'e', ')', 'mod', 'φ(', 'n', ')', '=', '1'] 

 UPOS tags are: 
>> [('Finding', 'VERB'), ('d', 'ADP'), ('such', 'ADJ'), ('that', 'PRON'), ('(', 'PUNCT'), ('d', 'NOUN'), ('*', 'PUNCT'), ('e', 'NOUN'), (')', 'PUNCT'), ('mod', 'NOUN'), ('φ(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), ('=', 'PUNCT'), ('1', 'NUM')] 

 XPOS tags are: 
>> [('Finding', 'VBG'), ('d', 'IN'), ('such', 'JJ'), ('that', 'DT'), ('(', '-LRB-'), ('d', 'NN'), ('*', 'NFP'), ('e', 'NN'), (')', '-RRB-'), ('mod', 'NN'), ('φ(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), ('=', ','), ('1', 'CD')] 

 Lemmas are: 
>> [('Finding', 'find'), ('d', 'd'), ('such', 'such'), ('that', 'that'), ('(', '('), ('d', 'd'), ('*', '*'), ('e', 'e'), (')', ')'), ('mod', 'mod'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('=', '='), ('1', '1')] 

 Dependency tags are: 
>> [(('Finding', 'mod'), 'csubj'), (('d', 'that'), 'case'), (('such', 'that'), 'amod'), (('that', 'Finding'), 'obl'), (('(', 'e'), 'punct'), (('d', 'that'), 'appos'), (('*', 'e'), 'punct'), (('e', 'd'), 'dep'), ((')', 'e'), 'punct'), (('mod', 'root'), 'root'), (('φ(', 'n'), 'punct'), (('n', 'mod'), 'appos'), ((')', 'n'), 'punct'), (('=', 'mod'), 'punct'), (('1', 'mod'), 'appos')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 We can rewrite this as d = (1 + j . φ(n)) / e j = 0  => d = 1 / 5 = 0.2  integer ? (no) j = 1  => d = 109 / 5 = 21.8  integer ? (no) j = 2  => d = 217 / 5 = 43.4  integer ? 

Tokens are: 
>> ['We', 'can', 'rewrite', 'this', 'as', 'd', '=', '(', '1', '+', 'j', '.', 'φ(', 'n', ')', ')', '/', 'e', 'j', '=', '0', '=>', 'd', '=', '1', '/', '5', '=', '0.2', '\uf0df', 'integer', '?', '(', 'no', ')', 'j', '=', '1', '=>', 'd', '=', '109', '/', '5', '=', '21.8', '\uf0df', 'integer', '?', '(', 'no', ')', 'j', '=', '2', '=>', 'd', '=', '217', '/', '5', '=', '43.4', '\uf0df', 'integer', '?'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('can', 'AUX'), ('rewrite', 'VERB'), ('this', 'PRON'), ('as', 'ADP'), ('d', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), ('1', 'NUM'), ('+', 'SYM'), ('j', 'NOUN'), ('.', 'PUNCT'), ('φ(', 'PUNCT'), ('n', 'NOUN'), (')', 'PUNCT'), (')', 'PUNCT'), ('/', 'SYM'), ('e', 'NOUN'), ('j', 'NOUN'), ('=', 'SYM'), ('0', 'NUM'), ('=>', 'SYM'), ('d', 'NOUN'), ('=', 'SYM'), ('1', 'NUM'), ('/', 'SYM'), ('5', 'NUM'), ('=', 'SYM'), ('0.2', 'NUM'), ('\uf0df', 'NOUN'), ('integer', 'NOUN'), ('?', 'PUNCT'), ('(', 'PUNCT'), ('no', 'DET'), (')', 'PUNCT'), ('j', 'NOUN'), ('=', 'SYM'), ('1', 'NUM'), ('=>', 'SYM'), ('d', 'NOUN'), ('=', 'SYM'), ('109', 'NUM'), ('/', 'SYM'), ('5', 'NUM'), ('=', 'SYM'), ('21.8', 'NUM'), ('\uf0df', 'NOUN'), ('integer', 'NOUN'), ('?', 'PUNCT'), ('(', 'PUNCT'), ('no', 'DET'), (')', 'PUNCT'), ('j', 'NOUN'), ('=', 'SYM'), ('2', 'NUM'), ('=>', 'SYM'), ('d', 'NOUN'), ('=', 'SYM'), ('217', 'NUM'), ('/', 'SYM'), ('5', 'NUM'), ('=', 'SYM'), ('43.4', 'NUM'), ('\uf0df', 'NOUN'), ('integer', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('can', 'MD'), ('rewrite', 'VB'), ('this', 'DT'), ('as', 'IN'), ('d', 'NN'), ('=', 'SYM'), ('(', '-LRB-'), ('1', 'CD'), ('+', 'SYM'), ('j', 'NN'), ('.', '.'), ('φ(', '-LRB-'), ('n', 'NN'), (')', '-RRB-'), (')', '-RRB-'), ('/', 'SYM'), ('e', 'NN'), ('j', 'NN'), ('=', 'SYM'), ('0', 'CD'), ('=>', 'SYM'), ('d', 'NN'), ('=', 'SYM'), ('1', 'CD'), ('/', 'SYM'), ('5', 'CD'), ('=', 'SYM'), ('0.2', 'CD'), ('\uf0df', 'NN'), ('integer', 'NN'), ('?', '.'), ('(', '-LRB-'), ('no', 'DT'), (')', '-RRB-'), ('j', 'NN'), ('=', 'SYM'), ('1', 'CD'), ('=>', 'SYM'), ('d', 'NN'), ('=', 'SYM'), ('109', 'CD'), ('/', 'SYM'), ('5', 'CD'), ('=', 'SYM'), ('21.8', 'CD'), ('\uf0df', 'NN'), ('integer', 'NN'), ('?', '.'), ('(', '-LRB-'), ('no', 'DT'), (')', '-RRB-'), ('j', 'NN'), ('=', 'SYM'), ('2', 'CD'), ('=>', 'SYM'), ('d', 'NN'), ('=', 'SYM'), ('217', 'CD'), ('/', 'SYM'), ('5', 'CD'), ('=', 'SYM'), ('43.4', 'CD'), ('\uf0df', 'NN'), ('integer', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('can', 'can'), ('rewrite', 'rewrite'), ('this', 'this'), ('as', 'as'), ('d', 'd'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j', 'j'), ('.', '.'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('j', 'j'), ('=', '='), ('0', '0'), ('=>', '=>'), ('d', 'd'), ('=', '='), ('1', '1'), ('/', '/'), ('5', '5'), ('=', '='), ('0.2', '0.2'), ('\uf0df', '\uf0df'), ('integer', 'integer'), ('?', '?'), ('(', '('), ('no', 'no'), (')', ')'), ('j', 'j'), ('=', '='), ('1', '1'), ('=>', '=>'), ('d', 'd'), ('=', '='), ('109', '109'), ('/', '/'), ('5', '5'), ('=', '='), ('21.8', '21.8'), ('\uf0df', '\uf0df'), ('integer', 'integer'), ('?', '?'), ('(', '('), ('no', 'no'), (')', ')'), ('j', 'j'), ('=', '='), ('2', '2'), ('=>', '=>'), ('d', 'd'), ('=', '='), ('217', '217'), ('/', '/'), ('5', '5'), ('=', '='), ('43.4', '43.4'), ('\uf0df', '\uf0df'), ('integer', 'integer'), ('?', '?')] 

 Dependency tags are: 
>> [(('We', 'rewrite'), 'nsubj'), (('can', 'rewrite'), 'aux'), (('rewrite', 'root'), 'root'), (('this', 'rewrite'), 'obj'), (('as', 'd'), 'case'), (('d', 'rewrite'), 'obl'), (('=', 'rewrite'), 'advcl'), (('(', '1'), 'punct'), (('1', '='), 'dep'), (('+', 'j'), 'cc'), (('j', '1'), 'conj'), (('.', '1'), 'punct'), (('φ(', 'n'), 'punct'), (('n', '='), 'dep'), ((')', 'n'), 'punct'), ((')', 'n'), 'punct'), (('/', 'e'), 'cc'), (('e', 'rewrite'), 'conj'), (('j', '='), 'nsubj'), (('=', 'rewrite'), 'conj'), (('0', '='), 'obj'), (('=>', 'd'), 'case'), (('d', '='), 'nsubj'), (('=', '='), 'xcomp'), (('1', '='), 'obj'), (('/', '5'), 'case'), (('5', '1'), 'conj'), (('=', '='), 'conj'), (('0.2', 'integer'), 'nummod'), (('\uf0df', 'integer'), 'compound'), (('integer', '='), 'obj'), (('?', '='), 'punct'), (('(', 'no'), 'punct'), (('no', '='), 'nsubj'), ((')', 'no'), 'punct'), (('j', '='), 'nsubj'), (('=', '='), 'parataxis'), (('1', '='), 'obj'), (('=>', 'd'), 'case'), (('d', '='), 'obj'), (('=', '='), 'xcomp'), (('109', '='), 'nummod'), (('/', '5'), 'case'), (('5', '109'), 'conj'), (('=', '='), 'conj'), (('21.8', 'integer'), 'nummod'), (('\uf0df', 'integer'), 'compound'), (('integer', '='), 'obj'), (('?', '='), 'punct'), (('(', 'no'), 'punct'), (('no', 'j'), 'det'), ((')', 'no'), 'punct'), (('j', '='), 'nsubj'), (('=', '='), 'conj'), (('2', '='), 'obj'), (('=>', 'd'), 'case'), (('d', '='), 'obj'), (('=', '='), 'conj'), (('217', '='), 'nsubj'), (('/', '5'), 'punct'), (('5', '217'), 'conj'), (('=', '='), 'conj'), (('43.4', 'integer'), 'nummod'), (('\uf0df', 'integer'), 'compound'), (('integer', '='), 'obj'), (('?', 'rewrite'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 29 ===========================

 (no) j = 3  => d = 325 / 5 = 65 integer ? 

Tokens are: 
>> ['(', 'no', ')', 'j', '=', '3', '=>', 'd', '=', '325', '/', '5', '=', '65', 'integer', '?'] 

 UPOS tags are: 
>> [('(', 'PUNCT'), ('no', 'DET'), (')', 'PUNCT'), ('j', 'NOUN'), ('=', 'SYM'), ('3', 'NUM'), ('=>', 'PUNCT'), ('d', 'NOUN'), ('=', 'SYM'), ('325', 'NUM'), ('/', 'SYM'), ('5', 'NUM'), ('=', 'SYM'), ('65', 'NUM'), ('integer', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('(', '-LRB-'), ('no', 'DT'), (')', '-RRB-'), ('j', 'NN'), ('=', 'SYM'), ('3', 'CD'), ('=>', ','), ('d', 'NN'), ('=', 'SYM'), ('325', 'CD'), ('/', ','), ('5', 'CD'), ('=', 'SYM'), ('65', 'CD'), ('integer', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('(', '('), ('no', 'no'), (')', ')'), ('j', 'j'), ('=', '='), ('3', '3'), ('=>', '=>'), ('d', 'd'), ('=', '='), ('325', '325'), ('/', '/'), ('5', '5'), ('=', '='), ('65', '65'), ('integer', 'integer'), ('?', '?')] 

 Dependency tags are: 
>> [(('(', '='), 'punct'), (('no', '='), 'nsubj'), ((')', 'no'), 'punct'), (('j', '='), 'nsubj'), (('=', 'root'), 'root'), (('3', '='), 'obj'), (('=>', '='), 'punct'), (('d', '='), 'nsubj'), (('=', '='), 'parataxis'), (('325', '='), 'nsubj'), (('/', '5'), 'case'), (('5', '325'), 'nmod'), (('=', '='), 'conj'), (('65', 'integer'), 'nummod'), (('integer', '='), 'obj'), (('?', '='), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 (yes) Public key :  PU = { e, n } = {5, 133} 

Tokens are: 
>> ['(', 'yes', ')', 'Public', 'key', ':', 'PU', '=', '{', 'e', ',', 'n', '}', '=', '{', '5', ',', '133', '}'] 

 UPOS tags are: 
>> [('(', 'PUNCT'), ('yes', 'INTJ'), (')', 'PUNCT'), ('Public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('PU', 'NOUN'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('e', 'NOUN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'PUNCT'), ('=', 'SYM'), ('{', 'PUNCT'), ('5', 'NUM'), (',', 'PUNCT'), ('133', 'NUM'), ('}', 'PUNCT')] 

 XPOS tags are: 
>> [('(', '-LRB-'), ('yes', 'UH'), (')', '-RRB-'), ('Public', 'JJ'), ('key', 'NN'), (':', ':'), ('PU', 'NN'), ('=', ','), ('{', ','), ('e', 'NN'), (',', ','), ('n', 'NN'), ('}', ','), ('=', 'SYM'), ('{', 'NFP'), ('5', 'CD'), (',', ','), ('133', 'CD'), ('}', '-RRB-')] 

 Lemmas are: 
>> [('(', '('), ('yes', 'yes'), (')', ')'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}')] 

 Dependency tags are: 
>> [(('(', 'yes'), 'punct'), (('yes', 'key'), 'discourse'), ((')', 'yes'), 'punct'), (('Public', 'key'), 'amod'), (('key', 'root'), 'root'), ((':', 'key'), 'punct'), (('PU', 'key'), 'appos'), (('=', 'key'), 'punct'), (('{', 'e'), 'punct'), (('e', 'key'), 'list'), ((',', 'e'), 'punct'), (('n', 'e'), 'appos'), (('}', '='), 'punct'), (('=', 'key'), 'parataxis'), (('{', '='), 'punct'), (('5', '='), 'obj'), ((',', '5'), 'punct'), (('133', '5'), 'conj'), (('}', 'key'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 31 ===========================

 Private key :  PR = { d, n } = {65, 133} 

Tokens are: 
>> ['Private', 'key', ':', 'PR', '=', '{', 'd', ',', 'n', '}', '=', '{', '65', ',', '133', '}'] 

 UPOS tags are: 
>> [('Private', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('d', 'PROPN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'PUNCT'), ('=', 'SYM'), ('{', 'PUNCT'), ('65', 'NUM'), (',', 'PUNCT'), ('133', 'NUM'), ('}', 'PUNCT')] 

 XPOS tags are: 
>> [('Private', 'JJ'), ('key', 'NN'), (':', ':'), ('PR', 'NN'), ('=', 'SYM'), ('{', ','), ('d', 'NNP'), (',', ','), ('n', 'NN'), ('}', ','), ('=', 'SYM'), ('{', ':'), ('65', 'CD'), (',', ','), ('133', 'CD'), ('}', '-RRB-')] 

 Lemmas are: 
>> [('Private', 'private'), ('key', 'key'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('d', 'd'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}')] 

 Dependency tags are: 
>> [(('Private', 'key'), 'amod'), (('key', 'root'), 'root'), ((':', 'key'), 'punct'), (('PR', '='), 'nsubj'), (('=', 'key'), 'appos'), (('{', 'd'), 'punct'), (('d', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'd'), 'list'), (('}', '='), 'punct'), (('=', 'key'), 'parataxis'), (('{', '65'), 'punct'), (('65', '='), 'appos'), ((',', '133'), 'punct'), (('133', '65'), 'conj'), (('}', '65'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Example – cont… 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'RSA', 'Example', '–', 'cont', '…'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('RSA', 'PROPN'), ('Example', 'NOUN'), ('–', 'PUNCT'), ('cont', 'NOUN'), ('…', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('RSA', 'NNP'), ('Example', 'NN'), ('–', ':'), ('cont', 'NN'), ('…', ':')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('RSA', 'RSA'), ('Example', 'example'), ('–', '-'), ('cont', 'cont'), ('…', '…')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-4', 'Unit'), 'dep'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('RSA', 'Example'), 'compound'), (('Example', 'Institute'), 'nmod'), (('–', 'cont'), 'punct'), (('cont', 'Example'), 'appos'), (('…', 'Unit'), 'punct')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 33 ===========================

 Encryption: C = Me mod n For message M = 6 C = 65 mod 133 C = 7776 mod 33 C = 62 PU = { e, n } , PU = { 5, 133 } Decryption: M = Cd mod n For C = 62 M = 6265 mod 133 M = 2666 mod 33 M = 6 PR = { d, n } , PU = { 65, 133 }  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Example P and Q are two prime numbers. 

Tokens are: 
>> ['Encryption', ':', 'C', '=', 'Me', 'mod', 'n', 'For', 'message', 'M', '=', '6', 'C', '=', '65', 'mod', '133', 'C', '=', '7776', 'mod', '33', 'C', '=', '62', 'PU', '=', '{', 'e', ',', 'n', '}', ',', 'PU', '=', '{', '5', ',', '133', '}', 'Decryption', ':', 'M', '=', 'Cd', 'mod', 'n', 'For', 'C', '=', '62', 'M', '=', '6265', 'mod', '133', 'M', '=', '2666', 'mod', '33', 'M', '=', '6', 'PR', '=', '{', 'd', ',', 'n', '}', ',', 'PU', '=', '{', '65', ',', '133', '}', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'RSA', 'Example', 'P', 'and', 'Q', 'are', 'two', 'prime', 'numbers', '.'] 

 UPOS tags are: 
>> [('Encryption', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('=', 'SYM'), ('Me', 'PRON'), ('mod', 'NOUN'), ('n', 'NOUN'), ('For', 'ADP'), ('message', 'NOUN'), ('M', 'NOUN'), ('=', 'SYM'), ('6', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('65', 'NUM'), ('mod', 'NOUN'), ('133', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('7776', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('C', 'NOUN'), ('=', 'SYM'), ('62', 'NUM'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('e', 'NOUN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'SYM'), (',', 'PUNCT'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('5', 'NUM'), (',', 'PUNCT'), ('133', 'NUM'), ('}', 'PUNCT'), ('Decryption', 'NOUN'), (':', 'PUNCT'), ('M', 'NOUN'), ('=', 'SYM'), ('Cd', 'NOUN'), ('mod', 'NOUN'), ('n', 'NOUN'), ('For', 'ADP'), ('C', 'NOUN'), ('=', 'SYM'), ('62', 'NUM'), ('M', 'NOUN'), ('=', 'SYM'), ('6265', 'NUM'), ('mod', 'NOUN'), ('133', 'NUM'), ('M', 'NOUN'), ('=', 'SYM'), ('2666', 'NUM'), ('mod', 'NOUN'), ('33', 'NUM'), ('M', 'NOUN'), ('=', 'SYM'), ('6', 'NUM'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'PUNCT'), ('d', 'NOUN'), (',', 'PUNCT'), ('n', 'NOUN'), ('}', 'PUNCT'), (',', 'PUNCT'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('65', 'NUM'), (',', 'PUNCT'), ('133', 'NUM'), ('}', 'PUNCT'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('RSA', 'PROPN'), ('Example', 'NOUN'), ('P', 'NOUN'), ('and', 'CCONJ'), ('Q', 'PROPN'), ('are', 'AUX'), ('two', 'NUM'), ('prime', 'ADJ'), ('numbers', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Encryption', 'NN'), (':', ':'), ('C', 'NNP'), ('=', 'SYM'), ('Me', 'PRP'), ('mod', 'NN'), ('n', 'NN'), ('For', 'IN'), ('message', 'NN'), ('M', 'NN'), ('=', 'SYM'), ('6', 'CD'), ('C', 'NNS'), ('=', 'SYM'), ('65', 'CD'), ('mod', 'NN'), ('133', 'CD'), ('C', 'NNS'), ('=', 'SYM'), ('7776', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NNS'), ('=', 'SYM'), ('62', 'CD'), ('PU', 'NNS'), ('=', 'SYM'), ('{', 'SYM'), ('e', 'NN'), (',', ','), ('n', 'NN'), ('}', 'SYM'), (',', ','), ('PU', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('5', 'CD'), (',', ','), ('133', 'CD'), ('}', ':'), ('Decryption', 'NN'), (':', ':'), ('M', 'NN'), ('=', 'SYM'), ('Cd', 'NN'), ('mod', 'NN'), ('n', 'NN'), ('For', 'IN'), ('C', 'NN'), ('=', 'SYM'), ('62', 'CD'), ('M', 'NN'), ('=', 'SYM'), ('6265', 'CD'), ('mod', 'NN'), ('133', 'CD'), ('M', 'NNS'), ('=', 'SYM'), ('2666', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNS'), ('=', 'SYM'), ('6', 'CD'), ('PR', 'NN'), ('=', 'SYM'), ('{', '-LRB-'), ('d', 'NN'), (',', ','), ('n', 'NN'), ('}', ','), (',', ','), ('PU', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('65', 'CD'), (',', ','), ('133', 'CD'), ('}', ','), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('RSA', 'NNP'), ('Example', 'NN'), ('P', 'NN'), ('and', 'CC'), ('Q', 'NNP'), ('are', 'VBP'), ('two', 'CD'), ('prime', 'JJ'), ('numbers', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Encryption', 'encryption'), (':', ':'), ('C', 'C'), ('=', '='), ('Me', 'I'), ('mod', 'mod'), ('n', 'n'), ('For', 'for'), ('message', 'message'), ('M', 'm'), ('=', '='), ('6', '6'), ('C', 'c'), ('=', '='), ('65', '65'), ('mod', 'mod'), ('133', '133'), ('C', 'c'), ('=', '='), ('7776', '7776'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('62', '62'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Decryption', 'decryption'), (':', ':'), ('M', 'm'), ('=', '='), ('Cd', 'Cd'), ('mod', 'mod'), ('n', 'n'), ('For', 'for'), ('C', 'c'), ('=', '='), ('62', '62'), ('M', 'm'), ('=', '='), ('6265', '6265'), ('mod', 'mod'), ('133', '133'), ('M', 'm'), ('=', '='), ('2666', '2666'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('6', '6'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('d', 'd'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('RSA', 'RSA'), ('Example', 'example'), ('P', 'p'), ('and', 'and'), ('Q', 'Q'), ('are', 'be'), ('two', 'two'), ('prime', 'prime'), ('numbers', 'number'), ('.', '.')] 

 Dependency tags are: 
>> [(('Encryption', 'root'), 'root'), ((':', 'Encryption'), 'punct'), (('C', '='), 'nsubj'), (('=', 'Encryption'), 'appos'), (('Me', '='), 'obj'), (('mod', 'n'), 'compound'), (('n', '='), 'obj'), (('For', 'M'), 'case'), (('message', 'M'), 'compound'), (('M', 'n'), 'nmod'), (('=', '='), 'conj'), (('6', 'C'), 'nummod'), (('C', '='), 'obj'), (('=', '='), 'conj'), (('65', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('133', 'C'), 'nummod'), (('C', '='), 'nsubj'), (('=', '='), 'conj'), (('7776', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('33', 'C'), 'nummod'), (('C', '='), 'nsubj'), (('=', '='), 'conj'), (('62', 'PU'), 'nummod'), (('PU', '='), 'nsubj'), (('=', '='), 'parataxis'), (('{', '='), 'obj'), (('e', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'e'), 'conj'), (('}', 'e'), 'conj'), ((',', '='), 'punct'), (('PU', '='), 'nsubj'), (('=', '='), 'conj'), (('{', '='), 'obj'), (('5', '='), 'dep'), ((',', '133'), 'punct'), (('133', 'Decryption'), 'nummod'), (('}', 'Decryption'), 'punct'), (('Decryption', '='), 'dep'), ((':', 'Decryption'), 'punct'), (('M', '='), 'obj'), (('=', 'Decryption'), 'appos'), (('Cd', 'n'), 'compound'), (('mod', 'n'), 'compound'), (('n', '='), 'obj'), (('For', 'C'), 'case'), (('C', '='), 'obl'), (('=', '='), 'advcl'), (('62', 'M'), 'nummod'), (('M', '='), 'obj'), (('=', '='), 'parataxis'), (('6265', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('133', 'M'), 'nummod'), (('M', 'mod'), 'compound'), (('=', '='), 'conj'), (('2666', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('33', 'M'), 'nummod'), (('M', 'mod'), 'compound'), (('=', '='), 'conj'), (('6', 'PR'), 'nummod'), (('PR', '='), 'obj'), (('=', '='), 'conj'), (('{', 'd'), 'punct'), (('d', '='), 'obj'), ((',', 'n'), 'punct'), (('n', 'd'), 'conj'), (('}', 'd'), 'punct'), ((',', '='), 'punct'), (('PU', '='), 'nsubj'), (('=', 'd'), 'conj'), (('{', '='), 'obj'), (('65', '='), 'obj'), ((',', '133'), 'punct'), (('133', '65'), 'conj'), (('}', 'Unit'), 'punct'), (('Unit', 'Institute'), 'compound'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', '='), 'obj'), (('of', '‹#›'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('RSA', 'Example'), 'compound'), (('Example', 'P'), 'compound'), (('P', 'numbers'), 'nsubj'), (('and', 'numbers'), 'cc'), (('Q', 'numbers'), 'nsubj'), (('are', 'numbers'), 'cop'), (('two', 'numbers'), 'nummod'), (('prime', 'numbers'), 'amod'), (('numbers', '‹#›'), 'conj'), (('.', 'Encryption'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 34 ===========================

 P=7, and Q=17. 

Tokens are: 
>> ['P=7', ',', 'and', 'Q=17', '.'] 

 UPOS tags are: 
>> [('P=7', 'PROPN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Q=17', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('P=7', 'NNP'), (',', ','), ('and', 'CC'), ('Q=17', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('P=7', 'P=7'), (',', ','), ('and', 'and'), ('Q=17', 'q=17'), ('.', '.')] 

 Dependency tags are: 
>> [(('P=7', 'root'), 'root'), ((',', 'Q=17'), 'punct'), (('and', 'Q=17'), 'cc'), (('Q=17', 'P=7'), 'conj'), (('.', 'P=7'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 Take public key E=5. 

Tokens are: 
>> ['Take', 'public', 'key', 'E=5', '.'] 

 UPOS tags are: 
>> [('Take', 'VERB'), ('public', 'ADJ'), ('key', 'ADJ'), ('E=5', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Take', 'VB'), ('public', 'JJ'), ('key', 'JJ'), ('E=5', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Take', 'take'), ('public', 'public'), ('key', 'key'), ('E=5', 'E=5'), ('.', '.')] 

 Dependency tags are: 
>> [(('Take', 'root'), 'root'), (('public', 'E=5'), 'amod'), (('key', 'E=5'), 'amod'), (('E=5', 'Take'), 'obj'), (('.', 'Take'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 If plain text value is 10, then what will be cipher text value according to RSA algorithm? 

Tokens are: 
>> ['If', 'plain', 'text', 'value', 'is', '10', ',', 'then', 'what', 'will', 'be', 'cipher', 'text', 'value', 'according', 'to', 'RSA', 'algorithm', '?'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('plain', 'ADJ'), ('text', 'NOUN'), ('value', 'NOUN'), ('is', 'AUX'), ('10', 'NUM'), (',', 'PUNCT'), ('then', 'ADV'), ('what', 'PRON'), ('will', 'AUX'), ('be', 'AUX'), ('cipher', 'NOUN'), ('text', 'NOUN'), ('value', 'NOUN'), ('according', 'VERB'), ('to', 'ADP'), ('RSA', 'PROPN'), ('algorithm', 'NOUN'), ('?', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('plain', 'JJ'), ('text', 'NN'), ('value', 'NN'), ('is', 'VBZ'), ('10', 'CD'), (',', ','), ('then', 'RB'), ('what', 'WP'), ('will', 'MD'), ('be', 'VB'), ('cipher', 'NN'), ('text', 'NN'), ('value', 'NN'), ('according', 'VBG'), ('to', 'IN'), ('RSA', 'NNP'), ('algorithm', 'NN'), ('?', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('plain', 'plain'), ('text', 'text'), ('value', 'value'), ('is', 'be'), ('10', '10'), (',', ','), ('then', 'then'), ('what', 'what'), ('will', 'will'), ('be', 'be'), ('cipher', 'cipher'), ('text', 'text'), ('value', 'value'), ('according', 'accord'), ('to', 'to'), ('RSA', 'RSA'), ('algorithm', 'algorithm'), ('?', '?')] 

 Dependency tags are: 
>> [(('If', '10'), 'mark'), (('plain', 'value'), 'amod'), (('text', 'value'), 'compound'), (('value', '10'), 'nsubj'), (('is', '10'), 'cop'), (('10', 'value'), 'advcl'), ((',', '10'), 'punct'), (('then', 'value'), 'advmod'), (('what', 'value'), 'nsubj'), (('will', 'value'), 'aux'), (('be', 'value'), 'cop'), (('cipher', 'value'), 'compound'), (('text', 'value'), 'compound'), (('value', 'root'), 'root'), (('according', 'algorithm'), 'case'), (('to', 'according'), 'fixed'), (('RSA', 'algorithm'), 'compound'), (('algorithm', 'value'), 'nmod'), (('?', 'value'), 'punct')]

 Named Entities are: 
>> [('10', 'CARDINAL'), ('RSA', 'ORG')]

========================== Sentence 37 ===========================

 n = 119 φ(n) = 96 e = 5 d = 77 PU = { 5, 119 } PR = {77, 119} C = 105 mod 119 => C = 40   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman key Exchange 

Tokens are: 
>> ['n', '=', '119', 'φ(', 'n', ')', '=', '96', 'e', '=', '5', 'd', '=', '77', 'PU', '=', '{', '5', ',', '119', '}', 'PR', '=', '{', '77', ',', '119', '}', 'C', '=', '105', 'mod', '119', '=>', 'C', '=', '40', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'key', 'Exchange'] 

 UPOS tags are: 
>> [('n', 'PROPN'), ('=', 'SYM'), ('119', 'NUM'), ('φ(', 'SYM'), ('n', 'NOUN'), (')', 'PUNCT'), ('=', 'SYM'), ('96', 'NUM'), ('e', 'NOUN'), ('=', 'SYM'), ('5', 'NUM'), ('d', 'NOUN'), ('=', 'SYM'), ('77', 'NUM'), ('PU', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('5', 'NUM'), (',', 'PUNCT'), ('119', 'NUM'), ('}', 'SYM'), ('PR', 'NOUN'), ('=', 'SYM'), ('{', 'SYM'), ('77', 'NUM'), (',', 'PUNCT'), ('119', 'NUM'), ('}', 'SYM'), ('C', 'NOUN'), ('=', 'SYM'), ('105', 'NUM'), ('mod', 'NOUN'), ('119', 'NUM'), ('=>', 'SYM'), ('C', 'NOUN'), ('=', 'SYM'), ('40', 'NUM'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Diffie-Hellman', 'ADJ'), ('key', 'ADJ'), ('Exchange', 'PROPN')] 

 XPOS tags are: 
>> [('n', 'NNP'), ('=', 'SYM'), ('119', 'CD'), ('φ(', 'SYM'), ('n', 'NN'), (')', '-RRB-'), ('=', 'SYM'), ('96', 'CD'), ('e', 'NN'), ('=', 'SYM'), ('5', 'CD'), ('d', 'NN'), ('=', 'SYM'), ('77', 'CD'), ('PU', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('5', 'CD'), (',', ','), ('119', 'CD'), ('}', 'SYM'), ('PR', 'NN'), ('=', 'SYM'), ('{', 'SYM'), ('77', 'CD'), (',', ','), ('119', 'CD'), ('}', 'SYM'), ('C', 'NN'), ('=', 'SYM'), ('105', 'CD'), ('mod', 'NN'), ('119', 'CD'), ('=>', 'SYM'), ('C', 'NN'), ('=', 'SYM'), ('40', 'CD'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Diffie-Hellman', 'JJ'), ('key', 'JJ'), ('Exchange', 'NNP')] 

 Lemmas are: 
>> [('n', 'n'), ('=', '='), ('119', '119'), ('φ(', 'φ('), ('n', 'n'), (')', ')'), ('=', '='), ('96', '96'), ('e', 'e'), ('=', '='), ('5', '5'), ('d', 'd'), ('=', '='), ('77', '77'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('119', '119'), ('}', '}'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('77', '77'), (',', ','), ('119', '119'), ('}', '}'), ('C', 'c'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('119', '119'), ('=>', '=>'), ('C', 'c'), ('=', '='), ('40', '40'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('key', 'key'), ('Exchange', 'Exchange')] 

 Dependency tags are: 
>> [(('n', '='), 'nsubj'), (('=', '='), 'advcl'), (('119', 'n'), 'nummod'), (('φ(', 'n'), 'nummod'), (('n', '='), 'obj'), ((')', '='), 'punct'), (('=', 'root'), 'root'), (('96', 'e'), 'nummod'), (('e', '='), 'obj'), (('=', '='), 'xcomp'), (('5', 'd'), 'nummod'), (('d', '='), 'nsubj'), (('=', '='), 'xcomp'), (('77', 'PU'), 'nummod'), (('PU', '='), 'nsubj'), (('=', '='), 'ccomp'), (('{', '5'), 'compound'), (('5', '='), 'obj'), ((',', '119'), 'punct'), (('119', '5'), 'conj'), (('}', 'PR'), 'nummod'), (('PR', '='), 'nsubj'), (('=', '='), 'conj'), (('{', '77'), 'advmod'), (('77', '='), 'nummod'), ((',', '119'), 'punct'), (('119', 'C'), 'nummod'), (('}', 'C'), 'nummod'), (('C', '='), 'nsubj'), (('=', '='), 'parataxis'), (('105', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('119', 'mod'), 'nummod'), (('=>', 'C'), 'case'), (('C', 'mod'), 'appos'), (('=', '='), 'conj'), (('40', 'Unit'), 'nummod'), (('Unit', '='), 'obj'), (('-4', 'Unit'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', '='), 'obj'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Exchange'), 'compound'), (('Diffie-Hellman', 'Exchange'), 'amod'), (('key', 'Exchange'), 'amod'), (('Exchange', 'Institute'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 38 ===========================

 The purpose of the Diffie-Hellman algorithm is to enable two users to securely exchange a key that can be used for subsequent encryption of message. 

Tokens are: 
>> ['The', 'purpose', 'of', 'the', 'Diffie-Hellman', 'algorithm', 'is', 'to', 'enable', 'two', 'users', 'to', 'securely', 'exchange', 'a', 'key', 'that', 'can', 'be', 'used', 'for', 'subsequent', 'encryption', 'of', 'message', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('purpose', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('Diffie-Hellman', 'ADJ'), ('algorithm', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('enable', 'VERB'), ('two', 'NUM'), ('users', 'NOUN'), ('to', 'PART'), ('securely', 'ADV'), ('exchange', 'VERB'), ('a', 'DET'), ('key', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('subsequent', 'ADJ'), ('encryption', 'NOUN'), ('of', 'ADP'), ('message', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('purpose', 'NN'), ('of', 'IN'), ('the', 'DT'), ('Diffie-Hellman', 'JJ'), ('algorithm', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('enable', 'VB'), ('two', 'CD'), ('users', 'NNS'), ('to', 'TO'), ('securely', 'RB'), ('exchange', 'VB'), ('a', 'DT'), ('key', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('for', 'IN'), ('subsequent', 'JJ'), ('encryption', 'NN'), ('of', 'IN'), ('message', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('purpose', 'purpose'), ('of', 'of'), ('the', 'the'), ('Diffie-Hellman', 'diffie-hellman'), ('algorithm', 'algorithm'), ('is', 'be'), ('to', 'to'), ('enable', 'enable'), ('two', 'two'), ('users', 'user'), ('to', 'to'), ('securely', 'securely'), ('exchange', 'exchange'), ('a', 'a'), ('key', 'key'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('used', 'use'), ('for', 'for'), ('subsequent', 'subsequent'), ('encryption', 'encryption'), ('of', 'of'), ('message', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'purpose'), 'det'), (('purpose', 'enable'), 'nsubj'), (('of', 'algorithm'), 'case'), (('the', 'algorithm'), 'det'), (('Diffie-Hellman', 'algorithm'), 'amod'), (('algorithm', 'purpose'), 'nmod'), (('is', 'enable'), 'cop'), (('to', 'enable'), 'mark'), (('enable', 'root'), 'root'), (('two', 'users'), 'nummod'), (('users', 'enable'), 'obj'), (('to', 'exchange'), 'mark'), (('securely', 'exchange'), 'advmod'), (('exchange', 'enable'), 'xcomp'), (('a', 'key'), 'det'), (('key', 'exchange'), 'obj'), (('that', 'used'), 'nsubj:pass'), (('can', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'key'), 'acl:relcl'), (('for', 'encryption'), 'case'), (('subsequent', 'encryption'), 'amod'), (('encryption', 'used'), 'obl'), (('of', 'message'), 'case'), (('message', 'encryption'), 'nmod'), (('.', 'enable'), 'punct')]

 Named Entities are: 
>> [('Diffie-Hellman', 'PRODUCT'), ('two', 'CARDINAL')]

========================== Sentence 39 ===========================

 This algorithm depends for its effectiveness on the difficulty of computing discrete logarithms. 

Tokens are: 
>> ['This', 'algorithm', 'depends', 'for', 'its', 'effectiveness', 'on', 'the', 'difficulty', 'of', 'computing', 'discrete', 'logarithms', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('algorithm', 'NOUN'), ('depends', 'VERB'), ('for', 'ADP'), ('its', 'PRON'), ('effectiveness', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('difficulty', 'NOUN'), ('of', 'SCONJ'), ('computing', 'VERB'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('algorithm', 'NN'), ('depends', 'VBZ'), ('for', 'IN'), ('its', 'PRP$'), ('effectiveness', 'NN'), ('on', 'IN'), ('the', 'DT'), ('difficulty', 'NN'), ('of', 'IN'), ('computing', 'VBG'), ('discrete', 'JJ'), ('logarithms', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('algorithm', 'algorithm'), ('depends', 'depend'), ('for', 'for'), ('its', 'its'), ('effectiveness', 'effectiveness'), ('on', 'on'), ('the', 'the'), ('difficulty', 'difficulty'), ('of', 'of'), ('computing', 'computing'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'algorithm'), 'det'), (('algorithm', 'depends'), 'nsubj'), (('depends', 'root'), 'root'), (('for', 'effectiveness'), 'case'), (('its', 'effectiveness'), 'nmod:poss'), (('effectiveness', 'depends'), 'obl'), (('on', 'difficulty'), 'case'), (('the', 'difficulty'), 'det'), (('difficulty', 'effectiveness'), 'nmod'), (('of', 'computing'), 'mark'), (('computing', 'difficulty'), 'acl'), (('discrete', 'logarithms'), 'amod'), (('logarithms', 'computing'), 'obj'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Primitive root 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Primitive', 'root'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'ADJ'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Primitive', 'ADJ'), ('root', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'JJ'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Primitive', 'JJ'), ('root', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Primitive', 'primitive'), ('root', 'root')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-4', 'Unit'), 'nummod'), (('Asymmertic', 'Institute'), 'amod'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'root'), 'case'), (('Engineering', 'root'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'root'), 'compound'), (('Primitive', 'root'), 'amod'), (('root', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 41 ===========================

 Let  be a prime number 

Tokens are: 
>> ['Let', 'be', 'a', 'prime', 'number'] 

 UPOS tags are: 
>> [('Let', 'VERB'), ('be', 'AUX'), ('a', 'DET'), ('prime', 'ADJ'), ('number', 'NOUN')] 

 XPOS tags are: 
>> [('Let', 'VB'), ('be', 'VB'), ('a', 'DT'), ('prime', 'JJ'), ('number', 'NN')] 

 Lemmas are: 
>> [('Let', 'let'), ('be', 'be'), ('a', 'a'), ('prime', 'prime'), ('number', 'number')] 

 Dependency tags are: 
>> [(('Let', 'root'), 'root'), (('be', 'Let'), 'cop'), (('a', 'number'), 'det'), (('prime', 'number'), 'amod'), (('number', 'Let'), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 42 ===========================

 Then  is a primitive root for , if the powers of  modulo  generates all integers from 1 to  – 1 in some permutation. 

Tokens are: 
>> ['Then', 'is', 'a', 'primitive', 'root', 'for', ',', 'if', 'the', 'powers', 'of', 'modulo', 'generates', 'all', 'integers', 'from', '1', 'to', '–', '1', 'in', 'some', 'permutation', '.'] 

 UPOS tags are: 
>> [('Then', 'ADV'), ('is', 'AUX'), ('a', 'DET'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('for', 'ADP'), (',', 'PUNCT'), ('if', 'SCONJ'), ('the', 'DET'), ('powers', 'NOUN'), ('of', 'ADP'), ('modulo', 'NOUN'), ('generates', 'VERB'), ('all', 'DET'), ('integers', 'NOUN'), ('from', 'ADP'), ('1', 'NUM'), ('to', 'ADP'), ('–', 'SYM'), ('1', 'NUM'), ('in', 'ADP'), ('some', 'DET'), ('permutation', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Then', 'RB'), ('is', 'VBZ'), ('a', 'DT'), ('primitive', 'JJ'), ('root', 'NN'), ('for', 'IN'), (',', ','), ('if', 'IN'), ('the', 'DT'), ('powers', 'NNS'), ('of', 'IN'), ('modulo', 'NN'), ('generates', 'VBZ'), ('all', 'DT'), ('integers', 'NNS'), ('from', 'IN'), ('1', 'CD'), ('to', 'IN'), ('–', 'SYM'), ('1', 'CD'), ('in', 'IN'), ('some', 'DT'), ('permutation', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Then', 'then'), ('is', 'be'), ('a', 'a'), ('primitive', 'primitive'), ('root', 'root'), ('for', 'for'), (',', ','), ('if', 'if'), ('the', 'the'), ('powers', 'power'), ('of', 'of'), ('modulo', 'modulo'), ('generates', 'generate'), ('all', 'all'), ('integers', 'integer'), ('from', 'from'), ('1', '1'), ('to', 'to'), ('–', '-'), ('1', '1'), ('in', 'in'), ('some', 'some'), ('permutation', 'permutation'), ('.', '.')] 

 Dependency tags are: 
>> [(('Then', 'generates'), 'advmod'), (('is', 'root'), 'cop'), (('a', 'root'), 'det'), (('primitive', 'root'), 'amod'), (('root', 'root'), 'root'), (('for', 'generates'), 'mark'), ((',', 'generates'), 'punct'), (('if', 'generates'), 'mark'), (('the', 'powers'), 'det'), (('powers', 'generates'), 'nsubj'), (('of', 'modulo'), 'case'), (('modulo', 'powers'), 'nmod'), (('generates', 'root'), 'acl'), (('all', 'integers'), 'det'), (('integers', 'generates'), 'obj'), (('from', '1'), 'case'), (('1', 'integers'), 'nmod'), (('to', '1'), 'case'), (('–', '1'), 'case'), (('1', '1'), 'nmod'), (('in', 'permutation'), 'case'), (('some', 'permutation'), 'det'), (('permutation', 'generates'), 'obl'), (('.', 'root'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 43 ===========================

 Example: p = 7 then primitive root is 3 because powers of 3 mod 7 generates all the integers from 1 to 6          Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Discrete Logarithm 

Tokens are: 
>> ['Example', ':', 'p', '=', '7', 'then', 'primitive', 'root', 'is', '3', 'because', 'powers', 'of', '3', 'mod', '7', 'generates', 'all', 'the', 'integers', 'from', '1', 'to', '6', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Discrete', 'Logarithm'] 

 UPOS tags are: 
>> [('Example', 'NOUN'), (':', 'PUNCT'), ('p', 'NOUN'), ('=', 'SYM'), ('7', 'NUM'), ('then', 'ADV'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('is', 'AUX'), ('3', 'NUM'), ('because', 'SCONJ'), ('powers', 'NOUN'), ('of', 'ADP'), ('3', 'NUM'), ('mod', 'NOUN'), ('7', 'NUM'), ('generates', 'VERB'), ('all', 'DET'), ('the', 'DET'), ('integers', 'NOUN'), ('from', 'ADP'), ('1', 'NUM'), ('to', 'ADP'), ('6', 'NUM'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'ADJ'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Discrete', 'ADJ'), ('Logarithm', 'NOUN')] 

 XPOS tags are: 
>> [('Example', 'NN'), (':', ':'), ('p', 'NN'), ('=', 'SYM'), ('7', 'CD'), ('then', 'RB'), ('primitive', 'JJ'), ('root', 'NN'), ('is', 'VBZ'), ('3', 'CD'), ('because', 'IN'), ('powers', 'NNS'), ('of', 'IN'), ('3', 'CD'), ('mod', 'NN'), ('7', 'CD'), ('generates', 'VBZ'), ('all', 'PDT'), ('the', 'DT'), ('integers', 'NNS'), ('from', 'IN'), ('1', 'CD'), ('to', 'IN'), ('6', 'CD'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'JJ'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Discrete', 'JJ'), ('Logarithm', 'NN')] 

 Lemmas are: 
>> [('Example', 'example'), (':', ':'), ('p', 'p'), ('=', '='), ('7', '7'), ('then', 'then'), ('primitive', 'primitive'), ('root', 'root'), ('is', 'be'), ('3', '3'), ('because', 'because'), ('powers', 'power'), ('of', 'of'), ('3', '3'), ('mod', 'mod'), ('7', '7'), ('generates', 'generate'), ('all', 'all'), ('the', 'the'), ('integers', 'integer'), ('from', 'from'), ('1', '1'), ('to', 'to'), ('6', '6'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Discrete', 'Discrete'), ('Logarithm', 'logarithm')] 

 Dependency tags are: 
>> [(('Example', 'root'), 'root'), ((':', 'Example'), 'punct'), (('p', '='), 'nsubj'), (('=', 'Example'), 'appos'), (('7', '='), 'obj'), (('then', '3'), 'advmod'), (('primitive', 'root'), 'amod'), (('root', '3'), 'nsubj'), (('is', '3'), 'cop'), (('3', 'Example'), 'appos'), (('because', 'generates'), 'mark'), (('powers', 'generates'), 'nsubj'), (('of', 'mod'), 'case'), (('3', 'mod'), 'nummod'), (('mod', 'powers'), 'nmod'), (('7', 'mod'), 'nummod'), (('generates', '3'), 'advcl'), (('all', 'integers'), 'det:predet'), (('the', 'integers'), 'det'), (('integers', 'generates'), 'obj'), (('from', 'Unit'), 'case'), (('1', 'Unit'), 'nummod'), (('to', '6'), 'case'), (('6', '1'), 'nmod'), (('Unit', 'integers'), 'nmod'), (('-4', 'Ciphers'), 'nummod'), (('Asymmertic', 'Institute'), 'amod'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'integers'), 'nmod'), (('of', 'Logarithm'), 'case'), (('Engineering', 'Logarithm'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Logarithm'), 'compound'), (('Discrete', 'Logarithm'), 'amod'), (('Logarithm', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('7', 'CARDINAL'), ('3', 'CARDINAL'), ('3', 'CARDINAL'), ('7', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 44 ===========================

 For any integer  and a primitive root  of prime number , we can find a unique exponent  such that  The exponent  is referred as the discrete logarithm of  for the base , mod . 

Tokens are: 
>> ['For', 'any', 'integer', 'and', 'a', 'primitive', 'root', 'of', 'prime', 'number', ',', 'we', 'can', 'find', 'a', 'unique', 'exponent', 'such', 'that', 'The', 'exponent', 'is', 'referred', 'as', 'the', 'discrete', 'logarithm', 'of', 'for', 'the', 'base', ',', 'mod', '.'] 

 UPOS tags are: 
>> [('For', 'ADP'), ('any', 'DET'), ('integer', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('of', 'ADP'), ('prime', 'ADJ'), ('number', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('can', 'AUX'), ('find', 'VERB'), ('a', 'DET'), ('unique', 'ADJ'), ('exponent', 'NOUN'), ('such', 'ADJ'), ('that', 'SCONJ'), ('The', 'DET'), ('exponent', 'NOUN'), ('is', 'AUX'), ('referred', 'VERB'), ('as', 'ADP'), ('the', 'DET'), ('discrete', 'ADJ'), ('logarithm', 'NOUN'), ('of', 'ADP'), ('for', 'ADP'), ('the', 'DET'), ('base', 'NOUN'), (',', 'PUNCT'), ('mod', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('For', 'IN'), ('any', 'DT'), ('integer', 'NN'), ('and', 'CC'), ('a', 'DT'), ('primitive', 'JJ'), ('root', 'NN'), ('of', 'IN'), ('prime', 'JJ'), ('number', 'NN'), (',', ','), ('we', 'PRP'), ('can', 'MD'), ('find', 'VB'), ('a', 'DT'), ('unique', 'JJ'), ('exponent', 'NN'), ('such', 'JJ'), ('that', 'IN'), ('The', 'DT'), ('exponent', 'NN'), ('is', 'VBZ'), ('referred', 'VBN'), ('as', 'IN'), ('the', 'DT'), ('discrete', 'JJ'), ('logarithm', 'NN'), ('of', 'IN'), ('for', 'IN'), ('the', 'DT'), ('base', 'NN'), (',', ','), ('mod', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('For', 'for'), ('any', 'any'), ('integer', 'integer'), ('and', 'and'), ('a', 'a'), ('primitive', 'primitive'), ('root', 'root'), ('of', 'of'), ('prime', 'prime'), ('number', 'number'), (',', ','), ('we', 'we'), ('can', 'can'), ('find', 'find'), ('a', 'a'), ('unique', 'unique'), ('exponent', 'exponent'), ('such', 'such'), ('that', 'that'), ('The', 'the'), ('exponent', 'exponent'), ('is', 'be'), ('referred', 'refer'), ('as', 'as'), ('the', 'the'), ('discrete', 'discrete'), ('logarithm', 'logarithm'), ('of', 'of'), ('for', 'for'), ('the', 'the'), ('base', 'base'), (',', ','), ('mod', 'mod'), ('.', '.')] 

 Dependency tags are: 
>> [(('For', 'integer'), 'case'), (('any', 'integer'), 'det'), (('integer', 'find'), 'obl'), (('and', 'root'), 'cc'), (('a', 'root'), 'det'), (('primitive', 'root'), 'amod'), (('root', 'integer'), 'conj'), (('of', 'number'), 'case'), (('prime', 'number'), 'amod'), (('number', 'root'), 'nmod'), ((',', 'find'), 'punct'), (('we', 'find'), 'nsubj'), (('can', 'find'), 'aux'), (('find', 'root'), 'root'), (('a', 'exponent'), 'det'), (('unique', 'exponent'), 'amod'), (('exponent', 'find'), 'obj'), (('such', 'referred'), 'mark'), (('that', 'such'), 'fixed'), (('The', 'exponent'), 'det'), (('exponent', 'referred'), 'nsubj:pass'), (('is', 'referred'), 'aux:pass'), (('referred', 'exponent'), 'acl'), (('as', 'logarithm'), 'case'), (('the', 'logarithm'), 'det'), (('discrete', 'logarithm'), 'amod'), (('logarithm', 'referred'), 'obl'), (('of', 'base'), 'case'), (('for', 'base'), 'case'), (('the', 'base'), 'det'), (('base', 'logarithm'), 'nmod'), ((',', 'mod'), 'punct'), (('mod', 'logarithm'), 'nmod'), (('.', 'find'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 It expressed as below. 

Tokens are: 
>> ['It', 'expressed', 'as', 'below', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('expressed', 'VERB'), ('as', 'ADV'), ('below', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('expressed', 'VBD'), ('as', 'RB'), ('below', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('expressed', 'express'), ('as', 'as'), ('below', 'below'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'expressed'), 'nsubj'), (('expressed', 'root'), 'root'), (('as', 'below'), 'advmod'), (('below', 'expressed'), 'advmod'), (('.', 'expressed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 46 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… User A and User B agree on two large prime numbers q and α. 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont', '…', 'User', 'A', 'and', 'User', 'B', 'agree', 'on', 'two', 'large', 'prime', 'numbers', 'q', 'and', 'α.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Diffie-Hellman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('–', 'PUNCT'), ('Cont', 'NOUN'), ('…', 'PUNCT'), ('User', 'NOUN'), ('A', 'NOUN'), ('and', 'CCONJ'), ('User', 'NOUN'), ('B', 'NOUN'), ('agree', 'VERB'), ('on', 'ADP'), ('two', 'NUM'), ('large', 'ADJ'), ('prime', 'ADJ'), ('numbers', 'NOUN'), ('q', 'PUNCT'), ('and', 'CCONJ'), ('α.', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Diffie-Hellman', 'JJ'), ('Key', 'JJ'), ('Exchange', 'NNP'), ('–', ':'), ('Cont', 'NN'), ('…', ':'), ('User', 'NN'), ('A', 'NN'), ('and', 'CC'), ('User', 'NN'), ('B', 'NN'), ('agree', 'VBP'), ('on', 'IN'), ('two', 'CD'), ('large', 'JJ'), ('prime', 'JJ'), ('numbers', 'NNS'), ('q', ','), ('and', 'CC'), ('α.', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('–', '-'), ('Cont', 'cont'), ('…', '…'), ('User', 'user'), ('A', 'a'), ('and', 'and'), ('User', 'user'), ('B', 'b'), ('agree', 'agree'), ('on', 'on'), ('two', 'two'), ('large', 'large'), ('prime', 'prime'), ('numbers', 'number'), ('q', 'q'), ('and', 'and'), ('α.', 'α.')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-4', 'Unit'), 'dep'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('Diffie-Hellman', 'Exchange'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'Institute'), 'nmod'), (('–', 'Exchange'), 'punct'), (('Cont', 'Exchange'), 'appos'), (('…', 'Cont'), 'punct'), (('User', 'A'), 'compound'), (('A', 'Exchange'), 'appos'), (('and', 'B'), 'cc'), (('User', 'B'), 'compound'), (('B', 'A'), 'conj'), (('agree', 'Unit'), 'parataxis'), (('on', 'numbers'), 'case'), (('two', 'numbers'), 'nummod'), (('large', 'numbers'), 'amod'), (('prime', 'numbers'), 'amod'), (('numbers', 'agree'), 'obl'), (('q', 'agree'), 'punct'), (('and', 'α.'), 'cc'), (('α.', 'numbers'), 'conj')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('two', 'CARDINAL')]

========================== Sentence 47 ===========================

 User A and User B can use insecure channel to agree on them. 

Tokens are: 
>> ['User', 'A', 'and', 'User', 'B', 'can', 'use', 'insecure', 'channel', 'to', 'agree', 'on', 'them', '.'] 

 UPOS tags are: 
>> [('User', 'NOUN'), ('A', 'DET'), ('and', 'CCONJ'), ('User', 'NOUN'), ('B', 'NOUN'), ('can', 'AUX'), ('use', 'VERB'), ('insecure', 'ADJ'), ('channel', 'NOUN'), ('to', 'PART'), ('agree', 'VERB'), ('on', 'ADP'), ('them', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('User', 'NN'), ('A', 'DT'), ('and', 'CC'), ('User', 'NN'), ('B', 'NN'), ('can', 'MD'), ('use', 'VB'), ('insecure', 'JJ'), ('channel', 'NN'), ('to', 'TO'), ('agree', 'VB'), ('on', 'IN'), ('them', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('User', 'user'), ('A', 'a'), ('and', 'and'), ('User', 'user'), ('B', 'b'), ('can', 'can'), ('use', 'use'), ('insecure', 'insecure'), ('channel', 'channel'), ('to', 'to'), ('agree', 'agree'), ('on', 'on'), ('them', 'they'), ('.', '.')] 

 Dependency tags are: 
>> [(('User', 'B'), 'compound'), (('A', 'B'), 'det'), (('and', 'User'), 'cc'), (('User', 'A'), 'conj'), (('B', 'use'), 'nsubj'), (('can', 'use'), 'aux'), (('use', 'root'), 'root'), (('insecure', 'channel'), 'amod'), (('channel', 'use'), 'obj'), (('to', 'agree'), 'mark'), (('agree', 'use'), 'advcl'), (('on', 'them'), 'case'), (('them', 'agree'), 'obl'), (('.', 'use'), 'punct')]

 Named Entities are: 
>> [('User B', 'PRODUCT')]

========================== Sentence 48 ===========================

 User A selects a random integer  and calculates   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… Global Public Elements                                                             prime number                                                             <  and  is primitive root of  User A Key Generation             Select private                                   Calculate public                   User B Key Generation             Select private                                   Calculate public                    Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… User A Key Generation             Select private                                   Calculate public                  User B Key Generation             Select private                                   Calculate public                  Calculation of Secret Key by User A              Calculation of Secret Key by User b                 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… User A Key Generation Private            ,                    Public             User B Key Generation Private           ,                    Public             Secret Key by User A :  Secret Key by User B :                       Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›     Diffie-Hellman Key Exchange Example Alice and bob agrees on a prime number   as primitive root of  Alice selects a private integer   Alice computes  => 

Tokens are: 
>> ['User', 'A', 'selects', 'a', 'random', 'integer', 'and', 'calculates', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont', '…', 'Global', 'Public', 'Elements', 'prime', 'number', '<', 'and', 'is', 'primitive', 'root', 'of', 'User', 'A', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'User', 'B', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont', '…', 'User', 'A', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'User', 'B', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'Calculation', 'of', 'Secret', 'Key', 'by', 'User', 'A', 'Calculation', 'of', 'Secret', 'Key', 'by', 'User', 'b', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont', '…', 'User', 'A', 'Key', 'Generation', 'Private', ',', 'Public', 'User', 'B', 'Key', 'Generation', 'Private', ',', 'Public', 'Secret', 'Key', 'by', 'User', 'A', ':', 'Secret', 'Key', 'by', 'User', 'B', ':', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'Key', 'Exchange', 'Example', 'Alice', 'and', 'bob', 'agrees', 'on', 'a', 'prime', 'number', 'as', 'primitive', 'root', 'of', 'Alice', 'selects', 'a', 'private', 'integer', 'Alice', 'computes', '=>'] 

 UPOS tags are: 
>> [('User', 'NOUN'), ('A', 'PROPN'), ('selects', 'VERB'), ('a', 'DET'), ('random', 'ADJ'), ('integer', 'NOUN'), ('and', 'CCONJ'), ('calculates', 'VERB'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Diffie-Hellman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('–', 'PUNCT'), ('Cont', 'PROPN'), ('…', 'PUNCT'), ('Global', 'ADJ'), ('Public', 'ADJ'), ('Elements', 'PROPN'), ('prime', 'ADJ'), ('number', 'NOUN'), ('<', 'PUNCT'), ('and', 'CCONJ'), ('is', 'AUX'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('of', 'ADP'), ('User', 'NOUN'), ('A', 'DET'), ('Key', 'ADJ'), ('Generation', 'NOUN'), ('Select', 'ADJ'), ('private', 'ADJ'), ('Calculate', 'NOUN'), ('public', 'ADJ'), ('User', 'NOUN'), ('B', 'NOUN'), ('Key', 'ADJ'), ('Generation', 'NOUN'), ('Select', 'ADJ'), ('private', 'ADJ'), ('Calculate', 'NOUN'), ('public', 'ADJ'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PUNCT'), ('Diffie-Hellman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('–', 'PUNCT'), ('Cont', 'NOUN'), ('…', 'PUNCT'), ('User', 'NOUN'), ('A', 'DET'), ('Key', 'ADJ'), ('Generation', 'NOUN'), ('Select', 'ADJ'), ('private', 'ADJ'), ('Calculate', 'NOUN'), ('public', 'ADJ'), ('User', 'NOUN'), ('B', 'NOUN'), ('Key', 'ADJ'), ('Generation', 'NOUN'), ('Select', 'ADJ'), ('private', 'ADJ'), ('Calculate', 'NOUN'), ('public', 'ADJ'), ('Calculation', 'NOUN'), ('of', 'ADP'), ('Secret', 'ADJ'), ('Key', 'PROPN'), ('by', 'ADP'), ('User', 'NOUN'), ('A', 'DET'), ('Calculation', 'NOUN'), ('of', 'ADP'), ('Secret', 'ADJ'), ('Key', 'PROPN'), ('by', 'ADP'), ('User', 'NOUN'), ('b', 'NOUN'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('Diffie-Hellman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('–', 'PUNCT'), ('Cont', 'NOUN'), ('…', 'PUNCT'), ('User', 'NOUN'), ('A', 'DET'), ('Key', 'ADJ'), ('Generation', 'NOUN'), ('Private', 'ADJ'), (',', 'PUNCT'), ('Public', 'ADJ'), ('User', 'NOUN'), ('B', 'NOUN'), ('Key', 'ADJ'), ('Generation', 'NOUN'), ('Private', 'ADJ'), (',', 'PUNCT'), ('Public', 'ADJ'), ('Secret', 'ADJ'), ('Key', 'PROPN'), ('by', 'ADP'), ('User', 'NOUN'), ('A', 'NOUN'), (':', 'PUNCT'), ('Secret', 'ADJ'), ('Key', 'PROPN'), ('by', 'ADP'), ('User', 'NOUN'), ('B', 'NOUN'), (':', 'PUNCT'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Diffie-Hellman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('Example', 'PROPN'), ('Alice', 'PROPN'), ('and', 'CCONJ'), ('bob', 'PROPN'), ('agrees', 'VERB'), ('on', 'ADP'), ('a', 'DET'), ('prime', 'ADJ'), ('number', 'NOUN'), ('as', 'ADP'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('of', 'ADP'), ('Alice', 'PROPN'), ('selects', 'VERB'), ('a', 'DET'), ('private', 'ADJ'), ('integer', 'NOUN'), ('Alice', 'PROPN'), ('computes', 'VERB'), ('=>', 'PUNCT')] 

 XPOS tags are: 
>> [('User', 'NN'), ('A', 'NNP'), ('selects', 'VBZ'), ('a', 'DT'), ('random', 'JJ'), ('integer', 'NN'), ('and', 'CC'), ('calculates', 'VBZ'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('–', ':'), ('Cont', 'NNP'), ('…', ':'), ('Global', 'JJ'), ('Public', 'JJ'), ('Elements', 'NNPS'), ('prime', 'JJ'), ('number', 'NN'), ('<', '-LRB-'), ('and', 'CC'), ('is', 'VBZ'), ('primitive', 'JJ'), ('root', 'NN'), ('of', 'IN'), ('User', 'NN'), ('A', 'DT'), ('Key', 'JJ'), ('Generation', 'NN'), ('Select', 'JJ'), ('private', 'JJ'), ('Calculate', 'NN'), ('public', 'JJ'), ('User', 'NN'), ('B', 'NN'), ('Key', 'JJ'), ('Generation', 'NN'), ('Select', 'JJ'), ('private', 'JJ'), ('Calculate', 'NN'), ('public', 'JJ'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', ','), ('Diffie-Hellman', 'JJ'), ('Key', 'JJ'), ('Exchange', 'NNP'), ('–', ':'), ('Cont', 'NN'), ('…', ':'), ('User', 'NN'), ('A', 'DT'), ('Key', 'JJ'), ('Generation', 'NN'), ('Select', 'JJ'), ('private', 'JJ'), ('Calculate', 'NN'), ('public', 'JJ'), ('User', 'NN'), ('B', 'NN'), ('Key', 'JJ'), ('Generation', 'NN'), ('Select', 'JJ'), ('private', 'JJ'), ('Calculate', 'NN'), ('public', 'JJ'), ('Calculation', 'NN'), ('of', 'IN'), ('Secret', 'JJ'), ('Key', 'NNP'), ('by', 'IN'), ('User', 'NN'), ('A', 'DT'), ('Calculation', 'NN'), ('of', 'IN'), ('Secret', 'JJ'), ('Key', 'NNP'), ('by', 'IN'), ('User', 'NN'), ('b', 'NN'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('Diffie-Hellman', 'JJ'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('–', ':'), ('Cont', 'NN'), ('…', ':'), ('User', 'NN'), ('A', 'DT'), ('Key', 'JJ'), ('Generation', 'NN'), ('Private', 'JJ'), (',', ','), ('Public', 'JJ'), ('User', 'NN'), ('B', 'NN'), ('Key', 'JJ'), ('Generation', 'NN'), ('Private', 'JJ'), (',', ','), ('Public', 'JJ'), ('Secret', 'JJ'), ('Key', 'NNP'), ('by', 'IN'), ('User', 'NN'), ('A', 'NN'), (':', ':'), ('Secret', 'JJ'), ('Key', 'NNP'), ('by', 'IN'), ('User', 'NN'), ('B', 'NN'), (':', ':'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('Example', 'NNP'), ('Alice', 'NNP'), ('and', 'CC'), ('bob', 'NNP'), ('agrees', 'VBZ'), ('on', 'IN'), ('a', 'DT'), ('prime', 'JJ'), ('number', 'NN'), ('as', 'IN'), ('primitive', 'JJ'), ('root', 'NN'), ('of', 'IN'), ('Alice', 'NNP'), ('selects', 'VBZ'), ('a', 'DT'), ('private', 'JJ'), ('integer', 'NN'), ('Alice', 'NNP'), ('computes', 'VBZ'), ('=>', 'NFP')] 

 Lemmas are: 
>> [('User', 'user'), ('A', 'A'), ('selects', 'select'), ('a', 'a'), ('random', 'random'), ('integer', 'integer'), ('and', 'and'), ('calculates', 'calculate'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('–', '-'), ('Cont', 'Cont'), ('…', '…'), ('Global', 'global'), ('Public', 'Public'), ('Elements', 'element'), ('prime', 'prime'), ('number', 'number'), ('<', '<'), ('and', 'and'), ('is', 'be'), ('primitive', 'primitive'), ('root', 'root'), ('of', 'of'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'generation'), ('Select', 'select'), ('private', 'private'), ('Calculate', 'calculate'), ('public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'generation'), ('Select', 'select'), ('private', 'private'), ('Calculate', 'calculate'), ('public', 'public'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('–', '-'), ('Cont', 'cont'), ('…', '…'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'generation'), ('Select', 'select'), ('private', 'private'), ('Calculate', 'calculate'), ('public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'generation'), ('Select', 'select'), ('private', 'private'), ('Calculate', 'calculate'), ('public', 'public'), ('Calculation', 'calculation'), ('of', 'of'), ('Secret', 'Secret'), ('Key', 'Key'), ('by', 'by'), ('User', 'user'), ('A', 'a'), ('Calculation', 'calculation'), ('of', 'of'), ('Secret', 'Secret'), ('Key', 'Key'), ('by', 'by'), ('User', 'user'), ('b', 'b'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('–', '-'), ('Cont', 'cont'), ('…', '…'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'generation'), ('Private', 'private'), (',', ','), ('Public', 'Public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'generation'), ('Private', 'private'), (',', ','), ('Public', 'Public'), ('Secret', 'Secret'), ('Key', 'Key'), ('by', 'by'), ('User', 'user'), ('A', 'a'), (':', ':'), ('Secret', 'Secret'), ('Key', 'Key'), ('by', 'by'), ('User', 'user'), ('B', 'b'), (':', ':'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('Example', 'example'), ('Alice', 'Alice'), ('and', 'and'), ('bob', 'bob'), ('agrees', 'agree'), ('on', 'on'), ('a', 'a'), ('prime', 'prime'), ('number', 'number'), ('as', 'as'), ('primitive', 'primitive'), ('root', 'root'), ('of', 'of'), ('Alice', 'Alice'), ('selects', 'select'), ('a', 'a'), ('private', 'private'), ('integer', 'integer'), ('Alice', 'Alice'), ('computes', 'compute'), ('=>', '=>')] 

 Dependency tags are: 
>> [(('User', 'A'), 'compound'), (('A', 'selects'), 'nsubj'), (('selects', 'root'), 'root'), (('a', 'integer'), 'det'), (('random', 'integer'), 'amod'), (('integer', 'selects'), 'obj'), (('and', 'calculates'), 'cc'), (('calculates', 'selects'), 'conj'), (('Unit', 'Institute'), 'compound'), (('-4', 'Ciphers'), 'nummod'), (('Asymmertic', 'Ciphers'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'selects'), 'obj'), (('of', 'Exchange'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Exchange'), 'compound'), (('Diffie-Hellman', 'Exchange'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'Institute'), 'conj'), (('–', 'Exchange'), 'punct'), (('Cont', 'Exchange'), 'conj'), (('…', 'Exchange'), 'punct'), (('Global', 'Elements'), 'amod'), (('Public', 'Elements'), 'amod'), (('Elements', 'number'), 'compound'), (('prime', 'number'), 'amod'), (('number', 'Institute'), 'conj'), (('<', 'root'), 'punct'), (('and', 'root'), 'cc'), (('is', 'root'), 'cop'), (('primitive', 'root'), 'amod'), (('root', 'selects'), 'conj'), (('of', 'User'), 'case'), (('User', 'root'), 'nmod'), (('A', 'Generation'), 'det'), (('Key', 'Generation'), 'amod'), (('Generation', 'root'), 'nmod'), (('Select', 'Calculate'), 'amod'), (('private', 'Calculate'), 'amod'), (('Calculate', 'Generation'), 'compound'), (('public', 'B'), 'amod'), (('User', 'B'), 'compound'), (('B', 'Generation'), 'compound'), (('Key', 'Generation'), 'amod'), (('Generation', 'Unit'), 'compound'), (('Select', 'Unit'), 'amod'), (('private', 'Unit'), 'amod'), (('Calculate', 'Unit'), 'compound'), (('public', 'Unit'), 'amod'), (('Unit', 'selects'), 'parataxis'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Exchange'), 'punct'), (('Diffie-Hellman', 'Exchange'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'Institute'), 'conj'), (('–', 'Exchange'), 'punct'), (('Cont', 'selects'), 'dep'), (('…', 'User'), 'punct'), (('User', 'selects'), 'conj'), (('A', 'Generation'), 'det'), (('Key', 'Generation'), 'amod'), (('Generation', 'User'), 'compound'), (('Select', 'Calculate'), 'amod'), (('private', 'Calculate'), 'amod'), (('Calculate', 'B'), 'compound'), (('public', 'B'), 'amod'), (('User', 'B'), 'compound'), (('B', 'Generation'), 'compound'), (('Key', 'Generation'), 'amod'), (('Generation', 'selects'), 'conj'), (('Select', 'Calculate'), 'amod'), (('private', 'Calculate'), 'amod'), (('Calculate', 'Calculation'), 'compound'), (('public', 'Calculation'), 'amod'), (('Calculation', 'selects'), 'conj'), (('of', 'Key'), 'case'), (('Secret', 'Key'), 'amod'), (('Key', 'Calculation'), 'nmod'), (('by', 'User'), 'case'), (('User', 'Key'), 'nmod'), (('A', 'Calculation'), 'det'), (('Calculation', 'Calculation'), 'nmod'), (('of', 'Key'), 'case'), (('Secret', 'Key'), 'amod'), (('Key', 'Calculation'), 'nmod'), (('by', 'Unit'), 'case'), (('User', 'Unit'), 'compound'), (('b', 'Unit'), 'compound'), (('Unit', 'Calculation'), 'nmod'), (('-4', 'Institute'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Key'), 'conj'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Exchange'), 'compound'), (('Diffie-Hellman', 'Exchange'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'Institute'), 'nmod'), (('–', 'selects'), 'punct'), (('Cont', 'Exchange'), 'compound'), (('…', 'Cont'), 'punct'), (('User', 'Cont'), 'conj'), (('A', 'Generation'), 'det'), (('Key', 'Generation'), 'amod'), (('Generation', 'Private'), 'compound'), (('Private', 'User'), 'amod'), ((',', 'Generation'), 'punct'), (('Public', 'B'), 'amod'), (('User', 'B'), 'compound'), (('B', 'Generation'), 'compound'), (('Key', 'Generation'), 'amod'), (('Generation', 'Generation'), 'conj'), (('Private', 'Key'), 'amod'), ((',', 'Key'), 'punct'), (('Public', 'Key'), 'amod'), (('Secret', 'Key'), 'amod'), (('Key', 'Generation'), 'conj'), (('by', 'A'), 'case'), (('User', 'A'), 'compound'), (('A', 'Key'), 'nmod'), ((':', 'Key'), 'punct'), (('Secret', 'Key'), 'amod'), (('Key', 'Key'), 'appos'), (('by', 'B'), 'case'), (('User', 'B'), 'compound'), (('B', 'Key'), 'nmod'), ((':', 'Unit'), 'punct'), (('Unit', 'Institute'), 'compound'), (('-4', 'Unit'), 'nummod'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Key'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Example'), 'compound'), (('Diffie-Hellman', 'Example'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'Example'), 'compound'), (('Example', 'Institute'), 'nmod'), (('Alice', 'agrees'), 'nsubj'), (('and', 'agrees'), 'cc'), (('bob', 'agrees'), 'nsubj'), (('agrees', 'selects'), 'conj'), (('on', 'number'), 'case'), (('a', 'number'), 'det'), (('prime', 'number'), 'amod'), (('number', 'agrees'), 'obl'), (('as', 'root'), 'case'), (('primitive', 'root'), 'amod'), (('root', 'number'), 'nmod'), (('of', 'Alice'), 'case'), (('Alice', 'root'), 'nmod'), (('selects', 'agrees'), 'advcl'), (('a', 'integer'), 'det'), (('private', 'integer'), 'amod'), (('integer', 'selects'), 'obj'), (('Alice', 'computes'), 'nsubj'), (('computes', 'integer'), 'acl:relcl'), (('=>', 'selects'), 'punct')]

 Named Entities are: 
>> [('User A', 'ORG'), ('Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('A Key Generation             Select private                                   Calculate public                  User B Key Generation             Select private                                   Calculate public                  Calculation of Secret Key by User A              Calculation of Secret Key', 'WORK_OF_ART'), ('Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('Diffie-Hellman Key Exchange Example Alice', 'WORK_OF_ART'), ('Alice', 'PERSON'), ('Alice', 'PERSON')]

========================== Sentence 49 ===========================

 Bob selects a private integer   Bob computes  => 

Tokens are: 
>> ['Bob', 'selects', 'a', 'private', 'integer', 'Bob', 'computes', '=>'] 

 UPOS tags are: 
>> [('Bob', 'PROPN'), ('selects', 'VERB'), ('a', 'DET'), ('private', 'ADJ'), ('integer', 'NOUN'), ('Bob', 'PROPN'), ('computes', 'VERB'), ('=>', 'PUNCT')] 

 XPOS tags are: 
>> [('Bob', 'NNP'), ('selects', 'VBZ'), ('a', 'DT'), ('private', 'JJ'), ('integer', 'NN'), ('Bob', 'NNP'), ('computes', 'VBZ'), ('=>', 'NFP')] 

 Lemmas are: 
>> [('Bob', 'Bob'), ('selects', 'select'), ('a', 'a'), ('private', 'private'), ('integer', 'integer'), ('Bob', 'Bob'), ('computes', 'compute'), ('=>', '=>')] 

 Dependency tags are: 
>> [(('Bob', 'selects'), 'nsubj'), (('selects', 'root'), 'root'), (('a', 'integer'), 'det'), (('private', 'integer'), 'amod'), (('integer', 'selects'), 'obj'), (('Bob', 'computes'), 'nsubj'), (('computes', 'integer'), 'acl:relcl'), (('=>', 'selects'), 'punct')]

 Named Entities are: 
>> [('Bob', 'PERSON'), ('Bob', 'PERSON')]

========================== Sentence 50 ===========================

 Alice sends  to Bob and Bob sends  to Alice Alice computes key  => 

Tokens are: 
>> ['Alice', 'sends', 'to', 'Bob', 'and', 'Bob', 'sends', 'to', 'Alice', 'Alice', 'computes', 'key', '=>'] 

 UPOS tags are: 
>> [('Alice', 'PROPN'), ('sends', 'VERB'), ('to', 'ADP'), ('Bob', 'PROPN'), ('and', 'CCONJ'), ('Bob', 'PROPN'), ('sends', 'VERB'), ('to', 'ADP'), ('Alice', 'PROPN'), ('Alice', 'PROPN'), ('computes', 'VERB'), ('key', 'ADJ'), ('=>', 'PUNCT')] 

 XPOS tags are: 
>> [('Alice', 'NNP'), ('sends', 'VBZ'), ('to', 'IN'), ('Bob', 'NNP'), ('and', 'CC'), ('Bob', 'NNP'), ('sends', 'VBZ'), ('to', 'IN'), ('Alice', 'NNP'), ('Alice', 'NNP'), ('computes', 'VBZ'), ('key', 'JJ'), ('=>', '.')] 

 Lemmas are: 
>> [('Alice', 'Alice'), ('sends', 'send'), ('to', 'to'), ('Bob', 'Bob'), ('and', 'and'), ('Bob', 'Bob'), ('sends', 'send'), ('to', 'to'), ('Alice', 'Alice'), ('Alice', 'Alice'), ('computes', 'compute'), ('key', 'key'), ('=>', '=>')] 

 Dependency tags are: 
>> [(('Alice', 'sends'), 'nsubj'), (('sends', 'root'), 'root'), (('to', 'Bob'), 'case'), (('Bob', 'sends'), 'obl'), (('and', 'sends'), 'cc'), (('Bob', 'sends'), 'nsubj'), (('sends', 'sends'), 'conj'), (('to', 'Alice'), 'case'), (('Alice', 'sends'), 'obl'), (('Alice', 'Alice'), 'flat'), (('computes', 'sends'), 'advcl'), (('key', 'computes'), 'xcomp'), (('=>', 'sends'), 'punct')]

 Named Entities are: 
>> [('Alice', 'PERSON'), ('Bob', 'PERSON'), ('Bob', 'PERSON'), ('Alice Alice', 'PERSON')]

========================== Sentence 51 ===========================

 Bob computes key => 

Tokens are: 
>> ['Bob', 'computes', 'key', '=>'] 

 UPOS tags are: 
>> [('Bob', 'PROPN'), ('computes', 'VERB'), ('key', 'ADJ'), ('=>', 'PUNCT')] 

 XPOS tags are: 
>> [('Bob', 'NNP'), ('computes', 'VBZ'), ('key', 'JJ'), ('=>', ',')] 

 Lemmas are: 
>> [('Bob', 'Bob'), ('computes', 'compute'), ('key', 'key'), ('=>', '=>')] 

 Dependency tags are: 
>> [(('Bob', 'computes'), 'nsubj'), (('computes', 'root'), 'root'), (('key', 'computes'), 'xcomp'), (('=>', 'computes'), 'punct')]

 Named Entities are: 
>> [('Bob', 'PERSON')]

========================== Sentence 52 ===========================

 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange Illustration    Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Man in the middle attack Suppose Alice and Bob wish to exchange keys, and Darth is the adversary. 

Tokens are: 
>> ['Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Diffie-Hellman', 'Key', 'Exchange', 'Illustration', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Man', 'in', 'the', 'middle', 'attack', 'Suppose', 'Alice', 'and', 'Bob', 'wish', 'to', 'exchange', 'keys', ',', 'and', 'Darth', 'is', 'the', 'adversary', '.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Diffie-Hellman', 'ADJ'), ('Key', 'ADJ'), ('Exchange', 'PROPN'), ('Illustration', 'PROPN'), ('Unit-4', 'PROPN'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Man', 'PROPN'), ('in', 'ADP'), ('the', 'DET'), ('middle', 'ADJ'), ('attack', 'NOUN'), ('Suppose', 'PROPN'), ('Alice', 'PROPN'), ('and', 'CCONJ'), ('Bob', 'PROPN'), ('wish', 'VERB'), ('to', 'PART'), ('exchange', 'VERB'), ('keys', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('Darth', 'PROPN'), ('is', 'AUX'), ('the', 'DET'), ('adversary', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('Illustration', 'NNP'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Man', 'NNP'), ('in', 'IN'), ('the', 'DT'), ('middle', 'JJ'), ('attack', 'NN'), ('Suppose', 'NNP'), ('Alice', 'NNP'), ('and', 'CC'), ('Bob', 'NNP'), ('wish', 'VBP'), ('to', 'TO'), ('exchange', 'VB'), ('keys', 'NNS'), (',', ','), ('and', 'CC'), ('Darth', 'NNP'), ('is', 'VBZ'), ('the', 'DT'), ('adversary', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'Exchange'), ('Illustration', 'Illustration'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Man', 'Man'), ('in', 'in'), ('the', 'the'), ('middle', 'middle'), ('attack', 'attack'), ('Suppose', 'suppose'), ('Alice', 'Alice'), ('and', 'and'), ('Bob', 'Bob'), ('wish', 'wish'), ('to', 'to'), ('exchange', 'exchange'), ('keys', 'key'), (',', ','), ('and', 'and'), ('Darth', 'Darth'), ('is', 'be'), ('the', 'the'), ('adversary', 'adversary'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-4', 'Asymmertic'), 'nummod'), (('Asymmertic', 'Ciphers'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'root'), 'root'), (('of', 'Institute'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('Diffie-Hellman', 'Exchange'), 'amod'), (('Key', 'Exchange'), 'amod'), (('Exchange', 'Illustration'), 'compound'), (('Illustration', 'Institute'), 'compound'), (('Unit-4', 'Institute'), 'compound'), (('Asymmertic', 'Institute'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Institute'), 'conj'), (('of', 'Man'), 'case'), (('Engineering', 'Man'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Man'), 'compound'), (('Man', 'Institute'), 'nmod'), (('in', 'attack'), 'case'), (('the', 'attack'), 'det'), (('middle', 'attack'), 'amod'), (('attack', 'Man'), 'nmod'), (('Suppose', 'wish'), 'nsubj'), (('Alice', 'Suppose'), 'flat'), (('and', 'Bob'), 'cc'), (('Bob', 'Alice'), 'conj'), (('wish', 'Institute'), 'conj'), (('to', 'exchange'), 'mark'), (('exchange', 'wish'), 'xcomp'), (('keys', 'exchange'), 'obj'), ((',', 'adversary'), 'punct'), (('and', 'adversary'), 'cc'), (('Darth', 'adversary'), 'nsubj'), (('is', 'adversary'), 'cop'), (('the', 'adversary'), 'det'), (('adversary', 'wish'), 'conj'), (('.', 'wish'), 'punct')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('Diffie-Hellman Key Exchange Illustration    Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG'), ('Alice', 'PERSON'), ('Bob', 'PERSON'), ('Darth', 'PERSON')]

========================== Sentence 53 ===========================

 Darth prepares for the attack by generating two random private keys XD1 and XD2 and then computes corresponding public keys YD1 and YD2. 

Tokens are: 
>> ['Darth', 'prepares', 'for', 'the', 'attack', 'by', 'generating', 'two', 'random', 'private', 'keys', 'XD1', 'and', 'XD2', 'and', 'then', 'computes', 'corresponding', 'public', 'keys', 'YD1', 'and', 'YD2', '.'] 

 UPOS tags are: 
>> [('Darth', 'PROPN'), ('prepares', 'VERB'), ('for', 'ADP'), ('the', 'DET'), ('attack', 'NOUN'), ('by', 'SCONJ'), ('generating', 'VERB'), ('two', 'NUM'), ('random', 'ADJ'), ('private', 'ADJ'), ('keys', 'NOUN'), ('XD1', 'PROPN'), ('and', 'CCONJ'), ('XD2', 'PROPN'), ('and', 'CCONJ'), ('then', 'ADV'), ('computes', 'VERB'), ('corresponding', 'VERB'), ('public', 'ADJ'), ('keys', 'NOUN'), ('YD1', 'PROPN'), ('and', 'CCONJ'), ('YD2', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Darth', 'NNP'), ('prepares', 'VBZ'), ('for', 'IN'), ('the', 'DT'), ('attack', 'NN'), ('by', 'IN'), ('generating', 'VBG'), ('two', 'CD'), ('random', 'JJ'), ('private', 'JJ'), ('keys', 'NNS'), ('XD1', 'NNP'), ('and', 'CC'), ('XD2', 'NNP'), ('and', 'CC'), ('then', 'RB'), ('computes', 'VBZ'), ('corresponding', 'VBG'), ('public', 'JJ'), ('keys', 'NNS'), ('YD1', 'NNP'), ('and', 'CC'), ('YD2', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Darth', 'Darth'), ('prepares', 'prepare'), ('for', 'for'), ('the', 'the'), ('attack', 'attack'), ('by', 'by'), ('generating', 'generate'), ('two', 'two'), ('random', 'random'), ('private', 'private'), ('keys', 'key'), ('XD1', 'XD1'), ('and', 'and'), ('XD2', 'XD2'), ('and', 'and'), ('then', 'then'), ('computes', 'compute'), ('corresponding', 'corresponding'), ('public', 'public'), ('keys', 'key'), ('YD1', 'YD1'), ('and', 'and'), ('YD2', 'YD2'), ('.', '.')] 

 Dependency tags are: 
>> [(('Darth', 'prepares'), 'nsubj'), (('prepares', 'root'), 'root'), (('for', 'attack'), 'case'), (('the', 'attack'), 'det'), (('attack', 'prepares'), 'obl'), (('by', 'generating'), 'mark'), (('generating', 'prepares'), 'advcl'), (('two', 'keys'), 'nummod'), (('random', 'keys'), 'amod'), (('private', 'keys'), 'amod'), (('keys', 'generating'), 'obj'), (('XD1', 'keys'), 'appos'), (('and', 'XD2'), 'cc'), (('XD2', 'XD1'), 'conj'), (('and', 'computes'), 'cc'), (('then', 'computes'), 'advmod'), (('computes', 'prepares'), 'conj'), (('corresponding', 'keys'), 'amod'), (('public', 'keys'), 'amod'), (('keys', 'computes'), 'obj'), (('YD1', 'keys'), 'appos'), (('and', 'YD2'), 'cc'), (('YD2', 'YD1'), 'conj'), (('.', 'prepares'), 'punct')]

 Named Entities are: 
>> [('Darth', 'PERSON'), ('two', 'CARDINAL'), ('XD2', 'PRODUCT'), ('YD2', 'PRODUCT')]

========================== Sentence 54 ===========================

 Alice transmits YA to Bob. 

Tokens are: 
>> ['Alice', 'transmits', 'YA', 'to', 'Bob', '.'] 

 UPOS tags are: 
>> [('Alice', 'PROPN'), ('transmits', 'VERB'), ('YA', 'PRON'), ('to', 'ADP'), ('Bob', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Alice', 'NNP'), ('transmits', 'VBZ'), ('YA', 'PRP'), ('to', 'IN'), ('Bob', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Alice', 'Alice'), ('transmits', 'transmit'), ('YA', 'ya'), ('to', 'to'), ('Bob', 'Bob'), ('.', '.')] 

 Dependency tags are: 
>> [(('Alice', 'transmits'), 'nsubj'), (('transmits', 'root'), 'root'), (('YA', 'transmits'), 'obj'), (('to', 'Bob'), 'case'), (('Bob', 'transmits'), 'obl'), (('.', 'transmits'), 'punct')]

 Named Entities are: 
>> [('Alice', 'PERSON'), ('Bob', 'PERSON')]

========================== Sentence 55 ===========================

 Darth intercepts YA and transmits YD1 to Bob. 

Tokens are: 
>> ['Darth', 'intercepts', 'YA', 'and', 'transmits', 'YD1', 'to', 'Bob', '.'] 

 UPOS tags are: 
>> [('Darth', 'PROPN'), ('intercepts', 'VERB'), ('YA', 'PRON'), ('and', 'CCONJ'), ('transmits', 'VERB'), ('YD1', 'PROPN'), ('to', 'ADP'), ('Bob', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Darth', 'NNP'), ('intercepts', 'VBZ'), ('YA', 'PRP'), ('and', 'CC'), ('transmits', 'VBZ'), ('YD1', 'NNP'), ('to', 'IN'), ('Bob', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Darth', 'Darth'), ('intercepts', 'intercept'), ('YA', 'ya'), ('and', 'and'), ('transmits', 'transmit'), ('YD1', 'YD1'), ('to', 'to'), ('Bob', 'Bob'), ('.', '.')] 

 Dependency tags are: 
>> [(('Darth', 'intercepts'), 'nsubj'), (('intercepts', 'root'), 'root'), (('YA', 'intercepts'), 'obj'), (('and', 'transmits'), 'cc'), (('transmits', 'intercepts'), 'conj'), (('YD1', 'transmits'), 'obj'), (('to', 'Bob'), 'case'), (('Bob', 'transmits'), 'obl'), (('.', 'intercepts'), 'punct')]

 Named Entities are: 
>> [('Darth', 'PERSON'), ('YD1', 'PRODUCT'), ('Bob', 'PERSON')]

========================== Sentence 56 ===========================

 Darth also calculates K2=(YA)XD2 mod q. 

Tokens are: 
>> ['Darth', 'also', 'calculates', 'K2', '=', '(', 'YA', ')', 'XD2', 'mod', 'q.'] 

 UPOS tags are: 
>> [('Darth', 'PROPN'), ('also', 'ADV'), ('calculates', 'VERB'), ('K2', 'NOUN'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('YA', 'NOUN'), (')', 'PUNCT'), ('XD2', 'NOUN'), ('mod', 'NOUN'), ('q.', 'PUNCT')] 

 XPOS tags are: 
>> [('Darth', 'NNP'), ('also', 'RB'), ('calculates', 'VBZ'), ('K2', 'NN'), ('=', ','), ('(', '-LRB-'), ('YA', 'NN'), (')', '-RRB-'), ('XD2', 'NN'), ('mod', 'NN'), ('q.', '.')] 

 Lemmas are: 
>> [('Darth', 'Darth'), ('also', 'also'), ('calculates', 'calculate'), ('K2', 'k2'), ('=', '='), ('(', '('), ('YA', 'ya'), (')', ')'), ('XD2', 'xd2'), ('mod', 'mod'), ('q.', '..')] 

 Dependency tags are: 
>> [(('Darth', 'calculates'), 'nsubj'), (('also', 'calculates'), 'advmod'), (('calculates', 'root'), 'root'), (('K2', 'calculates'), 'obj'), (('=', 'calculates'), 'punct'), (('(', 'YA'), 'punct'), (('YA', 'mod'), 'compound'), ((')', 'YA'), 'punct'), (('XD2', 'mod'), 'compound'), (('mod', 'calculates'), 'obj'), (('q.', 'calculates'), 'punct')]

 Named Entities are: 
>> [('Darth', 'PERSON')]

========================== Sentence 57 ===========================

 Bob receives YD1 and calculates K1 =  (YD1) 

Tokens are: 
>> ['Bob', 'receives', 'YD1', 'and', 'calculates', 'K1', '=', '(', 'YD1', ')'] 

 UPOS tags are: 
>> [('Bob', 'PROPN'), ('receives', 'VERB'), ('YD1', 'PROPN'), ('and', 'CCONJ'), ('calculates', 'VERB'), ('K1', 'NUM'), ('=', 'SYM'), ('(', 'PUNCT'), ('YD1', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Bob', 'NNP'), ('receives', 'VBZ'), ('YD1', 'NNP'), ('and', 'CC'), ('calculates', 'VBZ'), ('K1', 'CD'), ('=', 'SYM'), ('(', '-LRB-'), ('YD1', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Bob', 'Bob'), ('receives', 'receive'), ('YD1', 'YD1'), ('and', 'and'), ('calculates', 'calculate'), ('K1', 'k1'), ('=', '='), ('(', '('), ('YD1', 'yd1'), (')', ')')] 

 Dependency tags are: 
>> [(('Bob', 'receives'), 'nsubj'), (('receives', 'root'), 'root'), (('YD1', 'receives'), 'obj'), (('and', 'calculates'), 'cc'), (('calculates', 'receives'), 'conj'), (('K1', 'calculates'), 'obj'), (('=', 'calculates'), 'xcomp'), (('(', 'YD1'), 'punct'), (('YD1', '='), 'obj'), ((')', 'YD1'), 'punct')]

 Named Entities are: 
>> [('Bob', 'PERSON')]

========================== Sentence 58 ===========================

 XB mod q. 

Tokens are: 
>> ['XB', 'mod', 'q.'] 

 UPOS tags are: 
>> [('XB', 'PROPN'), ('mod', 'NOUN'), ('q.', 'PROPN')] 

 XPOS tags are: 
>> [('XB', 'NNP'), ('mod', 'NN'), ('q.', 'NNP')] 

 Lemmas are: 
>> [('XB', 'XB'), ('mod', 'mod'), ('q.', 'q.')] 

 Dependency tags are: 
>> [(('XB', 'mod'), 'compound'), (('mod', 'root'), 'root'), (('q.', 'mod'), 'flat')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 Bob transmits YB to Alice. 

Tokens are: 
>> ['Bob', 'transmits', 'YB', 'to', 'Alice', '.'] 

 UPOS tags are: 
>> [('Bob', 'PROPN'), ('transmits', 'VERB'), ('YB', 'PROPN'), ('to', 'ADP'), ('Alice', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Bob', 'NNP'), ('transmits', 'VBZ'), ('YB', 'NNP'), ('to', 'IN'), ('Alice', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Bob', 'Bob'), ('transmits', 'transmit'), ('YB', 'YB'), ('to', 'to'), ('Alice', 'Alice'), ('.', '.')] 

 Dependency tags are: 
>> [(('Bob', 'transmits'), 'nsubj'), (('transmits', 'root'), 'root'), (('YB', 'transmits'), 'obj'), (('to', 'Alice'), 'case'), (('Alice', 'transmits'), 'obl'), (('.', 'transmits'), 'punct')]

 Named Entities are: 
>> [('Bob', 'PERSON'), ('Alice', 'PERSON')]

========================== Sentence 60 ===========================

 Darth intercepts YB and transmits YD2 to Alice. 

Tokens are: 
>> ['Darth', 'intercepts', 'YB', 'and', 'transmits', 'YD2', 'to', 'Alice', '.'] 

 UPOS tags are: 
>> [('Darth', 'PROPN'), ('intercepts', 'VERB'), ('YB', 'PROPN'), ('and', 'CCONJ'), ('transmits', 'VERB'), ('YD2', 'PROPN'), ('to', 'ADP'), ('Alice', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Darth', 'NNP'), ('intercepts', 'VBZ'), ('YB', 'NNP'), ('and', 'CC'), ('transmits', 'VBZ'), ('YD2', 'NNP'), ('to', 'IN'), ('Alice', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('Darth', 'Darth'), ('intercepts', 'intercept'), ('YB', 'YB'), ('and', 'and'), ('transmits', 'transmit'), ('YD2', 'YD2'), ('to', 'to'), ('Alice', 'Alice'), ('.', '.')] 

 Dependency tags are: 
>> [(('Darth', 'intercepts'), 'nsubj'), (('intercepts', 'root'), 'root'), (('YB', 'intercepts'), 'obj'), (('and', 'transmits'), 'cc'), (('transmits', 'intercepts'), 'conj'), (('YD2', 'transmits'), 'obj'), (('to', 'Alice'), 'case'), (('Alice', 'transmits'), 'obl'), (('.', 'intercepts'), 'punct')]

 Named Entities are: 
>> [('Darth', 'PERSON'), ('YB', 'ORG'), ('YD2', 'PRODUCT'), ('Alice', 'PERSON')]

========================== Sentence 61 ===========================

 Darth calculates K1=(YB)XD1 mod q. Alice receives YD2 and calculates K2 = (YD2) 

Tokens are: 
>> ['Darth', 'calculates', 'K1', '=(', 'YB', ')', 'XD1', 'mod', 'q.', 'Alice', 'receives', 'YD2', 'and', 'calculates', 'K2', '=', '(', 'YD2', ')'] 

 UPOS tags are: 
>> [('Darth', 'PROPN'), ('calculates', 'VERB'), ('K1', 'PROPN'), ('=(', 'SYM'), ('YB', 'NOUN'), (')', 'PUNCT'), ('XD1', 'PROPN'), ('mod', 'NOUN'), ('q.', 'NOUN'), ('Alice', 'PROPN'), ('receives', 'VERB'), ('YD2', 'PROPN'), ('and', 'CCONJ'), ('calculates', 'VERB'), ('K2', 'NUM'), ('=', 'SYM'), ('(', 'PUNCT'), ('YD2', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Darth', 'NNP'), ('calculates', 'VBZ'), ('K1', 'NNP'), ('=(', 'SYM'), ('YB', 'NN'), (')', '-RRB-'), ('XD1', 'NNP'), ('mod', 'NN'), ('q.', 'NN'), ('Alice', 'NNP'), ('receives', 'VBZ'), ('YD2', 'NNP'), ('and', 'CC'), ('calculates', 'VBZ'), ('K2', 'CD'), ('=', 'SYM'), ('(', '-LRB-'), ('YD2', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Darth', 'Darth'), ('calculates', 'calculate'), ('K1', 'K1'), ('=(', '=('), ('YB', 'yb'), (')', ')'), ('XD1', 'XD1'), ('mod', 'mod'), ('q.', 'P.'), ('Alice', 'Alice'), ('receives', 'receive'), ('YD2', 'YD2'), ('and', 'and'), ('calculates', 'calculate'), ('K2', 'k2'), ('=', '='), ('(', '('), ('YD2', 'YD2'), (')', ')')] 

 Dependency tags are: 
>> [(('Darth', 'calculates'), 'nsubj'), (('calculates', 'root'), 'root'), (('K1', 'calculates'), 'obj'), (('=(', 'YB'), 'nummod'), (('YB', 'calculates'), 'obj'), ((')', 'YB'), 'punct'), (('XD1', 'mod'), 'compound'), (('mod', 'calculates'), 'obj'), (('q.', 'receives'), 'nsubj'), (('Alice', 'q.'), 'flat'), (('receives', 'calculates'), 'parataxis'), (('YD2', 'receives'), 'obj'), (('and', 'calculates'), 'cc'), (('calculates', 'receives'), 'conj'), (('K2', 'calculates'), 'obj'), (('=', 'calculates'), 'ccomp'), (('(', 'YD2'), 'punct'), (('YD2', '='), 'appos'), ((')', 'YD2'), 'punct')]

 Named Entities are: 
>> [('Darth', 'PERSON'), ('Alice', 'PERSON')]

========================== Sentence 62 ===========================

 XA mod q.   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#› 

Tokens are: 
>> ['XA', 'mod', 'q.', 'Unit', '-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›'] 

 UPOS tags are: 
>> [('XA', 'PROPN'), ('mod', 'NOUN'), ('q.', 'NOUN'), ('Unit', 'NOUN'), ('-4', 'NUM'), ('Asymmertic', 'PROPN'), ('Ciphers', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN')] 

 XPOS tags are: 
>> [('XA', 'NNP'), ('mod', 'NN'), ('q.', 'NN'), ('Unit', 'NN'), ('-4', 'CD'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNPS'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP')] 

 Lemmas are: 
>> [('XA', 'XA'), ('mod', 'mod'), ('q.', 'P.'), ('Unit', 'unit'), ('-4', '-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›')] 

 Dependency tags are: 
>> [(('XA', 'mod'), 'compound'), (('mod', 'root'), 'root'), (('q.', 'Unit'), 'compound'), (('Unit', 'mod'), 'list'), (('-4', 'Ciphers'), 'nummod'), (('Asymmertic', 'Ciphers'), 'compound'), (('Ciphers', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'list'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology', 'ORG')]