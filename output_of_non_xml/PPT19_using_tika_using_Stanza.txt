

========================== Sentence 1 ===========================

 OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-7 Digital Signature      1  Outline Digital Signature Digital Signature properties Requirements and security  Various digital signature schemes (Elgamal and Schnorr) Digital Signature algorithm / Digital Signature Standard   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 

Tokens are: 
>> ['OOPC', '++', 'UNIT', '-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav@darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', 'UNIT', '-7', 'Digital', 'Signature', '1', 'Outline', 'Digital', 'Signature', 'Digital', 'Signature', 'properties', 'Requirements', 'and', 'security', 'Various', 'digital', 'signature', 'schemes', '(', 'Elgamal', 'and', 'Schnorr', ')', 'Digital', 'Signature', 'algorithm', '/', 'Digital', 'Signature', 'Standard', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'X.800', 'and', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')'] 

 UPOS tags are: 
>> [('OOPC', 'PROPN'), ('++', 'NUM'), ('UNIT', 'NOUN'), ('-1', 'NOUN'), ('Prof.', 'PROPN'), ('Rupesh', 'PROPN'), ('G.', 'PROPN'), ('Vaishnav', 'PROPN'), ('rupesh.vaishnav@darshan.ac.in', 'X'), ('94280-37452', 'NUM'), ('Information', 'NOUN'), ('&', 'CCONJ'), ('Network', 'PROPN'), ('Security', 'NOUN'), ('(', 'PUNCT'), ('2170709', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('UNIT', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('1', 'NUM'), ('Outline', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('properties', 'NOUN'), ('Requirements', 'NOUN'), ('and', 'CCONJ'), ('security', 'NOUN'), ('Various', 'ADJ'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('schemes', 'NOUN'), ('(', 'PUNCT'), ('Elgamal', 'PROPN'), ('and', 'CCONJ'), ('Schnorr', 'PROPN'), (')', 'PUNCT'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('algorithm', 'NOUN'), ('/', 'SYM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Standard', 'PROPN'), ('Unit', 'PROPN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('X.800', 'PROPN'), ('and', 'CCONJ'), ('RFC', 'PROPN'), ('2828', 'NUM'), ('International', 'ADJ'), ('Telecommunication', 'ADJ'), ('Union', 'PROPN'), ('(', 'PUNCT'), ('ITU', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('OOPC', 'NNP'), ('++', 'CD'), ('UNIT', 'NN'), ('-1', 'NN'), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav@darshan.ac.in', 'ADD'), ('94280-37452', 'CD'), ('Information', 'NN'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NN'), ('(', '-LRB-'), ('2170709', 'CD'), (')', '-RRB-'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('UNIT', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('1', 'CD'), ('Outline', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN'), ('properties', 'NNS'), ('Requirements', 'NNS'), ('and', 'CC'), ('security', 'NN'), ('Various', 'JJ'), ('digital', 'JJ'), ('signature', 'NN'), ('schemes', 'NNS'), ('(', '-LRB-'), ('Elgamal', 'NNP'), ('and', 'CC'), ('Schnorr', 'NNP'), (')', '-RRB-'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('algorithm', 'NN'), ('/', ','), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Standard', 'NNP'), ('Unit', 'NNP'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('X.800', 'NNP'), ('and', 'CC'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '-LRB-'), ('ITU', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('OOPC', 'OOPC'), ('++', '++'), ('UNIT', 'unit'), ('-1', '-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav@darshan.ac.in', 'rupesh.vaishnav@darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'information'), ('&', '&'), ('Network', 'Network'), ('Security', 'security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('UNIT', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('1', '1'), ('Outline', 'outline'), ('Digital', 'digital'), ('Signature', 'signature'), ('Digital', 'digital'), ('Signature', 'signature'), ('properties', 'property'), ('Requirements', 'requirement'), ('and', 'and'), ('security', 'security'), ('Various', 'various'), ('digital', 'digital'), ('signature', 'signature'), ('schemes', 'scheme'), ('(', '('), ('Elgamal', 'Elgamal'), ('and', 'and'), ('Schnorr', 'Schnorr'), (')', ')'), ('Digital', 'digital'), ('Signature', 'Signature'), ('algorithm', 'algorithm'), ('/', '/'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Standard', 'Standard'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('X.800', 'X.800'), ('and', 'and'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')')] 

 Dependency tags are: 
>> [(('OOPC', 'root'), 'root'), (('++', 'UNIT'), 'nummod'), (('UNIT', '-1'), 'compound'), (('-1', 'Prof.'), 'compound'), (('Prof.', 'OOPC'), 'flat'), (('Rupesh', 'Prof.'), 'flat'), (('G.', 'Vaishnav'), 'compound'), (('Vaishnav', 'OOPC'), 'list'), (('rupesh.vaishnav@darshan.ac.in', 'OOPC'), 'list'), (('94280-37452', 'OOPC'), 'list'), (('Information', 'OOPC'), 'list'), (('&', 'Security'), 'cc'), (('Network', 'Security'), 'compound'), (('Security', 'Information'), 'conj'), (('(', '2170709'), 'punct'), (('2170709', 'Security'), 'appos'), ((')', 'Security'), 'punct'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'OOPC'), 'list'), (('of', 'UNIT'), 'case'), (('Engineering', 'UNIT'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('UNIT', 'Institute'), 'nmod'), (('-7', 'Outline'), 'nummod'), (('Digital', 'Outline'), 'amod'), (('Signature', 'Outline'), 'compound'), (('1', 'Outline'), 'nummod'), (('Outline', 'Requirements'), 'compound'), (('Digital', 'Requirements'), 'amod'), (('Signature', 'Requirements'), 'compound'), (('Digital', 'Requirements'), 'amod'), (('Signature', 'properties'), 'compound'), (('properties', 'Requirements'), 'compound'), (('Requirements', 'Institute'), 'conj'), (('and', 'schemes'), 'cc'), (('security', 'schemes'), 'compound'), (('Various', 'schemes'), 'amod'), (('digital', 'schemes'), 'amod'), (('signature', 'schemes'), 'compound'), (('schemes', 'Requirements'), 'conj'), (('(', 'Elgamal'), 'punct'), (('Elgamal', 'schemes'), 'appos'), (('and', 'Schnorr'), 'cc'), (('Schnorr', 'Elgamal'), 'conj'), ((')', 'Elgamal'), 'punct'), (('Digital', 'Signature'), 'amod'), (('Signature', 'algorithm'), 'compound'), (('algorithm', 'schemes'), 'appos'), (('/', 'Unit'), 'cc'), (('Digital', 'Unit'), 'amod'), (('Signature', 'Unit'), 'compound'), (('Standard', 'Unit'), 'compound'), (('Unit', 'algorithm'), 'conj'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'algorithm'), 'conj'), (('of', 'X.800'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'X.800'), 'compound'), (('X.800', 'Institute'), 'nmod'), (('and', 'Union'), 'cc'), (('RFC', 'Union'), 'compound'), (('2828', 'Union'), 'nummod'), (('International', 'Union'), 'amod'), (('Telecommunication', 'Union'), 'amod'), (('Union', 'X.800'), 'conj'), (('(', 'ITU'), 'punct'), (('ITU', 'Union'), 'appos'), ((')', 'ITU'), 'punct')]

 Named Entities are: 
>> [('Rupesh G. Vaishnav', 'PERSON'), ('94280-37452 Information & Network Security', 'ORG'), ('2170709', 'CARDINAL'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('1', 'CARDINAL'), ('Elgamal', 'ORG'), ('Schnorr', 'ORG'), ('RFC 2828 International Telecommunication Union', 'ORG'), ('ITU', 'ORG')]

========================== Sentence 2 ===========================

 2   Symmetric-key  ciphers: Block ciphers Stream ciphers  Public-key ciphers Cryptographic Goals Cryptographic goals Confidentiality Data integrity Authentication Non-repudiation           Message authentication    Entity authentication Arbitrary length hash functions  Message  Authentication  codes (MACs)  Digital signatures Authentication  primitives Digital signatures MACs Digital       signatures  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  3 Проверить правильность схемы  Digital Signature A digital signature is an authentication mechanism that enables the creator of a message to attach a code that acts as a signature. 

Tokens are: 
>> ['2', 'Symmetric-', 'key', 'ciphers', ':', 'Block', 'ciphers', 'Stream', 'ciphers', 'Public-key', 'ciphers', 'Cryptographic', 'Goals', 'Cryptographic', 'goals', 'Confidentiality', 'Data', 'integrity', 'Authentication', 'Non-repudiation', 'Message', 'authentication', 'Entity', 'authentication', 'Arbitrary', 'length', 'hash', 'functions', 'Message', 'Authentication', 'codes', '(', 'MACs', ')', 'Digital', 'signatures', 'Authentication', 'primitives', 'Digital', 'signatures', 'MACs', 'Digital', 'signatures', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '3', 'Проверить', 'правильность', 'схемы', 'Digital', 'Signature', 'A', 'digital', 'signature', 'is', 'an', 'authentication', 'mechanism', 'that', 'enables', 'the', 'creator', 'of', 'a', 'message', 'to', 'attach', 'a', 'code', 'that', 'acts', 'as', 'a', 'signature', '.'] 

 UPOS tags are: 
>> [('2', 'NUM'), ('Symmetric-', 'PROPN'), ('key', 'ADJ'), ('ciphers', 'NOUN'), (':', 'PUNCT'), ('Block', 'NOUN'), ('ciphers', 'NOUN'), ('Stream', 'NOUN'), ('ciphers', 'NOUN'), ('Public-key', 'PROPN'), ('ciphers', 'NOUN'), ('Cryptographic', 'ADJ'), ('Goals', 'PROPN'), ('Cryptographic', 'ADJ'), ('goals', 'NOUN'), ('Confidentiality', 'NOUN'), ('Data', 'NOUN'), ('integrity', 'NOUN'), ('Authentication', 'NOUN'), ('Non-repudiation', 'NOUN'), ('Message', 'NOUN'), ('authentication', 'NOUN'), ('Entity', 'NOUN'), ('authentication', 'NOUN'), ('Arbitrary', 'ADJ'), ('length', 'NOUN'), ('hash', 'NOUN'), ('functions', 'NOUN'), ('Message', 'NOUN'), ('Authentication', 'NOUN'), ('codes', 'NOUN'), ('(', 'PUNCT'), ('MACs', 'NOUN'), (')', 'PUNCT'), ('Digital', 'ADJ'), ('signatures', 'NOUN'), ('Authentication', 'NOUN'), ('primitives', 'NOUN'), ('Digital', 'ADJ'), ('signatures', 'NOUN'), ('MACs', 'NOUN'), ('Digital', 'ADJ'), ('signatures', 'NOUN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('3', 'NUM'), ('Проверить', 'NOUN'), ('правильность', 'NOUN'), ('схемы', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('A', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('is', 'AUX'), ('an', 'DET'), ('authentication', 'NOUN'), ('mechanism', 'NOUN'), ('that', 'PRON'), ('enables', 'VERB'), ('the', 'DET'), ('creator', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('message', 'NOUN'), ('to', 'PART'), ('attach', 'VERB'), ('a', 'DET'), ('code', 'NOUN'), ('that', 'PRON'), ('acts', 'VERB'), ('as', 'ADP'), ('a', 'DET'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('2', 'CD'), ('Symmetric-', 'NNP'), ('key', 'JJ'), ('ciphers', 'NNS'), (':', ':'), ('Block', 'NN'), ('ciphers', 'NNS'), ('Stream', 'NN'), ('ciphers', 'NNS'), ('Public-key', 'NNP'), ('ciphers', 'NNS'), ('Cryptographic', 'NNP'), ('Goals', 'NNPS'), ('Cryptographic', 'JJ'), ('goals', 'NNS'), ('Confidentiality', 'NN'), ('Data', 'NN'), ('integrity', 'NN'), ('Authentication', 'NN'), ('Non-repudiation', 'NN'), ('Message', 'NN'), ('authentication', 'NN'), ('Entity', 'NN'), ('authentication', 'NN'), ('Arbitrary', 'JJ'), ('length', 'NN'), ('hash', 'NN'), ('functions', 'NNS'), ('Message', 'NN'), ('Authentication', 'NN'), ('codes', 'NNS'), ('(', '-LRB-'), ('MACs', 'NNS'), (')', '-RRB-'), ('Digital', 'JJ'), ('signatures', 'NNS'), ('Authentication', 'NN'), ('primitives', 'NNS'), ('Digital', 'JJ'), ('signatures', 'NNS'), ('MACs', 'NNS'), ('Digital', 'JJ'), ('signatures', 'NNS'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('3', 'CD'), ('Проверить', 'NN'), ('правильность', 'NN'), ('схемы', 'NN'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('A', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('is', 'VBZ'), ('an', 'DT'), ('authentication', 'NN'), ('mechanism', 'NN'), ('that', 'WDT'), ('enables', 'VBZ'), ('the', 'DT'), ('creator', 'NN'), ('of', 'IN'), ('a', 'DT'), ('message', 'NN'), ('to', 'TO'), ('attach', 'VB'), ('a', 'DT'), ('code', 'NN'), ('that', 'WDT'), ('acts', 'VBZ'), ('as', 'IN'), ('a', 'DT'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('2', '2'), ('Symmetric-', 'Symmetric-'), ('key', 'key'), ('ciphers', 'cipher'), (':', ':'), ('Block', 'block'), ('ciphers', 'cipher'), ('Stream', 'stream'), ('ciphers', 'cipher'), ('Public-key', 'Public-key'), ('ciphers', 'cipher'), ('Cryptographic', 'Cryptographic'), ('Goals', 'Goal'), ('Cryptographic', 'Cryptographic'), ('goals', 'goal'), ('Confidentiality', 'confidentiality'), ('Data', 'data'), ('integrity', 'integrity'), ('Authentication', 'authentication'), ('Non-repudiation', 'non-repudiation'), ('Message', 'message'), ('authentication', 'authentication'), ('Entity', 'entity'), ('authentication', 'authentication'), ('Arbitrary', 'arbitrary'), ('length', 'length'), ('hash', 'hash'), ('functions', 'function'), ('Message', 'message'), ('Authentication', 'authentication'), ('codes', 'code'), ('(', '('), ('MACs', 'mac'), (')', ')'), ('Digital', 'digital'), ('signatures', 'signature'), ('Authentication', 'authentication'), ('primitives', 'primitive'), ('Digital', 'digital'), ('signatures', 'signature'), ('MACs', 'mac'), ('Digital', 'digital'), ('signatures', 'signature'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('3', '3'), ('Проверить', 'проверить'), ('правильность', 'правильность'), ('схемы', 'схемы'), ('Digital', 'digital'), ('Signature', 'Signature'), ('A', 'a'), ('digital', 'digital'), ('signature', 'signature'), ('is', 'be'), ('an', 'a'), ('authentication', 'authentication'), ('mechanism', 'mechanism'), ('that', 'that'), ('enables', 'enable'), ('the', 'the'), ('creator', 'creator'), ('of', 'of'), ('a', 'a'), ('message', 'message'), ('to', 'to'), ('attach', 'attach'), ('a', 'a'), ('code', 'code'), ('that', 'that'), ('acts', 'act'), ('as', 'as'), ('a', 'a'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('2', 'ciphers'), 'nummod'), (('Symmetric-', 'ciphers'), 'compound'), (('key', 'ciphers'), 'amod'), (('ciphers', 'mechanism'), 'nsubj'), ((':', 'ciphers'), 'punct'), (('Block', 'ciphers'), 'compound'), (('ciphers', 'ciphers'), 'compound'), (('Stream', 'ciphers'), 'compound'), (('ciphers', 'ciphers'), 'appos'), (('Public-key', 'ciphers'), 'compound'), (('ciphers', 'ciphers'), 'conj'), (('Cryptographic', 'Goals'), 'amod'), (('Goals', 'goals'), 'compound'), (('Cryptographic', 'goals'), 'amod'), (('goals', 'ciphers'), 'conj'), (('Confidentiality', 'integrity'), 'compound'), (('Data', 'integrity'), 'compound'), (('integrity', 'goals'), 'compound'), (('Authentication', 'goals'), 'compound'), (('Non-repudiation', 'Entity'), 'compound'), (('Message', 'Entity'), 'compound'), (('authentication', 'Entity'), 'compound'), (('Entity', 'authentication'), 'compound'), (('authentication', 'functions'), 'compound'), (('Arbitrary', 'functions'), 'amod'), (('length', 'functions'), 'compound'), (('hash', 'functions'), 'compound'), (('functions', 'codes'), 'compound'), (('Message', 'codes'), 'compound'), (('Authentication', 'codes'), 'compound'), (('codes', 'ciphers'), 'conj'), (('(', 'MACs'), 'punct'), (('MACs', 'codes'), 'appos'), ((')', 'MACs'), 'punct'), (('Digital', 'signatures'), 'amod'), (('signatures', 'primitives'), 'compound'), (('Authentication', 'primitives'), 'compound'), (('primitives', 'ciphers'), 'conj'), (('Digital', 'signatures'), 'amod'), (('signatures', 'primitives'), 'compound'), (('MACs', 'Unit'), 'compound'), (('Digital', 'Unit'), 'amod'), (('signatures', 'Unit'), 'compound'), (('Unit', 'signatures'), 'compound'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'conj'), (('of', '‹#›'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('3', 'правильность'), 'nummod'), (('Проверить', 'правильность'), 'compound'), (('правильность', 'Signature'), 'compound'), (('схемы', 'Signature'), 'compound'), (('Digital', 'Signature'), 'amod'), (('Signature', 'signature'), 'nmod'), (('A', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'mechanism'), 'nsubj'), (('is', 'mechanism'), 'cop'), (('an', 'mechanism'), 'det'), (('authentication', 'mechanism'), 'compound'), (('mechanism', 'root'), 'root'), (('that', 'enables'), 'nsubj'), (('enables', 'mechanism'), 'acl:relcl'), (('the', 'creator'), 'det'), (('creator', 'enables'), 'obj'), (('of', 'message'), 'case'), (('a', 'message'), 'det'), (('message', 'creator'), 'nmod'), (('to', 'attach'), 'mark'), (('attach', 'enables'), 'advcl'), (('a', 'code'), 'det'), (('code', 'attach'), 'obj'), (('that', 'acts'), 'nsubj'), (('acts', 'code'), 'acl:relcl'), (('as', 'signature'), 'case'), (('a', 'signature'), 'det'), (('signature', 'acts'), 'obl'), (('.', 'mechanism'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL')]

========================== Sentence 3 ===========================

 Typically the signature is formed by taking the hash of the message and encrypting the message with the creator’s private key. 

Tokens are: 
>> ['Typically', 'the', 'signature', 'is', 'formed', 'by', 'taking', 'the', 'hash', 'of', 'the', 'message', 'and', 'encrypting', 'the', 'message', 'with', 'the', 'creator', '’s', 'private', 'key', '.'] 

 UPOS tags are: 
>> [('Typically', 'ADV'), ('the', 'DET'), ('signature', 'NOUN'), ('is', 'AUX'), ('formed', 'VERB'), ('by', 'SCONJ'), ('taking', 'VERB'), ('the', 'DET'), ('hash', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('and', 'CCONJ'), ('encrypting', 'VERB'), ('the', 'DET'), ('message', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('creator', 'NOUN'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Typically', 'RB'), ('the', 'DT'), ('signature', 'NN'), ('is', 'VBZ'), ('formed', 'VBN'), ('by', 'IN'), ('taking', 'VBG'), ('the', 'DT'), ('hash', 'NN'), ('of', 'IN'), ('the', 'DT'), ('message', 'NN'), ('and', 'CC'), ('encrypting', 'VBG'), ('the', 'DT'), ('message', 'NN'), ('with', 'IN'), ('the', 'DT'), ('creator', 'NN'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Typically', 'typically'), ('the', 'the'), ('signature', 'signature'), ('is', 'be'), ('formed', 'form'), ('by', 'by'), ('taking', 'take'), ('the', 'the'), ('hash', 'hash'), ('of', 'of'), ('the', 'the'), ('message', 'message'), ('and', 'and'), ('encrypting', 'encrypt'), ('the', 'the'), ('message', 'message'), ('with', 'with'), ('the', 'the'), ('creator', 'creator'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Typically', 'formed'), 'advmod'), (('the', 'signature'), 'det'), (('signature', 'formed'), 'nsubj:pass'), (('is', 'formed'), 'aux:pass'), (('formed', 'root'), 'root'), (('by', 'taking'), 'mark'), (('taking', 'formed'), 'advcl'), (('the', 'hash'), 'det'), (('hash', 'taking'), 'obj'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'hash'), 'nmod'), (('and', 'encrypting'), 'cc'), (('encrypting', 'taking'), 'conj'), (('the', 'message'), 'det'), (('message', 'encrypting'), 'obj'), (('with', 'key'), 'case'), (('the', 'creator'), 'det'), (('creator', 'key'), 'nmod:poss'), (('’s', 'creator'), 'case'), (('private', 'key'), 'amod'), (('key', 'encrypting'), 'obl'), (('.', 'formed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 4 ===========================

 The signature guarantees the source and integrity of the message. 

Tokens are: 
>> ['The', 'signature', 'guarantees', 'the', 'source', 'and', 'integrity', 'of', 'the', 'message', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('signature', 'NOUN'), ('guarantees', 'VERB'), ('the', 'DET'), ('source', 'NOUN'), ('and', 'CCONJ'), ('integrity', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('signature', 'NN'), ('guarantees', 'VBZ'), ('the', 'DT'), ('source', 'NN'), ('and', 'CC'), ('integrity', 'NN'), ('of', 'IN'), ('the', 'DT'), ('message', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('signature', 'signature'), ('guarantees', 'guarantee'), ('the', 'the'), ('source', 'source'), ('and', 'and'), ('integrity', 'integrity'), ('of', 'of'), ('the', 'the'), ('message', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'signature'), 'det'), (('signature', 'guarantees'), 'nsubj'), (('guarantees', 'root'), 'root'), (('the', 'source'), 'det'), (('source', 'guarantees'), 'obj'), (('and', 'integrity'), 'cc'), (('integrity', 'source'), 'conj'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'source'), 'nmod'), (('.', 'guarantees'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 The digital signature standard (DSS) is an NIST standard that uses the secure hash algorithm (SHA). 

Tokens are: 
>> ['The', 'digital', 'signature', 'standard', '(', 'DSS', ')', 'is', 'an', 'NIST', 'standard', 'that', 'uses', 'the', 'secure', 'hash', 'algorithm', '(', 'SHA', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('standard', 'NOUN'), ('(', 'PUNCT'), ('DSS', 'PROPN'), (')', 'PUNCT'), ('is', 'AUX'), ('an', 'DET'), ('NIST', 'PROPN'), ('standard', 'NOUN'), ('that', 'PRON'), ('uses', 'VERB'), ('the', 'DET'), ('secure', 'ADJ'), ('hash', 'NOUN'), ('algorithm', 'NOUN'), ('(', 'PUNCT'), ('SHA', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('standard', 'NN'), ('(', '-LRB-'), ('DSS', 'NNP'), (')', '-RRB-'), ('is', 'VBZ'), ('an', 'DT'), ('NIST', 'NNP'), ('standard', 'NN'), ('that', 'WDT'), ('uses', 'VBZ'), ('the', 'DT'), ('secure', 'JJ'), ('hash', 'NN'), ('algorithm', 'NN'), ('(', '-LRB-'), ('SHA', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('digital', 'digital'), ('signature', 'signature'), ('standard', 'standard'), ('(', '('), ('DSS', 'DSS'), (')', ')'), ('is', 'be'), ('an', 'a'), ('NIST', 'NIST'), ('standard', 'standard'), ('that', 'that'), ('uses', 'use'), ('the', 'the'), ('secure', 'secure'), ('hash', 'hash'), ('algorithm', 'algorithm'), ('(', '('), ('SHA', 'SHA'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'standard'), 'det'), (('digital', 'standard'), 'amod'), (('signature', 'standard'), 'compound'), (('standard', 'standard'), 'nsubj'), (('(', 'DSS'), 'punct'), (('DSS', 'standard'), 'appos'), ((')', 'DSS'), 'punct'), (('is', 'standard'), 'cop'), (('an', 'standard'), 'det'), (('NIST', 'standard'), 'compound'), (('standard', 'root'), 'root'), (('that', 'uses'), 'nsubj'), (('uses', 'standard'), 'acl:relcl'), (('the', 'algorithm'), 'det'), (('secure', 'algorithm'), 'amod'), (('hash', 'algorithm'), 'compound'), (('algorithm', 'uses'), 'obj'), (('(', 'SHA'), 'punct'), (('SHA', 'algorithm'), 'appos'), ((')', 'SHA'), 'punct'), (('.', 'standard'), 'punct')]

 Named Entities are: 
>> [('NIST', 'ORG')]

========================== Sentence 6 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›      Hash code, MAC and Digital Signature Hash Code A hash of the message, if appended to the message itself, only protects against accidental changes to the message, as an attacker who modifies the message can simply calculate a new hash and use it instead of the original one. 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Hash', 'code', ',', 'MAC', 'and', 'Digital', 'Signature', 'Hash', 'Code', 'A', 'hash', 'of', 'the', 'message', ',', 'if', 'appended', 'to', 'the', 'message', 'itself', ',', 'only', 'protects', 'against', 'accidental', 'changes', 'to', 'the', 'message', ',', 'as', 'an', 'attacker', 'who', 'modifies', 'the', 'message', 'can', 'simply', 'calculate', 'a', 'new', 'hash', 'and', 'use', 'it', 'instead', 'of', 'the', 'original', 'one', '.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Hash', 'NOUN'), ('code', 'NOUN'), (',', 'PUNCT'), ('MAC', 'PROPN'), ('and', 'CCONJ'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Hash', 'NOUN'), ('Code', 'NOUN'), ('A', 'DET'), ('hash', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), (',', 'PUNCT'), ('if', 'SCONJ'), ('appended', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('itself', 'PRON'), (',', 'PUNCT'), ('only', 'ADV'), ('protects', 'VERB'), ('against', 'ADP'), ('accidental', 'ADJ'), ('changes', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), (',', 'PUNCT'), ('as', 'ADP'), ('an', 'DET'), ('attacker', 'NOUN'), ('who', 'PRON'), ('modifies', 'VERB'), ('the', 'DET'), ('message', 'NOUN'), ('can', 'AUX'), ('simply', 'ADV'), ('calculate', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('hash', 'NOUN'), ('and', 'CCONJ'), ('use', 'VERB'), ('it', 'PRON'), ('instead', 'ADV'), ('of', 'ADP'), ('the', 'DET'), ('original', 'ADJ'), ('one', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Hash', 'NN'), ('code', 'NN'), (',', ','), ('MAC', 'NNP'), ('and', 'CC'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Hash', 'NN'), ('Code', 'NN'), ('A', 'DT'), ('hash', 'NN'), ('of', 'IN'), ('the', 'DT'), ('message', 'NN'), (',', ','), ('if', 'IN'), ('appended', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('message', 'NN'), ('itself', 'PRP'), (',', ','), ('only', 'RB'), ('protects', 'VBZ'), ('against', 'IN'), ('accidental', 'JJ'), ('changes', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('message', 'NN'), (',', ','), ('as', 'IN'), ('an', 'DT'), ('attacker', 'NN'), ('who', 'WP'), ('modifies', 'VBZ'), ('the', 'DT'), ('message', 'NN'), ('can', 'MD'), ('simply', 'RB'), ('calculate', 'VB'), ('a', 'DT'), ('new', 'JJ'), ('hash', 'NN'), ('and', 'CC'), ('use', 'VB'), ('it', 'PRP'), ('instead', 'RB'), ('of', 'IN'), ('the', 'DT'), ('original', 'JJ'), ('one', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Hash', 'hash'), ('code', 'code'), (',', ','), ('MAC', 'MAC'), ('and', 'and'), ('Digital', 'digital'), ('Signature', 'signature'), ('Hash', 'hash'), ('Code', 'code'), ('A', 'a'), ('hash', 'hash'), ('of', 'of'), ('the', 'the'), ('message', 'message'), (',', ','), ('if', 'if'), ('appended', 'append'), ('to', 'to'), ('the', 'the'), ('message', 'message'), ('itself', 'itself'), (',', ','), ('only', 'only'), ('protects', 'protect'), ('against', 'against'), ('accidental', 'accidental'), ('changes', 'change'), ('to', 'to'), ('the', 'the'), ('message', 'message'), (',', ','), ('as', 'as'), ('an', 'a'), ('attacker', 'attacker'), ('who', 'who'), ('modifies', 'modify'), ('the', 'the'), ('message', 'message'), ('can', 'can'), ('simply', 'simply'), ('calculate', 'calculate'), ('a', 'a'), ('new', 'new'), ('hash', 'hash'), ('and', 'and'), ('use', 'use'), ('it', 'it'), ('instead', 'instead'), ('of', 'of'), ('the', 'the'), ('original', 'original'), ('one', 'one'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'root'), 'root'), (('of', 'code'), 'case'), (('Engineering', 'code'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'code'), 'compound'), (('Hash', 'code'), 'compound'), (('code', 'Institute'), 'nmod'), ((',', 'MAC'), 'punct'), (('MAC', 'code'), 'conj'), (('and', 'Code'), 'cc'), (('Digital', 'Code'), 'amod'), (('Signature', 'Code'), 'compound'), (('Hash', 'Code'), 'compound'), (('Code', 'code'), 'conj'), (('A', 'hash'), 'det'), (('hash', 'Institute'), 'conj'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'hash'), 'nmod'), ((',', 'appended'), 'punct'), (('if', 'appended'), 'mark'), (('appended', 'protects'), 'advcl'), (('to', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'appended'), 'obl'), (('itself', 'message'), 'nmod:npmod'), ((',', 'protects'), 'punct'), (('only', 'protects'), 'advmod'), (('protects', 'hash'), 'parataxis'), (('against', 'changes'), 'case'), (('accidental', 'changes'), 'amod'), (('changes', 'protects'), 'obl'), (('to', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'changes'), 'nmod'), ((',', 'protects'), 'punct'), (('as', 'attacker'), 'case'), (('an', 'attacker'), 'det'), (('attacker', 'calculate'), 'obl'), (('who', 'modifies'), 'nsubj'), (('modifies', 'attacker'), 'acl:relcl'), (('the', 'message'), 'det'), (('message', 'modifies'), 'obj'), (('can', 'calculate'), 'aux'), (('simply', 'calculate'), 'advmod'), (('calculate', 'protects'), 'conj'), (('a', 'hash'), 'det'), (('new', 'hash'), 'amod'), (('hash', 'calculate'), 'obj'), (('and', 'use'), 'cc'), (('use', 'calculate'), 'conj'), (('it', 'use'), 'obj'), (('instead', 'one'), 'case'), (('of', 'instead'), 'fixed'), (('the', 'one'), 'det'), (('original', 'one'), 'amod'), (('one', 'use'), 'obl'), (('.', 'protects'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 7 ===========================

 So this only gives integrity. 

Tokens are: 
>> ['So', 'this', 'only', 'gives', 'integrity', '.'] 

 UPOS tags are: 
>> [('So', 'ADV'), ('this', 'PRON'), ('only', 'ADV'), ('gives', 'VERB'), ('integrity', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('So', 'RB'), ('this', 'DT'), ('only', 'RB'), ('gives', 'VBZ'), ('integrity', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('So', 'so'), ('this', 'this'), ('only', 'only'), ('gives', 'give'), ('integrity', 'integrity'), ('.', '.')] 

 Dependency tags are: 
>> [(('So', 'gives'), 'advmod'), (('this', 'gives'), 'nsubj'), (('only', 'gives'), 'advmod'), (('gives', 'root'), 'root'), (('integrity', 'gives'), 'obj'), (('.', 'gives'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 MAC 

Tokens are: 
>> ['MAC'] 

 UPOS tags are: 
>> [('MAC', 'PROPN')] 

 XPOS tags are: 
>> [('MAC', 'NNP')] 

 Lemmas are: 
>> [('MAC', 'MAC')] 

 Dependency tags are: 
>> [(('MAC', 'root'), 'root')]

 Named Entities are: 
>> [('MAC', 'ORG')]

========================== Sentence 9 ===========================

 A message authentication code (MAC) (sometimes also known as keyed hash) protects against message forgery by anyone who doesn't know the secret. 

Tokens are: 
>> ['A', 'message', 'authentication', 'code', '(', 'MAC', ')', '(', 'sometimes', 'also', 'known', 'as', 'keyed', 'hash', ')', 'protects', 'against', 'message', 'forgery', 'by', 'anyone', 'who', 'does', "n't", 'know', 'the', 'secret', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('message', 'NOUN'), ('authentication', 'NOUN'), ('code', 'NOUN'), ('(', 'PUNCT'), ('MAC', 'PROPN'), (')', 'PUNCT'), ('(', 'PUNCT'), ('sometimes', 'ADV'), ('also', 'ADV'), ('known', 'VERB'), ('as', 'ADP'), ('keyed', 'VERB'), ('hash', 'NOUN'), (')', 'PUNCT'), ('protects', 'VERB'), ('against', 'ADP'), ('message', 'NOUN'), ('forgery', 'NOUN'), ('by', 'ADP'), ('anyone', 'PRON'), ('who', 'PRON'), ('does', 'AUX'), ("n't", 'PART'), ('know', 'VERB'), ('the', 'DET'), ('secret', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('message', 'NN'), ('authentication', 'NN'), ('code', 'NN'), ('(', '-LRB-'), ('MAC', 'NNP'), (')', '-RRB-'), ('(', '-LRB-'), ('sometimes', 'RB'), ('also', 'RB'), ('known', 'VBN'), ('as', 'IN'), ('keyed', 'VBN'), ('hash', 'NN'), (')', '-RRB-'), ('protects', 'VBZ'), ('against', 'IN'), ('message', 'NN'), ('forgery', 'NN'), ('by', 'IN'), ('anyone', 'NN'), ('who', 'WP'), ('does', 'VBZ'), ("n't", 'RB'), ('know', 'VB'), ('the', 'DT'), ('secret', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('message', 'message'), ('authentication', 'authentication'), ('code', 'code'), ('(', '('), ('MAC', 'MAC'), (')', ')'), ('(', '('), ('sometimes', 'sometimes'), ('also', 'also'), ('known', 'know'), ('as', 'as'), ('keyed', 'key'), ('hash', 'hash'), (')', ')'), ('protects', 'protect'), ('against', 'against'), ('message', 'message'), ('forgery', 'forgery'), ('by', 'by'), ('anyone', 'anyone'), ('who', 'who'), ('does', 'do'), ("n't", 'not'), ('know', 'know'), ('the', 'the'), ('secret', 'secret'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'code'), 'det'), (('message', 'code'), 'compound'), (('authentication', 'code'), 'compound'), (('code', 'protects'), 'nsubj'), (('(', 'MAC'), 'punct'), (('MAC', 'code'), 'appos'), ((')', 'MAC'), 'punct'), (('(', 'known'), 'punct'), (('sometimes', 'known'), 'advmod'), (('also', 'known'), 'advmod'), (('known', 'code'), 'acl'), (('as', 'hash'), 'case'), (('keyed', 'hash'), 'amod'), (('hash', 'known'), 'obl'), ((')', 'known'), 'punct'), (('protects', 'root'), 'root'), (('against', 'forgery'), 'case'), (('message', 'forgery'), 'compound'), (('forgery', 'protects'), 'obl'), (('by', 'anyone'), 'case'), (('anyone', 'protects'), 'obl'), (('who', 'know'), 'nsubj'), (('does', 'know'), 'aux'), (("n't", 'know'), 'advmod'), (('know', 'anyone'), 'acl:relcl'), (('the', 'secret'), 'det'), (('secret', 'know'), 'obj'), (('.', 'protects'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 This means that the receiver can forge any message – thus we have both integrity and authentication (as long as the receiver doesn't have a split personality), but not non-repudiation. 

Tokens are: 
>> ['This', 'means', 'that', 'the', 'receiver', 'can', 'forge', 'any', 'message', '–', 'thus', 'we', 'have', 'both', 'integrity', 'and', 'authentication', '(', 'as', 'long', 'as', 'the', 'receiver', 'does', "n't", 'have', 'a', 'split', 'personality', ')', ',', 'but', 'not', 'non-repudiation', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('means', 'VERB'), ('that', 'SCONJ'), ('the', 'DET'), ('receiver', 'NOUN'), ('can', 'AUX'), ('forge', 'VERB'), ('any', 'DET'), ('message', 'NOUN'), ('–', 'PUNCT'), ('thus', 'ADV'), ('we', 'PRON'), ('have', 'VERB'), ('both', 'CCONJ'), ('integrity', 'NOUN'), ('and', 'CCONJ'), ('authentication', 'NOUN'), ('(', 'PUNCT'), ('as', 'ADV'), ('long', 'ADV'), ('as', 'SCONJ'), ('the', 'DET'), ('receiver', 'NOUN'), ('does', 'AUX'), ("n't", 'PART'), ('have', 'VERB'), ('a', 'DET'), ('split', 'ADJ'), ('personality', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('but', 'CCONJ'), ('not', 'PART'), ('non-repudiation', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('means', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('receiver', 'NN'), ('can', 'MD'), ('forge', 'VB'), ('any', 'DT'), ('message', 'NN'), ('–', ':'), ('thus', 'RB'), ('we', 'PRP'), ('have', 'VBP'), ('both', 'CC'), ('integrity', 'NN'), ('and', 'CC'), ('authentication', 'NN'), ('(', '-LRB-'), ('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('the', 'DT'), ('receiver', 'NN'), ('does', 'VBZ'), ("n't", 'RB'), ('have', 'VB'), ('a', 'DT'), ('split', 'JJ'), ('personality', 'NN'), (')', '-RRB-'), (',', ','), ('but', 'CC'), ('not', 'RB'), ('non-repudiation', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('means', 'mean'), ('that', 'that'), ('the', 'the'), ('receiver', 'receiver'), ('can', 'can'), ('forge', 'forge'), ('any', 'any'), ('message', 'message'), ('–', '-'), ('thus', 'thus'), ('we', 'we'), ('have', 'have'), ('both', 'both'), ('integrity', 'integrity'), ('and', 'and'), ('authentication', 'authentication'), ('(', '('), ('as', 'as'), ('long', 'long'), ('as', 'as'), ('the', 'the'), ('receiver', 'receiver'), ('does', 'do'), ("n't", 'not'), ('have', 'have'), ('a', 'a'), ('split', 'split'), ('personality', 'personality'), (')', ')'), (',', ','), ('but', 'but'), ('not', 'not'), ('non-repudiation', 'non-repudiation'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'means'), 'nsubj'), (('means', 'root'), 'root'), (('that', 'forge'), 'mark'), (('the', 'receiver'), 'det'), (('receiver', 'forge'), 'nsubj'), (('can', 'forge'), 'aux'), (('forge', 'means'), 'ccomp'), (('any', 'message'), 'det'), (('message', 'forge'), 'obj'), (('–', 'have'), 'punct'), (('thus', 'have'), 'advmod'), (('we', 'have'), 'nsubj'), (('have', 'means'), 'parataxis'), (('both', 'integrity'), 'cc:preconj'), (('integrity', 'have'), 'obj'), (('and', 'authentication'), 'cc'), (('authentication', 'integrity'), 'conj'), (('(', 'long'), 'punct'), (('as', 'long'), 'advmod'), (('long', 'have'), 'advmod'), (('as', 'have'), 'mark'), (('the', 'receiver'), 'det'), (('receiver', 'have'), 'nsubj'), (('does', 'have'), 'aux'), (("n't", 'have'), 'advmod'), (('have', 'long'), 'advcl'), (('a', 'personality'), 'det'), (('split', 'personality'), 'amod'), (('personality', 'have'), 'obj'), ((')', 'long'), 'punct'), ((',', 'non-repudiation'), 'punct'), (('but', 'non-repudiation'), 'cc'), (('not', 'non-repudiation'), 'advmod'), (('non-repudiation', 'integrity'), 'conj'), (('.', 'means'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Hash code, MAC and Digital Signature Digital Signature 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Hash', 'code', ',', 'MAC', 'and', 'Digital', 'Signature', 'Digital', 'Signature'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Hash', 'NOUN'), ('code', 'NOUN'), (',', 'PUNCT'), ('MAC', 'NOUN'), ('and', 'CCONJ'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Hash', 'NN'), ('code', 'NN'), (',', ','), ('MAC', 'NN'), ('and', 'CC'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Hash', 'hash'), ('code', 'code'), (',', ','), ('MAC', 'mac'), ('and', 'and'), ('Digital', 'digital'), ('Signature', 'signature'), ('Digital', 'digital'), ('Signature', 'signature')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'code'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'code'), 'compound'), (('Hash', 'code'), 'compound'), (('code', 'Institute'), 'nmod'), ((',', 'MAC'), 'punct'), (('MAC', 'code'), 'conj'), (('and', 'Signature'), 'cc'), (('Digital', 'Signature'), 'amod'), (('Signature', 'Signature'), 'compound'), (('Digital', 'Signature'), 'amod'), (('Signature', 'code'), 'conj')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology', 'ORG'), ('MAC', 'ORG')]

========================== Sentence 12 ===========================

 A digital signature is created with a private key, and verified with the corresponding public key of an asymmetric key-pair. 

Tokens are: 
>> ['A', 'digital', 'signature', 'is', 'created', 'with', 'a', 'private', 'key', ',', 'and', 'verified', 'with', 'the', 'corresponding', 'public', 'key', 'of', 'an', 'asymmetric', 'key', '-pair', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('is', 'AUX'), ('created', 'VERB'), ('with', 'ADP'), ('a', 'DET'), ('private', 'ADJ'), ('key', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('verified', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('corresponding', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('asymmetric', 'ADJ'), ('key', 'ADJ'), ('-pair', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('is', 'VBZ'), ('created', 'VBN'), ('with', 'IN'), ('a', 'DT'), ('private', 'JJ'), ('key', 'NN'), (',', ','), ('and', 'CC'), ('verified', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('corresponding', 'VBG'), ('public', 'JJ'), ('key', 'NN'), ('of', 'IN'), ('an', 'DT'), ('asymmetric', 'JJ'), ('key', 'JJ'), ('-pair', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('digital', 'digital'), ('signature', 'signature'), ('is', 'be'), ('created', 'create'), ('with', 'with'), ('a', 'a'), ('private', 'private'), ('key', 'key'), (',', ','), ('and', 'and'), ('verified', 'verify'), ('with', 'with'), ('the', 'the'), ('corresponding', 'corresponding'), ('public', 'public'), ('key', 'key'), ('of', 'of'), ('an', 'a'), ('asymmetric', 'asymmetric'), ('key', 'key'), ('-pair', '-pair'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'created'), 'nsubj:pass'), (('is', 'created'), 'aux:pass'), (('created', 'root'), 'root'), (('with', 'key'), 'case'), (('a', 'key'), 'det'), (('private', 'key'), 'amod'), (('key', 'created'), 'obl'), ((',', 'verified'), 'punct'), (('and', 'verified'), 'cc'), (('verified', 'created'), 'conj'), (('with', 'key'), 'case'), (('the', 'key'), 'det'), (('corresponding', 'key'), 'amod'), (('public', 'key'), 'amod'), (('key', 'verified'), 'obl'), (('of', '-pair'), 'case'), (('an', '-pair'), 'det'), (('asymmetric', '-pair'), 'amod'), (('key', '-pair'), 'amod'), (('-pair', 'key'), 'nmod'), (('.', 'created'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 Only the holder of the private key can create this signature, and normally anyone knowing the public key can verify it. 

Tokens are: 
>> ['Only', 'the', 'holder', 'of', 'the', 'private', 'key', 'can', 'create', 'this', 'signature', ',', 'and', 'normally', 'anyone', 'knowing', 'the', 'public', 'key', 'can', 'verify', 'it', '.'] 

 UPOS tags are: 
>> [('Only', 'ADV'), ('the', 'DET'), ('holder', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('private', 'ADJ'), ('key', 'NOUN'), ('can', 'AUX'), ('create', 'VERB'), ('this', 'DET'), ('signature', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('normally', 'ADV'), ('anyone', 'PRON'), ('knowing', 'VERB'), ('the', 'DET'), ('public', 'ADJ'), ('key', 'NOUN'), ('can', 'AUX'), ('verify', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Only', 'RB'), ('the', 'DT'), ('holder', 'NN'), ('of', 'IN'), ('the', 'DT'), ('private', 'JJ'), ('key', 'NN'), ('can', 'MD'), ('create', 'VB'), ('this', 'DT'), ('signature', 'NN'), (',', ','), ('and', 'CC'), ('normally', 'RB'), ('anyone', 'NN'), ('knowing', 'VBG'), ('the', 'DT'), ('public', 'JJ'), ('key', 'NN'), ('can', 'MD'), ('verify', 'VB'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('Only', 'only'), ('the', 'the'), ('holder', 'holder'), ('of', 'of'), ('the', 'the'), ('private', 'private'), ('key', 'key'), ('can', 'can'), ('create', 'create'), ('this', 'this'), ('signature', 'signature'), (',', ','), ('and', 'and'), ('normally', 'normally'), ('anyone', 'anyone'), ('knowing', 'know'), ('the', 'the'), ('public', 'public'), ('key', 'key'), ('can', 'can'), ('verify', 'verify'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('Only', 'holder'), 'advmod'), (('the', 'holder'), 'det'), (('holder', 'create'), 'nsubj'), (('of', 'key'), 'case'), (('the', 'key'), 'det'), (('private', 'key'), 'amod'), (('key', 'holder'), 'nmod'), (('can', 'create'), 'aux'), (('create', 'root'), 'root'), (('this', 'signature'), 'det'), (('signature', 'create'), 'obj'), ((',', 'verify'), 'punct'), (('and', 'verify'), 'cc'), (('normally', 'anyone'), 'advmod'), (('anyone', 'verify'), 'nsubj'), (('knowing', 'anyone'), 'acl'), (('the', 'key'), 'det'), (('public', 'key'), 'amod'), (('key', 'knowing'), 'obj'), (('can', 'verify'), 'aux'), (('verify', 'create'), 'conj'), (('it', 'verify'), 'obj'), (('.', 'create'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Attacks and Forgeries Key-only attack: C only knows A’s public key. 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Attacks', 'and', 'Forgeries', 'Key-only', 'attack', ':', 'C', 'only', 'knows', 'A', '’s', 'public', 'key', '.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Attacks', 'PROPN'), ('and', 'CCONJ'), ('Forgeries', 'PROPN'), ('Key-only', 'ADJ'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('only', 'ADV'), ('knows', 'VERB'), ('A', 'DET'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('Attacks', 'NNPS'), ('and', 'CC'), ('Forgeries', 'NNPS'), ('Key-only', 'JJ'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('only', 'RB'), ('knows', 'VBZ'), ('A', 'DT'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('Attacks', 'Attacks'), ('and', 'and'), ('Forgeries', 'Forgery'), ('Key-only', 'key-only'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('only', 'only'), ('knows', 'know'), ('A', 'a'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Signature'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'root'), 'root'), (('of', 'attack'), 'case'), (('Engineering', 'Attacks'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Attacks'), 'compound'), (('Attacks', 'attack'), 'compound'), (('and', 'Forgeries'), 'cc'), (('Forgeries', 'Attacks'), 'conj'), (('Key-only', 'attack'), 'amod'), (('attack', 'Institute'), 'nmod'), ((':', 'Institute'), 'punct'), (('C', 'knows'), 'nsubj'), (('only', 'knows'), 'advmod'), (('knows', 'attack'), 'parataxis'), (('A', 'key'), 'det'), (('’s', 'A'), 'case'), (('public', 'key'), 'amod'), (('key', 'knows'), 'obj'), (('.', 'Institute'), 'punct')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Attacks', 'ORG')]

========================== Sentence 15 ===========================

 Known message attack: C is given access to a set of messages and their signatures. 

Tokens are: 
>> ['Known', 'message', 'attack', ':', 'C', 'is', 'given', 'access', 'to', 'a', 'set', 'of', 'messages', 'and', 'their', 'signatures', '.'] 

 UPOS tags are: 
>> [('Known', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('is', 'AUX'), ('given', 'VERB'), ('access', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('messages', 'NOUN'), ('and', 'CCONJ'), ('their', 'PRON'), ('signatures', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Known', 'VBN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('is', 'VBZ'), ('given', 'VBN'), ('access', 'NN'), ('to', 'IN'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('messages', 'NNS'), ('and', 'CC'), ('their', 'PRP$'), ('signatures', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Known', 'know'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('is', 'be'), ('given', 'give'), ('access', 'access'), ('to', 'to'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('messages', 'message'), ('and', 'and'), ('their', 'they'), ('signatures', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('Known', 'attack'), 'amod'), (('message', 'attack'), 'compound'), (('attack', 'root'), 'root'), ((':', 'attack'), 'punct'), (('C', 'given'), 'nsubj:pass'), (('is', 'given'), 'aux:pass'), (('given', 'attack'), 'parataxis'), (('access', 'given'), 'obj'), (('to', 'set'), 'case'), (('a', 'set'), 'det'), (('set', 'access'), 'nmod'), (('of', 'messages'), 'case'), (('messages', 'set'), 'nmod'), (('and', 'signatures'), 'cc'), (('their', 'signatures'), 'nmod:poss'), (('signatures', 'messages'), 'conj'), (('.', 'attack'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 Generic chosen message attack: C chooses a list of messages before attempting to breaks A’s signature scheme, independent of A’s public key. 

Tokens are: 
>> ['Generic', 'chosen', 'message', 'attack', ':', 'C', 'chooses', 'a', 'list', 'of', 'messages', 'before', 'attempting', 'to', 'breaks', 'A', '’s', 'signature', 'scheme', ',', 'independent', 'of', 'A', '’s', 'public', 'key', '.'] 

 UPOS tags are: 
>> [('Generic', 'ADJ'), ('chosen', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('chooses', 'VERB'), ('a', 'DET'), ('list', 'NOUN'), ('of', 'ADP'), ('messages', 'NOUN'), ('before', 'SCONJ'), ('attempting', 'VERB'), ('to', 'PART'), ('breaks', 'VERB'), ('A', 'DET'), ('’s', 'PART'), ('signature', 'NOUN'), ('scheme', 'NOUN'), (',', 'PUNCT'), ('independent', 'ADJ'), ('of', 'ADP'), ('A', 'DET'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Generic', 'JJ'), ('chosen', 'VBN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('chooses', 'VBZ'), ('a', 'DT'), ('list', 'NN'), ('of', 'IN'), ('messages', 'NNS'), ('before', 'IN'), ('attempting', 'VBG'), ('to', 'TO'), ('breaks', 'VBZ'), ('A', 'DT'), ('’s', 'POS'), ('signature', 'NN'), ('scheme', 'NN'), (',', ','), ('independent', 'JJ'), ('of', 'IN'), ('A', 'DT'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Generic', 'Generic'), ('chosen', 'choose'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('chooses', 'choose'), ('a', 'a'), ('list', 'list'), ('of', 'of'), ('messages', 'message'), ('before', 'before'), ('attempting', 'attempt'), ('to', 'to'), ('breaks', 'break'), ('A', 'a'), ('’s', "'s"), ('signature', 'signature'), ('scheme', 'scheme'), (',', ','), ('independent', 'independent'), ('of', 'of'), ('A', 'a'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Generic', 'attack'), 'amod'), (('chosen', 'attack'), 'amod'), (('message', 'attack'), 'compound'), (('attack', 'root'), 'root'), ((':', 'attack'), 'punct'), (('C', 'chooses'), 'nsubj'), (('chooses', 'attack'), 'parataxis'), (('a', 'list'), 'det'), (('list', 'chooses'), 'obj'), (('of', 'messages'), 'case'), (('messages', 'list'), 'nmod'), (('before', 'attempting'), 'mark'), (('attempting', 'chooses'), 'advcl'), (('to', 'breaks'), 'mark'), (('breaks', 'attempting'), 'xcomp'), (('A', 'scheme'), 'det'), (('’s', 'A'), 'case'), (('signature', 'scheme'), 'compound'), (('scheme', 'breaks'), 'obj'), ((',', 'independent'), 'punct'), (('independent', 'scheme'), 'amod'), (('of', 'key'), 'case'), (('A', 'key'), 'nmod:poss'), (('’s', 'A'), 'case'), (('public', 'key'), 'amod'), (('key', 'independent'), 'obl'), (('.', 'attack'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 C then obtains from A valid signatures for the chosen messages. 

Tokens are: 
>> ['C', 'then', 'obtains', 'from', 'A', 'valid', 'signatures', 'for', 'the', 'chosen', 'messages', '.'] 

 UPOS tags are: 
>> [('C', 'PROPN'), ('then', 'ADV'), ('obtains', 'VERB'), ('from', 'ADP'), ('A', 'DET'), ('valid', 'ADJ'), ('signatures', 'NOUN'), ('for', 'ADP'), ('the', 'DET'), ('chosen', 'VERB'), ('messages', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('C', 'NNP'), ('then', 'RB'), ('obtains', 'VBZ'), ('from', 'IN'), ('A', 'DT'), ('valid', 'JJ'), ('signatures', 'NNS'), ('for', 'IN'), ('the', 'DT'), ('chosen', 'VBN'), ('messages', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('C', 'C'), ('then', 'then'), ('obtains', 'obtain'), ('from', 'from'), ('A', 'a'), ('valid', 'valid'), ('signatures', 'signature'), ('for', 'for'), ('the', 'the'), ('chosen', 'choose'), ('messages', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('C', 'obtains'), 'nsubj'), (('then', 'obtains'), 'advmod'), (('obtains', 'root'), 'root'), (('from', 'signatures'), 'case'), (('A', 'signatures'), 'det'), (('valid', 'signatures'), 'amod'), (('signatures', 'obtains'), 'obl'), (('for', 'messages'), 'case'), (('the', 'messages'), 'det'), (('chosen', 'messages'), 'amod'), (('messages', 'signatures'), 'nmod'), (('.', 'obtains'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 The attack is generic, because it does not depend on A’s public key; the same attack is used against everyone. 

Tokens are: 
>> ['The', 'attack', 'is', 'generic', ',', 'because', 'it', 'does', 'not', 'depend', 'on', 'A', '’s', 'public', 'key', ';', 'the', 'same', 'attack', 'is', 'used', 'against', 'everyone', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('attack', 'NOUN'), ('is', 'AUX'), ('generic', 'ADJ'), (',', 'PUNCT'), ('because', 'SCONJ'), ('it', 'PRON'), ('does', 'AUX'), ('not', 'PART'), ('depend', 'VERB'), ('on', 'ADP'), ('A', 'PROPN'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), (';', 'PUNCT'), ('the', 'DET'), ('same', 'ADJ'), ('attack', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('against', 'ADP'), ('everyone', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('attack', 'NN'), ('is', 'VBZ'), ('generic', 'JJ'), (',', ','), ('because', 'IN'), ('it', 'PRP'), ('does', 'VBZ'), ('not', 'RB'), ('depend', 'VB'), ('on', 'IN'), ('A', 'NNP'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), (';', ':'), ('the', 'DT'), ('same', 'JJ'), ('attack', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('against', 'IN'), ('everyone', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('attack', 'attack'), ('is', 'be'), ('generic', 'generic'), (',', ','), ('because', 'because'), ('it', 'it'), ('does', 'do'), ('not', 'not'), ('depend', 'depend'), ('on', 'on'), ('A', 'A'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), (';', ';'), ('the', 'the'), ('same', 'same'), ('attack', 'attack'), ('is', 'be'), ('used', 'use'), ('against', 'against'), ('everyone', 'everyone'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'attack'), 'det'), (('attack', 'generic'), 'nsubj'), (('is', 'generic'), 'cop'), (('generic', 'root'), 'root'), ((',', 'generic'), 'punct'), (('because', 'depend'), 'mark'), (('it', 'depend'), 'nsubj'), (('does', 'depend'), 'aux'), (('not', 'depend'), 'advmod'), (('depend', 'generic'), 'advcl'), (('on', 'key'), 'case'), (('A', 'key'), 'nmod:poss'), (('’s', 'A'), 'case'), (('public', 'key'), 'amod'), (('key', 'depend'), 'obl'), ((';', 'used'), 'punct'), (('the', 'attack'), 'det'), (('same', 'attack'), 'amod'), (('attack', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'generic'), 'parataxis'), (('against', 'everyone'), 'case'), (('everyone', 'used'), 'obl'), (('.', 'generic'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 Directed chosen message attack: Similar to the generic attack, except that the list of messages to be signed is chosen after C knows A’s public key but before any signatures are seen. 

Tokens are: 
>> ['Directed', 'chosen', 'message', 'attack', ':', 'Similar', 'to', 'the', 'generic', 'attack', ',', 'except', 'that', 'the', 'list', 'of', 'messages', 'to', 'be', 'signed', 'is', 'chosen', 'after', 'C', 'knows', 'A', '’s', 'public', 'key', 'but', 'before', 'any', 'signatures', 'are', 'seen', '.'] 

 UPOS tags are: 
>> [('Directed', 'VERB'), ('chosen', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('Similar', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('generic', 'ADJ'), ('attack', 'NOUN'), (',', 'PUNCT'), ('except', 'ADP'), ('that', 'SCONJ'), ('the', 'DET'), ('list', 'NOUN'), ('of', 'ADP'), ('messages', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('signed', 'VERB'), ('is', 'AUX'), ('chosen', 'VERB'), ('after', 'SCONJ'), ('C', 'PROPN'), ('knows', 'VERB'), ('A', 'DET'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('but', 'CCONJ'), ('before', 'SCONJ'), ('any', 'DET'), ('signatures', 'NOUN'), ('are', 'AUX'), ('seen', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Directed', 'VBN'), ('chosen', 'VBN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('Similar', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('generic', 'JJ'), ('attack', 'NN'), (',', ','), ('except', 'IN'), ('that', 'IN'), ('the', 'DT'), ('list', 'NN'), ('of', 'IN'), ('messages', 'NNS'), ('to', 'TO'), ('be', 'VB'), ('signed', 'VBN'), ('is', 'VBZ'), ('chosen', 'VBN'), ('after', 'IN'), ('C', 'NNP'), ('knows', 'VBZ'), ('A', 'DT'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), ('but', 'CC'), ('before', 'IN'), ('any', 'DT'), ('signatures', 'NNS'), ('are', 'VBP'), ('seen', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Directed', 'direct'), ('chosen', 'choose'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('Similar', 'similar'), ('to', 'to'), ('the', 'the'), ('generic', 'generic'), ('attack', 'attack'), (',', ','), ('except', 'except'), ('that', 'that'), ('the', 'the'), ('list', 'list'), ('of', 'of'), ('messages', 'message'), ('to', 'to'), ('be', 'be'), ('signed', 'sign'), ('is', 'be'), ('chosen', 'choose'), ('after', 'after'), ('C', 'C'), ('knows', 'know'), ('A', 'a'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('but', 'but'), ('before', 'before'), ('any', 'any'), ('signatures', 'signature'), ('are', 'be'), ('seen', 'see'), ('.', '.')] 

 Dependency tags are: 
>> [(('Directed', 'attack'), 'amod'), (('chosen', 'attack'), 'amod'), (('message', 'attack'), 'compound'), (('attack', 'root'), 'root'), ((':', 'attack'), 'punct'), (('Similar', 'attack'), 'amod'), (('to', 'attack'), 'case'), (('the', 'attack'), 'det'), (('generic', 'attack'), 'amod'), (('attack', 'Similar'), 'obl'), ((',', 'chosen'), 'punct'), (('except', 'chosen'), 'mark'), (('that', 'chosen'), 'mark'), (('the', 'list'), 'det'), (('list', 'chosen'), 'nsubj:pass'), (('of', 'messages'), 'case'), (('messages', 'list'), 'nmod'), (('to', 'signed'), 'mark'), (('be', 'signed'), 'aux:pass'), (('signed', 'list'), 'acl'), (('is', 'chosen'), 'aux:pass'), (('chosen', 'attack'), 'parataxis'), (('after', 'knows'), 'mark'), (('C', 'knows'), 'nsubj'), (('knows', 'chosen'), 'advcl'), (('A', 'key'), 'det'), (('’s', 'A'), 'case'), (('public', 'key'), 'amod'), (('key', 'knows'), 'obj'), (('but', 'seen'), 'cc'), (('before', 'seen'), 'mark'), (('any', 'signatures'), 'det'), (('signatures', 'seen'), 'nsubj:pass'), (('are', 'seen'), 'aux:pass'), (('seen', 'knows'), 'conj'), (('.', 'attack'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 20 ===========================

 Adaptive chosen message attack: C is allowed to use A as an “oracle.” 

Tokens are: 
>> ['Adaptive', 'chosen', 'message', 'attack', ':', 'C', 'is', 'allowed', 'to', 'use', 'A', 'as', 'an', '“', 'oracle', '.', '”'] 

 UPOS tags are: 
>> [('Adaptive', 'ADJ'), ('chosen', 'VERB'), ('message', 'NOUN'), ('attack', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('is', 'AUX'), ('allowed', 'VERB'), ('to', 'PART'), ('use', 'VERB'), ('A', 'DET'), ('as', 'ADP'), ('an', 'DET'), ('“', 'PUNCT'), ('oracle', 'NOUN'), ('.', 'PUNCT'), ('”', 'PUNCT')] 

 XPOS tags are: 
>> [('Adaptive', 'JJ'), ('chosen', 'VBN'), ('message', 'NN'), ('attack', 'NN'), (':', ':'), ('C', 'NNP'), ('is', 'VBZ'), ('allowed', 'VBN'), ('to', 'TO'), ('use', 'VB'), ('A', 'DT'), ('as', 'IN'), ('an', 'DT'), ('“', '``'), ('oracle', 'NN'), ('.', '.'), ('”', "''")] 

 Lemmas are: 
>> [('Adaptive', 'adaptive'), ('chosen', 'choose'), ('message', 'message'), ('attack', 'attack'), (':', ':'), ('C', 'C'), ('is', 'be'), ('allowed', 'allow'), ('to', 'to'), ('use', 'use'), ('A', 'a'), ('as', 'as'), ('an', 'a'), ('“', "''"), ('oracle', 'oracle'), ('.', '.'), ('”', "''")] 

 Dependency tags are: 
>> [(('Adaptive', 'attack'), 'amod'), (('chosen', 'attack'), 'amod'), (('message', 'attack'), 'compound'), (('attack', 'root'), 'root'), ((':', 'attack'), 'punct'), (('C', 'allowed'), 'nsubj:pass'), (('is', 'allowed'), 'aux:pass'), (('allowed', 'attack'), 'parataxis'), (('to', 'use'), 'mark'), (('use', 'allowed'), 'xcomp'), (('A', 'use'), 'obj'), (('as', 'oracle'), 'case'), (('an', 'oracle'), 'det'), (('“', 'oracle'), 'punct'), (('oracle', 'use'), 'obl'), (('.', 'oracle'), 'punct'), (('”', 'oracle'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 21 ===========================

 This means the A may request signatures of messages that depend on previously obtained message–signature pairs. 

Tokens are: 
>> ['This', 'means', 'the', 'A', 'may', 'request', 'signatures', 'of', 'messages', 'that', 'depend', 'on', 'previously', 'obtained', 'message–signature', 'pairs', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('means', 'VERB'), ('the', 'DET'), ('A', 'NOUN'), ('may', 'AUX'), ('request', 'VERB'), ('signatures', 'NOUN'), ('of', 'ADP'), ('messages', 'NOUN'), ('that', 'PRON'), ('depend', 'VERB'), ('on', 'ADP'), ('previously', 'ADV'), ('obtained', 'VERB'), ('message–signature', 'NOUN'), ('pairs', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('means', 'VBZ'), ('the', 'DT'), ('A', 'NN'), ('may', 'MD'), ('request', 'VB'), ('signatures', 'NNS'), ('of', 'IN'), ('messages', 'NNS'), ('that', 'WDT'), ('depend', 'VBP'), ('on', 'IN'), ('previously', 'RB'), ('obtained', 'VBN'), ('message–signature', 'NN'), ('pairs', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('means', 'mean'), ('the', 'the'), ('A', 'a'), ('may', 'may'), ('request', 'request'), ('signatures', 'signature'), ('of', 'of'), ('messages', 'message'), ('that', 'that'), ('depend', 'depend'), ('on', 'on'), ('previously', 'previously'), ('obtained', 'obtain'), ('message–signature', 'message–signature'), ('pairs', 'pair'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'means'), 'nsubj'), (('means', 'root'), 'root'), (('the', 'A'), 'det'), (('A', 'request'), 'nsubj'), (('may', 'request'), 'aux'), (('request', 'means'), 'ccomp'), (('signatures', 'request'), 'obj'), (('of', 'messages'), 'case'), (('messages', 'signatures'), 'nmod'), (('that', 'depend'), 'nsubj'), (('depend', 'messages'), 'acl:relcl'), (('on', 'pairs'), 'case'), (('previously', 'obtained'), 'advmod'), (('obtained', 'pairs'), 'amod'), (('message–signature', 'pairs'), 'compound'), (('pairs', 'depend'), 'obl'), (('.', 'means'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Attacks and Forgeries Total break: C determines A’s private key. 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Attacks', 'and', 'Forgeries', 'Total', 'break', ':', 'C', 'determines', 'A', '’s', 'private', 'key', '.'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('Attacks', 'PROPN'), ('and', 'CCONJ'), ('Forgeries', 'PROPN'), ('Total', 'ADJ'), ('break', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('determines', 'VERB'), ('A', 'DET'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('Attacks', 'NNPS'), ('and', 'CC'), ('Forgeries', 'NNPS'), ('Total', 'JJ'), ('break', 'NN'), (':', ':'), ('C', 'NNP'), ('determines', 'VBZ'), ('A', 'DT'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Attacks', 'Attacks'), ('and', 'and'), ('Forgeries', 'Forgery'), ('Total', 'total'), ('break', 'break'), (':', ':'), ('C', 'C'), ('determines', 'determine'), ('A', 'a'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'root'), 'root'), (('of', 'Attacks'), 'case'), (('Engineering', 'Attacks'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Attacks'), 'compound'), (('Attacks', 'Institute'), 'nmod'), (('and', 'Forgeries'), 'cc'), (('Forgeries', 'Attacks'), 'conj'), (('Total', 'break'), 'amod'), (('break', 'Institute'), 'conj'), ((':', 'determines'), 'punct'), (('C', 'determines'), 'nsubj'), (('determines', 'break'), 'parataxis'), (('A', 'key'), 'nmod:poss'), (('’s', 'A'), 'case'), (('private', 'key'), 'amod'), (('key', 'determines'), 'obj'), (('.', 'determines'), 'punct')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Attacks', 'ORG')]

========================== Sentence 23 ===========================

 Universal forgery: C finds an efficient signing algorithm that provides an equivalent way of constructing signatures on arbitrary messages. 

Tokens are: 
>> ['Universal', 'forgery', ':', 'C', 'finds', 'an', 'efficient', 'signing', 'algorithm', 'that', 'provides', 'an', 'equivalent', 'way', 'of', 'constructing', 'signatures', 'on', 'arbitrary', 'messages', '.'] 

 UPOS tags are: 
>> [('Universal', 'ADJ'), ('forgery', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('finds', 'VERB'), ('an', 'DET'), ('efficient', 'ADJ'), ('signing', 'NOUN'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('provides', 'VERB'), ('an', 'DET'), ('equivalent', 'ADJ'), ('way', 'NOUN'), ('of', 'SCONJ'), ('constructing', 'VERB'), ('signatures', 'NOUN'), ('on', 'ADP'), ('arbitrary', 'ADJ'), ('messages', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Universal', 'JJ'), ('forgery', 'NN'), (':', ':'), ('C', 'NNP'), ('finds', 'VBZ'), ('an', 'DT'), ('efficient', 'JJ'), ('signing', 'NN'), ('algorithm', 'NN'), ('that', 'WDT'), ('provides', 'VBZ'), ('an', 'DT'), ('equivalent', 'JJ'), ('way', 'NN'), ('of', 'IN'), ('constructing', 'VBG'), ('signatures', 'NNS'), ('on', 'IN'), ('arbitrary', 'JJ'), ('messages', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Universal', 'Universal'), ('forgery', 'forgery'), (':', ':'), ('C', 'C'), ('finds', 'find'), ('an', 'a'), ('efficient', 'efficient'), ('signing', 'signing'), ('algorithm', 'algorithm'), ('that', 'that'), ('provides', 'provide'), ('an', 'a'), ('equivalent', 'equivalent'), ('way', 'way'), ('of', 'of'), ('constructing', 'construct'), ('signatures', 'signature'), ('on', 'on'), ('arbitrary', 'arbitrary'), ('messages', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('Universal', 'forgery'), 'amod'), (('forgery', 'root'), 'root'), ((':', 'forgery'), 'punct'), (('C', 'finds'), 'nsubj'), (('finds', 'forgery'), 'appos'), (('an', 'algorithm'), 'det'), (('efficient', 'algorithm'), 'amod'), (('signing', 'algorithm'), 'compound'), (('algorithm', 'finds'), 'obj'), (('that', 'provides'), 'nsubj'), (('provides', 'algorithm'), 'acl:relcl'), (('an', 'way'), 'det'), (('equivalent', 'way'), 'amod'), (('way', 'provides'), 'obj'), (('of', 'constructing'), 'mark'), (('constructing', 'way'), 'acl'), (('signatures', 'constructing'), 'obj'), (('on', 'messages'), 'case'), (('arbitrary', 'messages'), 'amod'), (('messages', 'constructing'), 'obl'), (('.', 'forgery'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 24 ===========================

 Selective forgery: C forges a signature for a particular message chosen by C. Existential forgery: C forges a signature for at least one message. 

Tokens are: 
>> ['Selective', 'forgery', ':', 'C', 'forges', 'a', 'signature', 'for', 'a', 'particular', 'message', 'chosen', 'by', 'C.', 'Existential', 'forgery', ':', 'C', 'forges', 'a', 'signature', 'for', 'at', 'least', 'one', 'message', '.'] 

 UPOS tags are: 
>> [('Selective', 'ADJ'), ('forgery', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('forges', 'VERB'), ('a', 'DET'), ('signature', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('particular', 'ADJ'), ('message', 'NOUN'), ('chosen', 'VERB'), ('by', 'ADP'), ('C.', 'NOUN'), ('Existential', 'ADJ'), ('forgery', 'NOUN'), (':', 'PUNCT'), ('C', 'PROPN'), ('forges', 'VERB'), ('a', 'DET'), ('signature', 'NOUN'), ('for', 'ADP'), ('at', 'ADP'), ('least', 'ADJ'), ('one', 'NUM'), ('message', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Selective', 'JJ'), ('forgery', 'NN'), (':', ':'), ('C', 'NNP'), ('forges', 'VBZ'), ('a', 'DT'), ('signature', 'NN'), ('for', 'IN'), ('a', 'DT'), ('particular', 'JJ'), ('message', 'NN'), ('chosen', 'VBN'), ('by', 'IN'), ('C.', 'NN'), ('Existential', 'JJ'), ('forgery', 'NN'), (':', ':'), ('C', 'NNP'), ('forges', 'VBZ'), ('a', 'DT'), ('signature', 'NN'), ('for', 'IN'), ('at', 'IN'), ('least', 'JJS'), ('one', 'CD'), ('message', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Selective', 'selective'), ('forgery', 'forgery'), (':', ':'), ('C', 'C'), ('forges', 'forge'), ('a', 'a'), ('signature', 'signature'), ('for', 'for'), ('a', 'a'), ('particular', 'particular'), ('message', 'message'), ('chosen', 'choose'), ('by', 'by'), ('C.', 'C.'), ('Existential', 'existential'), ('forgery', 'forgery'), (':', ':'), ('C', 'C'), ('forges', 'forge'), ('a', 'a'), ('signature', 'signature'), ('for', 'for'), ('at', 'at'), ('least', 'least'), ('one', 'one'), ('message', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('Selective', 'forgery'), 'amod'), (('forgery', 'root'), 'root'), ((':', 'forgery'), 'punct'), (('C', 'forges'), 'nsubj'), (('forges', 'forgery'), 'appos'), (('a', 'signature'), 'det'), (('signature', 'forges'), 'obj'), (('for', 'message'), 'case'), (('a', 'message'), 'det'), (('particular', 'message'), 'amod'), (('message', 'signature'), 'nmod'), (('chosen', 'message'), 'acl'), (('by', 'forgery'), 'case'), (('C.', 'forgery'), 'det'), (('Existential', 'forgery'), 'amod'), (('forgery', 'chosen'), 'obl'), ((':', 'forges'), 'punct'), (('C', 'forges'), 'nsubj'), (('forges', 'forgery'), 'parataxis'), (('a', 'signature'), 'det'), (('signature', 'forges'), 'obj'), (('for', 'message'), 'case'), (('at', 'least'), 'case'), (('least', 'one'), 'nmod'), (('one', 'message'), 'nummod'), (('message', 'forges'), 'obl'), (('.', 'forgery'), 'punct')]

 Named Entities are: 
>> [('at least one', 'CARDINAL')]

========================== Sentence 25 ===========================

 C has no control over the message. 

Tokens are: 
>> ['C', 'has', 'no', 'control', 'over', 'the', 'message', '.'] 

 UPOS tags are: 
>> [('C', 'PROPN'), ('has', 'VERB'), ('no', 'DET'), ('control', 'NOUN'), ('over', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('C', 'NNP'), ('has', 'VBZ'), ('no', 'DT'), ('control', 'NN'), ('over', 'IN'), ('the', 'DT'), ('message', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('C', 'C'), ('has', 'have'), ('no', 'no'), ('control', 'control'), ('over', 'over'), ('the', 'the'), ('message', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('C', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('no', 'control'), 'det'), (('control', 'has'), 'obj'), (('over', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'control'), 'nmod'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 Consequently, this forgery may only be a minor nuisance to A.  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Requirements 

Tokens are: 
>> ['Consequently', ',', 'this', 'forgery', 'may', 'only', 'be', 'a', 'minor', 'nuisance', 'to', 'A.', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Digital', 'Signature', 'Requirements'] 

 UPOS tags are: 
>> [('Consequently', 'ADV'), (',', 'PUNCT'), ('this', 'DET'), ('forgery', 'NOUN'), ('may', 'AUX'), ('only', 'ADV'), ('be', 'AUX'), ('a', 'DET'), ('minor', 'ADJ'), ('nuisance', 'NOUN'), ('to', 'ADP'), ('A.', 'PROPN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Requirements', 'NOUN')] 

 XPOS tags are: 
>> [('Consequently', 'RB'), (',', ','), ('this', 'DT'), ('forgery', 'NN'), ('may', 'MD'), ('only', 'RB'), ('be', 'VB'), ('a', 'DT'), ('minor', 'JJ'), ('nuisance', 'NN'), ('to', 'IN'), ('A.', 'NNP'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Requirements', 'NNS')] 

 Lemmas are: 
>> [('Consequently', 'consequently'), (',', ','), ('this', 'this'), ('forgery', 'forgery'), ('may', 'may'), ('only', 'only'), ('be', 'be'), ('a', 'a'), ('minor', 'minor'), ('nuisance', 'nuisance'), ('to', 'to'), ('A.', 'A.'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Digital', 'digital'), ('Signature', 'signature'), ('Requirements', 'requirement')] 

 Dependency tags are: 
>> [(('Consequently', 'nuisance'), 'advmod'), ((',', 'nuisance'), 'punct'), (('this', 'forgery'), 'det'), (('forgery', 'nuisance'), 'nsubj'), (('may', 'nuisance'), 'aux'), (('only', 'nuisance'), 'advmod'), (('be', 'nuisance'), 'cop'), (('a', 'nuisance'), 'det'), (('minor', 'nuisance'), 'amod'), (('nuisance', 'root'), 'root'), (('to', 'Institute'), 'case'), (('A.', 'Unit'), 'compound'), (('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'nuisance'), 'nmod'), (('of', 'Requirements'), 'case'), (('Engineering', 'Requirements'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Requirements'), 'compound'), (('Digital', 'Requirements'), 'amod'), (('Signature', 'Requirements'), 'compound'), (('Requirements', 'Institute'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 27 ===========================

 The signature must be a bit pattern that depends on the message being signed. 

Tokens are: 
>> ['The', 'signature', 'must', 'be', 'a', 'bit', 'pattern', 'that', 'depends', 'on', 'the', 'message', 'being', 'signed', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('signature', 'NOUN'), ('must', 'AUX'), ('be', 'AUX'), ('a', 'DET'), ('bit', 'NOUN'), ('pattern', 'NOUN'), ('that', 'PRON'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('being', 'AUX'), ('signed', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('signature', 'NN'), ('must', 'MD'), ('be', 'VB'), ('a', 'DT'), ('bit', 'NN'), ('pattern', 'NN'), ('that', 'WDT'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('message', 'NN'), ('being', 'VBG'), ('signed', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('signature', 'signature'), ('must', 'must'), ('be', 'be'), ('a', 'a'), ('bit', 'bit'), ('pattern', 'pattern'), ('that', 'that'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('message', 'message'), ('being', 'be'), ('signed', 'sign'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'signature'), 'det'), (('signature', 'pattern'), 'nsubj'), (('must', 'pattern'), 'aux'), (('be', 'pattern'), 'cop'), (('a', 'pattern'), 'det'), (('bit', 'pattern'), 'compound'), (('pattern', 'root'), 'root'), (('that', 'depends'), 'nsubj'), (('depends', 'pattern'), 'acl:relcl'), (('on', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'depends'), 'obl'), (('being', 'signed'), 'aux:pass'), (('signed', 'message'), 'acl'), (('.', 'pattern'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 The signature must use some information unique to the sender to prevent both forgery and denial. 

Tokens are: 
>> ['The', 'signature', 'must', 'use', 'some', 'information', 'unique', 'to', 'the', 'sender', 'to', 'prevent', 'both', 'forgery', 'and', 'denial', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('signature', 'NOUN'), ('must', 'AUX'), ('use', 'VERB'), ('some', 'DET'), ('information', 'NOUN'), ('unique', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('sender', 'NOUN'), ('to', 'PART'), ('prevent', 'VERB'), ('both', 'DET'), ('forgery', 'NOUN'), ('and', 'CCONJ'), ('denial', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('signature', 'NN'), ('must', 'MD'), ('use', 'VB'), ('some', 'DT'), ('information', 'NN'), ('unique', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('sender', 'NN'), ('to', 'TO'), ('prevent', 'VB'), ('both', 'DT'), ('forgery', 'NN'), ('and', 'CC'), ('denial', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('signature', 'signature'), ('must', 'must'), ('use', 'use'), ('some', 'some'), ('information', 'information'), ('unique', 'unique'), ('to', 'to'), ('the', 'the'), ('sender', 'sender'), ('to', 'to'), ('prevent', 'prevent'), ('both', 'both'), ('forgery', 'forgery'), ('and', 'and'), ('denial', 'denial'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'signature'), 'det'), (('signature', 'use'), 'nsubj'), (('must', 'use'), 'aux'), (('use', 'root'), 'root'), (('some', 'information'), 'det'), (('information', 'use'), 'obj'), (('unique', 'information'), 'amod'), (('to', 'sender'), 'case'), (('the', 'sender'), 'det'), (('sender', 'unique'), 'obl'), (('to', 'prevent'), 'mark'), (('prevent', 'unique'), 'advcl'), (('both', 'forgery'), 'cc:preconj'), (('forgery', 'prevent'), 'obj'), (('and', 'denial'), 'cc'), (('denial', 'forgery'), 'conj'), (('.', 'use'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 29 ===========================

 It must be relatively easy to produce the digital signature. 

Tokens are: 
>> ['It', 'must', 'be', 'relatively', 'easy', 'to', 'produce', 'the', 'digital', 'signature', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('relatively', 'ADV'), ('easy', 'ADJ'), ('to', 'PART'), ('produce', 'VERB'), ('the', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('relatively', 'RB'), ('easy', 'JJ'), ('to', 'TO'), ('produce', 'VB'), ('the', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('must', 'must'), ('be', 'be'), ('relatively', 'relatively'), ('easy', 'easy'), ('to', 'to'), ('produce', 'produce'), ('the', 'the'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'easy'), 'expl'), (('must', 'easy'), 'aux'), (('be', 'easy'), 'cop'), (('relatively', 'easy'), 'advmod'), (('easy', 'root'), 'root'), (('to', 'produce'), 'mark'), (('produce', 'easy'), 'csubj'), (('the', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'produce'), 'obj'), (('.', 'easy'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 It must be relatively easy to recognize and verify the digital signature. 

Tokens are: 
>> ['It', 'must', 'be', 'relatively', 'easy', 'to', 'recognize', 'and', 'verify', 'the', 'digital', 'signature', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('relatively', 'ADV'), ('easy', 'ADJ'), ('to', 'PART'), ('recognize', 'VERB'), ('and', 'CCONJ'), ('verify', 'VERB'), ('the', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('relatively', 'RB'), ('easy', 'JJ'), ('to', 'TO'), ('recognize', 'VB'), ('and', 'CC'), ('verify', 'VB'), ('the', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('must', 'must'), ('be', 'be'), ('relatively', 'relatively'), ('easy', 'easy'), ('to', 'to'), ('recognize', 'recognize'), ('and', 'and'), ('verify', 'verify'), ('the', 'the'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'easy'), 'expl'), (('must', 'easy'), 'aux'), (('be', 'easy'), 'cop'), (('relatively', 'easy'), 'advmod'), (('easy', 'root'), 'root'), (('to', 'recognize'), 'mark'), (('recognize', 'easy'), 'csubj'), (('and', 'verify'), 'cc'), (('verify', 'recognize'), 'conj'), (('the', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'verify'), 'obj'), (('.', 'easy'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 31 ===========================

 It must be computationally infeasible to forge a digital signature, either by constructing a new message for an existing digital signature or by constructing a fraudulent digital signature for a given message. 

Tokens are: 
>> ['It', 'must', 'be', 'computationally', 'infeasible', 'to', 'forge', 'a', 'digital', 'signature', ',', 'either', 'by', 'constructing', 'a', 'new', 'message', 'for', 'an', 'existing', 'digital', 'signature', 'or', 'by', 'constructing', 'a', 'fraudulent', 'digital', 'signature', 'for', 'a', 'given', 'message', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('computationally', 'ADV'), ('infeasible', 'ADJ'), ('to', 'PART'), ('forge', 'VERB'), ('a', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), (',', 'PUNCT'), ('either', 'CCONJ'), ('by', 'SCONJ'), ('constructing', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('message', 'NOUN'), ('for', 'ADP'), ('an', 'DET'), ('existing', 'VERB'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('or', 'CCONJ'), ('by', 'SCONJ'), ('constructing', 'VERB'), ('a', 'DET'), ('fraudulent', 'ADJ'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('for', 'ADP'), ('a', 'DET'), ('given', 'VERB'), ('message', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('computationally', 'RB'), ('infeasible', 'JJ'), ('to', 'TO'), ('forge', 'VB'), ('a', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), (',', ','), ('either', 'CC'), ('by', 'IN'), ('constructing', 'VBG'), ('a', 'DT'), ('new', 'JJ'), ('message', 'NN'), ('for', 'IN'), ('an', 'DT'), ('existing', 'VBG'), ('digital', 'JJ'), ('signature', 'NN'), ('or', 'CC'), ('by', 'IN'), ('constructing', 'VBG'), ('a', 'DT'), ('fraudulent', 'JJ'), ('digital', 'JJ'), ('signature', 'NN'), ('for', 'IN'), ('a', 'DT'), ('given', 'VBN'), ('message', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('must', 'must'), ('be', 'be'), ('computationally', 'computationally'), ('infeasible', 'infeasible'), ('to', 'to'), ('forge', 'forge'), ('a', 'a'), ('digital', 'digital'), ('signature', 'signature'), (',', ','), ('either', 'either'), ('by', 'by'), ('constructing', 'construct'), ('a', 'a'), ('new', 'new'), ('message', 'message'), ('for', 'for'), ('an', 'a'), ('existing', 'exist'), ('digital', 'digital'), ('signature', 'signature'), ('or', 'or'), ('by', 'by'), ('constructing', 'construct'), ('a', 'a'), ('fraudulent', 'fraudulent'), ('digital', 'digital'), ('signature', 'signature'), ('for', 'for'), ('a', 'a'), ('given', 'give'), ('message', 'message'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'infeasible'), 'expl'), (('must', 'infeasible'), 'aux'), (('be', 'infeasible'), 'cop'), (('computationally', 'infeasible'), 'advmod'), (('infeasible', 'root'), 'root'), (('to', 'forge'), 'mark'), (('forge', 'infeasible'), 'csubj'), (('a', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'forge'), 'obj'), ((',', 'constructing'), 'punct'), (('either', 'constructing'), 'cc:preconj'), (('by', 'constructing'), 'mark'), (('constructing', 'forge'), 'advcl'), (('a', 'message'), 'det'), (('new', 'message'), 'amod'), (('message', 'constructing'), 'obj'), (('for', 'signature'), 'case'), (('an', 'signature'), 'det'), (('existing', 'signature'), 'amod'), (('digital', 'signature'), 'amod'), (('signature', 'message'), 'nmod'), (('or', 'constructing'), 'cc'), (('by', 'constructing'), 'mark'), (('constructing', 'constructing'), 'conj'), (('a', 'signature'), 'det'), (('fraudulent', 'signature'), 'amod'), (('digital', 'signature'), 'amod'), (('signature', 'constructing'), 'obj'), (('for', 'message'), 'case'), (('a', 'message'), 'det'), (('given', 'message'), 'amod'), (('message', 'signature'), 'nmod'), (('.', 'infeasible'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 It must be practical to retain a copy of the digital signature in storage. 

Tokens are: 
>> ['It', 'must', 'be', 'practical', 'to', 'retain', 'a', 'copy', 'of', 'the', 'digital', 'signature', 'in', 'storage', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('must', 'AUX'), ('be', 'AUX'), ('practical', 'ADJ'), ('to', 'PART'), ('retain', 'VERB'), ('a', 'DET'), ('copy', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('in', 'ADP'), ('storage', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('practical', 'JJ'), ('to', 'TO'), ('retain', 'VB'), ('a', 'DT'), ('copy', 'NN'), ('of', 'IN'), ('the', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('in', 'IN'), ('storage', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('must', 'must'), ('be', 'be'), ('practical', 'practical'), ('to', 'to'), ('retain', 'retain'), ('a', 'a'), ('copy', 'copy'), ('of', 'of'), ('the', 'the'), ('digital', 'digital'), ('signature', 'signature'), ('in', 'in'), ('storage', 'storage'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'practical'), 'expl'), (('must', 'practical'), 'aux'), (('be', 'practical'), 'cop'), (('practical', 'root'), 'root'), (('to', 'retain'), 'mark'), (('retain', 'practical'), 'csubj'), (('a', 'copy'), 'det'), (('copy', 'retain'), 'obj'), (('of', 'signature'), 'case'), (('the', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'copy'), 'nmod'), (('in', 'storage'), 'case'), (('storage', 'signature'), 'nmod'), (('.', 'practical'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Standard / DSA 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Digital', 'Signature', 'Standard', '/', 'DSA'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Standard', 'PROPN'), ('/', 'SYM'), ('DSA', 'PROPN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Standard', 'NNP'), ('/', ','), ('DSA', 'NNP')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Standard', 'Standard'), ('/', '/'), ('DSA', 'DSA')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('Digital', 'Standard'), 'amod'), (('Signature', 'Standard'), 'compound'), (('Standard', 'Institute'), 'nmod'), (('/', 'DSA'), 'cc'), (('DSA', 'Standard'), 'conj')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Standard / DSA', 'ORG')]

========================== Sentence 34 ===========================

 The DSS uses an algorithm that is designed to provide only the digital signature function. 

Tokens are: 
>> ['The', 'DSS', 'uses', 'an', 'algorithm', 'that', 'is', 'designed', 'to', 'provide', 'only', 'the', 'digital', 'signature', 'function', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('DSS', 'PROPN'), ('uses', 'VERB'), ('an', 'DET'), ('algorithm', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('designed', 'VERB'), ('to', 'PART'), ('provide', 'VERB'), ('only', 'ADV'), ('the', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('DSS', 'NNP'), ('uses', 'VBZ'), ('an', 'DT'), ('algorithm', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('designed', 'VBN'), ('to', 'TO'), ('provide', 'VB'), ('only', 'RB'), ('the', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('DSS', 'DSS'), ('uses', 'use'), ('an', 'a'), ('algorithm', 'algorithm'), ('that', 'that'), ('is', 'be'), ('designed', 'design'), ('to', 'to'), ('provide', 'provide'), ('only', 'only'), ('the', 'the'), ('digital', 'digital'), ('signature', 'signature'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'DSS'), 'det'), (('DSS', 'uses'), 'nsubj'), (('uses', 'root'), 'root'), (('an', 'algorithm'), 'det'), (('algorithm', 'uses'), 'obj'), (('that', 'designed'), 'nsubj:pass'), (('is', 'designed'), 'aux:pass'), (('designed', 'algorithm'), 'acl:relcl'), (('to', 'provide'), 'mark'), (('provide', 'designed'), 'xcomp'), (('only', 'function'), 'advmod'), (('the', 'function'), 'det'), (('digital', 'function'), 'amod'), (('signature', 'function'), 'compound'), (('function', 'provide'), 'obj'), (('.', 'uses'), 'punct')]

 Named Entities are: 
>> [('DSS', 'ORG')]

========================== Sentence 35 ===========================

 Unlike RSA, it cannot be used for encryption or key exchange. 

Tokens are: 
>> ['Unlike', 'RSA', ',', 'it', 'cannot', 'be', 'used', 'for', 'encryption', 'or', 'key', 'exchange', '.'] 

 UPOS tags are: 
>> [('Unlike', 'ADP'), ('RSA', 'PROPN'), (',', 'PUNCT'), ('it', 'PRON'), ('cannot', 'AUX'), ('be', 'AUX'), ('used', 'VERB'), ('for', 'ADP'), ('encryption', 'NOUN'), ('or', 'CCONJ'), ('key', 'ADJ'), ('exchange', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Unlike', 'IN'), ('RSA', 'NNP'), (',', ','), ('it', 'PRP'), ('cannot', 'MD'), ('be', 'VB'), ('used', 'VBN'), ('for', 'IN'), ('encryption', 'NN'), ('or', 'CC'), ('key', 'JJ'), ('exchange', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Unlike', 'unlike'), ('RSA', 'RSA'), (',', ','), ('it', 'it'), ('cannot', 'cannot'), ('be', 'be'), ('used', 'use'), ('for', 'for'), ('encryption', 'encryption'), ('or', 'or'), ('key', 'key'), ('exchange', 'exchange'), ('.', '.')] 

 Dependency tags are: 
>> [(('Unlike', 'RSA'), 'case'), (('RSA', 'used'), 'obl'), ((',', 'used'), 'punct'), (('it', 'used'), 'nsubj:pass'), (('cannot', 'used'), 'aux'), (('be', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('for', 'encryption'), 'case'), (('encryption', 'used'), 'obl'), (('or', 'exchange'), 'cc'), (('key', 'exchange'), 'amod'), (('exchange', 'encryption'), 'conj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> [('RSA', 'ORG')]

========================== Sentence 36 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  RSA Approach 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'RSA', 'Approach'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('RSA', 'PROPN'), ('Approach', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('RSA', 'NNP'), ('Approach', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('RSA', 'RSA'), ('Approach', 'approach')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Approach'), 'case'), (('Engineering', 'Approach'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Approach'), 'compound'), (('RSA', 'Approach'), 'compound'), (('Approach', 'Institute'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 37 ===========================

 In the RSA approach, the message to be signed is input to a hash function that produces a secure hash code of fixed length. 

Tokens are: 
>> ['In', 'the', 'RSA', 'approach', ',', 'the', 'message', 'to', 'be', 'signed', 'is', 'input', 'to', 'a', 'hash', 'function', 'that', 'produces', 'a', 'secure', 'hash', 'code', 'of', 'fixed', 'length', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('RSA', 'PROPN'), ('approach', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('message', 'NOUN'), ('to', 'PART'), ('be', 'AUX'), ('signed', 'VERB'), ('is', 'AUX'), ('input', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('hash', 'NOUN'), ('function', 'NOUN'), ('that', 'PRON'), ('produces', 'VERB'), ('a', 'DET'), ('secure', 'ADJ'), ('hash', 'NOUN'), ('code', 'NOUN'), ('of', 'ADP'), ('fixed', 'VERB'), ('length', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('RSA', 'NNP'), ('approach', 'NN'), (',', ','), ('the', 'DT'), ('message', 'NN'), ('to', 'TO'), ('be', 'VB'), ('signed', 'VBN'), ('is', 'VBZ'), ('input', 'NN'), ('to', 'IN'), ('a', 'DT'), ('hash', 'NN'), ('function', 'NN'), ('that', 'WDT'), ('produces', 'VBZ'), ('a', 'DT'), ('secure', 'JJ'), ('hash', 'NN'), ('code', 'NN'), ('of', 'IN'), ('fixed', 'VBN'), ('length', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('RSA', 'RSA'), ('approach', 'approach'), (',', ','), ('the', 'the'), ('message', 'message'), ('to', 'to'), ('be', 'be'), ('signed', 'sign'), ('is', 'be'), ('input', 'input'), ('to', 'to'), ('a', 'a'), ('hash', 'hash'), ('function', 'function'), ('that', 'that'), ('produces', 'produce'), ('a', 'a'), ('secure', 'secure'), ('hash', 'hash'), ('code', 'code'), ('of', 'of'), ('fixed', 'fix'), ('length', 'length'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'approach'), 'case'), (('the', 'approach'), 'det'), (('RSA', 'approach'), 'compound'), (('approach', 'input'), 'obl'), ((',', 'input'), 'punct'), (('the', 'message'), 'det'), (('message', 'input'), 'nsubj'), (('to', 'signed'), 'mark'), (('be', 'signed'), 'aux:pass'), (('signed', 'message'), 'acl'), (('is', 'input'), 'cop'), (('input', 'root'), 'root'), (('to', 'function'), 'case'), (('a', 'function'), 'det'), (('hash', 'function'), 'compound'), (('function', 'input'), 'nmod'), (('that', 'produces'), 'nsubj'), (('produces', 'function'), 'acl:relcl'), (('a', 'code'), 'det'), (('secure', 'code'), 'amod'), (('hash', 'code'), 'compound'), (('code', 'produces'), 'obj'), (('of', 'length'), 'case'), (('fixed', 'length'), 'amod'), (('length', 'code'), 'nmod'), (('.', 'input'), 'punct')]

 Named Entities are: 
>> [('RSA', 'LAW')]

========================== Sentence 38 ===========================

 This hash code is then encrypted using the sender’s private key to form the signature. 

Tokens are: 
>> ['This', 'hash', 'code', 'is', 'then', 'encrypted', 'using', 'the', 'sender', '’s', 'private', 'key', 'to', 'form', 'the', 'signature', '.'] 

 UPOS tags are: 
>> [('This', 'DET'), ('hash', 'NOUN'), ('code', 'NOUN'), ('is', 'AUX'), ('then', 'ADV'), ('encrypted', 'VERB'), ('using', 'VERB'), ('the', 'DET'), ('sender', 'NOUN'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('to', 'PART'), ('form', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('is', 'VBZ'), ('then', 'RB'), ('encrypted', 'VBN'), ('using', 'VBG'), ('the', 'DT'), ('sender', 'NN'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'NN'), ('to', 'TO'), ('form', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('hash', 'hash'), ('code', 'code'), ('is', 'be'), ('then', 'then'), ('encrypted', 'encrypt'), ('using', 'use'), ('the', 'the'), ('sender', 'sender'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('to', 'to'), ('form', 'form'), ('the', 'the'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'code'), 'det'), (('hash', 'code'), 'compound'), (('code', 'encrypted'), 'nsubj:pass'), (('is', 'encrypted'), 'aux:pass'), (('then', 'encrypted'), 'advmod'), (('encrypted', 'root'), 'root'), (('using', 'encrypted'), 'advcl'), (('the', 'sender'), 'det'), (('sender', 'key'), 'nmod:poss'), (('’s', 'sender'), 'case'), (('private', 'key'), 'amod'), (('key', 'using'), 'obj'), (('to', 'form'), 'mark'), (('form', 'using'), 'advcl'), (('the', 'signature'), 'det'), (('signature', 'form'), 'obj'), (('.', 'encrypted'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 39 ===========================

 Both the message and the signature are then transmitted. 

Tokens are: 
>> ['Both', 'the', 'message', 'and', 'the', 'signature', 'are', 'then', 'transmitted', '.'] 

 UPOS tags are: 
>> [('Both', 'CCONJ'), ('the', 'DET'), ('message', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('signature', 'NOUN'), ('are', 'AUX'), ('then', 'ADV'), ('transmitted', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Both', 'CC'), ('the', 'DT'), ('message', 'NN'), ('and', 'CC'), ('the', 'DT'), ('signature', 'NN'), ('are', 'VBP'), ('then', 'RB'), ('transmitted', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Both', 'both'), ('the', 'the'), ('message', 'message'), ('and', 'and'), ('the', 'the'), ('signature', 'signature'), ('are', 'be'), ('then', 'then'), ('transmitted', 'transmit'), ('.', '.')] 

 Dependency tags are: 
>> [(('Both', 'message'), 'cc:preconj'), (('the', 'message'), 'det'), (('message', 'transmitted'), 'nsubj:pass'), (('and', 'signature'), 'cc'), (('the', 'signature'), 'det'), (('signature', 'message'), 'conj'), (('are', 'transmitted'), 'aux:pass'), (('then', 'transmitted'), 'advmod'), (('transmitted', 'root'), 'root'), (('.', 'transmitted'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 The recipient takes the message and  produces a hash code. 

Tokens are: 
>> ['The', 'recipient', 'takes', 'the', 'message', 'and', 'produces', 'a', 'hash', 'code', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('recipient', 'NOUN'), ('takes', 'VERB'), ('the', 'DET'), ('message', 'NOUN'), ('and', 'CCONJ'), ('produces', 'VERB'), ('a', 'DET'), ('hash', 'NOUN'), ('code', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('recipient', 'NN'), ('takes', 'VBZ'), ('the', 'DT'), ('message', 'NN'), ('and', 'CC'), ('produces', 'VBZ'), ('a', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('recipient', 'recipient'), ('takes', 'take'), ('the', 'the'), ('message', 'message'), ('and', 'and'), ('produces', 'produce'), ('a', 'a'), ('hash', 'hash'), ('code', 'code'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'recipient'), 'det'), (('recipient', 'takes'), 'nsubj'), (('takes', 'root'), 'root'), (('the', 'message'), 'det'), (('message', 'takes'), 'obj'), (('and', 'produces'), 'cc'), (('produces', 'takes'), 'conj'), (('a', 'code'), 'det'), (('hash', 'code'), 'compound'), (('code', 'produces'), 'obj'), (('.', 'takes'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 41 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  RSA Approach 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'RSA', 'Approach'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('RSA', 'PROPN'), ('Approach', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('RSA', 'NNP'), ('Approach', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('RSA', 'RSA'), ('Approach', 'approach')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Approach'), 'case'), (('Engineering', 'Approach'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Approach'), 'compound'), (('RSA', 'Approach'), 'compound'), (('Approach', 'Institute'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 42 ===========================

 The recipient also decrypts the signature using the sender’s public key. 

Tokens are: 
>> ['The', 'recipient', 'also', 'decrypts', 'the', 'signature', 'using', 'the', 'sender', '’s', 'public', 'key', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('recipient', 'NOUN'), ('also', 'ADV'), ('decrypts', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('using', 'VERB'), ('the', 'DET'), ('sender', 'NOUN'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('recipient', 'NN'), ('also', 'RB'), ('decrypts', 'VBZ'), ('the', 'DT'), ('signature', 'NN'), ('using', 'VBG'), ('the', 'DT'), ('sender', 'NN'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('recipient', 'recipient'), ('also', 'also'), ('decrypts', 'decrypt'), ('the', 'the'), ('signature', 'signature'), ('using', 'use'), ('the', 'the'), ('sender', 'sender'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'recipient'), 'det'), (('recipient', 'decrypts'), 'nsubj'), (('also', 'decrypts'), 'advmod'), (('decrypts', 'root'), 'root'), (('the', 'signature'), 'det'), (('signature', 'decrypts'), 'obj'), (('using', 'signature'), 'acl'), (('the', 'sender'), 'det'), (('sender', 'key'), 'nmod:poss'), (('’s', 'sender'), 'case'), (('public', 'key'), 'amod'), (('key', 'using'), 'obj'), (('.', 'decrypts'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 43 ===========================

 If the calculated hash code matches the decrypted signature, the signature is accepted as valid. 

Tokens are: 
>> ['If', 'the', 'calculated', 'hash', 'code', 'matches', 'the', 'decrypted', 'signature', ',', 'the', 'signature', 'is', 'accepted', 'as', 'valid', '.'] 

 UPOS tags are: 
>> [('If', 'SCONJ'), ('the', 'DET'), ('calculated', 'VERB'), ('hash', 'NOUN'), ('code', 'NOUN'), ('matches', 'VERB'), ('the', 'DET'), ('decrypted', 'VERB'), ('signature', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('signature', 'NOUN'), ('is', 'AUX'), ('accepted', 'VERB'), ('as', 'SCONJ'), ('valid', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('If', 'IN'), ('the', 'DT'), ('calculated', 'VBN'), ('hash', 'NN'), ('code', 'NN'), ('matches', 'VBZ'), ('the', 'DT'), ('decrypted', 'VBN'), ('signature', 'NN'), (',', ','), ('the', 'DT'), ('signature', 'NN'), ('is', 'VBZ'), ('accepted', 'VBN'), ('as', 'IN'), ('valid', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('If', 'if'), ('the', 'the'), ('calculated', 'calculate'), ('hash', 'hash'), ('code', 'code'), ('matches', 'match'), ('the', 'the'), ('decrypted', 'decrypt'), ('signature', 'signature'), (',', ','), ('the', 'the'), ('signature', 'signature'), ('is', 'be'), ('accepted', 'accept'), ('as', 'as'), ('valid', 'valid'), ('.', '.')] 

 Dependency tags are: 
>> [(('If', 'matches'), 'mark'), (('the', 'code'), 'det'), (('calculated', 'code'), 'amod'), (('hash', 'code'), 'compound'), (('code', 'matches'), 'nsubj'), (('matches', 'accepted'), 'advcl'), (('the', 'signature'), 'det'), (('decrypted', 'signature'), 'amod'), (('signature', 'matches'), 'obj'), ((',', 'accepted'), 'punct'), (('the', 'signature'), 'det'), (('signature', 'accepted'), 'nsubj:pass'), (('is', 'accepted'), 'aux:pass'), (('accepted', 'root'), 'root'), (('as', 'valid'), 'mark'), (('valid', 'accepted'), 'advcl'), (('.', 'accepted'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 44 ===========================

 Because only the sender knows the private key, only the sender could have produced a valid signature. 

Tokens are: 
>> ['Because', 'only', 'the', 'sender', 'knows', 'the', 'private', 'key', ',', 'only', 'the', 'sender', 'could', 'have', 'produced', 'a', 'valid', 'signature', '.'] 

 UPOS tags are: 
>> [('Because', 'SCONJ'), ('only', 'ADV'), ('the', 'DET'), ('sender', 'NOUN'), ('knows', 'VERB'), ('the', 'DET'), ('private', 'ADJ'), ('key', 'NOUN'), (',', 'PUNCT'), ('only', 'ADV'), ('the', 'DET'), ('sender', 'NOUN'), ('could', 'AUX'), ('have', 'AUX'), ('produced', 'VERB'), ('a', 'DET'), ('valid', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Because', 'IN'), ('only', 'RB'), ('the', 'DT'), ('sender', 'NN'), ('knows', 'VBZ'), ('the', 'DT'), ('private', 'JJ'), ('key', 'NN'), (',', ','), ('only', 'RB'), ('the', 'DT'), ('sender', 'NN'), ('could', 'MD'), ('have', 'VB'), ('produced', 'VBN'), ('a', 'DT'), ('valid', 'JJ'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Because', 'because'), ('only', 'only'), ('the', 'the'), ('sender', 'sender'), ('knows', 'know'), ('the', 'the'), ('private', 'private'), ('key', 'key'), (',', ','), ('only', 'only'), ('the', 'the'), ('sender', 'sender'), ('could', 'could'), ('have', 'have'), ('produced', 'produce'), ('a', 'a'), ('valid', 'valid'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('Because', 'knows'), 'mark'), (('only', 'sender'), 'advmod'), (('the', 'sender'), 'det'), (('sender', 'knows'), 'nsubj'), (('knows', 'produced'), 'advcl'), (('the', 'key'), 'det'), (('private', 'key'), 'amod'), (('key', 'knows'), 'obj'), ((',', 'produced'), 'punct'), (('only', 'sender'), 'advmod'), (('the', 'sender'), 'det'), (('sender', 'produced'), 'nsubj'), (('could', 'produced'), 'aux'), (('have', 'produced'), 'aux'), (('produced', 'root'), 'root'), (('a', 'signature'), 'det'), (('valid', 'signature'), 'amod'), (('signature', 'produced'), 'obj'), (('.', 'produced'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 45 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  DSA Approach 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'DSA', 'Approach'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('DSA', 'PROPN'), ('Approach', 'NOUN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('DSA', 'NNP'), ('Approach', 'NN')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('DSA', 'DSA'), ('Approach', 'approach')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Approach'), 'case'), (('Engineering', 'Approach'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Approach'), 'compound'), (('DSA', 'Approach'), 'compound'), (('Approach', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 46 ===========================

 The hash code is provided as input to a signature function along with a random number k generated  for this particular signature. 

Tokens are: 
>> ['The', 'hash', 'code', 'is', 'provided', 'as', 'input', 'to', 'a', 'signature', 'function', 'along', 'with', 'a', 'random', 'number', 'k', 'generated', 'for', 'this', 'particular', 'signature', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('hash', 'NOUN'), ('code', 'NOUN'), ('is', 'AUX'), ('provided', 'VERB'), ('as', 'ADP'), ('input', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('signature', 'NOUN'), ('function', 'NOUN'), ('along', 'ADP'), ('with', 'ADP'), ('a', 'DET'), ('random', 'ADJ'), ('number', 'NOUN'), ('k', 'NOUN'), ('generated', 'VERB'), ('for', 'ADP'), ('this', 'DET'), ('particular', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('is', 'VBZ'), ('provided', 'VBN'), ('as', 'IN'), ('input', 'NN'), ('to', 'IN'), ('a', 'DT'), ('signature', 'NN'), ('function', 'NN'), ('along', 'IN'), ('with', 'IN'), ('a', 'DT'), ('random', 'JJ'), ('number', 'NN'), ('k', 'NN'), ('generated', 'VBN'), ('for', 'IN'), ('this', 'DT'), ('particular', 'JJ'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('hash', 'hash'), ('code', 'code'), ('is', 'be'), ('provided', 'provide'), ('as', 'as'), ('input', 'input'), ('to', 'to'), ('a', 'a'), ('signature', 'signature'), ('function', 'function'), ('along', 'along'), ('with', 'with'), ('a', 'a'), ('random', 'random'), ('number', 'number'), ('k', 'k'), ('generated', 'generate'), ('for', 'for'), ('this', 'this'), ('particular', 'particular'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'code'), 'det'), (('hash', 'code'), 'compound'), (('code', 'provided'), 'nsubj:pass'), (('is', 'provided'), 'aux:pass'), (('provided', 'root'), 'root'), (('as', 'input'), 'case'), (('input', 'provided'), 'obl'), (('to', 'function'), 'case'), (('a', 'function'), 'det'), (('signature', 'function'), 'compound'), (('function', 'input'), 'nmod'), (('along', 'k'), 'case'), (('with', 'k'), 'case'), (('a', 'k'), 'det'), (('random', 'k'), 'amod'), (('number', 'k'), 'compound'), (('k', 'provided'), 'obl'), (('generated', 'k'), 'acl'), (('for', 'signature'), 'case'), (('this', 'signature'), 'det'), (('particular', 'signature'), 'amod'), (('signature', 'generated'), 'obl'), (('.', 'provided'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 The signature function also depends on the sender’s private key (PRa) and a set of parameters known to a group of communicating principals. 

Tokens are: 
>> ['The', 'signature', 'function', 'also', 'depends', 'on', 'the', 'sender', '’s', 'private', 'key', '(', 'PRa', ')', 'and', 'a', 'set', 'of', 'parameters', 'known', 'to', 'a', 'group', 'of', 'communicating', 'principals', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('signature', 'NOUN'), ('function', 'NOUN'), ('also', 'ADV'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('sender', 'NOUN'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('PRa', 'NOUN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('parameters', 'NOUN'), ('known', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('group', 'NOUN'), ('of', 'SCONJ'), ('communicating', 'VERB'), ('principals', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('signature', 'NN'), ('function', 'NN'), ('also', 'RB'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('sender', 'NN'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'NN'), ('(', '-LRB-'), ('PRa', 'NN'), (')', '-RRB-'), ('and', 'CC'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('parameters', 'NNS'), ('known', 'VBN'), ('to', 'IN'), ('a', 'DT'), ('group', 'NN'), ('of', 'IN'), ('communicating', 'VBG'), ('principals', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('signature', 'signature'), ('function', 'function'), ('also', 'also'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('sender', 'sender'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('(', '('), ('PRa', 'pra'), (')', ')'), ('and', 'and'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('parameters', 'parameter'), ('known', 'know'), ('to', 'to'), ('a', 'a'), ('group', 'group'), ('of', 'of'), ('communicating', 'communicate'), ('principals', 'principal'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'function'), 'det'), (('signature', 'function'), 'compound'), (('function', 'depends'), 'nsubj'), (('also', 'depends'), 'advmod'), (('depends', 'root'), 'root'), (('on', 'key'), 'case'), (('the', 'sender'), 'det'), (('sender', 'key'), 'nmod:poss'), (('’s', 'sender'), 'case'), (('private', 'key'), 'amod'), (('key', 'depends'), 'obl'), (('(', 'PRa'), 'punct'), (('PRa', 'key'), 'appos'), ((')', 'PRa'), 'punct'), (('and', 'set'), 'cc'), (('a', 'set'), 'det'), (('set', 'key'), 'conj'), (('of', 'parameters'), 'case'), (('parameters', 'set'), 'nmod'), (('known', 'parameters'), 'acl'), (('to', 'group'), 'case'), (('a', 'group'), 'det'), (('group', 'known'), 'obl'), (('of', 'communicating'), 'mark'), (('communicating', 'group'), 'acl'), (('principals', 'communicating'), 'obj'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 48 ===========================

 We can consider this set to constitute a global public key (PU) 

Tokens are: 
>> ['We', 'can', 'consider', 'this', 'set', 'to', 'constitute', 'a', 'global', 'public', 'key', '(', 'PU', ')'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('can', 'AUX'), ('consider', 'VERB'), ('this', 'DET'), ('set', 'NOUN'), ('to', 'PART'), ('constitute', 'VERB'), ('a', 'DET'), ('global', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('PU', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('can', 'MD'), ('consider', 'VB'), ('this', 'DT'), ('set', 'NN'), ('to', 'TO'), ('constitute', 'VB'), ('a', 'DT'), ('global', 'JJ'), ('public', 'JJ'), ('key', 'NN'), ('(', '-LRB-'), ('PU', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('We', 'we'), ('can', 'can'), ('consider', 'consider'), ('this', 'this'), ('set', 'set'), ('to', 'to'), ('constitute', 'constitute'), ('a', 'a'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('(', '('), ('PU', 'pu'), (')', ')')] 

 Dependency tags are: 
>> [(('We', 'consider'), 'nsubj'), (('can', 'consider'), 'aux'), (('consider', 'root'), 'root'), (('this', 'set'), 'det'), (('set', 'consider'), 'obj'), (('to', 'constitute'), 'mark'), (('constitute', 'consider'), 'advcl'), (('a', 'key'), 'det'), (('global', 'key'), 'amod'), (('public', 'key'), 'amod'), (('key', 'constitute'), 'obj'), (('(', 'PU'), 'punct'), (('PU', 'key'), 'appos'), ((')', 'PU'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 49 ===========================

 The result is a signature consisting of two components, labelled s  and r.   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  DSA Approach 

Tokens are: 
>> ['The', 'result', 'is', 'a', 'signature', 'consisting', 'of', 'two', 'components', ',', 'labelled', 's', 'and', 'r.', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'DSA', 'Approach'] 

 UPOS tags are: 
>> [('The', 'DET'), ('result', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('signature', 'NOUN'), ('consisting', 'NOUN'), ('of', 'ADP'), ('two', 'NUM'), ('components', 'NOUN'), (',', 'PUNCT'), ('labelled', 'VERB'), ('s', 'PART'), ('and', 'CCONJ'), ('r.', 'NOUN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('DSA', 'PROPN'), ('Approach', 'NOUN')] 

 XPOS tags are: 
>> [('The', 'DT'), ('result', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('signature', 'NN'), ('consisting', 'NN'), ('of', 'IN'), ('two', 'CD'), ('components', 'NNS'), (',', ','), ('labelled', 'VBN'), ('s', 'POS'), ('and', 'CC'), ('r.', 'NN'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('DSA', 'NNP'), ('Approach', 'NN')] 

 Lemmas are: 
>> [('The', 'the'), ('result', 'result'), ('is', 'be'), ('a', 'a'), ('signature', 'signature'), ('consisting', 'consisting'), ('of', 'of'), ('two', 'two'), ('components', 'component'), (',', ','), ('labelled', 'label'), ('s', "'s"), ('and', 'and'), ('r.', 'respect'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('DSA', 'DSA'), ('Approach', 'approach')] 

 Dependency tags are: 
>> [(('The', 'result'), 'det'), (('result', 'consisting'), 'nsubj'), (('is', 'consisting'), 'cop'), (('a', 'consisting'), 'det'), (('signature', 'consisting'), 'compound'), (('consisting', 'root'), 'root'), (('of', 'components'), 'case'), (('two', 'components'), 'nummod'), (('components', 'consisting'), 'nmod'), ((',', 'labelled'), 'punct'), (('labelled', 'components'), 'acl'), (('s', 'labelled'), 'case'), (('and', 'Unit'), 'cc'), (('r.', 'Unit'), 'compound'), (('Unit', 'components'), 'conj'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'components'), 'conj'), (('of', 'Approach'), 'case'), (('Engineering', 'Approach'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Approach'), 'compound'), (('DSA', 'Approach'), 'compound'), (('Approach', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('two', 'CARDINAL')]

========================== Sentence 50 ===========================

 At the receiving end, the hash code of the incoming message is generated. 

Tokens are: 
>> ['At', 'the', 'receiving', 'end', ',', 'the', 'hash', 'code', 'of', 'the', 'incoming', 'message', 'is', 'generated', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('the', 'DET'), ('receiving', 'VERB'), ('end', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('hash', 'NOUN'), ('code', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('incoming', 'ADJ'), ('message', 'NOUN'), ('is', 'AUX'), ('generated', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('the', 'DT'), ('receiving', 'VBG'), ('end', 'NN'), (',', ','), ('the', 'DT'), ('hash', 'NN'), ('code', 'NN'), ('of', 'IN'), ('the', 'DT'), ('incoming', 'JJ'), ('message', 'NN'), ('is', 'VBZ'), ('generated', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('the', 'the'), ('receiving', 'receive'), ('end', 'end'), (',', ','), ('the', 'the'), ('hash', 'hash'), ('code', 'code'), ('of', 'of'), ('the', 'the'), ('incoming', 'incoming'), ('message', 'message'), ('is', 'be'), ('generated', 'generate'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'end'), 'case'), (('the', 'end'), 'det'), (('receiving', 'end'), 'amod'), (('end', 'generated'), 'obl'), ((',', 'generated'), 'punct'), (('the', 'code'), 'det'), (('hash', 'code'), 'compound'), (('code', 'generated'), 'nsubj:pass'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), (('incoming', 'message'), 'amod'), (('message', 'code'), 'nmod'), (('is', 'generated'), 'aux:pass'), (('generated', 'root'), 'root'), (('.', 'generated'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 51 ===========================

 This plus the signature is input to a verification function. 

Tokens are: 
>> ['This', 'plus', 'the', 'signature', 'is', 'input', 'to', 'a', 'verification', 'function', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('plus', 'CCONJ'), ('the', 'DET'), ('signature', 'NOUN'), ('is', 'AUX'), ('input', 'NOUN'), ('to', 'ADP'), ('a', 'DET'), ('verification', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('plus', 'CC'), ('the', 'DT'), ('signature', 'NN'), ('is', 'VBZ'), ('input', 'NN'), ('to', 'IN'), ('a', 'DT'), ('verification', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('plus', 'plus'), ('the', 'the'), ('signature', 'signature'), ('is', 'be'), ('input', 'input'), ('to', 'to'), ('a', 'a'), ('verification', 'verification'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'input'), 'nsubj'), (('plus', 'signature'), 'cc'), (('the', 'signature'), 'det'), (('signature', 'This'), 'conj'), (('is', 'input'), 'cop'), (('input', 'root'), 'root'), (('to', 'function'), 'case'), (('a', 'function'), 'det'), (('verification', 'function'), 'compound'), (('function', 'input'), 'nmod'), (('.', 'input'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 52 ===========================

 The verification function also depends on the global public key as well as the sender’s public key (PUa), which is paired with the sender’s private key. 

Tokens are: 
>> ['The', 'verification', 'function', 'also', 'depends', 'on', 'the', 'global', 'public', 'key', 'as', 'well', 'as', 'the', 'sender', '’s', 'public', 'key', '(', 'PUa', ')', ',', 'which', 'is', 'paired', 'with', 'the', 'sender', '’s', 'private', 'key', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('verification', 'NOUN'), ('function', 'NOUN'), ('also', 'ADV'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('global', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('as', 'ADV'), ('well', 'ADV'), ('as', 'ADP'), ('the', 'DET'), ('sender', 'NOUN'), ('’s', 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('PUa', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('paired', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('sender', 'NOUN'), ('’s', 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('verification', 'NN'), ('function', 'NN'), ('also', 'RB'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('global', 'JJ'), ('public', 'JJ'), ('key', 'NN'), ('as', 'RB'), ('well', 'RB'), ('as', 'IN'), ('the', 'DT'), ('sender', 'NN'), ('’s', 'POS'), ('public', 'JJ'), ('key', 'NN'), ('(', '-LRB-'), ('PUa', 'NNP'), (')', '-RRB-'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('paired', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('sender', 'NN'), ('’s', 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('verification', 'verification'), ('function', 'function'), ('also', 'also'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('as', 'as'), ('well', 'well'), ('as', 'as'), ('the', 'the'), ('sender', 'sender'), ('’s', "'s"), ('public', 'public'), ('key', 'key'), ('(', '('), ('PUa', 'PUa'), (')', ')'), (',', ','), ('which', 'which'), ('is', 'be'), ('paired', 'pair'), ('with', 'with'), ('the', 'the'), ('sender', 'sender'), ('’s', "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'function'), 'det'), (('verification', 'function'), 'compound'), (('function', 'depends'), 'nsubj'), (('also', 'depends'), 'advmod'), (('depends', 'root'), 'root'), (('on', 'key'), 'case'), (('the', 'key'), 'det'), (('global', 'key'), 'amod'), (('public', 'key'), 'amod'), (('key', 'depends'), 'obl'), (('as', 'key'), 'cc'), (('well', 'as'), 'fixed'), (('as', 'as'), 'fixed'), (('the', 'sender'), 'det'), (('sender', 'key'), 'nmod:poss'), (('’s', 'sender'), 'case'), (('public', 'key'), 'amod'), (('key', 'key'), 'conj'), (('(', 'PUa'), 'punct'), (('PUa', 'key'), 'appos'), ((')', 'PUa'), 'punct'), ((',', 'paired'), 'punct'), (('which', 'paired'), 'nsubj:pass'), (('is', 'paired'), 'aux:pass'), (('paired', 'key'), 'acl:relcl'), (('with', 'key'), 'case'), (('the', 'sender'), 'det'), (('sender', 'key'), 'nmod:poss'), (('’s', 'sender'), 'case'), (('private', 'key'), 'amod'), (('key', 'paired'), 'obl'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 53 ===========================

 The output of the verification function is a value that is equal to the signature component r if the signature is valid. 

Tokens are: 
>> ['The', 'output', 'of', 'the', 'verification', 'function', 'is', 'a', 'value', 'that', 'is', 'equal', 'to', 'the', 'signature', 'component', 'r', 'if', 'the', 'signature', 'is', 'valid', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('output', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('verification', 'NOUN'), ('function', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('value', 'NOUN'), ('that', 'PRON'), ('is', 'AUX'), ('equal', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('signature', 'NOUN'), ('component', 'NOUN'), ('r', 'VERB'), ('if', 'SCONJ'), ('the', 'DET'), ('signature', 'NOUN'), ('is', 'AUX'), ('valid', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('output', 'NN'), ('of', 'IN'), ('the', 'DT'), ('verification', 'NN'), ('function', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('value', 'NN'), ('that', 'WDT'), ('is', 'VBZ'), ('equal', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('signature', 'NN'), ('component', 'NN'), ('r', 'VBP'), ('if', 'IN'), ('the', 'DT'), ('signature', 'NN'), ('is', 'VBZ'), ('valid', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('output', 'output'), ('of', 'of'), ('the', 'the'), ('verification', 'verification'), ('function', 'function'), ('is', 'be'), ('a', 'a'), ('value', 'value'), ('that', 'that'), ('is', 'be'), ('equal', 'equal'), ('to', 'to'), ('the', 'the'), ('signature', 'signature'), ('component', 'component'), ('r', 'be'), ('if', 'if'), ('the', 'the'), ('signature', 'signature'), ('is', 'be'), ('valid', 'valid'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'output'), 'det'), (('output', 'value'), 'nsubj'), (('of', 'function'), 'case'), (('the', 'function'), 'det'), (('verification', 'function'), 'compound'), (('function', 'output'), 'nmod'), (('is', 'value'), 'cop'), (('a', 'value'), 'det'), (('value', 'root'), 'root'), (('that', 'equal'), 'nsubj'), (('is', 'equal'), 'cop'), (('equal', 'value'), 'acl:relcl'), (('to', 'component'), 'case'), (('the', 'component'), 'det'), (('signature', 'component'), 'compound'), (('component', 'equal'), 'obl'), (('r', 'value'), 'acl:relcl'), (('if', 'valid'), 'mark'), (('the', 'signature'), 'det'), (('signature', 'valid'), 'nsubj'), (('is', 'valid'), 'cop'), (('valid', 'r'), 'advcl'), (('.', 'value'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 54 ===========================

 The signature function is such that only the sender, with knowledge of the private key, could have produced the valid signature. 

Tokens are: 
>> ['The', 'signature', 'function', 'is', 'such', 'that', 'only', 'the', 'sender', ',', 'with', 'knowledge', 'of', 'the', 'private', 'key', ',', 'could', 'have', 'produced', 'the', 'valid', 'signature', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('signature', 'NOUN'), ('function', 'NOUN'), ('is', 'AUX'), ('such', 'ADJ'), ('that', 'SCONJ'), ('only', 'ADV'), ('the', 'DET'), ('sender', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('knowledge', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('private', 'ADJ'), ('key', 'NOUN'), (',', 'PUNCT'), ('could', 'AUX'), ('have', 'AUX'), ('produced', 'VERB'), ('the', 'DET'), ('valid', 'ADJ'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('signature', 'NN'), ('function', 'NN'), ('is', 'VBZ'), ('such', 'JJ'), ('that', 'IN'), ('only', 'RB'), ('the', 'DT'), ('sender', 'NN'), (',', ','), ('with', 'IN'), ('knowledge', 'NN'), ('of', 'IN'), ('the', 'DT'), ('private', 'JJ'), ('key', 'NN'), (',', ','), ('could', 'MD'), ('have', 'VB'), ('produced', 'VBN'), ('the', 'DT'), ('valid', 'JJ'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('signature', 'signature'), ('function', 'function'), ('is', 'be'), ('such', 'such'), ('that', 'that'), ('only', 'only'), ('the', 'the'), ('sender', 'sender'), (',', ','), ('with', 'with'), ('knowledge', 'knowledge'), ('of', 'of'), ('the', 'the'), ('private', 'private'), ('key', 'key'), (',', ','), ('could', 'could'), ('have', 'have'), ('produced', 'produce'), ('the', 'the'), ('valid', 'valid'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'function'), 'det'), (('signature', 'function'), 'compound'), (('function', 'such'), 'nsubj'), (('is', 'such'), 'cop'), (('such', 'root'), 'root'), (('that', 'produced'), 'mark'), (('only', 'sender'), 'advmod'), (('the', 'sender'), 'det'), (('sender', 'produced'), 'nsubj'), ((',', 'sender'), 'punct'), (('with', 'knowledge'), 'case'), (('knowledge', 'sender'), 'nmod'), (('of', 'key'), 'case'), (('the', 'key'), 'det'), (('private', 'key'), 'amod'), (('key', 'knowledge'), 'nmod'), ((',', 'produced'), 'punct'), (('could', 'produced'), 'aux'), (('have', 'produced'), 'aux'), (('produced', 'such'), 'ccomp'), (('the', 'signature'), 'det'), (('valid', 'signature'), 'amod'), (('signature', 'produced'), 'obj'), (('.', 'such'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 55 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm      DSA Signing    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  DSA Verifying    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  ElGamal Digital Signatures 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Digital', 'Signature', 'Algorithm', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Digital', 'Signature', 'Algorithm', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Digital', 'Signature', 'Algorithm', 'Unit-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'Digital', 'Signature', 'Algorithm', 'DSA', 'Signing', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'DSA', 'Verifying', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', 'ElGamal', 'Digital', 'Signatures'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Algorithm', 'NOUN'), ('Unit-7', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Algorithm', 'NOUN'), ('Unit-7', 'PROPN'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Algorithm', 'PROPN'), ('Unit-7', 'PROPN'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Algorithm', 'PROPN'), ('DSA', 'PROPN'), ('Signing', 'NOUN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('DSA', 'PROPN'), ('Verifying', 'VERB'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('ElGamal', 'PROPN'), ('Digital', 'ADJ'), ('Signatures', 'PROPN')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Algorithm', 'NN'), ('Unit-7', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Algorithm', 'NN'), ('Unit-7', 'NNP'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Algorithm', 'NNP'), ('Unit-7', 'NNP'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Algorithm', 'NNP'), ('DSA', 'NNP'), ('Signing', 'NN'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('DSA', 'NNP'), ('Verifying', 'VBG'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('ElGamal', 'NNP'), ('Digital', 'JJ'), ('Signatures', 'NNPS')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Digital', 'digital'), ('Signature', 'signature'), ('Algorithm', 'algorithm'), ('Unit-7', 'unit-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Digital', 'digital'), ('Signature', 'signature'), ('Algorithm', 'algorithm'), ('Unit-7', 'Unit-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Algorithm', 'Algorithm'), ('Unit-7', 'Unit-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Algorithm', 'Algorithm'), ('DSA', 'DSA'), ('Signing', 'signing'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('DSA', 'DSA'), ('Verifying', 'verify'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('ElGamal', 'ElGamal'), ('Digital', 'digital'), ('Signatures', 'Signature')] 

 Dependency tags are: 
>> [(('Unit', 'root'), 'root'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Algorithm'), 'case'), (('Engineering', 'Algorithm'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Algorithm'), 'compound'), (('Digital', 'Algorithm'), 'amod'), (('Signature', 'Algorithm'), 'compound'), (('Algorithm', 'Institute'), 'nmod'), (('Unit-7', 'Institute'), 'compound'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Institute'), 'conj'), (('of', 'Algorithm'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Algorithm'), 'compound'), (('Digital', 'Algorithm'), 'amod'), (('Signature', 'Algorithm'), 'compound'), (('Algorithm', 'Institute'), 'nmod'), (('Unit-7', 'Institute'), 'compound'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Algorithm'), 'appos'), (('of', 'Algorithm'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Algorithm'), 'compound'), (('Digital', 'Algorithm'), 'amod'), (('Signature', 'Algorithm'), 'compound'), (('Algorithm', 'Institute'), 'nmod'), (('Unit-7', 'Institute'), 'compound'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Algorithm'), 'appos'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'compound'), (('Digital', 'Algorithm'), 'amod'), (('Signature', 'Algorithm'), 'compound'), (('Algorithm', 'Unit'), 'compound'), (('DSA', 'Unit'), 'compound'), (('Signing', 'Unit'), 'compound'), (('Unit', 'Institute'), 'nmod'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'DSA'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'DSA'), 'compound'), (('DSA', 'Institute'), 'nmod'), (('Verifying', 'DSA'), 'acl'), (('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Verifying'), 'obj'), (('of', 'Signatures'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Signatures'), 'compound'), (('ElGamal', 'Signatures'), 'compound'), (('Digital', 'Signatures'), 'amod'), (('Signatures', 'Institute'), 'nmod')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  Digital Signature Algorithm      DSA Signing    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology', 'ORG'), ('DSA Verifying    Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology', 'ORG')]

========================== Sentence 56 ===========================

 Uses private key for encryption (signing) 

Tokens are: 
>> ['Uses', 'private', 'key', 'for', 'encryption', '(', 'signing', ')'] 

 UPOS tags are: 
>> [('Uses', 'VERB'), ('private', 'ADJ'), ('key', 'NOUN'), ('for', 'ADP'), ('encryption', 'NOUN'), ('(', 'PUNCT'), ('signing', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Uses', 'VBZ'), ('private', 'JJ'), ('key', 'NN'), ('for', 'IN'), ('encryption', 'NN'), ('(', '-LRB-'), ('signing', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Uses', 'use'), ('private', 'private'), ('key', 'key'), ('for', 'for'), ('encryption', 'encryption'), ('(', '('), ('signing', 'signing'), (')', ')')] 

 Dependency tags are: 
>> [(('Uses', 'root'), 'root'), (('private', 'key'), 'amod'), (('key', 'Uses'), 'obj'), (('for', 'encryption'), 'case'), (('encryption', 'key'), 'nmod'), (('(', 'signing'), 'punct'), (('signing', 'encryption'), 'appos'), ((')', 'signing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 57 ===========================

 Uses public key for decryption (verification) 

Tokens are: 
>> ['Uses', 'public', 'key', 'for', 'decryption', '(', 'verification', ')'] 

 UPOS tags are: 
>> [('Uses', 'VERB'), ('public', 'ADJ'), ('key', 'NOUN'), ('for', 'ADP'), ('decryption', 'NOUN'), ('(', 'PUNCT'), ('verification', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Uses', 'VBZ'), ('public', 'JJ'), ('key', 'NN'), ('for', 'IN'), ('decryption', 'NN'), ('(', '-LRB-'), ('verification', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Uses', 'use'), ('public', 'public'), ('key', 'key'), ('for', 'for'), ('decryption', 'decryption'), ('(', '('), ('verification', 'verification'), (')', ')')] 

 Dependency tags are: 
>> [(('Uses', 'root'), 'root'), (('public', 'key'), 'amod'), (('key', 'Uses'), 'obj'), (('for', 'decryption'), 'case'), (('decryption', 'key'), 'nmod'), (('(', 'verification'), 'punct'), (('verification', 'decryption'), 'appos'), ((')', 'verification'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 Each user (e.g.---.- 

Tokens are: 
>> ['Each', 'user', '(', 'e.g.---.-'] 

 UPOS tags are: 
>> [('Each', 'DET'), ('user', 'NOUN'), ('(', 'PUNCT'), ('e.g.---.-', 'PUNCT')] 

 XPOS tags are: 
>> [('Each', 'DT'), ('user', 'NN'), ('(', '-LRB-'), ('e.g.---.-', '.')] 

 Lemmas are: 
>> [('Each', 'each'), ('user', 'user'), ('(', '('), ('e.g.---.-', 'e.g.---.-')] 

 Dependency tags are: 
>> [(('Each', 'user'), 'det'), (('user', 'root'), 'root'), (('(', 'user'), 'punct'), (('e.g.---.-', 'user'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 59 ===========================

 A) generates their key chooses a secret key (number): 

Tokens are: 
>> ['A', ')', 'generates', 'their', 'key', 'chooses', 'a', 'secret', 'key', '(', 'number', ')', ':'] 

 UPOS tags are: 
>> [('A', 'NUM'), (')', 'PUNCT'), ('generates', 'VERB'), ('their', 'PRON'), ('key', 'NOUN'), ('chooses', 'VERB'), ('a', 'DET'), ('secret', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('number', 'NOUN'), (')', 'PUNCT'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'LS'), (')', '-RRB-'), ('generates', 'VBZ'), ('their', 'PRP$'), ('key', 'NN'), ('chooses', 'VBZ'), ('a', 'DT'), ('secret', 'JJ'), ('key', 'NN'), ('(', '-LRB-'), ('number', 'NN'), (')', '-RRB-'), (':', ':')] 

 Lemmas are: 
>> [('A', 'a'), (')', ')'), ('generates', 'generate'), ('their', 'they'), ('key', 'key'), ('chooses', 'choose'), ('a', 'a'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':')] 

 Dependency tags are: 
>> [(('A', 'generates'), 'nummod'), ((')', 'A'), 'punct'), (('generates', 'root'), 'root'), (('their', 'key'), 'nmod:poss'), (('key', 'chooses'), 'nsubj'), (('chooses', 'generates'), 'ccomp'), (('a', 'key'), 'det'), (('secret', 'key'), 'amod'), (('key', 'chooses'), 'obj'), (('(', 'number'), 'punct'), (('number', 'key'), 'appos'), ((')', 'number'), 'punct'), ((':', 'generates'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 1 < xA < q-1  compute their public key: yA = axA mod q   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  22 Recall from Chapter 10, that in 1984, T. Elgamal announced a public-key scheme based on discrete logarithms, closely related to the Diffie-Hellman technique [ELGA84, ELGA85]. 

Tokens are: 
>> ['1', '<', 'xA', '<', 'q-1', 'compute', 'their', 'public', 'key', ':', 'yA', '=', 'axA', 'mod', 'q', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '22', 'Recall', 'from', 'Chapter', '10', ',', 'that', 'in', '1984', ',', 'T.', 'Elgamal', 'announced', 'a', 'public-key', 'scheme', 'based', 'on', 'discrete', 'logarithms', ',', 'closely', 'related', 'to', 'the', 'Diffie-Hellman', 'technique', '[', 'ELGA84', ',', 'ELGA85', ']', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('<', 'PUNCT'), ('xA', 'PROPN'), ('<', 'PUNCT'), ('q-1', 'PRON'), ('compute', 'VERB'), ('their', 'PRON'), ('public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('yA', 'PROPN'), ('=', 'SYM'), ('axA', 'NOUN'), ('mod', 'NOUN'), ('q', 'PUNCT'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('22', 'NUM'), ('Recall', 'PROPN'), ('from', 'ADP'), ('Chapter', 'PROPN'), ('10', 'NUM'), (',', 'PUNCT'), ('that', 'SCONJ'), ('in', 'ADP'), ('1984', 'NUM'), (',', 'PUNCT'), ('T.', 'PROPN'), ('Elgamal', 'PROPN'), ('announced', 'VERB'), ('a', 'DET'), ('public-key', 'ADJ'), ('scheme', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), (',', 'PUNCT'), ('closely', 'ADV'), ('related', 'ADJ'), ('to', 'ADP'), ('the', 'DET'), ('Diffie-Hellman', 'ADJ'), ('technique', 'NOUN'), ('[', 'PUNCT'), ('ELGA84', 'PROPN'), (',', 'PUNCT'), ('ELGA85', 'PROPN'), (']', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('<', '-LRB-'), ('xA', 'NNP'), ('<', '-LRB-'), ('q-1', 'PRP'), ('compute', 'VB'), ('their', 'PRP$'), ('public', 'JJ'), ('key', 'NN'), (':', ':'), ('yA', 'NNP'), ('=', 'SYM'), ('axA', 'NN'), ('mod', 'NN'), ('q', ','), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('22', 'CD'), ('Recall', 'NNP'), ('from', 'IN'), ('Chapter', 'NNP'), ('10', 'CD'), (',', ','), ('that', 'IN'), ('in', 'IN'), ('1984', 'CD'), (',', ','), ('T.', 'NNP'), ('Elgamal', 'NNP'), ('announced', 'VBD'), ('a', 'DT'), ('public-key', 'JJ'), ('scheme', 'NN'), ('based', 'VBN'), ('on', 'IN'), ('discrete', 'JJ'), ('logarithms', 'NNS'), (',', ','), ('closely', 'RB'), ('related', 'JJ'), ('to', 'IN'), ('the', 'DT'), ('Diffie-Hellman', 'JJ'), ('technique', 'NN'), ('[', '-LRB-'), ('ELGA84', 'NNP'), (',', ','), ('ELGA85', 'NNP'), (']', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('<', '<'), ('xA', 'xA'), ('<', '<'), ('q-1', 'q-1'), ('compute', 'compute'), ('their', 'they'), ('public', 'public'), ('key', 'key'), (':', ':'), ('yA', 'yA'), ('=', '='), ('axA', 'axA'), ('mod', 'mod'), ('q', 'q'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('22', '22'), ('Recall', 'recall'), ('from', 'from'), ('Chapter', 'Chapter'), ('10', '10'), (',', ','), ('that', 'that'), ('in', 'in'), ('1984', '1984'), (',', ','), ('T.', 'T.'), ('Elgamal', 'Elgamal'), ('announced', 'announce'), ('a', 'a'), ('public-key', 'public-key'), ('scheme', 'scheme'), ('based', 'base'), ('on', 'on'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), (',', ','), ('closely', 'closely'), ('related', 'related'), ('to', 'to'), ('the', 'the'), ('Diffie-Hellman', 'diffie-hellman'), ('technique', 'technique'), ('[', '['), ('ELGA84', 'ELGA84'), (',', ','), ('ELGA85', 'ELGA85'), (']', ']'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'xA'), 'nummod'), (('<', 'xA'), 'punct'), (('xA', 'root'), 'root'), (('<', 'compute'), 'punct'), (('q-1', 'compute'), 'nsubj'), (('compute', 'xA'), 'appos'), (('their', 'key'), 'nmod:poss'), (('public', 'key'), 'amod'), (('key', 'compute'), 'obj'), ((':', 'compute'), 'punct'), (('yA', '='), 'nsubj'), (('=', 'compute'), 'parataxis'), (('axA', 'mod'), 'compound'), (('mod', '='), 'obj'), (('q', '='), 'punct'), (('Unit', 'Institute'), 'compound'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'mod'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', '22'), 'compound'), (('22', 'Institute'), 'dep'), (('Recall', '22'), 'nmod:tmod'), (('from', '10'), 'case'), (('Chapter', '22'), 'nmod'), (('10', 'Chapter'), 'nummod'), ((',', 'announced'), 'punct'), (('that', 'announced'), 'mark'), (('in', '1984'), 'case'), (('1984', 'announced'), 'obl'), ((',', '1984'), 'punct'), (('T.', 'announced'), 'nsubj'), (('Elgamal', 'T.'), 'flat'), (('announced', '='), 'conj'), (('a', 'scheme'), 'det'), (('public-key', 'scheme'), 'amod'), (('scheme', 'announced'), 'obj'), (('based', 'scheme'), 'acl'), (('on', 'logarithms'), 'case'), (('discrete', 'logarithms'), 'amod'), (('logarithms', 'based'), 'obl'), ((',', 'related'), 'punct'), (('closely', 'related'), 'advmod'), (('related', 'scheme'), 'amod'), (('to', 'technique'), 'case'), (('the', 'technique'), 'det'), (('Diffie-Hellman', 'technique'), 'amod'), (('technique', 'related'), 'obl'), (('[', 'ELGA84'), 'punct'), (('ELGA84', 'related'), 'dep'), ((',', 'ELGA85'), 'punct'), (('ELGA85', 'ELGA84'), 'conj'), ((']', 'ELGA84'), 'punct'), (('.', '1'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('22', 'CARDINAL'), ('Chapter 10', 'LAW'), ('1984', 'DATE'), ('T. Elgamal', 'PERSON'), ('Diffie-Hellman', 'ORG'), ('ELGA84', 'ORG'), ('ELGA85', 'ORG')]

========================== Sentence 61 ===========================

 The ElGamal encryption scheme is designed to enable encryption by a user's public key with decryption by the user's private key. 

Tokens are: 
>> ['The', 'ElGamal', 'encryption', 'scheme', 'is', 'designed', 'to', 'enable', 'encryption', 'by', 'a', 'user', "'s", 'public', 'key', 'with', 'decryption', 'by', 'the', 'user', "'s", 'private', 'key', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ElGamal', 'PROPN'), ('encryption', 'NOUN'), ('scheme', 'NOUN'), ('is', 'AUX'), ('designed', 'VERB'), ('to', 'PART'), ('enable', 'VERB'), ('encryption', 'NOUN'), ('by', 'ADP'), ('a', 'DET'), ('user', 'NOUN'), ("'s", 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('with', 'ADP'), ('decryption', 'NOUN'), ('by', 'ADP'), ('the', 'DET'), ('user', 'NOUN'), ("'s", 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ElGamal', 'NNP'), ('encryption', 'NN'), ('scheme', 'NN'), ('is', 'VBZ'), ('designed', 'VBN'), ('to', 'TO'), ('enable', 'VB'), ('encryption', 'NN'), ('by', 'IN'), ('a', 'DT'), ('user', 'NN'), ("'s", 'POS'), ('public', 'JJ'), ('key', 'NN'), ('with', 'IN'), ('decryption', 'NN'), ('by', 'IN'), ('the', 'DT'), ('user', 'NN'), ("'s", 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ElGamal', 'ElGamal'), ('encryption', 'encryption'), ('scheme', 'scheme'), ('is', 'be'), ('designed', 'design'), ('to', 'to'), ('enable', 'enable'), ('encryption', 'encryption'), ('by', 'by'), ('a', 'a'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('with', 'with'), ('decryption', 'decryption'), ('by', 'by'), ('the', 'the'), ('user', 'user'), ("'s", "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scheme'), 'det'), (('ElGamal', 'scheme'), 'compound'), (('encryption', 'scheme'), 'compound'), (('scheme', 'designed'), 'nsubj:pass'), (('is', 'designed'), 'aux:pass'), (('designed', 'root'), 'root'), (('to', 'enable'), 'mark'), (('enable', 'designed'), 'xcomp'), (('encryption', 'enable'), 'obj'), (('by', 'key'), 'case'), (('a', 'user'), 'det'), (('user', 'key'), 'nmod:poss'), (("'s", 'user'), 'case'), (('public', 'key'), 'amod'), (('key', 'enable'), 'obl'), (('with', 'decryption'), 'case'), (('decryption', 'key'), 'nmod'), (('by', 'key'), 'case'), (('the', 'user'), 'det'), (('user', 'key'), 'nmod:poss'), (("'s", 'user'), 'case'), (('private', 'key'), 'amod'), (('key', 'decryption'), 'nmod'), (('.', 'designed'), 'punct')]

 Named Entities are: 
>> [('ElGamal', 'PRODUCT')]

========================== Sentence 62 ===========================

 The ElGamal signature scheme involves the use of the private key for encryption and the public key for decryption. 

Tokens are: 
>> ['The', 'ElGamal', 'signature', 'scheme', 'involves', 'the', 'use', 'of', 'the', 'private', 'key', 'for', 'encryption', 'and', 'the', 'public', 'key', 'for', 'decryption', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ElGamal', 'PROPN'), ('signature', 'NOUN'), ('scheme', 'NOUN'), ('involves', 'VERB'), ('the', 'DET'), ('use', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('private', 'ADJ'), ('key', 'NOUN'), ('for', 'ADP'), ('encryption', 'NOUN'), ('and', 'CCONJ'), ('the', 'DET'), ('public', 'ADJ'), ('key', 'NOUN'), ('for', 'ADP'), ('decryption', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ElGamal', 'NNP'), ('signature', 'NN'), ('scheme', 'NN'), ('involves', 'VBZ'), ('the', 'DT'), ('use', 'NN'), ('of', 'IN'), ('the', 'DT'), ('private', 'JJ'), ('key', 'NN'), ('for', 'IN'), ('encryption', 'NN'), ('and', 'CC'), ('the', 'DT'), ('public', 'JJ'), ('key', 'NN'), ('for', 'IN'), ('decryption', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ElGamal', 'ElGamal'), ('signature', 'signature'), ('scheme', 'scheme'), ('involves', 'involve'), ('the', 'the'), ('use', 'use'), ('of', 'of'), ('the', 'the'), ('private', 'private'), ('key', 'key'), ('for', 'for'), ('encryption', 'encryption'), ('and', 'and'), ('the', 'the'), ('public', 'public'), ('key', 'key'), ('for', 'for'), ('decryption', 'decryption'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scheme'), 'det'), (('ElGamal', 'scheme'), 'compound'), (('signature', 'scheme'), 'compound'), (('scheme', 'involves'), 'nsubj'), (('involves', 'root'), 'root'), (('the', 'use'), 'det'), (('use', 'involves'), 'obj'), (('of', 'key'), 'case'), (('the', 'key'), 'det'), (('private', 'key'), 'amod'), (('key', 'use'), 'nmod'), (('for', 'encryption'), 'case'), (('encryption', 'key'), 'nmod'), (('and', 'key'), 'cc'), (('the', 'key'), 'det'), (('public', 'key'), 'amod'), (('key', 'encryption'), 'conj'), (('for', 'decryption'), 'case'), (('decryption', 'key'), 'nmod'), (('.', 'involves'), 'punct')]

 Named Entities are: 
>> [('ElGamal', 'PERSON')]

========================== Sentence 63 ===========================

 The ElGamal cryptosystem is used in some form in a number of standards including the digital signature standard (DSS) and the S/MIME email standard. 

Tokens are: 
>> ['The', 'ElGamal', 'cryptosystem', 'is', 'used', 'in', 'some', 'form', 'in', 'a', 'number', 'of', 'standards', 'including', 'the', 'digital', 'signature', 'standard', '(', 'DSS', ')', 'and', 'the', 'S', '/', 'MIME', 'email', 'standard', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('ElGamal', 'PROPN'), ('cryptosystem', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('in', 'ADP'), ('some', 'DET'), ('form', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('number', 'NOUN'), ('of', 'ADP'), ('standards', 'NOUN'), ('including', 'VERB'), ('the', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('standard', 'NOUN'), ('(', 'PUNCT'), ('DSS', 'PROPN'), (')', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('S', 'NOUN'), ('/', 'PUNCT'), ('MIME', 'NOUN'), ('email', 'NOUN'), ('standard', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('ElGamal', 'NNP'), ('cryptosystem', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('in', 'IN'), ('some', 'DT'), ('form', 'NN'), ('in', 'IN'), ('a', 'DT'), ('number', 'NN'), ('of', 'IN'), ('standards', 'NNS'), ('including', 'VBG'), ('the', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('standard', 'NN'), ('(', '-LRB-'), ('DSS', 'NNP'), (')', '-RRB-'), ('and', 'CC'), ('the', 'DT'), ('S', 'NN'), ('/', ','), ('MIME', 'NN'), ('email', 'NN'), ('standard', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('ElGamal', 'ElGamal'), ('cryptosystem', 'cryptosystem'), ('is', 'be'), ('used', 'use'), ('in', 'in'), ('some', 'some'), ('form', 'form'), ('in', 'in'), ('a', 'a'), ('number', 'number'), ('of', 'of'), ('standards', 'standard'), ('including', 'include'), ('the', 'the'), ('digital', 'digital'), ('signature', 'signature'), ('standard', 'standard'), ('(', '('), ('DSS', 'DSS'), (')', ')'), ('and', 'and'), ('the', 'the'), ('S', 's'), ('/', '/'), ('MIME', 'mime'), ('email', 'email'), ('standard', 'standard'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'cryptosystem'), 'det'), (('ElGamal', 'cryptosystem'), 'compound'), (('cryptosystem', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'root'), 'root'), (('in', 'form'), 'case'), (('some', 'form'), 'det'), (('form', 'used'), 'obl'), (('in', 'number'), 'case'), (('a', 'number'), 'det'), (('number', 'form'), 'nmod'), (('of', 'standards'), 'case'), (('standards', 'number'), 'nmod'), (('including', 'standard'), 'case'), (('the', 'standard'), 'det'), (('digital', 'standard'), 'amod'), (('signature', 'standard'), 'compound'), (('standard', 'number'), 'nmod'), (('(', 'DSS'), 'punct'), (('DSS', 'standard'), 'appos'), ((')', 'DSS'), 'punct'), (('and', 'standard'), 'cc'), (('the', 'standard'), 'det'), (('S', 'standard'), 'compound'), (('/', 'MIME'), 'punct'), (('MIME', 'S'), 'conj'), (('email', 'standard'), 'compound'), (('standard', 'standard'), 'conj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> [('ElGamal', 'PRODUCT')]

========================== Sentence 64 ===========================

 As with Diffie-Hellman, the global elements of ElGamal are a prime number q and a, which is a primitive root of q. 

Tokens are: 
>> ['As', 'with', 'Diffie-Hellman', ',', 'the', 'global', 'elements', 'of', 'ElGamal', 'are', 'a', 'prime', 'number', 'q', 'and', 'a', ',', 'which', 'is', 'a', 'primitive', 'root', 'of', 'q.'] 

 UPOS tags are: 
>> [('As', 'ADP'), ('with', 'ADP'), ('Diffie-Hellman', 'PROPN'), (',', 'PUNCT'), ('the', 'DET'), ('global', 'ADJ'), ('elements', 'NOUN'), ('of', 'ADP'), ('ElGamal', 'PROPN'), ('are', 'AUX'), ('a', 'DET'), ('prime', 'ADJ'), ('number', 'NOUN'), ('q', 'NOUN'), ('and', 'CCONJ'), ('a', 'DET'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('primitive', 'ADJ'), ('root', 'NOUN'), ('of', 'ADP'), ('q.', 'NOUN')] 

 XPOS tags are: 
>> [('As', 'IN'), ('with', 'IN'), ('Diffie-Hellman', 'NNP'), (',', ','), ('the', 'DT'), ('global', 'JJ'), ('elements', 'NNS'), ('of', 'IN'), ('ElGamal', 'NNP'), ('are', 'VBP'), ('a', 'DT'), ('prime', 'JJ'), ('number', 'NN'), ('q', 'NN'), ('and', 'CC'), ('a', 'DT'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('a', 'DT'), ('primitive', 'JJ'), ('root', 'NN'), ('of', 'IN'), ('q.', 'NN')] 

 Lemmas are: 
>> [('As', 'as'), ('with', 'with'), ('Diffie-Hellman', 'Diffie-Hellman'), (',', ','), ('the', 'the'), ('global', 'global'), ('elements', 'element'), ('of', 'of'), ('ElGamal', 'ElGamal'), ('are', 'be'), ('a', 'a'), ('prime', 'prime'), ('number', 'number'), ('q', 'q'), ('and', 'and'), ('a', 'a'), (',', ','), ('which', 'which'), ('is', 'be'), ('a', 'a'), ('primitive', 'primitive'), ('root', 'root'), ('of', 'of'), ('q.', 'P.')] 

 Dependency tags are: 
>> [(('As', 'Diffie-Hellman'), 'case'), (('with', 'As'), 'fixed'), (('Diffie-Hellman', 'q'), 'obl'), ((',', 'q'), 'punct'), (('the', 'elements'), 'det'), (('global', 'elements'), 'amod'), (('elements', 'q'), 'nsubj'), (('of', 'ElGamal'), 'case'), (('ElGamal', 'elements'), 'nmod'), (('are', 'q'), 'cop'), (('a', 'q'), 'det'), (('prime', 'q'), 'amod'), (('number', 'q'), 'compound'), (('q', 'root'), 'root'), (('and', 'a'), 'cc'), (('a', 'q'), 'conj'), ((',', 'root'), 'punct'), (('which', 'root'), 'nsubj'), (('is', 'root'), 'cop'), (('a', 'root'), 'det'), (('primitive', 'root'), 'amod'), (('root', 'q'), 'acl:relcl'), (('of', 'q.'), 'case'), (('q.', 'root'), 'nmod')]

 Named Entities are: 
>> [('Diffie-Hellman', 'PERSON'), ('ElGamal', 'GPE')]

========================== Sentence 65 ===========================

 User A generates a private/public key pair as shown. 

Tokens are: 
>> ['User', 'A', 'generates', 'a', 'private', '/', 'public', 'key', 'pair', 'as', 'shown', '.'] 

 UPOS tags are: 
>> [('User', 'NOUN'), ('A', 'NOUN'), ('generates', 'VERB'), ('a', 'DET'), ('private', 'ADJ'), ('/', 'SYM'), ('public', 'ADJ'), ('key', 'ADJ'), ('pair', 'NOUN'), ('as', 'SCONJ'), ('shown', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('User', 'NN'), ('A', 'NN'), ('generates', 'VBZ'), ('a', 'DT'), ('private', 'JJ'), ('/', ','), ('public', 'JJ'), ('key', 'JJ'), ('pair', 'NN'), ('as', 'IN'), ('shown', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('User', 'user'), ('A', 'a'), ('generates', 'generate'), ('a', 'a'), ('private', 'private'), ('/', '/'), ('public', 'public'), ('key', 'key'), ('pair', 'pair'), ('as', 'as'), ('shown', 'show'), ('.', '.')] 

 Dependency tags are: 
>> [(('User', 'A'), 'compound'), (('A', 'generates'), 'nsubj'), (('generates', 'root'), 'root'), (('a', 'pair'), 'det'), (('private', 'pair'), 'amod'), (('/', 'public'), 'cc'), (('public', 'private'), 'conj'), (('key', 'pair'), 'amod'), (('pair', 'generates'), 'obj'), (('as', 'shown'), 'mark'), (('shown', 'generates'), 'advcl'), (('.', 'generates'), 'punct')]

 Named Entities are: 
>> [('User A', 'ORG')]

========================== Sentence 66 ===========================

 The security of ElGamal is based on the difficulty of computing discrete logarithms, to recover either x given y, or k given K (next slide). 

Tokens are: 
>> ['The', 'security', 'of', 'ElGamal', 'is', 'based', 'on', 'the', 'difficulty', 'of', 'computing', 'discrete', 'logarithms', ',', 'to', 'recover', 'either', 'x', 'given', 'y', ',', 'or', 'k', 'given', 'K', '(', 'next', 'slide', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('security', 'NOUN'), ('of', 'ADP'), ('ElGamal', 'PROPN'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('difficulty', 'NOUN'), ('of', 'SCONJ'), ('computing', 'VERB'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), (',', 'PUNCT'), ('to', 'PART'), ('recover', 'VERB'), ('either', 'CCONJ'), ('x', 'NOUN'), ('given', 'VERB'), ('y', 'NOUN'), (',', 'PUNCT'), ('or', 'CCONJ'), ('k', 'NUM'), ('given', 'VERB'), ('K', 'NOUN'), ('(', 'PUNCT'), ('next', 'ADJ'), ('slide', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('security', 'NN'), ('of', 'IN'), ('ElGamal', 'NNP'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('difficulty', 'NN'), ('of', 'IN'), ('computing', 'VBG'), ('discrete', 'JJ'), ('logarithms', 'NNS'), (',', ','), ('to', 'TO'), ('recover', 'VB'), ('either', 'CC'), ('x', 'NN'), ('given', 'VBN'), ('y', 'NN'), (',', ','), ('or', 'CC'), ('k', 'CD'), ('given', 'VBN'), ('K', 'NN'), ('(', '-LRB-'), ('next', 'JJ'), ('slide', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('security', 'security'), ('of', 'of'), ('ElGamal', 'ElGamal'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('the', 'the'), ('difficulty', 'difficulty'), ('of', 'of'), ('computing', 'computing'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), (',', ','), ('to', 'to'), ('recover', 'recover'), ('either', 'either'), ('x', 'x'), ('given', 'give'), ('y', 'y'), (',', ','), ('or', 'or'), ('k', 'k'), ('given', 'give'), ('K', 'k'), ('(', '('), ('next', 'next'), ('slide', 'slide'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'security'), 'det'), (('security', 'based'), 'nsubj:pass'), (('of', 'ElGamal'), 'case'), (('ElGamal', 'security'), 'nmod'), (('is', 'based'), 'aux:pass'), (('based', 'root'), 'root'), (('on', 'difficulty'), 'case'), (('the', 'difficulty'), 'det'), (('difficulty', 'based'), 'obl'), (('of', 'computing'), 'mark'), (('computing', 'difficulty'), 'acl'), (('discrete', 'logarithms'), 'amod'), (('logarithms', 'computing'), 'obj'), ((',', 'recover'), 'punct'), (('to', 'recover'), 'mark'), (('recover', 'computing'), 'advcl'), (('either', 'x'), 'cc:preconj'), (('x', 'recover'), 'obj'), (('given', 'y'), 'amod'), (('y', 'recover'), 'obj'), ((',', 'K'), 'punct'), (('or', 'k'), 'cc'), (('k', 'y'), 'conj'), (('given', 'K'), 'amod'), (('K', 'y'), 'conj'), (('(', 'slide'), 'punct'), (('next', 'slide'), 'amod'), (('slide', 'K'), 'appos'), ((')', 'slide'), 'punct'), (('.', 'based'), 'punct')]

 Named Entities are: 
>> [('ElGamal', 'GPE')]

========================== Sentence 67 ===========================

 ElGamal Digital Signature 

Tokens are: 
>> ['ElGamal', 'Digital', 'Signature'] 

 UPOS tags are: 
>> [('ElGamal', 'NOUN'), ('Digital', 'ADJ'), ('Signature', 'NOUN')] 

 XPOS tags are: 
>> [('ElGamal', 'NN'), ('Digital', 'JJ'), ('Signature', 'NN')] 

 Lemmas are: 
>> [('ElGamal', 'elgamal'), ('Digital', 'digital'), ('Signature', 'signature')] 

 Dependency tags are: 
>> [(('ElGamal', 'Signature'), 'compound'), (('Digital', 'Signature'), 'amod'), (('Signature', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 68 ===========================

 Alice signs a message M to Bob by computing the hash m = H(M), 0 <= m <= (q-1) chose random integer K with 1 <= K <= (q-1) and gcd(K,q-1)=1 compute temporary key:  S1 = ak mod q compute K-1 the inverse of K mod (q-1) compute the value:  S2 = K-1(m-xAS1) mod (q-1) signature is:(S1,S2) 

Tokens are: 
>> ['Alice', 'signs', 'a', 'message', 'M', 'to', 'Bob', 'by', 'computing', 'the', 'hash', 'm', '=', 'H', '(', 'M', ')', ',', '0', '<=', 'm', '<=', '(', 'q-', '1', ')', 'chose', 'random', 'integer', 'K', 'with', '1', '<=', 'K', '<=', '(', 'q-', '1', ')', 'and', 'gcd', '(', 'K', ',', 'q-1', ')', '=1', 'compute', 'temporary', 'key', ':', 'S1', '=', 'ak', 'mod', 'q', 'compute', 'K', '-1', 'the', 'inverse', 'of', 'K', 'mod', '(', 'q-', '1', ')', 'compute', 'the', 'value', ':', 'S2', '=', 'K-1', '(', 'm-x', 'AS1', ')', 'mod', '(', 'q-', '1', ')', 'signature', 'is', ':', '(', 'S1', ',', 'S2', ')'] 

 UPOS tags are: 
>> [('Alice', 'PROPN'), ('signs', 'VERB'), ('a', 'DET'), ('message', 'NOUN'), ('M', 'NOUN'), ('to', 'ADP'), ('Bob', 'PROPN'), ('by', 'SCONJ'), ('computing', 'VERB'), ('the', 'DET'), ('hash', 'NOUN'), ('m', 'NOUN'), ('=', 'SYM'), ('H', 'NOUN'), ('(', 'PUNCT'), ('M', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('0', 'NUM'), ('<=', 'SYM'), ('m', 'NUM'), ('<=', 'NOUN'), ('(', 'PUNCT'), ('q-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('chose', 'VERB'), ('random', 'ADJ'), ('integer', 'NOUN'), ('K', 'NUM'), ('with', 'ADP'), ('1', 'NUM'), ('<=', 'SYM'), ('K', 'NUM'), ('<=', 'NOUN'), ('(', 'PUNCT'), ('q-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('and', 'CCONJ'), ('gcd', 'NOUN'), ('(', 'PUNCT'), ('K', 'NUM'), (',', 'PUNCT'), ('q-1', 'NUM'), (')', 'PUNCT'), ('=1', 'NUM'), ('compute', 'VERB'), ('temporary', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('S1', 'NUM'), ('=', 'SYM'), ('ak', 'NOUN'), ('mod', 'NOUN'), ('q', 'NOUN'), ('compute', 'NOUN'), ('K', 'NUM'), ('-1', 'NOUN'), ('the', 'DET'), ('inverse', 'NOUN'), ('of', 'ADP'), ('K', 'NUM'), ('mod', 'NOUN'), ('(', 'PUNCT'), ('q-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('compute', 'VERB'), ('the', 'DET'), ('value', 'NOUN'), (':', 'PUNCT'), ('S2', 'NOUN'), ('=', 'SYM'), ('K-1', 'NOUN'), ('(', 'PUNCT'), ('m-x', 'NOUN'), ('AS1', 'NOUN'), (')', 'PUNCT'), ('mod', 'NOUN'), ('(', 'PUNCT'), ('q-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('signature', 'NOUN'), ('is', 'AUX'), (':', 'PUNCT'), ('(', 'PUNCT'), ('S1', 'NOUN'), (',', 'PUNCT'), ('S2', 'PROPN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Alice', 'NNP'), ('signs', 'VBZ'), ('a', 'DT'), ('message', 'NN'), ('M', 'NN'), ('to', 'IN'), ('Bob', 'NNP'), ('by', 'IN'), ('computing', 'VBG'), ('the', 'DT'), ('hash', 'NN'), ('m', 'NN'), ('=', 'SYM'), ('H', 'NN'), ('(', '-LRB-'), ('M', 'NN'), (')', '-RRB-'), (',', ','), ('0', 'CD'), ('<=', 'SYM'), ('m', 'CD'), ('<=', 'NN'), ('(', '-LRB-'), ('q-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('chose', 'VBD'), ('random', 'JJ'), ('integer', 'NN'), ('K', 'CD'), ('with', 'IN'), ('1', 'CD'), ('<=', 'SYM'), ('K', 'CD'), ('<=', 'NN'), ('(', '-LRB-'), ('q-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('and', 'CC'), ('gcd', 'NN'), ('(', '-LRB-'), ('K', 'CD'), (',', ','), ('q-1', 'CD'), (')', '-RRB-'), ('=1', 'CD'), ('compute', 'VBP'), ('temporary', 'JJ'), ('key', 'NN'), (':', ':'), ('S1', 'CD'), ('=', 'SYM'), ('ak', 'NN'), ('mod', 'NN'), ('q', 'NN'), ('compute', 'NN'), ('K', 'CD'), ('-1', 'NN'), ('the', 'DT'), ('inverse', 'NN'), ('of', 'IN'), ('K', 'CD'), ('mod', 'NN'), ('(', '-LRB-'), ('q-', 'NN'), ('1', 'LS'), (')', '-RRB-'), ('compute', 'VBP'), ('the', 'DT'), ('value', 'NN'), (':', ':'), ('S2', 'NN'), ('=', 'SYM'), ('K-1', 'NN'), ('(', '-LRB-'), ('m-x', 'NN'), ('AS1', 'NN'), (')', '-RRB-'), ('mod', 'NN'), ('(', '-LRB-'), ('q-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('signature', 'NN'), ('is', 'VBZ'), (':', ':'), ('(', '-LRB-'), ('S1', 'NN'), (',', ','), ('S2', 'NNP'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Alice', 'Alice'), ('signs', 'sign'), ('a', 'a'), ('message', 'message'), ('M', 'm'), ('to', 'to'), ('Bob', 'Bob'), ('by', 'by'), ('computing', 'computing'), ('the', 'the'), ('hash', 'hash'), ('m', 'm'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (',', ','), ('0', '0'), ('<=', '<='), ('m', 'm'), ('<=', '<='), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')'), ('chose', 'choose'), ('random', 'random'), ('integer', 'integer'), ('K', 'k'), ('with', 'with'), ('1', '1'), ('<=', '<='), ('K', 'k'), ('<=', '<='), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')'), ('and', 'and'), ('gcd', 'gcd'), ('(', '('), ('K', 'k'), (',', ','), ('q-1', 'q-1'), (')', ')'), ('=1', '=1'), ('compute', 'compute'), ('temporary', 'temporary'), ('key', 'key'), (':', ':'), ('S1', 'S1'), ('=', '='), ('ak', 'ak'), ('mod', 'mod'), ('q', 'q'), ('compute', 'compute'), ('K', 'k'), ('-1', '-1'), ('the', 'the'), ('inverse', 'inverse'), ('of', 'of'), ('K', 'k'), ('mod', 'mod'), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')'), ('compute', 'compute'), ('the', 'the'), ('value', 'value'), (':', ':'), ('S2', 's2'), ('=', '='), ('K-1', 'k-1'), ('(', '('), ('m-x', 'm-x'), ('AS1', 'as1'), (')', ')'), ('mod', 'mod'), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')'), ('signature', 'signature'), ('is', 'be'), (':', ':'), ('(', '('), ('S1', 'S1'), (',', ','), ('S2', 'S2'), (')', ')')] 

 Dependency tags are: 
>> [(('Alice', 'signs'), 'nsubj'), (('signs', 'root'), 'root'), (('a', 'M'), 'det'), (('message', 'M'), 'compound'), (('M', 'signs'), 'obj'), (('to', 'Bob'), 'case'), (('Bob', 'M'), 'nmod'), (('by', 'computing'), 'mark'), (('computing', 'signs'), 'advcl'), (('the', 'm'), 'det'), (('hash', 'm'), 'compound'), (('m', '='), 'nsubj'), (('=', 'computing'), 'xcomp'), (('H', '='), 'obj'), (('(', 'M'), 'punct'), (('M', 'H'), 'appos'), ((')', 'M'), 'punct'), ((',', '<='), 'punct'), (('0', '<='), 'nummod'), (('<=', 'm'), 'compound'), (('m', '<='), 'nummod'), (('<=', 'chose'), 'nsubj'), (('(', 'q-'), 'punct'), (('q-', '<='), 'appos'), (('1', 'q-'), 'nummod'), ((')', 'q-'), 'punct'), (('chose', 'signs'), 'conj'), (('random', 'K'), 'amod'), (('integer', 'K'), 'compound'), (('K', 'chose'), 'obj'), (('with', '<='), 'case'), (('1', 'K'), 'compound'), (('<=', 'K'), 'compound'), (('K', '<='), 'nummod'), (('<=', 'chose'), 'obl'), (('(', 'q-'), 'punct'), (('q-', '<='), 'appos'), (('1', 'q-'), 'nummod'), ((')', 'q-'), 'punct'), (('and', 'gcd'), 'cc'), (('gcd', '<='), 'conj'), (('(', 'K'), 'punct'), (('K', 'gcd'), 'appos'), ((',', 'q-1'), 'punct'), (('q-1', 'K'), 'conj'), ((')', 'q-1'), 'punct'), (('=1', 'compute'), 'nsubj'), (('compute', 'signs'), 'parataxis'), (('temporary', 'key'), 'amod'), (('key', 'compute'), 'obj'), ((':', '='), 'punct'), (('S1', '='), 'nsubj'), (('=', 'compute'), 'parataxis'), (('ak', 'mod'), 'compound'), (('mod', '='), 'obj'), (('q', '-1'), 'compound'), (('compute', 'K'), 'compound'), (('K', '-1'), 'nummod'), (('-1', '='), 'obj'), (('the', 'inverse'), 'det'), (('inverse', 'compute'), 'nsubj'), (('of', 'mod'), 'case'), (('K', 'mod'), 'nummod'), (('mod', 'inverse'), 'nmod'), (('(', '1'), 'punct'), (('q-', '1'), 'compound'), (('1', 'compute'), 'nummod'), ((')', '1'), 'punct'), (('compute', 'signs'), 'parataxis'), (('the', 'value'), 'det'), (('value', 'compute'), 'obj'), ((':', 'compute'), 'punct'), (('S2', '='), 'nsubj'), (('=', 'compute'), 'parataxis'), (('K-1', '='), 'obj'), (('(', 'AS1'), 'punct'), (('m-x', 'AS1'), 'compound'), (('AS1', 'mod'), 'compound'), ((')', 'AS1'), 'punct'), (('mod', '='), 'obj'), (('(', 'q-'), 'punct'), (('q-', 'mod'), 'appos'), (('1', 'q-'), 'nummod'), ((')', 'q-'), 'punct'), (('signature', 'is'), 'nsubj'), (('is', 'S1'), 'cop'), ((':', 'S1'), 'punct'), (('(', 'S1'), 'punct'), (('S1', 'mod'), 'appos'), ((',', 'S2'), 'punct'), (('S2', 'S1'), 'appos'), ((')', 'S1'), 'punct')]

 Named Entities are: 
>> [('Alice', 'PERSON'), ('Bob', 'PERSON')]

========================== Sentence 69 ===========================

 Any user B can verify the signature by computing V1 = am mod q V2 = yAS1 S1S2 mod q Signature is valid if V1 = V2  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  23 

Tokens are: 
>> ['Any', 'user', 'B', 'can', 'verify', 'the', 'signature', 'by', 'computing', 'V1', '=', 'am', 'mod', 'q', 'V2', '=', 'yAS1', 'S1S2', 'mod', 'q', 'Signature', 'is', 'valid', 'if', 'V1', '=', 'V2', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '23'] 

 UPOS tags are: 
>> [('Any', 'DET'), ('user', 'NOUN'), ('B', 'NOUN'), ('can', 'AUX'), ('verify', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('by', 'ADP'), ('computing', 'NOUN'), ('V1', 'NOUN'), ('=', 'PUNCT'), ('am', 'NOUN'), ('mod', 'NOUN'), ('q', 'NOUN'), ('V2', 'NOUN'), ('=', 'PUNCT'), ('yAS1', 'NOUN'), ('S1S2', 'NOUN'), ('mod', 'NOUN'), ('q', 'NOUN'), ('Signature', 'NOUN'), ('is', 'AUX'), ('valid', 'ADJ'), ('if', 'SCONJ'), ('V1', 'PROPN'), ('=', 'PUNCT'), ('V2', 'NOUN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('23', 'NUM')] 

 XPOS tags are: 
>> [('Any', 'DT'), ('user', 'NN'), ('B', 'NN'), ('can', 'MD'), ('verify', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('by', 'IN'), ('computing', 'NN'), ('V1', 'NN'), ('=', ','), ('am', 'NN'), ('mod', 'NN'), ('q', 'NN'), ('V2', 'NN'), ('=', ','), ('yAS1', 'NN'), ('S1S2', 'NN'), ('mod', 'NN'), ('q', 'NN'), ('Signature', 'NN'), ('is', 'VBZ'), ('valid', 'JJ'), ('if', 'IN'), ('V1', 'NNP'), ('=', ','), ('V2', 'NN'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('23', 'CD')] 

 Lemmas are: 
>> [('Any', 'any'), ('user', 'user'), ('B', 'b'), ('can', 'can'), ('verify', 'verify'), ('the', 'the'), ('signature', 'signature'), ('by', 'by'), ('computing', 'computing'), ('V1', 'v1'), ('=', '='), ('am', 'am'), ('mod', 'mod'), ('q', 'q'), ('V2', 'V2'), ('=', '='), ('yAS1', 'yas1'), ('S1S2', 's1s2'), ('mod', 'mod'), ('q', 'q'), ('Signature', 'signature'), ('is', 'be'), ('valid', 'valid'), ('if', 'if'), ('V1', 'V1'), ('=', '='), ('V2', 'V2'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('23', '23')] 

 Dependency tags are: 
>> [(('Any', 'B'), 'det'), (('user', 'B'), 'compound'), (('B', 'verify'), 'nsubj'), (('can', 'verify'), 'aux'), (('verify', 'root'), 'root'), (('the', 'signature'), 'det'), (('signature', 'verify'), 'obj'), (('by', 'V1'), 'case'), (('computing', 'V1'), 'compound'), (('V1', 'verify'), 'obl'), (('=', 'verify'), 'punct'), (('am', 'V2'), 'compound'), (('mod', 'V2'), 'compound'), (('q', 'V2'), 'compound'), (('V2', 'verify'), 'parataxis'), (('=', 'verify'), 'punct'), (('yAS1', 'valid'), 'mark'), (('S1S2', 'mod'), 'compound'), (('mod', 'valid'), 'nsubj'), (('q', 'Signature'), 'compound'), (('Signature', 'valid'), 'nsubj'), (('is', 'valid'), 'cop'), (('valid', 'verify'), 'parataxis'), (('if', 'V1'), 'mark'), (('V1', 'valid'), 'advcl'), (('=', 'valid'), 'punct'), (('V2', 'Unit'), 'compound'), (('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'valid'), 'parataxis'), (('of', 'Engineering'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('23', '‹#›'), 'nummod')]

 Named Entities are: 
>> [('23', 'CARDINAL')]

========================== Sentence 70 ===========================

 To sign a message M, user A first computes the hash m = H(M), such that m is an integer in the range 0 <= m <= q – 1. 

Tokens are: 
>> ['To', 'sign', 'a', 'message', 'M', ',', 'user', 'A', 'first', 'computes', 'the', 'hash', 'm', '=', 'H', '(', 'M', ')', ',', 'such', 'that', 'm', 'is', 'an', 'integer', 'in', 'the', 'range', '0', '<=', 'm', '<=', 'q', '–', '1', '.'] 

 UPOS tags are: 
>> [('To', 'PART'), ('sign', 'VERB'), ('a', 'DET'), ('message', 'NOUN'), ('M', 'NOUN'), (',', 'PUNCT'), ('user', 'NOUN'), ('A', 'DET'), ('first', 'ADJ'), ('computes', 'VERB'), ('the', 'DET'), ('hash', 'NOUN'), ('m', 'NOUN'), ('=', 'SYM'), ('H', 'NOUN'), ('(', 'PUNCT'), ('M', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('such', 'ADJ'), ('that', 'SCONJ'), ('m', 'NOUN'), ('is', 'AUX'), ('an', 'DET'), ('integer', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('range', 'NOUN'), ('0', 'NUM'), ('<=', 'SYM'), ('m', 'NOUN'), ('<=', 'SYM'), ('q', 'NOUN'), ('–', 'SYM'), ('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('To', 'TO'), ('sign', 'VB'), ('a', 'DT'), ('message', 'NN'), ('M', 'NN'), (',', ','), ('user', 'NN'), ('A', 'DT'), ('first', 'JJ'), ('computes', 'VBZ'), ('the', 'DT'), ('hash', 'NN'), ('m', 'NN'), ('=', 'SYM'), ('H', 'NN'), ('(', '-LRB-'), ('M', 'NN'), (')', '-RRB-'), (',', ','), ('such', 'JJ'), ('that', 'IN'), ('m', 'NN'), ('is', 'VBZ'), ('an', 'DT'), ('integer', 'NN'), ('in', 'IN'), ('the', 'DT'), ('range', 'NN'), ('0', 'CD'), ('<=', 'SYM'), ('m', 'NN'), ('<=', 'SYM'), ('q', 'NN'), ('–', 'SYM'), ('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('To', 'to'), ('sign', 'sign'), ('a', 'a'), ('message', 'message'), ('M', 'm'), (',', ','), ('user', 'user'), ('A', 'a'), ('first', 'first'), ('computes', 'compute'), ('the', 'the'), ('hash', 'hash'), ('m', 'm'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), (')', ')'), (',', ','), ('such', 'such'), ('that', 'that'), ('m', 'm'), ('is', 'be'), ('an', 'a'), ('integer', 'integer'), ('in', 'in'), ('the', 'the'), ('range', 'range'), ('0', '0'), ('<=', '<='), ('m', 'm'), ('<=', '<='), ('q', 'q'), ('–', '-'), ('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('To', 'sign'), 'mark'), (('sign', 'computes'), 'advcl'), (('a', 'M'), 'det'), (('message', 'M'), 'compound'), (('M', 'sign'), 'obj'), ((',', 'computes'), 'punct'), (('user', 'computes'), 'nsubj'), (('A', 'first'), 'det'), (('first', 'user'), 'amod'), (('computes', 'root'), 'root'), (('the', 'm'), 'det'), (('hash', 'm'), 'compound'), (('m', 'computes'), 'obj'), (('=', 'computes'), 'xcomp'), (('H', '='), 'obj'), (('(', 'M'), 'punct'), (('M', 'H'), 'appos'), ((')', 'M'), 'punct'), ((',', 'integer'), 'punct'), (('such', 'integer'), 'mark'), (('that', 'such'), 'fixed'), (('m', 'integer'), 'nsubj'), (('is', 'integer'), 'cop'), (('an', 'integer'), 'det'), (('integer', 'computes'), 'advcl'), (('in', 'range'), 'case'), (('the', 'range'), 'det'), (('range', 'integer'), 'nmod'), (('0', 'm'), 'nummod'), (('<=', 'm'), 'nummod'), (('m', 'range'), 'appos'), (('<=', 'm'), 'nummod'), (('q', 'range'), 'nmod'), (('–', '1'), 'case'), (('1', 'q'), 'nummod'), (('.', 'computes'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('0 <= m', 'QUANTITY'), ('1', 'CARDINAL')]

========================== Sentence 71 ===========================

 A then forms a digital signature as shown. 

Tokens are: 
>> ['A', 'then', 'forms', 'a', 'digital', 'signature', 'as', 'shown', '.'] 

 UPOS tags are: 
>> [('A', 'DET'), ('then', 'ADV'), ('forms', 'VERB'), ('a', 'DET'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('as', 'SCONJ'), ('shown', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'DT'), ('then', 'RB'), ('forms', 'VBZ'), ('a', 'DT'), ('digital', 'JJ'), ('signature', 'NN'), ('as', 'IN'), ('shown', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('A', 'a'), ('then', 'then'), ('forms', 'form'), ('a', 'a'), ('digital', 'digital'), ('signature', 'signature'), ('as', 'as'), ('shown', 'show'), ('.', '.')] 

 Dependency tags are: 
>> [(('A', 'forms'), 'nsubj'), (('then', 'forms'), 'advmod'), (('forms', 'root'), 'root'), (('a', 'signature'), 'det'), (('digital', 'signature'), 'amod'), (('signature', 'forms'), 'obj'), (('as', 'shown'), 'mark'), (('shown', 'forms'), 'advcl'), (('.', 'forms'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 72 ===========================

 The basic idea with El Gamal signatures is to again choose a temporary random signing  key, protect it, then use it solve the specified equation on the hash of the message to create the signature (in 2 pieces). 

Tokens are: 
>> ['The', 'basic', 'idea', 'with', 'El', 'Gamal', 'signatures', 'is', 'to', 'again', 'choose', 'a', 'temporary', 'random', 'signing', 'key', ',', 'protect', 'it', ',', 'then', 'use', 'it', 'solve', 'the', 'specified', 'equation', 'on', 'the', 'hash', 'of', 'the', 'message', 'to', 'create', 'the', 'signature', '(', 'in', '2', 'pieces', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('basic', 'ADJ'), ('idea', 'NOUN'), ('with', 'ADP'), ('El', 'PROPN'), ('Gamal', 'PROPN'), ('signatures', 'VERB'), ('is', 'VERB'), ('to', 'PART'), ('again', 'ADV'), ('choose', 'VERB'), ('a', 'DET'), ('temporary', 'ADJ'), ('random', 'ADJ'), ('signing', 'NOUN'), ('key', 'NOUN'), (',', 'PUNCT'), ('protect', 'VERB'), ('it', 'PRON'), (',', 'PUNCT'), ('then', 'ADV'), ('use', 'VERB'), ('it', 'PRON'), ('solve', 'VERB'), ('the', 'DET'), ('specified', 'VERB'), ('equation', 'NOUN'), ('on', 'ADP'), ('the', 'DET'), ('hash', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('to', 'PART'), ('create', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('(', 'PUNCT'), ('in', 'ADP'), ('2', 'NUM'), ('pieces', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('basic', 'JJ'), ('idea', 'NN'), ('with', 'IN'), ('El', 'NNP'), ('Gamal', 'NNP'), ('signatures', 'VBZ'), ('is', 'VBZ'), ('to', 'TO'), ('again', 'RB'), ('choose', 'VB'), ('a', 'DT'), ('temporary', 'JJ'), ('random', 'JJ'), ('signing', 'NN'), ('key', 'NN'), (',', ','), ('protect', 'VB'), ('it', 'PRP'), (',', ','), ('then', 'RB'), ('use', 'VB'), ('it', 'PRP'), ('solve', 'VB'), ('the', 'DT'), ('specified', 'VBN'), ('equation', 'NN'), ('on', 'IN'), ('the', 'DT'), ('hash', 'NN'), ('of', 'IN'), ('the', 'DT'), ('message', 'NN'), ('to', 'TO'), ('create', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('(', '-LRB-'), ('in', 'IN'), ('2', 'CD'), ('pieces', 'NNS'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('basic', 'basic'), ('idea', 'idea'), ('with', 'with'), ('El', 'El'), ('Gamal', 'Gamal'), ('signatures', 'signature'), ('is', 'be'), ('to', 'to'), ('again', 'again'), ('choose', 'choose'), ('a', 'a'), ('temporary', 'temporary'), ('random', 'random'), ('signing', 'signing'), ('key', 'key'), (',', ','), ('protect', 'protect'), ('it', 'it'), (',', ','), ('then', 'then'), ('use', 'use'), ('it', 'it'), ('solve', 'solve'), ('the', 'the'), ('specified', 'specify'), ('equation', 'equation'), ('on', 'on'), ('the', 'the'), ('hash', 'hash'), ('of', 'of'), ('the', 'the'), ('message', 'message'), ('to', 'to'), ('create', 'create'), ('the', 'the'), ('signature', 'signature'), ('(', '('), ('in', 'in'), ('2', '2'), ('pieces', 'piece'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'idea'), 'det'), (('basic', 'idea'), 'amod'), (('idea', 'choose'), 'nsubj'), (('with', 'El'), 'case'), (('El', 'idea'), 'nmod'), (('Gamal', 'El'), 'flat'), (('signatures', 'idea'), 'acl:relcl'), (('is', 'root'), 'root'), (('to', 'choose'), 'mark'), (('again', 'choose'), 'advmod'), (('choose', 'is'), 'ccomp'), (('a', 'key'), 'det'), (('temporary', 'key'), 'amod'), (('random', 'key'), 'amod'), (('signing', 'key'), 'compound'), (('key', 'choose'), 'obj'), ((',', 'protect'), 'punct'), (('protect', 'choose'), 'advcl'), (('it', 'protect'), 'obj'), ((',', 'use'), 'punct'), (('then', 'use'), 'advmod'), (('use', 'choose'), 'conj'), (('it', 'use'), 'obj'), (('solve', 'use'), 'xcomp'), (('the', 'equation'), 'det'), (('specified', 'equation'), 'amod'), (('equation', 'solve'), 'obj'), (('on', 'hash'), 'case'), (('the', 'hash'), 'det'), (('hash', 'solve'), 'obl'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'hash'), 'nmod'), (('to', 'create'), 'mark'), (('create', 'solve'), 'advcl'), (('the', 'signature'), 'det'), (('signature', 'create'), 'obj'), (('(', 'pieces'), 'punct'), (('in', 'pieces'), 'case'), (('2', 'pieces'), 'nummod'), (('pieces', 'create'), 'obl'), ((')', 'pieces'), 'punct'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> [('El Gamal', 'ORG'), ('2', 'CARDINAL')]

========================== Sentence 73 ===========================

 Verification consists of confirming the validation equation that relates the signature to the (hash of the) message (see text for proof). 

Tokens are: 
>> ['Verification', 'consists', 'of', 'confirming', 'the', 'validation', 'equation', 'that', 'relates', 'the', 'signature', 'to', 'the', '(', 'hash', 'of', 'the', ')', 'message', '(', 'see', 'text', 'for', 'proof', ')', '.'] 

 UPOS tags are: 
>> [('Verification', 'NOUN'), ('consists', 'VERB'), ('of', 'SCONJ'), ('confirming', 'VERB'), ('the', 'DET'), ('validation', 'NOUN'), ('equation', 'NOUN'), ('that', 'PRON'), ('relates', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('(', 'PUNCT'), ('hash', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), (')', 'PUNCT'), ('message', 'NOUN'), ('(', 'PUNCT'), ('see', 'VERB'), ('text', 'NOUN'), ('for', 'ADP'), ('proof', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Verification', 'NN'), ('consists', 'VBZ'), ('of', 'IN'), ('confirming', 'VBG'), ('the', 'DT'), ('validation', 'NN'), ('equation', 'NN'), ('that', 'WDT'), ('relates', 'VBZ'), ('the', 'DT'), ('signature', 'NN'), ('to', 'IN'), ('the', 'DT'), ('(', '-LRB-'), ('hash', 'NN'), ('of', 'IN'), ('the', 'DT'), (')', '-RRB-'), ('message', 'NN'), ('(', '-LRB-'), ('see', 'VB'), ('text', 'NN'), ('for', 'IN'), ('proof', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Verification', 'verification'), ('consists', 'consist'), ('of', 'of'), ('confirming', 'confirm'), ('the', 'the'), ('validation', 'validation'), ('equation', 'equation'), ('that', 'that'), ('relates', 'relate'), ('the', 'the'), ('signature', 'signature'), ('to', 'to'), ('the', 'the'), ('(', '('), ('hash', 'hash'), ('of', 'of'), ('the', 'the'), (')', ')'), ('message', 'message'), ('(', '('), ('see', 'see'), ('text', 'text'), ('for', 'for'), ('proof', 'proof'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Verification', 'consists'), 'nsubj'), (('consists', 'root'), 'root'), (('of', 'confirming'), 'mark'), (('confirming', 'consists'), 'advcl'), (('the', 'equation'), 'det'), (('validation', 'equation'), 'compound'), (('equation', 'confirming'), 'obj'), (('that', 'relates'), 'nsubj'), (('relates', 'equation'), 'acl:relcl'), (('the', 'signature'), 'det'), (('signature', 'relates'), 'obj'), (('to', 'message'), 'case'), (('the', 'message'), 'det'), (('(', 'hash'), 'punct'), (('hash', 'message'), 'compound'), (('of', 'message'), 'case'), (('the', 'message'), 'det'), ((')', 'hash'), 'punct'), (('message', 'signature'), 'nmod'), (('(', 'see'), 'punct'), (('see', 'consists'), 'parataxis'), (('text', 'see'), 'obj'), (('for', 'proof'), 'case'), (('proof', 'see'), 'obl'), ((')', 'see'), 'punct'), (('.', 'consists'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 74 ===========================

 Again note that El Gamal encryption involves 1 modulo exponentiation and multiplications (vs 1 exponentiation for RSA). 

Tokens are: 
>> ['Again', 'note', 'that', 'El', 'Gamal', 'encryption', 'involves', '1', 'modulo', 'exponentiation', 'and', 'multiplications', '(', 'vs', '1', 'exponentiation', 'for', 'RSA', ')', '.'] 

 UPOS tags are: 
>> [('Again', 'ADV'), ('note', 'VERB'), ('that', 'SCONJ'), ('El', 'PROPN'), ('Gamal', 'PROPN'), ('encryption', 'NOUN'), ('involves', 'VERB'), ('1', 'NUM'), ('modulo', 'ADJ'), ('exponentiation', 'NOUN'), ('and', 'CCONJ'), ('multiplications', 'NOUN'), ('(', 'PUNCT'), ('vs', 'ADP'), ('1', 'NUM'), ('exponentiation', 'NOUN'), ('for', 'ADP'), ('RSA', 'PROPN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Again', 'RB'), ('note', 'VB'), ('that', 'IN'), ('El', 'NNP'), ('Gamal', 'NNP'), ('encryption', 'NN'), ('involves', 'VBZ'), ('1', 'CD'), ('modulo', 'JJ'), ('exponentiation', 'NN'), ('and', 'CC'), ('multiplications', 'NNS'), ('(', '-LRB-'), ('vs', 'IN'), ('1', 'CD'), ('exponentiation', 'NN'), ('for', 'IN'), ('RSA', 'NNP'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Again', 'again'), ('note', 'note'), ('that', 'that'), ('El', 'El'), ('Gamal', 'Gamal'), ('encryption', 'encryption'), ('involves', 'involve'), ('1', '1'), ('modulo', 'modulo'), ('exponentiation', 'exponentiation'), ('and', 'and'), ('multiplications', 'multiplication'), ('(', '('), ('vs', 'versus'), ('1', '1'), ('exponentiation', 'exponentiation'), ('for', 'for'), ('RSA', 'RSA'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Again', 'note'), 'advmod'), (('note', 'root'), 'root'), (('that', 'involves'), 'mark'), (('El', 'encryption'), 'compound'), (('Gamal', 'encryption'), 'compound'), (('encryption', 'involves'), 'nsubj'), (('involves', 'note'), 'ccomp'), (('1', 'exponentiation'), 'nummod'), (('modulo', 'exponentiation'), 'amod'), (('exponentiation', 'involves'), 'obj'), (('and', 'multiplications'), 'cc'), (('multiplications', 'exponentiation'), 'conj'), (('(', 'exponentiation'), 'punct'), (('vs', 'exponentiation'), 'case'), (('1', 'exponentiation'), 'nummod'), (('exponentiation', 'exponentiation'), 'nmod'), (('for', 'RSA'), 'case'), (('RSA', 'exponentiation'), 'nmod'), ((')', 'exponentiation'), 'punct'), (('.', 'note'), 'punct')]

 Named Entities are: 
>> [('El Gamal', 'ORG'), ('1', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 75 ===========================

 ElGamal Signature Example  Use field GF(19) q=19 and a=10 Alice computes her key: A chooses xA=16 & computes yA=1016 mod 19 = 4 Alice signs message with hash m=14 as (3,4): choosing random K=5 which has gcd(18,5)= 

Tokens are: 
>> ['ElGamal', 'Signature', 'Example', 'Use', 'field', 'GF', '(', '19', ')', 'q=19', 'and', 'a=10', 'Alice', 'computes', 'her', 'key', ':', 'A', 'chooses', 'x', 'A=16', '&', 'computes', 'y', 'A=1016', 'mod', '19', '=', '4', 'Alice', 'signs', 'message', 'with', 'hash', 'm=14', 'as', '(', '3,4', ')', ':', 'choosing', 'random', 'K=5', 'which', 'has', 'gcd', '(', '18,5', ')', '='] 

 UPOS tags are: 
>> [('ElGamal', 'PROPN'), ('Signature', 'PROPN'), ('Example', 'NOUN'), ('Use', 'NOUN'), ('field', 'NOUN'), ('GF', 'PROPN'), ('(', 'PUNCT'), ('19', 'NUM'), (')', 'PUNCT'), ('q=19', 'NUM'), ('and', 'CCONJ'), ('a=10', 'NUM'), ('Alice', 'PROPN'), ('computes', 'VERB'), ('her', 'PRON'), ('key', 'NOUN'), (':', 'PUNCT'), ('A', 'DET'), ('chooses', 'VERB'), ('x', 'NOUN'), ('A=16', 'NUM'), ('&', 'CCONJ'), ('computes', 'VERB'), ('y', 'SYM'), ('A=1016', 'NUM'), ('mod', 'NOUN'), ('19', 'NUM'), ('=', 'SYM'), ('4', 'NUM'), ('Alice', 'PROPN'), ('signs', 'NOUN'), ('message', 'NOUN'), ('with', 'ADP'), ('hash', 'NOUN'), ('m=14', 'NOUN'), ('as', 'ADP'), ('(', 'PUNCT'), ('3,4', 'NUM'), (')', 'PUNCT'), (':', 'PUNCT'), ('choosing', 'VERB'), ('random', 'ADJ'), ('K=5', 'NOUN'), ('which', 'PRON'), ('has', 'VERB'), ('gcd', 'NOUN'), ('(', 'PUNCT'), ('18,5', 'NUM'), (')', 'PUNCT'), ('=', 'PUNCT')] 

 XPOS tags are: 
>> [('ElGamal', 'NNP'), ('Signature', 'NNP'), ('Example', 'NN'), ('Use', 'NN'), ('field', 'NN'), ('GF', 'NNP'), ('(', '-LRB-'), ('19', 'CD'), (')', '-RRB-'), ('q=19', 'CD'), ('and', 'CC'), ('a=10', 'CD'), ('Alice', 'NNP'), ('computes', 'VBZ'), ('her', 'PRP$'), ('key', 'NN'), (':', ':'), ('A', 'DT'), ('chooses', 'VBZ'), ('x', 'NN'), ('A=16', 'CD'), ('&', 'CC'), ('computes', 'VBZ'), ('y', '$'), ('A=1016', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('=', 'SYM'), ('4', 'CD'), ('Alice', 'NNP'), ('signs', 'NNS'), ('message', 'NN'), ('with', 'IN'), ('hash', 'NN'), ('m=14', 'NN'), ('as', 'IN'), ('(', '-LRB-'), ('3,4', 'CD'), (')', '-RRB-'), (':', ':'), ('choosing', 'VBG'), ('random', 'JJ'), ('K=5', 'NN'), ('which', 'WDT'), ('has', 'VBZ'), ('gcd', 'NN'), ('(', '-LRB-'), ('18,5', 'CD'), (')', '-RRB-'), ('=', ',')] 

 Lemmas are: 
>> [('ElGamal', 'ElGamal'), ('Signature', 'Signature'), ('Example', 'example'), ('Use', 'use'), ('field', 'field'), ('GF', 'GF'), ('(', '('), ('19', '19'), (')', ')'), ('q=19', 'q=19'), ('and', 'and'), ('a=10', 'a=10'), ('Alice', 'Alice'), ('computes', 'compute'), ('her', 'she'), ('key', 'key'), (':', ':'), ('A', 'a'), ('chooses', 'choose'), ('x', 'x'), ('A=16', 'a=16'), ('&', '&'), ('computes', 'compute'), ('y', 'y'), ('A=1016', 'a=1016'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('4', '4'), ('Alice', 'Alice'), ('signs', 'sign'), ('message', 'message'), ('with', 'with'), ('hash', 'hash'), ('m=14', 'm=14'), ('as', 'as'), ('(', '('), ('3,4', '3,4'), (')', ')'), (':', ':'), ('choosing', 'choose'), ('random', 'random'), ('K=5', 'k=5'), ('which', 'which'), ('has', 'have'), ('gcd', 'gcd'), ('(', '('), ('18,5', '18,5'), (')', ')'), ('=', '=')] 

 Dependency tags are: 
>> [(('ElGamal', 'field'), 'compound'), (('Signature', 'Example'), 'compound'), (('Example', 'field'), 'compound'), (('Use', 'field'), 'compound'), (('field', 'computes'), 'nsubj'), (('GF', 'field'), 'appos'), (('(', 'q=19'), 'punct'), (('19', 'q=19'), 'compound'), ((')', 'q=19'), 'punct'), (('q=19', 'GF'), 'appos'), (('and', 'a=10'), 'cc'), (('a=10', 'q=19'), 'conj'), (('Alice', 'GF'), 'conj'), (('computes', 'root'), 'root'), (('her', 'key'), 'nmod:poss'), (('key', 'computes'), 'obj'), ((':', 'chooses'), 'punct'), (('A', 'chooses'), 'det'), (('chooses', 'computes'), 'parataxis'), (('x', 'chooses'), 'obj'), (('A=16', 'x'), 'nummod'), (('&', 'computes'), 'cc'), (('computes', 'chooses'), 'conj'), (('y', 'mod'), 'compound'), (('A=1016', 'y'), 'nummod'), (('mod', 'computes'), 'obj'), (('19', 'mod'), 'nummod'), (('=', 'chooses'), 'conj'), (('4', 'message'), 'nummod'), (('Alice', 'signs'), 'compound'), (('signs', 'message'), 'compound'), (('message', '='), 'obj'), (('with', 'm=14'), 'case'), (('hash', 'm=14'), 'compound'), (('m=14', 'message'), 'nmod'), (('as', '3,4'), 'case'), (('(', '3,4'), 'punct'), (('3,4', 'm=14'), 'nmod'), ((')', '3,4'), 'punct'), ((':', 'choosing'), 'punct'), (('choosing', 'computes'), 'advcl'), (('random', 'K=5'), 'amod'), (('K=5', 'choosing'), 'obj'), (('which', 'has'), 'nsubj'), (('has', 'K=5'), 'acl:relcl'), (('gcd', 'has'), 'obj'), (('(', '18,5'), 'punct'), (('18,5', 'gcd'), 'nummod'), ((')', '18,5'), 'punct'), (('=', 'computes'), 'punct')]

 Named Entities are: 
>> [('Alice', 'PERSON')]

========================== Sentence 76 ===========================

 1 computing S1 = 105 mod 19 = 3 finding K-1 mod (q-1) = 5-1 mod 18 = 11 computing S2 = 11(14-16.3) mod 18 = 4 Any user B can verify the signature by computing V1 = 1014 mod 19 = 16 V2 = 43.34 = 5184 = 16 mod 19 since 16 = 16 signature is valid   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  24 Here is an example of creating and verifying an ElGamal signature from the text using the prime field GF(19); that is, q = 19. 

Tokens are: 
>> ['1', 'computing', 'S1', '=', '105', 'mod', '19', '=', '3', 'finding', 'K', '-1', 'mod', '(', 'q-', '1', ')', '=', '5', '-', '1', 'mod', '18', '=', '11', 'computing', 'S2', '=', '11', '(', '14', '-', '16.3', ')', 'mod', '18', '=', '4', 'Any', 'user', 'B', 'can', 'verify', 'the', 'signature', 'by', 'computing', 'V1', '=', '1014', 'mod', '19', '=', '16', 'V2', '=', '43.34', '=', '5184', '=', '16', 'mod', '19', 'since', '16', '=', '16', 'signature', 'is', 'valid', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '24', 'Here', 'is', 'an', 'example', 'of', 'creating', 'and', 'verifying', 'an', 'ElGamal', 'signature', 'from', 'the', 'text', 'using', 'the', 'prime', 'field', 'GF', '(', '19', ')', ';', 'that', 'is', ',', 'q', '=', '19', '.'] 

 UPOS tags are: 
>> [('1', 'NUM'), ('computing', 'NOUN'), ('S1', 'NOUN'), ('=', 'SYM'), ('105', 'NUM'), ('mod', 'NOUN'), ('19', 'NUM'), ('=', 'SYM'), ('3', 'NUM'), ('finding', 'NOUN'), ('K', 'NUM'), ('-1', 'NUM'), ('mod', 'NOUN'), ('(', 'PUNCT'), ('q-', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('=', 'SYM'), ('5', 'NUM'), ('-', 'SYM'), ('1', 'NUM'), ('mod', 'NOUN'), ('18', 'NUM'), ('=', 'SYM'), ('11', 'NUM'), ('computing', 'NOUN'), ('S2', 'NOUN'), ('=', 'SYM'), ('11', 'NUM'), ('(', 'PUNCT'), ('14', 'NUM'), ('-', 'SYM'), ('16.3', 'NUM'), (')', 'PUNCT'), ('mod', 'NOUN'), ('18', 'NUM'), ('=', 'SYM'), ('4', 'NUM'), ('Any', 'DET'), ('user', 'NOUN'), ('B', 'NOUN'), ('can', 'AUX'), ('verify', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('by', 'ADP'), ('computing', 'NOUN'), ('V1', 'NOUN'), ('=', 'SYM'), ('1014', 'NUM'), ('mod', 'NOUN'), ('19', 'NUM'), ('=', 'SYM'), ('16', 'NUM'), ('V2', 'NOUN'), ('=', 'SYM'), ('43.34', 'NUM'), ('=', 'SYM'), ('5184', 'NUM'), ('=', 'SYM'), ('16', 'NUM'), ('mod', 'NOUN'), ('19', 'NUM'), ('since', 'ADP'), ('16', 'NUM'), ('=', 'SYM'), ('16', 'NUM'), ('signature', 'NOUN'), ('is', 'AUX'), ('valid', 'ADJ'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('24', 'NUM'), ('Here', 'ADV'), ('is', 'AUX'), ('an', 'DET'), ('example', 'NOUN'), ('of', 'SCONJ'), ('creating', 'VERB'), ('and', 'CCONJ'), ('verifying', 'VERB'), ('an', 'DET'), ('ElGamal', 'NOUN'), ('signature', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('text', 'NOUN'), ('using', 'VERB'), ('the', 'DET'), ('prime', 'ADJ'), ('field', 'NOUN'), ('GF', 'NOUN'), ('(', 'PUNCT'), ('19', 'NUM'), (')', 'PUNCT'), (';', 'PUNCT'), ('that', 'PRON'), ('is', 'AUX'), (',', 'PUNCT'), ('q', 'NOUN'), ('=', 'SYM'), ('19', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('1', 'CD'), ('computing', 'NN'), ('S1', 'NN'), ('=', 'SYM'), ('105', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('=', 'SYM'), ('3', 'CD'), ('finding', 'NN'), ('K', 'CD'), ('-1', 'CD'), ('mod', 'NN'), ('(', '-LRB-'), ('q-', 'NN'), ('1', 'CD'), (')', '-RRB-'), ('=', 'SYM'), ('5', 'CD'), ('-', 'SYM'), ('1', 'CD'), ('mod', 'NN'), ('18', 'CD'), ('=', 'SYM'), ('11', 'CD'), ('computing', 'NN'), ('S2', 'NN'), ('=', 'SYM'), ('11', 'CD'), ('(', '-LRB-'), ('14', 'CD'), ('-', 'SYM'), ('16.3', 'CD'), (')', '-RRB-'), ('mod', 'NN'), ('18', 'CD'), ('=', 'SYM'), ('4', 'CD'), ('Any', 'DT'), ('user', 'NN'), ('B', 'NN'), ('can', 'MD'), ('verify', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('by', 'IN'), ('computing', 'NN'), ('V1', 'NN'), ('=', 'SYM'), ('1014', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('=', 'SYM'), ('16', 'CD'), ('V2', 'NN'), ('=', 'SYM'), ('43.34', 'CD'), ('=', 'SYM'), ('5184', 'CD'), ('=', 'SYM'), ('16', 'CD'), ('mod', 'NN'), ('19', 'CD'), ('since', 'IN'), ('16', 'CD'), ('=', 'SYM'), ('16', 'CD'), ('signature', 'NN'), ('is', 'VBZ'), ('valid', 'JJ'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('24', 'CD'), ('Here', 'RB'), ('is', 'VBZ'), ('an', 'DT'), ('example', 'NN'), ('of', 'IN'), ('creating', 'VBG'), ('and', 'CC'), ('verifying', 'VBG'), ('an', 'DT'), ('ElGamal', 'NN'), ('signature', 'NN'), ('from', 'IN'), ('the', 'DT'), ('text', 'NN'), ('using', 'VBG'), ('the', 'DT'), ('prime', 'JJ'), ('field', 'NN'), ('GF', 'NN'), ('(', '-LRB-'), ('19', 'CD'), (')', '-RRB-'), (';', ':'), ('that', 'DT'), ('is', 'VBZ'), (',', ','), ('q', 'NN'), ('=', 'SYM'), ('19', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('1', '1'), ('computing', 'computing'), ('S1', 'S1'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('3', '3'), ('finding', 'finding'), ('K', 'k'), ('-1', '-1'), ('mod', 'mod'), ('(', '('), ('q-', 'q-'), ('1', '1'), (')', ')'), ('=', '='), ('5', '5'), ('-', '-'), ('1', '1'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('11', '11'), ('computing', 'computing'), ('S2', 's2'), ('=', '='), ('11', '11'), ('(', '('), ('14', '14'), ('-', '-'), ('16.3', '16.3'), (')', ')'), ('mod', 'mod'), ('18', '18'), ('=', '='), ('4', '4'), ('Any', 'any'), ('user', 'user'), ('B', 'b'), ('can', 'can'), ('verify', 'verify'), ('the', 'the'), ('signature', 'signature'), ('by', 'by'), ('computing', 'computing'), ('V1', 'v1'), ('=', '='), ('1014', '1014'), ('mod', 'mod'), ('19', '19'), ('=', '='), ('16', '16'), ('V2', 'V2'), ('=', '='), ('43.34', '43.34'), ('=', '='), ('5184', '5184'), ('=', '='), ('16', '16'), ('mod', 'mod'), ('19', '19'), ('since', 'since'), ('16', '16'), ('=', '='), ('16', '16'), ('signature', 'signature'), ('is', 'be'), ('valid', 'valid'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('24', '24'), ('Here', 'here'), ('is', 'be'), ('an', 'a'), ('example', 'example'), ('of', 'of'), ('creating', 'create'), ('and', 'and'), ('verifying', 'verify'), ('an', 'a'), ('ElGamal', 'elgamal'), ('signature', 'signature'), ('from', 'from'), ('the', 'the'), ('text', 'text'), ('using', 'use'), ('the', 'the'), ('prime', 'prime'), ('field', 'field'), ('GF', 'gf'), ('(', '('), ('19', '19'), (')', ')'), (';', ';'), ('that', 'that'), ('is', 'be'), (',', ','), ('q', 'q'), ('=', '='), ('19', '19'), ('.', '.')] 

 Dependency tags are: 
>> [(('1', 'computing'), 'nummod'), (('computing', 'S1'), 'compound'), (('S1', '='), 'nsubj'), (('=', 'root'), 'root'), (('105', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('19', 'mod'), 'nummod'), (('=', '='), 'conj'), (('3', 'K'), 'compound'), (('finding', 'K'), 'compound'), (('K', 'mod'), 'nummod'), (('-1', 'mod'), 'nummod'), (('mod', '='), 'obj'), (('(', 'q-'), 'punct'), (('q-', 'mod'), 'appos'), (('1', 'q-'), 'dep'), ((')', 'q-'), 'punct'), (('=', '='), 'conj'), (('5', 'mod'), 'nummod'), (('-', '1'), 'case'), (('1', '5'), 'nmod'), (('mod', '='), 'obj'), (('18', '='), 'dep'), (('=', '='), 'conj'), (('11', 'computing'), 'nummod'), (('computing', '='), 'obj'), (('S2', '='), 'nsubj'), (('=', '='), 'conj'), (('11', '='), 'obj'), (('(', '14'), 'punct'), (('14', 'mod'), 'nummod'), (('-', '16.3'), 'case'), (('16.3', '14'), 'nmod'), ((')', '14'), 'punct'), (('mod', '='), 'obj'), (('18', '='), 'nsubj'), (('=', '='), 'conj'), (('4', '='), 'obj'), (('Any', 'B'), 'det'), (('user', 'B'), 'compound'), (('B', 'verify'), 'nsubj'), (('can', 'verify'), 'aux'), (('verify', '='), 'ccomp'), (('the', 'signature'), 'det'), (('signature', 'verify'), 'obj'), (('by', 'V1'), 'case'), (('computing', 'V1'), 'compound'), (('V1', '='), 'nsubj'), (('=', 'verify'), 'advcl'), (('1014', 'mod'), 'nummod'), (('mod', '='), 'nsubj'), (('19', '='), 'nsubj'), (('=', '='), 'parataxis'), (('16', '='), 'obj'), (('V2', '='), 'nsubj'), (('=', '='), 'conj'), (('43.34', '='), 'obj'), (('=', '='), 'conj'), (('5184', '='), 'obj'), (('=', '='), 'conj'), (('16', '='), 'obj'), (('mod', '='), 'obj'), (('19', '='), 'obj'), (('since', '16'), 'case'), (('16', '='), 'obl'), (('=', '='), 'conj'), (('16', '='), 'obj'), (('signature', '='), 'nsubj'), (('is', 'Unit'), 'cop'), (('valid', 'Unit'), 'amod'), (('Unit', '='), 'ccomp'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Institute'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'conj'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Engineering'), 'conj'), (('24', '‹#›'), 'dep'), (('Here', '24'), 'advmod'), (('is', 'example'), 'cop'), (('an', 'example'), 'det'), (('example', 'Institute'), 'conj'), (('of', 'creating'), 'mark'), (('creating', 'example'), 'acl'), (('and', 'verifying'), 'cc'), (('verifying', 'creating'), 'conj'), (('an', 'signature'), 'det'), (('ElGamal', 'signature'), 'compound'), (('signature', 'verifying'), 'obj'), (('from', 'text'), 'case'), (('the', 'text'), 'det'), (('text', 'verifying'), 'obl'), (('using', 'text'), 'acl'), (('the', 'GF'), 'det'), (('prime', 'GF'), 'amod'), (('field', 'GF'), 'compound'), (('GF', 'using'), 'obj'), (('(', '19'), 'punct'), (('19', 'GF'), 'dep'), ((')', '19'), 'punct'), ((';', '='), 'punct'), (('that', '='), 'nsubj'), (('is', '='), 'aux'), ((',', '='), 'punct'), (('q', '='), 'nsubj'), (('=', '19'), 'conj'), (('19', '='), 'obj'), (('.', '='), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('105', 'CARDINAL'), ('18', 'CARDINAL'), ('16', 'CARDINAL'), ('19', 'CARDINAL'), ('16', 'CARDINAL'), ('16', 'CARDINAL'), ('24', 'CARDINAL'), ('19', 'CARDINAL'), ('19', 'CARDINAL')]

========================== Sentence 77 ===========================

 It has primitive roots {2, 3, 10, 13, 14, 15}, as shown in Table 8.3. 

Tokens are: 
>> ['It', 'has', 'primitive', 'roots', '{', '2', ',', '3', ',', '10', ',', '13', ',', '14', ',', '15', '}', ',', 'as', 'shown', 'in', 'Table', '8.3', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('has', 'VERB'), ('primitive', 'ADJ'), ('roots', 'NOUN'), ('{', 'PUNCT'), ('2', 'NUM'), (',', 'PUNCT'), ('3', 'NUM'), (',', 'PUNCT'), ('10', 'NUM'), (',', 'PUNCT'), ('13', 'NUM'), (',', 'PUNCT'), ('14', 'NUM'), (',', 'PUNCT'), ('15', 'NUM'), ('}', 'PUNCT'), (',', 'PUNCT'), ('as', 'SCONJ'), ('shown', 'VERB'), ('in', 'ADP'), ('Table', 'PROPN'), ('8.3', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('has', 'VBZ'), ('primitive', 'JJ'), ('roots', 'NNS'), ('{', ','), ('2', 'CD'), (',', ','), ('3', 'CD'), (',', ','), ('10', 'CD'), (',', ','), ('13', 'CD'), (',', ','), ('14', 'CD'), (',', ','), ('15', 'CD'), ('}', '-RRB-'), (',', ','), ('as', 'IN'), ('shown', 'VBN'), ('in', 'IN'), ('Table', 'NNP'), ('8.3', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('has', 'have'), ('primitive', 'primitive'), ('roots', 'root'), ('{', '{'), ('2', '2'), (',', ','), ('3', '3'), (',', ','), ('10', '10'), (',', ','), ('13', '13'), (',', ','), ('14', '14'), (',', ','), ('15', '15'), ('}', '}'), (',', ','), ('as', 'as'), ('shown', 'show'), ('in', 'in'), ('Table', 'Table'), ('8.3', '8.3'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'has'), 'nsubj'), (('has', 'root'), 'root'), (('primitive', 'roots'), 'amod'), (('roots', 'has'), 'obj'), (('{', '2'), 'punct'), (('2', 'roots'), 'appos'), ((',', '3'), 'punct'), (('3', '2'), 'conj'), ((',', '10'), 'punct'), (('10', '2'), 'conj'), ((',', '13'), 'punct'), (('13', '2'), 'conj'), ((',', '14'), 'punct'), (('14', '13'), 'conj'), ((',', '15'), 'punct'), (('15', '14'), 'conj'), (('}', '15'), 'punct'), ((',', 'shown'), 'punct'), (('as', 'shown'), 'mark'), (('shown', 'has'), 'advcl'), (('in', 'Table'), 'case'), (('Table', 'shown'), 'obl'), (('8.3', 'Table'), 'nummod'), (('.', 'has'), 'punct')]

 Named Entities are: 
>> [('2', 'CARDINAL'), ('3', 'CARDINAL'), ('10', 'CARDINAL'), ('13', 'CARDINAL'), ('14', 'DATE'), ('8.3', 'CARDINAL')]

========================== Sentence 78 ===========================

 We choose a = 10. 

Tokens are: 
>> ['We', 'choose', 'a', '=', '10', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('choose', 'VERB'), ('a', 'DET'), ('=', 'SYM'), ('10', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('choose', 'VBP'), ('a', 'DT'), ('=', 'SYM'), ('10', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('choose', 'choose'), ('a', 'a'), ('=', '='), ('10', '10'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'choose'), 'nsubj'), (('choose', 'root'), 'root'), (('a', '='), 'det'), (('=', 'choose'), 'xcomp'), (('10', '='), 'obj'), (('.', 'choose'), 'punct')]

 Named Entities are: 
>> [('10', 'CARDINAL')]

========================== Sentence 79 ===========================

 Alice generates a key pair as shown, which is = {19, 10, 4}. 

Tokens are: 
>> ['Alice', 'generates', 'a', 'key', 'pair', 'as', 'shown', ',', 'which', 'is', '=', '{', '19', ',', '10', ',', '4}', '.'] 

 UPOS tags are: 
>> [('Alice', 'PROPN'), ('generates', 'VERB'), ('a', 'DET'), ('key', 'ADJ'), ('pair', 'NOUN'), ('as', 'SCONJ'), ('shown', 'VERB'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('=', 'PUNCT'), ('{', 'PUNCT'), ('19', 'NUM'), (',', 'PUNCT'), ('10', 'NUM'), (',', 'PUNCT'), ('4}', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Alice', 'NNP'), ('generates', 'VBZ'), ('a', 'DT'), ('key', 'JJ'), ('pair', 'NN'), ('as', 'IN'), ('shown', 'VBN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('=', ','), ('{', 'NFP'), ('19', 'CD'), (',', ','), ('10', 'CD'), (',', ','), ('4}', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Alice', 'Alice'), ('generates', 'generate'), ('a', 'a'), ('key', 'key'), ('pair', 'pair'), ('as', 'as'), ('shown', 'show'), (',', ','), ('which', 'which'), ('is', 'be'), ('=', '='), ('{', '{'), ('19', '19'), (',', ','), ('10', '10'), (',', ','), ('4}', '4}'), ('.', '.')] 

 Dependency tags are: 
>> [(('Alice', 'generates'), 'nsubj'), (('generates', 'root'), 'root'), (('a', 'pair'), 'det'), (('key', 'pair'), 'amod'), (('pair', 'generates'), 'obj'), (('as', 'shown'), 'mark'), (('shown', 'generates'), 'advcl'), ((',', 'shown'), 'punct'), (('which', '='), 'nsubj'), (('is', '='), 'cop'), (('=', 'generates'), 'parataxis'), (('{', '19'), 'punct'), (('19', '='), 'nummod'), ((',', '19'), 'punct'), (('10', '19'), 'conj'), ((',', '4}'), 'punct'), (('4}', '19'), 'conj'), (('.', 'generates'), 'punct')]

 Named Entities are: 
>> [('Alice', 'PERSON'), ('19', 'CARDINAL'), ('4}', 'CARDINAL')]

========================== Sentence 80 ===========================

 Alice can sign a message with hash m = 14 as shown to compute the signature pair (3,4). 

Tokens are: 
>> ['Alice', 'can', 'sign', 'a', 'message', 'with', 'hash', 'm', '=', '14', 'as', 'shown', 'to', 'compute', 'the', 'signature', 'pair', '(', '3,4', ')', '.'] 

 UPOS tags are: 
>> [('Alice', 'PROPN'), ('can', 'AUX'), ('sign', 'VERB'), ('a', 'DET'), ('message', 'NOUN'), ('with', 'ADP'), ('hash', 'NOUN'), ('m', 'NOUN'), ('=', 'SYM'), ('14', 'NUM'), ('as', 'SCONJ'), ('shown', 'VERB'), ('to', 'PART'), ('compute', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('3,4', 'NUM'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Alice', 'NNP'), ('can', 'MD'), ('sign', 'VB'), ('a', 'DT'), ('message', 'NN'), ('with', 'IN'), ('hash', 'NN'), ('m', 'NN'), ('=', 'SYM'), ('14', 'CD'), ('as', 'IN'), ('shown', 'VBN'), ('to', 'TO'), ('compute', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('pair', 'NN'), ('(', '-LRB-'), ('3,4', 'CD'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Alice', 'Alice'), ('can', 'can'), ('sign', 'sign'), ('a', 'a'), ('message', 'message'), ('with', 'with'), ('hash', 'hash'), ('m', 'm'), ('=', '='), ('14', '14'), ('as', 'as'), ('shown', 'show'), ('to', 'to'), ('compute', 'compute'), ('the', 'the'), ('signature', 'signature'), ('pair', 'pair'), ('(', '('), ('3,4', '3,4'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Alice', 'sign'), 'nsubj'), (('can', 'sign'), 'aux'), (('sign', 'root'), 'root'), (('a', 'message'), 'det'), (('message', 'sign'), 'obj'), (('with', 'm'), 'case'), (('hash', 'm'), 'compound'), (('m', 'message'), 'nmod'), (('=', 'sign'), 'advcl'), (('14', '='), 'obj'), (('as', 'shown'), 'mark'), (('shown', '='), 'advcl'), (('to', 'compute'), 'mark'), (('compute', 'shown'), 'xcomp'), (('the', 'pair'), 'det'), (('signature', 'pair'), 'compound'), (('pair', 'compute'), 'obj'), (('(', '3,4'), 'punct'), (('3,4', 'pair'), 'appos'), ((')', '3,4'), 'punct'), (('.', 'sign'), 'punct')]

 Named Entities are: 
>> [('Alice', 'PERSON'), ('14', 'CARDINAL')]

========================== Sentence 81 ===========================

 Any user B can verify the signature by computing confirming the validation equation as shown. 

Tokens are: 
>> ['Any', 'user', 'B', 'can', 'verify', 'the', 'signature', 'by', 'computing', 'confirming', 'the', 'validation', 'equation', 'as', 'shown', '.'] 

 UPOS tags are: 
>> [('Any', 'DET'), ('user', 'NOUN'), ('B', 'NOUN'), ('can', 'AUX'), ('verify', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('by', 'SCONJ'), ('computing', 'NOUN'), ('confirming', 'VERB'), ('the', 'DET'), ('validation', 'NOUN'), ('equation', 'NOUN'), ('as', 'SCONJ'), ('shown', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Any', 'DT'), ('user', 'NN'), ('B', 'NN'), ('can', 'MD'), ('verify', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('by', 'IN'), ('computing', 'NN'), ('confirming', 'VBG'), ('the', 'DT'), ('validation', 'NN'), ('equation', 'NN'), ('as', 'IN'), ('shown', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('Any', 'any'), ('user', 'user'), ('B', 'b'), ('can', 'can'), ('verify', 'verify'), ('the', 'the'), ('signature', 'signature'), ('by', 'by'), ('computing', 'computing'), ('confirming', 'confirm'), ('the', 'the'), ('validation', 'validation'), ('equation', 'equation'), ('as', 'as'), ('shown', 'show'), ('.', '.')] 

 Dependency tags are: 
>> [(('Any', 'B'), 'det'), (('user', 'B'), 'compound'), (('B', 'verify'), 'nsubj'), (('can', 'verify'), 'aux'), (('verify', 'root'), 'root'), (('the', 'signature'), 'det'), (('signature', 'verify'), 'obj'), (('by', 'computing'), 'case'), (('computing', 'verify'), 'obl'), (('confirming', 'verify'), 'advcl'), (('the', 'equation'), 'det'), (('validation', 'equation'), 'compound'), (('equation', 'confirming'), 'obj'), (('as', 'shown'), 'mark'), (('shown', 'confirming'), 'advcl'), (('.', 'verify'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 Schnorr Digital Signatures 

Tokens are: 
>> ['Schnorr', 'Digital', 'Signatures'] 

 UPOS tags are: 
>> [('Schnorr', 'PROPN'), ('Digital', 'ADJ'), ('Signatures', 'NOUN')] 

 XPOS tags are: 
>> [('Schnorr', 'NNP'), ('Digital', 'JJ'), ('Signatures', 'NNS')] 

 Lemmas are: 
>> [('Schnorr', 'Schnorr'), ('Digital', 'digital'), ('Signatures', 'signature')] 

 Dependency tags are: 
>> [(('Schnorr', 'Signatures'), 'compound'), (('Digital', 'Signatures'), 'amod'), (('Signatures', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 83 ===========================

 Also uses exponentiation in a finite (Galois) security based on discrete logarithms Minimizes message dependent computation multiplying a 2n-bit integer with an n-bit integer Main work can be done in idle time Have using a prime modulus p  p–1 has a prime factor q of appropriate size typically p 1024-bit and q 160-bit numbers  Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  25 As with the ElGamal digital signature scheme, the Schnorr signature scheme is based on discrete logarithms [SCHN89, SCHN91]. 

Tokens are: 
>> ['Also', 'uses', 'exponentiation', 'in', 'a', 'finite', '(', 'Galois', ')', 'security', 'based', 'on', 'discrete', 'logarithms', 'Minimizes', 'message', 'dependent', 'computation', 'multiplying', 'a', '2', 'n-', 'bit', 'integer', 'with', 'an', 'n-bit', 'integer', 'Main', 'work', 'can', 'be', 'done', 'in', 'idle', 'time', 'Have', 'using', 'a', 'prime', 'modulus', 'p', 'p–1', 'has', 'a', 'prime', 'factor', 'q', 'of', 'appropriate', 'size', 'typically', 'p', '1024', '-', 'bit', 'and', 'q', '160', '-', 'bit', 'numbers', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '25', 'As', 'with', 'the', 'ElGamal', 'digital', 'signature', 'scheme', ',', 'the', 'Schnorr', 'signature', 'scheme', 'is', 'based', 'on', 'discrete', 'logarithms', '[', 'SCHN89', ',', 'SCHN91', ']', '.'] 

 UPOS tags are: 
>> [('Also', 'ADV'), ('uses', 'VERB'), ('exponentiation', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('finite', 'NOUN'), ('(', 'PUNCT'), ('Galois', 'PROPN'), (')', 'PUNCT'), ('security', 'NOUN'), ('based', 'VERB'), ('on', 'ADP'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), ('Minimizes', 'NOUN'), ('message', 'NOUN'), ('dependent', 'ADJ'), ('computation', 'NOUN'), ('multiplying', 'VERB'), ('a', 'DET'), ('2', 'NUM'), ('n-', 'NOUN'), ('bit', 'NOUN'), ('integer', 'NOUN'), ('with', 'ADP'), ('an', 'DET'), ('n-bit', 'ADJ'), ('integer', 'NOUN'), ('Main', 'ADJ'), ('work', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('done', 'VERB'), ('in', 'ADP'), ('idle', 'ADJ'), ('time', 'NOUN'), ('Have', 'AUX'), ('using', 'VERB'), ('a', 'DET'), ('prime', 'ADJ'), ('modulus', 'NOUN'), ('p', 'NOUN'), ('p–1', 'NOUN'), ('has', 'VERB'), ('a', 'DET'), ('prime', 'ADJ'), ('factor', 'NOUN'), ('q', 'NOUN'), ('of', 'ADP'), ('appropriate', 'ADJ'), ('size', 'NOUN'), ('typically', 'ADV'), ('p', 'NOUN'), ('1024', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('and', 'CCONJ'), ('q', 'NOUN'), ('160', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('numbers', 'NOUN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('25', 'NUM'), ('As', 'ADP'), ('with', 'ADP'), ('the', 'DET'), ('ElGamal', 'PROPN'), ('digital', 'ADJ'), ('signature', 'NOUN'), ('scheme', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('Schnorr', 'PROPN'), ('signature', 'NOUN'), ('scheme', 'NOUN'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'ADP'), ('discrete', 'ADJ'), ('logarithms', 'NOUN'), ('[', 'PUNCT'), ('SCHN89', 'PROPN'), (',', 'PUNCT'), ('SCHN91', 'NUM'), (']', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Also', 'RB'), ('uses', 'VBZ'), ('exponentiation', 'NN'), ('in', 'IN'), ('a', 'DT'), ('finite', 'NN'), ('(', '-LRB-'), ('Galois', 'NNP'), (')', '-RRB-'), ('security', 'NN'), ('based', 'VBN'), ('on', 'IN'), ('discrete', 'JJ'), ('logarithms', 'NNS'), ('Minimizes', 'NNS'), ('message', 'NN'), ('dependent', 'JJ'), ('computation', 'NN'), ('multiplying', 'VBG'), ('a', 'DT'), ('2', 'CD'), ('n-', 'NN'), ('bit', 'NN'), ('integer', 'NN'), ('with', 'IN'), ('an', 'DT'), ('n-bit', 'JJ'), ('integer', 'NN'), ('Main', 'JJ'), ('work', 'NN'), ('can', 'MD'), ('be', 'VB'), ('done', 'VBN'), ('in', 'IN'), ('idle', 'JJ'), ('time', 'NN'), ('Have', 'VBP'), ('using', 'VBG'), ('a', 'DT'), ('prime', 'JJ'), ('modulus', 'NN'), ('p', 'NN'), ('p–1', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('prime', 'JJ'), ('factor', 'NN'), ('q', 'NN'), ('of', 'IN'), ('appropriate', 'JJ'), ('size', 'NN'), ('typically', 'RB'), ('p', 'NN'), ('1024', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('and', 'CC'), ('q', 'NN'), ('160', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('numbers', 'NNS'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'NNP'), ('Signature', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹#›', 'NNP'), ('25', 'CD'), ('As', 'IN'), ('with', 'IN'), ('the', 'DT'), ('ElGamal', 'NNP'), ('digital', 'JJ'), ('signature', 'NN'), ('scheme', 'NN'), (',', ','), ('the', 'DT'), ('Schnorr', 'NNP'), ('signature', 'NN'), ('scheme', 'NN'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('discrete', 'JJ'), ('logarithms', 'NNS'), ('[', '-LRB-'), ('SCHN89', 'NNP'), (',', ','), ('SCHN91', 'CD'), (']', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Also', 'also'), ('uses', 'use'), ('exponentiation', 'exponentiation'), ('in', 'in'), ('a', 'a'), ('finite', 'finite'), ('(', '('), ('Galois', 'Galois'), (')', ')'), ('security', 'security'), ('based', 'base'), ('on', 'on'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), ('Minimizes', 'minimize'), ('message', 'message'), ('dependent', 'dependent'), ('computation', 'computation'), ('multiplying', 'multiply'), ('a', 'a'), ('2', '2'), ('n-', 'n-'), ('bit', 'bit'), ('integer', 'integer'), ('with', 'with'), ('an', 'a'), ('n-bit', 'n-bit'), ('integer', 'integer'), ('Main', 'Main'), ('work', 'work'), ('can', 'can'), ('be', 'be'), ('done', 'do'), ('in', 'in'), ('idle', 'idle'), ('time', 'time'), ('Have', 'have'), ('using', 'use'), ('a', 'a'), ('prime', 'prime'), ('modulus', 'modulus'), ('p', 'p'), ('p–1', 'p–1'), ('has', 'have'), ('a', 'a'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('of', 'of'), ('appropriate', 'appropriate'), ('size', 'size'), ('typically', 'typically'), ('p', 'p'), ('1024', '1024'), ('-', '-'), ('bit', 'bit'), ('and', 'and'), ('q', 'q'), ('160', '160'), ('-', '-'), ('bit', 'bit'), ('numbers', 'number'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'Signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹#›', '‹#›'), ('25', '25'), ('As', 'as'), ('with', 'with'), ('the', 'the'), ('ElGamal', 'ElGamal'), ('digital', 'digital'), ('signature', 'signature'), ('scheme', 'scheme'), (',', ','), ('the', 'the'), ('Schnorr', 'Schnorr'), ('signature', 'signature'), ('scheme', 'scheme'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), ('[', '['), ('SCHN89', 'SCHN89'), (',', ','), ('SCHN91', 'schn91'), (']', ']'), ('.', '.')] 

 Dependency tags are: 
>> [(('Also', 'uses'), 'advmod'), (('uses', 'root'), 'root'), (('exponentiation', 'uses'), 'obj'), (('in', 'security'), 'case'), (('a', 'security'), 'det'), (('finite', 'security'), 'compound'), (('(', 'Galois'), 'punct'), (('Galois', 'security'), 'compound'), ((')', 'Galois'), 'punct'), (('security', 'uses'), 'obj'), (('based', 'security'), 'acl'), (('on', 'message'), 'case'), (('discrete', 'Minimizes'), 'amod'), (('logarithms', 'Minimizes'), 'compound'), (('Minimizes', 'message'), 'compound'), (('message', 'computation'), 'compound'), (('dependent', 'computation'), 'amod'), (('computation', 'based'), 'obl'), (('multiplying', 'computation'), 'acl'), (('a', 'integer'), 'det'), (('2', 'bit'), 'nummod'), (('n-', 'bit'), 'compound'), (('bit', 'integer'), 'compound'), (('integer', 'multiplying'), 'obj'), (('with', 'integer'), 'case'), (('an', 'integer'), 'det'), (('n-bit', 'integer'), 'amod'), (('integer', 'integer'), 'nmod'), (('Main', 'work'), 'amod'), (('work', 'done'), 'nsubj:pass'), (('can', 'done'), 'aux'), (('be', 'done'), 'aux:pass'), (('done', 'integer'), 'acl:relcl'), (('in', 'time'), 'case'), (('idle', 'time'), 'amod'), (('time', 'using'), 'obl'), (('Have', 'using'), 'aux'), (('using', 'has'), 'advcl'), (('a', 'p'), 'det'), (('prime', 'modulus'), 'amod'), (('modulus', 'p'), 'compound'), (('p', 'using'), 'obj'), (('p–1', 'has'), 'nsubj'), (('has', 'uses'), 'conj'), (('a', 'factor'), 'det'), (('prime', 'factor'), 'amod'), (('factor', 'has'), 'obj'), (('q', 'has'), 'obj'), (('of', 'size'), 'case'), (('appropriate', 'size'), 'amod'), (('size', 'q'), 'nmod'), (('typically', 'p'), 'advmod'), (('p', 'bit'), 'compound'), (('1024', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'q'), 'nmod'), (('and', 'Unit'), 'cc'), (('q', 'Unit'), 'compound'), (('160', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'numbers'), 'compound'), (('numbers', 'Unit'), 'compound'), (('Unit', 'bit'), 'conj'), (('-7', 'Institute'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'Unit'), 'appos'), (('of', 'Engineering'), 'case'), (('Engineering', 'Institute'), 'nmod'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('25', 'Institute'), 'nmod'), (('As', 'scheme'), 'case'), (('with', 'scheme'), 'case'), (('the', 'scheme'), 'det'), (('ElGamal', 'scheme'), 'compound'), (('digital', 'scheme'), 'amod'), (('signature', 'scheme'), 'compound'), (('scheme', 'based'), 'obl'), ((',', 'based'), 'punct'), (('the', 'scheme'), 'det'), (('Schnorr', 'scheme'), 'compound'), (('signature', 'scheme'), 'compound'), (('scheme', 'based'), 'nsubj:pass'), (('is', 'based'), 'aux:pass'), (('based', 'uses'), 'parataxis'), (('on', 'logarithms'), 'case'), (('discrete', 'logarithms'), 'amod'), (('logarithms', 'based'), 'obl'), (('[', 'SCHN89'), 'punct'), (('SCHN89', 'based'), 'dep'), ((',', 'SCHN91'), 'punct'), (('SCHN91', 'SCHN89'), 'conj'), ((']', 'SCHN89'), 'punct'), (('.', 'uses'), 'punct')]

 Named Entities are: 
>> [('2n-bit', 'QUANTITY'), ('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology', 'ORG'), ('25', 'CARDINAL'), ('ElGamal', 'PRODUCT'), ('Schnorr', 'PRODUCT'), ('SCHN89', 'PRODUCT')]

========================== Sentence 84 ===========================

 The Schnorr scheme minimizes the message dependent amount of computation required to generate a signature. 

Tokens are: 
>> ['The', 'Schnorr', 'scheme', 'minimizes', 'the', 'message', 'dependent', 'amount', 'of', 'computation', 'required', 'to', 'generate', 'a', 'signature', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('Schnorr', 'PROPN'), ('scheme', 'NOUN'), ('minimizes', 'VERB'), ('the', 'DET'), ('message', 'NOUN'), ('dependent', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('computation', 'NOUN'), ('required', 'VERB'), ('to', 'PART'), ('generate', 'VERB'), ('a', 'DET'), ('signature', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('Schnorr', 'NNP'), ('scheme', 'NN'), ('minimizes', 'VBZ'), ('the', 'DT'), ('message', 'NN'), ('dependent', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('computation', 'NN'), ('required', 'VBN'), ('to', 'TO'), ('generate', 'VB'), ('a', 'DT'), ('signature', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('Schnorr', 'Schnorr'), ('scheme', 'scheme'), ('minimizes', 'minimize'), ('the', 'the'), ('message', 'message'), ('dependent', 'dependent'), ('amount', 'amount'), ('of', 'of'), ('computation', 'computation'), ('required', 'require'), ('to', 'to'), ('generate', 'generate'), ('a', 'a'), ('signature', 'signature'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scheme'), 'det'), (('Schnorr', 'scheme'), 'compound'), (('scheme', 'minimizes'), 'nsubj'), (('minimizes', 'root'), 'root'), (('the', 'amount'), 'det'), (('message', 'dependent'), 'obl:npmod'), (('dependent', 'amount'), 'amod'), (('amount', 'minimizes'), 'obj'), (('of', 'computation'), 'case'), (('computation', 'amount'), 'nmod'), (('required', 'computation'), 'acl'), (('to', 'generate'), 'mark'), (('generate', 'required'), 'xcomp'), (('a', 'signature'), 'det'), (('signature', 'generate'), 'obj'), (('.', 'minimizes'), 'punct')]

 Named Entities are: 
>> [('Schnorr', 'ORG')]

========================== Sentence 85 ===========================

 The main work for signature generation does not depend on the message and can be done during the idle time of the processor. 

Tokens are: 
>> ['The', 'main', 'work', 'for', 'signature', 'generation', 'does', 'not', 'depend', 'on', 'the', 'message', 'and', 'can', 'be', 'done', 'during', 'the', 'idle', 'time', 'of', 'the', 'processor', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('main', 'ADJ'), ('work', 'NOUN'), ('for', 'ADP'), ('signature', 'NOUN'), ('generation', 'NOUN'), ('does', 'AUX'), ('not', 'PART'), ('depend', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('message', 'NOUN'), ('and', 'CCONJ'), ('can', 'AUX'), ('be', 'AUX'), ('done', 'VERB'), ('during', 'ADP'), ('the', 'DET'), ('idle', 'ADJ'), ('time', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('processor', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('main', 'JJ'), ('work', 'NN'), ('for', 'IN'), ('signature', 'NN'), ('generation', 'NN'), ('does', 'VBZ'), ('not', 'RB'), ('depend', 'VB'), ('on', 'IN'), ('the', 'DT'), ('message', 'NN'), ('and', 'CC'), ('can', 'MD'), ('be', 'VB'), ('done', 'VBN'), ('during', 'IN'), ('the', 'DT'), ('idle', 'JJ'), ('time', 'NN'), ('of', 'IN'), ('the', 'DT'), ('processor', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('main', 'main'), ('work', 'work'), ('for', 'for'), ('signature', 'signature'), ('generation', 'generation'), ('does', 'do'), ('not', 'not'), ('depend', 'depend'), ('on', 'on'), ('the', 'the'), ('message', 'message'), ('and', 'and'), ('can', 'can'), ('be', 'be'), ('done', 'do'), ('during', 'during'), ('the', 'the'), ('idle', 'idle'), ('time', 'time'), ('of', 'of'), ('the', 'the'), ('processor', 'processor'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'work'), 'det'), (('main', 'work'), 'amod'), (('work', 'depend'), 'nsubj'), (('for', 'generation'), 'case'), (('signature', 'generation'), 'compound'), (('generation', 'work'), 'nmod'), (('does', 'depend'), 'aux'), (('not', 'depend'), 'advmod'), (('depend', 'root'), 'root'), (('on', 'message'), 'case'), (('the', 'message'), 'det'), (('message', 'depend'), 'obl'), (('and', 'done'), 'cc'), (('can', 'done'), 'aux'), (('be', 'done'), 'aux:pass'), (('done', 'depend'), 'conj'), (('during', 'time'), 'case'), (('the', 'time'), 'det'), (('idle', 'time'), 'amod'), (('time', 'done'), 'obl'), (('of', 'processor'), 'case'), (('the', 'processor'), 'det'), (('processor', 'time'), 'nmod'), (('.', 'depend'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 86 ===========================

 The message dependent part of the signature generation requires multiplying a 2n-bit integer with an n-bit integer. 

Tokens are: 
>> ['The', 'message', 'dependent', 'part', 'of', 'the', 'signature', 'generation', 'requires', 'multiplying', 'a', '2', 'n-', 'bit', 'integer', 'with', 'an', 'n-bit', 'integer', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('message', 'NOUN'), ('dependent', 'ADJ'), ('part', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('signature', 'NOUN'), ('generation', 'NOUN'), ('requires', 'VERB'), ('multiplying', 'VERB'), ('a', 'DET'), ('2', 'NUM'), ('n-', 'NOUN'), ('bit', 'NOUN'), ('integer', 'NOUN'), ('with', 'ADP'), ('an', 'DET'), ('n-bit', 'ADJ'), ('integer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('message', 'NN'), ('dependent', 'JJ'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('signature', 'NN'), ('generation', 'NN'), ('requires', 'VBZ'), ('multiplying', 'VBG'), ('a', 'DT'), ('2', 'CD'), ('n-', 'NN'), ('bit', 'NN'), ('integer', 'NN'), ('with', 'IN'), ('an', 'DT'), ('n-bit', 'JJ'), ('integer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('message', 'message'), ('dependent', 'dependent'), ('part', 'part'), ('of', 'of'), ('the', 'the'), ('signature', 'signature'), ('generation', 'generation'), ('requires', 'require'), ('multiplying', 'multiply'), ('a', 'a'), ('2', '2'), ('n-', 'n-'), ('bit', 'bit'), ('integer', 'integer'), ('with', 'with'), ('an', 'a'), ('n-bit', 'n-bit'), ('integer', 'integer'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'part'), 'det'), (('message', 'part'), 'compound'), (('dependent', 'part'), 'amod'), (('part', 'requires'), 'nsubj'), (('of', 'generation'), 'case'), (('the', 'generation'), 'det'), (('signature', 'generation'), 'compound'), (('generation', 'part'), 'nmod'), (('requires', 'root'), 'root'), (('multiplying', 'requires'), 'xcomp'), (('a', 'integer'), 'det'), (('2', 'bit'), 'nummod'), (('n-', 'bit'), 'punct'), (('bit', 'integer'), 'compound'), (('integer', 'multiplying'), 'obj'), (('with', 'integer'), 'case'), (('an', 'integer'), 'det'), (('n-bit', 'integer'), 'amod'), (('integer', 'integer'), 'nmod'), (('.', 'requires'), 'punct')]

 Named Entities are: 
>> [('2n-bit', 'QUANTITY')]

========================== Sentence 87 ===========================

 The scheme is based on using a prime modulus p, with p – 1 having a prime factor q of appropriate size; that is p – 1 = 1 (mod q). 

Tokens are: 
>> ['The', 'scheme', 'is', 'based', 'on', 'using', 'a', 'prime', 'modulus', 'p', ',', 'with', 'p', '–', '1', 'having', 'a', 'prime', 'factor', 'q', 'of', 'appropriate', 'size', ';', 'that', 'is', 'p', '–', '1', '=', '1', '(', 'mod', 'q', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('scheme', 'NOUN'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'SCONJ'), ('using', 'VERB'), ('a', 'DET'), ('prime', 'ADJ'), ('modulus', 'NOUN'), ('p', 'NOUN'), (',', 'PUNCT'), ('with', 'ADP'), ('p', 'NOUN'), ('–', 'SYM'), ('1', 'NUM'), ('having', 'VERB'), ('a', 'DET'), ('prime', 'ADJ'), ('factor', 'NOUN'), ('q', 'NOUN'), ('of', 'ADP'), ('appropriate', 'ADJ'), ('size', 'NOUN'), (';', 'PUNCT'), ('that', 'PRON'), ('is', 'AUX'), ('p', 'NOUN'), ('–', 'SYM'), ('1', 'NUM'), ('=', 'SYM'), ('1', 'NUM'), ('(', 'PUNCT'), ('mod', 'NOUN'), ('q', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('scheme', 'NN'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('using', 'VBG'), ('a', 'DT'), ('prime', 'JJ'), ('modulus', 'NN'), ('p', 'NN'), (',', ','), ('with', 'IN'), ('p', 'NN'), ('–', 'SYM'), ('1', 'CD'), ('having', 'VBG'), ('a', 'DT'), ('prime', 'JJ'), ('factor', 'NN'), ('q', 'NN'), ('of', 'IN'), ('appropriate', 'JJ'), ('size', 'NN'), (';', ':'), ('that', 'DT'), ('is', 'VBZ'), ('p', 'NN'), ('–', 'SYM'), ('1', 'CD'), ('=', 'SYM'), ('1', 'CD'), ('(', '-LRB-'), ('mod', 'NN'), ('q', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('scheme', 'scheme'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('using', 'use'), ('a', 'a'), ('prime', 'prime'), ('modulus', 'modulus'), ('p', 'p'), (',', ','), ('with', 'with'), ('p', 'p'), ('–', '-'), ('1', '1'), ('having', 'have'), ('a', 'a'), ('prime', 'prime'), ('factor', 'factor'), ('q', 'q'), ('of', 'of'), ('appropriate', 'appropriate'), ('size', 'size'), (';', ';'), ('that', 'that'), ('is', 'be'), ('p', 'p'), ('–', '-'), ('1', '1'), ('=', '='), ('1', '1'), ('(', '('), ('mod', 'mod'), ('q', 'q'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'scheme'), 'det'), (('scheme', 'based'), 'nsubj:pass'), (('is', 'based'), 'aux:pass'), (('based', 'root'), 'root'), (('on', 'using'), 'mark'), (('using', 'based'), 'advcl'), (('a', 'p'), 'det'), (('prime', 'modulus'), 'amod'), (('modulus', 'p'), 'compound'), (('p', 'using'), 'obj'), ((',', 'using'), 'punct'), (('with', 'p'), 'case'), (('p', 'using'), 'obl'), (('–', '1'), 'case'), (('1', 'p'), 'nmod'), (('having', 'using'), 'advcl'), (('a', 'q'), 'det'), (('prime', 'factor'), 'amod'), (('factor', 'q'), 'compound'), (('q', 'having'), 'obj'), (('of', 'size'), 'case'), (('appropriate', 'size'), 'amod'), (('size', 'q'), 'nmod'), ((';', '='), 'punct'), (('that', '='), 'nsubj'), (('is', '='), 'cop'), (('p', '='), 'obl:npmod'), (('–', '1'), 'case'), (('1', 'p'), 'nmod'), (('=', 'based'), 'parataxis'), (('1', '='), 'obj'), (('(', 'q'), 'punct'), (('mod', 'q'), 'compound'), (('q', '='), 'appos'), ((')', 'q'), 'punct'), (('.', 'based'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL'), ('1', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 88 ===========================

 Typically, we use p approx 21024 and q approx 2160. 

Tokens are: 
>> ['Typically', ',', 'we', 'use', 'p', 'approx', '21024', 'and', 'q', 'approx', '2160', '.'] 

 UPOS tags are: 
>> [('Typically', 'ADV'), (',', 'PUNCT'), ('we', 'PRON'), ('use', 'VERB'), ('p', 'NOUN'), ('approx', 'NOUN'), ('21024', 'NUM'), ('and', 'CCONJ'), ('q', 'NOUN'), ('approx', 'NOUN'), ('2160', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Typically', 'RB'), (',', ','), ('we', 'PRP'), ('use', 'VBP'), ('p', 'NN'), ('approx', 'NN'), ('21024', 'CD'), ('and', 'CC'), ('q', 'NN'), ('approx', 'NN'), ('2160', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Typically', 'typically'), (',', ','), ('we', 'we'), ('use', 'use'), ('p', 'p'), ('approx', 'approx'), ('21024', '21024'), ('and', 'and'), ('q', 'q'), ('approx', 'approx'), ('2160', '2160'), ('.', '.')] 

 Dependency tags are: 
>> [(('Typically', 'use'), 'advmod'), ((',', 'use'), 'punct'), (('we', 'use'), 'nsubj'), (('use', 'root'), 'root'), (('p', 'approx'), 'compound'), (('approx', 'use'), 'obj'), (('21024', 'approx'), 'nummod'), (('and', 'approx'), 'cc'), (('q', 'approx'), 'compound'), (('approx', 'approx'), 'conj'), (('2160', 'approx'), 'nummod'), (('.', 'use'), 'punct')]

 Named Entities are: 
>> [('21024', 'PRODUCT'), ('2160', 'CARDINAL')]

========================== Sentence 89 ===========================

 Thus, p  is a 1024-bit number and q  is a 160-bit number, which is also the length of the SHA-1 hash value. 

Tokens are: 
>> ['Thus', ',', 'p', 'is', 'a', '1024', '-', 'bit', 'number', 'and', 'q', 'is', 'a', '160', '-', 'bit', 'number', ',', 'which', 'is', 'also', 'the', 'length', 'of', 'the', 'SHA', '-', '1', 'hash', 'value', '.'] 

 UPOS tags are: 
>> [('Thus', 'ADV'), (',', 'PUNCT'), ('p', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('1024', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('number', 'NOUN'), ('and', 'CCONJ'), ('q', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('160', 'NUM'), ('-', 'PUNCT'), ('bit', 'NOUN'), ('number', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('is', 'AUX'), ('also', 'ADV'), ('the', 'DET'), ('length', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('SHA', 'NOUN'), ('-', 'PUNCT'), ('1', 'NUM'), ('hash', 'NOUN'), ('value', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Thus', 'RB'), (',', ','), ('p', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('1024', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('number', 'NN'), ('and', 'CC'), ('q', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('160', 'CD'), ('-', 'HYPH'), ('bit', 'NN'), ('number', 'NN'), (',', ','), ('which', 'WDT'), ('is', 'VBZ'), ('also', 'RB'), ('the', 'DT'), ('length', 'NN'), ('of', 'IN'), ('the', 'DT'), ('SHA', 'NN'), ('-', 'HYPH'), ('1', 'CD'), ('hash', 'NN'), ('value', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Thus', 'thus'), (',', ','), ('p', 'p'), ('is', 'be'), ('a', 'a'), ('1024', '1024'), ('-', '-'), ('bit', 'bit'), ('number', 'number'), ('and', 'and'), ('q', 'q'), ('is', 'be'), ('a', 'a'), ('160', '160'), ('-', '-'), ('bit', 'bit'), ('number', 'number'), (',', ','), ('which', 'which'), ('is', 'be'), ('also', 'also'), ('the', 'the'), ('length', 'length'), ('of', 'of'), ('the', 'the'), ('SHA', 'sha'), ('-', '-'), ('1', '1'), ('hash', 'hash'), ('value', 'value'), ('.', '.')] 

 Dependency tags are: 
>> [(('Thus', 'number'), 'advmod'), ((',', 'number'), 'punct'), (('p', 'number'), 'nsubj'), (('is', 'number'), 'cop'), (('a', 'number'), 'det'), (('1024', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'number'), 'compound'), (('number', 'root'), 'root'), (('and', 'number'), 'cc'), (('q', 'number'), 'nsubj'), (('is', 'number'), 'cop'), (('a', 'number'), 'det'), (('160', 'bit'), 'nummod'), (('-', 'bit'), 'punct'), (('bit', 'number'), 'compound'), (('number', 'number'), 'conj'), ((',', 'number'), 'punct'), (('which', 'length'), 'nsubj'), (('is', 'length'), 'cop'), (('also', 'length'), 'advmod'), (('the', 'length'), 'det'), (('length', 'number'), 'acl:relcl'), (('of', 'value'), 'case'), (('the', 'value'), 'det'), (('SHA', 'value'), 'compound'), (('-', '1'), 'punct'), (('1', 'SHA'), 'nummod'), (('hash', 'value'), 'compound'), (('value', 'length'), 'nmod'), (('.', 'number'), 'punct')]

 Named Entities are: 
>> [('1024', 'CARDINAL'), ('160-bit', 'QUANTITY')]

========================== Sentence 90 ===========================

 Schnorr Key Setup choose suitable primes p , q choose a  such that aq = 1 mod p (a,p,q) are global parameters for all each user (e.g.---.- 

Tokens are: 
>> ['Schnorr', 'Key', 'Setup', 'choose', 'suitable', 'primes', 'p', ',', 'q', 'choose', 'a', 'such', 'that', 'aq', '=', '1', 'mod', 'p', '(', 'a', ',', 'p', ',', 'q', ')', 'are', 'global', 'parameters', 'for', 'all', 'each', 'user', '(', 'e.g.---.-'] 

 UPOS tags are: 
>> [('Schnorr', 'PROPN'), ('Key', 'ADJ'), ('Setup', 'PROPN'), ('choose', 'VERB'), ('suitable', 'ADJ'), ('primes', 'NOUN'), ('p', 'NOUN'), (',', 'PUNCT'), ('q', 'PART'), ('choose', 'VERB'), ('a', 'DET'), ('such', 'ADJ'), ('that', 'SCONJ'), ('aq', 'NOUN'), ('=', 'SYM'), ('1', 'NUM'), ('mod', 'NOUN'), ('p', 'NOUN'), ('(', 'PUNCT'), ('a', 'NOUN'), (',', 'PUNCT'), ('p', 'NOUN'), (',', 'PUNCT'), ('q', 'NOUN'), (')', 'PUNCT'), ('are', 'AUX'), ('global', 'ADJ'), ('parameters', 'NOUN'), ('for', 'ADP'), ('all', 'PRON'), ('each', 'DET'), ('user', 'NOUN'), ('(', 'PUNCT'), ('e.g.---.-', 'PUNCT')] 

 XPOS tags are: 
>> [('Schnorr', 'NNP'), ('Key', 'NNP'), ('Setup', 'NNP'), ('choose', 'VBP'), ('suitable', 'JJ'), ('primes', 'NNS'), ('p', 'NN'), (',', ','), ('q', 'TO'), ('choose', 'VB'), ('a', 'DT'), ('such', 'JJ'), ('that', 'IN'), ('aq', 'NN'), ('=', 'SYM'), ('1', 'CD'), ('mod', 'NN'), ('p', 'NN'), ('(', '-LRB-'), ('a', 'NN'), (',', ','), ('p', 'NN'), (',', ','), ('q', 'NN'), (')', '-RRB-'), ('are', 'VBP'), ('global', 'JJ'), ('parameters', 'NNS'), ('for', 'IN'), ('all', 'PDT'), ('each', 'DT'), ('user', 'NN'), ('(', '-LRB-'), ('e.g.---.-', '.')] 

 Lemmas are: 
>> [('Schnorr', 'Schnorr'), ('Key', 'key'), ('Setup', 'Setup'), ('choose', 'choose'), ('suitable', 'suitable'), ('primes', 'prime'), ('p', 'p'), (',', ','), ('q', 'to'), ('choose', 'choose'), ('a', 'a'), ('such', 'such'), ('that', 'that'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p', 'p'), ('(', '('), ('a', 'a'), (',', ','), ('p', 'p'), (',', ','), ('q', 'q'), (')', ')'), ('are', 'be'), ('global', 'global'), ('parameters', 'parameter'), ('for', 'for'), ('all', 'all'), ('each', 'each'), ('user', 'user'), ('(', '('), ('e.g.---.-', 'e.g.---.-')] 

 Dependency tags are: 
>> [(('Schnorr', 'Setup'), 'compound'), (('Key', 'Setup'), 'amod'), (('Setup', 'choose'), 'nsubj'), (('choose', 'root'), 'root'), (('suitable', 'primes'), 'amod'), (('primes', 'choose'), 'obj'), (('p', 'choose'), 'obj'), ((',', 'choose'), 'punct'), (('q', 'choose'), 'mark'), (('choose', 'choose'), 'advcl'), (('a', 'such'), 'det'), (('such', 'choose'), 'obj'), (('that', '='), 'mark'), (('aq', '='), 'nsubj'), (('=', 'such'), 'acl'), (('1', 'p'), 'nummod'), (('mod', 'p'), 'compound'), (('p', '='), 'obj'), (('(', 'a'), 'punct'), (('a', 'parameters'), 'nsubj'), ((',', 'p'), 'punct'), (('p', 'a'), 'conj'), ((',', 'q'), 'punct'), (('q', 'a'), 'conj'), ((')', 'a'), 'punct'), (('are', 'parameters'), 'cop'), (('global', 'parameters'), 'amod'), (('parameters', 'choose'), 'parataxis'), (('for', 'user'), 'case'), (('all', 'user'), 'det:predet'), (('each', 'user'), 'det'), (('user', 'parameters'), 'nmod'), (('(', 'user'), 'punct'), (('e.g.---.-', 'choose'), 'punct')]

 Named Entities are: 
>> [('Schnorr Key Setup', 'ORG')]

========================== Sentence 91 ===========================

 A) generates a key chooses a secret key (number): 

Tokens are: 
>> ['A', ')', 'generates', 'a', 'key', 'chooses', 'a', 'secret', 'key', '(', 'number', ')', ':'] 

 UPOS tags are: 
>> [('A', 'NUM'), (')', 'PUNCT'), ('generates', 'VERB'), ('a', 'DET'), ('key', 'NOUN'), ('chooses', 'VERB'), ('a', 'DET'), ('secret', 'ADJ'), ('key', 'NOUN'), ('(', 'PUNCT'), ('number', 'NOUN'), (')', 'PUNCT'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('A', 'LS'), (')', '-RRB-'), ('generates', 'VBZ'), ('a', 'DT'), ('key', 'NN'), ('chooses', 'VBZ'), ('a', 'DT'), ('secret', 'JJ'), ('key', 'NN'), ('(', '-LRB-'), ('number', 'NN'), (')', '-RRB-'), (':', ':')] 

 Lemmas are: 
>> [('A', 'a'), (')', ')'), ('generates', 'generate'), ('a', 'a'), ('key', 'key'), ('chooses', 'choose'), ('a', 'a'), ('secret', 'secret'), ('key', 'key'), ('(', '('), ('number', 'number'), (')', ')'), (':', ':')] 

 Dependency tags are: 
>> [(('A', 'generates'), 'nummod'), ((')', 'A'), 'punct'), (('generates', 'root'), 'root'), (('a', 'key'), 'det'), (('key', 'chooses'), 'nsubj'), (('chooses', 'generates'), 'ccomp'), (('a', 'key'), 'det'), (('secret', 'key'), 'amod'), (('key', 'chooses'), 'obj'), (('(', 'number'), 'punct'), (('number', 'key'), 'appos'), ((')', 'number'), 'punct'), ((':', 'generates'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 92 ===========================

 0 < sA < q  compute their public key: vA = a-s 

Tokens are: 
>> ['0', '<', 'sA', '<', 'q', 'compute', 'their', 'public', 'key', ':', 'vA', '=', 'a-s'] 

 UPOS tags are: 
>> [('0', 'NUM'), ('<', 'PUNCT'), ('sA', 'NOUN'), ('<', 'PUNCT'), ('q', 'NOUN'), ('compute', 'VERB'), ('their', 'PRON'), ('public', 'ADJ'), ('key', 'NOUN'), (':', 'PUNCT'), ('vA', 'PROPN'), ('=', 'SYM'), ('a-s', 'X')] 

 XPOS tags are: 
>> [('0', 'LS'), ('<', '-LRB-'), ('sA', 'NN'), ('<', '-LRB-'), ('q', 'NN'), ('compute', 'VB'), ('their', 'PRP$'), ('public', 'JJ'), ('key', 'NN'), (':', ':'), ('vA', 'NNP'), ('=', 'SYM'), ('a-s', 'ADD')] 

 Lemmas are: 
>> [('0', '0'), ('<', '<'), ('sA', 'sa'), ('<', '<'), ('q', 'q'), ('compute', 'compute'), ('their', 'they'), ('public', 'public'), ('key', 'key'), (':', ':'), ('vA', 'vA'), ('=', '='), ('a-s', 'a-s')] 

 Dependency tags are: 
>> [(('0', 'sA'), 'nummod'), (('<', 'sA'), 'punct'), (('sA', 'root'), 'root'), (('<', 'q'), 'punct'), (('q', 'sA'), 'appos'), (('compute', 'q'), 'punct'), (('their', 'key'), 'nmod:poss'), (('public', 'key'), 'amod'), (('key', 'compute'), 'obj'), ((':', 'sA'), 'punct'), (('vA', '='), 'nsubj'), (('=', 'sA'), 'parataxis'), (('a-s', '='), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 93 ===========================

 A mod q   Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  26 

Tokens are: 
>> ['A', 'mod', 'q', 'Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '26'] 

 UPOS tags are: 
>> [('A', 'DET'), ('mod', 'NOUN'), ('q', 'NOUN'), ('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'PROPN'), ('26', 'NUM')] 

 XPOS tags are: 
>> [('A', 'DT'), ('mod', 'NN'), ('q', 'NN'), ('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NNP'), ('26', 'CD')] 

 Lemmas are: 
>> [('A', 'a'), ('mod', 'mod'), ('q', 'q'), ('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('26', '26')] 

 Dependency tags are: 
>> [(('A', 'Unit'), 'det'), (('mod', 'Unit'), 'compound'), (('q', 'Unit'), 'compound'), (('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'root'), 'root'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('26', '‹#›'), 'nummod')]

 Named Entities are: 
>> [('26', 'CARDINAL')]

========================== Sentence 94 ===========================

 The first part of this scheme is the generation of a private/public key pair, which consists of the following steps: 

Tokens are: 
>> ['The', 'first', 'part', 'of', 'this', 'scheme', 'is', 'the', 'generation', 'of', 'a', 'private', '/', 'public', 'key', 'pair', ',', 'which', 'consists', 'of', 'the', 'following', 'steps', ':'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('part', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('scheme', 'NOUN'), ('is', 'AUX'), ('the', 'DET'), ('generation', 'NOUN'), ('of', 'ADP'), ('a', 'DET'), ('private', 'ADJ'), ('/', 'SYM'), ('public', 'ADJ'), ('key', 'ADJ'), ('pair', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('consists', 'VERB'), ('of', 'ADP'), ('the', 'DET'), ('following', 'VERB'), ('steps', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('part', 'NN'), ('of', 'IN'), ('this', 'DT'), ('scheme', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('generation', 'NN'), ('of', 'IN'), ('a', 'DT'), ('private', 'JJ'), ('/', ','), ('public', 'JJ'), ('key', 'JJ'), ('pair', 'NN'), (',', ','), ('which', 'WDT'), ('consists', 'VBZ'), ('of', 'IN'), ('the', 'DT'), ('following', 'VBG'), ('steps', 'NNS'), (':', ':')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('part', 'part'), ('of', 'of'), ('this', 'this'), ('scheme', 'scheme'), ('is', 'be'), ('the', 'the'), ('generation', 'generation'), ('of', 'of'), ('a', 'a'), ('private', 'private'), ('/', '/'), ('public', 'public'), ('key', 'key'), ('pair', 'pair'), (',', ','), ('which', 'which'), ('consists', 'consist'), ('of', 'of'), ('the', 'the'), ('following', 'follow'), ('steps', 'step'), (':', ':')] 

 Dependency tags are: 
>> [(('The', 'part'), 'det'), (('first', 'part'), 'amod'), (('part', 'generation'), 'nsubj'), (('of', 'scheme'), 'case'), (('this', 'scheme'), 'det'), (('scheme', 'part'), 'nmod'), (('is', 'generation'), 'cop'), (('the', 'generation'), 'det'), (('generation', 'root'), 'root'), (('of', 'pair'), 'case'), (('a', 'pair'), 'det'), (('private', 'pair'), 'amod'), (('/', 'public'), 'cc'), (('public', 'pair'), 'amod'), (('key', 'pair'), 'amod'), (('pair', 'generation'), 'nmod'), ((',', 'pair'), 'punct'), (('which', 'consists'), 'nsubj'), (('consists', 'pair'), 'acl:relcl'), (('of', 'steps'), 'case'), (('the', 'steps'), 'det'), (('following', 'steps'), 'amod'), (('steps', 'consists'), 'obl'), ((':', 'generation'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL')]

========================== Sentence 95 ===========================

 Choose primes p and q, such that q is a prime factor of p – 1. 

Tokens are: 
>> ['Choose', 'primes', 'p', 'and', 'q', ',', 'such', 'that', 'q', 'is', 'a', 'prime', 'factor', 'of', 'p', '–', '1', '.'] 

 UPOS tags are: 
>> [('Choose', 'VERB'), ('primes', 'NOUN'), ('p', 'NOUN'), ('and', 'CCONJ'), ('q', 'NOUN'), (',', 'PUNCT'), ('such', 'ADJ'), ('that', 'SCONJ'), ('q', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('prime', 'ADJ'), ('factor', 'NOUN'), ('of', 'ADP'), ('p', 'NOUN'), ('–', 'SYM'), ('1', 'NUM'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Choose', 'VB'), ('primes', 'NNS'), ('p', 'NN'), ('and', 'CC'), ('q', 'NN'), (',', ','), ('such', 'JJ'), ('that', 'IN'), ('q', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('prime', 'JJ'), ('factor', 'NN'), ('of', 'IN'), ('p', 'NN'), ('–', 'SYM'), ('1', 'CD'), ('.', '.')] 

 Lemmas are: 
>> [('Choose', 'choose'), ('primes', 'prime'), ('p', 'p'), ('and', 'and'), ('q', 'q'), (',', ','), ('such', 'such'), ('that', 'that'), ('q', 'q'), ('is', 'be'), ('a', 'a'), ('prime', 'prime'), ('factor', 'factor'), ('of', 'of'), ('p', 'p'), ('–', '-'), ('1', '1'), ('.', '.')] 

 Dependency tags are: 
>> [(('Choose', 'root'), 'root'), (('primes', 'Choose'), 'obj'), (('p', 'Choose'), 'obj'), (('and', 'q'), 'cc'), (('q', 'p'), 'conj'), ((',', 'factor'), 'punct'), (('such', 'factor'), 'mark'), (('that', 'such'), 'fixed'), (('q', 'factor'), 'nsubj'), (('is', 'factor'), 'cop'), (('a', 'factor'), 'det'), (('prime', 'factor'), 'amod'), (('factor', 'Choose'), 'advcl'), (('of', 'p'), 'case'), (('p', 'factor'), 'nmod'), (('–', '1'), 'case'), (('1', 'p'), 'nmod'), (('.', 'Choose'), 'punct')]

 Named Entities are: 
>> [('1', 'CARDINAL')]

========================== Sentence 96 ===========================

 Choose an integer a such that aq = 1 mod p. 

Tokens are: 
>> ['Choose', 'an', 'integer', 'a', 'such', 'that', 'aq', '=', '1', 'mod', 'p.'] 

 UPOS tags are: 
>> [('Choose', 'VERB'), ('an', 'DET'), ('integer', 'NOUN'), ('a', 'DET'), ('such', 'ADJ'), ('that', 'PRON'), ('aq', 'NOUN'), ('=', 'SYM'), ('1', 'NUM'), ('mod', 'NOUN'), ('p.', 'NOUN')] 

 XPOS tags are: 
>> [('Choose', 'VB'), ('an', 'DT'), ('integer', 'NN'), ('a', 'DT'), ('such', 'JJ'), ('that', 'WDT'), ('aq', 'NN'), ('=', 'SYM'), ('1', 'CD'), ('mod', 'NN'), ('p.', 'NN')] 

 Lemmas are: 
>> [('Choose', 'choose'), ('an', 'a'), ('integer', 'integer'), ('a', 'a'), ('such', 'such'), ('that', 'that'), ('aq', 'aq'), ('=', '='), ('1', '1'), ('mod', 'mod'), ('p.', 'P.')] 

 Dependency tags are: 
>> [(('Choose', 'root'), 'root'), (('an', 'integer'), 'det'), (('integer', 'Choose'), 'obj'), (('a', 'integer'), 'det'), (('such', '='), 'mark'), (('that', '='), 'mark'), (('aq', '='), 'nsubj'), (('=', 'integer'), 'acl:relcl'), (('1', 'mod'), 'nummod'), (('mod', 'p.'), 'compound'), (('p.', '='), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 97 ===========================

 The values a, p, and q comprise a global public key that can be common to a group of users. 

Tokens are: 
>> ['The', 'values', 'a', ',', 'p', ',', 'and', 'q', 'comprise', 'a', 'global', 'public', 'key', 'that', 'can', 'be', 'common', 'to', 'a', 'group', 'of', 'users', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('values', 'NOUN'), ('a', 'DET'), (',', 'PUNCT'), ('p', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('q', 'NOUN'), ('comprise', 'VERB'), ('a', 'DET'), ('global', 'ADJ'), ('public', 'ADJ'), ('key', 'NOUN'), ('that', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('common', 'ADJ'), ('to', 'ADP'), ('a', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('users', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('values', 'NNS'), ('a', 'DT'), (',', ','), ('p', 'NN'), (',', ','), ('and', 'CC'), ('q', 'NN'), ('comprise', 'VBP'), ('a', 'DT'), ('global', 'JJ'), ('public', 'JJ'), ('key', 'NN'), ('that', 'WDT'), ('can', 'MD'), ('be', 'VB'), ('common', 'JJ'), ('to', 'IN'), ('a', 'DT'), ('group', 'NN'), ('of', 'IN'), ('users', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('values', 'value'), ('a', 'a'), (',', ','), ('p', 'p'), (',', ','), ('and', 'and'), ('q', 'q'), ('comprise', 'comprise'), ('a', 'a'), ('global', 'global'), ('public', 'public'), ('key', 'key'), ('that', 'that'), ('can', 'can'), ('be', 'be'), ('common', 'common'), ('to', 'to'), ('a', 'a'), ('group', 'group'), ('of', 'of'), ('users', 'user'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'values'), 'det'), (('values', 'comprise'), 'nsubj'), (('a', 'values'), 'det'), ((',', 'p'), 'punct'), (('p', 'values'), 'appos'), ((',', 'q'), 'punct'), (('and', 'q'), 'cc'), (('q', 'a'), 'conj'), (('comprise', 'root'), 'root'), (('a', 'key'), 'det'), (('global', 'key'), 'amod'), (('public', 'key'), 'amod'), (('key', 'comprise'), 'obj'), (('that', 'common'), 'nsubj'), (('can', 'common'), 'aux'), (('be', 'common'), 'cop'), (('common', 'key'), 'acl:relcl'), (('to', 'group'), 'case'), (('a', 'group'), 'det'), (('group', 'common'), 'obl'), (('of', 'users'), 'case'), (('users', 'group'), 'nmod'), (('.', 'comprise'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 98 ===========================

 Choose a random integer s with 0 < s < q. 

Tokens are: 
>> ['Choose', 'a', 'random', 'integer', 's', 'with', '0', '<', 's', '<', 'q.'] 

 UPOS tags are: 
>> [('Choose', 'VERB'), ('a', 'DET'), ('random', 'ADJ'), ('integer', 'NOUN'), ('s', 'PART'), ('with', 'ADP'), ('0', 'NUM'), ('<', 'PUNCT'), ('s', 'NOUN'), ('<', 'PUNCT'), ('q.', 'NOUN')] 

 XPOS tags are: 
>> [('Choose', 'VB'), ('a', 'DT'), ('random', 'JJ'), ('integer', 'NN'), ('s', 'POS'), ('with', 'IN'), ('0', 'CD'), ('<', '-LRB-'), ('s', 'NN'), ('<', '-LRB-'), ('q.', 'NN')] 

 Lemmas are: 
>> [('Choose', 'choose'), ('a', 'a'), ('random', 'random'), ('integer', 'integer'), ('s', "'s"), ('with', 'with'), ('0', '0'), ('<', '<'), ('s', 's'), ('<', '<'), ('q.', 'P.')] 

 Dependency tags are: 
>> [(('Choose', 'root'), 'root'), (('a', 'integer'), 'det'), (('random', 'integer'), 'amod'), (('integer', 'Choose'), 'obj'), (('s', 'integer'), 'case'), (('with', 's'), 'case'), (('0', 's'), 'nummod'), (('<', 's'), 'punct'), (('s', 'Choose'), 'obl'), (('<', 'q.'), 'punct'), (('q.', 's'), 'nmod')]

 Named Entities are: 
>> [('0', 'CARDINAL')]

========================== Sentence 99 ===========================

 This is the user's private key. 

Tokens are: 
>> ['This', 'is', 'the', 'user', "'s", 'private', 'key', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('user', 'NOUN'), ("'s", 'PART'), ('private', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('user', 'NN'), ("'s", 'POS'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('the', 'the'), ('user', 'user'), ("'s", "'s"), ('private', 'private'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'key'), 'nsubj'), (('is', 'key'), 'cop'), (('the', 'user'), 'det'), (('user', 'key'), 'nmod:poss'), (("'s", 'user'), 'case'), (('private', 'key'), 'amod'), (('key', 'root'), 'root'), (('.', 'key'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 100 ===========================

 Calculate v = a–s mod p. 

Tokens are: 
>> ['Calculate', 'v', '=', 'a–s', 'mod', 'p.'] 

 UPOS tags are: 
>> [('Calculate', 'VERB'), ('v', 'NOUN'), ('=', 'SYM'), ('a–s', 'NOUN'), ('mod', 'NOUN'), ('p.', 'NOUN')] 

 XPOS tags are: 
>> [('Calculate', 'VB'), ('v', 'NN'), ('=', 'SYM'), ('a–s', 'NN'), ('mod', 'NN'), ('p.', 'NN')] 

 Lemmas are: 
>> [('Calculate', 'calculate'), ('v', 'v'), ('=', '='), ('a–s', 'a–s'), ('mod', 'mod'), ('p.', 'P.')] 

 Dependency tags are: 
>> [(('Calculate', 'root'), 'root'), (('v', 'Calculate'), 'obj'), (('=', 'Calculate'), 'xcomp'), (('a–s', 'p.'), 'case'), (('mod', 'p.'), 'compound'), (('p.', '='), 'obj')]

 Named Entities are: 
>> []

========================== Sentence 101 ===========================

 This is the user's public key. 

Tokens are: 
>> ['This', 'is', 'the', 'user', "'s", 'public', 'key', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('user', 'NOUN'), ("'s", 'PART'), ('public', 'ADJ'), ('key', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('user', 'NN'), ("'s", 'POS'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('the', 'the'), ('user', 'user'), ("'s", "'s"), ('public', 'public'), ('key', 'key'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'key'), 'nsubj'), (('is', 'key'), 'cop'), (('the', 'user'), 'det'), (('user', 'key'), 'nmod:poss'), (("'s", 'user'), 'case'), (('public', 'key'), 'amod'), (('key', 'root'), 'root'), (('.', 'key'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 102 ===========================

 Schnorr Signature 

Tokens are: 
>> ['Schnorr', 'Signature'] 

 UPOS tags are: 
>> [('Schnorr', 'PROPN'), ('Signature', 'PROPN')] 

 XPOS tags are: 
>> [('Schnorr', 'NNP'), ('Signature', 'NNP')] 

 Lemmas are: 
>> [('Schnorr', 'Schnorr'), ('Signature', 'Signature')] 

 Dependency tags are: 
>> [(('Schnorr', 'Signature'), 'compound'), (('Signature', 'root'), 'root')]

 Named Entities are: 
>> [('Schnorr Signature', 'PERSON')]

========================== Sentence 103 ===========================

 User signs message by choosing random r with 0<r<q and computing x = ar mod p concatenate message with x and hash result to computing: e = H(M || x)    computing: y = (r + se) mod q  signature is pair (e, y) 

Tokens are: 
>> ['User', 'signs', 'message', 'by', 'choosing', 'random', 'r', 'with', '0', '<', 'r<q', 'and', 'computing', 'x', '=', 'ar', 'mod', 'p', 'concatenate', 'message', 'with', 'x', 'and', 'hash', 'result', 'to', 'computing', ':', 'e', '=', 'H', '(', 'M', '||', 'x', ')', 'computing', ':', 'y', '=', '(', 'r', '+', 'se', ')', 'mod', 'q', 'signature', 'is', 'pair', '(', 'e', ',', 'y', ')'] 

 UPOS tags are: 
>> [('User', 'NOUN'), ('signs', 'NOUN'), ('message', 'NOUN'), ('by', 'SCONJ'), ('choosing', 'VERB'), ('random', 'ADJ'), ('r', 'NOUN'), ('with', 'ADP'), ('0', 'NUM'), ('<', 'PUNCT'), ('r<q', 'NOUN'), ('and', 'CCONJ'), ('computing', 'NOUN'), ('x', 'NOUN'), ('=', 'SYM'), ('ar', 'NOUN'), ('mod', 'NOUN'), ('p', 'NOUN'), ('concatenate', 'NOUN'), ('message', 'NOUN'), ('with', 'ADP'), ('x', 'NOUN'), ('and', 'CCONJ'), ('hash', 'NOUN'), ('result', 'NOUN'), ('to', 'ADP'), ('computing', 'NOUN'), (':', 'PUNCT'), ('e', 'NOUN'), ('=', 'SYM'), ('H', 'NOUN'), ('(', 'PUNCT'), ('M', 'NOUN'), ('||', 'SYM'), ('x', 'NOUN'), (')', 'PUNCT'), ('computing', 'NOUN'), (':', 'PUNCT'), ('y', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), ('r', 'NOUN'), ('+', 'SYM'), ('se', 'NOUN'), (')', 'PUNCT'), ('mod', 'NOUN'), ('q', 'NOUN'), ('signature', 'NOUN'), ('is', 'AUX'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('e', 'NOUN'), (',', 'PUNCT'), ('y', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('User', 'NN'), ('signs', 'NNS'), ('message', 'NN'), ('by', 'IN'), ('choosing', 'VBG'), ('random', 'JJ'), ('r', 'NN'), ('with', 'IN'), ('0', 'CD'), ('<', '-LRB-'), ('r<q', 'NN'), ('and', 'CC'), ('computing', 'NN'), ('x', 'NN'), ('=', 'SYM'), ('ar', 'NN'), ('mod', 'NN'), ('p', 'NN'), ('concatenate', 'NN'), ('message', 'NN'), ('with', 'IN'), ('x', 'NN'), ('and', 'CC'), ('hash', 'NN'), ('result', 'NN'), ('to', 'IN'), ('computing', 'NN'), (':', ':'), ('e', 'NN'), ('=', 'SYM'), ('H', 'NN'), ('(', '-LRB-'), ('M', 'NN'), ('||', 'SYM'), ('x', 'NN'), (')', '-RRB-'), ('computing', 'NN'), (':', ':'), ('y', 'NN'), ('=', 'SYM'), ('(', '-LRB-'), ('r', 'NN'), ('+', 'SYM'), ('se', 'NN'), (')', '-RRB-'), ('mod', 'NN'), ('q', 'NN'), ('signature', 'NN'), ('is', 'VBZ'), ('pair', 'NN'), ('(', '-LRB-'), ('e', 'NN'), (',', ','), ('y', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('User', 'user'), ('signs', 'sign'), ('message', 'message'), ('by', 'by'), ('choosing', 'choose'), ('random', 'random'), ('r', 'be'), ('with', 'with'), ('0', '0'), ('<', '<'), ('r<q', 'r<q'), ('and', 'and'), ('computing', 'computing'), ('x', 'x'), ('=', '='), ('ar', 'be'), ('mod', 'mod'), ('p', 'p'), ('concatenate', 'concatenate'), ('message', 'message'), ('with', 'with'), ('x', 'x'), ('and', 'and'), ('hash', 'hash'), ('result', 'result'), ('to', 'to'), ('computing', 'computing'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), (')', ')'), ('computing', 'computing'), (':', ':'), ('y', 'y'), ('=', '='), ('(', '('), ('r', 'be'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q', 'q'), ('signature', 'signature'), ('is', 'be'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), ('y', 'y'), (')', ')')] 

 Dependency tags are: 
>> [(('User', 'signs'), 'compound'), (('signs', 'message'), 'compound'), (('message', 'root'), 'root'), (('by', 'choosing'), 'mark'), (('choosing', 'message'), 'acl'), (('random', 'r'), 'amod'), (('r', 'choosing'), 'obj'), (('with', 'x'), 'case'), (('0', 'x'), 'nummod'), (('<', 'r<q'), 'punct'), (('r<q', 'x'), 'compound'), (('and', 'computing'), 'cc'), (('computing', 'r<q'), 'conj'), (('x', '='), 'nsubj'), (('=', 'message'), 'parataxis'), (('ar', 'message'), 'cop'), (('mod', 'message'), 'compound'), (('p', 'message'), 'compound'), (('concatenate', 'message'), 'compound'), (('message', '='), 'obj'), (('with', 'result'), 'case'), (('x', 'result'), 'compound'), (('and', 'hash'), 'cc'), (('hash', 'x'), 'conj'), (('result', 'message'), 'nmod'), (('to', 'computing'), 'case'), (('computing', 'result'), 'nmod'), ((':', '='), 'punct'), (('e', '='), 'nsubj'), (('=', '='), 'parataxis'), (('H', '='), 'obj'), (('(', 'M'), 'punct'), (('M', 'computing'), 'compound'), (('||', 'x'), 'cc'), (('x', 'M'), 'nmod'), ((')', 'x'), 'punct'), (('computing', '='), 'obj'), ((':', 'computing'), 'punct'), (('y', '='), 'nsubj'), (('=', 'computing'), 'parataxis'), (('(', 'se'), 'punct'), (('r', 'se'), 'cop'), (('+', 'se'), 'advmod'), (('se', '='), 'parataxis'), ((')', 'se'), 'punct'), (('mod', 'signature'), 'compound'), (('q', 'signature'), 'compound'), (('signature', 'pair'), 'nsubj'), (('is', 'pair'), 'cop'), (('pair', '='), 'parataxis'), (('(', 'e'), 'punct'), (('e', 'pair'), 'appos'), ((',', 'e'), 'punct'), (('y', 'e'), 'appos'), ((')', 'e'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 104 ===========================

 Any other user can verify the signature as follows:    computing: x' = ayve mod p    verifying that: e = H(M || x’) 

Tokens are: 
>> ['Any', 'other', 'user', 'can', 'verify', 'the', 'signature', 'as', 'follows', ':', 'computing', ':', "x'", '=', 'ayve', 'mod', 'p', 'verifying', 'that', ':', 'e', '=', 'H', '(', 'M', '||', 'x', '’)'] 

 UPOS tags are: 
>> [('Any', 'DET'), ('other', 'ADJ'), ('user', 'NOUN'), ('can', 'AUX'), ('verify', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('as', 'SCONJ'), ('follows', 'VERB'), (':', 'PUNCT'), ('computing', 'NOUN'), (':', 'PUNCT'), ("x'", 'NOUN'), ('=', 'PUNCT'), ('ayve', 'NOUN'), ('mod', 'NOUN'), ('p', 'NOUN'), ('verifying', 'VERB'), ('that', 'PRON'), (':', 'PUNCT'), ('e', 'NOUN'), ('=', 'SYM'), ('H', 'NOUN'), ('(', 'PUNCT'), ('M', 'NOUN'), ('||', 'SYM'), ('x', 'SYM'), ('’)', 'PUNCT')] 

 XPOS tags are: 
>> [('Any', 'DT'), ('other', 'JJ'), ('user', 'NN'), ('can', 'MD'), ('verify', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('as', 'IN'), ('follows', 'VBZ'), (':', ':'), ('computing', 'NN'), (':', ':'), ("x'", 'NN'), ('=', ','), ('ayve', 'NN'), ('mod', 'NN'), ('p', 'NN'), ('verifying', 'VBG'), ('that', 'WDT'), (':', ':'), ('e', 'NN'), ('=', 'SYM'), ('H', 'NN'), ('(', '-LRB-'), ('M', 'NN'), ('||', 'SYM'), ('x', 'SYM'), ('’)', "''")] 

 Lemmas are: 
>> [('Any', 'any'), ('other', 'other'), ('user', 'user'), ('can', 'can'), ('verify', 'verify'), ('the', 'the'), ('signature', 'signature'), ('as', 'as'), ('follows', 'follow'), (':', ':'), ('computing', 'computing'), (':', ':'), ("x'", "x'"), ('=', '='), ('ayve', 'ayve'), ('mod', 'mod'), ('p', 'p'), ('verifying', 'verify'), ('that', 'that'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), ('’)', '’)')] 

 Dependency tags are: 
>> [(('Any', 'user'), 'det'), (('other', 'user'), 'amod'), (('user', 'verify'), 'nsubj'), (('can', 'verify'), 'aux'), (('verify', 'root'), 'root'), (('the', 'signature'), 'det'), (('signature', 'verify'), 'obj'), (('as', 'follows'), 'mark'), (('follows', 'verify'), 'advcl'), ((':', 'computing'), 'punct'), (('computing', 'verify'), 'parataxis'), ((':', 'computing'), 'punct'), (("x'", 'computing'), 'appos'), (('=', 'computing'), 'punct'), (('ayve', 'p'), 'det'), (('mod', 'p'), 'compound'), (('p', 'computing'), 'appos'), (('verifying', 'p'), 'acl'), (('that', 'verifying'), 'obj'), ((':', '='), 'punct'), (('e', '='), 'nsubj'), (('=', 'verifying'), 'ccomp'), (('H', '='), 'obj'), (('(', 'M'), 'punct'), (('M', '='), 'appos'), (('||', 'M'), 'punct'), (('x', 'M'), 'punct'), (('’)', 'M'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 105 ===========================

 Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology   ‹#›  27 A user with public key s and private key v generates a signature as follows: 

Tokens are: 
>> ['Unit', '-7', 'Digital', 'Signature', 'Darshan', 'Institute', 'of', 'Engineering', '&', 'Technology', '‹#›', '27', 'A', 'user', 'with', 'public', 'key', 's', 'and', 'private', 'key', 'v', 'generates', 'a', 'signature', 'as', 'follows', ':'] 

 UPOS tags are: 
>> [('Unit', 'NOUN'), ('-7', 'NUM'), ('Digital', 'ADJ'), ('Signature', 'NOUN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('of', 'ADP'), ('Engineering', 'NOUN'), ('&', 'CCONJ'), ('Technology', 'NOUN'), ('‹#›', 'NOUN'), ('27', 'NUM'), ('A', 'DET'), ('user', 'NOUN'), ('with', 'ADP'), ('public', 'ADJ'), ('key', 'NOUN'), ('s', 'PART'), ('and', 'CCONJ'), ('private', 'ADJ'), ('key', 'ADJ'), ('v', 'NOUN'), ('generates', 'VERB'), ('a', 'DET'), ('signature', 'NOUN'), ('as', 'SCONJ'), ('follows', 'VERB'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Unit', 'NN'), ('-7', 'CD'), ('Digital', 'JJ'), ('Signature', 'NN'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('of', 'IN'), ('Engineering', 'NN'), ('&', 'CC'), ('Technology', 'NN'), ('‹#›', 'NN'), ('27', 'CD'), ('A', 'DT'), ('user', 'NN'), ('with', 'IN'), ('public', 'JJ'), ('key', 'NN'), ('s', 'POS'), ('and', 'CC'), ('private', 'JJ'), ('key', 'JJ'), ('v', 'NN'), ('generates', 'VBZ'), ('a', 'DT'), ('signature', 'NN'), ('as', 'IN'), ('follows', 'VBZ'), (':', ':')] 

 Lemmas are: 
>> [('Unit', 'unit'), ('-7', '-7'), ('Digital', 'digital'), ('Signature', 'signature'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('of', 'of'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'technology'), ('‹#›', '‹#›'), ('27', '27'), ('A', 'a'), ('user', 'user'), ('with', 'with'), ('public', 'public'), ('key', 'key'), ('s', "'s"), ('and', 'and'), ('private', 'private'), ('key', 'key'), ('v', 'v'), ('generates', 'generate'), ('a', 'a'), ('signature', 'signature'), ('as', 'as'), ('follows', 'follow'), (':', ':')] 

 Dependency tags are: 
>> [(('Unit', 'Institute'), 'compound'), (('-7', 'Unit'), 'nummod'), (('Digital', 'Institute'), 'amod'), (('Signature', 'Darshan'), 'compound'), (('Darshan', 'Institute'), 'compound'), (('Institute', 'generates'), 'nsubj'), (('of', '‹#›'), 'case'), (('Engineering', '‹#›'), 'compound'), (('&', 'Technology'), 'cc'), (('Technology', 'Engineering'), 'conj'), (('‹#›', 'Institute'), 'nmod'), (('27', '‹#›'), 'nummod'), (('A', 'user'), 'det'), (('user', 'generates'), 'nsubj'), (('with', 'key'), 'case'), (('public', 'key'), 'amod'), (('key', 'user'), 'nmod'), (('s', 'key'), 'case'), (('and', 'v'), 'cc'), (('private', 'v'), 'amod'), (('key', 'v'), 'amod'), (('v', 'user'), 'nmod'), (('generates', 'root'), 'root'), (('a', 'signature'), 'det'), (('signature', 'generates'), 'obj'), (('as', 'follows'), 'mark'), (('follows', 'generates'), 'advcl'), ((':', 'generates'), 'punct')]

 Named Entities are: 
>> [('Unit-7  Digital Signature                                                           Darshan Institute of Engineering & Technology', 'ORG'), ('27', 'CARDINAL')]

========================== Sentence 106 ===========================

 Choose a random integer r with 0 < r < q and compute x = ar mod p. 

Tokens are: 
>> ['Choose', 'a', 'random', 'integer', 'r', 'with', '0', '<', 'r', '<', 'q', 'and', 'compute', 'x', '=', 'ar', 'mod', 'p.'] 

 UPOS tags are: 
>> [('Choose', 'VERB'), ('a', 'DET'), ('random', 'ADJ'), ('integer', 'NOUN'), ('r', 'NOUN'), ('with', 'ADP'), ('0', 'NUM'), ('<', 'PUNCT'), ('r', 'NOUN'), ('<', 'PUNCT'), ('q', 'NOUN'), ('and', 'CCONJ'), ('compute', 'NOUN'), ('x', 'NOUN'), ('=', 'SYM'), ('ar', 'NOUN'), ('mod', 'NOUN'), ('p.', 'PUNCT')] 

 XPOS tags are: 
>> [('Choose', 'VB'), ('a', 'DT'), ('random', 'JJ'), ('integer', 'NN'), ('r', 'NN'), ('with', 'IN'), ('0', 'CD'), ('<', '-LRB-'), ('r', 'NN'), ('<', '-LRB-'), ('q', 'NN'), ('and', 'CC'), ('compute', 'NN'), ('x', 'NN'), ('=', 'SYM'), ('ar', 'NN'), ('mod', 'NN'), ('p.', '-RRB-')] 

 Lemmas are: 
>> [('Choose', 'choose'), ('a', 'a'), ('random', 'random'), ('integer', 'integer'), ('r', 'be'), ('with', 'with'), ('0', '0'), ('<', '<'), ('r', 'be'), ('<', '<'), ('q', 'q'), ('and', 'and'), ('compute', 'compute'), ('x', 'x'), ('=', '='), ('ar', 'be'), ('mod', 'mod'), ('p.', 'P.')] 

 Dependency tags are: 
>> [(('Choose', 'root'), 'root'), (('a', 'integer'), 'det'), (('random', 'integer'), 'amod'), (('integer', 'r'), 'compound'), (('r', 'Choose'), 'obj'), (('with', 'r'), 'case'), (('0', 'r'), 'nummod'), (('<', 'q'), 'punct'), (('r', 'q'), 'cop'), (('<', 'q'), 'punct'), (('q', '='), 'nsubj'), (('and', 'compute'), 'cc'), (('compute', 'q'), 'conj'), (('x', 'q'), 'conj'), (('=', 'Choose'), 'parataxis'), (('ar', 'mod'), 'cop'), (('mod', '='), 'obj'), (('p.', 'q'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 107 ===========================

 This is independent of any message M, hence can be pre-computed. 

Tokens are: 
>> ['This', 'is', 'independent', 'of', 'any', 'message', 'M', ',', 'hence', 'can', 'be', 'pre-computed', '.'] 

 UPOS tags are: 
>> [('This', 'PRON'), ('is', 'AUX'), ('independent', 'ADJ'), ('of', 'ADP'), ('any', 'DET'), ('message', 'NOUN'), ('M', 'NOUN'), (',', 'PUNCT'), ('hence', 'ADV'), ('can', 'AUX'), ('be', 'AUX'), ('pre-computed', 'ADJ'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('This', 'DT'), ('is', 'VBZ'), ('independent', 'JJ'), ('of', 'IN'), ('any', 'DT'), ('message', 'NN'), ('M', 'NN'), (',', ','), ('hence', 'RB'), ('can', 'MD'), ('be', 'VB'), ('pre-computed', 'JJ'), ('.', '.')] 

 Lemmas are: 
>> [('This', 'this'), ('is', 'be'), ('independent', 'independent'), ('of', 'of'), ('any', 'any'), ('message', 'message'), ('M', 'm'), (',', ','), ('hence', 'hence'), ('can', 'can'), ('be', 'be'), ('pre-computed', 'pre-computed'), ('.', '.')] 

 Dependency tags are: 
>> [(('This', 'independent'), 'nsubj'), (('is', 'independent'), 'cop'), (('independent', 'root'), 'root'), (('of', 'M'), 'case'), (('any', 'M'), 'det'), (('message', 'M'), 'compound'), (('M', 'independent'), 'obl'), ((',', 'independent'), 'punct'), (('hence', 'pre-computed'), 'advmod'), (('can', 'pre-computed'), 'aux'), (('be', 'pre-computed'), 'cop'), (('pre-computed', 'independent'), 'parataxis'), (('.', 'independent'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 108 ===========================

 Concatenate message with x and hash result to compute: e = H(M || x) 

Tokens are: 
>> ['Concatenate', 'message', 'with', 'x', 'and', 'hash', 'result', 'to', 'compute', ':', 'e', '=', 'H', '(', 'M', '||', 'x', ')'] 

 UPOS tags are: 
>> [('Concatenate', 'VERB'), ('message', 'NOUN'), ('with', 'ADP'), ('x', 'NOUN'), ('and', 'CCONJ'), ('hash', 'NOUN'), ('result', 'NOUN'), ('to', 'PART'), ('compute', 'VERB'), (':', 'PUNCT'), ('e', 'NOUN'), ('=', 'SYM'), ('H', 'NOUN'), ('(', 'PUNCT'), ('M', 'NOUN'), ('||', 'SYM'), ('x', 'NOUN'), (')', 'PUNCT')] 

 XPOS tags are: 
>> [('Concatenate', 'VB'), ('message', 'NN'), ('with', 'IN'), ('x', 'NN'), ('and', 'CC'), ('hash', 'NN'), ('result', 'NN'), ('to', 'TO'), ('compute', 'VB'), (':', ':'), ('e', 'NN'), ('=', 'SYM'), ('H', 'NN'), ('(', '-LRB-'), ('M', 'NN'), ('||', 'SYM'), ('x', 'NN'), (')', '-RRB-')] 

 Lemmas are: 
>> [('Concatenate', 'concatenate'), ('message', 'message'), ('with', 'with'), ('x', 'x'), ('and', 'and'), ('hash', 'hash'), ('result', 'result'), ('to', 'to'), ('compute', 'compute'), (':', ':'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), (')', ')')] 

 Dependency tags are: 
>> [(('Concatenate', 'root'), 'root'), (('message', 'Concatenate'), 'obj'), (('with', 'result'), 'case'), (('x', 'result'), 'compound'), (('and', 'hash'), 'cc'), (('hash', 'x'), 'conj'), (('result', 'Concatenate'), 'obl'), (('to', 'compute'), 'mark'), (('compute', 'Concatenate'), 'advcl'), ((':', 'Concatenate'), 'punct'), (('e', '='), 'nsubj'), (('=', 'Concatenate'), 'parataxis'), (('H', '='), 'obj'), (('(', 'M'), 'punct'), (('M', 'H'), 'appos'), (('||', 'x'), 'cc'), (('x', 'M'), 'nmod'), ((')', 'M'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 109 ===========================

 Compute y = (r + se) mod q. 

Tokens are: 
>> ['Compute', 'y', '=', '(', 'r', '+', 'se', ')', 'mod', 'q.'] 

 UPOS tags are: 
>> [('Compute', 'NOUN'), ('y', 'NOUN'), ('=', 'SYM'), ('(', 'PUNCT'), ('r', 'NOUN'), ('+', 'SYM'), ('se', 'NOUN'), (')', 'PUNCT'), ('mod', 'NOUN'), ('q.', 'PUNCT')] 

 XPOS tags are: 
>> [('Compute', 'NN'), ('y', 'NN'), ('=', 'SYM'), ('(', '-LRB-'), ('r', 'NN'), ('+', 'SYM'), ('se', 'NN'), (')', '-RRB-'), ('mod', 'NN'), ('q.', '.')] 

 Lemmas are: 
>> [('Compute', 'compute'), ('y', 'y'), ('=', '='), ('(', '('), ('r', 'be'), ('+', '+'), ('se', 'se'), (')', ')'), ('mod', 'mod'), ('q.', '..')] 

 Dependency tags are: 
>> [(('Compute', 'y'), 'compound'), (('y', 'root'), 'root'), (('=', 'y'), 'acl'), (('(', 'se'), 'punct'), (('r', 'se'), 'cop'), (('+', 'se'), 'cc'), (('se', 'mod'), 'compound'), ((')', 'se'), 'punct'), (('mod', '='), 'obj'), (('q.', 'y'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 110 ===========================

 The signature consists of the pair (e, y). 

Tokens are: 
>> ['The', 'signature', 'consists', 'of', 'the', 'pair', '(', 'e', ',', 'y', ')', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('signature', 'NOUN'), ('consists', 'VERB'), ('of', 'ADP'), ('the', 'DET'), ('pair', 'NOUN'), ('(', 'PUNCT'), ('e', 'NOUN'), (',', 'PUNCT'), ('y', 'NOUN'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('signature', 'NN'), ('consists', 'VBZ'), ('of', 'IN'), ('the', 'DT'), ('pair', 'NN'), ('(', '-LRB-'), ('e', 'NN'), (',', ','), ('y', 'NN'), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('signature', 'signature'), ('consists', 'consist'), ('of', 'of'), ('the', 'the'), ('pair', 'pair'), ('(', '('), ('e', 'e'), (',', ','), ('y', 'y'), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'signature'), 'det'), (('signature', 'consists'), 'nsubj'), (('consists', 'root'), 'root'), (('of', 'pair'), 'case'), (('the', 'pair'), 'det'), (('pair', 'consists'), 'obl'), (('(', 'e'), 'punct'), (('e', 'pair'), 'appos'), ((',', 'y'), 'punct'), (('y', 'e'), 'dep'), ((')', 'e'), 'punct'), (('.', 'consists'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 111 ===========================

 Any other user can verify the signature as follows:    Compute x' = ayve mod p. 

Tokens are: 
>> ['Any', 'other', 'user', 'can', 'verify', 'the', 'signature', 'as', 'follows', ':', 'Compute', "x'", '=', 'ayve', 'mod', 'p.'] 

 UPOS tags are: 
>> [('Any', 'DET'), ('other', 'ADJ'), ('user', 'NOUN'), ('can', 'AUX'), ('verify', 'VERB'), ('the', 'DET'), ('signature', 'NOUN'), ('as', 'SCONJ'), ('follows', 'VERB'), (':', 'PUNCT'), ('Compute', 'NOUN'), ("x'", 'NOUN'), ('=', 'PUNCT'), ('ayve', 'NOUN'), ('mod', 'NOUN'), ('p.', 'NOUN')] 

 XPOS tags are: 
>> [('Any', 'DT'), ('other', 'JJ'), ('user', 'NN'), ('can', 'MD'), ('verify', 'VB'), ('the', 'DT'), ('signature', 'NN'), ('as', 'IN'), ('follows', 'VBZ'), (':', ':'), ('Compute', 'NN'), ("x'", 'NN'), ('=', ','), ('ayve', 'NN'), ('mod', 'NN'), ('p.', 'NN')] 

 Lemmas are: 
>> [('Any', 'any'), ('other', 'other'), ('user', 'user'), ('can', 'can'), ('verify', 'verify'), ('the', 'the'), ('signature', 'signature'), ('as', 'as'), ('follows', 'follow'), (':', ':'), ('Compute', 'compute'), ("x'", "x'"), ('=', '='), ('ayve', 'ayve'), ('mod', 'mod'), ('p.', 'P.')] 

 Dependency tags are: 
>> [(('Any', 'user'), 'det'), (('other', 'user'), 'amod'), (('user', 'verify'), 'nsubj'), (('can', 'verify'), 'aux'), (('verify', 'root'), 'root'), (('the', 'signature'), 'det'), (('signature', 'verify'), 'obj'), (('as', 'follows'), 'mark'), (('follows', 'verify'), 'advcl'), ((':', "x'"), 'punct'), (('Compute', "x'"), 'compound'), (("x'", 'verify'), 'parataxis'), (('=', "x'"), 'punct'), (('ayve', 'mod'), 'nsubj'), (('mod', 'p.'), 'compound'), (('p.', "x'"), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 112 ===========================

 Verify that e = H(M || x'). 

Tokens are: 
>> ['Verify', 'that', 'e', '=', 'H', '(', 'M', '||', 'x', "'", ')', '.'] 

 UPOS tags are: 
>> [('Verify', 'VERB'), ('that', 'SCONJ'), ('e', 'NOUN'), ('=', 'SYM'), ('H', 'NOUN'), ('(', 'PUNCT'), ('M', 'NOUN'), ('||', 'SYM'), ('x', 'NOUN'), ("'", 'PUNCT'), (')', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Verify', 'VB'), ('that', 'IN'), ('e', 'NN'), ('=', 'SYM'), ('H', 'NN'), ('(', '-LRB-'), ('M', 'NN'), ('||', 'SYM'), ('x', 'NN'), ("'", "''"), (')', '-RRB-'), ('.', '.')] 

 Lemmas are: 
>> [('Verify', 'verify'), ('that', 'that'), ('e', 'e'), ('=', '='), ('H', 'h'), ('(', '('), ('M', 'm'), ('||', '||'), ('x', 'x'), ("'", "'"), (')', ')'), ('.', '.')] 

 Dependency tags are: 
>> [(('Verify', 'root'), 'root'), (('that', '='), 'mark'), (('e', '='), 'nsubj'), (('=', 'Verify'), 'ccomp'), (('H', '='), 'obj'), (('(', 'M'), 'punct'), (('M', 'H'), 'appos'), (('||', 'x'), 'cc'), (('x', 'M'), 'nmod'), (("'", 'M'), 'punct'), ((')', 'M'), 'punct'), (('.', 'Verify'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 113 ===========================

 See text for details of why the verification works. 

Tokens are: 
>> ['See', 'text', 'for', 'details', 'of', 'why', 'the', 'verification', 'works', '.'] 

 UPOS tags are: 
>> [('See', 'VERB'), ('text', 'NOUN'), ('for', 'ADP'), ('details', 'NOUN'), ('of', 'ADP'), ('why', 'SCONJ'), ('the', 'DET'), ('verification', 'NOUN'), ('works', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('See', 'VB'), ('text', 'NN'), ('for', 'IN'), ('details', 'NNS'), ('of', 'IN'), ('why', 'WRB'), ('the', 'DT'), ('verification', 'NN'), ('works', 'VBZ'), ('.', '.')] 

 Lemmas are: 
>> [('See', 'see'), ('text', 'text'), ('for', 'for'), ('details', 'detail'), ('of', 'of'), ('why', 'why'), ('the', 'the'), ('verification', 'verification'), ('works', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('See', 'root'), 'root'), (('text', 'See'), 'obj'), (('for', 'details'), 'case'), (('details', 'text'), 'nmod'), (('of', 'why'), 'case'), (('why', 'details'), 'nmod'), (('the', 'verification'), 'det'), (('verification', 'works'), 'nsubj'), (('works', 'why'), 'acl:relcl'), (('.', 'See'), 'punct')]

 Named Entities are: 
>> []