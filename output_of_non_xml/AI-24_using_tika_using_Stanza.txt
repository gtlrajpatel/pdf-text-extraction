

========================== Sentence 1 ===========================

 AI-24 

Tokens are: 
>> ['AI', '-24'] 

 UPOS tags are: 
>> [('AI', 'PROPN'), ('-24', 'NUM')] 

 XPOS tags are: 
>> [('AI', 'NNP'), ('-24', 'CD')] 

 Lemmas are: 
>> [('AI', 'AI'), ('-24', '-24')] 

 Dependency tags are: 
>> [(('AI', 'root'), 'root'), (('-24', 'AI'), 'nmod:tmod')]

 Named Entities are: 
>> []

========================== Sentence 2 ===========================

 How does Machine Learning work A Machine Learning system learns from historical data, builds the prediction models, and whenever it receives new data, predicts the output for it. 

Tokens are: 
>> ['How', 'does', 'Machine', 'Learning', 'work', 'A', 'Machine', 'Learning', 'system', 'learns', 'from', 'historical', 'data', ',', 'builds', 'the', 'prediction', 'models', ',', 'and', 'whenever', 'it', 'receives', 'new', 'data', ',', 'predicts', 'the', 'output', 'for', 'it', '.'] 

 UPOS tags are: 
>> [('How', 'ADV'), ('does', 'AUX'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), ('work', 'NOUN'), ('A', 'DET'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), ('system', 'NOUN'), ('learns', 'VERB'), ('from', 'ADP'), ('historical', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('builds', 'VERB'), ('the', 'DET'), ('prediction', 'NOUN'), ('models', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('whenever', 'SCONJ'), ('it', 'PRON'), ('receives', 'VERB'), ('new', 'ADJ'), ('data', 'NOUN'), (',', 'PUNCT'), ('predicts', 'VERB'), ('the', 'DET'), ('output', 'NOUN'), ('for', 'ADP'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('How', 'WRB'), ('does', 'VBZ'), ('Machine', 'NN'), ('Learning', 'NN'), ('work', 'NN'), ('A', 'DT'), ('Machine', 'NN'), ('Learning', 'NN'), ('system', 'NN'), ('learns', 'VBZ'), ('from', 'IN'), ('historical', 'JJ'), ('data', 'NNS'), (',', ','), ('builds', 'VBZ'), ('the', 'DT'), ('prediction', 'NN'), ('models', 'NNS'), (',', ','), ('and', 'CC'), ('whenever', 'WRB'), ('it', 'PRP'), ('receives', 'VBZ'), ('new', 'JJ'), ('data', 'NNS'), (',', ','), ('predicts', 'VBZ'), ('the', 'DT'), ('output', 'NN'), ('for', 'IN'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('How', 'how'), ('does', 'do'), ('Machine', 'Machine'), ('Learning', 'learning'), ('work', 'work'), ('A', 'a'), ('Machine', 'Machine'), ('Learning', 'learning'), ('system', 'system'), ('learns', 'learn'), ('from', 'from'), ('historical', 'historical'), ('data', 'datum'), (',', ','), ('builds', 'build'), ('the', 'the'), ('prediction', 'prediction'), ('models', 'model'), (',', ','), ('and', 'and'), ('whenever', 'whenever'), ('it', 'it'), ('receives', 'receive'), ('new', 'new'), ('data', 'datum'), (',', ','), ('predicts', 'predict'), ('the', 'the'), ('output', 'output'), ('for', 'for'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('How', 'learns'), 'advmod'), (('does', 'learns'), 'aux'), (('Machine', 'work'), 'compound'), (('Learning', 'work'), 'compound'), (('work', 'learns'), 'nsubj'), (('A', 'system'), 'det'), (('Machine', 'system'), 'compound'), (('Learning', 'system'), 'compound'), (('system', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('from', 'data'), 'case'), (('historical', 'data'), 'amod'), (('data', 'learns'), 'obl'), ((',', 'builds'), 'punct'), (('builds', 'learns'), 'conj'), (('the', 'models'), 'det'), (('prediction', 'models'), 'compound'), (('models', 'builds'), 'obj'), ((',', 'predicts'), 'punct'), (('and', 'predicts'), 'cc'), (('whenever', 'receives'), 'mark'), (('it', 'receives'), 'nsubj'), (('receives', 'predicts'), 'advcl'), (('new', 'data'), 'amod'), (('data', 'receives'), 'obj'), ((',', 'predicts'), 'punct'), (('predicts', 'learns'), 'conj'), (('the', 'output'), 'det'), (('output', 'predicts'), 'obj'), (('for', 'it'), 'case'), (('it', 'output'), 'nmod'), (('.', 'learns'), 'punct')]

 Named Entities are: 
>> [('Machine Learning', 'ORG'), ('A Machine Learning', 'PRODUCT')]

========================== Sentence 3 ===========================

 The accuracy of predicted output depends upon the amount of data, as the huge amount of data helps to build a better model which predicts the output more accurately. 

Tokens are: 
>> ['The', 'accuracy', 'of', 'predicted', 'output', 'depends', 'upon', 'the', 'amount', 'of', 'data', ',', 'as', 'the', 'huge', 'amount', 'of', 'data', 'helps', 'to', 'build', 'a', 'better', 'model', 'which', 'predicts', 'the', 'output', 'more', 'accurately', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('accuracy', 'NOUN'), ('of', 'ADP'), ('predicted', 'VERB'), ('output', 'NOUN'), ('depends', 'VERB'), ('upon', 'ADP'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('as', 'SCONJ'), ('the', 'DET'), ('huge', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('helps', 'VERB'), ('to', 'PART'), ('build', 'VERB'), ('a', 'DET'), ('better', 'ADJ'), ('model', 'NOUN'), ('which', 'PRON'), ('predicts', 'VERB'), ('the', 'DET'), ('output', 'NOUN'), ('more', 'ADV'), ('accurately', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('accuracy', 'NN'), ('of', 'IN'), ('predicted', 'VBN'), ('output', 'NN'), ('depends', 'VBZ'), ('upon', 'IN'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), (',', ','), ('as', 'IN'), ('the', 'DT'), ('huge', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NN'), ('helps', 'VBZ'), ('to', 'TO'), ('build', 'VB'), ('a', 'DT'), ('better', 'JJR'), ('model', 'NN'), ('which', 'WDT'), ('predicts', 'VBZ'), ('the', 'DT'), ('output', 'NN'), ('more', 'RBR'), ('accurately', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('accuracy', 'accuracy'), ('of', 'of'), ('predicted', 'predict'), ('output', 'output'), ('depends', 'depend'), ('upon', 'upon'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), (',', ','), ('as', 'as'), ('the', 'the'), ('huge', 'huge'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('helps', 'help'), ('to', 'to'), ('build', 'build'), ('a', 'a'), ('better', 'good'), ('model', 'model'), ('which', 'which'), ('predicts', 'predict'), ('the', 'the'), ('output', 'output'), ('more', 'more'), ('accurately', 'accurately'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'accuracy'), 'det'), (('accuracy', 'depends'), 'nsubj'), (('of', 'output'), 'case'), (('predicted', 'output'), 'amod'), (('output', 'accuracy'), 'nmod'), (('depends', 'root'), 'root'), (('upon', 'amount'), 'case'), (('the', 'amount'), 'det'), (('amount', 'depends'), 'obl'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), ((',', 'helps'), 'punct'), (('as', 'helps'), 'mark'), (('the', 'amount'), 'det'), (('huge', 'amount'), 'amod'), (('amount', 'helps'), 'nsubj'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('helps', 'depends'), 'advcl'), (('to', 'build'), 'mark'), (('build', 'helps'), 'xcomp'), (('a', 'model'), 'det'), (('better', 'model'), 'amod'), (('model', 'build'), 'obj'), (('which', 'predicts'), 'nsubj'), (('predicts', 'model'), 'acl:relcl'), (('the', 'output'), 'det'), (('output', 'predicts'), 'obj'), (('more', 'accurately'), 'advmod'), (('accurately', 'predicts'), 'advmod'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 4 ===========================

 Suppose we have a complex problem, where we need to perform some predictions, so instead of writing a code for it, we just need to feed the data to generic algorithms, and with the help of these algorithms, machine builds the logic as per the data and predict the output. 

Tokens are: 
>> ['Suppose', 'we', 'have', 'a', 'complex', 'problem', ',', 'where', 'we', 'need', 'to', 'perform', 'some', 'predictions', ',', 'so', 'instead', 'of', 'writing', 'a', 'code', 'for', 'it', ',', 'we', 'just', 'need', 'to', 'feed', 'the', 'data', 'to', 'generic', 'algorithms', ',', 'and', 'with', 'the', 'help', 'of', 'these', 'algorithms', ',', 'machine', 'builds', 'the', 'logic', 'as', 'per', 'the', 'data', 'and', 'predict', 'the', 'output', '.'] 

 UPOS tags are: 
>> [('Suppose', 'VERB'), ('we', 'PRON'), ('have', 'VERB'), ('a', 'DET'), ('complex', 'ADJ'), ('problem', 'NOUN'), (',', 'PUNCT'), ('where', 'SCONJ'), ('we', 'PRON'), ('need', 'VERB'), ('to', 'PART'), ('perform', 'VERB'), ('some', 'DET'), ('predictions', 'NOUN'), (',', 'PUNCT'), ('so', 'ADV'), ('instead', 'ADV'), ('of', 'SCONJ'), ('writing', 'VERB'), ('a', 'DET'), ('code', 'NOUN'), ('for', 'ADP'), ('it', 'PRON'), (',', 'PUNCT'), ('we', 'PRON'), ('just', 'ADV'), ('need', 'VERB'), ('to', 'PART'), ('feed', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), ('to', 'ADP'), ('generic', 'ADJ'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('with', 'ADP'), ('the', 'DET'), ('help', 'NOUN'), ('of', 'ADP'), ('these', 'DET'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('builds', 'VERB'), ('the', 'DET'), ('logic', 'NOUN'), ('as', 'ADP'), ('per', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('and', 'CCONJ'), ('predict', 'VERB'), ('the', 'DET'), ('output', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Suppose', 'VB'), ('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('complex', 'JJ'), ('problem', 'NN'), (',', ','), ('where', 'WRB'), ('we', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('perform', 'VB'), ('some', 'DT'), ('predictions', 'NNS'), (',', ','), ('so', 'RB'), ('instead', 'RB'), ('of', 'IN'), ('writing', 'VBG'), ('a', 'DT'), ('code', 'NN'), ('for', 'IN'), ('it', 'PRP'), (',', ','), ('we', 'PRP'), ('just', 'RB'), ('need', 'VBP'), ('to', 'TO'), ('feed', 'VB'), ('the', 'DT'), ('data', 'NNS'), ('to', 'IN'), ('generic', 'JJ'), ('algorithms', 'NNS'), (',', ','), ('and', 'CC'), ('with', 'IN'), ('the', 'DT'), ('help', 'NN'), ('of', 'IN'), ('these', 'DT'), ('algorithms', 'NNS'), (',', ','), ('machine', 'NN'), ('builds', 'VBZ'), ('the', 'DT'), ('logic', 'NN'), ('as', 'IN'), ('per', 'IN'), ('the', 'DT'), ('data', 'NN'), ('and', 'CC'), ('predict', 'VB'), ('the', 'DT'), ('output', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Suppose', 'suppose'), ('we', 'we'), ('have', 'have'), ('a', 'a'), ('complex', 'complex'), ('problem', 'problem'), (',', ','), ('where', 'where'), ('we', 'we'), ('need', 'need'), ('to', 'to'), ('perform', 'perform'), ('some', 'some'), ('predictions', 'prediction'), (',', ','), ('so', 'so'), ('instead', 'instead'), ('of', 'of'), ('writing', 'write'), ('a', 'a'), ('code', 'code'), ('for', 'for'), ('it', 'it'), (',', ','), ('we', 'we'), ('just', 'just'), ('need', 'need'), ('to', 'to'), ('feed', 'feed'), ('the', 'the'), ('data', 'datum'), ('to', 'to'), ('generic', 'generic'), ('algorithms', 'algorithm'), (',', ','), ('and', 'and'), ('with', 'with'), ('the', 'the'), ('help', 'help'), ('of', 'of'), ('these', 'this'), ('algorithms', 'algorithm'), (',', ','), ('machine', 'machine'), ('builds', 'build'), ('the', 'the'), ('logic', 'logic'), ('as', 'as'), ('per', 'per'), ('the', 'the'), ('data', 'datum'), ('and', 'and'), ('predict', 'predict'), ('the', 'the'), ('output', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('Suppose', 'root'), 'root'), (('we', 'have'), 'nsubj'), (('have', 'Suppose'), 'ccomp'), (('a', 'problem'), 'det'), (('complex', 'problem'), 'amod'), (('problem', 'have'), 'obj'), ((',', 'problem'), 'punct'), (('where', 'need'), 'mark'), (('we', 'need'), 'nsubj'), (('need', 'problem'), 'acl:relcl'), (('to', 'perform'), 'mark'), (('perform', 'need'), 'xcomp'), (('some', 'predictions'), 'det'), (('predictions', 'perform'), 'obj'), ((',', 'need'), 'punct'), (('so', 'need'), 'advmod'), (('instead', 'writing'), 'mark'), (('of', 'instead'), 'fixed'), (('writing', 'need'), 'advcl'), (('a', 'code'), 'det'), (('code', 'writing'), 'obj'), (('for', 'it'), 'case'), (('it', 'writing'), 'obl'), ((',', 'need'), 'punct'), (('we', 'need'), 'nsubj'), (('just', 'need'), 'advmod'), (('need', 'Suppose'), 'parataxis'), (('to', 'feed'), 'mark'), (('feed', 'need'), 'xcomp'), (('the', 'data'), 'det'), (('data', 'feed'), 'obj'), (('to', 'algorithms'), 'case'), (('generic', 'algorithms'), 'amod'), (('algorithms', 'feed'), 'obl'), ((',', 'builds'), 'punct'), (('and', 'builds'), 'cc'), (('with', 'help'), 'case'), (('the', 'help'), 'det'), (('help', 'builds'), 'obl'), (('of', 'algorithms'), 'case'), (('these', 'algorithms'), 'det'), (('algorithms', 'help'), 'nmod'), ((',', 'builds'), 'punct'), (('machine', 'builds'), 'nsubj'), (('builds', 'Suppose'), 'conj'), (('the', 'logic'), 'det'), (('logic', 'builds'), 'obj'), (('as', 'data'), 'case'), (('per', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'builds'), 'obl'), (('and', 'predict'), 'cc'), (('predict', 'builds'), 'conj'), (('the', 'output'), 'det'), (('output', 'predict'), 'obj'), (('.', 'Suppose'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 5 ===========================

 Machine learning has changed our way of thinking about the problem. 

Tokens are: 
>> ['Machine', 'learning', 'has', 'changed', 'our', 'way', 'of', 'thinking', 'about', 'the', 'problem', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('has', 'AUX'), ('changed', 'VERB'), ('our', 'PRON'), ('way', 'NOUN'), ('of', 'SCONJ'), ('thinking', 'VERB'), ('about', 'ADP'), ('the', 'DET'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('has', 'VBZ'), ('changed', 'VBN'), ('our', 'PRP$'), ('way', 'NN'), ('of', 'IN'), ('thinking', 'VBG'), ('about', 'IN'), ('the', 'DT'), ('problem', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('has', 'have'), ('changed', 'change'), ('our', 'we'), ('way', 'way'), ('of', 'of'), ('thinking', 'think'), ('about', 'about'), ('the', 'the'), ('problem', 'problem'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'changed'), 'nsubj'), (('has', 'changed'), 'aux'), (('changed', 'root'), 'root'), (('our', 'way'), 'nmod:poss'), (('way', 'changed'), 'obj'), (('of', 'thinking'), 'mark'), (('thinking', 'way'), 'acl'), (('about', 'problem'), 'case'), (('the', 'problem'), 'det'), (('problem', 'thinking'), 'obl'), (('.', 'changed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 6 ===========================

 The below block diagram explains the working of Machine Learning algorithm:  Features of Machine Learning: · Machine learning uses data to detect various patterns in a given dataset. 

Tokens are: 
>> ['The', 'below', 'block', 'diagram', 'explains', 'the', 'working', 'of', 'Machine', 'Learning', 'algorithm', ':', 'Features', 'of', 'Machine', 'Learning', ':', '·', 'Machine', 'learning', 'uses', 'data', 'to', 'detect', 'various', 'patterns', 'in', 'a', 'given', 'dataset', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('below', 'ADJ'), ('block', 'NOUN'), ('diagram', 'NOUN'), ('explains', 'VERB'), ('the', 'DET'), ('working', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), ('algorithm', 'NOUN'), (':', 'PUNCT'), ('Features', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('uses', 'VERB'), ('data', 'NOUN'), ('to', 'PART'), ('detect', 'VERB'), ('various', 'ADJ'), ('patterns', 'NOUN'), ('in', 'ADP'), ('a', 'DET'), ('given', 'VERB'), ('dataset', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('below', 'JJ'), ('block', 'NN'), ('diagram', 'NN'), ('explains', 'VBZ'), ('the', 'DT'), ('working', 'NN'), ('of', 'IN'), ('Machine', 'NN'), ('Learning', 'NN'), ('algorithm', 'NN'), (':', ':'), ('Features', 'NNS'), ('of', 'IN'), ('Machine', 'NN'), ('Learning', 'NN'), (':', ':'), ('·', 'NFP'), ('Machine', 'NN'), ('learning', 'NN'), ('uses', 'VBZ'), ('data', 'NNS'), ('to', 'TO'), ('detect', 'VB'), ('various', 'JJ'), ('patterns', 'NNS'), ('in', 'IN'), ('a', 'DT'), ('given', 'VBN'), ('dataset', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('below', 'below'), ('block', 'block'), ('diagram', 'diagram'), ('explains', 'explain'), ('the', 'the'), ('working', 'working'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning'), ('algorithm', 'algorithm'), (':', ':'), ('Features', 'feature'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning'), (':', ':'), ('·', '·'), ('Machine', 'Machine'), ('learning', 'learning'), ('uses', 'use'), ('data', 'datum'), ('to', 'to'), ('detect', 'detect'), ('various', 'various'), ('patterns', 'pattern'), ('in', 'in'), ('a', 'a'), ('given', 'give'), ('dataset', 'dataset'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'diagram'), 'det'), (('below', 'diagram'), 'amod'), (('block', 'diagram'), 'compound'), (('diagram', 'explains'), 'nsubj'), (('explains', 'root'), 'root'), (('the', 'working'), 'det'), (('working', 'explains'), 'obj'), (('of', 'algorithm'), 'case'), (('Machine', 'algorithm'), 'compound'), (('Learning', 'algorithm'), 'compound'), (('algorithm', 'working'), 'nmod'), ((':', 'Features'), 'punct'), (('Features', 'algorithm'), 'appos'), (('of', 'Learning'), 'case'), (('Machine', 'Learning'), 'compound'), (('Learning', 'Features'), 'nmod'), ((':', 'Features'), 'punct'), (('·', 'uses'), 'punct'), (('Machine', 'learning'), 'compound'), (('learning', 'uses'), 'nsubj'), (('uses', 'explains'), 'parataxis'), (('data', 'uses'), 'obj'), (('to', 'detect'), 'mark'), (('detect', 'data'), 'acl'), (('various', 'patterns'), 'amod'), (('patterns', 'detect'), 'obj'), (('in', 'dataset'), 'case'), (('a', 'dataset'), 'det'), (('given', 'dataset'), 'amod'), (('dataset', 'detect'), 'obl'), (('.', 'explains'), 'punct')]

 Named Entities are: 
>> [('Machine Learning', 'PRODUCT')]

========================== Sentence 7 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 8 ===========================

 It can learn from past data and improve automatically. 

Tokens are: 
>> ['It', 'can', 'learn', 'from', 'past', 'data', 'and', 'improve', 'automatically', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('can', 'AUX'), ('learn', 'VERB'), ('from', 'ADP'), ('past', 'ADJ'), ('data', 'NOUN'), ('and', 'CCONJ'), ('improve', 'VERB'), ('automatically', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('can', 'MD'), ('learn', 'VB'), ('from', 'IN'), ('past', 'JJ'), ('data', 'NNS'), ('and', 'CC'), ('improve', 'VB'), ('automatically', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('can', 'can'), ('learn', 'learn'), ('from', 'from'), ('past', 'past'), ('data', 'datum'), ('and', 'and'), ('improve', 'improve'), ('automatically', 'automatically'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'learn'), 'nsubj'), (('can', 'learn'), 'aux'), (('learn', 'root'), 'root'), (('from', 'data'), 'case'), (('past', 'data'), 'amod'), (('data', 'learn'), 'obl'), (('and', 'improve'), 'cc'), (('improve', 'learn'), 'conj'), (('automatically', 'improve'), 'advmod'), (('.', 'learn'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 9 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 10 ===========================

 It is a data-driven technology. 

Tokens are: 
>> ['It', 'is', 'a', 'data-driven', 'technology', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('is', 'AUX'), ('a', 'DET'), ('data-driven', 'ADJ'), ('technology', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('data-driven', 'JJ'), ('technology', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('is', 'be'), ('a', 'a'), ('data-driven', 'data-driven'), ('technology', 'technology'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'technology'), 'nsubj'), (('is', 'technology'), 'cop'), (('a', 'technology'), 'det'), (('data-driven', 'technology'), 'amod'), (('technology', 'root'), 'root'), (('.', 'technology'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 11 ===========================

 · Machine learning is much similar to data mining as it also deals with the huge amount of the data. 

Tokens are: 
>> ['·', 'Machine', 'learning', 'is', 'much', 'similar', 'to', 'data', 'mining', 'as', 'it', 'also', 'deals', 'with', 'the', 'huge', 'amount', 'of', 'the', 'data', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('much', 'ADV'), ('similar', 'ADJ'), ('to', 'ADP'), ('data', 'NOUN'), ('mining', 'NOUN'), ('as', 'SCONJ'), ('it', 'PRON'), ('also', 'ADV'), ('deals', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('huge', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('much', 'RB'), ('similar', 'JJ'), ('to', 'IN'), ('data', 'NN'), ('mining', 'NN'), ('as', 'IN'), ('it', 'PRP'), ('also', 'RB'), ('deals', 'VBZ'), ('with', 'IN'), ('the', 'DT'), ('huge', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('the', 'DT'), ('data', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('much', 'much'), ('similar', 'similar'), ('to', 'to'), ('data', 'datum'), ('mining', 'mining'), ('as', 'as'), ('it', 'it'), ('also', 'also'), ('deals', 'deal'), ('with', 'with'), ('the', 'the'), ('huge', 'huge'), ('amount', 'amount'), ('of', 'of'), ('the', 'the'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', 'similar'), 'punct'), (('Machine', 'learning'), 'compound'), (('learning', 'similar'), 'nsubj'), (('is', 'similar'), 'cop'), (('much', 'similar'), 'advmod'), (('similar', 'root'), 'root'), (('to', 'mining'), 'case'), (('data', 'mining'), 'compound'), (('mining', 'similar'), 'obl'), (('as', 'deals'), 'mark'), (('it', 'deals'), 'nsubj'), (('also', 'deals'), 'advmod'), (('deals', 'similar'), 'advcl'), (('with', 'amount'), 'case'), (('the', 'amount'), 'det'), (('huge', 'amount'), 'amod'), (('amount', 'deals'), 'obl'), (('of', 'data'), 'case'), (('the', 'data'), 'det'), (('data', 'amount'), 'nmod'), (('.', 'similar'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 12 ===========================

 Need for Machine Learning 

Tokens are: 
>> ['Need', 'for', 'Machine', 'Learning'] 

 UPOS tags are: 
>> [('Need', 'VERB'), ('for', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN')] 

 XPOS tags are: 
>> [('Need', 'VBP'), ('for', 'IN'), ('Machine', 'NN'), ('Learning', 'NN')] 

 Lemmas are: 
>> [('Need', 'need'), ('for', 'for'), ('Machine', 'Machine'), ('Learning', 'learning')] 

 Dependency tags are: 
>> [(('Need', 'root'), 'root'), (('for', 'Learning'), 'case'), (('Machine', 'Learning'), 'compound'), (('Learning', 'Need'), 'obl')]

 Named Entities are: 
>> []

========================== Sentence 13 ===========================

 The need for machine learning is increasing day by day. 

Tokens are: 
>> ['The', 'need', 'for', 'machine', 'learning', 'is', 'increasing', 'day', 'by', 'day', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('need', 'NOUN'), ('for', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('increasing', 'VERB'), ('day', 'NOUN'), ('by', 'ADP'), ('day', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('need', 'NN'), ('for', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('increasing', 'VBG'), ('day', 'NN'), ('by', 'IN'), ('day', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('need', 'need'), ('for', 'for'), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('increasing', 'increase'), ('day', 'day'), ('by', 'by'), ('day', 'day'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'need'), 'det'), (('need', 'increasing'), 'nsubj'), (('for', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'need'), 'nmod'), (('is', 'increasing'), 'aux'), (('increasing', 'root'), 'root'), (('day', 'increasing'), 'obl:tmod'), (('by', 'day'), 'case'), (('day', 'increasing'), 'obl'), (('.', 'increasing'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 14 ===========================

 The reason behind the need for machine learning is that it is capable of doing tasks that are too complex for a person to implement directly. 

Tokens are: 
>> ['The', 'reason', 'behind', 'the', 'need', 'for', 'machine', 'learning', 'is', 'that', 'it', 'is', 'capable', 'of', 'doing', 'tasks', 'that', 'are', 'too', 'complex', 'for', 'a', 'person', 'to', 'implement', 'directly', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('reason', 'NOUN'), ('behind', 'ADP'), ('the', 'DET'), ('need', 'NOUN'), ('for', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'VERB'), ('that', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('capable', 'ADJ'), ('of', 'SCONJ'), ('doing', 'VERB'), ('tasks', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('too', 'ADV'), ('complex', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('person', 'NOUN'), ('to', 'PART'), ('implement', 'VERB'), ('directly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('reason', 'NN'), ('behind', 'IN'), ('the', 'DT'), ('need', 'NN'), ('for', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('capable', 'JJ'), ('of', 'IN'), ('doing', 'VBG'), ('tasks', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('too', 'RB'), ('complex', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('person', 'NN'), ('to', 'TO'), ('implement', 'VB'), ('directly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('reason', 'reason'), ('behind', 'behind'), ('the', 'the'), ('need', 'need'), ('for', 'for'), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('that', 'that'), ('it', 'it'), ('is', 'be'), ('capable', 'capable'), ('of', 'of'), ('doing', 'do'), ('tasks', 'task'), ('that', 'that'), ('are', 'be'), ('too', 'too'), ('complex', 'complex'), ('for', 'for'), ('a', 'a'), ('person', 'person'), ('to', 'to'), ('implement', 'implement'), ('directly', 'directly'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'reason'), 'det'), (('reason', 'is'), 'nsubj'), (('behind', 'need'), 'case'), (('the', 'need'), 'det'), (('need', 'reason'), 'nmod'), (('for', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'need'), 'nmod'), (('is', 'root'), 'root'), (('that', 'capable'), 'mark'), (('it', 'capable'), 'nsubj'), (('is', 'capable'), 'cop'), (('capable', 'is'), 'ccomp'), (('of', 'doing'), 'mark'), (('doing', 'capable'), 'advcl'), (('tasks', 'doing'), 'obj'), (('that', 'complex'), 'nsubj'), (('are', 'complex'), 'cop'), (('too', 'complex'), 'advmod'), (('complex', 'tasks'), 'acl:relcl'), (('for', 'person'), 'case'), (('a', 'person'), 'det'), (('person', 'complex'), 'obl'), (('to', 'implement'), 'mark'), (('implement', 'complex'), 'advcl'), (('directly', 'implement'), 'advmod'), (('.', 'is'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 15 ===========================

 As a human, we have some limitations as we cannot access the huge amount of data manually, so for this, we need some computer systems and here comes the machine learning to make things easy for us. 

Tokens are: 
>> ['As', 'a', 'human', ',', 'we', 'have', 'some', 'limitations', 'as', 'we', 'cannot', 'access', 'the', 'huge', 'amount', 'of', 'data', 'manually', ',', 'so', 'for', 'this', ',', 'we', 'need', 'some', 'computer', 'systems', 'and', 'here', 'comes', 'the', 'machine', 'learning', 'to', 'make', 'things', 'easy', 'for', 'us', '.'] 

 UPOS tags are: 
>> [('As', 'ADP'), ('a', 'DET'), ('human', 'ADJ'), (',', 'PUNCT'), ('we', 'PRON'), ('have', 'VERB'), ('some', 'DET'), ('limitations', 'NOUN'), ('as', 'SCONJ'), ('we', 'PRON'), ('cannot', 'AUX'), ('access', 'VERB'), ('the', 'DET'), ('huge', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('manually', 'ADV'), (',', 'PUNCT'), ('so', 'ADV'), ('for', 'ADP'), ('this', 'PRON'), (',', 'PUNCT'), ('we', 'PRON'), ('need', 'VERB'), ('some', 'DET'), ('computer', 'NOUN'), ('systems', 'NOUN'), ('and', 'CCONJ'), ('here', 'ADV'), ('comes', 'VERB'), ('the', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('to', 'PART'), ('make', 'VERB'), ('things', 'NOUN'), ('easy', 'ADJ'), ('for', 'ADP'), ('us', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('As', 'IN'), ('a', 'DT'), ('human', 'JJ'), (',', ','), ('we', 'PRP'), ('have', 'VBP'), ('some', 'DT'), ('limitations', 'NNS'), ('as', 'IN'), ('we', 'PRP'), ('cannot', 'MD'), ('access', 'VB'), ('the', 'DT'), ('huge', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('manually', 'RB'), (',', ','), ('so', 'RB'), ('for', 'IN'), ('this', 'DT'), (',', ','), ('we', 'PRP'), ('need', 'VBP'), ('some', 'DT'), ('computer', 'NN'), ('systems', 'NNS'), ('and', 'CC'), ('here', 'RB'), ('comes', 'VBZ'), ('the', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ('to', 'TO'), ('make', 'VB'), ('things', 'NNS'), ('easy', 'JJ'), ('for', 'IN'), ('us', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('As', 'as'), ('a', 'a'), ('human', 'human'), (',', ','), ('we', 'we'), ('have', 'have'), ('some', 'some'), ('limitations', 'limitation'), ('as', 'as'), ('we', 'we'), ('cannot', 'cannot'), ('access', 'access'), ('the', 'the'), ('huge', 'huge'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('manually', 'manually'), (',', ','), ('so', 'so'), ('for', 'for'), ('this', 'this'), (',', ','), ('we', 'we'), ('need', 'need'), ('some', 'some'), ('computer', 'computer'), ('systems', 'system'), ('and', 'and'), ('here', 'here'), ('comes', 'come'), ('the', 'the'), ('machine', 'machine'), ('learning', 'learning'), ('to', 'to'), ('make', 'make'), ('things', 'thing'), ('easy', 'easy'), ('for', 'for'), ('us', 'we'), ('.', '.')] 

 Dependency tags are: 
>> [(('As', 'human'), 'case'), (('a', 'human'), 'det'), (('human', 'have'), 'obl'), ((',', 'have'), 'punct'), (('we', 'have'), 'nsubj'), (('have', 'root'), 'root'), (('some', 'limitations'), 'det'), (('limitations', 'have'), 'obj'), (('as', 'access'), 'mark'), (('we', 'access'), 'nsubj'), (('cannot', 'access'), 'aux'), (('access', 'have'), 'advcl'), (('the', 'amount'), 'det'), (('huge', 'amount'), 'amod'), (('amount', 'access'), 'obj'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('manually', 'access'), 'advmod'), ((',', 'need'), 'punct'), (('so', 'need'), 'advmod'), (('for', 'this'), 'case'), (('this', 'need'), 'obl'), ((',', 'need'), 'punct'), (('we', 'need'), 'nsubj'), (('need', 'have'), 'parataxis'), (('some', 'systems'), 'det'), (('computer', 'systems'), 'compound'), (('systems', 'need'), 'obj'), (('and', 'comes'), 'cc'), (('here', 'comes'), 'advmod'), (('comes', 'need'), 'conj'), (('the', 'learning'), 'det'), (('machine', 'learning'), 'compound'), (('learning', 'comes'), 'obj'), (('to', 'make'), 'mark'), (('make', 'comes'), 'advcl'), (('things', 'make'), 'obj'), (('easy', 'make'), 'xcomp'), (('for', 'us'), 'case'), (('us', 'easy'), 'obl'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 16 ===========================

 We can train machine learning algorithms by providing them the huge amount of data and let them explore the data, construct the models, and predict the required output automatically. 

Tokens are: 
>> ['We', 'can', 'train', 'machine', 'learning', 'algorithms', 'by', 'providing', 'them', 'the', 'huge', 'amount', 'of', 'data', 'and', 'let', 'them', 'explore', 'the', 'data', ',', 'construct', 'the', 'models', ',', 'and', 'predict', 'the', 'required', 'output', 'automatically', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('can', 'AUX'), ('train', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithms', 'NOUN'), ('by', 'SCONJ'), ('providing', 'VERB'), ('them', 'PRON'), ('the', 'DET'), ('huge', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('and', 'CCONJ'), ('let', 'VERB'), ('them', 'PRON'), ('explore', 'VERB'), ('the', 'DET'), ('data', 'NOUN'), (',', 'PUNCT'), ('construct', 'VERB'), ('the', 'DET'), ('models', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('predict', 'VERB'), ('the', 'DET'), ('required', 'VERB'), ('output', 'NOUN'), ('automatically', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('can', 'MD'), ('train', 'VB'), ('machine', 'NN'), ('learning', 'NN'), ('algorithms', 'NNS'), ('by', 'IN'), ('providing', 'VBG'), ('them', 'PRP'), ('the', 'DT'), ('huge', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('and', 'CC'), ('let', 'VB'), ('them', 'PRP'), ('explore', 'VB'), ('the', 'DT'), ('data', 'NNS'), (',', ','), ('construct', 'VB'), ('the', 'DT'), ('models', 'NNS'), (',', ','), ('and', 'CC'), ('predict', 'VB'), ('the', 'DT'), ('required', 'VBN'), ('output', 'NN'), ('automatically', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('can', 'can'), ('train', 'train'), ('machine', 'machine'), ('learning', 'learning'), ('algorithms', 'algorithm'), ('by', 'by'), ('providing', 'provide'), ('them', 'they'), ('the', 'the'), ('huge', 'huge'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('and', 'and'), ('let', 'let'), ('them', 'they'), ('explore', 'explore'), ('the', 'the'), ('data', 'datum'), (',', ','), ('construct', 'construct'), ('the', 'the'), ('models', 'model'), (',', ','), ('and', 'and'), ('predict', 'predict'), ('the', 'the'), ('required', 'require'), ('output', 'output'), ('automatically', 'automatically'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'train'), 'nsubj'), (('can', 'train'), 'aux'), (('train', 'root'), 'root'), (('machine', 'algorithms'), 'compound'), (('learning', 'algorithms'), 'compound'), (('algorithms', 'train'), 'obj'), (('by', 'providing'), 'mark'), (('providing', 'train'), 'advcl'), (('them', 'providing'), 'iobj'), (('the', 'amount'), 'det'), (('huge', 'amount'), 'amod'), (('amount', 'providing'), 'obj'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('and', 'let'), 'cc'), (('let', 'providing'), 'conj'), (('them', 'let'), 'obj'), (('explore', 'let'), 'xcomp'), (('the', 'data'), 'det'), (('data', 'explore'), 'obj'), ((',', 'construct'), 'punct'), (('construct', 'explore'), 'conj'), (('the', 'models'), 'det'), (('models', 'construct'), 'obj'), ((',', 'predict'), 'punct'), (('and', 'predict'), 'cc'), (('predict', 'construct'), 'conj'), (('the', 'output'), 'det'), (('required', 'output'), 'amod'), (('output', 'predict'), 'obj'), (('automatically', 'predict'), 'advmod'), (('.', 'train'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 17 ===========================

 The performance of the machine learning algorithm depends on the amount of data, and it can be determined by the cost function. 

Tokens are: 
>> ['The', 'performance', 'of', 'the', 'machine', 'learning', 'algorithm', 'depends', 'on', 'the', 'amount', 'of', 'data', ',', 'and', 'it', 'can', 'be', 'determined', 'by', 'the', 'cost', 'function', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('performance', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('algorithm', 'NOUN'), ('depends', 'VERB'), ('on', 'ADP'), ('the', 'DET'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('determined', 'VERB'), ('by', 'ADP'), ('the', 'DET'), ('cost', 'NOUN'), ('function', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('performance', 'NN'), ('of', 'IN'), ('the', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ('algorithm', 'NN'), ('depends', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('determined', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('cost', 'NN'), ('function', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('performance', 'performance'), ('of', 'of'), ('the', 'the'), ('machine', 'machine'), ('learning', 'learning'), ('algorithm', 'algorithm'), ('depends', 'depend'), ('on', 'on'), ('the', 'the'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), (',', ','), ('and', 'and'), ('it', 'it'), ('can', 'can'), ('be', 'be'), ('determined', 'determine'), ('by', 'by'), ('the', 'the'), ('cost', 'cost'), ('function', 'function'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'performance'), 'det'), (('performance', 'depends'), 'nsubj'), (('of', 'algorithm'), 'case'), (('the', 'algorithm'), 'det'), (('machine', 'algorithm'), 'compound'), (('learning', 'algorithm'), 'compound'), (('algorithm', 'performance'), 'nmod'), (('depends', 'root'), 'root'), (('on', 'amount'), 'case'), (('the', 'amount'), 'det'), (('amount', 'depends'), 'obl'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), ((',', 'determined'), 'punct'), (('and', 'determined'), 'cc'), (('it', 'determined'), 'nsubj:pass'), (('can', 'determined'), 'aux'), (('be', 'determined'), 'aux:pass'), (('determined', 'depends'), 'conj'), (('by', 'function'), 'case'), (('the', 'function'), 'det'), (('cost', 'function'), 'compound'), (('function', 'determined'), 'obl'), (('.', 'depends'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 18 ===========================

 With the help of machine learning, we can save both time and money. 

Tokens are: 
>> ['With', 'the', 'help', 'of', 'machine', 'learning', ',', 'we', 'can', 'save', 'both', 'time', 'and', 'money', '.'] 

 UPOS tags are: 
>> [('With', 'ADP'), ('the', 'DET'), ('help', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('can', 'AUX'), ('save', 'VERB'), ('both', 'DET'), ('time', 'NOUN'), ('and', 'CCONJ'), ('money', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('With', 'IN'), ('the', 'DT'), ('help', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('we', 'PRP'), ('can', 'MD'), ('save', 'VB'), ('both', 'DT'), ('time', 'NN'), ('and', 'CC'), ('money', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('With', 'with'), ('the', 'the'), ('help', 'help'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('we', 'we'), ('can', 'can'), ('save', 'save'), ('both', 'both'), ('time', 'time'), ('and', 'and'), ('money', 'money'), ('.', '.')] 

 Dependency tags are: 
>> [(('With', 'help'), 'case'), (('the', 'help'), 'det'), (('help', 'save'), 'obl'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'help'), 'nmod'), ((',', 'save'), 'punct'), (('we', 'save'), 'nsubj'), (('can', 'save'), 'aux'), (('save', 'root'), 'root'), (('both', 'time'), 'cc:preconj'), (('time', 'save'), 'obj'), (('and', 'money'), 'cc'), (('money', 'time'), 'conj'), (('.', 'save'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 19 ===========================

 The importance of machine learning can be easily understood by its uses cases, Currently, machine learning is used in self-driving cars, cyber fraud detection, face recognition, and friend suggestion by Facebook, etc. 

Tokens are: 
>> ['The', 'importance', 'of', 'machine', 'learning', 'can', 'be', 'easily', 'understood', 'by', 'its', 'uses', 'cases', ',', 'Currently', ',', 'machine', 'learning', 'is', 'used', 'in', 'self', '-driving', 'cars', ',', 'cyber', 'fraud', 'detection', ',', 'face', 'recognition', ',', 'and', 'friend', 'suggestion', 'by', 'Facebook', ',', 'etc', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('importance', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('easily', 'ADV'), ('understood', 'VERB'), ('by', 'ADP'), ('its', 'PRON'), ('uses', 'NOUN'), ('cases', 'NOUN'), (',', 'PUNCT'), ('Currently', 'ADV'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('used', 'VERB'), ('in', 'ADP'), ('self', 'NOUN'), ('-driving', 'NOUN'), ('cars', 'NOUN'), (',', 'PUNCT'), ('cyber', 'NOUN'), ('fraud', 'NOUN'), ('detection', 'NOUN'), (',', 'PUNCT'), ('face', 'NOUN'), ('recognition', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('friend', 'NOUN'), ('suggestion', 'NOUN'), ('by', 'ADP'), ('Facebook', 'PROPN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('importance', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('can', 'MD'), ('be', 'VB'), ('easily', 'RB'), ('understood', 'VBN'), ('by', 'IN'), ('its', 'PRP$'), ('uses', 'NNS'), ('cases', 'NNS'), (',', ','), ('Currently', 'RB'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('used', 'VBN'), ('in', 'IN'), ('self', 'NN'), ('-driving', 'NN'), ('cars', 'NNS'), (',', ','), ('cyber', 'NN'), ('fraud', 'NN'), ('detection', 'NN'), (',', ','), ('face', 'NN'), ('recognition', 'NN'), (',', ','), ('and', 'CC'), ('friend', 'NN'), ('suggestion', 'NN'), ('by', 'IN'), ('Facebook', 'NNP'), (',', ','), ('etc', 'FW'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('importance', 'importance'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('can', 'can'), ('be', 'be'), ('easily', 'easily'), ('understood', 'understand'), ('by', 'by'), ('its', 'its'), ('uses', 'use'), ('cases', 'case'), (',', ','), ('Currently', 'currently'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('used', 'use'), ('in', 'in'), ('self', 'self'), ('-driving', '-driving'), ('cars', 'car'), (',', ','), ('cyber', 'cyber'), ('fraud', 'fraud'), ('detection', 'detection'), (',', ','), ('face', 'face'), ('recognition', 'recognition'), (',', ','), ('and', 'and'), ('friend', 'friend'), ('suggestion', 'suggestion'), ('by', 'by'), ('Facebook', 'Facebook'), (',', ','), ('etc', 'etc'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'importance'), 'det'), (('importance', 'understood'), 'nsubj:pass'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'importance'), 'nmod'), (('can', 'understood'), 'aux'), (('be', 'understood'), 'aux:pass'), (('easily', 'understood'), 'advmod'), (('understood', 'root'), 'root'), (('by', 'cases'), 'case'), (('its', 'cases'), 'nmod:poss'), (('uses', 'cases'), 'compound'), (('cases', 'understood'), 'obl'), ((',', 'used'), 'punct'), (('Currently', 'used'), 'advmod'), ((',', 'used'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'used'), 'nsubj:pass'), (('is', 'used'), 'aux:pass'), (('used', 'understood'), 'parataxis'), (('in', 'cars'), 'case'), (('self', 'cars'), 'compound'), (('-driving', 'cars'), 'compound'), (('cars', 'used'), 'obl'), ((',', 'detection'), 'punct'), (('cyber', 'detection'), 'compound'), (('fraud', 'detection'), 'compound'), (('detection', 'cars'), 'conj'), ((',', 'recognition'), 'punct'), (('face', 'recognition'), 'compound'), (('recognition', 'cars'), 'conj'), ((',', 'suggestion'), 'punct'), (('and', 'suggestion'), 'cc'), (('friend', 'suggestion'), 'compound'), (('suggestion', 'cars'), 'conj'), (('by', 'Facebook'), 'case'), (('Facebook', 'suggestion'), 'nmod'), ((',', 'etc'), 'punct'), (('etc', 'cars'), 'conj'), (('.', 'understood'), 'punct')]

 Named Entities are: 
>> [('Facebook', 'ORG')]

========================== Sentence 20 ===========================

 Various top companies such as Netflix and Amazon have build machine learning models that are using a vast amount of data to analyze the user interest and recommend product accordingly. 

Tokens are: 
>> ['Various', 'top', 'companies', 'such', 'as', 'Netflix', 'and', 'Amazon', 'have', 'build', 'machine', 'learning', 'models', 'that', 'are', 'using', 'a', 'vast', 'amount', 'of', 'data', 'to', 'analyze', 'the', 'user', 'interest', 'and', 'recommend', 'product', 'accordingly', '.'] 

 UPOS tags are: 
>> [('Various', 'ADJ'), ('top', 'ADJ'), ('companies', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('Netflix', 'PROPN'), ('and', 'CCONJ'), ('Amazon', 'PROPN'), ('have', 'AUX'), ('build', 'VERB'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('models', 'NOUN'), ('that', 'PRON'), ('are', 'AUX'), ('using', 'VERB'), ('a', 'DET'), ('vast', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('to', 'PART'), ('analyze', 'VERB'), ('the', 'DET'), ('user', 'NOUN'), ('interest', 'NOUN'), ('and', 'CCONJ'), ('recommend', 'VERB'), ('product', 'NOUN'), ('accordingly', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Various', 'JJ'), ('top', 'JJ'), ('companies', 'NNS'), ('such', 'JJ'), ('as', 'IN'), ('Netflix', 'NNP'), ('and', 'CC'), ('Amazon', 'NNP'), ('have', 'VBP'), ('build', 'VB'), ('machine', 'NN'), ('learning', 'NN'), ('models', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('using', 'VBG'), ('a', 'DT'), ('vast', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('to', 'TO'), ('analyze', 'VB'), ('the', 'DT'), ('user', 'NN'), ('interest', 'NN'), ('and', 'CC'), ('recommend', 'VB'), ('product', 'NN'), ('accordingly', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('Various', 'various'), ('top', 'top'), ('companies', 'company'), ('such', 'such'), ('as', 'as'), ('Netflix', 'Netflix'), ('and', 'and'), ('Amazon', 'Amazon'), ('have', 'have'), ('build', 'build'), ('machine', 'machine'), ('learning', 'learning'), ('models', 'model'), ('that', 'that'), ('are', 'be'), ('using', 'use'), ('a', 'a'), ('vast', 'vast'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('to', 'to'), ('analyze', 'analyze'), ('the', 'the'), ('user', 'user'), ('interest', 'interest'), ('and', 'and'), ('recommend', 'recommend'), ('product', 'product'), ('accordingly', 'accordingly'), ('.', '.')] 

 Dependency tags are: 
>> [(('Various', 'companies'), 'amod'), (('top', 'companies'), 'amod'), (('companies', 'build'), 'nsubj'), (('such', 'Netflix'), 'case'), (('as', 'such'), 'fixed'), (('Netflix', 'companies'), 'nmod'), (('and', 'Amazon'), 'cc'), (('Amazon', 'Netflix'), 'conj'), (('have', 'build'), 'aux'), (('build', 'root'), 'root'), (('machine', 'models'), 'compound'), (('learning', 'models'), 'compound'), (('models', 'build'), 'obj'), (('that', 'using'), 'nsubj'), (('are', 'using'), 'aux'), (('using', 'models'), 'acl:relcl'), (('a', 'amount'), 'det'), (('vast', 'amount'), 'amod'), (('amount', 'using'), 'obj'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('to', 'analyze'), 'mark'), (('analyze', 'using'), 'advcl'), (('the', 'interest'), 'det'), (('user', 'interest'), 'compound'), (('interest', 'analyze'), 'obj'), (('and', 'recommend'), 'cc'), (('recommend', 'analyze'), 'conj'), (('product', 'recommend'), 'obj'), (('accordingly', 'recommend'), 'advmod'), (('.', 'build'), 'punct')]

 Named Entities are: 
>> [('Netflix', 'ORG'), ('Amazon', 'ORG')]

========================== Sentence 21 ===========================

 Following are some key points which show the importance of Machine Learning: · Rapid increment in the production of data · Solving complex problems, which are difficult for a human · Decision making in various sector including finance · Finding hidden patterns and extracting useful information from data. 

Tokens are: 
>> ['Following', 'are', 'some', 'key', 'points', 'which', 'show', 'the', 'importance', 'of', 'Machine', 'Learning', ':', '·', 'Rapid', 'increment', 'in', 'the', 'production', 'of', 'data', '·', 'Solving', 'complex', 'problems', ',', 'which', 'are', 'difficult', 'for', 'a', 'human', '·', 'Decision', 'making', 'in', 'various', 'sector', 'including', 'finance', '·', 'Finding', 'hidden', 'patterns', 'and', 'extracting', 'useful', 'information', 'from', 'data', '.'] 

 UPOS tags are: 
>> [('Following', 'VERB'), ('are', 'VERB'), ('some', 'DET'), ('key', 'ADJ'), ('points', 'NOUN'), ('which', 'PRON'), ('show', 'VERB'), ('the', 'DET'), ('importance', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('Rapid', 'ADJ'), ('increment', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('production', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('·', 'PUNCT'), ('Solving', 'NOUN'), ('complex', 'ADJ'), ('problems', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('are', 'AUX'), ('difficult', 'ADJ'), ('for', 'ADP'), ('a', 'DET'), ('human', 'ADJ'), ('·', 'PUNCT'), ('Decision', 'NOUN'), ('making', 'VERB'), ('in', 'ADP'), ('various', 'ADJ'), ('sector', 'NOUN'), ('including', 'VERB'), ('finance', 'NOUN'), ('·', 'PUNCT'), ('Finding', 'VERB'), ('hidden', 'VERB'), ('patterns', 'NOUN'), ('and', 'CCONJ'), ('extracting', 'VERB'), ('useful', 'ADJ'), ('information', 'NOUN'), ('from', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Following', 'VBG'), ('are', 'VBP'), ('some', 'DT'), ('key', 'JJ'), ('points', 'NNS'), ('which', 'WDT'), ('show', 'VBP'), ('the', 'DT'), ('importance', 'NN'), ('of', 'IN'), ('Machine', 'NN'), ('Learning', 'NN'), (':', ':'), ('·', 'NFP'), ('Rapid', 'JJ'), ('increment', 'NN'), ('in', 'IN'), ('the', 'DT'), ('production', 'NN'), ('of', 'IN'), ('data', 'NN'), ('·', 'NFP'), ('Solving', 'NN'), ('complex', 'JJ'), ('problems', 'NNS'), (',', ','), ('which', 'WDT'), ('are', 'VBP'), ('difficult', 'JJ'), ('for', 'IN'), ('a', 'DT'), ('human', 'JJ'), ('·', 'HYPH'), ('Decision', 'NN'), ('making', 'VBG'), ('in', 'IN'), ('various', 'JJ'), ('sector', 'NN'), ('including', 'VBG'), ('finance', 'NN'), ('·', ','), ('Finding', 'VBG'), ('hidden', 'VBN'), ('patterns', 'NNS'), ('and', 'CC'), ('extracting', 'VBG'), ('useful', 'JJ'), ('information', 'NN'), ('from', 'IN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('Following', 'follow'), ('are', 'be'), ('some', 'some'), ('key', 'key'), ('points', 'point'), ('which', 'which'), ('show', 'show'), ('the', 'the'), ('importance', 'importance'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning'), (':', ':'), ('·', '·'), ('Rapid', 'rapid'), ('increment', 'increment'), ('in', 'in'), ('the', 'the'), ('production', 'production'), ('of', 'of'), ('data', 'datum'), ('·', '·'), ('Solving', 'solving'), ('complex', 'complex'), ('problems', 'problem'), (',', ','), ('which', 'which'), ('are', 'be'), ('difficult', 'difficult'), ('for', 'for'), ('a', 'a'), ('human', 'human'), ('·', '·'), ('Decision', 'decision'), ('making', 'make'), ('in', 'in'), ('various', 'various'), ('sector', 'sector'), ('including', 'include'), ('finance', 'finance'), ('·', '·'), ('Finding', 'find'), ('hidden', 'hide'), ('patterns', 'pattern'), ('and', 'and'), ('extracting', 'extract'), ('useful', 'useful'), ('information', 'information'), ('from', 'from'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('Following', 'are'), 'expl'), (('are', 'root'), 'root'), (('some', 'points'), 'det'), (('key', 'points'), 'amod'), (('points', 'are'), 'nsubj'), (('which', 'show'), 'nsubj'), (('show', 'points'), 'acl:relcl'), (('the', 'importance'), 'det'), (('importance', 'show'), 'obj'), (('of', 'Learning'), 'case'), (('Machine', 'Learning'), 'compound'), (('Learning', 'importance'), 'nmod'), ((':', 'increment'), 'punct'), (('·', 'increment'), 'punct'), (('Rapid', 'increment'), 'amod'), (('increment', 'importance'), 'appos'), (('in', 'production'), 'case'), (('the', 'production'), 'det'), (('production', 'increment'), 'nmod'), (('of', 'data'), 'case'), (('data', 'production'), 'nmod'), (('·', 'problems'), 'punct'), (('Solving', 'problems'), 'compound'), (('complex', 'problems'), 'amod'), (('problems', 'increment'), 'nmod'), ((',', 'difficult'), 'punct'), (('which', 'difficult'), 'nsubj'), (('are', 'difficult'), 'cop'), (('difficult', 'increment'), 'acl:relcl'), (('for', 'Decision'), 'case'), (('a', 'Decision'), 'det'), (('human', 'Decision'), 'amod'), (('·', 'Decision'), 'punct'), (('Decision', 'difficult'), 'obl'), (('making', 'difficult'), 'advcl'), (('in', 'sector'), 'case'), (('various', 'sector'), 'amod'), (('sector', 'making'), 'obl'), (('including', 'finance'), 'case'), (('finance', 'sector'), 'nmod'), (('·', 'increment'), 'punct'), (('Finding', 'making'), 'advcl'), (('hidden', 'patterns'), 'amod'), (('patterns', 'Finding'), 'obj'), (('and', 'extracting'), 'cc'), (('extracting', 'Finding'), 'conj'), (('useful', 'information'), 'amod'), (('information', 'extracting'), 'obj'), (('from', 'data'), 'case'), (('data', 'information'), 'nmod'), (('.', 'are'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 22 ===========================

 Classification of Machine Learning 

Tokens are: 
>> ['Classification', 'of', 'Machine', 'Learning'] 

 UPOS tags are: 
>> [('Classification', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'NOUN')] 

 XPOS tags are: 
>> [('Classification', 'NN'), ('of', 'IN'), ('Machine', 'NN'), ('Learning', 'NN')] 

 Lemmas are: 
>> [('Classification', 'classification'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning')] 

 Dependency tags are: 
>> [(('Classification', 'root'), 'root'), (('of', 'Learning'), 'case'), (('Machine', 'Learning'), 'compound'), (('Learning', 'Classification'), 'nmod')]

 Named Entities are: 
>> []

========================== Sentence 23 ===========================

 At a broad level, machine learning can be classified into three types: 1. Supervised learning 2. Unsupervised learning 3. Reinforcement learning  1) Supervised Learning Supervised learning is a type of machine learning method in which we provide sample labeled data to the machine learning system in order to train it, and on that basis, it predicts the output. 

Tokens are: 
>> ['At', 'a', 'broad', 'level', ',', 'machine', 'learning', 'can', 'be', 'classified', 'into', 'three', 'types', ':', '1', '.', 'Supervised', 'learning', '2', '.', 'Unsupervised', 'learning', '3', '.', 'Reinforcement', 'learning', '1', ')', 'Supervised', 'Learning', 'Supervised', 'learning', 'is', 'a', 'type', 'of', 'machine', 'learning', 'method', 'in', 'which', 'we', 'provide', 'sample', 'labeled', 'data', 'to', 'the', 'machine', 'learning', 'system', 'in', 'order', 'to', 'train', 'it', ',', 'and', 'on', 'that', 'basis', ',', 'it', 'predicts', 'the', 'output', '.'] 

 UPOS tags are: 
>> [('At', 'ADP'), ('a', 'DET'), ('broad', 'ADJ'), ('level', 'NOUN'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('classified', 'VERB'), ('into', 'ADP'), ('three', 'NUM'), ('types', 'NOUN'), (':', 'PUNCT'), ('1', 'NUM'), ('.', 'PUNCT'), ('Supervised', 'VERB'), ('learning', 'VERB'), ('2', 'NUM'), ('.', 'PUNCT'), ('Unsupervised', 'VERB'), ('learning', 'VERB'), ('3', 'NUM'), ('.', 'PUNCT'), ('Reinforcement', 'NOUN'), ('learning', 'VERB'), ('1', 'NUM'), (')', 'PUNCT'), ('Supervised', 'VERB'), ('Learning', 'NOUN'), ('Supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('type', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('method', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('we', 'PRON'), ('provide', 'VERB'), ('sample', 'NOUN'), ('labeled', 'VERB'), ('data', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('system', 'NOUN'), ('in', 'ADP'), ('order', 'NOUN'), ('to', 'PART'), ('train', 'VERB'), ('it', 'PRON'), (',', 'PUNCT'), ('and', 'CCONJ'), ('on', 'ADP'), ('that', 'DET'), ('basis', 'NOUN'), (',', 'PUNCT'), ('it', 'PRON'), ('predicts', 'VERB'), ('the', 'DET'), ('output', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('At', 'IN'), ('a', 'DT'), ('broad', 'JJ'), ('level', 'NN'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('can', 'MD'), ('be', 'VB'), ('classified', 'VBN'), ('into', 'IN'), ('three', 'CD'), ('types', 'NNS'), (':', ':'), ('1', 'LS'), ('.', '.'), ('Supervised', 'VBN'), ('learning', 'VBG'), ('2', 'LS'), ('.', '.'), ('Unsupervised', 'VBN'), ('learning', 'VBG'), ('3', 'LS'), ('.', '.'), ('Reinforcement', 'NN'), ('learning', 'VBG'), ('1', 'LS'), (')', '-RRB-'), ('Supervised', 'VBN'), ('Learning', 'NN'), ('Supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('type', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('method', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('we', 'PRP'), ('provide', 'VBP'), ('sample', 'NN'), ('labeled', 'VBN'), ('data', 'NNS'), ('to', 'IN'), ('the', 'DT'), ('machine', 'NN'), ('learning', 'NN'), ('system', 'NN'), ('in', 'IN'), ('order', 'NN'), ('to', 'TO'), ('train', 'VB'), ('it', 'PRP'), (',', ','), ('and', 'CC'), ('on', 'IN'), ('that', 'DT'), ('basis', 'NN'), (',', ','), ('it', 'PRP'), ('predicts', 'VBZ'), ('the', 'DT'), ('output', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('At', 'at'), ('a', 'a'), ('broad', 'broad'), ('level', 'level'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('can', 'can'), ('be', 'be'), ('classified', 'classify'), ('into', 'into'), ('three', 'three'), ('types', 'type'), (':', ':'), ('1', '1'), ('.', '.'), ('Supervised', 'supervise'), ('learning', 'learn'), ('2', '2'), ('.', '.'), ('Unsupervised', 'unsupervise'), ('learning', 'learn'), ('3', '3'), ('.', '.'), ('Reinforcement', 'reinforcement'), ('learning', 'learn'), ('1', '1'), (')', ')'), ('Supervised', 'supervise'), ('Learning', 'learning'), ('Supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('type', 'type'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), ('method', 'method'), ('in', 'in'), ('which', 'which'), ('we', 'we'), ('provide', 'provide'), ('sample', 'sample'), ('labeled', 'label'), ('data', 'datum'), ('to', 'to'), ('the', 'the'), ('machine', 'machine'), ('learning', 'learning'), ('system', 'system'), ('in', 'in'), ('order', 'order'), ('to', 'to'), ('train', 'train'), ('it', 'it'), (',', ','), ('and', 'and'), ('on', 'on'), ('that', 'that'), ('basis', 'basis'), (',', ','), ('it', 'it'), ('predicts', 'predict'), ('the', 'the'), ('output', 'output'), ('.', '.')] 

 Dependency tags are: 
>> [(('At', 'level'), 'case'), (('a', 'level'), 'det'), (('broad', 'level'), 'amod'), (('level', 'classified'), 'obl'), ((',', 'classified'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'classified'), 'nsubj:pass'), (('can', 'classified'), 'aux'), (('be', 'classified'), 'aux:pass'), (('classified', 'root'), 'root'), (('into', 'types'), 'case'), (('three', 'types'), 'nummod'), (('types', 'classified'), 'obl'), ((':', 'classified'), 'punct'), (('1', 'type'), 'nummod'), (('.', '1'), 'punct'), (('Supervised', 'learning'), 'amod'), (('learning', 'classified'), 'advcl'), (('2', 'Unsupervised'), 'nummod'), (('.', '2'), 'punct'), (('Unsupervised', 'learning'), 'amod'), (('learning', 'type'), 'advcl'), (('3', 'learning'), 'nummod'), (('.', '3'), 'punct'), (('Reinforcement', 'type'), 'nsubj'), (('learning', 'Reinforcement'), 'acl'), (('1', 'learning'), 'nummod'), ((')', '1'), 'punct'), (('Supervised', 'learning'), 'amod'), (('Learning', 'learning'), 'compound'), (('Supervised', 'learning'), 'amod'), (('learning', 'type'), 'nsubj'), (('is', 'type'), 'cop'), (('a', 'type'), 'det'), (('type', 'classified'), 'parataxis'), (('of', 'method'), 'case'), (('machine', 'method'), 'compound'), (('learning', 'method'), 'compound'), (('method', 'type'), 'nmod'), (('in', 'which'), 'case'), (('which', 'provide'), 'obl'), (('we', 'provide'), 'nsubj'), (('provide', 'method'), 'acl:relcl'), (('sample', 'data'), 'compound'), (('labeled', 'data'), 'amod'), (('data', 'provide'), 'obj'), (('to', 'system'), 'case'), (('the', 'system'), 'det'), (('machine', 'system'), 'compound'), (('learning', 'system'), 'compound'), (('system', 'data'), 'nmod'), (('in', 'train'), 'mark'), (('order', 'in'), 'fixed'), (('to', 'train'), 'mark'), (('train', 'provide'), 'advcl'), (('it', 'train'), 'obj'), ((',', 'predicts'), 'punct'), (('and', 'predicts'), 'cc'), (('on', 'basis'), 'case'), (('that', 'basis'), 'det'), (('basis', 'predicts'), 'obl'), ((',', 'predicts'), 'punct'), (('it', 'predicts'), 'nsubj'), (('predicts', 'classified'), 'conj'), (('the', 'output'), 'det'), (('output', 'predicts'), 'obj'), (('.', 'classified'), 'punct')]

 Named Entities are: 
>> [('three', 'CARDINAL'), ('1', 'CARDINAL'), ('2', 'CARDINAL'), ('3', 'CARDINAL'), ('1', 'CARDINAL')]

========================== Sentence 24 ===========================

 The system creates a model using labeled data to understand the datasets and learn about each data, once the training and processing are done then we test the model by providing a sample data to check whether it is predicting the exact output or not. 

Tokens are: 
>> ['The', 'system', 'creates', 'a', 'model', 'using', 'labeled', 'data', 'to', 'understand', 'the', 'datasets', 'and', 'learn', 'about', 'each', 'data', ',', 'once', 'the', 'training', 'and', 'processing', 'are', 'done', 'then', 'we', 'test', 'the', 'model', 'by', 'providing', 'a', 'sample', 'data', 'to', 'check', 'whether', 'it', 'is', 'predicting', 'the', 'exact', 'output', 'or', 'not', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('system', 'NOUN'), ('creates', 'VERB'), ('a', 'DET'), ('model', 'NOUN'), ('using', 'VERB'), ('labeled', 'VERB'), ('data', 'NOUN'), ('to', 'PART'), ('understand', 'VERB'), ('the', 'DET'), ('datasets', 'NOUN'), ('and', 'CCONJ'), ('learn', 'VERB'), ('about', 'ADP'), ('each', 'DET'), ('data', 'NOUN'), (',', 'PUNCT'), ('once', 'SCONJ'), ('the', 'DET'), ('training', 'NOUN'), ('and', 'CCONJ'), ('processing', 'NOUN'), ('are', 'AUX'), ('done', 'VERB'), ('then', 'ADV'), ('we', 'PRON'), ('test', 'VERB'), ('the', 'DET'), ('model', 'NOUN'), ('by', 'SCONJ'), ('providing', 'VERB'), ('a', 'DET'), ('sample', 'NOUN'), ('data', 'NOUN'), ('to', 'PART'), ('check', 'VERB'), ('whether', 'SCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('predicting', 'VERB'), ('the', 'DET'), ('exact', 'ADJ'), ('output', 'NOUN'), ('or', 'CCONJ'), ('not', 'PART'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('system', 'NN'), ('creates', 'VBZ'), ('a', 'DT'), ('model', 'NN'), ('using', 'VBG'), ('labeled', 'VBN'), ('data', 'NNS'), ('to', 'TO'), ('understand', 'VB'), ('the', 'DT'), ('datasets', 'NNS'), ('and', 'CC'), ('learn', 'VB'), ('about', 'IN'), ('each', 'DT'), ('data', 'NNS'), (',', ','), ('once', 'IN'), ('the', 'DT'), ('training', 'NN'), ('and', 'CC'), ('processing', 'NN'), ('are', 'VBP'), ('done', 'VBN'), ('then', 'RB'), ('we', 'PRP'), ('test', 'VBP'), ('the', 'DT'), ('model', 'NN'), ('by', 'IN'), ('providing', 'VBG'), ('a', 'DT'), ('sample', 'NN'), ('data', 'NN'), ('to', 'TO'), ('check', 'VB'), ('whether', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('predicting', 'VBG'), ('the', 'DT'), ('exact', 'JJ'), ('output', 'NN'), ('or', 'CC'), ('not', 'RB'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('system', 'system'), ('creates', 'create'), ('a', 'a'), ('model', 'model'), ('using', 'use'), ('labeled', 'label'), ('data', 'datum'), ('to', 'to'), ('understand', 'understand'), ('the', 'the'), ('datasets', 'dataset'), ('and', 'and'), ('learn', 'learn'), ('about', 'about'), ('each', 'each'), ('data', 'datum'), (',', ','), ('once', 'once'), ('the', 'the'), ('training', 'training'), ('and', 'and'), ('processing', 'processing'), ('are', 'be'), ('done', 'do'), ('then', 'then'), ('we', 'we'), ('test', 'test'), ('the', 'the'), ('model', 'model'), ('by', 'by'), ('providing', 'provide'), ('a', 'a'), ('sample', 'sample'), ('data', 'datum'), ('to', 'to'), ('check', 'check'), ('whether', 'whether'), ('it', 'it'), ('is', 'be'), ('predicting', 'predict'), ('the', 'the'), ('exact', 'exact'), ('output', 'output'), ('or', 'or'), ('not', 'not'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'system'), 'det'), (('system', 'creates'), 'nsubj'), (('creates', 'root'), 'root'), (('a', 'model'), 'det'), (('model', 'creates'), 'obj'), (('using', 'model'), 'acl'), (('labeled', 'data'), 'amod'), (('data', 'using'), 'obj'), (('to', 'understand'), 'mark'), (('understand', 'using'), 'advcl'), (('the', 'datasets'), 'det'), (('datasets', 'understand'), 'obj'), (('and', 'learn'), 'cc'), (('learn', 'understand'), 'conj'), (('about', 'data'), 'case'), (('each', 'data'), 'det'), (('data', 'learn'), 'obl'), ((',', 'test'), 'punct'), (('once', 'done'), 'mark'), (('the', 'training'), 'det'), (('training', 'done'), 'nsubj:pass'), (('and', 'processing'), 'cc'), (('processing', 'training'), 'conj'), (('are', 'done'), 'aux:pass'), (('done', 'test'), 'advcl'), (('then', 'test'), 'advmod'), (('we', 'test'), 'nsubj'), (('test', 'creates'), 'conj'), (('the', 'model'), 'det'), (('model', 'test'), 'obj'), (('by', 'providing'), 'mark'), (('providing', 'test'), 'advcl'), (('a', 'data'), 'det'), (('sample', 'data'), 'compound'), (('data', 'providing'), 'obj'), (('to', 'check'), 'mark'), (('check', 'providing'), 'advcl'), (('whether', 'predicting'), 'mark'), (('it', 'predicting'), 'nsubj'), (('is', 'predicting'), 'aux'), (('predicting', 'check'), 'ccomp'), (('the', 'output'), 'det'), (('exact', 'output'), 'amod'), (('output', 'predicting'), 'obj'), (('or', 'not'), 'cc'), (('not', 'output'), 'conj'), (('.', 'creates'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 25 ===========================

 The goal of supervised learning is to map input data with the output data. 

Tokens are: 
>> ['The', 'goal', 'of', 'supervised', 'learning', 'is', 'to', 'map', 'input', 'data', 'with', 'the', 'output', 'data', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('of', 'ADP'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('map', 'VERB'), ('input', 'NOUN'), ('data', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('output', 'NOUN'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('of', 'IN'), ('supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('map', 'VB'), ('input', 'NN'), ('data', 'NNS'), ('with', 'IN'), ('the', 'DT'), ('output', 'NN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('of', 'of'), ('supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('to', 'to'), ('map', 'map'), ('input', 'input'), ('data', 'datum'), ('with', 'with'), ('the', 'the'), ('output', 'output'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'map'), 'nsubj'), (('of', 'learning'), 'case'), (('supervised', 'learning'), 'amod'), (('learning', 'goal'), 'nmod'), (('is', 'map'), 'cop'), (('to', 'map'), 'mark'), (('map', 'root'), 'root'), (('input', 'data'), 'compound'), (('data', 'map'), 'obj'), (('with', 'data'), 'case'), (('the', 'data'), 'det'), (('output', 'data'), 'compound'), (('data', 'map'), 'obl'), (('.', 'map'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 26 ===========================

 The supervised learning is based on supervision, and it is the same as when a student learns things in the supervision of the teacher. 

Tokens are: 
>> ['The', 'supervised', 'learning', 'is', 'based', 'on', 'supervision', ',', 'and', 'it', 'is', 'the', 'same', 'as', 'when', 'a', 'student', 'learns', 'things', 'in', 'the', 'supervision', 'of', 'the', 'teacher', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('based', 'VERB'), ('on', 'ADP'), ('supervision', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('same', 'ADJ'), ('as', 'SCONJ'), ('when', 'SCONJ'), ('a', 'DET'), ('student', 'NOUN'), ('learns', 'VERB'), ('things', 'NOUN'), ('in', 'ADP'), ('the', 'DET'), ('supervision', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('teacher', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('based', 'VBN'), ('on', 'IN'), ('supervision', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('same', 'JJ'), ('as', 'IN'), ('when', 'WRB'), ('a', 'DT'), ('student', 'NN'), ('learns', 'VBZ'), ('things', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('supervision', 'NN'), ('of', 'IN'), ('the', 'DT'), ('teacher', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('based', 'base'), ('on', 'on'), ('supervision', 'supervision'), (',', ','), ('and', 'and'), ('it', 'it'), ('is', 'be'), ('the', 'the'), ('same', 'same'), ('as', 'as'), ('when', 'when'), ('a', 'a'), ('student', 'student'), ('learns', 'learn'), ('things', 'thing'), ('in', 'in'), ('the', 'the'), ('supervision', 'supervision'), ('of', 'of'), ('the', 'the'), ('teacher', 'teacher'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'learning'), 'det'), (('supervised', 'learning'), 'amod'), (('learning', 'based'), 'nsubj:pass'), (('is', 'based'), 'aux:pass'), (('based', 'root'), 'root'), (('on', 'supervision'), 'case'), (('supervision', 'based'), 'obl'), ((',', 'same'), 'punct'), (('and', 'same'), 'cc'), (('it', 'same'), 'nsubj'), (('is', 'same'), 'cop'), (('the', 'same'), 'det'), (('same', 'based'), 'conj'), (('as', 'learns'), 'mark'), (('when', 'learns'), 'mark'), (('a', 'student'), 'det'), (('student', 'learns'), 'nsubj'), (('learns', 'same'), 'advcl'), (('things', 'learns'), 'obj'), (('in', 'supervision'), 'case'), (('the', 'supervision'), 'det'), (('supervision', 'learns'), 'obl'), (('of', 'teacher'), 'case'), (('the', 'teacher'), 'det'), (('teacher', 'supervision'), 'nmod'), (('.', 'based'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 27 ===========================

 The example of supervised learning is spam filtering. 

Tokens are: 
>> ['The', 'example', 'of', 'supervised', 'learning', 'is', 'spam', 'filtering', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('example', 'NOUN'), ('of', 'ADP'), ('supervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('spam', 'NOUN'), ('filtering', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('example', 'NN'), ('of', 'IN'), ('supervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('spam', 'NN'), ('filtering', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('example', 'example'), ('of', 'of'), ('supervised', 'supervise'), ('learning', 'learning'), ('is', 'be'), ('spam', 'spam'), ('filtering', 'filter'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'example'), 'det'), (('example', 'filtering'), 'nsubj'), (('of', 'learning'), 'case'), (('supervised', 'learning'), 'amod'), (('learning', 'example'), 'nmod'), (('is', 'filtering'), 'cop'), (('spam', 'filtering'), 'compound'), (('filtering', 'root'), 'root'), (('.', 'filtering'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 28 ===========================

 Supervised learning can be grouped further in two categories of algorithms: · Classification · Regression 2) Unsupervised Learning Unsupervised learning is a learning method in which a machine learns without any supervision. 

Tokens are: 
>> ['Supervised', 'learning', 'can', 'be', 'grouped', 'further', 'in', 'two', 'categories', 'of', 'algorithms', ':', '·', 'Classification', '·', 'Regression', '2', ')', 'Unsupervised', 'Learning', 'Unsupervised', 'learning', 'is', 'a', 'learning', 'method', 'in', 'which', 'a', 'machine', 'learns', 'without', 'any', 'supervision', '.'] 

 UPOS tags are: 
>> [('Supervised', 'VERB'), ('learning', 'NOUN'), ('can', 'AUX'), ('be', 'AUX'), ('grouped', 'VERB'), ('further', 'ADV'), ('in', 'ADP'), ('two', 'NUM'), ('categories', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('Classification', 'NOUN'), ('·', 'PUNCT'), ('Regression', 'NOUN'), ('2', 'NUM'), (')', 'PUNCT'), ('Unsupervised', 'VERB'), ('Learning', 'NOUN'), ('Unsupervised', 'VERB'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('learning', 'NOUN'), ('method', 'NOUN'), ('in', 'ADP'), ('which', 'PRON'), ('a', 'DET'), ('machine', 'NOUN'), ('learns', 'VERB'), ('without', 'ADP'), ('any', 'DET'), ('supervision', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Supervised', 'VBN'), ('learning', 'NN'), ('can', 'MD'), ('be', 'VB'), ('grouped', 'VBN'), ('further', 'RB'), ('in', 'IN'), ('two', 'CD'), ('categories', 'NNS'), ('of', 'IN'), ('algorithms', 'NNS'), (':', ':'), ('·', 'NFP'), ('Classification', 'NN'), ('·', 'NFP'), ('Regression', 'NN'), ('2', 'CD'), (')', '-RRB-'), ('Unsupervised', 'VBN'), ('Learning', 'NN'), ('Unsupervised', 'VBN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('learning', 'NN'), ('method', 'NN'), ('in', 'IN'), ('which', 'WDT'), ('a', 'DT'), ('machine', 'NN'), ('learns', 'VBZ'), ('without', 'IN'), ('any', 'DT'), ('supervision', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Supervised', 'supervise'), ('learning', 'learning'), ('can', 'can'), ('be', 'be'), ('grouped', 'group'), ('further', 'further'), ('in', 'in'), ('two', 'two'), ('categories', 'category'), ('of', 'of'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Classification', 'classification'), ('·', '·'), ('Regression', 'regression'), ('2', '2'), (')', ')'), ('Unsupervised', 'unsupervise'), ('Learning', 'learning'), ('Unsupervised', 'unsupervise'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('learning', 'learning'), ('method', 'method'), ('in', 'in'), ('which', 'which'), ('a', 'a'), ('machine', 'machine'), ('learns', 'learn'), ('without', 'without'), ('any', 'any'), ('supervision', 'supervision'), ('.', '.')] 

 Dependency tags are: 
>> [(('Supervised', 'learning'), 'amod'), (('learning', 'grouped'), 'nsubj:pass'), (('can', 'grouped'), 'aux'), (('be', 'grouped'), 'aux:pass'), (('grouped', 'root'), 'root'), (('further', 'grouped'), 'advmod'), (('in', 'categories'), 'case'), (('two', 'categories'), 'nummod'), (('categories', 'grouped'), 'obl'), (('of', 'algorithms'), 'case'), (('algorithms', 'categories'), 'nmod'), ((':', 'method'), 'punct'), (('·', 'Classification'), 'punct'), (('Classification', 'method'), 'nsubj'), (('·', 'Classification'), 'punct'), (('Regression', 'Classification'), 'appos'), (('2', 'Regression'), 'dep'), ((')', 'Classification'), 'punct'), (('Unsupervised', 'learning'), 'amod'), (('Learning', 'learning'), 'compound'), (('Unsupervised', 'learning'), 'amod'), (('learning', 'method'), 'nsubj'), (('is', 'method'), 'cop'), (('a', 'method'), 'det'), (('learning', 'method'), 'compound'), (('method', 'grouped'), 'parataxis'), (('in', 'which'), 'case'), (('which', 'learns'), 'obl'), (('a', 'machine'), 'det'), (('machine', 'learns'), 'nsubj'), (('learns', 'method'), 'acl:relcl'), (('without', 'supervision'), 'case'), (('any', 'supervision'), 'det'), (('supervision', 'learns'), 'obl'), (('.', 'grouped'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('2', 'CARDINAL')]

========================== Sentence 29 ===========================

 The training is provided to the machine with the set of data that has not been labeled, classified, or categorized, and the algorithm needs to act on that data without any supervision. 

Tokens are: 
>> ['The', 'training', 'is', 'provided', 'to', 'the', 'machine', 'with', 'the', 'set', 'of', 'data', 'that', 'has', 'not', 'been', 'labeled', ',', 'classified', ',', 'or', 'categorized', ',', 'and', 'the', 'algorithm', 'needs', 'to', 'act', 'on', 'that', 'data', 'without', 'any', 'supervision', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('training', 'NOUN'), ('is', 'AUX'), ('provided', 'VERB'), ('to', 'ADP'), ('the', 'DET'), ('machine', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('that', 'PRON'), ('has', 'AUX'), ('not', 'PART'), ('been', 'AUX'), ('labeled', 'VERB'), (',', 'PUNCT'), ('classified', 'VERB'), (',', 'PUNCT'), ('or', 'CCONJ'), ('categorized', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('the', 'DET'), ('algorithm', 'NOUN'), ('needs', 'VERB'), ('to', 'PART'), ('act', 'VERB'), ('on', 'ADP'), ('that', 'DET'), ('data', 'NOUN'), ('without', 'ADP'), ('any', 'DET'), ('supervision', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('training', 'NN'), ('is', 'VBZ'), ('provided', 'VBN'), ('to', 'IN'), ('the', 'DT'), ('machine', 'NN'), ('with', 'IN'), ('the', 'DT'), ('set', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('that', 'WDT'), ('has', 'VBZ'), ('not', 'RB'), ('been', 'VBN'), ('labeled', 'VBN'), (',', ','), ('classified', 'VBN'), (',', ','), ('or', 'CC'), ('categorized', 'VBN'), (',', ','), ('and', 'CC'), ('the', 'DT'), ('algorithm', 'NN'), ('needs', 'VBZ'), ('to', 'TO'), ('act', 'VB'), ('on', 'IN'), ('that', 'DT'), ('data', 'NNS'), ('without', 'IN'), ('any', 'DT'), ('supervision', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('training', 'training'), ('is', 'be'), ('provided', 'provide'), ('to', 'to'), ('the', 'the'), ('machine', 'machine'), ('with', 'with'), ('the', 'the'), ('set', 'set'), ('of', 'of'), ('data', 'datum'), ('that', 'that'), ('has', 'have'), ('not', 'not'), ('been', 'be'), ('labeled', 'label'), (',', ','), ('classified', 'classify'), (',', ','), ('or', 'or'), ('categorized', 'categorize'), (',', ','), ('and', 'and'), ('the', 'the'), ('algorithm', 'algorithm'), ('needs', 'need'), ('to', 'to'), ('act', 'act'), ('on', 'on'), ('that', 'that'), ('data', 'datum'), ('without', 'without'), ('any', 'any'), ('supervision', 'supervision'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'training'), 'det'), (('training', 'provided'), 'nsubj:pass'), (('is', 'provided'), 'aux:pass'), (('provided', 'root'), 'root'), (('to', 'machine'), 'case'), (('the', 'machine'), 'det'), (('machine', 'provided'), 'obl'), (('with', 'set'), 'case'), (('the', 'set'), 'det'), (('set', 'machine'), 'nmod'), (('of', 'data'), 'case'), (('data', 'set'), 'nmod'), (('that', 'labeled'), 'nsubj:pass'), (('has', 'labeled'), 'aux'), (('not', 'labeled'), 'advmod'), (('been', 'labeled'), 'aux:pass'), (('labeled', 'set'), 'acl:relcl'), ((',', 'classified'), 'punct'), (('classified', 'labeled'), 'conj'), ((',', 'categorized'), 'punct'), (('or', 'categorized'), 'cc'), (('categorized', 'labeled'), 'conj'), ((',', 'needs'), 'punct'), (('and', 'needs'), 'cc'), (('the', 'algorithm'), 'det'), (('algorithm', 'needs'), 'nsubj'), (('needs', 'provided'), 'conj'), (('to', 'act'), 'mark'), (('act', 'needs'), 'xcomp'), (('on', 'data'), 'case'), (('that', 'data'), 'det'), (('data', 'act'), 'obl'), (('without', 'supervision'), 'case'), (('any', 'supervision'), 'det'), (('supervision', 'act'), 'obl'), (('.', 'provided'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 30 ===========================

 The goal of unsupervised learning is to restructure the input data into new features or a group of objects with similar patterns. 

Tokens are: 
>> ['The', 'goal', 'of', 'unsupervised', 'learning', 'is', 'to', 'restructure', 'the', 'input', 'data', 'into', 'new', 'features', 'or', 'a', 'group', 'of', 'objects', 'with', 'similar', 'patterns', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('of', 'ADP'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('restructure', 'VERB'), ('the', 'DET'), ('input', 'NOUN'), ('data', 'NOUN'), ('into', 'ADP'), ('new', 'ADJ'), ('features', 'NOUN'), ('or', 'CCONJ'), ('a', 'DET'), ('group', 'NOUN'), ('of', 'ADP'), ('objects', 'NOUN'), ('with', 'ADP'), ('similar', 'ADJ'), ('patterns', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('of', 'IN'), ('unsupervised', 'JJ'), ('learning', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('restructure', 'VB'), ('the', 'DT'), ('input', 'NN'), ('data', 'NNS'), ('into', 'IN'), ('new', 'JJ'), ('features', 'NNS'), ('or', 'CC'), ('a', 'DT'), ('group', 'NN'), ('of', 'IN'), ('objects', 'NNS'), ('with', 'IN'), ('similar', 'JJ'), ('patterns', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('of', 'of'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), ('is', 'be'), ('to', 'to'), ('restructure', 'restructure'), ('the', 'the'), ('input', 'input'), ('data', 'datum'), ('into', 'into'), ('new', 'new'), ('features', 'feature'), ('or', 'or'), ('a', 'a'), ('group', 'group'), ('of', 'of'), ('objects', 'object'), ('with', 'with'), ('similar', 'similar'), ('patterns', 'pattern'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'restructure'), 'nsubj'), (('of', 'learning'), 'case'), (('unsupervised', 'learning'), 'amod'), (('learning', 'goal'), 'nmod'), (('is', 'restructure'), 'cop'), (('to', 'restructure'), 'mark'), (('restructure', 'root'), 'root'), (('the', 'data'), 'det'), (('input', 'data'), 'compound'), (('data', 'restructure'), 'obj'), (('into', 'features'), 'case'), (('new', 'features'), 'amod'), (('features', 'restructure'), 'obl'), (('or', 'group'), 'cc'), (('a', 'group'), 'det'), (('group', 'features'), 'conj'), (('of', 'objects'), 'case'), (('objects', 'group'), 'nmod'), (('with', 'patterns'), 'case'), (('similar', 'patterns'), 'amod'), (('patterns', 'objects'), 'nmod'), (('.', 'restructure'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 31 ===========================

 In unsupervised learning, we don't have a predetermined result. 

Tokens are: 
>> ['In', 'unsupervised', 'learning', ',', 'we', 'do', "n't", 'have', 'a', 'predetermined', 'result', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('unsupervised', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('we', 'PRON'), ('do', 'AUX'), ("n't", 'PART'), ('have', 'VERB'), ('a', 'DET'), ('predetermined', 'VERB'), ('result', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('unsupervised', 'JJ'), ('learning', 'NN'), (',', ','), ('we', 'PRP'), ('do', 'VBP'), ("n't", 'RB'), ('have', 'VB'), ('a', 'DT'), ('predetermined', 'VBN'), ('result', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('unsupervised', 'unsupervised'), ('learning', 'learning'), (',', ','), ('we', 'we'), ('do', 'do'), ("n't", 'not'), ('have', 'have'), ('a', 'a'), ('predetermined', 'predetermine'), ('result', 'result'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'learning'), 'case'), (('unsupervised', 'learning'), 'amod'), (('learning', 'have'), 'obl'), ((',', 'have'), 'punct'), (('we', 'have'), 'nsubj'), (('do', 'have'), 'aux'), (("n't", 'have'), 'advmod'), (('have', 'root'), 'root'), (('a', 'result'), 'det'), (('predetermined', 'result'), 'amod'), (('result', 'have'), 'obj'), (('.', 'have'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 32 ===========================

 The machine tries to find useful insights from the huge amount of data. 

Tokens are: 
>> ['The', 'machine', 'tries', 'to', 'find', 'useful', 'insights', 'from', 'the', 'huge', 'amount', 'of', 'data', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('machine', 'NOUN'), ('tries', 'VERB'), ('to', 'PART'), ('find', 'VERB'), ('useful', 'ADJ'), ('insights', 'NOUN'), ('from', 'ADP'), ('the', 'DET'), ('huge', 'ADJ'), ('amount', 'NOUN'), ('of', 'ADP'), ('data', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('machine', 'NN'), ('tries', 'VBZ'), ('to', 'TO'), ('find', 'VB'), ('useful', 'JJ'), ('insights', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('huge', 'JJ'), ('amount', 'NN'), ('of', 'IN'), ('data', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('machine', 'machine'), ('tries', 'try'), ('to', 'to'), ('find', 'find'), ('useful', 'useful'), ('insights', 'insight'), ('from', 'from'), ('the', 'the'), ('huge', 'huge'), ('amount', 'amount'), ('of', 'of'), ('data', 'datum'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'machine'), 'det'), (('machine', 'tries'), 'nsubj'), (('tries', 'root'), 'root'), (('to', 'find'), 'mark'), (('find', 'tries'), 'xcomp'), (('useful', 'insights'), 'amod'), (('insights', 'find'), 'obj'), (('from', 'amount'), 'case'), (('the', 'amount'), 'det'), (('huge', 'amount'), 'amod'), (('amount', 'insights'), 'nmod'), (('of', 'data'), 'case'), (('data', 'amount'), 'nmod'), (('.', 'tries'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 33 ===========================

 It can be further classifieds into two categories of algorithms: · Clustering · Association 3) Reinforcement Learning Reinforcement learning is a feedback-based learning method, in which a learning agent gets a reward for each right action and gets a penalty for each wrong action. 

Tokens are: 
>> ['It', 'can', 'be', 'further', 'classifieds', 'into', 'two', 'categories', 'of', 'algorithms', ':', '·', 'Clustering', '·', 'Association', '3', ')', 'Reinforcement', 'Learning', 'Reinforcement', 'learning', 'is', 'a', 'feedback', '-', 'based', 'learning', 'method', ',', 'in', 'which', 'a', 'learning', 'agent', 'gets', 'a', 'reward', 'for', 'each', 'right', 'action', 'and', 'gets', 'a', 'penalty', 'for', 'each', 'wrong', 'action', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('can', 'AUX'), ('be', 'AUX'), ('further', 'ADJ'), ('classifieds', 'NOUN'), ('into', 'ADP'), ('two', 'NUM'), ('categories', 'NOUN'), ('of', 'ADP'), ('algorithms', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('Clustering', 'NOUN'), ('·', 'PUNCT'), ('Association', 'NOUN'), ('3', 'NUM'), (')', 'PUNCT'), ('Reinforcement', 'NOUN'), ('Learning', 'NOUN'), ('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('a', 'DET'), ('feedback', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('learning', 'NOUN'), ('method', 'NOUN'), (',', 'PUNCT'), ('in', 'ADP'), ('which', 'PRON'), ('a', 'DET'), ('learning', 'NOUN'), ('agent', 'NOUN'), ('gets', 'VERB'), ('a', 'DET'), ('reward', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('right', 'ADJ'), ('action', 'NOUN'), ('and', 'CCONJ'), ('gets', 'VERB'), ('a', 'DET'), ('penalty', 'NOUN'), ('for', 'ADP'), ('each', 'DET'), ('wrong', 'ADJ'), ('action', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('further', 'JJ'), ('classifieds', 'NNS'), ('into', 'IN'), ('two', 'CD'), ('categories', 'NNS'), ('of', 'IN'), ('algorithms', 'NNS'), (':', ':'), ('·', 'NFP'), ('Clustering', 'NN'), ('·', 'NFP'), ('Association', 'NN'), ('3', 'LS'), (')', '-RRB-'), ('Reinforcement', 'NN'), ('Learning', 'NN'), ('Reinforcement', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('feedback', 'NN'), ('-', 'HYPH'), ('based', 'VBN'), ('learning', 'NN'), ('method', 'NN'), (',', ','), ('in', 'IN'), ('which', 'WDT'), ('a', 'DT'), ('learning', 'NN'), ('agent', 'NN'), ('gets', 'VBZ'), ('a', 'DT'), ('reward', 'NN'), ('for', 'IN'), ('each', 'DT'), ('right', 'JJ'), ('action', 'NN'), ('and', 'CC'), ('gets', 'VBZ'), ('a', 'DT'), ('penalty', 'NN'), ('for', 'IN'), ('each', 'DT'), ('wrong', 'JJ'), ('action', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('can', 'can'), ('be', 'be'), ('further', 'further'), ('classifieds', 'classifieds'), ('into', 'into'), ('two', 'two'), ('categories', 'category'), ('of', 'of'), ('algorithms', 'algorithm'), (':', ':'), ('·', '·'), ('Clustering', 'clustering'), ('·', '·'), ('Association', 'association'), ('3', '3'), (')', ')'), ('Reinforcement', 'reinforcement'), ('Learning', 'learning'), ('Reinforcement', 'reinforcement'), ('learning', 'learning'), ('is', 'be'), ('a', 'a'), ('feedback', 'feedback'), ('-', '-'), ('based', 'base'), ('learning', 'learning'), ('method', 'method'), (',', ','), ('in', 'in'), ('which', 'which'), ('a', 'a'), ('learning', 'learning'), ('agent', 'agent'), ('gets', 'get'), ('a', 'a'), ('reward', 'reward'), ('for', 'for'), ('each', 'each'), ('right', 'right'), ('action', 'action'), ('and', 'and'), ('gets', 'get'), ('a', 'a'), ('penalty', 'penalty'), ('for', 'for'), ('each', 'each'), ('wrong', 'wrong'), ('action', 'action'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'classifieds'), 'nsubj'), (('can', 'classifieds'), 'aux'), (('be', 'classifieds'), 'cop'), (('further', 'classifieds'), 'amod'), (('classifieds', 'root'), 'root'), (('into', 'categories'), 'case'), (('two', 'categories'), 'nummod'), (('categories', 'classifieds'), 'nmod'), (('of', 'algorithms'), 'case'), (('algorithms', 'categories'), 'nmod'), ((':', 'classifieds'), 'punct'), (('·', 'Clustering'), 'punct'), (('Clustering', 'method'), 'nsubj'), (('·', 'Clustering'), 'punct'), (('Association', 'Clustering'), 'appos'), (('3', 'method'), 'nummod'), ((')', '3'), 'punct'), (('Reinforcement', 'learning'), 'compound'), (('Learning', 'learning'), 'compound'), (('Reinforcement', 'learning'), 'compound'), (('learning', 'method'), 'nsubj'), (('is', 'method'), 'cop'), (('a', 'method'), 'det'), (('feedback', 'based'), 'compound'), (('-', 'based'), 'punct'), (('based', 'method'), 'amod'), (('learning', 'method'), 'compound'), (('method', 'classifieds'), 'parataxis'), ((',', 'method'), 'punct'), (('in', 'which'), 'case'), (('which', 'gets'), 'obl'), (('a', 'agent'), 'det'), (('learning', 'agent'), 'compound'), (('agent', 'gets'), 'nsubj'), (('gets', 'method'), 'acl:relcl'), (('a', 'reward'), 'det'), (('reward', 'gets'), 'obj'), (('for', 'action'), 'case'), (('each', 'action'), 'det'), (('right', 'action'), 'amod'), (('action', 'reward'), 'nmod'), (('and', 'gets'), 'cc'), (('gets', 'gets'), 'conj'), (('a', 'penalty'), 'det'), (('penalty', 'gets'), 'obj'), (('for', 'action'), 'case'), (('each', 'action'), 'det'), (('wrong', 'action'), 'amod'), (('action', 'penalty'), 'nmod'), (('.', 'classifieds'), 'punct')]

 Named Entities are: 
>> [('two', 'CARDINAL'), ('· Clustering · Association 3) Reinforcement Learning Reinforcement', 'LAW')]

========================== Sentence 34 ===========================

 The agent learns automatically with these feedbacks and improves its performance. 

Tokens are: 
>> ['The', 'agent', 'learns', 'automatically', 'with', 'these', 'feedbacks', 'and', 'improves', 'its', 'performance', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('agent', 'NOUN'), ('learns', 'VERB'), ('automatically', 'ADV'), ('with', 'ADP'), ('these', 'DET'), ('feedbacks', 'NOUN'), ('and', 'CCONJ'), ('improves', 'VERB'), ('its', 'PRON'), ('performance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('agent', 'NN'), ('learns', 'VBZ'), ('automatically', 'RB'), ('with', 'IN'), ('these', 'DT'), ('feedbacks', 'NNS'), ('and', 'CC'), ('improves', 'VBZ'), ('its', 'PRP$'), ('performance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('agent', 'agent'), ('learns', 'learn'), ('automatically', 'automatically'), ('with', 'with'), ('these', 'this'), ('feedbacks', 'feedback'), ('and', 'and'), ('improves', 'improve'), ('its', 'its'), ('performance', 'performance'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'agent'), 'det'), (('agent', 'learns'), 'nsubj'), (('learns', 'root'), 'root'), (('automatically', 'learns'), 'advmod'), (('with', 'feedbacks'), 'case'), (('these', 'feedbacks'), 'det'), (('feedbacks', 'learns'), 'obl'), (('and', 'improves'), 'cc'), (('improves', 'learns'), 'conj'), (('its', 'performance'), 'nmod:poss'), (('performance', 'improves'), 'obj'), (('.', 'learns'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 35 ===========================

 In reinforcement learning, the agent interacts with the environment and explores it. 

Tokens are: 
>> ['In', 'reinforcement', 'learning', ',', 'the', 'agent', 'interacts', 'with', 'the', 'environment', 'and', 'explores', 'it', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('the', 'DET'), ('agent', 'NOUN'), ('interacts', 'VERB'), ('with', 'ADP'), ('the', 'DET'), ('environment', 'NOUN'), ('and', 'CCONJ'), ('explores', 'VERB'), ('it', 'PRON'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('reinforcement', 'NN'), ('learning', 'NN'), (',', ','), ('the', 'DT'), ('agent', 'NN'), ('interacts', 'VBZ'), ('with', 'IN'), ('the', 'DT'), ('environment', 'NN'), ('and', 'CC'), ('explores', 'VBZ'), ('it', 'PRP'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), (',', ','), ('the', 'the'), ('agent', 'agent'), ('interacts', 'interact'), ('with', 'with'), ('the', 'the'), ('environment', 'environment'), ('and', 'and'), ('explores', 'explore'), ('it', 'it'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'learning'), 'case'), (('reinforcement', 'learning'), 'compound'), (('learning', 'interacts'), 'obl'), ((',', 'interacts'), 'punct'), (('the', 'agent'), 'det'), (('agent', 'interacts'), 'nsubj'), (('interacts', 'root'), 'root'), (('with', 'environment'), 'case'), (('the', 'environment'), 'det'), (('environment', 'interacts'), 'obl'), (('and', 'explores'), 'cc'), (('explores', 'interacts'), 'conj'), (('it', 'explores'), 'obj'), (('.', 'interacts'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 36 ===========================

 The goal of an agent is to get the most reward points, and hence, it improves its performance. 

Tokens are: 
>> ['The', 'goal', 'of', 'an', 'agent', 'is', 'to', 'get', 'the', 'most', 'reward', 'points', ',', 'and', 'hence', ',', 'it', 'improves', 'its', 'performance', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('goal', 'NOUN'), ('of', 'ADP'), ('an', 'DET'), ('agent', 'NOUN'), ('is', 'VERB'), ('to', 'PART'), ('get', 'VERB'), ('the', 'DET'), ('most', 'ADV'), ('reward', 'NOUN'), ('points', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('hence', 'ADV'), (',', 'PUNCT'), ('it', 'PRON'), ('improves', 'VERB'), ('its', 'PRON'), ('performance', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('goal', 'NN'), ('of', 'IN'), ('an', 'DT'), ('agent', 'NN'), ('is', 'VBZ'), ('to', 'TO'), ('get', 'VB'), ('the', 'DT'), ('most', 'RBS'), ('reward', 'NN'), ('points', 'NNS'), (',', ','), ('and', 'CC'), ('hence', 'RB'), (',', ','), ('it', 'PRP'), ('improves', 'VBZ'), ('its', 'PRP$'), ('performance', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('goal', 'goal'), ('of', 'of'), ('an', 'a'), ('agent', 'agent'), ('is', 'be'), ('to', 'to'), ('get', 'get'), ('the', 'the'), ('most', 'most'), ('reward', 'reward'), ('points', 'point'), (',', ','), ('and', 'and'), ('hence', 'hence'), (',', ','), ('it', 'it'), ('improves', 'improve'), ('its', 'its'), ('performance', 'performance'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'goal'), 'det'), (('goal', 'get'), 'nsubj'), (('of', 'agent'), 'case'), (('an', 'agent'), 'det'), (('agent', 'goal'), 'nmod'), (('is', 'get'), 'cop'), (('to', 'get'), 'mark'), (('get', 'root'), 'root'), (('the', 'points'), 'det'), (('most', 'reward'), 'advmod'), (('reward', 'points'), 'compound'), (('points', 'get'), 'obj'), ((',', 'improves'), 'punct'), (('and', 'improves'), 'cc'), (('hence', 'improves'), 'advmod'), ((',', 'hence'), 'punct'), (('it', 'improves'), 'nsubj'), (('improves', 'get'), 'conj'), (('its', 'performance'), 'nmod:poss'), (('performance', 'improves'), 'obj'), (('.', 'get'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 37 ===========================

 The robotic dog, which automatically learns the movement of his arms, is an example of Reinforcement learning. 

Tokens are: 
>> ['The', 'robotic', 'dog', ',', 'which', 'automatically', 'learns', 'the', 'movement', 'of', 'his', 'arms', ',', 'is', 'an', 'example', 'of', 'Reinforcement', 'learning', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('robotic', 'ADJ'), ('dog', 'NOUN'), (',', 'PUNCT'), ('which', 'PRON'), ('automatically', 'ADV'), ('learns', 'VERB'), ('the', 'DET'), ('movement', 'NOUN'), ('of', 'ADP'), ('his', 'PRON'), ('arms', 'NOUN'), (',', 'PUNCT'), ('is', 'AUX'), ('an', 'DET'), ('example', 'NOUN'), ('of', 'ADP'), ('Reinforcement', 'NOUN'), ('learning', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('robotic', 'JJ'), ('dog', 'NN'), (',', ','), ('which', 'WDT'), ('automatically', 'RB'), ('learns', 'VBZ'), ('the', 'DT'), ('movement', 'NN'), ('of', 'IN'), ('his', 'PRP$'), ('arms', 'NNS'), (',', ','), ('is', 'VBZ'), ('an', 'DT'), ('example', 'NN'), ('of', 'IN'), ('Reinforcement', 'NN'), ('learning', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('robotic', 'robotic'), ('dog', 'dog'), (',', ','), ('which', 'which'), ('automatically', 'automatically'), ('learns', 'learn'), ('the', 'the'), ('movement', 'movement'), ('of', 'of'), ('his', 'he'), ('arms', 'arm'), (',', ','), ('is', 'be'), ('an', 'a'), ('example', 'example'), ('of', 'of'), ('Reinforcement', 'reinforcement'), ('learning', 'learning'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'dog'), 'det'), (('robotic', 'dog'), 'amod'), (('dog', 'example'), 'nsubj'), ((',', 'dog'), 'punct'), (('which', 'learns'), 'nsubj'), (('automatically', 'learns'), 'advmod'), (('learns', 'dog'), 'acl:relcl'), (('the', 'movement'), 'det'), (('movement', 'learns'), 'obj'), (('of', 'arms'), 'case'), (('his', 'arms'), 'nmod:poss'), (('arms', 'movement'), 'nmod'), ((',', 'dog'), 'punct'), (('is', 'example'), 'cop'), (('an', 'example'), 'det'), (('example', 'root'), 'root'), (('of', 'learning'), 'case'), (('Reinforcement', 'learning'), 'compound'), (('learning', 'example'), 'nmod'), (('.', 'example'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 38 ===========================

 Note: 

Tokens are: 
>> ['Note', ':'] 

 UPOS tags are: 
>> [('Note', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Note', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Note', 'note'), (':', ':')] 

 Dependency tags are: 
>> [(('Note', 'root'), 'root'), ((':', 'Note'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 39 ===========================

 We will learn about the above types of machine learning in detail in later chapters. 

Tokens are: 
>> ['We', 'will', 'learn', 'about', 'the', 'above', 'types', 'of', 'machine', 'learning', 'in', 'detail', 'in', 'later', 'chapters', '.'] 

 UPOS tags are: 
>> [('We', 'PRON'), ('will', 'AUX'), ('learn', 'VERB'), ('about', 'ADP'), ('the', 'DET'), ('above', 'ADJ'), ('types', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'VERB'), ('in', 'ADP'), ('detail', 'NOUN'), ('in', 'ADP'), ('later', 'ADJ'), ('chapters', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('We', 'PRP'), ('will', 'MD'), ('learn', 'VB'), ('about', 'IN'), ('the', 'DT'), ('above', 'JJ'), ('types', 'NNS'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'VBG'), ('in', 'IN'), ('detail', 'NN'), ('in', 'IN'), ('later', 'JJR'), ('chapters', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('We', 'we'), ('will', 'will'), ('learn', 'learn'), ('about', 'about'), ('the', 'the'), ('above', 'above'), ('types', 'type'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learn'), ('in', 'in'), ('detail', 'detail'), ('in', 'in'), ('later', 'late'), ('chapters', 'chapter'), ('.', '.')] 

 Dependency tags are: 
>> [(('We', 'learn'), 'nsubj'), (('will', 'learn'), 'aux'), (('learn', 'root'), 'root'), (('about', 'types'), 'case'), (('the', 'types'), 'det'), (('above', 'types'), 'amod'), (('types', 'learn'), 'obl'), (('of', 'machine'), 'case'), (('machine', 'types'), 'nmod'), (('learning', 'types'), 'acl'), (('in', 'detail'), 'case'), (('detail', 'learning'), 'obl'), (('in', 'chapters'), 'case'), (('later', 'chapters'), 'amod'), (('chapters', 'learning'), 'obl'), (('.', 'learn'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 40 ===========================

 History of Machine Learning Before some years (about 40-50 years), machine learning was science fiction, but today it is the part of our daily life. 

Tokens are: 
>> ['History', 'of', 'Machine', 'Learning', 'Before', 'some', 'years', '(', 'about', '40', '-', '50', 'years', ')', ',', 'machine', 'learning', 'was', 'science', 'fiction', ',', 'but', 'today', 'it', 'is', 'the', 'part', 'of', 'our', 'daily', 'life', '.'] 

 UPOS tags are: 
>> [('History', 'NOUN'), ('of', 'ADP'), ('Machine', 'NOUN'), ('Learning', 'VERB'), ('Before', 'ADP'), ('some', 'DET'), ('years', 'NOUN'), ('(', 'PUNCT'), ('about', 'ADV'), ('40', 'NUM'), ('-', 'SYM'), ('50', 'NUM'), ('years', 'NOUN'), (')', 'PUNCT'), (',', 'PUNCT'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('was', 'AUX'), ('science', 'NOUN'), ('fiction', 'NOUN'), (',', 'PUNCT'), ('but', 'CCONJ'), ('today', 'NOUN'), ('it', 'PRON'), ('is', 'AUX'), ('the', 'DET'), ('part', 'NOUN'), ('of', 'ADP'), ('our', 'PRON'), ('daily', 'ADJ'), ('life', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('History', 'NN'), ('of', 'IN'), ('Machine', 'NN'), ('Learning', 'VBG'), ('Before', 'IN'), ('some', 'DT'), ('years', 'NNS'), ('(', '-LRB-'), ('about', 'RB'), ('40', 'CD'), ('-', 'SYM'), ('50', 'CD'), ('years', 'NNS'), (')', '-RRB-'), (',', ','), ('machine', 'NN'), ('learning', 'NN'), ('was', 'VBD'), ('science', 'NN'), ('fiction', 'NN'), (',', ','), ('but', 'CC'), ('today', 'NN'), ('it', 'PRP'), ('is', 'VBZ'), ('the', 'DT'), ('part', 'NN'), ('of', 'IN'), ('our', 'PRP$'), ('daily', 'JJ'), ('life', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('History', 'history'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning'), ('Before', 'before'), ('some', 'some'), ('years', 'year'), ('(', '('), ('about', 'about'), ('40', '40'), ('-', '-'), ('50', '50'), ('years', 'year'), (')', ')'), (',', ','), ('machine', 'machine'), ('learning', 'learning'), ('was', 'be'), ('science', 'science'), ('fiction', 'fiction'), (',', ','), ('but', 'but'), ('today', 'today'), ('it', 'it'), ('is', 'be'), ('the', 'the'), ('part', 'part'), ('of', 'of'), ('our', 'we'), ('daily', 'daily'), ('life', 'life'), ('.', '.')] 

 Dependency tags are: 
>> [(('History', 'fiction'), 'nsubj'), (('of', 'Machine'), 'case'), (('Machine', 'History'), 'nmod'), (('Learning', 'History'), 'acl'), (('Before', 'years'), 'case'), (('some', 'years'), 'det'), (('years', 'Learning'), 'obl'), (('(', 'years'), 'punct'), (('about', '40'), 'advmod'), (('40', 'years'), 'nummod'), (('-', '50'), 'case'), (('50', '40'), 'nmod'), (('years', 'years'), 'appos'), ((')', 'years'), 'punct'), ((',', 'fiction'), 'punct'), (('machine', 'learning'), 'compound'), (('learning', 'fiction'), 'nsubj'), (('was', 'fiction'), 'cop'), (('science', 'fiction'), 'compound'), (('fiction', 'root'), 'root'), ((',', 'part'), 'punct'), (('but', 'part'), 'cc'), (('today', 'part'), 'obl:tmod'), (('it', 'part'), 'nsubj'), (('is', 'part'), 'cop'), (('the', 'part'), 'det'), (('part', 'fiction'), 'conj'), (('of', 'life'), 'case'), (('our', 'life'), 'nmod:poss'), (('daily', 'life'), 'amod'), (('life', 'part'), 'nmod'), (('.', 'fiction'), 'punct')]

 Named Entities are: 
>> [('about 40-50 years', 'DATE'), ('today', 'DATE')]

========================== Sentence 41 ===========================

 Machine learning is making our day to day life easy from self-driving cars to Amazon virtual assistant "Alexa". 

Tokens are: 
>> ['Machine', 'learning', 'is', 'making', 'our', 'day', 'to', 'day', 'life', 'easy', 'from', 'self', '-', 'driving', 'cars', 'to', 'Amazon', 'virtual', 'assistant', '"', 'Alexa', '"', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('making', 'VERB'), ('our', 'PRON'), ('day', 'NOUN'), ('to', 'ADP'), ('day', 'NOUN'), ('life', 'NOUN'), ('easy', 'ADJ'), ('from', 'ADP'), ('self', 'NOUN'), ('-', 'PUNCT'), ('driving', 'NOUN'), ('cars', 'NOUN'), ('to', 'ADP'), ('Amazon', 'PROPN'), ('virtual', 'ADJ'), ('assistant', 'NOUN'), ('"', 'PUNCT'), ('Alexa', 'PROPN'), ('"', 'PUNCT'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('making', 'VBG'), ('our', 'PRP$'), ('day', 'NN'), ('to', 'IN'), ('day', 'NN'), ('life', 'NN'), ('easy', 'JJ'), ('from', 'IN'), ('self', 'NN'), ('-', 'HYPH'), ('driving', 'NN'), ('cars', 'NNS'), ('to', 'IN'), ('Amazon', 'NNP'), ('virtual', 'JJ'), ('assistant', 'NN'), ('"', '``'), ('Alexa', 'NNP'), ('"', "''"), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('learning', 'learning'), ('is', 'be'), ('making', 'make'), ('our', 'we'), ('day', 'day'), ('to', 'to'), ('day', 'day'), ('life', 'life'), ('easy', 'easy'), ('from', 'from'), ('self', 'self'), ('-', '-'), ('driving', 'driving'), ('cars', 'car'), ('to', 'to'), ('Amazon', 'Amazon'), ('virtual', 'virtual'), ('assistant', 'assistant'), ('"', '"'), ('Alexa', 'Alexa'), ('"', '"'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'learning'), 'compound'), (('learning', 'making'), 'nsubj'), (('is', 'making'), 'aux'), (('making', 'root'), 'root'), (('our', 'life'), 'nmod:poss'), (('day', 'life'), 'compound'), (('to', 'day'), 'case'), (('day', 'day'), 'nmod'), (('life', 'making'), 'obj'), (('easy', 'making'), 'xcomp'), (('from', 'cars'), 'case'), (('self', 'driving'), 'compound'), (('-', 'driving'), 'punct'), (('driving', 'cars'), 'compound'), (('cars', 'easy'), 'obl'), (('to', 'assistant'), 'case'), (('Amazon', 'assistant'), 'compound'), (('virtual', 'assistant'), 'amod'), (('assistant', 'cars'), 'nmod'), (('"', 'Alexa'), 'punct'), (('Alexa', 'assistant'), 'appos'), (('"', 'Alexa'), 'punct'), (('.', 'making'), 'punct')]

 Named Entities are: 
>> [('Amazon', 'ORG'), ('Alexa', 'PERSON')]

========================== Sentence 42 ===========================

 However, the idea behind machine learning is so old and has a long history. 

Tokens are: 
>> ['However', ',', 'the', 'idea', 'behind', 'machine', 'learning', 'is', 'so', 'old', 'and', 'has', 'a', 'long', 'history', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('idea', 'NOUN'), ('behind', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('is', 'AUX'), ('so', 'ADV'), ('old', 'ADJ'), ('and', 'CCONJ'), ('has', 'VERB'), ('a', 'DET'), ('long', 'ADJ'), ('history', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('the', 'DT'), ('idea', 'NN'), ('behind', 'IN'), ('machine', 'NN'), ('learning', 'NN'), ('is', 'VBZ'), ('so', 'RB'), ('old', 'JJ'), ('and', 'CC'), ('has', 'VBZ'), ('a', 'DT'), ('long', 'JJ'), ('history', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('the', 'the'), ('idea', 'idea'), ('behind', 'behind'), ('machine', 'machine'), ('learning', 'learning'), ('is', 'be'), ('so', 'so'), ('old', 'old'), ('and', 'and'), ('has', 'have'), ('a', 'a'), ('long', 'long'), ('history', 'history'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'old'), 'advmod'), ((',', 'old'), 'punct'), (('the', 'idea'), 'det'), (('idea', 'old'), 'nsubj'), (('behind', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'idea'), 'nmod'), (('is', 'old'), 'cop'), (('so', 'old'), 'advmod'), (('old', 'root'), 'root'), (('and', 'has'), 'cc'), (('has', 'old'), 'conj'), (('a', 'history'), 'det'), (('long', 'history'), 'amod'), (('history', 'has'), 'obj'), (('.', 'old'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 43 ===========================

 Below some milestones are given which have occurred in the history of machine learning: 

Tokens are: 
>> ['Below', 'some', 'milestones', 'are', 'given', 'which', 'have', 'occurred', 'in', 'the', 'history', 'of', 'machine', 'learning', ':'] 

 UPOS tags are: 
>> [('Below', 'ADP'), ('some', 'DET'), ('milestones', 'NOUN'), ('are', 'AUX'), ('given', 'VERB'), ('which', 'PRON'), ('have', 'AUX'), ('occurred', 'VERB'), ('in', 'ADP'), ('the', 'DET'), ('history', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Below', 'IN'), ('some', 'DT'), ('milestones', 'NNS'), ('are', 'VBP'), ('given', 'VBN'), ('which', 'WDT'), ('have', 'VBP'), ('occurred', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('history', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Below', 'below'), ('some', 'some'), ('milestones', 'milestone'), ('are', 'be'), ('given', 'give'), ('which', 'which'), ('have', 'have'), ('occurred', 'occur'), ('in', 'in'), ('the', 'the'), ('history', 'history'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), (':', ':')] 

 Dependency tags are: 
>> [(('Below', 'milestones'), 'case'), (('some', 'milestones'), 'det'), (('milestones', 'given'), 'nsubj:pass'), (('are', 'given'), 'aux:pass'), (('given', 'root'), 'root'), (('which', 'occurred'), 'nsubj'), (('have', 'occurred'), 'aux'), (('occurred', 'given'), 'ccomp'), (('in', 'history'), 'case'), (('the', 'history'), 'det'), (('history', 'occurred'), 'obl'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'history'), 'nmod'), ((':', 'given'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 44 ===========================

 The early history of Machine Learning (Pre-1940): · 1834: 

Tokens are: 
>> ['The', 'early', 'history', 'of', 'Machine', 'Learning', '(', 'Pre-1940', ')', ':', '·', '1834', ':'] 

 UPOS tags are: 
>> [('The', 'DET'), ('early', 'ADJ'), ('history', 'NOUN'), ('of', 'ADP'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('(', 'PUNCT'), ('Pre-1940', 'PROPN'), (')', 'PUNCT'), (':', 'PUNCT'), ('·', 'PUNCT'), ('1834', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('early', 'JJ'), ('history', 'NN'), ('of', 'IN'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('(', '-LRB-'), ('Pre-1940', 'NNP'), (')', '-RRB-'), (':', ':'), ('·', 'NFP'), ('1834', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('The', 'the'), ('early', 'early'), ('history', 'history'), ('of', 'of'), ('Machine', 'Machine'), ('Learning', 'learning'), ('(', '('), ('Pre-1940', 'Pre-1940'), (')', ')'), (':', ':'), ('·', '·'), ('1834', '1834'), (':', ':')] 

 Dependency tags are: 
>> [(('The', 'history'), 'det'), (('early', 'history'), 'amod'), (('history', 'root'), 'root'), (('of', 'Learning'), 'case'), (('Machine', 'history'), 'nmod'), (('Learning', 'history'), 'nmod'), (('(', 'Pre-1940'), 'punct'), (('Pre-1940', 'Learning'), 'appos'), ((')', 'Pre-1940'), 'punct'), ((':', '1834'), 'punct'), (('·', '1834'), 'punct'), (('1834', 'history'), 'appos'), ((':', 'history'), 'punct')]

 Named Entities are: 
>> [('Machine Learning', 'WORK_OF_ART'), ('1834', 'CARDINAL')]

========================== Sentence 45 ===========================

 In 1834, Charles Babbage, the father of the computer, conceived a device that could be programmed with punch cards. 

Tokens are: 
>> ['In', '1834', ',', 'Charles', 'Babbage', ',', 'the', 'father', 'of', 'the', 'computer', ',', 'conceived', 'a', 'device', 'that', 'could', 'be', 'programmed', 'with', 'punch', 'cards', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1834', 'NUM'), (',', 'PUNCT'), ('Charles', 'PROPN'), ('Babbage', 'PROPN'), (',', 'PUNCT'), ('the', 'DET'), ('father', 'NOUN'), ('of', 'ADP'), ('the', 'DET'), ('computer', 'NOUN'), (',', 'PUNCT'), ('conceived', 'VERB'), ('a', 'DET'), ('device', 'NOUN'), ('that', 'PRON'), ('could', 'AUX'), ('be', 'AUX'), ('programmed', 'VERB'), ('with', 'ADP'), ('punch', 'NOUN'), ('cards', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1834', 'CD'), (',', ','), ('Charles', 'NNP'), ('Babbage', 'NNP'), (',', ','), ('the', 'DT'), ('father', 'NN'), ('of', 'IN'), ('the', 'DT'), ('computer', 'NN'), (',', ','), ('conceived', 'VBD'), ('a', 'DT'), ('device', 'NN'), ('that', 'WDT'), ('could', 'MD'), ('be', 'VB'), ('programmed', 'VBN'), ('with', 'IN'), ('punch', 'NN'), ('cards', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1834', '1834'), (',', ','), ('Charles', 'Charles'), ('Babbage', 'Babbage'), (',', ','), ('the', 'the'), ('father', 'father'), ('of', 'of'), ('the', 'the'), ('computer', 'computer'), (',', ','), ('conceived', 'conceive'), ('a', 'a'), ('device', 'device'), ('that', 'that'), ('could', 'could'), ('be', 'be'), ('programmed', 'program'), ('with', 'with'), ('punch', 'punch'), ('cards', 'card'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1834'), 'case'), (('1834', 'conceived'), 'obl'), ((',', 'conceived'), 'punct'), (('Charles', 'conceived'), 'nsubj'), (('Babbage', 'Charles'), 'flat'), ((',', 'father'), 'punct'), (('the', 'father'), 'det'), (('father', 'Charles'), 'appos'), (('of', 'computer'), 'case'), (('the', 'computer'), 'det'), (('computer', 'father'), 'nmod'), ((',', 'Charles'), 'punct'), (('conceived', 'root'), 'root'), (('a', 'device'), 'det'), (('device', 'conceived'), 'obj'), (('that', 'programmed'), 'nsubj:pass'), (('could', 'programmed'), 'aux'), (('be', 'programmed'), 'aux:pass'), (('programmed', 'device'), 'acl:relcl'), (('with', 'cards'), 'case'), (('punch', 'cards'), 'compound'), (('cards', 'programmed'), 'obl'), (('.', 'conceived'), 'punct')]

 Named Entities are: 
>> [('1834', 'DATE'), ('Charles Babbage', 'PERSON')]

========================== Sentence 46 ===========================

 However, the machine was never built, but all modern computers rely on its logical structure. 

Tokens are: 
>> ['However', ',', 'the', 'machine', 'was', 'never', 'built', ',', 'but', 'all', 'modern', 'computers', 'rely', 'on', 'its', 'logical', 'structure', '.'] 

 UPOS tags are: 
>> [('However', 'ADV'), (',', 'PUNCT'), ('the', 'DET'), ('machine', 'NOUN'), ('was', 'AUX'), ('never', 'ADV'), ('built', 'VERB'), (',', 'PUNCT'), ('but', 'CCONJ'), ('all', 'DET'), ('modern', 'ADJ'), ('computers', 'NOUN'), ('rely', 'VERB'), ('on', 'ADP'), ('its', 'PRON'), ('logical', 'ADJ'), ('structure', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('However', 'RB'), (',', ','), ('the', 'DT'), ('machine', 'NN'), ('was', 'VBD'), ('never', 'RB'), ('built', 'VBN'), (',', ','), ('but', 'CC'), ('all', 'DT'), ('modern', 'JJ'), ('computers', 'NNS'), ('rely', 'VBP'), ('on', 'IN'), ('its', 'PRP$'), ('logical', 'JJ'), ('structure', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('However', 'however'), (',', ','), ('the', 'the'), ('machine', 'machine'), ('was', 'be'), ('never', 'never'), ('built', 'build'), (',', ','), ('but', 'but'), ('all', 'all'), ('modern', 'modern'), ('computers', 'computer'), ('rely', 'rely'), ('on', 'on'), ('its', 'its'), ('logical', 'logical'), ('structure', 'structure'), ('.', '.')] 

 Dependency tags are: 
>> [(('However', 'built'), 'advmod'), ((',', 'built'), 'punct'), (('the', 'machine'), 'det'), (('machine', 'built'), 'nsubj:pass'), (('was', 'built'), 'aux:pass'), (('never', 'built'), 'advmod'), (('built', 'root'), 'root'), ((',', 'rely'), 'punct'), (('but', 'rely'), 'cc'), (('all', 'computers'), 'det'), (('modern', 'computers'), 'amod'), (('computers', 'rely'), 'nsubj'), (('rely', 'built'), 'conj'), (('on', 'structure'), 'case'), (('its', 'structure'), 'nmod:poss'), (('logical', 'structure'), 'amod'), (('structure', 'rely'), 'obl'), (('.', 'built'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 47 ===========================

 · 1936: 

Tokens are: 
>> ['·', '1936', ':'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('1936', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('1936', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('·', '·'), ('1936', '1936'), (':', ':')] 

 Dependency tags are: 
>> [(('·', '1936'), 'punct'), (('1936', 'root'), 'root'), ((':', '1936'), 'punct')]

 Named Entities are: 
>> [('1936', 'DATE')]

========================== Sentence 48 ===========================

 In 1936, Alan Turing gave a theory that how a machine can determine and execute a set of instructions. 

Tokens are: 
>> ['In', '1936', ',', 'Alan', 'Turing', 'gave', 'a', 'theory', 'that', 'how', 'a', 'machine', 'can', 'determine', 'and', 'execute', 'a', 'set', 'of', 'instructions', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1936', 'NUM'), (',', 'PUNCT'), ('Alan', 'PROPN'), ('Turing', 'PROPN'), ('gave', 'VERB'), ('a', 'DET'), ('theory', 'NOUN'), ('that', 'SCONJ'), ('how', 'SCONJ'), ('a', 'DET'), ('machine', 'NOUN'), ('can', 'AUX'), ('determine', 'VERB'), ('and', 'CCONJ'), ('execute', 'VERB'), ('a', 'DET'), ('set', 'NOUN'), ('of', 'ADP'), ('instructions', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1936', 'CD'), (',', ','), ('Alan', 'NNP'), ('Turing', 'NNP'), ('gave', 'VBD'), ('a', 'DT'), ('theory', 'NN'), ('that', 'IN'), ('how', 'WRB'), ('a', 'DT'), ('machine', 'NN'), ('can', 'MD'), ('determine', 'VB'), ('and', 'CC'), ('execute', 'VB'), ('a', 'DT'), ('set', 'NN'), ('of', 'IN'), ('instructions', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1936', '1936'), (',', ','), ('Alan', 'Alan'), ('Turing', 'Turing'), ('gave', 'give'), ('a', 'a'), ('theory', 'theory'), ('that', 'that'), ('how', 'how'), ('a', 'a'), ('machine', 'machine'), ('can', 'can'), ('determine', 'determine'), ('and', 'and'), ('execute', 'execute'), ('a', 'a'), ('set', 'set'), ('of', 'of'), ('instructions', 'instruction'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1936'), 'case'), (('1936', 'gave'), 'obl'), ((',', 'gave'), 'punct'), (('Alan', 'gave'), 'nsubj'), (('Turing', 'Alan'), 'flat'), (('gave', 'root'), 'root'), (('a', 'theory'), 'det'), (('theory', 'gave'), 'obj'), (('that', 'determine'), 'mark'), (('how', 'determine'), 'mark'), (('a', 'machine'), 'det'), (('machine', 'determine'), 'nsubj'), (('can', 'determine'), 'aux'), (('determine', 'theory'), 'acl'), (('and', 'execute'), 'cc'), (('execute', 'determine'), 'conj'), (('a', 'set'), 'det'), (('set', 'execute'), 'obj'), (('of', 'instructions'), 'case'), (('instructions', 'set'), 'nmod'), (('.', 'gave'), 'punct')]

 Named Entities are: 
>> [('1936', 'DATE'), ('Alan Turing', 'PERSON')]

========================== Sentence 49 ===========================

 The era of stored program computers: · 1940: 

Tokens are: 
>> ['The', 'era', 'of', 'stored', 'program', 'computers', ':', '·', '1940', ':'] 

 UPOS tags are: 
>> [('The', 'DET'), ('era', 'NOUN'), ('of', 'ADP'), ('stored', 'VERB'), ('program', 'NOUN'), ('computers', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('1940', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('era', 'NN'), ('of', 'IN'), ('stored', 'VBN'), ('program', 'NN'), ('computers', 'NNS'), (':', ':'), ('·', 'NFP'), ('1940', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('The', 'the'), ('era', 'era'), ('of', 'of'), ('stored', 'store'), ('program', 'program'), ('computers', 'computer'), (':', ':'), ('·', '·'), ('1940', '1940'), (':', ':')] 

 Dependency tags are: 
>> [(('The', 'era'), 'det'), (('era', 'root'), 'root'), (('of', 'computers'), 'case'), (('stored', 'computers'), 'amod'), (('program', 'computers'), 'compound'), (('computers', 'era'), 'nmod'), ((':', 'era'), 'punct'), (('·', '1940'), 'punct'), (('1940', 'computers'), 'appos'), ((':', 'era'), 'punct')]

 Named Entities are: 
>> [('1940', 'DATE')]

========================== Sentence 50 ===========================

 In 1940, the first manually operated computer, "ENIAC" was invented, which was the first electronic general-purpose computer. 

Tokens are: 
>> ['In', '1940', ',', 'the', 'first', 'manually', 'operated', 'computer', ',', '"', 'ENIAC', '"', 'was', 'invented', ',', 'which', 'was', 'the', 'first', 'electronic', 'general', '-', 'purpose', 'computer', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1940', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('first', 'ADJ'), ('manually', 'ADV'), ('operated', 'VERB'), ('computer', 'NOUN'), (',', 'PUNCT'), ('"', 'PUNCT'), ('ENIAC', 'PROPN'), ('"', 'PUNCT'), ('was', 'AUX'), ('invented', 'VERB'), (',', 'PUNCT'), ('which', 'PRON'), ('was', 'AUX'), ('the', 'DET'), ('first', 'ADJ'), ('electronic', 'ADJ'), ('general', 'ADJ'), ('-', 'PUNCT'), ('purpose', 'NOUN'), ('computer', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1940', 'CD'), (',', ','), ('the', 'DT'), ('first', 'JJ'), ('manually', 'RB'), ('operated', 'VBN'), ('computer', 'NN'), (',', ','), ('"', '``'), ('ENIAC', 'NNP'), ('"', "''"), ('was', 'VBD'), ('invented', 'VBN'), (',', ','), ('which', 'WDT'), ('was', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('electronic', 'JJ'), ('general', 'JJ'), ('-', 'HYPH'), ('purpose', 'NN'), ('computer', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1940', '1940'), (',', ','), ('the', 'the'), ('first', 'first'), ('manually', 'manually'), ('operated', 'operate'), ('computer', 'computer'), (',', ','), ('"', '"'), ('ENIAC', 'ENIAC'), ('"', '"'), ('was', 'be'), ('invented', 'invent'), (',', ','), ('which', 'which'), ('was', 'be'), ('the', 'the'), ('first', 'first'), ('electronic', 'electronic'), ('general', 'general'), ('-', '-'), ('purpose', 'purpose'), ('computer', 'computer'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1940'), 'case'), (('1940', 'invented'), 'obl'), ((',', 'invented'), 'punct'), (('the', 'computer'), 'det'), (('first', 'computer'), 'amod'), (('manually', 'operated'), 'advmod'), (('operated', 'computer'), 'amod'), (('computer', 'invented'), 'nsubj:pass'), ((',', 'computer'), 'punct'), (('"', 'ENIAC'), 'punct'), (('ENIAC', 'computer'), 'appos'), (('"', 'ENIAC'), 'punct'), (('was', 'invented'), 'aux:pass'), (('invented', 'root'), 'root'), ((',', 'invented'), 'punct'), (('which', 'computer'), 'nsubj'), (('was', 'computer'), 'cop'), (('the', 'computer'), 'det'), (('first', 'computer'), 'amod'), (('electronic', 'computer'), 'amod'), (('general', 'purpose'), 'amod'), (('-', 'purpose'), 'punct'), (('purpose', 'computer'), 'compound'), (('computer', 'invented'), 'acl:relcl'), (('.', 'invented'), 'punct')]

 Named Entities are: 
>> [('1940', 'DATE'), ('first', 'ORDINAL'), ('ENIAC', 'ORG'), ('first', 'ORDINAL')]

========================== Sentence 51 ===========================

 After that stored program computer such as EDSAC in 1949 and EDVAC in 1951 were invented. 

Tokens are: 
>> ['After', 'that', 'stored', 'program', 'computer', 'such', 'as', 'EDSAC', 'in', '1949', 'and', 'EDVAC', 'in', '1951', 'were', 'invented', '.'] 

 UPOS tags are: 
>> [('After', 'ADP'), ('that', 'DET'), ('stored', 'VERB'), ('program', 'NOUN'), ('computer', 'NOUN'), ('such', 'ADJ'), ('as', 'ADP'), ('EDSAC', 'PROPN'), ('in', 'ADP'), ('1949', 'NUM'), ('and', 'CCONJ'), ('EDVAC', 'PROPN'), ('in', 'ADP'), ('1951', 'NUM'), ('were', 'AUX'), ('invented', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('After', 'IN'), ('that', 'DT'), ('stored', 'VBN'), ('program', 'NN'), ('computer', 'NN'), ('such', 'JJ'), ('as', 'IN'), ('EDSAC', 'NNP'), ('in', 'IN'), ('1949', 'CD'), ('and', 'CC'), ('EDVAC', 'NNP'), ('in', 'IN'), ('1951', 'CD'), ('were', 'VBD'), ('invented', 'VBN'), ('.', '.')] 

 Lemmas are: 
>> [('After', 'after'), ('that', 'that'), ('stored', 'store'), ('program', 'program'), ('computer', 'computer'), ('such', 'such'), ('as', 'as'), ('EDSAC', 'EDSAC'), ('in', 'in'), ('1949', '1949'), ('and', 'and'), ('EDVAC', 'EDVAC'), ('in', 'in'), ('1951', '1951'), ('were', 'be'), ('invented', 'invent'), ('.', '.')] 

 Dependency tags are: 
>> [(('After', 'computer'), 'case'), (('that', 'computer'), 'det'), (('stored', 'computer'), 'amod'), (('program', 'computer'), 'compound'), (('computer', 'invented'), 'obl'), (('such', 'EDSAC'), 'case'), (('as', 'such'), 'fixed'), (('EDSAC', 'computer'), 'nmod'), (('in', '1949'), 'case'), (('1949', 'EDSAC'), 'nmod'), (('and', 'EDVAC'), 'cc'), (('EDVAC', 'invented'), 'nsubj:pass'), (('in', '1951'), 'case'), (('1951', 'EDVAC'), 'nmod'), (('were', 'invented'), 'aux:pass'), (('invented', 'root'), 'root'), (('.', 'invented'), 'punct')]

 Named Entities are: 
>> [('EDSAC', 'PRODUCT'), ('1949', 'DATE'), ('EDVAC', 'ORG'), ('1951', 'DATE')]

========================== Sentence 52 ===========================

 · 1943: 

Tokens are: 
>> ['·', '1943', ':'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('1943', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('1943', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('·', '·'), ('1943', '1943'), (':', ':')] 

 Dependency tags are: 
>> [(('·', '1943'), 'punct'), (('1943', 'root'), 'root'), ((':', '1943'), 'punct')]

 Named Entities are: 
>> [('1943', 'DATE')]

========================== Sentence 53 ===========================

 In 1943, a human neural network was modeled with an electrical circuit. 

Tokens are: 
>> ['In', '1943', ',', 'a', 'human', 'neural', 'network', 'was', 'modeled', 'with', 'an', 'electrical', 'circuit', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1943', 'NUM'), (',', 'PUNCT'), ('a', 'DET'), ('human', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('was', 'AUX'), ('modeled', 'VERB'), ('with', 'ADP'), ('an', 'DET'), ('electrical', 'ADJ'), ('circuit', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1943', 'CD'), (',', ','), ('a', 'DT'), ('human', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('was', 'VBD'), ('modeled', 'VBN'), ('with', 'IN'), ('an', 'DT'), ('electrical', 'JJ'), ('circuit', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1943', '1943'), (',', ','), ('a', 'a'), ('human', 'human'), ('neural', 'neural'), ('network', 'network'), ('was', 'be'), ('modeled', 'model'), ('with', 'with'), ('an', 'a'), ('electrical', 'electrical'), ('circuit', 'circuit'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1943'), 'case'), (('1943', 'modeled'), 'obl'), ((',', 'modeled'), 'punct'), (('a', 'network'), 'det'), (('human', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'modeled'), 'nsubj:pass'), (('was', 'modeled'), 'aux:pass'), (('modeled', 'root'), 'root'), (('with', 'circuit'), 'case'), (('an', 'circuit'), 'det'), (('electrical', 'circuit'), 'amod'), (('circuit', 'modeled'), 'obl'), (('.', 'modeled'), 'punct')]

 Named Entities are: 
>> [('1943', 'DATE')]

========================== Sentence 54 ===========================

 In 1950, the scientists started applying their idea to work and analyzed how human neurons might work. 

Tokens are: 
>> ['In', '1950', ',', 'the', 'scientists', 'started', 'applying', 'their', 'idea', 'to', 'work', 'and', 'analyzed', 'how', 'human', 'neurons', 'might', 'work', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1950', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('scientists', 'NOUN'), ('started', 'VERB'), ('applying', 'VERB'), ('their', 'PRON'), ('idea', 'NOUN'), ('to', 'PART'), ('work', 'VERB'), ('and', 'CCONJ'), ('analyzed', 'VERB'), ('how', 'SCONJ'), ('human', 'ADJ'), ('neurons', 'NOUN'), ('might', 'AUX'), ('work', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1950', 'CD'), (',', ','), ('the', 'DT'), ('scientists', 'NNS'), ('started', 'VBD'), ('applying', 'VBG'), ('their', 'PRP$'), ('idea', 'NN'), ('to', 'TO'), ('work', 'VB'), ('and', 'CC'), ('analyzed', 'VBD'), ('how', 'WRB'), ('human', 'JJ'), ('neurons', 'NNS'), ('might', 'MD'), ('work', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1950', '1950'), (',', ','), ('the', 'the'), ('scientists', 'scientist'), ('started', 'start'), ('applying', 'apply'), ('their', 'they'), ('idea', 'idea'), ('to', 'to'), ('work', 'work'), ('and', 'and'), ('analyzed', 'analyze'), ('how', 'how'), ('human', 'human'), ('neurons', 'neuron'), ('might', 'might'), ('work', 'work'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1950'), 'case'), (('1950', 'started'), 'obl'), ((',', 'started'), 'punct'), (('the', 'scientists'), 'det'), (('scientists', 'started'), 'nsubj'), (('started', 'root'), 'root'), (('applying', 'started'), 'xcomp'), (('their', 'idea'), 'nmod:poss'), (('idea', 'applying'), 'obj'), (('to', 'work'), 'mark'), (('work', 'applying'), 'advcl'), (('and', 'analyzed'), 'cc'), (('analyzed', 'work'), 'conj'), (('how', 'work'), 'mark'), (('human', 'neurons'), 'amod'), (('neurons', 'work'), 'nsubj'), (('might', 'work'), 'aux'), (('work', 'analyzed'), 'ccomp'), (('.', 'started'), 'punct')]

 Named Entities are: 
>> [('1950', 'DATE')]

========================== Sentence 55 ===========================

 Computer machinery and intelligence: · 1950: 

Tokens are: 
>> ['Computer', 'machinery', 'and', 'intelligence', ':', '·', '1950', ':'] 

 UPOS tags are: 
>> [('Computer', 'NOUN'), ('machinery', 'NOUN'), ('and', 'CCONJ'), ('intelligence', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('1950', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Computer', 'NN'), ('machinery', 'NN'), ('and', 'CC'), ('intelligence', 'NN'), (':', ':'), ('·', 'NFP'), ('1950', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('Computer', 'Computer'), ('machinery', 'machinery'), ('and', 'and'), ('intelligence', 'intelligence'), (':', ':'), ('·', '·'), ('1950', '1950'), (':', ':')] 

 Dependency tags are: 
>> [(('Computer', 'machinery'), 'compound'), (('machinery', 'root'), 'root'), (('and', 'intelligence'), 'cc'), (('intelligence', 'machinery'), 'conj'), ((':', 'machinery'), 'punct'), (('·', '1950'), 'punct'), (('1950', 'machinery'), 'appos'), ((':', 'machinery'), 'punct')]

 Named Entities are: 
>> [('1950', 'DATE')]

========================== Sentence 56 ===========================

 In 1950, Alan Turing published a seminal paper, "Computer Machinery and Intelligence," on the topic of artificial intelligence. 

Tokens are: 
>> ['In', '1950', ',', 'Alan', 'Turing', 'published', 'a', 'seminal', 'paper', ',', '"', 'Computer', 'Machinery', 'and', 'Intelligence', ',', '"', 'on', 'the', 'topic', 'of', 'artificial', 'intelligence', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1950', 'NUM'), (',', 'PUNCT'), ('Alan', 'PROPN'), ('Turing', 'PROPN'), ('published', 'VERB'), ('a', 'DET'), ('seminal', 'ADJ'), ('paper', 'NOUN'), (',', 'PUNCT'), ('"', 'PUNCT'), ('Computer', 'PROPN'), ('Machinery', 'PROPN'), ('and', 'CCONJ'), ('Intelligence', 'PROPN'), (',', 'PUNCT'), ('"', 'PUNCT'), ('on', 'ADP'), ('the', 'DET'), ('topic', 'NOUN'), ('of', 'ADP'), ('artificial', 'ADJ'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1950', 'CD'), (',', ','), ('Alan', 'NNP'), ('Turing', 'NNP'), ('published', 'VBD'), ('a', 'DT'), ('seminal', 'JJ'), ('paper', 'NN'), (',', ','), ('"', '``'), ('Computer', 'NNP'), ('Machinery', 'NNP'), ('and', 'CC'), ('Intelligence', 'NNP'), (',', ','), ('"', "''"), ('on', 'IN'), ('the', 'DT'), ('topic', 'NN'), ('of', 'IN'), ('artificial', 'JJ'), ('intelligence', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1950', '1950'), (',', ','), ('Alan', 'Alan'), ('Turing', 'Turing'), ('published', 'publish'), ('a', 'a'), ('seminal', 'seminal'), ('paper', 'paper'), (',', ','), ('"', '"'), ('Computer', 'Computer'), ('Machinery', 'Machinery'), ('and', 'and'), ('Intelligence', 'Intelligence'), (',', ','), ('"', '"'), ('on', 'on'), ('the', 'the'), ('topic', 'topic'), ('of', 'of'), ('artificial', 'artificial'), ('intelligence', 'intelligence'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1950'), 'case'), (('1950', 'published'), 'obl'), ((',', 'published'), 'punct'), (('Alan', 'published'), 'nsubj'), (('Turing', 'Alan'), 'flat'), (('published', 'root'), 'root'), (('a', 'paper'), 'det'), (('seminal', 'paper'), 'amod'), (('paper', 'published'), 'obj'), ((',', 'Machinery'), 'punct'), (('"', 'Machinery'), 'punct'), (('Computer', 'Machinery'), 'compound'), (('Machinery', 'paper'), 'appos'), (('and', 'Intelligence'), 'cc'), (('Intelligence', 'Machinery'), 'conj'), ((',', 'Machinery'), 'punct'), (('"', 'Machinery'), 'punct'), (('on', 'topic'), 'case'), (('the', 'topic'), 'det'), (('topic', 'published'), 'obl'), (('of', 'intelligence'), 'case'), (('artificial', 'intelligence'), 'amod'), (('intelligence', 'topic'), 'nmod'), (('.', 'published'), 'punct')]

 Named Entities are: 
>> [('1950', 'DATE'), ('Alan Turing', 'PERSON'), ('"Computer Machinery and Intelligence', 'WORK_OF_ART')]

========================== Sentence 57 ===========================

 In his paper, he asked, "Can machines think?" 

Tokens are: 
>> ['In', 'his', 'paper', ',', 'he', 'asked', ',', '"', 'Can', 'machines', 'think', '?', '"'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('his', 'PRON'), ('paper', 'NOUN'), (',', 'PUNCT'), ('he', 'PRON'), ('asked', 'VERB'), (',', 'PUNCT'), ('"', 'PUNCT'), ('Can', 'AUX'), ('machines', 'NOUN'), ('think', 'VERB'), ('?', 'PUNCT'), ('"', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('his', 'PRP$'), ('paper', 'NN'), (',', ','), ('he', 'PRP'), ('asked', 'VBD'), (',', ','), ('"', '``'), ('Can', 'MD'), ('machines', 'NNS'), ('think', 'VB'), ('?', '.'), ('"', "''")] 

 Lemmas are: 
>> [('In', 'in'), ('his', 'he'), ('paper', 'paper'), (',', ','), ('he', 'he'), ('asked', 'ask'), (',', ','), ('"', '"'), ('Can', 'can'), ('machines', 'machine'), ('think', 'think'), ('?', '?'), ('"', '"')] 

 Dependency tags are: 
>> [(('In', 'paper'), 'case'), (('his', 'paper'), 'nmod:poss'), (('paper', 'asked'), 'obl'), ((',', 'asked'), 'punct'), (('he', 'asked'), 'nsubj'), (('asked', 'root'), 'root'), ((',', 'think'), 'punct'), (('"', 'think'), 'punct'), (('Can', 'think'), 'aux'), (('machines', 'think'), 'nsubj'), (('think', 'asked'), 'ccomp'), (('?', 'asked'), 'punct'), (('"', 'asked'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 58 ===========================

 Machine intelligence in Games: · 1952: Arthur Samuel, who was the pioneer of machine learning, created a program that helped an IBM computer to play a checkers game. 

Tokens are: 
>> ['Machine', 'intelligence', 'in', 'Games', ':', '·', '1952', ':', 'Arthur', 'Samuel', ',', 'who', 'was', 'the', 'pioneer', 'of', 'machine', 'learning', ',', 'created', 'a', 'program', 'that', 'helped', 'an', 'IBM', 'computer', 'to', 'play', 'a', 'checkers', 'game', '.'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('intelligence', 'NOUN'), ('in', 'ADP'), ('Games', 'PROPN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('1952', 'NUM'), (':', 'PUNCT'), ('Arthur', 'PROPN'), ('Samuel', 'PROPN'), (',', 'PUNCT'), ('who', 'PRON'), ('was', 'AUX'), ('the', 'DET'), ('pioneer', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('learning', 'NOUN'), (',', 'PUNCT'), ('created', 'VERB'), ('a', 'DET'), ('program', 'NOUN'), ('that', 'PRON'), ('helped', 'VERB'), ('an', 'DET'), ('IBM', 'PROPN'), ('computer', 'NOUN'), ('to', 'PART'), ('play', 'VERB'), ('a', 'DET'), ('checkers', 'NOUN'), ('game', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('intelligence', 'NN'), ('in', 'IN'), ('Games', 'NNPS'), (':', ':'), ('·', 'NFP'), ('1952', 'CD'), (':', ':'), ('Arthur', 'NNP'), ('Samuel', 'NNP'), (',', ','), ('who', 'WP'), ('was', 'VBD'), ('the', 'DT'), ('pioneer', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('learning', 'NN'), (',', ','), ('created', 'VBD'), ('a', 'DT'), ('program', 'NN'), ('that', 'WDT'), ('helped', 'VBD'), ('an', 'DT'), ('IBM', 'NNP'), ('computer', 'NN'), ('to', 'TO'), ('play', 'VB'), ('a', 'DT'), ('checkers', 'NNS'), ('game', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('intelligence', 'intelligence'), ('in', 'in'), ('Games', 'Game'), (':', ':'), ('·', '·'), ('1952', '1952'), (':', ':'), ('Arthur', 'Arthur'), ('Samuel', 'Samuel'), (',', ','), ('who', 'who'), ('was', 'be'), ('the', 'the'), ('pioneer', 'pioneer'), ('of', 'of'), ('machine', 'machine'), ('learning', 'learning'), (',', ','), ('created', 'create'), ('a', 'a'), ('program', 'program'), ('that', 'that'), ('helped', 'help'), ('an', 'a'), ('IBM', 'IBM'), ('computer', 'computer'), ('to', 'to'), ('play', 'play'), ('a', 'a'), ('checkers', 'checker'), ('game', 'game'), ('.', '.')] 

 Dependency tags are: 
>> [(('Machine', 'intelligence'), 'compound'), (('intelligence', 'root'), 'root'), (('in', 'Games'), 'case'), (('Games', 'intelligence'), 'nmod'), ((':', 'intelligence'), 'punct'), (('·', '1952'), 'punct'), (('1952', 'intelligence'), 'appos'), ((':', 'Arthur'), 'punct'), (('Arthur', 'created'), 'nsubj'), (('Samuel', 'Arthur'), 'flat'), ((',', 'Arthur'), 'punct'), (('who', 'pioneer'), 'nsubj'), (('was', 'pioneer'), 'cop'), (('the', 'pioneer'), 'det'), (('pioneer', 'Arthur'), 'acl:relcl'), (('of', 'learning'), 'case'), (('machine', 'learning'), 'compound'), (('learning', 'pioneer'), 'nmod'), ((',', 'created'), 'punct'), (('created', 'intelligence'), 'parataxis'), (('a', 'program'), 'det'), (('program', 'created'), 'obj'), (('that', 'helped'), 'nsubj'), (('helped', 'program'), 'acl:relcl'), (('an', 'computer'), 'det'), (('IBM', 'computer'), 'compound'), (('computer', 'helped'), 'obj'), (('to', 'play'), 'mark'), (('play', 'helped'), 'xcomp'), (('a', 'game'), 'det'), (('checkers', 'game'), 'compound'), (('game', 'play'), 'obj'), (('.', 'intelligence'), 'punct')]

 Named Entities are: 
>> [('1952', 'DATE'), ('Arthur Samuel', 'PERSON'), ('IBM', 'ORG')]

========================== Sentence 59 ===========================

 It performed better more it played. 

Tokens are: 
>> ['It', 'performed', 'better', 'more', 'it', 'played', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('performed', 'VERB'), ('better', 'ADV'), ('more', 'ADV'), ('it', 'PRON'), ('played', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('performed', 'VBD'), ('better', 'RBR'), ('more', 'RBR'), ('it', 'PRP'), ('played', 'VBD'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('performed', 'perform'), ('better', 'well'), ('more', 'more'), ('it', 'it'), ('played', 'play'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'performed'), 'nsubj'), (('performed', 'root'), 'root'), (('better', 'more'), 'advmod'), (('more', 'performed'), 'advmod'), (('it', 'played'), 'nsubj'), (('played', 'more'), 'acl:relcl'), (('.', 'performed'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 60 ===========================

 · 1959: In 1959, the term "Machine Learning" was first coined by Arthur Samuel. 

Tokens are: 
>> ['·', '1959', ':', 'In', '1959', ',', 'the', 'term', '"', 'Machine', 'Learning', '"', 'was', 'first', 'coined', 'by', 'Arthur', 'Samuel', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('1959', 'NUM'), (':', 'PUNCT'), ('In', 'ADP'), ('1959', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('term', 'NOUN'), ('"', 'PUNCT'), ('Machine', 'PROPN'), ('Learning', 'PROPN'), ('"', 'PUNCT'), ('was', 'AUX'), ('first', 'ADV'), ('coined', 'VERB'), ('by', 'ADP'), ('Arthur', 'PROPN'), ('Samuel', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('1959', 'CD'), (':', ':'), ('In', 'IN'), ('1959', 'CD'), (',', ','), ('the', 'DT'), ('term', 'NN'), ('"', '``'), ('Machine', 'NNP'), ('Learning', 'NNP'), ('"', "''"), ('was', 'VBD'), ('first', 'RB'), ('coined', 'VBN'), ('by', 'IN'), ('Arthur', 'NNP'), ('Samuel', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('1959', '1959'), (':', ':'), ('In', 'in'), ('1959', '1959'), (',', ','), ('the', 'the'), ('term', 'term'), ('"', '"'), ('Machine', 'Machine'), ('Learning', 'learning'), ('"', '"'), ('was', 'be'), ('first', 'first'), ('coined', 'coin'), ('by', 'by'), ('Arthur', 'Arthur'), ('Samuel', 'Samuel'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', '1959'), 'punct'), (('1959', 'root'), 'root'), ((':', '1959'), 'punct'), (('In', '1959'), 'case'), (('1959', 'coined'), 'obl'), ((',', 'coined'), 'punct'), (('the', 'term'), 'det'), (('term', 'coined'), 'nsubj:pass'), (('"', 'Learning'), 'punct'), (('Machine', 'term'), 'appos'), (('Learning', 'Machine'), 'flat'), (('"', 'Learning'), 'punct'), (('was', 'coined'), 'aux:pass'), (('first', 'coined'), 'advmod'), (('coined', '1959'), 'parataxis'), (('by', 'Arthur'), 'case'), (('Arthur', 'coined'), 'obl'), (('Samuel', 'Arthur'), 'flat'), (('.', '1959'), 'punct')]

 Named Entities are: 
>> [('1959', 'DATE'), ('1959', 'DATE'), ('"Machine Learning"', 'WORK_OF_ART'), ('first', 'ORDINAL'), ('Arthur Samuel', 'PERSON')]

========================== Sentence 61 ===========================

 The first "AI" winter: · The duration of 1974 to 1980 was the tough time for AI and ML researchers, and this duration was called as AI winter. 

Tokens are: 
>> ['The', 'first', '"', 'AI', '"', 'winter', ':', '·', 'The', 'duration', 'of', '1974', 'to', '1980', 'was', 'the', 'tough', 'time', 'for', 'AI', 'and', 'ML', 'researchers', ',', 'and', 'this', 'duration', 'was', 'called', 'as', 'AI', 'winter', '.'] 

 UPOS tags are: 
>> [('The', 'DET'), ('first', 'ADJ'), ('"', 'PUNCT'), ('AI', 'NOUN'), ('"', 'PUNCT'), ('winter', 'NOUN'), (':', 'PUNCT'), ('·', 'PUNCT'), ('The', 'DET'), ('duration', 'NOUN'), ('of', 'ADP'), ('1974', 'NUM'), ('to', 'ADP'), ('1980', 'NUM'), ('was', 'AUX'), ('the', 'DET'), ('tough', 'ADJ'), ('time', 'NOUN'), ('for', 'ADP'), ('AI', 'PROPN'), ('and', 'CCONJ'), ('ML', 'PROPN'), ('researchers', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('this', 'DET'), ('duration', 'NOUN'), ('was', 'AUX'), ('called', 'VERB'), ('as', 'ADP'), ('AI', 'AUX'), ('winter', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('The', 'DT'), ('first', 'JJ'), ('"', '``'), ('AI', 'NN'), ('"', "''"), ('winter', 'NN'), (':', ':'), ('·', 'NFP'), ('The', 'DT'), ('duration', 'NN'), ('of', 'IN'), ('1974', 'CD'), ('to', 'IN'), ('1980', 'CD'), ('was', 'VBD'), ('the', 'DT'), ('tough', 'JJ'), ('time', 'NN'), ('for', 'IN'), ('AI', 'NNP'), ('and', 'CC'), ('ML', 'NNP'), ('researchers', 'NNS'), (',', ','), ('and', 'CC'), ('this', 'DT'), ('duration', 'NN'), ('was', 'VBD'), ('called', 'VBN'), ('as', 'IN'), ('AI', 'VBZ'), ('winter', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('The', 'the'), ('first', 'first'), ('"', '"'), ('AI', 'ai'), ('"', '"'), ('winter', 'winter'), (':', ':'), ('·', '·'), ('The', 'the'), ('duration', 'duration'), ('of', 'of'), ('1974', '1974'), ('to', 'to'), ('1980', '1980'), ('was', 'be'), ('the', 'the'), ('tough', 'tough'), ('time', 'time'), ('for', 'for'), ('AI', 'AI'), ('and', 'and'), ('ML', 'ML'), ('researchers', 'researcher'), (',', ','), ('and', 'and'), ('this', 'this'), ('duration', 'duration'), ('was', 'be'), ('called', 'call'), ('as', 'as'), ('AI', 'be'), ('winter', 'winter'), ('.', '.')] 

 Dependency tags are: 
>> [(('The', 'winter'), 'det'), (('first', 'winter'), 'amod'), (('"', 'AI'), 'punct'), (('AI', 'winter'), 'compound'), (('"', 'AI'), 'punct'), (('winter', 'time'), 'nsubj'), ((':', 'winter'), 'punct'), (('·', 'time'), 'punct'), (('The', 'duration'), 'det'), (('duration', 'time'), 'nsubj'), (('of', '1974'), 'case'), (('1974', 'duration'), 'nmod'), (('to', '1980'), 'case'), (('1980', '1974'), 'nmod'), (('was', 'time'), 'cop'), (('the', 'time'), 'det'), (('tough', 'time'), 'amod'), (('time', 'root'), 'root'), (('for', 'researchers'), 'case'), (('AI', 'researchers'), 'compound'), (('and', 'ML'), 'cc'), (('ML', 'AI'), 'conj'), (('researchers', 'time'), 'nmod'), ((',', 'called'), 'punct'), (('and', 'called'), 'cc'), (('this', 'duration'), 'det'), (('duration', 'called'), 'nsubj:pass'), (('was', 'called'), 'aux:pass'), (('called', 'time'), 'conj'), (('as', 'winter'), 'case'), (('AI', 'winter'), 'cop'), (('winter', 'called'), 'obl'), (('.', 'time'), 'punct')]

 Named Entities are: 
>> [('first', 'ORDINAL'), ('1974 to 1980', 'DATE'), ('AI', 'ORG'), ('ML', 'ORG'), ('AI winter', 'DATE')]

========================== Sentence 62 ===========================

 · 

Tokens are: 
>> ['·'] 

 UPOS tags are: 
>> [('·', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP')] 

 Lemmas are: 
>> [('·', '·')] 

 Dependency tags are: 
>> [(('·', 'root'), 'root')]

 Named Entities are: 
>> []

========================== Sentence 63 ===========================

 In this duration, failure of machine translation occurred, and people had reduced their interest from AI, which led to reduced funding by the government to the researches. 

Tokens are: 
>> ['In', 'this', 'duration', ',', 'failure', 'of', 'machine', 'translation', 'occurred', ',', 'and', 'people', 'had', 'reduced', 'their', 'interest', 'from', 'AI', ',', 'which', 'led', 'to', 'reduced', 'funding', 'by', 'the', 'government', 'to', 'the', 'researches', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('this', 'DET'), ('duration', 'NOUN'), (',', 'PUNCT'), ('failure', 'NOUN'), ('of', 'ADP'), ('machine', 'NOUN'), ('translation', 'NOUN'), ('occurred', 'VERB'), (',', 'PUNCT'), ('and', 'CCONJ'), ('people', 'NOUN'), ('had', 'AUX'), ('reduced', 'VERB'), ('their', 'PRON'), ('interest', 'NOUN'), ('from', 'ADP'), ('AI', 'PROPN'), (',', 'PUNCT'), ('which', 'PRON'), ('led', 'VERB'), ('to', 'ADP'), ('reduced', 'VERB'), ('funding', 'NOUN'), ('by', 'ADP'), ('the', 'DET'), ('government', 'NOUN'), ('to', 'ADP'), ('the', 'DET'), ('researches', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('this', 'DT'), ('duration', 'NN'), (',', ','), ('failure', 'NN'), ('of', 'IN'), ('machine', 'NN'), ('translation', 'NN'), ('occurred', 'VBD'), (',', ','), ('and', 'CC'), ('people', 'NNS'), ('had', 'VBD'), ('reduced', 'VBN'), ('their', 'PRP$'), ('interest', 'NN'), ('from', 'IN'), ('AI', 'NNP'), (',', ','), ('which', 'WDT'), ('led', 'VBD'), ('to', 'IN'), ('reduced', 'VBN'), ('funding', 'NN'), ('by', 'IN'), ('the', 'DT'), ('government', 'NN'), ('to', 'IN'), ('the', 'DT'), ('researches', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('this', 'this'), ('duration', 'duration'), (',', ','), ('failure', 'failure'), ('of', 'of'), ('machine', 'machine'), ('translation', 'translation'), ('occurred', 'occur'), (',', ','), ('and', 'and'), ('people', 'people'), ('had', 'have'), ('reduced', 'reduce'), ('their', 'they'), ('interest', 'interest'), ('from', 'from'), ('AI', 'AI'), (',', ','), ('which', 'which'), ('led', 'lead'), ('to', 'to'), ('reduced', 'reduce'), ('funding', 'funding'), ('by', 'by'), ('the', 'the'), ('government', 'government'), ('to', 'to'), ('the', 'the'), ('researches', 'research'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'duration'), 'case'), (('this', 'duration'), 'det'), (('duration', 'occurred'), 'obl'), ((',', 'occurred'), 'punct'), (('failure', 'occurred'), 'nsubj'), (('of', 'translation'), 'case'), (('machine', 'translation'), 'compound'), (('translation', 'failure'), 'nmod'), (('occurred', 'root'), 'root'), ((',', 'reduced'), 'punct'), (('and', 'reduced'), 'cc'), (('people', 'reduced'), 'nsubj'), (('had', 'reduced'), 'aux'), (('reduced', 'occurred'), 'conj'), (('their', 'interest'), 'nmod:poss'), (('interest', 'reduced'), 'obj'), (('from', 'AI'), 'case'), (('AI', 'interest'), 'nmod'), ((',', 'led'), 'punct'), (('which', 'led'), 'nsubj'), (('led', 'AI'), 'acl:relcl'), (('to', 'funding'), 'case'), (('reduced', 'funding'), 'amod'), (('funding', 'led'), 'obl'), (('by', 'government'), 'case'), (('the', 'government'), 'det'), (('government', 'funding'), 'nmod'), (('to', 'researches'), 'case'), (('the', 'researches'), 'det'), (('researches', 'government'), 'nmod'), (('.', 'occurred'), 'punct')]

 Named Entities are: 
>> [('AI', 'ORG')]

========================== Sentence 64 ===========================

 Machine Learning from theory to reality · 1959: 

Tokens are: 
>> ['Machine', 'Learning', 'from', 'theory', 'to', 'reality', '·', '1959', ':'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('Learning', 'VERB'), ('from', 'ADP'), ('theory', 'NOUN'), ('to', 'ADP'), ('reality', 'NOUN'), ('·', 'PUNCT'), ('1959', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('Learning', 'VBG'), ('from', 'IN'), ('theory', 'NN'), ('to', 'IN'), ('reality', 'NN'), ('·', ','), ('1959', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('Learning', 'learning'), ('from', 'from'), ('theory', 'theory'), ('to', 'to'), ('reality', 'reality'), ('·', '·'), ('1959', '1959'), (':', ':')] 

 Dependency tags are: 
>> [(('Machine', 'root'), 'root'), (('Learning', 'Machine'), 'acl'), (('from', 'theory'), 'case'), (('theory', 'Learning'), 'obl'), (('to', 'reality'), 'case'), (('reality', 'theory'), 'nmod'), (('·', 'Learning'), 'punct'), (('1959', 'reality'), 'appos'), ((':', 'Machine'), 'punct')]

 Named Entities are: 
>> [('1959', 'DATE')]

========================== Sentence 65 ===========================

 In 1959, the first neural network was applied to a real-world problem to remove echoes over phone lines using an adaptive filter. 

Tokens are: 
>> ['In', '1959', ',', 'the', 'first', 'neural', 'network', 'was', 'applied', 'to', 'a', 'real', '-', 'world', 'problem', 'to', 'remove', 'echoes', 'over', 'phone', 'lines', 'using', 'an', 'adaptive', 'filter', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('1959', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('first', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('was', 'AUX'), ('applied', 'VERB'), ('to', 'ADP'), ('a', 'DET'), ('real', 'ADJ'), ('-', 'PUNCT'), ('world', 'NOUN'), ('problem', 'NOUN'), ('to', 'PART'), ('remove', 'VERB'), ('echoes', 'NOUN'), ('over', 'ADP'), ('phone', 'NOUN'), ('lines', 'NOUN'), ('using', 'VERB'), ('an', 'DET'), ('adaptive', 'ADJ'), ('filter', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('1959', 'CD'), (',', ','), ('the', 'DT'), ('first', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('was', 'VBD'), ('applied', 'VBN'), ('to', 'IN'), ('a', 'DT'), ('real', 'JJ'), ('-', 'HYPH'), ('world', 'NN'), ('problem', 'NN'), ('to', 'TO'), ('remove', 'VB'), ('echoes', 'NNS'), ('over', 'IN'), ('phone', 'NN'), ('lines', 'NNS'), ('using', 'VBG'), ('an', 'DT'), ('adaptive', 'JJ'), ('filter', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('1959', '1959'), (',', ','), ('the', 'the'), ('first', 'first'), ('neural', 'neural'), ('network', 'network'), ('was', 'be'), ('applied', 'apply'), ('to', 'to'), ('a', 'a'), ('real', 'real'), ('-', '-'), ('world', 'world'), ('problem', 'problem'), ('to', 'to'), ('remove', 'remove'), ('echoes', 'echoe'), ('over', 'over'), ('phone', 'phone'), ('lines', 'line'), ('using', 'use'), ('an', 'a'), ('adaptive', 'adaptive'), ('filter', 'filter'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '1959'), 'case'), (('1959', 'applied'), 'obl'), ((',', 'applied'), 'punct'), (('the', 'network'), 'det'), (('first', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'applied'), 'nsubj:pass'), (('was', 'applied'), 'aux:pass'), (('applied', 'root'), 'root'), (('to', 'problem'), 'case'), (('a', 'problem'), 'det'), (('real', 'world'), 'amod'), (('-', 'world'), 'punct'), (('world', 'problem'), 'compound'), (('problem', 'applied'), 'obl'), (('to', 'remove'), 'mark'), (('remove', 'problem'), 'acl'), (('echoes', 'remove'), 'obj'), (('over', 'lines'), 'case'), (('phone', 'lines'), 'compound'), (('lines', 'remove'), 'obl'), (('using', 'remove'), 'advcl'), (('an', 'filter'), 'det'), (('adaptive', 'filter'), 'amod'), (('filter', 'using'), 'obj'), (('.', 'applied'), 'punct')]

 Named Entities are: 
>> [('1959', 'DATE'), ('first', 'ORDINAL')]

========================== Sentence 66 ===========================

 · 1985: In 1985, Terry Sejnowski and Charles Rosenberg invented a neural network NETtalk, which was able to teach itself how to correctly pronounce 20,000 words in one week. 

Tokens are: 
>> ['·', '1985', ':', 'In', '1985', ',', 'Terry', 'Sejnowski', 'and', 'Charles', 'Rosenberg', 'invented', 'a', 'neural', 'network', 'NETtalk', ',', 'which', 'was', 'able', 'to', 'teach', 'itself', 'how', 'to', 'correctly', 'pronounce', '20,000', 'words', 'in', 'one', 'week', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('1985', 'NUM'), (':', 'PUNCT'), ('In', 'ADP'), ('1985', 'NUM'), (',', 'PUNCT'), ('Terry', 'PROPN'), ('Sejnowski', 'PROPN'), ('and', 'CCONJ'), ('Charles', 'PROPN'), ('Rosenberg', 'PROPN'), ('invented', 'VERB'), ('a', 'DET'), ('neural', 'ADJ'), ('network', 'NOUN'), ('NETtalk', 'PROPN'), (',', 'PUNCT'), ('which', 'PRON'), ('was', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('teach', 'VERB'), ('itself', 'PRON'), ('how', 'SCONJ'), ('to', 'PART'), ('correctly', 'ADV'), ('pronounce', 'VERB'), ('20,000', 'NUM'), ('words', 'NOUN'), ('in', 'ADP'), ('one', 'NUM'), ('week', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('1985', 'CD'), (':', ':'), ('In', 'IN'), ('1985', 'CD'), (',', ','), ('Terry', 'NNP'), ('Sejnowski', 'NNP'), ('and', 'CC'), ('Charles', 'NNP'), ('Rosenberg', 'NNP'), ('invented', 'VBD'), ('a', 'DT'), ('neural', 'JJ'), ('network', 'NN'), ('NETtalk', 'NNP'), (',', ','), ('which', 'WDT'), ('was', 'VBD'), ('able', 'JJ'), ('to', 'TO'), ('teach', 'VB'), ('itself', 'PRP'), ('how', 'WRB'), ('to', 'TO'), ('correctly', 'RB'), ('pronounce', 'VB'), ('20,000', 'CD'), ('words', 'NNS'), ('in', 'IN'), ('one', 'CD'), ('week', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('1985', '1985'), (':', ':'), ('In', 'in'), ('1985', '1985'), (',', ','), ('Terry', 'Terry'), ('Sejnowski', 'Sejnowski'), ('and', 'and'), ('Charles', 'Charles'), ('Rosenberg', 'Rosenberg'), ('invented', 'invent'), ('a', 'a'), ('neural', 'neural'), ('network', 'network'), ('NETtalk', 'NETtalk'), (',', ','), ('which', 'which'), ('was', 'be'), ('able', 'able'), ('to', 'to'), ('teach', 'teach'), ('itself', 'itself'), ('how', 'how'), ('to', 'to'), ('correctly', 'correctly'), ('pronounce', 'pronounce'), ('20,000', '20000'), ('words', 'word'), ('in', 'in'), ('one', 'one'), ('week', 'week'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', '1985'), 'punct'), (('1985', 'root'), 'root'), ((':', '1985'), 'punct'), (('In', '1985'), 'case'), (('1985', 'invented'), 'obl'), ((',', 'invented'), 'punct'), (('Terry', 'invented'), 'nsubj'), (('Sejnowski', 'Terry'), 'flat'), (('and', 'Charles'), 'cc'), (('Charles', 'Terry'), 'conj'), (('Rosenberg', 'Charles'), 'flat'), (('invented', '1985'), 'parataxis'), (('a', 'network'), 'det'), (('neural', 'network'), 'amod'), (('network', 'invented'), 'obj'), (('NETtalk', 'network'), 'appos'), ((',', 'able'), 'punct'), (('which', 'able'), 'nsubj'), (('was', 'able'), 'cop'), (('able', 'network'), 'acl:relcl'), (('to', 'teach'), 'mark'), (('teach', 'able'), 'xcomp'), (('itself', 'teach'), 'obj'), (('how', 'pronounce'), 'mark'), (('to', 'pronounce'), 'mark'), (('correctly', 'pronounce'), 'advmod'), (('pronounce', 'teach'), 'ccomp'), (('20,000', 'words'), 'nummod'), (('words', 'pronounce'), 'obj'), (('in', 'week'), 'case'), (('one', 'week'), 'nummod'), (('week', 'pronounce'), 'obl'), (('.', '1985'), 'punct')]

 Named Entities are: 
>> [('1985', 'DATE'), ('1985', 'DATE'), ('Terry Sejnowski', 'PERSON'), ('Charles Rosenberg', 'PERSON'), ('NETtalk', 'ORG'), ('20,000', 'CARDINAL'), ('one week', 'DATE')]

========================== Sentence 67 ===========================

 · 1997: The IBM's Deep blue intelligent computer won the chess game against the chess expert Garry Kasparov, and it became the first computer which had beaten a human chess expert. 

Tokens are: 
>> ['·', '1997', ':', 'The', 'IBM', "'s", 'Deep', 'blue', 'intelligent', 'computer', 'won', 'the', 'chess', 'game', 'against', 'the', 'chess', 'expert', 'Garry', 'Kasparov', ',', 'and', 'it', 'became', 'the', 'first', 'computer', 'which', 'had', 'beaten', 'a', 'human', 'chess', 'expert', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('1997', 'NUM'), (':', 'PUNCT'), ('The', 'DET'), ('IBM', 'PROPN'), ("'s", 'PART'), ('Deep', 'ADJ'), ('blue', 'ADJ'), ('intelligent', 'ADJ'), ('computer', 'NOUN'), ('won', 'VERB'), ('the', 'DET'), ('chess', 'NOUN'), ('game', 'NOUN'), ('against', 'ADP'), ('the', 'DET'), ('chess', 'NOUN'), ('expert', 'NOUN'), ('Garry', 'PROPN'), ('Kasparov', 'PROPN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('became', 'VERB'), ('the', 'DET'), ('first', 'ADJ'), ('computer', 'NOUN'), ('which', 'PRON'), ('had', 'AUX'), ('beaten', 'VERB'), ('a', 'DET'), ('human', 'ADJ'), ('chess', 'NOUN'), ('expert', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('1997', 'CD'), (':', ':'), ('The', 'DT'), ('IBM', 'NNP'), ("'s", 'POS'), ('Deep', 'JJ'), ('blue', 'JJ'), ('intelligent', 'JJ'), ('computer', 'NN'), ('won', 'VBD'), ('the', 'DT'), ('chess', 'NN'), ('game', 'NN'), ('against', 'IN'), ('the', 'DT'), ('chess', 'NN'), ('expert', 'NN'), ('Garry', 'NNP'), ('Kasparov', 'NNP'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('became', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('computer', 'NN'), ('which', 'WDT'), ('had', 'VBD'), ('beaten', 'VBN'), ('a', 'DT'), ('human', 'JJ'), ('chess', 'NN'), ('expert', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('1997', '1997'), (':', ':'), ('The', 'the'), ('IBM', 'IBM'), ("'s", "'s"), ('Deep', 'deep'), ('blue', 'blue'), ('intelligent', 'intelligent'), ('computer', 'computer'), ('won', 'win'), ('the', 'the'), ('chess', 'chess'), ('game', 'game'), ('against', 'against'), ('the', 'the'), ('chess', 'chess'), ('expert', 'expert'), ('Garry', 'Garry'), ('Kasparov', 'Kasparov'), (',', ','), ('and', 'and'), ('it', 'it'), ('became', 'become'), ('the', 'the'), ('first', 'first'), ('computer', 'computer'), ('which', 'which'), ('had', 'have'), ('beaten', 'beat'), ('a', 'a'), ('human', 'human'), ('chess', 'chess'), ('expert', 'expert'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', '1997'), 'punct'), (('1997', 'root'), 'root'), ((':', '1997'), 'punct'), (('The', 'IBM'), 'det'), (('IBM', 'computer'), 'nmod:poss'), (("'s", 'IBM'), 'case'), (('Deep', 'computer'), 'amod'), (('blue', 'computer'), 'amod'), (('intelligent', 'computer'), 'amod'), (('computer', 'won'), 'nsubj'), (('won', '1997'), 'parataxis'), (('the', 'game'), 'det'), (('chess', 'game'), 'compound'), (('game', 'won'), 'obj'), (('against', 'expert'), 'case'), (('the', 'expert'), 'det'), (('chess', 'expert'), 'compound'), (('expert', 'won'), 'obl'), (('Garry', 'expert'), 'appos'), (('Kasparov', 'Garry'), 'flat'), ((',', 'became'), 'punct'), (('and', 'became'), 'cc'), (('it', 'became'), 'expl'), (('became', 'won'), 'conj'), (('the', 'computer'), 'det'), (('first', 'computer'), 'amod'), (('computer', 'became'), 'xcomp'), (('which', 'beaten'), 'nsubj'), (('had', 'beaten'), 'aux'), (('beaten', 'computer'), 'acl:relcl'), (('a', 'expert'), 'det'), (('human', 'expert'), 'amod'), (('chess', 'expert'), 'compound'), (('expert', 'beaten'), 'obj'), (('.', '1997'), 'punct')]

 Named Entities are: 
>> [('1997', 'DATE'), ('IBM', 'ORG'), ('Garry Kasparov', 'PERSON'), ('first', 'ORDINAL')]

========================== Sentence 68 ===========================

 Machine Learning at 21st century · 2006: 

Tokens are: 
>> ['Machine', 'Learning', 'at', '21st', 'century', '·', '2006', ':'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('Learning', 'VERB'), ('at', 'ADP'), ('21st', 'ADJ'), ('century', 'NOUN'), ('·', 'PUNCT'), ('2006', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('Learning', 'VBG'), ('at', 'IN'), ('21st', 'JJ'), ('century', 'NN'), ('·', ','), ('2006', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('Learning', 'learning'), ('at', 'at'), ('21st', '21st'), ('century', 'century'), ('·', '·'), ('2006', '2006'), (':', ':')] 

 Dependency tags are: 
>> [(('Machine', 'root'), 'root'), (('Learning', 'Machine'), 'acl'), (('at', 'century'), 'case'), (('21st', 'century'), 'amod'), (('century', 'Learning'), 'obl'), (('·', 'Learning'), 'punct'), (('2006', 'century'), 'nummod'), ((':', 'Machine'), 'punct')]

 Named Entities are: 
>> [('21st century · 2006', 'DATE')]

========================== Sentence 69 ===========================

 In the year 2006, computer scientist Geoffrey Hinton has given a new name to neural net research as "deep learning," and nowadays, it has become one of the most trending technologies. 

Tokens are: 
>> ['In', 'the', 'year', '2006', ',', 'computer', 'scientist', 'Geoffrey', 'Hinton', 'has', 'given', 'a', 'new', 'name', 'to', 'neural', 'net', 'research', 'as', '"', 'deep', 'learning', ',', '"', 'and', 'nowadays', ',', 'it', 'has', 'become', 'one', 'of', 'the', 'most', 'trending', 'technologies', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('the', 'DET'), ('year', 'NOUN'), ('2006', 'NUM'), (',', 'PUNCT'), ('computer', 'NOUN'), ('scientist', 'NOUN'), ('Geoffrey', 'PROPN'), ('Hinton', 'PROPN'), ('has', 'AUX'), ('given', 'VERB'), ('a', 'DET'), ('new', 'ADJ'), ('name', 'NOUN'), ('to', 'ADP'), ('neural', 'ADJ'), ('net', 'NOUN'), ('research', 'NOUN'), ('as', 'ADP'), ('"', 'PUNCT'), ('deep', 'ADJ'), ('learning', 'NOUN'), (',', 'PUNCT'), ('"', 'PUNCT'), ('and', 'CCONJ'), ('nowadays', 'ADV'), (',', 'PUNCT'), ('it', 'PRON'), ('has', 'AUX'), ('become', 'VERB'), ('one', 'NUM'), ('of', 'ADP'), ('the', 'DET'), ('most', 'ADV'), ('trending', 'VERB'), ('technologies', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('the', 'DT'), ('year', 'NN'), ('2006', 'CD'), (',', ','), ('computer', 'NN'), ('scientist', 'NN'), ('Geoffrey', 'NNP'), ('Hinton', 'NNP'), ('has', 'VBZ'), ('given', 'VBN'), ('a', 'DT'), ('new', 'JJ'), ('name', 'NN'), ('to', 'IN'), ('neural', 'JJ'), ('net', 'NN'), ('research', 'NN'), ('as', 'IN'), ('"', '``'), ('deep', 'JJ'), ('learning', 'NN'), (',', ','), ('"', "''"), ('and', 'CC'), ('nowadays', 'RB'), (',', ','), ('it', 'PRP'), ('has', 'VBZ'), ('become', 'VBN'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('most', 'RBS'), ('trending', 'VBG'), ('technologies', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('the', 'the'), ('year', 'year'), ('2006', '2006'), (',', ','), ('computer', 'computer'), ('scientist', 'scientist'), ('Geoffrey', 'Geoffrey'), ('Hinton', 'Hinton'), ('has', 'have'), ('given', 'give'), ('a', 'a'), ('new', 'new'), ('name', 'name'), ('to', 'to'), ('neural', 'neural'), ('net', 'net'), ('research', 'research'), ('as', 'as'), ('"', '"'), ('deep', 'deep'), ('learning', 'learning'), (',', ','), ('"', '"'), ('and', 'and'), ('nowadays', 'nowadays'), (',', ','), ('it', 'it'), ('has', 'have'), ('become', 'become'), ('one', 'one'), ('of', 'of'), ('the', 'the'), ('most', 'most'), ('trending', 'trend'), ('technologies', 'technology'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', 'year'), 'case'), (('the', 'year'), 'det'), (('year', 'given'), 'obl'), (('2006', 'year'), 'nummod'), ((',', 'given'), 'punct'), (('computer', 'scientist'), 'compound'), (('scientist', 'given'), 'nsubj'), (('Geoffrey', 'scientist'), 'appos'), (('Hinton', 'Geoffrey'), 'flat'), (('has', 'given'), 'aux'), (('given', 'root'), 'root'), (('a', 'name'), 'det'), (('new', 'name'), 'amod'), (('name', 'given'), 'obj'), (('to', 'research'), 'case'), (('neural', 'research'), 'amod'), (('net', 'research'), 'compound'), (('research', 'name'), 'nmod'), (('as', 'learning'), 'case'), (('"', 'learning'), 'punct'), (('deep', 'learning'), 'amod'), (('learning', 'given'), 'obl'), ((',', 'become'), 'punct'), (('"', 'learning'), 'punct'), (('and', 'become'), 'cc'), (('nowadays', 'become'), 'advmod'), ((',', 'become'), 'punct'), (('it', 'become'), 'nsubj'), (('has', 'become'), 'aux'), (('become', 'given'), 'conj'), (('one', 'become'), 'xcomp'), (('of', 'technologies'), 'case'), (('the', 'technologies'), 'det'), (('most', 'trending'), 'advmod'), (('trending', 'technologies'), 'amod'), (('technologies', 'one'), 'nmod'), (('.', 'given'), 'punct')]

 Named Entities are: 
>> [('the year 2006', 'DATE'), ('Geoffrey Hinton', 'PERSON')]

========================== Sentence 70 ===========================

 · 2012: 

Tokens are: 
>> ['·', '2012', ':'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('2012', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('2012', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('·', '·'), ('2012', '2012'), (':', ':')] 

 Dependency tags are: 
>> [(('·', '2012'), 'punct'), (('2012', 'root'), 'root'), ((':', '2012'), 'punct')]

 Named Entities are: 
>> [('2012', 'DATE')]

========================== Sentence 71 ===========================

 In 2012, Google created a deep neural network which learned to recognize the image of humans and cats in YouTube videos. 

Tokens are: 
>> ['In', '2012', ',', 'Google', 'created', 'a', 'deep', 'neural', 'network', 'which', 'learned', 'to', 'recognize', 'the', 'image', 'of', 'humans', 'and', 'cats', 'in', 'YouTube', 'videos', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('2012', 'NUM'), (',', 'PUNCT'), ('Google', 'PROPN'), ('created', 'VERB'), ('a', 'DET'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('which', 'PRON'), ('learned', 'VERB'), ('to', 'PART'), ('recognize', 'VERB'), ('the', 'DET'), ('image', 'NOUN'), ('of', 'ADP'), ('humans', 'NOUN'), ('and', 'CCONJ'), ('cats', 'NOUN'), ('in', 'ADP'), ('YouTube', 'PROPN'), ('videos', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('2012', 'CD'), (',', ','), ('Google', 'NNP'), ('created', 'VBD'), ('a', 'DT'), ('deep', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('which', 'WDT'), ('learned', 'VBD'), ('to', 'TO'), ('recognize', 'VB'), ('the', 'DT'), ('image', 'NN'), ('of', 'IN'), ('humans', 'NNS'), ('and', 'CC'), ('cats', 'NNS'), ('in', 'IN'), ('YouTube', 'NNP'), ('videos', 'NNS'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('2012', '2012'), (',', ','), ('Google', 'Google'), ('created', 'create'), ('a', 'a'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('which', 'which'), ('learned', 'learn'), ('to', 'to'), ('recognize', 'recognize'), ('the', 'the'), ('image', 'image'), ('of', 'of'), ('humans', 'human'), ('and', 'and'), ('cats', 'cat'), ('in', 'in'), ('YouTube', 'YouTube'), ('videos', 'video'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '2012'), 'case'), (('2012', 'created'), 'obl'), ((',', 'created'), 'punct'), (('Google', 'created'), 'nsubj'), (('created', 'root'), 'root'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'created'), 'obj'), (('which', 'learned'), 'nsubj'), (('learned', 'network'), 'acl:relcl'), (('to', 'recognize'), 'mark'), (('recognize', 'learned'), 'xcomp'), (('the', 'image'), 'det'), (('image', 'recognize'), 'obj'), (('of', 'humans'), 'case'), (('humans', 'image'), 'nmod'), (('and', 'cats'), 'cc'), (('cats', 'humans'), 'conj'), (('in', 'videos'), 'case'), (('YouTube', 'videos'), 'compound'), (('videos', 'recognize'), 'obl'), (('.', 'created'), 'punct')]

 Named Entities are: 
>> [('2012', 'DATE'), ('Google', 'ORG'), ('YouTube', 'ORG')]

========================== Sentence 72 ===========================

 · 2014: In 2014, the Chabot "Eugen Goostman" cleared the Turing Test. 

Tokens are: 
>> ['·', '2014', ':', 'In', '2014', ',', 'the', 'Chabot', '"', 'Eugen', 'Goostman', '"', 'cleared', 'the', 'Turing', 'Test', '.'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('2014', 'NUM'), (':', 'PUNCT'), ('In', 'ADP'), ('2014', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('Chabot', 'PROPN'), ('"', 'PUNCT'), ('Eugen', 'PROPN'), ('Goostman', 'PROPN'), ('"', 'PUNCT'), ('cleared', 'VERB'), ('the', 'DET'), ('Turing', 'PROPN'), ('Test', 'PROPN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('2014', 'CD'), (':', ':'), ('In', 'IN'), ('2014', 'CD'), (',', ','), ('the', 'DT'), ('Chabot', 'NNP'), ('"', '``'), ('Eugen', 'NNP'), ('Goostman', 'NNP'), ('"', "''"), ('cleared', 'VBD'), ('the', 'DT'), ('Turing', 'NNP'), ('Test', 'NNP'), ('.', '.')] 

 Lemmas are: 
>> [('·', '·'), ('2014', '2014'), (':', ':'), ('In', 'in'), ('2014', '2014'), (',', ','), ('the', 'the'), ('Chabot', 'Chabot'), ('"', '"'), ('Eugen', 'Eugen'), ('Goostman', 'Goostman'), ('"', '"'), ('cleared', 'clear'), ('the', 'the'), ('Turing', 'Turing'), ('Test', 'Test'), ('.', '.')] 

 Dependency tags are: 
>> [(('·', '2014'), 'punct'), (('2014', 'root'), 'root'), ((':', '2014'), 'punct'), (('In', '2014'), 'case'), (('2014', 'cleared'), 'obl'), ((',', 'cleared'), 'punct'), (('the', 'Chabot'), 'det'), (('Chabot', 'cleared'), 'nsubj'), (('"', 'Eugen'), 'punct'), (('Eugen', 'Chabot'), 'appos'), (('Goostman', 'Eugen'), 'flat'), (('"', 'Eugen'), 'punct'), (('cleared', '2014'), 'parataxis'), (('the', 'Test'), 'det'), (('Turing', 'Test'), 'compound'), (('Test', 'cleared'), 'obj'), (('.', '2014'), 'punct')]

 Named Entities are: 
>> [('2014', 'DATE'), ('2014', 'DATE'), ('the Chabot "Eugen Goostman"', 'WORK_OF_ART'), ('the Turing Test', 'PRODUCT')]

========================== Sentence 73 ===========================

 It was the first Chabot who convinced the 33% of human judges that it was not a machine. 

Tokens are: 
>> ['It', 'was', 'the', 'first', 'Chabot', 'who', 'convinced', 'the', '33', '%', 'of', 'human', 'judges', 'that', 'it', 'was', 'not', 'a', 'machine', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('was', 'AUX'), ('the', 'DET'), ('first', 'ADJ'), ('Chabot', 'PROPN'), ('who', 'PRON'), ('convinced', 'VERB'), ('the', 'DET'), ('33', 'NUM'), ('%', 'SYM'), ('of', 'ADP'), ('human', 'ADJ'), ('judges', 'NOUN'), ('that', 'SCONJ'), ('it', 'PRON'), ('was', 'AUX'), ('not', 'PART'), ('a', 'DET'), ('machine', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('was', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('Chabot', 'NNP'), ('who', 'WP'), ('convinced', 'VBD'), ('the', 'DT'), ('33', 'CD'), ('%', 'NN'), ('of', 'IN'), ('human', 'JJ'), ('judges', 'NNS'), ('that', 'IN'), ('it', 'PRP'), ('was', 'VBD'), ('not', 'RB'), ('a', 'DT'), ('machine', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('was', 'be'), ('the', 'the'), ('first', 'first'), ('Chabot', 'Chabot'), ('who', 'who'), ('convinced', 'convince'), ('the', 'the'), ('33', '33'), ('%', '%'), ('of', 'of'), ('human', 'human'), ('judges', 'judge'), ('that', 'that'), ('it', 'it'), ('was', 'be'), ('not', 'not'), ('a', 'a'), ('machine', 'machine'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'Chabot'), 'nsubj'), (('was', 'Chabot'), 'cop'), (('the', 'Chabot'), 'det'), (('first', 'Chabot'), 'amod'), (('Chabot', 'root'), 'root'), (('who', 'convinced'), 'nsubj'), (('convinced', 'Chabot'), 'acl:relcl'), (('the', '%'), 'det'), (('33', '%'), 'nummod'), (('%', 'convinced'), 'obj'), (('of', 'judges'), 'case'), (('human', 'judges'), 'amod'), (('judges', '%'), 'nmod'), (('that', 'machine'), 'mark'), (('it', 'machine'), 'nsubj'), (('was', 'machine'), 'cop'), (('not', 'machine'), 'advmod'), (('a', 'machine'), 'det'), (('machine', 'convinced'), 'ccomp'), (('.', 'Chabot'), 'punct')]

 Named Entities are: 
>> [('Chabot', 'PERSON'), ('33%', 'PERCENT')]

========================== Sentence 74 ===========================

 · 2014: Deep 

Tokens are: 
>> ['·', '2014', ':', 'Deep'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('2014', 'NUM'), (':', 'PUNCT'), ('Deep', 'ADJ')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('2014', 'CD'), (':', ':'), ('Deep', 'JJ')] 

 Lemmas are: 
>> [('·', '·'), ('2014', '2014'), (':', ':'), ('Deep', 'deep')] 

 Dependency tags are: 
>> [(('·', '2014'), 'punct'), (('2014', 'root'), 'root'), ((':', '2014'), 'punct'), (('Deep', '2014'), 'parataxis')]

 Named Entities are: 
>> [('2014', 'DATE')]

========================== Sentence 75 ===========================

 Face was a deep neural network created by Facebook, and they claimed that it could recognize a person with the same precision as a human can do. 

Tokens are: 
>> ['Face', 'was', 'a', 'deep', 'neural', 'network', 'created', 'by', 'Facebook', ',', 'and', 'they', 'claimed', 'that', 'it', 'could', 'recognize', 'a', 'person', 'with', 'the', 'same', 'precision', 'as', 'a', 'human', 'can', 'do', '.'] 

 UPOS tags are: 
>> [('Face', 'NOUN'), ('was', 'AUX'), ('a', 'DET'), ('deep', 'ADJ'), ('neural', 'ADJ'), ('network', 'NOUN'), ('created', 'VERB'), ('by', 'ADP'), ('Facebook', 'PROPN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('they', 'PRON'), ('claimed', 'VERB'), ('that', 'SCONJ'), ('it', 'PRON'), ('could', 'AUX'), ('recognize', 'VERB'), ('a', 'DET'), ('person', 'NOUN'), ('with', 'ADP'), ('the', 'DET'), ('same', 'ADJ'), ('precision', 'NOUN'), ('as', 'SCONJ'), ('a', 'DET'), ('human', 'NOUN'), ('can', 'AUX'), ('do', 'VERB'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Face', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('deep', 'JJ'), ('neural', 'JJ'), ('network', 'NN'), ('created', 'VBN'), ('by', 'IN'), ('Facebook', 'NNP'), (',', ','), ('and', 'CC'), ('they', 'PRP'), ('claimed', 'VBD'), ('that', 'IN'), ('it', 'PRP'), ('could', 'MD'), ('recognize', 'VB'), ('a', 'DT'), ('person', 'NN'), ('with', 'IN'), ('the', 'DT'), ('same', 'JJ'), ('precision', 'NN'), ('as', 'IN'), ('a', 'DT'), ('human', 'NN'), ('can', 'MD'), ('do', 'VB'), ('.', '.')] 

 Lemmas are: 
>> [('Face', 'face'), ('was', 'be'), ('a', 'a'), ('deep', 'deep'), ('neural', 'neural'), ('network', 'network'), ('created', 'create'), ('by', 'by'), ('Facebook', 'Facebook'), (',', ','), ('and', 'and'), ('they', 'they'), ('claimed', 'claim'), ('that', 'that'), ('it', 'it'), ('could', 'could'), ('recognize', 'recognize'), ('a', 'a'), ('person', 'person'), ('with', 'with'), ('the', 'the'), ('same', 'same'), ('precision', 'precision'), ('as', 'as'), ('a', 'a'), ('human', 'human'), ('can', 'can'), ('do', 'do'), ('.', '.')] 

 Dependency tags are: 
>> [(('Face', 'network'), 'nsubj'), (('was', 'network'), 'cop'), (('a', 'network'), 'det'), (('deep', 'network'), 'amod'), (('neural', 'network'), 'amod'), (('network', 'root'), 'root'), (('created', 'network'), 'acl'), (('by', 'Facebook'), 'case'), (('Facebook', 'created'), 'obl'), ((',', 'claimed'), 'punct'), (('and', 'claimed'), 'cc'), (('they', 'claimed'), 'nsubj'), (('claimed', 'network'), 'conj'), (('that', 'recognize'), 'mark'), (('it', 'recognize'), 'nsubj'), (('could', 'recognize'), 'aux'), (('recognize', 'claimed'), 'ccomp'), (('a', 'person'), 'det'), (('person', 'recognize'), 'obj'), (('with', 'precision'), 'case'), (('the', 'precision'), 'det'), (('same', 'precision'), 'amod'), (('precision', 'person'), 'nmod'), (('as', 'do'), 'mark'), (('a', 'human'), 'det'), (('human', 'do'), 'nsubj'), (('can', 'do'), 'aux'), (('do', 'recognize'), 'advcl'), (('.', 'network'), 'punct')]

 Named Entities are: 
>> [('Facebook', 'ORG')]

========================== Sentence 76 ===========================

 · 2016: Alpha 

Tokens are: 
>> ['·', '2016', ':', 'Alpha'] 

 UPOS tags are: 
>> [('·', 'PUNCT'), ('2016', 'NUM'), (':', 'PUNCT'), ('Alpha', 'PROPN')] 

 XPOS tags are: 
>> [('·', 'NFP'), ('2016', 'CD'), (':', ':'), ('Alpha', 'NNP')] 

 Lemmas are: 
>> [('·', '·'), ('2016', '2016'), (':', ':'), ('Alpha', 'Alpha')] 

 Dependency tags are: 
>> [(('·', '2016'), 'punct'), (('2016', 'root'), 'root'), ((':', '2016'), 'punct'), (('Alpha', '2016'), 'appos')]

 Named Entities are: 
>> [('2016', 'DATE')]

========================== Sentence 77 ===========================

 Go beat the world's number second player Lee sedol at Go game. 

Tokens are: 
>> ['Go', 'beat', 'the', 'world', "'s", 'number', 'second', 'player', 'Lee', 'sedol', 'at', 'Go', 'game', '.'] 

 UPOS tags are: 
>> [('Go', 'VERB'), ('beat', 'VERB'), ('the', 'DET'), ('world', 'NOUN'), ("'s", 'PART'), ('number', 'NOUN'), ('second', 'ADJ'), ('player', 'NOUN'), ('Lee', 'PROPN'), ('sedol', 'PROPN'), ('at', 'ADP'), ('Go', 'PROPN'), ('game', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Go', 'VB'), ('beat', 'VB'), ('the', 'DT'), ('world', 'NN'), ("'s", 'POS'), ('number', 'NN'), ('second', 'JJ'), ('player', 'NN'), ('Lee', 'NNP'), ('sedol', 'NNP'), ('at', 'IN'), ('Go', 'NNP'), ('game', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('Go', 'go'), ('beat', 'beat'), ('the', 'the'), ('world', 'world'), ("'s", "'s"), ('number', 'number'), ('second', 'second'), ('player', 'player'), ('Lee', 'Lee'), ('sedol', 'sedol'), ('at', 'at'), ('Go', 'go'), ('game', 'game'), ('.', '.')] 

 Dependency tags are: 
>> [(('Go', 'root'), 'root'), (('beat', 'Go'), 'xcomp'), (('the', 'world'), 'det'), (('world', 'number'), 'nmod:poss'), (("'s", 'world'), 'case'), (('number', 'Go'), 'obj'), (('second', 'player'), 'amod'), (('player', 'number'), 'appos'), (('Lee', 'player'), 'flat'), (('sedol', 'Lee'), 'flat'), (('at', 'game'), 'case'), (('Go', 'game'), 'compound'), (('game', 'Go'), 'obl'), (('.', 'Go'), 'punct')]

 Named Entities are: 
>> [('second', 'ORDINAL'), ('Lee', 'PERSON')]

========================== Sentence 78 ===========================

 In 2017 it beat the number one player of this game Ke Jie. · 2017: 

Tokens are: 
>> ['In', '2017', 'it', 'beat', 'the', 'number', 'one', 'player', 'of', 'this', 'game', 'Ke', 'Jie', '.', '·', '2017', ':'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('2017', 'NUM'), ('it', 'PRON'), ('beat', 'VERB'), ('the', 'DET'), ('number', 'NOUN'), ('one', 'NUM'), ('player', 'NOUN'), ('of', 'ADP'), ('this', 'DET'), ('game', 'NOUN'), ('Ke', 'PROPN'), ('Jie', 'PROPN'), ('.', 'PUNCT'), ('·', 'PUNCT'), ('2017', 'NUM'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('2017', 'CD'), ('it', 'PRP'), ('beat', 'VBP'), ('the', 'DT'), ('number', 'NN'), ('one', 'CD'), ('player', 'NN'), ('of', 'IN'), ('this', 'DT'), ('game', 'NN'), ('Ke', 'NNP'), ('Jie', 'NNP'), ('.', '.'), ('·', 'NFP'), ('2017', 'CD'), (':', ':')] 

 Lemmas are: 
>> [('In', 'in'), ('2017', '2017'), ('it', 'it'), ('beat', 'beat'), ('the', 'the'), ('number', 'number'), ('one', 'one'), ('player', 'player'), ('of', 'of'), ('this', 'this'), ('game', 'game'), ('Ke', 'Ke'), ('Jie', 'Jie'), ('.', '.'), ('·', '·'), ('2017', '2017'), (':', ':')] 

 Dependency tags are: 
>> [(('In', '2017'), 'case'), (('2017', 'beat'), 'obl'), (('it', 'beat'), 'nsubj'), (('beat', 'root'), 'root'), (('the', 'number'), 'det'), (('number', 'beat'), 'obj'), (('one', 'player'), 'nummod'), (('player', 'beat'), 'obj'), (('of', 'game'), 'case'), (('this', 'game'), 'det'), (('game', 'player'), 'nmod'), (('Ke', 'game'), 'appos'), (('Jie', 'Ke'), 'flat'), (('.', 'beat'), 'punct'), (('·', '2017'), 'punct'), (('2017', 'beat'), 'obl:tmod'), ((':', 'beat'), 'punct')]

 Named Entities are: 
>> [('2017', 'DATE'), ('one', 'CARDINAL'), ('Ke Jie', 'PERSON'), ('2017', 'DATE')]

========================== Sentence 79 ===========================

 In 2017, the Alphabet's Jigsaw team built an intelligent system that was able to learn the online trolling. 

Tokens are: 
>> ['In', '2017', ',', 'the', 'Alphabet', "'s", 'Jigsaw', 'team', 'built', 'an', 'intelligent', 'system', 'that', 'was', 'able', 'to', 'learn', 'the', 'online', 'trolling', '.'] 

 UPOS tags are: 
>> [('In', 'ADP'), ('2017', 'NUM'), (',', 'PUNCT'), ('the', 'DET'), ('Alphabet', 'PROPN'), ("'s", 'PART'), ('Jigsaw', 'PROPN'), ('team', 'NOUN'), ('built', 'VERB'), ('an', 'DET'), ('intelligent', 'ADJ'), ('system', 'NOUN'), ('that', 'PRON'), ('was', 'AUX'), ('able', 'ADJ'), ('to', 'PART'), ('learn', 'VERB'), ('the', 'DET'), ('online', 'ADJ'), ('trolling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('In', 'IN'), ('2017', 'CD'), (',', ','), ('the', 'DT'), ('Alphabet', 'NNP'), ("'s", 'POS'), ('Jigsaw', 'NNP'), ('team', 'NN'), ('built', 'VBD'), ('an', 'DT'), ('intelligent', 'JJ'), ('system', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('able', 'JJ'), ('to', 'TO'), ('learn', 'VB'), ('the', 'DT'), ('online', 'JJ'), ('trolling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('In', 'in'), ('2017', '2017'), (',', ','), ('the', 'the'), ('Alphabet', 'alphabet'), ("'s", "'s"), ('Jigsaw', 'Jigsaw'), ('team', 'team'), ('built', 'build'), ('an', 'a'), ('intelligent', 'intelligent'), ('system', 'system'), ('that', 'that'), ('was', 'be'), ('able', 'able'), ('to', 'to'), ('learn', 'learn'), ('the', 'the'), ('online', 'online'), ('trolling', 'trolling'), ('.', '.')] 

 Dependency tags are: 
>> [(('In', '2017'), 'case'), (('2017', 'built'), 'obl'), ((',', '2017'), 'punct'), (('the', 'Alphabet'), 'det'), (('Alphabet', 'team'), 'nmod:poss'), (("'s", 'Alphabet'), 'case'), (('Jigsaw', 'team'), 'compound'), (('team', 'built'), 'nsubj'), (('built', 'root'), 'root'), (('an', 'system'), 'det'), (('intelligent', 'system'), 'amod'), (('system', 'built'), 'obj'), (('that', 'able'), 'nsubj'), (('was', 'able'), 'cop'), (('able', 'system'), 'acl:relcl'), (('to', 'learn'), 'mark'), (('learn', 'able'), 'xcomp'), (('the', 'trolling'), 'det'), (('online', 'trolling'), 'amod'), (('trolling', 'learn'), 'obj'), (('.', 'built'), 'punct')]

 Named Entities are: 
>> [('2017', 'DATE'), ('Alphabet', 'ORG'), ('Jigsaw', 'ORG')]

========================== Sentence 80 ===========================

 It used to read millions of comments of different websites to learn to stop online trolling. 

Tokens are: 
>> ['It', 'used', 'to', 'read', 'millions', 'of', 'comments', 'of', 'different', 'websites', 'to', 'learn', 'to', 'stop', 'online', 'trolling', '.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('used', 'VERB'), ('to', 'PART'), ('read', 'VERB'), ('millions', 'NOUN'), ('of', 'ADP'), ('comments', 'NOUN'), ('of', 'ADP'), ('different', 'ADJ'), ('websites', 'NOUN'), ('to', 'PART'), ('learn', 'VERB'), ('to', 'PART'), ('stop', 'VERB'), ('online', 'ADJ'), ('trolling', 'NOUN'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('used', 'VBD'), ('to', 'TO'), ('read', 'VB'), ('millions', 'NNS'), ('of', 'IN'), ('comments', 'NNS'), ('of', 'IN'), ('different', 'JJ'), ('websites', 'NNS'), ('to', 'TO'), ('learn', 'VB'), ('to', 'TO'), ('stop', 'VB'), ('online', 'JJ'), ('trolling', 'NN'), ('.', '.')] 

 Lemmas are: 
>> [('It', 'it'), ('used', 'use'), ('to', 'to'), ('read', 'read'), ('millions', 'million'), ('of', 'of'), ('comments', 'comment'), ('of', 'of'), ('different', 'different'), ('websites', 'website'), ('to', 'to'), ('learn', 'learn'), ('to', 'to'), ('stop', 'stop'), ('online', 'online'), ('trolling', 'trolling'), ('.', '.')] 

 Dependency tags are: 
>> [(('It', 'used'), 'nsubj'), (('used', 'root'), 'root'), (('to', 'read'), 'mark'), (('read', 'used'), 'xcomp'), (('millions', 'read'), 'obj'), (('of', 'comments'), 'case'), (('comments', 'millions'), 'nmod'), (('of', 'websites'), 'case'), (('different', 'websites'), 'amod'), (('websites', 'comments'), 'nmod'), (('to', 'learn'), 'mark'), (('learn', 'read'), 'advcl'), (('to', 'stop'), 'mark'), (('stop', 'learn'), 'xcomp'), (('online', 'trolling'), 'amod'), (('trolling', 'stop'), 'obj'), (('.', 'used'), 'punct')]

 Named Entities are: 
>> [('millions', 'CARDINAL')]

========================== Sentence 81 ===========================

 Machine Learning at present: 

Tokens are: 
>> ['Machine', 'Learning', 'at', 'present', ':'] 

 UPOS tags are: 
>> [('Machine', 'NOUN'), ('Learning', 'VERB'), ('at', 'ADP'), ('present', 'NOUN'), (':', 'PUNCT')] 

 XPOS tags are: 
>> [('Machine', 'NN'), ('Learning', 'VBG'), ('at', 'IN'), ('present', 'NN'), (':', ':')] 

 Lemmas are: 
>> [('Machine', 'Machine'), ('Learning', 'learning'), ('at', 'at'), ('present', 'present'), (':', ':')] 

 Dependency tags are: 
>> [(('Machine', 'root'), 'root'), (('Learning', 'Machine'), 'acl'), (('at', 'present'), 'case'), (('present', 'Learning'), 'obl'), ((':', 'Machine'), 'punct')]

 Named Entities are: 
>> []

========================== Sentence 82 ===========================

 Now machine learning has got a great advancement in its research, and it is present everywhere around us, such as self-driving cars, Amazon Alexa, Catboats, recommender system, and many more. 

Tokens are: 
>> ['Now', 'machine', 'learning', 'has', 'got', 'a', 'great', 'advancement', 'in', 'its', 'research', ',', 'and', 'it', 'is', 'present', 'everywhere', 'around', 'us', ',', 'such', 'as', 'self', '-driving', 'cars', ',', 'Amazon', 'Alexa', ',', 'Catboats', ',', 'recommender', 'system', ',', 'and', 'many', 'more', '.'] 

 UPOS tags are: 
>> [('Now', 'ADV'), ('machine', 'NOUN'), ('learning', 'NOUN'), ('has', 'AUX'), ('got', 'VERB'), ('a', 'DET'), ('great', 'ADJ'), ('advancement', 'NOUN'), ('in', 'ADP'), ('its', 'PRON'), ('research', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('it', 'PRON'), ('is', 'AUX'), ('present', 'ADJ'), ('everywhere', 'ADV'), ('around', 'ADP'), ('us', 'PRON'), (',', 'PUNCT'), ('such', 'ADJ'), ('as', 'ADP'), ('self', 'NOUN'), ('-driving', 'NOUN'), ('cars', 'NOUN'), (',', 'PUNCT'), ('Amazon', 'PROPN'), ('Alexa', 'PROPN'), (',', 'PUNCT'), ('Catboats', 'PROPN'), (',', 'PUNCT'), ('recommender', 'NOUN'), ('system', 'NOUN'), (',', 'PUNCT'), ('and', 'CCONJ'), ('many', 'ADJ'), ('more', 'ADV'), ('.', 'PUNCT')] 

 XPOS tags are: 
>> [('Now', 'RB'), ('machine', 'NN'), ('learning', 'NN'), ('has', 'VBZ'), ('got', 'VBN'), ('a', 'DT'), ('great', 'JJ'), ('advancement', 'NN'), ('in', 'IN'), ('its', 'PRP$'), ('research', 'NN'), (',', ','), ('and', 'CC'), ('it', 'PRP'), ('is', 'VBZ'), ('present', 'JJ'), ('everywhere', 'RB'), ('around', 'IN'), ('us', 'PRP'), (',', ','), ('such', 'JJ'), ('as', 'IN'), ('self', 'NN'), ('-driving', 'NN'), ('cars', 'NNS'), (',', ','), ('Amazon', 'NNP'), ('Alexa', 'NNP'), (',', ','), ('Catboats', 'NNPS'), (',', ','), ('recommender', 'NN'), ('system', 'NN'), (',', ','), ('and', 'CC'), ('many', 'JJ'), ('more', 'RBR'), ('.', '.')] 

 Lemmas are: 
>> [('Now', 'now'), ('machine', 'machine'), ('learning', 'learning'), ('has', 'have'), ('got', 'get'), ('a', 'a'), ('great', 'great'), ('advancement', 'advancement'), ('in', 'in'), ('its', 'its'), ('research', 'research'), (',', ','), ('and', 'and'), ('it', 'it'), ('is', 'be'), ('present', 'present'), ('everywhere', 'everywhere'), ('around', 'around'), ('us', 'we'), (',', ','), ('such', 'such'), ('as', 'as'), ('self', 'self'), ('-driving', '-driving'), ('cars', 'car'), (',', ','), ('Amazon', 'Amazon'), ('Alexa', 'Alexa'), (',', ','), ('Catboats', 'Catboat'), (',', ','), ('recommender', 'recommender'), ('system', 'system'), (',', ','), ('and', 'and'), ('many', 'many'), ('more', 'more'), ('.', '.')] 

 Dependency tags are: 
>> [(('Now', 'got'), 'advmod'), (('machine', 'learning'), 'compound'), (('learning', 'got'), 'nsubj'), (('has', 'got'), 'aux'), (('got', 'root'), 'root'), (('a', 'advancement'), 'det'), (('great', 'advancement'), 'amod'), (('advancement', 'got'), 'obj'), (('in', 'research'), 'case'), (('its', 'research'), 'nmod:poss'), (('research', 'advancement'), 'nmod'), ((',', 'present'), 'punct'), (('and', 'present'), 'cc'), (('it', 'present'), 'nsubj'), (('is', 'present'), 'cop'), (('present', 'got'), 'conj'), (('everywhere', 'present'), 'advmod'), (('around', 'us'), 'case'), (('us', 'present'), 'obl'), ((',', 'cars'), 'punct'), (('such', 'cars'), 'case'), (('as', 'such'), 'fixed'), (('self', '-driving'), 'compound'), (('-driving', 'cars'), 'compound'), (('cars', 'present'), 'obl'), ((',', 'Alexa'), 'punct'), (('Amazon', 'Alexa'), 'compound'), (('Alexa', 'cars'), 'conj'), ((',', 'Catboats'), 'punct'), (('Catboats', 'cars'), 'conj'), ((',', 'system'), 'punct'), (('recommender', 'system'), 'compound'), (('system', 'cars'), 'conj'), ((',', 'more'), 'punct'), (('and', 'more'), 'cc'), (('many', 'more'), 'amod'), (('more', 'cars'), 'conj'), (('.', 'got'), 'punct')]

 Named Entities are: 
>> [('Amazon Alexa', 'PRODUCT'), ('Catboats', 'PRODUCT')]

========================== Sentence 83 ===========================

 It includes Supervised, unsupervised, and reinforcement learning with clustering, classification, decision tree, SVM algorithms, etc. 

Tokens are: 
>> ['It', 'includes', 'Supervised', ',', 'unsupervised', ',', 'and', 'reinforcement', 'learning', 'with', 'clustering', ',', 'classification', ',', 'decision', 'tree', ',', 'SVM', 'algorithms', ',', 'etc.'] 

 UPOS tags are: 
>> [('It', 'PRON'), ('includes', 'VERB'), ('Supervised', 'VERB'), (',', 'PUNCT'), ('unsupervised', 'ADJ'), (',', 'PUNCT'), ('and', 'CCONJ'), ('reinforcement', 'NOUN'), ('learning', 'NOUN'), ('with', 'ADP'), ('clustering', 'NOUN'), (',', 'PUNCT'), ('classification', 'NOUN'), (',', 'PUNCT'), ('decision', 'NOUN'), ('tree', 'NOUN'), (',', 'PUNCT'), ('SVM', 'NOUN'), ('algorithms', 'NOUN'), (',', 'PUNCT'), ('etc.', 'X')] 

 XPOS tags are: 
>> [('It', 'PRP'), ('includes', 'VBZ'), ('Supervised', 'VBN'), (',', ','), ('unsupervised', 'JJ'), (',', ','), ('and', 'CC'), ('reinforcement', 'NN'), ('learning', 'NN'), ('with', 'IN'), ('clustering', 'NN'), (',', ','), ('classification', 'NN'), (',', ','), ('decision', 'NN'), ('tree', 'NN'), (',', ','), ('SVM', 'NN'), ('algorithms', 'NNS'), (',', ','), ('etc.', 'FW')] 

 Lemmas are: 
>> [('It', 'it'), ('includes', 'include'), ('Supervised', 'supervise'), (',', ','), ('unsupervised', 'unsupervised'), (',', ','), ('and', 'and'), ('reinforcement', 'reinforcement'), ('learning', 'learning'), ('with', 'with'), ('clustering', 'clustering'), (',', ','), ('classification', 'classification'), (',', ','), ('decision', 'decision'), ('tree', 'tree'), (',', ','), ('SVM', 'SVM'), ('algorithms', 'algorithm'), (',', ','), ('etc.', 'etc.')] 

 Dependency tags are: 
>> [(('It', 'includes'), 'nsubj'), (('includes', 'root'), 'root'), (('Supervised', 'learning'), 'amod'), ((',', 'unsupervised'), 'punct'), (('unsupervised', 'Supervised'), 'conj'), ((',', 'reinforcement'), 'punct'), (('and', 'reinforcement'), 'cc'), (('reinforcement', 'Supervised'), 'conj'), (('learning', 'includes'), 'obj'), (('with', 'clustering'), 'case'), (('clustering', 'learning'), 'nmod'), ((',', 'classification'), 'punct'), (('classification', 'clustering'), 'conj'), ((',', 'tree'), 'punct'), (('decision', 'tree'), 'compound'), (('tree', 'clustering'), 'conj'), ((',', 'algorithms'), 'punct'), (('SVM', 'algorithms'), 'compound'), (('algorithms', 'clustering'), 'conj'), ((',', 'etc.'), 'punct'), (('etc.', 'clustering'), 'conj')]

 Named Entities are: 
>> []