				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

W5 of Computer Engineering (Why, What, When, Where, How)    


>> Tokens are: 
[W5, Computer, Engineering, (, ,, ,, ,, ,, ),   ] 

>> PoS Tags are: 
[('W5', 'PROPN'), ('Computer', 'PROPN'), ('Engineering', 'PROPN'), ('(', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), (',', 'PUNCT'), (')', 'PUNCT'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('W5', 'ROOT'), ('Computer', 'compound'), ('Engineering', 'pobj'), ('(', 'punct'), (',', 'punct'), (',', 'punct'), (',', 'punct'), (',', 'punct'), (')', 'punct'), ('  ', 'punct')]

>> Bigrams: 
[[W5, Computer], [Computer, Engineering], [Engineering, (], [(, ,], [,, ,], [,, ,], [,, ,], [,, )], [),   ]]

>> Trigrams: 
[[W5, Computer, Engineering], [Computer, Engineering, (], [Engineering, (, ,], [(, ,, ,], [,, ,, ,], [,, ,, ,], [,, ,, )], [,, ),   ]]

>> Noun Phrases are: 
[W5, Computer Engineering, Why, What]

>> Named Entities are: 
[]


============================ Sentence 2 =============================

Prof. Dixita B. Kagathara        2160704 Theory of Computation  Unit-3 Context Free Grammar   Dixita.kagathara@darshan.ac.in    


>> Tokens are: 
[Prof., Dixita, B., Kagathara,        , 2160704, Theory, Computation,  , Unit-3, Context, Free, Grammar,   , Dixita.kagathara@darshan.ac.in,   ] 

>> PoS Tags are: 
[('Prof.', 'PROPN'), ('Dixita', 'PROPN'), ('B.', 'PROPN'), ('Kagathara', 'PROPN'), ('       ', 'SPACE'), ('2160704', 'NUM'), ('Theory', 'NOUN'), ('Computation', 'NOUN'), (' ', 'SPACE'), ('Unit-3', 'VERB'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('  ', 'SPACE'), ('Dixita.kagathara@darshan.ac.in', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Prof.', 'compound'), ('Dixita', 'compound'), ('B.', 'compound'), ('Kagathara', 'nsubj'), ('       ', 'appos'), ('2160704', 'nummod'), ('Theory', 'appos'), ('Computation', 'pobj'), (' ', 'punct'), ('Unit-3', 'ROOT'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'dobj'), ('  ', 'dobj'), ('Dixita.kagathara@darshan.ac.in', 'npadvmod'), ('  ', 'punct')]

>> Bigrams: 
[[Prof., Dixita], [Dixita, B.], [B., Kagathara], [Kagathara,        ], [       , 2160704], [2160704, Theory], [Theory, Computation], [Computation,  ], [ , Unit-3], [Unit-3, Context], [Context, Free], [Free, Grammar], [Grammar,   ], [  , Dixita.kagathara@darshan.ac.in], [Dixita.kagathara@darshan.ac.in,   ]]

>> Trigrams: 
[[Prof., Dixita, B.], [Dixita, B., Kagathara], [B., Kagathara,        ], [Kagathara,        , 2160704], [       , 2160704, Theory], [2160704, Theory, Computation], [Theory, Computation,  ], [Computation,  , Unit-3], [ , Unit-3, Context], [Unit-3, Context, Free], [Context, Free, Grammar], [Free, Grammar,   ], [Grammar,   , Dixita.kagathara@darshan.ac.in], [  , Dixita.kagathara@darshan.ac.in,   ]]

>> Noun Phrases are: 
[Prof. Dixita B. Kagathara, Theory, Computation, Context Free Grammar]

>> Named Entities are: 
[('Dixita B. Kagathara', 'PERSON'), ('Theory of Computation  Unit-3 Context Free Grammar', 'ORG')]


============================ Sentence 3 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Topics to be covered Chomsky hierarchy Context free grammar Recursive definition FA to regular grammar Derivation Ambiguity & unambiguous grammar Simplified forms & normal forms CFG to CNF Union, Concatenation & Kleene’s of CFG  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Topics, covered, Chomsky, hierarchy, Context, free, grammar, Recursive, definition, FA, regular, grammar, Derivation, Ambiguity, &, unambiguous, grammar, Simplified, forms, &, normal, forms, CFG, CNF, Union, ,, Concatenation, &, Kleene, CFG,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'PROPN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PART'), ('Topics', 'PROPN'), ('covered', 'VERB'), ('Chomsky', 'PROPN'), ('hierarchy', 'NOUN'), ('Context', 'PROPN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('Recursive', 'PROPN'), ('definition', 'NOUN'), ('FA', 'NOUN'), ('regular', 'ADJ'), ('grammar', 'NOUN'), ('Derivation', 'PROPN'), ('Ambiguity', 'PROPN'), ('&', 'CCONJ'), ('unambiguous', 'ADJ'), ('grammar', 'NOUN'), ('Simplified', 'VERB'), ('forms', 'NOUN'), ('&', 'CCONJ'), ('normal', 'ADJ'), ('forms', 'NOUN'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('Union', 'PROPN'), (',', 'PUNCT'), ('Concatenation', 'PROPN'), ('&', 'CCONJ'), ('Kleene', 'PROPN'), ('CFG', 'PROPN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'ROOT'), ('Topics', 'dobj'), ('covered', 'ccomp'), ('Chomsky', 'amod'), ('hierarchy', 'compound'), ('Context', 'nmod'), ('free', 'amod'), ('grammar', 'compound'), ('Recursive', 'compound'), ('definition', 'compound'), ('FA', 'dobj'), ('regular', 'amod'), ('grammar', 'compound'), ('Derivation', 'compound'), ('Ambiguity', 'pobj'), ('&', 'cc'), ('unambiguous', 'amod'), ('grammar', 'conj'), ('Simplified', 'amod'), ('forms', 'dobj'), ('&', 'cc'), ('normal', 'amod'), ('forms', 'conj'), ('CFG', 'advmod'), ('CNF', 'compound'), ('Union', 'pobj'), (',', 'punct'), ('Concatenation', 'conj'), ('&', 'cc'), ('Kleene', 'conj'), ('CFG', 'nmod'), (' ', 'compound'), ('Unit', 'pobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Topics], [Topics, covered], [covered, Chomsky], [Chomsky, hierarchy], [hierarchy, Context], [Context, free], [free, grammar], [grammar, Recursive], [Recursive, definition], [definition, FA], [FA, regular], [regular, grammar], [grammar, Derivation], [Derivation, Ambiguity], [Ambiguity, &], [&, unambiguous], [unambiguous, grammar], [grammar, Simplified], [Simplified, forms], [forms, &], [&, normal], [normal, forms], [forms, CFG], [CFG, CNF], [CNF, Union], [Union, ,], [,, Concatenation], [Concatenation, &], [&, Kleene], [Kleene, CFG], [CFG,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Topics], [‹#›, Topics, covered], [Topics, covered, Chomsky], [covered, Chomsky, hierarchy], [Chomsky, hierarchy, Context], [hierarchy, Context, free], [Context, free, grammar], [free, grammar, Recursive], [grammar, Recursive, definition], [Recursive, definition, FA], [definition, FA, regular], [FA, regular, grammar], [regular, grammar, Derivation], [grammar, Derivation, Ambiguity], [Derivation, Ambiguity, &], [Ambiguity, &, unambiguous], [&, unambiguous, grammar], [unambiguous, grammar, Simplified], [grammar, Simplified, forms], [Simplified, forms, &], [forms, &, normal], [&, normal, forms], [normal, forms, CFG], [forms, CFG, CNF], [CFG, CNF, Union], [CNF, Union, ,], [Union, ,, Concatenation], [,, Concatenation, &], [Concatenation, &, Kleene], [&, Kleene, CFG], [Kleene, CFG,  ], [CFG,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Topics, Chomsky hierarchy Context free grammar Recursive definition FA, regular grammar Derivation Ambiguity, unambiguous grammar, Simplified forms, normal forms, CNF Union, Concatenation, Kleene, CFG  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('Chomsky', 'PERSON'), ('Derivation Ambiguity &', 'ORG'), ('CFG', 'ORG'), ('CNF Union', 'ORG'), ('Concatenation & Kleene’s', 'ORG'), ('CFG', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 4 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Chomsky Hierarchy   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Chomsky, Hierarchy,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Chomsky', 'PROPN'), ('Hierarchy', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'appos'), ('Chomsky', 'compound'), ('Hierarchy', 'appos'), ('  ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Chomsky], [Chomsky, Hierarchy], [Hierarchy,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Chomsky], [‹#›, Chomsky, Hierarchy], [Chomsky, Hierarchy,   ], [Hierarchy,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#›, Chomsky Hierarchy,   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Chomsky Hierarchy', 'PERSON'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 5 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Chomsky hierarchy (Classification of grammar) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Chomsky, hierarchy, (, Classification, grammar, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Chomsky', 'PROPN'), ('hierarchy', 'NOUN'), ('(', 'PUNCT'), ('Classification', 'NOUN'), ('grammar', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Chomsky', 'amod'), ('hierarchy', 'appos'), ('(', 'punct'), ('Classification', 'appos'), ('grammar', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Chomsky], [Chomsky, hierarchy], [hierarchy, (], [(, Classification], [Classification, grammar], [grammar, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Chomsky], [‹#›, Chomsky, hierarchy], [Chomsky, hierarchy, (], [hierarchy, (, Classification], [(, Classification, grammar], [Classification, grammar, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Chomsky hierarchy, (Classification, grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Chomsky', 'PERSON')]


============================ Sentence 6 =============================

Restricted grammar   Regular grammar(type 3) 


>> Tokens are: 
[Restricted, grammar,   , Regular, grammar(type, 3, )] 

>> PoS Tags are: 
[('Restricted', 'ADJ'), ('grammar', 'NOUN'), ('\xa0 ', 'SPACE'), ('Regular', 'PROPN'), ('grammar(type', 'PROPN'), ('3', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Restricted', 'amod'), ('grammar', 'ROOT'), ('\xa0 ', 'compound'), ('Regular', 'compound'), ('grammar(type', 'appos'), ('3', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[Restricted, grammar], [grammar,   ], [  , Regular], [Regular, grammar(type], [grammar(type, 3], [3, )]]

>> Trigrams: 
[[Restricted, grammar,   ], [grammar,   , Regular], [  , Regular, grammar(type], [Regular, grammar(type, 3], [grammar(type, 3, )]]

>> Noun Phrases are: 
[Restricted grammar,   Regular grammar(type]

>> Named Entities are: 
[('3', 'CARDINAL')]


============================ Sentence 7 =============================

  Context free grammar(type 2) 


>> Tokens are: 
[  , Context, free, grammar(type, 2, )] 

>> PoS Tags are: 
[('\xa0 ', 'SPACE'), ('Context', 'PROPN'), ('free', 'ADJ'), ('grammar(type', 'PROPN'), ('2', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\xa0 ', 'nmod'), ('Context', 'nmod'), ('free', 'amod'), ('grammar(type', 'ROOT'), ('2', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[  , Context], [Context, free], [free, grammar(type], [grammar(type, 2], [2, )]]

>> Trigrams: 
[[  , Context, free], [Context, free, grammar(type], [free, grammar(type, 2], [grammar(type, 2, )]]

>> Noun Phrases are: 
[  Context free grammar(type]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 8 =============================

  Context sensitive grammar (type 1) Unrestricted grammar (type 0) 


>> Tokens are: 
[  , Context, sensitive, grammar, (, type, 1, ), Unrestricted, grammar, (, type, 0, )] 

>> PoS Tags are: 
[('\xa0 ', 'SPACE'), ('Context', 'PROPN'), ('sensitive', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('type', 'NOUN'), ('1', 'NUM'), (')', 'PUNCT'), ('Unrestricted', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('type', 'NOUN'), ('0', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\xa0 ', 'compound'), ('Context', 'nmod'), ('sensitive', 'amod'), ('grammar', 'ROOT'), ('(', 'punct'), ('type', 'appos'), ('1', 'nummod'), (')', 'punct'), ('Unrestricted', 'amod'), ('grammar', 'appos'), ('(', 'punct'), ('type', 'appos'), ('0', 'nummod'), (')', 'punct')]

>> Bigrams: 
[[  , Context], [Context, sensitive], [sensitive, grammar], [grammar, (], [(, type], [type, 1], [1, )], [), Unrestricted], [Unrestricted, grammar], [grammar, (], [(, type], [type, 0], [0, )]]

>> Trigrams: 
[[  , Context, sensitive], [Context, sensitive, grammar], [sensitive, grammar, (], [grammar, (, type], [(, type, 1], [type, 1, )], [1, ), Unrestricted], [), Unrestricted, grammar], [Unrestricted, grammar, (], [grammar, (, type], [(, type, 0], [type, 0, )]]

>> Noun Phrases are: 
[  Context sensitive grammar, type, Unrestricted grammar, type]

>> Named Entities are: 
[('1', 'CARDINAL')]


============================ Sentence 9 =============================

  Grammar     Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[  , Grammar,     , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\xa0 ', 'SPACE'), ('Grammar', 'PROPN'), (' \xa0  ', 'SPACE'), ('Unit', 'PROPN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\xa0 ', 'compound'), ('Grammar', 'compound'), (' \xa0  ', 'compound'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , Grammar], [Grammar,     ], [    , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[  , Grammar,     ], [Grammar,     , Unit], [    , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[  Grammar     Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Grammar', 'PERSON'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 10 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 0 grammar (Phrase Structure Grammar) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Type, 0, grammar, (, Phrase, Structure, Grammar, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Type', 'PROPN'), ('0', 'NUM'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('Phrase', 'PROPN'), ('Structure', 'PROPN'), ('Grammar', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Type', 'nmod'), ('0', 'nummod'), ('grammar', 'ROOT'), ('(', 'punct'), ('Phrase', 'compound'), ('Structure', 'compound'), ('Grammar', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Type], [Type, 0], [0, grammar], [grammar, (], [(, Phrase], [Phrase, Structure], [Structure, Grammar], [Grammar, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Type], [‹#›, Type, 0], [Type, 0, grammar], [0, grammar, (], [grammar, (, Phrase], [(, Phrase, Structure], [Phrase, Structure, Grammar], [Structure, Grammar, )]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, (Phrase Structure Grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Type', 'ORG'), ('Phrase Structure Grammar', 'PERSON')]


============================ Sentence 11 =============================

Their productions are of the form:  where both  and  can be strings of terminal and nonterminal symbols. 


>> Tokens are: 
[productions, form, :,  ,  ,  , strings, terminal, nonterminal, symbols, .] 

>> PoS Tags are: 
[('productions', 'NOUN'), ('form', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), (' ', 'SPACE'), (' ', 'SPACE'), ('strings', 'NOUN'), ('terminal', 'NOUN'), ('nonterminal', 'ADJ'), ('symbols', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('productions', 'nsubj'), ('form', 'pobj'), (':', 'punct'), (' ', 'appos'), (' ', 'nsubj'), (' ', 'conj'), ('strings', 'attr'), ('terminal', 'amod'), ('nonterminal', 'conj'), ('symbols', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[productions, form], [form, :], [:,  ], [ ,  ], [ ,  ], [ , strings], [strings, terminal], [terminal, nonterminal], [nonterminal, symbols], [symbols, .]]

>> Trigrams: 
[[productions, form, :], [form, :,  ], [:,  ,  ], [ ,  ,  ], [ ,  , strings], [ , strings, terminal], [strings, terminal, nonterminal], [terminal, nonterminal, symbols], [nonterminal, symbols, .]]

>> Noun Phrases are: 
[Their productions, the form, strings, terminal and nonterminal symbols]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

Example: S → ACaB   


>> Tokens are: 
[Example, :, S, →, ACaB,  ] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('S', 'PROPN'), ('→', 'ADP'), ('ACaB', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Example', 'dep'), (':', 'punct'), ('S', 'ROOT'), ('→', 'punct'), ('ACaB', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Example, :], [:, S], [S, →], [→, ACaB], [ACaB,  ]]

>> Trigrams: 
[[Example, :, S], [:, S, →], [S, →, ACaB], [→, ACaB,  ]]

>> Noun Phrases are: 
[Example: S, ACaB]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

Bc → acB  CB → DB  aD → Db   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Bc, →, acB,  , CB, →, DB,  , aD, →, Db,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Bc', 'PROPN'), ('→', 'SYM'), ('acB', 'ADP'), (' ', 'SPACE'), ('CB', 'PROPN'), ('→', 'SYM'), ('DB', 'PROPN'), (' ', 'SPACE'), ('aD', 'PROPN'), ('→', 'SYM'), ('Db', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Bc', 'ROOT'), ('→', 'punct'), ('acB', 'prep'), (' ', 'pobj'), ('CB', 'appos'), ('→', 'punct'), ('DB', 'nmod'), (' ', 'compound'), ('aD', 'appos'), ('→', 'punct'), ('Db', 'nmod'), ('  ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Bc, →], [→, acB], [acB,  ], [ , CB], [CB, →], [→, DB], [DB,  ], [ , aD], [aD, →], [→, Db], [Db,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Bc, →, acB], [→, acB,  ], [acB,  , CB], [ , CB, →], [CB, →, DB], [→, DB,  ], [DB,  , aD], [ , aD, →], [aD, →, Db], [→, Db,   ], [Db,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Bc, CB, DB  aD, → Db   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Db   Unit –', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 14 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 1 grammar (Context Sensitive Grammar) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Type, 1, grammar, (, Context, Sensitive, Grammar, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Type', 'PROPN'), ('1', 'NUM'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('Context', 'PROPN'), ('Sensitive', 'PROPN'), ('Grammar', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Type', 'nmod'), ('1', 'nummod'), ('grammar', 'conj'), ('(', 'punct'), ('Context', 'compound'), ('Sensitive', 'compound'), ('Grammar', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Type], [Type, 1], [1, grammar], [grammar, (], [(, Context], [Context, Sensitive], [Sensitive, Grammar], [Grammar, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Type], [‹#›, Type, 1], [Type, 1, grammar], [1, grammar, (], [grammar, (, Context], [(, Context, Sensitive], [Context, Sensitive, Grammar], [Sensitive, Grammar, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Type 1 grammar, Context Sensitive Grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Type', 'ORG'), ('Context', 'PERSON'), ('Grammar', 'PERSON')]


============================ Sentence 15 =============================

Their productions are of the form:  where A is non terminal and , ,  are strings of terminals and non terminals. 


>> Tokens are: 
[productions, form, :,  ,  , non, terminal,  , ,, ,,  , strings, terminals, non, terminals, .] 

>> PoS Tags are: 
[('productions', 'NOUN'), ('form', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), ('\xa0', 'SPACE'), ('non', 'ADJ'), ('terminal', 'ADJ'), ('\xa0', 'SPACE'), (',', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('strings', 'NOUN'), ('terminals', 'NOUN'), ('non', 'ADJ'), ('terminals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('productions', 'nsubj'), ('form', 'pobj'), (':', 'punct'), (' ', 'appos'), ('\xa0', 'compound'), ('non', 'amod'), ('terminal', 'acomp'), ('\xa0', 'conj'), (',', 'punct'), (',', 'punct'), (' ', 'nsubj'), ('strings', 'attr'), ('terminals', 'pobj'), ('non', 'amod'), ('terminals', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[productions, form], [form, :], [:,  ], [ ,  ], [ , non], [non, terminal], [terminal,  ], [ , ,], [,, ,], [,,  ], [ , strings], [strings, terminals], [terminals, non], [non, terminals], [terminals, .]]

>> Trigrams: 
[[productions, form, :], [form, :,  ], [:,  ,  ], [ ,  , non], [ , non, terminal], [non, terminal,  ], [terminal,  , ,], [ , ,, ,], [,, ,,  ], [,,  , strings], [ , strings, terminals], [strings, terminals, non], [terminals, non, terminals], [non, terminals, .]]

>> Noun Phrases are: 
[Their productions, the form,  A, strings, terminals, non terminals]

>> Named Entities are: 
[]


============================ Sentence 16 =============================

The strings  and may be empty, but  must be non-empty. 


>> Tokens are: 
[strings,   ,  , ,,   , non, -, .] 

>> PoS Tags are: 
[('strings', 'NOUN'), ('\xa0\xa0', 'SPACE'), ('\xa0', 'SPACE'), (',', 'PUNCT'), ('\xa0\xa0', 'SPACE'), ('non', 'ADJ'), ('-', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('strings', 'nsubj'), ('\xa0\xa0', 'appos'), ('\xa0', 'conj'), (',', 'punct'), ('\xa0\xa0', 'nsubj'), ('non', 'acomp'), ('-', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[strings,   ], [  ,  ], [ , ,], [,,   ], [  , non], [non, -], [-, .]]

>> Trigrams: 
[[strings,   ,  ], [  ,  , ,], [ , ,,   ], [,,   , non], [  , non, -], [non, -, .]]

>> Noun Phrases are: 
[The strings]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

Here, a string  can be replaced by  (or vice versa) only when it is enclosed by the strings  and  in a sentential form. 


>> Tokens are: 
[,, string,  , replaced,  , (, vice, versa, ), enclosed, strings,  ,  , sentential, form, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('string', 'NOUN'), (' ', 'SPACE'), ('replaced', 'VERB'), (' ', 'SPACE'), ('(', 'PUNCT'), ('vice', 'ADV'), ('versa', 'ADV'), (')', 'PUNCT'), ('enclosed', 'VERB'), ('strings', 'NOUN'), (' ', 'SPACE'), (' ', 'SPACE'), ('sentential', 'ADJ'), ('form', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('string', 'ROOT'), (' ', 'nsubjpass'), ('replaced', 'relcl'), (' ', 'pobj'), ('(', 'punct'), ('vice', 'advmod'), ('versa', 'conj'), (')', 'punct'), ('enclosed', 'advcl'), ('strings', 'pobj'), (' ', 'appos'), (' ', 'conj'), ('sentential', 'amod'), ('form', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, string], [string,  ], [ , replaced], [replaced,  ], [ , (], [(, vice], [vice, versa], [versa, )], [), enclosed], [enclosed, strings], [strings,  ], [ ,  ], [ , sentential], [sentential, form], [form, .]]

>> Trigrams: 
[[,, string,  ], [string,  , replaced], [ , replaced,  ], [replaced,  , (], [ , (, vice], [(, vice, versa], [vice, versa, )], [versa, ), enclosed], [), enclosed, strings], [enclosed, strings,  ], [strings,  ,  ], [ ,  , sentential], [ , sentential, form], [sentential, form, .]]

>> Noun Phrases are: 
[Here, a string, it, the strings, a sentential form]

>> Named Entities are: 
[]


============================ Sentence 18 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

Example: AB → AbBc   


>> Tokens are: 
[Example, :, AB, →, AbBc,  ] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('AB', 'PROPN'), ('→', 'SYM'), ('AbBc', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Example', 'ROOT'), (':', 'punct'), ('AB', 'appos'), ('→', 'punct'), ('AbBc', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Example, :], [:, AB], [AB, →], [→, AbBc], [AbBc,  ]]

>> Trigrams: 
[[Example, :, AB], [:, AB, →], [AB, →, AbBc], [→, AbBc,  ]]

>> Noun Phrases are: 
[Example, AB, AbBc]

>> Named Entities are: 
[('AbBc', 'ORG')]


============================ Sentence 20 =============================

A → bcA  B → b   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[→, bcA,  , B, →, b,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('→', 'SYM'), ('bcA', 'NOUN'), (' ', 'SPACE'), ('B', 'NOUN'), ('→', 'SYM'), ('b', 'NOUN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('→', 'punct'), ('bcA', 'compound'), (' ', 'compound'), ('B', 'ROOT'), ('→', 'punct'), ('b', 'prep'), ('  ', 'nummod'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[→, bcA], [bcA,  ], [ , B], [B, →], [→, b], [b,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[→, bcA,  ], [bcA,  , B], [ , B, →], [B, →, b], [→, b,   ], [b,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[A → bcA  B,   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 21 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Type 2 grammar (Context Free Grammar) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Type, 2, grammar, (, Context, Free, Grammar, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Type', 'NOUN'), ('2', 'NUM'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Type', 'nmod'), ('2', 'nummod'), ('grammar', 'conj'), ('(', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Type], [Type, 2], [2, grammar], [grammar, (], [(, Context], [Context, Free], [Free, Grammar], [Grammar, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Type], [‹#›, Type, 2], [Type, 2, grammar], [2, grammar, (], [grammar, (, Context], [(, Context, Free], [Context, Free, Grammar], [Free, Grammar, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Type 2 grammar, Context Free Grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG')]


============================ Sentence 22 =============================

Their productions are of the form:  Where  is non terminal and is string of terminals and non terminals. 


>> Tokens are: 
[productions, form, :,  ,  , non, terminal,  , string, terminals, non, terminals, .] 

>> PoS Tags are: 
[('productions', 'NOUN'), ('form', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE'), (' ', 'SPACE'), ('non', 'ADJ'), ('terminal', 'ADJ'), ('\xa0', 'SPACE'), ('string', 'NOUN'), ('terminals', 'NOUN'), ('non', 'ADJ'), ('terminals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('productions', 'nsubj'), ('form', 'pobj'), (':', 'punct'), (' ', 'attr'), (' ', 'nsubj'), ('non', 'amod'), ('terminal', 'acomp'), ('\xa0', 'nsubj'), ('string', 'attr'), ('terminals', 'pobj'), ('non', 'amod'), ('terminals', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[productions, form], [form, :], [:,  ], [ ,  ], [ , non], [non, terminal], [terminal,  ], [ , string], [string, terminals], [terminals, non], [non, terminals], [terminals, .]]

>> Trigrams: 
[[productions, form, :], [form, :,  ], [:,  ,  ], [ ,  , non], [ , non, terminal], [non, terminal,  ], [terminal,  , string], [ , string, terminals], [string, terminals, non], [terminals, non, terminals], [non, terminals, .]]

>> Noun Phrases are: 
[Their productions, the form, string, terminals, non terminals]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

Example: S → Xa  X → a  X → aX  X → abc  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›  Theory of Computation (2160704) 


>> Tokens are: 
[Example, :, S, →, Xa,  , X, →,  , X, →, aX,  , X, →, abc,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  , Theory, Computation, (, 2160704, )] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('S', 'PROPN'), ('→', 'SYM'), ('Xa', 'PROPN'), (' ', 'SPACE'), ('X', 'NOUN'), ('→', 'SYM'), (' ', 'SPACE'), ('X', 'NOUN'), ('→', 'SYM'), ('aX', 'DET'), (' ', 'SPACE'), ('X', 'NOUN'), ('→', 'SYM'), ('abc', 'X'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'ROOT'), (':', 'punct'), ('S', 'appos'), ('→', 'punct'), ('Xa', 'appos'), (' ', 'compound'), ('X', 'appos'), ('→', 'punct'), (' ', 'nmod'), ('X', 'appos'), ('→', 'punct'), ('aX', 'det'), (' ', 'compound'), ('X', 'appos'), ('→', 'punct'), ('abc', 'nmod'), (' ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'appos'), ('Theory', 'appos'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Example, :], [:, S], [S, →], [→, Xa], [Xa,  ], [ , X], [X, →], [→,  ], [ , X], [X, →], [→, aX], [aX,  ], [ , X], [X, →], [→, abc], [abc,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ], [ , Theory], [Theory, Computation], [Computation, (], [(, 2160704], [2160704, )]]

>> Trigrams: 
[[Example, :, S], [:, S, →], [S, →, Xa], [→, Xa,  ], [Xa,  , X], [ , X, →], [X, →,  ], [→,  , X], [ , X, →], [X, →, aX], [→, aX,  ], [aX,  , X], [ , X, →], [X, →, abc], [→, abc,  ], [abc,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ], [‹#›,  , Theory], [ , Theory, Computation], [Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )]]

>> Noun Phrases are: 
[Example, S, → Xa,  X, a  X, aX  X, → abc  Unit, Context Free Grammar Darshan Institute, Engineering, Technology, Theory, Computation]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG'), ('Theory of Computation', 'ORG')]


============================ Sentence 24 =============================

Darshan Institute of Engineering & Technology ‹#› Type 3 grammar (Linear or Regular grammar) 


>> Tokens are: 
[Darshan, Institute, Engineering, &, Technology, ‹#›, Type, 3, grammar, (, Linear, Regular, grammar, )] 

>> PoS Tags are: 
[('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Type', 'NOUN'), ('3', 'NUM'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('Linear', 'PROPN'), ('Regular', 'ADJ'), ('grammar', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Darshan', 'compound'), ('Institute', 'ROOT'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Type', 'nmod'), ('3', 'nummod'), ('grammar', 'conj'), ('(', 'punct'), ('Linear', 'amod'), ('Regular', 'conj'), ('grammar', 'parataxis'), (')', 'punct')]

>> Bigrams: 
[[Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Type], [Type, 3], [3, grammar], [grammar, (], [(, Linear], [Linear, Regular], [Regular, grammar], [grammar, )]]

>> Trigrams: 
[[Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Type], [‹#›, Type, 3], [Type, 3, grammar], [3, grammar, (], [grammar, (, Linear], [(, Linear, Regular], [Linear, Regular, grammar], [Regular, grammar, )]]

>> Noun Phrases are: 
[Darshan Institute, Engineering, Technology, ‹#› Type 3 grammar]

>> Named Entities are: 
[('Darshan Institute of Engineering & Technology ‹#› Type', 'ORG'), ('Linear', 'ORG')]


============================ Sentence 25 =============================

Their productions are of the form: 	or	   


>> Tokens are: 
[productions, form, :, 	, 	  ] 

>> PoS Tags are: 
[('productions', 'NOUN'), ('form', 'NOUN'), (':', 'PUNCT'), ('\t', 'SPACE'), ('\t  ', 'SPACE')] 

>> Dependency Tags are: 
[('productions', 'nsubj'), ('form', 'pobj'), (':', 'punct'), ('\t', 'appos'), ('\t  ', 'conj')]

>> Bigrams: 
[[productions, form], [form, :], [:, 	], [	, 	  ]]

>> Trigrams: 
[[productions, form, :], [form, :, 	], [:, 	, 	  ]]

>> Noun Phrases are: 
[Their productions, the form]

>> Named Entities are: 
[]


============================ Sentence 26 =============================

Where are non terminals and  is terminal. 


>> Tokens are: 
[non, terminals,  , terminal, .] 

>> PoS Tags are: 
[('non', 'ADJ'), ('terminals', 'NOUN'), ('\xa0', 'SPACE'), ('terminal', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('non', 'amod'), ('terminals', 'nsubj'), ('\xa0', 'conj'), ('terminal', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[non, terminals], [terminals,  ], [ , terminal], [terminal, .]]

>> Trigrams: 
[[non, terminals,  ], [terminals,  , terminal], [ , terminal, .]]

>> Noun Phrases are: 
[non terminals]

>> Named Entities are: 
[]


============================ Sentence 27 =============================

Example: X → a | aY Y → b  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Example, :, X, →, |, aY, Y, →, b,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('X', 'NOUN'), ('→', 'SYM'), ('|', 'NOUN'), ('aY', 'PROPN'), ('Y', 'PROPN'), ('→', 'SYM'), ('b', 'PROPN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Example', 'ROOT'), (':', 'punct'), ('X', 'nmod'), ('→', 'punct'), ('|', 'appos'), ('aY', 'compound'), ('Y', 'appos'), ('→', 'punct'), ('b', 'prep'), (' ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Example, :], [:, X], [X, →], [→, |], [|, aY], [aY, Y], [Y, →], [→, b], [b,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Example, :, X], [:, X, →], [X, →, |], [→, |, aY], [|, aY, Y], [aY, Y, →], [Y, →, b], [→, b,  ], [b,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Example, → a |, aY Y, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 28 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Hierarchy of grammar    Type 3 (Regular) Type 0(Phrase structure) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Hierarchy, grammar,    , Type, 3, (, Regular, ), Type, 0(Phrase, structure, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Hierarchy', 'NOUN'), ('grammar', 'NOUN'), ('   ', 'SPACE'), ('Type', 'NOUN'), ('3', 'NUM'), ('(', 'PUNCT'), ('Regular', 'ADJ'), (')', 'PUNCT'), ('Type', 'NOUN'), ('0(Phrase', 'PROPN'), ('structure', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Hierarchy', 'ROOT'), ('grammar', 'pobj'), ('   ', 'nummod'), ('Type', 'appos'), ('3', 'nummod'), ('(', 'punct'), ('Regular', 'nmod'), (')', 'punct'), ('Type', 'compound'), ('0(Phrase', 'compound'), ('structure', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Hierarchy], [Hierarchy, grammar], [grammar,    ], [   , Type], [Type, 3], [3, (], [(, Regular], [Regular, )], [), Type], [Type, 0(Phrase], [0(Phrase, structure], [structure, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Hierarchy], [‹#›, Hierarchy, grammar], [Hierarchy, grammar,    ], [grammar,    , Type], [   , Type, 3], [Type, 3, (], [3, (, Regular], [(, Regular, )], [Regular, ), Type], [), Type, 0(Phrase], [Type, 0(Phrase, structure], [0(Phrase, structure, )]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, grammar, Type, (Regular) Type 0(Phrase structure]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Hierarchy', 'PERSON')]


============================ Sentence 29 =============================

Type 1(Context sensitive) 


>> Tokens are: 
[Type, 1(Context, sensitive, )] 

>> PoS Tags are: 
[('Type', 'VERB'), ('1(Context', 'NUM'), ('sensitive', 'NOUN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Type', 'ROOT'), ('1(Context', 'dobj'), ('sensitive', 'amod'), (')', 'punct')]

>> Bigrams: 
[[Type, 1(Context], [1(Context, sensitive], [sensitive, )]]

>> Trigrams: 
[[Type, 1(Context, sensitive], [1(Context, sensitive, )]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 30 =============================

Type 2(Context free) 


>> Tokens are: 
[Type, 2(Context, free, )] 

>> PoS Tags are: 
[('Type', 'PROPN'), ('2(Context', 'PROPN'), ('free', 'ADJ'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Type', 'compound'), ('2(Context', 'ROOT'), ('free', 'amod'), (')', 'punct')]

>> Bigrams: 
[[Type, 2(Context], [2(Context, free], [free, )]]

>> Trigrams: 
[[Type, 2(Context, free], [2(Context, free, )]]

>> Noun Phrases are: 
[Type 2(Context]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 32 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 33 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Context free grammar   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Context, free, grammar,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Context', 'PROPN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Context', 'nmod'), ('free', 'amod'), ('grammar', 'compound'), ('  ', 'compound'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Context], [Context, free], [free, grammar], [grammar,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Context], [‹#›, Context, free], [Context, free, grammar], [free, grammar,   ], [grammar,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Context', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 34 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Context Free Grammar 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Context, Free, Grammar] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'appos')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Context], [Context, Free], [Free, Grammar]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Context], [‹#›, Context, Free], [Context, Free, Grammar]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Context Free Grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG')]


============================ Sentence 35 =============================

A context free grammar (CFG) is a 4-tuple where,  	is finite set of non terminals,  	is disjoint finite set of terminals,  	is an element of  and it’s a start symbol,  	is a finite set of productions of the form  where  	and . 


>> Tokens are: 
[context, free, grammar, (, CFG, ), 4, -, tuple, ,,  	, finite, set, non, terminals, ,,  	, disjoint, finite, set, terminals, ,,  	, element,  , start, symbol, ,,  	, finite, set, productions, form,  ,  	, .] 

>> PoS Tags are: 
[('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('(', 'PUNCT'), ('CFG', 'PROPN'), (')', 'PUNCT'), ('4', 'NUM'), ('-', 'PUNCT'), ('tuple', 'NOUN'), (',', 'PUNCT'), (' \t', 'SPACE'), ('finite', 'ADJ'), ('set', 'NOUN'), ('non', 'ADJ'), ('terminals', 'NOUN'), (',', 'PUNCT'), (' \t', 'SPACE'), ('disjoint', 'NOUN'), ('finite', 'NOUN'), ('set', 'NOUN'), ('terminals', 'NOUN'), (',', 'PUNCT'), (' \t', 'SPACE'), ('element', 'NOUN'), (' ', 'SPACE'), ('start', 'NOUN'), ('symbol', 'NOUN'), (',', 'PUNCT'), (' \t', 'SPACE'), ('finite', 'ADJ'), ('set', 'NOUN'), ('productions', 'NOUN'), ('form', 'NOUN'), (' ', 'SPACE'), (' \t', 'SPACE'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('context', 'npadvmod'), ('free', 'amod'), ('grammar', 'nsubj'), ('(', 'punct'), ('CFG', 'appos'), (')', 'punct'), ('4', 'nummod'), ('-', 'punct'), ('tuple', 'attr'), (',', 'punct'), (' \t', 'nsubj'), ('finite', 'amod'), ('set', 'attr'), ('non', 'amod'), ('terminals', 'pobj'), (',', 'punct'), (' \t', 'nsubj'), ('disjoint', 'compound'), ('finite', 'compound'), ('set', 'attr'), ('terminals', 'pobj'), (',', 'punct'), (' \t', 'nsubj'), ('element', 'attr'), (' ', 'pobj'), ('start', 'compound'), ('symbol', 'attr'), (',', 'punct'), (' \t', 'nsubj'), ('finite', 'amod'), ('set', 'attr'), ('productions', 'pobj'), ('form', 'pobj'), (' ', 'appos'), (' \t', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[context, free], [free, grammar], [grammar, (], [(, CFG], [CFG, )], [), 4], [4, -], [-, tuple], [tuple, ,], [,,  	], [ 	, finite], [finite, set], [set, non], [non, terminals], [terminals, ,], [,,  	], [ 	, disjoint], [disjoint, finite], [finite, set], [set, terminals], [terminals, ,], [,,  	], [ 	, element], [element,  ], [ , start], [start, symbol], [symbol, ,], [,,  	], [ 	, finite], [finite, set], [set, productions], [productions, form], [form,  ], [ ,  	], [ 	, .]]

>> Trigrams: 
[[context, free, grammar], [free, grammar, (], [grammar, (, CFG], [(, CFG, )], [CFG, ), 4], [), 4, -], [4, -, tuple], [-, tuple, ,], [tuple, ,,  	], [,,  	, finite], [ 	, finite, set], [finite, set, non], [set, non, terminals], [non, terminals, ,], [terminals, ,,  	], [,,  	, disjoint], [ 	, disjoint, finite], [disjoint, finite, set], [finite, set, terminals], [set, terminals, ,], [terminals, ,,  	], [,,  	, element], [ 	, element,  ], [element,  , start], [ , start, symbol], [start, symbol, ,], [symbol, ,,  	], [,,  	, finite], [ 	, finite, set], [finite, set, productions], [set, productions, form], [productions, form,  ], [form,  ,  	], [ ,  	, .]]

>> Noun Phrases are: 
[A context free grammar, (CFG, a 4-tuple, finite set, non terminals, disjoint finite set, terminals, an element, it, a start symbol, a finite set, productions, the form]

>> Named Entities are: 
[('4', 'CARDINAL')]


============================ Sentence 36 =============================

Application of CFG: CFG are extensively used to specify the syntax of programming language. 


>> Tokens are: 
[Application, CFG, :, CFG, extensively, specify, syntax, programming, language, .] 

>> PoS Tags are: 
[('Application', 'NOUN'), ('CFG', 'PROPN'), (':', 'PUNCT'), ('CFG', 'PROPN'), ('extensively', 'ADV'), ('specify', 'VERB'), ('syntax', 'NOUN'), ('programming', 'NOUN'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Application', 'nsubjpass'), ('CFG', 'pobj'), (':', 'punct'), ('CFG', 'nsubjpass'), ('extensively', 'advmod'), ('specify', 'xcomp'), ('syntax', 'dobj'), ('programming', 'compound'), ('language', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Application, CFG], [CFG, :], [:, CFG], [CFG, extensively], [extensively, specify], [specify, syntax], [syntax, programming], [programming, language], [language, .]]

>> Trigrams: 
[[Application, CFG, :], [CFG, :, CFG], [:, CFG, extensively], [CFG, extensively, specify], [extensively, specify, syntax], [specify, syntax, programming], [syntax, programming, language], [programming, language, .]]

>> Noun Phrases are: 
[Application, CFG, CFG, the syntax, programming language]

>> Named Entities are: 
[]


============================ Sentence 37 =============================

 CFG is used to develop a parser. 


>> Tokens are: 
[ , CFG, develop, parser, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('CFG', 'PROPN'), ('develop', 'VERB'), ('parser', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('CFG', 'nsubjpass'), ('develop', 'xcomp'), ('parser', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , CFG], [CFG, develop], [develop, parser], [parser, .]]

>> Trigrams: 
[[ , CFG, develop], [CFG, develop, parser], [develop, parser, .]]

>> Noun Phrases are: 
[CFG, a parser]

>> Named Entities are: 
[('CFG', 'ORG')]


============================ Sentence 38 =============================

 Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[ , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[ Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 39 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  11  Context Free Language Let  be a CFG. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›,  , 11,  , Context, Free, Language, Let,  , CFG, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('11', 'NUM'), (' ', 'SPACE'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Language', 'PROPN'), ('Let', 'VERB'), (' ', 'SPACE'), ('CFG', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'appos'), ('11', 'nummod'), (' ', 'appos'), ('Context', 'compound'), ('Free', 'compound'), ('Language', 'appos'), ('Let', 'ROOT'), (' ', 'nsubj'), ('CFG', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ], [ , 11], [11,  ], [ , Context], [Context, Free], [Free, Language], [Language, Let], [Let,  ], [ , CFG], [CFG, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ], [‹#›,  , 11], [ , 11,  ], [11,  , Context], [ , Context, Free], [Context, Free, Language], [Free, Language, Let], [Language, Let,  ], [Let,  , CFG], [ , CFG, .]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Context Free Language, a CFG]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('11', 'CARDINAL'), ('CFG', 'ORG')]


============================ Sentence 40 =============================

The language generated by  is   A language  is a context free Language (CFL) if there is a CFG  so that . 


>> Tokens are: 
[language, generated,  ,   , language,  , context, free, Language, (, CFL, ), CFG,  , .] 

>> PoS Tags are: 
[('language', 'NOUN'), ('generated', 'VERB'), (' ', 'SPACE'), ('  ', 'SPACE'), ('language', 'NOUN'), (' ', 'SPACE'), ('context', 'NOUN'), ('free', 'ADJ'), ('Language', 'PROPN'), ('(', 'PUNCT'), ('CFL', 'PROPN'), (')', 'PUNCT'), ('CFG', 'PROPN'), (' ', 'SPACE'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('language', 'nsubj'), ('generated', 'acl'), (' ', 'pobj'), ('  ', 'attr'), ('language', 'attr'), (' ', 'nsubj'), ('context', 'npadvmod'), ('free', 'amod'), ('Language', 'attr'), ('(', 'punct'), ('CFL', 'appos'), (')', 'punct'), ('CFG', 'compound'), (' ', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[language, generated], [generated,  ], [ ,   ], [  , language], [language,  ], [ , context], [context, free], [free, Language], [Language, (], [(, CFL], [CFL, )], [), CFG], [CFG,  ], [ , .]]

>> Trigrams: 
[[language, generated,  ], [generated,  ,   ], [ ,   , language], [  , language,  ], [language,  , context], [ , context, free], [context, free, Language], [free, Language, (], [Language, (, CFL], [(, CFL, )], [CFL, ), CFG], [), CFG,  ], [CFG,  , .]]

>> Noun Phrases are: 
[The language, A language, a context free Language, (CFL]

>> Named Entities are: 
[]


============================ Sentence 41 =============================

 Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[ , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[ Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 42 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for either a or b 	Sa | b Write CFG for a+ 	S aS | a Write CFG for a* 	S aS | ^ 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, Write, CFG, b, 	, Sa, |, b, Write, CFG, a+, 	, S, |, Write, CFG, *, 	, S, |, ^] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('b', 'NOUN'), ('\t', 'SPACE'), ('S\uf0e0a', 'PROPN'), ('|', 'NOUN'), ('b', 'X'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('a+', 'PRON'), ('\t', 'SPACE'), ('S\uf0e0', 'PROPN'), ('|', 'NOUN'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('*', 'NOUN'), ('\t', 'SPACE'), ('S\uf0e0', 'NOUN'), ('|', 'NOUN'), ('^', 'NOUN')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('CFG', 'compound'), ('Examples', 'appos'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('b', 'conj'), ('\t', 'compound'), ('S\uf0e0a', 'conj'), ('|', 'pobj'), ('b', 'punct'), ('Write', 'compound'), ('CFG', 'dobj'), ('a+', 'punct'), ('\t', 'compound'), ('S\uf0e0', 'dative'), ('|', 'advcl'), ('Write', 'compound'), ('CFG', 'dobj'), ('*', 'punct'), ('\t', 'compound'), ('S\uf0e0', 'pobj'), ('|', 'pobj'), ('^', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, Write], [Write, CFG], [CFG, b], [b, 	], [	, Sa], [Sa, |], [|, b], [b, Write], [Write, CFG], [CFG, a+], [a+, 	], [	, S], [S, |], [|, Write], [Write, CFG], [CFG, *], [*, 	], [	, S], [S, |], [|, ^]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, Write], [Examples, Write, CFG], [Write, CFG, b], [CFG, b, 	], [b, 	, Sa], [	, Sa, |], [Sa, |, b], [|, b, Write], [b, Write, CFG], [Write, CFG, a+], [CFG, a+, 	], [a+, 	, S], [	, S, |], [S, |, Write], [|, Write, CFG], [Write, CFG, *], [CFG, *, 	], [*, 	, S], [	, S, |], [S, |, ^]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, CFG Examples, CFG, b, 	Sa, |, Write CFG, 	S, a Write CFG, a* 	S, |]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples Write', 'ORG'), ('S\uf0e0a', 'LOC')]


============================ Sentence 43 =============================

Write CFG for (ab)* 


>> Tokens are: 
[Write, CFG, (, ab, ), *] 

>> PoS Tags are: 
[('Write', 'VERB'), ('CFG', 'PROPN'), ('(', 'PUNCT'), ('ab', 'X'), (')', 'PUNCT'), ('*', 'PUNCT')] 

>> Dependency Tags are: 
[('Write', 'ROOT'), ('CFG', 'dobj'), ('(', 'punct'), ('ab', 'pobj'), (')', 'punct'), ('*', 'punct')]

>> Bigrams: 
[[Write, CFG], [CFG, (], [(, ab], [ab, )], [), *]]

>> Trigrams: 
[[Write, CFG, (], [CFG, (, ab], [(, ab, )], [ab, ), *]]

>> Noun Phrases are: 
[CFG]

>> Named Entities are: 
[]


============================ Sentence 44 =============================

	SabS | ^ Write CFG for any string of a and b 	S aS | bS | a | b   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, SabS, |, ^, Write, CFG, string, b, 	, S, |, bS, |, |, b,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0abS', 'NOUN'), ('|', 'NOUN'), ('^', 'PUNCT'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('string', 'NOUN'), ('b', 'X'), ('\t', 'SPACE'), ('S\uf0e0', 'PROPN'), ('|', 'NOUN'), ('bS', 'NOUN'), ('|', 'NOUN'), ('|', 'NOUN'), ('b', 'ADP'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e0abS', 'nsubj'), ('|', 'advmod'), ('^', 'punct'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('string', 'pobj'), ('b', 'conj'), ('\t', 'compound'), ('S\uf0e0', 'pobj'), ('|', 'pobj'), ('bS', 'compound'), ('|', 'pobj'), ('|', 'npadvmod'), ('b', 'prep'), ('  ', 'nummod'), ('Unit', 'dobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, SabS], [SabS, |], [|, ^], [^, Write], [Write, CFG], [CFG, string], [string, b], [b, 	], [	, S], [S, |], [|, bS], [bS, |], [|, |], [|, b], [b,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, SabS, |], [SabS, |, ^], [|, ^, Write], [^, Write, CFG], [Write, CFG, string], [CFG, string, b], [string, b, 	], [b, 	, S], [	, S, |], [S, |, bS], [|, bS, |], [bS, |, |], [|, |, b], [|, b,   ], [b,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[	SabS, CFG, any string, a and b 	S, |, bS |,   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 45 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for ab* 	SaX 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, Write, CFG, ab, *, 	, SaX] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('ab', 'ADP'), ('*', 'NOUN'), ('\t', 'SPACE'), ('S\uf0e0aX', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('CFG', 'compound'), ('Examples', 'appos'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('ab', 'pobj'), ('*', 'punct'), ('\t', 'dobj'), ('S\uf0e0aX', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, Write], [Write, CFG], [CFG, ab], [ab, *], [*, 	], [	, SaX]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, Write], [Examples, Write, CFG], [Write, CFG, ab], [CFG, ab, *], [ab, *, 	], [*, 	, SaX]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, CFG Examples, CFG]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples Write', 'ORG')]


============================ Sentence 46 =============================

	X˄| bX Write CFG for a*b* 


>> Tokens are: 
[	, X˄|, bX, Write, CFG, a*b, *] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('X\uf0e0˄|', 'PROPN'), ('bX', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('a*b', 'PROPN'), ('*', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('X\uf0e0˄|', 'compound'), ('bX', 'nsubj'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('a*b', 'pobj'), ('*', 'punct')]

>> Bigrams: 
[[	, X˄|], [X˄|, bX], [bX, Write], [Write, CFG], [CFG, a*b], [a*b, *]]

>> Trigrams: 
[[	, X˄|, bX], [X˄|, bX, Write], [bX, Write, CFG], [Write, CFG, a*b], [CFG, a*b, *]]

>> Noun Phrases are: 
[	X˄| bX, CFG, a*b]

>> Named Entities are: 
[('bX', 'DATE')]


============================ Sentence 47 =============================

	SXY 	XaX|˄ 	YbY|˄ Write CFG for (a+b) 


>> Tokens are: 
[	, SXY, 	, XaX|˄, 	, YbY|˄, Write, CFG, (, a+b, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0XY', 'PROPN'), ('\t', 'SPACE'), ('X\uf0e0aX|˄', 'PROPN'), ('\t', 'SPACE'), ('Y\uf0e0bY|˄', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('(', 'PUNCT'), ('a+b', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e0XY', 'compound'), ('\t', 'compound'), ('X\uf0e0aX|˄', 'compound'), ('\t', 'compound'), ('Y\uf0e0bY|˄', 'nsubj'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('(', 'punct'), ('a+b', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[	, SXY], [SXY, 	], [	, XaX|˄], [XaX|˄, 	], [	, YbY|˄], [YbY|˄, Write], [Write, CFG], [CFG, (], [(, a+b], [a+b, )]]

>> Trigrams: 
[[	, SXY, 	], [SXY, 	, XaX|˄], [	, XaX|˄, 	], [XaX|˄, 	, YbY|˄], [	, YbY|˄, Write], [YbY|˄, Write, CFG], [Write, CFG, (], [CFG, (, a+b], [(, a+b, )]]

>> Noun Phrases are: 
[	SXY 	XaX|˄ 	YbY|˄, CFG, a+b]

>> Named Entities are: 
[('S\uf0e0XY', 'GPE')]


============================ Sentence 48 =============================

* 


>> Tokens are: 
[*] 

>> PoS Tags are: 
[('*', 'PUNCT')] 

>> Dependency Tags are: 
[('*', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

	SaS | bS | ^ 


>> Tokens are: 
[	, SaS, |, bS, |, ^] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0aS', 'NOUN'), ('|', 'NOUN'), ('bS', 'NOUN'), ('|', 'NOUN'), ('^', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('S\uf0e0aS', 'ROOT'), ('|', 'advmod'), ('bS', 'appos'), ('|', 'advmod'), ('^', 'punct')]

>> Bigrams: 
[[	, SaS], [SaS, |], [|, bS], [bS, |], [|, ^]]

>> Trigrams: 
[[	, SaS, |], [SaS, |, bS], [|, bS, |], [bS, |, ^]]

>> Noun Phrases are: 
[	SaS, bS]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

Write CFG for a(a+b) 


>> Tokens are: 
[Write, CFG, a(a+b, )] 

>> PoS Tags are: 
[('Write', 'VERB'), ('CFG', 'PROPN'), ('a(a+b', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Write', 'ROOT'), ('CFG', 'dobj'), ('a(a+b', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[Write, CFG], [CFG, a(a+b], [a(a+b, )]]

>> Trigrams: 
[[Write, CFG, a(a+b], [CFG, a(a+b, )]]

>> Noun Phrases are: 
[CFG]

>> Named Entities are: 
[('a(a+b', 'DATE')]


============================ Sentence 51 =============================

* 


>> Tokens are: 
[*] 

>> PoS Tags are: 
[('*', 'PUNCT')] 

>> Dependency Tags are: 
[('*', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

	SaX 	XaX | bX | ^  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, SaX, 	, XaX, |, bX, |, ^,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0aX', 'PUNCT'), ('\t', 'SPACE'), ('X\uf0e0aX', 'NUM'), ('|', 'NOUN'), ('bX', 'PROPN'), ('|', 'NOUN'), ('^', 'VERB'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nmod'), ('S\uf0e0aX', 'punct'), ('\t', 'nmod'), ('X\uf0e0aX', 'punct'), ('|', 'ROOT'), ('bX', 'appos'), ('|', 'npadvmod'), ('^', 'punct'), (' ', 'appos'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[	, SaX], [SaX, 	], [	, XaX], [XaX, |], [|, bX], [bX, |], [|, ^], [^,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, SaX, 	], [SaX, 	, XaX], [	, XaX, |], [XaX, |, bX], [|, bX, |], [bX, |, ^], [|, ^,  ], [^,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[	SaX 	XaX |, bX, Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 53 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for a* | b* 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, Write, CFG, *, |, b, *] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('*', 'NOUN'), ('|', 'NOUN'), ('b', 'X'), ('*', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('CFG', 'compound'), ('Examples', 'appos'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('*', 'punct'), ('|', 'compound'), ('b', 'pobj'), ('*', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, Write], [Write, CFG], [CFG, *], [*, |], [|, b], [b, *]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, Write], [Examples, Write, CFG], [Write, CFG, *], [CFG, *, |], [*, |, b], [|, b, *]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, CFG Examples, CFG]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples Write', 'ORG')]


============================ Sentence 54 =============================

	SA | B 	A˄| aA 	B^ |bB Write CFG for (011+1)*(01) 


>> Tokens are: 
[	, SA, |, B, 	, A˄|, aA, 	, B^, |bB, Write, CFG, (, 011, +, 1)*(01, )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0A', 'PROPN'), ('|', 'NOUN'), ('B', 'PROPN'), ('\t', 'SPACE'), ('A\uf0e0˄|', 'PROPN'), ('aA', 'PROPN'), ('\t', 'SPACE'), ('B\uf0e0^', 'PROPN'), ('|bB', 'NOUN'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('(', 'PUNCT'), ('011', 'NUM'), ('+', 'NUM'), ('1)*(01', 'NUM'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e0A', 'nmod'), ('|', 'npadvmod'), ('B', 'compound'), ('\t', 'compound'), ('A\uf0e0˄|', 'appos'), ('aA', 'advmod'), ('\t', 'compound'), ('B\uf0e0^', 'nmod'), ('|bB', 'compound'), ('Write', 'compound'), ('CFG', 'ROOT'), ('(', 'punct'), ('011', 'pobj'), ('+', 'pobj'), ('1)*(01', 'pobj'), (')', 'punct')]

>> Bigrams: 
[[	, SA], [SA, |], [|, B], [B, 	], [	, A˄|], [A˄|, aA], [aA, 	], [	, B^], [B^, |bB], [|bB, Write], [Write, CFG], [CFG, (], [(, 011], [011, +], [+, 1)*(01], [1)*(01, )]]

>> Trigrams: 
[[	, SA, |], [SA, |, B], [|, B, 	], [B, 	, A˄|], [	, A˄|, aA], [A˄|, aA, 	], [aA, 	, B^], [	, B^, |bB], [B^, |bB, Write], [|bB, Write, CFG], [Write, CFG, (], [CFG, (, 011], [(, 011, +], [011, +, 1)*(01], [+, 1)*(01, )]]

>> Noun Phrases are: 
[B 	A˄|]

>> Named Entities are: 
[('S\uf0e0A', 'GPE'), ('aA', 'PERSON'), ('B\uf0e0^ |bB Write', 'ORG'), ('CFG', 'ORG')]


============================ Sentence 55 =============================

* 	SAB 	A011A | 1A | ^ 


>> Tokens are: 
[*, 	, SAB, 	, A011A, |, 1A, |, ^] 

>> PoS Tags are: 
[('*', 'PUNCT'), ('\t', 'SPACE'), ('S\uf0e0AB', 'PROPN'), ('\t', 'SPACE'), ('A\uf0e0011A', 'NOUN'), ('|', 'NOUN'), ('1A', 'NOUN'), ('|', 'NOUN'), ('^', 'VERB')] 

>> Dependency Tags are: 
[('*', 'punct'), ('\t', 'nsubj'), ('S\uf0e0AB', 'ROOT'), ('\t', 'compound'), ('A\uf0e0011A', 'compound'), ('|', 'compound'), ('1A', 'dobj'), ('|', 'npadvmod'), ('^', 'punct')]

>> Bigrams: 
[[*, 	], [	, SAB], [SAB, 	], [	, A011A], [A011A, |], [|, 1A], [1A, |], [|, ^]]

>> Trigrams: 
[[*, 	, SAB], [	, SAB, 	], [SAB, 	, A011A], [	, A011A, |], [A011A, |, 1A], [|, 1A, |], [1A, |, ^]]

>> Noun Phrases are: 
[* 	SAB, 	A011A | 1A]

>> Named Entities are: 
[]


============================ Sentence 56 =============================

	B01B | ^ Write CFG for balanced parenthesis 	S [] | {} | [s] | {s} | ^   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, B01B, |, ^, Write, CFG, balanced, parenthesis, 	, S, [, ], |, {, }, |, [, s, ], |, {, s, }, |, ^,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('B\uf0e001B', 'ADJ'), ('|', 'NOUN'), ('^', 'PUNCT'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('balanced', 'ADJ'), ('parenthesis', 'NOUN'), ('\t', 'SPACE'), ('S\uf0e0', 'NOUN'), ('[', 'X'), (']', 'PUNCT'), ('|', 'NOUN'), ('{', 'PUNCT'), ('}', 'PUNCT'), ('|', 'NOUN'), ('[', 'PUNCT'), ('s', 'X'), (']', 'PUNCT'), ('|', 'NOUN'), ('{', 'PUNCT'), ('s', 'VERB'), ('}', 'PUNCT'), ('|', 'NOUN'), ('^', 'NOUN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('B\uf0e001B', 'amod'), ('|', 'npadvmod'), ('^', 'punct'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('balanced', 'amod'), ('parenthesis', 'pobj'), ('\t', 'compound'), ('S\uf0e0', 'npadvmod'), ('[', 'punct'), (']', 'punct'), ('|', 'nmod'), ('{', 'punct'), ('}', 'punct'), ('|', 'punct'), ('[', 'punct'), ('s', 'nmod'), (']', 'punct'), ('|', 'npadvmod'), ('{', 'punct'), ('s', 'parataxis'), ('}', 'punct'), ('|', 'npadvmod'), ('^', 'dobj'), ('  ', 'nmod'), ('Unit', 'npadvmod'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, B01B], [B01B, |], [|, ^], [^, Write], [Write, CFG], [CFG, balanced], [balanced, parenthesis], [parenthesis, 	], [	, S], [S, [], [[, ]], [], |], [|, {], [{, }], [}, |], [|, [], [[, s], [s, ]], [], |], [|, {], [{, s], [s, }], [}, |], [|, ^], [^,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, B01B, |], [B01B, |, ^], [|, ^, Write], [^, Write, CFG], [Write, CFG, balanced], [CFG, balanced, parenthesis], [balanced, parenthesis, 	], [parenthesis, 	, S], [	, S, [], [S, [, ]], [[, ], |], [], |, {], [|, {, }], [{, }, |], [}, |, [], [|, [, s], [[, s, ]], [s, ], |], [], |, {], [|, {, s], [{, s, }], [s, }, |], [}, |, ^], [|, ^,   ], [^,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[CFG, balanced parenthesis, ^, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 57 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG which contains at least three times 1. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, Write, CFG, contains, times, 1, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('contains', 'VERB'), ('times', 'NOUN'), ('1', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('CFG', 'compound'), ('Examples', 'appos'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('contains', 'advcl'), ('times', 'quantmod'), ('1', 'nummod'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, Write], [Write, CFG], [CFG, contains], [contains, times], [times, 1], [1, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, Write], [Examples, Write, CFG], [Write, CFG, contains], [CFG, contains, times], [contains, times, 1], [times, 1, .]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, CFG Examples, CFG]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples Write', 'ORG'), ('at least three', 'CARDINAL'), ('1', 'CARDINAL')]


============================ Sentence 58 =============================

 	SA1A1A1A 	A0A | 1A | ^ 


>> Tokens are: 
[ 	, SA1A1A1A, 	, A0A, |, 1A, |, ^] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('S\uf0e0A1A1A1A', 'NOUN'), ('\t', 'SPACE'), ('A\uf0e00A', 'PROPN'), ('|', 'NOUN'), ('1A', 'NOUN'), ('|', 'NOUN'), ('^', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('S\uf0e0A1A1A1A', 'appos'), ('\t', 'compound'), ('A\uf0e00A', 'appos'), ('|', 'compound'), ('1A', 'appos'), ('|', 'ROOT'), ('^', 'punct')]

>> Bigrams: 
[[ 	, SA1A1A1A], [SA1A1A1A, 	], [	, A0A], [A0A, |], [|, 1A], [1A, |], [|, ^]]

>> Trigrams: 
[[ 	, SA1A1A1A, 	], [SA1A1A1A, 	, A0A], [	, A0A, |], [A0A, |, 1A], [|, 1A, |], [1A, |, ^]]

>> Noun Phrases are: 
[SA1A1A1A, 	A0A, | 1A]

>> Named Entities are: 
[]


============================ Sentence 59 =============================

Write CFG that must start and end with same symbol. 


>> Tokens are: 
[Write, CFG, start, end, symbol, .] 

>> PoS Tags are: 
[('Write', 'VERB'), ('CFG', 'PROPN'), ('start', 'VERB'), ('end', 'VERB'), ('symbol', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Write', 'ROOT'), ('CFG', 'dobj'), ('start', 'relcl'), ('end', 'conj'), ('symbol', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Write, CFG], [CFG, start], [start, end], [end, symbol], [symbol, .]]

>> Trigrams: 
[[Write, CFG, start], [CFG, start, end], [start, end, symbol], [end, symbol, .]]

>> Noun Phrases are: 
[CFG, same symbol]

>> Named Entities are: 
[]


============================ Sentence 60 =============================

	S0A0 | 1A1  	A0A | 1A | ^ 


>> Tokens are: 
[	, S0A0, |, 1A1,  	, A0A, |, 1A, |, ^] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e00A0', 'NOUN'), ('|', 'NOUN'), ('1A1', 'NUM'), (' \t', 'SPACE'), ('A\uf0e00A', 'NOUN'), ('|', 'NOUN'), ('1A', 'NOUN'), ('|', 'NOUN'), ('^', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e00A0', 'compound'), ('|', 'ROOT'), ('1A1', 'punct'), (' \t', 'compound'), ('A\uf0e00A', 'compound'), ('|', 'compound'), ('1A', 'conj'), ('|', 'npadvmod'), ('^', 'punct')]

>> Bigrams: 
[[	, S0A0], [S0A0, |], [|, 1A1], [1A1,  	], [ 	, A0A], [A0A, |], [|, 1A], [1A, |], [|, ^]]

>> Trigrams: 
[[	, S0A0, |], [S0A0, |, 1A1], [|, 1A1,  	], [1A1,  	, A0A], [ 	, A0A, |], [A0A, |, 1A], [|, 1A, |], [1A, |, ^]]

>> Noun Phrases are: 
[	S0A0 |,  	A0A | 1A]

>> Named Entities are: 
[]


============================ Sentence 61 =============================

The language of even & odd length palindrome string over {a,b} 	SaSa|bSb|a|b|˄ 


>> Tokens are: 
[language, &, odd, length, palindrome, string, {, ,, b, }, 	, SaSa|bSb|a|b|˄] 

>> PoS Tags are: 
[('language', 'NOUN'), ('&', 'CCONJ'), ('odd', 'ADJ'), ('length', 'NOUN'), ('palindrome', 'NOUN'), ('string', 'NOUN'), ('{', 'PUNCT'), (',', 'PUNCT'), ('b', 'X'), ('}', 'PUNCT'), ('\t', 'SPACE'), ('S\uf0e0aSa|bSb|a|b|˄', 'PROPN')] 

>> Dependency Tags are: 
[('language', 'ROOT'), ('&', 'cc'), ('odd', 'conj'), ('length', 'compound'), ('palindrome', 'compound'), ('string', 'pobj'), ('{', 'punct'), (',', 'punct'), ('b', 'meta'), ('}', 'punct'), ('\t', 'compound'), ('S\uf0e0aSa|bSb|a|b|˄', 'pobj')]

>> Bigrams: 
[[language, &], [&, odd], [odd, length], [length, palindrome], [palindrome, string], [string, {], [{, ,], [,, b], [b, }], [}, 	], [	, SaSa|bSb|a|b|˄]]

>> Trigrams: 
[[language, &, odd], [&, odd, length], [odd, length, palindrome], [length, palindrome, string], [palindrome, string, {], [string, {, ,], [{, ,, b], [,, b, }], [b, }, 	], [}, 	, SaSa|bSb|a|b|˄]]

>> Noun Phrases are: 
[The language, even & odd length palindrome string, {a,b} 	SaSa|bSb|a|b|˄]

>> Named Entities are: 
[]


============================ Sentence 62 =============================

No. of a and no. of b are same 	SaSb|bSa|˄ 


>> Tokens are: 
[., ., b, 	, SaSb|bSa|˄] 

>> PoS Tags are: 
[('.', 'NOUN'), ('.', 'PUNCT'), ('b', 'NOUN'), ('\t', 'SPACE'), ('S\uf0e0aSb|bSa|˄', 'PROPN')] 

>> Dependency Tags are: 
[('.', 'punct'), ('.', 'punct'), ('b', 'pobj'), ('\t', 'compound'), ('S\uf0e0aSb|bSa|˄', 'attr')]

>> Bigrams: 
[[., .], [., b], [b, 	], [	, SaSb|bSa|˄]]

>> Trigrams: 
[[., ., b], [., b, 	], [b, 	, SaSb|bSa|˄]]

>> Noun Phrases are: 
[b, same 	SaSb|bSa|˄]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

The language of {a, b} ends in a 	SaS | bS |a  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[language, {, ,, b, }, ends, 	, SaS, |, bS, |a,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('language', 'NOUN'), ('{', 'PUNCT'), (',', 'PUNCT'), ('b', 'X'), ('}', 'PUNCT'), ('ends', 'VERB'), ('\t', 'SPACE'), ('S\uf0e0aS', 'PROPN'), ('|', 'NOUN'), ('bS', 'NOUN'), ('|a', 'X'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('language', 'nsubj'), ('{', 'punct'), (',', 'punct'), ('b', 'pobj'), ('}', 'punct'), ('ends', 'ROOT'), ('\t', 'compound'), ('S\uf0e0aS', 'compound'), ('|', 'pobj'), ('bS', 'npadvmod'), ('|a', 'nmod'), (' ', 'compound'), ('Unit', 'dobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[language, {], [{, ,], [,, b], [b, }], [}, ends], [ends, 	], [	, SaS], [SaS, |], [|, bS], [bS, |a], [|a,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[language, {, ,], [{, ,, b], [,, b, }], [b, }, ends], [}, ends, 	], [ends, 	, SaS], [	, SaS, |], [SaS, |, bS], [|, bS, |a], [bS, |a,  ], [|a,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[The language, a 	SaS |, |a  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('bS', 'GPE'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 64 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for regular expression (a+b)*a(a+b)*a(a+b) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, Write, CFG, regular, expression, (, a+b)*a(a+b)*a(a+b, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('regular', 'ADJ'), ('expression', 'NOUN'), ('(', 'PUNCT'), ('a+b)*a(a+b)*a(a+b', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('CFG', 'compound'), ('Examples', 'appos'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('regular', 'amod'), ('expression', 'pobj'), ('(', 'punct'), ('a+b)*a(a+b)*a(a+b', 'parataxis'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, Write], [Write, CFG], [CFG, regular], [regular, expression], [expression, (], [(, a+b)*a(a+b)*a(a+b], [a+b)*a(a+b)*a(a+b, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, Write], [Examples, Write, CFG], [Write, CFG, regular], [CFG, regular, expression], [regular, expression, (], [expression, (, a+b)*a(a+b)*a(a+b], [(, a+b)*a(a+b)*a(a+b, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, CFG Examples, CFG, regular expression]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples Write', 'ORG')]


============================ Sentence 65 =============================

* 	SXaXaX 


>> Tokens are: 
[*, 	, SXaXaX] 

>> PoS Tags are: 
[('*', 'PUNCT'), ('\t', 'SPACE'), ('S\uf0e0XaXaX', 'PUNCT')] 

>> Dependency Tags are: 
[('*', 'punct'), ('\t', 'ROOT'), ('S\uf0e0XaXaX', 'punct')]

>> Bigrams: 
[[*, 	], [	, SXaXaX]]

>> Trigrams: 
[[*, 	, SXaXaX]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

	XaX|bX|˄ Write CFG for number of 0’s and 1’s are same (n0(x)=n1(x)) 


>> Tokens are: 
[	, XaX|bX|˄, Write, CFG, number, 0, 1, (, n0(x)=n1(x, ), )] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('X\uf0e0aX|bX|˄', 'PROPN'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('number', 'NOUN'), ('0', 'NUM'), ('1', 'NUM'), ('(', 'PUNCT'), ('n0(x)=n1(x', 'INTJ'), (')', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('X\uf0e0aX|bX|˄', 'compound'), ('Write', 'compound'), ('CFG', 'nsubj'), ('number', 'pobj'), ('0', 'pobj'), ('1', 'conj'), ('(', 'punct'), ('n0(x)=n1(x', 'attr'), (')', 'punct'), (')', 'punct')]

>> Bigrams: 
[[	, XaX|bX|˄], [XaX|bX|˄, Write], [Write, CFG], [CFG, number], [number, 0], [0, 1], [1, (], [(, n0(x)=n1(x], [n0(x)=n1(x, )], [), )]]

>> Trigrams: 
[[	, XaX|bX|˄, Write], [XaX|bX|˄, Write, CFG], [Write, CFG, number], [CFG, number, 0], [number, 0, 1], [0, 1, (], [1, (, n0(x)=n1(x], [(, n0(x)=n1(x, )], [n0(x)=n1(x, ), )]]

>> Noun Phrases are: 
[	XaX|bX|˄ Write CFG, number]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

	S0S1 | 1S0 | ^ 


>> Tokens are: 
[	, S0S1, |, 1S0, |, ^] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e00S1', 'PROPN'), ('|', 'NOUN'), ('1S0', 'NUM'), ('|', 'NOUN'), ('^', 'NOUN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e00S1', 'compound'), ('|', 'ROOT'), ('1S0', 'nummod'), ('|', 'appos'), ('^', 'punct')]

>> Bigrams: 
[[	, S0S1], [S0S1, |], [|, 1S0], [1S0, |], [|, ^]]

>> Trigrams: 
[[	, S0S1, |], [S0S1, |, 1S0], [|, 1S0, |], [1S0, |, ^]]

>> Noun Phrases are: 
[	S0S1 |, |]

>> Named Entities are: 
[('1S0', 'DATE')]


============================ Sentence 68 =============================

Write CFG for L={aibjck | i=j or j=k}  	 


>> Tokens are: 
[Write, CFG, L={aibjck, |, =, j, j, =, k, },  	] 

>> PoS Tags are: 
[('Write', 'VERB'), ('CFG', 'PROPN'), ('L={aibjck', 'PROPN'), ('|', 'NOUN'), ('=', 'PUNCT'), ('j', 'X'), ('j', 'NOUN'), ('=', 'SYM'), ('k', 'NOUN'), ('}', 'PUNCT'), (' \t', 'SPACE')] 

>> Dependency Tags are: 
[('Write', 'ROOT'), ('CFG', 'dobj'), ('L={aibjck', 'pobj'), ('|', 'npadvmod'), ('=', 'compound'), ('j', 'npadvmod'), ('j', 'conj'), ('=', 'conj'), ('k', 'dobj'), ('}', 'punct'), (' \t', 'dobj')]

>> Bigrams: 
[[Write, CFG], [CFG, L={aibjck], [L={aibjck, |], [|, =], [=, j], [j, j], [j, =], [=, k], [k, }], [},  	]]

>> Trigrams: 
[[Write, CFG, L={aibjck], [CFG, L={aibjck, |], [L={aibjck, |, =], [|, =, j], [=, j, j], [j, j, =], [j, =, k], [=, k, }], [k, },  	]]

>> Noun Phrases are: 
[CFG, L={aibjck, i, k]

>> Named Entities are: 
[('L={aibjck', 'ORG')]


============================ Sentence 69 =============================

For i=j				for j= 


>> Tokens are: 
[=, j, 				, j, =] 

>> PoS Tags are: 
[('=', 'PUNCT'), ('j', 'X'), ('\t\t\t\t', 'SPACE'), ('j', 'NOUN'), ('=', 'SYM')] 

>> Dependency Tags are: 
[('=', 'pobj'), ('j', 'det'), ('\t\t\t\t', 'pobj'), ('j', 'pobj'), ('=', 'pobj')]

>> Bigrams: 
[[=, j], [j, 				], [				, j], [j, =]]

>> Trigrams: 
[[=, j, 				], [j, 				, j], [				, j, =]]

>> Noun Phrases are: 
[i, j]

>> Named Entities are: 
[]


============================ Sentence 70 =============================

k 


>> Tokens are: 
[k] 

>> PoS Tags are: 
[('k', 'X')] 

>> Dependency Tags are: 
[('k', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 71 =============================

	SAB				SCD 	AaAb | ab			CaC | a 	BcB | c			DbDc | bc  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, SAB, 				, SCD, 	, AaAb, |, ab, 			, CaC, |, 	, BcB, |, c, 			, DbDc, |, bc,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0AB', 'ADJ'), ('\t\t\t\t', 'SPACE'), ('S\uf0e0CD', 'NOUN'), ('\t', 'SPACE'), ('A\uf0e0aAb', 'PROPN'), ('|', 'NOUN'), ('ab', 'ADP'), ('\t\t\t', 'SPACE'), ('C\uf0e0aC', 'NUM'), ('|', 'NOUN'), ('\t', 'SPACE'), ('B\uf0e0cB', 'PUNCT'), ('|', 'NOUN'), ('c', 'DET'), ('\t\t\t', 'SPACE'), ('D\uf0e0bDc', 'NUM'), ('|', 'NOUN'), ('bc', 'ADP'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('S\uf0e0AB', 'amod'), ('\t\t\t\t', 'amod'), ('S\uf0e0CD', 'compound'), ('\t', 'compound'), ('A\uf0e0aAb', 'dobj'), ('|', 'npadvmod'), ('ab', 'prep'), ('\t\t\t', 'pobj'), ('C\uf0e0aC', 'punct'), ('|', 'npadvmod'), ('\t', 'appos'), ('B\uf0e0cB', 'prep'), ('|', 'pobj'), ('c', 'quantmod'), ('\t\t\t', 'compound'), ('D\uf0e0bDc', 'appos'), ('|', 'advmod'), ('bc', 'prep'), (' ', 'compound'), ('Unit', 'pobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, SAB], [SAB, 				], [				, SCD], [SCD, 	], [	, AaAb], [AaAb, |], [|, ab], [ab, 			], [			, CaC], [CaC, |], [|, 	], [	, BcB], [BcB, |], [|, c], [c, 			], [			, DbDc], [DbDc, |], [|, bc], [bc,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, SAB, 				], [SAB, 				, SCD], [				, SCD, 	], [SCD, 	, AaAb], [	, AaAb, |], [AaAb, |, ab], [|, ab, 			], [ab, 			, CaC], [			, CaC, |], [CaC, |, 	], [|, 	, BcB], [	, BcB, |], [BcB, |, c], [|, c, 			], [c, 			, DbDc], [			, DbDc, |], [DbDc, |, bc], [|, bc,  ], [bc,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[SAB				SCD 	AaAb, |,  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 72 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples Write CFG for L={ aibjck | j>i+k}  	SABC 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, Write, CFG, L=, {, aibjck, |, j, >, i+k, },  	, SABC] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('Write', 'VERB'), ('CFG', 'PROPN'), ('L=', 'PROPN'), ('{', 'PUNCT'), ('aibjck', 'NOUN'), ('|', 'NOUN'), ('j', 'X'), ('>', 'X'), ('i+k', 'SYM'), ('}', 'PUNCT'), (' \t', 'SPACE'), ('S\uf0e0ABC', 'PROPN')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('CFG', 'compound'), ('Examples', 'nsubj'), ('Write', 'ROOT'), ('CFG', 'dobj'), ('L=', 'pobj'), ('{', 'punct'), ('aibjck', 'appos'), ('|', 'npadvmod'), ('j', 'dobj'), ('>', 'nmod'), ('i+k', 'punct'), ('}', 'punct'), (' \t', 'dep'), ('S\uf0e0ABC', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, Write], [Write, CFG], [CFG, L=], [L=, {], [{, aibjck], [aibjck, |], [|, j], [j, >], [>, i+k], [i+k, }], [},  	], [ 	, SABC]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, Write], [Examples, Write, CFG], [Write, CFG, L=], [CFG, L=, {], [L=, {, aibjck], [{, aibjck, |], [aibjck, |, j], [|, j, >], [j, >, i+k], [>, i+k, }], [i+k, },  	], [},  	, SABC]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, CFG Examples, CFG, L=, aibjck]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples Write', 'ORG')]


============================ Sentence 73 =============================

	AaAb |˄ 


>> Tokens are: 
[	, AaAb, |˄] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('A\uf0e0aAb', 'NOUN'), ('|˄', 'VERB')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('A\uf0e0aAb', 'nsubj'), ('|˄', 'ROOT')]

>> Bigrams: 
[[	, AaAb], [AaAb, |˄]]

>> Trigrams: 
[[	, AaAb, |˄]]

>> Noun Phrases are: 
[	AaAb]

>> Named Entities are: 
[]


============================ Sentence 74 =============================

	BbB | b 	CbCc |˄ Write CFG for L={ 0i1j0k | j>i+k}  	SABC 


>> Tokens are: 
[	, BbB, |, b, 	, CbCc, |˄, Write, CFG, L=, {, 0i1j0k, |, j, >, i+k, },  	, SABC] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('B\uf0e0bB', 'PUNCT'), ('|', 'NOUN'), ('b', 'NOUN'), ('\t', 'SPACE'), ('C\uf0e0bCc', 'NOUN'), ('|˄', 'VERB'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('L=', 'PROPN'), ('{', 'PUNCT'), ('0i1j0k', 'PROPN'), ('|', 'NOUN'), ('j', 'NOUN'), ('>', 'X'), ('i+k', 'X'), ('}', 'PUNCT'), (' \t', 'SPACE'), ('S\uf0e0ABC', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('B\uf0e0bB', 'punct'), ('|', 'npadvmod'), ('b', 'punct'), ('\t', 'compound'), ('C\uf0e0bCc', 'nsubj'), ('|˄', 'acl'), ('Write', 'compound'), ('CFG', 'dobj'), ('L=', 'pobj'), ('{', 'punct'), ('0i1j0k', 'appos'), ('|', 'npadvmod'), ('j', 'appos'), ('>', 'nmod'), ('i+k', 'punct'), ('}', 'punct'), (' \t', 'appos'), ('S\uf0e0ABC', 'punct')]

>> Bigrams: 
[[	, BbB], [BbB, |], [|, b], [b, 	], [	, CbCc], [CbCc, |˄], [|˄, Write], [Write, CFG], [CFG, L=], [L=, {], [{, 0i1j0k], [0i1j0k, |], [|, j], [j, >], [>, i+k], [i+k, }], [},  	], [ 	, SABC]]

>> Trigrams: 
[[	, BbB, |], [BbB, |, b], [|, b, 	], [b, 	, CbCc], [	, CbCc, |˄], [CbCc, |˄, Write], [|˄, Write, CFG], [Write, CFG, L=], [CFG, L=, {], [L=, {, 0i1j0k], [{, 0i1j0k, |], [0i1j0k, |, j], [|, j, >], [j, >, i+k], [>, i+k, }], [i+k, },  	], [},  	, SABC]]

>> Noun Phrases are: 
[	CbCc, Write CFG, L=, { 0i1j0k, j]

>> Named Entities are: 
[('|˄ Write', 'WORK_OF_ART'), ('0i1j0k', 'CARDINAL')]


============================ Sentence 75 =============================

	A0A1 |˄ 	B1B | 1 	C1C0 |˄ Write CFG for the language of Algebraic expressions 	SS+S | S*S | S-S | S/S | (S) | a  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, A0A1, |˄, 	, B1B, |, 1, 	, C1C0, |˄, Write, CFG, language, Algebraic, expressions, 	, SS+S, |, S*S, |, S, -, S, |, S, /, S, |, (, S, ), |,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('A\uf0e00A1', 'NOUN'), ('|˄', 'VERB'), ('\t', 'SPACE'), ('B\uf0e01B', 'PROPN'), ('|', 'NOUN'), ('1', 'NUM'), ('\t', 'SPACE'), ('C\uf0e01C0', 'NOUN'), ('|˄', 'VERB'), ('Write', 'PROPN'), ('CFG', 'PROPN'), ('language', 'NOUN'), ('Algebraic', 'PROPN'), ('expressions', 'NOUN'), ('\t', 'SPACE'), ('S\uf0e0S+S', 'PROPN'), ('|', 'NOUN'), ('S*S', 'DET'), ('|', 'NOUN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('|', 'NOUN'), ('S', 'PROPN'), ('/', 'SYM'), ('S', 'PROPN'), ('|', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('|', 'VERB'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('A\uf0e00A1', 'nsubj'), ('|˄', 'ROOT'), ('\t', 'amod'), ('B\uf0e01B', 'compound'), ('|', 'npadvmod'), ('1', 'nummod'), ('\t', 'compound'), ('C\uf0e01C0', 'nsubj'), ('|˄', 'relcl'), ('Write', 'compound'), ('CFG', 'appos'), ('language', 'pobj'), ('Algebraic', 'amod'), ('expressions', 'pobj'), ('\t', 'compound'), ('S\uf0e0S+S', 'appos'), ('|', 'npadvmod'), ('S*S', 'punct'), ('|', 'appos'), ('S', 'compound'), ('-', 'punct'), ('S', 'compound'), ('|', 'nmod'), ('S', 'nmod'), ('/', 'punct'), ('S', 'appos'), ('|', 'npadvmod'), ('(', 'punct'), ('S', 'appos'), (')', 'punct'), ('|', 'dep'), (' ', 'compound'), ('Unit', 'dep'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, A0A1], [A0A1, |˄], [|˄, 	], [	, B1B], [B1B, |], [|, 1], [1, 	], [	, C1C0], [C1C0, |˄], [|˄, Write], [Write, CFG], [CFG, language], [language, Algebraic], [Algebraic, expressions], [expressions, 	], [	, SS+S], [SS+S, |], [|, S*S], [S*S, |], [|, S], [S, -], [-, S], [S, |], [|, S], [S, /], [/, S], [S, |], [|, (], [(, S], [S, )], [), |], [|,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, A0A1, |˄], [A0A1, |˄, 	], [|˄, 	, B1B], [	, B1B, |], [B1B, |, 1], [|, 1, 	], [1, 	, C1C0], [	, C1C0, |˄], [C1C0, |˄, Write], [|˄, Write, CFG], [Write, CFG, language], [CFG, language, Algebraic], [language, Algebraic, expressions], [Algebraic, expressions, 	], [expressions, 	, SS+S], [	, SS+S, |], [SS+S, |, S*S], [|, S*S, |], [S*S, |, S], [|, S, -], [S, -, S], [-, S, |], [S, |, S], [|, S, /], [S, /, S], [/, S, |], [S, |, (], [|, (, S], [(, S, )], [S, ), |], [), |,  ], [|,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[	A0A1, 	C1C0, Write CFG, the language, Algebraic expressions, 	SS+S, |, S-S | S/S, (S, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('1', 'CARDINAL'), ('Algebraic', 'FAC'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 76 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG Examples CFG for syntax of programming language <statement>  … | <if-statement> | <for-statement> | … <if-statement>  if ( <expression> ) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, Examples, CFG, syntax, programming, language, <, statement, >,  , …, |, <, -, statement, >, |, <, -, statement, >, |, …, <, -, statement, >,  , (, <, expression, >, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('Examples', 'PROPN'), ('CFG', 'PROPN'), ('syntax', 'NOUN'), ('programming', 'NOUN'), ('language', 'NOUN'), ('<', 'X'), ('statement', 'NOUN'), ('>', 'X'), (' ', 'SPACE'), ('…', 'PUNCT'), ('|', 'NOUN'), ('<', 'X'), ('-', 'PUNCT'), ('statement', 'NOUN'), ('>', 'X'), ('|', 'NOUN'), ('<', 'X'), ('-', 'PUNCT'), ('statement', 'NOUN'), ('>', 'X'), ('|', 'NOUN'), ('…', 'PUNCT'), ('<', 'X'), ('-', 'PUNCT'), ('statement', 'NOUN'), ('>', 'X'), (' ', 'SPACE'), ('(', 'PUNCT'), ('<', 'X'), ('expression', 'NOUN'), ('>', 'X'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('CFG', 'compound'), ('Examples', 'compound'), ('CFG', 'conj'), ('syntax', 'pobj'), ('programming', 'compound'), ('language', 'pobj'), ('<', 'punct'), ('statement', 'appos'), ('>', 'punct'), (' ', 'appos'), ('…', 'punct'), ('|', 'appos'), ('<', 'punct'), ('-', 'punct'), ('statement', 'appos'), ('>', 'punct'), ('|', 'npadvmod'), ('<', 'punct'), ('-', 'punct'), ('statement', 'pobj'), ('>', 'appos'), ('|', 'npadvmod'), ('…', 'punct'), ('<', 'dep'), ('-', 'punct'), ('statement', 'appos'), ('>', 'punct'), (' ', 'appos'), ('(', 'punct'), ('<', 'nmod'), ('expression', 'appos'), ('>', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, Examples], [Examples, CFG], [CFG, syntax], [syntax, programming], [programming, language], [language, <], [<, statement], [statement, >], [>,  ], [ , …], […, |], [|, <], [<, -], [-, statement], [statement, >], [>, |], [|, <], [<, -], [-, statement], [statement, >], [>, |], [|, …], […, <], [<, -], [-, statement], [statement, >], [>,  ], [ , (], [(, <], [<, expression], [expression, >], [>, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, Examples], [CFG, Examples, CFG], [Examples, CFG, syntax], [CFG, syntax, programming], [syntax, programming, language], [programming, language, <], [language, <, statement], [<, statement, >], [statement, >,  ], [>,  , …], [ , …, |], […, |, <], [|, <, -], [<, -, statement], [-, statement, >], [statement, >, |], [>, |, <], [|, <, -], [<, -, statement], [-, statement, >], [statement, >, |], [>, |, …], [|, …, <], […, <, -], [<, -, statement], [-, statement, >], [statement, >,  ], [>,  , (], [ , (, <], [(, <, expression], [<, expression, >], [expression, >, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› CFG Examples CFG, syntax, programming language, statement, |, if-statement, statement, … <if-statement, <expression]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CFG Examples', 'ORG')]


============================ Sentence 77 =============================

<statement> <for-statement>  for ( <expression>; <expression>; <expression> ) <statement>   


>> Tokens are: 
[<, statement, >, <, -, statement, >,  , (, <, expression, >, ;, <, expression, >, ;, <, expression, >, ), <, statement, >,  ] 

>> PoS Tags are: 
[('<', 'X'), ('statement', 'NOUN'), ('>', 'X'), ('<', 'X'), ('-', 'PUNCT'), ('statement', 'NOUN'), ('>', 'X'), (' ', 'SPACE'), ('(', 'PUNCT'), ('<', 'X'), ('expression', 'NOUN'), ('>', 'NUM'), (';', 'PUNCT'), ('<', 'X'), ('expression', 'NOUN'), ('>', 'NUM'), (';', 'PUNCT'), ('<', 'X'), ('expression', 'NOUN'), ('>', 'X'), (')', 'PUNCT'), ('<', 'PUNCT'), ('statement', 'NOUN'), ('>', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('<', 'punct'), ('statement', 'ROOT'), ('>', 'punct'), ('<', 'punct'), ('-', 'punct'), ('statement', 'pobj'), ('>', 'punct'), (' ', 'appos'), ('(', 'punct'), ('<', 'pobj'), ('expression', 'pobj'), ('>', 'pobj'), (';', 'punct'), ('<', 'punct'), ('expression', 'appos'), ('>', 'appos'), (';', 'punct'), ('<', 'punct'), ('expression', 'appos'), ('>', 'punct'), (')', 'punct'), ('<', 'punct'), ('statement', 'appos'), ('>', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[<, statement], [statement, >], [>, <], [<, -], [-, statement], [statement, >], [>,  ], [ , (], [(, <], [<, expression], [expression, >], [>, ;], [;, <], [<, expression], [expression, >], [>, ;], [;, <], [<, expression], [expression, >], [>, )], [), <], [<, statement], [statement, >], [>,  ]]

>> Trigrams: 
[[<, statement, >], [statement, >, <], [>, <, -], [<, -, statement], [-, statement, >], [statement, >,  ], [>,  , (], [ , (, <], [(, <, expression], [<, expression, >], [expression, >, ;], [>, ;, <], [;, <, expression], [<, expression, >], [expression, >, ;], [>, ;, <], [;, <, expression], [<, expression, >], [expression, >, )], [>, ), <], [), <, statement], [<, statement, >], [statement, >,  ]]

>> Noun Phrases are: 
[<statement, statement, expression, expression, expression, statement]

>> Named Entities are: 
[]


============================ Sentence 78 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 79 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Recursive Definitions    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Recursive, Definitions,    , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Recursive', 'PROPN'), ('Definitions', 'PROPN'), ('   ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Recursive', 'compound'), ('Definitions', 'compound'), ('   ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Recursive], [Recursive, Definitions], [Definitions,    ], [   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Recursive], [‹#›, Recursive, Definitions], [Recursive, Definitions,    ], [Definitions,    , Unit], [   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Recursive Definitions    Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 80 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Recursive Definitions   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Recursive, Definitions,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Recursive', 'PROPN'), ('Definitions', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Recursive', 'compound'), ('Definitions', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Recursive], [Recursive, Definitions], [Definitions,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Recursive], [‹#›, Recursive, Definitions], [Recursive, Definitions,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Recursive Definitions]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG')]


============================ Sentence 81 =============================

Recursive Definition of {a,b}* 


>> Tokens are: 
[Recursive, Definition, {, ,, b, }, *] 

>> PoS Tags are: 
[('Recursive', 'PROPN'), ('Definition', 'PROPN'), ('{', 'PUNCT'), (',', 'PUNCT'), ('b', 'X'), ('}', 'PUNCT'), ('*', 'PUNCT')] 

>> Dependency Tags are: 
[('Recursive', 'compound'), ('Definition', 'ROOT'), ('{', 'punct'), (',', 'punct'), ('b', 'pobj'), ('}', 'punct'), ('*', 'punct')]

>> Bigrams: 
[[Recursive, Definition], [Definition, {], [{, ,], [,, b], [b, }], [}, *]]

>> Trigrams: 
[[Recursive, Definition, {], [Definition, {, ,], [{, ,, b], [,, b, }], [b, }, *]]

>> Noun Phrases are: 
[Recursive Definition]

>> Named Entities are: 
[]


============================ Sentence 82 =============================

	˄∈L. 	For any S∈L, aS∈L. 	For any S∈L, bS∈L. 	No other strings are in L. Recursive Definition of Palindrome 	˄, a, b ∈ L  	For any S ∈ L , aSa ∈ L and bSb 


>> Tokens are: 
[	, ˄∈L., 	, S∈L, ,, aS∈L., 	, S∈L, ,, bS∈L., 	, strings, L., Recursive, Definition, Palindrome, 	, ˄, ,, ,, b, ∈, L,  	, S, ∈, L, ,, aSa, ∈, L, bSb] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('˄∈L.', 'PUNCT'), ('\t', 'SPACE'), ('S∈L', 'PROPN'), (',', 'PUNCT'), ('aS∈L.', 'INTJ'), ('\t', 'SPACE'), ('S∈L', 'PROPN'), (',', 'PUNCT'), ('bS∈L.', 'PROPN'), ('\t', 'SPACE'), ('strings', 'NOUN'), ('L.', 'PROPN'), ('Recursive', 'PROPN'), ('Definition', 'PROPN'), ('Palindrome', 'PROPN'), ('\t', 'SPACE'), ('˄', 'PROPN'), (',', 'PUNCT'), (',', 'PUNCT'), ('b', 'X'), ('∈', 'PROPN'), ('L', 'NOUN'), (' \t', 'SPACE'), ('S', 'PROPN'), ('∈', 'PROPN'), ('L', 'PROPN'), (',', 'PUNCT'), ('aSa', 'X'), ('∈', 'PROPN'), ('L', 'NOUN'), ('bSb', 'PRON')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('˄∈L.', 'nmod'), ('\t', 'appos'), ('S∈L', 'pobj'), (',', 'punct'), ('aS∈L.', 'intj'), ('\t', 'appos'), ('S∈L', 'pobj'), (',', 'punct'), ('bS∈L.', 'dep'), ('\t', 'pobj'), ('strings', 'nsubj'), ('L.', 'compound'), ('Recursive', 'compound'), ('Definition', 'pobj'), ('Palindrome', 'compound'), ('\t', 'compound'), ('˄', 'pobj'), (',', 'punct'), (',', 'punct'), ('b', 'compound'), ('∈', 'compound'), ('L', 'compound'), (' \t', 'appos'), ('S', 'compound'), ('∈', 'compound'), ('L', 'pobj'), (',', 'punct'), ('aSa', 'punct'), ('∈', 'compound'), ('L', 'appos'), ('bSb', 'conj')]

>> Bigrams: 
[[	, ˄∈L.], [˄∈L., 	], [	, S∈L], [S∈L, ,], [,, aS∈L.], [aS∈L., 	], [	, S∈L], [S∈L, ,], [,, bS∈L.], [bS∈L., 	], [	, strings], [strings, L.], [L., Recursive], [Recursive, Definition], [Definition, Palindrome], [Palindrome, 	], [	, ˄], [˄, ,], [,, ,], [,, b], [b, ∈], [∈, L], [L,  	], [ 	, S], [S, ∈], [∈, L], [L, ,], [,, aSa], [aSa, ∈], [∈, L], [L, bSb]]

>> Trigrams: 
[[	, ˄∈L., 	], [˄∈L., 	, S∈L], [	, S∈L, ,], [S∈L, ,, aS∈L.], [,, aS∈L., 	], [aS∈L., 	, S∈L], [	, S∈L, ,], [S∈L, ,, bS∈L.], [,, bS∈L., 	], [bS∈L., 	, strings], [	, strings, L.], [strings, L., Recursive], [L., Recursive, Definition], [Recursive, Definition, Palindrome], [Definition, Palindrome, 	], [Palindrome, 	, ˄], [	, ˄, ,], [˄, ,, ,], [,, ,, b], [,, b, ∈], [b, ∈, L], [∈, L,  	], [L,  	, S], [ 	, S, ∈], [S, ∈, L], [∈, L, ,], [L, ,, aSa], [,, aSa, ∈], [aSa, ∈, L], [∈, L, bSb]]

>> Noun Phrases are: 
[any S∈L, any S∈L, No other strings, L. Recursive Definition, Palindrome 	˄, any S ∈ L, ∈ L, bSb]

>> Named Entities are: 
[('∈ L', 'ORG'), ('S ∈ L', 'ORG')]


============================ Sentence 83 =============================

∈ L  	 


>> Tokens are: 
[∈, L,  	] 

>> PoS Tags are: 
[('∈', 'PROPN'), ('L', 'NOUN'), (' \t', 'SPACE')] 

>> Dependency Tags are: 
[('∈', 'compound'), ('L', 'ROOT'), (' \t', 'appos')]

>> Bigrams: 
[[∈, L], [L,  	]]

>> Trigrams: 
[[∈, L,  	]]

>> Noun Phrases are: 
[∈ L]

>> Named Entities are: 
[]


============================ Sentence 84 =============================

No other string are in L   


>> Tokens are: 
[string, L,  ] 

>> PoS Tags are: 
[('string', 'NOUN'), ('L', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('string', 'nsubj'), ('L', 'pobj'), (' ', 'nummod')]

>> Bigrams: 
[[string, L], [L,  ]]

>> Trigrams: 
[[string, L,  ]]

>> Noun Phrases are: 
[No other string, L]

>> Named Entities are: 
[]


============================ Sentence 85 =============================

Recursive Definition of the language {anbn | n≥0} 	˄∈ L 	For every S ∈ L, aSb ∈L 


>> Tokens are: 
[Recursive, Definition, language, {, anbn, |, n≥0, }, 	, ˄∈, L, 	, S, ∈, L, ,, aSb, ∈L] 

>> PoS Tags are: 
[('Recursive', 'PROPN'), ('Definition', 'PROPN'), ('language', 'NOUN'), ('{', 'PUNCT'), ('anbn', 'NOUN'), ('|', 'NOUN'), ('n≥0', 'PROPN'), ('}', 'PUNCT'), ('\t', 'SPACE'), ('˄∈', 'PUNCT'), ('L', 'PROPN'), ('\t', 'SPACE'), ('S', 'PROPN'), ('∈', 'PROPN'), ('L', 'PROPN'), (',', 'PUNCT'), ('aSb', 'PROPN'), ('∈L', 'PROPN')] 

>> Dependency Tags are: 
[('Recursive', 'compound'), ('Definition', 'ROOT'), ('language', 'pobj'), ('{', 'punct'), ('anbn', 'compound'), ('|', 'appos'), ('n≥0', 'prep'), ('}', 'punct'), ('\t', 'nmod'), ('˄∈', 'punct'), ('L', 'compound'), ('\t', 'conj'), ('S', 'compound'), ('∈', 'compound'), ('L', 'pobj'), (',', 'punct'), ('aSb', 'appos'), ('∈L', 'punct')]

>> Bigrams: 
[[Recursive, Definition], [Definition, language], [language, {], [{, anbn], [anbn, |], [|, n≥0], [n≥0, }], [}, 	], [	, ˄∈], [˄∈, L], [L, 	], [	, S], [S, ∈], [∈, L], [L, ,], [,, aSb], [aSb, ∈L]]

>> Trigrams: 
[[Recursive, Definition, language], [Definition, language, {], [language, {, anbn], [{, anbn, |], [anbn, |, n≥0], [|, n≥0, }], [n≥0, }, 	], [}, 	, ˄∈], [	, ˄∈, L], [˄∈, L, 	], [L, 	, S], [	, S, ∈], [S, ∈, L], [∈, L, ,], [L, ,, aSb], [,, aSb, ∈L]]

>> Noun Phrases are: 
[Recursive Definition, the language, {anbn |, every S ∈ L, aSb]

>> Named Entities are: 
[]


============================ Sentence 86 =============================

	No other strings are in L CFG: S aS | bS | ^ CFG: S aSa | bSb | a | b | ˄ CFG: S aSb | ˄  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, strings, L, CFG, :, S, |, bS, |, ^, CFG, :, S, aSa, |, bSb, |, |, b, |, ˄, CFG, :, S, aSb, |, ˄,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('strings', 'NOUN'), ('L', 'PROPN'), ('CFG', 'PROPN'), (':', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('|', 'NOUN'), ('bS', 'NOUN'), ('|', 'NOUN'), ('^', 'PUNCT'), ('CFG', 'PROPN'), (':', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('aSa', 'PUNCT'), ('|', 'NOUN'), ('bSb', 'PRON'), ('|', 'NOUN'), ('|', 'NOUN'), ('b', 'NOUN'), ('|', 'NOUN'), ('˄', 'NOUN'), ('CFG', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('aSb', 'ADV'), ('|', 'NOUN'), ('˄', 'PROPN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('strings', 'nsubj'), ('L', 'compound'), ('CFG', 'pobj'), (':', 'punct'), ('S\uf0e0', 'npadvmod'), ('|', 'pobj'), ('bS', 'pobj'), ('|', 'pobj'), ('^', 'punct'), ('CFG', 'dep'), (':', 'punct'), ('S\uf0e0', 'appos'), ('aSa', 'punct'), ('|', 'nsubj'), ('bSb', 'dep'), ('|', 'npadvmod'), ('|', 'npadvmod'), ('b', 'dep'), ('|', 'npadvmod'), ('˄', 'compound'), ('CFG', 'dep'), (':', 'punct'), ('S\uf0e0', 'dep'), ('aSb', 'advmod'), ('|', 'pobj'), ('˄', 'nmod'), (' ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'dep'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, strings], [strings, L], [L, CFG], [CFG, :], [:, S], [S, |], [|, bS], [bS, |], [|, ^], [^, CFG], [CFG, :], [:, S], [S, aSa], [aSa, |], [|, bSb], [bSb, |], [|, |], [|, b], [b, |], [|, ˄], [˄, CFG], [CFG, :], [:, S], [S, aSb], [aSb, |], [|, ˄], [˄,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, strings, L], [strings, L, CFG], [L, CFG, :], [CFG, :, S], [:, S, |], [S, |, bS], [|, bS, |], [bS, |, ^], [|, ^, CFG], [^, CFG, :], [CFG, :, S], [:, S, aSa], [S, aSa, |], [aSa, |, bSb], [|, bSb, |], [bSb, |, |], [|, |, b], [|, b, |], [b, |, ˄], [|, ˄, CFG], [˄, CFG, :], [CFG, :, S], [:, S, aSb], [S, aSb, |], [aSb, |, ˄], [|, ˄,  ], [˄,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[No other strings, L CFG, |, bS, |, S, |, aSb |, ˄  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 87 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› FA to Regular Grammar    


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, FA, Regular, Grammar,   ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('FA', 'PROPN'), ('Regular', 'PROPN'), ('Grammar', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('FA', 'conj'), ('Regular', 'compound'), ('Grammar', 'pobj'), ('  ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, FA], [FA, Regular], [Regular, Grammar], [Grammar,   ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, FA], [‹#›, FA, Regular], [FA, Regular, Grammar], [Regular, Grammar,   ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› FA, Regular Grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› FA', 'ORG')]


============================ Sentence 88 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 89 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› FA to Regular Grammar    1 0 1  0 0 1         


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, FA, Regular, Grammar,    , 1, 0, 1,  , 0, 0, 1,        ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('FA', 'PROPN'), ('Regular', 'PROPN'), ('Grammar', 'PROPN'), ('   ', 'SPACE'), ('1', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), (' ', 'SPACE'), ('0', 'NUM'), ('0', 'NUM'), ('1', 'NUM'), ('       ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('FA', 'conj'), ('Regular', 'compound'), ('Grammar', 'pobj'), ('   ', 'nummod'), ('1', 'punct'), ('0', 'appos'), ('1', 'nummod'), (' ', 'appos'), ('0', 'punct'), ('0', 'appos'), ('1', 'nummod'), ('       ', 'appos')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, FA], [FA, Regular], [Regular, Grammar], [Grammar,    ], [   , 1], [1, 0], [0, 1], [1,  ], [ , 0], [0, 0], [0, 1], [1,        ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, FA], [‹#›, FA, Regular], [FA, Regular, Grammar], [Regular, Grammar,    ], [Grammar,    , 1], [   , 1, 0], [1, 0, 1], [0, 1,  ], [1,  , 0], [ , 0, 0], [0, 0, 1], [0, 1,        ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› FA, Regular Grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› FA', 'ORG'), ('0', 'CARDINAL')]


============================ Sentence 90 =============================

At last, all the incoming transitions to the accepting states are designated by the production   


>> Tokens are: 
[,, incoming, transitions, accepting, states, designated, production,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('incoming', 'ADJ'), ('transitions', 'NOUN'), ('accepting', 'VERB'), ('states', 'NOUN'), ('designated', 'VERB'), ('production', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('incoming', 'amod'), ('transitions', 'nsubjpass'), ('accepting', 'amod'), ('states', 'pobj'), ('designated', 'ROOT'), ('production', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[,, incoming], [incoming, transitions], [transitions, accepting], [accepting, states], [states, designated], [designated, production], [production,  ]]

>> Trigrams: 
[[,, incoming, transitions], [incoming, transitions, accepting], [transitions, accepting, states], [accepting, states, designated], [states, designated, production], [designated, production,  ]]

>> Noun Phrases are: 
[all the incoming transitions, the accepting states, the production]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

Source State → input symbol   


>> Tokens are: 
[Source, State, →, input, symbol,  ] 

>> PoS Tags are: 
[('Source', 'PROPN'), ('State', 'PROPN'), ('→', 'SYM'), ('input', 'NOUN'), ('symbol', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Source', 'nmod'), ('State', 'nmod'), ('→', 'punct'), ('input', 'compound'), ('symbol', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Source, State], [State, →], [→, input], [input, symbol], [symbol,  ]]

>> Trigrams: 
[[Source, State, →], [State, →, input], [→, input, symbol], [input, symbol,  ]]

>> Noun Phrases are: 
[Source State → input symbol]

>> Named Entities are: 
[]


============================ Sentence 92 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 93 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Exercise: FA to 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Exercise, :, FA] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Exercise', 'NOUN'), (':', 'PUNCT'), ('FA', 'PROPN')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Exercise', 'ROOT'), (':', 'punct'), ('FA', 'appos')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Exercise], [Exercise, :], [:, FA]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Exercise], [‹#›, Exercise, :], [Exercise, :, FA]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, FA]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Exercise', 'ORG')]


============================ Sentence 94 =============================

Regular Grammar 


>> Tokens are: 
[Regular, Grammar] 

>> PoS Tags are: 
[('Regular', 'PROPN'), ('Grammar', 'PROPN')] 

>> Dependency Tags are: 
[('Regular', 'compound'), ('Grammar', 'ROOT')]

>> Bigrams: 
[[Regular, Grammar]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Regular Grammar]

>> Named Entities are: 
[]


============================ Sentence 95 =============================

A C E  B a D a a a a b b b b b  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[C, E,  , B, D, b, b, b, b, b,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('C', 'PROPN'), ('E', 'NOUN'), (' ', 'SPACE'), ('B', 'NOUN'), ('D', 'NOUN'), ('b', 'NOUN'), ('b', 'X'), ('b', 'X'), ('b', 'X'), ('b', 'PROPN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('C', 'nmod'), ('E', 'nmod'), (' ', 'compound'), ('B', 'ROOT'), ('D', 'appos'), ('b', 'quantmod'), ('b', 'quantmod'), ('b', 'quantmod'), ('b', 'quantmod'), ('b', 'nmod'), (' ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[C, E], [E,  ], [ , B], [B, D], [D, b], [b, b], [b, b], [b, b], [b, b], [b,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[C, E,  ], [E,  , B], [ , B, D], [B, D, b], [D, b, b], [b, b, b], [b, b, b], [b, b, b], [b, b,  ], [b,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[A C E  B, a D, a a a a b b b b b  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 96 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Derivation    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Derivation,    , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Derivation', 'PROPN'), ('   ', 'SPACE'), ('Unit', 'PROPN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Derivation', 'nmod'), ('   ', 'nummod'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Derivation], [Derivation,    ], [   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Derivation], [‹#›, Derivation,    ], [Derivation,    , Unit], [   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Derivation    Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Derivation', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 97 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Derivation  Derivation is used to find whether the string belongs to a given grammar or not. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Derivation,  , Derivation, find, string, belongs, given, grammar, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Derivation', 'PROPN'), (' ', 'SPACE'), ('Derivation', 'PROPN'), ('find', 'VERB'), ('string', 'NOUN'), ('belongs', 'VERB'), ('given', 'VERB'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Derivation', 'nmod'), (' ', 'compound'), ('Derivation', 'nsubjpass'), ('find', 'xcomp'), ('string', 'nsubj'), ('belongs', 'ccomp'), ('given', 'amod'), ('grammar', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Derivation], [Derivation,  ], [ , Derivation], [Derivation, find], [find, string], [string, belongs], [belongs, given], [given, grammar], [grammar, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Derivation], [‹#›, Derivation,  ], [Derivation,  , Derivation], [ , Derivation, find], [Derivation, find, string], [find, string, belongs], [string, belongs, given], [belongs, given, grammar], [given, grammar, .]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, the string, a given grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Derivation  Derivation', 'ORG')]


============================ Sentence 98 =============================

There are two types of derivation: Leftmost derivation Rightmost derivation  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[types, derivation, :, Leftmost, derivation, Rightmost, derivation,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('types', 'NOUN'), ('derivation', 'NOUN'), (':', 'PUNCT'), ('Leftmost', 'PROPN'), ('derivation', 'NOUN'), ('Rightmost', 'PROPN'), ('derivation', 'NOUN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('types', 'attr'), ('derivation', 'pobj'), (':', 'punct'), ('Leftmost', 'nmod'), ('derivation', 'compound'), ('Rightmost', 'compound'), ('derivation', 'appos'), (' ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[types, derivation], [derivation, :], [:, Leftmost], [Leftmost, derivation], [derivation, Rightmost], [Rightmost, derivation], [derivation,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[types, derivation, :], [derivation, :, Leftmost], [:, Leftmost, derivation], [Leftmost, derivation, Rightmost], [derivation, Rightmost, derivation], [Rightmost, derivation,  ], [derivation,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[two types, derivation, Leftmost derivation Rightmost derivation,  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('two', 'CARDINAL'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 99 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG')]


============================ Sentence 100 =============================

Leftmost derivation   


>> Tokens are: 
[Leftmost, derivation,  ] 

>> PoS Tags are: 
[('Leftmost', 'PROPN'), ('derivation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Leftmost', 'compound'), ('derivation', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Leftmost, derivation], [derivation,  ]]

>> Trigrams: 
[[Leftmost, derivation,  ]]

>> Noun Phrases are: 
[Leftmost derivation]

>> Named Entities are: 
[]


============================ Sentence 101 =============================

A derivation of a string  in a grammar  is a left most derivation if at every step the left most non terminal is replaced. 


>> Tokens are: 
[derivation, string,  , grammar,  , left, derivation, step, left, non, terminal, replaced, .] 

>> PoS Tags are: 
[('derivation', 'NOUN'), ('string', 'NOUN'), (' ', 'SPACE'), ('grammar', 'NOUN'), (' ', 'SPACE'), ('left', 'ADJ'), ('derivation', 'NOUN'), ('step', 'NOUN'), ('left', 'ADJ'), ('non', 'ADJ'), ('terminal', 'NOUN'), ('replaced', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('derivation', 'nsubj'), ('string', 'compound'), (' ', 'pobj'), ('grammar', 'pobj'), (' ', 'nsubj'), ('left', 'amod'), ('derivation', 'attr'), ('step', 'pobj'), ('left', 'amod'), ('non', 'amod'), ('terminal', 'nsubjpass'), ('replaced', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[derivation, string], [string,  ], [ , grammar], [grammar,  ], [ , left], [left, derivation], [derivation, step], [step, left], [left, non], [non, terminal], [terminal, replaced], [replaced, .]]

>> Trigrams: 
[[derivation, string,  ], [string,  , grammar], [ , grammar,  ], [grammar,  , left], [ , left, derivation], [left, derivation, step], [derivation, step, left], [step, left, non], [left, non, terminal], [non, terminal, replaced], [terminal, replaced, .]]

>> Noun Phrases are: 
[A derivation, a grammar, a left most derivation, every step, the left most non terminal]

>> Named Entities are: 
[]


============================ Sentence 102 =============================

Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a  		S 		S-S S*S-S 		a*S-S 		a*a-S 	a*a-a a S - S a a S * S Leftmost Derivation Parse tree S Parse tree represents the structure of derivation    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Grammar, :, SS+S, |, S, -, S, |, S*S, |, S, /, S, |, 	, Output, string, :, a*a, -,  		, S, 		, S, -, S, S*S, -, S, 		, a*S, -, S, 		, a*a, -, S, 	, a*a, -, S, -, S, S, *, S, Leftmost, Derivation, Parse, tree, S, Parse, tree, represents, structure, derivation,    , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0S+S', 'ADJ'), ('|', 'NOUN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('|', 'NOUN'), ('S*S', 'DET'), ('|', 'NOUN'), ('S', 'PROPN'), ('/', 'SYM'), ('S', 'PROPN'), ('|', 'NOUN'), ('\t', 'SPACE'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a*a', 'PUNCT'), ('-', 'PUNCT'), (' \t\t', 'SPACE'), ('S', 'PROPN'), ('\t\t', 'SPACE'), ('\uf0e0S', 'PROPN'), ('-', 'PUNCT'), ('S', 'NOUN'), ('\uf0e0S*S', 'VERB'), ('-', 'PUNCT'), ('S', 'NOUN'), ('\t\t', 'SPACE'), ('\uf0e0a*S', 'PROPN'), ('-', 'PUNCT'), ('S', 'NOUN'), ('\t\t', 'SPACE'), ('\uf0e0a*a', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('\t', 'SPACE'), ('\uf0e0a*a', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('S', 'PROPN'), ('*', 'PROPN'), ('S', 'PROPN'), ('Leftmost', 'PROPN'), ('Derivation', 'PROPN'), ('Parse', 'NOUN'), ('tree', 'NOUN'), ('S', 'PROPN'), ('Parse', 'PROPN'), ('tree', 'NOUN'), ('represents', 'VERB'), ('structure', 'NOUN'), ('derivation', 'NOUN'), ('   ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Grammar', 'npadvmod'), (':', 'punct'), ('S\uf0e0S+S', 'amod'), ('|', 'compound'), ('S', 'compound'), ('-', 'punct'), ('S', 'dobj'), ('|', 'appos'), ('S*S', 'punct'), ('|', 'npadvmod'), ('S', 'nmod'), ('/', 'punct'), ('S', 'compound'), ('|', 'appos'), ('\t', 'compound'), ('Output', 'compound'), ('string', 'ROOT'), (':', 'punct'), ('a*a', 'compound'), ('-', 'punct'), (' \t\t', 'compound'), ('S', 'appos'), ('\t\t', 'prep'), ('\uf0e0S', 'compound'), ('-', 'punct'), ('S', 'pobj'), ('\uf0e0S*S', 'compound'), ('-', 'punct'), ('S', 'compound'), ('\t\t', 'appos'), ('\uf0e0a*S', 'compound'), ('-', 'punct'), ('S', 'compound'), ('\t\t', 'compound'), ('\uf0e0a*a', 'compound'), ('-', 'punct'), ('S', 'compound'), ('\t', 'compound'), ('\uf0e0a*a', 'nsubj'), ('-', 'punct'), ('S', 'compound'), ('-', 'punct'), ('S', 'nsubj'), ('S', 'compound'), ('*', 'punct'), ('S', 'compound'), ('Leftmost', 'compound'), ('Derivation', 'compound'), ('Parse', 'compound'), ('tree', 'compound'), ('S', 'compound'), ('Parse', 'compound'), ('tree', 'nsubj'), ('represents', 'ccomp'), ('structure', 'dobj'), ('derivation', 'compound'), ('   ', 'compound'), ('Unit', 'pobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Grammar, :], [:, SS+S], [SS+S, |], [|, S], [S, -], [-, S], [S, |], [|, S*S], [S*S, |], [|, S], [S, /], [/, S], [S, |], [|, 	], [	, Output], [Output, string], [string, :], [:, a*a], [a*a, -], [-,  		], [ 		, S], [S, 		], [		, S], [S, -], [-, S], [S, S*S], [S*S, -], [-, S], [S, 		], [		, a*S], [a*S, -], [-, S], [S, 		], [		, a*a], [a*a, -], [-, S], [S, 	], [	, a*a], [a*a, -], [-, S], [S, -], [-, S], [S, S], [S, *], [*, S], [S, Leftmost], [Leftmost, Derivation], [Derivation, Parse], [Parse, tree], [tree, S], [S, Parse], [Parse, tree], [tree, represents], [represents, structure], [structure, derivation], [derivation,    ], [   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Grammar, :, SS+S], [:, SS+S, |], [SS+S, |, S], [|, S, -], [S, -, S], [-, S, |], [S, |, S*S], [|, S*S, |], [S*S, |, S], [|, S, /], [S, /, S], [/, S, |], [S, |, 	], [|, 	, Output], [	, Output, string], [Output, string, :], [string, :, a*a], [:, a*a, -], [a*a, -,  		], [-,  		, S], [ 		, S, 		], [S, 		, S], [		, S, -], [S, -, S], [-, S, S*S], [S, S*S, -], [S*S, -, S], [-, S, 		], [S, 		, a*S], [		, a*S, -], [a*S, -, S], [-, S, 		], [S, 		, a*a], [		, a*a, -], [a*a, -, S], [-, S, 	], [S, 	, a*a], [	, a*a, -], [a*a, -, S], [-, S, -], [S, -, S], [-, S, S], [S, S, *], [S, *, S], [*, S, Leftmost], [S, Leftmost, Derivation], [Leftmost, Derivation, Parse], [Derivation, Parse, tree], [Parse, tree, S], [tree, S, Parse], [S, Parse, tree], [Parse, tree, represents], [tree, represents, structure], [represents, structure, derivation], [structure, derivation,    ], [derivation,    , Unit], [   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[| S-S, S/S |, a  		S, S-S, a a S - S, a a S * S Leftmost Derivation Parse tree S Parse tree, the structure, derivation    Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Grammar', 'PERSON'), ('S/S', 'ORG'), ('S Parse', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 103 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  27   Rightmost derivation   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›,  , 27,   , Rightmost, derivation,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('27', 'NUM'), ('  ', 'SPACE'), ('Rightmost', 'PROPN'), ('derivation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'appos'), ('27', 'nummod'), ('  ', 'appos'), ('Rightmost', 'compound'), ('derivation', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ], [ , 27], [27,   ], [  , Rightmost], [Rightmost, derivation], [derivation,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ], [‹#›,  , 27], [ , 27,   ], [27,   , Rightmost], [  , Rightmost, derivation], [Rightmost, derivation,  ]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('27', 'CARDINAL')]


============================ Sentence 104 =============================

A derivation of a string  in a grammar  is a right most derivation if at every step the right most non terminal is replaced. 


>> Tokens are: 
[derivation, string,  , grammar,  , right, derivation, step, right, non, terminal, replaced, .] 

>> PoS Tags are: 
[('derivation', 'NOUN'), ('string', 'NOUN'), (' ', 'SPACE'), ('grammar', 'NOUN'), (' ', 'SPACE'), ('right', 'ADV'), ('derivation', 'NOUN'), ('step', 'NOUN'), ('right', 'ADV'), ('non', 'ADJ'), ('terminal', 'NOUN'), ('replaced', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('derivation', 'nsubj'), ('string', 'compound'), (' ', 'pobj'), ('grammar', 'pobj'), (' ', 'nsubj'), ('right', 'advmod'), ('derivation', 'attr'), ('step', 'pobj'), ('right', 'amod'), ('non', 'amod'), ('terminal', 'nsubjpass'), ('replaced', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[derivation, string], [string,  ], [ , grammar], [grammar,  ], [ , right], [right, derivation], [derivation, step], [step, right], [right, non], [non, terminal], [terminal, replaced], [replaced, .]]

>> Trigrams: 
[[derivation, string,  ], [string,  , grammar], [ , grammar,  ], [grammar,  , right], [ , right, derivation], [right, derivation, step], [derivation, step, right], [step, right, non], [right, non, terminal], [non, terminal, replaced], [terminal, replaced, .]]

>> Noun Phrases are: 
[A derivation, a grammar, a right most derivation, every step, the right most non terminal]

>> Named Entities are: 
[]


============================ Sentence 105 =============================

It is all called canonical derivation. 


>> Tokens are: 
[called, canonical, derivation, .] 

>> PoS Tags are: 
[('called', 'VERB'), ('canonical', 'ADJ'), ('derivation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('called', 'ROOT'), ('canonical', 'amod'), ('derivation', 'oprd'), ('.', 'punct')]

>> Bigrams: 
[[called, canonical], [canonical, derivation], [derivation, .]]

>> Trigrams: 
[[called, canonical, derivation], [canonical, derivation, .]]

>> Noun Phrases are: 
[It, canonical derivation]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

Grammar: SS+S | S-S | S*S | S/S | a 	Output string: a*a-a 		S 		S*S 		 S*S-S 		 S*S-a 		 S*a-a 		 a*a-a a S * S a a S - S Rightmost Derivation Parse Tree S   


>> Tokens are: 
[Grammar, :, SS+S, |, S, -, S, |, S*S, |, S, /, S, |, 	, Output, string, :, a*a, -, 		, S, 		, S*S, 		 , S*S, -, S, 		 , S*S, -, 		 , S*a, -, 		 , a*a, -, S, *, S, S, -, S, Rightmost, Derivation, Parse, Tree, S,  ] 

>> PoS Tags are: 
[('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0S+S', 'ADJ'), ('|', 'NOUN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('|', 'NOUN'), ('S*S', 'DET'), ('|', 'NOUN'), ('S', 'PROPN'), ('/', 'SYM'), ('S', 'PROPN'), ('|', 'NOUN'), ('\t', 'SPACE'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a*a', 'PUNCT'), ('-', 'PUNCT'), ('\t\t', 'SPACE'), ('S', 'PROPN'), ('\t\t', 'SPACE'), ('\uf0e0S*S', 'VERB'), ('\t\t ', 'SPACE'), ('\uf0e0S*S', 'VERB'), ('-', 'PUNCT'), ('S', 'NOUN'), ('\t\t ', 'SPACE'), ('\uf0e0S*S', 'VERB'), ('-', 'PUNCT'), ('\t\t ', 'SPACE'), ('\uf0e0S*a', 'PROPN'), ('-', 'PUNCT'), ('\t\t ', 'SPACE'), ('\uf0e0a*a', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('*', 'PUNCT'), ('S', 'PROPN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('S', 'PROPN'), ('Rightmost', 'PROPN'), ('Derivation', 'NOUN'), ('Parse', 'NOUN'), ('Tree', 'PROPN'), ('S', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Grammar', 'npadvmod'), (':', 'punct'), ('S\uf0e0S+S', 'amod'), ('|', 'compound'), ('S', 'compound'), ('-', 'punct'), ('S', 'dobj'), ('|', 'appos'), ('S*S', 'punct'), ('|', 'npadvmod'), ('S', 'nmod'), ('/', 'punct'), ('S', 'compound'), ('|', 'appos'), ('\t', 'compound'), ('Output', 'compound'), ('string', 'ROOT'), (':', 'punct'), ('a*a', 'appos'), ('-', 'punct'), ('\t\t', 'compound'), ('S', 'appos'), ('\t\t', 'npadvmod'), ('\uf0e0S*S', 'ccomp'), ('\t\t ', 'prep'), ('\uf0e0S*S', 'compound'), ('-', 'punct'), ('S', 'compound'), ('\t\t ', 'pobj'), ('\uf0e0S*S', 'advcl'), ('-', 'punct'), ('\t\t ', 'appos'), ('\uf0e0S*a', 'appos'), ('-', 'punct'), ('\t\t ', 'appos'), ('\uf0e0a*a', 'appos'), ('-', 'punct'), ('S', 'compound'), ('*', 'punct'), ('S', 'appos'), ('S', 'compound'), ('-', 'punct'), ('S', 'compound'), ('Rightmost', 'compound'), ('Derivation', 'nmod'), ('Parse', 'appos'), ('Tree', 'compound'), ('S', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Grammar, :], [:, SS+S], [SS+S, |], [|, S], [S, -], [-, S], [S, |], [|, S*S], [S*S, |], [|, S], [S, /], [/, S], [S, |], [|, 	], [	, Output], [Output, string], [string, :], [:, a*a], [a*a, -], [-, 		], [		, S], [S, 		], [		, S*S], [S*S, 		 ], [		 , S*S], [S*S, -], [-, S], [S, 		 ], [		 , S*S], [S*S, -], [-, 		 ], [		 , S*a], [S*a, -], [-, 		 ], [		 , a*a], [a*a, -], [-, S], [S, *], [*, S], [S, S], [S, -], [-, S], [S, Rightmost], [Rightmost, Derivation], [Derivation, Parse], [Parse, Tree], [Tree, S], [S,  ]]

>> Trigrams: 
[[Grammar, :, SS+S], [:, SS+S, |], [SS+S, |, S], [|, S, -], [S, -, S], [-, S, |], [S, |, S*S], [|, S*S, |], [S*S, |, S], [|, S, /], [S, /, S], [/, S, |], [S, |, 	], [|, 	, Output], [	, Output, string], [Output, string, :], [string, :, a*a], [:, a*a, -], [a*a, -, 		], [-, 		, S], [		, S, 		], [S, 		, S*S], [		, S*S, 		 ], [S*S, 		 , S*S], [		 , S*S, -], [S*S, -, S], [-, S, 		 ], [S, 		 , S*S], [		 , S*S, -], [S*S, -, 		 ], [-, 		 , S*a], [		 , S*a, -], [S*a, -, 		 ], [-, 		 , a*a], [		 , a*a, -], [a*a, -, S], [-, S, *], [S, *, S], [*, S, S], [S, S, -], [S, -, S], [-, S, Rightmost], [S, Rightmost, Derivation], [Rightmost, Derivation, Parse], [Derivation, Parse, Tree], [Parse, Tree, S], [Tree, S,  ]]

>> Noun Phrases are: 
[| S-S, S/S |, a 		S, S*a, a*a, a a S * S, Parse]

>> Named Entities are: 
[('Grammar', 'PERSON'), ('S/S', 'ORG'), ('\uf0e0S*S-S \t\t ', 'CARDINAL')]


============================ Sentence 107 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 108 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  28   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›,  , 28,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('28', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'appos'), ('28', 'nummod'), (' ', 'appos')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ], [ , 28], [28,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ], [‹#›,  , 28], [ , 28,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('28', 'CARDINAL')]


============================ Sentence 109 =============================

Example: Derivation  SA1B A0A | 𝜖 B0B | 1B | 𝜖 Perform leftmost & Rightmost derivation. 


>> Tokens are: 
[Example, :, Derivation,  , SA1B, A0A, |, 𝜖, B0B, |, 1B, |, 𝜖, Perform, leftmost, &, Rightmost, derivation, .] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('Derivation', 'NOUN'), (' ', 'SPACE'), ('S\uf0e0A1B', 'PROPN'), ('A\uf0e00A', 'PROPN'), ('|', 'NOUN'), ('𝜖', 'PROPN'), ('B\uf0e00B', 'ADV'), ('|', 'NOUN'), ('1B', 'NOUN'), ('|', 'NOUN'), ('𝜖', 'PROPN'), ('Perform', 'PROPN'), ('leftmost', 'PROPN'), ('&', 'CCONJ'), ('Rightmost', 'PROPN'), ('derivation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Example', 'npadvmod'), (':', 'punct'), ('Derivation', 'nmod'), (' ', 'compound'), ('S\uf0e0A1B', 'compound'), ('A\uf0e00A', 'compound'), ('|', 'appos'), ('𝜖', 'ROOT'), ('B\uf0e00B', 'nmod'), ('|', 'compound'), ('1B', 'compound'), ('|', 'npadvmod'), ('𝜖', 'prep'), ('Perform', 'nmod'), ('leftmost', 'nmod'), ('&', 'cc'), ('Rightmost', 'conj'), ('derivation', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Example, :], [:, Derivation], [Derivation,  ], [ , SA1B], [SA1B, A0A], [A0A, |], [|, 𝜖], [𝜖, B0B], [B0B, |], [|, 1B], [1B, |], [|, 𝜖], [𝜖, Perform], [Perform, leftmost], [leftmost, &], [&, Rightmost], [Rightmost, derivation], [derivation, .]]

>> Trigrams: 
[[Example, :, Derivation], [:, Derivation,  ], [Derivation,  , SA1B], [ , SA1B, A0A], [SA1B, A0A, |], [A0A, |, 𝜖], [|, 𝜖, B0B], [𝜖, B0B, |], [B0B, |, 1B], [|, 1B, |], [1B, |, 𝜖], [|, 𝜖, Perform], [𝜖, Perform, leftmost], [Perform, leftmost, &], [leftmost, &, Rightmost], [&, Rightmost, derivation], [Rightmost, derivation, .]]

>> Noun Phrases are: 
[Derivation  SA1B A0A |, Perform leftmost & Rightmost derivation]

>> Named Entities are: 
[('1B', 'CARDINAL'), ('Perform leftmost & Rightmost', 'ORG')]


============================ Sentence 110 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 111 =============================

(String: 00101)   


>> Tokens are: 
[(, String, :, 00101, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('String', 'NOUN'), (':', 'PUNCT'), ('00101', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('String', 'ROOT'), (':', 'punct'), ('00101', 'npadvmod'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, String], [String, :], [:, 00101], [00101, )], [),  ]]

>> Trigrams: 
[[(, String, :], [String, :, 00101], [:, 00101, )], [00101, ),  ]]

>> Noun Phrases are: 
[(String]

>> Named Entities are: 
[]


============================ Sentence 112 =============================

Leftmost Derivation		 S 				 			 A1B 							 0A1B				 00A1B 001B 0010B 00101B 00101 Rightmost Derivation 	S 		  	 


>> Tokens are: 
[Leftmost, Derivation, 		 , S, 				 			 , A1B, 							 , 0A1B, 				 , 00A1B, 001B, 0010B, 00101B, 00101, Rightmost, Derivation, 	, S, 		  	] 

>> PoS Tags are: 
[('Leftmost', 'PROPN'), ('Derivation', 'PROPN'), ('\t\t ', 'SPACE'), ('S', 'PROPN'), ('\t\t\t\t \t\t\t ', 'SPACE'), ('A1B', 'PROPN'), ('\t\t\t\t\t\t\t ', 'SPACE'), ('0A1B', 'VERB'), ('\t\t\t\t ', 'SPACE'), ('00A1B', 'PUNCT'), ('001B', 'PROPN'), ('0010B', 'PROPN'), ('00101B', 'PROPN'), ('00101', 'NUM'), ('Rightmost', 'PROPN'), ('Derivation', 'PROPN'), ('\t', 'SPACE'), ('S', 'PROPN'), ('\t\t  \t', 'SPACE')] 

>> Dependency Tags are: 
[('Leftmost', 'compound'), ('Derivation', 'compound'), ('\t\t ', 'compound'), ('S', 'compound'), ('\t\t\t\t \t\t\t ', 'compound'), ('A1B', 'compound'), ('\t\t\t\t\t\t\t ', 'nsubj'), ('0A1B', 'amod'), ('\t\t\t\t ', 'ROOT'), ('00A1B', 'case'), ('001B', 'compound'), ('0010B', 'compound'), ('00101B', 'appos'), ('00101', 'nummod'), ('Rightmost', 'compound'), ('Derivation', 'compound'), ('\t', 'compound'), ('S', 'appos'), ('\t\t  \t', 'punct')]

>> Bigrams: 
[[Leftmost, Derivation], [Derivation, 		 ], [		 , S], [S, 				 			 ], [				 			 , A1B], [A1B, 							 ], [							 , 0A1B], [0A1B, 				 ], [				 , 00A1B], [00A1B, 001B], [001B, 0010B], [0010B, 00101B], [00101B, 00101], [00101, Rightmost], [Rightmost, Derivation], [Derivation, 	], [	, S], [S, 		  	]]

>> Trigrams: 
[[Leftmost, Derivation, 		 ], [Derivation, 		 , S], [		 , S, 				 			 ], [S, 				 			 , A1B], [				 			 , A1B, 							 ], [A1B, 							 , 0A1B], [							 , 0A1B, 				 ], [0A1B, 				 , 00A1B], [				 , 00A1B, 001B], [00A1B, 001B, 0010B], [001B, 0010B, 00101B], [0010B, 00101B, 00101], [00101B, 00101, Rightmost], [00101, Rightmost, Derivation], [Rightmost, Derivation, 	], [Derivation, 	, S], [	, S, 		  	]]

>> Noun Phrases are: 
[001B 0010B 00101B, Rightmost Derivation 	S]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

A1B 	A10B 	A101B 	A101 	0A101 


>> Tokens are: 
[A1B, 	, A10B, 	, A101B, 	, A101, 	, 0A101] 

>> PoS Tags are: 
[('A1B', 'PROPN'), ('\t', 'SPACE'), ('A10B', 'PROPN'), ('\t', 'SPACE'), ('A101B', 'PROPN'), ('\t', 'SPACE'), ('A101', 'PROPN'), ('\t', 'SPACE'), ('0A101', 'PROPN')] 

>> Dependency Tags are: 
[('A1B', 'compound'), ('\t', 'compound'), ('A10B', 'compound'), ('\t', 'nsubj'), ('A101B', 'compound'), ('\t', 'appos'), ('A101', 'appos'), ('\t', 'ROOT'), ('0A101', 'punct')]

>> Bigrams: 
[[A1B, 	], [	, A10B], [A10B, 	], [	, A101B], [A101B, 	], [	, A101], [A101, 	], [	, 0A101]]

>> Trigrams: 
[[A1B, 	, A10B], [	, A10B, 	], [A10B, 	, A101B], [	, A101B, 	], [A101B, 	, A101], [	, A101, 	], [A101, 	, 0A101]]

>> Noun Phrases are: 
[A101]

>> Named Entities are: 
[('A101', 'PERSON')]


============================ Sentence 114 =============================

	00A101 


>> Tokens are: 
[	, 00A101] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('00A101', 'NUM')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('00A101', 'nummod')]

>> Bigrams: 
[[	, 00A101]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 115 =============================

	00101   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, 00101,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('00101', 'NUM'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'ROOT'), ('00101', 'nummod'), ('  ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[	, 00101], [00101,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, 00101,   ], [00101,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 116 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Exercise: Derivation   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Exercise, :, Derivation,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Exercise', 'NOUN'), (':', 'PUNCT'), ('Derivation', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Exercise', 'ROOT'), (':', 'punct'), ('Derivation', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Exercise], [Exercise, :], [:, Derivation], [Derivation,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Exercise], [‹#›, Exercise, :], [Exercise, :, Derivation], [:, Derivation,  ]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, Derivation]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Exercise', 'ORG')]


============================ Sentence 117 =============================

Perform leftmost derivation and draw parse tree. 


>> Tokens are: 
[Perform, leftmost, derivation, draw, parse, tree, .] 

>> PoS Tags are: 
[('Perform', 'VERB'), ('leftmost', 'NOUN'), ('derivation', 'NOUN'), ('draw', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Perform', 'ROOT'), ('leftmost', 'compound'), ('derivation', 'dobj'), ('draw', 'conj'), ('parse', 'compound'), ('tree', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Perform, leftmost], [leftmost, derivation], [derivation, draw], [draw, parse], [parse, tree], [tree, .]]

>> Trigrams: 
[[Perform, leftmost, derivation], [leftmost, derivation, draw], [derivation, draw, parse], [draw, parse, tree], [parse, tree, .]]

>> Noun Phrases are: 
[leftmost derivation, parse tree]

>> Named Entities are: 
[]


============================ Sentence 118 =============================

	SA1B A0A | 𝜖 B0B | 1B | 𝜖   


>> Tokens are: 
[	, SA1B, A0A, |, 𝜖, B0B, |, 1B, |, 𝜖,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0A1B', 'PROPN'), ('A\uf0e00A', 'PROPN'), ('|', 'NOUN'), ('𝜖', 'PROPN'), ('B\uf0e00B', 'ADV'), ('|', 'NOUN'), ('1B', 'NOUN'), ('|', 'NOUN'), ('𝜖', 'ADP'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e0A1B', 'compound'), ('A\uf0e00A', 'compound'), ('|', 'npadvmod'), ('𝜖', 'quantmod'), ('B\uf0e00B', 'advmod'), ('|', 'compound'), ('1B', 'ROOT'), ('|', 'npadvmod'), ('𝜖', 'prep'), (' ', 'appos')]

>> Bigrams: 
[[	, SA1B], [SA1B, A0A], [A0A, |], [|, 𝜖], [𝜖, B0B], [B0B, |], [|, 1B], [1B, |], [|, 𝜖], [𝜖,  ]]

>> Trigrams: 
[[	, SA1B, A0A], [SA1B, A0A, |], [A0A, |, 𝜖], [|, 𝜖, B0B], [𝜖, B0B, |], [B0B, |, 1B], [|, 1B, |], [1B, |, 𝜖], [|, 𝜖,  ]]

>> Noun Phrases are: 
[	SA1B A0A | 𝜖 B0B | 1B]

>> Named Entities are: 
[('1B', 'CARDINAL')]


============================ Sentence 119 =============================

Output string: 1001. 


>> Tokens are: 
[Output, string, :, 1001, .] 

>> PoS Tags are: 
[('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('1001', 'NUM'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Output', 'compound'), ('string', 'ROOT'), (':', 'punct'), ('1001', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[Output, string], [string, :], [:, 1001], [1001, .]]

>> Trigrams: 
[[Output, string, :], [string, :, 1001], [:, 1001, .]]

>> Noun Phrases are: 
[Output string]

>> Named Entities are: 
[('1001', 'DATE')]


============================ Sentence 120 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

Perform rightmost derivation and draw parse tree. 


>> Tokens are: 
[Perform, rightmost, derivation, draw, parse, tree, .] 

>> PoS Tags are: 
[('Perform', 'VERB'), ('rightmost', 'NOUN'), ('derivation', 'NOUN'), ('draw', 'VERB'), ('parse', 'NOUN'), ('tree', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Perform', 'ROOT'), ('rightmost', 'compound'), ('derivation', 'dobj'), ('draw', 'conj'), ('parse', 'compound'), ('tree', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Perform, rightmost], [rightmost, derivation], [derivation, draw], [draw, parse], [parse, tree], [tree, .]]

>> Trigrams: 
[[Perform, rightmost, derivation], [rightmost, derivation, draw], [derivation, draw, parse], [draw, parse, tree], [parse, tree, .]]

>> Noun Phrases are: 
[rightmost derivation, parse tree]

>> Named Entities are: 
[]


============================ Sentence 122 =============================

EE+E | E*E | id | (E) | -E Output string : id + id * id.    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[EE+E, |, E*E, |, d, |, (, E, ), |, -E, Output, string, :, d, +, d, *, d.,    , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('E\uf0e0E+E', 'VERB'), ('|', 'NOUN'), ('E*E', 'NOUN'), ('|', 'NOUN'), ('d', 'NOUN'), ('|', 'NOUN'), ('(', 'PUNCT'), ('E', 'NOUN'), (')', 'PUNCT'), ('|', 'NOUN'), ('-E', 'VERB'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('d', 'NOUN'), ('+', 'SYM'), ('d', 'NOUN'), ('*', 'NOUN'), ('d.', 'PROPN'), ('   ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('E\uf0e0E+E', 'dep'), ('|', 'compound'), ('E*E', 'compound'), ('|', 'pobj'), ('d', 'advmod'), ('|', 'appos'), ('(', 'punct'), ('E', 'appos'), (')', 'punct'), ('|', 'punct'), ('-E', 'punct'), ('Output', 'compound'), ('string', 'ROOT'), (':', 'punct'), ('d', 'appos'), ('+', 'cc'), ('d', 'conj'), ('*', 'punct'), ('d.', 'appos'), ('   ', 'nummod'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[EE+E, |], [|, E*E], [E*E, |], [|, d], [d, |], [|, (], [(, E], [E, )], [), |], [|, -E], [-E, Output], [Output, string], [string, :], [:, d], [d, +], [+, d], [d, *], [*, d.], [d.,    ], [   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[EE+E, |, E*E], [|, E*E, |], [E*E, |, d], [|, d, |], [d, |, (], [|, (, E], [(, E, )], [E, ), |], [), |, -E], [|, -E, Output], [-E, Output, string], [Output, string, :], [string, :, d], [:, d, +], [d, +, d], [+, d, *], [d, *, d.], [*, d.,    ], [d.,    , Unit], [   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[| E*E |, id |, (E, id, id, d., Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 123 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Ambiguous grammar   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Ambiguous, grammar,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Ambiguous', 'amod'), ('grammar', 'compound'), ('  ', 'compound'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Ambiguous], [Ambiguous, grammar], [grammar,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Ambiguous], [‹#›, Ambiguous, grammar], [Ambiguous, grammar,   ], [grammar,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 124 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Ambiguous grammar Ambiguous grammar is one that produces more than one leftmost or more then one rightmost derivation for the same sentence. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Ambiguous, grammar, Ambiguous, grammar, produces, leftmost, rightmost, derivation, sentence, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('produces', 'VERB'), ('leftmost', 'NOUN'), ('rightmost', 'NOUN'), ('derivation', 'NOUN'), ('sentence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'nmod'), ('Ambiguous', 'amod'), ('grammar', 'nmod'), ('Ambiguous', 'amod'), ('grammar', 'nsubj'), ('produces', 'relcl'), ('leftmost', 'dobj'), ('rightmost', 'compound'), ('derivation', 'attr'), ('sentence', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Ambiguous], [Ambiguous, grammar], [grammar, Ambiguous], [Ambiguous, grammar], [grammar, produces], [produces, leftmost], [leftmost, rightmost], [rightmost, derivation], [derivation, sentence], [sentence, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Ambiguous], [‹#›, Ambiguous, grammar], [Ambiguous, grammar, Ambiguous], [grammar, Ambiguous, grammar], [Ambiguous, grammar, produces], [grammar, produces, leftmost], [produces, leftmost, rightmost], [leftmost, rightmost, derivation], [rightmost, derivation, sentence], [derivation, sentence, .]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Ambiguous grammar Ambiguous grammar, more than one leftmost, then one rightmost derivation, the same sentence]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Ambiguous', 'PERSON'), ('more than one', 'CARDINAL')]


============================ Sentence 125 =============================

Grammar: SS+S | S*S | (S) | a		Output string: a+a*a  S					S S*S					S+S S+S*S 


>> Tokens are: 
[Grammar, :, SS+S, |, S*S, |, (, S, ), |, 		, Output, string, :, a+a*a,  , S, 					, S, S*S, 					, S+S, S+S*S] 

>> PoS Tags are: 
[('Grammar', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0S+S', 'ADJ'), ('|', 'NOUN'), ('S*S', 'DET'), ('|', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('|', 'VERB'), ('\t\t', 'SPACE'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a+a*a', 'PROPN'), (' ', 'SPACE'), ('S', 'PROPN'), ('\t\t\t\t\t', 'SPACE'), ('S', 'PROPN'), ('\uf0e0S*S', 'VERB'), ('\t\t\t\t\t', 'SPACE'), ('\uf0e0S+S', 'PROPN'), ('\uf0e0S+S*S', 'PROPN')] 

>> Dependency Tags are: 
[('Grammar', 'dep'), (':', 'punct'), ('S\uf0e0S+S', 'amod'), ('|', 'appos'), ('S*S', 'det'), ('|', 'npadvmod'), ('(', 'punct'), ('S', 'appos'), (')', 'punct'), ('|', 'appos'), ('\t\t', 'compound'), ('Output', 'compound'), ('string', 'ROOT'), (':', 'punct'), ('a+a*a', 'amod'), (' ', 'compound'), ('S', 'compound'), ('\t\t\t\t\t', 'compound'), ('S', 'nsubj'), ('\uf0e0S*S', 'ccomp'), ('\t\t\t\t\t', 'amod'), ('\uf0e0S+S', 'dobj'), ('\uf0e0S+S*S', 'appos')]

>> Bigrams: 
[[Grammar, :], [:, SS+S], [SS+S, |], [|, S*S], [S*S, |], [|, (], [(, S], [S, )], [), |], [|, 		], [		, Output], [Output, string], [string, :], [:, a+a*a], [a+a*a,  ], [ , S], [S, 					], [					, S], [S, S*S], [S*S, 					], [					, S+S], [S+S, S+S*S]]

>> Trigrams: 
[[Grammar, :, SS+S], [:, SS+S, |], [SS+S, |, S*S], [|, S*S, |], [S*S, |, (], [|, (, S], [(, S, )], [S, ), |], [), |, 		], [|, 		, Output], [		, Output, string], [Output, string, :], [string, :, a+a*a], [:, a+a*a,  ], [a+a*a,  , S], [ , S, 					], [S, 					, S], [					, S, S*S], [S, S*S, 					], [S*S, 					, S+S], [					, S+S, S+S*S]]

>> Noun Phrases are: 
[SS+S |, (S, a+a*a  S					S, 					S+S, S+S*S]

>> Named Entities are: 
[('Grammar', 'PERSON'), ('\uf0e0S*S\t\t\t\t\t', 'DATE')]


============================ Sentence 126 =============================

				a+S a+S*S				a+S*S a+a*S				a+a*S a+a*a				a+a*a 


>> Tokens are: 
[				, a+S, a+S*S, 				, a+S*S, a+a*S, 				, a+a*S, a+a*a, 				, a+a*a] 

>> PoS Tags are: 
[('\t\t\t\t', 'SPACE'), ('\uf0e0a+S', 'NUM'), ('\uf0e0a+S*S', 'ADJ'), ('\t\t\t\t', 'SPACE'), ('\uf0e0a+S*S', 'ADJ'), ('\uf0e0a+a*S', 'PROPN'), ('\t\t\t\t', 'SPACE'), ('\uf0e0a+a*S', 'PROPN'), ('\uf0e0a+a*a', 'PROPN'), ('\t\t\t\t', 'SPACE'), ('\uf0e0a+a*a', 'PROPN')] 

>> Dependency Tags are: 
[('\t\t\t\t', 'ROOT'), ('\uf0e0a+S', 'punct'), ('\uf0e0a+S*S', 'amod'), ('\t\t\t\t', 'amod'), ('\uf0e0a+S*S', 'appos'), ('\uf0e0a+a*S', 'compound'), ('\t\t\t\t', 'compound'), ('\uf0e0a+a*S', 'compound'), ('\uf0e0a+a*a', 'compound'), ('\t\t\t\t', 'appos'), ('\uf0e0a+a*a', 'punct')]

>> Bigrams: 
[[				, a+S], [a+S, a+S*S], [a+S*S, 				], [				, a+S*S], [a+S*S, a+a*S], [a+a*S, 				], [				, a+a*S], [a+a*S, a+a*a], [a+a*a, 				], [				, a+a*a]]

>> Trigrams: 
[[				, a+S, a+S*S], [a+S, a+S*S, 				], [a+S*S, 				, a+S*S], [				, a+S*S, a+a*S], [a+S*S, a+a*S, 				], [a+a*S, 				, a+a*S], [				, a+a*S, a+a*a], [a+a*S, a+a*a, 				], [a+a*a, 				, a+a*a]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('\uf0e0a+S*S', 'PERSON'), ('\uf0e0a+a*S\t\t\t\t', 'LOC'), ('\uf0e0a+a*S \uf0e0a+a*a\t\t\t\t', 'LOC')]


============================ Sentence 127 =============================

Here, Two leftmost derivation for string a+a*a is possible hence, above grammar is ambiguous. 


>> Tokens are: 
[,, leftmost, derivation, string, a+a*a, possible, ,, grammar, ambiguous, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('leftmost', 'NOUN'), ('derivation', 'NOUN'), ('string', 'NOUN'), ('a+a*a', 'PROPN'), ('possible', 'ADJ'), (',', 'PUNCT'), ('grammar', 'NOUN'), ('ambiguous', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('leftmost', 'compound'), ('derivation', 'nsubj'), ('string', 'pobj'), ('a+a*a', 'dobj'), ('possible', 'acomp'), (',', 'punct'), ('grammar', 'pobj'), ('ambiguous', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[,, leftmost], [leftmost, derivation], [derivation, string], [string, a+a*a], [a+a*a, possible], [possible, ,], [,, grammar], [grammar, ambiguous], [ambiguous, .]]

>> Trigrams: 
[[,, leftmost, derivation], [leftmost, derivation, string], [derivation, string, a+a*a], [string, a+a*a, possible], [a+a*a, possible, ,], [possible, ,, grammar], [,, grammar, ambiguous], [grammar, ambiguous, .]]

>> Noun Phrases are: 
[Two leftmost derivation, string, a+a*a, grammar]

>> Named Entities are: 
[('Two', 'CARDINAL')]


============================ Sentence 128 =============================

a S * S a a S S + S 


>> Tokens are: 
[S, *, S, S, S, +, S] 

>> PoS Tags are: 
[('S', 'PROPN'), ('*', 'PUNCT'), ('S', 'PROPN'), ('S', 'PROPN'), ('S', 'PROPN'), ('+', 'SYM'), ('S', 'PROPN')] 

>> Dependency Tags are: 
[('S', 'compound'), ('*', 'punct'), ('S', 'ROOT'), ('S', 'compound'), ('S', 'appos'), ('+', 'cc'), ('S', 'conj')]

>> Bigrams: 
[[S, *], [*, S], [S, S], [S, S], [S, +], [+, S]]

>> Trigrams: 
[[S, *, S], [*, S, S], [S, S, S], [S, S, +], [S, +, S]]

>> Noun Phrases are: 
[a S * S, a S S, S]

>> Named Entities are: 
[]


============================ Sentence 129 =============================

a S + S a a S * S S   


>> Tokens are: 
[S, +, S, S, *, S, S,  ] 

>> PoS Tags are: 
[('S', 'PROPN'), ('+', 'SYM'), ('S', 'NOUN'), ('S', 'PROPN'), ('*', 'PROPN'), ('S', 'PROPN'), ('S', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('S', 'nmod'), ('+', 'cc'), ('S', 'ROOT'), ('S', 'nmod'), ('*', 'punct'), ('S', 'compound'), ('S', 'meta'), (' ', 'punct')]

>> Bigrams: 
[[S, +], [+, S], [S, S], [S, *], [*, S], [S, S], [S,  ]]

>> Trigrams: 
[[S, +, S], [+, S, S], [S, S, *], [S, *, S], [*, S, S], [S, S,  ]]

>> Noun Phrases are: 
[a S + S]

>> Named Entities are: 
[]


============================ Sentence 130 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'PROPN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 131 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›  32   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›,  , 32,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE'), ('32', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'appos'), ('32', 'nummod'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ], [ , 32], [32,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ], [‹#›,  , 32], [ , 32,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('32', 'CARDINAL')]


============================ Sentence 132 =============================

Exercise: Ambiguous grammar Check whether following grammars are ambiguous or not: S aS | Sa | 𝜖  (string: aaaa) S aSbS | bSaS | 𝜖  (string: abab) SSS+ | SS* | a (string: aa+a*)   


>> Tokens are: 
[Exercise, :, Ambiguous, grammar, Check, following, grammars, ambiguous, :, S, |, Sa, |, 𝜖,  , (, string, :, aaaa, ), S, aSbS, |, bSaS, |, 𝜖,  , (, string, :, abab, ), SSS+, |, SS, *, |, (, string, :, aa+a, *, ),  ] 

>> PoS Tags are: 
[('Exercise', 'NOUN'), (':', 'PUNCT'), ('Ambiguous', 'ADJ'), ('grammar', 'NOUN'), ('Check', 'PROPN'), ('following', 'VERB'), ('grammars', 'NOUN'), ('ambiguous', 'ADJ'), (':', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('|', 'NOUN'), ('Sa', 'PRON'), ('|', 'NOUN'), ('𝜖', 'ADP'), (' ', 'SPACE'), ('(', 'PUNCT'), ('string', 'NOUN'), (':', 'PUNCT'), ('aaaa', 'NOUN'), (')', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('aSbS', 'NOUN'), ('|', 'NOUN'), ('bSaS', 'NOUN'), ('|', 'NOUN'), ('𝜖', 'ADP'), (' ', 'SPACE'), ('(', 'PUNCT'), ('string', 'NOUN'), (':', 'PUNCT'), ('abab', 'NOUN'), (')', 'PUNCT'), ('S\uf0e0SS+', 'NOUN'), ('|', 'NOUN'), ('SS', 'NOUN'), ('*', 'PUNCT'), ('|', 'NOUN'), ('(', 'PUNCT'), ('string', 'NOUN'), (':', 'PUNCT'), ('aa+a', 'INTJ'), ('*', 'PUNCT'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Exercise', 'dep'), (':', 'punct'), ('Ambiguous', 'amod'), ('grammar', 'compound'), ('Check', 'appos'), ('following', 'csubj'), ('grammars', 'dobj'), ('ambiguous', 'acomp'), (':', 'punct'), ('S\uf0e0', 'appos'), ('|', 'pobj'), ('Sa', 'nsubj'), ('|', 'pcomp'), ('𝜖', 'prep'), (' ', 'pobj'), ('(', 'punct'), ('string', 'advcl'), (':', 'punct'), ('aaaa', 'dobj'), (')', 'punct'), ('S\uf0e0', 'appos'), ('aSbS', 'appos'), ('|', 'npadvmod'), ('bSaS', 'compound'), ('|', 'appos'), ('𝜖', 'prep'), (' ', 'pobj'), ('(', 'punct'), ('string', 'appos'), (':', 'punct'), ('abab', 'appos'), (')', 'punct'), ('S\uf0e0SS+', 'compound'), ('|', 'compound'), ('SS', 'appos'), ('*', 'punct'), ('|', 'npadvmod'), ('(', 'punct'), ('string', 'ROOT'), (':', 'punct'), ('aa+a', 'intj'), ('*', 'punct'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Exercise, :], [:, Ambiguous], [Ambiguous, grammar], [grammar, Check], [Check, following], [following, grammars], [grammars, ambiguous], [ambiguous, :], [:, S], [S, |], [|, Sa], [Sa, |], [|, 𝜖], [𝜖,  ], [ , (], [(, string], [string, :], [:, aaaa], [aaaa, )], [), S], [S, aSbS], [aSbS, |], [|, bSaS], [bSaS, |], [|, 𝜖], [𝜖,  ], [ , (], [(, string], [string, :], [:, abab], [abab, )], [), SSS+], [SSS+, |], [|, SS], [SS, *], [*, |], [|, (], [(, string], [string, :], [:, aa+a], [aa+a, *], [*, )], [),  ]]

>> Trigrams: 
[[Exercise, :, Ambiguous], [:, Ambiguous, grammar], [Ambiguous, grammar, Check], [grammar, Check, following], [Check, following, grammars], [following, grammars, ambiguous], [grammars, ambiguous, :], [ambiguous, :, S], [:, S, |], [S, |, Sa], [|, Sa, |], [Sa, |, 𝜖], [|, 𝜖,  ], [𝜖,  , (], [ , (, string], [(, string, :], [string, :, aaaa], [:, aaaa, )], [aaaa, ), S], [), S, aSbS], [S, aSbS, |], [aSbS, |, bSaS], [|, bSaS, |], [bSaS, |, 𝜖], [|, 𝜖,  ], [𝜖,  , (], [ , (, string], [(, string, :], [string, :, abab], [:, abab, )], [abab, ), SSS+], [), SSS+, |], [SSS+, |, SS], [|, SS, *], [SS, *, |], [*, |, (], [|, (, string], [(, string, :], [string, :, aa+a], [:, aa+a, *], [aa+a, *, )], [*, ),  ]]

>> Noun Phrases are: 
[Ambiguous grammar Check, grammars, S, |, Sa, aaaa, S, aSbS, bSaS |, (string, abab, SSS+ | SS]

>> Named Entities are: 
[('aSbS', 'ORG')]


============================ Sentence 133 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 134 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Grammar: S S+S | S*S  | (S) | a   Equivalent unambiguous grammar is 	   	  S S + T | T T T * F | F F (S) | a   Equivalent  unambiguous  grammar   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Grammar, :, S, S+S, |, S*S,  , |, (, S, ), |,   , Equivalent, unambiguous, grammar, 	   	  , S, S, +, T, |, T, T, T, *, F, |, F, F, (, S, ), |,   , Equivalent,  , unambiguous,  , grammar,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Grammar', 'PROPN'), (':', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('S+S', 'NOUN'), ('|', 'NOUN'), ('S*S', 'ADV'), (' ', 'SPACE'), ('|', 'NOUN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('|', 'NOUN'), ('  ', 'SPACE'), ('Equivalent', 'ADJ'), ('unambiguous', 'ADJ'), ('grammar', 'NOUN'), ('\t   \t  ', 'SPACE'), ('S\uf0e0', 'NOUN'), ('S', 'PROPN'), ('+', 'PROPN'), ('T', 'PROPN'), ('|', 'NOUN'), ('T', 'NOUN'), ('T\uf0e0', 'VERB'), ('T', 'PROPN'), ('*', 'PROPN'), ('F', 'PROPN'), ('|', 'NOUN'), ('F', 'PROPN'), ('F\uf0e0', 'PROPN'), ('(', 'PUNCT'), ('S', 'NOUN'), (')', 'PUNCT'), ('|', 'NOUN'), ('  ', 'SPACE'), ('Equivalent', 'PROPN'), (' ', 'SPACE'), ('unambiguous', 'ADJ'), (' ', 'SPACE'), ('grammar', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('Grammar', 'appos'), (':', 'punct'), ('S\uf0e0', 'compound'), ('S+S', 'compound'), ('|', 'npadvmod'), ('S*S', 'punct'), (' ', 'dep'), ('|', 'meta'), ('(', 'punct'), ('S', 'appos'), (')', 'punct'), ('|', 'appos'), ('  ', 'nummod'), ('Equivalent', 'nmod'), ('unambiguous', 'amod'), ('grammar', 'nsubj'), ('\t   \t  ', 'attr'), ('S\uf0e0', 'appos'), ('S', 'nmod'), ('+', 'cc'), ('T', 'compound'), ('|', 'attr'), ('T', 'nsubj'), ('T\uf0e0', 'advcl'), ('T', 'compound'), ('*', 'punct'), ('F', 'compound'), ('|', 'dobj'), ('F', 'compound'), ('F\uf0e0', 'appos'), ('(', 'punct'), ('S', 'appos'), (')', 'punct'), ('|', 'dep'), ('  ', 'attr'), ('Equivalent', 'appos'), (' ', 'nmod'), ('unambiguous', 'amod'), (' ', 'compound'), ('grammar', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Grammar], [Grammar, :], [:, S], [S, S+S], [S+S, |], [|, S*S], [S*S,  ], [ , |], [|, (], [(, S], [S, )], [), |], [|,   ], [  , Equivalent], [Equivalent, unambiguous], [unambiguous, grammar], [grammar, 	   	  ], [	   	  , S], [S, S], [S, +], [+, T], [T, |], [|, T], [T, T], [T, T], [T, *], [*, F], [F, |], [|, F], [F, F], [F, (], [(, S], [S, )], [), |], [|,   ], [  , Equivalent], [Equivalent,  ], [ , unambiguous], [unambiguous,  ], [ , grammar], [grammar,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Grammar], [‹#›, Grammar, :], [Grammar, :, S], [:, S, S+S], [S, S+S, |], [S+S, |, S*S], [|, S*S,  ], [S*S,  , |], [ , |, (], [|, (, S], [(, S, )], [S, ), |], [), |,   ], [|,   , Equivalent], [  , Equivalent, unambiguous], [Equivalent, unambiguous, grammar], [unambiguous, grammar, 	   	  ], [grammar, 	   	  , S], [	   	  , S, S], [S, S, +], [S, +, T], [+, T, |], [T, |, T], [|, T, T], [T, T, T], [T, T, *], [T, *, F], [*, F, |], [F, |, F], [|, F, F], [F, F, (], [F, (, S], [(, S, )], [S, ), |], [), |,   ], [|,   , Equivalent], [  , Equivalent,  ], [Equivalent,  , unambiguous], [ , unambiguous,  ], [unambiguous,  , grammar], [ , grammar,  ]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, ‹#› Grammar, S S+S | S*S  | (S, |, S, S + T |, T, T * F |, F F, (S, Equivalent,  unambiguous  grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Grammar', 'PERSON')]


============================ Sentence 135 =============================

Here, two left most derivation is not possible for string a+a*a hence, grammar is unambiguous. 


>> Tokens are: 
[,, left, derivation, possible, string, a+a*a, ,, grammar, unambiguous, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('left', 'VERB'), ('derivation', 'NOUN'), ('possible', 'ADJ'), ('string', 'NOUN'), ('a+a*a', 'ADJ'), (',', 'PUNCT'), ('grammar', 'NOUN'), ('unambiguous', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('left', 'csubj'), ('derivation', 'dobj'), ('possible', 'acomp'), ('string', 'pcomp'), ('a+a*a', 'dobj'), (',', 'punct'), ('grammar', 'nsubj'), ('unambiguous', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[,, left], [left, derivation], [derivation, possible], [possible, string], [string, a+a*a], [a+a*a, ,], [,, grammar], [grammar, unambiguous], [unambiguous, .]]

>> Trigrams: 
[[,, left, derivation], [left, derivation, possible], [derivation, possible, string], [possible, string, a+a*a], [string, a+a*a, ,], [a+a*a, ,, grammar], [,, grammar, unambiguous], [grammar, unambiguous, .]]

>> Noun Phrases are: 
[most derivation, string, grammar]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 136 =============================

Unambiguous grammar Output string: a+a*a 	 S 	 S+T 


>> Tokens are: 
[Unambiguous, grammar, Output, string, :, a+a*a, 	 , S, 	, , S+T] 

>> PoS Tags are: 
[('Unambiguous', 'ADJ'), ('grammar', 'NOUN'), ('Output', 'NOUN'), ('string', 'NOUN'), (':', 'PUNCT'), ('a+a*a', 'ADJ'), ('\t ', 'SPACE'), ('S', 'PROPN'), ('\t', 'SPACE'), ('\uf0e0', 'NOUN'), ('S+T', 'PROPN')] 

>> Dependency Tags are: 
[('Unambiguous', 'amod'), ('grammar', 'compound'), ('Output', 'compound'), ('string', 'ROOT'), (':', 'punct'), ('a+a*a', 'amod'), ('\t ', 'compound'), ('S', 'compound'), ('\t', 'compound'), ('\uf0e0', 'compound'), ('S+T', 'punct')]

>> Bigrams: 
[[Unambiguous, grammar], [grammar, Output], [Output, string], [string, :], [:, a+a*a], [a+a*a, 	 ], [	 , S], [S, 	], [	, ], [, S+T]]

>> Trigrams: 
[[Unambiguous, grammar, Output], [grammar, Output, string], [Output, string, :], [string, :, a+a*a], [:, a+a*a, 	 ], [a+a*a, 	 , S], [	 , S, 	], [S, 	, ], [	, , S+T]]

>> Noun Phrases are: 
[Unambiguous grammar Output string]

>> Named Entities are: 
[]


============================ Sentence 137 =============================

	 T+T 	 F+T 


>> Tokens are: 
[	, , T+T, 	, , F+T] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('\uf0e0', 'NOUN'), ('T+T', 'ADP'), ('\t', 'SPACE'), ('\uf0e0', 'PROPN'), ('F+T', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('\uf0e0', 'ROOT'), ('T+T', 'punct'), ('\t', 'amod'), ('\uf0e0', 'appos'), ('F+T', 'punct')]

>> Bigrams: 
[[	, ], [, T+T], [T+T, 	], [	, ], [, F+T]]

>> Trigrams: 
[[	, , T+T], [, T+T, 	], [T+T, 	, ], [	, , F+T]]

>> Noun Phrases are: 
[	, 	]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

	 a+T	 	 a+T*F 	 a+F*F 	 a+a*F 	 a+a*a		 Try for second leftmost derivation Not possible???? 


>> Tokens are: 
[	, , a+T, 	 	, , a+T*F, 	, , a+F*F, 	, , a+a*F, 	, , a+a*a, 		 , Try, second, leftmost, derivation, possible, ?, ?, ?, ?] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('\uf0e0', 'PROPN'), ('a+T', 'ADV'), ('\t \t', 'SPACE'), ('\uf0e0', 'NOUN'), ('a+T*F', 'NOUN'), ('\t', 'SPACE'), ('\uf0e0', 'NOUN'), ('a+F*F', 'VERB'), ('\t', 'SPACE'), ('\uf0e0', 'PROPN'), ('a+a*F', 'PROPN'), ('\t', 'SPACE'), ('\uf0e0', 'NOUN'), ('a+a*a', 'PROPN'), ('\t\t ', 'SPACE'), ('Try', 'VERB'), ('second', 'ADJ'), ('leftmost', 'NOUN'), ('derivation', 'NOUN'), ('possible', 'ADJ'), ('?', 'PUNCT'), ('?', 'PUNCT'), ('?', 'PUNCT'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'amod'), ('\uf0e0', 'nmod'), ('a+T', 'advmod'), ('\t \t', 'compound'), ('\uf0e0', 'compound'), ('a+T*F', 'compound'), ('\t', 'compound'), ('\uf0e0', 'nsubj'), ('a+F*F', 'ROOT'), ('\t', 'compound'), ('\uf0e0', 'dobj'), ('a+a*F', 'compound'), ('\t', 'appos'), ('\uf0e0', 'appos'), ('a+a*a', 'amod'), ('\t\t ', 'appos'), ('Try', 'ccomp'), ('second', 'amod'), ('leftmost', 'compound'), ('derivation', 'pobj'), ('possible', 'advcl'), ('?', 'punct'), ('?', 'punct'), ('?', 'punct'), ('?', 'punct')]

>> Bigrams: 
[[	, ], [, a+T], [a+T, 	 	], [	 	, ], [, a+T*F], [a+T*F, 	], [	, ], [, a+F*F], [a+F*F, 	], [	, ], [, a+a*F], [a+a*F, 	], [	, ], [, a+a*a], [a+a*a, 		 ], [		 , Try], [Try, second], [second, leftmost], [leftmost, derivation], [derivation, possible], [possible, ?], [?, ?], [?, ?], [?, ?]]

>> Trigrams: 
[[	, , a+T], [, a+T, 	 	], [a+T, 	 	, ], [	 	, , a+T*F], [, a+T*F, 	], [a+T*F, 	, ], [	, , a+F*F], [, a+F*F, 	], [a+F*F, 	, ], [	, , a+a*F], [, a+a*F, 	], [a+a*F, 	, ], [	, , a+a*a], [, a+a*a, 		 ], [a+a*a, 		 , Try], [		 , Try, second], [Try, second, leftmost], [second, leftmost, derivation], [leftmost, derivation, possible], [derivation, possible, ?], [possible, ?, ?], [?, ?, ?], [?, ?, ?]]

>> Noun Phrases are: 
[	 a+T	 	 a+T*F 	, 	, , second leftmost derivation]

>> Named Entities are: 
[('second', 'ORDINAL')]


============================ Sentence 139 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 140 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 141 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Simplified forms & Normal forms    Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Simplified, forms, &, Normal, forms,    , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Simplified', 'ADJ'), ('forms', 'NOUN'), ('&', 'CCONJ'), ('Normal', 'PROPN'), ('forms', 'VERB'), ('   ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Simplified', 'amod'), ('forms', 'conj'), ('&', 'cc'), ('Normal', 'conj'), ('forms', 'ROOT'), ('   ', 'nummod'), ('Unit', 'dobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Simplified], [Simplified, forms], [forms, &], [&, Normal], [Normal, forms], [forms,    ], [   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Simplified], [‹#›, Simplified, forms], [Simplified, forms, &], [forms, &, Normal], [&, Normal, forms], [Normal, forms,    ], [forms,    , Unit], [   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Simplified forms, Normal,    Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 142 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Nullable Variable A Nullable variable in a CFG,  is defined as follows: Any variable A for which P contains   is nullable. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Nullable, Variable, Nullable, variable, CFG, ,,  , defined, follows, :, variable, P, contains,   , nullable, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Nullable', 'PROPN'), ('Variable', 'PROPN'), ('Nullable', 'PROPN'), ('variable', 'NOUN'), ('CFG', 'PROPN'), (',', 'PUNCT'), (' ', 'SPACE'), ('defined', 'VERB'), ('follows', 'VERB'), (':', 'PUNCT'), ('variable', 'ADJ'), ('P', 'NOUN'), ('contains', 'VERB'), ('  ', 'SPACE'), ('nullable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubjpass'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('Nullable', 'compound'), ('Variable', 'compound'), ('Nullable', 'compound'), ('variable', 'conj'), ('CFG', 'pobj'), (',', 'punct'), (' ', 'nsubjpass'), ('defined', 'ROOT'), ('follows', 'advcl'), (':', 'punct'), ('variable', 'amod'), ('P', 'nsubj'), ('contains', 'relcl'), ('  ', 'dobj'), ('nullable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Nullable], [Nullable, Variable], [Variable, Nullable], [Nullable, variable], [variable, CFG], [CFG, ,], [,,  ], [ , defined], [defined, follows], [follows, :], [:, variable], [variable, P], [P, contains], [contains,   ], [  , nullable], [nullable, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Nullable], [‹#›, Nullable, Variable], [Nullable, Variable, Nullable], [Variable, Nullable, variable], [Nullable, variable, CFG], [variable, CFG, ,], [CFG, ,,  ], [,,  , defined], [ , defined, follows], [defined, follows, :], [follows, :, variable], [:, variable, P], [variable, P, contains], [P, contains,   ], [contains,   , nullable], [  , nullable, .]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Nullable Variable A Nullable variable, a CFG, Any variable A, P]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Nullable Variable A Nullable', 'ORG'), ('CFG', 'ORG')]


============================ Sentence 143 =============================

If P contains the production  are nullable variable, then A is nullable. 


>> Tokens are: 
[P, contains, production,  , nullable, variable, ,, nullable, .] 

>> PoS Tags are: 
[('P', 'NOUN'), ('contains', 'VERB'), ('production', 'NOUN'), (' ', 'SPACE'), ('nullable', 'ADJ'), ('variable', 'NOUN'), (',', 'PUNCT'), ('nullable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('P', 'nsubj'), ('contains', 'advcl'), ('production', 'dobj'), (' ', 'nsubj'), ('nullable', 'amod'), ('variable', 'attr'), (',', 'punct'), ('nullable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[P, contains], [contains, production], [production,  ], [ , nullable], [nullable, variable], [variable, ,], [,, nullable], [nullable, .]]

>> Trigrams: 
[[P, contains, production], [contains, production,  ], [production,  , nullable], [ , nullable, variable], [nullable, variable, ,], [variable, ,, nullable], [,, nullable, .]]

>> Noun Phrases are: 
[P, the production, nullable variable, A]

>> Named Entities are: 
[]


============================ Sentence 144 =============================

No other variables in V are nullable. 


>> Tokens are: 
[variables, V, nullable, .] 

>> PoS Tags are: 
[('variables', 'NOUN'), ('V', 'NOUN'), ('nullable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('variables', 'nsubj'), ('V', 'pobj'), ('nullable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[variables, V], [V, nullable], [nullable, .]]

>> Trigrams: 
[[variables, V, nullable], [V, nullable, .]]

>> Noun Phrases are: 
[No other variables, V]

>> Named Entities are: 
[]


============================ Sentence 145 =============================

   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 146 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Eliminate ˄ production  Sa  X |Yb X ˄ | S   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Eliminate, ˄, production,  , Sa,  , X, |Yb, X, ˄, |, S,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Eliminate', 'PROPN'), ('˄', 'NOUN'), ('production', 'NOUN'), (' ', 'SPACE'), ('S\uf0e0a', 'X'), (' ', 'SPACE'), ('X', 'PROPN'), ('|Yb', 'PROPN'), ('X\uf0e0', 'PUNCT'), ('˄', 'NOUN'), ('|', 'NOUN'), ('S', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Eliminate', 'compound'), ('˄', 'compound'), ('production', 'appos'), (' ', 'punct'), ('S\uf0e0a', 'appos'), (' ', 'nmod'), ('X', 'nmod'), ('|Yb', 'nmod'), ('X\uf0e0', 'compound'), ('˄', 'appos'), ('|', 'npadvmod'), ('S', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Eliminate], [Eliminate, ˄], [˄, production], [production,  ], [ , Sa], [Sa,  ], [ , X], [X, |Yb], [|Yb, X], [X, ˄], [˄, |], [|, S], [S,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Eliminate], [‹#›, Eliminate, ˄], [Eliminate, ˄, production], [˄, production,  ], [production,  , Sa], [ , Sa,  ], [Sa,  , X], [ , X, |Yb], [X, |Yb, X], [|Yb, X, ˄], [X, ˄, |], [˄, |, S], [|, S,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Eliminate ˄ production,  X |Yb X ˄, S]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG')]


============================ Sentence 147 =============================

YbY|b SaX 


>> Tokens are: 
[YbY|b, SaX] 

>> PoS Tags are: 
[('Y\uf0e0bY|b', 'INTJ'), ('S\uf0e0aX', 'NUM')] 

>> Dependency Tags are: 
[('Y\uf0e0bY|b', 'ROOT'), ('S\uf0e0aX', 'nummod')]

>> Bigrams: 
[[YbY|b, SaX]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 148 =============================

| Yb | a^ X^ | S YbY|b 


>> Tokens are: 
[|, Yb, |, a^, X^, |, S, YbY|b] 

>> PoS Tags are: 
[('|', 'NOUN'), ('Yb', 'PROPN'), ('|', 'NOUN'), ('a^', 'PROPN'), ('X\uf0e0^', 'PROPN'), ('|', 'NOUN'), ('S', 'PROPN'), ('Y\uf0e0bY|b', 'INTJ')] 

>> Dependency Tags are: 
[('|', 'ROOT'), ('Yb', 'compound'), ('|', 'npadvmod'), ('a^', 'compound'), ('X\uf0e0^', 'compound'), ('|', 'npadvmod'), ('S', 'compound'), ('Y\uf0e0bY|b', 'npadvmod')]

>> Bigrams: 
[[|, Yb], [Yb, |], [|, a^], [a^, X^], [X^, |], [|, S], [S, YbY|b]]

>> Trigrams: 
[[|, Yb, |], [Yb, |, a^], [|, a^, X^], [a^, X^, |], [X^, |, S], [|, S, YbY|b]]

>> Noun Phrases are: 
[|]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

SaX|Yb|a XS YbY|b Nullable variable={X} Replacing X by ^ in all  productions containing X on RHS and rewriting the production again Removing ^ productions  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[SaX|Yb|a, XS, YbY|b, Nullable, variable={X, }, Replacing, X, ^,  , productions, containing, X, RHS, rewriting, production, Removing, ^, productions,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('S\uf0e0aX|Yb|a', 'PROPN'), ('X\uf0e0S', 'PROPN'), ('Y\uf0e0bY|b', 'PROPN'), ('Nullable', 'PROPN'), ('variable={X', 'PROPN'), ('}', 'PUNCT'), ('Replacing', 'VERB'), ('X', 'PRON'), ('^', 'NOUN'), (' ', 'SPACE'), ('productions', 'NOUN'), ('containing', 'VERB'), ('X', 'NOUN'), ('RHS', 'PROPN'), ('rewriting', 'VERB'), ('production', 'NOUN'), ('Removing', 'VERB'), ('^', 'NOUN'), ('productions', 'NOUN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('S\uf0e0aX|Yb|a', 'nmod'), ('X\uf0e0S', 'compound'), ('Y\uf0e0bY|b', 'compound'), ('Nullable', 'compound'), ('variable={X', 'nsubj'), ('}', 'punct'), ('Replacing', 'ROOT'), ('X', 'dobj'), ('^', 'pobj'), (' ', 'nmod'), ('productions', 'pobj'), ('containing', 'acl'), ('X', 'dobj'), ('RHS', 'pobj'), ('rewriting', 'conj'), ('production', 'dobj'), ('Removing', 'xcomp'), ('^', 'dobj'), ('productions', 'dobj'), (' ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'dobj'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[SaX|Yb|a, XS], [XS, YbY|b], [YbY|b, Nullable], [Nullable, variable={X], [variable={X, }], [}, Replacing], [Replacing, X], [X, ^], [^,  ], [ , productions], [productions, containing], [containing, X], [X, RHS], [RHS, rewriting], [rewriting, production], [production, Removing], [Removing, ^], [^, productions], [productions,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[SaX|Yb|a, XS, YbY|b], [XS, YbY|b, Nullable], [YbY|b, Nullable, variable={X], [Nullable, variable={X, }], [variable={X, }, Replacing], [}, Replacing, X], [Replacing, X, ^], [X, ^,  ], [^,  , productions], [ , productions, containing], [productions, containing, X], [containing, X, RHS], [X, RHS, rewriting], [RHS, rewriting, production], [rewriting, production, Removing], [production, Removing, ^], [Removing, ^, productions], [^, productions,  ], [productions,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[SaX|Yb|a XS YbY|b Nullable variable={X, X, ^, all  productions, X, RHS, the production, ^, productions,  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('X\uf0e0S', 'PERSON'), ('Nullable variable={X', 'PRODUCT'), ('RHS', 'NORP'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 150 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Exercise: Eliminate ^ production SAC 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Exercise, :, Eliminate, ^, production, SAC] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Exercise', 'NOUN'), (':', 'PUNCT'), ('Eliminate', 'VERB'), ('^', 'NOUN'), ('production', 'NOUN'), ('S\uf0e0AC', 'NOUN')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Exercise', 'ROOT'), (':', 'punct'), ('Eliminate', 'acl'), ('^', 'dobj'), ('production', 'dobj'), ('S\uf0e0AC', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Exercise], [Exercise, :], [:, Eliminate], [Eliminate, ^], [^, production], [production, SAC]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Exercise], [‹#›, Exercise, :], [Exercise, :, Eliminate], [:, Eliminate, ^], [Eliminate, ^, production], [^, production, SAC]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, ^, production]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Exercise', 'ORG')]


============================ Sentence 151 =============================

AaAb|˄ 


>> Tokens are: 
[AaAb|˄] 

>> PoS Tags are: 
[('A\uf0e0aAb|˄', 'NOUN')] 

>> Dependency Tags are: 
[('A\uf0e0aAb|˄', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[AaAb|˄]

>> Named Entities are: 
[('A\uf0e0aAb|˄', 'ORG')]


============================ Sentence 152 =============================

CaC|a 


>> Tokens are: 
[CaC|a] 

>> PoS Tags are: 
[('C\uf0e0aC|a', 'NOUN')] 

>> Dependency Tags are: 
[('C\uf0e0aC|a', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CaC|a]

>> Named Entities are: 
[]


============================ Sentence 153 =============================

After elimination of ^ production: SAC | C AaAb| ab CaC|a   


>> Tokens are: 
[elimination, ^, production, :, SAC, |, C, AaAb|, ab, CaC|a,  ] 

>> PoS Tags are: 
[('elimination', 'NOUN'), ('^', 'NOUN'), ('production', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0AC', 'NOUN'), ('|', 'NOUN'), ('C', 'NOUN'), ('A\uf0e0aAb|', 'NOUN'), ('ab', 'ADP'), ('C\uf0e0aC|a', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('elimination', 'pobj'), ('^', 'pobj'), ('production', 'pobj'), (':', 'punct'), ('S\uf0e0AC', 'compound'), ('|', 'appos'), ('C', 'compound'), ('A\uf0e0aAb|', 'appos'), ('ab', 'ROOT'), ('C\uf0e0aC|a', 'npadvmod'), (' ', 'punct')]

>> Bigrams: 
[[elimination, ^], [^, production], [production, :], [:, SAC], [SAC, |], [|, C], [C, AaAb|], [AaAb|, ab], [ab, CaC|a], [CaC|a,  ]]

>> Trigrams: 
[[elimination, ^, production], [^, production, :], [production, :, SAC], [:, SAC, |], [SAC, |, C], [|, C, AaAb|], [C, AaAb|, ab], [AaAb|, ab, CaC|a], [ab, CaC|a,  ]]

>> Noun Phrases are: 
[elimination, ^, production, SAC |, C AaAb|]

>> Named Entities are: 
[]


============================ Sentence 154 =============================

SXaX|bX|Y XXaX|XbX|˄ Yab 


>> Tokens are: 
[SXaX|bX|Y, XXaX|XbX|˄, Yab] 

>> PoS Tags are: 
[('S\uf0e0XaX|bX|Y', 'NOUN'), ('X\uf0e0XaX|XbX|˄', 'NUM'), ('Y\uf0e0ab', 'PROPN')] 

>> Dependency Tags are: 
[('S\uf0e0XaX|bX|Y', 'compound'), ('X\uf0e0XaX|XbX|˄', 'compound'), ('Y\uf0e0ab', 'ROOT')]

>> Bigrams: 
[[SXaX|bX|Y, XXaX|XbX|˄], [XXaX|XbX|˄, Yab]]

>> Trigrams: 
[[SXaX|bX|Y, XXaX|XbX|˄, Yab]]

>> Noun Phrases are: 
[SXaX|bX|Y XXaX|XbX|˄ Yab]

>> Named Entities are: 
[('X\uf0e0XaX|XbX|˄ Y\uf0e0ab', 'PERSON')]


============================ Sentence 155 =============================

After elimination of ^ production: S XaX | bX | Y | aX | Xa | a | b X XaX |XbX | aX | Xa | a | Xb | bX | b Yab   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[elimination, ^, production, :, S, XaX, |, bX, |, Y, |, aX, |, Xa, |, |, b, X, XaX, |XbX, |, aX, |, Xa, |, |, Xb, |, bX, |, b, Yab,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('elimination', 'NOUN'), ('^', 'NOUN'), ('production', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0', 'NOUN'), ('XaX', 'PROPN'), ('|', 'NOUN'), ('bX', 'PROPN'), ('|', 'NOUN'), ('Y', 'PROPN'), ('|', 'NOUN'), ('aX', 'DET'), ('|', 'NOUN'), ('Xa', 'PROPN'), ('|', 'NOUN'), ('|', 'NOUN'), ('b', 'X'), ('X\uf0e0', 'ADJ'), ('XaX', 'PROPN'), ('|XbX', 'NOUN'), ('|', 'NOUN'), ('aX', 'DET'), ('|', 'NOUN'), ('Xa', 'PROPN'), ('|', 'NOUN'), ('|', 'NOUN'), ('Xb', 'NUM'), ('|', 'NOUN'), ('bX', 'PROPN'), ('|', 'NOUN'), ('b', 'NOUN'), ('Y\uf0e0ab', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('elimination', 'pobj'), ('^', 'pobj'), ('production', 'pobj'), (':', 'punct'), ('S\uf0e0', 'compound'), ('XaX', 'compound'), ('|', 'pobj'), ('bX', 'appos'), ('|', 'npadvmod'), ('Y', 'compound'), ('|', 'ROOT'), ('aX', 'det'), ('|', 'npadvmod'), ('Xa', 'compound'), ('|', 'npadvmod'), ('|', 'npadvmod'), ('b', 'appos'), ('X\uf0e0', 'appos'), ('XaX', 'compound'), ('|XbX', 'appos'), ('|', 'npadvmod'), ('aX', 'det'), ('|', 'npadvmod'), ('Xa', 'compound'), ('|', 'npadvmod'), ('|', 'npadvmod'), ('Xb', 'compound'), ('|', 'appos'), ('bX', 'appos'), ('|', 'npadvmod'), ('b', 'prep'), ('Y\uf0e0ab', 'nmod'), ('  ', 'compound'), ('Unit', 'pobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[elimination, ^], [^, production], [production, :], [:, S], [S, XaX], [XaX, |], [|, bX], [bX, |], [|, Y], [Y, |], [|, aX], [aX, |], [|, Xa], [Xa, |], [|, |], [|, b], [b, X], [X, XaX], [XaX, |XbX], [|XbX, |], [|, aX], [aX, |], [|, Xa], [Xa, |], [|, |], [|, Xb], [Xb, |], [|, bX], [bX, |], [|, b], [b, Yab], [Yab,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[elimination, ^, production], [^, production, :], [production, :, S], [:, S, XaX], [S, XaX, |], [XaX, |, bX], [|, bX, |], [bX, |, Y], [|, Y, |], [Y, |, aX], [|, aX, |], [aX, |, Xa], [|, Xa, |], [Xa, |, |], [|, |, b], [|, b, X], [b, X, XaX], [X, XaX, |XbX], [XaX, |XbX, |], [|XbX, |, aX], [|, aX, |], [aX, |, Xa], [|, Xa, |], [Xa, |, |], [|, |, Xb], [|, Xb, |], [Xb, |, bX], [|, bX, |], [bX, |, b], [|, b, Yab], [b, Yab,   ], [Yab,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[elimination, ^, production, XaX |, bX, XaX |XbX, Xb |, bX, Yab   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('|', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 156 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› A-derivable A variable is called A-derivable , If  is a production, B is A-derivable. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, -, derivable, variable, called, -, derivable, ,,  , production, ,, B, -, derivable, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('-', 'PUNCT'), ('derivable', 'ADJ'), ('variable', 'NOUN'), ('called', 'VERB'), ('-', 'PUNCT'), ('derivable', 'ADJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('production', 'NOUN'), (',', 'PUNCT'), ('B', 'NOUN'), ('-', 'PUNCT'), ('derivable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('-', 'punct'), ('derivable', 'amod'), ('variable', 'nsubjpass'), ('called', 'ccomp'), ('-', 'punct'), ('derivable', 'oprd'), (',', 'punct'), (' ', 'nsubj'), ('production', 'attr'), (',', 'punct'), ('B', 'nsubj'), ('-', 'punct'), ('derivable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, -], [-, derivable], [derivable, variable], [variable, called], [called, -], [-, derivable], [derivable, ,], [,,  ], [ , production], [production, ,], [,, B], [B, -], [-, derivable], [derivable, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, -], [‹#›, -, derivable], [-, derivable, variable], [derivable, variable, called], [variable, called, -], [called, -, derivable], [-, derivable, ,], [derivable, ,,  ], [,,  , production], [ , production, ,], [production, ,, B], [,, B, -], [B, -, derivable], [-, derivable, .]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, a production, B]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG')]


============================ Sentence 157 =============================

If C is   


>> Tokens are: 
[C,  ] 

>> PoS Tags are: 
[('C', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('C', 'nsubj'), (' ', 'attr')]

>> Bigrams: 
[[C,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[C]

>> Named Entities are: 
[]


============================ Sentence 158 =============================

A-derivable,   is a production, and  , then B is A-derivable. 


>> Tokens are: 
[-, derivable, ,,   , production, ,,  , ,, B, -, derivable, .] 

>> PoS Tags are: 
[('-', 'PUNCT'), ('derivable', 'ADJ'), (',', 'PUNCT'), ('  ', 'SPACE'), ('production', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), (',', 'PUNCT'), ('B', 'NOUN'), ('-', 'PUNCT'), ('derivable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('-', 'punct'), ('derivable', 'amod'), (',', 'punct'), ('  ', 'nsubj'), ('production', 'attr'), (',', 'punct'), (' ', 'conj'), (',', 'punct'), ('B', 'nsubj'), ('-', 'punct'), ('derivable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[-, derivable], [derivable, ,], [,,   ], [  , production], [production, ,], [,,  ], [ , ,], [,, B], [B, -], [-, derivable], [derivable, .]]

>> Trigrams: 
[[-, derivable, ,], [derivable, ,,   ], [,,   , production], [  , production, ,], [production, ,,  ], [,,  , ,], [ , ,, B], [,, B, -], [B, -, derivable], [-, derivable, .]]

>> Noun Phrases are: 
[a production, B]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

No other variables are A-derivable. 


>> Tokens are: 
[variables, -, derivable, .] 

>> PoS Tags are: 
[('variables', 'NOUN'), ('-', 'PUNCT'), ('derivable', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('variables', 'nsubj'), ('-', 'punct'), ('derivable', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[variables, -], [-, derivable], [derivable, .]]

>> Trigrams: 
[[variables, -, derivable], [-, derivable, .]]

>> Noun Phrases are: 
[No other variables]

>> Named Entities are: 
[]


============================ Sentence 160 =============================

SA SB S-derivable={A,B} SA AB S-derivable={A,B} 


>> Tokens are: 
[SA, SB, S, -, derivable={A, ,, B, }, SA, AB, S, -, derivable={A, ,, B, }] 

>> PoS Tags are: 
[('S\uf0e0A', 'PROPN'), ('S\uf0e0B', 'PROPN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('derivable={A', 'PROPN'), (',', 'PUNCT'), ('B', 'NOUN'), ('}', 'PUNCT'), ('S\uf0e0A', 'PROPN'), ('A\uf0e0B', 'PROPN'), ('S', 'PROPN'), ('-', 'PUNCT'), ('derivable={A', 'PROPN'), (',', 'PUNCT'), ('B', 'NOUN'), ('}', 'PUNCT')] 

>> Dependency Tags are: 
[('S\uf0e0A', 'ROOT'), ('S\uf0e0B', 'compound'), ('S', 'compound'), ('-', 'punct'), ('derivable={A', 'npadvmod'), (',', 'punct'), ('B', 'npadvmod'), ('}', 'punct'), ('S\uf0e0A', 'npadvmod'), ('A\uf0e0B', 'compound'), ('S', 'compound'), ('-', 'punct'), ('derivable={A', 'npadvmod'), (',', 'punct'), ('B', 'npadvmod'), ('}', 'punct')]

>> Bigrams: 
[[SA, SB], [SB, S], [S, -], [-, derivable={A], [derivable={A, ,], [,, B], [B, }], [}, SA], [SA, AB], [AB, S], [S, -], [-, derivable={A], [derivable={A, ,], [,, B], [B, }]]

>> Trigrams: 
[[SA, SB, S], [SB, S, -], [S, -, derivable={A], [-, derivable={A, ,], [derivable={A, ,, B], [,, B, }], [B, }, SA], [}, SA, AB], [SA, AB, S], [AB, S, -], [S, -, derivable={A], [-, derivable={A, ,], [derivable={A, ,, B], [,, B, }]]

>> Noun Phrases are: 
[SA]

>> Named Entities are: 
[('S\uf0e0A', 'CARDINAL'), ('S\uf0e0A', 'CARDINAL'), ('A\uf0e0B S-derivable={A', 'WORK_OF_ART')]


============================ Sentence 161 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 162 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 163 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Unit Production & Elimination of Unit productions   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Unit, Production, &, Elimination, Unit, productions,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Unit', 'PROPN'), ('Production', 'PROPN'), ('&', 'CCONJ'), ('Elimination', 'PROPN'), ('Unit', 'PROPN'), ('productions', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('Unit', 'compound'), ('Production', 'conj'), ('&', 'cc'), ('Elimination', 'conj'), ('Unit', 'compound'), ('productions', 'pobj'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Unit], [Unit, Production], [Production, &], [&, Elimination], [Elimination, Unit], [Unit, productions], [productions,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Unit], [‹#›, Unit, Production], [Unit, Production, &], [Production, &, Elimination], [&, Elimination, Unit], [Elimination, Unit, productions], [Unit, productions,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Unit Production, Elimination, Unit productions]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('Unit Production & Elimination', 'ORG')]


============================ Sentence 164 =============================

A production of the form AB is termed as unit production. 


>> Tokens are: 
[production, form, AB, termed, unit, production, .] 

>> PoS Tags are: 
[('production', 'NOUN'), ('form', 'NOUN'), ('A\uf0e0B', 'PROPN'), ('termed', 'VERB'), ('unit', 'NOUN'), ('production', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('production', 'nsubjpass'), ('form', 'pobj'), ('A\uf0e0B', 'nsubjpass'), ('termed', 'ROOT'), ('unit', 'compound'), ('production', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[production, form], [form, AB], [AB, termed], [termed, unit], [unit, production], [production, .]]

>> Trigrams: 
[[production, form, AB], [form, AB, termed], [AB, termed, unit], [termed, unit, production], [unit, production, .]]

>> Noun Phrases are: 
[A production, the form, AB, unit production]

>> Named Entities are: 
[('A\uf0e0B', 'ORG')]


============================ Sentence 165 =============================

Where A & B are nonterminals. 


>> Tokens are: 
[&, B, nonterminals, .] 

>> PoS Tags are: 
[('&', 'CCONJ'), ('B', 'NOUN'), ('nonterminals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('&', 'cc'), ('B', 'conj'), ('nonterminals', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[&, B], [B, nonterminals], [nonterminals, .]]

>> Trigrams: 
[[&, B, nonterminals], [B, nonterminals, .]]

>> Noun Phrases are: 
[A, B]

>> Named Entities are: 
[]


============================ Sentence 166 =============================

Algorithm   


>> Tokens are: 
[Algorithm,  ] 

>> PoS Tags are: 
[('Algorithm', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Algorithm', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[Algorithm,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Algorithm]

>> Named Entities are: 
[]


============================ Sentence 167 =============================

Given a CFG  with no ^ productions, construct a CFG  having no unit production as follows. 


>> Tokens are: 
[Given, CFG,  , ^, productions, ,, construct, CFG,  , having, unit, production, follows, .] 

>> PoS Tags are: 
[('Given', 'VERB'), ('CFG', 'PROPN'), (' ', 'SPACE'), ('^', 'NOUN'), ('productions', 'NOUN'), (',', 'PUNCT'), ('construct', 'VERB'), ('CFG', 'PROPN'), (' ', 'SPACE'), ('having', 'VERB'), ('unit', 'NOUN'), ('production', 'NOUN'), ('follows', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Given', 'prep'), ('CFG', 'pobj'), (' ', 'nummod'), ('^', 'pobj'), ('productions', 'pobj'), (',', 'punct'), ('construct', 'ROOT'), ('CFG', 'dobj'), (' ', 'nummod'), ('having', 'advcl'), ('unit', 'compound'), ('production', 'dobj'), ('follows', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Given, CFG], [CFG,  ], [ , ^], [^, productions], [productions, ,], [,, construct], [construct, CFG], [CFG,  ], [ , having], [having, unit], [unit, production], [production, follows], [follows, .]]

>> Trigrams: 
[[Given, CFG,  ], [CFG,  , ^], [ , ^, productions], [^, productions, ,], [productions, ,, construct], [,, construct, CFG], [construct, CFG,  ], [CFG,  , having], [ , having, unit], [having, unit, production], [unit, production, follows], [production, follows, .]]

>> Noun Phrases are: 
[a CFG, no ^, productions, a CFG, no unit production]

>> Named Entities are: 
[]


============================ Sentence 168 =============================

Initialize P1 to be P. 


>> Tokens are: 
[Initialize, P1, P.] 

>> PoS Tags are: 
[('Initialize', 'PROPN'), ('P1', 'PROPN'), ('P.', 'PROPN')] 

>> Dependency Tags are: 
[('Initialize', 'compound'), ('P1', 'ROOT'), ('P.', 'attr')]

>> Bigrams: 
[[Initialize, P1], [P1, P.]]

>> Trigrams: 
[[Initialize, P1, P.]]

>> Noun Phrases are: 
[Initialize P1, P.]

>> Named Entities are: 
[]


============================ Sentence 169 =============================

For each A ∈ V ,finding the set of A derivable variable. 


>> Tokens are: 
[∈, V, ,, finding, set, derivable, variable, .] 

>> PoS Tags are: 
[('∈', 'PROPN'), ('V', 'NOUN'), (',', 'PUNCT'), ('finding', 'VERB'), ('set', 'NOUN'), ('derivable', 'ADJ'), ('variable', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('∈', 'compound'), ('V', 'pobj'), (',', 'punct'), ('finding', 'pcomp'), ('set', 'dobj'), ('derivable', 'amod'), ('variable', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[∈, V], [V, ,], [,, finding], [finding, set], [set, derivable], [derivable, variable], [variable, .]]

>> Trigrams: 
[[∈, V, ,], [V, ,, finding], [,, finding, set], [finding, set, derivable], [set, derivable, variable], [derivable, variable, .]]

>> Noun Phrases are: 
[each A ∈ V, the set, A derivable variable]

>> Named Entities are: 
[]


============================ Sentence 170 =============================

For every pair (A, B) such that B is A- derivable and every non unit production Bα, add the production Aα to P1 if it is not already present in P1. 


>> Tokens are: 
[pair, (, ,, B, ), B, A-, derivable, non, unit, production, Bα, ,, add, production, Aα, P1, present, P1, .] 

>> PoS Tags are: 
[('pair', 'NOUN'), ('(', 'PUNCT'), (',', 'PUNCT'), ('B', 'NOUN'), (')', 'PUNCT'), ('B', 'NOUN'), ('A-', 'ADV'), ('derivable', 'ADJ'), ('non', 'ADJ'), ('unit', 'NOUN'), ('production', 'NOUN'), ('B\uf0e0α', 'PROPN'), (',', 'PUNCT'), ('add', 'VERB'), ('production', 'NOUN'), ('A\uf0e0α', 'NOUN'), ('P1', 'PROPN'), ('present', 'ADJ'), ('P1', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('pair', 'pobj'), ('(', 'punct'), (',', 'punct'), ('B', 'appos'), (')', 'punct'), ('B', 'nsubj'), ('A-', 'npadvmod'), ('derivable', 'acomp'), ('non', 'amod'), ('unit', 'compound'), ('production', 'compound'), ('B\uf0e0α', 'conj'), (',', 'punct'), ('add', 'ROOT'), ('production', 'dobj'), ('A\uf0e0α', 'npadvmod'), ('P1', 'pobj'), ('present', 'acomp'), ('P1', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[pair, (], [(, ,], [,, B], [B, )], [), B], [B, A-], [A-, derivable], [derivable, non], [non, unit], [unit, production], [production, Bα], [Bα, ,], [,, add], [add, production], [production, Aα], [Aα, P1], [P1, present], [present, P1], [P1, .]]

>> Trigrams: 
[[pair, (, ,], [(, ,, B], [,, B, )], [B, ), B], [), B, A-], [B, A-, derivable], [A-, derivable, non], [derivable, non, unit], [non, unit, production], [unit, production, Bα], [production, Bα, ,], [Bα, ,, add], [,, add, production], [add, production, Aα], [production, Aα, P1], [Aα, P1, present], [P1, present, P1], [present, P1, .]]

>> Noun Phrases are: 
[every pair, (A, B, B, the production, P1, it, P1]

>> Named Entities are: 
[]


============================ Sentence 171 =============================

Delete all unit productions from P1. 


>> Tokens are: 
[Delete, unit, productions, P1, .] 

>> PoS Tags are: 
[('Delete', 'PROPN'), ('unit', 'NOUN'), ('productions', 'NOUN'), ('P1', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Delete', 'ROOT'), ('unit', 'compound'), ('productions', 'appos'), ('P1', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Delete, unit], [unit, productions], [productions, P1], [P1, .]]

>> Trigrams: 
[[Delete, unit, productions], [unit, productions, P1], [productions, P1, .]]

>> Noun Phrases are: 
[Delete, all unit productions, P1]

>> Named Entities are: 
[]


============================ Sentence 172 =============================

   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[   , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[   , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 173 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#›   Elimination of unit production SABA|BA|AA|AB|A|B A aA|a B bB|b Unit Productions are SA and SB  AaA|a BbB|b Removing unit productions  SABA|BA|AA|AB |aA|a |bB|b  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›,   , Elimination, unit, production, SABA|BA|AA|AB|A|B, A, aA|a, B, bB|b, Unit, Productions, SA, SB,  , AaA|a, BbB|b, Removing, unit, productions,  , SABA|BA|AA|AB, |aA|a, |bB|b,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'VERB'), ('  ', 'SPACE'), ('Elimination', 'PROPN'), ('unit', 'NOUN'), ('production', 'NOUN'), ('S\uf0e0ABA|BA|AA|AB|A|B', 'NOUN'), ('A\uf0e0', 'ADP'), ('aA|a', 'PROPN'), ('B\uf0e0', 'PROPN'), ('bB|b', 'PROPN'), ('Unit', 'PROPN'), ('Productions', 'PROPN'), ('S\uf0e0A', 'PROPN'), ('S\uf0e0B', 'PROPN'), (' ', 'SPACE'), ('A\uf0e0aA|a', 'PROPN'), ('B\uf0e0bB|b', 'PROPN'), ('Removing', 'VERB'), ('unit', 'NOUN'), ('productions', 'NOUN'), (' ', 'SPACE'), ('S\uf0e0ABA|BA|AA|AB', 'NOUN'), ('|aA|a', 'PROPN'), ('|bB|b', 'PROPN'), (' ', 'SPACE'), ('Unit', 'PROPN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'ROOT'), ('  ', 'compound'), ('Elimination', 'dobj'), ('unit', 'compound'), ('production', 'compound'), ('S\uf0e0ABA|BA|AA|AB|A|B', 'pobj'), ('A\uf0e0', 'prep'), ('aA|a', 'meta'), ('B\uf0e0', 'nmod'), ('bB|b', 'compound'), ('Unit', 'compound'), ('Productions', 'nsubj'), ('S\uf0e0A', 'attr'), ('S\uf0e0B', 'npadvmod'), (' ', 'appos'), ('A\uf0e0aA|a', 'compound'), ('B\uf0e0bB|b', 'appos'), ('Removing', 'conj'), ('unit', 'compound'), ('productions', 'dobj'), (' ', 'punct'), ('S\uf0e0ABA|BA|AA|AB', 'compound'), ('|aA|a', 'compound'), ('|bB|b', 'nmod'), (' ', 'compound'), ('Unit', 'dobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,   ], [  , Elimination], [Elimination, unit], [unit, production], [production, SABA|BA|AA|AB|A|B], [SABA|BA|AA|AB|A|B, A], [A, aA|a], [aA|a, B], [B, bB|b], [bB|b, Unit], [Unit, Productions], [Productions, SA], [SA, SB], [SB,  ], [ , AaA|a], [AaA|a, BbB|b], [BbB|b, Removing], [Removing, unit], [unit, productions], [productions,  ], [ , SABA|BA|AA|AB], [SABA|BA|AA|AB, |aA|a], [|aA|a, |bB|b], [|bB|b,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,   ], [‹#›,   , Elimination], [  , Elimination, unit], [Elimination, unit, production], [unit, production, SABA|BA|AA|AB|A|B], [production, SABA|BA|AA|AB|A|B, A], [SABA|BA|AA|AB|A|B, A, aA|a], [A, aA|a, B], [aA|a, B, bB|b], [B, bB|b, Unit], [bB|b, Unit, Productions], [Unit, Productions, SA], [Productions, SA, SB], [SA, SB,  ], [SB,  , AaA|a], [ , AaA|a, BbB|b], [AaA|a, BbB|b, Removing], [BbB|b, Removing, unit], [Removing, unit, productions], [unit, productions,  ], [productions,  , SABA|BA|AA|AB], [ , SABA|BA|AA|AB, |aA|a], [SABA|BA|AA|AB, |aA|a, |bB|b], [|aA|a, |bB|b,  ], [|bB|b,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology,   Elimination, unit production SABA|BA|AA|AB|A|B, B bB|b Unit Productions, SA, AaA|a BbB|b, unit productions, SABA|BA|AA|AB |aA|a |bB|b  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('aA|a B\uf0e0 bB|b', 'ORG'), ('Unit Productions', 'ORG'), ('S\uf0e0A', 'GPE'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 174 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› CFG to CNF    


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, CFG, CNF,   ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('CFG', 'conj'), ('CNF', 'compound'), ('  ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, CFG], [CFG, CNF], [CNF,   ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, CFG], [‹#›, CFG, CNF], [CFG, CNF,   ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› CFG]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('CNF', 'ORG')]


============================ Sentence 175 =============================

Unit 


>> Tokens are: 
[Unit] 

>> PoS Tags are: 
[('Unit', 'NOUN')] 

>> Dependency Tags are: 
[('Unit', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Unit]

>> Named Entities are: 
[]


============================ Sentence 176 =============================

– 


>> Tokens are: 
[–] 

>> PoS Tags are: 
[('–', 'PUNCT')] 

>> Dependency Tags are: 
[('–', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 177 =============================

3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('3', 'ROOT'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 178 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Chomsky Normal Form (CNF) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Chomsky, Normal, Form, (, CNF, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Chomsky', 'PROPN'), ('Normal', 'PROPN'), ('Form', 'PROPN'), ('(', 'PUNCT'), ('CNF', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Chomsky', 'compound'), ('Normal', 'compound'), ('Form', 'appos'), ('(', 'punct'), ('CNF', 'appos'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Chomsky], [Chomsky, Normal], [Normal, Form], [Form, (], [(, CNF], [CNF, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Chomsky], [‹#›, Chomsky, Normal], [Chomsky, Normal, Form], [Normal, Form, (], [Form, (, CNF], [(, CNF, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Chomsky Normal Form, (CNF]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Chomsky', 'PERSON'), ('CNF', 'ORG')]


============================ Sentence 179 =============================

A context free grammar is in Chomsky normal form (CNF) if every production is one of these two forms:   Where and  are nonterminal and  is terminal. 


>> Tokens are: 
[context, free, grammar, Chomsky, normal, form, (, CNF, ), production, forms, :,   ,  , nonterminal,  , terminal, .] 

>> PoS Tags are: 
[('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('Chomsky', 'PROPN'), ('normal', 'ADJ'), ('form', 'NOUN'), ('(', 'PUNCT'), ('CNF', 'PROPN'), (')', 'PUNCT'), ('production', 'NOUN'), ('forms', 'NOUN'), (':', 'PUNCT'), ('  ', 'SPACE'), (' ', 'SPACE'), ('nonterminal', 'ADJ'), (' ', 'SPACE'), ('terminal', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('context', 'npadvmod'), ('free', 'amod'), ('grammar', 'nsubj'), ('Chomsky', 'amod'), ('normal', 'amod'), ('form', 'pobj'), ('(', 'punct'), ('CNF', 'appos'), (')', 'punct'), ('production', 'nsubj'), ('forms', 'pobj'), (':', 'punct'), ('  ', 'appos'), (' ', 'nsubj'), ('nonterminal', 'acomp'), (' ', 'nsubj'), ('terminal', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[context, free], [free, grammar], [grammar, Chomsky], [Chomsky, normal], [normal, form], [form, (], [(, CNF], [CNF, )], [), production], [production, forms], [forms, :], [:,   ], [  ,  ], [ , nonterminal], [nonterminal,  ], [ , terminal], [terminal, .]]

>> Trigrams: 
[[context, free, grammar], [free, grammar, Chomsky], [grammar, Chomsky, normal], [Chomsky, normal, form], [normal, form, (], [form, (, CNF], [(, CNF, )], [CNF, ), production], [), production, forms], [production, forms, :], [forms, :,   ], [:,   ,  ], [  ,  , nonterminal], [ , nonterminal,  ], [nonterminal,  , terminal], [ , terminal, .]]

>> Noun Phrases are: 
[A context free grammar, Chomsky normal form, CNF, every production, these two forms]

>> Named Entities are: 
[('Chomsky', 'GPE'), ('CNF', 'ORG'), ('two', 'CARDINAL')]


============================ Sentence 180 =============================

  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nummod'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 181 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Converting CFG to CNF Steps to convert CFG to CNF Eliminate ˄-Productions. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Converting, CFG, CNF, Steps, convert, CFG, CNF, Eliminate, ˄-Productions, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Converting', 'PROPN'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('Steps', 'NOUN'), ('convert', 'VERB'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('Eliminate', 'PROPN'), ('˄-Productions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Converting', 'compound'), ('CFG', 'appos'), ('CNF', 'compound'), ('Steps', 'pobj'), ('convert', 'acl'), ('CFG', 'dobj'), ('CNF', 'compound'), ('Eliminate', 'compound'), ('˄-Productions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Converting], [Converting, CFG], [CFG, CNF], [CNF, Steps], [Steps, convert], [convert, CFG], [CFG, CNF], [CNF, Eliminate], [Eliminate, ˄-Productions], [˄-Productions, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Converting], [‹#›, Converting, CFG], [Converting, CFG, CNF], [CFG, CNF, Steps], [CNF, Steps, convert], [Steps, convert, CFG], [convert, CFG, CNF], [CFG, CNF, Eliminate], [CNF, Eliminate, ˄-Productions], [Eliminate, ˄-Productions, .]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Converting CFG, CNF Steps, CFG, CNF Eliminate ˄-Productions]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Converting', 'ORG'), ('CNF Steps', 'ORG'), ('CNF Eliminate', 'ORG')]


============================ Sentence 182 =============================

Eliminate Unit Productions. 


>> Tokens are: 
[Eliminate, Unit, Productions, .] 

>> PoS Tags are: 
[('Eliminate', 'VERB'), ('Unit', 'PROPN'), ('Productions', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Eliminate', 'ROOT'), ('Unit', 'compound'), ('Productions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Eliminate, Unit], [Unit, Productions], [Productions, .]]

>> Trigrams: 
[[Eliminate, Unit, Productions], [Unit, Productions, .]]

>> Noun Phrases are: 
[Unit Productions]

>> Named Entities are: 
[('Eliminate Unit Productions', 'ORG')]


============================ Sentence 183 =============================

Restricting the right side of productions to single terminal or string of two or more nonterminals. 


>> Tokens are: 
[Restricting, right, productions, single, terminal, string, nonterminals, .] 

>> PoS Tags are: 
[('Restricting', 'VERB'), ('right', 'ADJ'), ('productions', 'NOUN'), ('single', 'ADJ'), ('terminal', 'NOUN'), ('string', 'NOUN'), ('nonterminals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Restricting', 'ROOT'), ('right', 'amod'), ('productions', 'pobj'), ('single', 'amod'), ('terminal', 'pobj'), ('string', 'conj'), ('nonterminals', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Restricting, right], [right, productions], [productions, single], [single, terminal], [terminal, string], [string, nonterminals], [nonterminals, .]]

>> Trigrams: 
[[Restricting, right, productions], [right, productions, single], [productions, single, terminal], [single, terminal, string], [terminal, string, nonterminals], [string, nonterminals, .]]

>> Noun Phrases are: 
[the right side, productions, single terminal, string, two or more nonterminals]

>> Named Entities are: 
[('two', 'CARDINAL')]


============================ Sentence 184 =============================

Final step of CNF. 


>> Tokens are: 
[Final, step, CNF, .] 

>> PoS Tags are: 
[('Final', 'ADJ'), ('step', 'NOUN'), ('CNF', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Final', 'amod'), ('step', 'ROOT'), ('CNF', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Final, step], [step, CNF], [CNF, .]]

>> Trigrams: 
[[Final, step, CNF], [step, CNF, .]]

>> Noun Phrases are: 
[Final step, CNF]

>> Named Entities are: 
[('CNF', 'ORG')]


============================ Sentence 185 =============================

(shorten the string of NT to length 2)   


>> Tokens are: 
[(, shorten, string, NT, length, 2, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('shorten', 'VERB'), ('string', 'NOUN'), ('NT', 'PROPN'), ('length', 'NOUN'), ('2', 'NUM'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('shorten', 'ROOT'), ('string', 'dobj'), ('NT', 'pobj'), ('length', 'advcl'), ('2', 'dobj'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, shorten], [shorten, string], [string, NT], [NT, length], [length, 2], [2, )], [),  ]]

>> Trigrams: 
[[(, shorten, string], [shorten, string, NT], [string, NT, length], [NT, length, 2], [length, 2, )], [2, ),  ]]

>> Noun Phrases are: 
[the string, NT]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 186 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 187 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SAAC AaAb|˄ CaC|a Step 1: Elimination of ^ production     Step-2: Eliminate Unit Production    CaC|a   AC | C SAAC| AaAb| ab    


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Example, :, CFG, CNF, SAAC, AaAb|˄, CaC|a, Step, 1, :, Elimination, ^, production,     , Step-2, :, Eliminate, Unit, Production,    , CaC|a,   , AC, |, C, SAAC|, AaAb|, ab,   ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('S\uf0e0AAC', 'PUNCT'), ('A\uf0e0aAb|˄', 'PROPN'), ('C\uf0e0aC|a', 'NOUN'), ('Step', 'NOUN'), ('1', 'NUM'), (':', 'PUNCT'), ('Elimination', 'NOUN'), ('^', 'NOUN'), ('production', 'VERB'), ('    ', 'SPACE'), ('Step-2', 'ADJ'), (':', 'PUNCT'), ('Eliminate', 'PROPN'), ('Unit', 'NOUN'), ('Production', 'NOUN'), ('   ', 'SPACE'), ('C\uf0e0aC|a', 'NOUN'), ('  ', 'SPACE'), ('AC', 'PROPN'), ('|', 'NOUN'), ('C', 'PROPN'), ('S\uf0e0AAC|', 'PROPN'), ('A\uf0e0aAb|', 'NUM'), ('ab', 'ADP'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Example', 'appos'), (':', 'punct'), ('CFG', 'appos'), ('CNF', 'ccomp'), ('S\uf0e0AAC', 'punct'), ('A\uf0e0aAb|˄', 'dobj'), ('C\uf0e0aC|a', 'compound'), ('Step', 'pobj'), ('1', 'nummod'), (':', 'punct'), ('Elimination', 'nsubj'), ('^', 'pobj'), ('production', 'ROOT'), ('    ', 'nsubj'), ('Step-2', 'ccomp'), (':', 'punct'), ('Eliminate', 'compound'), ('Unit', 'compound'), ('Production', 'appos'), ('   ', 'dobj'), ('C\uf0e0aC|a', 'prep'), ('  ', 'dobj'), ('AC', 'compound'), ('|', 'appos'), ('C', 'dobj'), ('S\uf0e0AAC|', 'advcl'), ('A\uf0e0aAb|', 'dobj'), ('ab', 'prep'), ('  ', 'pobj')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Example], [Example, :], [:, CFG], [CFG, CNF], [CNF, SAAC], [SAAC, AaAb|˄], [AaAb|˄, CaC|a], [CaC|a, Step], [Step, 1], [1, :], [:, Elimination], [Elimination, ^], [^, production], [production,     ], [    , Step-2], [Step-2, :], [:, Eliminate], [Eliminate, Unit], [Unit, Production], [Production,    ], [   , CaC|a], [CaC|a,   ], [  , AC], [AC, |], [|, C], [C, SAAC|], [SAAC|, AaAb|], [AaAb|, ab], [ab,   ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Example], [‹#›, Example, :], [Example, :, CFG], [:, CFG, CNF], [CFG, CNF, SAAC], [CNF, SAAC, AaAb|˄], [SAAC, AaAb|˄, CaC|a], [AaAb|˄, CaC|a, Step], [CaC|a, Step, 1], [Step, 1, :], [1, :, Elimination], [:, Elimination, ^], [Elimination, ^, production], [^, production,     ], [production,     , Step-2], [    , Step-2, :], [Step-2, :, Eliminate], [:, Eliminate, Unit], [Eliminate, Unit, Production], [Unit, Production,    ], [Production,    , CaC|a], [   , CaC|a,   ], [CaC|a,   , AC], [  , AC, |], [AC, |, C], [|, C, SAAC|], [C, SAAC|, AaAb|], [SAAC|, AaAb|, ab], [AaAb|, ab,   ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Example, CFG, AaAb|˄, CaC|a Step, Elimination, ^, Eliminate Unit Production, AC |, C]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('CNF S\uf0e0AAC A\uf0e0aAb|˄ C\uf0e0aC|a', 'ORG'), ('1', 'CARDINAL')]


============================ Sentence 188 =============================

Eliminate A^   aC|a C SAAC|AC| AaAb|ab 


>> Tokens are: 
[Eliminate, A^,   , aC|a, C, SAAC|AC|, AaAb|ab] 

>> PoS Tags are: 
[('Eliminate', 'PROPN'), ('A\uf0e0^', 'PROPN'), ('  ', 'SPACE'), ('aC|a', 'PROPN'), ('C', 'NOUN'), ('S\uf0e0AAC|AC|', 'ADV'), ('A\uf0e0aAb|ab', 'PROPN')] 

>> Dependency Tags are: 
[('Eliminate', 'compound'), ('A\uf0e0^', 'ROOT'), ('  ', 'poss'), ('aC|a', 'compound'), ('C', 'appos'), ('S\uf0e0AAC|AC|', 'advmod'), ('A\uf0e0aAb|ab', 'npadvmod')]

>> Bigrams: 
[[Eliminate, A^], [A^,   ], [  , aC|a], [aC|a, C], [C, SAAC|AC|], [SAAC|AC|, AaAb|ab]]

>> Trigrams: 
[[Eliminate, A^,   ], [A^,   , aC|a], [  , aC|a, C], [aC|a, C, SAAC|AC|], [C, SAAC|AC|, AaAb|ab]]

>> Noun Phrases are: 
[Eliminate A^,   aC|a C]

>> Named Entities are: 
[('Eliminate A\uf0e0^', 'FAC')]


============================ Sentence 189 =============================

CaC|a    


>> Tokens are: 
[CaC|a,   ] 

>> PoS Tags are: 
[('C\uf0e0aC|a', 'NOUN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('C\uf0e0aC|a', 'ROOT'), ('  ', 'punct')]

>> Bigrams: 
[[CaC|a,   ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CaC|a]

>> Named Entities are: 
[]


============================ Sentence 190 =============================

Unit Production is SC  Step 3: Replace all mixed string with solid NT 


>> Tokens are: 
[Unit, Production, SC,  , Step, 3, :, Replace, mixed, string, solid, NT] 

>> PoS Tags are: 
[('Unit', 'PROPN'), ('Production', 'PROPN'), ('S\uf0e0C', 'PROPN'), (' ', 'SPACE'), ('Step', 'NOUN'), ('3', 'NUM'), (':', 'PUNCT'), ('Replace', 'VERB'), ('mixed', 'ADJ'), ('string', 'NOUN'), ('solid', 'ADJ'), ('NT', 'PROPN')] 

>> Dependency Tags are: 
[('Unit', 'compound'), ('Production', 'nsubj'), ('S\uf0e0C', 'nmod'), (' ', 'compound'), ('Step', 'attr'), ('3', 'nummod'), (':', 'punct'), ('Replace', 'appos'), ('mixed', 'amod'), ('string', 'dobj'), ('solid', 'amod'), ('NT', 'pobj')]

>> Bigrams: 
[[Unit, Production], [Production, SC], [SC,  ], [ , Step], [Step, 3], [3, :], [:, Replace], [Replace, mixed], [mixed, string], [string, solid], [solid, NT]]

>> Trigrams: 
[[Unit, Production, SC], [Production, SC,  ], [SC,  , Step], [ , Step, 3], [Step, 3, :], [3, :, Replace], [:, Replace, mixed], [Replace, mixed, string], [mixed, string, solid], [string, solid, NT]]

>> Noun Phrases are: 
[Unit Production, SC  Step, all mixed string, solid NT]

>> Named Entities are: 
[('S\uf0e0C', 'ORG'), ('3', 'CARDINAL')]


============================ Sentence 191 =============================

    Step-4: 


>> Tokens are: 
[    , Step-4, :] 

>> PoS Tags are: 
[('    ', 'SPACE'), ('Step-4', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('    ', 'nsubj'), ('Step-4', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[    , Step-4], [Step-4, :]]

>> Trigrams: 
[[    , Step-4, :]]

>> Noun Phrases are: 
[    Step-4]

>> Named Entities are: 
[('Step-4', 'ORG')]


============================ Sentence 192 =============================

Shorten the string of NT to length 2 	SAX1		X1AC 


>> Tokens are: 
[Shorten, string, NT, length, 2, 	, SAX1, 		, X1AC] 

>> PoS Tags are: 
[('Shorten', 'VERB'), ('string', 'NOUN'), ('NT', 'PROPN'), ('length', 'VERB'), ('2', 'NUM'), ('\t', 'SPACE'), ('S\uf0e0AX1', 'PROPN'), ('\t\t', 'SPACE'), ('X1\uf0e0AC', 'PROPN')] 

>> Dependency Tags are: 
[('Shorten', 'ROOT'), ('string', 'dobj'), ('NT', 'pobj'), ('length', 'advcl'), ('2', 'nummod'), ('\t', 'amod'), ('S\uf0e0AX1', 'dobj'), ('\t\t', 'prep'), ('X1\uf0e0AC', 'punct')]

>> Bigrams: 
[[Shorten, string], [string, NT], [NT, length], [length, 2], [2, 	], [	, SAX1], [SAX1, 		], [		, X1AC]]

>> Trigrams: 
[[Shorten, string, NT], [string, NT, length], [NT, length, 2], [length, 2, 	], [2, 	, SAX1], [	, SAX1, 		], [SAX1, 		, X1AC]]

>> Noun Phrases are: 
[the string, NT, 2 	SAX1]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 193 =============================

	SAC|PC|a 	APY1		Y1AQ 


>> Tokens are: 
[	, SAC|PC|a, 	, APY1, 		, Y1AQ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('S\uf0e0AC|PC|a', 'PROPN'), ('\t', 'SPACE'), ('A\uf0e0PY1', 'PROPN'), ('\t\t', 'SPACE'), ('Y1\uf0e0AQ', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('S\uf0e0AC|PC|a', 'compound'), ('\t', 'compound'), ('A\uf0e0PY1', 'nsubj'), ('\t\t', 'ROOT'), ('Y1\uf0e0AQ', 'punct')]

>> Bigrams: 
[[	, SAC|PC|a], [SAC|PC|a, 	], [	, APY1], [APY1, 		], [		, Y1AQ]]

>> Trigrams: 
[[	, SAC|PC|a, 	], [SAC|PC|a, 	, APY1], [	, APY1, 		], [APY1, 		, Y1AQ]]

>> Noun Phrases are: 
[	SAC|PC|a 	APY1]

>> Named Entities are: 
[('S\uf0e0AC|PC|a', 'PERSON')]


============================ Sentence 194 =============================

	APQ 	CPC|a 	Pa 	Qb  SAAC|AC| aC |a Pa Qb PC A PAQ|PQ aAb|ab C   


>> Tokens are: 
[	, APQ, 	, CPC|a, 	, Pa, 	, Qb,  , SAAC|AC|, aC, |a, Pa, Qb, PC, A, PAQ|PQ, aAb|ab, C,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('A\uf0e0PQ', 'PROPN'), ('\t', 'SPACE'), ('C\uf0e0PC|a', 'NOUN'), ('\t', 'SPACE'), ('P\uf0e0a', 'NOUN'), ('\t', 'SPACE'), ('Q\uf0e0b', 'PROPN'), (' ', 'SPACE'), ('S\uf0e0AAC|AC|', 'ADV'), ('aC', 'PROPN'), ('|a', 'NOUN'), ('P\uf0e0a', 'PROPN'), ('Q\uf0e0b', 'NOUN'), ('PC', 'NOUN'), ('A\uf0e0', 'ADV'), ('PAQ|PQ', 'PROPN'), ('aAb|ab', 'PROPN'), ('C\uf0e0', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('A\uf0e0PQ', 'compound'), ('\t', 'compound'), ('C\uf0e0PC|a', 'nmod'), ('\t', 'compound'), ('P\uf0e0a', 'appos'), ('\t', 'compound'), ('Q\uf0e0b', 'dobj'), (' ', 'appos'), ('S\uf0e0AAC|AC|', 'advmod'), ('aC', 'appos'), ('|a', 'compound'), ('P\uf0e0a', 'appos'), ('Q\uf0e0b', 'compound'), ('PC', 'compound'), ('A\uf0e0', 'appos'), ('PAQ|PQ', 'ROOT'), ('aAb|ab', 'compound'), ('C\uf0e0', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[	, APQ], [APQ, 	], [	, CPC|a], [CPC|a, 	], [	, Pa], [Pa, 	], [	, Qb], [Qb,  ], [ , SAAC|AC|], [SAAC|AC|, aC], [aC, |a], [|a, Pa], [Pa, Qb], [Qb, PC], [PC, A], [A, PAQ|PQ], [PAQ|PQ, aAb|ab], [aAb|ab, C], [C,  ]]

>> Trigrams: 
[[	, APQ, 	], [APQ, 	, CPC|a], [	, CPC|a, 	], [CPC|a, 	, Pa], [	, Pa, 	], [Pa, 	, Qb], [	, Qb,  ], [Qb,  , SAAC|AC|], [ , SAAC|AC|, aC], [SAAC|AC|, aC, |a], [aC, |a, Pa], [|a, Pa, Qb], [Pa, Qb, PC], [Qb, PC, A], [PC, A, PAQ|PQ], [A, PAQ|PQ, aAb|ab], [PAQ|PQ, aAb|ab, C], [aAb|ab, C,  ]]

>> Noun Phrases are: 
[	Pa, 	Qb, aC, |a Pa, aAb|ab C]

>> Named Entities are: 
[('A\uf0e0PQ', 'PERSON'), ('PAQ|PQ', 'ORG')]


============================ Sentence 195 =============================

aC|a PC|a Chomsky Normal Form  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[aC|a, PC|a, Chomsky, Normal, Form,  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('aC|a', 'PROPN'), ('PC|a', 'PROPN'), ('Chomsky', 'PROPN'), ('Normal', 'PROPN'), ('Form', 'PROPN'), (' ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('aC|a', 'compound'), ('PC|a', 'compound'), ('Chomsky', 'compound'), ('Normal', 'nmod'), ('Form', 'nmod'), (' ', 'nummod'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[aC|a, PC|a], [PC|a, Chomsky], [Chomsky, Normal], [Normal, Form], [Form,  ], [ , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[aC|a, PC|a, Chomsky], [PC|a, Chomsky, Normal], [Chomsky, Normal, Form], [Normal, Form,  ], [Form,  , Unit], [ , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[aC|a PC|a Chomsky Normal Form  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 196 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SaAbB AAb|b BBa|a Step 1 and 2 are not required as there is no ^ and unit productions Step-3: 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Example, :, CFG, CNF, SaAbB, AAb|b, BBa|a, Step, 1, 2, required, ^, unit, productions, Step-3, :] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('S\uf0e0aAbB', 'NOUN'), ('A\uf0e0Ab|b', 'NOUN'), ('B\uf0e0Ba|a', 'NOUN'), ('Step', 'PROPN'), ('1', 'NUM'), ('2', 'NUM'), ('required', 'VERB'), ('^', 'NOUN'), ('unit', 'NOUN'), ('productions', 'NOUN'), ('Step-3', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubjpass'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Example', 'appos'), (':', 'punct'), ('CFG', 'appos'), ('CNF', 'compound'), ('S\uf0e0aAbB', 'compound'), ('A\uf0e0Ab|b', 'compound'), ('B\uf0e0Ba|a', 'pobj'), ('Step', 'appos'), ('1', 'nummod'), ('2', 'conj'), ('required', 'ROOT'), ('^', 'attr'), ('unit', 'compound'), ('productions', 'conj'), ('Step-3', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Example], [Example, :], [:, CFG], [CFG, CNF], [CNF, SaAbB], [SaAbB, AAb|b], [AAb|b, BBa|a], [BBa|a, Step], [Step, 1], [1, 2], [2, required], [required, ^], [^, unit], [unit, productions], [productions, Step-3], [Step-3, :]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Example], [‹#›, Example, :], [Example, :, CFG], [:, CFG, CNF], [CFG, CNF, SaAbB], [CNF, SaAbB, AAb|b], [SaAbB, AAb|b, BBa|a], [AAb|b, BBa|a, Step], [BBa|a, Step, 1], [Step, 1, 2], [1, 2, required], [2, required, ^], [required, ^, unit], [^, unit, productions], [unit, productions, Step-3], [productions, Step-3, :]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Example, CFG, CNF SaAbB AAb|b BBa|a, Step, no ^, unit productions, Step-3]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('CNF S\uf0e0aAbB A\uf0e0Ab|b B\uf0e0Ba|a', 'ORG'), ('1', 'CARDINAL'), ('2', 'CARDINAL')]


============================ Sentence 197 =============================

Replace all mixed string with solid NT SPAQB AAQ|b BBP|a Pa Qb Step-4 : final step of CNF 


>> Tokens are: 
[Replace, mixed, string, solid, NT, SPAQB, AAQ|b, BBP|a, Pa, Qb, Step-4, :, final, step, CNF] 

>> PoS Tags are: 
[('Replace', 'VERB'), ('mixed', 'ADJ'), ('string', 'NOUN'), ('solid', 'ADJ'), ('NT', 'PROPN'), ('S\uf0e0PAQB', 'NOUN'), ('A\uf0e0AQ|b', 'NOUN'), ('B\uf0e0BP|a', 'ADV'), ('P\uf0e0a', 'VERB'), ('Q\uf0e0b', 'PROPN'), ('Step-4', 'NOUN'), (':', 'PUNCT'), ('final', 'ADJ'), ('step', 'NOUN'), ('CNF', 'PROPN')] 

>> Dependency Tags are: 
[('Replace', 'nsubj'), ('mixed', 'amod'), ('string', 'dobj'), ('solid', 'amod'), ('NT', 'compound'), ('S\uf0e0PAQB', 'compound'), ('A\uf0e0AQ|b', 'pobj'), ('B\uf0e0BP|a', 'advmod'), ('P\uf0e0a', 'ROOT'), ('Q\uf0e0b', 'compound'), ('Step-4', 'dobj'), (':', 'punct'), ('final', 'amod'), ('step', 'appos'), ('CNF', 'pobj')]

>> Bigrams: 
[[Replace, mixed], [mixed, string], [string, solid], [solid, NT], [NT, SPAQB], [SPAQB, AAQ|b], [AAQ|b, BBP|a], [BBP|a, Pa], [Pa, Qb], [Qb, Step-4], [Step-4, :], [:, final], [final, step], [step, CNF]]

>> Trigrams: 
[[Replace, mixed, string], [mixed, string, solid], [string, solid, NT], [solid, NT, SPAQB], [NT, SPAQB, AAQ|b], [SPAQB, AAQ|b, BBP|a], [AAQ|b, BBP|a, Pa], [BBP|a, Pa, Qb], [Pa, Qb, Step-4], [Qb, Step-4, :], [Step-4, :, final], [:, final, step], [final, step, CNF]]

>> Noun Phrases are: 
[all mixed string, solid NT SPAQB AAQ|b, Qb Step-4, final step, CNF]

>> Named Entities are: 
[('CNF', 'ORG')]


============================ Sentence 198 =============================

SPT1 T1AT2		  


>> Tokens are: 
[SPT1, T1AT2, 		 ] 

>> PoS Tags are: 
[('S\uf0e0PT1', 'PROPN'), ('T1\uf0e0AT2', 'VERB'), ('\t\t ', 'SPACE')] 

>> Dependency Tags are: 
[('S\uf0e0PT1', 'nsubj'), ('T1\uf0e0AT2', 'ROOT'), ('\t\t ', 'dobj')]

>> Bigrams: 
[[SPT1, T1AT2], [T1AT2, 		 ]]

>> Trigrams: 
[[SPT1, T1AT2, 		 ]]

>> Noun Phrases are: 
[SPT1]

>> Named Entities are: 
[]


============================ Sentence 199 =============================

T2QB AAQ|b BBP|a Pa Qb   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[T2QB, AAQ|b, BBP|a, Pa, Qb,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('T2\uf0e0QB', 'NOUN'), ('A\uf0e0AQ|b', 'NOUN'), ('B\uf0e0BP|a', 'NOUN'), ('P\uf0e0a', 'VERB'), ('Q\uf0e0b', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('T2\uf0e0QB', 'compound'), ('A\uf0e0AQ|b', 'compound'), ('B\uf0e0BP|a', 'nsubj'), ('P\uf0e0a', 'ROOT'), ('Q\uf0e0b', 'nmod'), ('  ', 'compound'), ('Unit', 'dobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[T2QB, AAQ|b], [AAQ|b, BBP|a], [BBP|a, Pa], [Pa, Qb], [Qb,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[T2QB, AAQ|b, BBP|a], [AAQ|b, BBP|a, Pa], [BBP|a, Pa, Qb], [Pa, Qb,   ], [Qb,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[T2QB AAQ|b BBP|a, Qb   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('A\uf0e0AQ|b B\uf0e0BP|a', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 200 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SAA AB|BB BabB|b|bb Step 1 is not required as there is no ^ productions Step-2: Eliminate Unit Production: SAA A abB|b|bb|BB BabB|b|bb Step-3: 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Example, :, CFG, CNF, SAA, AB|BB, BabB|b|bb, Step, 1, required, ^, productions, Step-2, :, Eliminate, Unit, Production, :, SAA, A, abB|b|bb|BB, BabB|b|bb, Step-3, :] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('S\uf0e0AA', 'VERB'), ('A\uf0e0B|BB', 'ADP'), ('B\uf0e0abB|b|bb', 'PROPN'), ('Step', 'PROPN'), ('1', 'NUM'), ('required', 'VERB'), ('^', 'NOUN'), ('productions', 'NOUN'), ('Step-2', 'ADJ'), (':', 'PUNCT'), ('Eliminate', 'PROPN'), ('Unit', 'PROPN'), ('Production', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0AA', 'VERB'), ('A\uf0e0', 'ADV'), ('abB|b|bb|BB', 'VERB'), ('B\uf0e0abB|b|bb', 'DET'), ('Step-3', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Example', 'appos'), (':', 'punct'), ('CFG', 'appos'), ('CNF', 'pobj'), ('S\uf0e0AA', 'ccomp'), ('A\uf0e0B|BB', 'prep'), ('B\uf0e0abB|b|bb', 'nummod'), ('Step', 'pobj'), ('1', 'nummod'), ('required', 'ccomp'), ('^', 'attr'), ('productions', 'nsubj'), ('Step-2', 'ccomp'), (':', 'punct'), ('Eliminate', 'compound'), ('Unit', 'compound'), ('Production', 'appos'), (':', 'punct'), ('S\uf0e0AA', 'ROOT'), ('A\uf0e0', 'advmod'), ('abB|b|bb|BB', 'advcl'), ('B\uf0e0abB|b|bb', 'compound'), ('Step-3', 'attr'), (':', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Example], [Example, :], [:, CFG], [CFG, CNF], [CNF, SAA], [SAA, AB|BB], [AB|BB, BabB|b|bb], [BabB|b|bb, Step], [Step, 1], [1, required], [required, ^], [^, productions], [productions, Step-2], [Step-2, :], [:, Eliminate], [Eliminate, Unit], [Unit, Production], [Production, :], [:, SAA], [SAA, A], [A, abB|b|bb|BB], [abB|b|bb|BB, BabB|b|bb], [BabB|b|bb, Step-3], [Step-3, :]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Example], [‹#›, Example, :], [Example, :, CFG], [:, CFG, CNF], [CFG, CNF, SAA], [CNF, SAA, AB|BB], [SAA, AB|BB, BabB|b|bb], [AB|BB, BabB|b|bb, Step], [BabB|b|bb, Step, 1], [Step, 1, required], [1, required, ^], [required, ^, productions], [^, productions, Step-2], [productions, Step-2, :], [Step-2, :, Eliminate], [:, Eliminate, Unit], [Eliminate, Unit, Production], [Unit, Production, :], [Production, :, SAA], [:, SAA, A], [SAA, A, abB|b|bb|BB], [A, abB|b|bb|BB, BabB|b|bb], [abB|b|bb|BB, BabB|b|bb, Step-3], [BabB|b|bb, Step-3, :]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Example, CFG, CNF, BabB|b|bb Step, no ^, productions, Eliminate Unit Production, BabB|b|bb Step-3]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('CFG', 'ORG'), ('CNF S\uf0e0AA', 'ORG'), ('1', 'CARDINAL'), ('Step-2', 'ORG'), ('B\uf0e0abB|b|bb', 'ORG')]


============================ Sentence 201 =============================

Replace all mixed string with solid NT: SAA A PQB|b|QQ|BB B PQB|b|QQ  Pa Qb  Step-4 : 


>> Tokens are: 
[Replace, mixed, string, solid, NT, :, SAA, A, PQB|b|QQ|BB, B, PQB|b|QQ,  , Pa, Qb,  , Step-4, :] 

>> PoS Tags are: 
[('Replace', 'VERB'), ('mixed', 'ADJ'), ('string', 'NOUN'), ('solid', 'ADJ'), ('NT', 'PROPN'), (':', 'PUNCT'), ('S\uf0e0AA', 'VERB'), ('A\uf0e0', 'ADV'), ('PQB|b|QQ|BB', 'ADJ'), ('B\uf0e0', 'ADJ'), ('PQB|b|QQ', 'PROPN'), (' ', 'SPACE'), ('P\uf0e0a', 'PROPN'), ('Q\uf0e0b', 'PROPN'), (' ', 'SPACE'), ('Step-4', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Replace', 'nsubj'), ('mixed', 'amod'), ('string', 'dobj'), ('solid', 'amod'), ('NT', 'pobj'), (':', 'punct'), ('S\uf0e0AA', 'ROOT'), ('A\uf0e0', 'advmod'), ('PQB|b|QQ|BB', 'amod'), ('B\uf0e0', 'nmod'), ('PQB|b|QQ', 'amod'), (' ', 'compound'), ('P\uf0e0a', 'npadvmod'), ('Q\uf0e0b', 'nmod'), (' ', 'nummod'), ('Step-4', 'ccomp'), (':', 'punct')]

>> Bigrams: 
[[Replace, mixed], [mixed, string], [string, solid], [solid, NT], [NT, :], [:, SAA], [SAA, A], [A, PQB|b|QQ|BB], [PQB|b|QQ|BB, B], [B, PQB|b|QQ], [PQB|b|QQ,  ], [ , Pa], [Pa, Qb], [Qb,  ], [ , Step-4], [Step-4, :]]

>> Trigrams: 
[[Replace, mixed, string], [mixed, string, solid], [string, solid, NT], [solid, NT, :], [NT, :, SAA], [:, SAA, A], [SAA, A, PQB|b|QQ|BB], [A, PQB|b|QQ|BB, B], [PQB|b|QQ|BB, B, PQB|b|QQ], [B, PQB|b|QQ,  ], [PQB|b|QQ,  , Pa], [ , Pa, Qb], [Pa, Qb,  ], [Qb,  , Step-4], [ , Step-4, :]]

>> Noun Phrases are: 
[all mixed string, solid NT]

>> Named Entities are: 
[('PQB|b|QQ', 'ORG'), ('Step-4', 'ORG')]


============================ Sentence 202 =============================

Shorten the string of NT to length 2 SAA A PT1|b|QQ|BB		T1QB B PV1|b|QQ 		V1QB Pa Qb   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Shorten, string, NT, length, 2, SAA, A, PT1|b|QQ|BB, 		, T1QB, B, PV1|b|QQ, 		, V1QB, Pa, Qb,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Shorten', 'VERB'), ('string', 'NOUN'), ('NT', 'PROPN'), ('length', 'VERB'), ('2', 'NUM'), ('S\uf0e0AA', 'VERB'), ('A\uf0e0', 'ADV'), ('PT1|b|QQ|BB', 'PROPN'), ('\t\t', 'SPACE'), ('T1\uf0e0QB', 'PROPN'), ('B\uf0e0', 'PROPN'), ('PV1|b|QQ', 'PROPN'), ('\t\t', 'SPACE'), ('V1\uf0e0QB', 'NOUN'), ('P\uf0e0a', 'PROPN'), ('Q\uf0e0b', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Shorten', 'csubj'), ('string', 'dobj'), ('NT', 'pobj'), ('length', 'advcl'), ('2', 'nummod'), ('S\uf0e0AA', 'ROOT'), ('A\uf0e0', 'advmod'), ('PT1|b|QQ|BB', 'npadvmod'), ('\t\t', 'compound'), ('T1\uf0e0QB', 'nmod'), ('B\uf0e0', 'compound'), ('PV1|b|QQ', 'appos'), ('\t\t', 'prep'), ('V1\uf0e0QB', 'compound'), ('P\uf0e0a', 'pobj'), ('Q\uf0e0b', 'compound'), ('  ', 'compound'), ('Unit', 'npadvmod'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Shorten, string], [string, NT], [NT, length], [length, 2], [2, SAA], [SAA, A], [A, PT1|b|QQ|BB], [PT1|b|QQ|BB, 		], [		, T1QB], [T1QB, B], [B, PV1|b|QQ], [PV1|b|QQ, 		], [		, V1QB], [V1QB, Pa], [Pa, Qb], [Qb,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Shorten, string, NT], [string, NT, length], [NT, length, 2], [length, 2, SAA], [2, SAA, A], [SAA, A, PT1|b|QQ|BB], [A, PT1|b|QQ|BB, 		], [PT1|b|QQ|BB, 		, T1QB], [		, T1QB, B], [T1QB, B, PV1|b|QQ], [B, PV1|b|QQ, 		], [PV1|b|QQ, 		, V1QB], [		, V1QB, Pa], [V1QB, Pa, Qb], [Pa, Qb,   ], [Qb,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[the string, NT, 		T1QB B PV1|b|QQ, V1QB Pa, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('2', 'CARDINAL'), ('PT1|b|QQ|BB', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 203 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Example: CFG to CNF SASB|^ AaAS|a BSbS|A|bb Step-1: Eliminate ˄-Production: SASB|AB AaAS|a|aA BSbS|A|bb|bS|Sb|b Step-2: Eliminate Unit Production: SASB|AB AaAS|a|aA BSbS|aAS|a|aA|bb|bS|Sb|b Step-3: 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Example, :, CFG, CNF, SASB|^, AaAS|a, BSbS|A|bb, Step-1, :, Eliminate, ˄-Production, :, SASB|AB, AaAS|a|aA, BSbS|A|bb|bS|Sb|b, Step-2, :, Eliminate, Unit, Production, :, SASB|AB, AaAS|a|aA, BSbS|aAS|a|aA|bb|bS|Sb|b, Step-3, :] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Example', 'NOUN'), (':', 'PUNCT'), ('CFG', 'PROPN'), ('CNF', 'PROPN'), ('S\uf0e0ASB|^', 'PROPN'), ('A\uf0e0aAS|a', 'PROPN'), ('B\uf0e0SbS|A|bb', 'PROPN'), ('Step-1', 'NOUN'), (':', 'PUNCT'), ('Eliminate', 'VERB'), ('˄-Production', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0ASB|AB', 'NOUN'), ('A\uf0e0aAS|a|aA', 'NUM'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'PROPN'), ('Step-2', 'NOUN'), (':', 'PUNCT'), ('Eliminate', 'PROPN'), ('Unit', 'NOUN'), ('Production', 'NOUN'), (':', 'PUNCT'), ('S\uf0e0ASB|AB', 'NOUN'), ('A\uf0e0aAS|a|aA', 'NUM'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'PROPN'), ('Step-3', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nsubj'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Example', 'appos'), (':', 'punct'), ('CFG', 'appos'), ('CNF', 'compound'), ('S\uf0e0ASB|^', 'compound'), ('A\uf0e0aAS|a', 'compound'), ('B\uf0e0SbS|A|bb', 'compound'), ('Step-1', 'pobj'), (':', 'punct'), ('Eliminate', 'ccomp'), ('˄-Production', 'dobj'), (':', 'punct'), ('S\uf0e0ASB|AB', 'compound'), ('A\uf0e0aAS|a|aA', 'nummod'), ('B\uf0e0SbS|A|bb|bS|Sb|b', 'compound'), ('Step-2', 'ROOT'), (':', 'punct'), ('Eliminate', 'compound'), ('Unit', 'compound'), ('Production', 'appos'), (':', 'punct'), ('S\uf0e0ASB|AB', 'compound'), ('A\uf0e0aAS|a|aA', 'compound'), ('B\uf0e0SbS|aAS|a|aA|bb|bS|Sb|b', 'compound'), ('Step-3', 'appos'), (':', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Example], [Example, :], [:, CFG], [CFG, CNF], [CNF, SASB|^], [SASB|^, AaAS|a], [AaAS|a, BSbS|A|bb], [BSbS|A|bb, Step-1], [Step-1, :], [:, Eliminate], [Eliminate, ˄-Production], [˄-Production, :], [:, SASB|AB], [SASB|AB, AaAS|a|aA], [AaAS|a|aA, BSbS|A|bb|bS|Sb|b], [BSbS|A|bb|bS|Sb|b, Step-2], [Step-2, :], [:, Eliminate], [Eliminate, Unit], [Unit, Production], [Production, :], [:, SASB|AB], [SASB|AB, AaAS|a|aA], [AaAS|a|aA, BSbS|aAS|a|aA|bb|bS|Sb|b], [BSbS|aAS|a|aA|bb|bS|Sb|b, Step-3], [Step-3, :]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Example], [‹#›, Example, :], [Example, :, CFG], [:, CFG, CNF], [CFG, CNF, SASB|^], [CNF, SASB|^, AaAS|a], [SASB|^, AaAS|a, BSbS|A|bb], [AaAS|a, BSbS|A|bb, Step-1], [BSbS|A|bb, Step-1, :], [Step-1, :, Eliminate], [:, Eliminate, ˄-Production], [Eliminate, ˄-Production, :], [˄-Production, :, SASB|AB], [:, SASB|AB, AaAS|a|aA], [SASB|AB, AaAS|a|aA, BSbS|A|bb|bS|Sb|b], [AaAS|a|aA, BSbS|A|bb|bS|Sb|b, Step-2], [BSbS|A|bb|bS|Sb|b, Step-2, :], [Step-2, :, Eliminate], [:, Eliminate, Unit], [Eliminate, Unit, Production], [Unit, Production, :], [Production, :, SASB|AB], [:, SASB|AB, AaAS|a|aA], [SASB|AB, AaAS|a|aA, BSbS|aAS|a|aA|bb|bS|Sb|b], [AaAS|a|aA, BSbS|aAS|a|aA|bb|bS|Sb|b, Step-3], [BSbS|aAS|a|aA|bb|bS|Sb|b, Step-3, :]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Example, CFG, CNF SASB|^ AaAS|a BSbS|A|bb Step-1, ˄-Production, Eliminate Unit Production, SASB|AB AaAS|a|aA BSbS|aAS|a|aA|bb|bS|Sb|b Step-3]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('CNF', 'ORG')]


============================ Sentence 204 =============================

Replace all mixed string with solid NT: SASB|AB APAS|a|PA BSQS|PAS|a|PA|QQ|QS|SQ|b Pa Qb Step-4 : 


>> Tokens are: 
[Replace, mixed, string, solid, NT, :, SASB|AB, APAS|a|PA, BSQS|PAS|a|PA|QQ|QS|SQ|b, Pa, Qb, Step-4, :] 

>> PoS Tags are: 
[('Replace', 'VERB'), ('mixed', 'ADJ'), ('string', 'NOUN'), ('solid', 'ADJ'), ('NT', 'PROPN'), (':', 'PUNCT'), ('S\uf0e0ASB|AB', 'INTJ'), ('A\uf0e0PAS|a|PA', 'DET'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'PROPN'), ('P\uf0e0a', 'NOUN'), ('Q\uf0e0b', 'PROPN'), ('Step-4', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Replace', 'nsubj'), ('mixed', 'amod'), ('string', 'dobj'), ('solid', 'amod'), ('NT', 'pobj'), (':', 'punct'), ('S\uf0e0ASB|AB', 'appos'), ('A\uf0e0PAS|a|PA', 'det'), ('B\uf0e0SQS|PAS|a|PA|QQ|QS|SQ|b', 'compound'), ('P\uf0e0a', 'appos'), ('Q\uf0e0b', 'compound'), ('Step-4', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[Replace, mixed], [mixed, string], [string, solid], [solid, NT], [NT, :], [:, SASB|AB], [SASB|AB, APAS|a|PA], [APAS|a|PA, BSQS|PAS|a|PA|QQ|QS|SQ|b], [BSQS|PAS|a|PA|QQ|QS|SQ|b, Pa], [Pa, Qb], [Qb, Step-4], [Step-4, :]]

>> Trigrams: 
[[Replace, mixed, string], [mixed, string, solid], [string, solid, NT], [solid, NT, :], [NT, :, SASB|AB], [:, SASB|AB, APAS|a|PA], [SASB|AB, APAS|a|PA, BSQS|PAS|a|PA|QQ|QS|SQ|b], [APAS|a|PA, BSQS|PAS|a|PA|QQ|QS|SQ|b, Pa], [BSQS|PAS|a|PA|QQ|QS|SQ|b, Pa, Qb], [Pa, Qb, Step-4], [Qb, Step-4, :]]

>> Noun Phrases are: 
[all mixed string, solid NT, APAS|a|PA BSQS|PAS|a|PA|QQ|QS|SQ|b Pa]

>> Named Entities are: 
[]


============================ Sentence 205 =============================

Shorten the string of NT to length 2 SAB|AT1 


>> Tokens are: 
[Shorten, string, NT, length, 2, SAB|AT1] 

>> PoS Tags are: 
[('Shorten', 'VERB'), ('string', 'NOUN'), ('NT', 'PROPN'), ('length', 'VERB'), ('2', 'NUM'), ('S\uf0e0AB|AT1', 'PROPN')] 

>> Dependency Tags are: 
[('Shorten', 'ROOT'), ('string', 'dobj'), ('NT', 'pobj'), ('length', 'advcl'), ('2', 'dobj'), ('S\uf0e0AB|AT1', 'punct')]

>> Bigrams: 
[[Shorten, string], [string, NT], [NT, length], [length, 2], [2, SAB|AT1]]

>> Trigrams: 
[[Shorten, string, NT], [string, NT, length], [NT, length, 2], [length, 2, SAB|AT1]]

>> Noun Phrases are: 
[the string, NT]

>> Named Entities are: 
[('2', 'CARDINAL')]


============================ Sentence 206 =============================

	T1SB Aa|PA|PU1	U1AS B SV1|PV2|a|PA|QQ|QS|SQ|b V1QS	V2AS Pa Qb   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[	, T1SB, Aa|PA|PU1, 	, U1AS, B, SV1|PV2|a|PA|QQ|QS|SQ|b, V1QS, 	, V2AS, Pa, Qb,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('T1\uf0e0SB', 'NOUN'), ('A\uf0e0a|PA|PU1', 'PROPN'), ('\t', 'SPACE'), ('U1\uf0e0AS', 'PROPN'), ('B\uf0e0', 'PROPN'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'PROPN'), ('V1\uf0e0QS', 'X'), ('\t', 'SPACE'), ('V2\uf0e0AS', 'PROPN'), ('P\uf0e0a', 'VERB'), ('Q\uf0e0b', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('T1\uf0e0SB', 'compound'), ('A\uf0e0a|PA|PU1', 'compound'), ('\t', 'nsubj'), ('U1\uf0e0AS', 'dep'), ('B\uf0e0', 'compound'), ('SV1|PV2|a|PA|QQ|QS|SQ|b', 'appos'), ('V1\uf0e0QS', 'dep'), ('\t', 'compound'), ('V2\uf0e0AS', 'nsubj'), ('P\uf0e0a', 'ROOT'), ('Q\uf0e0b', 'dobj'), ('  ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'dobj'), (' ', 'punct')]

>> Bigrams: 
[[	, T1SB], [T1SB, Aa|PA|PU1], [Aa|PA|PU1, 	], [	, U1AS], [U1AS, B], [B, SV1|PV2|a|PA|QQ|QS|SQ|b], [SV1|PV2|a|PA|QQ|QS|SQ|b, V1QS], [V1QS, 	], [	, V2AS], [V2AS, Pa], [Pa, Qb], [Qb,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[	, T1SB, Aa|PA|PU1], [T1SB, Aa|PA|PU1, 	], [Aa|PA|PU1, 	, U1AS], [	, U1AS, B], [U1AS, B, SV1|PV2|a|PA|QQ|QS|SQ|b], [B, SV1|PV2|a|PA|QQ|QS|SQ|b, V1QS], [SV1|PV2|a|PA|QQ|QS|SQ|b, V1QS, 	], [V1QS, 	, V2AS], [	, V2AS, Pa], [V2AS, Pa, Qb], [Pa, Qb,   ], [Qb,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[U1AS B SV1|PV2|a|PA|QQ|QS|SQ|b, 	V2AS, Qb,   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 207 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Backus-Naur Form (BNF) BNF is one of the notation techniques for context free grammar. 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Backus, -, Naur, Form, (, BNF, ), BNF, notation, techniques, context, free, grammar, .] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Backus', 'PROPN'), ('-', 'PUNCT'), ('Naur', 'PROPN'), ('Form', 'PROPN'), ('(', 'PUNCT'), ('BNF', 'PROPN'), (')', 'PUNCT'), ('BNF', 'PROPN'), ('notation', 'NOUN'), ('techniques', 'NOUN'), ('context', 'NOUN'), ('free', 'ADJ'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Backus', 'compound'), ('-', 'punct'), ('Naur', 'compound'), ('Form', 'nmod'), ('(', 'punct'), ('BNF', 'nmod'), (')', 'punct'), ('BNF', 'nsubj'), ('notation', 'compound'), ('techniques', 'pobj'), ('context', 'npadvmod'), ('free', 'amod'), ('grammar', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Backus], [Backus, -], [-, Naur], [Naur, Form], [Form, (], [(, BNF], [BNF, )], [), BNF], [BNF, notation], [notation, techniques], [techniques, context], [context, free], [free, grammar], [grammar, .]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Backus], [‹#›, Backus, -], [Backus, -, Naur], [-, Naur, Form], [Naur, Form, (], [Form, (, BNF], [(, BNF, )], [BNF, ), BNF], [), BNF, notation], [BNF, notation, techniques], [notation, techniques, context], [techniques, context, free], [context, free, grammar], [free, grammar, .]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, the notation techniques, context free grammar]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Backus-Naur Form', 'PERSON'), ('BNF', 'ORG')]


============================ Sentence 208 =============================

It is often used to describe syntax of the language used in computing. 


>> Tokens are: 
[describe, syntax, language, computing, .] 

>> PoS Tags are: 
[('describe', 'VERB'), ('syntax', 'NOUN'), ('language', 'NOUN'), ('computing', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('describe', 'xcomp'), ('syntax', 'dobj'), ('language', 'pobj'), ('computing', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[describe, syntax], [syntax, language], [language, computing], [computing, .]]

>> Trigrams: 
[[describe, syntax, language], [syntax, language, computing], [language, computing, .]]

>> Noun Phrases are: 
[It, syntax, the language, computing]

>> Named Entities are: 
[]


============================ Sentence 209 =============================

Variables written between <..> are non terminals. 


>> Tokens are: 
[Variables, written, <, .., >, non, terminals, .] 

>> PoS Tags are: 
[('Variables', 'NOUN'), ('written', 'VERB'), ('<', 'X'), ('..', 'PUNCT'), ('>', 'X'), ('non', 'ADJ'), ('terminals', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Variables', 'nsubj'), ('written', 'ccomp'), ('<', 'pobj'), ('..', 'punct'), ('>', 'nsubj'), ('non', 'amod'), ('terminals', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Variables, written], [written, <], [<, ..], [.., >], [>, non], [non, terminals], [terminals, .]]

>> Trigrams: 
[[Variables, written, <], [written, <, ..], [<, .., >], [.., >, non], [>, non, terminals], [non, terminals, .]]

>> Noun Phrases are: 
[Variables, non terminals]

>> Named Entities are: 
[]


============================ Sentence 210 =============================

Vertical bar ‘|’ indicating a alternate choice.   


>> Tokens are: 
[Vertical, bar, ‘, |, ’, indicating, alternate, choice, .,  ] 

>> PoS Tags are: 
[('Vertical', 'ADJ'), ('bar', 'NOUN'), ('‘', 'PUNCT'), ('|', 'NOUN'), ('’', 'PUNCT'), ('indicating', 'VERB'), ('alternate', 'ADJ'), ('choice', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Vertical', 'amod'), ('bar', 'nmod'), ('‘', 'punct'), ('|', 'nsubj'), ('’', 'punct'), ('indicating', 'ROOT'), ('alternate', 'amod'), ('choice', 'dobj'), ('.', 'punct'), (' ', 'dobj')]

>> Bigrams: 
[[Vertical, bar], [bar, ‘], [‘, |], [|, ’], [’, indicating], [indicating, alternate], [alternate, choice], [choice, .], [.,  ]]

>> Trigrams: 
[[Vertical, bar, ‘], [bar, ‘, |], [‘, |, ’], [|, ’, indicating], [’, indicating, alternate], [indicating, alternate, choice], [alternate, choice, .], [choice, .,  ]]

>> Noun Phrases are: 
[Vertical bar ‘|, a alternate choice]

>> Named Entities are: 
[]


============================ Sentence 211 =============================

[…], which is used to enclosed an optional specification. 


>> Tokens are: 
[[, …, ], ,, enclosed, optional, specification, .] 

>> PoS Tags are: 
[('[', 'PUNCT'), ('…', 'PUNCT'), (']', 'PUNCT'), (',', 'PUNCT'), ('enclosed', 'VERB'), ('optional', 'ADJ'), ('specification', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('[', 'punct'), ('…', 'punct'), (']', 'ROOT'), (',', 'punct'), ('enclosed', 'xcomp'), ('optional', 'amod'), ('specification', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[[, …], […, ]], [], ,], [,, enclosed], [enclosed, optional], [optional, specification], [specification, .]]

>> Trigrams: 
[[[, …, ]], […, ], ,], [], ,, enclosed], [,, enclosed, optional], [enclosed, optional, specification], [optional, specification, .]]

>> Noun Phrases are: 
[an optional specification]

>> Named Entities are: 
[]


============================ Sentence 212 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 213 =============================

Example: <exp>=<exp> + <term> | <term> <term>=<term> * <factor> | <factor> <factor>=<factor> ^ <primary> | <primary> <primary>=<id 


>> Tokens are: 
[Example, :, <, exp>=<exp, >, +, <, term, >, |, <, term, >, <, term>=<term, >, *, <, factor, >, |, <, factor, >, <, factor>=<factor, >, ^, <, primary, >, |, <, primary, >, <, primary>=<id] 

>> PoS Tags are: 
[('Example', 'NOUN'), (':', 'PUNCT'), ('<', 'X'), ('exp>=<exp', 'PROPN'), ('>', 'X'), ('+', 'NUM'), ('<', 'X'), ('term', 'NOUN'), ('>', 'X'), ('|', 'NOUN'), ('<', 'X'), ('term', 'NOUN'), ('>', 'PUNCT'), ('<', 'X'), ('term>=<term', 'X'), ('>', 'X'), ('*', 'PUNCT'), ('<', 'X'), ('factor', 'NOUN'), ('>', 'X'), ('|', 'NOUN'), ('<', 'X'), ('factor', 'NOUN'), ('>', 'X'), ('<', 'X'), ('factor>=<factor', 'X'), ('>', 'X'), ('^', 'PUNCT'), ('<', 'X'), ('primary', 'ADJ'), ('>', 'X'), ('|', 'NOUN'), ('<', 'X'), ('primary', 'NOUN'), ('>', 'X'), ('<', 'X'), ('primary>=<id', 'PROPN')] 

>> Dependency Tags are: 
[('Example', 'ROOT'), (':', 'punct'), ('<', 'appos'), ('exp>=<exp', 'appos'), ('>', 'appos'), ('+', 'nummod'), ('<', 'punct'), ('term', 'appos'), ('>', 'appos'), ('|', 'appos'), ('<', 'punct'), ('term', 'appos'), ('>', 'punct'), ('<', 'punct'), ('term>=<term', 'appos'), ('>', 'appos'), ('*', 'punct'), ('<', 'punct'), ('factor', 'appos'), ('>', 'appos'), ('|', 'appos'), ('<', 'punct'), ('factor', 'appos'), ('>', 'punct'), ('<', 'appos'), ('factor>=<factor', 'appos'), ('>', 'punct'), ('^', 'punct'), ('<', 'appos'), ('primary', 'appos'), ('>', 'punct'), ('|', 'appos'), ('<', 'punct'), ('primary', 'appos'), ('>', 'punct'), ('<', 'appos'), ('primary>=<id', 'appos')]

>> Bigrams: 
[[Example, :], [:, <], [<, exp>=<exp], [exp>=<exp, >], [>, +], [+, <], [<, term], [term, >], [>, |], [|, <], [<, term], [term, >], [>, <], [<, term>=<term], [term>=<term, >], [>, *], [*, <], [<, factor], [factor, >], [>, |], [|, <], [<, factor], [factor, >], [>, <], [<, factor>=<factor], [factor>=<factor, >], [>, ^], [^, <], [<, primary], [primary, >], [>, |], [|, <], [<, primary], [primary, >], [>, <], [<, primary>=<id]]

>> Trigrams: 
[[Example, :, <], [:, <, exp>=<exp], [<, exp>=<exp, >], [exp>=<exp, >, +], [>, +, <], [+, <, term], [<, term, >], [term, >, |], [>, |, <], [|, <, term], [<, term, >], [term, >, <], [>, <, term>=<term], [<, term>=<term, >], [term>=<term, >, *], [>, *, <], [*, <, factor], [<, factor, >], [factor, >, |], [>, |, <], [|, <, factor], [<, factor, >], [factor, >, <], [>, <, factor>=<factor], [<, factor>=<factor, >], [factor>=<factor, >, ^], [>, ^, <], [^, <, primary], [<, primary, >], [primary, >, |], [>, |, <], [|, <, primary], [<, primary, >], [primary, >, <], [>, <, primary>=<id]]

>> Noun Phrases are: 
[Example, exp>=<exp, term, |, term, factor, |, factor, |, primary, primary>=<id]

>> Named Entities are: 
[]


============================ Sentence 214 =============================

> | <const>  <id>=<letter> <const>=[+/-]<digit> <letter>=a | b | c |……| z <digit>=0 | 1 |………….| 9   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[>, |, <, const, >,  , <, id>=<letter, >, <, const>=[+/-]<digit, >, <, letter>=a, |, b, |, c, |, …, …, |, z, <, digit>=0, |, 1, |, …, …, …, …, .|, 9,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('>', 'X'), ('|', 'NOUN'), ('<', 'PUNCT'), ('const', 'NOUN'), ('>', 'X'), (' ', 'SPACE'), ('<', 'X'), ('id>=<letter', 'NOUN'), ('>', 'X'), ('<', 'X'), ('const>=[+/-]<digit', 'SYM'), ('>', 'PUNCT'), ('<', 'PUNCT'), ('letter>=a', 'NOUN'), ('|', 'NOUN'), ('b', 'X'), ('|', 'NOUN'), ('c', 'NOUN'), ('|', 'NOUN'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('|', 'NOUN'), ('z', 'X'), ('<', 'X'), ('digit>=0', 'NUM'), ('|', 'NOUN'), ('1', 'NUM'), ('|', 'NOUN'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('…', 'PUNCT'), ('.|', 'NOUN'), ('9', 'NUM'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('>', 'dep'), ('|', 'appos'), ('<', 'punct'), ('const', 'ROOT'), ('>', 'punct'), (' ', 'appos'), ('<', 'punct'), ('id>=<letter', 'npadvmod'), ('>', 'punct'), ('<', 'punct'), ('const>=[+/-]<digit', 'npadvmod'), ('>', 'punct'), ('<', 'punct'), ('letter>=a', 'compound'), ('|', 'npadvmod'), ('b', 'punct'), ('|', 'npadvmod'), ('c', 'punct'), ('|', 'npadvmod'), ('…', 'punct'), ('…', 'punct'), ('|', 'appos'), ('z', 'quantmod'), ('<', 'nmod'), ('digit>=0', 'nummod'), ('|', 'appos'), ('1', 'nummod'), ('|', 'npadvmod'), ('…', 'punct'), ('…', 'punct'), ('…', 'punct'), ('…', 'punct'), ('.|', 'nmod'), ('9', 'nummod'), ('  ', 'nummod'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[>, |], [|, <], [<, const], [const, >], [>,  ], [ , <], [<, id>=<letter], [id>=<letter, >], [>, <], [<, const>=[+/-]<digit], [const>=[+/-]<digit, >], [>, <], [<, letter>=a], [letter>=a, |], [|, b], [b, |], [|, c], [c, |], [|, …], […, …], […, |], [|, z], [z, <], [<, digit>=0], [digit>=0, |], [|, 1], [1, |], [|, …], […, …], […, …], […, …], […, .|], [.|, 9], [9,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[>, |, <], [|, <, const], [<, const, >], [const, >,  ], [>,  , <], [ , <, id>=<letter], [<, id>=<letter, >], [id>=<letter, >, <], [>, <, const>=[+/-]<digit], [<, const>=[+/-]<digit, >], [const>=[+/-]<digit, >, <], [>, <, letter>=a], [<, letter>=a, |], [letter>=a, |, b], [|, b, |], [b, |, c], [|, c, |], [c, |, …], [|, …, …], […, …, |], […, |, z], [|, z, <], [z, <, digit>=0], [<, digit>=0, |], [digit>=0, |, 1], [|, 1, |], [1, |, …], [|, …, …], […, …, …], […, …, …], […, …, .|], […, .|, 9], [.|, 9,   ], [9,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[|, |, z <digit>=0 |, …….| 9   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('9', 'CARDINAL'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 215 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Union, Concatenation & Kleene’s of CFG   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Union, ,, Concatenation, &, Kleene, CFG,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Union', 'PROPN'), (',', 'PUNCT'), ('Concatenation', 'PROPN'), ('&', 'CCONJ'), ('Kleene', 'PROPN'), ('CFG', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('Union', 'conj'), (',', 'punct'), ('Concatenation', 'conj'), ('&', 'cc'), ('Kleene', 'conj'), ('CFG', 'nmod'), ('  ', 'compound'), ('Unit', 'pobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Union], [Union, ,], [,, Concatenation], [Concatenation, &], [&, Kleene], [Kleene, CFG], [CFG,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Union], [‹#›, Union, ,], [Union, ,, Concatenation], [,, Concatenation, &], [Concatenation, &, Kleene], [&, Kleene, CFG], [Kleene, CFG,   ], [CFG,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Union, Concatenation, Kleene, CFG   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Union', 'ORG'), ('Concatenation & Kleene’s', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 216 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Union, Concatenation & Kleene’s of CFG Theorem:- 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Union, ,, Concatenation, &, Kleene, CFG, Theorem:-] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Union', 'PROPN'), (',', 'PUNCT'), ('Concatenation', 'PROPN'), ('&', 'CCONJ'), ('Kleene', 'PROPN'), ('CFG', 'PROPN'), ('Theorem:-', 'PROPN')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('Union', 'conj'), (',', 'punct'), ('Concatenation', 'conj'), ('&', 'cc'), ('Kleene', 'conj'), ('CFG', 'pobj'), ('Theorem:-', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Union], [Union, ,], [,, Concatenation], [Concatenation, &], [&, Kleene], [Kleene, CFG], [CFG, Theorem:-]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Union], [‹#›, Union, ,], [Union, ,, Concatenation], [,, Concatenation, &], [Concatenation, &, Kleene], [&, Kleene, CFG], [Kleene, CFG, Theorem:-]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Union, Concatenation, Kleene, CFG]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Union', 'ORG'), ('Concatenation & Kleene’s', 'ORG'), ('CFG Theorem:-', 'ORG')]


============================ Sentence 217 =============================

If L1 and L2 are context - free languages, then the languages L1 U L2, L1L2 , and L1* are also CFLs. 


>> Tokens are: 
[L1, L2, context, -, free, languages, ,, languages, L1, U, L2, ,, L1L2, ,, L1, *, CFLs, .] 

>> PoS Tags are: 
[('L1', 'PROPN'), ('L2', 'PROPN'), ('context', 'NOUN'), ('-', 'PUNCT'), ('free', 'ADJ'), ('languages', 'NOUN'), (',', 'PUNCT'), ('languages', 'NOUN'), ('L1', 'PROPN'), ('U', 'PROPN'), ('L2', 'PROPN'), (',', 'PUNCT'), ('L1L2', 'PROPN'), (',', 'PUNCT'), ('L1', 'PROPN'), ('*', 'PUNCT'), ('CFLs', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('L1', 'nsubj'), ('L2', 'conj'), ('context', 'npadvmod'), ('-', 'punct'), ('free', 'amod'), ('languages', 'attr'), (',', 'punct'), ('languages', 'nsubj'), ('L1', 'compound'), ('U', 'compound'), ('L2', 'appos'), (',', 'punct'), ('L1L2', 'conj'), (',', 'punct'), ('L1', 'conj'), ('*', 'punct'), ('CFLs', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[L1, L2], [L2, context], [context, -], [-, free], [free, languages], [languages, ,], [,, languages], [languages, L1], [L1, U], [U, L2], [L2, ,], [,, L1L2], [L1L2, ,], [,, L1], [L1, *], [*, CFLs], [CFLs, .]]

>> Trigrams: 
[[L1, L2, context], [L2, context, -], [context, -, free], [-, free, languages], [free, languages, ,], [languages, ,, languages], [,, languages, L1], [languages, L1, U], [L1, U, L2], [U, L2, ,], [L2, ,, L1L2], [,, L1L2, ,], [L1L2, ,, L1], [,, L1, *], [L1, *, CFLs], [*, CFLs, .]]

>> Noun Phrases are: 
[L1, L2, context - free languages, the languages, L1 U L2, L1L2, L1, CFLs]

>> Named Entities are: 
[('U L2', 'ORG'), ('L1*', 'LOC')]


============================ Sentence 218 =============================

The proof is constructive: 


>> Tokens are: 
[proof, constructive, :] 

>> PoS Tags are: 
[('proof', 'NOUN'), ('constructive', 'ADJ'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('proof', 'nsubj'), ('constructive', 'acomp'), (':', 'punct')]

>> Bigrams: 
[[proof, constructive], [constructive, :]]

>> Trigrams: 
[[proof, constructive, :]]

>> Noun Phrases are: 
[The proof]

>> Named Entities are: 
[]


============================ Sentence 219 =============================

Starting with CFGs 		G1 = (V1, Ʃ, S1,P1) and G2 = 


>> Tokens are: 
[Starting, CFGs, 		, G1, =, (, V1, ,, Ʃ, ,, S1,P1, ), G2, =] 

>> PoS Tags are: 
[('Starting', 'VERB'), ('CFGs', 'NOUN'), ('\t\t', 'SPACE'), ('G1', 'PROPN'), ('=', 'PUNCT'), ('(', 'PUNCT'), ('V1', 'PROPN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('S1,P1', 'PROPN'), (')', 'PUNCT'), ('G2', 'NOUN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Starting', 'ROOT'), ('CFGs', 'pobj'), ('\t\t', 'prep'), ('G1', 'pobj'), ('=', 'punct'), ('(', 'punct'), ('V1', 'appos'), (',', 'punct'), ('Ʃ', 'npadvmod'), (',', 'punct'), ('S1,P1', 'appos'), (')', 'punct'), ('G2', 'conj'), ('=', 'punct')]

>> Bigrams: 
[[Starting, CFGs], [CFGs, 		], [		, G1], [G1, =], [=, (], [(, V1], [V1, ,], [,, Ʃ], [Ʃ, ,], [,, S1,P1], [S1,P1, )], [), G2], [G2, =]]

>> Trigrams: 
[[Starting, CFGs, 		], [CFGs, 		, G1], [		, G1, =], [G1, =, (], [=, (, V1], [(, V1, ,], [V1, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, S1,P1], [,, S1,P1, )], [S1,P1, ), G2], [), G2, =]]

>> Noun Phrases are: 
[CFGs, G1, (V1, S1,P1, G2]

>> Named Entities are: 
[('G1', 'CARDINAL')]


============================ Sentence 220 =============================

(V2, Ʃ, S2,P2) , Generating L1 and L2, respectively, we show how to construct a new CFG for each of the three cases. 


>> Tokens are: 
[(, V2, ,, Ʃ, ,, S2,P2, ), ,, Generating, L1, L2, ,, respectively, ,, construct, new, CFG, cases, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('V2', 'PROPN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('S2,P2', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Generating', 'PROPN'), ('L1', 'PROPN'), ('L2', 'PROPN'), (',', 'PUNCT'), ('respectively', 'ADV'), (',', 'PUNCT'), ('construct', 'VERB'), ('new', 'ADJ'), ('CFG', 'PROPN'), ('cases', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('V2', 'dep'), (',', 'punct'), ('Ʃ', 'appos'), (',', 'punct'), ('S2,P2', 'appos'), (')', 'punct'), (',', 'punct'), ('Generating', 'compound'), ('L1', 'conj'), ('L2', 'conj'), (',', 'punct'), ('respectively', 'advmod'), (',', 'punct'), ('construct', 'xcomp'), ('new', 'amod'), ('CFG', 'dobj'), ('cases', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[(, V2], [V2, ,], [,, Ʃ], [Ʃ, ,], [,, S2,P2], [S2,P2, )], [), ,], [,, Generating], [Generating, L1], [L1, L2], [L2, ,], [,, respectively], [respectively, ,], [,, construct], [construct, new], [new, CFG], [CFG, cases], [cases, .]]

>> Trigrams: 
[[(, V2, ,], [V2, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, S2,P2], [,, S2,P2, )], [S2,P2, ), ,], [), ,, Generating], [,, Generating, L1], [Generating, L1, L2], [L1, L2, ,], [L2, ,, respectively], [,, respectively, ,], [respectively, ,, construct], [,, construct, new], [construct, new, CFG], [new, CFG, cases], [CFG, cases, .]]

>> Noun Phrases are: 
[Ʃ, S2,P2, we, a new CFG, the three cases]

>> Named Entities are: 
[('Generating L1', 'ORG'), ('CFG', 'ORG'), ('three', 'CARDINAL')]


============================ Sentence 221 =============================

Gu = 


>> Tokens are: 
[Gu, =] 

>> PoS Tags are: 
[('Gu', 'PROPN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Gu', 'ROOT'), ('=', 'punct')]

>> Bigrams: 
[[Gu, =]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Gu]

>> Named Entities are: 
[]


============================ Sentence 222 =============================

(Vu, Ʃ, Su, Pu) generating L1 U L2 Gc= (Vc, Ʃ, Sc, Pc) generating L1L2 G* = 


>> Tokens are: 
[(, Vu, ,, Ʃ, ,, Su, ,, Pu, ), generating, L1, U, L2, Gc=, (, Vc, ,, Ʃ, ,, Sc, ,, Pc, ), generating, L1L2, G, *, =] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Vu', 'NOUN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('Su', 'PROPN'), (',', 'PUNCT'), ('Pu', 'PROPN'), (')', 'PUNCT'), ('generating', 'NOUN'), ('L1', 'PROPN'), ('U', 'PROPN'), ('L2', 'PROPN'), ('Gc=', 'PROPN'), ('(', 'PUNCT'), ('Vc', 'PROPN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('Sc', 'PROPN'), (',', 'PUNCT'), ('Pc', 'NOUN'), (')', 'PUNCT'), ('generating', 'VERB'), ('L1L2', 'PROPN'), ('G', 'PROPN'), ('*', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Vu', 'nmod'), (',', 'punct'), ('Ʃ', 'appos'), (',', 'punct'), ('Su', 'conj'), (',', 'punct'), ('Pu', 'conj'), (')', 'punct'), ('generating', 'compound'), ('L1', 'compound'), ('U', 'compound'), ('L2', 'compound'), ('Gc=', 'ROOT'), ('(', 'punct'), ('Vc', 'appos'), (',', 'punct'), ('Ʃ', 'conj'), (',', 'punct'), ('Sc', 'nmod'), (',', 'punct'), ('Pc', 'appos'), (')', 'punct'), ('generating', 'advcl'), ('L1L2', 'compound'), ('G', 'dobj'), ('*', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[(, Vu], [Vu, ,], [,, Ʃ], [Ʃ, ,], [,, Su], [Su, ,], [,, Pu], [Pu, )], [), generating], [generating, L1], [L1, U], [U, L2], [L2, Gc=], [Gc=, (], [(, Vc], [Vc, ,], [,, Ʃ], [Ʃ, ,], [,, Sc], [Sc, ,], [,, Pc], [Pc, )], [), generating], [generating, L1L2], [L1L2, G], [G, *], [*, =]]

>> Trigrams: 
[[(, Vu, ,], [Vu, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, Su], [,, Su, ,], [Su, ,, Pu], [,, Pu, )], [Pu, ), generating], [), generating, L1], [generating, L1, U], [L1, U, L2], [U, L2, Gc=], [L2, Gc=, (], [Gc=, (, Vc], [(, Vc, ,], [Vc, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, Sc], [,, Sc, ,], [Sc, ,, Pc], [,, Pc, )], [Pc, ), generating], [), generating, L1L2], [generating, L1L2, G], [L1L2, G, *], [G, *, =]]

>> Noun Phrases are: 
[Ʃ, Su, Pu, Vc, Ʃ, Sc, Pc, L1L2 G]

>> Named Entities are: 
[('Pu', 'PERSON'), ('U L2', 'ORG'), ('Sc', 'GPE')]


============================ Sentence 223 =============================

(V, Ʃ, S, P) generating  L1 *   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[(, V, ,, Ʃ, ,, S, ,, P, ), generating,  , L1, *,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('V', 'NOUN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('S', 'PROPN'), (',', 'PUNCT'), ('P', 'NOUN'), (')', 'PUNCT'), ('generating', 'NOUN'), (' ', 'SPACE'), ('L1', 'PROPN'), ('*', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('V', 'ROOT'), (',', 'punct'), ('Ʃ', 'conj'), (',', 'punct'), ('S', 'conj'), (',', 'punct'), ('P', 'conj'), (')', 'punct'), ('generating', 'acl'), (' ', 'nmod'), ('L1', 'nmod'), ('*', 'punct'), ('  ', 'nummod'), ('Unit', 'dobj'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, V], [V, ,], [,, Ʃ], [Ʃ, ,], [,, S], [S, ,], [,, P], [P, )], [), generating], [generating,  ], [ , L1], [L1, *], [*,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[(, V, ,], [V, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, S], [,, S, ,], [S, ,, P], [,, P, )], [P, ), generating], [), generating,  ], [generating,  , L1], [ , L1, *], [L1, *,   ], [*,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[(V, Ʃ, S, P,  L1 *   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 224 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Union Gu = 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Union, Gu, =] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Union', 'PROPN'), ('Gu', 'PROPN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('Union', 'compound'), ('Gu', 'appos'), ('=', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Union], [Union, Gu], [Gu, =]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Union], [‹#›, Union, Gu], [Union, Gu, =]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› Union Gu]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#› Union Gu', 'ORG')]


============================ Sentence 225 =============================

(Vu, Ʃ, Su, Pu)   


>> Tokens are: 
[(, Vu, ,, Ʃ, ,, Su, ,, Pu, ),  ] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Vu', 'NOUN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('Su', 'PROPN'), (',', 'PUNCT'), ('Pu', 'PROPN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Vu', 'ROOT'), (',', 'punct'), ('Ʃ', 'appos'), (',', 'punct'), ('Su', 'conj'), (',', 'punct'), ('Pu', 'npadvmod'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[(, Vu], [Vu, ,], [,, Ʃ], [Ʃ, ,], [,, Su], [Su, ,], [,, Pu], [Pu, )], [),  ]]

>> Trigrams: 
[[(, Vu, ,], [Vu, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, Su], [,, Su, ,], [Su, ,, Pu], [,, Pu, )], [Pu, ),  ]]

>> Noun Phrases are: 
[(Vu, Ʃ, Su]

>> Named Entities are: 
[]


============================ Sentence 226 =============================

A grammar Gu = 


>> Tokens are: 
[grammar, Gu, =] 

>> PoS Tags are: 
[('grammar', 'NOUN'), ('Gu', 'PROPN'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('grammar', 'compound'), ('Gu', 'ROOT'), ('=', 'punct')]

>> Bigrams: 
[[grammar, Gu], [Gu, =]]

>> Trigrams: 
[[grammar, Gu, =]]

>> Noun Phrases are: 
[A grammar Gu]

>> Named Entities are: 
[]


============================ Sentence 227 =============================

(Vu, Ʃ, Su, Pu) generating L1 U L2. 


>> Tokens are: 
[(, Vu, ,, Ʃ, ,, Su, ,, Pu, ), generating, L1, U, L2, .] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('Vu', 'NOUN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('Su', 'PROPN'), (',', 'PUNCT'), ('Pu', 'PROPN'), (')', 'PUNCT'), ('generating', 'NOUN'), ('L1', 'PROPN'), ('U', 'PROPN'), ('L2', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('(', 'punct'), ('Vu', 'dep'), (',', 'punct'), ('Ʃ', 'appos'), (',', 'punct'), ('Su', 'conj'), (',', 'punct'), ('Pu', 'conj'), (')', 'punct'), ('generating', 'amod'), ('L1', 'compound'), ('U', 'compound'), ('L2', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[(, Vu], [Vu, ,], [,, Ʃ], [Ʃ, ,], [,, Su], [Su, ,], [,, Pu], [Pu, )], [), generating], [generating, L1], [L1, U], [U, L2], [L2, .]]

>> Trigrams: 
[[(, Vu, ,], [Vu, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, Su], [,, Su, ,], [Su, ,, Pu], [,, Pu, )], [Pu, ), generating], [), generating, L1], [generating, L1, U], [L1, U, L2], [U, L2, .]]

>> Noun Phrases are: 
[Ʃ, Su, Pu]

>> Named Entities are: 
[('Pu', 'PERSON'), ('U L2', 'ORG')]


============================ Sentence 228 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 229 =============================

First we rename the element of V2 if necessary so that V1 ∩ V2= Ø 


>> Tokens are: 
[rename, element, V2, necessary, V1, ∩, V2=, Ø] 

>> PoS Tags are: 
[('rename', 'VERB'), ('element', 'NOUN'), ('V2', 'PROPN'), ('necessary', 'ADJ'), ('V1', 'PROPN'), ('∩', 'VERB'), ('V2=', 'PROPN'), ('Ø', 'PROPN')] 

>> Dependency Tags are: 
[('rename', 'ROOT'), ('element', 'dobj'), ('V2', 'pobj'), ('necessary', 'advcl'), ('V1', 'compound'), ('∩', 'advcl'), ('V2=', 'compound'), ('Ø', 'dobj')]

>> Bigrams: 
[[rename, element], [element, V2], [V2, necessary], [necessary, V1], [V1, ∩], [∩, V2=], [V2=, Ø]]

>> Trigrams: 
[[rename, element, V2], [element, V2, necessary], [V2, necessary, V1], [necessary, V1, ∩], [V1, ∩, V2=], [∩, V2=, Ø]]

>> Noun Phrases are: 
[we, the element, V2, V2= Ø]

>> Named Entities are: 
[('First', 'ORDINAL'), ('V1 ∩', 'PRODUCT')]


============================ Sentence 230 =============================

		 


>> Tokens are: 
[		] 

>> PoS Tags are: 
[('\t\t', 'SPACE')] 

>> Dependency Tags are: 
[('\t\t', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 231 =============================

Vu= V1 U V2 U {Su} 	 


>> Tokens are: 
[Vu=, V1, U, V2, U, {, Su, }, 	] 

>> PoS Tags are: 
[('Vu=', 'PROPN'), ('V1', 'NOUN'), ('U', 'PROPN'), ('V2', 'NOUN'), ('U', 'PROPN'), ('{', 'PUNCT'), ('Su', 'PROPN'), ('}', 'PUNCT'), ('\t', 'SPACE')] 

>> Dependency Tags are: 
[('Vu=', 'nmod'), ('V1', 'nmod'), ('U', 'compound'), ('V2', 'nmod'), ('U', 'ROOT'), ('{', 'punct'), ('Su', 'nmod'), ('}', 'punct'), ('\t', 'appos')]

>> Bigrams: 
[[Vu=, V1], [V1, U], [U, V2], [V2, U], [U, {], [{, Su], [Su, }], [}, 	]]

>> Trigrams: 
[[Vu=, V1, U], [V1, U, V2], [U, V2, U], [V2, U, {], [U, {, Su], [{, Su, }], [Su, }, 	]]

>> Noun Phrases are: 
[Vu= V1 U V2 U]

>> Named Entities are: 
[('V1', 'CARDINAL'), ('U V2 U {Su}', 'PRODUCT')]


============================ Sentence 232 =============================

Where Su is a new symbol not in V1 or V2. 


>> Tokens are: 
[Su, new, symbol, V1, V2, .] 

>> PoS Tags are: 
[('Su', 'PROPN'), ('new', 'ADJ'), ('symbol', 'NOUN'), ('V1', 'PROPN'), ('V2', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Su', 'nsubj'), ('new', 'amod'), ('symbol', 'attr'), ('V1', 'pobj'), ('V2', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Su, new], [new, symbol], [symbol, V1], [V1, V2], [V2, .]]

>> Trigrams: 
[[Su, new, symbol], [new, symbol, V1], [symbol, V1, V2], [V1, V2, .]]

>> Noun Phrases are: 
[Su, a new symbol, V1, V2]

>> Named Entities are: 
[('V1', 'PRODUCT')]


============================ Sentence 233 =============================

Then we let 		Pu= 


>> Tokens are: 
[let, 		, Pu=] 

>> PoS Tags are: 
[('let', 'VERB'), ('\t\t', 'SPACE'), ('Pu=', 'PROPN')] 

>> Dependency Tags are: 
[('let', 'ROOT'), ('\t\t', 'ccomp'), ('Pu=', 'punct')]

>> Bigrams: 
[[let, 		], [		, Pu=]]

>> Trigrams: 
[[let, 		, Pu=]]

>> Noun Phrases are: 
[we]

>> Named Entities are: 
[]


============================ Sentence 234 =============================

P1 U P2 U { Su S1 | S2 } On the other hand, if x is derivable from Su in Gu, the first step in any derivation must be  		SuS1 or SuS2   


>> Tokens are: 
[P1, U, P2, U, {, Su, S1, |, S2, }, hand, ,, x, derivable, Su, Gu, ,, step, derivation,  		, SuS1, SuS2,  ] 

>> PoS Tags are: 
[('P1', 'NOUN'), ('U', 'NOUN'), ('P2', 'PROPN'), ('U', 'PROPN'), ('{', 'PUNCT'), ('Su\uf0e0', 'PROPN'), ('S1', 'PROPN'), ('|', 'NOUN'), ('S2', 'NOUN'), ('}', 'PUNCT'), ('hand', 'NOUN'), (',', 'PUNCT'), ('x', 'SYM'), ('derivable', 'ADJ'), ('Su', 'PROPN'), ('Gu', 'PROPN'), (',', 'PUNCT'), ('step', 'NOUN'), ('derivation', 'NOUN'), (' \t\t', 'SPACE'), ('Su\uf0e0S1', 'PROPN'), ('Su\uf0e0S2', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('P1', 'compound'), ('U', 'nmod'), ('P2', 'compound'), ('U', 'nsubj'), ('{', 'punct'), ('Su\uf0e0', 'compound'), ('S1', 'appos'), ('|', 'appos'), ('S2', 'appos'), ('}', 'punct'), ('hand', 'pobj'), (',', 'punct'), ('x', 'nsubj'), ('derivable', 'acomp'), ('Su', 'pobj'), ('Gu', 'pobj'), (',', 'punct'), ('step', 'nsubj'), ('derivation', 'pobj'), (' \t\t', 'compound'), ('Su\uf0e0S1', 'attr'), ('Su\uf0e0S2', 'conj'), (' ', 'punct')]

>> Bigrams: 
[[P1, U], [U, P2], [P2, U], [U, {], [{, Su], [Su, S1], [S1, |], [|, S2], [S2, }], [}, hand], [hand, ,], [,, x], [x, derivable], [derivable, Su], [Su, Gu], [Gu, ,], [,, step], [step, derivation], [derivation,  		], [ 		, SuS1], [SuS1, SuS2], [SuS2,  ]]

>> Trigrams: 
[[P1, U, P2], [U, P2, U], [P2, U, {], [U, {, Su], [{, Su, S1], [Su, S1, |], [S1, |, S2], [|, S2, }], [S2, }, hand], [}, hand, ,], [hand, ,, x], [,, x, derivable], [x, derivable, Su], [derivable, Su, Gu], [Su, Gu, ,], [Gu, ,, step], [,, step, derivation], [step, derivation,  		], [derivation,  		, SuS1], [ 		, SuS1, SuS2], [SuS1, SuS2,  ]]

>> Noun Phrases are: 
[P1 U P2 U, Su S1, |, S2, the other hand, Su, Gu, the first step, any derivation,  		SuS1, SuS2]

>> Named Entities are: 
[('Gu', 'GPE'), ('first', 'ORDINAL'), ('Su\uf0e0S2', 'PERSON')]


============================ Sentence 235 =============================

In the first case, all subsequent productions used must be productions in G1, because no variables in V2 are involved, and thus x∈ L1; in the second case, x ∈ L2. 


>> Tokens are: 
[case, ,, subsequent, productions, productions, G1, ,, variables, V2, involved, ,, x∈, L1, ;, second, case, ,, x, ∈, L2, .] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('subsequent', 'ADJ'), ('productions', 'NOUN'), ('productions', 'NOUN'), ('G1', 'PROPN'), (',', 'PUNCT'), ('variables', 'NOUN'), ('V2', 'PROPN'), ('involved', 'VERB'), (',', 'PUNCT'), ('x∈', 'NUM'), ('L1', 'PROPN'), (';', 'PUNCT'), ('second', 'ADJ'), ('case', 'NOUN'), (',', 'PUNCT'), ('x', 'X'), ('∈', 'ADJ'), ('L2', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('subsequent', 'amod'), ('productions', 'nsubj'), ('productions', 'attr'), ('G1', 'pobj'), (',', 'punct'), ('variables', 'nsubjpass'), ('V2', 'pobj'), ('involved', 'advcl'), (',', 'punct'), ('x∈', 'compound'), ('L1', 'conj'), (';', 'punct'), ('second', 'amod'), ('case', 'pobj'), (',', 'punct'), ('x', 'punct'), ('∈', 'amod'), ('L2', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[case, ,], [,, subsequent], [subsequent, productions], [productions, productions], [productions, G1], [G1, ,], [,, variables], [variables, V2], [V2, involved], [involved, ,], [,, x∈], [x∈, L1], [L1, ;], [;, second], [second, case], [case, ,], [,, x], [x, ∈], [∈, L2], [L2, .]]

>> Trigrams: 
[[case, ,, subsequent], [,, subsequent, productions], [subsequent, productions, productions], [productions, productions, G1], [productions, G1, ,], [G1, ,, variables], [,, variables, V2], [variables, V2, involved], [V2, involved, ,], [involved, ,, x∈], [,, x∈, L1], [x∈, L1, ;], [L1, ;, second], [;, second, case], [second, case, ,], [case, ,, x], [,, x, ∈], [x, ∈, L2], [∈, L2, .]]

>> Noun Phrases are: 
[the first case, all subsequent productions, productions, G1, no variables, V2, the second case]

>> Named Entities are: 
[('first', 'ORDINAL'), ('second', 'ORDINAL')]


============================ Sentence 236 =============================

Therefore, 		L(Gu) ⊆ L1 U L2   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[,, 		, L(Gu, ), ⊆, L1, U, L2,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('\t\t', 'SPACE'), ('L(Gu', 'PROPN'), (')', 'PUNCT'), ('⊆', 'NOUN'), ('L1', 'PROPN'), ('U', 'PROPN'), ('L2', 'PROPN'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('\t\t', 'ROOT'), ('L(Gu', 'pobj'), (')', 'punct'), ('⊆', 'compound'), ('L1', 'compound'), ('U', 'compound'), ('L2', 'pobj'), ('  ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[,, 		], [		, L(Gu], [L(Gu, )], [), ⊆], [⊆, L1], [L1, U], [U, L2], [L2,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[,, 		, L(Gu], [		, L(Gu, )], [L(Gu, ), ⊆], [), ⊆, L1], [⊆, L1, U], [L1, U, L2], [U, L2,   ], [L2,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[L(Gu, ⊆ L1 U L2,   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('U L2', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 237 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Concatenation Gc= (Vc, Ʃ, Sc, Pc)   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Concatenation, Gc=, (, Vc, ,, Ʃ, ,, Sc, ,, Pc, ),  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Concatenation', 'PROPN'), ('Gc=', 'PROPN'), ('(', 'PUNCT'), ('Vc', 'PROPN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('Sc', 'PROPN'), (',', 'PUNCT'), ('Pc', 'NOUN'), (')', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'nmod'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'appos'), ('Concatenation', 'compound'), ('Gc=', 'ROOT'), ('(', 'punct'), ('Vc', 'appos'), (',', 'punct'), ('Ʃ', 'conj'), (',', 'punct'), ('Sc', 'conj'), (',', 'punct'), ('Pc', 'npadvmod'), (')', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Concatenation], [Concatenation, Gc=], [Gc=, (], [(, Vc], [Vc, ,], [,, Ʃ], [Ʃ, ,], [,, Sc], [Sc, ,], [,, Pc], [Pc, )], [),  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Concatenation], [‹#›, Concatenation, Gc=], [Concatenation, Gc=, (], [Gc=, (, Vc], [(, Vc, ,], [Vc, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, Sc], [,, Sc, ,], [Sc, ,, Pc], [,, Pc, )], [Pc, ),  ]]

>> Noun Phrases are: 
[Computation, Darshan Institute, Engineering, Technology, ‹#›, Vc, Ʃ, Sc]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('Sc', 'GPE')]


============================ Sentence 238 =============================

A grammar Gc= (Vc, Ʃ, Sc, Pc) generating L1L2 . 


>> Tokens are: 
[grammar, Gc=, (, Vc, ,, Ʃ, ,, Sc, ,, Pc, ), generating, L1L2, .] 

>> PoS Tags are: 
[('grammar', 'NOUN'), ('Gc=', 'PROPN'), ('(', 'PUNCT'), ('Vc', 'PROPN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('Sc', 'PROPN'), (',', 'PUNCT'), ('Pc', 'NOUN'), (')', 'PUNCT'), ('generating', 'NOUN'), ('L1L2', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('grammar', 'compound'), ('Gc=', 'ROOT'), ('(', 'punct'), ('Vc', 'appos'), (',', 'punct'), ('Ʃ', 'conj'), (',', 'punct'), ('Sc', 'conj'), (',', 'punct'), ('Pc', 'conj'), (')', 'punct'), ('generating', 'prep'), ('L1L2', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[grammar, Gc=], [Gc=, (], [(, Vc], [Vc, ,], [,, Ʃ], [Ʃ, ,], [,, Sc], [Sc, ,], [,, Pc], [Pc, )], [), generating], [generating, L1L2], [L1L2, .]]

>> Trigrams: 
[[grammar, Gc=, (], [Gc=, (, Vc], [(, Vc, ,], [Vc, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, Sc], [,, Sc, ,], [Sc, ,, Pc], [,, Pc, )], [Pc, ), generating], [), generating, L1L2], [generating, L1L2, .]]

>> Noun Phrases are: 
[A grammar Gc=, Vc, Ʃ, Sc, Pc, L1L2]

>> Named Entities are: 
[('Sc', 'GPE')]


============================ Sentence 239 =============================

Again we relabeled variables if necessary so that V1 ∩ V2 = Ø and define  		Vc = V1 


>> Tokens are: 
[relabeled, variables, necessary, V1, ∩, V2, =, Ø, define,  		, Vc, =, V1] 

>> PoS Tags are: 
[('relabeled', 'VERB'), ('variables', 'NOUN'), ('necessary', 'ADJ'), ('V1', 'PROPN'), ('∩', 'NOUN'), ('V2', 'PROPN'), ('=', 'SYM'), ('Ø', 'PROPN'), ('define', 'VERB'), (' \t\t', 'SPACE'), ('Vc', 'PROPN'), ('=', 'SYM'), ('V1', 'PROPN')] 

>> Dependency Tags are: 
[('relabeled', 'ROOT'), ('variables', 'dobj'), ('necessary', 'advcl'), ('V1', 'compound'), ('∩', 'compound'), ('V2', 'compound'), ('=', 'punct'), ('Ø', 'dep'), ('define', 'conj'), (' \t\t', 'punct'), ('Vc', 'compound'), ('=', 'punct'), ('V1', 'punct')]

>> Bigrams: 
[[relabeled, variables], [variables, necessary], [necessary, V1], [V1, ∩], [∩, V2], [V2, =], [=, Ø], [Ø, define], [define,  		], [ 		, Vc], [Vc, =], [=, V1]]

>> Trigrams: 
[[relabeled, variables, necessary], [variables, necessary, V1], [necessary, V1, ∩], [V1, ∩, V2], [∩, V2, =], [V2, =, Ø], [=, Ø, define], [Ø, define,  		], [define,  		, Vc], [ 		, Vc, =], [Vc, =, V1]]

>> Noun Phrases are: 
[we, variables]

>> Named Entities are: 
[('V1 ∩ V2', 'PRODUCT'), ('V1', 'CARDINAL')]


============================ Sentence 240 =============================

U V2 U {Sc} This time we let  		 


>> Tokens are: 
[U, V2, U, {, Sc, }, time, let,  		] 

>> PoS Tags are: 
[('U', 'NOUN'), ('V2', 'PROPN'), ('U', 'PROPN'), ('{', 'PUNCT'), ('Sc', 'PROPN'), ('}', 'PUNCT'), ('time', 'NOUN'), ('let', 'VERB'), (' \t\t', 'SPACE')] 

>> Dependency Tags are: 
[('U', 'nmod'), ('V2', 'nmod'), ('U', 'nsubj'), ('{', 'punct'), ('Sc', 'appos'), ('}', 'punct'), ('time', 'npadvmod'), ('let', 'ROOT'), (' \t\t', 'dobj')]

>> Bigrams: 
[[U, V2], [V2, U], [U, {], [{, Sc], [Sc, }], [}, time], [time, let], [let,  		]]

>> Trigrams: 
[[U, V2, U], [V2, U, {], [U, {, Sc], [{, Sc, }], [Sc, }, time], [}, time, let], [time, let,  		]]

>> Noun Phrases are: 
[U V2 U, {Sc, we]

>> Named Entities are: 
[('U V2 U', 'PRODUCT')]


============================ Sentence 241 =============================

Pc= P1 U P2 U { ScS1S2 } If x ∈L1L2 then x = x1x2 , where xi ∈Li  for each i. we may then derive x in Gc as follows: 


>> Tokens are: 
[Pc=, P1, U, P2, U, {, ScS1S2, }, x, ∈L1L2, x, =, x1x2, ,, xi, ∈Li,  , i., derive, x, Gc, follows, :] 

>> PoS Tags are: 
[('Pc=', 'PROPN'), ('P1', 'NOUN'), ('U', 'NOUN'), ('P2', 'PROPN'), ('U', 'PROPN'), ('{', 'PUNCT'), ('Sc\uf0e0S1S2', 'NOUN'), ('}', 'PUNCT'), ('x', 'SYM'), ('∈L1L2', 'NOUN'), ('x', 'SYM'), ('=', 'PUNCT'), ('x1x2', 'PUNCT'), (',', 'PUNCT'), ('xi', 'ADP'), ('∈Li', 'PROPN'), (' ', 'SPACE'), ('i.', 'NOUN'), ('derive', 'VERB'), ('x', 'SYM'), ('Gc', 'PROPN'), ('follows', 'VERB'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('Pc=', 'compound'), ('P1', 'compound'), ('U', 'nmod'), ('P2', 'nmod'), ('U', 'ROOT'), ('{', 'punct'), ('Sc\uf0e0S1S2', 'appos'), ('}', 'punct'), ('x', 'det'), ('∈L1L2', 'appos'), ('x', 'punct'), ('=', 'appos'), ('x1x2', 'punct'), (',', 'punct'), ('xi', 'nmod'), ('∈Li', 'compound'), (' ', 'pobj'), ('i.', 'pobj'), ('derive', 'relcl'), ('x', 'punct'), ('Gc', 'pobj'), ('follows', 'advcl'), (':', 'punct')]

>> Bigrams: 
[[Pc=, P1], [P1, U], [U, P2], [P2, U], [U, {], [{, ScS1S2], [ScS1S2, }], [}, x], [x, ∈L1L2], [∈L1L2, x], [x, =], [=, x1x2], [x1x2, ,], [,, xi], [xi, ∈Li], [∈Li,  ], [ , i.], [i., derive], [derive, x], [x, Gc], [Gc, follows], [follows, :]]

>> Trigrams: 
[[Pc=, P1, U], [P1, U, P2], [U, P2, U], [P2, U, {], [U, {, ScS1S2], [{, ScS1S2, }], [ScS1S2, }, x], [}, x, ∈L1L2], [x, ∈L1L2, x], [∈L1L2, x, =], [x, =, x1x2], [=, x1x2, ,], [x1x2, ,, xi], [,, xi, ∈Li], [xi, ∈Li,  ], [∈Li,  , i.], [ , i., derive], [i., derive, x], [derive, x, Gc], [x, Gc, follows], [Gc, follows, :]]

>> Noun Phrases are: 
[Pc= P1 U P2 U, ScS1S2, If x ∈L1L2, each i., we, Gc]

>> Named Entities are: 
[('Gc', 'GPE')]


============================ Sentence 242 =============================

		Sc S1 S2  *x1 S2  * x1x2 = x First step in the derivation must be ScS1 


>> Tokens are: 
[		, Sc, S1, S2, , *, x1, S2, , *, x1x2, =, x, step, derivation, ScS1] 

>> PoS Tags are: 
[('\t\t', 'SPACE'), ('Sc', 'PROPN'), ('\uf0e0S1', 'PROPN'), ('S2', 'PROPN'), ('\uf0e0', 'PROPN'), ('*', 'PUNCT'), ('x1', 'NUM'), ('S2', 'PROPN'), ('\uf0e0', 'PROPN'), ('*', 'PUNCT'), ('x1x2', 'PUNCT'), ('=', 'PUNCT'), ('x', 'PUNCT'), ('step', 'NOUN'), ('derivation', 'NOUN'), ('Sc\uf0e0S1', 'ADJ')] 

>> Dependency Tags are: 
[('\t\t', 'compound'), ('Sc', 'compound'), ('\uf0e0S1', 'compound'), ('S2', 'compound'), ('\uf0e0', 'dep'), ('*', 'punct'), ('x1', 'nummod'), ('S2', 'compound'), ('\uf0e0', 'appos'), ('*', 'punct'), ('x1x2', 'punct'), ('=', 'appos'), ('x', 'punct'), ('step', 'nsubj'), ('derivation', 'pobj'), ('Sc\uf0e0S1', 'acomp')]

>> Bigrams: 
[[		, Sc], [Sc, S1], [S1, S2], [S2, ], [, *], [*, x1], [x1, S2], [S2, ], [, *], [*, x1x2], [x1x2, =], [=, x], [x, step], [step, derivation], [derivation, ScS1]]

>> Trigrams: 
[[		, Sc, S1], [Sc, S1, S2], [S1, S2, ], [S2, , *], [, *, x1], [*, x1, S2], [x1, S2, ], [S2, , *], [, *, x1x2], [*, x1x2, =], [x1x2, =, x], [=, x, step], [x, step, derivation], [step, derivation, ScS1]]

>> Noun Phrases are: 
[x1 S2 , First step, the derivation]

>> Named Entities are: 
[('Sc', 'GPE'), ('First', 'ORDINAL')]


============================ Sentence 243 =============================

S2 Where the second step is the derivation of x1 in G1 and the third step is the derivation of x2 in G2. 


>> Tokens are: 
[S2, second, step, derivation, x1, G1, step, derivation, x2, G2, .] 

>> PoS Tags are: 
[('S2', 'PROPN'), ('second', 'ADJ'), ('step', 'NOUN'), ('derivation', 'NOUN'), ('x1', 'NUM'), ('G1', 'PROPN'), ('step', 'NOUN'), ('derivation', 'NOUN'), ('x2', 'NUM'), ('G2', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('S2', 'nsubj'), ('second', 'amod'), ('step', 'nsubj'), ('derivation', 'attr'), ('x1', 'pobj'), ('G1', 'pobj'), ('step', 'nsubj'), ('derivation', 'attr'), ('x2', 'pobj'), ('G2', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[S2, second], [second, step], [step, derivation], [derivation, x1], [x1, G1], [G1, step], [step, derivation], [derivation, x2], [x2, G2], [G2, .]]

>> Trigrams: 
[[S2, second, step], [second, step, derivation], [step, derivation, x1], [derivation, x1, G1], [x1, G1, step], [G1, step, derivation], [step, derivation, x2], [derivation, x2, G2], [x2, G2, .]]

>> Noun Phrases are: 
[S2, the second step, the derivation, G1, the third step, the derivation, G2]

>> Named Entities are: 
[('second', 'ORDINAL'), ('third', 'ORDINAL')]


============================ Sentence 244 =============================

So x ∈ L1L2   


>> Tokens are: 
[x, ∈, L1L2,  ] 

>> PoS Tags are: 
[('x', 'SYM'), ('∈', 'PROPN'), ('L1L2', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('x', 'punct'), ('∈', 'compound'), ('L1L2', 'ROOT'), (' ', 'appos')]

>> Bigrams: 
[[x, ∈], [∈, L1L2], [L1L2,  ]]

>> Trigrams: 
[[x, ∈, L1L2], [∈, L1L2,  ]]

>> Noun Phrases are: 
[So x ∈ L1L2]

>> Named Entities are: 
[]


============================ Sentence 245 =============================

Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 246 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› Kleene (*) 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, Kleene, (, *, )] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('Kleene', 'PROPN'), ('(', 'PUNCT'), ('*', 'PUNCT'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), ('Kleene', 'conj'), ('(', 'punct'), ('*', 'punct'), (')', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, Kleene], [Kleene, (], [(, *], [*, )]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, Kleene], [‹#›, Kleene, (], [Kleene, (, *], [(, *, )]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, Kleene]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG'), ('‹#› Kleene', 'PERSON')]


============================ Sentence 247 =============================

A grammar G* = 


>> Tokens are: 
[grammar, G, *, =] 

>> PoS Tags are: 
[('grammar', 'NOUN'), ('G', 'NOUN'), ('*', 'PUNCT'), ('=', 'PUNCT')] 

>> Dependency Tags are: 
[('grammar', 'compound'), ('G', 'ROOT'), ('*', 'punct'), ('=', 'punct')]

>> Bigrams: 
[[grammar, G], [G, *], [*, =]]

>> Trigrams: 
[[grammar, G, *], [G, *, =]]

>> Noun Phrases are: 
[A grammar G]

>> Named Entities are: 
[]


============================ Sentence 248 =============================

(V, Ʃ, S, P) generating  L1 * Let V = V1 


>> Tokens are: 
[(, V, ,, Ʃ, ,, S, ,, P, ), generating,  , L1, *, Let, V, =, V1] 

>> PoS Tags are: 
[('(', 'PUNCT'), ('V', 'NOUN'), (',', 'PUNCT'), ('Ʃ', 'NOUN'), (',', 'PUNCT'), ('S', 'PROPN'), (',', 'PUNCT'), ('P', 'NOUN'), (')', 'PUNCT'), ('generating', 'NOUN'), (' ', 'SPACE'), ('L1', 'PROPN'), ('*', 'PUNCT'), ('Let', 'VERB'), ('V', 'NOUN'), ('=', 'SYM'), ('V1', 'PROPN')] 

>> Dependency Tags are: 
[('(', 'punct'), ('V', 'dep'), (',', 'punct'), ('Ʃ', 'conj'), (',', 'punct'), ('S', 'conj'), (',', 'punct'), ('P', 'conj'), (')', 'punct'), ('generating', 'acl'), (' ', 'dative'), ('L1', 'npadvmod'), ('*', 'punct'), ('Let', 'ROOT'), ('V', 'nsubj'), ('=', 'punct'), ('V1', 'ccomp')]

>> Bigrams: 
[[(, V], [V, ,], [,, Ʃ], [Ʃ, ,], [,, S], [S, ,], [,, P], [P, )], [), generating], [generating,  ], [ , L1], [L1, *], [*, Let], [Let, V], [V, =], [=, V1]]

>> Trigrams: 
[[(, V, ,], [V, ,, Ʃ], [,, Ʃ, ,], [Ʃ, ,, S], [,, S, ,], [S, ,, P], [,, P, )], [P, ), generating], [), generating,  ], [generating,  , L1], [ , L1, *], [L1, *, Let], [*, Let, V], [Let, V, =], [V, =, V1]]

>> Noun Phrases are: 
[V]

>> Named Entities are: 
[]


============================ Sentence 249 =============================

U {S} Where S ∉ V1.The language L1*contains strings of the form x = x1x2 …xk, where each xi ∈ L1. 


>> Tokens are: 
[U, {, S, }, S, ∉, V1.The, language, L1*contains, strings, form, x, =, x1x2, …, xk, ,, xi, ∈, L1, .] 

>> PoS Tags are: 
[('U', 'PROPN'), ('{', 'PUNCT'), ('S', 'NOUN'), ('}', 'PUNCT'), ('S', 'PROPN'), ('∉', 'NOUN'), ('V1.The', 'PROPN'), ('language', 'NOUN'), ('L1*contains', 'VERB'), ('strings', 'NOUN'), ('form', 'NOUN'), ('x', 'SYM'), ('=', 'PUNCT'), ('x1x2', 'PUNCT'), ('…', 'PUNCT'), ('xk', 'X'), (',', 'PUNCT'), ('xi', 'ADP'), ('∈', 'PROPN'), ('L1', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('U', 'nmod'), ('{', 'punct'), ('S', 'appos'), ('}', 'punct'), ('S', 'compound'), ('∉', 'relcl'), ('V1.The', 'compound'), ('language', 'nsubj'), ('L1*contains', 'compound'), ('strings', 'ROOT'), ('form', 'pobj'), ('x', 'punct'), ('=', 'prep'), ('x1x2', 'punct'), ('…', 'punct'), ('xk', 'appos'), (',', 'punct'), ('xi', 'prep'), ('∈', 'compound'), ('L1', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[U, {], [{, S], [S, }], [}, S], [S, ∉], [∉, V1.The], [V1.The, language], [language, L1*contains], [L1*contains, strings], [strings, form], [form, x], [x, =], [=, x1x2], [x1x2, …], […, xk], [xk, ,], [,, xi], [xi, ∈], [∈, L1], [L1, .]]

>> Trigrams: 
[[U, {, S], [{, S, }], [S, }, S], [}, S, ∉], [S, ∉, V1.The], [∉, V1.The, language], [V1.The, language, L1*contains], [language, L1*contains, strings], [L1*contains, strings, form], [strings, form, x], [form, x, =], [x, =, x1x2], [=, x1x2, …], [x1x2, …, xk], […, xk, ,], [xk, ,, xi], [,, xi, ∈], [xi, ∈, L1], [∈, L1, .]]

>> Noun Phrases are: 
[{S, V1.The language, the form, ∈ L1]

>> Named Entities are: 
[('∈ L1', 'ORG')]


============================ Sentence 250 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 251 =============================

Since each xi can be derived from S1, then to derive x from S it is enough to be able to derive a string of k 


>> Tokens are: 
[xi, derived, S1, ,, derive, x, S, able, derive, string, k] 

>> PoS Tags are: 
[('xi', 'NOUN'), ('derived', 'VERB'), ('S1', 'PROPN'), (',', 'PUNCT'), ('derive', 'VERB'), ('x', 'PUNCT'), ('S', 'PROPN'), ('able', 'ADJ'), ('derive', 'VERB'), ('string', 'NOUN'), ('k', 'NOUN')] 

>> Dependency Tags are: 
[('xi', 'nsubjpass'), ('derived', 'advcl'), ('S1', 'pobj'), (',', 'punct'), ('derive', 'advcl'), ('x', 'punct'), ('S', 'pobj'), ('able', 'acomp'), ('derive', 'xcomp'), ('string', 'dobj'), ('k', 'pobj')]

>> Bigrams: 
[[xi, derived], [derived, S1], [S1, ,], [,, derive], [derive, x], [x, S], [S, able], [able, derive], [derive, string], [string, k]]

>> Trigrams: 
[[xi, derived, S1], [derived, S1, ,], [S1, ,, derive], [,, derive, x], [derive, x, S], [x, S, able], [S, able, derive], [able, derive, string], [derive, string, k]]

>> Noun Phrases are: 
[each xi, S1, S, it, a string, k]

>> Named Entities are: 
[]


============================ Sentence 252 =============================

S1‘S. 


>> Tokens are: 
[S1‘S.] 

>> PoS Tags are: 
[('S1‘S.', 'NOUN')] 

>> Dependency Tags are: 
[('S1‘S.', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[S1‘S.]

>> Named Entities are: 
[]


============================ Sentence 253 =============================

We can accomplish this by including the productions 		 


>> Tokens are: 
[accomplish, including, productions, 		] 

>> PoS Tags are: 
[('accomplish', 'VERB'), ('including', 'VERB'), ('productions', 'NOUN'), ('\t\t', 'SPACE')] 

>> Dependency Tags are: 
[('accomplish', 'ROOT'), ('including', 'pcomp'), ('productions', 'dobj'), ('\t\t', 'punct')]

>> Bigrams: 
[[accomplish, including], [including, productions], [productions, 		]]

>> Trigrams: 
[[accomplish, including, productions], [including, productions, 		]]

>> Noun Phrases are: 
[We, the productions]

>> Named Entities are: 
[]


============================ Sentence 254 =============================

SS1S |  ^ 


>> Tokens are: 
[SS1S, |,  , ^] 

>> PoS Tags are: 
[('S\uf0e0S1S', 'PROPN'), ('|', 'NOUN'), (' ', 'SPACE'), ('^', 'PUNCT')] 

>> Dependency Tags are: 
[('S\uf0e0S1S', 'compound'), ('|', 'ROOT'), (' ', 'prep'), ('^', 'punct')]

>> Bigrams: 
[[SS1S, |], [|,  ], [ , ^]]

>> Trigrams: 
[[SS1S, |,  ], [|,  , ^]]

>> Noun Phrases are: 
[SS1S |]

>> Named Entities are: 
[]


============================ Sentence 255 =============================

In P. Therefore, let 		P = 


>> Tokens are: 
[P., ,, let, 		, P, =] 

>> PoS Tags are: 
[('P.', 'PROPN'), (',', 'PUNCT'), ('let', 'VERB'), ('\t\t', 'SPACE'), ('P', 'NOUN'), ('=', 'SYM')] 

>> Dependency Tags are: 
[('P.', 'pobj'), (',', 'punct'), ('let', 'ROOT'), ('\t\t', 'compound'), ('P', 'dobj'), ('=', 'punct')]

>> Bigrams: 
[[P., ,], [,, let], [let, 		], [		, P], [P, =]]

>> Trigrams: 
[[P., ,, let], [,, let, 		], [let, 		, P], [		, P, =]]

>> Noun Phrases are: 
[P., 		P]

>> Named Entities are: 
[]


============================ Sentence 256 =============================

P1U { SS1S | ^ } The proof that L1 * ⊆ L(G*) is straightforward. 


>> Tokens are: 
[P1U, {, SS1S, |, ^, }, proof, L1, *, ⊆, L(G, *, ), straightforward, .] 

>> PoS Tags are: 
[('P1U', 'PROPN'), ('{', 'PUNCT'), ('S\uf0e0S1S', 'PROPN'), ('|', 'NOUN'), ('^', 'PUNCT'), ('}', 'PUNCT'), ('proof', 'NOUN'), ('L1', 'PROPN'), ('*', 'PUNCT'), ('⊆', 'NOUN'), ('L(G', 'PROPN'), ('*', 'PUNCT'), (')', 'PUNCT'), ('straightforward', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('P1U', 'ROOT'), ('{', 'punct'), ('S\uf0e0S1S', 'appos'), ('|', 'npadvmod'), ('^', 'punct'), ('}', 'punct'), ('proof', 'appos'), ('L1', 'compound'), ('*', 'punct'), ('⊆', 'compound'), ('L(G', 'nsubj'), ('*', 'punct'), (')', 'punct'), ('straightforward', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[P1U, {], [{, SS1S], [SS1S, |], [|, ^], [^, }], [}, proof], [proof, L1], [L1, *], [*, ⊆], [⊆, L(G], [L(G, *], [*, )], [), straightforward], [straightforward, .]]

>> Trigrams: 
[[P1U, {, SS1S], [{, SS1S, |], [SS1S, |, ^], [|, ^, }], [^, }, proof], [}, proof, L1], [proof, L1, *], [L1, *, ⊆], [*, ⊆, L(G], [⊆, L(G, *], [L(G, *, )], [*, ), straightforward], [), straightforward, .]]

>> Noun Phrases are: 
[P1U, SS1S, The proof, L1 * ⊆ L(G]

>> Named Entities are: 
[('L1 *', 'LOC'), ('L(G', 'GPE')]


============================ Sentence 257 =============================

If x ∈ L(G*) , on the other hand, then either x = or x can be derived from some string of the form S1k  in G* . 


>> Tokens are: 
[x, ∈, L(G, *, ), ,, hand, ,, x, =, x, derived, string, form, S1k,  , G, *, .] 

>> PoS Tags are: 
[('x', 'SYM'), ('∈', 'PROPN'), ('L(G', 'PROPN'), ('*', 'PUNCT'), (')', 'PUNCT'), (',', 'PUNCT'), ('hand', 'NOUN'), (',', 'PUNCT'), ('x', 'SYM'), ('=', 'X'), ('x', 'PUNCT'), ('derived', 'VERB'), ('string', 'NOUN'), ('form', 'NOUN'), ('S1k', 'PROPN'), (' ', 'SPACE'), ('G', 'PROPN'), ('*', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('x', 'punct'), ('∈', 'compound'), ('L(G', 'nsubjpass'), ('*', 'punct'), (')', 'punct'), (',', 'punct'), ('hand', 'pobj'), (',', 'punct'), ('x', 'punct'), ('=', 'nsubjpass'), ('x', 'conj'), ('derived', 'ROOT'), ('string', 'pobj'), ('form', 'pobj'), ('S1k', 'appos'), (' ', 'appos'), ('G', 'pobj'), ('*', 'dep'), ('.', 'punct')]

>> Bigrams: 
[[x, ∈], [∈, L(G], [L(G, *], [*, )], [), ,], [,, hand], [hand, ,], [,, x], [x, =], [=, x], [x, derived], [derived, string], [string, form], [form, S1k], [S1k,  ], [ , G], [G, *], [*, .]]

>> Trigrams: 
[[x, ∈, L(G], [∈, L(G, *], [L(G, *, )], [*, ), ,], [), ,, hand], [,, hand, ,], [hand, ,, x], [,, x, =], [x, =, x], [=, x, derived], [x, derived, string], [derived, string, form], [string, form, S1k], [form, S1k,  ], [S1k,  , G], [ , G, *], [G, *, .]]

>> Noun Phrases are: 
[x ∈ L(G, the other hand, some string, the form, S1k, G]

>> Named Entities are: 
[]


============================ Sentence 258 =============================

In the second case, since the only production in G* beginning with S1 are those in G1, we may conclude that  	x∈ L(G1)k ⊆ L(G1) 


>> Tokens are: 
[second, case, ,, production, G, *, beginning, S1, G1, ,, conclude,  	, x∈, L(G1)k, ⊆, L(G1, )] 

>> PoS Tags are: 
[('second', 'ADJ'), ('case', 'NOUN'), (',', 'PUNCT'), ('production', 'NOUN'), ('G', 'PROPN'), ('*', 'PUNCT'), ('beginning', 'VERB'), ('S1', 'PROPN'), ('G1', 'PROPN'), (',', 'PUNCT'), ('conclude', 'VERB'), (' \t', 'SPACE'), ('x∈', 'NOUN'), ('L(G1)k', 'PRON'), ('⊆', 'PROPN'), ('L(G1', 'PROPN'), (')', 'PUNCT')] 

>> Dependency Tags are: 
[('second', 'amod'), ('case', 'pobj'), (',', 'punct'), ('production', 'nsubj'), ('G', 'pobj'), ('*', 'punct'), ('beginning', 'acl'), ('S1', 'pobj'), ('G1', 'pobj'), (',', 'punct'), ('conclude', 'ROOT'), (' \t', 'compound'), ('x∈', 'dobj'), ('L(G1)k', 'prep'), ('⊆', 'compound'), ('L(G1', 'npadvmod'), (')', 'punct')]

>> Bigrams: 
[[second, case], [case, ,], [,, production], [production, G], [G, *], [*, beginning], [beginning, S1], [S1, G1], [G1, ,], [,, conclude], [conclude,  	], [ 	, x∈], [x∈, L(G1)k], [L(G1)k, ⊆], [⊆, L(G1], [L(G1, )]]

>> Trigrams: 
[[second, case, ,], [case, ,, production], [,, production, G], [production, G, *], [G, *, beginning], [*, beginning, S1], [beginning, S1, G1], [S1, G1, ,], [G1, ,, conclude], [,, conclude,  	], [conclude,  	, x∈], [ 	, x∈, L(G1)k], [x∈, L(G1)k, ⊆], [L(G1)k, ⊆, L(G1], [⊆, L(G1, )]]

>> Noun Phrases are: 
[the second case, the only production, G, S1, G1, we, that  	x∈]

>> Named Entities are: 
[('second', 'ORDINAL'), ('S1', 'ORG'), ('L(G1', 'PERSON')]


============================ Sentence 259 =============================

* . 


>> Tokens are: 
[*, .] 

>> PoS Tags are: 
[('*', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('*', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[*, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 260 =============================

  Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[  , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Unit', 'ROOT'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[  Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 261 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› End of Unit - 3   Unit – 3 : Context Free Grammar Darshan Institute of Engineering & Technology ‹#›   


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›, End, Unit, -, 3,   , Unit, –, 3, :, Context, Free, Grammar, Darshan, Institute, Engineering, &, Technology, ‹#›,  ] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'PROPN'), ('End', 'NOUN'), ('Unit', 'PROPN'), ('-', 'PUNCT'), ('3', 'NUM'), ('  ', 'SPACE'), ('Unit', 'NOUN'), ('–', 'PUNCT'), ('3', 'NUM'), (':', 'PUNCT'), ('Context', 'PROPN'), ('Free', 'PROPN'), ('Grammar', 'PROPN'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'compound'), ('End', 'conj'), ('Unit', 'pobj'), ('-', 'punct'), ('3', 'nummod'), ('  ', 'compound'), ('Unit', 'appos'), ('–', 'punct'), ('3', 'appos'), (':', 'punct'), ('Context', 'compound'), ('Free', 'compound'), ('Grammar', 'compound'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›, End], [End, Unit], [Unit, -], [-, 3], [3,   ], [  , Unit], [Unit, –], [–, 3], [3, :], [:, Context], [Context, Free], [Free, Grammar], [Grammar, Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›], [‹#›,  ]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›, End], [‹#›, End, Unit], [End, Unit, -], [Unit, -, 3], [-, 3,   ], [3,   , Unit], [  , Unit, –], [Unit, –, 3], [–, 3, :], [3, :, Context], [:, Context, Free], [Context, Free, Grammar], [Free, Grammar, Darshan], [Grammar, Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›], [Technology, ‹#›,  ]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology, ‹#› End, Unit, 3   Unit, Context Free Grammar Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology ‹#›', 'ORG'), ('3', 'CARDINAL'), ('Institute of Engineering & Technology', 'ORG')]


============================ Sentence 262 =============================

Theory of Computation (2160704) Darshan Institute of Engineering & Technology ‹#› 


>> Tokens are: 
[Theory, Computation, (, 2160704, ), Darshan, Institute, Engineering, &, Technology, ‹#›] 

>> PoS Tags are: 
[('Theory', 'NOUN'), ('Computation', 'PROPN'), ('(', 'PUNCT'), ('2160704', 'NUM'), (')', 'PUNCT'), ('Darshan', 'PROPN'), ('Institute', 'PROPN'), ('Engineering', 'PROPN'), ('&', 'CCONJ'), ('Technology', 'PROPN'), ('‹#›', 'X')] 

>> Dependency Tags are: 
[('Theory', 'ROOT'), ('Computation', 'pobj'), ('(', 'punct'), ('2160704', 'appos'), (')', 'punct'), ('Darshan', 'compound'), ('Institute', 'appos'), ('Engineering', 'pobj'), ('&', 'cc'), ('Technology', 'conj'), ('‹#›', 'punct')]

>> Bigrams: 
[[Theory, Computation], [Computation, (], [(, 2160704], [2160704, )], [), Darshan], [Darshan, Institute], [Institute, Engineering], [Engineering, &], [&, Technology], [Technology, ‹#›]]

>> Trigrams: 
[[Theory, Computation, (], [Computation, (, 2160704], [(, 2160704, )], [2160704, ), Darshan], [), Darshan, Institute], [Darshan, Institute, Engineering], [Institute, Engineering, &], [Engineering, &, Technology], [&, Technology, ‹#›]]

>> Noun Phrases are: 
[Theory, Computation, Darshan Institute, Engineering, Technology]

>> Named Entities are: 
[('Theory of Computation', 'ORG'), ('Darshan Institute of Engineering & Technology', 'ORG')]
