				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

AI-2   


>> Tokens are: 
[AI-2,  ] 

>> PoS Tags are: 
[('AI-2', 'NUM'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('AI-2', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[AI-2,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 2 =============================

Applications of AI AI has been dominant in various fields such as − · Gaming − AI plays crucial role in strategic games such as chess, poker, tic-tac-toe, etc., where machine can think of large number of possible positions based on heuristic knowledge. 


>> Tokens are: 
[Applications, AI, AI, dominant, fields, −, ·, Gaming, −, AI, plays, crucial, role, strategic, games, chess, ,, poker, ,, tic, -, tac, -, toe, ,, etc, ., ,, machine, think, large, number, possible, positions, based, heuristic, knowledge, .] 

>> PoS Tags are: 
[('Applications', 'NOUN'), ('AI', 'PROPN'), ('AI', 'PROPN'), ('dominant', 'ADJ'), ('fields', 'NOUN'), ('−', 'NOUN'), ('·', 'PUNCT'), ('Gaming', 'NOUN'), ('−', 'PROPN'), ('AI', 'PROPN'), ('plays', 'VERB'), ('crucial', 'ADJ'), ('role', 'NOUN'), ('strategic', 'ADJ'), ('games', 'NOUN'), ('chess', 'NOUN'), (',', 'PUNCT'), ('poker', 'NOUN'), (',', 'PUNCT'), ('tic', 'NOUN'), ('-', 'PUNCT'), ('tac', 'NOUN'), ('-', 'PUNCT'), ('toe', 'NOUN'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'X'), (',', 'PUNCT'), ('machine', 'NOUN'), ('think', 'VERB'), ('large', 'ADJ'), ('number', 'NOUN'), ('possible', 'ADJ'), ('positions', 'NOUN'), ('based', 'VERB'), ('heuristic', 'ADJ'), ('knowledge', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Applications', 'nsubj'), ('AI', 'compound'), ('AI', 'pobj'), ('dominant', 'acomp'), ('fields', 'pobj'), ('−', 'pobj'), ('·', 'punct'), ('Gaming', 'compound'), ('−', 'compound'), ('AI', 'nsubj'), ('plays', 'ROOT'), ('crucial', 'amod'), ('role', 'dobj'), ('strategic', 'amod'), ('games', 'pobj'), ('chess', 'pobj'), (',', 'punct'), ('poker', 'conj'), (',', 'punct'), ('tic', 'amod'), ('-', 'punct'), ('tac', 'compound'), ('-', 'punct'), ('toe', 'conj'), (',', 'punct'), ('etc', 'conj'), ('.', 'conj'), (',', 'punct'), ('machine', 'nsubj'), ('think', 'relcl'), ('large', 'amod'), ('number', 'pobj'), ('possible', 'amod'), ('positions', 'pobj'), ('based', 'acl'), ('heuristic', 'amod'), ('knowledge', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Applications, AI], [AI, AI], [AI, dominant], [dominant, fields], [fields, −], [−, ·], [·, Gaming], [Gaming, −], [−, AI], [AI, plays], [plays, crucial], [crucial, role], [role, strategic], [strategic, games], [games, chess], [chess, ,], [,, poker], [poker, ,], [,, tic], [tic, -], [-, tac], [tac, -], [-, toe], [toe, ,], [,, etc], [etc, .], [., ,], [,, machine], [machine, think], [think, large], [large, number], [number, possible], [possible, positions], [positions, based], [based, heuristic], [heuristic, knowledge], [knowledge, .]]

>> Trigrams: 
[[Applications, AI, AI], [AI, AI, dominant], [AI, dominant, fields], [dominant, fields, −], [fields, −, ·], [−, ·, Gaming], [·, Gaming, −], [Gaming, −, AI], [−, AI, plays], [AI, plays, crucial], [plays, crucial, role], [crucial, role, strategic], [role, strategic, games], [strategic, games, chess], [games, chess, ,], [chess, ,, poker], [,, poker, ,], [poker, ,, tic], [,, tic, -], [tic, -, tac], [-, tac, -], [tac, -, toe], [-, toe, ,], [toe, ,, etc], [,, etc, .], [etc, ., ,], [., ,, machine], [,, machine, think], [machine, think, large], [think, large, number], [large, number, possible], [number, possible, positions], [possible, positions, based], [positions, based, heuristic], [based, heuristic, knowledge], [heuristic, knowledge, .]]

>> Noun Phrases are: 
[Applications, AI AI, various fields, −, Gaming − AI, crucial role, strategic games, chess, poker, tic-tac-toe, machine, large number, possible positions, heuristic knowledge]

>> Named Entities are: 
[]


============================ Sentence 3 =============================

· 


>> Tokens are: 
[·] 

>> PoS Tags are: 
[('·', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 4 =============================

Natural Language Processing − It is possible to interact with the computer that understands natural language spoken by humans. 


>> Tokens are: 
[Natural, Language, Processing, −, possible, interact, computer, understands, natural, language, spoken, humans, .] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'NOUN'), ('−', 'NOUN'), ('possible', 'ADJ'), ('interact', 'VERB'), ('computer', 'NOUN'), ('understands', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('spoken', 'VERB'), ('humans', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'compound'), ('−', 'npadvmod'), ('possible', 'acomp'), ('interact', 'xcomp'), ('computer', 'pobj'), ('understands', 'relcl'), ('natural', 'amod'), ('language', 'dobj'), ('spoken', 'acl'), ('humans', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Natural, Language], [Language, Processing], [Processing, −], [−, possible], [possible, interact], [interact, computer], [computer, understands], [understands, natural], [natural, language], [language, spoken], [spoken, humans], [humans, .]]

>> Trigrams: 
[[Natural, Language, Processing], [Language, Processing, −], [Processing, −, possible], [−, possible, interact], [possible, interact, computer], [interact, computer, understands], [computer, understands, natural], [understands, natural, language], [natural, language, spoken], [language, spoken, humans], [spoken, humans, .]]

>> Noun Phrases are: 
[It, the computer, natural language, humans]

>> Named Entities are: 
[]


============================ Sentence 5 =============================

· Expert Systems − There are some applications which integrate machine, software, and special information to impart reasoning and advising. 


>> Tokens are: 
[·, Expert, Systems, −, applications, integrate, machine, ,, software, ,, special, information, impart, reasoning, advising, .] 

>> PoS Tags are: 
[('·', 'PUNCT'), ('Expert', 'PROPN'), ('Systems', 'PROPN'), ('−', 'NOUN'), ('applications', 'NOUN'), ('integrate', 'VERB'), ('machine', 'NOUN'), (',', 'PUNCT'), ('software', 'NOUN'), (',', 'PUNCT'), ('special', 'ADJ'), ('information', 'NOUN'), ('impart', 'ADJ'), ('reasoning', 'NOUN'), ('advising', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'punct'), ('Expert', 'compound'), ('Systems', 'compound'), ('−', 'dep'), ('applications', 'attr'), ('integrate', 'relcl'), ('machine', 'dobj'), (',', 'punct'), ('software', 'conj'), (',', 'punct'), ('special', 'amod'), ('information', 'conj'), ('impart', 'advcl'), ('reasoning', 'dobj'), ('advising', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[·, Expert], [Expert, Systems], [Systems, −], [−, applications], [applications, integrate], [integrate, machine], [machine, ,], [,, software], [software, ,], [,, special], [special, information], [information, impart], [impart, reasoning], [reasoning, advising], [advising, .]]

>> Trigrams: 
[[·, Expert, Systems], [Expert, Systems, −], [Systems, −, applications], [−, applications, integrate], [applications, integrate, machine], [integrate, machine, ,], [machine, ,, software], [,, software, ,], [software, ,, special], [,, special, information], [special, information, impart], [information, impart, reasoning], [impart, reasoning, advising], [reasoning, advising, .]]

>> Noun Phrases are: 
[some applications, machine, software, special information, reasoning, advising]

>> Named Entities are: 
[]


============================ Sentence 6 =============================

They provide explanation and advice to the users. 


>> Tokens are: 
[provide, explanation, advice, users, .] 

>> PoS Tags are: 
[('provide', 'VERB'), ('explanation', 'NOUN'), ('advice', 'NOUN'), ('users', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('provide', 'ROOT'), ('explanation', 'dobj'), ('advice', 'conj'), ('users', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[provide, explanation], [explanation, advice], [advice, users], [users, .]]

>> Trigrams: 
[[provide, explanation, advice], [explanation, advice, users], [advice, users, .]]

>> Noun Phrases are: 
[They, explanation, advice, the users]

>> Named Entities are: 
[]


============================ Sentence 7 =============================

· 


>> Tokens are: 
[·] 

>> PoS Tags are: 
[('·', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 8 =============================

Vision Systems − These systems understand, interpret, and comprehend visual input on the computer. 


>> Tokens are: 
[Vision, Systems, −, systems, understand, ,, interpret, ,, comprehend, visual, input, computer, .] 

>> PoS Tags are: 
[('Vision', 'PROPN'), ('Systems', 'PROPN'), ('−', 'PROPN'), ('systems', 'NOUN'), ('understand', 'VERB'), (',', 'PUNCT'), ('interpret', 'VERB'), (',', 'PUNCT'), ('comprehend', 'VERB'), ('visual', 'ADJ'), ('input', 'NOUN'), ('computer', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Vision', 'compound'), ('Systems', 'compound'), ('−', 'nsubj'), ('systems', 'nsubj'), ('understand', 'ROOT'), (',', 'punct'), ('interpret', 'conj'), (',', 'punct'), ('comprehend', 'conj'), ('visual', 'amod'), ('input', 'dobj'), ('computer', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Vision, Systems], [Systems, −], [−, systems], [systems, understand], [understand, ,], [,, interpret], [interpret, ,], [,, comprehend], [comprehend, visual], [visual, input], [input, computer], [computer, .]]

>> Trigrams: 
[[Vision, Systems, −], [Systems, −, systems], [−, systems, understand], [systems, understand, ,], [understand, ,, interpret], [,, interpret, ,], [interpret, ,, comprehend], [,, comprehend, visual], [comprehend, visual, input], [visual, input, computer], [input, computer, .]]

>> Noun Phrases are: 
[Vision Systems −, These systems, visual input, the computer]

>> Named Entities are: 
[('Vision Systems', 'ORG')]


============================ Sentence 9 =============================

For example, · A spying aeroplane takes photographs, which are used to figure out spatial information or map of the areas. 


>> Tokens are: 
[example, ,, ·, spying, aeroplane, takes, photographs, ,, figure, spatial, information, map, areas, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('·', 'PUNCT'), ('spying', 'VERB'), ('aeroplane', 'NOUN'), ('takes', 'VERB'), ('photographs', 'NOUN'), (',', 'PUNCT'), ('figure', 'VERB'), ('spatial', 'ADJ'), ('information', 'NOUN'), ('map', 'NOUN'), ('areas', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('·', 'punct'), ('spying', 'compound'), ('aeroplane', 'nsubj'), ('takes', 'ROOT'), ('photographs', 'dobj'), (',', 'punct'), ('figure', 'xcomp'), ('spatial', 'amod'), ('information', 'dobj'), ('map', 'conj'), ('areas', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, ·], [·, spying], [spying, aeroplane], [aeroplane, takes], [takes, photographs], [photographs, ,], [,, figure], [figure, spatial], [spatial, information], [information, map], [map, areas], [areas, .]]

>> Trigrams: 
[[example, ,, ·], [,, ·, spying], [·, spying, aeroplane], [spying, aeroplane, takes], [aeroplane, takes, photographs], [takes, photographs, ,], [photographs, ,, figure], [,, figure, spatial], [figure, spatial, information], [spatial, information, map], [information, map, areas], [map, areas, .]]

>> Noun Phrases are: 
[example, A spying aeroplane, photographs, spatial information, map, the areas]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

· Doctors use clinical expert system to diagnose the patient. 


>> Tokens are: 
[·, Doctors, use, clinical, expert, system, diagnose, patient, .] 

>> PoS Tags are: 
[('·', 'PUNCT'), ('Doctors', 'NOUN'), ('use', 'VERB'), ('clinical', 'ADJ'), ('expert', 'NOUN'), ('system', 'NOUN'), ('diagnose', 'VERB'), ('patient', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'punct'), ('Doctors', 'nsubj'), ('use', 'ROOT'), ('clinical', 'amod'), ('expert', 'compound'), ('system', 'dobj'), ('diagnose', 'xcomp'), ('patient', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[·, Doctors], [Doctors, use], [use, clinical], [clinical, expert], [expert, system], [system, diagnose], [diagnose, patient], [patient, .]]

>> Trigrams: 
[[·, Doctors, use], [Doctors, use, clinical], [use, clinical, expert], [clinical, expert, system], [expert, system, diagnose], [system, diagnose, patient], [diagnose, patient, .]]

>> Noun Phrases are: 
[Doctors, clinical expert system, the patient]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

· 


>> Tokens are: 
[·] 

>> PoS Tags are: 
[('·', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 12 =============================

Police use computer software that can recognize the face of criminal with the stored portrait made by forensic artist. 


>> Tokens are: 
[Police, use, computer, software, recognize, face, criminal, stored, portrait, forensic, artist, .] 

>> PoS Tags are: 
[('Police', 'NOUN'), ('use', 'VERB'), ('computer', 'NOUN'), ('software', 'NOUN'), ('recognize', 'VERB'), ('face', 'NOUN'), ('criminal', 'NOUN'), ('stored', 'VERB'), ('portrait', 'NOUN'), ('forensic', 'ADJ'), ('artist', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Police', 'nsubj'), ('use', 'ROOT'), ('computer', 'compound'), ('software', 'dobj'), ('recognize', 'relcl'), ('face', 'dobj'), ('criminal', 'pobj'), ('stored', 'amod'), ('portrait', 'pobj'), ('forensic', 'amod'), ('artist', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Police, use], [use, computer], [computer, software], [software, recognize], [recognize, face], [face, criminal], [criminal, stored], [stored, portrait], [portrait, forensic], [forensic, artist], [artist, .]]

>> Trigrams: 
[[Police, use, computer], [use, computer, software], [computer, software, recognize], [software, recognize, face], [recognize, face, criminal], [face, criminal, stored], [criminal, stored, portrait], [stored, portrait, forensic], [portrait, forensic, artist], [forensic, artist, .]]

>> Noun Phrases are: 
[Police, computer software, the face, criminal, the stored portrait, forensic artist]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

· 


>> Tokens are: 
[·] 

>> PoS Tags are: 
[('·', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 14 =============================

Speech Recognition − Some intelligent systems are capable of hearing and comprehending the language in terms of sentences and their meanings while a human talks to it. 


>> Tokens are: 
[Speech, Recognition, −, intelligent, systems, capable, hearing, comprehending, language, terms, sentences, meanings, human, talks, .] 

>> PoS Tags are: 
[('Speech', 'PROPN'), ('Recognition', 'PROPN'), ('−', 'PROPN'), ('intelligent', 'ADJ'), ('systems', 'NOUN'), ('capable', 'ADJ'), ('hearing', 'VERB'), ('comprehending', 'VERB'), ('language', 'NOUN'), ('terms', 'NOUN'), ('sentences', 'NOUN'), ('meanings', 'NOUN'), ('human', 'ADJ'), ('talks', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Speech', 'compound'), ('Recognition', 'compound'), ('−', 'ROOT'), ('intelligent', 'amod'), ('systems', 'nsubj'), ('capable', 'acomp'), ('hearing', 'pcomp'), ('comprehending', 'conj'), ('language', 'dobj'), ('terms', 'pobj'), ('sentences', 'pobj'), ('meanings', 'conj'), ('human', 'amod'), ('talks', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Speech, Recognition], [Recognition, −], [−, intelligent], [intelligent, systems], [systems, capable], [capable, hearing], [hearing, comprehending], [comprehending, language], [language, terms], [terms, sentences], [sentences, meanings], [meanings, human], [human, talks], [talks, .]]

>> Trigrams: 
[[Speech, Recognition, −], [Recognition, −, intelligent], [−, intelligent, systems], [intelligent, systems, capable], [systems, capable, hearing], [capable, hearing, comprehending], [hearing, comprehending, language], [comprehending, language, terms], [language, terms, sentences], [terms, sentences, meanings], [sentences, meanings, human], [meanings, human, talks], [human, talks, .]]

>> Noun Phrases are: 
[Speech Recognition −, Some intelligent systems, the language, terms, sentences, their meanings, it]

>> Named Entities are: 
[('Speech Recognition −', 'PERSON')]


============================ Sentence 15 =============================

It can handle different accents, slang words, noise in the background, change in human’s noise due to cold, etc. · 


>> Tokens are: 
[handle, different, accents, ,, slang, words, ,, noise, background, ,, change, human, noise, cold, ,, etc, ., ·] 

>> PoS Tags are: 
[('handle', 'VERB'), ('different', 'ADJ'), ('accents', 'NOUN'), (',', 'PUNCT'), ('slang', 'NOUN'), ('words', 'NOUN'), (',', 'PUNCT'), ('noise', 'NOUN'), ('background', 'NOUN'), (',', 'PUNCT'), ('change', 'VERB'), ('human', 'NOUN'), ('noise', 'NOUN'), ('cold', 'ADJ'), (',', 'PUNCT'), ('etc', 'X'), ('.', 'PUNCT'), ('·', 'PUNCT')] 

>> Dependency Tags are: 
[('handle', 'ROOT'), ('different', 'amod'), ('accents', 'dobj'), (',', 'punct'), ('slang', 'compound'), ('words', 'conj'), (',', 'punct'), ('noise', 'conj'), ('background', 'pobj'), (',', 'punct'), ('change', 'conj'), ('human', 'poss'), ('noise', 'pobj'), ('cold', 'pobj'), (',', 'punct'), ('etc', 'conj'), ('.', 'punct'), ('·', 'punct')]

>> Bigrams: 
[[handle, different], [different, accents], [accents, ,], [,, slang], [slang, words], [words, ,], [,, noise], [noise, background], [background, ,], [,, change], [change, human], [human, noise], [noise, cold], [cold, ,], [,, etc], [etc, .], [., ·]]

>> Trigrams: 
[[handle, different, accents], [different, accents, ,], [accents, ,, slang], [,, slang, words], [slang, words, ,], [words, ,, noise], [,, noise, background], [noise, background, ,], [background, ,, change], [,, change, human], [change, human, noise], [human, noise, cold], [noise, cold, ,], [cold, ,, etc], [,, etc, .], [etc, ., ·]]

>> Noun Phrases are: 
[It, different accents, slang words, noise, the background, human’s noise]

>> Named Entities are: 
[]


============================ Sentence 16 =============================

Handwriting Recognition − The handwriting recognition software reads the text written on paper by a pen or on screen by a stylus. 


>> Tokens are: 
[Handwriting, Recognition, −, handwriting, recognition, software, reads, text, written, paper, pen, screen, stylus, .] 

>> PoS Tags are: 
[('Handwriting', 'NOUN'), ('Recognition', 'NOUN'), ('−', 'VERB'), ('handwriting', 'NOUN'), ('recognition', 'NOUN'), ('software', 'NOUN'), ('reads', 'VERB'), ('text', 'NOUN'), ('written', 'VERB'), ('paper', 'NOUN'), ('pen', 'NOUN'), ('screen', 'NOUN'), ('stylus', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Handwriting', 'compound'), ('Recognition', 'compound'), ('−', 'npadvmod'), ('handwriting', 'compound'), ('recognition', 'compound'), ('software', 'nsubj'), ('reads', 'ROOT'), ('text', 'dobj'), ('written', 'acl'), ('paper', 'pobj'), ('pen', 'pobj'), ('screen', 'pobj'), ('stylus', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Handwriting, Recognition], [Recognition, −], [−, handwriting], [handwriting, recognition], [recognition, software], [software, reads], [reads, text], [text, written], [written, paper], [paper, pen], [pen, screen], [screen, stylus], [stylus, .]]

>> Trigrams: 
[[Handwriting, Recognition, −], [Recognition, −, handwriting], [−, handwriting, recognition], [handwriting, recognition, software], [recognition, software, reads], [software, reads, text], [reads, text, written], [text, written, paper], [written, paper, pen], [paper, pen, screen], [pen, screen, stylus], [screen, stylus, .]]

>> Noun Phrases are: 
[The handwriting recognition software, the text, paper, a pen, screen, a stylus]

>> Named Entities are: 
[]


============================ Sentence 17 =============================

It can recognize the shapes of the letters and convert it into editable text. 


>> Tokens are: 
[recognize, shapes, letters, convert, editable, text, .] 

>> PoS Tags are: 
[('recognize', 'VERB'), ('shapes', 'NOUN'), ('letters', 'NOUN'), ('convert', 'VERB'), ('editable', 'ADJ'), ('text', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recognize', 'ROOT'), ('shapes', 'dobj'), ('letters', 'pobj'), ('convert', 'conj'), ('editable', 'amod'), ('text', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[recognize, shapes], [shapes, letters], [letters, convert], [convert, editable], [editable, text], [text, .]]

>> Trigrams: 
[[recognize, shapes, letters], [shapes, letters, convert], [letters, convert, editable], [convert, editable, text], [editable, text, .]]

>> Noun Phrases are: 
[It, the shapes, the letters, it, editable text]

>> Named Entities are: 
[]


============================ Sentence 18 =============================

· 


>> Tokens are: 
[·] 

>> PoS Tags are: 
[('·', 'PUNCT')] 

>> Dependency Tags are: 
[('·', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 19 =============================

Intelligent Robots − Robots are able to perform the tasks given by a human. 


>> Tokens are: 
[Intelligent, Robots, −, Robots, able, perform, tasks, given, human, .] 

>> PoS Tags are: 
[('Intelligent', 'PROPN'), ('Robots', 'NOUN'), ('−', 'PROPN'), ('Robots', 'PROPN'), ('able', 'ADJ'), ('perform', 'VERB'), ('tasks', 'NOUN'), ('given', 'VERB'), ('human', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Intelligent', 'amod'), ('Robots', 'nsubj'), ('−', 'compound'), ('Robots', 'nsubj'), ('able', 'acomp'), ('perform', 'xcomp'), ('tasks', 'dobj'), ('given', 'acl'), ('human', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Intelligent, Robots], [Robots, −], [−, Robots], [Robots, able], [able, perform], [perform, tasks], [tasks, given], [given, human], [human, .]]

>> Trigrams: 
[[Intelligent, Robots, −], [Robots, −, Robots], [−, Robots, able], [Robots, able, perform], [able, perform, tasks], [perform, tasks, given], [tasks, given, human], [given, human, .]]

>> Noun Phrases are: 
[Intelligent Robots, − Robots, the tasks, a human]

>> Named Entities are: 
[('Intelligent Robots − Robots', 'PERSON')]


============================ Sentence 20 =============================

They have sensors to detect physical data from the real world such as light, heat, temperature, movement, sound, bump, and pressure. 


>> Tokens are: 
[sensors, detect, physical, data, real, world, light, ,, heat, ,, temperature, ,, movement, ,, sound, ,, bump, ,, pressure, .] 

>> PoS Tags are: 
[('sensors', 'NOUN'), ('detect', 'VERB'), ('physical', 'ADJ'), ('data', 'NOUN'), ('real', 'ADJ'), ('world', 'NOUN'), ('light', 'ADJ'), (',', 'PUNCT'), ('heat', 'NOUN'), (',', 'PUNCT'), ('temperature', 'NOUN'), (',', 'PUNCT'), ('movement', 'NOUN'), (',', 'PUNCT'), ('sound', 'NOUN'), (',', 'PUNCT'), ('bump', 'NOUN'), (',', 'PUNCT'), ('pressure', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sensors', 'dobj'), ('detect', 'acl'), ('physical', 'amod'), ('data', 'dobj'), ('real', 'amod'), ('world', 'pobj'), ('light', 'pobj'), (',', 'punct'), ('heat', 'conj'), (',', 'punct'), ('temperature', 'conj'), (',', 'punct'), ('movement', 'conj'), (',', 'punct'), ('sound', 'conj'), (',', 'punct'), ('bump', 'conj'), (',', 'punct'), ('pressure', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[sensors, detect], [detect, physical], [physical, data], [data, real], [real, world], [world, light], [light, ,], [,, heat], [heat, ,], [,, temperature], [temperature, ,], [,, movement], [movement, ,], [,, sound], [sound, ,], [,, bump], [bump, ,], [,, pressure], [pressure, .]]

>> Trigrams: 
[[sensors, detect, physical], [detect, physical, data], [physical, data, real], [data, real, world], [real, world, light], [world, light, ,], [light, ,, heat], [,, heat, ,], [heat, ,, temperature], [,, temperature, ,], [temperature, ,, movement], [,, movement, ,], [movement, ,, sound], [,, sound, ,], [sound, ,, bump], [,, bump, ,], [bump, ,, pressure], [,, pressure, .]]

>> Noun Phrases are: 
[They, sensors, physical data, the real world, heat, temperature, movement, sound, bump, pressure]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

They have efficient processors, multiple sensors and huge memory, to exhibit intelligence. 


>> Tokens are: 
[efficient, processors, ,, multiple, sensors, huge, memory, ,, exhibit, intelligence, .] 

>> PoS Tags are: 
[('efficient', 'ADJ'), ('processors', 'NOUN'), (',', 'PUNCT'), ('multiple', 'ADJ'), ('sensors', 'NOUN'), ('huge', 'ADJ'), ('memory', 'NOUN'), (',', 'PUNCT'), ('exhibit', 'VERB'), ('intelligence', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('efficient', 'amod'), ('processors', 'dobj'), (',', 'punct'), ('multiple', 'amod'), ('sensors', 'conj'), ('huge', 'amod'), ('memory', 'conj'), (',', 'punct'), ('exhibit', 'advcl'), ('intelligence', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[efficient, processors], [processors, ,], [,, multiple], [multiple, sensors], [sensors, huge], [huge, memory], [memory, ,], [,, exhibit], [exhibit, intelligence], [intelligence, .]]

>> Trigrams: 
[[efficient, processors, ,], [processors, ,, multiple], [,, multiple, sensors], [multiple, sensors, huge], [sensors, huge, memory], [huge, memory, ,], [memory, ,, exhibit], [,, exhibit, intelligence], [exhibit, intelligence, .]]

>> Noun Phrases are: 
[They, efficient processors, multiple sensors, huge memory, intelligence]

>> Named Entities are: 
[]


============================ Sentence 22 =============================

In addition, they are capable of learning from their mistakes and they can adapt to the new environment. 


>> Tokens are: 
[addition, ,, capable, learning, mistakes, adapt, new, environment, .] 

>> PoS Tags are: 
[('addition', 'NOUN'), (',', 'PUNCT'), ('capable', 'ADJ'), ('learning', 'VERB'), ('mistakes', 'NOUN'), ('adapt', 'VERB'), ('new', 'ADJ'), ('environment', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('addition', 'pobj'), (',', 'punct'), ('capable', 'acomp'), ('learning', 'pcomp'), ('mistakes', 'pobj'), ('adapt', 'conj'), ('new', 'amod'), ('environment', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[addition, ,], [,, capable], [capable, learning], [learning, mistakes], [mistakes, adapt], [adapt, new], [new, environment], [environment, .]]

>> Trigrams: 
[[addition, ,, capable], [,, capable, learning], [capable, learning, mistakes], [learning, mistakes, adapt], [mistakes, adapt, new], [adapt, new, environment], [new, environment, .]]

>> Noun Phrases are: 
[addition, they, their mistakes, they, the new environment]

>> Named Entities are: 
[]


============================ Sentence 23 =============================

History of AI 


>> Tokens are: 
[History, AI] 

>> PoS Tags are: 
[('History', 'NOUN'), ('AI', 'PROPN')] 

>> Dependency Tags are: 
[('History', 'ROOT'), ('AI', 'pobj')]

>> Bigrams: 
[[History, AI]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[History, AI]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

Here is the history of AI during 20th century − 	Year 	Milestone / Innovation  	1923 	Karel Čapek play named “Rossum's Universal Robots” (RUR) opens in London, first use of the word "robot" in English. 


>> Tokens are: 
[history, AI, 20th, century, −, 	, Year, 	, Milestone, /, Innovation,  	, 1923, 	, Karel, Čapek, play, named, “, Rossum, Universal, Robots, ”, (, RUR, ), opens, London, ,, use, word, ", robot, ", English, .] 

>> PoS Tags are: 
[('history', 'NOUN'), ('AI', 'PROPN'), ('20th', 'ADJ'), ('century', 'NOUN'), ('−', 'PROPN'), ('\t', 'SPACE'), ('Year', 'PROPN'), ('\t', 'SPACE'), ('Milestone', 'PROPN'), ('/', 'SYM'), ('Innovation', 'PROPN'), (' \t', 'SPACE'), ('1923', 'NUM'), ('\t', 'SPACE'), ('Karel', 'PROPN'), ('Čapek', 'PROPN'), ('play', 'NOUN'), ('named', 'VERB'), ('“', 'PUNCT'), ('Rossum', 'PROPN'), ('Universal', 'PROPN'), ('Robots', 'PROPN'), ('”', 'PUNCT'), ('(', 'PUNCT'), ('RUR', 'PROPN'), (')', 'PUNCT'), ('opens', 'VERB'), ('London', 'PROPN'), (',', 'PUNCT'), ('use', 'NOUN'), ('word', 'NOUN'), ('"', 'PUNCT'), ('robot', 'NOUN'), ('"', 'PUNCT'), ('English', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('history', 'nsubj'), ('AI', 'pobj'), ('20th', 'amod'), ('century', 'compound'), ('−', 'compound'), ('\t', 'compound'), ('Year', 'nmod'), ('\t', 'nmod'), ('Milestone', 'nmod'), ('/', 'punct'), ('Innovation', 'nmod'), (' \t', 'compound'), ('1923', 'nummod'), ('\t', 'compound'), ('Karel', 'compound'), ('Čapek', 'nsubj'), ('play', 'pobj'), ('named', 'acl'), ('“', 'punct'), ('Rossum', 'poss'), ('Universal', 'compound'), ('Robots', 'oprd'), ('”', 'punct'), ('(', 'punct'), ('RUR', 'appos'), (')', 'punct'), ('opens', 'ccomp'), ('London', 'pobj'), (',', 'punct'), ('use', 'attr'), ('word', 'nmod'), ('"', 'punct'), ('robot', 'pobj'), ('"', 'punct'), ('English', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[history, AI], [AI, 20th], [20th, century], [century, −], [−, 	], [	, Year], [Year, 	], [	, Milestone], [Milestone, /], [/, Innovation], [Innovation,  	], [ 	, 1923], [1923, 	], [	, Karel], [Karel, Čapek], [Čapek, play], [play, named], [named, “], [“, Rossum], [Rossum, Universal], [Universal, Robots], [Robots, ”], [”, (], [(, RUR], [RUR, )], [), opens], [opens, London], [London, ,], [,, use], [use, word], [word, "], [", robot], [robot, "], [", English], [English, .]]

>> Trigrams: 
[[history, AI, 20th], [AI, 20th, century], [20th, century, −], [century, −, 	], [−, 	, Year], [	, Year, 	], [Year, 	, Milestone], [	, Milestone, /], [Milestone, /, Innovation], [/, Innovation,  	], [Innovation,  	, 1923], [ 	, 1923, 	], [1923, 	, Karel], [	, Karel, Čapek], [Karel, Čapek, play], [Čapek, play, named], [play, named, “], [named, “, Rossum], [“, Rossum, Universal], [Rossum, Universal, Robots], [Universal, Robots, ”], [Robots, ”, (], [”, (, RUR], [(, RUR, )], [RUR, ), opens], [), opens, London], [opens, London, ,], [London, ,, use], [,, use, word], [use, word, "], [word, ", robot], [", robot, "], [robot, ", English], [", English, .]]

>> Noun Phrases are: 
[the history, AI, 	Karel Čapek, Rossum's Universal Robots, (RUR, London, first use, the word "robot, English]

>> Named Entities are: 
[('AI', 'ORG'), ('20th century −', 'DATE'), ('1923', 'DATE'), ('Karel Čapek', 'PERSON'), ("Rossum's Universal Robots", 'WORK_OF_ART'), ('RUR', 'ORG'), ('London', 'GPE'), ('first', 'ORDINAL'), ('English', 'LANGUAGE')]


============================ Sentence 25 =============================

 	1943 	Foundations for neural networks laid. 


>> Tokens are: 
[ 	, 1943, 	, Foundations, neural, networks, laid, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1943', 'NUM'), ('\t', 'SPACE'), ('Foundations', 'PROPN'), ('neural', 'ADJ'), ('networks', 'NOUN'), ('laid', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('1943', 'appos'), ('\t', 'compound'), ('Foundations', 'nsubj'), ('neural', 'amod'), ('networks', 'pobj'), ('laid', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1943], [1943, 	], [	, Foundations], [Foundations, neural], [neural, networks], [networks, laid], [laid, .]]

>> Trigrams: 
[[ 	, 1943, 	], [1943, 	, Foundations], [	, Foundations, neural], [Foundations, neural, networks], [neural, networks, laid], [networks, laid, .]]

>> Noun Phrases are: 
[ 	1943 	Foundations, neural networks]

>> Named Entities are: 
[('1943', 'DATE')]


============================ Sentence 26 =============================

 	1945 


>> Tokens are: 
[ 	, 1945] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1945', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('1945', 'nummod')]

>> Bigrams: 
[[ 	, 1945]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1945', 'DATE')]


============================ Sentence 27 =============================

	Isaac Asimov, a Columbia University alumni, coined the term Robotics. 


>> Tokens are: 
[	, Isaac, Asimov, ,, Columbia, University, alumni, ,, coined, term, Robotics, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Isaac', 'PROPN'), ('Asimov', 'PROPN'), (',', 'PUNCT'), ('Columbia', 'PROPN'), ('University', 'PROPN'), ('alumni', 'NOUN'), (',', 'PUNCT'), ('coined', 'VERB'), ('term', 'NOUN'), ('Robotics', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Isaac', 'compound'), ('Asimov', 'nsubj'), (',', 'punct'), ('Columbia', 'compound'), ('University', 'compound'), ('alumni', 'appos'), (',', 'punct'), ('coined', 'ROOT'), ('term', 'compound'), ('Robotics', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Isaac], [Isaac, Asimov], [Asimov, ,], [,, Columbia], [Columbia, University], [University, alumni], [alumni, ,], [,, coined], [coined, term], [term, Robotics], [Robotics, .]]

>> Trigrams: 
[[	, Isaac, Asimov], [Isaac, Asimov, ,], [Asimov, ,, Columbia], [,, Columbia, University], [Columbia, University, alumni], [University, alumni, ,], [alumni, ,, coined], [,, coined, term], [coined, term, Robotics], [term, Robotics, .]]

>> Noun Phrases are: 
[	Isaac Asimov, a Columbia University alumni, the term Robotics]

>> Named Entities are: 
[('Isaac Asimov', 'PERSON'), ('Columbia University', 'ORG')]


============================ Sentence 28 =============================

 	1950 	Alan Turing introduced Turing Test for evaluation of intelligence and published Computing Machinery and Intelligence. 


>> Tokens are: 
[ 	, 1950, 	, Alan, Turing, introduced, Turing, Test, evaluation, intelligence, published, Computing, Machinery, Intelligence, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1950', 'NUM'), ('\t', 'SPACE'), ('Alan', 'PROPN'), ('Turing', 'PROPN'), ('introduced', 'VERB'), ('Turing', 'PROPN'), ('Test', 'PROPN'), ('evaluation', 'NOUN'), ('intelligence', 'NOUN'), ('published', 'VERB'), ('Computing', 'PROPN'), ('Machinery', 'PROPN'), ('Intelligence', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nmod'), ('1950', 'nummod'), ('\t', 'compound'), ('Alan', 'compound'), ('Turing', 'nsubj'), ('introduced', 'ROOT'), ('Turing', 'compound'), ('Test', 'dobj'), ('evaluation', 'pobj'), ('intelligence', 'pobj'), ('published', 'conj'), ('Computing', 'compound'), ('Machinery', 'dobj'), ('Intelligence', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1950], [1950, 	], [	, Alan], [Alan, Turing], [Turing, introduced], [introduced, Turing], [Turing, Test], [Test, evaluation], [evaluation, intelligence], [intelligence, published], [published, Computing], [Computing, Machinery], [Machinery, Intelligence], [Intelligence, .]]

>> Trigrams: 
[[ 	, 1950, 	], [1950, 	, Alan], [	, Alan, Turing], [Alan, Turing, introduced], [Turing, introduced, Turing], [introduced, Turing, Test], [Turing, Test, evaluation], [Test, evaluation, intelligence], [evaluation, intelligence, published], [intelligence, published, Computing], [published, Computing, Machinery], [Computing, Machinery, Intelligence], [Machinery, Intelligence, .]]

>> Noun Phrases are: 
[ 	1950 	Alan Turing, Turing Test, evaluation, intelligence, Computing Machinery, Intelligence]

>> Named Entities are: 
[('1950', 'DATE'), ('Computing Machinery', 'PRODUCT'), ('Intelligence', 'ORG')]


============================ Sentence 29 =============================

Claude Shannon published Detailed Analysis of Chess Playing as a search. 


>> Tokens are: 
[Claude, Shannon, published, Detailed, Analysis, Chess, Playing, search, .] 

>> PoS Tags are: 
[('Claude', 'PROPN'), ('Shannon', 'PROPN'), ('published', 'VERB'), ('Detailed', 'PROPN'), ('Analysis', 'PROPN'), ('Chess', 'PROPN'), ('Playing', 'PROPN'), ('search', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Claude', 'compound'), ('Shannon', 'nsubj'), ('published', 'ROOT'), ('Detailed', 'compound'), ('Analysis', 'dobj'), ('Chess', 'compound'), ('Playing', 'pobj'), ('search', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Claude, Shannon], [Shannon, published], [published, Detailed], [Detailed, Analysis], [Analysis, Chess], [Chess, Playing], [Playing, search], [search, .]]

>> Trigrams: 
[[Claude, Shannon, published], [Shannon, published, Detailed], [published, Detailed, Analysis], [Detailed, Analysis, Chess], [Analysis, Chess, Playing], [Chess, Playing, search], [Playing, search, .]]

>> Noun Phrases are: 
[Claude Shannon, Detailed Analysis, Chess Playing, a search]

>> Named Entities are: 
[('Claude Shannon', 'PERSON')]


============================ Sentence 30 =============================

 	1956 


>> Tokens are: 
[ 	, 1956] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1956', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('1956', 'nummod')]

>> Bigrams: 
[[ 	, 1956]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1956', 'DATE')]


============================ Sentence 31 =============================

	John McCarthy coined the term Artificial Intelligence. 


>> Tokens are: 
[	, John, McCarthy, coined, term, Artificial, Intelligence, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('John', 'PROPN'), ('McCarthy', 'PROPN'), ('coined', 'VERB'), ('term', 'NOUN'), ('Artificial', 'PROPN'), ('Intelligence', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('John', 'compound'), ('McCarthy', 'nsubj'), ('coined', 'ROOT'), ('term', 'dobj'), ('Artificial', 'compound'), ('Intelligence', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[	, John], [John, McCarthy], [McCarthy, coined], [coined, term], [term, Artificial], [Artificial, Intelligence], [Intelligence, .]]

>> Trigrams: 
[[	, John, McCarthy], [John, McCarthy, coined], [McCarthy, coined, term], [coined, term, Artificial], [term, Artificial, Intelligence], [Artificial, Intelligence, .]]

>> Noun Phrases are: 
[	John McCarthy, the term, Artificial Intelligence]

>> Named Entities are: 
[('John McCarthy', 'PERSON'), ('Artificial Intelligence', 'ORG')]


============================ Sentence 32 =============================

Demonstration of the first running AI program at Carnegie Mellon University. 


>> Tokens are: 
[Demonstration, running, AI, program, Carnegie, Mellon, University, .] 

>> PoS Tags are: 
[('Demonstration', 'NOUN'), ('running', 'VERB'), ('AI', 'NOUN'), ('program', 'NOUN'), ('Carnegie', 'PROPN'), ('Mellon', 'PROPN'), ('University', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Demonstration', 'ROOT'), ('running', 'amod'), ('AI', 'compound'), ('program', 'pobj'), ('Carnegie', 'compound'), ('Mellon', 'compound'), ('University', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Demonstration, running], [running, AI], [AI, program], [program, Carnegie], [Carnegie, Mellon], [Mellon, University], [University, .]]

>> Trigrams: 
[[Demonstration, running, AI], [running, AI, program], [AI, program, Carnegie], [program, Carnegie, Mellon], [Carnegie, Mellon, University], [Mellon, University, .]]

>> Noun Phrases are: 
[Demonstration, the first running AI program, Carnegie Mellon University]

>> Named Entities are: 
[('first', 'ORDINAL'), ('AI', 'ORG'), ('Carnegie Mellon University', 'ORG')]


============================ Sentence 33 =============================

 	1958 	John McCarthy invents LISP programming language for AI. 


>> Tokens are: 
[ 	, 1958, 	, John, McCarthy, invents, LISP, programming, language, AI, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1958', 'NUM'), ('\t', 'SPACE'), ('John', 'PROPN'), ('McCarthy', 'PROPN'), ('invents', 'VERB'), ('LISP', 'VERB'), ('programming', 'NOUN'), ('language', 'NOUN'), ('AI', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('1958', 'nummod'), ('\t', 'compound'), ('John', 'compound'), ('McCarthy', 'nsubj'), ('invents', 'ROOT'), ('LISP', 'compound'), ('programming', 'compound'), ('language', 'dobj'), ('AI', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1958], [1958, 	], [	, John], [John, McCarthy], [McCarthy, invents], [invents, LISP], [LISP, programming], [programming, language], [language, AI], [AI, .]]

>> Trigrams: 
[[ 	, 1958, 	], [1958, 	, John], [	, John, McCarthy], [John, McCarthy, invents], [McCarthy, invents, LISP], [invents, LISP, programming], [LISP, programming, language], [programming, language, AI], [language, AI, .]]

>> Noun Phrases are: 
[	John McCarthy, LISP programming language, AI]

>> Named Entities are: 
[('1958', 'DATE'), ('John McCarthy', 'PERSON'), ('AI', 'ORG')]


============================ Sentence 34 =============================

 	1964 	Danny Bobrow's dissertation at MIT showed that computers can understand natural language well enough to solve algebra word problems correctly. 


>> Tokens are: 
[ 	, 1964, 	, Danny, Bobrow, dissertation, MIT, showed, computers, understand, natural, language, solve, algebra, word, problems, correctly, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1964', 'NUM'), ('\t', 'SPACE'), ('Danny', 'PROPN'), ('Bobrow', 'PROPN'), ('dissertation', 'NOUN'), ('MIT', 'PROPN'), ('showed', 'VERB'), ('computers', 'NOUN'), ('understand', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('solve', 'VERB'), ('algebra', 'NOUN'), ('word', 'NOUN'), ('problems', 'NOUN'), ('correctly', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'compound'), ('1964', 'nummod'), ('\t', 'compound'), ('Danny', 'compound'), ('Bobrow', 'poss'), ('dissertation', 'nsubj'), ('MIT', 'pobj'), ('showed', 'ROOT'), ('computers', 'nsubj'), ('understand', 'ccomp'), ('natural', 'amod'), ('language', 'dobj'), ('solve', 'xcomp'), ('algebra', 'compound'), ('word', 'compound'), ('problems', 'dobj'), ('correctly', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1964], [1964, 	], [	, Danny], [Danny, Bobrow], [Bobrow, dissertation], [dissertation, MIT], [MIT, showed], [showed, computers], [computers, understand], [understand, natural], [natural, language], [language, solve], [solve, algebra], [algebra, word], [word, problems], [problems, correctly], [correctly, .]]

>> Trigrams: 
[[ 	, 1964, 	], [1964, 	, Danny], [	, Danny, Bobrow], [Danny, Bobrow, dissertation], [Bobrow, dissertation, MIT], [dissertation, MIT, showed], [MIT, showed, computers], [showed, computers, understand], [computers, understand, natural], [understand, natural, language], [natural, language, solve], [language, solve, algebra], [solve, algebra, word], [algebra, word, problems], [word, problems, correctly], [problems, correctly, .]]

>> Noun Phrases are: 
[ 	1964 	Danny Bobrow's dissertation, MIT, computers, natural language, algebra word problems]

>> Named Entities are: 
[('1964', 'DATE'), ("Danny Bobrow's", 'PERSON'), ('MIT', 'ORG')]


============================ Sentence 35 =============================

 	1965 	Joseph Weizenbaum at MIT built ELIZA, an interactive problem that carries on a dialogue in English. 


>> Tokens are: 
[ 	, 1965, 	, Joseph, Weizenbaum, MIT, built, ELIZA, ,, interactive, problem, carries, dialogue, English, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1965', 'NUM'), ('\t', 'SPACE'), ('Joseph', 'PROPN'), ('Weizenbaum', 'PROPN'), ('MIT', 'PROPN'), ('built', 'VERB'), ('ELIZA', 'PROPN'), (',', 'PUNCT'), ('interactive', 'ADJ'), ('problem', 'NOUN'), ('carries', 'VERB'), ('dialogue', 'NOUN'), ('English', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('1965', 'nummod'), ('\t', 'compound'), ('Joseph', 'compound'), ('Weizenbaum', 'appos'), ('MIT', 'pobj'), ('built', 'relcl'), ('ELIZA', 'dobj'), (',', 'punct'), ('interactive', 'amod'), ('problem', 'appos'), ('carries', 'relcl'), ('dialogue', 'pobj'), ('English', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1965], [1965, 	], [	, Joseph], [Joseph, Weizenbaum], [Weizenbaum, MIT], [MIT, built], [built, ELIZA], [ELIZA, ,], [,, interactive], [interactive, problem], [problem, carries], [carries, dialogue], [dialogue, English], [English, .]]

>> Trigrams: 
[[ 	, 1965, 	], [1965, 	, Joseph], [	, Joseph, Weizenbaum], [Joseph, Weizenbaum, MIT], [Weizenbaum, MIT, built], [MIT, built, ELIZA], [built, ELIZA, ,], [ELIZA, ,, interactive], [,, interactive, problem], [interactive, problem, carries], [problem, carries, dialogue], [carries, dialogue, English], [dialogue, English, .]]

>> Noun Phrases are: 
[	Joseph Weizenbaum, MIT, ELIZA, an interactive problem, a dialogue, English]

>> Named Entities are: 
[('1965', 'DATE'), ('Joseph Weizenbaum', 'PERSON'), ('MIT', 'ORG'), ('ELIZA', 'ORG'), ('English', 'LANGUAGE')]


============================ Sentence 36 =============================

 	1969 	Scientists at Stanford Research Institute Developed Shakey, a robot, equipped with locomotion, perception, and problem solving. 


>> Tokens are: 
[ 	, 1969, 	, Scientists, Stanford, Research, Institute, Developed, Shakey, ,, robot, ,, equipped, locomotion, ,, perception, ,, problem, solving, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1969', 'NUM'), ('\t', 'SPACE'), ('Scientists', 'PROPN'), ('Stanford', 'PROPN'), ('Research', 'PROPN'), ('Institute', 'PROPN'), ('Developed', 'PROPN'), ('Shakey', 'PROPN'), (',', 'PUNCT'), ('robot', 'NOUN'), (',', 'PUNCT'), ('equipped', 'VERB'), ('locomotion', 'NOUN'), (',', 'PUNCT'), ('perception', 'NOUN'), (',', 'PUNCT'), ('problem', 'NOUN'), ('solving', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('1969', 'nummod'), ('\t', 'compound'), ('Scientists', 'ROOT'), ('Stanford', 'compound'), ('Research', 'compound'), ('Institute', 'compound'), ('Developed', 'compound'), ('Shakey', 'pobj'), (',', 'punct'), ('robot', 'appos'), (',', 'punct'), ('equipped', 'acl'), ('locomotion', 'pobj'), (',', 'punct'), ('perception', 'conj'), (',', 'punct'), ('problem', 'conj'), ('solving', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1969], [1969, 	], [	, Scientists], [Scientists, Stanford], [Stanford, Research], [Research, Institute], [Institute, Developed], [Developed, Shakey], [Shakey, ,], [,, robot], [robot, ,], [,, equipped], [equipped, locomotion], [locomotion, ,], [,, perception], [perception, ,], [,, problem], [problem, solving], [solving, .]]

>> Trigrams: 
[[ 	, 1969, 	], [1969, 	, Scientists], [	, Scientists, Stanford], [Scientists, Stanford, Research], [Stanford, Research, Institute], [Research, Institute, Developed], [Institute, Developed, Shakey], [Developed, Shakey, ,], [Shakey, ,, robot], [,, robot, ,], [robot, ,, equipped], [,, equipped, locomotion], [equipped, locomotion, ,], [locomotion, ,, perception], [,, perception, ,], [perception, ,, problem], [,, problem, solving], [problem, solving, .]]

>> Noun Phrases are: 
[ 	1969 	Scientists, Stanford Research Institute Developed Shakey, a robot, locomotion, perception, problem]

>> Named Entities are: 
[('1969', 'DATE'), ('Stanford Research Institute', 'ORG'), ('Developed Shakey', 'PERSON')]


============================ Sentence 37 =============================

 	1973 


>> Tokens are: 
[ 	, 1973] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1973', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('1973', 'nummod')]

>> Bigrams: 
[[ 	, 1973]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1973', 'DATE')]


============================ Sentence 38 =============================

	The Assembly Robotics group at Edinburgh University built Freddy, the Famous Scottish Robot, capable of using vision to locate and assemble models. 


>> Tokens are: 
[	, Assembly, Robotics, group, Edinburgh, University, built, Freddy, ,, Famous, Scottish, Robot, ,, capable, vision, locate, assemble, models, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Assembly', 'PROPN'), ('Robotics', 'PROPN'), ('group', 'NOUN'), ('Edinburgh', 'PROPN'), ('University', 'PROPN'), ('built', 'VERB'), ('Freddy', 'PROPN'), (',', 'PUNCT'), ('Famous', 'PROPN'), ('Scottish', 'PROPN'), ('Robot', 'PROPN'), (',', 'PUNCT'), ('capable', 'ADJ'), ('vision', 'NOUN'), ('locate', 'VERB'), ('assemble', 'VERB'), ('models', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('Assembly', 'compound'), ('Robotics', 'compound'), ('group', 'nsubj'), ('Edinburgh', 'compound'), ('University', 'pobj'), ('built', 'ROOT'), ('Freddy', 'dobj'), (',', 'punct'), ('Famous', 'compound'), ('Scottish', 'compound'), ('Robot', 'appos'), (',', 'punct'), ('capable', 'amod'), ('vision', 'dobj'), ('locate', 'xcomp'), ('assemble', 'conj'), ('models', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[	, Assembly], [Assembly, Robotics], [Robotics, group], [group, Edinburgh], [Edinburgh, University], [University, built], [built, Freddy], [Freddy, ,], [,, Famous], [Famous, Scottish], [Scottish, Robot], [Robot, ,], [,, capable], [capable, vision], [vision, locate], [locate, assemble], [assemble, models], [models, .]]

>> Trigrams: 
[[	, Assembly, Robotics], [Assembly, Robotics, group], [Robotics, group, Edinburgh], [group, Edinburgh, University], [Edinburgh, University, built], [University, built, Freddy], [built, Freddy, ,], [Freddy, ,, Famous], [,, Famous, Scottish], [Famous, Scottish, Robot], [Scottish, Robot, ,], [Robot, ,, capable], [,, capable, vision], [capable, vision, locate], [vision, locate, assemble], [locate, assemble, models], [assemble, models, .]]

>> Noun Phrases are: 
[The Assembly Robotics group, Edinburgh University, Freddy, the Famous Scottish Robot, vision, models]

>> Named Entities are: 
[('Assembly Robotics', 'ORG'), ('Edinburgh University', 'ORG'), ('Freddy', 'PERSON')]


============================ Sentence 39 =============================

 	1979 	The first computer-controlled autonomous vehicle, Stanford Cart, was built. 


>> Tokens are: 
[ 	, 1979, 	, computer, -, controlled, autonomous, vehicle, ,, Stanford, Cart, ,, built, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1979', 'NUM'), ('\t', 'SPACE'), ('computer', 'NOUN'), ('-', 'PUNCT'), ('controlled', 'VERB'), ('autonomous', 'ADJ'), ('vehicle', 'NOUN'), (',', 'PUNCT'), ('Stanford', 'PROPN'), ('Cart', 'PROPN'), (',', 'PUNCT'), ('built', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('1979', 'nummod'), ('\t', 'nsubjpass'), ('computer', 'npadvmod'), ('-', 'punct'), ('controlled', 'amod'), ('autonomous', 'amod'), ('vehicle', 'appos'), (',', 'punct'), ('Stanford', 'compound'), ('Cart', 'appos'), (',', 'punct'), ('built', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1979], [1979, 	], [	, computer], [computer, -], [-, controlled], [controlled, autonomous], [autonomous, vehicle], [vehicle, ,], [,, Stanford], [Stanford, Cart], [Cart, ,], [,, built], [built, .]]

>> Trigrams: 
[[ 	, 1979, 	], [1979, 	, computer], [	, computer, -], [computer, -, controlled], [-, controlled, autonomous], [controlled, autonomous, vehicle], [autonomous, vehicle, ,], [vehicle, ,, Stanford], [,, Stanford, Cart], [Stanford, Cart, ,], [Cart, ,, built], [,, built, .]]

>> Noun Phrases are: 
[The first computer-controlled autonomous vehicle, Stanford Cart]

>> Named Entities are: 
[('1979', 'DATE'), ('first', 'ORDINAL'), ('Stanford Cart', 'ORG')]


============================ Sentence 40 =============================

 	1985 	Harold Cohen created and demonstrated the drawing program, Aaron. 


>> Tokens are: 
[ 	, 1985, 	, Harold, Cohen, created, demonstrated, drawing, program, ,, Aaron, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1985', 'NUM'), ('\t', 'SPACE'), ('Harold', 'PROPN'), ('Cohen', 'PROPN'), ('created', 'VERB'), ('demonstrated', 'VERB'), ('drawing', 'NOUN'), ('program', 'NOUN'), (',', 'PUNCT'), ('Aaron', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nummod'), ('1985', 'nummod'), ('\t', 'compound'), ('Harold', 'compound'), ('Cohen', 'nsubj'), ('created', 'ROOT'), ('demonstrated', 'conj'), ('drawing', 'compound'), ('program', 'dobj'), (',', 'punct'), ('Aaron', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1985], [1985, 	], [	, Harold], [Harold, Cohen], [Cohen, created], [created, demonstrated], [demonstrated, drawing], [drawing, program], [program, ,], [,, Aaron], [Aaron, .]]

>> Trigrams: 
[[ 	, 1985, 	], [1985, 	, Harold], [	, Harold, Cohen], [Harold, Cohen, created], [Cohen, created, demonstrated], [created, demonstrated, drawing], [demonstrated, drawing, program], [drawing, program, ,], [program, ,, Aaron], [,, Aaron, .]]

>> Noun Phrases are: 
[ 	1985 	Harold Cohen, the drawing program, Aaron]

>> Named Entities are: 
[('1985', 'DATE'), ('Harold Cohen', 'PERSON'), ('Aaron', 'PERSON')]


============================ Sentence 41 =============================

 	1990 


>> Tokens are: 
[ 	, 1990] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1990', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('1990', 'nummod')]

>> Bigrams: 
[[ 	, 1990]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('1990', 'DATE')]


============================ Sentence 42 =============================

	Major advances in all areas of AI − · Significant demonstrations in machine learning · Case-based reasoning · Multi-agent planning · Scheduling · Data mining, Web Crawler · natural language understanding and translation · Vision, Virtual Reality · Games 


>> Tokens are: 
[	, Major, advances, areas, AI, −, ·, Significant, demonstrations, machine, learning, ·, Case, -, based, reasoning, ·, Multi, -, agent, planning, ·, Scheduling, ·, Data, mining, ,, Web, Crawler, ·, natural, language, understanding, translation, ·, Vision, ,, Virtual, Reality, ·, Games] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Major', 'PROPN'), ('advances', 'VERB'), ('areas', 'NOUN'), ('AI', 'PROPN'), ('−', 'PROPN'), ('·', 'PUNCT'), ('Significant', 'ADJ'), ('demonstrations', 'NOUN'), ('machine', 'NOUN'), ('learning', 'VERB'), ('·', 'PUNCT'), ('Case', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('reasoning', 'NOUN'), ('·', 'PUNCT'), ('Multi', 'ADJ'), ('-', 'ADJ'), ('agent', 'ADJ'), ('planning', 'NOUN'), ('·', 'PUNCT'), ('Scheduling', 'NOUN'), ('·', 'PUNCT'), ('Data', 'NOUN'), ('mining', 'NOUN'), (',', 'PUNCT'), ('Web', 'PROPN'), ('Crawler', 'PROPN'), ('·', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('translation', 'NOUN'), ('·', 'PUNCT'), ('Vision', 'PROPN'), (',', 'PUNCT'), ('Virtual', 'PROPN'), ('Reality', 'NOUN'), ('·', 'PUNCT'), ('Games', 'PROPN')] 

>> Dependency Tags are: 
[('\t', 'compound'), ('Major', 'nsubj'), ('advances', 'ROOT'), ('areas', 'pobj'), ('AI', 'compound'), ('−', 'pobj'), ('·', 'punct'), ('Significant', 'amod'), ('demonstrations', 'dobj'), ('machine', 'pobj'), ('learning', 'acl'), ('·', 'punct'), ('Case', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('reasoning', 'nmod'), ('·', 'punct'), ('Multi', 'amod'), ('-', 'amod'), ('agent', 'amod'), ('planning', 'nmod'), ('·', 'punct'), ('Scheduling', 'nmod'), ('·', 'punct'), ('Data', 'compound'), ('mining', 'dobj'), (',', 'punct'), ('Web', 'compound'), ('Crawler', 'nmod'), ('·', 'punct'), ('natural', 'amod'), ('language', 'compound'), ('understanding', 'conj'), ('translation', 'conj'), ('·', 'punct'), ('Vision', 'appos'), (',', 'punct'), ('Virtual', 'amod'), ('Reality', 'nmod'), ('·', 'punct'), ('Games', 'appos')]

>> Bigrams: 
[[	, Major], [Major, advances], [advances, areas], [areas, AI], [AI, −], [−, ·], [·, Significant], [Significant, demonstrations], [demonstrations, machine], [machine, learning], [learning, ·], [·, Case], [Case, -], [-, based], [based, reasoning], [reasoning, ·], [·, Multi], [Multi, -], [-, agent], [agent, planning], [planning, ·], [·, Scheduling], [Scheduling, ·], [·, Data], [Data, mining], [mining, ,], [,, Web], [Web, Crawler], [Crawler, ·], [·, natural], [natural, language], [language, understanding], [understanding, translation], [translation, ·], [·, Vision], [Vision, ,], [,, Virtual], [Virtual, Reality], [Reality, ·], [·, Games]]

>> Trigrams: 
[[	, Major, advances], [Major, advances, areas], [advances, areas, AI], [areas, AI, −], [AI, −, ·], [−, ·, Significant], [·, Significant, demonstrations], [Significant, demonstrations, machine], [demonstrations, machine, learning], [machine, learning, ·], [learning, ·, Case], [·, Case, -], [Case, -, based], [-, based, reasoning], [based, reasoning, ·], [reasoning, ·, Multi], [·, Multi, -], [Multi, -, agent], [-, agent, planning], [agent, planning, ·], [planning, ·, Scheduling], [·, Scheduling, ·], [Scheduling, ·, Data], [·, Data, mining], [Data, mining, ,], [mining, ,, Web], [,, Web, Crawler], [Web, Crawler, ·], [Crawler, ·, natural], [·, natural, language], [natural, language, understanding], [language, understanding, translation], [understanding, translation, ·], [translation, ·, Vision], [·, Vision, ,], [Vision, ,, Virtual], [,, Virtual, Reality], [Virtual, Reality, ·], [Reality, ·, Games]]

>> Noun Phrases are: 
[	Major, all areas, AI −, · Significant demonstrations, machine, Case-based reasoning · Multi-agent planning · Scheduling · Data mining, Web Crawler · natural language understanding, translation, · Vision, Virtual Reality · Games]

>> Named Entities are: 
[('AI −', 'ORG'), ('Case', 'PERSON'), ('Data', 'PERSON'), ('Vision,', 'ORG'), ('Virtual Reality', 'ORG'), ('Games', 'PERSON')]


============================ Sentence 43 =============================

 	1997 	The Deep Blue Chess Program beats the then world chess champion, Garry Kasparov. 


>> Tokens are: 
[ 	, 1997, 	, Deep, Blue, Chess, Program, beats, world, chess, champion, ,, Garry, Kasparov, .] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('1997', 'NUM'), ('\t', 'SPACE'), ('Deep', 'PROPN'), ('Blue', 'PROPN'), ('Chess', 'PROPN'), ('Program', 'PROPN'), ('beats', 'VERB'), ('world', 'NOUN'), ('chess', 'NOUN'), ('champion', 'NOUN'), (',', 'PUNCT'), ('Garry', 'PROPN'), ('Kasparov', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' \t', 'nmod'), ('1997', 'nummod'), ('\t', 'nsubj'), ('Deep', 'compound'), ('Blue', 'compound'), ('Chess', 'compound'), ('Program', 'nsubj'), ('beats', 'ROOT'), ('world', 'compound'), ('chess', 'compound'), ('champion', 'dobj'), (',', 'punct'), ('Garry', 'compound'), ('Kasparov', 'appos'), ('.', 'punct')]

>> Bigrams: 
[[ 	, 1997], [1997, 	], [	, Deep], [Deep, Blue], [Blue, Chess], [Chess, Program], [Program, beats], [beats, world], [world, chess], [chess, champion], [champion, ,], [,, Garry], [Garry, Kasparov], [Kasparov, .]]

>> Trigrams: 
[[ 	, 1997, 	], [1997, 	, Deep], [	, Deep, Blue], [Deep, Blue, Chess], [Blue, Chess, Program], [Chess, Program, beats], [Program, beats, world], [beats, world, chess], [world, chess, champion], [chess, champion, ,], [champion, ,, Garry], [,, Garry, Kasparov], [Garry, Kasparov, .]]

>> Noun Phrases are: 
[The Deep Blue Chess Program, the then world chess champion, Garry Kasparov]

>> Named Entities are: 
[('1997', 'DATE'), ('Garry Kasparov', 'PERSON')]


============================ Sentence 44 =============================

 	2000 


>> Tokens are: 
[ 	, 2000] 

>> PoS Tags are: 
[(' \t', 'SPACE'), ('2000', 'NUM')] 

>> Dependency Tags are: 
[(' \t', 'ROOT'), ('2000', 'nummod')]

>> Bigrams: 
[[ 	, 2000]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[('2000', 'CARDINAL')]


============================ Sentence 45 =============================

	Interactive robot pets become commercially available. 


>> Tokens are: 
[	, Interactive, robot, pets, commercially, available, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('Interactive', 'ADJ'), ('robot', 'NOUN'), ('pets', 'NOUN'), ('commercially', 'ADV'), ('available', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'nsubj'), ('Interactive', 'amod'), ('robot', 'compound'), ('pets', 'nsubj'), ('commercially', 'advmod'), ('available', 'acomp'), ('.', 'punct')]

>> Bigrams: 
[[	, Interactive], [Interactive, robot], [robot, pets], [pets, commercially], [commercially, available], [available, .]]

>> Trigrams: 
[[	, Interactive, robot], [Interactive, robot, pets], [robot, pets, commercially], [pets, commercially, available], [commercially, available, .]]

>> Noun Phrases are: 
[Interactive robot pets]

>> Named Entities are: 
[]


============================ Sentence 46 =============================

MIT displays Kismet, a robot with a face that expresses emotions. 


>> Tokens are: 
[MIT, displays, Kismet, ,, robot, face, expresses, emotions, .] 

>> PoS Tags are: 
[('MIT', 'PROPN'), ('displays', 'VERB'), ('Kismet', 'PROPN'), (',', 'PUNCT'), ('robot', 'NOUN'), ('face', 'NOUN'), ('expresses', 'VERB'), ('emotions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('MIT', 'compound'), ('displays', 'compound'), ('Kismet', 'ROOT'), (',', 'punct'), ('robot', 'appos'), ('face', 'pobj'), ('expresses', 'relcl'), ('emotions', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[MIT, displays], [displays, Kismet], [Kismet, ,], [,, robot], [robot, face], [face, expresses], [expresses, emotions], [emotions, .]]

>> Trigrams: 
[[MIT, displays, Kismet], [displays, Kismet, ,], [Kismet, ,, robot], [,, robot, face], [robot, face, expresses], [face, expresses, emotions], [expresses, emotions, .]]

>> Noun Phrases are: 
[MIT displays Kismet, a robot, a face, emotions]

>> Named Entities are: 
[('MIT', 'ORG'), ('Kismet', 'ORG')]


============================ Sentence 47 =============================

The robot Nomad explores remote regions of Antarctica and locates meteorites. 


>> Tokens are: 
[robot, Nomad, explores, remote, regions, Antarctica, locates, meteorites, .] 

>> PoS Tags are: 
[('robot', 'NOUN'), ('Nomad', 'PROPN'), ('explores', 'VERB'), ('remote', 'ADJ'), ('regions', 'NOUN'), ('Antarctica', 'PROPN'), ('locates', 'VERB'), ('meteorites', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('robot', 'ROOT'), ('Nomad', 'nsubj'), ('explores', 'relcl'), ('remote', 'amod'), ('regions', 'dobj'), ('Antarctica', 'pobj'), ('locates', 'conj'), ('meteorites', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[robot, Nomad], [Nomad, explores], [explores, remote], [remote, regions], [regions, Antarctica], [Antarctica, locates], [locates, meteorites], [meteorites, .]]

>> Trigrams: 
[[robot, Nomad, explores], [Nomad, explores, remote], [explores, remote, regions], [remote, regions, Antarctica], [regions, Antarctica, locates], [Antarctica, locates, meteorites], [locates, meteorites, .]]

>> Noun Phrases are: 
[The robot, Nomad, remote regions, Antarctica, meteorites]

>> Named Entities are: 
[('Nomad', 'PERSON'), ('Antarctica', 'LOC')]
