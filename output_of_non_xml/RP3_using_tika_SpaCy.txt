				 *** Text Processing using Spacy *** 


============================ Sentence 1 =============================

Natural Language Understanding white paper   White PaperCustomer Service Solutions Natural language understanding   


>> Tokens are: 
[Natural, Language, Understanding, white, paper,   , White, PaperCustomer, Service, Solutions, Natural, language, understanding,  ] 

>> PoS Tags are: 
[('Natural', 'PROPN'), ('Language', 'PROPN'), ('Understanding', 'PROPN'), ('white', 'ADJ'), ('paper', 'NOUN'), ('  ', 'SPACE'), ('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Natural', 'compound'), ('Language', 'nmod'), ('Understanding', 'nmod'), ('white', 'amod'), ('paper', 'ROOT'), ('  ', 'appos'), ('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'compound'), ('understanding', 'appos'), (' ', 'appos')]

>> Bigrams: 
[[Natural, Language], [Language, Understanding], [Understanding, white], [white, paper], [paper,   ], [  , White], [White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding], [understanding,  ]]

>> Trigrams: 
[[Natural, Language, Understanding], [Language, Understanding, white], [Understanding, white, paper], [white, paper,   ], [paper,   , White], [  , White, PaperCustomer], [White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding], [language, understanding,  ]]

>> Noun Phrases are: 
[Natural Language Understanding white paper, White PaperCustomer Service Solutions Natural language understanding]

>> Named Entities are: 
[('White PaperCustomer Service Solutions Natural', 'ORG')]


============================ Sentence 2 =============================

Natural language  understanding Learning to speak customer-ese. 


>> Tokens are: 
[Natural, language,  , understanding, Learning, speak, customer, -, ese, .] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE'), ('understanding', 'VERB'), ('Learning', 'PROPN'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'compound'), (' ', 'ROOT'), ('understanding', 'acl'), ('Learning', 'dobj'), ('speak', 'xcomp'), ('customer', 'compound'), ('-', 'punct'), ('ese', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Natural, language], [language,  ], [ , understanding], [understanding, Learning], [Learning, speak], [speak, customer], [customer, -], [-, ese], [ese, .]]

>> Trigrams: 
[[Natural, language,  ], [language,  , understanding], [ , understanding, Learning], [understanding, Learning, speak], [Learning, speak, customer], [speak, customer, -], [customer, -, ese], [-, ese, .]]

>> Noun Phrases are: 
[Learning]

>> Named Entities are: 
[]


============================ Sentence 3 =============================

   Table of contents  1 Speech-enabled automation / p2  2 Learning to speak customer-ese / p3  3 Make the translation book bigger / p4  4 Learn to recognize variations of phrases / p4  5	 Become	 


>> Tokens are: 
[   , Table, contents,  , 1, Speech, -, enabled, automation, /, p2,  , 2, Learning, speak, customer, -, ese, /, p3,  , 3, translation, book, bigger, /, p4,  , 4, Learn, recognize, variations, phrases, /, p4,  , 5, 	 , 	] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('Table', 'NOUN'), ('contents', 'NOUN'), (' ', 'SPACE'), ('1', 'NUM'), ('Speech', 'PROPN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('automation', 'NOUN'), ('/', 'SYM'), ('p2', 'PROPN'), (' ', 'SPACE'), ('2', 'NUM'), ('Learning', 'PROPN'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'PROPN'), ('/', 'SYM'), ('p3', 'PROPN'), (' ', 'SPACE'), ('3', 'NUM'), ('translation', 'NOUN'), ('book', 'NOUN'), ('bigger', 'ADJ'), ('/', 'PUNCT'), ('p4', 'PROPN'), (' ', 'SPACE'), ('4', 'NUM'), ('Learn', 'VERB'), ('recognize', 'VERB'), ('variations', 'NOUN'), ('phrases', 'NOUN'), ('/', 'SYM'), ('p4', 'DET'), (' ', 'SPACE'), ('5', 'NUM'), ('\t ', 'SPACE'), ('\t', 'SPACE')] 

>> Dependency Tags are: 
[('   ', 'nummod'), ('Table', 'nsubj'), ('contents', 'pobj'), (' ', 'ROOT'), ('1', 'nummod'), ('Speech', 'npadvmod'), ('-', 'punct'), ('enabled', 'amod'), ('automation', 'npadvmod'), ('/', 'punct'), ('p2', 'quantmod'), (' ', 'quantmod'), ('2', 'nummod'), ('Learning', 'nsubj'), ('speak', 'advcl'), ('customer', 'nmod'), ('-', 'punct'), ('ese', 'nmod'), ('/', 'punct'), ('p3', 'nsubj'), (' ', 'appos'), ('3', 'nummod'), ('translation', 'compound'), ('book', 'nsubj'), ('bigger', 'ccomp'), ('/', 'punct'), ('p4', 'nmod'), (' ', 'nmod'), ('4', 'nsubj'), ('Learn', 'ccomp'), ('recognize', 'advcl'), ('variations', 'dobj'), ('phrases', 'pobj'), ('/', 'punct'), ('p4', 'det'), (' ', 'compound'), ('5', 'nummod'), ('\t ', 'appos'), ('\t', 'acomp')]

>> Bigrams: 
[[   , Table], [Table, contents], [contents,  ], [ , 1], [1, Speech], [Speech, -], [-, enabled], [enabled, automation], [automation, /], [/, p2], [p2,  ], [ , 2], [2, Learning], [Learning, speak], [speak, customer], [customer, -], [-, ese], [ese, /], [/, p3], [p3,  ], [ , 3], [3, translation], [translation, book], [book, bigger], [bigger, /], [/, p4], [p4,  ], [ , 4], [4, Learn], [Learn, recognize], [recognize, variations], [variations, phrases], [phrases, /], [/, p4], [p4,  ], [ , 5], [5, 	 ], [	 , 	]]

>> Trigrams: 
[[   , Table, contents], [Table, contents,  ], [contents,  , 1], [ , 1, Speech], [1, Speech, -], [Speech, -, enabled], [-, enabled, automation], [enabled, automation, /], [automation, /, p2], [/, p2,  ], [p2,  , 2], [ , 2, Learning], [2, Learning, speak], [Learning, speak, customer], [speak, customer, -], [customer, -, ese], [-, ese, /], [ese, /, p3], [/, p3,  ], [p3,  , 3], [ , 3, translation], [3, translation, book], [translation, book, bigger], [book, bigger, /], [bigger, /, p4], [/, p4,  ], [p4,  , 4], [ , 4, Learn], [4, Learn, recognize], [Learn, recognize, variations], [recognize, variations, phrases], [variations, phrases, /], [phrases, /, p4], [/, p4,  ], [p4,  , 5], [ , 5, 	 ], [5, 	 , 	]]

>> Noun Phrases are: 
[   Table, contents, Learning, customer-ese / p3, the translation book, variations, phrases]

>> Named Entities are: 
[('1', 'CARDINAL'), ('3', 'CARDINAL'), ('4', 'CARDINAL'), ('Learn', 'PRODUCT'), ('5', 'CARDINAL')]


============================ Sentence 4 =============================

fluent	/	p4  6	 Provide	a	more	flexible	script	/	p5  7 Conclusion / p6  White PaperCustomer Service Solutions Natural language understanding1    In recent years speech recognition systems have made impressive advances  in their ability to provide rich and natural interactions with callers. 


>> Tokens are: 
[fluent, 	, /, 	, p4,  , 6, 	 , Provide, 	, 	, 	, flexible, 	, script, 	, /, 	, p5,  , 7, Conclusion, /, p6,  , White, PaperCustomer, Service, Solutions, Natural, language, understanding1,    , recent, years, speech, recognition, systems, impressive, advances,  , ability, provide, rich, natural, interactions, callers, .] 

>> PoS Tags are: 
[('fluent', 'ADJ'), ('\t', 'SPACE'), ('/', 'SYM'), ('\t', 'SPACE'), ('p4', 'PROPN'), (' ', 'SPACE'), ('6', 'NUM'), ('\t ', 'SPACE'), ('Provide', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('flexible', 'ADJ'), ('\t', 'SPACE'), ('script', 'NOUN'), ('\t', 'SPACE'), ('/', 'SYM'), ('\t', 'SPACE'), ('p5', 'PROPN'), (' ', 'SPACE'), ('7', 'NUM'), ('Conclusion', 'PROPN'), ('/', 'SYM'), ('p6', 'PROPN'), (' ', 'SPACE'), ('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding1', 'NOUN'), ('   ', 'SPACE'), ('recent', 'ADJ'), ('years', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('systems', 'NOUN'), ('impressive', 'ADJ'), ('advances', 'NOUN'), (' ', 'SPACE'), ('ability', 'NOUN'), ('provide', 'VERB'), ('rich', 'ADJ'), ('natural', 'ADJ'), ('interactions', 'NOUN'), ('callers', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fluent', 'nmod'), ('\t', 'nmod'), ('/', 'punct'), ('\t', 'nmod'), ('p4', 'appos'), (' ', 'appos'), ('6', 'nummod'), ('\t ', 'nsubj'), ('Provide', 'ccomp'), ('\t', 'dobj'), ('\t', 'dobj'), ('\t', 'nmod'), ('flexible', 'amod'), ('\t', 'compound'), ('script', 'appos'), ('\t', 'nmod'), ('/', 'punct'), ('\t', 'nmod'), ('p5', 'appos'), (' ', 'appos'), ('7', 'nummod'), ('Conclusion', 'appos'), ('/', 'punct'), ('p6', 'appos'), (' ', 'appos'), ('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'compound'), ('understanding1', 'appos'), ('   ', 'appos'), ('recent', 'amod'), ('years', 'compound'), ('speech', 'compound'), ('recognition', 'compound'), ('systems', 'nsubj'), ('impressive', 'amod'), ('advances', 'compound'), (' ', 'dobj'), ('ability', 'pobj'), ('provide', 'acl'), ('rich', 'amod'), ('natural', 'conj'), ('interactions', 'dobj'), ('callers', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[fluent, 	], [	, /], [/, 	], [	, p4], [p4,  ], [ , 6], [6, 	 ], [	 , Provide], [Provide, 	], [	, 	], [	, 	], [	, flexible], [flexible, 	], [	, script], [script, 	], [	, /], [/, 	], [	, p5], [p5,  ], [ , 7], [7, Conclusion], [Conclusion, /], [/, p6], [p6,  ], [ , White], [White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding1], [understanding1,    ], [   , recent], [recent, years], [years, speech], [speech, recognition], [recognition, systems], [systems, impressive], [impressive, advances], [advances,  ], [ , ability], [ability, provide], [provide, rich], [rich, natural], [natural, interactions], [interactions, callers], [callers, .]]

>> Trigrams: 
[[fluent, 	, /], [	, /, 	], [/, 	, p4], [	, p4,  ], [p4,  , 6], [ , 6, 	 ], [6, 	 , Provide], [	 , Provide, 	], [Provide, 	, 	], [	, 	, 	], [	, 	, flexible], [	, flexible, 	], [flexible, 	, script], [	, script, 	], [script, 	, /], [	, /, 	], [/, 	, p5], [	, p5,  ], [p5,  , 7], [ , 7, Conclusion], [7, Conclusion, /], [Conclusion, /, p6], [/, p6,  ], [p6,  , White], [ , White, PaperCustomer], [White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding1], [language, understanding1,    ], [understanding1,    , recent], [   , recent, years], [recent, years, speech], [years, speech, recognition], [speech, recognition, systems], [recognition, systems, impressive], [systems, impressive, advances], [impressive, advances,  ], [advances,  , ability], [ , ability, provide], [ability, provide, rich], [provide, rich, natural], [rich, natural, interactions], [natural, interactions, callers], [interactions, callers, .]]

>> Noun Phrases are: 
[p4, more	flexible	script, 	/	p5, 7 Conclusion, p6, White PaperCustomer Service Solutions Natural language understanding1, recent years speech recognition systems, their ability, rich and natural interactions, callers]

>> Named Entities are: 
[('6', 'CARDINAL'), ('7', 'CARDINAL'), ('Conclusion / p6', 'ORG'), ('White PaperCustomer Service Solutions Natural', 'ORG'), ('recent years', 'DATE')]


============================ Sentence 5 =============================

The term  Natural Language (NL)—and its family of synonymous abbreviations: Natural  Language Understanding (NLU), Natural Language Processing (NLP), and  Natural Language Technology (NLT)—have been held up as the panacea for  improving the accuracy of a speech system. 


>> Tokens are: 
[term,  , Natural, Language, (, NL)—and, family, synonymous, abbreviations, :, Natural,  , Language, Understanding, (, NLU, ), ,, Natural, Language, Processing, (, NLP, ), ,,  , Natural, Language, Technology, (, NLT)—have, held, panacea,  , improving, accuracy, speech, system, .] 

>> PoS Tags are: 
[('term', 'NOUN'), (' ', 'SPACE'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('(', 'PUNCT'), ('NL)—and', 'PROPN'), ('family', 'NOUN'), ('synonymous', 'ADJ'), ('abbreviations', 'NOUN'), (':', 'PUNCT'), ('Natural', 'ADJ'), (' ', 'SPACE'), ('Language', 'PROPN'), ('Understanding', 'PROPN'), ('(', 'PUNCT'), ('NLU', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Processing', 'PROPN'), ('(', 'PUNCT'), ('NLP', 'PROPN'), (')', 'PUNCT'), (',', 'PUNCT'), (' ', 'SPACE'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Technology', 'PROPN'), ('(', 'PUNCT'), ('NLT)—have', 'AUX'), ('held', 'VERB'), ('panacea', 'NOUN'), (' ', 'SPACE'), ('improving', 'VERB'), ('accuracy', 'NOUN'), ('speech', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('term', 'ROOT'), (' ', 'compound'), ('Natural', 'compound'), ('Language', 'appos'), ('(', 'punct'), ('NL)—and', 'parataxis'), ('family', 'appos'), ('synonymous', 'amod'), ('abbreviations', 'pobj'), (':', 'punct'), ('Natural', 'amod'), (' ', 'compound'), ('Language', 'compound'), ('Understanding', 'appos'), ('(', 'punct'), ('NLU', 'appos'), (')', 'punct'), (',', 'punct'), ('Natural', 'compound'), ('Language', 'compound'), ('Processing', 'conj'), ('(', 'punct'), ('NLP', 'appos'), (')', 'punct'), (',', 'punct'), (' ', 'compound'), ('Natural', 'compound'), ('Language', 'compound'), ('Technology', 'appos'), ('(', 'punct'), ('NLT)—have', 'aux'), ('held', 'parataxis'), ('panacea', 'pobj'), (' ', 'pobj'), ('improving', 'acl'), ('accuracy', 'dobj'), ('speech', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[term,  ], [ , Natural], [Natural, Language], [Language, (], [(, NL)—and], [NL)—and, family], [family, synonymous], [synonymous, abbreviations], [abbreviations, :], [:, Natural], [Natural,  ], [ , Language], [Language, Understanding], [Understanding, (], [(, NLU], [NLU, )], [), ,], [,, Natural], [Natural, Language], [Language, Processing], [Processing, (], [(, NLP], [NLP, )], [), ,], [,,  ], [ , Natural], [Natural, Language], [Language, Technology], [Technology, (], [(, NLT)—have], [NLT)—have, held], [held, panacea], [panacea,  ], [ , improving], [improving, accuracy], [accuracy, speech], [speech, system], [system, .]]

>> Trigrams: 
[[term,  , Natural], [ , Natural, Language], [Natural, Language, (], [Language, (, NL)—and], [(, NL)—and, family], [NL)—and, family, synonymous], [family, synonymous, abbreviations], [synonymous, abbreviations, :], [abbreviations, :, Natural], [:, Natural,  ], [Natural,  , Language], [ , Language, Understanding], [Language, Understanding, (], [Understanding, (, NLU], [(, NLU, )], [NLU, ), ,], [), ,, Natural], [,, Natural, Language], [Natural, Language, Processing], [Language, Processing, (], [Processing, (, NLP], [(, NLP, )], [NLP, ), ,], [), ,,  ], [,,  , Natural], [ , Natural, Language], [Natural, Language, Technology], [Language, Technology, (], [Technology, (, NLT)—have], [(, NLT)—have, held], [NLT)—have, held, panacea], [held, panacea,  ], [panacea,  , improving], [ , improving, accuracy], [improving, accuracy, speech], [accuracy, speech, system], [speech, system, .]]

>> Noun Phrases are: 
[The term,  Natural Language, its family, synonymous abbreviations, Natural  Language Understanding, NLU, Natural Language Processing, NLP,  Natural Language Technology, the panacea, the accuracy, a speech system]

>> Named Entities are: 
[('NLU', 'ORG'), ('Natural Language Processing', 'WORK_OF_ART'), ('NLP', 'ORG'), ('NLT)—have', 'PERSON')]


============================ Sentence 6 =============================

Natural language suggests that,  rather than constrain a caller to a list of choices, the caller can say anything in  any context and be understood by the system. 


>> Tokens are: 
[Natural, language, suggests, ,,  , constrain, caller, list, choices, ,, caller,  , context, understood, system, .] 

>> PoS Tags are: 
[('Natural', 'ADJ'), ('language', 'NOUN'), ('suggests', 'VERB'), (',', 'PUNCT'), (' ', 'SPACE'), ('constrain', 'VERB'), ('caller', 'NOUN'), ('list', 'NOUN'), ('choices', 'NOUN'), (',', 'PUNCT'), ('caller', 'NOUN'), (' ', 'SPACE'), ('context', 'NOUN'), ('understood', 'VERB'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Natural', 'amod'), ('language', 'nsubj'), ('suggests', 'ROOT'), (',', 'punct'), (' ', 'nsubj'), ('constrain', 'ccomp'), ('caller', 'dobj'), ('list', 'pobj'), ('choices', 'pobj'), (',', 'punct'), ('caller', 'nsubj'), (' ', 'pobj'), ('context', 'dobj'), ('understood', 'conj'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Natural, language], [language, suggests], [suggests, ,], [,,  ], [ , constrain], [constrain, caller], [caller, list], [list, choices], [choices, ,], [,, caller], [caller,  ], [ , context], [context, understood], [understood, system], [system, .]]

>> Trigrams: 
[[Natural, language, suggests], [language, suggests, ,], [suggests, ,,  ], [,,  , constrain], [ , constrain, caller], [constrain, caller, list], [caller, list, choices], [list, choices, ,], [choices, ,, caller], [,, caller,  ], [caller,  , context], [ , context, understood], [context, understood, system], [understood, system, .]]

>> Noun Phrases are: 
[Natural language, a caller, a list, choices, the caller, anything, any context, the system]

>> Named Entities are: 
[]


============================ Sentence 7 =============================

Speech vendors trumpet their  NL capabilities, linguists at research labs talk about advancements in NLP  technology, contact centers evaluating vendor proposals ask for explanations  of available NLU features and industry press proclaim NLT as the future of  speech recognition. 


>> Tokens are: 
[Speech, vendors, trumpet,  , NL, capabilities, ,, linguists, research, labs, talk, advancements, NLP,  , technology, ,, contact, centers, evaluating, vendor, proposals, ask, explanations,  , available, NLU, features, industry, press, proclaim, NLT, future,  , speech, recognition, .] 

>> PoS Tags are: 
[('Speech', 'NOUN'), ('vendors', 'NOUN'), ('trumpet', 'VERB'), (' ', 'SPACE'), ('NL', 'PROPN'), ('capabilities', 'NOUN'), (',', 'PUNCT'), ('linguists', 'NOUN'), ('research', 'NOUN'), ('labs', 'NOUN'), ('talk', 'VERB'), ('advancements', 'NOUN'), ('NLP', 'PROPN'), (' ', 'SPACE'), ('technology', 'NOUN'), (',', 'PUNCT'), ('contact', 'NOUN'), ('centers', 'NOUN'), ('evaluating', 'VERB'), ('vendor', 'NOUN'), ('proposals', 'NOUN'), ('ask', 'VERB'), ('explanations', 'NOUN'), (' ', 'SPACE'), ('available', 'ADJ'), ('NLU', 'PROPN'), ('features', 'NOUN'), ('industry', 'NOUN'), ('press', 'NOUN'), ('proclaim', 'VERB'), ('NLT', 'PROPN'), ('future', 'NOUN'), (' ', 'SPACE'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Speech', 'compound'), ('vendors', 'nsubj'), ('trumpet', 'ccomp'), (' ', 'amod'), ('NL', 'compound'), ('capabilities', 'dobj'), (',', 'punct'), ('linguists', 'nsubj'), ('research', 'compound'), ('labs', 'pobj'), ('talk', 'ccomp'), ('advancements', 'pobj'), ('NLP', 'compound'), (' ', 'compound'), ('technology', 'pobj'), (',', 'punct'), ('contact', 'compound'), ('centers', 'nsubj'), ('evaluating', 'acl'), ('vendor', 'compound'), ('proposals', 'dobj'), ('ask', 'ROOT'), ('explanations', 'pobj'), (' ', 'nsubj'), ('available', 'amod'), ('NLU', 'compound'), ('features', 'pobj'), ('industry', 'compound'), ('press', 'conj'), ('proclaim', 'advcl'), ('NLT', 'dobj'), ('future', 'pobj'), (' ', 'compound'), ('speech', 'compound'), ('recognition', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Speech, vendors], [vendors, trumpet], [trumpet,  ], [ , NL], [NL, capabilities], [capabilities, ,], [,, linguists], [linguists, research], [research, labs], [labs, talk], [talk, advancements], [advancements, NLP], [NLP,  ], [ , technology], [technology, ,], [,, contact], [contact, centers], [centers, evaluating], [evaluating, vendor], [vendor, proposals], [proposals, ask], [ask, explanations], [explanations,  ], [ , available], [available, NLU], [NLU, features], [features, industry], [industry, press], [press, proclaim], [proclaim, NLT], [NLT, future], [future,  ], [ , speech], [speech, recognition], [recognition, .]]

>> Trigrams: 
[[Speech, vendors, trumpet], [vendors, trumpet,  ], [trumpet,  , NL], [ , NL, capabilities], [NL, capabilities, ,], [capabilities, ,, linguists], [,, linguists, research], [linguists, research, labs], [research, labs, talk], [labs, talk, advancements], [talk, advancements, NLP], [advancements, NLP,  ], [NLP,  , technology], [ , technology, ,], [technology, ,, contact], [,, contact, centers], [contact, centers, evaluating], [centers, evaluating, vendor], [evaluating, vendor, proposals], [vendor, proposals, ask], [proposals, ask, explanations], [ask, explanations,  ], [explanations,  , available], [ , available, NLU], [available, NLU, features], [NLU, features, industry], [features, industry, press], [industry, press, proclaim], [press, proclaim, NLT], [proclaim, NLT, future], [NLT, future,  ], [future,  , speech], [ , speech, recognition], [speech, recognition, .]]

>> Noun Phrases are: 
[Speech vendors, their  NL capabilities, linguists, research labs, advancements, NLP  technology, contact centers, vendor proposals, explanations, available NLU features, industry press, NLT, the future,  speech recognition]

>> Named Entities are: 
[('Speech', 'ORG'), ('NL', 'ORG'), ('NLP', 'ORG'), ('NLU', 'ORG'), ('NLT', 'ORG')]


============================ Sentence 8 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 9 =============================

The problem is that the term “natural language” has become meaningless.   


>> Tokens are: 
[problem, term, “, natural, language, ”, meaningless, .,  ] 

>> PoS Tags are: 
[('problem', 'NOUN'), ('term', 'NOUN'), ('“', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('”', 'PUNCT'), ('meaningless', 'ADJ'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('problem', 'nsubj'), ('term', 'nsubj'), ('“', 'punct'), ('natural', 'amod'), ('language', 'appos'), ('”', 'punct'), ('meaningless', 'acomp'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[problem, term], [term, “], [“, natural], [natural, language], [language, ”], [”, meaningless], [meaningless, .], [.,  ]]

>> Trigrams: 
[[problem, term, “], [term, “, natural], [“, natural, language], [natural, language, ”], [language, ”, meaningless], [”, meaningless, .], [meaningless, .,  ]]

>> Noun Phrases are: 
[The problem, the term, “natural language]

>> Named Entities are: 
[]


============================ Sentence 10 =============================

This standard speech industry terminology is anything but standard. 


>> Tokens are: 
[standard, speech, industry, terminology, standard, .] 

>> PoS Tags are: 
[('standard', 'ADJ'), ('speech', 'NOUN'), ('industry', 'NOUN'), ('terminology', 'NOUN'), ('standard', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('standard', 'amod'), ('speech', 'compound'), ('industry', 'compound'), ('terminology', 'nsubj'), ('standard', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[standard, speech], [speech, industry], [industry, terminology], [terminology, standard], [standard, .]]

>> Trigrams: 
[[standard, speech, industry], [speech, industry, terminology], [industry, terminology, standard], [terminology, standard, .]]

>> Noun Phrases are: 
[This standard speech industry terminology, anything]

>> Named Entities are: 
[]


============================ Sentence 11 =============================

It implies  that you could call up a travel service and say, “I’d like a flight to London for  the 25th, for two adults, no wait make that two adults and an infant on my  lap, and can I have two aisle seats next to each other?” 


>> Tokens are: 
[implies,  , travel, service, ,, “, like, flight, London,  , 25th, ,, adults, ,, wait, adults, infant,  , lap, ,, aisle, seats, ?, ”] 

>> PoS Tags are: 
[('implies', 'VERB'), (' ', 'SPACE'), ('travel', 'NOUN'), ('service', 'NOUN'), (',', 'PUNCT'), ('“', 'PUNCT'), ('like', 'ADP'), ('flight', 'NOUN'), ('London', 'PROPN'), (' ', 'SPACE'), ('25th', 'NOUN'), (',', 'PUNCT'), ('adults', 'NOUN'), (',', 'PUNCT'), ('wait', 'INTJ'), ('adults', 'NOUN'), ('infant', 'NOUN'), (' ', 'SPACE'), ('lap', 'NOUN'), (',', 'PUNCT'), ('aisle', 'NOUN'), ('seats', 'NOUN'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('implies', 'ROOT'), (' ', 'dobj'), ('travel', 'compound'), ('service', 'dobj'), (',', 'punct'), ('“', 'punct'), ('like', 'ccomp'), ('flight', 'dobj'), ('London', 'pobj'), (' ', 'pobj'), ('25th', 'npadvmod'), (',', 'punct'), ('adults', 'pobj'), (',', 'punct'), ('wait', 'advmod'), ('adults', 'meta'), ('infant', 'conj'), (' ', 'compound'), ('lap', 'pobj'), (',', 'punct'), ('aisle', 'compound'), ('seats', 'dobj'), ('?', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[implies,  ], [ , travel], [travel, service], [service, ,], [,, “], [“, like], [like, flight], [flight, London], [London,  ], [ , 25th], [25th, ,], [,, adults], [adults, ,], [,, wait], [wait, adults], [adults, infant], [infant,  ], [ , lap], [lap, ,], [,, aisle], [aisle, seats], [seats, ?], [?, ”]]

>> Trigrams: 
[[implies,  , travel], [ , travel, service], [travel, service, ,], [service, ,, “], [,, “, like], [“, like, flight], [like, flight, London], [flight, London,  ], [London,  , 25th], [ , 25th, ,], [25th, ,, adults], [,, adults, ,], [adults, ,, wait], [,, wait, adults], [wait, adults, infant], [adults, infant,  ], [infant,  , lap], [ , lap, ,], [lap, ,, aisle], [,, aisle, seats], [aisle, seats, ?], [seats, ?, ”]]

>> Noun Phrases are: 
[It, you, a travel service, I, a flight, London, two adults, my  lap, I, two aisle seats]

>> Named Entities are: 
[('London', 'GPE'), ('two', 'CARDINAL'), ('two', 'CARDINAL'), ('two', 'CARDINAL')]


============================ Sentence 12 =============================

The term natural  language is vague and overused, full of promise, yet promising nothing. 


>> Tokens are: 
[term, natural,  , language, vague, overused, ,, promise, ,, promising, .] 

>> PoS Tags are: 
[('term', 'NOUN'), ('natural', 'ADJ'), (' ', 'SPACE'), ('language', 'NOUN'), ('vague', 'ADJ'), ('overused', 'ADJ'), (',', 'PUNCT'), ('promise', 'NOUN'), (',', 'PUNCT'), ('promising', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('term', 'nmod'), ('natural', 'amod'), (' ', 'compound'), ('language', 'nsubj'), ('vague', 'acomp'), ('overused', 'conj'), (',', 'punct'), ('promise', 'pobj'), (',', 'punct'), ('promising', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[term, natural], [natural,  ], [ , language], [language, vague], [vague, overused], [overused, ,], [,, promise], [promise, ,], [,, promising], [promising, .]]

>> Trigrams: 
[[term, natural,  ], [natural,  , language], [ , language, vague], [language, vague, overused], [vague, overused, ,], [overused, ,, promise], [,, promise, ,], [promise, ,, promising], [,, promising, .]]

>> Noun Phrases are: 
[The term natural  language, promise, nothing]

>> Named Entities are: 
[]


============================ Sentence 13 =============================

For it  to mean something, one needs specifics. 


>> Tokens are: 
[ , mean, ,, needs, specifics, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('mean', 'VERB'), (',', 'PUNCT'), ('needs', 'VERB'), ('specifics', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nsubj'), ('mean', 'pcomp'), (',', 'punct'), ('needs', 'ROOT'), ('specifics', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , mean], [mean, ,], [,, needs], [needs, specifics], [specifics, .]]

>> Trigrams: 
[[ , mean, ,], [mean, ,, needs], [,, needs, specifics], [needs, specifics, .]]

>> Noun Phrases are: 
[it, something, one, specifics]

>> Named Entities are: 
[]


============================ Sentence 14 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 15 =============================

In this paper, the specific benefits of natural language in speech recognition  are explained and the approaches examined in detail. 


>> Tokens are: 
[paper, ,, specific, benefits, natural, language, speech, recognition,  , explained, approaches, examined, detail, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), (',', 'PUNCT'), ('specific', 'ADJ'), ('benefits', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), (' ', 'SPACE'), ('explained', 'VERB'), ('approaches', 'NOUN'), ('examined', 'VERB'), ('detail', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'pobj'), (',', 'punct'), ('specific', 'amod'), ('benefits', 'nsubjpass'), ('natural', 'amod'), ('language', 'pobj'), ('speech', 'compound'), ('recognition', 'pobj'), (' ', 'nsubjpass'), ('explained', 'ROOT'), ('approaches', 'nsubj'), ('examined', 'conj'), ('detail', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, ,], [,, specific], [specific, benefits], [benefits, natural], [natural, language], [language, speech], [speech, recognition], [recognition,  ], [ , explained], [explained, approaches], [approaches, examined], [examined, detail], [detail, .]]

>> Trigrams: 
[[paper, ,, specific], [,, specific, benefits], [specific, benefits, natural], [benefits, natural, language], [natural, language, speech], [language, speech, recognition], [speech, recognition,  ], [recognition,  , explained], [ , explained, approaches], [explained, approaches, examined], [approaches, examined, detail], [examined, detail, .]]

>> Noun Phrases are: 
[this paper, the specific benefits, natural language, speech recognition, the approaches, detail]

>> Named Entities are: 
[]


============================ Sentence 16 =============================

By the time you’ve  finished reading, you’ll understand natural language and how it can be  effective in improving the overall accuracy of your speech-based IVR system  while providing callers a more engaging experience. 


>> Tokens are: 
[time,  , finished, reading, ,, understand, natural, language,  , effective, improving, overall, accuracy, speech, -, based, IVR, system,  , providing, callers, engaging, experience, .] 

>> PoS Tags are: 
[('time', 'NOUN'), (' ', 'SPACE'), ('finished', 'VERB'), ('reading', 'VERB'), (',', 'PUNCT'), ('understand', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE'), ('effective', 'ADJ'), ('improving', 'VERB'), ('overall', 'ADJ'), ('accuracy', 'NOUN'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('IVR', 'PROPN'), ('system', 'NOUN'), (' ', 'SPACE'), ('providing', 'VERB'), ('callers', 'NOUN'), ('engaging', 'ADJ'), ('experience', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('time', 'pobj'), (' ', 'nsubj'), ('finished', 'ccomp'), ('reading', 'xcomp'), (',', 'punct'), ('understand', 'ROOT'), ('natural', 'amod'), ('language', 'dobj'), (' ', 'attr'), ('effective', 'acomp'), ('improving', 'pcomp'), ('overall', 'amod'), ('accuracy', 'dobj'), ('speech', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('IVR', 'compound'), ('system', 'pobj'), (' ', 'appos'), ('providing', 'advcl'), ('callers', 'dative'), ('engaging', 'amod'), ('experience', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[time,  ], [ , finished], [finished, reading], [reading, ,], [,, understand], [understand, natural], [natural, language], [language,  ], [ , effective], [effective, improving], [improving, overall], [overall, accuracy], [accuracy, speech], [speech, -], [-, based], [based, IVR], [IVR, system], [system,  ], [ , providing], [providing, callers], [callers, engaging], [engaging, experience], [experience, .]]

>> Trigrams: 
[[time,  , finished], [ , finished, reading], [finished, reading, ,], [reading, ,, understand], [,, understand, natural], [understand, natural, language], [natural, language,  ], [language,  , effective], [ , effective, improving], [effective, improving, overall], [improving, overall, accuracy], [overall, accuracy, speech], [accuracy, speech, -], [speech, -, based], [-, based, IVR], [based, IVR, system], [IVR, system,  ], [system,  , providing], [ , providing, callers], [providing, callers, engaging], [callers, engaging, experience], [engaging, experience, .]]

>> Noun Phrases are: 
[the time, you, you, natural language, it, the overall accuracy, your speech-based IVR system, callers, a more engaging experience]

>> Named Entities are: 
[('IVR', 'ORG')]


============================ Sentence 17 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 18 =============================

Speech-enabled automation Interactive Voice Response (IVR) systems are at the heart of today’s contact  center self-service solutions. 


>> Tokens are: 
[Speech, -, enabled, automation, Interactive, Voice, Response, (, IVR, ), systems, heart, today, contact,  , center, self, -, service, solutions, .] 

>> PoS Tags are: 
[('Speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('automation', 'NOUN'), ('Interactive', 'PROPN'), ('Voice', 'PROPN'), ('Response', 'PROPN'), ('(', 'PUNCT'), ('IVR', 'PROPN'), (')', 'PUNCT'), ('systems', 'NOUN'), ('heart', 'NOUN'), ('today', 'NOUN'), ('contact', 'NOUN'), (' ', 'SPACE'), ('center', 'NOUN'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('solutions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Speech', 'npadvmod'), ('-', 'punct'), ('enabled', 'amod'), ('automation', 'nmod'), ('Interactive', 'compound'), ('Voice', 'compound'), ('Response', 'nmod'), ('(', 'punct'), ('IVR', 'appos'), (')', 'punct'), ('systems', 'nsubj'), ('heart', 'pobj'), ('today', 'poss'), ('contact', 'pobj'), (' ', 'nmod'), ('center', 'amod'), ('self', 'compound'), ('-', 'punct'), ('service', 'compound'), ('solutions', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[Speech, -], [-, enabled], [enabled, automation], [automation, Interactive], [Interactive, Voice], [Voice, Response], [Response, (], [(, IVR], [IVR, )], [), systems], [systems, heart], [heart, today], [today, contact], [contact,  ], [ , center], [center, self], [self, -], [-, service], [service, solutions], [solutions, .]]

>> Trigrams: 
[[Speech, -, enabled], [-, enabled, automation], [enabled, automation, Interactive], [automation, Interactive, Voice], [Interactive, Voice, Response], [Voice, Response, (], [Response, (, IVR], [(, IVR, )], [IVR, ), systems], [), systems, heart], [systems, heart, today], [heart, today, contact], [today, contact,  ], [contact,  , center], [ , center, self], [center, self, -], [self, -, service], [-, service, solutions], [service, solutions, .]]

>> Noun Phrases are: 
[IVR, the heart, today’s contact,  center self-service solutions]

>> Named Entities are: 
[('Speech', 'ORG'), ('Interactive Voice Response', 'ORG'), ('IVR', 'ORG'), ('today', 'DATE')]


============================ Sentence 19 =============================

Without IVR systems to automate calls, most  contact centers would be overwhelmed by operating costs and by angry  customers facing long queue times. 


>> Tokens are: 
[IVR, systems, automate, calls, ,,  , contact, centers, overwhelmed, operating, costs, angry,  , customers, facing, long, queue, times, .] 

>> PoS Tags are: 
[('IVR', 'PROPN'), ('systems', 'NOUN'), ('automate', 'VERB'), ('calls', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('contact', 'NOUN'), ('centers', 'NOUN'), ('overwhelmed', 'VERB'), ('operating', 'VERB'), ('costs', 'NOUN'), ('angry', 'ADJ'), (' ', 'SPACE'), ('customers', 'NOUN'), ('facing', 'VERB'), ('long', 'ADJ'), ('queue', 'NOUN'), ('times', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('IVR', 'compound'), ('systems', 'pobj'), ('automate', 'pcomp'), ('calls', 'dobj'), (',', 'punct'), (' ', 'compound'), ('contact', 'compound'), ('centers', 'nsubjpass'), ('overwhelmed', 'ROOT'), ('operating', 'compound'), ('costs', 'pobj'), ('angry', 'amod'), (' ', 'prep'), ('customers', 'pobj'), ('facing', 'acl'), ('long', 'amod'), ('queue', 'compound'), ('times', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[IVR, systems], [systems, automate], [automate, calls], [calls, ,], [,,  ], [ , contact], [contact, centers], [centers, overwhelmed], [overwhelmed, operating], [operating, costs], [costs, angry], [angry,  ], [ , customers], [customers, facing], [facing, long], [long, queue], [queue, times], [times, .]]

>> Trigrams: 
[[IVR, systems, automate], [systems, automate, calls], [automate, calls, ,], [calls, ,,  ], [,,  , contact], [ , contact, centers], [contact, centers, overwhelmed], [centers, overwhelmed, operating], [overwhelmed, operating, costs], [operating, costs, angry], [costs, angry,  ], [angry,  , customers], [ , customers, facing], [customers, facing, long], [facing, long, queue], [long, queue, times], [queue, times, .]]

>> Noun Phrases are: 
[IVR systems, calls, most  contact centers, operating costs, angry  customers, long queue times]

>> Named Entities are: 
[('IVR', 'ORG')]


============================ Sentence 20 =============================

But by automating common customer  service requests, customers can resolve many issues quickly and agents can  focus on helping the customers who truly need them.   


>> Tokens are: 
[automating, common, customer,  , service, requests, ,, customers, resolve, issues, quickly, agents,  , focus, helping, customers, truly, need, .,  ] 

>> PoS Tags are: 
[('automating', 'VERB'), ('common', 'ADJ'), ('customer', 'NOUN'), (' ', 'SPACE'), ('service', 'NOUN'), ('requests', 'NOUN'), (',', 'PUNCT'), ('customers', 'NOUN'), ('resolve', 'VERB'), ('issues', 'NOUN'), ('quickly', 'ADV'), ('agents', 'NOUN'), (' ', 'SPACE'), ('focus', 'VERB'), ('helping', 'VERB'), ('customers', 'NOUN'), ('truly', 'ADV'), ('need', 'VERB'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('automating', 'pcomp'), ('common', 'amod'), ('customer', 'compound'), (' ', 'compound'), ('service', 'compound'), ('requests', 'dobj'), (',', 'punct'), ('customers', 'nsubj'), ('resolve', 'ROOT'), ('issues', 'dobj'), ('quickly', 'advmod'), ('agents', 'nsubj'), (' ', 'nsubj'), ('focus', 'conj'), ('helping', 'pcomp'), ('customers', 'dobj'), ('truly', 'advmod'), ('need', 'relcl'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[automating, common], [common, customer], [customer,  ], [ , service], [service, requests], [requests, ,], [,, customers], [customers, resolve], [resolve, issues], [issues, quickly], [quickly, agents], [agents,  ], [ , focus], [focus, helping], [helping, customers], [customers, truly], [truly, need], [need, .], [.,  ]]

>> Trigrams: 
[[automating, common, customer], [common, customer,  ], [customer,  , service], [ , service, requests], [service, requests, ,], [requests, ,, customers], [,, customers, resolve], [customers, resolve, issues], [resolve, issues, quickly], [issues, quickly, agents], [quickly, agents,  ], [agents,  , focus], [ , focus, helping], [focus, helping, customers], [helping, customers, truly], [customers, truly, need], [truly, need, .], [need, .,  ]]

>> Noun Phrases are: 
[common customer  service requests, customers, many issues, agents, the customers, who, them]

>> Named Entities are: 
[]


============================ Sentence 21 =============================

Speech-enabled IVRs improve the overall automation rate of self-service  systems. 


>> Tokens are: 
[Speech, -, enabled, IVRs, improve, overall, automation, rate, self, -, service,  , systems, .] 

>> PoS Tags are: 
[('Speech', 'PROPN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('IVRs', 'PROPN'), ('improve', 'VERB'), ('overall', 'ADJ'), ('automation', 'NOUN'), ('rate', 'NOUN'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), (' ', 'SPACE'), ('systems', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Speech', 'npadvmod'), ('-', 'punct'), ('enabled', 'amod'), ('IVRs', 'nsubj'), ('improve', 'ROOT'), ('overall', 'amod'), ('automation', 'compound'), ('rate', 'dobj'), ('self', 'compound'), ('-', 'punct'), ('service', 'compound'), (' ', 'compound'), ('systems', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Speech, -], [-, enabled], [enabled, IVRs], [IVRs, improve], [improve, overall], [overall, automation], [automation, rate], [rate, self], [self, -], [-, service], [service,  ], [ , systems], [systems, .]]

>> Trigrams: 
[[Speech, -, enabled], [-, enabled, IVRs], [enabled, IVRs, improve], [IVRs, improve, overall], [improve, overall, automation], [overall, automation, rate], [automation, rate, self], [rate, self, -], [self, -, service], [-, service,  ], [service,  , systems], [ , systems, .]]

>> Noun Phrases are: 
[Speech-enabled IVRs, the overall automation rate, self-service  systems]

>> Named Entities are: 
[('Speech', 'ORG')]


============================ Sentence 22 =============================

Unlike an IVR with only touchtone options, a speech-based self-ser- vice system can handle more complex tasks, like updating an address, and  can simplifying existing tasks to further increase automation. 


>> Tokens are: 
[Unlike, IVR, touchtone, options, ,, speech, -, based, self, -, ser-, vice, system, handle, complex, tasks, ,, like, updating, address, ,,  , simplifying, existing, tasks, increase, automation, .] 

>> PoS Tags are: 
[('Unlike', 'ADP'), ('IVR', 'PROPN'), ('touchtone', 'NOUN'), ('options', 'NOUN'), (',', 'PUNCT'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('based', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('ser-', 'NOUN'), ('vice', 'NOUN'), ('system', 'NOUN'), ('handle', 'VERB'), ('complex', 'ADJ'), ('tasks', 'NOUN'), (',', 'PUNCT'), ('like', 'ADP'), ('updating', 'VERB'), ('address', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('simplifying', 'VERB'), ('existing', 'VERB'), ('tasks', 'NOUN'), ('increase', 'VERB'), ('automation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Unlike', 'prep'), ('IVR', 'pobj'), ('touchtone', 'compound'), ('options', 'pobj'), (',', 'punct'), ('speech', 'npadvmod'), ('-', 'punct'), ('based', 'amod'), ('self', 'compound'), ('-', 'punct'), ('ser-', 'compound'), ('vice', 'compound'), ('system', 'nsubj'), ('handle', 'ROOT'), ('complex', 'amod'), ('tasks', 'dobj'), (',', 'punct'), ('like', 'prep'), ('updating', 'pcomp'), ('address', 'dobj'), (',', 'punct'), (' ', 'nsubj'), ('simplifying', 'conj'), ('existing', 'amod'), ('tasks', 'dobj'), ('increase', 'xcomp'), ('automation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Unlike, IVR], [IVR, touchtone], [touchtone, options], [options, ,], [,, speech], [speech, -], [-, based], [based, self], [self, -], [-, ser-], [ser-, vice], [vice, system], [system, handle], [handle, complex], [complex, tasks], [tasks, ,], [,, like], [like, updating], [updating, address], [address, ,], [,,  ], [ , simplifying], [simplifying, existing], [existing, tasks], [tasks, increase], [increase, automation], [automation, .]]

>> Trigrams: 
[[Unlike, IVR, touchtone], [IVR, touchtone, options], [touchtone, options, ,], [options, ,, speech], [,, speech, -], [speech, -, based], [-, based, self], [based, self, -], [self, -, ser-], [-, ser-, vice], [ser-, vice, system], [vice, system, handle], [system, handle, complex], [handle, complex, tasks], [complex, tasks, ,], [tasks, ,, like], [,, like, updating], [like, updating, address], [updating, address, ,], [address, ,,  ], [,,  , simplifying], [ , simplifying, existing], [simplifying, existing, tasks], [existing, tasks, increase], [tasks, increase, automation], [increase, automation, .]]

>> Noun Phrases are: 
[an IVR, only touchtone options, a speech-based self-ser- vice system, more complex tasks, an address, existing tasks, automation]

>> Named Entities are: 
[('IVR', 'ORG')]


============================ Sentence 23 =============================

The resulting  increase in automation rates mean more satisfied customers and lower costs  for the contact center. 


>> Tokens are: 
[resulting,  , increase, automation, rates, mean, satisfied, customers, lower, costs,  , contact, center, .] 

>> PoS Tags are: 
[('resulting', 'VERB'), (' ', 'SPACE'), ('increase', 'NOUN'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('mean', 'VERB'), ('satisfied', 'ADJ'), ('customers', 'NOUN'), ('lower', 'ADJ'), ('costs', 'NOUN'), (' ', 'SPACE'), ('contact', 'NOUN'), ('center', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('resulting', 'amod'), (' ', 'compound'), ('increase', 'nsubj'), ('automation', 'compound'), ('rates', 'pobj'), ('mean', 'ROOT'), ('satisfied', 'amod'), ('customers', 'dobj'), ('lower', 'amod'), ('costs', 'conj'), (' ', 'dobj'), ('contact', 'compound'), ('center', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[resulting,  ], [ , increase], [increase, automation], [automation, rates], [rates, mean], [mean, satisfied], [satisfied, customers], [customers, lower], [lower, costs], [costs,  ], [ , contact], [contact, center], [center, .]]

>> Trigrams: 
[[resulting,  , increase], [ , increase, automation], [increase, automation, rates], [automation, rates, mean], [rates, mean, satisfied], [mean, satisfied, customers], [satisfied, customers, lower], [customers, lower, costs], [lower, costs,  ], [costs,  , contact], [ , contact, center], [contact, center, .]]

>> Noun Phrases are: 
[The resulting  increase, automation rates, more satisfied customers, lower costs, the contact center]

>> Named Entities are: 
[]


============================ Sentence 24 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 25 =============================

Nevertheless, the automation rate can only be as good as the accuracy  during the caller’s entire interaction with a speech recognition system. 


>> Tokens are: 
[,, automation, rate, good, accuracy,  , caller, entire, interaction, speech, recognition, system, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('automation', 'NOUN'), ('rate', 'NOUN'), ('good', 'ADJ'), ('accuracy', 'NOUN'), (' ', 'SPACE'), ('caller', 'NOUN'), ('entire', 'ADJ'), ('interaction', 'NOUN'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('automation', 'compound'), ('rate', 'nsubj'), ('good', 'acomp'), ('accuracy', 'pobj'), (' ', 'appos'), ('caller', 'poss'), ('entire', 'amod'), ('interaction', 'pobj'), ('speech', 'compound'), ('recognition', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[,, automation], [automation, rate], [rate, good], [good, accuracy], [accuracy,  ], [ , caller], [caller, entire], [entire, interaction], [interaction, speech], [speech, recognition], [recognition, system], [system, .]]

>> Trigrams: 
[[,, automation, rate], [automation, rate, good], [rate, good, accuracy], [good, accuracy,  ], [accuracy,  , caller], [ , caller, entire], [caller, entire, interaction], [entire, interaction, speech], [interaction, speech, recognition], [speech, recognition, system], [recognition, system, .]]

>> Noun Phrases are: 
[the automation rate, the accuracy, the caller’s entire interaction, a speech recognition system]

>> Named Entities are: 
[]


============================ Sentence 26 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 27 =============================

Several recognition factors can limit the automation rate of a speech system. 


>> Tokens are: 
[recognition, factors, limit, automation, rate, speech, system, .] 

>> PoS Tags are: 
[('recognition', 'NOUN'), ('factors', 'NOUN'), ('limit', 'VERB'), ('automation', 'NOUN'), ('rate', 'NOUN'), ('speech', 'NOUN'), ('system', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('recognition', 'compound'), ('factors', 'nsubj'), ('limit', 'ROOT'), ('automation', 'compound'), ('rate', 'dobj'), ('speech', 'compound'), ('system', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[recognition, factors], [factors, limit], [limit, automation], [automation, rate], [rate, speech], [speech, system], [system, .]]

>> Trigrams: 
[[recognition, factors, limit], [factors, limit, automation], [limit, automation, rate], [automation, rate, speech], [rate, speech, system], [speech, system, .]]

>> Noun Phrases are: 
[Several recognition factors, the automation rate, a speech system]

>> Named Entities are: 
[]


============================ Sentence 28 =============================

  White PaperCustomer Service Solutions Natural language understanding2  Automation Preferences “Which of the example systems do you find most appealing?”   


>> Tokens are: 
[  , White, PaperCustomer, Service, Solutions, Natural, language, understanding2,  , Automation, Preferences, “, example, systems, find, appealing, ?, ”,  ] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding2', 'NOUN'), (' ', 'SPACE'), ('Automation', 'PROPN'), ('Preferences', 'PROPN'), ('“', 'PUNCT'), ('example', 'NOUN'), ('systems', 'NOUN'), ('find', 'VERB'), ('appealing', 'ADJ'), ('?', 'PUNCT'), ('”', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('  ', 'compound'), ('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'compound'), ('understanding2', 'compound'), (' ', 'compound'), ('Automation', 'compound'), ('Preferences', 'ROOT'), ('“', 'punct'), ('example', 'compound'), ('systems', 'pobj'), ('find', 'relcl'), ('appealing', 'oprd'), ('?', 'punct'), ('”', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[  , White], [White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding2], [understanding2,  ], [ , Automation], [Automation, Preferences], [Preferences, “], [“, example], [example, systems], [systems, find], [find, appealing], [appealing, ?], [?, ”], [”,  ]]

>> Trigrams: 
[[  , White, PaperCustomer], [White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding2], [language, understanding2,  ], [understanding2,  , Automation], [ , Automation, Preferences], [Automation, Preferences, “], [Preferences, “, example], [“, example, systems], [example, systems, find], [systems, find, appealing], [find, appealing, ?], [appealing, ?, ”], [?, ”,  ]]

>> Noun Phrases are: 
[  White PaperCustomer Service Solutions Natural language understanding2  Automation Preferences, the example systems, you]

>> Named Entities are: 
[('White PaperCustomer Service Solutions Natural', 'ORG')]


============================ Sentence 29 =============================

Consumers found the  speech applications  overwhelmingly more appealing. 


>> Tokens are: 
[Consumers, found,  , speech, applications,  , overwhelmingly, appealing, .] 

>> PoS Tags are: 
[('Consumers', 'NOUN'), ('found', 'VERB'), (' ', 'SPACE'), ('speech', 'NOUN'), ('applications', 'NOUN'), (' ', 'SPACE'), ('overwhelmingly', 'ADV'), ('appealing', 'ADJ'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Consumers', 'nsubj'), ('found', 'ROOT'), (' ', 'compound'), ('speech', 'compound'), ('applications', 'dobj'), (' ', 'nsubj'), ('overwhelmingly', 'advmod'), ('appealing', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[Consumers, found], [found,  ], [ , speech], [speech, applications], [applications,  ], [ , overwhelmingly], [overwhelmingly, appealing], [appealing, .]]

>> Trigrams: 
[[Consumers, found,  ], [found,  , speech], [ , speech, applications], [speech, applications,  ], [applications,  , overwhelmingly], [ , overwhelmingly, appealing], [overwhelmingly, appealing, .]]

>> Noun Phrases are: 
[Consumers, the  speech applications]

>> Named Entities are: 
[]


============================ Sentence 30 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 31 =============================

Source: Harris Interactive  41%Natural Language  38%Directed dialog  20%Touch tone    Noisy backgrounds, confused callers, very heavy accents, and mumbled  responses can make it hard for a system to complete a call. 


>> Tokens are: 
[Source, :, Harris, Interactive,  , 41%Natural, Language,  , 38%Directed, dialog,  , 20%Touch, tone,    , Noisy, backgrounds, ,, confused, callers, ,, heavy, accents, ,, mumbled,  , responses, hard, system, complete, .] 

>> PoS Tags are: 
[('Source', 'NOUN'), (':', 'PUNCT'), ('Harris', 'PROPN'), ('Interactive', 'PROPN'), (' ', 'SPACE'), ('41%Natural', 'NUM'), ('Language', 'PROPN'), (' ', 'SPACE'), ('38%Directed', 'NUM'), ('dialog', 'NOUN'), (' ', 'SPACE'), ('20%Touch', 'NUM'), ('tone', 'NOUN'), ('   ', 'SPACE'), ('Noisy', 'ADJ'), ('backgrounds', 'NOUN'), (',', 'PUNCT'), ('confused', 'ADJ'), ('callers', 'NOUN'), (',', 'PUNCT'), ('heavy', 'ADJ'), ('accents', 'NOUN'), (',', 'PUNCT'), ('mumbled', 'VERB'), (' ', 'SPACE'), ('responses', 'NOUN'), ('hard', 'ADJ'), ('system', 'NOUN'), ('complete', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Source', 'nmod'), (':', 'punct'), ('Harris', 'compound'), ('Interactive', 'appos'), (' ', 'appos'), ('41%Natural', 'nummod'), ('Language', 'nmod'), (' ', 'nmod'), ('38%Directed', 'nummod'), ('dialog', 'nsubj'), (' ', 'appos'), ('20%Touch', 'nummod'), ('tone', 'compound'), ('   ', 'nummod'), ('Noisy', 'amod'), ('backgrounds', 'dobj'), (',', 'punct'), ('confused', 'amod'), ('callers', 'conj'), (',', 'punct'), ('heavy', 'amod'), ('accents', 'conj'), (',', 'punct'), ('mumbled', 'ROOT'), (' ', 'compound'), ('responses', 'nsubj'), ('hard', 'ccomp'), ('system', 'nsubj'), ('complete', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[Source, :], [:, Harris], [Harris, Interactive], [Interactive,  ], [ , 41%Natural], [41%Natural, Language], [Language,  ], [ , 38%Directed], [38%Directed, dialog], [dialog,  ], [ , 20%Touch], [20%Touch, tone], [tone,    ], [   , Noisy], [Noisy, backgrounds], [backgrounds, ,], [,, confused], [confused, callers], [callers, ,], [,, heavy], [heavy, accents], [accents, ,], [,, mumbled], [mumbled,  ], [ , responses], [responses, hard], [hard, system], [system, complete], [complete, .]]

>> Trigrams: 
[[Source, :, Harris], [:, Harris, Interactive], [Harris, Interactive,  ], [Interactive,  , 41%Natural], [ , 41%Natural, Language], [41%Natural, Language,  ], [Language,  , 38%Directed], [ , 38%Directed, dialog], [38%Directed, dialog,  ], [dialog,  , 20%Touch], [ , 20%Touch, tone], [20%Touch, tone,    ], [tone,    , Noisy], [   , Noisy, backgrounds], [Noisy, backgrounds, ,], [backgrounds, ,, confused], [,, confused, callers], [confused, callers, ,], [callers, ,, heavy], [,, heavy, accents], [heavy, accents, ,], [accents, ,, mumbled], [,, mumbled,  ], [mumbled,  , responses], [ , responses, hard], [responses, hard, system], [hard, system, complete], [system, complete, .]]

>> Noun Phrases are: 
[Harris Interactive, 20%Touch tone    Noisy backgrounds, confused callers, very heavy accents,  responses, it, a system, a call]

>> Named Entities are: 
[('Noisy', 'GPE')]


============================ Sentence 32 =============================

Of course, those  factors can affect the ability of a live agent to complete those calls as well.   


>> Tokens are: 
[course, ,,  , factors, affect, ability, live, agent, complete, calls, .,  ] 

>> PoS Tags are: 
[('course', 'ADV'), (',', 'PUNCT'), (' ', 'SPACE'), ('factors', 'NOUN'), ('affect', 'VERB'), ('ability', 'NOUN'), ('live', 'ADJ'), ('agent', 'NOUN'), ('complete', 'VERB'), ('calls', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('course', 'advmod'), (',', 'punct'), (' ', 'compound'), ('factors', 'nsubj'), ('affect', 'ROOT'), ('ability', 'dobj'), ('live', 'amod'), ('agent', 'pobj'), ('complete', 'acl'), ('calls', 'dobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[course, ,], [,,  ], [ , factors], [factors, affect], [affect, ability], [ability, live], [live, agent], [agent, complete], [complete, calls], [calls, .], [.,  ]]

>> Trigrams: 
[[course, ,,  ], [,,  , factors], [ , factors, affect], [factors, affect, ability], [affect, ability, live], [ability, live, agent], [live, agent, complete], [agent, complete, calls], [complete, calls, .], [calls, .,  ]]

>> Noun Phrases are: 
[those  factors, the ability, a live agent, those calls]

>> Named Entities are: 
[]


============================ Sentence 33 =============================

And despite much advancement in technology, it is still possible for a speech  recognition engine to simply make a mistake. 


>> Tokens are: 
[despite, advancement, technology, ,, possible, speech,  , recognition, engine, simply, mistake, .] 

>> PoS Tags are: 
[('despite', 'SCONJ'), ('advancement', 'NOUN'), ('technology', 'NOUN'), (',', 'PUNCT'), ('possible', 'ADJ'), ('speech', 'NOUN'), (' ', 'SPACE'), ('recognition', 'NOUN'), ('engine', 'NOUN'), ('simply', 'ADV'), ('mistake', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('despite', 'prep'), ('advancement', 'pobj'), ('technology', 'pobj'), (',', 'punct'), ('possible', 'acomp'), ('speech', 'pobj'), (' ', 'prep'), ('recognition', 'compound'), ('engine', 'appos'), ('simply', 'advmod'), ('mistake', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[despite, advancement], [advancement, technology], [technology, ,], [,, possible], [possible, speech], [speech,  ], [ , recognition], [recognition, engine], [engine, simply], [simply, mistake], [mistake, .]]

>> Trigrams: 
[[despite, advancement, technology], [advancement, technology, ,], [technology, ,, possible], [,, possible, speech], [possible, speech,  ], [speech,  , recognition], [ , recognition, engine], [recognition, engine, simply], [engine, simply, mistake], [simply, mistake, .]]

>> Noun Phrases are: 
[much advancement, technology, it, a speech, recognition engine, a mistake]

>> Named Entities are: 
[]


============================ Sentence 34 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 35 =============================

Learning to speak customer-ese As all contact center agents know, callers truly believe they are speaking in  a clear and obvious manner when they are explaining their concerns. 


>> Tokens are: 
[Learning, speak, customer, -, ese, contact, center, agents, know, ,, callers, truly, believe, speaking,  , clear, obvious, manner, explaining, concerns, .] 

>> PoS Tags are: 
[('Learning', 'VERB'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'PROPN'), ('contact', 'NOUN'), ('center', 'NOUN'), ('agents', 'NOUN'), ('know', 'VERB'), (',', 'PUNCT'), ('callers', 'NOUN'), ('truly', 'ADV'), ('believe', 'VERB'), ('speaking', 'VERB'), (' ', 'SPACE'), ('clear', 'ADJ'), ('obvious', 'ADJ'), ('manner', 'NOUN'), ('explaining', 'VERB'), ('concerns', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learning', 'csubj'), ('speak', 'xcomp'), ('customer', 'compound'), ('-', 'punct'), ('ese', 'dobj'), ('contact', 'compound'), ('center', 'compound'), ('agents', 'nsubj'), ('know', 'parataxis'), (',', 'punct'), ('callers', 'nsubj'), ('truly', 'advmod'), ('believe', 'ROOT'), ('speaking', 'ccomp'), (' ', 'pobj'), ('clear', 'amod'), ('obvious', 'conj'), ('manner', 'dobj'), ('explaining', 'advcl'), ('concerns', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Learning, speak], [speak, customer], [customer, -], [-, ese], [ese, contact], [contact, center], [center, agents], [agents, know], [know, ,], [,, callers], [callers, truly], [truly, believe], [believe, speaking], [speaking,  ], [ , clear], [clear, obvious], [obvious, manner], [manner, explaining], [explaining, concerns], [concerns, .]]

>> Trigrams: 
[[Learning, speak, customer], [speak, customer, -], [customer, -, ese], [-, ese, contact], [ese, contact, center], [contact, center, agents], [center, agents, know], [agents, know, ,], [know, ,, callers], [,, callers, truly], [callers, truly, believe], [truly, believe, speaking], [believe, speaking,  ], [speaking,  , clear], [ , clear, obvious], [clear, obvious, manner], [obvious, manner, explaining], [manner, explaining, concerns], [explaining, concerns, .]]

>> Noun Phrases are: 
[customer-ese, all contact center agents, callers, they, a clear and obvious manner, they, their concerns]

>> Named Entities are: 
[]


============================ Sentence 36 =============================

In fact,  each caller is really speaking in ‘customer-ese’, their own personal dialect  that agents and IVR systems need to decode. 


>> Tokens are: 
[fact, ,,  , caller, speaking, ‘, customer, -, ese, ’, ,, personal, dialect,  , agents, IVR, systems, need, decode, .] 

>> PoS Tags are: 
[('fact', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('caller', 'NOUN'), ('speaking', 'VERB'), ('‘', 'PUNCT'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'PROPN'), ('’', 'PUNCT'), (',', 'PUNCT'), ('personal', 'ADJ'), ('dialect', 'NOUN'), (' ', 'SPACE'), ('agents', 'NOUN'), ('IVR', 'PROPN'), ('systems', 'NOUN'), ('need', 'VERB'), ('decode', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('fact', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('caller', 'nsubj'), ('speaking', 'ROOT'), ('‘', 'punct'), ('customer', 'compound'), ('-', 'punct'), ('ese', 'pobj'), ('’', 'punct'), (',', 'punct'), ('personal', 'amod'), ('dialect', 'dobj'), (' ', 'appos'), ('agents', 'nsubj'), ('IVR', 'compound'), ('systems', 'conj'), ('need', 'relcl'), ('decode', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[fact, ,], [,,  ], [ , caller], [caller, speaking], [speaking, ‘], [‘, customer], [customer, -], [-, ese], [ese, ’], [’, ,], [,, personal], [personal, dialect], [dialect,  ], [ , agents], [agents, IVR], [IVR, systems], [systems, need], [need, decode], [decode, .]]

>> Trigrams: 
[[fact, ,,  ], [,,  , caller], [ , caller, speaking], [caller, speaking, ‘], [speaking, ‘, customer], [‘, customer, -], [customer, -, ese], [-, ese, ’], [ese, ’, ,], [’, ,, personal], [,, personal, dialect], [personal, dialect,  ], [dialect,  , agents], [ , agents, IVR], [agents, IVR, systems], [IVR, systems, need], [systems, need, decode], [need, decode, .]]

>> Noun Phrases are: 
[fact, each caller, ‘customer-ese, their own personal dialect, agents, IVR systems]

>> Named Entities are: 
[('IVR', 'ORG')]


============================ Sentence 37 =============================

This interpretation process  is very similar to learning a new foreign language. 


>> Tokens are: 
[interpretation, process,  , similar, learning, new, foreign, language, .] 

>> PoS Tags are: 
[('interpretation', 'NOUN'), ('process', 'NOUN'), (' ', 'SPACE'), ('similar', 'ADJ'), ('learning', 'VERB'), ('new', 'ADJ'), ('foreign', 'ADJ'), ('language', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('interpretation', 'compound'), ('process', 'nsubj'), (' ', 'nsubj'), ('similar', 'acomp'), ('learning', 'pcomp'), ('new', 'amod'), ('foreign', 'amod'), ('language', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[interpretation, process], [process,  ], [ , similar], [similar, learning], [learning, new], [new, foreign], [foreign, language], [language, .]]

>> Trigrams: 
[[interpretation, process,  ], [process,  , similar], [ , similar, learning], [similar, learning, new], [learning, new, foreign], [new, foreign, language], [foreign, language, .]]

>> Noun Phrases are: 
[This interpretation process, a new foreign language]

>> Named Entities are: 
[]


============================ Sentence 38 =============================

To address the challenge  many speech recognition systems have a list of acceptable phrases, known  as the grammar, that the system is programmed to recognize at any given  time. 


>> Tokens are: 
[address, challenge,  , speech, recognition, systems, list, acceptable, phrases, ,, known,  , grammar, ,, system, programmed, recognize, given,  , time, .] 

>> PoS Tags are: 
[('address', 'VERB'), ('challenge', 'NOUN'), (' ', 'SPACE'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('systems', 'NOUN'), ('list', 'NOUN'), ('acceptable', 'ADJ'), ('phrases', 'NOUN'), (',', 'PUNCT'), ('known', 'VERB'), (' ', 'SPACE'), ('grammar', 'NOUN'), (',', 'PUNCT'), ('system', 'NOUN'), ('programmed', 'VERB'), ('recognize', 'VERB'), ('given', 'VERB'), (' ', 'SPACE'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('address', 'advcl'), ('challenge', 'dobj'), (' ', 'dobj'), ('speech', 'compound'), ('recognition', 'compound'), ('systems', 'nsubj'), ('list', 'dobj'), ('acceptable', 'amod'), ('phrases', 'pobj'), (',', 'punct'), ('known', 'acl'), (' ', 'dobj'), ('grammar', 'pobj'), (',', 'punct'), ('system', 'nsubjpass'), ('programmed', 'acl'), ('recognize', 'xcomp'), ('given', 'amod'), (' ', 'compound'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[address, challenge], [challenge,  ], [ , speech], [speech, recognition], [recognition, systems], [systems, list], [list, acceptable], [acceptable, phrases], [phrases, ,], [,, known], [known,  ], [ , grammar], [grammar, ,], [,, system], [system, programmed], [programmed, recognize], [recognize, given], [given,  ], [ , time], [time, .]]

>> Trigrams: 
[[address, challenge,  ], [challenge,  , speech], [ , speech, recognition], [speech, recognition, systems], [recognition, systems, list], [systems, list, acceptable], [list, acceptable, phrases], [acceptable, phrases, ,], [phrases, ,, known], [,, known,  ], [known,  , grammar], [ , grammar, ,], [grammar, ,, system], [,, system, programmed], [system, programmed, recognize], [programmed, recognize, given], [recognize, given,  ], [given,  , time], [ , time, .]]

>> Noun Phrases are: 
[the challenge, many speech recognition systems, a list, acceptable phrases, the grammar, the system, any given  time]

>> Named Entities are: 
[]


============================ Sentence 39 =============================

Grammars ensure that a speech recognition engine knows that the  phrase “new to speech” is not a “nudist beach”, and that “agent,” “operator,”  and “I want to speak to someone” all direct the caller to a live person. 


>> Tokens are: 
[Grammars, ensure, speech, recognition, engine, knows,  , phrase, “, new, speech, ”, “, nudist, beach, ”, ,, “, agent, ,, ”, “, operator, ,, ”,  , “, want, speak, ”, direct, caller, live, person, .] 

>> PoS Tags are: 
[('Grammars', 'PROPN'), ('ensure', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('engine', 'NOUN'), ('knows', 'VERB'), (' ', 'SPACE'), ('phrase', 'NOUN'), ('“', 'PUNCT'), ('new', 'ADJ'), ('speech', 'NOUN'), ('”', 'PUNCT'), ('“', 'PUNCT'), ('nudist', 'ADJ'), ('beach', 'NOUN'), ('”', 'PUNCT'), (',', 'PUNCT'), ('“', 'PUNCT'), ('agent', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), ('“', 'PUNCT'), ('operator', 'NOUN'), (',', 'PUNCT'), ('”', 'PUNCT'), (' ', 'SPACE'), ('“', 'PUNCT'), ('want', 'VERB'), ('speak', 'VERB'), ('”', 'PUNCT'), ('direct', 'VERB'), ('caller', 'NOUN'), ('live', 'ADJ'), ('person', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Grammars', 'nsubj'), ('ensure', 'ROOT'), ('speech', 'compound'), ('recognition', 'compound'), ('engine', 'nsubj'), ('knows', 'ccomp'), (' ', 'compound'), ('phrase', 'nsubj'), ('“', 'punct'), ('new', 'amod'), ('speech', 'pobj'), ('”', 'punct'), ('“', 'punct'), ('nudist', 'amod'), ('beach', 'attr'), ('”', 'punct'), (',', 'punct'), ('“', 'punct'), ('agent', 'conj'), (',', 'punct'), ('”', 'punct'), ('“', 'punct'), ('operator', 'conj'), (',', 'punct'), ('”', 'punct'), (' ', 'appos'), ('“', 'punct'), ('want', 'conj'), ('speak', 'xcomp'), ('”', 'punct'), ('direct', 'conj'), ('caller', 'dobj'), ('live', 'amod'), ('person', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Grammars, ensure], [ensure, speech], [speech, recognition], [recognition, engine], [engine, knows], [knows,  ], [ , phrase], [phrase, “], [“, new], [new, speech], [speech, ”], [”, “], [“, nudist], [nudist, beach], [beach, ”], [”, ,], [,, “], [“, agent], [agent, ,], [,, ”], [”, “], [“, operator], [operator, ,], [,, ”], [”,  ], [ , “], [“, want], [want, speak], [speak, ”], [”, direct], [direct, caller], [caller, live], [live, person], [person, .]]

>> Trigrams: 
[[Grammars, ensure, speech], [ensure, speech, recognition], [speech, recognition, engine], [recognition, engine, knows], [engine, knows,  ], [knows,  , phrase], [ , phrase, “], [phrase, “, new], [“, new, speech], [new, speech, ”], [speech, ”, “], [”, “, nudist], [“, nudist, beach], [nudist, beach, ”], [beach, ”, ,], [”, ,, “], [,, “, agent], [“, agent, ,], [agent, ,, ”], [,, ”, “], [”, “, operator], [“, operator, ,], [operator, ,, ”], [,, ”,  ], [”,  , “], [ , “, want], [“, want, speak], [want, speak, ”], [speak, ”, direct], [”, direct, caller], [direct, caller, live], [caller, live, person], [live, person, .]]

>> Noun Phrases are: 
[Grammars, a speech recognition engine, the  phrase, speech, a “nudist beach, I, someone, the caller, a live person]

>> Named Entities are: 
[]


============================ Sentence 40 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 41 =============================

If implementing a speech-enabled self-service system is like teaching a  foreign language, then a grammar is like a translation book, mapping com- 


>> Tokens are: 
[implementing, speech, -, enabled, self, -, service, system, like, teaching,  , foreign, language, ,, grammar, like, translation, book, ,, mapping, com-] 

>> PoS Tags are: 
[('implementing', 'VERB'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('like', 'ADP'), ('teaching', 'VERB'), (' ', 'SPACE'), ('foreign', 'ADJ'), ('language', 'NOUN'), (',', 'PUNCT'), ('grammar', 'NOUN'), ('like', 'ADP'), ('translation', 'NOUN'), ('book', 'NOUN'), (',', 'PUNCT'), ('mapping', 'NOUN'), ('com-', 'NOUN')] 

>> Dependency Tags are: 
[('implementing', 'csubj'), ('speech', 'npadvmod'), ('-', 'punct'), ('enabled', 'amod'), ('self', 'compound'), ('-', 'punct'), ('service', 'compound'), ('system', 'dobj'), ('like', 'prep'), ('teaching', 'pcomp'), (' ', 'nmod'), ('foreign', 'amod'), ('language', 'dobj'), (',', 'punct'), ('grammar', 'nsubj'), ('like', 'prep'), ('translation', 'compound'), ('book', 'pobj'), (',', 'punct'), ('mapping', 'amod'), ('com-', 'punct')]

>> Bigrams: 
[[implementing, speech], [speech, -], [-, enabled], [enabled, self], [self, -], [-, service], [service, system], [system, like], [like, teaching], [teaching,  ], [ , foreign], [foreign, language], [language, ,], [,, grammar], [grammar, like], [like, translation], [translation, book], [book, ,], [,, mapping], [mapping, com-]]

>> Trigrams: 
[[implementing, speech, -], [speech, -, enabled], [-, enabled, self], [enabled, self, -], [self, -, service], [-, service, system], [service, system, like], [system, like, teaching], [like, teaching,  ], [teaching,  , foreign], [ , foreign, language], [foreign, language, ,], [language, ,, grammar], [,, grammar, like], [grammar, like, translation], [like, translation, book], [translation, book, ,], [book, ,, mapping], [,, mapping, com-]]

>> Noun Phrases are: 
[a speech-enabled self-service system, a  foreign language, a grammar, a translation book]

>> Named Entities are: 
[]


============================ Sentence 42 =============================

mon phrases to their meaning. 


>> Tokens are: 
[mon, phrases, meaning, .] 

>> PoS Tags are: 
[('mon', 'ADJ'), ('phrases', 'NOUN'), ('meaning', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('mon', 'amod'), ('phrases', 'ROOT'), ('meaning', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[mon, phrases], [phrases, meaning], [meaning, .]]

>> Trigrams: 
[[mon, phrases, meaning], [phrases, meaning, .]]

>> Noun Phrases are: 
[mon phrases, their meaning]

>> Named Entities are: 
[]


============================ Sentence 43 =============================

It works quite well… as long as people stick to  those phrases. 


>> Tokens are: 
[works, …, long, people, stick,  , phrases, .] 

>> PoS Tags are: 
[('works', 'VERB'), ('…', 'PUNCT'), ('long', 'ADV'), ('people', 'NOUN'), ('stick', 'VERB'), (' ', 'SPACE'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('works', 'ROOT'), ('…', 'punct'), ('long', 'advmod'), ('people', 'nsubj'), ('stick', 'advcl'), (' ', 'pobj'), ('phrases', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[works, …], […, long], [long, people], [people, stick], [stick,  ], [ , phrases], [phrases, .]]

>> Trigrams: 
[[works, …, long], […, long, people], [long, people, stick], [people, stick,  ], [stick,  , phrases], [ , phrases, .]]

>> Noun Phrases are: 
[It, people, those phrases]

>> Named Entities are: 
[]


============================ Sentence 44 =============================

So what happens if a phrase is not in the book? 


>> Tokens are: 
[happens, phrase, book, ?] 

>> PoS Tags are: 
[('happens', 'VERB'), ('phrase', 'NOUN'), ('book', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('happens', 'ROOT'), ('phrase', 'nsubj'), ('book', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[happens, phrase], [phrase, book], [book, ?]]

>> Trigrams: 
[[happens, phrase, book], [phrase, book, ?]]

>> Noun Phrases are: 
[what, a phrase, the book]

>> Named Entities are: 
[]


============================ Sentence 45 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 46 =============================

When a caller believes that a speech system has misrecognized his or her  response, it is more likely that the caller spoke something which was out-of- grammar—the system simply wasn’t expecting the caller to respond quite like  that. 


>> Tokens are: 
[caller, believes, speech, system, misrecognized,  , response, ,, likely, caller, spoke, -, of-, grammar, —, system, simply, expecting, caller, respond, like,  , .] 

>> PoS Tags are: 
[('caller', 'NOUN'), ('believes', 'VERB'), ('speech', 'NOUN'), ('system', 'NOUN'), ('misrecognized', 'VERB'), (' ', 'SPACE'), ('response', 'NOUN'), (',', 'PUNCT'), ('likely', 'ADJ'), ('caller', 'NOUN'), ('spoke', 'VERB'), ('-', 'PUNCT'), ('of-', 'NOUN'), ('grammar', 'NOUN'), ('—', 'PUNCT'), ('system', 'NOUN'), ('simply', 'ADV'), ('expecting', 'VERB'), ('caller', 'NOUN'), ('respond', 'VERB'), ('like', 'ADP'), (' ', 'SPACE'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('caller', 'nsubj'), ('believes', 'advcl'), ('speech', 'compound'), ('system', 'nsubj'), ('misrecognized', 'ccomp'), (' ', 'compound'), ('response', 'dobj'), (',', 'punct'), ('likely', 'acomp'), ('caller', 'nsubj'), ('spoke', 'ccomp'), ('-', 'punct'), ('of-', 'compound'), ('grammar', 'attr'), ('—', 'punct'), ('system', 'nsubj'), ('simply', 'advmod'), ('expecting', 'ROOT'), ('caller', 'nsubj'), ('respond', 'ccomp'), ('like', 'prep'), (' ', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[caller, believes], [believes, speech], [speech, system], [system, misrecognized], [misrecognized,  ], [ , response], [response, ,], [,, likely], [likely, caller], [caller, spoke], [spoke, -], [-, of-], [of-, grammar], [grammar, —], [—, system], [system, simply], [simply, expecting], [expecting, caller], [caller, respond], [respond, like], [like,  ], [ , .]]

>> Trigrams: 
[[caller, believes, speech], [believes, speech, system], [speech, system, misrecognized], [system, misrecognized,  ], [misrecognized,  , response], [ , response, ,], [response, ,, likely], [,, likely, caller], [likely, caller, spoke], [caller, spoke, -], [spoke, -, of-], [-, of-, grammar], [of-, grammar, —], [grammar, —, system], [—, system, simply], [system, simply, expecting], [simply, expecting, caller], [expecting, caller, respond], [caller, respond, like], [respond, like,  ], [like,  , .]]

>> Noun Phrases are: 
[a caller, a speech system, his or her  response, it, the caller, something, out-of- grammar, the system, the caller]

>> Named Entities are: 
[]


============================ Sentence 47 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 48 =============================

An analysis of a number of representative speech applications confirms that  out-of-grammar errors outnumber misrecognition errors by a factor of as high  as 5-to-1. 


>> Tokens are: 
[analysis, number, representative, speech, applications, confirms,  , -, -, grammar, errors, outnumber, misrecognition, errors, factor, high,  , 5, -, to-1, .] 

>> PoS Tags are: 
[('analysis', 'NOUN'), ('number', 'NOUN'), ('representative', 'ADJ'), ('speech', 'NOUN'), ('applications', 'NOUN'), ('confirms', 'VERB'), (' ', 'SPACE'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('errors', 'NOUN'), ('outnumber', 'VERB'), ('misrecognition', 'NOUN'), ('errors', 'NOUN'), ('factor', 'NOUN'), ('high', 'ADJ'), (' ', 'SPACE'), ('5', 'NUM'), ('-', 'PUNCT'), ('to-1', 'DET'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('analysis', 'nsubj'), ('number', 'pobj'), ('representative', 'amod'), ('speech', 'compound'), ('applications', 'pobj'), ('confirms', 'ROOT'), (' ', 'det'), ('-', 'punct'), ('-', 'punct'), ('grammar', 'pobj'), ('errors', 'nsubj'), ('outnumber', 'ccomp'), ('misrecognition', 'compound'), ('errors', 'dobj'), ('factor', 'pobj'), ('high', 'amod'), (' ', 'pobj'), ('5', 'pobj'), ('-', 'punct'), ('to-1', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[analysis, number], [number, representative], [representative, speech], [speech, applications], [applications, confirms], [confirms,  ], [ , -], [-, -], [-, grammar], [grammar, errors], [errors, outnumber], [outnumber, misrecognition], [misrecognition, errors], [errors, factor], [factor, high], [high,  ], [ , 5], [5, -], [-, to-1], [to-1, .]]

>> Trigrams: 
[[analysis, number, representative], [number, representative, speech], [representative, speech, applications], [speech, applications, confirms], [applications, confirms,  ], [confirms,  , -], [ , -, -], [-, -, grammar], [-, grammar, errors], [grammar, errors, outnumber], [errors, outnumber, misrecognition], [outnumber, misrecognition, errors], [misrecognition, errors, factor], [errors, factor, high], [factor, high,  ], [high,  , 5], [ , 5, -], [5, -, to-1], [-, to-1, .]]

>> Noun Phrases are: 
[An analysis, a number, representative speech applications, grammar, misrecognition errors, a factor]

>> Named Entities are: 
[]


============================ Sentence 49 =============================

Put simply, the problem is not recognizing what the caller said…   


>> Tokens are: 
[simply, ,, problem, recognizing, caller, said, …,  ] 

>> PoS Tags are: 
[('simply', 'ADV'), (',', 'PUNCT'), ('problem', 'NOUN'), ('recognizing', 'VERB'), ('caller', 'NOUN'), ('said', 'VERB'), ('…', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('simply', 'advmod'), (',', 'punct'), ('problem', 'nsubj'), ('recognizing', 'ROOT'), ('caller', 'nsubj'), ('said', 'ccomp'), ('…', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[simply, ,], [,, problem], [problem, recognizing], [recognizing, caller], [caller, said], [said, …], […,  ]]

>> Trigrams: 
[[simply, ,, problem], [,, problem, recognizing], [problem, recognizing, caller], [recognizing, caller, said], [caller, said, …], [said, …,  ]]

>> Noun Phrases are: 
[the problem, what, the caller]

>> Named Entities are: 
[]


============================ Sentence 50 =============================

it’s knowing what the caller meant. 


>> Tokens are: 
[knowing, caller, meant, .] 

>> PoS Tags are: 
[('knowing', 'VERB'), ('caller', 'NOUN'), ('meant', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('knowing', 'ROOT'), ('caller', 'nsubj'), ('meant', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[knowing, caller], [caller, meant], [meant, .]]

>> Trigrams: 
[[knowing, caller, meant], [caller, meant, .]]

>> Noun Phrases are: 
[it, what, the caller]

>> Named Entities are: 
[]


============================ Sentence 51 =============================

Therefore, to increase the accuracy of any  system—improving its automation rate, making customers happier with the  use of the system, and lowering overall costs for the contact center—a critical  factor is to reduce these out-of-grammar errors. 


>> Tokens are: 
[,, increase, accuracy,  , system, —, improving, automation, rate, ,, making, customers, happier,  , use, system, ,, lowering, overall, costs, contact, center, —, critical,  , factor, reduce, -, -, grammar, errors, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('increase', 'VERB'), ('accuracy', 'NOUN'), (' ', 'SPACE'), ('system', 'NOUN'), ('—', 'PUNCT'), ('improving', 'VERB'), ('automation', 'NOUN'), ('rate', 'NOUN'), (',', 'PUNCT'), ('making', 'VERB'), ('customers', 'NOUN'), ('happier', 'ADJ'), (' ', 'SPACE'), ('use', 'NOUN'), ('system', 'NOUN'), (',', 'PUNCT'), ('lowering', 'VERB'), ('overall', 'ADJ'), ('costs', 'NOUN'), ('contact', 'NOUN'), ('center', 'NOUN'), ('—', 'PUNCT'), ('critical', 'ADJ'), (' ', 'SPACE'), ('factor', 'NOUN'), ('reduce', 'VERB'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('errors', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('increase', 'advcl'), ('accuracy', 'dobj'), (' ', 'compound'), ('system', 'pobj'), ('—', 'punct'), ('improving', 'advcl'), ('automation', 'compound'), ('rate', 'dobj'), (',', 'punct'), ('making', 'conj'), ('customers', 'nsubj'), ('happier', 'ccomp'), (' ', 'compound'), ('use', 'pobj'), ('system', 'pobj'), (',', 'punct'), ('lowering', 'conj'), ('overall', 'amod'), ('costs', 'dobj'), ('contact', 'compound'), ('center', 'pobj'), ('—', 'punct'), ('critical', 'amod'), (' ', 'compound'), ('factor', 'nsubj'), ('reduce', 'xcomp'), ('-', 'punct'), ('-', 'punct'), ('grammar', 'pobj'), ('errors', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[,, increase], [increase, accuracy], [accuracy,  ], [ , system], [system, —], [—, improving], [improving, automation], [automation, rate], [rate, ,], [,, making], [making, customers], [customers, happier], [happier,  ], [ , use], [use, system], [system, ,], [,, lowering], [lowering, overall], [overall, costs], [costs, contact], [contact, center], [center, —], [—, critical], [critical,  ], [ , factor], [factor, reduce], [reduce, -], [-, -], [-, grammar], [grammar, errors], [errors, .]]

>> Trigrams: 
[[,, increase, accuracy], [increase, accuracy,  ], [accuracy,  , system], [ , system, —], [system, —, improving], [—, improving, automation], [improving, automation, rate], [automation, rate, ,], [rate, ,, making], [,, making, customers], [making, customers, happier], [customers, happier,  ], [happier,  , use], [ , use, system], [use, system, ,], [system, ,, lowering], [,, lowering, overall], [lowering, overall, costs], [overall, costs, contact], [costs, contact, center], [contact, center, —], [center, —, critical], [—, critical,  ], [critical,  , factor], [ , factor, reduce], [factor, reduce, -], [reduce, -, -], [-, -, grammar], [-, grammar, errors], [grammar, errors, .]]

>> Noun Phrases are: 
[the accuracy, any  system, its automation rate, customers, the  use, the system, overall costs, the contact center, a critical  factor, grammar]

>> Named Entities are: 
[]


============================ Sentence 52 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 53 =============================

So how can we teach a speech recognition system to speak this language  of the customer? 


>> Tokens are: 
[teach, speech, recognition, system, speak, language,  , customer, ?] 

>> PoS Tags are: 
[('teach', 'VERB'), ('speech', 'NOUN'), ('recognition', 'NOUN'), ('system', 'NOUN'), ('speak', 'VERB'), ('language', 'NOUN'), (' ', 'SPACE'), ('customer', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('teach', 'ROOT'), ('speech', 'compound'), ('recognition', 'compound'), ('system', 'dobj'), ('speak', 'advcl'), ('language', 'dobj'), (' ', 'dobj'), ('customer', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[teach, speech], [speech, recognition], [recognition, system], [system, speak], [speak, language], [language,  ], [ , customer], [customer, ?]]

>> Trigrams: 
[[teach, speech, recognition], [speech, recognition, system], [recognition, system, speak], [system, speak, language], [speak, language,  ], [language,  , customer], [ , customer, ?]]

>> Noun Phrases are: 
[we, a speech recognition system, this language, the customer]

>> Named Entities are: 
[]


============================ Sentence 54 =============================

Different natural language capabilities provide different  approaches to tackling that problem. 


>> Tokens are: 
[Different, natural, language, capabilities, provide, different,  , approaches, tackling, problem, .] 

>> PoS Tags are: 
[('Different', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('capabilities', 'NOUN'), ('provide', 'VERB'), ('different', 'ADJ'), (' ', 'SPACE'), ('approaches', 'NOUN'), ('tackling', 'VERB'), ('problem', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Different', 'amod'), ('natural', 'amod'), ('language', 'compound'), ('capabilities', 'nsubj'), ('provide', 'ROOT'), ('different', 'amod'), (' ', 'compound'), ('approaches', 'dobj'), ('tackling', 'pcomp'), ('problem', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Different, natural], [natural, language], [language, capabilities], [capabilities, provide], [provide, different], [different,  ], [ , approaches], [approaches, tackling], [tackling, problem], [problem, .]]

>> Trigrams: 
[[Different, natural, language], [natural, language, capabilities], [language, capabilities, provide], [capabilities, provide, different], [provide, different,  ], [different,  , approaches], [ , approaches, tackling], [approaches, tackling, problem], [tackling, problem, .]]

>> Noun Phrases are: 
[Different natural language capabilities, different  approaches, that problem]

>> Named Entities are: 
[]


============================ Sentence 55 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 56 =============================

White PaperCustomer Service Solutions Natural language understanding3   


>> Tokens are: 
[White, PaperCustomer, Service, Solutions, Natural, language, understanding3,  ] 

>> PoS Tags are: 
[('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding3', 'NOUN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'compound'), ('understanding3', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding3], [understanding3,  ]]

>> Trigrams: 
[[White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding3], [language, understanding3,  ]]

>> Noun Phrases are: 
[White PaperCustomer Service Solutions Natural language understanding3]

>> Named Entities are: 
[('White PaperCustomer Service', 'ORG')]


============================ Sentence 57 =============================

The Need for Natural Language A Typical Example   


>> Tokens are: 
[Need, Natural, Language, Typical, Example,  ] 

>> PoS Tags are: 
[('Need', 'PROPN'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Typical', 'PROPN'), ('Example', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Need', 'nmod'), ('Natural', 'compound'), ('Language', 'pobj'), ('Typical', 'amod'), ('Example', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Need, Natural], [Natural, Language], [Language, Typical], [Typical, Example], [Example,  ]]

>> Trigrams: 
[[Need, Natural, Language], [Natural, Language, Typical], [Language, Typical, Example], [Typical, Example,  ]]

>> Noun Phrases are: 
[Natural Language, Typical Example]

>> Named Entities are: 
[('The Need for Natural Language A Typical Example  ', 'WORK_OF_ART')]


============================ Sentence 58 =============================

CALLER: I guess I’d like  billing. 


>> Tokens are: 
[CALLER, :, guess, like,  , billing, .] 

>> PoS Tags are: 
[('CALLER', 'PROPN'), (':', 'PUNCT'), ('guess', 'VERB'), ('like', 'ADP'), (' ', 'SPACE'), ('billing', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('CALLER', 'dep'), (':', 'punct'), ('guess', 'ROOT'), ('like', 'ccomp'), (' ', 'dobj'), ('billing', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[CALLER, :], [:, guess], [guess, like], [like,  ], [ , billing], [billing, .]]

>> Trigrams: 
[[CALLER, :, guess], [:, guess, like], [guess, like,  ], [like,  , billing], [ , billing, .]]

>> Noun Phrases are: 
[I, I]

>> Named Entities are: 
[]


============================ Sentence 59 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 60 =============================

I said billing! 


>> Tokens are: 
[said, billing, !] 

>> PoS Tags are: 
[('said', 'VERB'), ('billing', 'NOUN'), ('!', 'PUNCT')] 

>> Dependency Tags are: 
[('said', 'ROOT'), ('billing', 'dobj'), ('!', 'punct')]

>> Bigrams: 
[[said, billing], [billing, !]]

>> Trigrams: 
[[said, billing, !]]

>> Noun Phrases are: 
[I, billing]

>> Named Entities are: 
[]


============================ Sentence 61 =============================

  Billing! 


>> Tokens are: 
[  , Billing, !] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('Billing', 'PROPN'), ('!', 'PUNCT')] 

>> Dependency Tags are: 
[('  ', 'nmod'), ('Billing', 'ROOT'), ('!', 'punct')]

>> Bigrams: 
[[  , Billing], [Billing, !]]

>> Trigrams: 
[[  , Billing, !]]

>> Noun Phrases are: 
[  Billing]

>> Named Entities are: 
[]


============================ Sentence 62 =============================

 BILLING! 


>> Tokens are: 
[ , BILLING, !] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('BILLING', 'NOUN'), ('!', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'ROOT'), ('BILLING', 'npadvmod'), ('!', 'punct')]

>> Bigrams: 
[[ , BILLING], [BILLING, !]]

>> Trigrams: 
[[ , BILLING, !]]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 63 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 64 =============================

Would you like account information,  billing, or technical support? 


>> Tokens are: 
[like, account, information, ,,  , billing, ,, technical, support, ?] 

>> PoS Tags are: 
[('like', 'VERB'), ('account', 'NOUN'), ('information', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('billing', 'NOUN'), (',', 'PUNCT'), ('technical', 'ADJ'), ('support', 'NOUN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('like', 'ROOT'), ('account', 'compound'), ('information', 'dobj'), (',', 'punct'), (' ', 'compound'), ('billing', 'conj'), (',', 'punct'), ('technical', 'amod'), ('support', 'conj'), ('?', 'punct')]

>> Bigrams: 
[[like, account], [account, information], [information, ,], [,,  ], [ , billing], [billing, ,], [,, technical], [technical, support], [support, ?]]

>> Trigrams: 
[[like, account, information], [account, information, ,], [information, ,,  ], [,,  , billing], [ , billing, ,], [billing, ,, technical], [,, technical, support], [technical, support, ?]]

>> Noun Phrases are: 
[you, account information,  billing, technical support]

>> Named Entities are: 
[]


============================ Sentence 65 =============================

 SYSTEM:   


>> Tokens are: 
[ , SYSTEM, :,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('SYSTEM', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('SYSTEM', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[ , SYSTEM], [SYSTEM, :], [:,  ]]

>> Trigrams: 
[[ , SYSTEM, :], [SYSTEM, :,  ]]

>> Noun Phrases are: 
[ SYSTEM]

>> Named Entities are: 
[]


============================ Sentence 66 =============================

I’m sorry, I didn’t understand what  you said...   


>> Tokens are: 
[sorry, ,, understand,  , said, ...,  ] 

>> PoS Tags are: 
[('sorry', 'ADJ'), (',', 'PUNCT'), ('understand', 'VERB'), (' ', 'SPACE'), ('said', 'VERB'), ('...', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('sorry', 'acomp'), (',', 'punct'), ('understand', 'ROOT'), (' ', 'dobj'), ('said', 'ccomp'), ('...', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[sorry, ,], [,, understand], [understand,  ], [ , said], [said, ...], [...,  ]]

>> Trigrams: 
[[sorry, ,, understand], [,, understand,  ], [understand,  , said], [ , said, ...], [said, ...,  ]]

>> Noun Phrases are: 
[I, I, you]

>> Named Entities are: 
[]


============================ Sentence 67 =============================

I’m sorry, I didn’t understand what  you said... please wait for the next  available agent. 


>> Tokens are: 
[sorry, ,, understand,  , said, ..., wait,  , available, agent, .] 

>> PoS Tags are: 
[('sorry', 'ADJ'), (',', 'PUNCT'), ('understand', 'VERB'), (' ', 'SPACE'), ('said', 'VERB'), ('...', 'PUNCT'), ('wait', 'VERB'), (' ', 'SPACE'), ('available', 'ADJ'), ('agent', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('sorry', 'acomp'), (',', 'punct'), ('understand', 'ccomp'), (' ', 'dobj'), ('said', 'ccomp'), ('...', 'punct'), ('wait', 'ROOT'), (' ', 'nmod'), ('available', 'amod'), ('agent', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[sorry, ,], [,, understand], [understand,  ], [ , said], [said, ...], [..., wait], [wait,  ], [ , available], [available, agent], [agent, .]]

>> Trigrams: 
[[sorry, ,, understand], [,, understand,  ], [understand,  , said], [ , said, ...], [said, ..., wait], [..., wait,  ], [wait,  , available], [ , available, agent], [available, agent, .]]

>> Noun Phrases are: 
[I, I, you, the next  available agent]

>> Named Entities are: 
[]


============================ Sentence 68 =============================

   Make the translation book bigger You can make the grammar contain a larger list of entries to appear like   natural language is at work. 


>> Tokens are: 
[   , translation, book, bigger, grammar, contain, larger, list, entries, appear, like,   , natural, language, work, .] 

>> PoS Tags are: 
[('   ', 'SPACE'), ('translation', 'NOUN'), ('book', 'NOUN'), ('bigger', 'ADJ'), ('grammar', 'NOUN'), ('contain', 'VERB'), ('larger', 'ADJ'), ('list', 'NOUN'), ('entries', 'NOUN'), ('appear', 'VERB'), ('like', 'ADP'), ('  ', 'SPACE'), ('natural', 'ADJ'), ('language', 'NOUN'), ('work', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('   ', 'nsubj'), ('translation', 'compound'), ('book', 'nsubj'), ('bigger', 'ccomp'), ('grammar', 'nsubj'), ('contain', 'ccomp'), ('larger', 'amod'), ('list', 'dobj'), ('entries', 'pobj'), ('appear', 'advcl'), ('like', 'mark'), ('  ', 'nmod'), ('natural', 'amod'), ('language', 'nsubj'), ('work', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[   , translation], [translation, book], [book, bigger], [bigger, grammar], [grammar, contain], [contain, larger], [larger, list], [list, entries], [entries, appear], [appear, like], [like,   ], [  , natural], [natural, language], [language, work], [work, .]]

>> Trigrams: 
[[   , translation, book], [translation, book, bigger], [book, bigger, grammar], [bigger, grammar, contain], [grammar, contain, larger], [contain, larger, list], [larger, list, entries], [list, entries, appear], [entries, appear, like], [appear, like,   ], [like,   , natural], [  , natural, language], [natural, language, work], [language, work, .]]

>> Noun Phrases are: 
[the translation book, You, the grammar, a larger list, entries,   natural language, work]

>> Named Entities are: 
[]


============================ Sentence 69 =============================

This works best when trying to pick between  a limited number of responses – for instance, a confirmation dialog may  recognize yes, yup, you betcha, sure, heck 


>> Tokens are: 
[works, best, trying, pick,  , limited, number, responses, –, instance, ,, confirmation, dialog,  , recognize, yes, ,, yup, ,, betcha, ,, sure, ,, heck] 

>> PoS Tags are: 
[('works', 'VERB'), ('best', 'ADV'), ('trying', 'VERB'), ('pick', 'VERB'), (' ', 'SPACE'), ('limited', 'ADJ'), ('number', 'NOUN'), ('responses', 'NOUN'), ('–', 'PUNCT'), ('instance', 'NOUN'), (',', 'PUNCT'), ('confirmation', 'NOUN'), ('dialog', 'NOUN'), (' ', 'SPACE'), ('recognize', 'VERB'), ('yes', 'INTJ'), (',', 'PUNCT'), ('yup', 'INTJ'), (',', 'PUNCT'), ('betcha', 'NOUN'), (',', 'PUNCT'), ('sure', 'INTJ'), (',', 'PUNCT'), ('heck', 'INTJ')] 

>> Dependency Tags are: 
[('works', 'ROOT'), ('best', 'advmod'), ('trying', 'advcl'), ('pick', 'xcomp'), (' ', 'pobj'), ('limited', 'amod'), ('number', 'dobj'), ('responses', 'pobj'), ('–', 'punct'), ('instance', 'pobj'), (',', 'punct'), ('confirmation', 'compound'), ('dialog', 'nsubj'), (' ', 'nsubj'), ('recognize', 'advcl'), ('yes', 'intj'), (',', 'punct'), ('yup', 'intj'), (',', 'punct'), ('betcha', 'advmod'), (',', 'punct'), ('sure', 'intj'), (',', 'punct'), ('heck', 'intj')]

>> Bigrams: 
[[works, best], [best, trying], [trying, pick], [pick,  ], [ , limited], [limited, number], [number, responses], [responses, –], [–, instance], [instance, ,], [,, confirmation], [confirmation, dialog], [dialog,  ], [ , recognize], [recognize, yes], [yes, ,], [,, yup], [yup, ,], [,, betcha], [betcha, ,], [,, sure], [sure, ,], [,, heck]]

>> Trigrams: 
[[works, best, trying], [best, trying, pick], [trying, pick,  ], [pick,  , limited], [ , limited, number], [limited, number, responses], [number, responses, –], [responses, –, instance], [–, instance, ,], [instance, ,, confirmation], [,, confirmation, dialog], [confirmation, dialog,  ], [dialog,  , recognize], [ , recognize, yes], [recognize, yes, ,], [yes, ,, yup], [,, yup, ,], [yup, ,, betcha], [,, betcha, ,], [betcha, ,, sure], [,, sure, ,], [sure, ,, heck]]

>> Noun Phrases are: 
[a limited number, responses, instance, a confirmation dialog, you]

>> Named Entities are: 
[]


============================ Sentence 70 =============================

yeah, as well as many other  variations of a positive response. 


>> Tokens are: 
[yeah, ,,  , variations, positive, response, .] 

>> PoS Tags are: 
[('yeah', 'INTJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('variations', 'NOUN'), ('positive', 'ADJ'), ('response', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('yeah', 'intj'), (',', 'punct'), (' ', 'compound'), ('variations', 'ROOT'), ('positive', 'amod'), ('response', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[yeah, ,], [,,  ], [ , variations], [variations, positive], [positive, response], [response, .]]

>> Trigrams: 
[[yeah, ,,  ], [,,  , variations], [ , variations, positive], [variations, positive, response], [positive, response, .]]

>> Noun Phrases are: 
[yeah, as well as many other  variations, a positive response]

>> Named Entities are: 
[]


============================ Sentence 71 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 72 =============================

This straightforward, brute-force technique can provide a semblance of  natural language understanding. 


>> Tokens are: 
[straightforward, ,, brute, -, force, technique, provide, semblance,  , natural, language, understanding, .] 

>> PoS Tags are: 
[('straightforward', 'ADJ'), (',', 'PUNCT'), ('brute', 'NOUN'), ('-', 'PUNCT'), ('force', 'NOUN'), ('technique', 'NOUN'), ('provide', 'VERB'), ('semblance', 'NOUN'), (' ', 'SPACE'), ('natural', 'ADJ'), ('language', 'NOUN'), ('understanding', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('straightforward', 'amod'), (',', 'punct'), ('brute', 'amod'), ('-', 'punct'), ('force', 'compound'), ('technique', 'nsubj'), ('provide', 'ROOT'), ('semblance', 'dobj'), (' ', 'nmod'), ('natural', 'amod'), ('language', 'compound'), ('understanding', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[straightforward, ,], [,, brute], [brute, -], [-, force], [force, technique], [technique, provide], [provide, semblance], [semblance,  ], [ , natural], [natural, language], [language, understanding], [understanding, .]]

>> Trigrams: 
[[straightforward, ,, brute], [,, brute, -], [brute, -, force], [-, force, technique], [force, technique, provide], [technique, provide, semblance], [provide, semblance,  ], [semblance,  , natural], [ , natural, language], [natural, language, understanding], [language, understanding, .]]

>> Noun Phrases are: 
[This straightforward, brute-force technique, a semblance,  natural language understanding]

>> Named Entities are: 
[]


============================ Sentence 73 =============================

However, the approach has significant  drawbacks as the list of possible responses gets longer and longer. 


>> Tokens are: 
[,, approach, significant,  , drawbacks, list, possible, responses, gets, longer, longer, .] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('approach', 'NOUN'), ('significant', 'ADJ'), (' ', 'SPACE'), ('drawbacks', 'NOUN'), ('list', 'NOUN'), ('possible', 'ADJ'), ('responses', 'NOUN'), ('gets', 'VERB'), ('longer', 'ADV'), ('longer', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('approach', 'nsubj'), ('significant', 'amod'), (' ', 'compound'), ('drawbacks', 'dobj'), ('list', 'pobj'), ('possible', 'amod'), ('responses', 'pobj'), ('gets', 'advcl'), ('longer', 'advmod'), ('longer', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[,, approach], [approach, significant], [significant,  ], [ , drawbacks], [drawbacks, list], [list, possible], [possible, responses], [responses, gets], [gets, longer], [longer, longer], [longer, .]]

>> Trigrams: 
[[,, approach, significant], [approach, significant,  ], [significant,  , drawbacks], [ , drawbacks, list], [drawbacks, list, possible], [list, possible, responses], [possible, responses, gets], [responses, gets, longer], [gets, longer, longer], [longer, longer, .]]

>> Noun Phrases are: 
[the approach, significant  drawbacks, the list, possible responses]

>> Named Entities are: 
[]


============================ Sentence 74 =============================

It  becomes harder to tune and maintain a system while keeping track of all  these options. 


>> Tokens are: 
[ , harder, tune, maintain, system, keeping, track,  , options, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('harder', 'ADJ'), ('tune', 'VERB'), ('maintain', 'VERB'), ('system', 'NOUN'), ('keeping', 'VERB'), ('track', 'NOUN'), (' ', 'SPACE'), ('options', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'appos'), ('harder', 'acomp'), ('tune', 'xcomp'), ('maintain', 'conj'), ('system', 'dobj'), ('keeping', 'advcl'), ('track', 'dobj'), (' ', 'nmod'), ('options', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , harder], [harder, tune], [tune, maintain], [maintain, system], [system, keeping], [keeping, track], [track,  ], [ , options], [options, .]]

>> Trigrams: 
[[ , harder, tune], [harder, tune, maintain], [tune, maintain, system], [maintain, system, keeping], [system, keeping, track], [keeping, track,  ], [track,  , options], [ , options, .]]

>> Noun Phrases are: 
[It, a system, track, all  these options]

>> Named Entities are: 
[]


============================ Sentence 75 =============================

Even worse, it is possible for the overall performance of the  system to decrease as the recognition engine struggles to compare the  caller’s response to such a potentially confusing list of phrases. 


>> Tokens are: 
[worse, ,, possible, overall, performance,  , system, decrease, recognition, engine, struggles, compare,  , caller, response, potentially, confusing, list, phrases, .] 

>> PoS Tags are: 
[('worse', 'ADV'), (',', 'PUNCT'), ('possible', 'ADJ'), ('overall', 'ADJ'), ('performance', 'NOUN'), (' ', 'SPACE'), ('system', 'NOUN'), ('decrease', 'VERB'), ('recognition', 'NOUN'), ('engine', 'NOUN'), ('struggles', 'VERB'), ('compare', 'VERB'), (' ', 'SPACE'), ('caller', 'NOUN'), ('response', 'NOUN'), ('potentially', 'ADV'), ('confusing', 'ADJ'), ('list', 'NOUN'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('worse', 'advmod'), (',', 'punct'), ('possible', 'acomp'), ('overall', 'amod'), ('performance', 'nsubj'), (' ', 'compound'), ('system', 'pobj'), ('decrease', 'advcl'), ('recognition', 'compound'), ('engine', 'nsubj'), ('struggles', 'advcl'), ('compare', 'xcomp'), (' ', 'compound'), ('caller', 'nmod'), ('response', 'dobj'), ('potentially', 'advmod'), ('confusing', 'amod'), ('list', 'pobj'), ('phrases', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[worse, ,], [,, possible], [possible, overall], [overall, performance], [performance,  ], [ , system], [system, decrease], [decrease, recognition], [recognition, engine], [engine, struggles], [struggles, compare], [compare,  ], [ , caller], [caller, response], [response, potentially], [potentially, confusing], [confusing, list], [list, phrases], [phrases, .]]

>> Trigrams: 
[[worse, ,, possible], [,, possible, overall], [possible, overall, performance], [overall, performance,  ], [performance,  , system], [ , system, decrease], [system, decrease, recognition], [decrease, recognition, engine], [recognition, engine, struggles], [engine, struggles, compare], [struggles, compare,  ], [compare,  , caller], [ , caller, response], [caller, response, potentially], [response, potentially, confusing], [potentially, confusing, list], [confusing, list, phrases], [list, phrases, .]]

>> Noun Phrases are: 
[it, the overall performance, the  system, the recognition engine, the  caller’s response, such a potentially confusing list, phrases]

>> Named Entities are: 
[]


============================ Sentence 76 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 77 =============================

The reality is that it is impossible to foresee and capture every conceivable  response variant even in a very large grammar. 


>> Tokens are: 
[reality, impossible, foresee, capture, conceivable,  , response, variant, large, grammar, .] 

>> PoS Tags are: 
[('reality', 'NOUN'), ('impossible', 'ADJ'), ('foresee', 'VERB'), ('capture', 'VERB'), ('conceivable', 'ADJ'), (' ', 'SPACE'), ('response', 'NOUN'), ('variant', 'ADJ'), ('large', 'ADJ'), ('grammar', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('reality', 'nsubj'), ('impossible', 'acomp'), ('foresee', 'xcomp'), ('capture', 'conj'), ('conceivable', 'amod'), (' ', 'compound'), ('response', 'dobj'), ('variant', 'amod'), ('large', 'amod'), ('grammar', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[reality, impossible], [impossible, foresee], [foresee, capture], [capture, conceivable], [conceivable,  ], [ , response], [response, variant], [variant, large], [large, grammar], [grammar, .]]

>> Trigrams: 
[[reality, impossible, foresee], [impossible, foresee, capture], [foresee, capture, conceivable], [capture, conceivable,  ], [conceivable,  , response], [ , response, variant], [response, variant, large], [variant, large, grammar], [large, grammar, .]]

>> Noun Phrases are: 
[The reality, it, every conceivable  response, a very large grammar]

>> Named Entities are: 
[]


============================ Sentence 78 =============================

To learn to speak customer-  ese, the self-service system needs more natural language capabilities. 


>> Tokens are: 
[learn, speak, customer-,  , ese, ,, self, -, service, system, needs, natural, language, capabilities, .] 

>> PoS Tags are: 
[('learn', 'VERB'), ('speak', 'VERB'), ('customer-', 'X'), (' ', 'SPACE'), ('ese', 'ADJ'), (',', 'PUNCT'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('needs', 'VERB'), ('natural', 'ADJ'), ('language', 'NOUN'), ('capabilities', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('learn', 'advcl'), ('speak', 'xcomp'), ('customer-', 'punct'), (' ', 'dobj'), ('ese', 'amod'), (',', 'punct'), ('self', 'compound'), ('-', 'punct'), ('service', 'compound'), ('system', 'nsubj'), ('needs', 'ROOT'), ('natural', 'amod'), ('language', 'compound'), ('capabilities', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[learn, speak], [speak, customer-], [customer-,  ], [ , ese], [ese, ,], [,, self], [self, -], [-, service], [service, system], [system, needs], [needs, natural], [natural, language], [language, capabilities], [capabilities, .]]

>> Trigrams: 
[[learn, speak, customer-], [speak, customer-,  ], [customer-,  , ese], [ , ese, ,], [ese, ,, self], [,, self, -], [self, -, service], [-, service, system], [service, system, needs], [system, needs, natural], [needs, natural, language], [natural, language, capabilities], [language, capabilities, .]]

>> Noun Phrases are: 
[the self-service system, more natural language capabilities]

>> Named Entities are: 
[]


============================ Sentence 79 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 80 =============================

Learn to recognize variations of phrases Since every caller expresses themselves in a unique manner, often adding  extraneous information to their response, focusing on recognizing certain  keywords is another approach for avoiding out-of-grammar errors and  achieving higher automation rates. 


>> Tokens are: 
[Learn, recognize, variations, phrases, caller, expresses, unique, manner, ,, adding,  , extraneous, information, response, ,, focusing, recognizing, certain,  , keywords, approach, avoiding, -, -, grammar, errors,  , achieving, higher, automation, rates, .] 

>> PoS Tags are: 
[('Learn', 'VERB'), ('recognize', 'VERB'), ('variations', 'NOUN'), ('phrases', 'NOUN'), ('caller', 'NOUN'), ('expresses', 'VERB'), ('unique', 'ADJ'), ('manner', 'NOUN'), (',', 'PUNCT'), ('adding', 'VERB'), (' ', 'SPACE'), ('extraneous', 'ADJ'), ('information', 'NOUN'), ('response', 'NOUN'), (',', 'PUNCT'), ('focusing', 'VERB'), ('recognizing', 'VERB'), ('certain', 'ADJ'), (' ', 'SPACE'), ('keywords', 'NOUN'), ('approach', 'NOUN'), ('avoiding', 'VERB'), ('-', 'PUNCT'), ('-', 'PUNCT'), ('grammar', 'NOUN'), ('errors', 'NOUN'), (' ', 'SPACE'), ('achieving', 'VERB'), ('higher', 'ADJ'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Learn', 'advcl'), ('recognize', 'xcomp'), ('variations', 'dobj'), ('phrases', 'pobj'), ('caller', 'nsubj'), ('expresses', 'advcl'), ('unique', 'amod'), ('manner', 'pobj'), (',', 'punct'), ('adding', 'advcl'), (' ', 'dative'), ('extraneous', 'amod'), ('information', 'dobj'), ('response', 'pobj'), (',', 'punct'), ('focusing', 'conj'), ('recognizing', 'pcomp'), ('certain', 'amod'), (' ', 'compound'), ('keywords', 'dobj'), ('approach', 'attr'), ('avoiding', 'pcomp'), ('-', 'punct'), ('-', 'punct'), ('grammar', 'pobj'), ('errors', 'dobj'), (' ', 'conj'), ('achieving', 'acl'), ('higher', 'amod'), ('automation', 'compound'), ('rates', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Learn, recognize], [recognize, variations], [variations, phrases], [phrases, caller], [caller, expresses], [expresses, unique], [unique, manner], [manner, ,], [,, adding], [adding,  ], [ , extraneous], [extraneous, information], [information, response], [response, ,], [,, focusing], [focusing, recognizing], [recognizing, certain], [certain,  ], [ , keywords], [keywords, approach], [approach, avoiding], [avoiding, -], [-, -], [-, grammar], [grammar, errors], [errors,  ], [ , achieving], [achieving, higher], [higher, automation], [automation, rates], [rates, .]]

>> Trigrams: 
[[Learn, recognize, variations], [recognize, variations, phrases], [variations, phrases, caller], [phrases, caller, expresses], [caller, expresses, unique], [expresses, unique, manner], [unique, manner, ,], [manner, ,, adding], [,, adding,  ], [adding,  , extraneous], [ , extraneous, information], [extraneous, information, response], [information, response, ,], [response, ,, focusing], [,, focusing, recognizing], [focusing, recognizing, certain], [recognizing, certain,  ], [certain,  , keywords], [ , keywords, approach], [keywords, approach, avoiding], [approach, avoiding, -], [avoiding, -, -], [-, -, grammar], [-, grammar, errors], [grammar, errors,  ], [errors,  , achieving], [ , achieving, higher], [achieving, higher, automation], [higher, automation, rates], [automation, rates, .]]

>> Noun Phrases are: 
[variations, phrases, every caller, themselves, a unique manner, extraneous information, their response, certain  keywords, another approach, grammar, higher automation rates]

>> Named Entities are: 
[('Learn', 'ORG')]


============================ Sentence 81 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 82 =============================

Keyword spotting, sometimes referred to as robust parsing, is used when a  caller says what the system is expecting but surrounds their response with  filler phrases. 


>> Tokens are: 
[Keyword, spotting, ,, referred, robust, parsing, ,,  , caller, says, system, expecting, surrounds, response,  , filler, phrases, .] 

>> PoS Tags are: 
[('Keyword', 'PROPN'), ('spotting', 'VERB'), (',', 'PUNCT'), ('referred', 'VERB'), ('robust', 'ADJ'), ('parsing', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('caller', 'NOUN'), ('says', 'VERB'), ('system', 'NOUN'), ('expecting', 'VERB'), ('surrounds', 'VERB'), ('response', 'NOUN'), (' ', 'SPACE'), ('filler', 'NOUN'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Keyword', 'compound'), ('spotting', 'nsubj'), (',', 'punct'), ('referred', 'ROOT'), ('robust', 'amod'), ('parsing', 'pobj'), (',', 'punct'), (' ', 'compound'), ('caller', 'nsubj'), ('says', 'advcl'), ('system', 'nsubj'), ('expecting', 'ccomp'), ('surrounds', 'conj'), ('response', 'dobj'), (' ', 'compound'), ('filler', 'compound'), ('phrases', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Keyword, spotting], [spotting, ,], [,, referred], [referred, robust], [robust, parsing], [parsing, ,], [,,  ], [ , caller], [caller, says], [says, system], [system, expecting], [expecting, surrounds], [surrounds, response], [response,  ], [ , filler], [filler, phrases], [phrases, .]]

>> Trigrams: 
[[Keyword, spotting, ,], [spotting, ,, referred], [,, referred, robust], [referred, robust, parsing], [robust, parsing, ,], [parsing, ,,  ], [,,  , caller], [ , caller, says], [caller, says, system], [says, system, expecting], [system, expecting, surrounds], [expecting, surrounds, response], [surrounds, response,  ], [response,  , filler], [ , filler, phrases], [filler, phrases, .]]

>> Noun Phrases are: 
[robust parsing, a  caller, what, the system, their response,  filler phrases]

>> Named Entities are: 
[('Keyword', 'ORG')]


============================ Sentence 83 =============================

Instead of simply saying “Yes” they may actually say “Um, I  think so, yes”. 


>> Tokens are: 
[Instead, simply, saying, “, Yes, ”, actually, “, Um, ,,  , think, ,, yes, ”, .] 

>> PoS Tags are: 
[('Instead', 'ADV'), ('simply', 'ADV'), ('saying', 'VERB'), ('“', 'PUNCT'), ('Yes', 'INTJ'), ('”', 'PUNCT'), ('actually', 'ADV'), ('“', 'PUNCT'), ('Um', 'INTJ'), (',', 'PUNCT'), (' ', 'SPACE'), ('think', 'VERB'), (',', 'PUNCT'), ('yes', 'INTJ'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Instead', 'advmod'), ('simply', 'advmod'), ('saying', 'pcomp'), ('“', 'punct'), ('Yes', 'intj'), ('”', 'punct'), ('actually', 'advmod'), ('“', 'punct'), ('Um', 'intj'), (',', 'punct'), (' ', 'nsubj'), ('think', 'ccomp'), (',', 'punct'), ('yes', 'intj'), ('”', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Instead, simply], [simply, saying], [saying, “], [“, Yes], [Yes, ”], [”, actually], [actually, “], [“, Um], [Um, ,], [,,  ], [ , think], [think, ,], [,, yes], [yes, ”], [”, .]]

>> Trigrams: 
[[Instead, simply, saying], [simply, saying, “], [saying, “, Yes], [“, Yes, ”], [Yes, ”, actually], [”, actually, “], [actually, “, Um], [“, Um, ,], [Um, ,,  ], [,,  , think], [ , think, ,], [think, ,, yes], [,, yes, ”], [yes, ”, .]]

>> Noun Phrases are: 
[they]

>> Named Entities are: 
[]


============================ Sentence 84 =============================

The keyword spotting approach is most effective with short  menus and yes/no dialogs which typically account for more than 70% of  speech-enabled application interactions. 


>> Tokens are: 
[keyword, spotting, approach, effective, short,  , menus, yes, /, dialogs, typically, account, 70, %,  , speech, -, enabled, application, interactions, .] 

>> PoS Tags are: 
[('keyword', 'NOUN'), ('spotting', 'NOUN'), ('approach', 'NOUN'), ('effective', 'ADJ'), ('short', 'ADJ'), (' ', 'SPACE'), ('menus', 'NOUN'), ('yes', 'INTJ'), ('/', 'SYM'), ('dialogs', 'NOUN'), ('typically', 'ADV'), ('account', 'VERB'), ('70', 'NUM'), ('%', 'NOUN'), (' ', 'SPACE'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('application', 'NOUN'), ('interactions', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('keyword', 'compound'), ('spotting', 'compound'), ('approach', 'nsubj'), ('effective', 'acomp'), ('short', 'amod'), (' ', 'compound'), ('menus', 'pobj'), ('yes', 'intj'), ('/', 'punct'), ('dialogs', 'conj'), ('typically', 'advmod'), ('account', 'relcl'), ('70', 'nummod'), ('%', 'pobj'), (' ', 'pobj'), ('speech', 'npadvmod'), ('-', 'punct'), ('enabled', 'amod'), ('application', 'compound'), ('interactions', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[keyword, spotting], [spotting, approach], [approach, effective], [effective, short], [short,  ], [ , menus], [menus, yes], [yes, /], [/, dialogs], [dialogs, typically], [typically, account], [account, 70], [70, %], [%,  ], [ , speech], [speech, -], [-, enabled], [enabled, application], [application, interactions], [interactions, .]]

>> Trigrams: 
[[keyword, spotting, approach], [spotting, approach, effective], [approach, effective, short], [effective, short,  ], [short,  , menus], [ , menus, yes], [menus, yes, /], [yes, /, dialogs], [/, dialogs, typically], [dialogs, typically, account], [typically, account, 70], [account, 70, %], [70, %,  ], [%,  , speech], [ , speech, -], [speech, -, enabled], [-, enabled, application], [enabled, application, interactions], [application, interactions, .]]

>> Noun Phrases are: 
[The keyword spotting approach, short  menus, yes/no dialogs, more than 70%, speech-enabled application interactions]

>> Named Entities are: 
[('more than 70%', 'PERCENT')]


============================ Sentence 85 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 86 =============================

This statistical technique is based on comparing vocabularies of filler phrases  created from transcriptions of previous calls or from classes of common  phrases refined over time. 


>> Tokens are: 
[statistical, technique, based, comparing, vocabularies, filler, phrases,  , created, transcriptions, previous, calls, classes, common,  , phrases, refined, time, .] 

>> PoS Tags are: 
[('statistical', 'ADJ'), ('technique', 'NOUN'), ('based', 'VERB'), ('comparing', 'VERB'), ('vocabularies', 'NOUN'), ('filler', 'NOUN'), ('phrases', 'NOUN'), (' ', 'SPACE'), ('created', 'VERB'), ('transcriptions', 'NOUN'), ('previous', 'ADJ'), ('calls', 'NOUN'), ('classes', 'NOUN'), ('common', 'ADJ'), (' ', 'SPACE'), ('phrases', 'NOUN'), ('refined', 'VERB'), ('time', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('statistical', 'amod'), ('technique', 'nsubjpass'), ('based', 'ROOT'), ('comparing', 'pcomp'), ('vocabularies', 'dobj'), ('filler', 'compound'), ('phrases', 'pobj'), (' ', 'dobj'), ('created', 'acl'), ('transcriptions', 'pobj'), ('previous', 'amod'), ('calls', 'pobj'), ('classes', 'pobj'), ('common', 'amod'), (' ', 'compound'), ('phrases', 'pobj'), ('refined', 'acl'), ('time', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[statistical, technique], [technique, based], [based, comparing], [comparing, vocabularies], [vocabularies, filler], [filler, phrases], [phrases,  ], [ , created], [created, transcriptions], [transcriptions, previous], [previous, calls], [calls, classes], [classes, common], [common,  ], [ , phrases], [phrases, refined], [refined, time], [time, .]]

>> Trigrams: 
[[statistical, technique, based], [technique, based, comparing], [based, comparing, vocabularies], [comparing, vocabularies, filler], [vocabularies, filler, phrases], [filler, phrases,  ], [phrases,  , created], [ , created, transcriptions], [created, transcriptions, previous], [transcriptions, previous, calls], [previous, calls, classes], [calls, classes, common], [classes, common,  ], [common,  , phrases], [ , phrases, refined], [phrases, refined, time], [refined, time, .]]

>> Noun Phrases are: 
[This statistical technique, vocabularies, filler phrases, transcriptions, previous calls, classes, common  phrases, time]

>> Named Entities are: 
[]


============================ Sentence 87 =============================

Applying these vocabularies can provide an  impressive 30% or more increase in recognition accuracy. 


>> Tokens are: 
[Applying, vocabularies, provide,  , impressive, 30, %, increase, recognition, accuracy, .] 

>> PoS Tags are: 
[('Applying', 'VERB'), ('vocabularies', 'NOUN'), ('provide', 'VERB'), (' ', 'SPACE'), ('impressive', 'ADJ'), ('30', 'NUM'), ('%', 'NOUN'), ('increase', 'NOUN'), ('recognition', 'NOUN'), ('accuracy', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Applying', 'csubj'), ('vocabularies', 'dobj'), ('provide', 'ROOT'), (' ', 'nmod'), ('impressive', 'amod'), ('30', 'nummod'), ('%', 'dobj'), ('increase', 'dobj'), ('recognition', 'compound'), ('accuracy', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Applying, vocabularies], [vocabularies, provide], [provide,  ], [ , impressive], [impressive, 30], [30, %], [%, increase], [increase, recognition], [recognition, accuracy], [accuracy, .]]

>> Trigrams: 
[[Applying, vocabularies, provide], [vocabularies, provide,  ], [provide,  , impressive], [ , impressive, 30], [impressive, 30, %], [30, %, increase], [%, increase, recognition], [increase, recognition, accuracy], [recognition, accuracy, .]]

>> Noun Phrases are: 
[these vocabularies, an  impressive 30%, increase, recognition accuracy]

>> Named Entities are: 
[('30%', 'PERCENT')]


============================ Sentence 88 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 89 =============================

As callers have more flexibility in how they can exactly respond, the caller’s  perceived accuracy is typically very high when using keyword spotting. 


>> Tokens are: 
[callers, flexibility, exactly, respond, ,, caller,  , perceived, accuracy, typically, high, keyword, spotting, .] 

>> PoS Tags are: 
[('callers', 'NOUN'), ('flexibility', 'NOUN'), ('exactly', 'ADV'), ('respond', 'VERB'), (',', 'PUNCT'), ('caller', 'NOUN'), (' ', 'SPACE'), ('perceived', 'VERB'), ('accuracy', 'NOUN'), ('typically', 'ADV'), ('high', 'ADJ'), ('keyword', 'NOUN'), ('spotting', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('callers', 'nsubj'), ('flexibility', 'dobj'), ('exactly', 'advmod'), ('respond', 'pcomp'), (',', 'punct'), ('caller', 'nmod'), (' ', 'appos'), ('perceived', 'amod'), ('accuracy', 'nsubj'), ('typically', 'advmod'), ('high', 'acomp'), ('keyword', 'compound'), ('spotting', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[callers, flexibility], [flexibility, exactly], [exactly, respond], [respond, ,], [,, caller], [caller,  ], [ , perceived], [perceived, accuracy], [accuracy, typically], [typically, high], [high, keyword], [keyword, spotting], [spotting, .]]

>> Trigrams: 
[[callers, flexibility, exactly], [flexibility, exactly, respond], [exactly, respond, ,], [respond, ,, caller], [,, caller,  ], [caller,  , perceived], [ , perceived, accuracy], [perceived, accuracy, typically], [accuracy, typically, high], [typically, high, keyword], [high, keyword, spotting], [keyword, spotting, .]]

>> Noun Phrases are: 
[callers, more flexibility, they, the caller’s  perceived accuracy]

>> Named Entities are: 
[]


============================ Sentence 90 =============================

As  with any increase in accuracy, callers also appreciate interactions that avoid  retry prompts and repeated confirmations. 


>> Tokens are: 
[ , increase, accuracy, ,, callers, appreciate, interactions, avoid,  , retry, prompts, repeated, confirmations, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('increase', 'NOUN'), ('accuracy', 'NOUN'), (',', 'PUNCT'), ('callers', 'NOUN'), ('appreciate', 'VERB'), ('interactions', 'NOUN'), ('avoid', 'VERB'), (' ', 'SPACE'), ('retry', 'NOUN'), ('prompts', 'NOUN'), ('repeated', 'VERB'), ('confirmations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'pobj'), ('increase', 'pobj'), ('accuracy', 'pobj'), (',', 'punct'), ('callers', 'nsubj'), ('appreciate', 'ROOT'), ('interactions', 'dobj'), ('avoid', 'relcl'), (' ', 'prep'), ('retry', 'compound'), ('prompts', 'dobj'), ('repeated', 'amod'), ('confirmations', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ , increase], [increase, accuracy], [accuracy, ,], [,, callers], [callers, appreciate], [appreciate, interactions], [interactions, avoid], [avoid,  ], [ , retry], [retry, prompts], [prompts, repeated], [repeated, confirmations], [confirmations, .]]

>> Trigrams: 
[[ , increase, accuracy], [increase, accuracy, ,], [accuracy, ,, callers], [,, callers, appreciate], [callers, appreciate, interactions], [appreciate, interactions, avoid], [interactions, avoid,  ], [avoid,  , retry], [ , retry, prompts], [retry, prompts, repeated], [prompts, repeated, confirmations], [repeated, confirmations, .]]

>> Noun Phrases are: 
[any increase, accuracy, callers, interactions, retry prompts, repeated confirmations]

>> Named Entities are: 
[]


============================ Sentence 91 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 92 =============================

Although the self-service system has already taken a big step towards  learning to speak customer-ese, the caller’s responses are still limited to  words that have been chosen for them rather than allowing them to use their  own words. 


>> Tokens are: 
[self, -, service, system, taken, big, step,  , learning, speak, customer, -, ese, ,, caller, responses, limited,  , words, chosen, allowing, use,  , words, .] 

>> PoS Tags are: 
[('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('taken', 'VERB'), ('big', 'ADJ'), ('step', 'NOUN'), (' ', 'SPACE'), ('learning', 'VERB'), ('speak', 'VERB'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'PROPN'), (',', 'PUNCT'), ('caller', 'NOUN'), ('responses', 'NOUN'), ('limited', 'ADJ'), (' ', 'SPACE'), ('words', 'NOUN'), ('chosen', 'VERB'), ('allowing', 'VERB'), ('use', 'VERB'), (' ', 'SPACE'), ('words', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('self', 'compound'), ('-', 'punct'), ('service', 'compound'), ('system', 'nsubj'), ('taken', 'advcl'), ('big', 'amod'), ('step', 'dobj'), (' ', 'pobj'), ('learning', 'acl'), ('speak', 'xcomp'), ('customer', 'compound'), ('-', 'punct'), ('ese', 'dobj'), (',', 'punct'), ('caller', 'poss'), ('responses', 'nsubj'), ('limited', 'acomp'), (' ', 'nummod'), ('words', 'pobj'), ('chosen', 'relcl'), ('allowing', 'acl'), ('use', 'ccomp'), (' ', 'nmod'), ('words', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[self, -], [-, service], [service, system], [system, taken], [taken, big], [big, step], [step,  ], [ , learning], [learning, speak], [speak, customer], [customer, -], [-, ese], [ese, ,], [,, caller], [caller, responses], [responses, limited], [limited,  ], [ , words], [words, chosen], [chosen, allowing], [allowing, use], [use,  ], [ , words], [words, .]]

>> Trigrams: 
[[self, -, service], [-, service, system], [service, system, taken], [system, taken, big], [taken, big, step], [big, step,  ], [step,  , learning], [ , learning, speak], [learning, speak, customer], [speak, customer, -], [customer, -, ese], [-, ese, ,], [ese, ,, caller], [,, caller, responses], [caller, responses, limited], [responses, limited,  ], [limited,  , words], [ , words, chosen], [words, chosen, allowing], [chosen, allowing, use], [allowing, use,  ], [use,  , words], [ , words, .]]

>> Noun Phrases are: 
[the self-service system, a big step, customer-ese, the caller’s responses,  words, them, them, their  own words]

>> Named Entities are: 
[]


============================ Sentence 93 =============================

There are still more natural language capabilities to explore. 


>> Tokens are: 
[natural, language, capabilities, explore, .] 

>> PoS Tags are: 
[('natural', 'ADJ'), ('language', 'NOUN'), ('capabilities', 'NOUN'), ('explore', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('natural', 'amod'), ('language', 'compound'), ('capabilities', 'attr'), ('explore', 'relcl'), ('.', 'punct')]

>> Bigrams: 
[[natural, language], [language, capabilities], [capabilities, explore], [explore, .]]

>> Trigrams: 
[[natural, language, capabilities], [language, capabilities, explore], [capabilities, explore, .]]

>> Noun Phrases are: 
[more natural language capabilities]

>> Named Entities are: 
[]


============================ Sentence 94 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 95 =============================

Become	fluent Rather than focusing only on matches within and around a grammar, another  approach for determining meaning is to ask callers to describe a problem in  their own words. 


>> Tokens are: 
[	, fluent, focusing, matches, grammar, ,,  , approach, determining, meaning, ask, callers, describe, problem,  , words, .] 

>> PoS Tags are: 
[('\t', 'SPACE'), ('fluent', 'NOUN'), ('focusing', 'VERB'), ('matches', 'NOUN'), ('grammar', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('approach', 'NOUN'), ('determining', 'VERB'), ('meaning', 'NOUN'), ('ask', 'VERB'), ('callers', 'NOUN'), ('describe', 'VERB'), ('problem', 'NOUN'), (' ', 'SPACE'), ('words', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('\t', 'attr'), ('fluent', 'acomp'), ('focusing', 'pcomp'), ('matches', 'pobj'), ('grammar', 'pobj'), (',', 'punct'), (' ', 'compound'), ('approach', 'nsubj'), ('determining', 'pcomp'), ('meaning', 'dobj'), ('ask', 'xcomp'), ('callers', 'dobj'), ('describe', 'xcomp'), ('problem', 'dobj'), (' ', 'pobj'), ('words', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[	, fluent], [fluent, focusing], [focusing, matches], [matches, grammar], [grammar, ,], [,,  ], [ , approach], [approach, determining], [determining, meaning], [meaning, ask], [ask, callers], [callers, describe], [describe, problem], [problem,  ], [ , words], [words, .]]

>> Trigrams: 
[[	, fluent, focusing], [fluent, focusing, matches], [focusing, matches, grammar], [matches, grammar, ,], [grammar, ,,  ], [,,  , approach], [ , approach, determining], [approach, determining, meaning], [determining, meaning, ask], [meaning, ask, callers], [ask, callers, describe], [callers, describe, problem], [describe, problem,  ], [problem,  , words], [ , words, .]]

>> Noun Phrases are: 
[matches, a grammar, another  approach, meaning, callers, a problem, their own words]

>> Named Entities are: 
[]


============================ Sentence 96 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 97 =============================

This approach often begins by offering callers an open-ended prompt  such as “how may I help you?” 


>> Tokens are: 
[approach, begins, offering, callers, open, -, ended, prompt,  , “, help, ?, ”] 

>> PoS Tags are: 
[('approach', 'NOUN'), ('begins', 'VERB'), ('offering', 'VERB'), ('callers', 'NOUN'), ('open', 'ADV'), ('-', 'PUNCT'), ('ended', 'ADJ'), ('prompt', 'NOUN'), (' ', 'SPACE'), ('“', 'PUNCT'), ('help', 'VERB'), ('?', 'PUNCT'), ('”', 'PUNCT')] 

>> Dependency Tags are: 
[('approach', 'nsubj'), ('begins', 'ROOT'), ('offering', 'pcomp'), ('callers', 'dative'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), ('prompt', 'dobj'), (' ', 'nummod'), ('“', 'punct'), ('help', 'ccomp'), ('?', 'punct'), ('”', 'punct')]

>> Bigrams: 
[[approach, begins], [begins, offering], [offering, callers], [callers, open], [open, -], [-, ended], [ended, prompt], [prompt,  ], [ , “], [“, help], [help, ?], [?, ”]]

>> Trigrams: 
[[approach, begins, offering], [begins, offering, callers], [offering, callers, open], [callers, open, -], [open, -, ended], [-, ended, prompt], [ended, prompt,  ], [prompt,  , “], [ , “, help], [“, help, ?], [help, ?, ”]]

>> Noun Phrases are: 
[This approach, callers, an open-ended prompt, I, you]

>> Named Entities are: 
[]


============================ Sentence 98 =============================

Callers respond by describing in their own  words why they are calling, perhaps by saying “there’s a strange charge on  my credit card statement”. 


>> Tokens are: 
[Callers, respond, describing,  , words, calling, ,, saying, “, strange, charge,  , credit, card, statement, ”, .] 

>> PoS Tags are: 
[('Callers', 'NOUN'), ('respond', 'VERB'), ('describing', 'VERB'), (' ', 'SPACE'), ('words', 'NOUN'), ('calling', 'VERB'), (',', 'PUNCT'), ('saying', 'VERB'), ('“', 'PUNCT'), ('strange', 'ADJ'), ('charge', 'NOUN'), (' ', 'SPACE'), ('credit', 'NOUN'), ('card', 'NOUN'), ('statement', 'NOUN'), ('”', 'PUNCT'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Callers', 'nsubj'), ('respond', 'ROOT'), ('describing', 'pcomp'), (' ', 'compound'), ('words', 'pobj'), ('calling', 'ccomp'), (',', 'punct'), ('saying', 'pcomp'), ('“', 'punct'), ('strange', 'amod'), ('charge', 'attr'), (' ', 'pobj'), ('credit', 'compound'), ('card', 'compound'), ('statement', 'attr'), ('”', 'punct'), ('.', 'punct')]

>> Bigrams: 
[[Callers, respond], [respond, describing], [describing,  ], [ , words], [words, calling], [calling, ,], [,, saying], [saying, “], [“, strange], [strange, charge], [charge,  ], [ , credit], [credit, card], [card, statement], [statement, ”], [”, .]]

>> Trigrams: 
[[Callers, respond, describing], [respond, describing,  ], [describing,  , words], [ , words, calling], [words, calling, ,], [calling, ,, saying], [,, saying, “], [saying, “, strange], [“, strange, charge], [strange, charge,  ], [charge,  , credit], [ , credit, card], [credit, card, statement], [card, statement, ”], [statement, ”, .]]

>> Noun Phrases are: 
[Callers, their own  words, they, a strange charge, my credit card statement]

>> Named Entities are: 
[]


============================ Sentence 99 =============================

The system then uses sophisticated statistical  modeling to identify key phrases and look for a match in a list of example  phrases that have known meanings. 


>> Tokens are: 
[system, uses, sophisticated, statistical,  , modeling, identify, key, phrases, look, match, list, example,  , phrases, known, meanings, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('uses', 'VERB'), ('sophisticated', 'ADJ'), ('statistical', 'ADJ'), (' ', 'SPACE'), ('modeling', 'VERB'), ('identify', 'VERB'), ('key', 'ADJ'), ('phrases', 'NOUN'), ('look', 'VERB'), ('match', 'NOUN'), ('list', 'NOUN'), ('example', 'NOUN'), (' ', 'SPACE'), ('phrases', 'NOUN'), ('known', 'VERB'), ('meanings', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('uses', 'ROOT'), ('sophisticated', 'amod'), ('statistical', 'amod'), (' ', 'compound'), ('modeling', 'dobj'), ('identify', 'xcomp'), ('key', 'amod'), ('phrases', 'dobj'), ('look', 'conj'), ('match', 'pobj'), ('list', 'pobj'), ('example', 'pobj'), (' ', 'compound'), ('phrases', 'dobj'), ('known', 'relcl'), ('meanings', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[system, uses], [uses, sophisticated], [sophisticated, statistical], [statistical,  ], [ , modeling], [modeling, identify], [identify, key], [key, phrases], [phrases, look], [look, match], [match, list], [list, example], [example,  ], [ , phrases], [phrases, known], [known, meanings], [meanings, .]]

>> Trigrams: 
[[system, uses, sophisticated], [uses, sophisticated, statistical], [sophisticated, statistical,  ], [statistical,  , modeling], [ , modeling, identify], [modeling, identify, key], [identify, key, phrases], [key, phrases, look], [phrases, look, match], [look, match, list], [match, list, example], [list, example,  ], [example,  , phrases], [ , phrases, known], [phrases, known, meanings], [known, meanings, .]]

>> Noun Phrases are: 
[The system, key phrases, a match, a list, example,  phrases, meanings]

>> Named Entities are: 
[]


============================ Sentence 100 =============================

In this case, the likely meaning would be  associated with billing even though the word ‘billing’ was never spoken. 


>> Tokens are: 
[case, ,, likely, meaning,  , associated, billing, word, ‘, billing, ’, spoken, .] 

>> PoS Tags are: 
[('case', 'NOUN'), (',', 'PUNCT'), ('likely', 'ADJ'), ('meaning', 'NOUN'), (' ', 'SPACE'), ('associated', 'VERB'), ('billing', 'NOUN'), ('word', 'NOUN'), ('‘', 'PUNCT'), ('billing', 'NOUN'), ('’', 'PUNCT'), ('spoken', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('case', 'pobj'), (',', 'punct'), ('likely', 'amod'), ('meaning', 'nsubj'), (' ', 'attr'), ('associated', 'acl'), ('billing', 'pobj'), ('word', 'nsubjpass'), ('‘', 'punct'), ('billing', 'appos'), ('’', 'punct'), ('spoken', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[case, ,], [,, likely], [likely, meaning], [meaning,  ], [ , associated], [associated, billing], [billing, word], [word, ‘], [‘, billing], [billing, ’], [’, spoken], [spoken, .]]

>> Trigrams: 
[[case, ,, likely], [,, likely, meaning], [likely, meaning,  ], [meaning,  , associated], [ , associated, billing], [associated, billing, word], [billing, word, ‘], [word, ‘, billing], [‘, billing, ’], [billing, ’, spoken], [’, spoken, .]]

>> Noun Phrases are: 
[this case, the likely meaning, billing, the word, billing]

>> Named Entities are: 
[]


============================ Sentence 101 =============================

 SmartListener™ technology  increases automation by interpreting  the meaning of caller responses that  include filler phrases that do not  exactly match expected dialogs. 


>> Tokens are: 
[ , SmartListener, ™, technology,  , increases, automation, interpreting,  , meaning, caller, responses,  , include, filler, phrases,  , exactly, match, expected, dialogs, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('SmartListener', 'PROPN'), ('™', 'VERB'), ('technology', 'NOUN'), (' ', 'SPACE'), ('increases', 'VERB'), ('automation', 'NOUN'), ('interpreting', 'VERB'), (' ', 'SPACE'), ('meaning', 'NOUN'), ('caller', 'NOUN'), ('responses', 'NOUN'), (' ', 'SPACE'), ('include', 'VERB'), ('filler', 'NOUN'), ('phrases', 'NOUN'), (' ', 'SPACE'), ('exactly', 'ADV'), ('match', 'NOUN'), ('expected', 'VERB'), ('dialogs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('SmartListener', 'compound'), ('™', 'compound'), ('technology', 'nsubj'), (' ', 'nsubj'), ('increases', 'ROOT'), ('automation', 'dobj'), ('interpreting', 'pcomp'), (' ', 'dobj'), ('meaning', 'dobj'), ('caller', 'compound'), ('responses', 'pobj'), (' ', 'nsubj'), ('include', 'acl'), ('filler', 'compound'), ('phrases', 'dobj'), (' ', 'dep'), ('exactly', 'advmod'), ('match', 'dep'), ('expected', 'amod'), ('dialogs', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[ , SmartListener], [SmartListener, ™], [™, technology], [technology,  ], [ , increases], [increases, automation], [automation, interpreting], [interpreting,  ], [ , meaning], [meaning, caller], [caller, responses], [responses,  ], [ , include], [include, filler], [filler, phrases], [phrases,  ], [ , exactly], [exactly, match], [match, expected], [expected, dialogs], [dialogs, .]]

>> Trigrams: 
[[ , SmartListener, ™], [SmartListener, ™, technology], [™, technology,  ], [technology,  , increases], [ , increases, automation], [increases, automation, interpreting], [automation, interpreting,  ], [interpreting,  , meaning], [ , meaning, caller], [meaning, caller, responses], [caller, responses,  ], [responses,  , include], [ , include, filler], [include, filler, phrases], [filler, phrases,  ], [phrases,  , exactly], [ , exactly, match], [exactly, match, expected], [match, expected, dialogs], [expected, dialogs, .]]

>> Noun Phrases are: 
[ SmartListener™ technology, automation, the meaning, caller responses, filler phrases, expected dialogs]

>> Named Entities are: 
[('SmartListener', 'ORG')]


============================ Sentence 102 =============================

 White PaperCustomer Service Solutions Natural language understanding4    Although developing the detailed statistical models involves manual efforts to  define and assign the agreed upon meanings to each transcription, the result  is very high automation rates and high customer satisfaction. 


>> Tokens are: 
[ , White, PaperCustomer, Service, Solutions, Natural, language, understanding4,    , developing, detailed, statistical, models, involves, manual, efforts,  , define, assign, agreed, meanings, transcription, ,, result,  , high, automation, rates, high, customer, satisfaction, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding4', 'VERB'), ('   ', 'SPACE'), ('developing', 'VERB'), ('detailed', 'ADJ'), ('statistical', 'ADJ'), ('models', 'NOUN'), ('involves', 'VERB'), ('manual', 'ADJ'), ('efforts', 'NOUN'), (' ', 'SPACE'), ('define', 'VERB'), ('assign', 'VERB'), ('agreed', 'VERB'), ('meanings', 'NOUN'), ('transcription', 'NOUN'), (',', 'PUNCT'), ('result', 'NOUN'), (' ', 'SPACE'), ('high', 'ADJ'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('high', 'ADJ'), ('customer', 'NOUN'), ('satisfaction', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'nsubj'), ('understanding4', 'ccomp'), ('   ', 'dobj'), ('developing', 'advcl'), ('detailed', 'amod'), ('statistical', 'amod'), ('models', 'dobj'), ('involves', 'ccomp'), ('manual', 'amod'), ('efforts', 'dobj'), (' ', 'pobj'), ('define', 'acl'), ('assign', 'conj'), ('agreed', 'amod'), ('meanings', 'dobj'), ('transcription', 'pobj'), (',', 'punct'), ('result', 'nsubj'), (' ', 'nsubj'), ('high', 'amod'), ('automation', 'compound'), ('rates', 'attr'), ('high', 'amod'), ('customer', 'compound'), ('satisfaction', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[ , White], [White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding4], [understanding4,    ], [   , developing], [developing, detailed], [detailed, statistical], [statistical, models], [models, involves], [involves, manual], [manual, efforts], [efforts,  ], [ , define], [define, assign], [assign, agreed], [agreed, meanings], [meanings, transcription], [transcription, ,], [,, result], [result,  ], [ , high], [high, automation], [automation, rates], [rates, high], [high, customer], [customer, satisfaction], [satisfaction, .]]

>> Trigrams: 
[[ , White, PaperCustomer], [White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding4], [language, understanding4,    ], [understanding4,    , developing], [   , developing, detailed], [developing, detailed, statistical], [detailed, statistical, models], [statistical, models, involves], [models, involves, manual], [involves, manual, efforts], [manual, efforts,  ], [efforts,  , define], [ , define, assign], [define, assign, agreed], [assign, agreed, meanings], [agreed, meanings, transcription], [meanings, transcription, ,], [transcription, ,, result], [,, result,  ], [result,  , high], [ , high, automation], [high, automation, rates], [automation, rates, high], [rates, high, customer], [high, customer, satisfaction], [customer, satisfaction, .]]

>> Noun Phrases are: 
[White PaperCustomer Service Solutions Natural language, the detailed statistical models, manual efforts, the agreed upon meanings, each transcription, the result, very high automation rates, high customer satisfaction]

>> Named Entities are: 
[('White PaperCustomer Service', 'ORG')]


============================ Sentence 103 =============================

The key to  extracting the correct meaning from this open-ended approach is the proper  tagging of previously transcribed phrases. 


>> Tokens are: 
[key,  , extracting, correct, meaning, open, -, ended, approach, proper,  , tagging, previously, transcribed, phrases, .] 

>> PoS Tags are: 
[('key', 'NOUN'), (' ', 'SPACE'), ('extracting', 'VERB'), ('correct', 'ADJ'), ('meaning', 'NOUN'), ('open', 'ADV'), ('-', 'PUNCT'), ('ended', 'ADJ'), ('approach', 'NOUN'), ('proper', 'ADJ'), (' ', 'SPACE'), ('tagging', 'NOUN'), ('previously', 'ADV'), ('transcribed', 'VERB'), ('phrases', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('key', 'nsubj'), (' ', 'pobj'), ('extracting', 'acl'), ('correct', 'amod'), ('meaning', 'dobj'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), ('approach', 'pobj'), ('proper', 'amod'), (' ', 'compound'), ('tagging', 'attr'), ('previously', 'advmod'), ('transcribed', 'amod'), ('phrases', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[key,  ], [ , extracting], [extracting, correct], [correct, meaning], [meaning, open], [open, -], [-, ended], [ended, approach], [approach, proper], [proper,  ], [ , tagging], [tagging, previously], [previously, transcribed], [transcribed, phrases], [phrases, .]]

>> Trigrams: 
[[key,  , extracting], [ , extracting, correct], [extracting, correct, meaning], [correct, meaning, open], [meaning, open, -], [open, -, ended], [-, ended, approach], [ended, approach, proper], [approach, proper,  ], [proper,  , tagging], [ , tagging, previously], [tagging, previously, transcribed], [previously, transcribed, phrases], [transcribed, phrases, .]]

>> Noun Phrases are: 
[The key, the correct meaning, this open-ended approach, the proper  tagging, previously transcribed phrases]

>> Named Entities are: 
[]


============================ Sentence 104 =============================

As with grammars, if the caller  gives a completely unexpected response, like talking about ‘pizza toppings’  to an electricity provider’s system, there will not be a match. 


>> Tokens are: 
[grammars, ,, caller,  , gives, completely, unexpected, response, ,, like, talking, ‘, pizza, toppings, ’,  , electricity, provider, system, ,, match, .] 

>> PoS Tags are: 
[('grammars', 'NOUN'), (',', 'PUNCT'), ('caller', 'NOUN'), (' ', 'SPACE'), ('gives', 'VERB'), ('completely', 'ADV'), ('unexpected', 'ADJ'), ('response', 'NOUN'), (',', 'PUNCT'), ('like', 'ADP'), ('talking', 'VERB'), ('‘', 'PUNCT'), ('pizza', 'NOUN'), ('toppings', 'NOUN'), ('’', 'PUNCT'), (' ', 'SPACE'), ('electricity', 'NOUN'), ('provider', 'NOUN'), ('system', 'NOUN'), (',', 'PUNCT'), ('match', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('grammars', 'pobj'), (',', 'punct'), ('caller', 'nsubj'), (' ', 'nsubj'), ('gives', 'advcl'), ('completely', 'advmod'), ('unexpected', 'amod'), ('response', 'dobj'), (',', 'punct'), ('like', 'prep'), ('talking', 'pcomp'), ('‘', 'punct'), ('pizza', 'compound'), ('toppings', 'pobj'), ('’', 'punct'), (' ', 'pobj'), ('electricity', 'compound'), ('provider', 'nmod'), ('system', 'pobj'), (',', 'punct'), ('match', 'attr'), ('.', 'punct')]

>> Bigrams: 
[[grammars, ,], [,, caller], [caller,  ], [ , gives], [gives, completely], [completely, unexpected], [unexpected, response], [response, ,], [,, like], [like, talking], [talking, ‘], [‘, pizza], [pizza, toppings], [toppings, ’], [’,  ], [ , electricity], [electricity, provider], [provider, system], [system, ,], [,, match], [match, .]]

>> Trigrams: 
[[grammars, ,, caller], [,, caller,  ], [caller,  , gives], [ , gives, completely], [gives, completely, unexpected], [completely, unexpected, response], [unexpected, response, ,], [response, ,, like], [,, like, talking], [like, talking, ‘], [talking, ‘, pizza], [‘, pizza, toppings], [pizza, toppings, ’], [toppings, ’,  ], [’,  , electricity], [ , electricity, provider], [electricity, provider, system], [provider, system, ,], [system, ,, match], [,, match, .]]

>> Noun Phrases are: 
[grammars, the caller, a completely unexpected response, pizza toppings, an electricity provider’s system, a match]

>> Named Entities are: 
[]


============================ Sentence 105 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 106 =============================

When there is no match, the system will offer a fall-back alternative that  uses traditional grammars to determine the caller’s intent such as “I’m sorry   


>> Tokens are: 
[match, ,, system, offer, fall, -, alternative,  , uses, traditional, grammars, determine, caller, intent, “, sorry,  ] 

>> PoS Tags are: 
[('match', 'NOUN'), (',', 'PUNCT'), ('system', 'NOUN'), ('offer', 'VERB'), ('fall', 'NOUN'), ('-', 'PUNCT'), ('alternative', 'NOUN'), (' ', 'SPACE'), ('uses', 'VERB'), ('traditional', 'ADJ'), ('grammars', 'NOUN'), ('determine', 'VERB'), ('caller', 'NOUN'), ('intent', 'NOUN'), ('“', 'PUNCT'), ('sorry', 'ADJ'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('match', 'attr'), (',', 'punct'), ('system', 'nsubj'), ('offer', 'ROOT'), ('fall', 'amod'), ('-', 'punct'), ('alternative', 'dobj'), (' ', 'nsubj'), ('uses', 'relcl'), ('traditional', 'amod'), ('grammars', 'dobj'), ('determine', 'xcomp'), ('caller', 'poss'), ('intent', 'dobj'), ('“', 'punct'), ('sorry', 'acomp'), (' ', 'punct')]

>> Bigrams: 
[[match, ,], [,, system], [system, offer], [offer, fall], [fall, -], [-, alternative], [alternative,  ], [ , uses], [uses, traditional], [traditional, grammars], [grammars, determine], [determine, caller], [caller, intent], [intent, “], [“, sorry], [sorry,  ]]

>> Trigrams: 
[[match, ,, system], [,, system, offer], [system, offer, fall], [offer, fall, -], [fall, -, alternative], [-, alternative,  ], [alternative,  , uses], [ , uses, traditional], [uses, traditional, grammars], [traditional, grammars, determine], [grammars, determine, caller], [determine, caller, intent], [caller, intent, “], [intent, “, sorry], [“, sorry,  ]]

>> Noun Phrases are: 
[no match, the system, a fall-back alternative, traditional grammars, the caller’s intent, I]

>> Named Entities are: 
[]


============================ Sentence 107 =============================

I did not get that, would you like mortgages, credit cards, 


>> Tokens are: 
[,, like, mortgages, ,, credit, cards, ,] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('like', 'VERB'), ('mortgages', 'NOUN'), (',', 'PUNCT'), ('credit', 'NOUN'), ('cards', 'NOUN'), (',', 'PUNCT')] 

>> Dependency Tags are: 
[(',', 'punct'), ('like', 'prep'), ('mortgages', 'pobj'), (',', 'punct'), ('credit', 'compound'), ('cards', 'conj'), (',', 'punct')]

>> Bigrams: 
[[,, like], [like, mortgages], [mortgages, ,], [,, credit], [credit, cards], [cards, ,]]

>> Trigrams: 
[[,, like, mortgages], [like, mortgages, ,], [mortgages, ,, credit], [,, credit, cards], [credit, cards, ,]]

>> Noun Phrases are: 
[I, you, mortgages, credit cards]

>> Named Entities are: 
[]


============================ Sentence 108 =============================

…” Experience  has shown that applying the keyword spotting approach to these fall-back  grammars often leads to a successful interaction. 


>> Tokens are: 
[…, ”, Experience,  , shown, applying, keyword, spotting, approach, fall, -,  , grammars, leads, successful, interaction, .] 

>> PoS Tags are: 
[('…', 'PUNCT'), ('”', 'PUNCT'), ('Experience', 'NOUN'), (' ', 'SPACE'), ('shown', 'VERB'), ('applying', 'VERB'), ('keyword', 'NOUN'), ('spotting', 'VERB'), ('approach', 'NOUN'), ('fall', 'NOUN'), ('-', 'PUNCT'), (' ', 'SPACE'), ('grammars', 'VERB'), ('leads', 'VERB'), ('successful', 'ADJ'), ('interaction', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('…', 'punct'), ('”', 'punct'), ('Experience', 'ROOT'), (' ', 'nsubj'), ('shown', 'relcl'), ('applying', 'csubj'), ('keyword', 'dobj'), ('spotting', 'compound'), ('approach', 'dobj'), ('fall', 'pobj'), ('-', 'punct'), (' ', 'dobj'), ('grammars', 'dobj'), ('leads', 'ccomp'), ('successful', 'amod'), ('interaction', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[…, ”], [”, Experience], [Experience,  ], [ , shown], [shown, applying], [applying, keyword], [keyword, spotting], [spotting, approach], [approach, fall], [fall, -], [-,  ], [ , grammars], [grammars, leads], [leads, successful], [successful, interaction], [interaction, .]]

>> Trigrams: 
[[…, ”, Experience], [”, Experience,  ], [Experience,  , shown], [ , shown, applying], [shown, applying, keyword], [applying, keyword, spotting], [keyword, spotting, approach], [spotting, approach, fall], [approach, fall, -], [fall, -,  ], [-,  , grammars], [ , grammars, leads], [grammars, leads, successful], [leads, successful, interaction], [successful, interaction, .]]

>> Noun Phrases are: 
[…” Experience, the keyword, spotting approach, these fall, a successful interaction]

>> Named Entities are: 
[]


============================ Sentence 109 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 110 =============================

Appropriate for determining the meaning of any open-ended response, this  powerful approach is highly effective for call routing applications. 


>> Tokens are: 
[Appropriate, determining, meaning, open, -, ended, response, ,,  , powerful, approach, highly, effective, routing, applications, .] 

>> PoS Tags are: 
[('Appropriate', 'PROPN'), ('determining', 'VERB'), ('meaning', 'NOUN'), ('open', 'ADV'), ('-', 'PUNCT'), ('ended', 'ADJ'), ('response', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('powerful', 'ADJ'), ('approach', 'NOUN'), ('highly', 'ADV'), ('effective', 'ADJ'), ('routing', 'NOUN'), ('applications', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Appropriate', 'advcl'), ('determining', 'pcomp'), ('meaning', 'dobj'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), ('response', 'pobj'), (',', 'punct'), (' ', 'nmod'), ('powerful', 'amod'), ('approach', 'nsubj'), ('highly', 'advmod'), ('effective', 'acomp'), ('routing', 'compound'), ('applications', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Appropriate, determining], [determining, meaning], [meaning, open], [open, -], [-, ended], [ended, response], [response, ,], [,,  ], [ , powerful], [powerful, approach], [approach, highly], [highly, effective], [effective, routing], [routing, applications], [applications, .]]

>> Trigrams: 
[[Appropriate, determining, meaning], [determining, meaning, open], [meaning, open, -], [open, -, ended], [-, ended, response], [ended, response, ,], [response, ,,  ], [,,  , powerful], [ , powerful, approach], [powerful, approach, highly], [approach, highly, effective], [highly, effective, routing], [effective, routing, applications], [routing, applications, .]]

>> Noun Phrases are: 
[the meaning, any open-ended response, this  powerful approach, call routing applications]

>> Named Entities are: 
[('Appropriate', 'ORG')]


============================ Sentence 111 =============================

When  callers use their own words, there tends to be drastically fewer zero-outs  and misroutes as complicated menus are bypassed and confusing or arcane  jargon is avoided. 


>> Tokens are: 
[ , callers, use, words, ,, tends, drastically, fewer, zero, -, outs,  , misroutes, complicated, menus, bypassed, confusing, arcane,  , jargon, avoided, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('callers', 'NOUN'), ('use', 'VERB'), ('words', 'NOUN'), (',', 'PUNCT'), ('tends', 'VERB'), ('drastically', 'ADV'), ('fewer', 'ADJ'), ('zero', 'NUM'), ('-', 'PUNCT'), ('outs', 'NOUN'), (' ', 'SPACE'), ('misroutes', 'NOUN'), ('complicated', 'ADJ'), ('menus', 'NOUN'), ('bypassed', 'VERB'), ('confusing', 'ADJ'), ('arcane', 'ADJ'), (' ', 'SPACE'), ('jargon', 'NOUN'), ('avoided', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('callers', 'nsubj'), ('use', 'advcl'), ('words', 'dobj'), (',', 'punct'), ('tends', 'ccomp'), ('drastically', 'advmod'), ('fewer', 'amod'), ('zero', 'nummod'), ('-', 'punct'), ('outs', 'compound'), (' ', 'attr'), ('misroutes', 'conj'), ('complicated', 'amod'), ('menus', 'pobj'), ('bypassed', 'advcl'), ('confusing', 'conj'), ('arcane', 'conj'), (' ', 'attr'), ('jargon', 'appos'), ('avoided', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[ , callers], [callers, use], [use, words], [words, ,], [,, tends], [tends, drastically], [drastically, fewer], [fewer, zero], [zero, -], [-, outs], [outs,  ], [ , misroutes], [misroutes, complicated], [complicated, menus], [menus, bypassed], [bypassed, confusing], [confusing, arcane], [arcane,  ], [ , jargon], [jargon, avoided], [avoided, .]]

>> Trigrams: 
[[ , callers, use], [callers, use, words], [use, words, ,], [words, ,, tends], [,, tends, drastically], [tends, drastically, fewer], [drastically, fewer, zero], [fewer, zero, -], [zero, -, outs], [-, outs,  ], [outs,  , misroutes], [ , misroutes, complicated], [misroutes, complicated, menus], [complicated, menus, bypassed], [menus, bypassed, confusing], [bypassed, confusing, arcane], [confusing, arcane,  ], [arcane,  , jargon], [ , jargon, avoided], [jargon, avoided, .]]

>> Noun Phrases are: 
[ callers, their own words, misroutes, complicated menus, jargon]

>> Named Entities are: 
[('zero', 'CARDINAL')]


============================ Sentence 112 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 113 =============================

Provide	a	more	flexible	script Accurately recognizing the meaning of what a caller says is only part of how  natural language can improve automation. 


>> Tokens are: 
[Provide, 	, 	, 	, flexible, 	, script, Accurately, recognizing, meaning, caller, says,  , natural, language, improve, automation, .] 

>> PoS Tags are: 
[('Provide', 'VERB'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('\t', 'SPACE'), ('flexible', 'ADJ'), ('\t', 'SPACE'), ('script', 'NOUN'), ('Accurately', 'ADV'), ('recognizing', 'VERB'), ('meaning', 'NOUN'), ('caller', 'NOUN'), ('says', 'VERB'), (' ', 'SPACE'), ('natural', 'ADJ'), ('language', 'NOUN'), ('improve', 'VERB'), ('automation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Provide', 'ROOT'), ('\t', 'dobj'), ('\t', 'nmod'), ('\t', 'nmod'), ('flexible', 'amod'), ('\t', 'compound'), ('script', 'dobj'), ('Accurately', 'advmod'), ('recognizing', 'advcl'), ('meaning', 'dobj'), ('caller', 'nsubj'), ('says', 'csubj'), (' ', 'nmod'), ('natural', 'amod'), ('language', 'nsubj'), ('improve', 'pcomp'), ('automation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Provide, 	], [	, 	], [	, 	], [	, flexible], [flexible, 	], [	, script], [script, Accurately], [Accurately, recognizing], [recognizing, meaning], [meaning, caller], [caller, says], [says,  ], [ , natural], [natural, language], [language, improve], [improve, automation], [automation, .]]

>> Trigrams: 
[[Provide, 	, 	], [	, 	, 	], [	, 	, flexible], [	, flexible, 	], [flexible, 	, script], [	, script, Accurately], [script, Accurately, recognizing], [Accurately, recognizing, meaning], [recognizing, meaning, caller], [meaning, caller, says], [caller, says,  ], [says,  , natural], [ , natural, language], [natural, language, improve], [language, improve, automation], [improve, automation, .]]

>> Noun Phrases are: 
[a	more	flexible	script, the meaning, what, a caller, only part,  natural language, automation]

>> Named Entities are: 
[]


============================ Sentence 114 =============================

The next step in learning to speak  customer-ese is for the self-service system to have a conversation with the  caller. 


>> Tokens are: 
[step, learning, speak,  , customer, -, ese, self, -, service, system, conversation,  , caller, .] 

>> PoS Tags are: 
[('step', 'NOUN'), ('learning', 'VERB'), ('speak', 'VERB'), (' ', 'SPACE'), ('customer', 'NOUN'), ('-', 'PUNCT'), ('ese', 'PROPN'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('system', 'NOUN'), ('conversation', 'NOUN'), (' ', 'SPACE'), ('caller', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('step', 'nsubj'), ('learning', 'pcomp'), ('speak', 'xcomp'), (' ', 'dobj'), ('customer', 'compound'), ('-', 'punct'), ('ese', 'dobj'), ('self', 'compound'), ('-', 'punct'), ('service', 'compound'), ('system', 'nsubj'), ('conversation', 'dobj'), (' ', 'compound'), ('caller', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[step, learning], [learning, speak], [speak,  ], [ , customer], [customer, -], [-, ese], [ese, self], [self, -], [-, service], [service, system], [system, conversation], [conversation,  ], [ , caller], [caller, .]]

>> Trigrams: 
[[step, learning, speak], [learning, speak,  ], [speak,  , customer], [ , customer, -], [customer, -, ese], [-, ese, self], [ese, self, -], [self, -, service], [-, service, system], [service, system, conversation], [system, conversation,  ], [conversation,  , caller], [ , caller, .]]

>> Noun Phrases are: 
[The next step, customer-ese, the self-service system, a conversation, the  caller]

>> Named Entities are: 
[]


============================ Sentence 115 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 116 =============================

The conversational approach relies on dialogs that continuously adapt to  the information provided. 


>> Tokens are: 
[conversational, approach, relies, dialogs, continuously, adapt,  , information, provided, .] 

>> PoS Tags are: 
[('conversational', 'ADJ'), ('approach', 'NOUN'), ('relies', 'VERB'), ('dialogs', 'NOUN'), ('continuously', 'ADV'), ('adapt', 'VERB'), (' ', 'SPACE'), ('information', 'NOUN'), ('provided', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('conversational', 'amod'), ('approach', 'nsubj'), ('relies', 'ROOT'), ('dialogs', 'pobj'), ('continuously', 'advmod'), ('adapt', 'relcl'), (' ', 'pobj'), ('information', 'nsubj'), ('provided', 'ccomp'), ('.', 'punct')]

>> Bigrams: 
[[conversational, approach], [approach, relies], [relies, dialogs], [dialogs, continuously], [continuously, adapt], [adapt,  ], [ , information], [information, provided], [provided, .]]

>> Trigrams: 
[[conversational, approach, relies], [approach, relies, dialogs], [relies, dialogs, continuously], [dialogs, continuously, adapt], [continuously, adapt,  ], [adapt,  , information], [ , information, provided], [information, provided, .]]

>> Noun Phrases are: 
[The conversational approach, dialogs, the information]

>> Named Entities are: 
[]


============================ Sentence 117 =============================

This way the caller has a personalized experience  while they control the conversation. 


>> Tokens are: 
[way, caller, personalized, experience,  , control, conversation, .] 

>> PoS Tags are: 
[('way', 'NOUN'), ('caller', 'NOUN'), ('personalized', 'ADJ'), ('experience', 'NOUN'), (' ', 'SPACE'), ('control', 'VERB'), ('conversation', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('way', 'npadvmod'), ('caller', 'nsubj'), ('personalized', 'amod'), ('experience', 'dobj'), (' ', 'appos'), ('control', 'advcl'), ('conversation', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[way, caller], [caller, personalized], [personalized, experience], [experience,  ], [ , control], [control, conversation], [conversation, .]]

>> Trigrams: 
[[way, caller, personalized], [caller, personalized, experience], [personalized, experience,  ], [experience,  , control], [ , control, conversation], [control, conversation, .]]

>> Noun Phrases are: 
[the caller, a personalized experience, they, the conversation]

>> Named Entities are: 
[]


============================ Sentence 118 =============================

For example, callers often provide  more information than prompted for. 


>> Tokens are: 
[example, ,, callers, provide,  , information, prompted, .] 

>> PoS Tags are: 
[('example', 'NOUN'), (',', 'PUNCT'), ('callers', 'NOUN'), ('provide', 'VERB'), (' ', 'SPACE'), ('information', 'NOUN'), ('prompted', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('example', 'pobj'), (',', 'punct'), ('callers', 'nsubj'), ('provide', 'ROOT'), (' ', 'dative'), ('information', 'dobj'), ('prompted', 'advcl'), ('.', 'punct')]

>> Bigrams: 
[[example, ,], [,, callers], [callers, provide], [provide,  ], [ , information], [information, prompted], [prompted, .]]

>> Trigrams: 
[[example, ,, callers], [,, callers, provide], [callers, provide,  ], [provide,  , information], [ , information, prompted], [information, prompted, .]]

>> Noun Phrases are: 
[example, callers, more information]

>> Named Entities are: 
[]


============================ Sentence 119 =============================

A system that can respond to varying  amounts of information will have more productive and shorter calls. 


>> Tokens are: 
[system, respond, varying,  , amounts, information, productive, shorter, calls, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('respond', 'VERB'), ('varying', 'VERB'), (' ', 'SPACE'), ('amounts', 'NOUN'), ('information', 'NOUN'), ('productive', 'ADJ'), ('shorter', 'ADJ'), ('calls', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('respond', 'relcl'), ('varying', 'pcomp'), (' ', 'compound'), ('amounts', 'dobj'), ('information', 'pobj'), ('productive', 'amod'), ('shorter', 'conj'), ('calls', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[system, respond], [respond, varying], [varying,  ], [ , amounts], [amounts, information], [information, productive], [productive, shorter], [shorter, calls], [calls, .]]

>> Trigrams: 
[[system, respond, varying], [respond, varying,  ], [varying,  , amounts], [ , amounts, information], [amounts, information, productive], [information, productive, shorter], [productive, shorter, calls], [shorter, calls, .]]

>> Noun Phrases are: 
[A system,  amounts, information, more productive and shorter calls]

>> Named Entities are: 
[]


============================ Sentence 120 =============================

Notice in  the dialog at the right the caller provides the ‘extra’ information of the return  date allowing the system to avoid having to ask for it. 


>> Tokens are: 
[Notice,  , dialog, right, caller, provides, ‘, extra, ’, information, return,  , date, allowing, system, avoid, having, ask, .] 

>> PoS Tags are: 
[('Notice', 'NOUN'), (' ', 'SPACE'), ('dialog', 'NOUN'), ('right', 'NOUN'), ('caller', 'NOUN'), ('provides', 'VERB'), ('‘', 'PUNCT'), ('extra', 'ADJ'), ('’', 'PUNCT'), ('information', 'NOUN'), ('return', 'NOUN'), (' ', 'SPACE'), ('date', 'NOUN'), ('allowing', 'VERB'), ('system', 'NOUN'), ('avoid', 'VERB'), ('having', 'VERB'), ('ask', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Notice', 'nsubj'), (' ', 'pobj'), ('dialog', 'dobj'), ('right', 'pobj'), ('caller', 'nsubj'), ('provides', 'ROOT'), ('‘', 'punct'), ('extra', 'amod'), ('’', 'punct'), ('information', 'dobj'), ('return', 'pobj'), (' ', 'compound'), ('date', 'dobj'), ('allowing', 'acl'), ('system', 'nsubj'), ('avoid', 'ccomp'), ('having', 'xcomp'), ('ask', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[Notice,  ], [ , dialog], [dialog, right], [right, caller], [caller, provides], [provides, ‘], [‘, extra], [extra, ’], [’, information], [information, return], [return,  ], [ , date], [date, allowing], [allowing, system], [system, avoid], [avoid, having], [having, ask], [ask, .]]

>> Trigrams: 
[[Notice,  , dialog], [ , dialog, right], [dialog, right, caller], [right, caller, provides], [caller, provides, ‘], [provides, ‘, extra], [‘, extra, ’], [extra, ’, information], [’, information, return], [information, return,  ], [return,  , date], [ , date, allowing], [date, allowing, system], [allowing, system, avoid], [system, avoid, having], [avoid, having, ask], [having, ask, .]]

>> Noun Phrases are: 
[Notice, the dialog, the right, the caller, the ‘extra’ information, the return,  date, the system, it]

>> Named Entities are: 
[]


============================ Sentence 121 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 122 =============================

More than collecting information, a natural language conversation needs  to flow smoothly. 


>> Tokens are: 
[collecting, information, ,, natural, language, conversation, needs,  , flow, smoothly, .] 

>> PoS Tags are: 
[('collecting', 'VERB'), ('information', 'NOUN'), (',', 'PUNCT'), ('natural', 'ADJ'), ('language', 'NOUN'), ('conversation', 'NOUN'), ('needs', 'VERB'), (' ', 'SPACE'), ('flow', 'VERB'), ('smoothly', 'ADV'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('collecting', 'pcomp'), ('information', 'dobj'), (',', 'punct'), ('natural', 'amod'), ('language', 'compound'), ('conversation', 'nsubj'), ('needs', 'ROOT'), (' ', 'nsubj'), ('flow', 'ccomp'), ('smoothly', 'advmod'), ('.', 'punct')]

>> Bigrams: 
[[collecting, information], [information, ,], [,, natural], [natural, language], [language, conversation], [conversation, needs], [needs,  ], [ , flow], [flow, smoothly], [smoothly, .]]

>> Trigrams: 
[[collecting, information, ,], [information, ,, natural], [,, natural, language], [natural, language, conversation], [language, conversation, needs], [conversation, needs,  ], [needs,  , flow], [ , flow, smoothly], [flow, smoothly, .]]

>> Noun Phrases are: 
[information, a natural language conversation]

>> Named Entities are: 
[]


============================ Sentence 123 =============================

A system that constantly asks for confirmations creates a  disjointed conversation that callers tend to reject. 


>> Tokens are: 
[system, constantly, asks, confirmations, creates,  , disjointed, conversation, callers, tend, reject, .] 

>> PoS Tags are: 
[('system', 'NOUN'), ('constantly', 'ADV'), ('asks', 'VERB'), ('confirmations', 'NOUN'), ('creates', 'VERB'), (' ', 'SPACE'), ('disjointed', 'ADJ'), ('conversation', 'NOUN'), ('callers', 'NOUN'), ('tend', 'VERB'), ('reject', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('system', 'nsubj'), ('constantly', 'advmod'), ('asks', 'relcl'), ('confirmations', 'pobj'), ('creates', 'ROOT'), (' ', 'nmod'), ('disjointed', 'amod'), ('conversation', 'dobj'), ('callers', 'nsubj'), ('tend', 'relcl'), ('reject', 'xcomp'), ('.', 'punct')]

>> Bigrams: 
[[system, constantly], [constantly, asks], [asks, confirmations], [confirmations, creates], [creates,  ], [ , disjointed], [disjointed, conversation], [conversation, callers], [callers, tend], [tend, reject], [reject, .]]

>> Trigrams: 
[[system, constantly, asks], [constantly, asks, confirmations], [asks, confirmations, creates], [confirmations, creates,  ], [creates,  , disjointed], [ , disjointed, conversation], [disjointed, conversation, callers], [conversation, callers, tend], [callers, tend, reject], [tend, reject, .]]

>> Noun Phrases are: 
[A system, confirmations, a  disjointed conversation, callers]

>> Named Entities are: 
[]


============================ Sentence 124 =============================

However systems that can  handle corrections and verifications by dynamically embedding the confir- mations in the next prompt are more engaging, leading to better automation  rates. 


>> Tokens are: 
[systems,  , handle, corrections, verifications, dynamically, embedding, confir-, mations, prompt, engaging, ,, leading, better, automation,  , rates, .] 

>> PoS Tags are: 
[('systems', 'NOUN'), (' ', 'SPACE'), ('handle', 'VERB'), ('corrections', 'NOUN'), ('verifications', 'NOUN'), ('dynamically', 'ADV'), ('embedding', 'VERB'), ('confir-', 'NOUN'), ('mations', 'NOUN'), ('prompt', 'NOUN'), ('engaging', 'ADJ'), (',', 'PUNCT'), ('leading', 'VERB'), ('better', 'ADJ'), ('automation', 'NOUN'), (' ', 'SPACE'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('systems', 'nsubj'), (' ', 'nsubj'), ('handle', 'relcl'), ('corrections', 'dobj'), ('verifications', 'conj'), ('dynamically', 'advmod'), ('embedding', 'pcomp'), ('confir-', 'compound'), ('mations', 'dobj'), ('prompt', 'pobj'), ('engaging', 'acomp'), (',', 'punct'), ('leading', 'advcl'), ('better', 'amod'), ('automation', 'nmod'), (' ', 'compound'), ('rates', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[systems,  ], [ , handle], [handle, corrections], [corrections, verifications], [verifications, dynamically], [dynamically, embedding], [embedding, confir-], [confir-, mations], [mations, prompt], [prompt, engaging], [engaging, ,], [,, leading], [leading, better], [better, automation], [automation,  ], [ , rates], [rates, .]]

>> Trigrams: 
[[systems,  , handle], [ , handle, corrections], [handle, corrections, verifications], [corrections, verifications, dynamically], [verifications, dynamically, embedding], [dynamically, embedding, confir-], [embedding, confir-, mations], [confir-, mations, prompt], [mations, prompt, engaging], [prompt, engaging, ,], [engaging, ,, leading], [,, leading, better], [leading, better, automation], [better, automation,  ], [automation,  , rates], [ , rates, .]]

>> Noun Phrases are: 
[systems, corrections, verifications, the confir- mations, the next prompt, better automation  rates]

>> Named Entities are: 
[]


============================ Sentence 125 =============================

Notice in the dialog below how the system confirms the change to  Boston when the caller requests a window seat. 


>> Tokens are: 
[Notice, dialog, system, confirms, change,  , Boston, caller, requests, window, seat, .] 

>> PoS Tags are: 
[('Notice', 'NOUN'), ('dialog', 'NOUN'), ('system', 'NOUN'), ('confirms', 'VERB'), ('change', 'NOUN'), (' ', 'SPACE'), ('Boston', 'PROPN'), ('caller', 'NOUN'), ('requests', 'VERB'), ('window', 'NOUN'), ('seat', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Notice', 'ROOT'), ('dialog', 'pobj'), ('system', 'nsubj'), ('confirms', 'pcomp'), ('change', 'dobj'), (' ', 'pobj'), ('Boston', 'appos'), ('caller', 'nsubj'), ('requests', 'advcl'), ('window', 'compound'), ('seat', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[Notice, dialog], [dialog, system], [system, confirms], [confirms, change], [change,  ], [ , Boston], [Boston, caller], [caller, requests], [requests, window], [window, seat], [seat, .]]

>> Trigrams: 
[[Notice, dialog, system], [dialog, system, confirms], [system, confirms, change], [confirms, change,  ], [change,  , Boston], [ , Boston, caller], [Boston, caller, requests], [caller, requests, window], [requests, window, seat], [window, seat, .]]

>> Noun Phrases are: 
[Notice, the dialog, the system, the change, Boston, the caller, a window seat]

>> Named Entities are: 
[('Boston', 'GPE')]


============================ Sentence 126 =============================

 Natural Language Understanding  technology increases automation by  correctly interpreting the meaning  behind open-ended caller responses  allowing callers to use their own words  rather than words chosen for them. 


>> Tokens are: 
[ , Natural, Language, Understanding,  , technology, increases, automation,  , correctly, interpreting, meaning,  , open, -, ended, caller, responses,  , allowing, callers, use, words,  , words, chosen, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Understanding', 'PROPN'), (' ', 'SPACE'), ('technology', 'NOUN'), ('increases', 'VERB'), ('automation', 'NOUN'), (' ', 'SPACE'), ('correctly', 'ADV'), ('interpreting', 'VERB'), ('meaning', 'NOUN'), (' ', 'SPACE'), ('open', 'ADV'), ('-', 'PUNCT'), ('ended', 'ADJ'), ('caller', 'NOUN'), ('responses', 'NOUN'), (' ', 'SPACE'), ('allowing', 'VERB'), ('callers', 'NOUN'), ('use', 'VERB'), ('words', 'NOUN'), (' ', 'SPACE'), ('words', 'NOUN'), ('chosen', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'dep'), ('Natural', 'compound'), ('Language', 'nmod'), ('Understanding', 'nmod'), (' ', 'nummod'), ('technology', 'nsubj'), ('increases', 'ROOT'), ('automation', 'dobj'), (' ', 'pobj'), ('correctly', 'advmod'), ('interpreting', 'advcl'), ('meaning', 'dobj'), (' ', 'dobj'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), ('caller', 'compound'), ('responses', 'pobj'), (' ', 'dobj'), ('allowing', 'advcl'), ('callers', 'nsubj'), ('use', 'ccomp'), ('words', 'dobj'), (' ', 'dobj'), ('words', 'conj'), ('chosen', 'acl'), ('.', 'punct')]

>> Bigrams: 
[[ , Natural], [Natural, Language], [Language, Understanding], [Understanding,  ], [ , technology], [technology, increases], [increases, automation], [automation,  ], [ , correctly], [correctly, interpreting], [interpreting, meaning], [meaning,  ], [ , open], [open, -], [-, ended], [ended, caller], [caller, responses], [responses,  ], [ , allowing], [allowing, callers], [callers, use], [use, words], [words,  ], [ , words], [words, chosen], [chosen, .]]

>> Trigrams: 
[[ , Natural, Language], [Natural, Language, Understanding], [Language, Understanding,  ], [Understanding,  , technology], [ , technology, increases], [technology, increases, automation], [increases, automation,  ], [automation,  , correctly], [ , correctly, interpreting], [correctly, interpreting, meaning], [interpreting, meaning,  ], [meaning,  , open], [ , open, -], [open, -, ended], [-, ended, caller], [ended, caller, responses], [caller, responses,  ], [responses,  , allowing], [ , allowing, callers], [allowing, callers, use], [callers, use, words], [use, words,  ], [words,  , words], [ , words, chosen], [words, chosen, .]]

>> Noun Phrases are: 
[Natural Language Understanding  technology, automation, the meaning, open-ended caller responses, callers, their own words, words, them]

>> Named Entities are: 
[]


============================ Sentence 127 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 128 =============================

White PaperCustomer Service Solutions Natural language understanding5  Natural   


>> Tokens are: 
[White, PaperCustomer, Service, Solutions, Natural, language, understanding5,  , Natural,  ] 

>> PoS Tags are: 
[('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding5', 'VERB'), (' ', 'SPACE'), ('Natural', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'nsubj'), ('understanding5', 'ROOT'), (' ', 'dobj'), ('Natural', 'amod'), (' ', 'dobj')]

>> Bigrams: 
[[White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding5], [understanding5,  ], [ , Natural], [Natural,  ]]

>> Trigrams: 
[[White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding5], [language, understanding5,  ], [understanding5,  , Natural], [ , Natural,  ]]

>> Noun Phrases are: 
[White PaperCustomer Service Solutions Natural language]

>> Named Entities are: 
[('White PaperCustomer Service', 'ORG')]


============================ Sentence 129 =============================

Language   Understanding  Directed Dialogue or DTMF Method Only -  Requires Pre-Defined Menu Tree    


>> Tokens are: 
[Language,   , Understanding,  , Directed, Dialogue, DTMF, Method, -,  , Requires, Pre, -, Defined, Menu, Tree,   ] 

>> PoS Tags are: 
[('Language', 'NOUN'), ('  ', 'SPACE'), ('Understanding', 'VERB'), (' ', 'SPACE'), ('Directed', 'PROPN'), ('Dialogue', 'PROPN'), ('DTMF', 'PROPN'), ('Method', 'PROPN'), ('-', 'PUNCT'), (' ', 'SPACE'), ('Requires', 'PROPN'), ('Pre', 'PROPN'), ('-', 'ADJ'), ('Defined', 'ADJ'), ('Menu', 'PROPN'), ('Tree', 'PROPN'), ('  ', 'SPACE')] 

>> Dependency Tags are: 
[('Language', 'compound'), ('  ', 'nsubj'), ('Understanding', 'nsubj'), (' ', 'advmod'), ('Directed', 'compound'), ('Dialogue', 'dobj'), ('DTMF', 'compound'), ('Method', 'conj'), ('-', 'punct'), (' ', 'nsubj'), ('Requires', 'ROOT'), ('Pre', 'compound'), ('-', 'amod'), ('Defined', 'amod'), ('Menu', 'compound'), ('Tree', 'dobj'), ('  ', 'dobj')]

>> Bigrams: 
[[Language,   ], [  , Understanding], [Understanding,  ], [ , Directed], [Directed, Dialogue], [Dialogue, DTMF], [DTMF, Method], [Method, -], [-,  ], [ , Requires], [Requires, Pre], [Pre, -], [-, Defined], [Defined, Menu], [Menu, Tree], [Tree,   ]]

>> Trigrams: 
[[Language,   , Understanding], [  , Understanding,  ], [Understanding,  , Directed], [ , Directed, Dialogue], [Directed, Dialogue, DTMF], [Dialogue, DTMF, Method], [DTMF, Method, -], [Method, -,  ], [-,  , Requires], [ , Requires, Pre], [Requires, Pre, -], [Pre, -, Defined], [-, Defined, Menu], [Defined, Menu, Tree], [Menu, Tree,   ]]

>> Noun Phrases are: 
[Directed Dialogue, DTMF Method, Pre-Defined Menu Tree]

>> Named Entities are: 
[]


============================ Sentence 130 =============================

I lost my card and need another one.   


>> Tokens are: 
[lost, card, need, .,  ] 

>> PoS Tags are: 
[('lost', 'VERB'), ('card', 'NOUN'), ('need', 'VERB'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('lost', 'ROOT'), ('card', 'dobj'), ('need', 'conj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[lost, card], [card, need], [need, .], [.,  ]]

>> Trigrams: 
[[lost, card, need], [card, need, .], [need, .,  ]]

>> Noun Phrases are: 
[I, my card]

>> Named Entities are: 
[]


============================ Sentence 131 =============================

Replacement  Card  Conversational dialogs can build in confirmations without having to explicitly ask for them   


>> Tokens are: 
[Replacement,  , Card,  , Conversational, dialogs, build, confirmations, having, explicitly, ask,  ] 

>> PoS Tags are: 
[('Replacement', 'NOUN'), (' ', 'SPACE'), ('Card', 'PROPN'), (' ', 'SPACE'), ('Conversational', 'PROPN'), ('dialogs', 'NOUN'), ('build', 'VERB'), ('confirmations', 'NOUN'), ('having', 'VERB'), ('explicitly', 'ADV'), ('ask', 'VERB'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Replacement', 'compound'), (' ', 'nmod'), ('Card', 'nmod'), (' ', 'appos'), ('Conversational', 'amod'), ('dialogs', 'nsubj'), ('build', 'ROOT'), ('confirmations', 'pobj'), ('having', 'pcomp'), ('explicitly', 'advmod'), ('ask', 'xcomp'), (' ', 'punct')]

>> Bigrams: 
[[Replacement,  ], [ , Card], [Card,  ], [ , Conversational], [Conversational, dialogs], [dialogs, build], [build, confirmations], [confirmations, having], [having, explicitly], [explicitly, ask], [ask,  ]]

>> Trigrams: 
[[Replacement,  , Card], [ , Card,  ], [Card,  , Conversational], [ , Conversational, dialogs], [Conversational, dialogs, build], [dialogs, build, confirmations], [build, confirmations, having], [confirmations, having, explicitly], [having, explicitly, ask], [explicitly, ask,  ]]

>> Noun Phrases are: 
[Replacement  Card  Conversational dialogs, confirmations, them]

>> Named Entities are: 
[]


============================ Sentence 132 =============================

CALLER: 


>> Tokens are: 
[CALLER, :] 

>> PoS Tags are: 
[('CALLER', 'NOUN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('CALLER', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[CALLER, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CALLER]

>> Named Entities are: 
[]


============================ Sentence 133 =============================

No, not Austin, Boston!   


>> Tokens are: 
[,, Austin, ,, Boston, !,  ] 

>> PoS Tags are: 
[(',', 'PUNCT'), ('Austin', 'PROPN'), (',', 'PUNCT'), ('Boston', 'PROPN'), ('!', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(',', 'punct'), ('Austin', 'ROOT'), (',', 'punct'), ('Boston', 'npadvmod'), ('!', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[,, Austin], [Austin, ,], [,, Boston], [Boston, !], [!,  ]]

>> Trigrams: 
[[,, Austin, ,], [Austin, ,, Boston], [,, Boston, !], [Boston, !,  ]]

>> Noun Phrases are: 
[No, not Austin]

>> Named Entities are: 
[('Austin', 'GPE'), ('Boston', 'GPE')]


============================ Sentence 134 =============================

Window. 


>> Tokens are: 
[Window, .] 

>> PoS Tags are: 
[('Window', 'PROPN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Window', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[Window, .]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Window]

>> Named Entities are: 
[]


============================ Sentence 135 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 136 =============================

Would you like to fly to Austin? 


>> Tokens are: 
[like, fly, Austin, ?] 

>> PoS Tags are: 
[('like', 'VERB'), ('fly', 'VERB'), ('Austin', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('like', 'ROOT'), ('fly', 'xcomp'), ('Austin', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[like, fly], [fly, Austin], [Austin, ?]]

>> Trigrams: 
[[like, fly, Austin], [fly, Austin, ?]]

>> Noun Phrases are: 
[you, Austin]

>> Named Entities are: 
[('Austin', 'PERSON')]


============================ Sentence 137 =============================

SYSTEM:   


>> Tokens are: 
[SYSTEM, :,  ] 

>> PoS Tags are: 
[('SYSTEM', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('SYSTEM', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[SYSTEM, :], [:,  ]]

>> Trigrams: 
[[SYSTEM, :,  ]]

>> Noun Phrases are: 
[SYSTEM]

>> Named Entities are: 
[]


============================ Sentence 138 =============================

Okay, do you prefer a window or  aisle seat to Boston? 


>> Tokens are: 
[Okay, ,, prefer, window,  , aisle, seat, Boston, ?] 

>> PoS Tags are: 
[('Okay', 'INTJ'), (',', 'PUNCT'), ('prefer', 'VERB'), ('window', 'NOUN'), (' ', 'SPACE'), ('aisle', 'NOUN'), ('seat', 'NOUN'), ('Boston', 'PROPN'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('Okay', 'intj'), (',', 'punct'), ('prefer', 'ROOT'), ('window', 'dobj'), (' ', 'conj'), ('aisle', 'compound'), ('seat', 'appos'), ('Boston', 'pobj'), ('?', 'punct')]

>> Bigrams: 
[[Okay, ,], [,, prefer], [prefer, window], [window,  ], [ , aisle], [aisle, seat], [seat, Boston], [Boston, ?]]

>> Trigrams: 
[[Okay, ,, prefer], [,, prefer, window], [prefer, window,  ], [window,  , aisle], [ , aisle, seat], [aisle, seat, Boston], [seat, Boston, ?]]

>> Noun Phrases are: 
[you, a window, aisle seat, Boston]

>> Named Entities are: 
[('Boston', 'GPE')]


============================ Sentence 139 =============================

 Conversational dialogs can  handle more than one piece  of information  Natural Language Understanding Caller provides responses the way  they want to and the system accepts  and interprets the information.   


>> Tokens are: 
[ , Conversational, dialogs,  , handle, piece,  , information,  , Natural, Language, Understanding, Caller, provides, responses, way,  , want, system, accepts,  , interprets, information, .,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Conversational', 'ADJ'), ('dialogs', 'NOUN'), (' ', 'SPACE'), ('handle', 'VERB'), ('piece', 'NOUN'), (' ', 'SPACE'), ('information', 'NOUN'), (' ', 'SPACE'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Understanding', 'PROPN'), ('Caller', 'PROPN'), ('provides', 'VERB'), ('responses', 'NOUN'), ('way', 'NOUN'), (' ', 'SPACE'), ('want', 'VERB'), ('system', 'NOUN'), ('accepts', 'VERB'), (' ', 'SPACE'), ('interprets', 'VERB'), ('information', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Conversational', 'amod'), ('dialogs', 'nsubj'), (' ', 'nsubj'), ('handle', 'advcl'), ('piece', 'dobj'), (' ', 'nummod'), ('information', 'pobj'), (' ', 'npadvmod'), ('Natural', 'compound'), ('Language', 'compound'), ('Understanding', 'compound'), ('Caller', 'nsubj'), ('provides', 'ROOT'), ('responses', 'dobj'), ('way', 'npadvmod'), (' ', 'npadvmod'), ('want', 'relcl'), ('system', 'nsubj'), ('accepts', 'conj'), (' ', 'dobj'), ('interprets', 'conj'), ('information', 'dobj'), ('.', 'punct'), (' ', 'punct')]

>> Bigrams: 
[[ , Conversational], [Conversational, dialogs], [dialogs,  ], [ , handle], [handle, piece], [piece,  ], [ , information], [information,  ], [ , Natural], [Natural, Language], [Language, Understanding], [Understanding, Caller], [Caller, provides], [provides, responses], [responses, way], [way,  ], [ , want], [want, system], [system, accepts], [accepts,  ], [ , interprets], [interprets, information], [information, .], [.,  ]]

>> Trigrams: 
[[ , Conversational, dialogs], [Conversational, dialogs,  ], [dialogs,  , handle], [ , handle, piece], [handle, piece,  ], [piece,  , information], [ , information,  ], [information,  , Natural], [ , Natural, Language], [Natural, Language, Understanding], [Language, Understanding, Caller], [Understanding, Caller, provides], [Caller, provides, responses], [provides, responses, way], [responses, way,  ], [way,  , want], [ , want, system], [want, system, accepts], [system, accepts,  ], [accepts,  , interprets], [ , interprets, information], [interprets, information, .], [information, .,  ]]

>> Noun Phrases are: 
[ Conversational dialogs, more than one piece, information, Natural Language Understanding Caller, responses, they, the system, the information]

>> Named Entities are: 
[('more than one', 'CARDINAL')]


============================ Sentence 140 =============================

AIRLINE SYSTEM with  Natural Language Understanding:   


>> Tokens are: 
[AIRLINE, SYSTEM,  , Natural, Language, Understanding, :,  ] 

>> PoS Tags are: 
[('AIRLINE', 'PROPN'), ('SYSTEM', 'PROPN'), (' ', 'SPACE'), ('Natural', 'PROPN'), ('Language', 'PROPN'), ('Understanding', 'PROPN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('AIRLINE', 'compound'), ('SYSTEM', 'ROOT'), (' ', 'compound'), ('Natural', 'compound'), ('Language', 'compound'), ('Understanding', 'pobj'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[AIRLINE, SYSTEM], [SYSTEM,  ], [ , Natural], [Natural, Language], [Language, Understanding], [Understanding, :], [:,  ]]

>> Trigrams: 
[[AIRLINE, SYSTEM,  ], [SYSTEM,  , Natural], [ , Natural, Language], [Natural, Language, Understanding], [Language, Understanding, :], [Understanding, :,  ]]

>> Noun Phrases are: 
[AIRLINE SYSTEM,  Natural Language Understanding]

>> Named Entities are: 
[]


============================ Sentence 141 =============================

Information to Collect  Departure City Departure Date Number of Adults Number of Children Return City Return Date Seating Assignments   


>> Tokens are: 
[Information, Collect,  , Departure, City, Departure, Date, Number, Adults, Number, Children, Return, City, Return, Date, Seating, Assignments,  ] 

>> PoS Tags are: 
[('Information', 'NOUN'), ('Collect', 'VERB'), (' ', 'SPACE'), ('Departure', 'PROPN'), ('City', 'PROPN'), ('Departure', 'NOUN'), ('Date', 'PROPN'), ('Number', 'PROPN'), ('Adults', 'PROPN'), ('Number', 'PROPN'), ('Children', 'PROPN'), ('Return', 'PROPN'), ('City', 'PROPN'), ('Return', 'PROPN'), ('Date', 'PROPN'), ('Seating', 'PROPN'), ('Assignments', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Information', 'ROOT'), ('Collect', 'relcl'), (' ', 'punct'), ('Departure', 'compound'), ('City', 'compound'), ('Departure', 'compound'), ('Date', 'conj'), ('Number', 'appos'), ('Adults', 'pobj'), ('Number', 'appos'), ('Children', 'pobj'), ('Return', 'compound'), ('City', 'compound'), ('Return', 'compound'), ('Date', 'compound'), ('Seating', 'compound'), ('Assignments', 'appos'), (' ', 'punct')]

>> Bigrams: 
[[Information, Collect], [Collect,  ], [ , Departure], [Departure, City], [City, Departure], [Departure, Date], [Date, Number], [Number, Adults], [Adults, Number], [Number, Children], [Children, Return], [Return, City], [City, Return], [Return, Date], [Date, Seating], [Seating, Assignments], [Assignments,  ]]

>> Trigrams: 
[[Information, Collect,  ], [Collect,  , Departure], [ , Departure, City], [Departure, City, Departure], [City, Departure, Date], [Departure, Date, Number], [Date, Number, Adults], [Number, Adults, Number], [Adults, Number, Children], [Number, Children, Return], [Children, Return, City], [Return, City, Return], [City, Return, Date], [Return, Date, Seating], [Date, Seating, Assignments], [Seating, Assignments,  ]]

>> Noun Phrases are: 
[Information, Departure City Departure Date, Number, Adults, Number, Children, Return City Return Date Seating Assignments]

>> Named Entities are: 
[]


============================ Sentence 142 =============================

CALLER: 


>> Tokens are: 
[CALLER, :] 

>> PoS Tags are: 
[('CALLER', 'PROPN'), (':', 'PUNCT')] 

>> Dependency Tags are: 
[('CALLER', 'ROOT'), (':', 'punct')]

>> Bigrams: 
[[CALLER, :]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[CALLER]

>> Named Entities are: 
[]


============================ Sentence 143 =============================

On Wednesday and returning on Friday.   


>> Tokens are: 
[Wednesday, returning, Friday, .,  ] 

>> PoS Tags are: 
[('Wednesday', 'PROPN'), ('returning', 'VERB'), ('Friday', 'PROPN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('Wednesday', 'pobj'), ('returning', 'conj'), ('Friday', 'pobj'), ('.', 'punct'), (' ', 'pobj')]

>> Bigrams: 
[[Wednesday, returning], [returning, Friday], [Friday, .], [.,  ]]

>> Trigrams: 
[[Wednesday, returning, Friday], [returning, Friday, .], [Friday, .,  ]]

>> Noun Phrases are: 
[Wednesday, Friday]

>> Named Entities are: 
[('Wednesday', 'DATE'), ('Friday', 'DATE')]


============================ Sentence 144 =============================

What day are you leaving? 


>> Tokens are: 
[day, leaving, ?] 

>> PoS Tags are: 
[('day', 'NOUN'), ('leaving', 'VERB'), ('?', 'PUNCT')] 

>> Dependency Tags are: 
[('day', 'dobj'), ('leaving', 'ROOT'), ('?', 'punct')]

>> Bigrams: 
[[day, leaving], [leaving, ?]]

>> Trigrams: 
[[day, leaving, ?]]

>> Noun Phrases are: 
[What day, you]

>> Named Entities are: 
[]


============================ Sentence 145 =============================

 SYSTEM:   


>> Tokens are: 
[ , SYSTEM, :,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('SYSTEM', 'NOUN'), (':', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'compound'), ('SYSTEM', 'ROOT'), (':', 'punct'), (' ', 'appos')]

>> Bigrams: 
[[ , SYSTEM], [SYSTEM, :], [:,  ]]

>> Trigrams: 
[[ , SYSTEM, :], [SYSTEM, :,  ]]

>> Noun Phrases are: 
[ SYSTEM]

>> Named Entities are: 
[]


============================ Sentence 146 =============================

� � 


>> Tokens are: 
[�, �] 

>> PoS Tags are: 
[('�', 'PROPN'), ('�', 'PROPN')] 

>> Dependency Tags are: 
[('�', 'ROOT'), ('�', 'punct')]

>> Bigrams: 
[[�, �]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 147 =============================

� 


>> Tokens are: 
[�] 

>> PoS Tags are: 
[('�', 'PROPN')] 

>> Dependency Tags are: 
[('�', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 148 =============================

� 


>> Tokens are: 
[�] 

>> PoS Tags are: 
[('�', 'PROPN')] 

>> Dependency Tags are: 
[('�', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 149 =============================

� 


>> Tokens are: 
[�] 

>> PoS Tags are: 
[('�', 'PROPN')] 

>> Dependency Tags are: 
[('�', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 150 =============================

� 


>> Tokens are: 
[�] 

>> PoS Tags are: 
[('�', 'PROPN')] 

>> Dependency Tags are: 
[('�', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 151 =============================

�   


>> Tokens are: 
[�,  ] 

>> PoS Tags are: 
[('�', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('�', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[�,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 152 =============================

�   


>> Tokens are: 
[�,  ] 

>> PoS Tags are: 
[('�', 'PROPN'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[('�', 'ROOT'), (' ', 'punct')]

>> Bigrams: 
[[�,  ]]

>> Trigrams: 
[]

>> Noun Phrases are: 
[�]

>> Named Entities are: 
[]


============================ Sentence 153 =============================

�    White PaperCustomer Service Solutions Natural language understanding6 This dialog flexibility is controlled by rules designed into prompts themselves  so the system can respond and guide callers rather than dictate to them. 


>> Tokens are: 
[�,    , White, PaperCustomer, Service, Solutions, Natural, language, understanding6, dialog, flexibility, controlled, rules, designed, prompts,  , system, respond, guide, callers, dictate, .] 

>> PoS Tags are: 
[('�', 'PROPN'), ('   ', 'SPACE'), ('White', 'PROPN'), ('PaperCustomer', 'PROPN'), ('Service', 'PROPN'), ('Solutions', 'PROPN'), ('Natural', 'PROPN'), ('language', 'NOUN'), ('understanding6', 'NOUN'), ('dialog', 'NOUN'), ('flexibility', 'NOUN'), ('controlled', 'VERB'), ('rules', 'NOUN'), ('designed', 'VERB'), ('prompts', 'NOUN'), (' ', 'SPACE'), ('system', 'NOUN'), ('respond', 'VERB'), ('guide', 'VERB'), ('callers', 'NOUN'), ('dictate', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('�', 'nmod'), ('   ', 'nummod'), ('White', 'compound'), ('PaperCustomer', 'compound'), ('Service', 'compound'), ('Solutions', 'compound'), ('Natural', 'compound'), ('language', 'compound'), ('understanding6', 'ROOT'), ('dialog', 'compound'), ('flexibility', 'nsubjpass'), ('controlled', 'relcl'), ('rules', 'pobj'), ('designed', 'acl'), ('prompts', 'pobj'), (' ', 'punct'), ('system', 'nsubj'), ('respond', 'advcl'), ('guide', 'conj'), ('callers', 'dobj'), ('dictate', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[�,    ], [   , White], [White, PaperCustomer], [PaperCustomer, Service], [Service, Solutions], [Solutions, Natural], [Natural, language], [language, understanding6], [understanding6, dialog], [dialog, flexibility], [flexibility, controlled], [controlled, rules], [rules, designed], [designed, prompts], [prompts,  ], [ , system], [system, respond], [respond, guide], [guide, callers], [callers, dictate], [dictate, .]]

>> Trigrams: 
[[�,    , White], [   , White, PaperCustomer], [White, PaperCustomer, Service], [PaperCustomer, Service, Solutions], [Service, Solutions, Natural], [Solutions, Natural, language], [Natural, language, understanding6], [language, understanding6, dialog], [understanding6, dialog, flexibility], [dialog, flexibility, controlled], [flexibility, controlled, rules], [controlled, rules, designed], [rules, designed, prompts], [designed, prompts,  ], [prompts,  , system], [ , system, respond], [system, respond, guide], [respond, guide, callers], [guide, callers, dictate], [callers, dictate, .]]

>> Noun Phrases are: 
[�    White PaperCustomer Service Solutions Natural language understanding6, This dialog flexibility, rules, prompts, themselves, the system, callers, them]

>> Named Entities are: 
[]


============================ Sentence 154 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 155 =============================

Perhaps the defining characteristic of a natural language experience is  engaging callers with intuitive and direct conversations. 


>> Tokens are: 
[defining, characteristic, natural, language, experience,  , engaging, callers, intuitive, direct, conversations, .] 

>> PoS Tags are: 
[('defining', 'VERB'), ('characteristic', 'NOUN'), ('natural', 'ADJ'), ('language', 'NOUN'), ('experience', 'NOUN'), (' ', 'SPACE'), ('engaging', 'VERB'), ('callers', 'NOUN'), ('intuitive', 'ADJ'), ('direct', 'ADJ'), ('conversations', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('defining', 'amod'), ('characteristic', 'nsubj'), ('natural', 'amod'), ('language', 'compound'), ('experience', 'pobj'), (' ', 'attr'), ('engaging', 'acl'), ('callers', 'dobj'), ('intuitive', 'amod'), ('direct', 'conj'), ('conversations', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[defining, characteristic], [characteristic, natural], [natural, language], [language, experience], [experience,  ], [ , engaging], [engaging, callers], [callers, intuitive], [intuitive, direct], [direct, conversations], [conversations, .]]

>> Trigrams: 
[[defining, characteristic, natural], [characteristic, natural, language], [natural, language, experience], [language, experience,  ], [experience,  , engaging], [ , engaging, callers], [engaging, callers, intuitive], [callers, intuitive, direct], [intuitive, direct, conversations], [direct, conversations, .]]

>> Noun Phrases are: 
[Perhaps the defining characteristic, a natural language experience, callers, intuitive and direct conversations]

>> Named Entities are: 
[]


============================ Sentence 156 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 157 =============================

Conclusion 


>> Tokens are: 
[Conclusion] 

>> PoS Tags are: 
[('Conclusion', 'NOUN')] 

>> Dependency Tags are: 
[('Conclusion', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[Conclusion]

>> Named Entities are: 
[]


============================ Sentence 158 =============================

In challenging economic conditions, the importance of cost-savings can not  be underestimated. 


>> Tokens are: 
[challenging, economic, conditions, ,, importance, cost, -, savings,  , underestimated, .] 

>> PoS Tags are: 
[('challenging', 'VERB'), ('economic', 'ADJ'), ('conditions', 'NOUN'), (',', 'PUNCT'), ('importance', 'NOUN'), ('cost', 'NOUN'), ('-', 'PUNCT'), ('savings', 'NOUN'), (' ', 'SPACE'), ('underestimated', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('challenging', 'amod'), ('economic', 'amod'), ('conditions', 'pobj'), (',', 'punct'), ('importance', 'nsubjpass'), ('cost', 'compound'), ('-', 'punct'), ('savings', 'pobj'), (' ', 'nsubjpass'), ('underestimated', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[challenging, economic], [economic, conditions], [conditions, ,], [,, importance], [importance, cost], [cost, -], [-, savings], [savings,  ], [ , underestimated], [underestimated, .]]

>> Trigrams: 
[[challenging, economic, conditions], [economic, conditions, ,], [conditions, ,, importance], [,, importance, cost], [importance, cost, -], [cost, -, savings], [-, savings,  ], [savings,  , underestimated], [ , underestimated, .]]

>> Noun Phrases are: 
[challenging economic conditions, the importance, cost-savings]

>> Named Entities are: 
[]


============================ Sentence 159 =============================

By applying effective natural language techniques to a  speech-enabled self-service IVR system, automation rates will increase lead- ing directly to lower costs. 


>> Tokens are: 
[applying, effective, natural, language, techniques,  , speech, -, enabled, self, -, service, IVR, system, ,, automation, rates, increase, lead-, ing, directly, lower, costs, .] 

>> PoS Tags are: 
[('applying', 'VERB'), ('effective', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), ('techniques', 'NOUN'), (' ', 'SPACE'), ('speech', 'NOUN'), ('-', 'PUNCT'), ('enabled', 'VERB'), ('self', 'NOUN'), ('-', 'PUNCT'), ('service', 'NOUN'), ('IVR', 'PROPN'), ('system', 'NOUN'), (',', 'PUNCT'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('increase', 'VERB'), ('lead-', 'PROPN'), ('ing', 'NOUN'), ('directly', 'ADV'), ('lower', 'ADJ'), ('costs', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('applying', 'pcomp'), ('effective', 'amod'), ('natural', 'amod'), ('language', 'compound'), ('techniques', 'dobj'), (' ', 'nmod'), ('speech', 'npadvmod'), ('-', 'punct'), ('enabled', 'amod'), ('self', 'compound'), ('-', 'punct'), ('service', 'compound'), ('IVR', 'compound'), ('system', 'pobj'), (',', 'punct'), ('automation', 'compound'), ('rates', 'nsubj'), ('increase', 'ROOT'), ('lead-', 'compound'), ('ing', 'dobj'), ('directly', 'advmod'), ('lower', 'amod'), ('costs', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[applying, effective], [effective, natural], [natural, language], [language, techniques], [techniques,  ], [ , speech], [speech, -], [-, enabled], [enabled, self], [self, -], [-, service], [service, IVR], [IVR, system], [system, ,], [,, automation], [automation, rates], [rates, increase], [increase, lead-], [lead-, ing], [ing, directly], [directly, lower], [lower, costs], [costs, .]]

>> Trigrams: 
[[applying, effective, natural], [effective, natural, language], [natural, language, techniques], [language, techniques,  ], [techniques,  , speech], [ , speech, -], [speech, -, enabled], [-, enabled, self], [enabled, self, -], [self, -, service], [-, service, IVR], [service, IVR, system], [IVR, system, ,], [system, ,, automation], [,, automation, rates], [automation, rates, increase], [rates, increase, lead-], [increase, lead-, ing], [lead-, ing, directly], [ing, directly, lower], [directly, lower, costs], [lower, costs, .]]

>> Noun Phrases are: 
[effective natural language techniques, a  speech-enabled self-service IVR system, automation rates, lead- ing, lower costs]

>> Named Entities are: 
[('IVR', 'ORG')]


============================ Sentence 160 =============================

This paper has shown that different approaches to  natural language can be applied throughout the caller’s interaction to achieve  these improved automation rates. 


>> Tokens are: 
[paper, shown, different, approaches,  , natural, language, applied, caller, interaction, achieve,  , improved, automation, rates, .] 

>> PoS Tags are: 
[('paper', 'NOUN'), ('shown', 'VERB'), ('different', 'ADJ'), ('approaches', 'NOUN'), (' ', 'SPACE'), ('natural', 'ADJ'), ('language', 'NOUN'), ('applied', 'VERB'), ('caller', 'NOUN'), ('interaction', 'NOUN'), ('achieve', 'VERB'), (' ', 'SPACE'), ('improved', 'VERB'), ('automation', 'NOUN'), ('rates', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('paper', 'nsubj'), ('shown', 'ROOT'), ('different', 'amod'), ('approaches', 'nsubjpass'), (' ', 'nmod'), ('natural', 'amod'), ('language', 'pobj'), ('applied', 'ccomp'), ('caller', 'poss'), ('interaction', 'pobj'), ('achieve', 'advcl'), (' ', 'dobj'), ('improved', 'amod'), ('automation', 'compound'), ('rates', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[paper, shown], [shown, different], [different, approaches], [approaches,  ], [ , natural], [natural, language], [language, applied], [applied, caller], [caller, interaction], [interaction, achieve], [achieve,  ], [ , improved], [improved, automation], [automation, rates], [rates, .]]

>> Trigrams: 
[[paper, shown, different], [shown, different, approaches], [different, approaches,  ], [approaches,  , natural], [ , natural, language], [natural, language, applied], [language, applied, caller], [applied, caller, interaction], [caller, interaction, achieve], [interaction, achieve,  ], [achieve,  , improved], [ , improved, automation], [improved, automation, rates], [automation, rates, .]]

>> Noun Phrases are: 
[This paper, different approaches,  natural language, the caller’s interaction, these improved automation rates]

>> Named Entities are: 
[]


============================ Sentence 161 =============================

The three complementary natural language  approaches of increasing the recognition accuracy within and around  grammars, allowing callers to give open-ended responses, and interacting  with adaptive dialogs all lead to more efficient and appealing calls. 


>> Tokens are: 
[complementary, natural, language,  , approaches, increasing, recognition, accuracy,  , grammars, ,, allowing, callers, open, -, ended, responses, ,, interacting,  , adaptive, dialogs, lead, efficient, appealing, calls, .] 

>> PoS Tags are: 
[('complementary', 'ADJ'), ('natural', 'ADJ'), ('language', 'NOUN'), (' ', 'SPACE'), ('approaches', 'NOUN'), ('increasing', 'VERB'), ('recognition', 'NOUN'), ('accuracy', 'NOUN'), (' ', 'SPACE'), ('grammars', 'NOUN'), (',', 'PUNCT'), ('allowing', 'VERB'), ('callers', 'NOUN'), ('open', 'ADJ'), ('-', 'PUNCT'), ('ended', 'ADJ'), ('responses', 'NOUN'), (',', 'PUNCT'), ('interacting', 'VERB'), (' ', 'SPACE'), ('adaptive', 'NOUN'), ('dialogs', 'NOUN'), ('lead', 'VERB'), ('efficient', 'ADJ'), ('appealing', 'ADJ'), ('calls', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('complementary', 'amod'), ('natural', 'amod'), ('language', 'compound'), (' ', 'compound'), ('approaches', 'nsubj'), ('increasing', 'pcomp'), ('recognition', 'compound'), ('accuracy', 'dobj'), (' ', 'conj'), ('grammars', 'ROOT'), (',', 'punct'), ('allowing', 'advcl'), ('callers', 'nsubj'), ('open', 'advmod'), ('-', 'punct'), ('ended', 'amod'), ('responses', 'dobj'), (',', 'punct'), ('interacting', 'conj'), (' ', 'dobj'), ('adaptive', 'compound'), ('dialogs', 'pobj'), ('lead', 'ccomp'), ('efficient', 'pobj'), ('appealing', 'conj'), ('calls', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[complementary, natural], [natural, language], [language,  ], [ , approaches], [approaches, increasing], [increasing, recognition], [recognition, accuracy], [accuracy,  ], [ , grammars], [grammars, ,], [,, allowing], [allowing, callers], [callers, open], [open, -], [-, ended], [ended, responses], [responses, ,], [,, interacting], [interacting,  ], [ , adaptive], [adaptive, dialogs], [dialogs, lead], [lead, efficient], [efficient, appealing], [appealing, calls], [calls, .]]

>> Trigrams: 
[[complementary, natural, language], [natural, language,  ], [language,  , approaches], [ , approaches, increasing], [approaches, increasing, recognition], [increasing, recognition, accuracy], [recognition, accuracy,  ], [accuracy,  , grammars], [ , grammars, ,], [grammars, ,, allowing], [,, allowing, callers], [allowing, callers, open], [callers, open, -], [open, -, ended], [-, ended, responses], [ended, responses, ,], [responses, ,, interacting], [,, interacting,  ], [interacting,  , adaptive], [ , adaptive, dialogs], [adaptive, dialogs, lead], [dialogs, lead, efficient], [lead, efficient, appealing], [efficient, appealing, calls], [appealing, calls, .]]

>> Noun Phrases are: 
[The three complementary natural language  approaches, the recognition accuracy, callers, open-ended responses, adaptive dialogs, calls]

>> Named Entities are: 
[('three', 'CARDINAL')]


============================ Sentence 162 =============================

  


>> Tokens are: 
[ ] 

>> PoS Tags are: 
[(' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]


============================ Sentence 163 =============================

Copyright © 2015 Nuance Communications, Inc. 


>> Tokens are: 
[Copyright, ©, 2015, Nuance, Communications, ,, Inc.] 

>> PoS Tags are: 
[('Copyright', 'NOUN'), ('©', 'NOUN'), ('2015', 'NUM'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('Inc.', 'PROPN')] 

>> Dependency Tags are: 
[('Copyright', 'nmod'), ('©', 'nmod'), ('2015', 'nummod'), ('Nuance', 'compound'), ('Communications', 'ROOT'), (',', 'punct'), ('Inc.', 'appos')]

>> Bigrams: 
[[Copyright, ©], [©, 2015], [2015, Nuance], [Nuance, Communications], [Communications, ,], [,, Inc.]]

>> Trigrams: 
[[Copyright, ©, 2015], [©, 2015, Nuance], [2015, Nuance, Communications], [Nuance, Communications, ,], [Communications, ,, Inc.]]

>> Noun Phrases are: 
[Copyright © 2015 Nuance Communications, Inc.]

>> Named Entities are: 
[('2015', 'DATE'), ('Nuance Communications, Inc.', 'ORG')]


============================ Sentence 164 =============================

All rights reserved. 


>> Tokens are: 
[rights, reserved, .] 

>> PoS Tags are: 
[('rights', 'NOUN'), ('reserved', 'VERB'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('rights', 'nsubj'), ('reserved', 'ROOT'), ('.', 'punct')]

>> Bigrams: 
[[rights, reserved], [reserved, .]]

>> Trigrams: 
[[rights, reserved, .]]

>> Noun Phrases are: 
[All rights]

>> Named Entities are: 
[]


============================ Sentence 165 =============================

Nuance, and the Nuance logo, are trademarks and/or  registered trademarks, of Nuance Communications, Inc. or its affiliates in the United States and/or other countries. 


>> Tokens are: 
[Nuance, ,, Nuance, logo, ,, trademarks, and/or,  , registered, trademarks, ,, Nuance, Communications, ,, Inc., affiliates, United, States, and/or, countries, .] 

>> PoS Tags are: 
[('Nuance', 'PROPN'), (',', 'PUNCT'), ('Nuance', 'PROPN'), ('logo', 'NOUN'), (',', 'PUNCT'), ('trademarks', 'NOUN'), ('and/or', 'CCONJ'), (' ', 'SPACE'), ('registered', 'VERB'), ('trademarks', 'NOUN'), (',', 'PUNCT'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('Inc.', 'PROPN'), ('affiliates', 'NOUN'), ('United', 'PROPN'), ('States', 'PROPN'), ('and/or', 'CCONJ'), ('countries', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Nuance', 'nsubj'), (',', 'punct'), ('Nuance', 'compound'), ('logo', 'conj'), (',', 'punct'), ('trademarks', 'attr'), ('and/or', 'cc'), (' ', 'nmod'), ('registered', 'amod'), ('trademarks', 'conj'), (',', 'punct'), ('Nuance', 'compound'), ('Communications', 'pobj'), (',', 'punct'), ('Inc.', 'conj'), ('affiliates', 'conj'), ('United', 'compound'), ('States', 'pobj'), ('and/or', 'cc'), ('countries', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[Nuance, ,], [,, Nuance], [Nuance, logo], [logo, ,], [,, trademarks], [trademarks, and/or], [and/or,  ], [ , registered], [registered, trademarks], [trademarks, ,], [,, Nuance], [Nuance, Communications], [Communications, ,], [,, Inc.], [Inc., affiliates], [affiliates, United], [United, States], [States, and/or], [and/or, countries], [countries, .]]

>> Trigrams: 
[[Nuance, ,, Nuance], [,, Nuance, logo], [Nuance, logo, ,], [logo, ,, trademarks], [,, trademarks, and/or], [trademarks, and/or,  ], [and/or,  , registered], [ , registered, trademarks], [registered, trademarks, ,], [trademarks, ,, Nuance], [,, Nuance, Communications], [Nuance, Communications, ,], [Communications, ,, Inc.], [,, Inc., affiliates], [Inc., affiliates, United], [affiliates, United, States], [United, States, and/or], [States, and/or, countries], [and/or, countries, .]]

>> Noun Phrases are: 
[Nuance, the Nuance logo, trademarks,  registered trademarks, Nuance Communications, Inc., its affiliates, the United States, other countries]

>> Named Entities are: 
[('Nuance', 'NORP'), ('Nuance Communications, Inc.', 'ORG'), ('United States', 'GPE')]


============================ Sentence 166 =============================

All other  brand and product names are trademarks or registered trademarks of their respective companies. 


>> Tokens are: 
[ , brand, product, names, trademarks, registered, trademarks, respective, companies, .] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('brand', 'NOUN'), ('product', 'NOUN'), ('names', 'NOUN'), ('trademarks', 'NOUN'), ('registered', 'VERB'), ('trademarks', 'NOUN'), ('respective', 'ADJ'), ('companies', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('brand', 'nmod'), ('product', 'conj'), ('names', 'nsubj'), ('trademarks', 'attr'), ('registered', 'amod'), ('trademarks', 'conj'), ('respective', 'amod'), ('companies', 'pobj'), ('.', 'punct')]

>> Bigrams: 
[[ , brand], [brand, product], [product, names], [names, trademarks], [trademarks, registered], [registered, trademarks], [trademarks, respective], [respective, companies], [companies, .]]

>> Trigrams: 
[[ , brand, product], [brand, product, names], [product, names, trademarks], [names, trademarks, registered], [trademarks, registered, trademarks], [registered, trademarks, respective], [trademarks, respective, companies], [respective, companies, .]]

>> Noun Phrases are: 
[All other  brand and product names, trademarks, registered trademarks, their respective companies]

>> Named Entities are: 
[]


============================ Sentence 167 =============================

  NUAN–CS–385–01–WP, Feb 17 2015  About Nuance Communications, Inc. 


>> Tokens are: 
[  , NUAN, –, CS–385–01, –, WP, ,, Feb, 17, 2015,  , Nuance, Communications, ,, Inc.] 

>> PoS Tags are: 
[('  ', 'SPACE'), ('NUAN', 'PROPN'), ('–', 'PUNCT'), ('CS–385–01', 'ADP'), ('–', 'PUNCT'), ('WP', 'PROPN'), (',', 'PUNCT'), ('Feb', 'PROPN'), ('17', 'NUM'), ('2015', 'NUM'), (' ', 'SPACE'), ('Nuance', 'PROPN'), ('Communications', 'PROPN'), (',', 'PUNCT'), ('Inc.', 'PROPN')] 

>> Dependency Tags are: 
[('  ', 'poss'), ('NUAN', 'ROOT'), ('–', 'punct'), ('CS–385–01', 'appos'), ('–', 'punct'), ('WP', 'npadvmod'), (',', 'punct'), ('Feb', 'appos'), ('17', 'nummod'), ('2015', 'nummod'), (' ', 'nummod'), ('Nuance', 'compound'), ('Communications', 'pobj'), (',', 'punct'), ('Inc.', 'appos')]

>> Bigrams: 
[[  , NUAN], [NUAN, –], [–, CS–385–01], [CS–385–01, –], [–, WP], [WP, ,], [,, Feb], [Feb, 17], [17, 2015], [2015,  ], [ , Nuance], [Nuance, Communications], [Communications, ,], [,, Inc.]]

>> Trigrams: 
[[  , NUAN, –], [NUAN, –, CS–385–01], [–, CS–385–01, –], [CS–385–01, –, WP], [–, WP, ,], [WP, ,, Feb], [,, Feb, 17], [Feb, 17, 2015], [17, 2015,  ], [2015,  , Nuance], [ , Nuance, Communications], [Nuance, Communications, ,], [Communications, ,, Inc.]]

>> Noun Phrases are: 
[  NUAN, Feb, Nuance Communications, Inc.]

>> Named Entities are: 
[('Feb 17 2015', 'DATE'), ('About Nuance Communications,', 'ORG')]


============================ Sentence 168 =============================

Nuance Communications is reinventing the relationship between people and technology. 


>> Tokens are: 
[Nuance, Communications, reinventing, relationship, people, technology, .] 

>> PoS Tags are: 
[('Nuance', 'PROPN'), ('Communications', 'PROPN'), ('reinventing', 'VERB'), ('relationship', 'NOUN'), ('people', 'NOUN'), ('technology', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('Nuance', 'compound'), ('Communications', 'nsubj'), ('reinventing', 'ROOT'), ('relationship', 'dobj'), ('people', 'pobj'), ('technology', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[Nuance, Communications], [Communications, reinventing], [reinventing, relationship], [relationship, people], [people, technology], [technology, .]]

>> Trigrams: 
[[Nuance, Communications, reinventing], [Communications, reinventing, relationship], [reinventing, relationship, people], [relationship, people, technology], [people, technology, .]]

>> Noun Phrases are: 
[Nuance Communications, the relationship, people, technology]

>> Named Entities are: 
[('Nuance Communications', 'ORG')]


============================ Sentence 169 =============================

Through its voice and  language offerings, the company is creating a more human conversation with the many systems, devices, electronics,  apps and services around us. 


>> Tokens are: 
[voice,  , language, offerings, ,, company, creating, human, conversation, systems, ,, devices, ,, electronics, ,,  , apps, services, .] 

>> PoS Tags are: 
[('voice', 'NOUN'), (' ', 'SPACE'), ('language', 'NOUN'), ('offerings', 'NOUN'), (',', 'PUNCT'), ('company', 'NOUN'), ('creating', 'VERB'), ('human', 'ADJ'), ('conversation', 'NOUN'), ('systems', 'NOUN'), (',', 'PUNCT'), ('devices', 'NOUN'), (',', 'PUNCT'), ('electronics', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('apps', 'NOUN'), ('services', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('voice', 'pobj'), (' ', 'conj'), ('language', 'compound'), ('offerings', 'pobj'), (',', 'punct'), ('company', 'nsubj'), ('creating', 'ROOT'), ('human', 'amod'), ('conversation', 'dobj'), ('systems', 'pobj'), (',', 'punct'), ('devices', 'conj'), (',', 'punct'), ('electronics', 'conj'), (',', 'punct'), (' ', 'compound'), ('apps', 'conj'), ('services', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[voice,  ], [ , language], [language, offerings], [offerings, ,], [,, company], [company, creating], [creating, human], [human, conversation], [conversation, systems], [systems, ,], [,, devices], [devices, ,], [,, electronics], [electronics, ,], [,,  ], [ , apps], [apps, services], [services, .]]

>> Trigrams: 
[[voice,  , language], [ , language, offerings], [language, offerings, ,], [offerings, ,, company], [,, company, creating], [company, creating, human], [creating, human, conversation], [human, conversation, systems], [conversation, systems, ,], [systems, ,, devices], [,, devices, ,], [devices, ,, electronics], [,, electronics, ,], [electronics, ,,  ], [,,  , apps], [ , apps, services], [apps, services, .]]

>> Noun Phrases are: 
[its voice, language offerings, the company, a more human conversation, the many systems, devices, electronics,  apps, services, us]

>> Named Entities are: 
[]


============================ Sentence 170 =============================

Every day, millions of people and thousands of businesses experience Nuance through  intelligent systems that can listen, understand, learn and adapt to your life and your work. 


>> Tokens are: 
[day, ,, millions, people, thousands, businesses, experience, Nuance,  , intelligent, systems, listen, ,, understand, ,, learn, adapt, life, work, .] 

>> PoS Tags are: 
[('day', 'NOUN'), (',', 'PUNCT'), ('millions', 'NOUN'), ('people', 'NOUN'), ('thousands', 'NOUN'), ('businesses', 'NOUN'), ('experience', 'VERB'), ('Nuance', 'PROPN'), (' ', 'SPACE'), ('intelligent', 'ADJ'), ('systems', 'NOUN'), ('listen', 'VERB'), (',', 'PUNCT'), ('understand', 'VERB'), (',', 'PUNCT'), ('learn', 'VERB'), ('adapt', 'VERB'), ('life', 'NOUN'), ('work', 'NOUN'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('day', 'npadvmod'), (',', 'punct'), ('millions', 'nsubj'), ('people', 'pobj'), ('thousands', 'conj'), ('businesses', 'pobj'), ('experience', 'ROOT'), ('Nuance', 'dobj'), (' ', 'pobj'), ('intelligent', 'amod'), ('systems', 'pobj'), ('listen', 'relcl'), (',', 'punct'), ('understand', 'conj'), (',', 'punct'), ('learn', 'conj'), ('adapt', 'conj'), ('life', 'pobj'), ('work', 'conj'), ('.', 'punct')]

>> Bigrams: 
[[day, ,], [,, millions], [millions, people], [people, thousands], [thousands, businesses], [businesses, experience], [experience, Nuance], [Nuance,  ], [ , intelligent], [intelligent, systems], [systems, listen], [listen, ,], [,, understand], [understand, ,], [,, learn], [learn, adapt], [adapt, life], [life, work], [work, .]]

>> Trigrams: 
[[day, ,, millions], [,, millions, people], [millions, people, thousands], [people, thousands, businesses], [thousands, businesses, experience], [businesses, experience, Nuance], [experience, Nuance,  ], [Nuance,  , intelligent], [ , intelligent, systems], [intelligent, systems, listen], [systems, listen, ,], [listen, ,, understand], [,, understand, ,], [understand, ,, learn], [,, learn, adapt], [learn, adapt, life], [adapt, life, work], [life, work, .]]

>> Noun Phrases are: 
[millions, people, thousands, businesses, Nuance, intelligent systems, your life, your work]

>> Named Entities are: 
[('millions', 'CARDINAL'), ('thousands', 'CARDINAL')]


============================ Sentence 171 =============================

For more information, please  visit nuance.com. 


>> Tokens are: 
[information, ,,  , visit,  , nuance.com, .] 

>> PoS Tags are: 
[('information', 'NOUN'), (',', 'PUNCT'), (' ', 'SPACE'), ('visit', 'VERB'), ('\xa0', 'SPACE'), ('nuance.com', 'X'), ('.', 'PUNCT')] 

>> Dependency Tags are: 
[('information', 'pobj'), (',', 'punct'), (' ', 'nsubj'), ('visit', 'ROOT'), ('\xa0', 'compound'), ('nuance.com', 'dobj'), ('.', 'punct')]

>> Bigrams: 
[[information, ,], [,,  ], [ , visit], [visit,  ], [ , nuance.com], [nuance.com, .]]

>> Trigrams: 
[[information, ,,  ], [,,  , visit], [ , visit,  ], [visit,  , nuance.com], [ , nuance.com, .]]

>> Noun Phrases are: 
[more information]

>> Named Entities are: 
[]


============================ Sentence 172 =============================

 Nuance Adaptive Dialog Modules  are specialized building blocks used  to efficiently create intuitive speech- enabled dialogs that drive automation.   


>> Tokens are: 
[ , Nuance, Adaptive, Dialog, Modules,  , specialized, building, blocks,  , efficiently, create, intuitive, speech-, enabled, dialogs, drive, automation, .,  ] 

>> PoS Tags are: 
[(' ', 'SPACE'), ('Nuance', 'PROPN'), ('Adaptive', 'PROPN'), ('Dialog', 'PROPN'), ('Modules', 'PROPN'), (' ', 'SPACE'), ('specialized', 'ADJ'), ('building', 'NOUN'), ('blocks', 'NOUN'), (' ', 'SPACE'), ('efficiently', 'ADV'), ('create', 'VERB'), ('intuitive', 'ADJ'), ('speech-', 'NOUN'), ('enabled', 'VERB'), ('dialogs', 'NOUN'), ('drive', 'VERB'), ('automation', 'NOUN'), ('.', 'PUNCT'), (' ', 'SPACE')] 

>> Dependency Tags are: 
[(' ', 'nmod'), ('Nuance', 'compound'), ('Adaptive', 'compound'), ('Dialog', 'compound'), ('Modules', 'nsubj'), (' ', 'appos'), ('specialized', 'amod'), ('building', 'compound'), ('blocks', 'attr'), (' ', 'dobj'), ('efficiently', 'advmod'), ('create', 'xcomp'), ('intuitive', 'amod'), ('speech-', 'dobj'), ('enabled', 'conj'), ('dialogs', 'dobj'), ('drive', 'relcl'), ('automation', 'dobj'), ('.', 'punct'), (' ', 'attr')]

>> Bigrams: 
[[ , Nuance], [Nuance, Adaptive], [Adaptive, Dialog], [Dialog, Modules], [Modules,  ], [ , specialized], [specialized, building], [building, blocks], [blocks,  ], [ , efficiently], [efficiently, create], [create, intuitive], [intuitive, speech-], [speech-, enabled], [enabled, dialogs], [dialogs, drive], [drive, automation], [automation, .], [.,  ]]

>> Trigrams: 
[[ , Nuance, Adaptive], [Nuance, Adaptive, Dialog], [Adaptive, Dialog, Modules], [Dialog, Modules,  ], [Modules,  , specialized], [ , specialized, building], [specialized, building, blocks], [building, blocks,  ], [blocks,  , efficiently], [ , efficiently, create], [efficiently, create, intuitive], [create, intuitive, speech-], [intuitive, speech-, enabled], [speech-, enabled, dialogs], [enabled, dialogs, drive], [dialogs, drive, automation], [drive, automation, .], [automation, .,  ]]

>> Noun Phrases are: 
[ Nuance Adaptive Dialog Modules, specialized building blocks, intuitive speech-, dialogs, automation]

>> Named Entities are: 
[('Nuance Adaptive', 'ORG'), ('Modules', 'PERSON')]


============================ Sentence 173 =============================

http://www.nuance.com 


>> Tokens are: 
[http://www.nuance.com] 

>> PoS Tags are: 
[('http://www.nuance.com', 'X')] 

>> Dependency Tags are: 
[('http://www.nuance.com', 'ROOT')]

>> Bigrams: 
[]

>> Trigrams: 
[]

>> Noun Phrases are: 
[]

>> Named Entities are: 
[]
